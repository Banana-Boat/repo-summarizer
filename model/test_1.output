9728	An action that copies a page from a parent container to a parent container.
9729	State object that can be used to copy the element to the clipboard.
9730	An action that copies a resource from the project to the project root for the user.
9731	The context for ADE.
9732	The keys of modules that are defined in the data object.
9733	Data structure for creating elements.
9734	A column in the table header.
9735	The type of the column.
9736	Encodes and decodes data view parameters for use with a CmsDataView.
9737	The parameters for the CmsDataView.
9738	The result of the CmsDataView query.
9739	A complex widget that renders the data of a cms-object in the data view.
9740	A field that allows for a date to be set on a SolrInputDocument.
9741	A comparator for resources that use the date identifier.
9742	SessionProvider for CmsDav.
9743	A factory for the CmsDbContextFactory.
9744	A class that exposes the meta data for the cms export.
9745	The mode of import.
9746	A class that contains the information for the CmsDbProperties pane.
9747	A class used for the CmsDbRemovePubLocks navigation.
9748	Exception for CmsDbSql.
9749	A class that encapsulates the data needed to export the statically selected resources.
9750	A map of decorations for a given locale and name.
9751	A wrapper object for a CmsDecorationDefinition.
9752	Default action handler for the cms.
9753	The default complex widget for the cms.
9754	The default locale handler.
9755	Default password generator implementation.
9756	The default permission handler.
9757	Default profiling handler implementation.
9758	A default publish group helper.
9759	An interface for resource validation that knows how a resource is considered to be excluded.
9760	Default tool handler.
9761	The mode how to create a sub-sitemap.
9762	The action for invalid relations.
9763	A configuration object for the visibility handler.
9764	A content change handler that periodically updates the content in a given locale after a specified time.
9765	A dialog that removes the broken links.
9766	A bean that represents a delete resource in a VFS.
9767	Dialog that checks if site with given id should be deleted, and shows message if it should.
9768	A widget that allows to select files in a dependent content editor.
9769	A container page builder for detail only pages.
9770	A class that generates SitemapUrlBean instances for sitemap pages that have duplicate links found in a given folder.
9771	Status.
9772	This class registers an MBean for diagnostic requests.
9773	A class that holds the set of options for the CmsDialog.
9774	A single option used in a CmsDialogOptions.
9775	Wrapper for CmsDialogOptions and CmsListInfoBean.
9776	The mode of the diff view.
9777	Controls whether the edit and delete buttons of a CmsDirectEntityDefinition are displayed.
9778	A class containing the information for the direct edit resource.
9779	A direct publish action for a resource.
9780	The display type of a given size.
9781	The dependency type.
9782	Generic document factory for generic resources.
9783	The CmsDocumentHtml implementation.
9784	The implementation of CmsDocumentMsOfficeOLE2.
9785	The implementation of CmsDocumentMsOfficeOOXML.
9786	The document factory for open office documents.
9787	The I_CmsExtractionResult document factory for a given vfs resource containing Adobe PDF data.
9788	A document factory for plain text documents.
9789	The CmsDocumentRtf factory.
9790	The class for all CmsDocumentXmlPages.
9791	A widget used for the gallery of a download.
9792	Mode of login.
9793	Entity that holds the cache data for a resourceOU.
9794	A buffer that collects logs with duplicates and removes them from the main log buffer.
9795	An entry in the duplicate removing log buffer.
9796	Handles adding fields to a content for dynamic category.
9797	Wrapper for a CmsDynamicFunctionFormat.
9798	Handler for adding buttons to empty state.
9799	The empty handler interface for the group.
9800	Handler for 'add' and 'delete' buttons in CmsEditableGroupButtons.
9801	A row of a group in the editable form.
9802	A dialog action for the edit code.
9803	The action for edit content.
9804	Data transfer object for the CmsEditHandler.
9805	Login view for edit user settings.
9806	Handler for content change events.
9807	The default implementation of the CmsEditorCssHandler.
9808	The editor selector class which is responsible for selecting the correct editor for a given resource.
9809	Editor state extension.
9810	Element that represents the edit provider action.
9811	A dialog to edit a resource type.
9812	Compares elements using a locale.
9813	Encapsulates information about the lock for a CmsElement.
9814	A configuration for the element settings component.
9815	Encapsulates the information about the element view.
9816	The preference for element viewing.
9817	A select widget for the element view in the dropdown.
9818	Helper class for element with attributes parsing.
9819	Helper class for element with sub-elements configuration.
9820	A simple UI implementation that uses a CmsDialog2D to display embedded dialogs.
9821	The type of change.
9822	The class that represents a HTML entity that can be rendered in a JSP page.
9823	A dialog that shows an error message.
9824	An event that is published to the UI.
9825	Wrapper for a handler that only renders the JSON using a CmsObject.
9826	A value cache that can be retrieved and modified whenever a change is made.
9827	Context for the CmsExplorerDialog.
9828	An event listener to flushes the cache for all registered CmsExplorerTypeAccess objects.
9829	Represents the name of the export for the current site.
9830	A widget that exports a point of a given URI.
9831	Data structure to be passed to the CmsExtendedCollector.
9832	A site selector for CMS.
9833	Site selector option.
9834	A bean that holds information about an external link that may be used for a request to the AAD server.
9835	Validates all links in the CmsObject for external links.
9836	This thread validates the links of external links using the CmsLinkValidator annotation.
9837	This thread validates the links of external links using the CmsLinkValidator annotation.
9838	Configuration for the CmsExternalWidget.
9839	A text extractor for HTML.
9840	A text extractor for Microsoft Office OLE version 2.
9841	A text extractor for Microsoft Office OOXML.
9842	A text extractor that uses the OpenOffice language.
9843	A text extractor for the PDF language.
9844	A text extractor for RTF.
9845	A fake Window implementation with no window context.
9846	A wrapper for the favorites data store.
9847	A dialog for the favorites in the editor.
9848	The type of entry.
9849	A class that exposes the CmsFileHistory functionality as a HTML app.
9850	A class that holds the state of a file system and its walkers.
9851	Dialog window with a runnable for cleaning the cache.
9852	A formatter bean for the FlexContent.
9853	This class is used for servlets that dispatch to a file from the VFS.
9854	A simple tab bar that allows to flush the cache of the data.
9855	Interface that defines a dialog to the user to close the flush cache.
9856	A dialog that allows the user to forgot a password.
9857	A formatter bean parser.
9858	A collection of CmsFormatterConfig instances.
9859	The action for the edit dialog.
9860	Encapsulates the gallery action info for the current user.
9861	A container info item.
9862	A dialog action for gallery types.
9863	Mode for disabling gallery types.
9864	A wrapper for the gallery tree builder with a filter.
9865	A dialog with gallery optimization options.
9866	A dialog action for optimizing the gallery types.
9867	The parameter for sorting the gallery elements.
9868	A tree entry that represents a gallery.
9869	Represents the gallery content type.
9870	A filter bean that can be used for filtering based on a geospatial data set.
9871	A class for storing configuration parameters.
9872	The type of mapping configuration entry.
9873	A container bean for a group.
9874	The result of the CmsGroupContainerSaveTask.
9875	Parameters for editing a group.
9876	Property types supported by the table.
9877	State object for the dropdown dropdown.
9878	A utility class for logging to the Google Guava Logging Framework.
9879	The History driver.
9880	The History driver.
9881	The History driver.
9882	The History driver.
9883	A history extension that exposes the IgniteHistory API.
9884	Util for retrieving historical file lists.
9885	HistoryState in the CmsHistory.
9886	A class representing a version of the CmsHistory.
9887	A type of offline online version.
9888	An option to use for HTML converter in configuration files.
9889	A class to extract text from HTML pages.
9890	Style for the HTML ICON_BUTTON.
9891	Factory for HTML tag remove implementations.
9892	A widget used for uploading files via HTTP.
9893	A class to hold the information for the i18n service.
9894	Bean that represents a popup icon.
9895	Dialog window with a runnable for cleaning the CmsImageCache.
9896	A scheduled job that removes expired images from the RFS.
9897	Holder for cache related resources.
9898	A wrapper for a table for loading and filtering images.
9899	A widget for a gallery.
9900	The class that implements the automatic import folder logic.
9901	This class implements the I_CmsImportResourceDataReader interface for resource imports.
9902	Thread that imports a user into the current UU.
9903	Category of links that can be parsable.
9904	A data structure for a single relation.
9905	Static messages used for lockout and lockout-report for the current user with the given locale.
9906	Thread that updates the index report in a thread-safe way.
9907	Indexing thread for resources.
9908	This class handles the indexing of VFS resources.
9909	Utility methods for working with inheritance groups.
9910	A reference to a CmsResource that is defined by a locale.
9911	Parser class for CmsInheritanceReference instances.
9912	Exception thrown when the configuration of the CMS is invalid.
9913	A data source that reads from a VFS file. The content type is used as the content type for the file.
9914	Plaintext widget for the cms input.
9915	A validator for invalid links in internal links table.
9916	Internal resource controls.
9917	Handler for invisible admin tools.
9918	Helper class for CmsJaxbConfig.
9919	This class manages the JLAN thread management.
9920	A bean that represents a job in the scheduled job queue.
9921	A view for editing a scheduled job.
9922	A class that holds the data for all jobs in the context of a job.
9923	Property used for table properties.
9924	Implementation of the CmsJsonDocumentFolder interface, for internal use only.
9925	A container page for a handler.
9926	A folder handler that renders the JSON, based on a filter.
9927	A JSP handler for JSON.
9928	A list of handlers that can handle the JSON.
9929	Wrapper for a CmsJsonHandler online caching.
9930	A resource that can be parsed as a JSON.
9931	A handler for content that is defined as a XML file.
9932	A part of a JSON string that can be represented as a list of JSON parts.
9933	A container page that renders the JSON into a JavaScript object.
9934	The result of the CmsJsonRequest processor.
9935	A JSPBrowserFrameExtension implementation that uses the CmsJSPLibrary.
9936	A null value info class.
9937	A device selector that uses the CmsJspConfiguration.
9938	A device selector that uses a desktop-mobile mobile device.
9939	A simple UAgentInfo wrapper for a CmsJspDeviceSelector.
9940	The context class for the navigation.
9941	The visibility options.
9942	A bean that exposes a list of CmsResource instances, as a CmsObject.
9943	Represents a template context bean, for a given resource and template name.
9944	A state that can be used to add parameters to the tag.
9945	A HTML tag that provides direct access to the content value map.
9946	A tag that represents a device selector.
9947	A tool to display HTML for a CmsJspTag.
9948	Implementation of the ABSOLUTE_PATH tag that enables list elements.
9949	Include TEI.
9950	This class represents a JSON array in the HTML tag.
9951	This class represents a JSON object that can be parsed into a JSON String.
9952	Json part of a HTML tag.
9953	A map tag in the HTML page.
9954	The type of navigation.
9955	Represents a request parameter for an HTML tag.
9956	This is the HTML tag for the thumbnail of a given PDF file.
9957	The action that is performed on a property, either to read or to query the property value.
9958	UDT Tag for use in users.
9959	The language preference class.
9960	A legacy app implementation.
9961	The modes that can be used for marshals and decrypting responses.
9962	The type of trigger that should be used for this configuration.
9963	A link bean that represents a link target for a link-to-resource mapping.
9964	A widget for links in a gallery.
9965	Information about a link in a CmsUUID.
9966	A link to the locale variant for the current resource.
9967	A class that validates links in the navigation bar using a link validation component.
9968	A class that exposes a component for links that require external validation.
9969	The option class for creating new elements in a list.
9970	Icon to use for lock management.
9971	State icon.
9972	A list bundle that is backed by a list of resources.
9973	The status of the request.
9974	Bean for links to a given locale.
9975	A dialog with a list of locale links to choose from.
9976	A generic lock action.
9977	Record for CmsLockAction.
9978	Lock change types.
9979	The lock state.
9980	Used to obtain information about lock report in the CMS.
9981	Util for logging4j.
9982	A table that represents a log channel for a logger.
9983	A dialog to download log files.
9984	Generator that generates ZIP files for the dialog.
9985	A log entry for a cms user.
9986	A provider for configuration properties for the CmsLogFile.
9987	A log file view that shows the currently shown file.
9988	A logical checkbox group.
9989	A target information for the login request.
9990	Encapsulates the context of the login.
9991	Helper class for user agreements.
9992	A selector for the login OU.
9993	A simple password input field that allows for login passwords to be used in a form with dynamic validation.
9994	Parameters for the login UI.
9995	A report of the current state of a LogFile.
9996	Lucene index writer implementation for SolrClient.
9997	A many to one map implementation.
9998	AttributeType.
9999	A widget that allows to update the maximum height when the widget content exceeds the maximum height.
10000	State class for the maximum height of the component that is used for rendering the dropdowns.
10001	Type of cache.
10002	The visibility for a single resource in a dialog context.
10003	A class that holds a list of sorted properties.
10004	The type of the bundle.
10005	Enum of various table properties.
10006	A container for the messages that can be used for the current locale.
10007	A class that represents a CmsMessageToBundleIndex instance.
10008	A meta mapping for a given element and order.
10009	A class that encapsulates the content types for the OpenCms email interface.
10010	A class containing the information about the model pages and the group of the parent model pages.
10011	A configuration object for a model page.
10012	Config for model pages without a resource.
10013	Information about a model resource.
10014	The mode how to export the given module.
10015	A widget for a module dependency.
10016	Exports module data, as defined by the module import export repository.
10017	A class for importing a module from a ZIP file.
10018	Form for importing a module.
10019	A simple module log implementation that logs to a file.
10020	Actions to be performed during module logging.
10021	Haskell for module resource select field.
10022	A row of a module registry, one of the modules: module group, title, number of resource types, and version.
10023	A table for CMS modules.
10024	A version number for a module.
10025	The mode how XML should be written to the stream.
10026	Move resource type dialog.
10027	Move user to OU.
10028	A callback for creating new resource.
10029	The class that implements the basic e-mail logic for a cms newsletter.
10030	A content that can be used for newsletter attachments.
10031	A collection of candidate CmsContentNotifications, one for each responsible that receives a notification and sends them one by one for each responsible that receives a
10032	A class that represents a cause for a given resource.
10033	Handler for offline management.
10034	Handler for OK and Cancel events.
10035	Handler for the CmsOnlyAdminTool.
10036	An extension of OpenGallery that generates a javascript window with the name galleryType.
10037	A dialog to display a well-known Ignite resource for the dialog box.
10038	Handler for the OUs of the CMS.
10039	Table with CMS OU.
10040	Tree implementation for CmsOuTree.
10041	A query that paging through a collection of resources.
10042	A wrapper for a value that has a weight.
10043	A notification that is generated when a user tries to change their password in a system.
10044	State object for a field in a CmsPasswordField.
10045	The path for the request to a file or folder.
10046	A class that encapsulates a set of include/exclude paths and their normalizations.
10047	A class that supports adding new elements and getting values for a path.
10048	A value for a path component.
10049	The class for links to the pdf.
10050	A wrapper for a thumbnail link in the PDF.
10051	The mPDF user agent.
10052	A simple action that checks if a user has permission to access the resource in a dialog.
10053	Encapsulates the state of a user whether it has view or write permissions.
10054	Handler for changes in the permission set.
10055	A login authorization handler that does not require a login token.
10056	A token that is stored in the cookie store.
10057	This class defines a point on the map.
10058	The class that provides basic and configuration information for the dialog.
10059	Data class for a preference.
10060	The action that is performed on the dialog with the preferences.
10061	Response class for prepare edit request.
10062	A principal bean that encapsulates information about a user.
10063	Principal type.
10064	The type of widget.
10065	A select extension for the principal select.
10066	Principal table implementation based on CmsPrincipalFilter.
10067	A resource comparator for date-based sorting.
10068	A resource comparator for use with priority info, for filtering out the title of a resource.
10069	The type of the CmsProject.
10070	A Thread that deletes the given CmsProject.
10071	The action for the CmsProjectDialog.
10072	The project driver for the CmsPublishFramework.
10073	The preference class for project metadata.
10074	A small table that lists all the projects.
10075	Element that represents a CmsProperties action.
10076	A change event that is emitted by a PropertyChangeListener.
10077	A bean that compares two property values, one for each version.
10078	A difference between two historical resource beans.
10079	A simple resource bundle for property values.
10080	A property table that shows one or more properties for a given table.
10081	Enum of columns that can be used in the join.
10082	A group of publish resources.
10083	Mode.
10084	A publish job that is enqueued for resources.
10085	A publish job that finished when the publish queue is started.
10086	A publish job that is running in a separate thread.
10087	A token that identifies the publish list.
10088	Verifies the publish list is well formed.
10089	The mode how to remove the publish list from the registry.
10090	A notification that is generated by the cms.html.
10091	A class that represents a queue of sub-components and bread crumbs for a given state.
10092	A class for working with publish relations.
10093	A resource map based on a predicate.
10094	A info class for a publish resource.
10095	Type of publish resource.
10096	A table that has been marked as queued for execution.
10097	Configuration used for the QuickLaunchEditor.
10098	Wrapper for a radio select widget.
10099	A action that reindexes a given resource in the dialog.
10100	A validator for deleting CmsRelations.
10101	A validator for CMS relations.
10102	A bean that holds a list of resources that are eligible for addition to a relation.
10103	The behavior for a copy operation.
10104	A class containing information about a relation validator in the CMS.
10105	A shell that uses the Microsoft Remote.
10106	A shell client that uses a remote shell.
10107	CmsRemoteShellConfiguration is a class that provides configuration for the CmsRemoteShell.
10108	A remote shell server that exports remote objects to the shell provider.
10109	A row of a CmsRemovableForm that supports the remove button.
10110	The status of a given element.
10111	A fallback for the CmsRemoveInnerName strategy.
10112	A scheduled job that removes the old database log entries from the cache.
10113	This thread reports the error state of the atomic remove publocks thread. The lock manager will attempt to remove the temp files (i.e
10114	A bean that holds the list info for rename a resource.
10115	A class containing the info about a replace file.
10116	Cms replace module info.
10117	A report overlay that shows the report content in the top left corner of the window.
10118	A report update item.
10119	A report widget that displays a report of a given type in a report manager.
10120	A repository for CMS objects.
10121	Provides access to info beans for resource categories.
10122	The class that builds the context menu for a list of resource.
10123	Helper class for handling resource data JSON objects.
10124	Wrapper class for JSPs for adding/removing extensions for a resource.
10125	Wrapper for content type resources that have extensions.
10126	Wrapper for XML pages with extension for a resource.
10127	Defines the mode for the icons.
10128	Implementation of a template that can be found in a path.
10129	Options for the CmsResourceSelectDialog.
10130	The container and contents of the dialog for a resource select pane.
10131	Lists all available tab ids for a resource status.
10132	A column in the table.
10133	A class to translate resource names according to the expressions set in opencms-vfs.xml.
10134	Origin options.
10135	The visibility of a type.
10136	The type of menu to be added.
10137	The enumeration of possible types for the AddMenu option.
10138	Configuration for functions of a resource type.
10139	The class that is used to represent a redirect for a given resource type.
10140	A class that provides functionality for adjusting the size of the image based on the configured downscale settings, and the content of the image.
10141	The implementation of CmsResourceTypeLocaleIndependentXmlContent that uses the configured locale for new content.
10142	A macro formatter for resource types that use the @ResourceLoader annotation to format resources that are referenced by loaders.
10143	A result for the CmsResourceTypeStat command.
10144	A list of stat results for a given resource type.
10145	Provides a view to read statistics for a specific type.
10146	A specialization for unknown resource types.
10147	This class defines the default implementation of CmsResourceType when there is no such folder.
10148	A class representing a single resource project state.
10149	Wrapper for CmsResource.
10150	An action to be performed on delete of a resource in a workplace container.
10151	The match type.
10152	A field value wrapper for a field input to a CmsRestrictionBean.
10153	The type of the field value.
10154	Provides access to the selected facets in the solr result list.
10155	Wrapper for CmsReturnLinkInfo.
10156	The status returned for a CmsLinkInfo.Link.
10157	The class that handles the lifetime of a rewrite alias.
10158	A filter for an alias in a given site.
10159	The result of a rewrite.
10160	Validation reply from the validation process.
10161	Controls for a role table.
10162	The result of a save operation.
10163	State class for the CmsScrollPositionCss.
10164	A basic analyzer that uses SolrData to search for SolrData documents.
10165	Class for querying SolrConfiguration instances that do not require additional configuration parameters to be passed to SolrConfigurationProvider.doSearchConfiguration(String, List
10166	Query item used for search configuration.
10167	A sort option that can be used in the CmsSearchResponse to choose a sort value that has to be sent to Solr.
10168	A class that encapsulates a set of SolrResource instances for a CmsSearch.
10169	Class for querying SolrData for the CmsSearchStateDidYouMean result.
10170	A geo filter used for search results.
10171	A class that provides access to pagination state.
10172	A sort state based on the configuration.
10173	A dialog with a verification code field.
10174	A class containing information about the second factor for the current user.
10175	A class containing basic setup info for CmsSecondFactor.
10176	A dialog to export a set of files using a secure export mechanism.
10177	A widget used for select combo box in dropdowns.
10178	A dialog to select a resource type.
10179	A notification that uses the CmsSendPasswordPolicy to send passwords.
10180	A date bean based on a serial date series.
10181	Factory method for serial date beans.
10182	A date bean that provides serial support for monthly date-series.
10183	A date-bean that represents a series of monthly weeks, where the first date is the first date of the series. The second date is
10184	A date bean that represents a single date in a serial time series.
10185	A date-bean that works on a serial-date-series that uses a simple weekday-first algorithm.
10186	A working days bean for serial dates.
10187	A date-bean that documents a yearly time series, where each event appears as a year. The time part of the series is ignored
10188	A date-bean that documents a yearly-weekday time series, where each day is a day. The time part of the date
10189	A date service that returns boolean status for a given serial date series.
10190	Util for serial date fields.
10191	A value for a serial date.
10192	Form for importing a module (eg. Cormode, Netflix) into a CmsServerModuleImportPanel.
10193	A mode used in the CmsServletContainerSettings.
10194	A simple app in the shell.
10195	A simple shell script layout that automatically renders the script with a CmsObject.
10196	The type of the dialog.
10197	Shows resource table in the JSP environment.
10198	Buttons for showing version resources.
10199	A locale handler for the single tree resource.
10200	Localization mode.
10201	Class representing a domain grouping, that can be used to add domains to the encrypting configuration.
10202	A class that holds information about the site domain that will be used in LetsEncryptConfigConverter.encryptSiteDomain(java.util.
10203	The element of the sitemap action.
10204	The class containing the information about the attribute values, definitions and the information of each attribute in a sitemap.
10205	The configuration of the attribute editors.
10206	The class that holds the category data for the sitemap.
10207	Types of change.
10208	The mode of using the editor.
10209	A class containing basic info about the site in the sitemap.
10210	A class containing information about how a new entry should be merged back into the parent sitemap.
10211	The class that calculates the insert position and changed navigation entries in the result of the CmsSitemapNavPosProvider.
10212	Cache for the recent entries in the session.
10213	A data provider that exposes the data for a tree.
10214	Defines the redirect mode for the current request.
10215	The class for site preference.
10216	A site selection dialog with a select box.
10217	Site selector option.
10218	Type of selector.
10219	Builder for site selector options.
10220	Property types supported for table properties.
10221	Solr link processor for links.
10222	Editor settings for the source editor.
10223	A form to display a source of a file in the search index.
10224	Solr based dictionary indexer for spellcheck queries.
10225	A clause that represents a boolean expression.
10226	A simple Ignite console app implementation for the CmsSqlConsoleAppProvider.
10227	A result from the CmsSqlConsole script.
10228	A general visibility check implementation.
10229	The preference class for the start folder of a VFS-based content model.
10230	The preference used for starting a view in the XML content.
10231	Helper class for building a CmsStatement from a set of query fragments.
10232	A action that performs the steal lock.
10233	A report widget that uses a report update service to send report output to a given stream.
10234	A report that shows a report of a String buffer.
10235	The Ignite subscription driver.
10236	The Ignite subscription driver.
10237	A class containing information about a sub-sitemap.
10238	A synchronized update set used to remove and add elements.
10239	A class that holds information about the synchronize-list files on the server FS.
10240	A Thread that synchronizeizes the content of a CmsSynchronizeConfiguration.
10241	A Thread that synchronizeizes the content of a CmsSynchronizeConfiguration.
10242	The mode of user session.
10243	Encapsulates the info about a tab in the HTML output.
10244	Export point driver for the CmsTempFolderExportPointProvider.
10245	Finds all available templates in the current context.
10246	This action is executed when the user wants to map a template to a specific target resource.
10247	Implementation of the ContentRewriter interface that reads the contents of a template mapping file from the configured module parameters. The result is a string containing
10248	Helper class to find all the registered template plugins, ordered by page group, and de-duplicated.
10249	Plaintext widget for textareas.
10250	A diff of two history resources as String.
10251	Implementation of the CmsTextDiffPanel interface.
10252	Thread local stack implementation.
10253	Handler for profiling of thread-safety statistics tree.
10254	Data object that holds the data for the CmsTinyMCE script.
10255	A group of admin tools.
10256	A layout for the CmsToolApp.
10257	A tree node that represents a tree node of a tree tree representation of a JSON data object.
10258	Holds the state of opened tree entries.
10259	Two factor authentication check type.
10260	A rule that compares a name against a given pattern.
10261	Context class for the user checking.
10262	Enum for how we order CmsType instances in a table.
10263	ErrorCode.
10264	Ugc data item for a field.
10265	Exception for theCmsUgcConstants.ErrorCode.
10266	A thread-safe queue used for session based users to manage UGC sessions.
10267	Security utility methods for the session security mechanism.
10268	A dialog with a link between elements.
10269	The action for the unlink locale variant.
10270	A action that unlocks a resource.
10271	Element that represents the action of the upload.
10272	A simple extension for the CmsUploadArea.
10273	State object for the upload area dialog.
10274	A bean that encapsulates the information needed to upload a file to a VFS.
10275	A button that permits uploading a file to a remote server.
10276	Upload state.
10277	Builder for CmsUploadRestrictionInfo.
10278	The class that handles the actual upload.
10279	The type of upload.
10280	Watches the upload timeout for a file.
10281	A table that shows the warnings for upload requests.
10282	A class which represents a mapping entry for a CmsUrlNameMapping.
10283	A class that exposes the data for the user data navigation.
10284	App panel that shows the user data report in the JSON format that the user wants to access.
10285	A dialog with the information about the user data of a resource that can be accessed via a component of a data source that can be accessed via
10286	The form layout for the user data input.
10287	Configuration for the CmsUserDataRequest email.
10288	The type of CmsUserDataRequest.
10289	The handler for user data resources.
10290	The standard CmsUser driver.
10291	The standard CmsUser driver.
10292	The user driver.
10293	The standard CmsUser driver.
10294	Parameters for user edit mechanism.
10295	User export settings class.
10296	A dialog with user information.
10297	A publish list entry that holds a user publish list entry for a resource.
10298	Search key types.
10299	The sort keys.
10300	The style of searching results.
10301	The variant of the upload.
10302	A bean that represents a user setting in the XML.
10303	Property that can be used to define how table values are used.
10304	A custom field serializer for CmsUUID.
10305	Builder for option group.
10306	Enum to identify various types of properties that can be used in the CmsVaadinUtils.cookieStore property.
10307	Validation query for a given value using a server-side validator.
10308	The result of a validation process, for a CmsModel.
10309	A bean for a variation.
10310	Vertical menu implementation.
10311	NameAndLocale.
10312	A set of parameters for the VFS resource bundles.
10313	A wrapper for a VFS resource source.
10314	A bean that holds information about a VFS resource, either a file or a directory.
10315	A bean for a file stored in a VFS.
10316	Flag for mage-check.
10317	Represents a visit entry for a given structure and user.
10318	A wait handle that can be used to wait for threads to exit.
10319	Exception for the widget that caused the error.
10320	Collects widget information for content elements.
10321	Information about widget.
10322	A window close extension that exposes a CmsWindowCloseListener.
10323	A simple implementation of a CmsWorkflow.
10324	A single action for a CmsWorkflow.
10325	Parameters for the CmsWorkflowAction.
10326	A preference used for mode changes in the content object.
10327	A simple server widget for use in a servlet or javax.servlet.JspWebApplication.
10328	A block of user information that may be available in a workplace workplace context.
10329	A class that implements all necessary security blocks for user data.
10330	A view contained in a VFS.
10331	The types of XML nodes that can be parsed.
10332	The sequence type.
10333	The CmsXmlContentEditor for use in content objects.
10334	Comparison for CmsXmlContentElements.
10335	The types of content-property.
10336	The visibility of a property in a CmsXmlContentProperty.
10337	The XML node type.
10338	Enumeration of JSON properties.
10339	The location of the root node of a content type.
10340	A tab in the CmsXmlContent.
10341	The node type of the content tree.
10342	The types of XML nodes.
10343	The interface for the page editors.
10344	A cache for storing XML Sitemap.
10345	The default report messages implementation.
10346	Enumeration of supported font openCms types.
10347	An action that executes a client-side ADE.
10348	An authorization handler that uses the CmsObject to authenticate users.
10349	Provider for the app button and folder buttons.
10350	Interface for categories used in the CmsAppBundle.
10351	Interface for app settings.
10352	Interface for a select option.
10353	Interface used to provide additional attributes to the option.
10354	A login action that performs a login with a CmsObject.
10355	An interface for apps that can be cached.
10356	Interface representing the category of the select.
10357	Interface that defines the options for the categorized select.
10358	Factory for categoriesized select data.
10359	The interface for the CmisRenditionProvider.
10360	Interface for the CodeMirrorClientConfiguration.
10361	The interface for the complex widget in the CMS.
10362	A configuration object that may be used as a root configuration object for a configuration property.
10363	A handler for configuration parameters.
10364	RPC interface used by the I_CmsContextMenuServer to display context menu.
10365	Interface for RPCs that handle context menu open events.
10366	A JSON provider that exports the core data as a JSON string, and a message bundle.
10367	The interface for links renderer.
10368	The direction of time restriction.
10369	The time unit that can be used for date restrictions.
10370	A factory for the OpenCms database info factory.
10371	The context type.
10372	Interface for the handler of the dialog.
10373	Interface for data extensions that can be used for CMS attachments.
10374	Handler for actions when the cms is editable.
10375	RPC interface for I_CmsEditableGroupButtonsServer.
10376	A row of a group that can be contained in a button bar.
10377	The interface for the I_CmsEditorCssHandler.
10378	An interface for selecting the correct editor for a given resource.
10379	Context for editing a property.
10380	Handler for edit property values.
10381	Interface which can be implemented by filter methods.
10382	Interface for the category of a folder in a given locale.
10383	Interface for form data.
10384	Configuration mode for gallery.
10385	The unique id for a gallery tab.
10386	Enumeration of parameters for the gallery image.
10387	Sort parameters.
10388	Represents a node of the gallery tree.
10389	A configuration interface for dynamic gallery widgets.
10390	Cache for global configuration.
10391	RPC interface for the CmsGwtDialogServer.
10392	Interface that defines the classes for the icons in the CMS.
10393	Interface that defines the visibility of a given menu item.
10394	A model representing a historical resource in a CmsHistory.
10395	Interface for HTML code conversion implementations.
10396	An extension of I_CmsIndexWriter that allows for bulk updates, optimizing, and deleting documents.
10397	The interface for handling JSON/YAML responses.
10398	Interface for the JSON renderer.
10399	A selector for JSP devices.
10400	Interface that defines the methods for adding new elements to a list.
10401	I_CmsLocaleCompareContext provides access to locale comparison context for the current locale.
10402	The I18nLocaleHandler is the standard I18nHandler interface in the Servlet.
10403	Rpc interface for the I_CmsLoginTarget
10404	An interface for resolving macro values in a string.
10405	The interface for the Newsletter API.
10406	The interface for newsletter content.
10407	A recipient of a newsletter message.
10408	An evaluator for security mechanisms.
10409	The security levels for the password evaluation.
10410	The interface for handling permission checking.
10411	Class to describe what lock check should be taken.
10412	The interface for the dialog service for uploading a resource.
10413	Async API for the I_CmsPostUploadDialogService.
10414	A provider for dynamic properties.
10415	RPC interface used by the I_CmsPropertyServer to request the properties of a resource.
10416	A publish resource formatter.
10417	A shell in a remote environment.
10418	Interface to define how import reports are shown.
10419	A report thread that writes results to a report log.
10420	A request handler that handles a OpenCms request.
10421	Attribute used for storing CmsResource instances.
10422	A simple extension of ResourceBundle that is used by the CmsObject.
10423	I_CmsResourceInit. - A method to be implemented by all the I_CmsResourceInit implementations. - A CmsObject is provided by
10424	The list of formatters supported by this resource.
10425	Interface for the I_CmsSearchConfigurationDidYouMean functionality.
10426	The sort order configuration option value.
10427	An item of a facet query.
10428	A sort configuration that can be used to sort the results.
10429	A sort option that can be used in the solr-configuration.
10430	Common interface for all I_CmsSearchController implementations.
10431	Interface for I_CmsSearchController.
10432	The interface for facet field controls.
10433	I_CmsSearchControllerFacetQuery for facet queries.
10434	I_CmsSearchControllerFacetRange.
10435	The interface used by facet fields for a search.
10436	Interface used by facet ranges.
10437	A geo filter controller.
10438	A controller for pagination.
10439	A sort controller for the JSPs.
10440	Interface for the actions that the user can see to see if a search state has been met in the I_CmsSearchStateDidYouMean
10441	A geo filter for the CmsObject.
10442	Interface for pagination support.
10443	I_CmsSearchStateSorting.
10444	A service interface for date series retrieval.
10445	An interface used to get the dates of a given series asynchronously.
10446	The type of date value.
10447	The end type of the value.
10448	The month configuration.
10449	Pattern type.
10450	The day of the month in the month.
10451	Interface used by the shell and the CmsObject.
10452	A simple context menu entry.
10453	RPC interface used by the sitemap server.
10454	Solr post processor for resource handling.
10455	A handler for the I_CmsStartStopHandler interface.
10456	The handler for static export.
10457	An interface for supporting file modification in the VFS and the VFS.
10458	Interface for text encryption.
10459	I_CmsToggleTable.
10460	Interface for unlocking content with a specific locale.
10461	The interface for the upload service.
10462	The mode for the user data domain.
10463	A action that is performed on theWorkplace window.
10464	A wysiwyg app interface.
10465	Interface for the I_CmsXmlConfigurationWithUpdateHandler interface.
10466	Container for content nodes that are contained in an XML document.
10467	The display type.
10468	Json renderer settings.
10469	The mapping type.
10470	The interface for locations stored in an XML content tree.
10471	The search content type.
10472	The interface for the content value locations.
10473	JSONML is a transform that converts an XML document to JSON, and delegates to the original Java JSONML implementation.
10474	A Null object is an object that is always null.
10475	A request info object that contains the information needed to build the servlet request.
10476	A format that is used for printf output.
10477	Implementation of the XMLTokener interface.
10478	Time keeping the time of the master.
10479	Default ID managers.
10480	An identifier manager is used to determine if an identifier is allowed to be assigned to a TinkerGraph instance.
10481	This class is used to represent a number stored in a byte array.
10482	Base class for objects.
10483	This class allows to toggle a bit in a byte array, specifying a position in the byte array to toggle the bit value.
10484	Data element that is stored in a CellManifest.
10485	Types of cache entries.
10486	Intel clock state.
10487	LZX state.
10488	This class implements a ChmReader.
10489	ChmPmgi header.
10490	Factory class for chunking.
10491	A Compact64bitInt is an object that is stored in a compact 64bit unsigned integer format.
10492	Class to store and deserialize a CompactID.
10493	Base class for data element types.
10494	This class encapsulates the hash of a data element.
10495	The type of data element.
10496	This class is used to represent an object holding some data about to be stored. It contains a list of the objects that can be serialized and
10497	This class is used to unserialize an EightBytesOfData structure from binary format.
10498	This class is used to deserialize a list of four bytes. The byte array to be deserialized is given by the byte array start index. The
10499	The interface for serialization and deserialization of properties.
10500	The class to store and deserialize UUIDs.
10501	This class implements the builder for the LeafNodeObject.
10502	This class represents a list of no data.
10503	ObjectGroupData represents the data for a group of objects.
10504	This class contains the common serialization logic for ObjectGroup instances.
10505	Group metadata class for ObjectGroup.
10506	Class to hold ObjectGroupMetadataDeclarations.
10507	Data declaration for ObjectGroupObjectBLOB.
10508	Represents a reference to an object group data BLOB.
10509	This class is used to unserialize a ObjectSpaceObjectPropSet.
10510	This class represents a serialized object space object stream of context ID s.
10511	ObjectSpaceObjectStreamOfOIDs is a wrapper class that serializes a list of OIDs into a byte[].
10512	This class represents a serialized object stream of OSIDs.
10513	A class to hold a single element of a byte array.
10514	POIXMLExtractor is an interface that can extract metadata from an OOXMLDocument. It is not supported by POI.
10515	This class is used to represent a list of PropertyID objects.
10516	This class is used to serialize a List of Byte List to a byte[].
10517	This class prints out an array of byte[].
10518	This class prints four bytes of length followed by data in a table. The first four bytes are the first four bytes of the length followed by
10519	Types of request.
10520	Class to hold reference to manifest object group elements.
10521	Declare the root of a manifest.
10522	RTFParser.
10523	The signature object is an immutable data structure that can be used to serialize and deserialize elements.
10524	Storage index cell mapping implementation used for generating storage index cells.
10525	Storage index revision mapping implementation used for mapping from storage index to revision number of elements.
10526	StorageManifestRootDeclare.
10527	This class is used to identify the storage manifest schema in the cluster.
10528	The 16-bit version of the constructor.
10529	The class that represents the end of a stream object header.
10530	A class that defines the start of a 16bit stream object header.
10531	A class that represents the start of a stream object header.
10532	Stream object type headers.
10533	This class is a wrapper class for the SXSLFPowerPointExtractor. It extracts the slides embedded in SSLF and vice vers
10534	This class provides a decorator to extract sXWPFWord parts from a SXWPFDocument.
10535	This class is used to deserialize a list of TwoBytes into a List<Byte>
10536	Constructs a Distribution that copies values from one source to another.
10537	An interface representing the distribution of values.
10538	A test class for Graph construction.
10539	A Distribution that is initialized with a fixed (approximate) number of values.
10540	Implementation of the Distribution interface that uses PowerLaw. This class implements a simple "fast" algorithm, which is similar to the Distribution interface
10541	A SizableIterable is an Iterable that is capable of being iterated over and can be used to determine the size of the Iterable.
10542	A MultiIterator that aborts all the iterators if the check passes.
10543	An interface to be implemented by objects that can be attached to a host.
10544	A step that can be started with a barrier.
10545	Customizes the bindings of a GremlinScriptEngine based on the current scope.
10546	Factory interface for creating ByteBuffers.
10547	Column.
10548	A comparison operator.
10549	The ComputerResult interface provides the ability to access the Graph and ResultGraph of a Computer.
10550	Contains describes the set of elements that contain a given key.
10551	Gremlin plugin implementation.
10552	The various data types that can be used in the Hive protocol.
10553	Date/Time utilities.
10554	Customize the bindings to be added to a GremlinScriptEngine, given the current scope and bindings to be applied to a G
10555	The default GraphComputerResult. This is the last computed Graph result. It is used when no other Computer implementations need to know the
10556	The default implementation of ImportCustomizer.
10557	Direction represents the direction of a node.
10558	A VertexMap step.
10559	EmptyGraph.EmptyGraphFeatures provides access to the graph and edge features.
10560	A serializer for enums.
10561	DefaultEventQueue is the default EventQueue implementation. It has support of MutationListener and addEvent.
10562	EventStrategy.detachment (Used to determine when a node should be detached from its persistent storage).
10563	The EventQueue is a base interface for all the EventStrategy implementations.
10564	TransactionalEventQueue.
10565	Interface for extension of Graph.Features.
10566	Defines the visibility of a key.
10567	A variable interface defines a set of variables available in the Graph.
10568	Graph binary reader.
10569	An interface for things that need to be operating on a GraphComputer.
10570	Factory for Graph objects.
10571	Legal.
10572	This class is responsible for migrating data from one graph to another. The implementation of this class is similar to the standard GraphMigrator class
10573	Graph operations.
10574	A GraphSONMapper implementation that is able to marshal and unmarshal the data to a GraphSON string.
10575	Enum to represent the version of GraphSON module.
10576	GremlinPlugin is a plugin that can be used to customize the GremlinEngine.
10577	The result of the execution of GremlinScriptChecker.execute(Map) operation.
10578	Script engine that uses Gremlin's traversal engine.
10579	GremlinScriptEngineFactory is a factory for the GremlinScriptEngineManager.
10580	A Comparator for Gremlin numbers.
10581	Types.
10582	This strategy assumes that the incidents are adjacent to the other strategies. It can be used when we want to optimize the incidents
10583	Enumeration of types of indexing step.
10584	Strategy that optimizes the contents of an existing traversal tree in the case of a single pass.
10585	Registry of registered serializers.
10586	A keyed property that is associated with an element and can be absent or not.
10587	Customizer for LazyBindings.
10588	An extension of Mapper.
10589	The stage that a reduce can execute.
10590	MatchPredicateStrategy is a strategy that matches the provided source code.
10591	Merge options.
10592	Base class for merge vertices.
10593	Messenger is a service interface for sending messages to vertices.
10594	Operator enum for the Filter.
10595	A strategy that expands the number of arguments to a function.
10596	Order.
10597	Casting helper for ParseTreeContext.
10598	Processor strategy that optimizes path elements using the given strategy.
10599	Picks out what to do with the Result.
10600	Pop: Pop an instance from the stack.
10601	This enum defines the possible types of property values.
10602	Enumeration of the modes where data can be written.
10603	A Connection that uses a remote endpoint.
10604	Scope.
10605	Service types
10606	A SingleTypeSerializer is a serializer for single-type data.
10607	Builder for construction of a StarGraph.
10608	A helper class for converting from StarGraphGraphSON to GraphNABJ.
10609	A step in a subgraph.
10610	An enum encapsulating an enumeration of various types.
10611	Represents the Text of a Query.
10612	Defines the behaviour at the end of a transaction.
10613	Defines the kind of read-write failover hook.
10614	Status of a transaction.
10615	A Translate operator that can be used to translate a traversal byte code to a new representation.
10616	Enum parser for traversal options.
10617	Interface to the Metrics interface for a traversal.
10618	Enum of requirement Traverser implementations can schedule a traversal to be performed.
10619	A generic action that accepts three arguments.
10620	TypeInfo describes the different types of data formats that can be used for data-structures.
10621	A VertexProperty is an element that owns it and provides an Iterator of properties that can be used to categorize it.
10622	A class to hold information about an animation
10623	This class represents a binary tag data blob which can be either written to a file or from a binary format to disk.
10624	A chunk of a byte array that has been written to a document.
10625	A chunk group is a chunk group of parsed chunks. Each chunk is added to the group and sent to the parser.
10626	A chunk header in the format of V4.V5. This is a list of separators and trailers.
10627	A chunk header in V6.
10628	An RTF that is compressed.
10629	A store that stores compressed data in compressed format. The compressed data is stored in the block-based format and is expected to be in the
10630	The class for DIB.
10631	A directory chunk represents a directory node that contains one or more directory entries.
10632	DocInfoListContainer.
10633	The slide size.
10634	A record with no children. The record type is just a dummy record type and is just a position sensitive record with no children.
10635	A dummy record with no children.
10636	The EMF signature is used to emulate the picture data format for a given slideshow.
10637	The Environment class.
10638	ExControl represents an extended control record.
10639	The ExControlAtom is a simple Atom record that holds the information about the activeX control and its presentation slides.
10640	An ExHyperlinkAtom is a class that holds the properties of a hyperlink.
10641	The class that holds information about the MCI movie.
10642	The ExObjList is a list of hyperlinks.
10643	The class for the ExObjListAtom.
10644	The ExObjRefAtom class.
10645	The ExVideoContainer is the container for a video record. The record contains the information necessary to link to the external media server.
10646	Base class for a page of a formatted disk file, representing a series of grpprl's stored in a single byte array.
10647	The base class for FRD types.
10648	This class is the basic implementation of the HDGFDiagram class. It is used to provide some basic debugging info on the file
10649	This class implements the Visio compatible streaming LZW compression algorithm for HDG.
10650	Emf abort path.
10651	EmfArc.
10652	Arc to record
10653	EmfBeginPath.
10654	Emf Chord record implementation.
10655	EmfCloseFigure.
10656	Emf ellipse
10657	Emf end path
10658	Emf Line to record
10659	Emf Pie record.
10660	Emf PolyPolygon record.
10661	Emf rectangle record.
10662	Record that holds round rectangular records.
10663	EmfSetMoveToEx.
10664	Stroke path
10665	Emf Frame RGN record.
10666	Record to be used for stretch blt.
10667	EMF CREATE Brush Indirect record.
10668	Record that can be used for brushing point of view (dib) pattern
10669	Emf create pen record.
10670	EmfSetMiterLimit.
10671	EMF Create Palette record.
10672	EMF Resize Palette record.
10673	Intended mode to use for ICM mode.
10674	Set of palette entries
10675	The type of Brush.
10676	Data block for HemfPlusBrush.
10677	Gradient brush data.
10678	Data block for solid brush.
10679	The data for brushing textures
10680	EmfPlusDraw.EmfPlusDrawDriverString
10681	EmfPlusDraw.EmfPlusDrawImage
10682	EmfPlusDraw.EmfPlusDrawImagePoints.
10683	EmfPlusDraw.Path to generate WMF records for drawing.
10684	EmfPlusFillRects.
10685	EmfPlusFillRegion.
10686	Graphics version number.
10687	The EmfPlus Image Data Type.
10688	Mode for wrapping in Emf + MPEG.
10689	EmfPlus record implementation
10690	EMF + SET WAL record.
10691	The EmfPlusObjectType is used for the case of "string" objects that do not refer to a Federation object.
10692	This enum controls the type of path point.
10693	Line cap types.
10694	Line cap type.
10695	Line join options.
10696	Line style.
10697	Alignment of the pen.
10698	EmfSelectClipPath.
10699	This class helps to extract the contents of HMEF.
10700	The HPBFPart class is used for working with part of a HFile.
10701	The HSLFAutoShape class.
10702	Defines defined fonts for HSLFFontInfo.
10703	This class represents a list of HSLFTextParagraphs that are part of a HSLFNote. It contains the details for the
10704	The HSLFObjectData class contains the embedded data for HSLF.
10705	This class contains the data for the SoundRecord from the HSL file system.
10706	HSLFTextBox is a simple TextBox that shows the contents of a TextRun.
10707	The HSLFTitleMaster is the master of HSLF paragraphs for title pages.
10708	Binary raster operation types.
10709	Styles for brushinging the area of the current page.
10710	Record containing three Ellipse records.
10711	WMF frame region.
10712	WMF line to.
10713	Move to record.
10714	WMF POLY.
10715	WMF Polygon.
10716	WMF rectangle.
10717	WMF Rounds rectangle.
10718	WMF object.
10719	Set record pixel value
10720	Record that can be escaped.
10721	The usage of a color.
10722	WMF extension flood fill.
10723	WMF fill region.
10724	WMF Flood Fill.
10725	Invert region.
10726	WMF paint region.
10727	WMF Pat_BLt.
10728	The mode of determine if we should use poly filled (default is NONE).
10729	The mode of polarization for specifying whether high-percentile or low-percentile is used.
10730	WMF STORED BLT record.
10731	WMF font quality.
10732	Wmf output precision.
10733	GraphicsState implementation for HWMF.
10734	Options for using the @HWMFatchStyle annotation.
10735	Map mode for hive.
10736	WMF create brush indirect record.
10737	WMF delete object.
10738	WMF restore DC record.
10739	WMF save distribution record implementation.
10740	WMF Set Bk color record.
10741	Record type: WMF, BLOCK_SIZE, BLOCK_SIZE, ...
10742	WMFCBkMode.
10743	Set record layout
10744	Set record map mode.
10745	Set mapper flags.
10746	Set relabs record.
10747	Set ROP record.
10748	Record type for SET STALIGN_BLT mode.
10749	Palette realize information.
10750	WMF Resize Palette.
10751	WMF select palette record.
10752	Record type.
10753	Set alignment of text records.
10754	Extra record for setting text char.
10755	Set text color.
10756	Set text justification record.
10757	Implementation of HwmfText.WmfTextOut.
10758	WMF EXCLUDE_Clip_RECT.
10759	WMF INTERSECT Clip Rect.
10760	WMF Offset ClipRgn.
10761	WMF record for viewport org.
10762	WMF record with windowing offset.
10763	Extended windowing scale viewport extension.
10764	Extended windowing implementation for HwmfWindowing.WmfScaleWindowExt.
10765	WMF Windowing.ClipRegion.
10766	Windowing.WmfSetViewportExt.
10767	Windowing.WmfSetViewportOrg.
10768	Extended windowing record implementation.
10769	Windowing implementation for SETWINDOWORG.
10770	IndentProp is a property that can be used to indent text (level of indentation)
10771	Represents an interactive record of type 4802 (that is, has, and has a remote node, and is ready to be passed to
10772	The class that represents a JPEG image.
10773	The map format ID for the locale-specific locale-specific format.
10774	The main master for a Slide.
10775	Class of the message being parsed.
10776	Represents the MAPI-compressed, uncompressed RTF attribute.
10777	MasterTextPropAtom is a atom that represents a master text record.
10778	A chunk of a submission, one of which can be submitting a message to a particular node.
10779	Represents a movie
10780	Chunks for a NameID
10781	Note records are a sequence of Notes, each recorded with a single note. A note consists of a NotesAtom, a NotesVector, and
10782	Enum to represent the NoteType.
10783	OldTextPiece.
10784	This class represents a page of a pap2 file, with a formatted PAPX. This class assumes that the file is in a
10785	The interface for persist record interface.
10786	The class for storing PicCTs.
10787	Picture type.
10788	The PNG data class.
10789	A class that holds a set of child Streams that are pointers that are contained in a document.
10790	Factory for Pointers.
10791	This class is for compatibility with the old Pointer V5 class.
10792	A Polygon is defined by three vertices and a set of points. The polygon contains three vertices and a set of points. The polygon is defined
10793	A Record that is position dependent on a write out. This record allows us to keep track of where on the disk and what it's on
10794	Abstract base class for Records that need to be positioned dependent on a write out.
10795	This class provides a dump-script that can be used to dump PPT files into XML. The format of the PPT file is documented
10796	Base class for all PropertyNodes.
10797	Bit-wise comparison of two types of data
10798	Type 12 of hyperlinks.
10799	Represents a single record.
10800	Record type.
10801	A RevisionMarkAuthorTable represents a mark of an author's entries in a RevisionMap.
10802	HFPlaceholder12.
10803	SavedByTable.
10804	A Slide represents a sequence of Slide atoms. A SlideAtom represents a single cell in the table. It is a sequence of
10805	A class representing a SlideAtomLayout.
10806	Class to hold the set of SlideAtoms that are associated with a Text slide.
10807	Record type for SlidePersistAtom.
10808	The Sound class.
10809	A SoundCollection is a collection of SoundRecord objects.
10810	The SoundData records the data of a sound stream.
10811	A chunk of storage properties that can be written to a FileSystem.
10812	The class that holds the list of styles defined in the styles file.
10813	Represents the subdocument type.
10814	The class for Atoms that holds text in Bytes.
10815	The class for TextCharsAtom.
10816	A piece of a text stream.
10817	SpellInfo types for run.
10818	A class that represents an interactive info atom.
10819	A record placeholder that is not part of the record info file.
10820	A VBA Info Atom.
10821	Container for VBA info.
10822	VisioTextExtractor. Returns the textual contents of the Visio file.
10823	The signature for the WMF file
10824	This class is an extension of String to be used in comparisons to String in SQL.
10825	Enum of types of authentications supported by the Resource.Manager.
10826	Base class for XSSFFormulaEvaluator and XSSFCellEvaluator. Adds functionality for the evaluation and rich text evaluation.
10827	Body type.
10828	Order in which rows will be placed.
10829	Clear break values.
10830	This enum controls the break type.
10831	The CalculationChain represents a chain of formula references to a worksheet.
10832	Certificate embedding options for use with the CertificateTransform.
10833	The content type.
10834	This is the base class for Sheets that do not contain WSDL or EXIF statements. It is a specialized version of the standard XLSX
10835	Temporarily writes to a temp file, encrypted using a file handle that is created via TemporaryFile.write(java.io.InputStream
10836	Utilities for working with files.
10837	Line spacing rule.
10838	Represents list auto-number type.
10839	This class is meant to output a part of a package as a byte array. It is used to write part data to a byte array,
10840	This class lists all the packages in the OOXML format.
10841	Enum for controlling package access.
10842	The PackagePropertiesUnmarshaller.
10843	Enumeration of the alignments for a paragraph.
10844	Visitor for text nodes. Handles all text nodes of a shape.
10845	SharedStrings provides an interface to retrieve the contents of a SharedString Table.
10846	Interface for facets that require a signature to be included in the signature.
10847	The interface for the ServiceLoader interface for the SignaturePolicyService.
10848	Slide layout.
10849	Streaming sheet writer. Worksheet XML is written to a file using a writer factory to convert the stream to a sheet XML.
10850	Represents how the rows of a table are placed in a given alignment.
10851	Table row height rule.
10852	Enumeration of the types of table width.
10853	Enum for specifying how target method is called.
10854	Specifies the alignment of text in a Table.
10855	Defines the alignment alignment that can be used to align text in a Table.
10856	Enum to control how Text autofit is used.
10857	Cap of characters used in region texts.
10858	Direction of text being printed.
10859	Defines the alignment of a text font.
10860	Enum for how we handle horizontal text horizontally.
10861	Defines the vertical alignment alignment.
10862	Enum to define underline patterns.
10863	Vertical align.
10864	ODF factory implementation for the XDGF annotation.
10865	VisioDocument is a document containing XML data for XDGF.
10866	This class defines a standard XSLF color.
10867	The class that represents a diagram in an XSL-F file.
10868	Implementation of the XSLFExtractor interface.
10869	A table row that uses XSLF to parse its cells.
10870	Implementation of the XSLFTheme interface.
10871	The XSSFBReader class is responsible for reading the XSS FB data files.
10872	Builtin styles.
10873	Border side.
10874	The XSSF data format is used for parsing and parsing XSSF data.
10875	The XSSFEvenFooter is a footer that shows up in the XSS File.
10876	The XSSFEvenHeader class is used for header elements that do not come in a certain format. It is used to provide the text
10877	Export to XML
10878	The XSSFFirstFooter class shows the footer that is used for the first page of a web page. The footer contains the title of
10879	The XSSFFirstHeader class is used for header elements that do not come out of the sheet.
10880	The XSSFOddFooter is a footer that shows up in the table. The footer contains the following:
10881	The XSSFOddHeader class is used for header elements that do not come in a form that is not part of a standard SOAP 1
10882	This class provides a wrapper for the actual byte[] data for the XSSF Picture API.
10883	The XSSFWorkbookType indicates the type of workbook that is being used.
10884	The class containing the properties of the XML column for a table.
10885	Default run style for XWPF.
10886	The XWPFFooter is the footer of a package.
10887	The header of the wpf message
10888	Hyperlink for the XWPFRun.
10889	An interface for reading the contents of a ZIP file into an InputStream.
10890	Provides an enumeration of the following: path, entry, and an InputStream of the decompressed data that is read up at the current entry.
10891	Marshaller that marshalls a PackagePart into a zip file.
10892	Reasons for the close of a session.
10893	A basic interface for handling channel communications.
10894	The content type of the request.
10895	A standalone GremlinServer
10896	This class implements a basic http channelizer.
10897	A hook that triggers on startup and shuts down of a ZooKeeper server.
10898	OpProcessor is a function that accepts a RequestMessage and returns back a Consumer function that can be executed with the message.
10899	The content of the body that is returned by the request.
10900	Tag for the body of a request.
10901	Encapsulates the data about an error thrown during a servlet invocation.
10902	A class that holds information about a function.
10903	The interface for JSP container implementations for EL use.
10904	The base class for all JspFragment implementations.
10905	This interface defines the methods needed to render a JSP page.
10906	This is the core tag interface.
10907	This is the adapter for Tag interface.
10908	A class containing the data for a tag. Tags have their own implementation of this class.
10909	TagExtraInfo contains the information on scripting variables that will be used to validate the attributes of a Tag.
10910	Encapsulates the information about the tag, parsed from the tag file in the TagProcessor.
10911	Validates a JSP page for TagLibrary.
10912	A class to hold information about a variable in a Tag.
10913	This interface is used to handle the case where a Throwable is thrown while evaluating the BODY.
10914	Message indicating that a JSP validation failed.
10915	A class containing information about a variable in a scripting expression.
10916	The interface for the RetainedLifecycle API.
10917	Implementation of the lifecycle interface for RetainedLifecycle.
10918	Absolute path driver URL provider.
10919	Apollo Driver URL provider.
10920	JDBC batch execution unit.
10921	A StatementExecutor implementation that supports batched SQL statements.
10922	Implementation of URLProvider that uses classpath to fetch configuration content.
10923	JDBC context.
10924	A recorder for methods invocation.
10925	ShardingSphereDriverURLProvider. Interface that provides support for shardingSphere driver.
10926	Abstract base class for encoder implementations that do not check bounds.
10927	The object representation of a unique identifier.
10928	Fluent entry point for Accumulo.
10929	Authentication arguments for the AccumuloClient.Connection.
10930	A factory for accumulo client factories.
10931	Options for creating accumulo client using Java properties objects.
10932	Common options for SASL authentication.
10933	A simple formatter that returns the aggregation statistics.
10934	Levels of data returned in a request.
10935	Enum for controlling how data is read from the remote node.
10936	An interface for batched deletion of data from the scanner.
10937	An interface for supporting multiple scanning engines in parallel. A scanner supports scanning over a given set of ranges.
10938	An interface for Accumulo batch writer. It can be used to queue multiple mutations at a time, and will queue up a maximum of
10939	A BlockReader for use with BlockFile.readBlock()
10940	A class that encapsulates a DataBlock and a MetaBlock for writing data.
10941	Iterator that combiner rounds values from the source Map into a single value.
10942	Provides a summary of the performance of a BlockCache.
10943	A memory-bound queue that will grow until an element brings total size >= maxSize. From then on, only entries that are sorted larger
10944	The size of a class, in bytes, the alignment of the size is specified by align(int) or align(long) respectively.
10945	This class represents a single column in a table. It contains information about one column, family, qualifier, and visibility. It contains metadata about
10946	The node type of a column visibility expression.
10947	A compaction dispatcher is a service that can be used to dispatch compactions. It is used by Accumulo to determine what to do
10948	The interface for a ConditionalWriter.
10949	A ScanServerSelector that can be configured with configuration parameters.
10950	Enum describing connector info.
10951	General options for the plugin.
10952	Options for instantiating a class.
10953	An interface for constraint interfaces.
10954	An environment constraint defines the environment within which a constraint can be met.
10955	Constraint specifies the environment that the constraint belongs to.
10956	Factory interface for creating class loaders based on the given service environment.
10957	A Summarizer that counts the number of occurrences of a given key.
10958	Crypto environment interface.
10959	The scope of the CryptoEnvironment.
10960	An interface for CryptoServices.
10961	Factory interface for the CryptoService.
10962	A default configuration that is just a simple configuration object.
10963	Default Key Size constraint implementation.
10964	A configuration object that contains the lifetime of the token that the client should use for delegating requests.
10965	Serializer/Deserializer of DelegationTokenConfig.
10966	This class is used to create a delete summarizer. It can be used for both collecting and combining tasks.
10967	Enum describing the durability guarantees for tables and columns.
10968	This class implements a factory for a EntryLengthSummarizer. It can be used both as a collector and a combiner.
10969	FileEncrypter is an interface that allows the user to encrypt data using AES via AES.
10970	Options for FileOutputConfigurator.
10971	This limiter will only acquire permits at any point of time. The Guava RateLimiter does not guarantee that at least one query is available
10972	Heap Iterator is an Iterator that returns the smallest key/value pairs in the source. The heap is backed by a sorted set of key-
10973	An import configuration builder.
10974	Enumeration of the states in which a table is being created.
10975	Enum describing the supported features for this input.
10976	Scan options for file system scans.
10977	The instance id.
10978	Iterator utility.
10979	The Scope at which an iterator is stored.
10980	A token that is associated with a Kerberos server.
10981	Interface for KeyBuilder.
10982	MaxCombiner is an Iterator that returns the maximum number of elements that are provided.
10983	
10984	Represents a time value stored in Metadata.
10985	The metrics producer interface.
10986	MinCombiner is the combiner of two or more key-value pairs. The combiner chooses the smallest value(s) to
10987	An Iterator over a collection of KeyValueIterator instances. The keys are returned in a sorted order, i.e, the values are the elements
10988	BatchWriter for multiple tables.
10989	The supported formats for serializing the mutation output to a file.
10990	No CryptoService.
10991	A constraint which is a no-delete.
10992	This limiter will use a rate limit of 0.
10993	Timer instance that tracks elapsed time.
10994	An interface to be implemented by the OptionDescriber interface in order to describe the options required by an iterator.
10995	Enum describing the possible features for this OutputConfigurator.
10996	Enumeration of write options.
10997	A partial key used for mapping between a key and a value for a partial evaluation.
10998	An implementation of the ArraySupplier interface that pre-allocates an array of objects.
10999	The VolumeChooser implementation that uses the provided preferred volumes.
11000	The types of properties that can be used in the Schema.
11001	Status.
11002	A reference to a file or directory.
11003	A reference to a directory in the metadata of a given Tablet. This is useful when you want to reference a directory in a Tablet configuration that
11004	A reference to a file or directory.
11005	A wrapper around one or more RFiles.
11006	Input arguments for RFile.
11007	Argument for the RFile.Summary operation.
11008	The RFileCipherOutputStream is a wrapper for a CipherOutputStream, providing an override of the number of bytes that have been encrypted.
11009	Root class of metadata.
11010	This class is a base class for Sampler that hashes columns of a row-based table. Such a row can be sampled from a single
11011	An iterator over the rows in a table. The iterator is used to count the number of rows read so far.
11012	Quality of protection.
11013	Enumeration of supported SASL mechanisms.
11014	ScanDispatch.CacheUsage.
11015	Consistency levels for how the data is considered consistent.
11016	A class implementing a ScanServerSelector.
11017	An iterator that skips over the elements in a given Range.
11018	A TableDistributionFormatter that outputs sharded table statistics.
11019	A factory for rate limiters that are shared between Accumulo instances. The RateLimiter instances are created per instance per configuration.
11020	A compaction dispatcher which is just a simple one.
11021	Simple implementation of ScanDispatcher.
11022	This class provides a manager for Accumulo singletons. Singletons are managed by AccumuloServices, and are used to reserve client
11023	Singleton manager mode.
11024	An iterator that skips over the elements in a given Range.
11025	A StatisticsDisplayFormatter is a DisplayFormatter that prints statistics for a given Table.
11026	A class to represent a metadata file stored in the metadata table.
11027	Interface that allows to create custom summarizer implementations based on a given configuration.
11028	A Collector that collects Key-values from an Accumulo file.
11029	SummingCombiner is an Iterator-like implementation that reduces the number of elements of an Iterator into a single value.
11030	Synchronous loading BlockCache implementation for a given BlockCache.
11031	An import mapping can be configured with a plan, file system or directory. If multiple files are configured with a directory, then the import mapping
11032	TabletBalancer. (SPI, Singleton, ThreadSafe)
11033	ThriftMessageUtil.
11034	TimeType.
11035	A version.
11036	A validator that validates a value against a collection of objects.
11037	This class is used to count violations. There are multiple violations in a given object: one of the violations is added one by one.
11038	A constraint which is a subset of a Mutation that only has violations.
11039	An evaluator that determines the visibility of a given column.
11040	Interface to a Volume is an Accumulo Volume represents a volume that is backed by a FileSystem.
11041	The volume chooser execution scope.
11042	The default implementation of Volume.
11043	An iterator over a stream of Key-Value pairs. The iterator repeats until all rows have been processed.
11044	A callback that can be used to control a yieldable object.
11045	ZooCacheFactory. Factory for ZooCache.
11046	Indicates whether the operation should be blocked while taking a resource.
11047	Static utilities for producers.
11048	A token represents a generated factory for a Producer method.
11049	A monitor for productions.
11050	Base class for aliased table columns.
11051	The tab class that implements the Clipboard functionality.
11052	A mouse listener that allows to do a simple hover across a Cms.
11053	A dialog to select a model resource in a list.
11054	A dialog to create a new model page in the gallery.
11055	A pattern panel controller that controls the date pattern of a date field.
11056	A tab that provides a preview of detail items.
11057	Base class for select cells in the CMS.
11058	A button that handles the toolbar.
11059	A handler for the toolbar.
11060	A base class for widget factories that export native code to native code.
11061	Represents the data for a given field in a CmsActiveRow.
11062	A button that adds a new option to the dropdown list.
11063	Adds the given resource to the navigation menu.
11064	Factory for the gallery edit widgets.
11065	Factory for gallery widget instances.
11066	A context-menu that only contains a sub-menu.
11067	A tab-based alias editor.
11068	A join handler that handles async join.
11069	Factory for I_CmsEditWidget and CmsAttributeSelectWidget.
11070	A class that provides functionality of the CmsAvailabilityMenu.
11071	Factory for preview instances.
11072	Implementation of the fit IgniteImageTransform.
11073	The mode for fit.
11074	A timer which generates HTML for a single broadcast message.
11075	A context menu entry for the detail page.
11076	Manager for CmsBurstEvent.
11077	Factory for I_CmsEditWidget and I_CmsCalendarEditWidget.
11078	Categorized select widget factory.
11079	A category dialog with the option information for selecting categories.
11080	The enum for various sort parameters.
11081	A category tree item.
11082	Factory for I_CmsEditWidget and CmsCategoryWidget.
11083	Utility methods for working with cell tables.
11084	A context menu entry for the change category command.
11085	A widget for changing the password of a user.
11086	Styles for the panel.
11087	Factory for checkboxes.
11088	A widget for the choice menu.
11089	Handler for the mouseover and mouseout events.
11090	Controls for the CmsClientEditableGroup button bar.
11091	A variant display for theCmsClient.
11092	A class that can handle loading of JavaScript and stylesheets using CodeMirror.
11093	A button that toggle the state of a code mirror.
11094	Factory for I_CmsEditWidget and I_CmsInlineEditWidget.
11095	Factory for I_CmsEditWidget and I_CmsInlineEditWidget.
11096	Combo edit widget factory.
11097	The composite transform for the CmsObject.
11098	A dialog with a ok button.
11099	Messages used in the Widget.
11100	Helper class for ContainerPageContainer.
11101	The mode for removing an element from a container page.
11102	A visitor for page content.
11103	The type of event types that can be handled by the container page.
11104	Options for the CmsContentEditorDialog.
11105	A button that opens a context menu.
11106	Base class for menus that work with CmsContext.
11107	Context menu entry for the CmsCopyAsModelGroupPageMenu.
11108	Dialog window to copy a model page to a gallery folder.
11109	A context menu entry for the copy model page menu.
11110	Context menu entry for the CmsCopyPageMenu.
11111	A wrapper for a list item that can be created by a cms.
11112	The new entry types.
11113	A class holding the title and name of a category.
11114	A dialog that creates a gallery folder in the current theme.
11115	The class that provides the ability to create a gallery menu entry.
11116	A selection view in the create mode.
11117	A simple data view widget that uses the JavaScript callback to display JSON data in the dialog.
11118	Represents a data value to be used as a data view for a dropdown list item.
11119	A data view value accessor that allows to replace the value in the editor with some other values.
11120	An event fired when a date is changed in the box.
11121	The date time format to use for rendering.
11122	A utility class that provides a stack-trace debugging log.
11123	A simple string model for use in selectors.
11124	A context menu entry for the delete category command.
11125	A context menu entry for the delete action.
11126	A context menu entry for the delete model page.
11127	A dialog to show the warning that a resource can be deleted.
11128	Factory for dependent select widgets.
11129	A context menu handler for the dialog window.
11130	A context menu entry for the DISABLE command.
11131	Factory for I_CmsEditWidget and I_CmsDisplayTypeSelectWidget.
11132	Factory for I_CmsEditWidget and I_CmsFormEditWidget.
11133	Type of animation.
11134	Direction of the DAG.
11135	The orientation of the image.
11136	Attribute used for logging and error messages.
11137	A string attribute with a value.
11138	The predefined colors.
11139	The HTML code for entities that may be used in the DOM.
11140	Enum for all methods in the DOM.
11141	The styles that can be applied to the elements of the container.
11142	The style values used for the attribute.
11143	Tag used for logging.
11144	The target of the operation.
11145	A drop-down mode selection dialog with the details of the currently selected element.
11146	Utility methods for working with CmsEditableData.
11147	The class for the edit menu entry.
11148	A context-menu entry for editing a model page.
11149	A button that allows to edit the option of a dropdown element.
11150	A context menu entry for the edit redirect pane.
11151	The button that is used to select a specific option in the dropdown.
11152	Group options.
11153	A widget for formatter options in the element settings panel.
11154	Wrapper for CmsEntityBackend.
11155	A widget that shows an error message in the JSP.
11156	Event raised when a value of a CmsExtendedValue is changed.
11157	This class defines the basic layout that renders the panel in external coordinates.
11158	Button that selects a list of favorites.
11159	A tab that displays the favorites in the list.
11160	A panel that renders a collection of I_CmsFormField instances in a Bootstrap-based format.
11161	Data class for the CmsFieldTooltip.
11162	Focal point for a widget.
11163	Controller for focal points on the image.
11164	A text box that is aware of focus.
11165	Handler for focused scrolling in dropdowns.
11166	Factory for I_CmsEditWidget and I_CmsFormatterSelectWidget.
11167	Factory for gallery objects.
11168	Entry for the Explorer menu.
11169	Goto menu entry.
11170	Central menu entry for the goto sub-sitemap pane.
11171	A context menu entry which hides the currently shown menu.
11172	The styles for the border.
11173	A button that opens a context menu for the given hoverbar.
11174	A button that creates a gallery in the gallery panel.
11175	A button that creates a model page in the sitemap.
11176	Factory for I_CmsEditWidget and CmsHtmlEditWidget.
11177	A simple form for an image.
11178	A tab that links to an advanced image.
11179	A tab that renders the images in the editor.
11180	A tab that formats the images for the dropdowns.
11181	A tool to display CmsImageInfoBean instances in the display area.
11182	Factory for CmsImagePreview instances.
11183	Attribute of the CmsImagePreviewHandler.
11184	A list of import results.
11185	Interface for the result of the import of a CSS class.
11186	Wrapper for I_CmsFormField instances in the dropdown box.
11187	A list item widget that loads the additional info items using a given I_CmsAdditionalInfoLoader.
11188	Wrapper for dropdown button.
11189	A button that inherits from a parent element.
11190	Base class for all lazy tree items.
11191	The state of the item.
11192	Factory for gallery edit widgets.
11193	Additional info item used for adding title and value.
11194	Background color.
11195	A list splitter that splits a collection into smaller lists, and returns them in a single list.
11196	A tab in the dropdowns list.
11197	Factory for I_CmsEditWidget and I_CmsInlineEditWidget.
11198	Factory for the CmsLocationPickerWidget.
11199	A context menu entry for the CmsLockReportMenu.
11200	A utility class for logging messages.
11201	A media query rule that matches a CmsMediaRepository.
11202	Manages the management of media query rules.
11203	Context menu entry for the merge-menu.
11204	A widget for the CmsMessage.
11205	A button that moves the element based on the option value.
11206	Factory for dropdowns with multiple options.
11207	A wrapper around a list of checkboxes that are contained in a multi-select cell.
11208	Factory for multi-select group editing widgets.
11209	Factory for multi-select editing widgets.
11210	A property editor for navigation mode properties.
11211	A menu entry for creating new resource choices.
11212	Mode for the given CmsNotification.
11213	The type of the notification.
11214	A class for messages that can be sent to the user of a CmsNotification.
11215	A notification widget that uses the CmsNotificationMessageSource.
11216	The class which provides the ability to open a gallery menu.
11217	Handler for touch events.
11218	The class that provides the ability to open a parent sitemap menu entry.
11219	Factory for I_CmsEditWidget and I_CmsInlineEditWidget.
11220	Controller for the Daily Pane.
11221	Controller for the individual dates in the pattern panel.
11222	Controller for the pattern panels monthly.
11223	Controller for the pattern panels for weekdays.
11224	Implementation of the CmsPatternPanelWeeklyView interface.
11225	A controller for the pattern panel in yearly mode.
11226	A handler that manages the history of a popups.
11227	The area of the bean.
11228	Factory for I_CmsEditWidget and CmsPrincipalInputWidget.
11229	A simple tab that displays the list of available resource properties.
11230	A property list that is composed of multiple property values.
11231	A property definition view.
11232	A form that renders a single property value.
11233	A select box with single values, keyed on the property name.
11234	A dialog that prompts the user to confirm a publish to the user's site.
11235	The current state of the dialog.
11236	A summary of the publish item state.
11237	State.
11238	A publish lock checker that checks the publish lock of a set of elements.
11239	A class that holds the state of a CheckBox.
11240	Template interface for button templates.
11241	Handler for the QuickLaunch button.
11242	Factory for radio select widgets.
11243	Recent tab.
11244	Entry for the refresh menu.
11245	Specifies the mode in which the cache should be started.
11246	A dialog to delete a CmsElement from the DOM.
11247	Messages for the dialog.
11248	Removes a specific entry from the remove menu.
11249	A button that removes the option from the dropdown list.
11250	Messages for the CmsRenameDialog.
11251	A view which renames a folder.
11252	This class implements the replace command for a given CmsContext.
11253	A counter to use to count requests for a given CmsResource.
11254	A dialog to show the confirmation message of a resource info operation.
11255	A line in the info bar for a CmsResourceInfo.
11256	Shows the context menu entry for the resource info panel.
11257	A view for resource information.
11258	A widget that lists all resources related to a given resource.
11259	The mode of the relation.
11260	Utility methods for working with CmsResourceStates.
11261	A widget that displays the restore view.
11262	A widget for a result item in the cms.
11263	Handler for the back-scrolled navigation.
11264	The type of parameter.
11265	A wrapper for a table in the REDIRECT_ALIAS table view.
11266	Simple implementation of the RpcPrefetcher interface that fetches the prefetched data from the given AsyncService.
11267	A panel with parameters to search for in a SolrResult.
11268	The type of parameters.
11269	Factory for dropdowns and combo widgets.
11270	A simple input to the user to select a value from the dropdown.
11271	Factory for I_CmsEditWidget inlining select widgets.
11272	The class that provides functionality of the context menu in the Seo framework.
11273	A value that can be converted to a String in the format of YYYY-MM-DD HH:MM:SS.
11274	Factory for serial date editing widgets.
11275	The class for the context menu for the default model.
11276	A button that allows to select a specific option in the settings page.
11277	Shows the context-menu.
11278	A helper for showing the workbench.
11279	A simple wrapper for a widget in a decoration box.
11280	A panel for a simple form with no children.
11281	A property editor for use in a JSP context.
11282	A change event.
11283	Events related to the sitemap change.
11284	Factory for I_CmsEditWidget instances.
11285	A simple style variable that can be used to set the value of a given style variable in a UI object.
11286	The class that provides functionality for the context-menu.
11287	Factory for I_CmsEditWidget and CmsTextareaWidget.
11288	Clipboard button for the toolbar.
11289	The button that opens the menu and adds the context in the toolbar.
11290	The edit button for the toolbar.
11291	The button for the fav location tool-bar.
11292	The class that holds the data for the gallery menu.
11293	A button that shows the info box for the toolbar.
11294	The button that adds a new option to the toolbar list.
11295	A button that lists all available toolbars for container pages.
11296	A button that opens a gallery for a sitemap.
11297	A popup that opens a toolbar.
11298	The button which publishes the content of the toolbar.
11299	The button which publishes the content of the toolbar.
11300	The class for the remove button in the toolbar.
11301	A reset button for toolbar.
11302	The button which saves the currently activated toolbar.
11303	A tool-bar selection button that selects the option of a container-page.
11304	A button that selects a tool-bar in the dropdown.
11305	A button that allows the user to select a container page element from a container page panel.
11306	A button that activates the sitemap toolbar.
11307	Translate.
11308	States.
11309	Wrapper for the CmsUgc API.
11310	The type of change.
11311	Container for active items.
11312	A simple file upload implementation that uses a JSP export.
11313	Implementation of the upload file API.
11314	Messages used for uploading a file to a web page.
11315	A class that holds information about the progress of a file upload.
11316	Editor for upload properties.
11317	A dialog that shows the user settings in the panel.
11318	A panel that displays a collection of form fields in the user settings pane.
11319	Schedules validation for execution.
11320	Vfs file editing factory.
11321	Factory for VFS image edit widgets.
11322	The VU is a component that allows to store focus in a JQueryElement.
11323	Constants for width values used for storage in CmsContext.
11324	Implementation of the DocumentStyle interface for IE9.
11325	Handler for accept/decline/cancel events.
11326	A handler for the I_CmsActionDispatcher.
11327	The enum for button colors.
11328	The style for a button.
11329	The size of the button.
11330	Classes that can be used to render the CMS cell table.
11331	CSS classes for direct edit.
11332	A handle for a draggable element.
11333	The context for the toolbar.
11334	The interface for the IgniteEmbeddedDialogFrame.
11335	Callbacks used by the CmsEmbeddedDialogHandler.
11336	CSS class for the float decoration panel.
11337	The validation status for this form.
11338	The interface for handling the form data.
11339	The type of the field.
11340	Interface for the option elements for the group editor.
11341	The direction of the display.
11342	Interface for widgets that can use ghost values.
11343	Handler for history actions.
11344	Inline form parent interface.
11345	Handler for updating the inline HTML.
11346	The layout bundle for the input.
11347	The interface for the layout.
11348	The main interface for the layout.
11349	The main interface for the layout bundles.
11350	The interface for the layout bundles.
11351	The interface for the layout bundles.
11352	A button bar that can be used to display buttons over a Bootstrap container.
11353	CSS classes for CMS availability.
11354	CSS for the category dialog.
11355	A selector for colors in the layout.
11356	Interface for the content editor styles.
11357	Classes that can be used to display the CMS context menu.
11358	CSS class for a context menu item.
11359	CSS class for the cropping dialog.
11360	Interface for CSS classes used in the date box.
11361	Interface for the drag functionality.
11362	Interface for the drag-drop support.
11363	CSS class for the error dialog.
11364	CSS classes for the fieldsets.
11365	Base class for gallery field selectors.
11366	The global widget CSS classes.
11367	A container for the group input.
11368	CSS header for the layout.
11369	CSS classes for the I_CmsImageAdvancedFormBundle.
11370	CSS classes for the I_CmsImageEditorForm.
11371	Internal interface for adding CSS selectors.
11372	Interface used to define access to location picker elements.
11373	Base class for location picker.
11374	Interface for a menu button.
11375	CSS class for the hovering of the given opener.
11376	CSS interface for the popup.
11377	CSS class for the progress bar.
11378	Interface for state related css.
11379	Interface for the scroll bar configuration.
11380	Access control string for the scroll pane.
11381	A simple area of select options in the I_CmsLayoutBundle.
11382	A single line item.
11383	Interface for accessibility information for the CMS state.
11384	Classes implementing I_CmsXmlEditorCss.
11385	A list item that represents a list of widgets.
11386	A wrapper for nested drop targets.
11387	Interface for notification widgets.
11388	Interface for observing date changes in the local serial format.
11389	Classes implementing I_CmsPropertiesCss.
11390	I_CmsPropertiesHandler is a property handler that allows to save the properties of a resource.
11391	The interface for the layout bundles.
11392	The interface for the layout bundles.
11393	Interface defining the css classes that will be used to display the clipboard.
11394	A string to represent a CSS link to the sitemap.
11395	A model for String values.
11396	Interface for activation of a toolbar.
11397	The bundle for the toolbar button layout.
11398	CSS class for the toolbar buttons.
11399	A handler for the toolbar.
11400	A transform that can be applied to a point.
11401	Interface for upload buttons.
11402	Handler for upload buttons.
11403	A dialog to upload files.
11404	I_CmsValidationController is a controller for validation operations on a field of a CmsModel.
11405	A handler for validation of a single field.
11406	Factory for inlining widgets.
11407	The interface for the widgets layout bundles.
11408	An observer that observes element's size.
11409	Wrapper for I_CmsEditWidget and FormEditWidget instances.
11410	Abstract base class for MessageSerializer implementations that use the JWT_IO_REGISTRIES configuration key.
11411	AuthProperties is a set of authorization properties.
11412	AuthProperties.Type.of(AuthProperties.Property) enum for various kinds of auth properties.
11413	A class that implements a basic, deterministic, channelization mechanism for a Gremlin driver.
11414	A Channelizer that uses a WebSocketProtocol.
11415	Represents a session identifier and optionally its settings.
11416	An interface for the LoadBalancingStrategy interface.
11417	This load balancing strategy uses a round-robin algorithm. The algorithm is designed to minimize the number of load balancing iterations by lower
11418	Enumeration of the HTTP status codes returned in a response.
11419	Enum to support different serialization types.
11420	A class that implements a chunking algorithm on a tcas object.
11421	Implementation of the NameFinder interface.
11422	A class that normalizes the type system and the context.
11423	Util for parsing numbers in a given language.
11424	Util for OpenNLP.
11425	Parser class.
11426	POSTagger.
11427	A sentence detector is a class that detects the presence and availability of tokenized text. It can be used to detect the presence and availability of
11428	Tokenizer. (SPI, Singleton, ThreadSafe)
11429	An abstract class for listeners that aborts a given HSSF Record.
11430	Class for adding pgt
11431	Adjust point.
11432	AggregationUDFFinder implementation.
11433	Represents an array Ptg
11434	BIFF record for usage of axes.
11435	A BIFF record representing a backup of a partition.
11436	This interface defines a managed interface for BigBlockRange.
11437	The constructor for BeginRecord.
11438	BookBoolRecord.
11439	Defines the extent of the border element.
11440	Styles that can be used for tiling.
11441	Enumeration of built-in formats.
11442	This class is a wrapper around a OutputStream that writes to a byte array, backed by a ByteBuffer.
11443	CalculateCountRecord.
11444	Calculate Mode Record.
11445	A BIFF record for CatLab records.
11446	Represents a cell address in the R1C1 format row-major, column-minor ordering.
11447	A cell date formatter. Adds the following formatting information: The type of the format string, the format of the date, the time it took
11448	A CellElapsedFormatter is a simple ValueFormatter that formats a value according to the type of the cell.
11449	A condition that tests if a cell's value satisfies a certain constraint.
11450	The cell formatter is used to format values according to a particular format string.
11451	Enum to define how cell format is used.
11452	A general style formatter.
11453	A cell number formatter prints the number of cells in a table.
11454	The position in which a cell is located.
11455	The type of cell name.
11456	Represents the reference type of a cell.
11457	A CellTextFormatter is a simple text format which is similar to a CellFormat, but with a format string instead of a cell value.
11458	A class for traversing a cell range.
11459	The CFHeader12Record class.
11460	Record for the END chart block.
11461	Record for the ENDOBJECT chart.
11462	Record containing chart frt info.
11463	Record for storing start block data.
11464	Record for the start of a chart object.
11465	Record for chart title format.
11466	Interface to represent a Child
11467	A codepage record represents a set of HSSF codepage records in a workbook.
11468	Complex.
11469	This interface defines a formatting interface that can be used when there is a conditional formatting rule.
11470	Enum of supported condition filter types.
11471	A class that represents a connection site.
11472	A ContinuableRecord is a record that can be serialized with a ContinuableStream.
11473	A BIFF continue record.
11474	Record for CRN count.
11475	Record containing a set of CRN records.
11476	A custom property that can be used as a key-value pair for a form input to a FormValidator.
11477	Function to be used for data consolidation.
11478	A BIFF record representing a data item in a BIFF file.
11479	A BIFF record for data label extension records.
11480	This class is an interface for streaming data to an OutputStream.
11481	Operator enum for comparison.
11482	Implementation of the DAverage algorithm.
11483	Function to calculate days 360
11484	Represents a cell record in the BIFF file.
11485	SQL query string for count(field)
11486	SQLAlchemy implementation for DCOUNT A.
11487	- 1. - 2. - 3. - 4. - 5. - 5. - 7.
11488	Decimal to HEX function.
11489	Default COL_WIDTH record.
11490	Default implementation of the TempFileCreationStrategy interface.
11491	Delta record.
11492	DGet.
11493	The class for division pgt.
11494	DMax.
11495	DMin.
11496	The document property.
11497	Implementation of the DProduct algorithm.
11498	This class represents the code for drawing manager2
11499	Record containing drawing selection information.
11500	The record for DSF records.
11501	Algorithm supported by DStar.
11502	DStdev.
11503	DStdevp.
11504	DSum.
11505	A simple DVar implementation.
11506	A simple DVarp implementation.
11507	Represents an embedded data
11508	Defines the mode of encryption.
11509	The record representing the end of a BIFF file.
11510	This is an interface representing a file system Entry.
11511	The record representing the end of file.
11512	This class defines the POI ErrorEval implementation.
11513	Sys Index Procedure.
11514	This class represents an Escher option record in the format of (type, name, options) where instances are (type, name, version
11515	Defines the Escher specific types of a property.
11516	Listener for events about how the records are serialized.
11517	The EscherSimpleProperty.
11518	Exception indicating that value evaluated at cell time is invalid or incorrect.
11519	An interface representing an evaluation workbook.
11520	Builder for EventWorkbook.
11521	This class adds a listener to the WorkbookBuilder that collects SheetRecords from the provided array. The listener will collect the contained records, and
11522	Record containing ExtendedPivotTableViewFields.
11523	The FeatHdrRecord represents the set of optional e-mail headers for a BIFF file.
11524	DataSource that writes to a file, backed by a FileChannel.
11525	FilePass record.
11526	A utility class for converting a Date to filetime.
11527	Represents the fill pattern type.
11528	A field of fixed length.
11529	A BIFF record for count functions in FNGroup.
11530	Font charset.
11531	Interface for a font facet.
11532	Font family enum.
11533	Font family enum.
11534	This enum defines the group of fonts that are used in run text.
11535	This enum defines the different types of font manipulations.
11536	The interface for the footer.
11537	The record containing information about how to format a BIFF file.
11538	Enumeration of various errors that can be returned from a search.
11539	Type of a formula.
11540	DtPioGrbitSubRecord for a Flink PIOGrbitRecord.
11541	Function evaluation implementation.
11542	The class for GreaterEqualPtg.
11543	The Greater than predicate.
11544	A BIFF record representing a gridset.
11545	A BIFF record representing a HCenter.
11546	Interface representing a header that is placed on the left and right side of a rectangle. A header consists of two parts, a center and a
11547	Interface representing a header and footer. A HeaderFooter is a container that holds one or more properties of a header or footer.
11548	The base class for the footer of a BIFF file.
11549	A record representing a footer of a header.
11550	This class is for reading from a file on the local filesystem. Hex format is used for file name and/or file name.
11551	BIFF record for either object or file object.
11552	Lookup object for H2O
11553	HorizontalAlignment specifies the alignment in which the text is placed.
11554	The HPSFPropertiesExtractor class is a POIReader for properties extracted from HPSF document.
11555	The HPSFPropertiesOnlyDocument class is used for outputting HPSF properties changes to a file.
11556	The predefined HSSF colors. These are the predefined colors for the HSSF pattern.
11557	Column implementation that uses HSSF.
11558	Utility methods for parsing HSSF formula types.
11559	This class optimises the styles and fonts in the Workbook.
11560	The data for a picture, the format and mime-type of the picture is specified
11561	The request class encapsulates the information needed to issue an HSSF message.
11562	container for all shapes
11563	The HSSF Workbook factory class. Creates an empty HSSF Workbook using the default public methods.
11564	Represents a list of hyperlinks that can be accessed via the hyperlink API.
11565	Hyperlink.
11566	Algorithm implementation for IDStar aggregation.
11567	Enum to define ignored error types.
11568	IndexedColors represents a set of secondary, indexed colors.
11569	Represents a set of 2D insets.
11570	The interface record for end of BIFF record.
11571	The H2-specific header record.
11572	The tIntPtg is an id3v2 token that can be represented as a string in the format of: "1..6
11573	The irr calculates the internal rate of return from a table.
11574	A BIFF record representing an iteration.
11575	A class that lazily concatenates a byte array with a single element.
11576	Data structure to be used for dropping cells in LBS record.
11577	A BIFF record for left margin.
11578	The LessEqualPtg is a SQLOperation that is used for binary arithmetic on a list of sets of objects and maps between objects
11579	The LessThanPtg is a formula for the Less than operator.
11580	The shape of the decoration.
11581	Lookup.
11582	MainExtractorFactory.
11583	Interface for margin fields used in SpreadElements.
11584	Match.
11585	MergeCellsRecord.
11586	A dummy record for a missing cell.
11587	A dummy record with a null row number and type. This record is used for the case where no such record exists.
11588	The interface for a module.
11589	Module type.
11590	Implementation of the MultiplyPtg.
11591	Ptg that is the not equal to the value of a givenPtg. It is a copy of the input, and it is modified
11592	Null record serialization listener.
11593	Interface to get the embedded data as byte array.
11594	A BIFF record containing information about protected or non-static versions of a BIFF object. Each record consists of a sequence of (type
11595	OldCellRecord is a copy of the OldRecord class, but we still support old Biff2 format records.
11596	OldLabelRecord.
11597	OldSheetRecord.
11598	The OperationPtg is an operation that is performed on a Redis PGP command. It is a container for the form of an operation P
11599	Page item record.
11600	PageMargin describes the minimum page size that can be used for pagination.
11601	Enumeration of the possible orders for a PageRange.
11602	The various modifiers that can be used when drawing a Paint.
11603	Enumeration of the types of a pane.
11604	Paper size.
11605	The interface of the Child interface.
11606	A BIFF record representing a password.
11607	A BIFF record for password revocation records.
11608	pattern formatting
11609	PercentPtg is a formula that computes the percentage of a path between two files
11610	The picture type.
11611	A record representing a figure area in a BIFF file.
11612	Represents a document path within a POIFS filesystem.
11613	A POIFSStream is an implementation of OutputStream that can be used to create new PoiFS data streams. It is used to write
11614	An interface used to implement some of the POIFS-specific interfaces, such as Array, Iterator, or Map.
11615	POI read only document.
11616	Enumeration of various PresetColors.
11617	Enum to define how we print cell comments in a table print.
11618	A record that describes whether to print the headers (in case of dynamic headers)
11619	Enumeration of orientation print options.
11620	Factory class for creating PropertySets.
11621	A record indicating whether or not a sheet should be protected or not.
11622	Rank.
11623	ReadingOrder.
11624	Record for recalculating the id of a BIFF record.
11625	The base class for records that can be serialized and deserialized.
11626	Base class for BIFF record aggregates.
11627	The base class for serialization/deserialization records.
11628	Specifies the alignment of rectangles in a rectangle.
11629	base class for 2D and 3D RefEval algorithm, used by the parser and evaluation system.
11630	A BIFF record representing a reference mode.
11631	RelationalOperationEval.
11632	A BIFF record representing a right margin.
11633	This class is for decompression of data from a file that is compressed in RLE format. It is used to decompress data from a file
11634	Roman.
11635	Root Entry
11636	Enum for specifying when a cell is missing.
11637	A BIFF record for scenarios that cannot be protected or not. Scenario protect records are serialized and serialized in little-endian order.
11638	A BIFF record for storing series metadata.
11639	A BIFF record for a series list.
11640	Represents a shape of a path, either from a path object or from a parent node.
11641	Defines the type of shape.
11642	Record for shared formula records. Each record contains an identifier for the shared formula. Each record consists of an array of Ptg tokens,
11643	A utility interface for drawing sheets.
11644	Builder for creating Sheets.
11645	Formats the name of a sheet in a worksheet, as it would appear in cell expressions.
11646	Enum to hold the visibility of a sheet.
11647	Enum to represent version of a spreadsheet.
11648	A BIFF record containing the basic BIFF information.
11649	A BIFF record containing the sequence number and type of operation.
11650	A HSSFRecord for strings.
11651	Define the supported line dash styles.
11652	Represents a sub-record in the binary format described by SSTable.
11653	Substitute.
11654	This function is NOT thread-safe. It is an implementation of Sumif.
11655	A BIFF record for tab ids.
11656	A record for TableStyles data.
11657	Temporary file system.
11658	Strategy interface for creating temporary files.
11659	The alignment of a TextParagraph.
11660	The types of fields that can be used in TextRun.
11661	Cap of the text run.
11662	Enum for controlling what to do when drawing text.
11663	Direction of text being drawn.
11664	Placeholders used for text node attributes.
11665	TopMargin record.
11666	The UnaryMinusPtg is an implementation of the ~mathematical graph in S3.
11667	The UnaryPlusPtg is an implementation of the ~asm.asm.operations.Ptg Function which is a wrapper around an operation that
11668	A single record in the uncalced state.
11669	A BIFF record for units.
11670	A record that is not part of a BIFF file.
11671	The structure of a user s view starting at the current record position.
11672	The end of the user SView.
11673	A record in USE/SELFS.
11674	Value.
11675	ValueOperatorPtg.
11676	A class for managing variants.
11677	Exception indicating that a variant type has been caused by a problem.
11678	This class is a class to extract VBA modules from macro-enabled office file. It can be used to convert the .vba
11679	A BIFF record representing a VCenter.
11680	This class prints out the version number, the implementation language and the date of the release/build. This class is a class with static methods
11681	Vertical alignment.
11682	Vertical alignment.
11683	A BIFF record for view definition records.
11684	A BIFF record for view fields.
11685	A BIFF record for view source records.
11686	This is a VariableType Function implementation for use by Table.eval(Object, Object, Object, Object)
11687	A BIFF record that is composed of window protected and non static version of its id. WindowProtectRecord is a wrapper for HSSF
11688	Utilities for working with Workbook.
11689	Record that is protected for writing.
11690	Interface to implement the upgrade logic for the current system.
11691	Upgrade the version of ZooKeeper to 8.9+
11692	Abstract base class for EventStream implementations.
11693	The abstract class for the event trainer.
11694	Abstract base class for DataReaders that store a model.
11695	Abstract base class for ObjectStreams.
11696	A ChunkSampleStream is an object that holds a chunk of AD data. It holds a start and end offsets (if set) and a
11697	A Stream of ADNameSample objects.
11698	A Stream of objects that contain a single value. The values are interpreted as a sequence of values.
11699	Streams a sentences from a source stream. The sentences are formed by a sequence of words.
11700	AD SentenceParser.
11701	Arabic Stemmer
11702	An interface for artifact serialization.
11703	Contains a set of key-value pairs. Keys are case insensitive.
11704	The base class for the model implementation.
11705	BilouCodec encodes Span objects into Span objects, as defined by Bilou specification.
11706	This class implements a Writer that writes binary data to a GIS model.
11707	A BinaryNaiveBayesModelWriter that writes numbers and strings to a Bayes model.
11708	A writer that writes Perceptron serialization format to a DataOutputStream.
11709	This class implements a BinaryQNModelWriter that writes numbers, floats and UTF-8 strings to the underlying DataOutputStream.
11710	A BioCodec for use with SequenceCodec.encode(List, int) and SequenceCodec.decode(List, int) methods.
11711	A Stream of BioNLP2004NameSample objects.
11712	Streams BratAnnotation objects from a stream.
11713	BrownCluster. (SPI, Singleton, ThreadSafe)
11714	A serializer that takes an InputStream and an OutputStream and returns an OutputStream with the serialized data.
11715	A Catalan Stemmer
11716	A tool to create a dictionary from a list of strings.
11717	A ChunkerModelSerializer. Serializes an InputStream to an OutputStream. The OutputStream is closed after the serialization.
11718	This class is meant to be the main API for streaming events from a ChunkSequence. It takes a ChunkSample and returns a ChunkSample object
11719	A Stream that produces multiple objects in a collection. The elements of the stream are specified by the elements of a given collection.
11720	A Stream of Conll02 name samples.
11721	A Stream of contiguous name samples.
11722	A Stream that produces ConlluSentence objects.
11723	A simple span - delimited constituent (a |b) of two types. The span is a Span that is represented by a String representing
11724	Cross validation partitioner.
11725	A training sample stream is a sequence of test/evaluation elements. It extracts the next sample from the training sample and poisons it
11726	Interface for data indexing.
11727	Represents a data stream that can be iterated over in a lazy loaded state. The DataStream is backed by a slice of the data that
11728	A ChunkerContextGenerator is a convenience class that returns the contexts for chunking of a specified sequence.
11729	LemmatizerContextGenerator is a default implementation of the ContextGenerator interface.
11730	The default implementation of the POSContextGenerator interface.
11731	This interface is used to detokenize the input tokens into a String.
11732	Operation of the detokenization.
11733	Dictionary Detokenizer.
11734	The persistors are similar to the EntrySerializer, except that the EntrySerializer only forwards to the OutputStream.
11735	DictionaryLemmatizer. The dictionary is a word-to-postag mapping of words to their lemmas. The dictionary is a
11736	Find dictionary names in a text stream. Returns a Span of a name tag.
11737	Dictionary serializer.
11738	Sample stream implementation that reads from a directory.
11739	The factory method for the DoccatManifest.
11740	DocumentCategorizer evaluator.
11741	Convenience methods for downloading models.
11742	Model type.
11743	Factory class for EntityLinker instances.
11744	Streams a name sample from an Evalita program.
11745	Computes the evaluation of a given sample.
11746	EventTrainer is used to train a MaxentModel on a set of events.
11747	This class is used to create a FileEventStream over a FileSystem.
11748	A Stream that only contains objects that are not part of the original sequence.
11749	The factory class for the AdaptiveFeatureGenerator.
11750	Generic DataReader for a single model.
11751	The GenericModelSerializer is responsible for serializing an AbstractModel to an OutputStream.
11752	GISModelReader is a simple DataReader for a model. It reads a model from the disk and checks that it is of the correct
11753	A greek stemmer.
11754	Events that are arrive at a hash sum of the elements of an ObjectStream.
11755	A simple indonesian stemmer. The indonesian stemmer is similar to a standard Stemmer, but with no punctuation.
11756	Irish Stemmer
11757	Interface to detect the Language for a given full content length.
11758	A factory for creating LanguageDetector instances.
11759	LanguageModel is a model that takes a sequence of tokens and predicts the most probable output sequence of a sequence of tokens. LanguageModel
11760	Streams a Sequence of LemmaSamples into a new EventStream.
11761	Lemmatizer for a word and postag.
11762	A factory for Lemmatizer objects.
11763	The arithmetic mean.
11764	A class to chunk model parameters from the data stream.
11765	Model type.
11766	A mutable context that holds parameters and expected values.
11767	NaiveBayesModel. Evaluates a model to a set of probability values.
11768	A NaiveBayesModelReader is a Reader for a NaiveBayes model. It can read data from a file or
11769	Interface for features that require a name context to be specified.
11770	A Stream for Census 90 Name Finders.
11771	Represents a single name sample.
11772	Streams name samples and counts the number of tokens and sentences in a stream.
11773	Streams a NameSample from a FileSystem.
11774	Implementation of the log-likelihood function that is used for negative log-likelihood test cases.
11775	A character detector that detects newline sentences. It uses Span[], Span[], and String[], to detect Span[], to
11776	This class is the generator class for the nGram algorithm. It takes a char[] and an int of n, and a separator to
11777	A LanguageModel that uses the NGram algorithm.
11778	A stream of objects whose elements are all of type T.
11779	Parallel negative log-likelihood.
11780	A interface for parsing a set of tokens.
11781	Enum of various parser event types.
11782	Parser Type.
11783	A model that computes the Perceptron probability.
11784	Implementation of a PerceptronReader.
11785	A Stream that produces plain text from a source of lines. The source of lines is provided by a BufferedReader.
11786	A class that writes plain text NaiveBayesModelWriter.
11787	Implementation of the POS model.
11788	This class is used to serialize a POS model to an OutputStream.
11789	A Stream of POSSample objects.
11790	This interface defines the functions needed to process a sentence of tokens and produce pos tags.
11791	A QN model.
11792	This class implements a simple data reader for a QN model. It reads the data from the underlying DataReader and checks the model type against
11793	A basic EventStream implementation.
11794	EventStream for RealValueFile.
11795	Factory class for creating RegexNameFinder instances.
11796	The default RegexNameFinder for use with @RegexNameFinder.
11797	An interface for detection of sentences in a character sequence.
11798	A binary sequence consisting of an outcome and a probability. The outcome is specified by the outcome attribute of an InputRow and the probability is specified
11799	A codec for generating Span objects in a sequence.
11800	Streams events in a sequence from a Stream.
11801	Perceptron SequenceTrainer.
11802	A simple tokenizer interface that supports simple tokenization.
11803	Interface for TagDictionary implementations.
11804	A tokenizer interface for atomic string tokenization.
11805	A model for tokenizer. This model is similar to a Tokenizer in the paper. The model is designed to be able to fit into the data
11806	A Stream of tokenizes objects from a source of data. The tokenizer consumes tokens and produces tokens. The tokenizer consumes tokens and produces tokens in
11807	Finds token names in a given sequence.
11808	A tokenizer for whitespace characters. The tokenizer separates whitespace characters into a series of span objects.
11809	A tokenizer for wordspans.
11810	Interface to provide statistics about the cache.
11811	Base class for iterators. Contains an iterator that advances to the next element.
11812	A specialized version of LazyCache that allows for concurrent updates to be performed, without need to worry about the cache state.
11813	Abstract class for char escaping that supports an array of explicit char values.
11814	A view of a Bimap, which is backed by a list of values.
11815	Represents the different types of bound.
11816	A processor for processing multiple bytes in an input stream.
11817	A CacheBuilderSpec represents a CacheSpec for use with a CacheManagerFactory.
11818	Static utilities for creating Callables.
11819	Abstract base class for Java-specific escape methods, that supports both single and double quotes.
11820	Interface for mapping a class (Java Class) to an instance of a class.
11821	Utility methods to support logging and closing a given Closeable, optionally allowing for swallowing IOExceptions.
11822	A ClosingFuture that represents a value that has been returned by another ClosingFuture.
11823	Policy that can be used to control how CycleDetectingLockFactory.getPolicy() is used.
11824	An event that is emitted when the system is dead.
11825	The types of ElementOrder.
11826	A reference wrapper that allows for null-safe reference instances.
11827	An escaper for use in parentheses.
11828	EventBus is a simple interface which is a class which is a container for several methods to receive events.
11829	A List that represents a list of runnable execution pairs. The list is sorted according to the order they were added.
11830	A FileOutputStream that writes to a file, backed by a File.
11831	Defines how many files should be created when writing to disk.
11832	Convenient utility methods for flushing a flushable.
11833	A future that delegates to a method on a ListenableFuture.
11834	A FutureCallback is a callback for a Future computation.
11835	Builder for ImmutableNetwork.
11836	Builder for an ImmutableRangeMap.
11837	Builder for ImmutableTypeToInstanceMap.
11838	Builder for building interners.
11839	Adapters for Java Future implementations that use the JDK ListenableFuture API.
11840	Builder for a LinearTransformation.
11841	A processor that processes lines of text.
11842	Represents the difference between two maps.
11843	A collection of collectors that can accept more than one element of a stream.
11844	A MultimapBuilder that builds a ListMultimap.
11845	A builder for a SetMultimap.
11846	An abstract class that builds a SortedSetMultimap.
11847	Represents a single multiset entry.
11848	A mutable network that can be used to maintain a set of nodes and edges.
11849	Utility methods for checking and comparing possibly-null objects.
11850	A class that implements the escape sequence interface for percent encoding.
11851	A predicate which accepts an object and returns true or false.
11852	The methods that work with quantiles.
11853	Represents a scale of a quantile. A scale can be specified with a scalar or array of integers, each representing the number of quantiles
11854	Defines the option how to delete a file or directory that is recursive.
11855	Enum describing the cause of a Removal.
11856	A RemovalNotification is an action that can be performed on a given Entry of a table.
11857	An interface used to represent a table of rows.
11858	Service states
11859	A listener for receiving service updates.
11860	A cell of a table.
11861	A time source that returns the number of nanoseconds elapsed since some fixed, fixed, or time value changed.
11862	TypeResolver for resolving type variables in type and all downstream types.
11863	An iterator over a list. The list is not modified.
11864	Static utility methods for URL escapeers.
11865	Utilities for working with UTF-8.
11866	Static utility methods for XML escapeers.
11867	An interface that encapsulates the number of bytes that can be written to a DataOutput.
11868	This class is a helper class for the fst dictionary class. It takes a stateful factory and a term in it and a block file
11869	An immutable IndexDictionary exposes common methods needed to index blocks in an immutable format.
11870	An interface for building an immutable IndexDictionary.
11871	A BlockReader that reads blocks in blocks which do not cross the boundaries defined by the user.
11872	Classes that support OrdsBlockTreeTermsWriter.
11873	The SimpleTextNormsFormat class that provides basic semantics for text-norms.
11874	The format of the uniform split postings file for FST.
11875	Classes implementing this class can index fixed-gap terms documents.
11876	A point in a mathematical fashion.
11877	ID version postings format.
11878	Represents a multi-range query.
11879	Class for version block tree terms writer.
11880	Base class for merge policy tests.
11881	Base class for the BaseTokenStreamTestCase.
11882	A DirectoryStream that only filters files that are part of the provided FileSystem.
11883	A FileStore that only includes the files that are not part of the filter.
11884	A FileSystemProvider that is created by a FilterFileSystem.
11885	A FileSystemProvider that wraps a FileSystem and ensures that only the files that are writable are still available to the system.
11886	A wrapper around a FileSystem, providing the underlying FileSystem and a path to be tested against.
11887	Match object.
11888	Mock implementation of Directory.
11889	Mock token filter used for testing purposes only
11890	A tokenizer that uses a mock of the built-in alphabet.
11891	RandomEncoder: use codec with docvalues for format, no backwards-compatibility guarantees
11892	A test that tests fixed length postings.
11893	ShardSearchingTestBase class.
11894	Time units in milliseconds
11895	Function query for finding function results.
11896	An iterator over a set of matches that overlap a given interval.
11897	Interface to collect information about a single span
11898	Wrapper for a MultiTermQuery that rewrite each term of a collection. The results of the operation are computed as a SpanBooleanQuery.
11899	Encapsulates the logic for spilling out near queries
11900	The query to check the payload of a Span.
11901	AnalyzingSuggester is a wrapper class for a DirectoryService where all the files in a directory are a candidate of an Analyzer
11902	input iterator that buffers entries, uses a fixed-size array of payloads (see ChunkReader.next())
11903	Interface to be implemented by bytes ref sorters.
11904	A suggestion to suggest the combination of two terms
11905	Reader class for completions terms data
11906	CompletionTerms is a summary of the terms that can be used in a suggest query
11907	A token stream is an enumeration of successive token streams, each of which is processed by a consumer of a stream of tokens. The stream
11908	The actual term to use as the spell check score.
11909	The completion result
11910	A directed path in the FST
11911	A generic lookup class.
11912	Lookup result
11913	An implementation of IndexInput that fetches N completions.
11914	A checker for spells in a N - gram.
11915	SuggestStopFilterFactory.
11916	The suggested word
11917	Doc for suggest scores
11918	Directory with default configuration, for both file and directory merge operations.
11919	Class that encapsulates high-frequency terms.
11920	Abstract base class for ConfigurationKeys.
11921	Defines a way to associate a node to a field. Associated fields are a sequence of characters, a node of a type and a sequence
11922	A term that is a field of a Query.
11923	A parser error that is thrown when one or more tokens have been consumed.
11924	A parser error that is thrown when one or more tokens have been consumed.
11925	A parser error that is thrown when one or more tokens have been consumed.
11926	Encapsulation of a node in proximity tree.
11927	Strategy interface for processing a query tree.
11928	Parser for query string.
11929	Base class for QueryParser.
11930	Token manager.
11931	Token manager.
11932	Config handler for StandardQueryNodeProcessorPipeline.
11933	Parser for Standard Syntax Tree.
11934	Standard Syntax Parser Token Manager.
11935	Encapsulates various errors that may occur during tokenization.
11936	Encapsulates various errors that may occur during tokenization.
11937	Encapsulates various errors that may occur during tokenization.
11938	Aggregation functions for association.
11939	Facet field for association.
11940	Implementation of OrditsReader.
11941	DimRange.
11942	This class manages memory, disk, and memory ordinal mappings. It maintains memory, memory, and disk ordinal mappings when merging indexes with
11943	This interface provides a mapping from original (consecutive) ordinals to new (consecutive) ordinals.
11944	Represents a double precision range.
11945	A class that represents a range of doubles.
11946	Intelligently counts facets in a given Range[].
11947	The result of running a drill sideways search.
11948	Field used for faceting.
11949	FacetLabel for facet selector.
11950	Facet result that can be used to calculate the facet cost.
11951	Similar to FacetsCollector.MatchingDocs, but with scores that are not sparse, this class is just a helper class.
11952	Class to hold configuration for Facets.
11953	A FacetSetMatcher is a matcher for a facet set.
11954	Represents a label and its value.
11955	Converts a FacetLabel to an ordinal.
11956	Integer range
11957	LongRange.
11958	Count the number of occurrences of a given range in a facet.
11959	LRU cache for integer names.
11960	Represents a dimension range
11961	Taxonomy that uses a searcher and a DirectoryTaxonomyReader.
11962	Field to hold facet value list.
11963	State class for holding HoldsDocValuesReaderState.DimTree, Holds start/end range of ords, which maps
11964	Start and end offsets of range of set doc values.
11965	Encapsulation of an ordinal and its value.
11966	Encapsulation of an ordinal and its value.
11967	This filter is used for CJK bigram types, that do not require quantification
11968	ClassicAnalyzer.
11969	TermAttribute implementation for ConcatenateGraph.
11970	A builder for terms.
11971	CustomAnalyzer.
11972	DictEntries provides a way to retrieve morphological data from nested DictEntries.
11973	A French analyzer for HBASE. Uses a stopword file containing the default set of articles for ElisionFilter, Luhn
11974	A class that stores hyphenation trees. The hyphenation tree is a ternary tree with the classes being hyphenated and the classes being hyphen
11975	A constant to define the most likely endings of a NorwegianLightStemmer.
11976	A pattern consumer for hyphenation patterns.
11977	A simple stopword analyzer for Persian stopwords.
11978	This filter is used to reverse the string representation of a table. See HADOOP-3787 (https://issues.apache.
11979	A class implementing a RSLPStemmer.
11980	Filter to form a shingle token.
11981	A FST filter to use the temmer override for certain entities.
11982	A utility class for building and parsing FST synonym files.
11983	TermAndBoost.
11984	A analyzer for UAX29URLEmail
11985	Utilities for working with Unicode properties.
11986	Scanner interface for scanning boundary part of a URI.
11987	Matcher for a char array.
11988	PassageFormatter implementation that uses standard Japanese's passage formatter.
11989	The interface for TextFragmenter is a wrapper for TokenStream implementations that want to process the token stream as a Fragment.
11990	An interface for Labelling ByteRunAutomaton that is like an AutoValueMatcher for char[] (but also a byte[]).
11991	A MatchHighlighter is a wrapper class that provides common methods for document's and per-field highlighter implementations, for example, for example
11992	A MatchRegionRetriever is a collection of matches.
11993	Offset range.
11994	The offsets enum, the most efficient way to do it.
11995	A highlighter for highlighting terms.
11996	Analyzer encapsulates the components of a token stream.
11997	Components of a TokenStream, such as a TokenStreamConsumer and TokenStreamConsumer.
11998	Query to match index terms against the automaton
11999	the Axiomatic algorithm
12000	Basic stats class for a Query.
12001	Bits interface for bit-wise comparison of bit lengths and type.
12002	The Query for creating a new term.
12003	A term state for a block, i.e.
12004	Query for boolean values.
12005	IndexInput implementation with a buffer size of 1024, and a minimum buffer size for merges.
12006	A block pool that supports memory of up to 128-bit words.
12007	A reference to a byte array.
12008	An extension of BytesRefArray that allows retrieving the index of the elements in an array
12009	Class for defining a hash implementation for a BytesRef.
12010	A CharacterBuffer is a wrapper around a char array, which wraps a character array and has a offset and length
12011	This class is used to store and retrieve the values in CharArray
12012	A reference to a char array, used for creating hash tables in H2.
12013	Check index status for doc values test.
12014	Index status for fields info.
12015	Status object for field normalization.
12016	Index status for live documents.
12017	Status class for checking point values.
12018	Index status for stored fields test.
12019	Index status for term vectors tested.
12020	Status class for checking vector values.
12021	Utilities for dealing with codec payloads.
12022	Interface to collect leaf metrics from a Collector.
12023	A CollectorManager is a utility interface for working with Collector instances.
12024	A context that consists of a composite reader and its leaves.
12025	A compression algorithm that can be used to decide the compression ratio. The compression ratio can be set in the Configuration and the Configuration file.
12026	The DFR similarity class.
12027	Sub class for use by the DocIDMerger.
12028	A FieldComparator for use in a Query.
12029	FieldInfo.
12030	This class defines the core class for file deleters.
12031	A DirectoryReader that wraps a collection of FilterDirectoryReader's subreaders.
12032	Convenient wrapper class for custom FilterFields and FilterPostingsEnum implementations.
12033	Interface for flags to be set on methods that are immutable.
12034	Represents a Flink Triple Tree Generation Node.
12035	Contains common utilities for checking points in GeoJSON format.
12036	A token filter that is used to filter tokens through a Graph. This filter is designed to be used in conjunction with the FilterChain.
12037	A simple graph implementation that provides an iterator over a number of graph nodes.
12038	A factory for building HNSW graphs
12039	IB similarity model.
12040	Impacts a document to produce a single document with a single term.
12041	Source of impacts.
12042	Enumeration of all index segment file names.
12043	Indexes are backed by a set of resources that are being processed by an IndexProcessor.
12044	Cache helper.
12045	A reader context for an index.
12046	An extension of DirectoryWriter that can warm the reader on a newly merged segment, before a merge completes.
12047	IndexWriter.DocStats provides a summary of the number of docs in the index, including the total number of docs in the index, not
12048	A point of time to hold an ip address.
12049	A BlockPool that can grow int blocks.
12050	A reference to an integer array.
12051	IOConsumer and IOFunction interfaces.
12052	Attributes of a token that is a keyword.
12053	A class that returns a merged view over all the segment's ByteVectorValues and FloatVectorValues.
12054	Represents a latitude and longitude.
12055	Lucene shape docvalues for LatLon markers
12056	Collector interface for document numbers produced by a query.
12057	Context for a reader when it reaches a leaf node.
12058	Represents a line on the map
12059	A collection language model is used to compute the number of occurrences of a term in a document. The collection is computed by using the grammars
12060	A collection model is a term that is a subset of the models that it can use.
12061	Merge policy used for log byte size merge.
12062	Represents a reference to a long array, used for sorting and allocation of long values.
12063	A compression that lowercases ASCII.
12064	Lucene 90 Block Tree Terms reader.
12065	Class to create Lucene90BlockTreeTermsWriter.
12066	Lucene 90 Compressing StoredFieldsWriter.
12067	The Lucene 90 points format is used for reading data from HFiles.
12068	Writer for Lucene 90 points format, used for indexing and indexing.
12069	Lucene 95-HNSW vectors format: used for HNSW vectors mapping and index generation.
12070	Lucene 95 Hnsw vectors writer.
12071	A lossy LZ4.HashTable that uses the fast compression scheme.
12072	Represents a collection of Matches instances in a field.
12073	Interface defining a boost attribute that indicates that a term would not be considered competitive when it is used. The value of this attribute controls how
12074	A context that can be used to perform a merge.
12075	Class for managing one merge policy.
12076	Interface for a source of merges.
12077	A MonotonicBlockPackedReader is a reader for packed blocks of data.
12078	IndexReader implementation for a set of bit-wise operations.
12079	Class for implementing SortedDocValues over a set of sorted set docvalues.
12080	Represents a multi-document value tree.
12081	class encapsulating a sorted set of doc-values.
12082	Skip list reader for multi-level skip lists.
12083	Phrase query that combines multiple sets of PostingsEnum.
12084	A subclass of MultiPostingsEnum. This class encapsulates a ReaderSlice describing the postingsEnum that this sub-reader can fit into
12085	A class that can sort offline data.
12086	The size of the heap to allocate to store the data. The minimum size of the heap is automatic. Auto-generated so that we don
12087	A Token's starting and ending offsets. These include the starting and ending offsets, both of which are specified by the SourceTextTokenizer.
12088	Class for controlling operation handling.
12089	Iterator over packed ints
12090	An iterator over a packed long array.
12091	A builder for PackedLongValues.
12092	Provides methods to read from a frozen PagedBytes object.
12093	A wrapper for BytesRef.Reader that supports pagination.
12094	
12095	Format for documentation of per-field values.
12096	A format that stores the name and suffix of each field in postings format.
12097	A matcher that matches on a text document. Phrase matchers are similar to a CursorMatcher except that it allows for simple text based queries,
12098	PhraseQuery for creating phrases.
12099	Interface to provide a reader for PointValue objects.
12100	Represents a point value, one of the fields is a list of fields, a collection of values for each dimension.
12101	Used to read the KD-tree for point values.
12102	Interface to create new point writer-like objects
12103	Represents a 2D Polygon, defined by a Polygon.lat, and. lon, coordinates are defined by the geospatial boundaries
12104	Interface for Token attributes that define the position increment.
12105	Interface for Token position length attributes.
12106	Utility class for building prefixized terms.
12107	Iterator over the terms in the table.
12108	TermAndBoost.
12109	Interface for query caching. It can be used to decide if a given Query should be cached.
12110	Interface for reading data from the file.
12111	A collection of random-access vector values.
12112	A ReaderSlice represents a slice of a file, one document per line.
12113	Rectangle object containing a minimum and maximum longitude values.
12114	Called by a refresh manager to notify about a change in the state of a refresh.
12115	Loads a named resource and returns an instance of the expected type.
12116	A scorer that represents a child of a parent.
12117	A document with a score.
12118	A score rewrite method that can be used to transform BooleanQuery.Occur.SHOULD clause in a BooleanQuery and keep the scores as computed
12119	Utility class for maintaining information about searcher lifetime.
12120	Encapsulates basic segment info about a path and its parent.
12121	State class for reading a segment.
12122	Sentences attribute provides access to a token's sentences.
12123	A set backed by an integer over-sized array holding the set of integers. The elements are rehashed if the count reaches 0
12124	Base class for fields that store shape doc values
12125	Encapsulates information about a shape field, that can be used to define query types and transformation rules.
12126	A utility class to wrap a sleeping lock with exponential backoff. This class also provides a utility class for holding a sleep time lock.
12127	A deletion policy that determines how many snapshots are held against each other.
12128	Represents sorting by relevance and index order.
12129	A class that encapsulates the logic for sorting terms.
12130	Represents a string field.
12131	Strings used for hashing.
12132	TermFrequencyAttribute defines the custom frequency of a term within a single document.
12133	Encapsulation of how many terms have at least one occurrence of this term in a field. This class is immutable.
12134	A triangulation of a mesh is a triangulation of points on a sphere. The triangulation is done on a set of
12135	A text field, either tokenized or not stored.
12136	Collector used to measure time limiting of search requests.
12137	Thrown when time exceeds the maximum time allowed for a query.
12138	Maps tokens stream to an automaton.
12139	TopDocs is an array of score docs for a query.
12140	A ScoreDoc collector for collecting the most recent topDocs.
12141	Transition.
12142	A commit interface implemented in a 2-phase fashion.
12143	A tool for working with two-phase commits.
12144	Interface for things that can be unwrappable.
12145	Util for topNSearcher and FSTPath.
12146	Computes a path on top of FST.
12147	A list of the most recent results
12148	Query to use wildcard patterns
12149	Represents a line on the XY axis
12150	Represents a field of a XYTransform into a field of a PointValue.
12151	This class represents a 2D polygon that has a minimum and a maximum and a maximum y coordinate, which is defined by a 2D bounding
12152	Rectangle with x and y values
12153	class for defining shape docvalues for XY algorithm
12154	Base class for the visitor/cell types for a prefix tree query.
12155	A class that implements a common set of date range prefixes. These are used to build a hierarchical set of date ranges, and to build a
12156	The Shape of a NumberRangePrefixTree.UnitNRShape.
12157	Class that represents the parent value of a facet.
12158	A packed tree representation of a prefix tree.
12159	The prefix tree implementation
