6824	The broker load data reporter.
6825	JMX Bean interface for Compactor stats.
6826	This is a consumer selector based fixed hash range.
6827	Factory of InMemoryDelayedDeliveryTracker objects.
6828	Class that will return the broker host usage.
6829	This is a consumer selector based fixed hash range.
6830	This is a sticky-key consumer selector based user provided range.
6831	Placement strategy which selects a broker based on which one has the least resource usage with weight.
6832	Class that will return the broker host usage.
6833	The load data reporter, it publish the load data to load data storage.
6834	The filter and load balance context, use for delivering context between filter, scheduler and strategy.
6835	The base interface to schedule execute task in load manager.
6836	Load management component which determines the criteria for unloading bundles.
6837	MLPendingAckStore reply call back.
6838	Provider is for MLPendingAckStore.
6839	Interface which serves as a component for ModularLoadManagerImpl, flexibly allowing the injection of potentially complex strategies.
6840	Listener for NamespaceBundle ownership changes.
6841	The namespace unload strategy.
6842	The state of the pending ack handle PendingAckHandleState.
6843	Call back for pending ack reply.
6844	A representation of a message in a topic in its raw form (i.e.
6845	Usage "sense" for resource groups: publish and dispatch for now; may be more later (e.g., storage-monitoring) ToDo: "class" is vague; is there a better term to call this?
6846	The entities that might reference RGs are tenants, namespaces (and maybe topics, later).
6847	A validator to validate the schema data is well formed.
6848	Defines the possible states for service units.
6849	Service Unit(e.g.
6850	A Dispatcher that'll use StreamingEntryReader to read entries from ManagedLedger.
6851	Load shedding strategy that unloads any broker that exceeds the average resource utilization of all brokers by a configured threshold.
6852	The top k highest-loaded bundles' load data reporter.
6853	Stages of events currently supported.
6854	Types of events currently supported.
6855	The state of the topicTransactionBuffer TopicTransactionBuffer.
6856	A provider that provides TransactionBuffer.
6857	Provider of transaction pending ack store.
6858	Load shedding strategy that unloads bundles from the highest loaded brokers.
6859	Base class for AbstractAuthenticationToken implementations that expose common attributes between different OAuth 2.0 Access Token Formats.
6860	A representation of a Bearer Token Error.
6861	A factory for creating BearerTokenError instances that correspond to the registered Bearer Token Error Codes.
6862	An implementation of an AbstractOAuth2TokenAuthenticationToken representing a Jwt Authentication.
6863	Abstract superclass that may be used instead of implementing ContextMapper directly.
6864	A filter for a logical AND.
6865	The Type attribute indicates whether a field is regarded as binary based or string based by the LDAP JNDI provider.
6866	An AuthenticationSource is responsible for providing the principal (user DN) and credentials to be used when creating a new context.
6867	Implementations of this interface are capable of providing a base LDAP path.
6868	Abstract superclass for binary logical operations, that is "AND" and "OR" operations.
6869	A CompensatingTransactionOperationExecutor to manage a bind operation.
6870	Convenience implementation of AuthenticationErrorCallback that stores the given exception and provides a method for retrieving it.
6871	Abstract superclass for filters that compare values.
6872	Transaction object used by AbstractCompensatingTransactionManagerDelegate.
6873	Responsible for executing a single recorded operation as well as committing or rolling it back, depending on the transaction outcome.
6874	A CompensatingTransactionOperationManager implementation records and performs operations that are to be performed within a compensating transaction.
6875	And/or filter builder support for LdapQuery.
6876	A ContextSource is responsible for configuring and creating DirContext instances.
6877	A simple interface to be implemented to provide type conversion functionality.
6878	A NameClassPairCallbackHandler for counting all returned entries.
6879	Default implementation of TempEntryRenamingStrategy.
6880	Support class to provide BaseLdapPathSource functionality to ContextSource instances that act as proxies.
6881	Authentication strategy for LDAP DIGEST-MD5 SASL mechanism.
6882	A strategy to use when authenticating LDAP connections on creation.
6883	Keeps track of the transaction DirContext.
6884	Interface to be called in search by LdapTemplate before and after the actual search and enumeration traversal.
6885	Token Manager.
6886	Common interface for LDAP filters.
6887	Allows hard coded parts to be included in a search filter.
6888	Extends BasicAttributes to add specialized support for DNs.
6889	The specifications for the LdapClient.authenticate() request.
6890	The specifications for the LdapClient.bind(java.lang.String) request.
6891	The specifications for the LdapClient.listBindings(java.lang.String) request.
6892	The specifications for the LdapClient.list(java.lang.String) request.
6893	The specifications for the LdapClient.modify(java.lang.String) request.
6894	The specifications for the LdapClient.unbind(java.lang.String) request.
6895	Holds all information regarding a Ldap query to be performed.
6896	Do-nothing implementation of DirContextProcessor.
6897	Utility methods for working with LDAP transactions.
6898	A CompensatingTransactionOperationExecutor to manage a modifyAttributes operation.
6899	A filter for 'not'.
6900	A convenience class that combines NOT behavior with present behavior to allow the user to check for the non-existence of a attribute.
6901	A CompensatingTransactionOperationExecutor that performs nothing.
6902	Filter for logical OR.
6903	Filter that allows the user to check for the existence of a attribute.
6904	A CompensatingTransactionOperationExecutor to manage a rebind operation.
6905	A CompensatingTransactionOperationExecutor to manage a rename operation.
6906	Type safe definitions of search scopes.
6907	The default DirContextAuthenticationStrategy implementation, setting the DirContext environment up for 'SIMPLE' authentication, and specifying the user DN and password as SECURITY_PRINCIPAL and SECURITY_CREDENTIALS respectively in the authenticated environment before the context is created.
6908	DirContextProcessor implementation for managing the SortControl.
6909	Describes the input token stream.
6910	A proxy for ContextSource to make sure that the returned DirContext objects are aware of the surrounding transactions.
6911	A CompensatingTransactionOperationExecutor to manage an unbind operation.
6912	Abstract base class for Atom and RSS Feed message converters, using the ROME tools project.
6913	Exception to be thrown when an async request times out.
6914	Wrapper for a ClientHttpRequestFactory that buffers all outgoing and incoming streams in memory.
6915	Extension of CodecConfigurer for HTTP message reader and writer options relevant on the client side.
6916	Documented KeyValues for HTTP client observations.
6917	Represents a client-side reactive HTTP request.
6918	Represents a client-side HTTP response.
6919	Context that holds information for metadata collection during the client HTTP exchanges observations.
6920	Exposes the values of properties configured through CodecConfigurer.defaultCodecs() that are applied to default codecs.
6921	Registry and container for multipart HTTP message writers.
6922	Bootstrap listener to start up and shut down Spring's root WebApplicationContext.
6923	Filter to handle CORS pre-flight requests and intercept CORS simple and actual requests with a CorsProcessor, and to update the response, e.g.
6924	Utility class for CORS request handling based on the CORS W3C recommendation.
6925	Enum to represent multiple URI encoding strategies.
6926	Resolves Errors method arguments.
6927	Discovers @ExceptionHandler methods in a given class, including all of its superclasses, and helps to resolve a given Exception to the exception types supported by a given Method.
6928	WebHandler decorator that invokes one or more WebExceptionHandlers after the delegate WebHandler.
6929	Specialization of Part that represents an uploaded file received in a multipart request.
6930	WebHandlerDecorator that invokes a chain of WebFilters before invoking the delegate WebHandler.
6931	A ContentNegotiationStrategy that returns a fixed content type.
6932	LocaleContextResolver implementation that always returns a fixed locale and optionally time zone.
6933	Filter that parses form data for HTTP PUT, PATCH, and DELETE requests and exposes it as Servlet request parameters.
6934	Represents an event triggered for a form field.
6935	Strategy interface for resolving method parameters into argument values in the context of a given request.
6936	Filter that converts posted method parameters into HTTP methods, retrievable via HttpServletRequest.getMethod().
6937	Reactive WebFilter that converts posted method parameters into HTTP methods, retrievable via HttpRequest.getMethod().
6938	Represents an HTTP cookie as a name-value pair consistent with the content of the "Cookie" request header.
6939	Represents an HTTP request or response entity, consisting of headers and body.
6940	ServerHttpResponse decorator for HTTP HEAD requests.
6941	Exception thrown when the request handler cannot generate a response that is acceptable by the client.
6942	Exception thrown when a client POSTs, PUTs, or PATCHes content of a type not supported by request handler.
6943	Response extractor that uses the given entity converters to convert the response into a type T.
6944	Represents an HTTP request message, consisting of a method and a URI.
6945	Provides a convenient implementation of the HttpRequest interface that can be overridden to adapt the request.
6946	Factory to create a client proxy from an HTTP service interface with @HttpExchange methods.
6947	Adds initialization to a WebDataBinder via @InitBinder methods.
6948	Encode from an Object stream to a byte stream of JSON objects using Jackson 2.x.
6949	Factory to manage JDK HttpClient resources such as a shared Executor within the lifecycle of a Spring ApplicationContext.
6950	Interface for web-based locale context resolution strategies that allows for both locale context resolution via the request and locale context modification via the HTTP exchange.
6951	Base class for Encoder, Decoder, HttpMessageReader, or HttpMessageWriter that uses a logger and shows potentially sensitive request data.
6952	Implementation of HttpMessageConverter that can read and write XML using Jackson 2.x extension component for reading and writing XML encoded data.
6953	HttpInputMessage that can eventually stores a Jackson view that will be used to deserialize the message.
6954	A factory delegate for resolving MediaType objects from Resource handles or filenames.
6955	Strategy to resolve a MediaType to a list of file extensions — for example, to resolve "application/json" to "json".
6956	A ConversionNotSupportedException raised while resolving a method argument.
6957	A TypeMismatchException raised while resolving a controller method argument.
6958	Exception for errors that fit response status 405 (method not allowed).
6959	ServletRequestBindingException subclass that indicates that a matrix variable expected in the method parameters of an @RequestMapping method is not present among the matrix variables extracted from the URL.
6960	ServletRequestBindingException subclass that indicates that a path variable expected in the method parameters of an @RequestMapping method is not present among the URI variables extracted from the URL.
6961	ServletRequestBindingException subclass that indicates that a request cookie expected in the method parameters of an @RequestMapping method is not present.
6962	ServletRequestBindingException subclass that indicates that a request header expected in the method parameters of an @RequestMapping method is not present.
6963	ServerWebInputException subclass that indicates a missing request value such as a request header, cookie value, query parameter, etc.
6964	ServletRequestBindingException subclass that indicates a missing parameter.
6965	Provides additional methods for dealing with multipart content within a servlet request, allowing to access uploaded files.
6966	Extension of the WebRequest interface, exposing the native request and response objects in a generic fashion.
6967	Exception for errors that fit response status 406 (not acceptable).
6968	Strategy that resolves the requested content type from a query parameter.
6969	Representation for a part in a "multipart/form-data" request.
6970	Represents an event for a "multipart/form-data" request.
6971	Path segment element.
6972	Holder for URI variables and path parameters (matrix variables) extracted based on the pattern for a given matched path.
6973	Exception that is thrown when there is a problem with the pattern being parsed.
6974	The messages that can be included in a PatternParseException when there is a parse failure.
6975	FactoryBean that creates a java.net.Proxy.
6976	Overrides HttpServletResponse.sendRedirect(String) and handles it by setting the HTTP status and "Location" headers, which keeps the Servlet container from re-writing relative redirect URLs into absolute ones.
6977	ServerHttpRequest implementation that accesses one part of a multipart request.
6978	Request-backed Scope implementation.
6979	Defines a builder that adds a body to the response entity.
6980	Strategy interface used by the RestTemplate to determine whether a particular response has an error or not.
6981	Subclass of ErrorResponseException that accepts a "reason", and by default maps that to the "detail" of the ProblemDetail.
6982	Convenient superclass for application classes that need REST access.
6983	Extension of CodecConfigurer for HTTP message reader and writer options relevant on the server side.
6984	Exception for an HttpStatus.INTERNAL_SERVER_ERROR that exposes extra information about a controller method that failed, or a controller method argument that could not be resolved.
6985	Documented KeyValues for the HTTP server observations for Servlet-based web applications.
6986	Documented KeyValues for the HTTP server observations for reactive web applications.
6987	WebFilter that creates observations for HTTP exchanges.
6988	Represents a server-side HTTP response.
6989	A mutable builder for a SseEvent.
6990	Exporter that takes Spring-defined objects and exposes them as ServletContext attributes.
6991	FactoryBean that fetches a specific, existing ServletContext attribute.
6992	BeanPostProcessor implementation that passes the ServletContext to beans that implement the ServletContextAware interface.
6993	FactoryBean that retrieves a specific ServletContext init parameter (that is, a "context-param" defined in web.xml).
6994	Simple request logging filter that writes the request URI (and optionally the query string) to the ServletContext log.
6995	Special DataBinder to perform data binding from servlet request parameters to JavaBeans, including support for multipart files.
6996	Strategy interface for storing model attributes in a backend session.
6997	Simple interface that can be injected into handler methods, allowing them to signal that their session processing is complete.
6998	Simple implementation of the SessionStatus interface, keeping the complete flag as an instance variable.
6999	Convenient base class for self-autowiring classes that gets constructed within a Spring-based web application.
7000	A holder for SSL session information.
7001	ServerWebInputException subclass that indicates an unsatisfied parameter condition, as typically expressed using an @RequestMapping annotation at the @Controller type level.
7002	ServletRequestBindingException subclass that indicates an unsatisfied parameter condition, as typically expressed using an @RequestMapping annotation at the @Controller type level.
7003	Factory to create UriBuilder instances with shared configuration such as a base URI, an encoding mode strategy, and others across all URI builder instances created through a factory.
7004	Defines methods for expanding a URI template with variables.
7005	CorsConfigurationSource that uses URL patterns to select the CorsConfiguration for a request.
7006	WebHandler that decorates and delegates to another WebHandler.
7007	Special DataBinder to perform data binding from web request parameters to JavaBeans, including support for multipart files.
7008	Interface for general web request interception.
7009	Contract for session ID resolution strategies.
7010	Strategy for WebSession persistence.
7011	Sub-interface of ReactiveOutputMessage that has support for "zero-copy" file transfers.
7012	Abstract base class for WS-Addressing Action-mapped EndpointMapping implementations that map to MethodEndpoints.
7013	Abstract base for EndpointMapping implementations that map classes tagged with an annotation.
7014	Abstract base class for DestinationProvider implementations that cache destination URI.
7015	Abstract implementation of the MimeMessage interface.
7016	Abstract base class for EndpointMappings that resolve qualified names as registration keys.
7017	Represents an attachment to a MimeMessage
7018	Workflow interface that allows for customized client-side message interception.
7019	Default implementation of the ClientInterceptor interface, for simplified implementation of pre-only/post-only interceptors.
7020	Implementation of the PoxMessage interface that is based on a DOM Document.
7021	Interface that must be implemented for each endpoint type to handle a message request.
7022	Endpoint invocation chain, consisting of an endpoint object and any preprocessing interceptors.
7023	Represents an Endpoint Reference, as defined in the WS-Addressing specification.
7024	Sub-interface of WebServiceConnection that is aware of any Fault messages received.
7025	Sub-interface of WebServiceMessage that can contain special Fault messages.
7026	Enumeration that represents the standard SOAP Fault codes for use with the JDK 1.5+ SoapFault annotation.
7027	Interface to define access to header information for certain WebServiceConnection implementations.
7028	Helper class for endpoints and endpoint mappings that use marshalling.
7029	Implementation of MethodArgumentResolver that supports MessageContext arguments.
7030	Adapter to use a MessageEndpoint as the endpoint for a EndpointInvocationChain.
7031	Strategy interface that encapsulates the creation and validation of WS-Addressing MessageIDs.
7032	Strategy interface used to resolve method parameters into arguments.
7033	Strategy interface used to handle method return values.
7034	Adapter to use a PayloadEndpoint as the endpoint for a EndpointInvocationChain.
7035	Implementation of the EndpointMapping interface that uses the PayloadRoot annotation to map methods to request payload root elements.
7036	Implementation of the EndpointMapping interface to map from the qualified name of the request payload root element.
7037	Client-side interceptor that validates the contents of WebServiceMessages using a schema.
7038	Interceptor that validates the contents of WebServiceMessages using a schema.
7039	SAX XMLReader that reads from a SAAJ Node.
7040	The default Wsdl11Definition implementation.
7041	Subinterface of SoapHeader that exposes SOAP 1.2 functionality.
7042	SOAP-specific subclass of the EndpointInvocationChain.
7043	Represents the Envelope element in a SOAP message.
7044	Thrown by SoapFaultMessageResolver when the response message has a fault.
7045	Defines properties for a SOAP Fault.
7046	Represents the detail element in a SOAP fault.
7047	Represents the content for an individual SOAP detail entry in a SOAP Message.
7048	Exception resolver that allows for mapping exception class names to SOAP Faults.
7049	Implementation of MethodArgumentResolver that supports resolving SoapHeaderElement parameters.
7050	Sub-interface of WebServiceMessageFactory which contains SOAP-specific properties and methods.
7051	Implementation of MethodArgumentResolver that supports SoapMessage, SoapBody, SoapEnvelope, and SoapHeader.
7052	Contains various utility methods for handling SOAP messages.
7053	Defines the contract for payloads that can be written directly to a XMLStreamWriter.
7054	Simple holder class that associates a TransportContext instance with the current thread.
7055	A TransportOutputStream is an output stream with MIME input headers.
7056	Implementation of the EndpointMapping interface to map from the full request URI or request URI path to endpoint beans.
7057	Implementation of the MessageIdStrategy interface that uses a UUID to generate a Message Id.
7058	Represents a protocol-agnostic XML message.
7059	The WebServiceMessageFactory serves as a factory for WebServiceMessages.
7060	Defines the methods for classes capable of sending and receiving WebServiceMessage instances across a transport.
7061	Miscellaneous utilities for web applications.
7062	Defines callback methods to customize the Java-based configuration for Spring Web Services enabled via @EnableWs.
7063	Implementation of the DestinationProvider that resolves a destination URI from a WSDL file.
7064	Implementation of the Wsdl11Definition based on WSDL4J.
7065	Implementation of the EndpointMapping interface that uses the JAXB2 XmlRootElement annotation to map methods to request payload root elements.
7066	Applications may provide an implementation of this interface to filter the discovered WebSocket endpoints that are deployed.
7067	Base class for the *Chunk implementation to reduce duplication.
7068	Different types of socket states to react upon.
7069	Abstract base class for ObjectCreationFactory implementations.
7070	Base class for a WebResourceSet based on a single, rather than nested, archive.
7071	Intended for use by a Valve to indicate that the Valve provides access logging.
7072	A helper class that wraps several AccessLog instances.
7073	ActionCodes represent callbacks from the servlet container to the coyote connector.
7074	This the NIO2 based protocol handler implementation for AJP.
7075	This the NIO based protocol handler implementation for AJP.
7076	Imported copy of the ArrayStack class from Commons Collections, which was the only direct dependency from Digester.
7077	This class implements some basic ASCII character handling functions.
7078	Provides a mechanism for the Coyote connectors to communicate with the AsyncContext.
7079	A FileHandler implementation that uses a queue of log entries.
7080	This Realm is intended for use with Authenticator implementations (SSLAuthenticator, SpnegoAuthenticator) that authenticate the user as well as obtain the user credentials.
7081	NIO based character decoder.
7082	Authenticator supporting the BASIC authentication method.
7083	Parser for an HTTP Authorization header for BASIC authentication as per RFC 2617 section 2, and the Base64 encoded credentials as per RFC 2045 section 6.8.
7084	JNDI object factory that creates an instance of BasicDataSource that has been configured based on the RefAddr values of the specified Reference, which must match the names and data types of the BasicDataSource bean properties with the following exceptions: connectionInitSqls must be passed to this factory as a single String using semicolon to delimit the statements whereas BasicDataSource requires a collection of Strings.
7085	This class implements an output stream in which the data is written into a byte array.
7086	Class that extends ServletOutputStream, used as a wrapper from within SsiInclude
7087	When we need more space we'll either grow the buffer ( up to the limit ) or send it to a channel.
7088	A byte message is not serialized and deserialized by the channel instead it is sent as a byte array By default Tribes uses java serialization when it receives an object to be sent over the wire.
7089	NIO based character encoder.
7090	Default implementation of a JASPIC CallbackHandler.
7091	Rule implementation that saves a parameter for use by a surrounding CallMethodRule.
7092	Strategy for obtaining and printing the current call stack.
7093	Utility methods for CallStack.
7094	Rule implementation that creates an SSLHostConfigCertificate.
7095	A channel exception is thrown when an internal error happens somewhere in the channel.
7096	An interface to listens to incoming messages from a channel.
7097	Utility class that attempts to map from a Locale to the corresponding character set to be used for interpreting input text (or generating output text) when the Content-Type header does not include one.
7098	Ant task that checks that all the files in the given fileset have end-of-line delimiters that are appropriate.
7099	Utility class for building class loaders for Catalina.
7100	Interface of an object, which may be closed.
7101	Receive replicated SessionMessage form other cluster node.
7102	Cluster valves are a simple extension to the Tomcat valve architecture with a small addition of being able to reference the cluster component in the container it sits in.
7103	This class is used to obtain InputStreams for configuration files from a given location String.
7104	Rule implementation that creates a connector.
7105	A ModelMBean implementation for the org.apache.coyote.tomcat5.CoyoteConnector component.
7106	Constants.
7107	Decoupling interface which specifies that an implementing class is associated with at most one Container instance.
7108	General event for notifying listeners of significant changes on a Container.
7109	A ContainerServlet is a servlet that has access to Catalina internal functionality, and is loaded from the Catalina class loader instead of the web application class loader.
7110	Implementation of LifecycleListener that will create context naming information environment entries.
7111	A ModelMBean implementation for the org.apache.tomcat.util.descriptor.web.ContextResourceLink component.
7112	A ModelMBean implementation for the org.apache.tomcat.util.descriptor.web.ContextResource component.
7113	Representation of an application resource reference, as represented in an <res-env-refy> element in the deployment descriptor.
7114	Defines timing options for responding to requests that contain a '100-continue' expectations.
7115	Enumerates varies types of CORS requests.
7116	Coyote implementation of the servlet output stream.
7117	This interface is used by the Realm to compare the user provided credentials with the credentials stored in the Realm for that user.
7118	Store server.xml Element CredentialHandler
7119	Custom subclass of ObjectInputStream that loads from the class loader for this web application.
7120	Destroy context provided to object factories via destroyObject and invalidateObject methods.
7121	Authenticator supporting the DIGEST authentication method.
7122	This enum exists because RFC 7616 and Java use different names for some digests.
7123	This enumeration lists the different types of dispatches that request processing can trigger.
7124	A DisposableConnectionFacade object is the top most interceptor that wraps an object of type PooledConnection.
7125	Interface implemented by session managers that do not keep a complete copy of all sessions in memory but do know where every session is.
7126	A MembershipProvider that uses DNS to retrieve the members of a cluster.
7127	Object factory for EJBs.
7128	Simple ELContextWrapper for runtime evaluation of EL w/ dynamic FunctionMappers
7129	The element_value structure is documented at https://docs.oracle.com/javase/specs/jvms/se11/html/jvms-4.html#jvms-4.7.16.1
7130	An Engine is a Container that represents the entire Catalina servlet engine.
7131	Startup event listener for an Engine that configures the properties of that Engine, and the associated defined contexts.
7132	The ErrorHandler class is used when sending messages that are sent asynchronously and the application still needs to get confirmation when the message was sent successfully or when a message errored out.
7133	Interface for handling JSP parse and javac compilation errors.
7134	Representation of an error page element for a web application, as represented in a <error-page> element in the deployment descriptor.
7135	Utilities for handling Throwables and Exceptions.
7136	Utilities for handling Throwables and Exceptions.
7137	Utilities for handling Throwables and Exceptions.
7138	Duration unit
7139	Expiration configuration starting point.
7140	Extension to the RpcCallback interface.
7141	If the main resources are packaged as a WAR file then any JARs will be extracted to the work directory and used from there.
7142	Rule implementation that uses an ObjectCreationFactory to create a new object which it pushes onto the object stack.
7143	A simple implementation of a blocking queue with fairness waiting.
7144	Utility class to generate HTTP dates.
7145	Implementation of Handler that appends log messages to a file named {prefix}{date}{suffix} in a configured directory.
7146	This class provides support for accessing the headers for a file or form item that was received within a multipart/form-data POST request.
7147	Default implementation of the FileItemHeaders interface.
7148	Interface that will indicate that FileItem or FileItemStream implementations will accept the headers read for the item.
7149	Thrown to indicate that A files size exceeds the configured maximum.
7150	High level API for processing file uploads.
7151	Base class for filters that provides generic initialisation and a simple no-op destruction.
7152	Ant task that implements the /findleaks command, supported by the Tomcat manager application.
7153	Concrete implementation of Role for a UserDatabase.
7154	A ModelMBean implementation for the org.apache.catalina.Group component.
7155	Simple Valve that responds to cloud orchestrators health checks.
7156	Concrete implementation of the UserDatabase interface considers all directories in a directory whose pathname is specified to our constructor to be "home" directories for those users.
7157	InputBuffer for HTTP that provides request header parsing as well as transfer encoding.
7158	HTTP/1.1 protocol implementation using NIO2.
7159	HTTP/1.1 protocol implementation using NIO.
7160	This class is only for internal use in the protocol implementation.
7161	Input filter interface.
7162	Specifies a class loader capable of being decorated with ClassFileTransformers.
7163	Generate Interceptor Element
7164	This interface is implemented by clients of the JarScanner to enable them to receive notification of a discovered JAR.
7165	Jasper-specific CompositeELResolver that optimizes certain functions to avoid unnecessary resolver calls.
7166	Class loader for loading servlet class files (corresponding to JSP files) and tag handler class files (corresponding to tag files).
7167	Represents a Java class, i.e., the data structures, constant pool, fields, methods and commands contained in a Java .class file.
7168	Context factory for the "java:" namespace.
7169	Access JMX JSR 160 MBeans Server.
7170	Access JMX JSR 160 MBeans Server.
7171	Query for Mbeans.
7172	unregister an MBean at JMX JSR 160 MBeans Server.
7173	Ant task that implements the JMX Get command (/jmxproxy/?
7174	This servlet will dump JMX attributes in a simple format and implement proxy services for modeler.
7175	Ant task that implements the JMX Query command (/jmxproxy/?
7176	Ant task that implements the JMX Set command (/jmxproxy/?
7177	Access log valve derivative that rewrites entries as JSON.
7178	Handles the jsp-config element in WEB_INF/web.xml.
7179	The list of valid states for components that implement Lifecycle.
7180	Store Loader Element.
7181	An implementation of XAConnectionFactory which manages non-XA connections in XA transactions.
7182	The ManagedDataSource is a PoolingDataSource that creates ManagedConnections.
7183	Store server.xml Manager element
7184	This is a utility class to match file globs.
7185	Inner class that represents a member entry
7186	The MembershipListener interface is used as a callback to the membership service.
7187	EXPERIMENTAL AND NOT YET COMPLETE!
7188	Naming enumeration implementation.
7189	Naming enumeration implementation.
7190	Store server.xml elements Resources at context and GlobalNamingResources
7191	A class representing a CIDR netmask.
7192	An Authenticator and Valve implementation that checks only security constraints not involving user authentication.
7193	CallStack strategy using no-op implementations of all functionality.
7194	Internal configuration information for a Notification descriptor.
7195	Minimal Realm implementation that always returns null when an attempt is made to validate a user name and password.
7196	Rule implementation that creates a new object and pushes it onto the object stack.
7197	Interface for use with FactoryCreateRule.
7198	Provides same information as default log format but on a single line to make it easier to grep the logs.
7199	Output buffer.
7200	Output filter.
7201	Concrete implementation of the UserDatabase interface that processes the /etc/passwd file on a Unix system.
7202	Base implementation (client and server have different concrete implementations) of the wrapper that converts a POJO instance into a WebSocket endpoint instance.
7203	Provides access to APR memory pools which are used to manage memory allocations for natively created instances.
7204	A DelegatingCallableStatement that cooperates with PoolingConnection to implement a pool of CallableStatements.
7205	A DelegatingPreparedStatement that cooperates with PoolingConnection to implement a pool of PreparedStatements.
7206	Provides all possible states of a PooledObject.
7207	Extension of DefaultPooledObject to wrap pooled soft references.
7208	Statement types.
7209	Implementation of LifecycleListener that will populate the context's role mapping from a properties file.
7210	Implement a map for the txt: and rnd: mod_rewrite capabilities.
7211	Store server.xml Element Realm
7212	Utilities for Managing Serialization and Reflection
7213	Interface for modeler MBeans.
7214	All-to-all replication for a hash map implementation.
7215	Abstracts access to the request information needed for file uploads.
7216	Object factory for Resources env.
7217	Object factory for Resources.
7218	Extended implementation of HashSet that includes a locked property.
7219	Interface for user defined lookup/replacement logic that can be defined in a rewrite.config file by a RewriteMap directive.
7220	Abstract representation of a security role, suitable for use in environments like JAAS that want to deal with Principals.
7221	The RpcCallback interface is an interface for the Tribes channel to request a response object to a request that came in.
7222	A very simple thread pool class.
7223	Util class to protect Catalina against package access and insertion.
7224	A CallStack strategy using a SecurityManager.
7225	Interface to send data to proxies.
7226	Provides access to the request information needed for a request made to an HTTP servlet.
7227	ServletResponseWrapper used by the JSP 'include' action.
7228	Session cluster message
7229	Ant task that implements the /sessions command supported by the Tomcat manager application.
7230	Utility methods on HttpSessions...
7231	Rule implementation that calls a method on the (top-1) (parent) object, passing the top object (child) as an argument.
7232	Basic implementation primarily intended for use when using third-party ServerAuthModule implementations that only provide the module.
7233	This exception is thrown, if a requests permitted size is exceeded.
7234	Defines events that occur per socket that require further processing by the container.
7235	Filter to process SSI requests within a webpage.
7236	Provides a factory and base implementation for the Tomcat specific mechanism that allows alternative SSL/TLS implementations to be used without requiring the implementation of a full JSSE provider.
7237	Defines an interface to interact with SSL sessions.
7238	Provides a common interface for SSLImplementations to create the necessary JSSE implementation objects for TLS connections created via the JSSE API.
7239	Store server.xml Server element and children ( Listener,GlobalNamingResource,Service)
7240	This servlet will display a complete status of the HTTP/1.1 connector.
7241	Rule that creates a new IStoreFactory instance, and associates it with the top object on the stack (which must implement IStoreFactory).
7242	XML Format
7243	An internationalization / localization helper class which reduces the bother of handling ResourceBundles and takes care of the common cases of message formatting which otherwise require the creation of Object arrays and such.
7244	Converts String to and from bytes using the encodings required by the Java specification.
7245	A LifecycleListener that triggers the renewal of threads in Executor pools when a Context is being stopped to avoid thread-local related memory leaks.
7246	CallStack strategy that uses the stack trace from a Throwable.
7247	Helper class for wrapping existing servlets.
7248	Allows pooled objects to make information available about when and how they were used available to the object pool.
7249	Object factory for User transactions.
7250	Interceptor that traps any unhandled exception types and throws an exception that has been declared by the method called, or throw an SQLException if it is declared.
7251	Ant task to convert a given set of files from Text to HTML.
7252	All URL decoding happens here.
7253	Log mode for the next log message.
7254	A ModelMBean implementation for the org.apache.catalina.User component.
7255	A Valve is a request processing component associated with a particular Container.
7256	The WarWatcher watches the deployDir for changes made to the directory (adding new WAR files->deploy or remove WAR files->undeploy) and notifies a listener of the changes made.
7257	RuleSet for processing the contents of a web application deployment descriptor (/WEB-INF/web.xml) resource.
7258	In normal usage, this ServletContextListener does not need to be explicitly configured as the WsSci performs all the necessary bootstrap and installs this listener in the ServletContext.
7259	Handles the initial HTTP connection for WebSocket connections.
7260	WAITING - not suspended Server case: waiting for a notification that data is ready to be read from the socket, the socket is registered to the poller Client case: data has been read from the socket and is waiting for data to be processed PROCESSING - not suspended Server case: reading from the socket and processing the data Client case: processing the data if such has already been read and more data will be read from the socket SUSPENDING_WAIT - suspended, a call to suspend() was made while in WAITING state.
7261	XAConnectionFactory is an extension of ConnectionFactory used to create connections in a transaction managed environment.
7262	Used to pass data to the methods of AsyncListener.
7263	Enumeration of dispatcher types.
7264	Equivalent of HttpConstraint for programmatic configuration of security constraints.
7265	Objects that are bound to a session may listen to container events notifying them that sessions will be passivated and that session will be activated.
7266	This listener interface can be implemented in order to get notifications of changes to the attribute lists of sessions within this web application.
7267	Events of this type are either sent to an object that implements HttpSessionBindingListener when it is bound or unbound from a session, or to an HttpSessionAttributeListener that has been configured in the deployment descriptor when any attribute is bound, unbound or replaced in a session.
7268	Causes an object to be notified when it is bound to or unbound from a session.
7269	Implementations of this interface are notified of changes to the list of active sessions in a web application.
7270	Interface between the HTTP upgrade process and the new protocol.
7271	This interface exposes the JSP specific configuration information obtain ed from the deployment descriptors.
7272	Represents the ways that a request can be mapped to a servlet
7273	The programmatic equivalent of MultipartConfig used to configure multi-part handling for a Servlet when registering a Servlet via code.
7274	Receives notification of read events when using non-blocking IO.
7275	Defines an object that receives requests from the client and sends them to any resource (such as a servlet, HTML file, or JSP file) on the server.
7276	This is the event class for notifications about changes to the attributes of the servlet context of a web application.
7277	Implementations of this interface receive notifications of changes to the attribute list on the servlet context of a web application.
7278	Implementations of this interface receive notifications about changes to the servlet context of the web application they are part of.
7279	Provides an input stream for reading binary data from a client request, including an efficient readLine method for reading data one line at a time.
7280	Interface through which a Servlet may be further configured.
7281	This is the event class for notifications of changes to the attributes of the servlet request in an application.
7282	A ServletRequestAttributeListener can be implemented by the developer interested in being notified of request attribute changes.
7283	Events of this kind indicate lifecycle events for a ServletRequest.
7284	A ServletRequestListener can be implemented by the developer interested in being notified of requests coming in and out of scope in a web component.
7285	Represents the two possible values of the empty role semantic, active when a list of role names is empty.
7286	Represents the two possible values of data transport, encrypted or not.
7287	The programmatic equivalent of ServletSecurity used to configre security constraints for a Servlet.
7288	Defines the permitted options for configuring the session tracking mode.
7289	Represents a taglib descriptor definitions in the deployment descriptor.
7290	Defines an exception that a servlet or filter throws to indicate that it is permanently or temporarily unavailable.
7291	The interface used by an HttpUpgradeHandler to interact with an upgraded HTTP connection.
7292	Receives notification of write events when using non-blocking IO.
7293	Class representing an abstract gallery dialog action.
7294	Abstract class for HTTP imports.
7295	Class to export user.
7296	Abstract class for actions to display a JSP file in a vaadin window.
7297	Abstract base class used for converting from CmsLogEntry instances to the necessary changes in the user's publish list.
7298	A workplace menu item.
7299	Abstract superclass for preferences.
7300	Abstract thread to keep track of operation progress.
7301	An enum representing the age of a publish list resource.
7302	Abstract implementation of the interface I_CmsRepositorySession to provide the functionality of filtering items.
7303	Abstract superclass for menu item visibility checks.
7304	Workplace action only visible in the toolbar context menus, not within the file table.
7305	An app navigation entry.
7306	Abstract implementation of the content editor change handler.
7307	Base class for XML content value implementations that require only a simple XML cdata text node.
7308	Base class for XML content value implementations that require only a simple XML plain text node.
7309	The client messages class for the SEO dialog.
7310	The acacia XML content editor.
7311	Parses the HTTP Accept-Language header as per section 14.4 of RFC 2068 (HTTP 1.1 header field definitions) and creates a sorted list of Locales from it.
7312	Account info bean.
7313	Account info fields.
7314	A post create handler that adds categories to newly created resources (that are not a copy of an existing resource).
7315	Contains the replacements (and titles of the replacements) for a single type.
7316	Bean for additional site-map entry information.
7317	Additional info bean.
7318	Represents the value of an attribute, with additional information about where the value originated from.
7319	Represents a sequence of inherited module/sitemap configurations, together with an index into that list.
7320	JSON property name constant.
7321	A status enum for the initialization status.
7322	Stores information about the container page which was last edited, so we can jump back to it later.
7323	Validates the user passwords in with advanced password requirements.
7324	Provides the specific constants, members and helper methods to generate the content of the download gallery dialog used in the XML content editors, WYSIWYG editors and context menu.
7325	A bean which contains the information for creating an alias.
7326	A class used to keep track of which user is editing the alias table from which sites.
7327	This class is used for filtering aliases in database operations.
7328	A class used for storing alias import results by key.
7329	A bean representing the result of trying to import a single alias.
7330	The status for the result of an alias import operation.
7331	The class used for transmitting alias data to the server for serving.
7332	Describes a mapping rule that selects a different site root based on whether the requested path matches a set of prefixes or not.
7333	Bean representing a category for workplace apps.
7334	Displays all available app.
7335	Widget used to displays a nested hierarchy of app categories and apps.
7336	Enum representing caching status of a view.
7337	The app visibility status.
7338	Comparison of resource attributes.
7339	Displays changes between attributes (size, modification date, etc.
7340	The scroll position CSS shared state.
7341	Availability dialog.
7342	The available window widths.
7343	Manages a set of benchmark timers.
7344	The bread crumb state.
7345	The content mode describes how the text used for a broadcast message should be interpreted.
7346	Contains the broadcast message data.
7347	Extending the browser frame class to allow setting of the iFrame name attribute.
7348	The browser frame state.
7349	A bean representing a set of select options.
7350	Modes to run this app.
7351	The category select dialog.
7352	The category tree.
7353	Recursive category tree entry.
7354	A configuration bean representing a <ChangeHandler> element configured in an XSD's field settings.
7355	Dialog used to change the password.
7356	Dialog for changing the resource type.
7357	The change type dialog action.
7358	A bean containing a date, both as a 'long' value and a user-readable string representation.
7359	Client side lock class.
7360	An enum used for addressing a specific value in a property.
7361	An enum for the edit status of the entry.
7362	An enum for the entry type.
7363	Helper class to deal with loading and saving user preferences from the ADE user interface.
7364	Bean that represents a client variant of a template context.
7365	Client-side bean which holds information about a client variant of a template context.
7366	The element delte modes.
7367	Enum representing the different ways dropping elements on a container page can be handled.
7368	The available editor themes.
7369	Helper class used to determine which resources from a collector list should be included in a publish list.
7370	Converts column values to the correct types.
7371	Bean which holds the necessary data for complex value widgets in the Acacia editor.
7372	Container wrapping a single UI component.
7373	Utils to read and update the list configuration.
7374	Enum representing how filter queries should be combined in a search.
7375	A single item of the ADE file type configuration.
7376	Dialog to confirm flush without any options.
7377	The model group states.
7378	Action element for container-page editor includes.
7379	Enum representing the element copy mode.
7380	Gallery data loaded initially for the 'Add' menu in the page editor.
7381	Bean containing the 'context' of the edited container page for use in RPC calls.
7382	'Wrapper' around XML container page used for programmatic editing operations on container pages.
7383	The content editor action element.
7384	Widget display type evaluation rules.
7385	ContextMenuOpenedOnComponentEvent is an event fired by the context menu when it's opened from a component.
7386	ContextMenuOpenedOnTableFooterEvent is an event that is fired by the context menu when it's opened by clicking on table footer
7387	ContextMenuOpenedOnTableHeaderEvent is an event fired by the context menu when it's opened by clicking on table header row.
7388	ContextMenuOpenedOnTableRowEvent is an event that is fired when context menu is opened by clicking on table row.
7389	ContextMenuOpenedOnTreeItemEvent is an event fired by the context menu when it's opened by clicking on tree item.
7390	Handles inline editing within the file table.
7391	Class used to manage multiple context menu item providers through a single instance.
7392	The copy move dialog action.
7393	The copy/move actions.
7394	The dialog mode.
7395	Action for the 'copy page' dialog.
7396	The copy to clip-board/select text button shared state.
7397	The copy to project dialog action.
7398	A enumeration for the ADE context.
7399	The available client modules.
7400	Bean containing the needed data when creating a new resource.
7401	This class represents the definition of a column for the table widget used to select data items provided by an I_CmsDataView implementation.
7402	The column type.
7403	Encodes/decodes the configuration passed to the data view popup as a request parameter.
7404	Class representing the configuration passed to the Vaadin data view dialog by the client.
7405	Represents the result of a search query returned by an implementation of I_CmsDataView.
7406	Complex widget for opening selecting data from a data source implementing the I_CmsDataView interface.
7407	Convenience subclass of PopupDateField which comes preconfigured with a resolution and validation error message.
7408	Comparator for sorting resource objects based on dates.
7409	Session provider implementation.
7410	A default implementation of I_CmsDbContextFactory.
7411	Class for the database export function.
7412	Enumeration to distinguist between http- and server import.
7413	Class for the property definition app.
7414	App for the remove publish-locks function.
7415	Used to signal sql related issues.
7416	Class for the database static export app.
7417	The CmsDecorationMap is the object representation of a single decoartion file.
7418	The CmsDecorationObject defines a single text decoration.
7419	Default action handler for group buttons.
7420	Dummy widget class that causes the Acacia editor to render a nested content normally without a special widget.
7421	Default implementation of the locale handler.
7422	Default Password Generator class.
7423	Generic base driver interface.
7424	Default profiling handler which only has a single instance and delegates method calls to its registered child handlers.
7425	Default implementation of the publish group helper which operates on CmsPublishResource objects.
7426	Validator which can exclude some resources from publishing and supplies a status object for the excluded resources.
7427	Default admin tool handler.
7428	Enum for the subsitemap creation mode.
7429	Enum for IfInvalidRelation field setting values.
7430	Contains the visibility handler configuration for a content field path.
7431	A change handler that reacts to changes in a field by setting another empty field to a default value.
7432	Dialog for deleting resources.
7433	A bean which represents the information for the delete dialog.
7434	Dialog for deleting Sites.
7435	Server-side part of the dependent select box widget.
7436	This is a simple helper class to more easily produce container page beans to be used as detail-only containers.
7437	Sitemap generator class which tries to eliminate duplicate detail pages for the same content and locale.
7438	A type indicating the status of a page.
7439	Bean for special diagnostic information retrievable via JMX.
7440	Option dialog data.
7441	Describes a dialog option.
7442	Holds both a bean containing edit handler dialog options and a resource info bean for a selected resource.
7443	Wrapper class for the different types of diff modes.
7444	Constants to indicate which direct edit buttons should be displayed for a direct edit resource if the user has the permissions.
7445	Contains information about a resource that is direct edited.
7446	The direct publish dialog action.
7447	Represents the three possible display types (small, medium, wide).
7448	Defines the possible dependency types.
7449	Lucene document factory class for indexing data from a generic CmsResource.
7450	Lucene document factory class to extract index data from a cms resource containing plain html data.
7451	Lucene document factory class to extract text data from a VFS resource that is an OLE 2 MS Office document.
7452	Lucene document factory class to extract text data from a VFS resource that is an OOXML MS Office document.
7453	Lucene document factory class to extract index data from a cms resource containing Open Document Format data.
7454	Lucene document factory class to extract index data from a cms resource containing Adobe pdf data.
7455	Lucene document factory class to extract index data from a cms resource containing plain text data.
7456	Lucene document factory class to extract index data from a cms resource containing RTF data.
7457	Lucene document factory class to extract index data from a cms resource of type CmsResourceTypeXmlPage.
7458	Provides a widget that allows access to the available OpenCms download galleries, for use on a widget dialog.
7459	Enum for distinguishing between login modes.
7460	Special key class for caching the resource OU data with a Guava LoadingCache.
7461	Class used to collect log messages and later write them to the actual log but with duplicates removed.
7462	Entry to write to the log.
7463	Class used to keep track of optional dynamic category fields for a content.
7464	Wrapper class for dynamic function formats which can be used from JSP EL.
7465	Empty handler which shows or hides an 'Add' button to add new rows, depending on whether the group is empty.
7466	Handles state changes when the group becomes empty/not empty.
7467	Button bar for manipulating rows in a multivalued field list.
7468	Default implementation for row for multivalue field lists.
7469	The edit control code dialog action.
7470	Action to logout.
7471	Data which needs to be passed to the edit handler when using the 'new' button for an editable list element.
7472	Class for the Edit Login View.
7473	Handles editor content changes to read OpenCms resource properties and insert their values into the edited content.
7474	A default editor CSS handler to obtain the CSS style sheet path from the template property value of the template itself.
7475	This editor handler class returns the editor URI depending on various factors.
7476	Extension for iFrame embedded editors storing the changed state of the edited content.
7477	Action element for edit provider includes.
7478	Class for the edit resource type dialog.
7479	Comparison of two xml page elements.
7480	Contains lock information for a container page element.
7481	Represents the setting configuration for a container element.
7482	Element view info.
7483	Element view preference configuration.
7484	A widget to select an element view.
7485	Helper class for parsing an element with no content but several attributes into a subclass of I_CmsConfigurationParameterHandler.
7486	Helper class for parsing an element with several sub-elements which are text-valued (i.e.
7487	Separate UI for VAADIN based dialog embedded into a GWT module.
7488	Enum indicating the type of changes.
7489	The entity HTML representation including validation data.
7490	Dialog used to display error stack traces in the workplace.
7491	Event class for OpenCms for system wide events that are thrown by various operations (e.g.
7492	Wrapper around a JSON handler that catches exceptions.
7493	Simple utility class for caching a single value with a given cache expiration time.
7494	Dialog context for the explorer.
7495	Class which listens for cache flush events to uncache cached access control settings.
7496	A bean for a export name.
7497	Widget used to edit a module export point.
7498	Extended data structure for the collector, parsed from the collector parameters.
7499	Site selector widget which also optionally offers subsite options.
7500	Class representing a single option.
7501	Provides information about an external link.
7502	Class to validate pointer links.
7503	Thread for extern link validation.
7504	Thread for extern link validation.
7505	External widget configuration settings.
7506	Extracts the text from an HTML document.
7507	Extracts text data from a VFS resource that is an OLE 2 MS Office document.
7508	Extracts text data from a VFS resource that is an OOXML MS Office document.
7509	Extracts the text from OpenOffice documents (.ods, .odf).
7510	Extracts the text from a PDF document.
7511	Extracts the text from a RTF document.
7512	Layout which looks like a Vaadin window without actually being a window.
7513	Loads/saves favorites.
7514	Dialog which shows the list of favorites for the current user and allows them to jump to individual favorites, edit the list, or add the current location to the favorite list.
7515	Represents the type of the favorite.
7516	App for the history settings and clearing of history.
7517	Data bean which walkFileSystem passes to its callback.
7518	Dialog for clean flex cache.
7519	Formatter configuration for flex formatters.
7520	Implementation of the RequestDispatcher interface to allow JSPs to be loaded from the OpenCms VFS.
7521	Vaadin Layout with Buttons to clear the different types of cache.
7522	Interface for the dialogs.
7523	Dialog to request a password reset link if you forgot your passsword.
7524	Parses formatter beans from formatter configuration XML contents.
7525	Bean which holds a list of formatter configurations (client-side) which can be retrieved by key or id.
7526	The form edit dialog action.
7527	Represents information about whether a gallery folder should use a custom upload action.
7528	A single container type/width combination.
7529	The gallery dialog action.
7530	Mode that determines how to handle types in the gallery dialog that are disabled, usually because there is no matching container in the current page.
7531	Helper class for building a filtered sitemap tree for the gallery dialog's 'Sitemap' tab.
7532	Class representing a dialog for optimizing galleries.
7533	The gallery optimize dialog action.
7534	Sort parameter constants.
7535	Gallery tree entry class.
7536	The gallery type bean.
7537	Bean representing a Geo filter.
7538	A single configuration entry.
7539	Enum representing the type of a single configuration entry in a geomapping configuration.
7540	A group container.
7541	Bean which holds the results of saving a group container.
7542	The group edit parameters.
7543	Table properties.
7544	Context menu button widget state.
7545	Dummy log that does nothing on the server side.
7546	MS SQL implementation of the history driver methods.
7547	MySQL implementation of the history driver methods.
7548	Oracle implementation of the history driver methods.
7549	PostgreSql implementation of the history driver methods.
7550	Extension to allow clientside history back and forward.
7551	Utility methods for the history list.
7552	The history state.
7553	Bean representing a file version for the history dialog.
7554	Enum for distinguishing between offline and online project.
7555	Represents a single HTML converter configuration as defined in the OpenCms configuration file opencms-vfs.xml.
7556	Extracts plain text from HTML.
7557	Wrapper class for the different style of icon buttons.
7558	A tag factory for htmlparser that is able to "remove tags".
7559	Provides a http upload widget, for use on a widget dialog.
7560	Bundle of i18n setting to be used to setup a new request context.
7561	A bean carrying icon CSS class information.
7562	Dialog to clean Image Cache.
7563	A schedulable OpenCms job that clear the image cache for the scaled images created by the CmsImageLoader.
7564	Helper class for getting information about cached images.
7565	Table to show entries of image cache.
7566	Provides a widget that allows access to the available OpenCms image galleries, for use on a widget dialog.
7567	Allows to import resources from the filesystem or a ZIP file into the OpenCms VFS.
7568	Subclass which doesn't actually import anything, but just reads the module data into a data structure which can then be used by the module updater.
7569	Class for the import user thread.
7570	Categories of resources that need to be handled differently in the 'rewrite parseables' import step.
7571	Data class to temporarily keep track of relation data for a resource to be imported.
7572	Helper class for getting localized messages for the 'lock inactive users' feature.
7573	Implements methods to utilize a report thread for CmsIndexingReport.
7574	Implements the indexing method for a single resource as thread.
7575	Implements the management of indexing threads.
7576	Utility methods for inheritance groups which don't fit anywhere else.
7577	Reference to an container inheritance configuration.
7578	Parser class for parsing inheritance container references.
7579	Describes errors that occur in the context of OpenCms the initialization, this is fatal and prevents OpenCms from starting.
7580	DataSource implementation that may be filled with content from an InputStream.
7581	CmsInputWidget that strips HTML Tags from the input before storing values.
7582	Util class to find broken links in a bundle of resources.
7583	Class for the layout for choosing the resources.
7584	This tool handler just hides the tool for the user, but the tool can still be invoked explicitly, usefull for tool that requires an argument, like edit tools.
7585	Helper class for using JAXB to convert between beans and OpenCms config file XML elements.
7586	A simple class used to start and stop JLAN.
7587	Don't use CmsScheduledJobInfo directly, so we don't need to change it if we want to change how the values are rendered, and having only the fields we want displayed in the table makes it easier to understand.
7588	Form used to edit a scheduled job.
7589	Table used to display scheduled jobs, together with buttons for modifying the jobs.
7590	Property columns of table, including their Messages for header.
7591	Class representing a JSON document for a folder.
7592	JSON handler for rendering a container page as JSON.
7593	Produces directory listings in JSON format.
7594	JSON handler used to load JSPs referenced directly by path.
7595	JSON handler for rendering a list.
7596	Wrapper for JSON handlers that caches online project requests.
7597	JSON handler for rendering a resource as JSON.
7598	Sub-handler for converting XML contents to JSON, either as a whole or just specific locales or paths.
7599	Helper class used to translate key/value pairs from and to the format which can be processed by the CmsJsonPartFilter.
7600	Used for rendering container pages as a JSON structure.
7601	Result of rendering JSON.
7602	Vaadin extension class for a BrowserFrame to display a JSP.
7603	The null value info, used to generate RDFA and DND annotations for null values.
7604	This class provides the detection for different devices, so that the <cms:device type="...">-Tag can detect which device sends the HTTP request.
7605	Device selector class which distinguishes between the cases "desktop", "mobile" and "tablet".
7606	Provides the detection for different devices, so that the <cms:device type="...">-Tag can detect which kind of device type sends the HTTP request.
7607	Navigation builder context.
7608	The visibility mode.
7609	Allows JSP access to the results of a <cms:resourceload ...
7610	Bean containing a template name and URI.
7611	Keeps track of the runtime state of a single execution of this tag.
7612	Used to access XML content item information from the current open <cms:contentload> tag using JSP page context and the JSP EL.
7613	This class provides a <cms:device type="...">-Tag with the attribute type to specify the device.
7614	The tag 'displayFormatter' can be used to add a formatter resource type pairing to the surrounding 'display' tag.
7615	Generates a special HTML element which enables the 'create list element' dialog for a set of types when used in a formatter.
7616	This is a TagExtraInfo evaluation class that checks the attibutes of the <cms:include /> tag.
7617	Tag for defining a JSON array.
7618	Tag for defining a JSON object.
7619	Tag used to convert the HTML output of this tag's contents to encoded JSON.
7620	Builds a java.util.Map isntance with string keys and values from nested param tags, then stores it in a page context variable whose name is supplied by the user.
7621	Constants for type attribute interpretation.
7622	A handler for <param> that accepts attributes as Strings and evaluates them as expressions at runtime.
7623	JSP tag to generate a link to a PDF produced from a given XML content.
7624	Tells for which resource properties should be looked up (with or without searching), depending on the CmsJspTagProperty.FileUse.
7625	Provides access to the data of the currently logged in user.
7626	Workplace locale preference.
7627	App for legacy admin tools.
7628	Enum which represents different modes that control which domains OpenCms puts into the certificate configuration.
7629	Enum which represents the different types of events that LetsEncrypt updates should be triggered by.
7630	A bean for representing a link, which can be external or internal.
7631	Provides a widget that allows access to the available OpenCms external link galleries, for use on a widget dialog.
7632	Immutable bean representing most of the information in a CmsLink.
7633	Workplace action for the 'Link locale variant' dialog.
7634	Class for the Link validation app.
7635	Class for the Link validation app.
7636	Represents a single option (type) that can be selected in the list element creation dialog.
7637	Lock icons.
7638	Enum for the type of page icon which should be displayed.
7639	A list based resource bundle that with increased visibility of some key methods.
7640	Enum representing whether two resources can be linked together in a locale group.
7641	Bean representing a link to a different locale variant.
7642	Dialog used to select a resource which should be linked to a locale group.
7643	Action to lock a folder if it isn't already locked, with a dialog asking to confirm your choice if the folder contains resources locked by other users.
7644	Bean class which keeps track of a locking action performed on a resource.
7645	A type for the different locking actions.
7646	An enum indicating the success or type of failure of a locking operation.
7647	A bean holding the lock report info.
7648	Utilities for dealing with log4j loggers.
7649	Class for table to display and edit Log channels.
7650	Class for the Download dialog.
7651	Helper class for generating the zip file for the log download.
7652	Wrapper class for a DB log entry.
7653	Provides log files which should be available as options in the OpenCms log file viewer.
7654	Class for the view of log files.
7655	Ensures that among a set of check boxes, at most one of them is checked, without imposing constraints on the location of the checkboxes in the UI.
7656	Represents the login target information.
7657	The login context.
7658	Helper subclass of CmsLoginUserAgreement which can be used without a page context.
7659	Widget used to allow the user to search and select an organizational unit.
7660	Password field for the login dialog.
7661	Parameters which are initialized during the initial page load of the login dialog.
7662	Report class used for the logfile.
7663	Delegates indexing to a standard Lucene IndexWriter.
7664	Special collection class which allows lookup from keys to values and from values to sets of keys.
7665	The attribute type.
7666	Allows the use of max height in combination with vaadin layout components.
7667	The max height shared state.
7668	Cache types.
7669	Decorator for menu item visibility classes which always returns INVISIBLE if more than one resource is passed, but otherwise delegates the decision to its wrapped instance.
7670	Extension of Properties to allow saving with keys alphabetically ordered and without time stamp as first comment.
7671	Types of bundles editable by the Editor.
7672	The propertyIds of the table columns.
7673	Contains a localized message key, it's arguments and a I_CmsMessageBundle.
7674	A lookup table used to find out which VFS based message bundles (XML/property bundles) contain a given key.
7675	Configuration bean for meta mappings.
7676	Describes a MIME type configured in OpenCms.
7677	Wraps the model page and model group info into one object.
7678	This class contains the model page configuration for a sitemap region.
7679	This class contains the model page configuration for a sitemap region, without the actual resource.
7680	Bean holding model resource information to be displayed in the model select dialog.
7681	The available module export modes.
7682	Widget used to edit a module dependency.
7683	Holds exported module data and a modification date.
7684	A bean representing a module zip file to be imported.
7685	The form for importing modules via HTTP.
7686	This class is responsible for reading and writing module import/export log messages, to be used by CmsResourceWrapperModules.
7687	Action type.
7688	A widget for selecting a module resource.
7689	Represents a row of the modules overview table.
7690	Overview list for module information.
7691	A version number for an OpenCms module.
7692	Enum used to distinguish whether we want to generate the XML for a module export's manifest or the XML for writing back opencms-modules.xml.
7693	Class for a dialog to move resource types to modules.
7694	Dialog to change OU of given user.
7695	Interface for callbacks which should be notified when this helper has created a resource.
7696	Basic implementation of the interface I_CmsNewsletter.
7697	Content for newsletters.
7698	The basic class for the content notification feature in OpenCms.
7699	Objects of this class are serialized in the additional infos of a user to store, which resources were already confirmed by the user.
7700	This tool handler disables the tool if in online project.
7701	Shortcut handler triggered on 'Enter' and 'Esc' to trigger OK and Cancel actions.
7702	This tool handler hides the tool to non admin users.
7703	Provides methods for open gallery dialog.
7704	Class for the ou edit and new dialog.
7705	Ou Handler.
7706	Class to show ous in table for account management.
7707	Class for the OU Tree.
7708	Wrapper for CmsSelectQuery objects which adds SQL code for results paging.
7709	An individual weighted parameter value, with a 'source' attribute for better debuggability.
7710	Notification used to send password change link to user.
7711	Widget state for the special password field used by the login dialog.
7712	Simple data holder class which stores a path in a normalized form.
7713	A helper class used for calculating which paths need to be included or excluded from the XML sitemap generation.
7714	Data structure which stores contents indexed by path.
7715	A bean which represents a value together with a path which indicates from where the value has been read.
7716	This class is responsbile for creating and parsing links to generated PDFs.
7717	Class to generate or parse a link to a PDF thumbnail.
7718	This class is responsible for loading external resources while generating PDF from XHTML.
7719	The permission dialog action.
7720	The permission info bean.
7721	Permission change handler.
7722	Authorization handler which uses a special cookie sent by the user's browser for authorization.
7723	Bean representing the data encoded in a login token (user name and key).
7724	A point in 2D space.
7725	The service implementation for the org.opencms.ade.postupload module.
7726	Bean representing the configurable attributes for a preference.
7727	The user preferences dialog action.
7728	Response bean class for the 'prepareEdit' RPC method.
7729	A bean that holds the informations of a principal to show the availability dialog.
7730	Type of principal.
7731	The widget types.
7732	The principal select extension.
7733	Table to selecet principals used in the CmsPrincipalSelect vaadin element.
7734	Comparator for sorting resource objects based on priority and date.
7735	Comparator for sorting resource objects based on priority and title.
7736	Enumeration class for project types.
7737	Deletes a project.
7738	The set project dialog action.
7739	Oracle/OCI implementation of the project driver methods.
7740	Preference subclass for selecting the start project.
7741	The projects table.
7742	Action element class for opening the ADE properties dialog.
7743	A bean representing a set of property changes.
7744	Represents a row in an attribute comparison table.
7745	Displays differences between the sets of properties of two versions of a resource.
7746	A property based resource bundle with increased visibility of some key methods.
7747	Class for the table containing all property definitions in the system.
7748	Table columns.
7749	A publish group.
7750	Mode of operation for publish history cleanup.
7751	Defines a read-only publish job that is still waiting for publishing.
7752	Defines a read-only publish job that has been already published.
7753	Defines a read-only publish job that is being published.
7754	A bean which can be used to reconstruct a publish list.
7755	Performs some additional checks on publish lists to prevent inconsistent VFS states.
7756	Enum for the different publish list remove modes.
7757	Class to send a notification to an OpenCms user with a summary of warnings and errors occurred while publishing the project.
7758	Class for the Publish queue app.
7759	Helper class for finding all related resources for a set of resources to be published, for use with the new ADE publish dialog.
7760	A map from resources to sets of resources, which automtically instantiates an empty set when accessing a key that doesn't exist via get().
7761	A publish resource additional information bean.
7762	Reason value constants, when resources can not be published.
7763	Class for Vaadin Table showing history queue elements.
7764	Editor for the user quick launch configuration.
7765	Provides a widget for a standard HTML form for a group of radio buttons.
7766	Action to reindex resources.
7767	Util class to find broken links in a bundle of resources to be deleted.
7768	Util class to find broken links in a bundle of resources to be published.
7769	Helper bean used to collect a list of resources (usually relation targets) and keep track of whether any of them have the "changed" state.
7770	Enum representing how relations should be handled while copying resources.
7771	Relation validator entry information bean.
7772	RMI object which wraps a CmsShell and can be used for shell command execution.
7773	Client application used to connect locally to the CmsShell server.
7774	RMI shell server configuration.
7775	This class is used to initialize the RMI mechanism and export the object used to access the remote shell.
7776	Removable form row.
7777	A bean used to store information about a container page element which was just removed.
7778	Message key fallback handler used to enable reuse of localization keys for editor labels.
7779	A scheduled job which removes entries older than a given amount of time from the CMS_LOG table, to improve database performance.
7780	Remove the publish locks.
7781	Bean class containing the information needed for the Rename dialog.
7782	File replace dialog info.
7783	Status after updating a module.
7784	Report overlay, shows the wait spinner first and the report window later in case off longer running threads.
7785	Represents a single report entry.
7786	A widget used to display an OpenCms report.
7787	Creates a repository session to access OpenCms.
7788	Category information for a specific resource.
7789	Context menu builder for resource items.
7790	Helper class for formatting resource data as JSON.
7791	A resource type wrapper for jsp files, which adds the correct file extension "jsp" to the resources.
7792	A resource type wrapper for xml content files, which adds the correct file extension "xml" to the resources.
7793	A resource type wrapper for xml pages, which adds the correct file extension "xml" to the resources.
7794	Enum used to control icon display style.
7795	Bean containing a template resource and the name of the template.
7796	Class for site select options.
7797	Contents of the resource select dialog, filled using the declarative layout mechanism.
7798	Enum used for identifying tabs in the resource info dialog.
7799	Contains the data for the given column, along with some flags to control visibility/collapsed status.
7800	Provides a resource name / path translation facility.
7801	Enum for data source from which resource type bean was constructed.
7802	Enum representing the visibility of a resource type in the bean.
7803	Enum used to distinguish the type of menu in which a configured resource type can be displayed.
7804	Represents the visibility status of a resource type in the 'Add' menu of the container page editor.
7805	Resource type class for the second version of dynamic functions.
7806	The HTML redirect resource type.
7807	A data container for image size and scale operations.
7808	Special resource type for locale independent XML contents.
7809	The macro formatter resource type.
7810	Class for the result of a database statistic set.
7811	Class for the database-statistic result list.
7812	Class for the database statistic view.
7813	Resource type descriptor used in case the given resource type class in the XML configuration could not be instantiated.
7814	Resource type descriptor for unknown folder types.
7815	Enumeration class for defining the resource project state.
7816	Resource wrapper which intercepts createResource calls and substitutes them with replaceResource if there is already a deleted file at the same path.
7817	The availability dialog action.
7818	Match type of the restriction, i.e., how the values should be treated.
7819	The values in one input field.
7820	The type describes how values in that input field should be handled.
7821	Displays search result facets.
7822	This class represents the result of a "return link" lookup, which is what happens if the user clicks the "go to last page" button in the sitemap editor.
7823	The moved status.
7824	This class represents an alias which does not just map a fixed path to a fixed resource, but instead uses a regular expression substitution to determine the target path.
7825	Filter class used for selecting rewrite aliases from the database.
7826	The result of a match operation.
7827	This class represents the result of a validation of rewrite aliases.
7828	Table for the roles.
7829	Stores the editor save result information.
7830	The scroll position CSS shared state.
7831	An analyzer class is used by Lucene to reduce the content to be indexed with trimmed endings etc.
7832	Class keeping the configuration of the "Did you mean ...?" feature of the search form.
7833	Representation of one query facet item.
7834	Configuration for a single sort option.
7835	A resource implementation that combines the Solr document together with a OpenCms VFS resource.
7836	Class for handling the state of the "Did you mean?" search options.
7837	Class keeping the state of the Geo filter.
7838	Class for keeping the state for the pagination.
7839	Class for keeping the state of the sorting options.
7840	Dialog used to ask the user for a verification code generated from his second factor, using an authenticator app.
7841	Second factor information for login.
7842	The data needed to set up two-factor authentication for a user.
7843	Dialog used to change resource modification times.
7844	Select box widget that can transform into a combo box by clicking an edit icon.
7845	Class for the resource type select dialog.
7846	Class to send email to user in case of password reset or creating new user.
7847	Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a daily base.
7848	Wrapper for the value stored by the CmsSerialDateWidget that provides easy access.
7849	Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a monthly base.
7850	Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a monthly base.
7851	Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles single events.
7852	Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a weekly base.
7853	Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a daily base.
7854	Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a yearly base.
7855	Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a yearly base.
7856	Implementation of the serial date RPC service.
7857	Utility methods for the serial date widget.
7858	Server-side implementation of I_CmsSerialDateValue.
7859	The form for importing a module from the application server.
7860	Enumeration class for the configuration mode.
7861	Shell script app.
7862	Layout for shell script settings and input dialog.
7863	Type of Dialog.
7864	Table with resources for which a given principal has permissions.
7865	Provides buttons for showing the two versions being compared.
7866	Advanced locale handler allowing single tree localization.
7867	The site localization modes.
7868	Represents a grouping of domains into certificates.
7869	Represents the domain information for a single site.
7870	Sitemap action used to generate the sitemap editor.
7871	The data needed by the sitemap attribute editor dialog in the sitemap editor.
7872	Contains a set of attribute definitions for the sitemap attribute editor.
7873	The category data for the current sitemap.
7874	The change types.
7875	The sitemap editor modes.
7876	Sitemap info object.
7877	This class represents the result of a 'merge sub-sitemap' operation.
7878	Helper class for recalculating navigation positions when a user has changed the order of navigation entries in the sitemap editor.
7879	Sitemap session cache.
7880	Loads node data for the sitemap tree.
7881	Represents the different redirect modes for a site alias.
7882	Preference for the start site.
7883	The dialog for selecting a site when exporting / deleting a module without a module site.
7884	Bean class which represents an option for the site selector in the gallery dialog.
7885	Enum for indicating the site type.
7886	Helper class for building the options for the site selector in the gallery dialog.
7887	Table properties.
7888	This Solr post processor generates for each found document the corresponding link and adds this link into the resulting document as field.
7889	Stores the editor settings.
7890	The source search form.
7891	Helping class for manipulating the Solr spellchecker indices.
7892	Class for generating an SQL boolean expression.
7893	Class for the property definition app.
7894	Class for storing query results.
7895	Standard visibility check implementation.
7896	Preference for the start folder.
7897	Preference for the start site.
7898	A helper class used to accumulate SQL fragments together with the corresponding query parameters.
7899	Action "Steal lock".
7900	Widget that can be used to view a running report that is not generated specifically by an OpenCms report thread, but from the text written to the stream provided by this widget.
7901	Report class used to write the output of a report to a StringBuffer.
7902	MySQL implementation of the subscription driver.
7903	Oracle implementation of the subscription driver.
7904	A data class which is used to transfer information about sub-sitemaps which have been created.
7905	Helper class which keeps track of a set of updates to be performed in a different thread.
7906	Defines the CmsSynchronizeList object, used to store synchronisation data required to synchronize the VFS and the server FS.
7907	Synchronizes a VFS folder with a folder form the "real" file system.
7908	Synchronizes a VFS folder with a folder form the "real" file system.
7909	Enum for the user session mode.
7910	Form tab information bean.
7911	An alternative export point driver which replaces the RFS targets of some export points with locations in a temporary export folder.
7912	Utility class for getting information about available templates.
7913	Action for replacing formatters in pages according to a template mapper configuration.
7914	Report thread for rewriting pages in a folder according to a given template mapper configuration.
7915	Helper class for finding the list of active template plugins for the current page.
7916	CmsTextareaWidget that strips HTML Tags from the input before storing values.
7917	Interprets two versions of a resource as text files, and shows a diff view for the two texts.
7918	Widget used to display a colorized diff view for two texts.
7919	Thread local stack.
7920	Builds up a tree whose nodes correspond to stack trace lines of the threads calling this profiling handler.
7921	Data for TinyMCE editor.
7922	This is an admin tool group, it just generates the html code for the group structure.
7923	The standard workplace tool layout.
7924	Generic tree node which can contain an object of generic type T as data, and which has a mutable list of child nodes.
7925	The tree open state of a gallery tree tab.
7926	The rule type.
7927	Represents a single rule configured for a policy.
7928	A context object used to keep user-related data around which may be needed by multiple rules, so we only need read it once (e.g.
7929	Enum describing how type configurations should be ordered in the sitemap configuration.
7930	Enum representing the different types of errors.
7931	Implementation of the I_CmsFormDataItem which delegates its methods to a FileItem from Apache Commons Upload.
7932	Exception class for use in the org.opencms.editors.usergenerated module.
7933	A queue used to enforce a certain wait time between requests for sessions for the same form configuration.
7934	Helper class which implements some of the security checks for user generated content creation.
7935	Dialog to confirm detaching a resource from a locale group.
7936	Workplace action for the 'Link locale variant' dialog.
7937	Action "Unlock resource".
7938	Upload action element, used to generate the upload dialog.
7939	Extends the given component to be an upload drop area.
7940	The upload button state.
7941	Bean to be used in JSP scriptlet code that provides access to the upload functionality.
7942	The upload button.
7943	A enum for the upload state.
7944	Helper class for building a new CmsUploadRestrictionInfo object.
7945	Handles all RPC services related to the upload dialog.
7946	The upload types.
7947	A class which is executed in a new thread, so its able to detect when an upload process is frozen and sets an exception in order to be canceled.
7948	A table to temporarily store warnings that should be displayed for uploaded files.
7949	An URL name mapping entry.
7950	The user data app.
7951	The GUI form for the user data app.
7952	Dialog to edit the user data.
7953	Form Layout for user data.
7954	Configuration for user data requests.
7955	Enum representing the type of user data request.
7956	Impelemnts user data download links for the user data request feature.
7957	AS400 implementation of the user driver methods.
7958	DB2 implementation of the user driver methods.
7959	MS SQL implementation of the user driver methods.
7960	PostgreSql implementation of the user driver methods.
7961	Parameters for the user edit dialog.
7962	Provides the user export settings.
7963	Dialog to show user information and to switch to user session.
7964	User publish list entry.
7965	An enum used for indicating searchable columns.
7966	An enum used for indicating sort order.
7967	Enumeration class for workplace search result styles.
7968	A enum for the different upload variants.
7969	Bean for transferring user preference information between the client and the server.
7970	Table properties.
7971	GWT serializer for CmsUUID.
7972	Helper class for building option groups.
7973	Container property ids.
7974	A simple bean class which represents a validation request for a single form field.
7975	The result of a single field validation.
7976	Bean for Variations im image resources.
7977	A vertical menu styled like e menu bar sub menu or the context menu.
7978	Data holder for a base name and locale of a message bundle.
7979	Data class containing the parameters for a VFS-based resource bundle.
7980	DataSource wrapper for VFS resources, allows easy sending of VFS resources as email attachments.
7981	A bean which represents a resource in the VFS.
7982	A bean class containing both a path and a UUID which should be stored in an XML file value.
7983	Flag to control which visibility checks should be performed by CmsStandardVisibilityCheck.
7984	A bean which represents a user having visited a page.
7985	Low-level utility class used for waiting for an action performed by another thread.
7986	Describes errors that occur in the context of the OpenCms widgets.
7987	Utility methods for getting widget informations out of content definitions.
7988	Bean representing widget information.
7989	Makes window close events available on the server side.
7990	A bean which represents a possible workflow, containing an identifier, a user-readable name and a list of workflow actions.
7991	Work flow action information.
7992	Contains the data on which a workflow action should act (usually, a list of resources).
7993	Workplace mode preference configuration.
7994	Layout for workplace server configuration.
7995	Represents an user additional information block.
7996	Manages the configuration of the additional information of users.
7997	Contains the data of a single workplace view.
7998	XML node name constants.
7999	Enumeration of possible sequence types in a content definition.
8000	The acacia XML content editor.
8001	Comparison of two xml content elements.
8002	Type constants.
8003	The property visibility options.
8004	XML node name constants.
8005	Element Property json property constants.
8006	Represents the root of an XML content for a given locale.
8007	Represents a configured tab to be used in the XML content editor for better usability.
8008	Enum representing the type of the tree node.
8009	XML node name constants.
8010	The acacia XML content editor.
8011	Cache for XML sitemaps.
8012	Bundle with the keys of report messages
8013	The available OpenCms workplace icons.
8014	Interface for actions used within the ADE context.
8015	Special authorization handler for APIs using stateless authorization.
8016	Generates app launcher buttons.
8017	App category interface.
8018	Used to write app settings to the user.
8019	Represents a single option.
8020	A choice option, but with (multi-valued) attributes added.
8021	Class providing the privileged login action.
8022	Apps implementing this interface will be stored in the user session so returning to the app will be quicker and use less resources.
8023	Represents a filter category in the categorized select widget (not necessarily an OpenCms category).
8024	The Interface Option.
8025	AutoBean factory used to create the data for the categorized select widget.
8026	Rendition provider interface used to generate alternative renditions for resources.
8027	AutoBean interface that represents the configuration for the client-side CodeMirror editor widget.
8028	Interface for complex widgets which are used in the Acacia editor to render whole nested contents.
8029	Interface for a single named configuration object that can either be merged with other configuration objects or disable a configuration object with the same name.
8030	Used for classes that are configurable using <param name="name">value</param> in the XML configuration.
8031	Server to client RPC communication.
8032	The context menu server RPC.
8033	Convenience interface to provide core server-side data to the client.
8034	Interface used to inject custom link handling behavior into HTML/link content fields.
8035	Enum representing a direction in time (past / future).
8036	Enum representing a time unit.
8037	This interface defines a factory to create runtime info objects.
8038	The available context types.
8039	Provides a method for selecting an individual jsp dialog.
8040	Extended attributes for editable data generated by e.g.
8041	Server side handler interface for button presses in a multivalue widget group row's button bar.
8042	Interface for the server side RPC for the CmsEditableGroupButtons component.
8043	Interface for components used as editable group rows.
8044	Provides methods to determine the CSS style sheet URI for the editors based on the edited resource path.
8045	Provides a method for selecting an individual file editor.
8046	Action context that allows direct editing of single properties.
8047	File table inline edit handler.
8048	Interface for tables which support a filter function.
8049	Displays a sub menu in the app launch pad.
8050	Interface representing the data from a field of a submitted form.
8051	Gallery mode constants.
8052	Tab ids used for tab configuration.
8053	Image parameteres.
8054	Sorting parameters.
8055	Common interface for accessing sitemap/VFS entry beans as tree nodes.
8056	Enables a dynamic configuration of values for the A_CmsGalleryWidget.
8057	This is interface is intended to be used in combination with the CmsGlobalConfigurationCacheEventHandler class.
8058	Client-to-server rpc interface for the GWT dialog extension.
8059	Interface for elements with icons.
8060	Interface used to check menu item visibility for context menus.
8061	A historical version of a resource in the OpenCms VFS resource history.
8062	HTML converters can be used to clean up HTML code and/or pretty print the code.
8063	Abstracts the index writer implementation for the most important index manipulation operations.
8064	Interface for individual JSON handlers.
8065	Renders a single-locale content tree as JSON.
8066	This interface supports the basic functionality for the device detection.
8067	AutoBean interface for the data injected into the page by the cms:enable-list-add tag.
8068	Provides information about the current state of the locale comparison editor.
8069	A locale handler returns the locale name to use for the given request context.
8070	Client RPC interface for opening a login target.
8071	Describes a macro mapper, which is used to efficiently resolve macros in the form of %(key) or ${key} in an input String.
8072	Interface for the newsletter.
8073	Every I_CmsNewsletter contains a list of I_CmsNewsletterContent objects.
8074	Interface for recipients of I_CmsNewsletter objects.
8075	Password handler implementing this interface allow the password security to be evaluated.
8076	Password security levels.
8077	Permission handler interface.
8078	Enum for the lock check mode.
8079	Synchronous service interface for the upload property dialog.
8080	Asynchronous service interface for the upload property dialog.
8081	Interface for dynamic CMIS properties.
8082	Client-to-server rpc interface for the GWT dialog extension.
8083	'Formats' a ResourceMap containing resources for publishing by creating a list of CmsPublishResource beans with the appropriate status informations to display.
8084	Remote interface for executing shell commands.
8085	Interface for Apps, which run an import thread for files.
8086	Identifies a class that can be used as a report thread .
8087	Describes an OpenCms request handler.
8088	Enumeration for all attributes of a resource.
8089	Increases the visibility of some key methods of a ResourceBundle.
8090	This interface checks the requested resource from the OpenCms request context and returns it to the calling method, which will usually be OpenCms.initResource(CmsObject, String, HttpServletRequest, HttpServletResponse).
8091	Resource formatter.
8092	Interface of the "Did you mean ...?" configuration for the JSP search form.
8093	Sort orders available for Solr facet entries.
8094	The interface of a single query facet item.
8095	The interface a sort configuration must implement.
8096	The interface a sort option configuration must implement.
8097	Interface to get controllers state and configuration - version for common search configurations.
8098	Interface the "Did you mean ...?" controller must implement.
8099	Interface to get controllers state and configuration - version for field facets.
8100	Interface to get controllers state and configuration - version for the query facet.
8101	Interface to get controllers state and configuration - version for field facets.
8102	Interface the controller for all field facets must implement - just allow access to the single controllers.
8103	Interface the controller for all range facets must implement - just allow access to the single controllers.
8104	Interface to get controllers state and configuration - version for the Geo filter.
8105	Interface to get controllers state and configuration - version for pagination.
8106	Interface to get controllers state and configuration - version for common search configurations.
8107	Class for keeping the state of the spellcheck search options.
8108	Interface for the Geo filter state.
8109	Interface for pagination states.
8110	Interface for sorting states.
8111	Synchronous interface for the serial date service.
8112	Asynchronous interface for the serial date service.
8113	Different types of serial dates.
8114	Different types of conditions how serial dates can end.
8115	Months as enumeration.
8116	Type of the series.
8117	Possible weeks of a month.
8118	Provides scriptable access to a class from the CmsShell.
8119	Interface for generic context menu entris.
8120	Interface for the client-to-server rpc calls used by the sitemap extension.
8121	The post document processor can be used in order to manipulate search results after the OpenCms permission check has been done.
8122	Interface for plugins that need to be called during startup and shutdown.
8123	Provides a method for scrubbing files from the export folder that might have been changed, so that the export is newly created after the next request to the resource.
8124	Defines methods which can be pluged into the syncronisation process between VFS and "real" FS.
8125	Interfaces for classes that encrypt text as text.
8126	Interface for toggable tables.
8127	Parameters for the unlock service.
8128	Handles all RPC services related to the upload dialog.
8129	Describes the different places from which the user data domain plugins can be used.
8130	Workplace action interface.
8131	Common interface for all workplace apps.
8132	Interface for configurations which should run custom logic when the configuration is written back by OpenCms.
8133	Provides access to a I_CmsXmlDocument document that was previously loaded by a parent tag.
8134	The available display types for element widgets.
8135	Settings for a JSON renderer.
8136	The available mapping types.
8137	This class represents a location in an XML content for a specific locale.
8138	The available search types for element searchsetting.
8139	Interface representing an XML content location which corresponds to an actual content value.
8140	This provides static methods to convert an XML text into a JSONObject, and to convert a JSONObject into an XML text using the JsonML transform.
8141	JSONObject.NULL is equivalent to the value that JavaScript calls null, whilst Java's null is equivalent to the value that JavaScript calls undefined.
8142	Debugging information about currently running requests.
8143	PrintfFormat allows the formatting of an array of objects embedded within a string.
8144	The XMLTokener extends the JSONTokener to provide additional methods for the parsing of XML texts.
8145	The AuthenticationType, either CONTAINER or APPLICATION
8146	An encapsulation of the evaluation of the body of an action so it is available to a tag handler.
8147	The BodyTag interface extends IterationTag by defining additional methods that let a tag handler manipulate the content of evaluating its body.
8148	Contains information about an error, for error pages.
8149	Information for a function in a Tag Library.
8150	Stores application-scoped information for the JSP container.
8151	Encapsulates a portion of JSP code in an object that can be invoked as many times as needed.
8152	The JspPage interface describes the generic interaction that a JSP Page Implementation class must satisfy; pages that use the HTTP protocol are described by the HttpJspPage interface.
8153	The interface of a classic tag handler that does not want to manipulate its body.
8154	Wraps any SimpleTag and exposes it using a Tag interface.
8155	The (translation-time only) attribute/value information for a tag instance.
8156	Optional class provided by the tag library author to describe additional translation-time information not described in the TLD.
8157	Tag information for a tag file in a Tag Library; This class is instantiated from the Tag Library Descriptor file (TLD) and is available only at translation time.
8158	Translation-time validator class for a JSP page.
8159	Variable information for a tag in a Tag Library; This class is instantiated from the Tag Library Descriptor file (TLD) and is available only at translation time.
8160	The auxiliary interface of a Tag, IterationTag or BodyTag tag handler that wants additional hooks for managing resources.
8161	A validation message from either TagLibraryValidator or TagExtraInfo.
8162	Information on the scripting variables that are created/modified by a tag (at run-time).
8163	Absolute path driver URL provider.
8164	Apollo driver URL provider.
8165	Batch execution unit.
8166	Batch executor for Statement.
8167	Classpath driver URL provider.
8168	JDBC context.
8169	Method invocation recorder.
8170	ShardingSphere driver URL provider.
8171	Abstract column class for the alias cell table columns.
8172	Base class for clipboard tabs.
8173	On hover intent handler.
8174	Dialog to select a resource model for a new resource.
8175	The create new gallery folder dialog.
8176	Abstract base class for pattern panel controllers.
8177	Basic preview detail tab layout.
8178	An abstract class for widgets which represent options for select boxes.
8179	Abstract button class implementing common methods of I_CmsToolbarButton for container-page tool-bar buttons.
8180	Abstract class which implements the common part of all toolbar handler functionality.
8181	Use this widget factory to use stand alone widgets.
8182	Represents information about which field in the property editor dialog is active.
8183	The selection option.
8184	Sitemap context menu add entry to navigation.
8185	Factory to generate basic input widget.
8186	Factory to generate basic input widget.
8187	Submenu for advanced options.
8188	The alias editor.
8189	Helper class used to perform an action when multiple asynchronous tasks have finished.
8190	Widget factory for creating attribute select widgets.
8191	Sitemap context menu availability entry.
8192	The binary resource preview factory.
8193	A coordinate system transform for translating between coordinates relative to a rectangle and the coordinates relative to a second rectangle with the first rectangle fit into the second one, either by just centering if possible or by centering and scaling it.
8194	Scale mode.
8195	A timer which sends an RPC call regularly to keep the session alive and receive workplace broadcasts.
8196	The context menu entry for "bumping" a detail page, i.e.
8197	Takes care of the burst of the same event, by skipping the first ones and executing only the last one.
8198	Factory to generate basic input widget.
8199	A factory for creating CmsCategorizedSelectWidget objects.
8200	Dialog to display and change resource categories.
8201	Sorting parameters.
8202	Widget representing a category in the category mode of the sitemap editor.
8203	Factory to generate basic input widget.
8204	Various static utility methods for dealing with cell tables.
8205	Menu entry for changing categories.
8206	Widget used to change the current user's password.
8207	The various style options for the checkable date panel.
8208	Factory to generate basic input widget.
8209	A menu entry widget for selecting choices for complex choice values.
8210	Event handler to toggle the I_CmsLayoutBundle.I_CmsStateCss.cmsHovering() class on mouse out/over.
8211	Client side button bar widget for multivalue widget groups.
8212	Class used to display a client variant of a template context.
8213	Helper class that asynchronously loads all the necessary scripts and stylesheets for the CodeMirror editor widget, and executes a callback at the end.
8214	Simple toggle button for the CodeMirror toolbar.
8215	Widget factory for the CodeMirror editor widget.
8216	Factory to generate basic input widget.
8217	Factory to generate basic input widget.
8218	A coordinate system transform represented as a composition of multiple other transforms.
8219	Provides a confirmation dialog with ok and cancel button.
8220	Interface with message string constants.
8221	Helper class for resizing containers in the drag/drop process when an element is dropped into them that is of lower height than the empty container HTML.
8222	Enum which is used to control how elements are removed from the page.
8223	Visitor interface used to process the current container content on the page.
8224	Enum for the event type.
8225	Additional options for the editor dialog.
8226	The result item context menu button.
8227	An entry in a CmsContextMenu.
8228	Context menu entry for copying a model page to be used as a model group page.
8229	The create new gallery folder dialog.
8230	Context menu entry for copying a model page.
8231	Menu entry for the "copy page" command.
8232	A list item widget class which also contains a resource type info bean, for use in creating new sitemap entries.
8233	The types of creatable sitemap entries.
8234	Bean containing the title and name of a category.
8235	The create new gallery folder dialog.
8236	Sitemap context menu create gallery entry.
8237	UiBinder widget for the create-mode selection dialog content.
8238	The client-side widget for data view items.
8239	Represents a data view value to be read from or written to the editor by the data view widget.
8240	Class responsible for reading data view values from the editor, and writing them back to the editor.
8241	Custom event type for CmsDateBox changes.
8242	The standard formats.
8243	A basic debug log, to print messages into the client window.
8244	The default string model implementation.
8245	Context menu entry for deleting a category.
8246	Sitemap context menu delete entry.
8247	Sitemap context menu delete entry.
8248	A dialog which informs the user that deleting a resource will break links from other resources.
8249	Widget factory for the dependent select widget.
8250	Context menu handler to be used within overlay dialogs.
8251	Sitemap context menu disable model page entry.
8252	Widget factory for the display type select widget.
8253	Factory to generate basic input widget.
8254	The animation types.
8255	Scroll direction enumeration.
8256	The allowed drag and drop orientation.
8257	HTML tag attributes.
8258	Helper class to encapsulate an attribute/value pair.
8259	CSS Colors.
8260	HTML entities.
8261	Form methods.
8262	CSS Properties.
8263	CSS Property values.
8264	HTML Tags.
8265	Enumeration of link/form targets.
8266	Dialog for selecting between copying and reusing an element dropped from the clipboard into the page.
8267	Helper functions to deal with editable data.
8268	Sitemap context menu edit entry.
8269	Context menu entry for editing a model page.
8270	The selection option.
8271	Sitemap context menu new entry.
8272	An optional container element button.
8273	The model group options.
8274	Widget containing a select box for selecting formatters and a help icon.
8275	Exportable wrapper class for the VIE instance.
8276	Helper class for displaying errors.
8277	Value change event with additional data.
8278	Client-side implementation for the ExternalLayout addon.
8279	The selection option.
8280	Content of the tool-bar menu favorite tab.
8281	Form field panel which puts its form fields into a field set, and also displays a resource info box.
8282	Data needed to create a tooltip.
8283	Widget which displays the focal point for an image.
8284	Handles manipulation of the focal point in the gallery dialog.
8285	An extension of CmsTextBox that keeps information about its focus state.
8286	Native preview handler that focuses the on scroll wheel mouse event on the given scroll panel.
8287	Widget factory for the dependent select widget.
8288	Factory class to create gallery dialog with or without parameter.
8289	Sitemap context menu open in explorer entry.
8290	Sitemap context menu got page entry.
8291	Sitemap context menu goto sub sitemap entry.
8292	Sitemap context menu hide in navigation entry.
8293	Enumeration of available border colours.
8294	Sitemap context menu button.
8295	Sitemap hoverbar "go to page" button.
8296	Button used to create new model pages.
8297	Factory to generate basic input widget.
8298	Advanced image tag properties form, use in editor mode only.
8299	Advanced image tag properties tab, use in editor mode only.
8300	Simple image tag properties tab, use in editor mode only.
8301	The widget to display the format information of the selected image.
8302	Widget for displaying image information.
8303	The image resource preview factory.
8304	Enumeration of image tag attribute names.
8305	A widget used for displaying the results of an alias import operation.
8306	The CSS classes used for this widget.
8307	Form field panel for the sitemap entry editor in the navigation mode.
8308	This class extends the basic list item widget with the ability to load additional info items asnchronously via RPC.
8309	The info option.
8310	The selection option.
8311	Tree item for lazily loaded list trees.
8312	Enum for indicating the load state of a tree item.
8313	Factory to generate basic input widget.
8314	Additional info item HTML.
8315	Background color values.
8316	A utility class for partitioning a list of items (each of which has a given size) into one or more batches of consecutive items such that each batch except the last one consists of just enough items to make the total sum of item sizes in the batch greater or equal than a given parameter.
8317	Tab widget to display a CmsList.
8318	Factory to generate basic input widget.
8319	Factory to generate a location picker widget.
8320	Sitemap context menu show lock report entry.
8321	Handles client side logging.
8322	GWT wrapper for programmatic media query checking.
8323	Singleton class that evaluates, and keeps track of changes for, a fixed set of media queries and sets CSS classes on the body element depending on which of the media queries match.
8324	Sitemap context menu merge entry.
8325	Displays a message text with an icon in front.
8326	The selection option.
8327	Factory to generate basic input widget.
8328	Implements a select cell that can contain multiple entries.
8329	Factory to generate basic input widget.
8330	Factory to generate basic input widget.
8331	Sitemap entry editor class for the navigation mode.
8332	Sitemap context menu new entry.
8333	Notification Mode.
8334	Notification Type.
8335	Widget for a single notification message.
8336	The toolbar notification widget.
8337	Sitemap context menu create gallery entry.
8338	Singleton class that manages showing / hiding of toolbars in touch-only mode in the page editor.
8339	Sitemap context menu goto parent sitemap entry.
8340	Factory to generate basic input widget.
8341	Controller for the daily pattern.
8342	Controller for the individual pattern panel.
8343	Controller for the monthly pattern panel.
8344	Controller for the weekly pattern panel.
8345	The weekly pattern panel.
8346	Controller for the yearly pattern panel.
8347	Handles fragment changes by closing the active popups.
8348	Position area.
8349	Factory to generate basic input widget.
8350	The widget to display the properties of the selected resource.
8351	A combo box class for the property dialog.
8352	Widget for defining new properties.
8353	The widget to display a simple form with a label and an text box.
8354	This is just a select box with some special text messages for use in the property dialog.
8355	A confirmation message dialog which can be displayed after the publish dialog has been closed.
8356	A type which represents the state of a publish action.
8357	A bean containing statistics about the states of publish items in the publish dialog.
8358	The enum for the publish item state.
8359	Helper class for periodically checking a set of elements for publish locks and then reloading the corresponding elements when they are no longer locked.
8360	Data with which to update a check box.
8361	The button HTML generator templates.
8362	The quick launch handler interface.
8363	Factory to generate basic input widget.
8364	Content of the tool-bar menu recent tab.
8365	Sitemap context menu update sitemap entry.
8366	An enum specifying whose values specify whether an entry or its parent need to be reloaded.
8367	Dialog for asking the user whether elements which were removed from the container page should be deleted.
8368	Class with message accessors for the UiBinder.
8369	Sitemap context menu remove from navigation entry.
8370	The selection option.
8371	Message accessor class for the Rename dialog.
8372	The dialog contents of the 'Rename' dialog.
8373	The replace resource context menu entry.
8374	Keeps track of currently running requests for the purpose of enabling or disabling a waiting indicator.
8375	Confirm dialog with a resource info box.
8376	A single information item for the resource information dialog.
8377	Sitemap context menu resource info entry.
8378	A widget used to display various resource information to a user.
8379	Widget which shows which contents refer to a resource.
8380	Enum for the display mode.
8381	Utility class for the publish dialog.
8382	The content widget for the restore dialog.
8383	The result list item widget.
8384	Scroll handler class which loads more items in the front of the search result list when the user scrolls to the top.
8385	Enum representing different options for the results tab.
8386	Table class used for editing rewrite aliases.
8387	Utility class for deserializing prefetched RPC data.
8388	A panel displaying search parameters associated with a gallery tab.
8389	The parameter types of this tab.
8390	Factory to generate basic input widget.
8391	Text input field with value select opener button and value fader for overflowing values.
8392	Factory to generate basic input widget.
8393	The context menu entry used for opening the "alias editor" dialog.
8394	Client-side implementation of I_CmsSerialDateValue.
8395	Factory for the serial date widget.
8396	Context menu entry for copying a model page.
8397	The selection option.
8398	Sitemap context menu show in navigation entry.
8399	Provides a method to open the workplace.
8400	A panel containing two sub-panels next to each other , one for 'decorations' (check boxes, etc.) and one containing a main widget.
8401	A simple form field container widget.
8402	The sitemap entry editor class for the VFS mode.
8403	Sitemap change event.
8404	Sitemap load event.
8405	Factory to generate basic input widget.
8406	This is a helper class for changing GWT UIObjects' styles between a set of given values.
8407	Sitemap context menu create sub sitemap entry.
8408	Factory to generate basic input widget.
8409	Sitemap toolbar clipboard button.
8410	The context tool-bar menu button.
8411	The edit button holding all edit related methods.
8412	The toolbar button for the favorite dialog.
8413	The gallery tool-bar menu.
8414	Option bar button for displaying resource information.
8415	Button to open the dialog for adding list elements
8416	Button to open the list manager for list configuration contents.
8417	The create new gallery menu.
8418	A popup which can be displayed below buttons in a toolbar.
8419	The publish button holding all publish related methods.
8420	A simplified publish button for the Toolbar direct edit provider.
8421	The remove button holding all remove related methods.
8422	The reset button holding all related methods.
8423	The save button holding all related methods.
8424	The button holding all selection related methods.
8425	The selection button for the direct edit provider.
8426	The properties button holding all properties related methods.
8427	The sitemap button holding all related methods.
8428	Simple translation by x/y offset.
8429	The possible check box states.
8430	Widget used to wrap and manage the state of forms for which the form editing API is used.
8431	The change types.
8432	Container which contains at most one I_CmsUniqueActiveItem.
8433	Upload dialog entry class.
8434	Provides the upload dialog for file API support.
8435	Class with static accessor methods for text messages.
8436	Provides the upload progress information.
8437	A property editor for the upload property dialog.
8438	Dialog used for changing the user settings.
8439	Form panel for editing user settings.
8440	This is a helper class for scheduling form validations.
8441	File widget factory.
8442	Factory to generate basic input widget.
8443	UI widget overriding some functionality from the Vaadin implementation.
8444	Adds constants / static methods for accessing the width class breakpoints.
8445	Helper class to retrieve the computed style of an element.
8446	Handles the clicks on the 'Yes', 'No' and 'Cancel' buttons of the dialog.
8447	Handles actions.
8448	Available button colors.
8449	Available button styles.
8450	CSS style variants.
8451	CSS bundle for GWT cell tables used from ADE.
8452	CSS resource interface for the classic Direct Edit Buttons.
8453	Drag and drop drag handle.
8454	Common interface for enabling/disabling different types of toolbars when using the touch-only mode of the page editor.
8455	Interface to expose the embedded frame methods as Javascript methods so they can be called from a different GWT context.
8456	Interface used to export callback methods from CmsEmbeddedDialogHandler as JavaScript methods.
8457	CSS resource for the CmsFloatDecoratedPanel class.
8458	An enum which represents the validation status of a field.
8459	The interface for objects which should be notified when a CmsForm is successfully submitted.
8460	Field type constants.
8461	Common interface for option buttons within the inheritance container editor.
8462	The display directions.
8463	Interface for widgets which can contain a "ghost value".
8464	Interface for classes which implement the actions that can be triggered from the history dialog.
8465	An inline form parent widget.
8466	Handles updates on the HTML required due to entity data changes during inline editing.
8467	Layout bundle.
8468	Bundle for CSS resources.
8469	Content editor CSS resources bundle.
8470	Resource bundle to access CSS and image resources.
8471	Resource bundle to access CSS and image resources.
8472	Resource bundle to access CSS and image resources.
8473	The button bar CSS.
8474	The context menu CSS classes.
8475	The category CSS.
8476	THe color selector CSS classes.
8477	The content editor dialog CSS.
8478	The context menu CSS classes.
8479	The context menu item CSS classes.
8480	Cropping dialog CSS.
8481	DateBox css.
8482	The drag and drop CSS used by the base module.
8483	The drag and drop CSS classes used also within the container-page CSS.
8484	The error dialog CSS classes.
8485	The context menu CSS classes.
8486	The base gallery field CSS.
8487	The global widget CSS class.
8488	Group container editor CSS.
8489	Header CSS.
8490	The advanced image editor form CSS.
8491	The image editor form CSS.
8492	CSS for the list item creation dialog.
8493	Location picker CSS.
8494	Base location picker CSS.
8495	The menu button CSS.
8496	The opener hover CSS class.
8497	Basic popup CSS classes.
8498	The context menu CSS classes.
8499	The context menu CSS classes.
8500	The scroll bar CSS classes.
8501	The scroll bar CSS classes.
8502	The select area CSS.
8503	The single line list item CSS.
8504	General CSS.
8505	The XML content editor CSS.
8506	Provides a UI list item.
8507	Provides methods for nested drop targets.
8508	Notification widget, most of the work is done on the container element.
8509	Extension of I_CmsSerialDateValue that makes value changes observable.
8510	Property editor CSS.
8511	The properties tab handler of the preview dialog.
8512	The layout bundle used for the publish module.
8513	Resource bundle to access CSS and image resources.
8514	Clipboard CSS.
8515	Root CSS.
8516	The interface for a string model.
8517	Interface for activatable toolbar widgets.
8518	Resource bundle to access CSS and image resources for tool-bar buttons.
8519	The button CSS.
8520	An abstract interface used to coordinate toolbar buttons with a toolbar.
8521	Interface for (invertible) coordinate system transformations.
8522	The upload button interface.
8523	Handler interface for upload buttons which is mainly used to perform actions when the selected file in a file input has been changed.
8524	Common upload dialog interface to be used with the I_CmsUploader.
8525	This is the interface which an I_CmsValidator object uses to either synchronously report the result of a validation or to request an asynchronous validation from the server.
8526	This interface is used to receive notifications about the status of the validation.
8527	Generates an editing widget with the given configuration.
8528	CSS resource bundle for the acacia editor widgets.
8529	JS interop class for native ResizeObserver.
8530	A widget factory for native java script widgets.
