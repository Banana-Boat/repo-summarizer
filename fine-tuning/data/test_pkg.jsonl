{"index": 3122, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Defines the contract for implementations which know how to scope the notion of a current session.\nInterface CurrentSessionContext;\n// A callback registered with the SessionFactory that is responsible for resolving the current tenant identifier for use with CurrentSessionContext and SessionFactory.getCurrentSession()\nInterface CurrentTenantIdentifierResolver;\n// Base support for CurrentSessionContext implementors.\nClass AbstractCurrentSessionContext;\n", "des": "SPI level contracts around \"current session\" support."}
{"index": 3123, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package lock\n\n// A strategy abstraction for how locks are obtained in the underlying database.\nInterface LockingStrategy;\n// Base LockingStrategy implementation to support implementations based on issuing SQL SELECT statements\nClass AbstractSelectLockingStrategy;\n// An optimistic locking strategy that forces an increment of the version (after verifying that version hasn't changed).\nClass OptimisticForceIncrementLockingStrategy;\n", "des": "Support for Dialect-specific locking strategies"}
{"index": 3124, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package pagination\n\n// Contract defining dialect-specific LIMIT clause handling.\nInterface LimitHandler;\n// Default implementation of LimitHandler interface.\nClass AbstractLimitHandler;\n// Limit handler for CUBRID\nClass CUBRIDLimitHandler;\n// \nClass FirstLimitHandler;\n// \nClass Informix10LimitHandler;\n// \nClass LegacyFirstLimitHandler;\n// Limit handler that delegates all operations to the underlying dialect.\nClass LegacyLimitHandler;\n", "des": "Support for Dialect-specific pagination strategies"}
{"index": 3125, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package unique\n\n// Dialect-level delegate in charge of applying \"uniqueness\" to a column.\nInterface UniqueDelegate;\n// DB2 does not allow unique constraints on nullable columns.\nClass DB2UniqueDelegate;\n// The default UniqueDelegate implementation for most dialects.\nClass DefaultUniqueDelegate;\n// Informix requires the constraint name to come last on the alter table.\nClass InformixUniqueDelegate;\n// \nClass MySQLUniqueDelegate;\n", "des": "Support for Dialect-specific unique constraint definition"}
{"index": 3126, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Provides access to the initial user-provided configuration values.\nInterface ConfigurationService;\n// Simple conversion contract for converting an untyped object to a specified type.\nInterface ConfigurationService.Converter<T>;\n// Standard set of setting converters\nClass StandardConverters;\n", "des": "SPI Package for the configuration service."}
{"index": 3127, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package jdbc\n\n// Wraps a binary stream to also provide the length which is needed when binding.\nInterface BinaryStream;\n// Marker interface for non-contextually created Blob instances..\nInterface BlobImplementer;\n// Wraps a character stream (reader) to also provide the length (number of characters) which is needed when binding.\nInterface CharacterStream;\n// Marker interface for non-contextually created Clob instances..\nInterface ClobImplementer;\n", "des": "Support for various aspects of JDBC interaction"}
{"index": 3128, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Conceptually models a batch.\nInterface Batch;\n// A builder for Batch instances\nInterface BatchBuilder;\n// Unique key for batch identification.\nInterface BatchKey;\n// An observer contract for batch events.\nInterface BatchObserver;\n", "des": "Defines contracts for JDBC batching support."}
{"index": 3129, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// A contract for obtaining JDBC connections.\nInterface ConnectionProvider;\n// Provides centralized access to JDBC connections.\nInterface JdbcConnectionAccess;\n// A specialized Connection provider contract used when the application is using multi-tenancy support requiring tenant aware connections.\nInterface MultiTenantConnectionProvider;\n// Basic support for implementations of MultiTenantConnectionProvider based on DataSources.\nClass AbstractDataSourceBasedMultiTenantConnectionProviderImpl;\n", "des": "Defines contracts for accessing JDBC Connections"}
{"index": 3130, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Contract for JDBC REF_CURSOR support.\nInterface RefCursorSupport;\n", "des": "Defines contracts for JDBC REF_CURSOR support."}
{"index": 3131, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// A factory for generating Dialect instances.\nInterface DialectFactory;\n// Exposes information about the database and JDBC driver that can be used in resolving the appropriate Dialect to use.\nInterface DialectResolutionInfo;\n// Contract for the source of DialectResolutionInfo.\nInterface DialectResolutionInfoSource;\n// Contract for determining the Dialect to use based on information about the database / driver.\nInterface DialectResolver;\n", "des": "Contracts supporting Dialect resolution (from JDBC metadata) and Dialect building."}
{"index": 3132, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// An observer of logical connection events.\nInterface ConnectionObserver;\n// Specialized JdbcWrapper contract for wrapped objects that can additioanlly be invalidated\nInterface InvalidatableWrapper<T>;\n// Coordinates JDBC-related activities.\nInterface JdbcCoordinator;\n// Contract for services around JDBC operations.\nInterface JdbcServices;\n// Generic contract for wrapped JDBC objects.\nInterface JdbcWrapper<T>;\n", "des": "SPI contracts for supporting various aspects of JDBC interaction"}
{"index": 3133, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package jndi\n\n// An exception indicating trouble accessing JNDI\nClass JndiException;\n// Indicates a problem with a given JNDI name being deemed as not valid.\nClass JndiNameException;\n", "des": "Support for JNDI within Hibernate"}
{"index": 3134, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Service providing simplified access to JNDI related features needed by Hibernate.\nInterface JndiService;\n", "des": "The SPI contracts for Hibernate JNDI support"}
{"index": 3135, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package profile\n\n// Models the association of a given fetch.\nClass Association;\n// Models an individual fetch within a profile.\nClass Fetch;\n// A 'fetch profile' allows a user to dynamically modify the fetching strategy used for particular associations at runtime, whereas that information was historically only statically defined in the metadata.\nClass FetchProfile;\n// The type or style of fetch.\nEnum Fetch.Style;\n", "des": "Models the fetch profiles defined by the application"}
{"index": 3136, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Service contract for dealing with native queries.\nInterface NativeQueryInterpreter;\n// Maybe better named a Journaler.\nInterface ParameterParser.Recognizer;\n// \nInterface QueryPlanCache.QueryPlanCreator;\n// NOTE: Consider this contract (and its sub-contracts) as incubating as we transition to 6.0 and SQM\nClass AbstractParameterDescriptor;\n// Encapsulates a JPA EntityGraph provided through a JPQL query hint.\nClass EntityGraphQueryHint;\n", "des": "Defines support for query plans and stored metadata about queries"}
{"index": 3137, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package graph\n\n// Hibernate extension to the JPA entity-graph AttributeNode contract.\nInterface AttributeNode<J>;\n// A container for AttributeNodes.\nInterface Graph<J>;\n// Commonality between AttributeNode and Graph.\nInterface GraphNode<J>;\n// Hibernate extension to the JPA EntityGraph contract.\nInterface RootGraph<J>;\n// Hibernate extension to the JPA entity-graph Subgraph contract.\nInterface SubGraph<J>;\n// A collection of EntityGraph utilities.\nClass EntityGraphs;\n", "des": "Hibernate's (extended) support for JPA's entity graphs"}
{"index": 3138, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package id\n\n// \nInterface AbstractMultiTableBulkIdStrategyImpl.PreparationContext;\n// \nInterface IdTableInfo;\n// \nInterface IdTableSupport;\n// Generalized strategy contract for handling multi-table bulk HQL operations.\nInterface MultiTableBulkIdStrategy;\n// Handler for dealing with multi-table HQL bulk delete statements.\nInterface MultiTableBulkIdStrategy.DeleteHandler;\n// Handler for dealing with multi-table HQL bulk update statements.\nInterface MultiTableBulkIdStrategy.UpdateHandler;\n", "des": "Support for multi-table update and delete statements via id-tables."}
{"index": 3139, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package persistent\n\n// \nClass DeleteHandlerImpl;\n// \nClass Helper;\n// This is a strategy that mimics temporary tables for databases which do not support temporary tables.\nClass PersistentTableBulkIdStrategy;\n// \nClass UpdateHandlerImpl;\n", "des": "Package contains an implementation of MultiTableBulkIdStrategy based on the use of a persistent (ANSI SQL term) table to hold id values."}
{"index": 3140, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package enhanced\n\n// Contract for providing callback access to a DatabaseStructure, typically from the Optimizer.\nInterface AccessCallback;\n// Encapsulates definition of the underlying data structure backing a sequence-style generator.\nInterface DatabaseStructure;\n// Marker interface for optimizer which wishes to know the user-specified initial value.\nInterface InitialValueAwareOptimizer;\n// Performs optimization on an optimizable identifier generator.\nInterface Optimizer;\n", "des": "Enhanced/improved versions of table and sequence based identifier generators targeting portability and unified configuration"}
{"index": 3141, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Represents a JPA event callback (the method).\nInterface Callback;\n// \nInterface CallbackBuilder;\n// \nInterface CallbackBuilder.CallbackRegistrar;\n// \nInterface CallbackDefinition;\n// \nInterface CallbackRegistrar;\n// Registry of Callbacks by entity and type\nInterface CallbackRegistry;\n// Contract for injecting the registry of Callbacks into event listeners.\nInterface CallbackRegistryConsumer;\n// \nEnum CallbackType;\n", "des": "The SPI contracts for supporting JPA lifecycle callbacks."}
{"index": 3142, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package plan\n\n// Base class for LoadPlan-based BatchingEntityLoaderBuilder implementations.\nClass AbstractBatchingEntityLoaderBuilder;\n// A UniqueEntityLoader implementation based on using LoadPlans\nClass AbstractLoadPlanBasedEntityLoader;\n// The base contract for UniqueEntityLoader implementations capable of performing batch-fetch loading of entities using multiple primary key values in the SQL WHERE clause.\nClass BatchingEntityLoader;\n", "des": "Support for entity loaders built on top of the org.hibernate.loader.plan API to apply entity-graphs"}
{"index": 3143, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Describes a collection query space that allows adding joins with other query spaces; used while building a CollectionQuerySpace.\nInterface ExpandingCollectionQuerySpace;\n// Describes a composite query space that allows adding joins with other query spaces; used while building a CompositeQuerySpace.\nInterface ExpandingCompositeQuerySpace;\n", "des": "Defines the SPI for building a metamodel-driven LoadPlan"}
{"index": 3144, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// The context for named parameters.\nInterface NamedParameterContext;\n// Provides values for all options that impact the built query.\nInterface QueryBuildingParameters;\n", "des": "Defines the SPI for obtaining values for options that impact the load query."}
{"index": 3145, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Provides aliases that are used by load queries and ResultSet processors.\nInterface AliasResolutionContext;\n// \nInterface CollectionReferenceAliases;\n// Aggregates the alias/suffix information in relation to an EntityReference todo : add a contract (interface) that can be shared by entity and collection alias info objects as lhs/rhs of a join ?\nInterface EntityReferenceAliases;\n// \nInterface LoadQueryDetails;\n// \nInterface LockModeResolver;\n", "des": "Defines the SPI for the load query generated for the LoadPlan and the ResultSet processor."}
{"index": 3146, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Models the requested fetching of an \"any\" attribute.\nInterface AnyAttributeFetch;\n// Models a Fetch that is specifically for an attribute.\nInterface AttributeFetch;\n// Represents the circular side of a bi-directional entity association.\nInterface BidirectionalEntityReference;\n// Models the requested fetching of a persistent collection attribute.\nInterface CollectionAttributeFetch;\n// A collection element which is a FetchSource.\nInterface CollectionFetchableElement;\n", "des": "Defines the SPI for the building blocks that make up a LoadPlan."}
{"index": 3147, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// The contract for getting value for a persistent property from its container/owner\nInterface Getter;\n// Describes access to a particular persistent property in terms of getting and setting values.\nInterface PropertyAccess;\n// Describes a strategy for persistent property access (field, JavaBean-style property, etc).\nInterface PropertyAccessStrategy;\n// Contract for resolving the PropertyAccessStrategy to use.\nInterface PropertyAccessStrategyResolver;\n", "des": "Defines strategies for accessing the persistent properties of an entity or composite."}
{"index": 3148, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package transaction\n\n// Wraps an exception thrown from a \"local synchronization\" (one registered in the SynchronizationRegistry).\nClass LocalSynchronizationException;\n// Indicates an attempt to register a null synchronization.\nClass NullSynchronizationException;\n// Indicates a call to TransactionCoordinator.explicitJoin() that requires an active transaction where there currently is none.\nClass TransactionRequiredForJoinException;\n", "des": "Defines the resource-level transaction capabilities of Hibernate, which revolves around the TransactionCoordinator contract."}
{"index": 3149, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Provides access to a Connection that is isolated from any \"current transaction\" with the designed purpose of performing DDL commands\nInterface DdlTransactionIsolator;\n// Manages a registry of (local) JTA Synchronization instances\nInterface SynchronizationRegistry;\n// SPI contract for SynchronizationRegistry implementors.\nInterface SynchronizationRegistryImplementor;\n// Models the coordination of all transaction related flows.\nInterface TransactionCoordinator;\n", "des": "Extended SPI contracts for the resource-level transaction capabilities of Hibernate."}
{"index": 3150, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package converter\n\n// The standard approach for defining a MutabilityPlan for converted (AttributeConverter) values is to always assume that they are immutable to make sure that dirty checking, deep copying and second-level caching all work properly no matter what.\nClass AttributeConverterMutabilityPlanImpl<T>;\n// Adapter for incorporating JPA AttributeConverter handling into the SqlTypeDescriptor contract.\nClass AttributeConverterSqlTypeDescriptorAdapter;\n", "des": "Support for handling JPA AttributeConverter instances as part of the Hibernate Type system."}
{"index": 3151, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package sql\n\n// Descriptor for the SQL/JDBC side of a value mapping.\nInterface SqlTypeDescriptor;\n// Convenience base implementation of ValueBinder\nClass BasicBinder<J>;\n// Convenience base implementation of ValueExtractor\nClass BasicExtractor<J>;\n// Descriptor for BIGINT handling.\nClass BigIntTypeDescriptor;\n// Descriptor for BINARY handling.\nClass BinaryTypeDescriptor;\n// Descriptor for BIT handling.\nClass BitTypeDescriptor;\n// Descriptor for BLOB handling.\nClass BlobTypeDescriptor;\n", "des": "Defines handling of the standard JDBC-defined types."}
{"index": 3152, "repo": "tika-core-2.8.0", "code": "package tika\n\n// Facade class for accessing Tika functionality.\nClass Tika;\n", "des": "Apache Tika."}
{"index": 3153, "repo": "tika-core-2.8.0", "code": "package config\n\n// Components that must do special processing across multiple fields at initialization time should implement this interface.\nInterface Initializable;\n// This is to be used to handle potential recoverable problems that might arise during initialization.\nInterface InitializableProblemHandler;\n// Interface for error handling strategies in service class loading.\nInterface LoadErrorHandler;\n// \nClass ConfigBase;\n", "des": "Tika configuration tools."}
{"index": 3154, "repo": "tika-core-2.8.0", "code": "package detect\n\n// Content type detector.\nInterface Detector;\n// Character encoding detector.\nInterface EncodingDetector;\n// An input stream reader that automatically detects the character encoding to be used for converting bytes to characters.\nClass AutoDetectReader;\n// Content type detector that combines multiple different detection mechanisms.\nClass CompositeDetector;\n// \nClass CompositeEncodingDetector;\n", "des": "Media type detection."}
{"index": 3155, "repo": "tika-core-2.8.0", "code": "package exception\n\n// \nClass ZeroByteFileException.IgnoreZeroByteFileException;\n// Exception to be thrown when a document does not allow content extraction.\nClass AccessPermissionException;\n// This exception should be thrown when the parse absolutely, positively has to stop.\nClass CorruptedFileException;\n// \nClass EncryptedDocumentException;\n// \nClass FileTooLongException;\n// Use this to throw a SAXException in subclassed methods that don't throw SAXExceptions\nClass RuntimeSAXException;\n", "des": "Tika exception."}
{"index": 3156, "repo": "tika-core-2.8.0", "code": "package extractor\n\n// Tika container extractor interface.\nInterface ContainerExtractor;\n// Interface for different document selection strategies for purposes like embedded document extraction by a ContainerExtractor instance.\nInterface DocumentSelector;\n// \nInterface EmbeddedDocumentExtractor;\n// \nInterface EmbeddedDocumentExtractorFactory;\n// Tika container extractor callback interface.\nInterface EmbeddedResourceHandler;\n", "des": "Extraction of component documents."}
{"index": 3157, "repo": "tika-core-2.8.0", "code": "package fork\n\n// \nInterface ForkProxy;\n// \nInterface ForkResource;\n// \nClass ForkParser;\n// Lightweight, easily serializable class that contains enough information to build a ParserFactory\nClass ParserFactoryFactory;\n", "des": "Forked parser."}
{"index": 3158, "repo": "tika-core-2.8.0", "code": "package io\n\n// A factory which returns a fresh InputStream for the same resource each time.\nInterface InputStreamFactory;\n// Very slight modification of Commons' BoundedInputStream so that we can figure out if this hit the bound or not.\nClass BoundedInputStream;\n// General Endian Related Utilties.\nClass EndianUtils;\n// \nClass FilenameUtils;\n// \nClass IOUtils;\n// Stream wrapper that make it easy to read up to n bytes ahead from a stream that supports the mark feature.\nClass LookaheadInputStream;\n", "des": "IO utilities."}
{"index": 3159, "repo": "tika-core-2.8.0", "code": "package metadata\n\n// Until we can find a common standard, we'll use these options.\nInterface AccessPermissions;\n// Met keys from NCAR CCSM files in the Climate Forecast Convention.\nInterface ClimateForcast;\n// A collection of Creative Commons properties names.\nInterface CreativeCommons;\n// \nInterface Database;\n// A collection of Dublin Core metadata names.\nInterface DublinCore;\n// EPub properties collection.\nInterface Epub;\n// \nInterface ExternalProcess;\n", "des": "Multi-valued metadata container, and set of constant metadata fields."}
{"index": 3160, "repo": "tika-core-2.8.0", "code": "package mime\n\n// Met Keys used by the MimeTypesReader.\nInterface MimeTypesReaderMetKeys;\n// A set of Hex encoding and decoding utility methods.\nClass HexCoDec;\n// Internet media type.\nClass MediaType;\n// Registry of known Internet media types.\nClass MediaTypeRegistry;\n// Internet media type.\nClass MimeType;\n// This class is a MimeType repository.\nClass MimeTypes;\n// Creates instances of MimeTypes.\nClass MimeTypesFactory;\n", "des": "Media type information."}
{"index": 3161, "repo": "tika-core-2.8.0", "code": "package parser\n\n// Interface for digester.\nInterface DigestingParser.Digester;\n// This is used in AutoDetectParserConfig to (optionally) wrap the parser in a digesting parser.\nInterface DigestingParser.DigesterFactory;\n// Encodes byte array from a MessageDigest to String\nInterface DigestingParser.Encoder;\n// Tika parser interface.\nInterface Parser;\n// Interface for providing a password to a Parser for handling Encrypted and Password Protected Documents.\nInterface PasswordProvider;\n", "des": "Tika parsers."}
{"index": 3162, "repo": "tika-core-2.8.0", "code": "package external\n\n// Consumer contract\nInterface ExternalParser.LineConsumer;\n// Met Keys used by the ExternalParsersConfigReader.\nInterface ExternalParsersConfigReaderMetKeys;\n// A Composite Parser that wraps up all the available External Parsers, and provides an easy way to access them.\nClass CompositeExternalParser;\n// Parser that uses an external program (like catdoc or pdf2txt) to extract text content and metadata from a given document.\nClass ExternalParser;\n", "des": "External parser process."}
{"index": 3163, "repo": "tika-core-2.8.0", "code": "package sax\n\n// \nInterface ContentHandlerDecoratorFactory;\n// Interface to allow easier injection of code for getting a new ContentHandler\nInterface ContentHandlerFactory;\n// Internal interface that allows both character and ignorable whitespace content to be filtered the same way.\nInterface SafeContentHandler.Output;\n// \nInterface WriteLimiter;\n// This is a special handler to be used only with the RecursiveParserWrapper.\nClass AbstractRecursiveParserWrapperHandler;\n", "des": "SAX utilities."}
{"index": 3164, "repo": "tika-core-2.8.0", "code": "package xpath\n\n// Final evaluation state of a .../@* XPath expression.\nClass AttributeMatcher;\n// Intermediate evaluation state of a .../*... XPath expression.\nClass ChildMatcher;\n// Composite XPath evaluation state.\nClass CompositeMatcher;\n// Final evaluation state of an XPath expression that targets an element.\nClass ElementMatcher;\n// XPath element matcher.\nClass Matcher;\n", "des": "XPath utilities"}
{"index": 3165, "repo": "tika-core-2.8.0", "code": "package utils\n\n// This class contains utilities for dealing with tika annotations\nClass AnnotationUtils;\n// \nClass CharsetUtils;\n// \nClass CompareUtils;\n// Utility Class for Concurrency in Tika\nClass ConcurrentUtils;\n// Date related utility methods and constants\nClass DateUtils;\n// \nClass ExceptionUtils;\n// \nClass FileProcessResult;\n// Helper util methods for Parsers themselves.\nClass ParserUtils;\n// \nClass ProcessUtils;\n// Inspired from Nutch code class OutlinkExtractor.\nClass RegexUtils;\n", "des": "Utilities."}
{"index": 3166, "repo": "gson-2.10.1", "code": "package gson\n\n// A strategy (or policy) definition that is used to decide whether or not a field or class should be serialized or deserialized as part of the JSON output/input.\nInterface ExclusionStrategy;\n// A mechanism for providing custom field naming in Gson.\nInterface FieldNamingStrategy;\n// This interface is implemented to create instances of a class that does not define a no-args constructor.\nInterface InstanceCreator<T>;\n", "des": "This package provides the Gson class to convert Json to Java and vice-versa."}
{"index": 3167, "repo": "gson-2.10.1", "code": "package annotations\n\n// An annotation that indicates this member should be exposed for JSON serialization or deserialization.\nAnnotation Type Expose;\n// An annotation that indicates the Gson TypeAdapter to use with a class or field.\nAnnotation Type JsonAdapter;\n// An annotation that indicates this member should be serialized to JSON with the provided name value as its field name.\nAnnotation Type SerializedName;\n", "des": "This package provides annotations that can be used with Gson."}
{"index": 3168, "repo": "gson-2.10.1", "code": "package reflect\n\n// Represents a generic type T.\nClass TypeToken<T>;\n", "des": "This package provides utility classes for finding type information for generic types."}
{"index": 3169, "repo": "gson-2.10.1", "code": "package stream\n\n// Reads a JSON (RFC 7159) encoded value as a stream of tokens.\nClass JsonReader;\n// Writes a JSON (RFC 7159) encoded value to a stream, one token at a time.\nClass JsonWriter;\n// A structure, name or value type in a JSON-encoded string.\nEnum JsonToken;\n// Thrown when a reader encounters malformed JSON.\nClass MalformedJsonException;\n", "des": "This package provides classes for processing JSON in an efficient streaming way."}
{"index": 3170, "repo": "tomcat-api-10.1", "code": "package ant\n\n// \nClass AbstractCatalinaCommandTask;\n// Abstract base class for Ant tasks that interact with the Manager web application for dynamically deploying and undeploying applications.\nClass AbstractCatalinaTask;\n// Abstract base class to add output redirection support for Catalina Ant tasks.\nClass BaseRedirectorHelperTask;\n// Ant task that implements the /deploy command, supported by the Tomcat manager application.\nClass DeployTask;\n", "des": "This package contains a set of Task implementations for Ant (version 1.6.x or later) that can be used to interact with the Manager application to deploy, undeploy, list, reload, start and stop web applications from a running instance of Tomcat."}
{"index": 3171, "repo": "tomcat-api-10.1", "code": "package jmx\n\n// \nClass Arg;\n// Definition:\nClass JMXAccessorCondition;\n// \nClass JMXAccessorConditionBase;\n// Create new MBean at JMX JSR 160 MBeans Server.\nClass JMXAccessorCreateTask;\n// Definition\nClass JMXAccessorEqualsCondition;\n// Access JMX JSR 160 MBeans Server.\nClass JMXAccessorGetTask;\n// Access JMX JSR 160 MBeans Server.\nClass JMXAccessorInvokeTask;\n// Query for Mbeans.\nClass JMXAccessorQueryTask;\n// Access JMX JSR 160 MBeans Server.\nClass JMXAccessorSetTask;\n", "des": "This package contains a set of JMX Task implementations for Ant (version 1.6 or later) that can be used to interact with the Remote JMX JSR 160 RMI Adaptor to get/set attributes, invoke MBean operations and query for Mbeans inside a running instance of Tomcat."}
{"index": 3172, "repo": "tomcat-api-10.1", "code": "package authenticator\n\n// Basic implementation of the Valve interface that enforces the <security-constraint> elements in the web application deployment descriptor.\nClass AuthenticatorBase;\n// An Authenticator and Valve implementation of HTTP BASIC Authentication, as outlined in RFC 7617: \"The 'Basic' HTTP Authentication Scheme\"\nClass BasicAuthenticator;\n", "des": "This package contains Authenticator implementations for the various supported authentication methods (BASIC, DIGEST, and FORM)."}
{"index": 3173, "repo": "tomcat-api-10.1", "code": "package ha\n\n// A CatalinaCluster interface allows to plug in and out the different cluster implementations\nInterface CatalinaCluster;\n// A ClusterDeployer interface allows to plug in and out the different deployment implementations\nInterface ClusterDeployer;\n// The common interface used by all cluster manager.\nInterface ClusterManager;\n// \nInterface ClusterMessage;\n// \nInterface ClusterSession;\n", "des": "This package contains code for Clustering, the base class of a Cluster is org.apache.catalina.Cluster implementations of this class is done when implementing a new Cluster protocol"}
{"index": 3174, "repo": "tomcat-api-10.1", "code": "package realm\n\n// Provides an interface for retrieving a user name from an X509Certificate.\nInterface X509UsernameRetriever;\n// This Realm is intended for use with Authenticator implementations (SSLAuthenticator, SpnegoAuthenticator) that authenticate the user as well as obtain the user credentials.\nClass AuthenticatedUserRealm;\n// Realm implementation that contains one or more realms.\nClass CombinedRealm;\n// Implementation of Realm that works with any JDBC JNDI DataSource.\nClass DataSourceRealm;\n", "des": "This package contains Realm implementations for the various supported realm technologies for authenticating users and identifying their associated roles."}
{"index": 3175, "repo": "tomcat-api-10.1", "code": "package servlets\n\n// CGI-invoking servlet for web applications, used to execute scripts which comply to the Common Gateway Interface (CGI) specification and are named in the path-info used to invoke this servlet.\nClass CGIServlet;\n// This is an input stream specifically for reading HTTP headers.\nClass CGIServlet.HTTPHeaderInputStream;\n// The default resource-serving servlet for most web applications, used to serve static resources such as HTML pages and images.\nClass DefaultServlet;\n", "des": "This package contains Servlets that implement some of the standard functionality provided by the Catalina servlet container."}
{"index": 3176, "repo": "tomcat-api-10.1", "code": "package session\n\n// Manifest constants for the org.apache.catalina.session package.\nClass Constants;\n// Implementation of the Store interface that stores serialized session objects in a database.\nClass DataSourceStore;\n// Concrete implementation of the Store interface that utilizes a file per saved Session in a configured directory.\nClass FileStore;\n// Minimal implementation of the Manager interface that supports no session persistence or distributable capabilities.\nClass ManagerBase;\n", "des": "This package contains the standard Manager and Session implementations that represent the collection of active sessions and the individual sessions themselves, respectively, that are associated with a Context."}
{"index": 3177, "repo": "tomcat-api-10.1", "code": "package ssi\n\n// The interface that all SSI commands ( SSIEcho, SSIInclude, ...) must implement.\nInterface SSICommand;\n// Interface used by SSIMediator to talk to the 'outside world' ( usually a servlet )\nInterface SSIExternalResolver;\n// Class that extends ServletOutputStream, used as a wrapper from within SsiInclude\nClass ByteArrayServletOutputStream;\n// Represents a parsed expression.\nClass ExpressionParseTree;\n// Parses an expression string to return the individual tokens.\nClass ExpressionTokenizer;\n", "des": "This package contains code that is used by the SsiInvoker."}
{"index": 3178, "repo": "tomcat-api-10.1", "code": "package tribes\n\n// Channel interface A channel is a representation of a group of nodes all participating in some sort of communication with each other. The channel is the main API class for Tribes, this is essentially the only class that an application needs to be aware of.\nInterface Channel;\n// A ChannelInterceptor is an interceptor that intercepts messages and membership messages in the channel stack.\nInterface ChannelInterceptor;\n// \nInterface ChannelInterceptor.InterceptorEvent;\n", "des": "QuickStart"}
{"index": 3179, "repo": "tomcat-api-10.1", "code": "package valves\n\n// AccessLogElement writes the partial message into the buffer.\nInterface AbstractAccessLogValve.AccessLogElement;\n// Marks an AccessLogElement as needing to be have the value cached at the start of the request rather than just recorded at the end as the source data for the element may not be available at the end of the request.\nInterface AbstractAccessLogValve.CachedElement;\n", "des": "This package contains a variety of small Valve implementations that do not warrant being packaged separately."}
{"index": 3180, "repo": "tomcat-api-10.1", "code": "package logging\n\n// A simple logging interface abstracting logging APIs.\nInterface Log;\n// This is a modified LogFactory that uses a simple ServiceLoader based discovery mechanism with a default of using JDK based logging.\nClass LogFactory;\n// An exception that is thrown only if a suitable LogFactory or Log instance cannot be created by the corresponding factory methods.\nClass LogConfigurationException;\n", "des": "Overview"}
{"index": 3181, "repo": "tomcat-api-10.1", "code": "package naming\n\n// \nClass AbstractRef;\n// Handles the access control on the JNDI contexts.\nClass ContextAccessController;\n// Handles the associations : Object with a NamingContext Calling thread with a NamingContext Calling thread with object bound to the same naming context Thread context class loader with a NamingContext Thread context class loader with object bound to the same NamingContext The objects are typically Catalina Server or Context objects.\nClass ContextBindings;\n", "des": "This package contains a memory based naming service provider."}
{"index": 3182, "repo": "tomcat-api-10.1", "code": "package factory\n\n// Object factory for any Resource conforming to the JavaBean spec.\nClass BeanFactory;\n// Static constants for this package.\nClass Constants;\n// Object factory for resource links for shared data sources.\nClass DataSourceLinkFactory;\n", "des": "This package contains object factories used by the naming service."}
{"index": 3183, "repo": "tomcat-api-10.1", "code": "package java\n\n// Context factory for the \"java:\" namespace.\nClass javaURLContextFactory;\n", "des": "This package contains the URL context factory for the \"java\" namespace."}
{"index": 3184, "repo": "tomcat-api-10.1", "code": "package dbcp2\n\n// Interface to keep API compatibility.\nInterface BasicDataSourceMXBean;\n// Abstract factory interface for creating Connections.\nInterface ConnectionFactory;\n// Defines the methods that will be made available via JMX.\nInterface DataSourceMXBean;\n// Defines the attributes and methods that will be exposed via JMX for PoolableConnection instances.\nInterface PoolableConnectionMXBean;\n// Tracks connection usage for recovering and reporting abandoned connections.\nClass AbandonedTrace;\n", "des": "Database Connection Pool API."}
{"index": 3185, "repo": "tomcat-api-10.1", "code": "package cpdsadapter\n\n// An adapter for JDBC drivers that do not include an implementation of ConnectionPoolDataSource, but still include a DriverManager implementation.\nClass DriverAdapterCPDS;\n// \nClass PStmtKeyCPDS;\n", "des": "This package contains one public class which is a ConnectionPoolDataSource (CPDS) implementation that can be used to adapt older Driver based JDBC implementations."}
{"index": 3186, "repo": "tomcat-api-10.1", "code": "package datasources\n\n// The base class for SharedPoolDataSource and PerUserPoolDataSource.\nClass InstanceKeyDataSource;\n// A pooling DataSource appropriate for deployment within J2EE environment.\nClass PerUserPoolDataSource;\n// A JNDI ObjectFactory which creates SharedPoolDataSources\nClass PerUserPoolDataSourceFactory;\n// A pooling DataSource appropriate for deployment within J2EE environment.\nClass SharedPoolDataSource;\n", "des": "This package contains two DataSources: PerUserPoolDataSource and SharedPoolDataSource which provide a database connection pool."}
{"index": 3187, "repo": "tomcat-api-10.1", "code": "package managed\n\n// A listener for transaction completion events.\nInterface TransactionContextListener;\n// XAConnectionFactory is an extension of ConnectionFactory used to create connections in a transaction managed environment.\nInterface XAConnectionFactory;\n// BasicManagedDataSource is an extension of BasicDataSource which creates ManagedConnections.\nClass BasicManagedDataSource;\n", "des": "This package provides support for pooling of ManagedConnections."}
{"index": 3188, "repo": "tomcat-api-10.1", "code": "package pool2\n\n// A \"keyed\" pooling interface.\nInterface KeyedObjectPool<K,​V>;\n// An interface defining life-cycle methods for instances to be served by a KeyedObjectPool.\nInterface KeyedPooledObjectFactory<K,​V>;\n// A pooling simple interface.\nInterface ObjectPool<T>;\n// Defines the wrapper that is used to track the additional information, such as state, for the pooled objects.\nInterface PooledObject<T>;\n", "des": "Object pooling API."}
{"index": 3189, "repo": "tomcat-api-10.1", "code": "package impl\n\n// Strategy for obtaining and printing the current call stack.\nInterface CallStack;\n// The interface that defines the information about pooled objects that will be exposed via JMX.\nInterface DefaultPooledObjectInfoMBean;\n// To provide a custom eviction policy (i.e. something other than DefaultEvictionPolicy for a pool, users must provide an implementation of this interface that provides the required eviction policy.\nInterface EvictionPolicy<T>;\n", "des": "Object pooling API implementations."}
{"index": 3190, "repo": "tomcat-api-10.1", "code": "package bcel\n\n// Constants for the project, mostly defined in the JVM specification.\nClass Const;\n", "des": "This package contains basic classes for the Byte Code Engineering Library and constants defined by the JVM specification."}
{"index": 3191, "repo": "tomcat-api-10.1", "code": "package classfile\n\n// \nClass AnnotationElementValue;\n// Represents one annotation in the annotation table\nClass AnnotationEntry;\n// base class for annotations\nClass Annotations;\n// \nClass ArrayElementValue;\n// \nClass ClassElementValue;\n// Wrapper class that parses a given Java .class file.\nClass ClassParser;\n// Abstract superclass for classes to represent the different constant types in the constant pool of a class file.\nClass Constant;\n", "des": "This package contains the classes that describe the structure of a Java class file and a class file parser."}
{"index": 3192, "repo": "tomcat-api-10.1", "code": "package buf\n\n// Input interface, used when the buffer is empty.\nInterface ByteChunk.ByteInputChannel;\n// When we need more space we'll either grow the buffer ( up to the limit ) or send it to a channel.\nInterface ByteChunk.ByteOutputChannel;\n// Input interface, used when the buffer is empty.\nInterface CharChunk.CharInputChannel;\n// When we need more space we'll either grow the buffer ( up to the limit ) or send it to a channel.\nInterface CharChunk.CharOutputChannel;\n", "des": "Buffers and Encodings"}
{"index": 3193, "repo": "tomcat-api-10.1", "code": "package binary\n\n// Provides Base64 encoding and decoding as defined by RFC 2045.\nClass Base64;\n// Abstract superclass for Base-N encoders and decoders.\nClass BaseNCodec;\n// Converts String to and from bytes using the encodings required by the Java specification.\nClass StringUtils;\n", "des": "Base64, Base32, Binary, and Hexadecimal String encoding and decoding."}
{"index": 3194, "repo": "tomcat-api-10.1", "code": "package tld\n\n// RulesSet for digesting implicit.tld files.\nClass ImplicitTldRuleSet;\n// Bare-bone model of a tag file loaded from a TLD.\nClass TagFileXml;\n// Common representation of a Tag Library Descriptor (TLD) XML file.\nClass TaglibXml;\n// Model of a tag define in a tag library descriptor.\nClass TagXml;\n// Parses a Tag Library Descriptor.\nClass TldParser;\n// A TLD Resource Path as defined in JSP 7.3.2.\nClass TldResourcePath;\n// RulesSet for digesting TLD files.\nClass TldRuleSet;\n", "des": "Package containing a Java model of the XML for a Tag Library Descriptor."}
{"index": 3195, "repo": "tomcat-api-10.1", "code": "package web\n\n// \nInterface Injectable;\n// Defines an interface for the object that is added to the representation of a JNDI resource in web.xml to enable it to also be the implementation of that JNDI resource.\nInterface NamingResources;\n// Representation of a context initialization parameter that is configured in the server configuration file, rather than the application deployment descriptor.\nClass ApplicationParameter;\n// \nClass Constants;\n", "des": "This package contains Java objects that represent complex data structures from the web application deployment descriptor file (web.xml)."}
{"index": 3196, "repo": "tomcat-api-10.1", "code": "package digester\n\n// \nInterface Digester.GeneratedCodeLoader;\n// A collection of interfaces, one per property, that enables the object being populated by the digester to signal to the digester that it supports the given property and that the digester should populate that property if available.\nInterface DocumentProperties;\n// The character encoding used by the source XML document.\nInterface DocumentProperties.Charset;\n// Interface for use with FactoryCreateRule.\nInterface ObjectCreationFactory;\n", "des": "The Digester package provides for rules-based processing of arbitrary XML documents."}
{"index": 3197, "repo": "tomcat-api-10.1", "code": "package file\n\n// Abstracts configuration file storage.\nInterface ConfigurationSource;\n// This class is used to obtain InputStreams for configuration files from a given location String.\nClass ConfigFileLoader;\n// Represents a resource: a stream to the resource associated with its URI.\nClass ConfigurationSource.Resource;\n// This is a utility class to match file globs.\nClass Matcher;\n", "des": "This package contains utility classes for file handling."}
{"index": 3198, "repo": "tomcat-api-10.1", "code": "package http\n\n// \nInterface CookieProcessor;\n// A thread safe wrapper around SimpleDateFormat that does not make use of ThreadLocal and - broadly - only creates enough SimpleDateFormat objects to satisfy the concurrency requirements.\nClass ConcurrentDateFormat;\n// \nClass CookieProcessorBase;\n// Utility class to generate HTTP dates.\nClass FastHttpDateFormat;\n// \nClass HeaderUtil;\n// Memory-efficient repository for Mime Headers.\nClass MimeHeaders;\n// \nClass Parameters;\n// \nClass RequestUtil;\n", "des": "Special utils for handling HTTP-specific entities - headers, parameters, cookies, etc."}
{"index": 3199, "repo": "tomcat-api-10.1", "code": "package fileupload\n\n// This class represents a file or form item that was received within a multipart/form-data POST request.\nInterface FileItem;\n// A factory interface for creating FileItem instances.\nInterface FileItemFactory;\n// This class provides support for accessing the headers for a file or form item that was received within a multipart/form-data POST request.\nInterface FileItemHeaders;\n", "des": "NOTE: This code has been copied from commons-fileupload trunk 1.3 and commons-io 1.4 and package renamed to avoid clashes with any web apps that may wish to use these libraries."}
{"index": 3200, "repo": "tomcat-api-10.1", "code": "package disk\n\n// The default implementation of the FileItem interface.\nClass DiskFileItem;\n// The default FileItemFactory implementation.\nClass DiskFileItemFactory;\n", "des": "A disk-based implementation of the FileItem interface."}
{"index": 3201, "repo": "tomcat-api-10.1", "code": "package impl\n\n// The iterator, which is returned by FileUploadBase.getItemIterator(RequestContext).\nClass FileItemIteratorImpl;\n// Default implementation of FileItemStream.\nClass FileItemStreamImpl;\n// This exception is thrown if a request contains more files than the specified limit.\nClass FileCountLimitExceededException;\n// Thrown to indicate that A files size exceeds the configured maximum.\nClass FileSizeLimitExceededException;\n", "des": "Implementations and exceptions utils."}
{"index": 3202, "repo": "tomcat-api-10.1", "code": "package servlet\n\n// Provides access to the request information needed for a request made to an HTTP servlet.\nClass ServletRequestContext;\n", "des": "An implementation of FileUpload for use in servlets conforming to JSR 53."}
{"index": 3203, "repo": "tomcat-api-10.1", "code": "package util\n\n// Interface of an object, which may be closed.\nInterface Closeable;\n// Default implementation of the FileItemHeaders interface.\nClass FileItemHeadersImpl;\n// An input stream, which limits its data size.\nClass LimitedInputStream;\n// Utility class for working with streams.\nClass Streams;\n", "des": "This package contains various IO related utility classes or methods, which are basically reusable and not necessarily restricted to the scope of a file upload."}
{"index": 3204, "repo": "tomcat-api-10.1", "code": "package mime\n\n// Utility class to decode MIME texts.\nClass MimeUtility;\n// Utility class to decode/encode character set on HTTP Header fields based on RFC 2231.\nClass RFC2231Utility;\n", "des": "MIME decoder implementation, imported and retailed from Apache Geronimo."}
{"index": 3205, "repo": "tomcat-api-10.1", "code": "package modeler\n\n// Interface for modeler MBeans.\nInterface RegistryMBean;\n// Internal configuration information for an Attribute descriptor.\nClass AttributeInfo;\n// Implementation of NotificationFilter for attribute change notifications.\nClass BaseAttributeFilter;\n// Basic implementation of the DynamicMBean interface, which supports the minimal requirements of the interface contract.\nClass BaseModelMBean;\n", "des": "The Modeler component of the Commons project offers convenient support for configuring and instantiating Model MBeans (management beans), as described in the JMX Specification."}
{"index": 3206, "repo": "tomcat-api-10.1", "code": "package modules\n\n// \nClass MbeansDescriptorsDigesterSource;\n// \nClass MbeansDescriptorsIntrospectionSource;\n// Source for descriptor data.\nClass ModelerSource;\n", "des": "Implementation classes - should not be used directly."}
{"index": 3207, "repo": "tomcat-api-10.1", "code": "package scan\n\n// Base implementation of Jar for implementations that use a JarInputStream to access the JAR file.\nClass AbstractInputStreamJar;\n// String constants for the scan package.\nClass Constants;\n// Provide a mechanism to obtain objects that implement Jar.\nClass JarFactory;\n// Implementation of Jar that is optimised for file based JAR URLs that refer directly to a JAR file (e.g URLs of the form jar:file: ... .jar!\nClass JarFileUrlJar;\n", "des": "This package contains the common classes used to perform configuration scanning for Catalina and Jasper."}
{"index": 3208, "repo": "tomcat-api-10.1", "code": "package pojo\n\n// Internal implementation constants.\nClass Constants;\n// Base implementation (client and server have different concrete implementations) of the wrapper that converts a POJO instance into a WebSocket endpoint instance.\nClass PojoEndpointBase;\n// Wrapper class for instances of POJOs annotated with ClientEndpoint so they appear as standard Endpoint instances.\nClass PojoEndpointClient;\n", "des": "This package provides the necessary plumbing to convert an annotated POJO into a WebSocket Endpoint."}
{"index": 3209, "repo": "tomcat-api-10.1", "code": "package server\n\n// Internal implementation constants.\nClass Constants;\n// \nClass DefaultServerEndpointConfigurator;\n// \nClass UpgradeUtil;\n// Extracts path parameters from URIs used to create web socket connections using the URI template defined for the associated Endpoint.\nClass UriTemplate;\n// In normal usage, this ServletContextListener does not need to be explicitly configured as the WsSci performs all the necessary bootstrap and installs this listener in the ServletContext.\nClass WsContextListener;\n", "des": "Server-side specific implementation classes."}
{"index": 3210, "repo": "tomcat-servletapi-10.1", "code": "package servlet\n\n// Provides the context for asynchronous request handling\nInterface AsyncContext;\n// Listener for events associated with an AsyncContext.\nInterface AsyncListener;\n// A filter is an object that performs filtering tasks on either the request to a resource (a servlet or static content), or on the response from a resource, or both.\nInterface Filter;\n", "des": "The jakarta.servlet package contains a number of classes and interfaces that describe and define the contracts between a servlet class and the runtime environment provided for an instance of such a class by a conforming servlet container."}
{"index": 3211, "repo": "tomcat-servletapi-10.1", "code": "package http\n\n// Represents how the request from which this object was obtained was mapped to the associated servlet.\nInterface HttpServletMapping;\n// Extends the ServletRequest interface to provide request information for HTTP servlets.\nInterface HttpServletRequest;\n// Extends the ServletResponse interface to provide HTTP-specific functionality in sending a response.\nInterface HttpServletResponse;\n", "des": "The jakarta.servlet.http package contains a number of classes and interfaces that describe and define the contracts between a servlet class running under the HTTP protocol and the runtime environment provided for an instance of such a class by a conforming servlet container."}
{"index": 3212, "repo": "commons-configuration2-2.9.0", "code": "package configuration2\n\n// The main Configuration interface.\nInterface Configuration;\n// Comparator for configurations interface.\nInterface ConfigurationComparator;\n// A Configuration task that may throw a ConfigurationException.\nInterface ConfigurationConsumer<T>;\n// An interface for decoding encoded values from a configuration source.\nInterface ConfigurationDecoder;\n// An interface which combines the FileBased and Configuration interfaces.\nInterface FileBasedConfiguration;\n", "des": "The Configuration main package."}
{"index": 3213, "repo": "commons-configuration2-2.9.0", "code": "package beanutils\n\n// Definition of a context object storing all required information for the creation of a bean.\nInterface BeanCreationContext;\n// Definition of an interface for declaring a bean in a configuration file.\nInterface BeanDeclaration;\n// Definition of an interface for bean factories.\nInterface BeanFactory;\n// A helper class for creating bean instances that are defined in configuration files.\nClass BeanHelper;\n", "des": "In this package a Configuration implementation can be found that implements the DynaBean interface."}
{"index": 3214, "repo": "commons-configuration2-2.9.0", "code": "package builder\n\n// Definition of a properties interface for basic parameters which are supported by all ConfigurationBuilder implementations derived from BasicConfigurationBuilder.\nInterface BasicBuilderProperties<T>;\n// An interface to be implemented by objects which can be used to parameterize a ConfigurationBuilder.\nInterface BuilderParameters;\n", "des": "This package contains the implementations of configuration builder classes used to create new Configuration objects."}
{"index": 3215, "repo": "commons-configuration2-2.9.0", "code": "package combined\n\n// Definition of a properties interface for the parameters of a combined configuration builder.\nInterface CombinedBuilderProperties<T>;\n// An interface for creating builders for configuration sources of a CombinedConfigurationBuilder.\nInterface ConfigurationBuilderProvider;\n// Definition of a properties interface for the parameters of a multiple file configuration builder.\nInterface MultiFileBuilderProperties<T>;\n", "des": "A package containing the implementation of the builder for combined configurations."}
{"index": 3216, "repo": "commons-configuration2-2.9.0", "code": "package fluent\n\n// Definition of a parameters interface providing a fluent API for setting all properties of a builder for a combined configuration.\nInterface CombinedBuilderParameters;\n// Definition of a parameters interface providing a fluent API for setting all properties for a database configuration.\nInterface DatabaseBuilderParameters;\n", "des": "This package defines a fluent API for setting up fully configured configuration builders."}
{"index": 3217, "repo": "commons-configuration2-2.9.0", "code": "package convert\n\n// An interface defining the possible data type conversions supported by the configuration framework.\nInterface ConversionHandler;\n// Definition of an interface that controls the handling of list delimiters in configuration properties.\nInterface ListDelimiterHandler;\n// Definition of an interface used by ListDelimiterHandler to perform additional transformations on behalf of a configuration when a property value is escaped.\nInterface ValueTransformer;\n", "des": "This package contains interfaces and classes related to data type conversions."}
{"index": 3218, "repo": "commons-configuration2-2.9.0", "code": "package event\n\n// Definition of a generic event listener interface.\nInterface EventListener<T extends Event>;\n// An interface for configuration implementations which support registration of event listeners.\nInterface EventSource;\n// A base class for objects that can generate configuration events.\nClass BaseEventSource;\n// An event class that is used for reporting errors that occurred while processing configuration properties.\nClass ConfigurationErrorEvent;\n", "des": "This package contains interfaces and classes for receiving notifications about changes at configurations."}
{"index": 3219, "repo": "commons-configuration2-2.9.0", "code": "package ex\n\n// Any exception that occurs while initializing a Configuration object.\nClass ConfigurationException;\n// A configuration related runtime exception.\nClass ConfigurationRuntimeException;\n// Thrown when a property is incompatible with the type requested.\nClass ConversionException;\n", "des": "This package contains all exception classes used by this library."}
{"index": 3220, "repo": "commons-configuration2-2.9.0", "code": "package interpol\n\n// Definition of an interface for looking up variables during interpolation.\nInterface Lookup;\n// A class that handles interpolation (variable substitution) for configuration objects.\nClass ConfigurationInterpolator;\n// Looks up constant fields in classes.\nClass ConstantLookup;\n// \nClass EnvironmentLookup;\n// Lookup that allows expressions to be evaluated.\nClass ExprLookup;\n", "des": "A package with helper classes used for interpolation (variable substitution)."}
{"index": 3221, "repo": "commons-configuration2-2.9.0", "code": "package io\n\n// Definition of an interface to be implemented by objects which know how to read and write themselves from or to a character stream.\nInterface FileBased;\n// A listener interface for receiving notifications about updates of a FileHandler.\nInterface FileHandlerListener;\n// An interface allowing applications to customize the process of locating a file.\nInterface FileLocationStrategy;\n", "des": "A package with classes related to I/O operations."}
{"index": 3222, "repo": "commons-configuration2-2.9.0", "code": "package plist\n\n// Token literal values and constants.\nInterface PropertyListParserConstants;\n// NeXT / OpenStep style configuration.\nClass PropertyListConfiguration;\n// Token Manager.\nClass PropertyListParserTokenManager;\n// An implementation of interface CharStream, where the stream is assumed to contain only ASCII characters (without unicode processing).\nClass SimpleCharStream;\n// Describes the input token stream.\nClass Token;\n", "des": "Configuration classes supporting NeXT / OpenStep /GNUStep style configuration."}
{"index": 3223, "repo": "commons-configuration2-2.9.0", "code": "package reloading\n\n// MBean definition for managing configuration reload.\nInterface ManagedReloadingDetectorMBean;\n// Definition of an interface to be implemented by components which support reloading operations managed by a ReloadingController.\nInterface ReloadingControllerSupport;\n// An interface to be implemented by objects which can detect whether a reload operation is required.\nInterface ReloadingDetector;\n", "des": "This package contains classes and interfaces related to the reloading mechanism."}
{"index": 3224, "repo": "commons-configuration2-2.9.0", "code": "package resolver\n\n// Interface used for registering and retrieving PUBLICID to URL mappings.\nInterface EntityRegistry;\n// Interface that identifies the class as using an EntityResolver\nInterface EntityResolverSupport;\n// Thin wrapper around xml commons CatalogResolver to allow list of catalogs to be provided.\nClass CatalogResolver;\n// Overrides the Catalog implementation to use the underlying FileSystem.\nClass CatalogResolver.Catalog;\n", "des": "A package containing EntityResolvers."}
{"index": 3225, "repo": "commons-configuration2-2.9.0", "code": "package spring\n\n// FactoryBean which wraps a Commons CompositeConfiguration object for usage with PropertiesLoaderSupport.\nClass ConfigurationPropertiesFactoryBean;\n// Allow use of Apache Commons Configuration Objects as Spring PropertySources\nClass ConfigurationPropertySource;\n", "des": "A package containing integrations for the Spring Framework."}
{"index": 3226, "repo": "commons-configuration2-2.9.0", "code": "package sync\n\n// An interface controlling synchronization of configuration instances.\nInterface Synchronizer;\n// Definition of an interface for objects that can be associated with a Synchronizer.\nInterface SynchronizerSupport;\n// A special implementation of Synchronizer based on the JDK's ReentrantReadWriteLock class.\nClass ReadWriteSynchronizer;\n// An enumeration used by SynchronizerSupport to specify how an object is locked.\nEnum LockMode;\n", "des": "A package containing interfaces and classes related to synchronization of configurations."}
{"index": 3227, "repo": "commons-configuration2-2.9.0", "code": "package tree\n\n// Definition of a Visitor interface for a configuration node structure.\nInterface ConfigurationNodeVisitor<T>;\n// Definition of an interface for evaluating keys for hierarchical configurations.\nInterface ExpressionEngine;\n// A specialized version of the NodeModelSupport interface which allows querying an InMemoryNodeModel.\nInterface InMemoryNodeModelSupport;\n// Definition of an interface for accessing the data of a configuration node.\nInterface NodeHandler<T>;\n", "des": "A package with helper and utility classes used by hierarchical configurations."}
{"index": 3228, "repo": "commons-configuration2-2.9.0", "code": "package xpath\n\n// Implementation of the NodePointerFactory interface for configuration nodes.\nClass ConfigurationNodePointerFactory;\n// A specialized implementation of the ExpressionEngine interface that is able to evaluate XPATH expressions.\nClass XPathExpressionEngine;\n", "des": "This package contains the XPathExpressionEngine class which enables XPATH support for querying configuration properties."}
{"index": 3229, "repo": "commons-configuration2-2.9.0", "code": "package web\n\n// A configuration wrapper to read applet parameters.\nClass AppletConfiguration;\n// A configuration wrapper around a ServletConfig.\nClass ServletConfiguration;\n// A configuration wrapper to read the initialization parameters of a servlet context.\nClass ServletContextConfiguration;\n// A configuration wrapper around a FilterConfig.\nClass ServletFilterConfiguration;\n// A configuration wrapper to read the parameters of a servlet request.\nClass ServletRequestConfiguration;\n", "des": "This package contains some implementations of the Configuration interface that are useful in web environments."}
{"index": 3230, "repo": "commons-release-plugin-1.8.1", "code": "package plugin\n\n// Shared static functions for all of our Mojos.\nClass SharedFunctions;\n", "des": "Base package for the commons-release-plugin."}
{"index": 3231, "repo": "commons-release-plugin-1.8.1", "code": "package mojos\n\n// The purpose of this Maven mojo is to detach the artifacts generated by the maven-assembly-plugin, which for the Apache Commons Project do not get uploaded to Nexus, and putting those artifacts in the dev distribution location for Apache projects.\nClass CommonsDistributionDetachmentMojo;\n// This class checks out the dev distribution location, copies the distributions into that directory structure under the target/commons-release-plugin/scm directory.\nClass CommonsDistributionStagingMojo;\n", "des": "This package contains all the maven mojos for the commons-release-plugin."}
{"index": 3232, "repo": "commons-release-plugin-1.8.1", "code": "package velocity\n\n// This class' purpose is to generate the HEADER.html that moves along with the release for the sake of downloading the release from the distribution area.\nClass HeaderHtmlVelocityDelegate;\n// A builder class for instantiation of the HeaderHtmlVelocityDelegate.\nClass HeaderHtmlVelocityDelegate.HeaderHtmlVelocityDelegateBuilder;\n", "des": "Contains classes that take our velocity templates and render's them to a Writer class."}
{"index": 3233, "repo": "opencms-core-15.0", "code": "package rpc\n\n// \nAnnotation Type SynchronizedRpcRequest;\n", "des": "Contains the compile time classes required to allow synchronous RPC calls."}
{"index": 3234, "repo": "opencms-core-15.0", "code": "package shared\n\n// Interface to access serial date values easily.\nInterface I_CmsSerialDateValue;\n// The base class for implementations of serial date values.\nClass A_CmsSerialDateValue;\n// The attribute configuration.\nClass CmsAttributeConfiguration;\n// Contains all information defining a content entity type.\nClass CmsContentDefinition;\n// Serializable entity implementation.\nClass CmsEntity;\n// Serializable entity attribute implementation.\nClass CmsEntityAttribute;\n", "des": "Contains the acacia editor shared client/server classes."}
{"index": 3235, "repo": "opencms-core-15.0", "code": "package rpc\n\n// The content service used to load and persist entity and type information.\nInterface I_CmsContentService;\n// The content service used to load and persist entity and type information.\nInterface I_CmsContentServiceAsync;\n// Synchronous interface for the serial date service.\nInterface I_CmsSerialDateService;\n// Asynchronous interface for the serial date service.\nInterface I_CmsSerialDateServiceAsync;\n", "des": "Contains the acacia editor RPC service interfaces."}
{"index": 3236, "repo": "opencms-core-15.0", "code": "package configuration\n\n// Interface for a single named configuration object that can either be merged with other configuration objects or disable a configuration object with the same name.\nInterface I_CmsConfigurationObject<X extends I_CmsConfigurationObject<X>>;\n// This is interface is intended to be used in combination with the CmsGlobalConfigurationCacheEventHandler class.\nInterface I_CmsGlobalConfigurationCache;\n", "des": "Contains the ade configuration classes."}
{"index": 3237, "repo": "opencms-core-15.0", "code": "package formatters\n\n// Parses formatter beans from formatter configuration XML contents.\nClass CmsFormatterBeanParser;\n// This class represents the changes which can be made to formatters in a sitemap configuration file.\nClass CmsFormatterChangeSet;\n// A cache object which holds a collection of formatter configuration beans read from the VFS.\nClass CmsFormatterConfigurationCache;\n", "des": "Classes for handling formatter configurations."}
{"index": 3238, "repo": "opencms-core-15.0", "code": "package containerpage\n\n// Checks whether types are enabled for Add/New dialogs.\nInterface I_CmsResourceTypeEnabledCheck;\n// Convenience class to access the localized messages of this OpenCms package.\nClass ClientMessages;\n// Helper class for preparing the resource type lists for gallery and new dialog.\nClass CmsAddDialogTypeHelper;\n// Action element for container-page editor includes.\nClass CmsContainerpageActionElement;\n// The RPC service used by the container-page editor.\nClass CmsContainerpageService;\n", "des": "Contains the container page editor service classes."}
{"index": 3239, "repo": "opencms-core-15.0", "code": "package inherited\n\n// A bean representing a single configuration entry for the inherited container configuration.\nClass CmsContainerConfiguration;\n// A cache class for storing inherited container configurations.\nClass CmsContainerConfigurationCache;\n// A cache class for storing inherited container configurations.\nClass CmsContainerConfigurationCacheState;\n", "des": "Contains classes used for reading and caching inheritance groups."}
{"index": 3240, "repo": "opencms-core-15.0", "code": "package shared\n\n// Convenience class to provide server-side information to the client.\nClass CmsCntPageData;\n// Container bean.\nClass CmsContainer;\n// Bean holding basic container element information.\nClass CmsContainerElement;\n// Bean holding all element information including it's formatted contents.\nClass CmsContainerElementData;\n// Gallery data loaded initially for the 'Add' menu in the page editor.\nClass CmsContainerPageGalleryData;\n", "des": "Contains the shared container page editor classes."}
{"index": 3241, "repo": "opencms-core-15.0", "code": "package rpc\n\n// The RPC service interface used by the container-page editor.\nInterface I_CmsContainerpageService;\n// The RPC service asynchronous interface used by the container-page editor.\nInterface I_CmsContainerpageServiceAsync;\n", "des": "Contains the container page editor service interfaces."}
{"index": 3242, "repo": "opencms-core-15.0", "code": "package contenteditor\n\n// Abstract implementation of the content editor change handler.\nClass A_CmsXmlContentEditorChangeHandler;\n// Convenience class to access the localized messages of this OpenCms package.\nClass ClientMessages;\n// The content editor action element.\nClass CmsContentEditorActionElement;\n// Service to provide entity persistence within OpenCms.\nClass CmsContentService;\n// Visitor to read all types and attribute configurations within a content definition.\nClass CmsContentTypeVisitor;\n", "des": "Contains server side classes for the XML content editor."}
{"index": 3243, "repo": "opencms-core-15.0", "code": "package shared\n\n// Bean which holds the necessary data for complex value widgets in the Acacia editor.\nClass CmsComplexWidgetData;\n// Contains all information needed for editing an XMLContent.\nClass CmsContentDefinition;\n// Data which needs to be passed to the edit handler when using the 'new' button for an editable list element.\nClass CmsEditHandlerData;\n// Constants used for content editor integration.\nClass CmsEditorConstants;\n", "des": "Contains data beans used on the server side as well as on the client side of the XML content editor."}
{"index": 3244, "repo": "opencms-core-15.0", "code": "package rpc\n\n// The content editor service interface.\nInterface I_CmsContentService;\n// The content editor asynchronous service interface.\nInterface I_CmsContentServiceAsync;\n", "des": "Contains the RPC service interfaces used by the XML content editor."}
{"index": 3245, "repo": "opencms-core-15.0", "code": "package detailpage\n\n// Interface for classes which can find the detail page for a given resource, and determine whether a given detail page / detail content combination is valid.\nInterface I_CmsDetailPageHandler;\n// This class uses information from the detail page information stored in the sitemap to find/recognize the detail pages for a given resource.\nClass CmsDefaultDetailPageHandler;\n// Class for writing detail page information to an XML configuration file.\nClass CmsDetailPageConfigurationWriter;\n", "des": "Contains functions for the detail pages in OpenCms."}
{"index": 3246, "repo": "opencms-core-15.0", "code": "package galleries\n\n// Abstract class which is used to generate the data for showing an already opened tree in the gallery dialog.\nClass A_CmsTreeTabDataPreloader<T extends I_CmsGalleryTreeEntry<T>>;\n// Convenience class to access the localized messages of this OpenCms package.\nClass ClientMessages;\n// Replacement configuration for the 'add content' dialog.\nClass CmsAddContentRestriction;\n", "des": "Contains server side classes for the gallery dialogs."}
{"index": 3247, "repo": "opencms-core-15.0", "code": "package shared\n\n// Constants interface for binary resource preview.\nInterface I_CmsBinaryPreviewProvider;\n// The gallery configuration interface.\nInterface I_CmsGalleryConfiguration;\n// Shared constants interface.\nInterface I_CmsGalleryProviderConstants;\n// Common interface for accessing sitemap/VFS entry beans as tree nodes.\nInterface I_CmsGalleryTreeEntry<T>;\n// Constants interface for binary resource preview.\nInterface I_CmsImagePreviewProvider;\n", "des": "Contains the shared client/server side gallery dialog classes."}
{"index": 3248, "repo": "opencms-core-15.0", "code": "package publish\n\n// Interface used to generate mode-specific 'related resources' for the publish dialog in addition to resources linked by normal relations.\nInterface I_CmsPublishRelatedResourceProvider;\n// This interface can be used to implement a new option in the publish dialog's project selector.\nInterface I_CmsVirtualProject;\n// Helper class for splitting a publish list into publish groups.\nClass A_CmsPublishGroupHelper<RESOURCE,​GROUP>;\n// \nClass ClientMessages;\n", "des": "This package contains the server-side classes for the publish module."}
{"index": 3249, "repo": "opencms-core-15.0", "code": "package shared\n\n// A project bean.\nClass CmsProjectBean;\n// A bean that contains both publish options and a map of projects.\nClass CmsPublishData;\n// A publish group.\nClass CmsPublishGroup;\n// A class which represents a list of publish groups to display to the user for selection.\nClass CmsPublishGroupList;\n// A bean which can be used to reconstruct a publish list.\nClass CmsPublishListToken;\n// Bean encapsulating all ADE publish options.\nClass CmsPublishOptions;\n", "des": "Classes for the publish dialog which are used by both the client and the server."}
{"index": 3250, "repo": "opencms-core-15.0", "code": "package rpc\n\n// The synchronous publish list interface.\nInterface I_CmsPublishService;\n// The asynchronous interface to the publish service.\nInterface I_CmsPublishServiceAsync;\n", "des": "Classes to handle client-side GWT-RPC services."}
{"index": 3251, "repo": "opencms-core-15.0", "code": "package sitemap\n\n// Convenience class to access the localized messages of this OpenCms package.\nClass ClientMessages;\n// Helper class used by a service to edit or import aliases for a whole site.\nClass CmsAliasBulkEditHelper;\n// A class used to keep track of which user is editing the alias table from which sites.\nClass CmsAliasEditorLockTable;\n// A class used for storing alias import results by key.\nClass CmsAliasImportResponseTable;\n", "des": "Server side of the sitemap view."}
{"index": 3252, "repo": "opencms-core-15.0", "code": "package shared\n\n// Constants for parameters, JSON keys, etc.\nInterface I_CmsAliasConstants;\n// The interface to the sitemap controller.\nInterface I_CmsSitemapController;\n// Bean for additional site-map entry information.\nClass CmsAdditionalEntryInfo;\n// Sitemap entry data.\nClass CmsClientSitemapEntry;\n// A data structure for managing the detail page ordering for different types in a given sitemap.\nClass CmsDetailPageTable;\n// Gallery folder entry bean.\nClass CmsGalleryFolderEntry;\n", "des": "Shared Client-Server side of the sitemap view."}
{"index": 3253, "repo": "opencms-core-15.0", "code": "package rpc\n\n// Handles all RPC services related to the sitemap.\nInterface I_CmsSitemapService;\n// Handles all RPC services related to the sitemap.\nInterface I_CmsSitemapServiceAsync;\n", "des": "Shared RPC interfaces."}
{"index": 3254, "repo": "opencms-core-15.0", "code": "package cache\n\n// Defines the methods which an object being cached by CmsFlexLruCache must implement.\nInterface I_CmsLruCacheObject;\n// Implements an LRU (last recently used) cache.\nClass CmsLruCache;\n// A singleton memory cache, that stores objects related with keys.\nClass CmsMemoryObjectCache;\n// Configurable VFS based cache, for caching objects related to offline/online resources.\nClass CmsVfsCache;\n", "des": "Implementations of specialized caches used in OpenCms."}
{"index": 3255, "repo": "opencms-core-15.0", "code": "package configuration\n\n// Used for classes that are configurable using <param name=\"name\">value</param> in the XML configuration.\nInterface I_CmsConfigurationParameterHandler;\n// Interface for configured classes that need a CmsObject with admin privileges.\nInterface I_CmsNeedsAdminCmsObject;\n// Each configurable element in OpenCms must implement this interface.\nInterface I_CmsXmlConfiguration;\n", "des": "Reads and writes the XML based OpenCms configuration files."}
{"index": 3256, "repo": "opencms-core-15.0", "code": "package preferences\n\n// Interface describing a single preference value which can possibly be edited by the user.\nInterface I_CmsPreference;\n// Abstract superclass for preferences.\nClass A_CmsPreference;\n// Preference subclass for built-in preferences accessed with a getter/setter pair via reflection.\nClass CmsBuiltinPreference;\n// A bean representing a set of select options.\nClass CmsBuiltinPreference.SelectOptions;\n// Preference subclass for preferred editors.\nClass CmsEditorPreference;\n", "des": "Classes to build the user preferences dialog."}
{"index": 3257, "repo": "opencms-core-15.0", "code": "package db\n\n// Describes the cache key generating methods.\nInterface I_CmsCacheKey;\n// This interface defines a factory to create runtime info objects.\nInterface I_CmsDbContextFactory;\n// Generic base driver interface.\nInterface I_CmsDriver;\n// Provides methods to write export points to the \"real\" file system.\nInterface I_CmsExportPointDriver;\n// Definitions of all required history driver methods.\nInterface I_CmsHistoryDriver;\n", "des": "Low-level database connection and access functionality."}
{"index": 3258, "repo": "opencms-core-15.0", "code": "package as400\n\n// AS400 implementation of the history driver methods.\nClass CmsHistoryDriver;\n// AS400 implementation of the project driver methods.\nClass CmsProjectDriver;\n// AS400 implementation of the SQL Manager.\nClass CmsSqlManager;\n// AS/400 implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// AS400 implementation of the user driver methods.\nClass CmsUserDriver;\n// AS400 implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "AS400 implementation of the OpenCms database connector."}
{"index": 3259, "repo": "opencms-core-15.0", "code": "package db2\n\n// DB2 implementation of the history driver methods.\nClass CmsHistoryDriver;\n// DB2 implementation of the project driver methods.\nClass CmsProjectDriver;\n// DB2 implementation of the SQL Manager.\nClass CmsSqlManager;\n// DB2 implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// DB2 implementation of the user driver methods.\nClass CmsUserDriver;\n// DB2 implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "DB2 implementation of the OpenCms database connector."}
{"index": 3260, "repo": "opencms-core-15.0", "code": "package generic\n\n// Generic (ANSI-SQL) database server implementation of the history driver methods.\nClass CmsHistoryDriver;\n// Generic (ANSI-SQL) implementation of the project driver methods.\nClass CmsProjectDriver;\n// Filter object that describes what to clean up in a publish history cleanup operation.\nClass CmsPublishHistoryCleanupFilter;\n// Generic (ANSI-SQL) implementation of the SQL manager.\nClass CmsSqlManager;\n", "des": "Generic (ANSI-SQL) implementation of the OpenCms database connector."}
{"index": 3261, "repo": "opencms-core-15.0", "code": "package hsqldb\n\n// HSQLDB implementation of the history driver methods.\nClass CmsHistoryDriver;\n// HSQLDB implementation of the project driver methods.\nClass CmsProjectDriver;\n// HSQLDB implementation of the SQL Manager.\nClass CmsSqlManager;\n// HSQLDB implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// HSQLDB implementation of the user driver methods.\nClass CmsUserDriver;\n// HSQLDB implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "HSQLDB implementation of the OpenCms database connector."}
{"index": 3262, "repo": "opencms-core-15.0", "code": "package log\n\n// Wrapper class for a DB log entry.\nClass CmsLogEntry;\n// A filter to retrieve log entries.\nClass CmsLogFilter;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Wrapper class for the different types of log entries.\nEnum CmsLogEntryType;\n", "des": "This package contains the implementation classes for the DB log."}
{"index": 3263, "repo": "opencms-core-15.0", "code": "package mssql\n\n// MS SQL implementation of the history driver methods.\nClass CmsHistoryDriver;\n// MS SQL implementation of the project driver methods.\nClass CmsProjectDriver;\n// MS SQL implementation of the SQL manager.\nClass CmsSqlManager;\n// MSSQL implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// MS SQL implementation of the user driver methods.\nClass CmsUserDriver;\n// MS SQL implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "MS SQL implementation of the OpenCms database connector."}
{"index": 3264, "repo": "opencms-core-15.0", "code": "package mysql\n\n// MySQL implementation of the history driver methods.\nClass CmsHistoryDriver;\n// MySQL implementation of the project driver methods.\nClass CmsProjectDriver;\n// MySQL implementation of the SQL manager.\nClass CmsSqlManager;\n// MySQL implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// MySQL implementation of the user driver methods.\nClass CmsUserDriver;\n// MySQL implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "MySQL4+ implementation of the OpenCms database connector."}
{"index": 3265, "repo": "opencms-core-15.0", "code": "package oracle\n\n// Oracle implementation of the history driver methods.\nClass CmsHistoryDriver;\n// Oracle/OCI implementation of the project driver methods.\nClass CmsProjectDriver;\n// Oracle implementation of the SQL manager.\nClass CmsSqlManager;\n// Oracle implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// Oracle implementation of the user driver methods.\nClass CmsUserDriver;\n// Oracle implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "Oracle9+ implementation of the OpenCms database connector."}
{"index": 3266, "repo": "opencms-core-15.0", "code": "package postgresql\n\n// PostgreSql implementation of the history driver methods.\nClass CmsHistoryDriver;\n// PostgreSql implementation of the project driver methods.\nClass CmsProjectDriver;\n// PostgreSql implementation of the SQL manager.\nClass CmsSqlManager;\n// PostgreSQL implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// PostgreSql implementation of the user driver methods.\nClass CmsUserDriver;\n// PostgreSql implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "PostgreSql implementation of the OpenCms database connector."}
{"index": 3267, "repo": "opencms-core-15.0", "code": "package timing\n\n// Profiling handler interface which gets informed of method call durations.\nInterface I_CmsProfilingHandler;\n// Default profiling handler which only has a single instance and delegates method calls to its registered child handlers.\nClass CmsDefaultProfilingHandler;\n// Invocation handler used to measure method calls durations.\nClass CmsProfilingInvocationHandler;\n", "des": "Utility classes for profiling driver calls."}
{"index": 3268, "repo": "opencms-core-15.0", "code": "package file\n\n// Common ancestor interface for CmsFile and CmsFolder as well as for CmsHistoryFile and CmsHistoryFolder.\nInterface I_CmsResource;\n// A file resource in the OpenCms VFS.\nClass CmsFile;\n// A folder resource in the OpenCms VFS.\nClass CmsFolder;\n// A group principal in the OpenCms permission system.\nClass CmsGroup;\n", "des": "This important package provides the methods to access the OpenCms VFS repository with the permissions of an authenticated user."}
{"index": 3269, "repo": "opencms-core-15.0", "code": "package collectors\n\n// Interface which can be used to add custom code to execute after a user has created a new content via a collector list.\nInterface I_CmsCollectorPostCreateHandler;\n// Interface which should be used for collectors which can provide their own publish list.\nInterface I_CmsCollectorPublishListProvider;\n// A collector that generates list of CmsResource objects from the VFS.\nInterface I_CmsResourceCollector;\n", "des": "Collectors allow to gather lists of OpenCms resources from the OpenCms VFS using specific rules."}
{"index": 3270, "repo": "opencms-core-15.0", "code": "package history\n\n// A historical version of a resource in the OpenCms VFS resource history.\nInterface I_CmsHistoryResource;\n// A historical version of a file in the OpenCms VFS resource history.\nClass CmsHistoryFile;\n// A historical version of a file in the OpenCms VFS resource history.\nClass CmsHistoryFolder;\n// Describes an OpenCms historical principal entry.\nClass CmsHistoryPrincipal;\n// Describes an OpenCms historical project entry.\nClass CmsHistoryProject;\n", "des": "This package contains the classes to deal with the OpenCms VFS history archive."}
{"index": 3271, "repo": "opencms-core-15.0", "code": "package types\n\n// Resource type descriptors for all resources in the VFS.\nInterface I_CmsResourceType;\n// Base implementation for resource type classes.\nClass A_CmsResourceType;\n// Resource type descriptor for the type \"folder\".\nClass A_CmsResourceTypeFolderBase;\n// Base implementation for resource types implementing the I_CmsLinkParseable interface.\nClass A_CmsResourceTypeLinkParseable;\n// Resource type descriptor for the type \"binary\".\nClass CmsResourceTypeBinary;\n", "des": "The implementations of the core resource types for the VFS are located here."}
{"index": 3272, "repo": "opencms-core-15.0", "code": "package wrapper\n\n// Interface which is used by the CmsObjectWrapper to create a different view to the resources in the VFS.\nInterface I_CmsResourceWrapper;\n// Abstract base class which implements I_CmsResourceWrapper and makes it possible to add and remove file extensions to resources.\nClass A_CmsResourceExtensionWrapper;\n// Default abstract implementation of the interface I_CmsResourceWrapper.\nClass A_CmsResourceWrapper;\n", "des": "This package contains classes and interfaces used to access OpenCms through a wrapped CmsObject."}
{"index": 3273, "repo": "opencms-core-15.0", "code": "package flex\n\n// Represents a Flex bucket configuration.\nClass CmsFlexBucketConfiguration;\n// This class implements the FlexCache.\nClass CmsFlexCache;\n// A simple data container class for the FlexCache variations.\nClass CmsFlexCache.CmsFlexCacheVariation;\n// Flex Cache configuration class.\nClass CmsFlexCacheConfiguration;\n// Contains the contents of a cached resource.\nClass CmsFlexCacheEntry;\n// Key used to describe the caching behaviour of a specific resource.\nClass CmsFlexCacheKey;\n", "des": "Provides low-level JSP integration funtionality for OpenCms, also implements the FlexCache, a declarative parameter-based cache."}
{"index": 3274, "repo": "opencms-core-15.0", "code": "package gwt\n\n// Convenient client message bundle interface.\nInterface I_CmsClientMessageBundle;\n// Convenience interface to provide core server-side data to the client.\nInterface I_CmsCoreProvider;\n// Interface for handling the server-side validation of a whole form.\nInterface I_CmsFormValidator;\n// This interface is the server-side counterpart to the org.opencms.gwt.client.validation.I_CmsValidator.\nInterface I_CmsValidationService;\n", "des": "Provides core support for GWT."}
{"index": 3275, "repo": "opencms-core-15.0", "code": "package shared\n\n// General AutoBean factory interface.\nInterface I_CmsAutoBeanFactory;\n// AutoBean interface that represents the configuration for the client-side CodeMirror editor widget.\nInterface I_CmsCodeMirrorClientConfiguration;\n// Interface defining the data used to call a content collector.\nInterface I_CmsContentLoadCollectorInfo;\n// Extended attributes for editable data generated by e.g.\nInterface I_CmsEditableDataExtensions;\n", "des": "Core shared stuff."}
{"index": 3276, "repo": "opencms-core-15.0", "code": "package rpc\n\n// Provides general core services.\nInterface I_CmsCoreService;\n// Provides general core services.\nInterface I_CmsCoreServiceAsync;\n// Handles client side logging.\nInterface I_CmsLogService;\n// Handles client side logging.\nInterface I_CmsLogServiceAsync;\n// Handles all RPC services related to the upload dialog.\nInterface I_CmsUploadService;\n// Handles all RPC services related to the upload dialog.\nInterface I_CmsUploadServiceAsync;\n", "des": "Shared RPC interfaces."}
{"index": 3277, "repo": "opencms-core-15.0", "code": "package i18n\n\n// Interface to provide fallback keys to be used when the message for a key is not found.\nInterface CmsMultiMessages.I_KeyFallbackHandler;\n// Implementors of this interface are responsible for actually loading the data from the VFS.\nInterface CmsVfsResourceBundle.I_Loader;\n// A locale handler returns the locale name to use for the given request context.\nInterface I_CmsLocaleHandler;\n", "des": "Classes to handle internalization (i18n) and locale selection in OpenCms."}
{"index": 3278, "repo": "opencms-core-15.0", "code": "package tools\n\n// Helper class for copying container pages including some of their elements.\nClass CmsContainerPageCopier;\n// Enum representing the element copy mode.\nEnum CmsContainerPageCopier.CopyMode;\n// Exception indicating that no custom replacement element was found for a type which requires replacement.\nClass CmsContainerPageCopier.NoCustomReplacementException;\n", "des": "Tools for i18n."}
{"index": 3279, "repo": "opencms-core-15.0", "code": "package importexport\n\n// This interface describes a import class which is used to import resources into the VFS.\nInterface I_CmsImport;\n// An import/export handler is an abstract layer to hide the logic how to import/export a specific type of Cms data.\nInterface I_CmsImportExportHandler;\n// \nClass A_CmsImport;\n// Provides the functionality to export files from the OpenCms VFS to a ZIP file.\nClass CmsExport;\n", "des": "Contains functions to import and export resources from the OpenCms VFS."}
{"index": 3280, "repo": "opencms-core-15.0", "code": "package json\n\n// To convert objects to json.\nInterface I_CmsJsonifable;\n// The I_JSONString interface allows a toJSONString() method so that a class can change the behavior of JSONObject.toString(), JSONArray.toString(), and JSONWriter.value(Object).\nInterface I_JSONString;\n// This provides static methods to convert comma delimited text into a JSONArray, and to covert a JSONArray into comma delimited text.\nClass CDL;\n// A JSONArray is an ordered sequence of values.\nClass JSONArray;\n", "des": "Classes to create JSON objects and arrays for JavaScript in OpenCms."}
{"index": 3281, "repo": "opencms-core-15.0", "code": "package jsp\n\n// Interface implemented by JSON tags.\nInterface I_CmsJspJsonContext;\n// Interface for tag handlers implementing valid parent tags for <c:param>.\nInterface I_CmsJspTagParamParent;\n// Provides access to a CmsResource object that was previously loaded by a parent tag.\nInterface I_CmsResourceContainer;\n// Provides access to a I_CmsXmlDocument document that was previously loaded by a parent tag.\nInterface I_CmsXmlContentContainer;\n", "des": "The implementation of the OpenCms JSP tag library, with some additional utility classes to help in JSP scriplet code and navigation building."}
{"index": 3282, "repo": "opencms-core-15.0", "code": "package decorator\n\n// Interface for a CmsDecoratorConfiguration.\nInterface I_CmsDecoratorConfiguration;\n// CmsDecorationBundle, contains a map of merged CmsDEcorationMaps.\nClass CmsDecorationBundle;\n// This class defines text decoration to be made by the postprocessor.\nClass CmsDecorationDefintion;\n// The CmsDecorationMap is the object representation of a single decoartion file.\nClass CmsDecorationMap;\n// The CmsDecorationObject defines a single text decoration.\nClass CmsDecorationObject;\n", "des": "HTML postprocessor, used to tag single words or phrases in the HTML output."}
{"index": 3283, "repo": "opencms-core-15.0", "code": "package parse\n\n// Base class for all classes that are specified for the <cms:parse parserClass=\"name\" param=\"config\" /> tag in the parserClass Attribute.\nClass A_CmsConfiguredHtmlParser;\n", "des": "API classes for the <cms:parse> tag."}
{"index": 3284, "repo": "opencms-core-15.0", "code": "package config\n\n// Interface the main search configuration must implement.\nInterface I_CmsSearchConfiguration;\n// Interface the common search configuration must implement.\nInterface I_CmsSearchConfigurationCommon;\n// Interface of the \"Did you mean ...?\" configuration for the JSP search form.\nInterface I_CmsSearchConfigurationDidYouMean;\n// Configuration common to all facets.\nInterface I_CmsSearchConfigurationFacet;\n", "des": "API classes for the configuration of the search form support provided for server-side Solr search."}
{"index": 3285, "repo": "opencms-core-15.0", "code": "package parser\n\n// The interface that must be implemented by search (form) configuration parsers.\nInterface I_CmsSearchConfigurationParser;\n// Search configuration parser reading JSON.\nClass CmsJSONSearchConfigurationParser;\n// Search configuration parser reading a configuration containing a plain Solr query.\nClass CmsPlainQuerySearchConfigurationParser;\n// Search configuration parser using a list configuration file as the base configuration with additional JSON.\nClass CmsSimpleSearchConfigurationParser;\n", "des": "API classes for the configuration parsers of the search form support provided for server-side Solr search."}
{"index": 3286, "repo": "opencms-core-15.0", "code": "package simplesearch\n\n// Wrapper for a combined category and folder restriction.\nClass CmsCategoryFolderRestrictionBean;\n// Utils to read and update the list configuration.\nClass CmsConfigParserUtils;\n// The list configuration data.\nClass CmsConfigurationBean;\n// Bean representing a Geo filter.\nClass CmsGeoFilterBean;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Helpers to convert the list configuration XML content into a suitable bean, used by the CmsSimpleSearchConfigurationParser and the List manager app."}
{"index": 3287, "repo": "opencms-core-15.0", "code": "package daterestrictions\n\n// Interface for date restrictions used in list configurations.\nInterface I_CmsDateRestriction;\n// Date restrictions for a fixed number of time units going backward or forward from the current time.\nClass CmsDateFromTodayRestriction;\n// A restriction which selects either all entries in the past (from the current time) or all entries in the future.\nClass CmsDatePastFutureRestriction;\n", "des": "Contains classes for dealing with restrictions in list configurations."}
{"index": 3288, "repo": "opencms-core-15.0", "code": "package preconfiguredrestrictions\n\n// A single restriction rule, telling for which field and type what kind of restriction should be enforced.\nClass CmsRestrictionRule;\n// Parser for restriction rules.\nClass CmsRestrictionRuleParser;\n// Wraps the preconfigured restrictions.\nClass CmsRestrictionsBean;\n// The values in one input field.\nClass CmsRestrictionsBean.FieldValues;\n// Match type of the restriction, i.e., how the values should be treated.\nEnum CmsRestrictionRule.MatchType;\n", "des": "Helpers for the preconfigured filter query part of the list configuration (ie."}
{"index": 3289, "repo": "opencms-core-15.0", "code": "package controller\n\n// Interface all search controllers must implement.\nInterface I_CmsSearchController;\n// Interface to get controllers state and configuration - version for common search configurations.\nInterface I_CmsSearchControllerCommon;\n// Interface the \"Did you mean ...?\" controller must implement.\nInterface I_CmsSearchControllerDidYouMean;\n// Interface to get controllers state and configuration - version for field facets.\nInterface I_CmsSearchControllerFacetField;\n", "des": "API classes for the controllers of the search form support provided for server-side Solr search."}
{"index": 3290, "repo": "opencms-core-15.0", "code": "package result\n\n// Interface for a single search result, as wrapped JSP EL friendly.\nInterface I_CmsSearchResourceBean;\n// Interface of the JSP EL friendly wrapper for all Solr search results and the search form controller.\nInterface I_CmsSearchResultWrapper;\n// Interface for the search state parameters.\nInterface I_CmsSearchStateParameters;\n// JSP EL friendly wrapper class for a single search result (document).\nClass CmsSearchResourceBean;\n", "des": "API classes for the result of the search form support provided for server-side Solr search."}
{"index": 3291, "repo": "opencms-core-15.0", "code": "package state\n\n// Class for keeping the state of the common search options.\nInterface I_CmsSearchStateCommon;\n// Class for keeping the state of the spellcheck search options.\nInterface I_CmsSearchStateDidYouMean;\n// Interface for the state all facet types have in common.\nInterface I_CmsSearchStateFacet;\n// Interface for the Geo filter state.\nInterface I_CmsSearchStateGeoFilter;\n// Interface for pagination states.\nInterface I_CmsSearchStatePagination;\n", "des": "API classes for the state of the search form support provided for server-side Solr search."}
{"index": 3292, "repo": "opencms-core-15.0", "code": "package util\n\n// Common interface for accessing formatter / resource type infos in JSPs.\nInterface I_CmsFormatterInfo;\n// This interface supports the basic functionality for the device detection.\nInterface I_CmsJspDeviceSelector;\n// Base class for context sensitive custom beans that supports creation via CmsJspStandardContextBean.getBean(String className).\nClass A_CmsJspCustomContextBean;\n// Wrapper bean for querying information related to a container type in JSPs.\nClass CmsContainerTypeInfoWrapper;\n", "des": "Utility classes to be used for JSP pages."}
{"index": 3293, "repo": "opencms-core-15.0", "code": "package letsencrypt\n\n// Interface for classes which should handle an updated certificate configuration.\nInterface I_CmsLetsEncryptUpdater;\n// Configuration class containing the LetsEncrypt configuration settings OpenCms needed by OpenCms.\nClass CmsLetsEncryptConfiguration;\n// Updates the certificate configuration for the LetsEncrypt container.\nClass CmsLetsEncryptUpdater;\n", "des": "Classes related to the LetsEncrypt docker integration."}
{"index": 3294, "repo": "opencms-core-15.0", "code": "package loader\n\n// Provides methods to generate file names either for the urlName mapping or when using a \"new\" operation in the context of the direct edit interface.\nInterface I_CmsFileNameGenerator;\n// Resource loaders that implement this interface are flex cache enabled.\nInterface I_CmsFlexCacheEnabledLoader;\n// This interface describes a resource loader for OpenCms, a class that can load a resource from the VFS, process it's contents and deliver the result to the user.\nInterface I_CmsResourceLoader;\n", "des": "Low-level functions to manage the loading of resources from the OpenCms VFS."}
{"index": 3295, "repo": "opencms-core-15.0", "code": "package lock\n\n// Represents the lock state of a VFS resource.\nClass CmsLock;\n// Bean class which keeps track of a locking action performed on a resource.\nClass CmsLockActionRecord;\n// A filter to retrieve the locks.\nClass CmsLockFilter;\n// The CmsLockManager is used by the Cms application to detect the lock state of a resource.\nClass CmsLockManager;\n// Indicates the different possible lock types.\nClass CmsLockType;\n// Locking utility class.\nClass CmsLockUtil;\n", "des": "The lock state of the resources in the VFS is handled with these classes."}
{"index": 3296, "repo": "opencms-core-15.0", "code": "package mail\n\n// This class is used to send an HTML formatted email with optional attachments.\nClass CmsHtmlMail;\n// DataSource implementation that may be filled with content from an InputStream.\nClass CmsInputStreamDataSource;\n// Contains the configuration of an individual mail host.\nClass CmsMailHost;\n// Contains the settings for the OpenCms mail service.\nClass CmsMailSettings;\n", "des": "Provides utility classes to generate email messages using the OpenCms email configuration."}
{"index": 3297, "repo": "opencms-core-15.0", "code": "package main\n\n// Implement this interface in case your class has to react to CmsEvents that are thrown by system.\nInterface I_CmsEventListener;\n// Describes an OpenCms request handler.\nInterface I_CmsRequestHandler;\n// This interface checks the requested resource from the OpenCms request context and returns it to the calling method, which will usually be OpenCms.initResource(CmsObject, String, HttpServletRequest, HttpServletResponse).\nInterface I_CmsResourceInit;\n", "des": "Provides the main OpenCms \"operating system\"."}
{"index": 3298, "repo": "opencms-core-15.0", "code": "package module\n\n// Module action classes in OpenCms must implement this interface.\nInterface I_CmsModuleAction;\n// Simple base implementation of the I_CmsModuleAction interface, extend this class for more sophisticated module action implementations.\nClass A_CmsModuleAction;\n// Describes an OpenCms module.\nClass CmsModule;\n// Describes an OpenCms module dependency.\nClass CmsModuleDependency;\n// Module data read from a module zip file.\nClass CmsModuleImportData;\n", "des": "OpenCms modules provide a powerful, standardized way to extend the core OpenCms functionality."}
{"index": 3299, "repo": "opencms-core-15.0", "code": "package monitor\n\n// Describes an object that can be memory monitored.\nInterface I_CmsMemoryMonitorable;\n// Cache for users' groups and data derived from those groups, like role membership.\nClass CmsGroupListCache;\n// Monitors OpenCms memory consumption.\nClass CmsMemoryMonitor;\n// Memory Monitor configuration class.\nClass CmsMemoryMonitorConfiguration;\n// Data structure for dealing with memory status information.\nClass CmsMemoryStatus;\n", "des": "Contains functions to monitor the OpenCms system status."}
{"index": 3300, "repo": "opencms-core-15.0", "code": "package newsletter\n\n// Interface for the newsletter.\nInterface I_CmsNewsletter;\n// Every I_CmsNewsletter contains a list of I_CmsNewsletterContent objects.\nInterface I_CmsNewsletterContent;\n// Interface for recipients of I_CmsNewsletter objects.\nInterface I_CmsNewsletterRecipient;\n// Basic implementation of the interface I_CmsNewsletter.\nClass CmsNewsletter;\n// Content for newsletters.\nClass CmsNewsletterContent;\n// Type definition class for email content types.\nClass CmsNewsletterContentType;\n", "des": "Contains classes to distribute newsletters."}
{"index": 3301, "repo": "opencms-core-15.0", "code": "package notification\n\n// Abstract class to create a notfication which will be send as a html mail to a user in OpenCms.\nClass A_CmsNotification;\n// The E-Mail to be written to responsibles of resources.\nClass CmsContentNotification;\n// Scheduled job that checks the system for resources that will shortly expire, be released, or will be outdated.\nClass CmsContentNotificationJob;\n// Class to encapsulate a resource and the cause of its notification.\nClass CmsExtendedNotificationCause;\n", "des": "Contains classes for the automatical notification of outdated, expiring or released content."}
{"index": 3302, "repo": "opencms-core-15.0", "code": "package publish\n\n// This interface listens to events for a specific publish job.\nInterface I_CmsPublishEventListener;\n// This class is responsible for the publish process.\nClass CmsPublishEngine;\n// Class defining the publish engine states.\nClass CmsPublishEngineState;\n// Default implementation for the I_CmsPublishEventListener.\nClass CmsPublishEventAdapter;\n// List of already finished publish jobs.\nClass CmsPublishHistory;\n// Defines a read-only publish job.\nClass CmsPublishJobBase;\n", "des": "Classes to handle the OpenCms publish process."}
{"index": 3303, "repo": "opencms-core-15.0", "code": "package relations\n\n// Interface used to inject custom link handling behavior into HTML/link content fields.\nInterface I_CmsCustomLinkRenderer;\n// This interface serves to retrieve all links from a given file by parsing.\nInterface I_CmsLinkParseable;\n// Represents a category, that is just a folder.\nClass CmsCategory;\n// Provides several simplified methods for manipulating category relations.\nClass CmsCategoryService;\n// Stores the result of a pointer link validation.\nClass CmsExternalLinksValidationResult;\n", "des": "Classes to represent and validate the internal and external links/relations of resources in the OpenCms VFS."}
{"index": 3304, "repo": "opencms-core-15.0", "code": "package report\n\n// This is the interface for the report classes which are used for the output during operations that run on a spearate Thread in OpenCms, like publish, import, export etc.\nInterface I_CmsReport;\n// Identifies a class that can be used as a report thread .\nInterface I_CmsReportThread;\n// Interface used to format report updates.\nInterface I_CmsReportUpdateFormatter;\n// Base report class.\nClass A_CmsReport;\n// Provides a common Thread class for the reports.\nClass A_CmsReportThread;\n", "des": "Classes used to generate the OpenCms reports, which are displayed during publish, import, export etc."}
{"index": 3305, "repo": "opencms-core-15.0", "code": "package repository\n\n// Represents a repository.\nInterface I_CmsRepository;\n// This class represents items in the repository interface.\nInterface I_CmsRepositoryItem;\n// A repository session which provides basic file and folder operations to the resources in the VFS of OpenCms.\nInterface I_CmsRepositorySession;\n// Abstract implementation of the repository interface I_CmsRepository.\nClass A_CmsRepository;\n", "des": "Package contains all classes and interfaces needed to create or use a repository to access the resources in the VFS."}
{"index": 3306, "repo": "opencms-core-15.0", "code": "package rmi\n\n// Remote interface for executing shell commands.\nInterface I_CmsRemoteShell;\n// Used to create new instances of I_CmsRemoteShell.\nInterface I_CmsRemoteShellProvider;\n// RMI object which wraps a CmsShell and can be used for shell command execution.\nClass CmsRemoteShell;\n// Client application used to connect locally to the CmsShell server.\nClass CmsRemoteShellClient;\n// Constants used by both the shell server and the client application.\nClass CmsRemoteShellConstants;\n", "des": "The CmsRemoteShell allows to manipulate a running server using OpenCms shell commands."}
{"index": 3307, "repo": "opencms-core-15.0", "code": "package scheduler\n\n// Identifies a class that can be scheduled with the OpenCms scheduler.\nInterface I_CmsScheduledJob;\n// Describes a scheduled job for the OpenCms scheduler.\nClass CmsScheduledJobInfo;\n// Manages the OpenCms scheduled jobs.\nClass CmsScheduleManager;\n// A worker thread for the OpenCms scheduler.\nClass CmsSchedulerThread;\n// Simple thread pool used for the Quartz scheduler in OpenCms.\nClass CmsSchedulerThreadPool;\n", "des": "The OpenCms scheduler provides a facility to run jobs in a regular schedule, much like the \"cron\" faciltiy in UNIX systems."}
{"index": 3308, "repo": "opencms-core-15.0", "code": "package jobs\n\n// A schedulable OpenCms job to calculate image size information.\nClass CmsCreateImageSizeJob;\n// A schedulable OpenCms job to delete expired resources.\nClass CmsDeleteExpiredResourcesJob;\n// A schedulable OpenCms job to clear the history.\nClass CmsHistoryClearJob;\n// A schedulable OpenCms job that clear the image cache for the scaled images created by the CmsImageLoader.\nClass CmsImageCacheCleanupJob;\n// Scheduled job for time based publishing.\nClass CmsPublishJob;\n", "des": "Some predefined implementations for often used scheduled job tasks."}
{"index": 3309, "repo": "opencms-core-15.0", "code": "package search\n\n// Indexes resources for the OpenCms search.\nInterface I_CmsIndexer;\n// Abstracts the index writer implementation for the most important index manipulation operations.\nInterface I_CmsIndexWriter;\n// The interface for search documents.\nInterface I_CmsSearchDocument;\n// Interface for search indizes that should be handled by the CmsSearchManager.\nInterface I_CmsSearchIndex;\n// Abstract base class for search indexes.\nClass A_CmsSearchIndex;\n", "des": "Implements the main full text search and indexing functions available in OpenCms."}
{"index": 3310, "repo": "opencms-core-15.0", "code": "package documents\n\n// Used to create index Lucene Documents for OpenCms resources, controls the text extraction algorithm used for a specific OpenCms resource type / MIME type combination.\nInterface I_CmsDocumentFactory;\n// Defines a text extractor for the integrated search engine.\nInterface I_CmsSearchExtractor;\n// Highlights arbitrary terms, used for generation of search excerpts.\nInterface I_CmsTermHighlighter;\n", "des": "Handles indexing different sorts of document and resource type from the OpenCms VFS for the full text search."}
{"index": 3311, "repo": "opencms-core-15.0", "code": "package extractors\n\n// The result of a document text extraction.\nInterface I_CmsExtractionResult;\n// Allows extraction of the indexable \"plain\" text plus (optional) meta information from a given binary input document format.\nInterface I_CmsTextExtractor;\n// Base utility class that allows extraction of the indexable \"plain\" text from a given document format.\nClass A_CmsTextExtractor;\n// The result of a document text extraction.\nClass CmsExtractionResult;\n", "des": "Contains a generic, low-level framework for extration of plain text content out of various popular file formats."}
{"index": 3312, "repo": "opencms-core-15.0", "code": "package fields\n\n// Interface for search field configurations used by I_CmsSearchIndex and configured in the opencms-search.xml (see CmsSearchConfiguration).\nInterface I_CmsSearchFieldConfiguration;\n// Describes a mapping of a piece of content from an OpenCms VFS resource to a field of a search index.\nInterface I_CmsSearchFieldMapping;\n// Base class for a typical field configuration.\nClass A_CmsSearchFieldConfiguration;\n", "des": "These classes control the mapping of the OpenCms content to the Lucene search fields."}
{"index": 3313, "repo": "opencms-core-15.0", "code": "package galleries\n\n// Macro resolver used to resolve macros for the gallery name mapping.\nClass CmsGalleryNameMacroResolver;\n// Contains the functions for the gallery search.\nClass CmsGallerySearch;\n// Parameters used for the gallery search index.\nClass CmsGallerySearchParameters;\n// \nClass CmsGallerySearchResult;\n// The search result list for the gallery search index.\nClass CmsGallerySearchResultList;\n// Sort parameter constants.\nEnum CmsGallerySearchParameters.CmsGallerySortParam;\n", "des": "Implements the search functions for the OpenCms Gallery search index, which is used by the Advanced Direct Edit (ADE) functions."}
{"index": 3314, "repo": "opencms-core-15.0", "code": "package solr\n\n// Interface for Solr index writers.\nInterface I_CmsSolrIndexWriter;\n// The post document processor can be used in order to manipulate search results after the OpenCms permission check has been done.\nInterface I_CmsSolrPostSearchProcessor;\n// The Solr configuration class.\nClass CmsSolrConfiguration;\n// A search document implementation for Solr indexes.\nClass CmsSolrDocument;\n", "des": "The package contains the Solr search integration."}
{"index": 3315, "repo": "opencms-core-15.0", "code": "package spellchecking\n\n// CmsSolrSpellchecker is used to perform spellchecking in OpenCms by using Solr.\nClass CmsSolrSpellchecker;\n// Helping class for manipulating the Solr spellchecker indices.\nClass CmsSpellcheckDictionaryIndexer;\n", "des": "Contains the SOLR based spellcheck service classes."}
{"index": 3316, "repo": "opencms-core-15.0", "code": "package security\n\n// Defines general authorization methods.\nInterface I_CmsAuthorizationHandler;\n// Class providing the privileged login action.\nInterface I_CmsAuthorizationHandler.I_PrivilegedLoginAction;\n// This interface can be used to override or replace user names or passwords which occur in the OpenCms configuration, for example to hide passwords from users who can read the configuration files.\nInterface I_CmsCredentialsResolver;\n", "des": "Access control and security classes for the OpenCms ACL permission system."}
{"index": 3317, "repo": "opencms-core-15.0", "code": "package site\n\n// Describes a mapping rule that selects a different site root based on whether the requested path matches a set of prefixes or not.\nClass CmsAlternativeSiteRootMapping;\n// Describes a configured site in OpenCms.\nClass CmsSite;\n// Manages all configured sites in OpenCms.\nClass CmsSiteManagerImpl;\n// A matcher object to compare request data against the configured sites.\nClass CmsSiteMatcher;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Provides access to the multi-site configuration of OpenCms."}
{"index": 3318, "repo": "opencms-core-15.0", "code": "package xmlsitemap\n\n// Sitemap generator class which tries to eliminate duplicate detail pages for the same content and locale.\nClass CmsDetailPageDuplicateEliminatingSitemapGenerator;\n// A helper class used for calculating which paths need to be included or excluded from the XML sitemap generation.\nClass CmsPathIncludeExcludeSet;\n// Scheduled job for updating the XML sitemap cache.\nClass CmsUpdateXmlSitemapCacheJob;\n", "des": "Contains classes related to XML sitemap generation."}
{"index": 3319, "repo": "opencms-core-15.0", "code": "package staticexport\n\n// Allows to configure customized link substitution behavior.\nInterface I_CmsLinkSubstitutionHandler;\n// Provides a method for scrubbing files from the export folder that might have been changed, so that the export is newly created after the next request to the resource.\nInterface I_CmsStaticExportHandler;\n// Abstract implementation for the I_CmsStaticExportHandler interface.\nClass A_CmsOnDemandStaticExportHandler;\n", "des": "Contains the functionality for the static HTML page export."}
{"index": 3320, "repo": "opencms-core-15.0", "code": "package synchronize\n\n// Defines methods which can be pluged into the syncronisation process between VFS and \"real\" FS.\nInterface I_CmsSynchronizeModification;\n// Contains all methods to synchronize the VFS with the \"real\" FS.\nClass CmsSynchronize;\n// Defines the CmsSynchronizeList object, used to store synchronisation data required to synchronize the VFS and the server FS.\nClass CmsSynchronizeList;\n// Contains the settings for the synchronization.\nClass CmsSynchronizeSettings;\n", "des": "Classes used to synchronize the OpenCms VFS with the real file system."}
{"index": 3321, "repo": "opencms-core-15.0", "code": "package ui\n\n// Factory to create components.\nInterface I_CmsAppView;\n// Context for dialogs opened from the context menu.\nInterface I_CmsDialogContext;\n// Interface for a dialog context which also has access to the ADE context for which it is used.\nInterface I_CmsDialogContextWithAdeContext;\n// Action context that allows direct editing of single properties.\nInterface I_CmsEditPropertyContext;\n// Provides buttons for a dialog.\nInterface I_CmsHasButtons;\n", "des": "General code for the Vaadin UI."}
{"index": 3322, "repo": "opencms-core-15.0", "code": "package actions\n\n// Interface for actions used within the ADE context.\nInterface I_CmsADEAction;\n// Marks workplace actions as an default action to be executed on item click within the file table.\nInterface I_CmsDefaultAction;\n// Workplace action interface.\nInterface I_CmsWorkplaceAction;\n// Action to edit a file given by the file param.\nClass A_CmsEditFileAction;\n// Class representing an abstract gallery dialog action.\nClass A_CmsGalleryDialogAction;\n", "des": "Contains classes for workplace actions."}
{"index": 3323, "repo": "opencms-core-15.0", "code": "package apps\n\n// Generates app launcher buttons.\nInterface I_CmsAppButtonProvider;\n// App category interface.\nInterface I_CmsAppCategory;\n// Used to write app settings to the user.\nInterface I_CmsAppSettings;\n// The app ui context.\nInterface I_CmsAppUIContext;\n// Apps implementing this interface will be stored in the user session so returning to the app will be quicker and use less resources.\nInterface I_CmsCachableApp;\n", "des": "Contains code for workplace apps."}
{"index": 3324, "repo": "opencms-core-15.0", "code": "package cacheadmin\n\n// Interface for the dialogs.\nInterface CmsFlushCache.I_CloseableDialog;\n// Vaadin app for Cache Administration.\nClass CmsCacheAdminApp;\n// Configuration for Cache Administration vaadin-tool.\nClass CmsCacheAdminConfiguration;\n// Class for the Cache folder.\nClass CmsCacheFolder;\n// Class for the app which shows the content of caches.\nClass CmsCacheViewApp;\n// Configuration class for the view flex cache app.\nClass CmsCacheViewFlexConfiguration;\n", "des": "Contains classes of the cache admin app."}
{"index": 3325, "repo": "opencms-core-15.0", "code": "package dbmanager\n\n// Interface for Apps, which run an import thread for files.\nInterface I_CmsReportApp;\n// Abstract class for HTTP imports.\nClass A_CmsHTTPImportForm;\n// Abstract class for a form to import a file.\nClass A_CmsImportForm;\n// Abstract class for the import from a folder on the server.\nClass A_CmsServerImportForm;\n// Dialog used to enter a list of paths to be added to the resources in the database export dialog.\nClass CmsAddExportResourcesDialog;\n", "des": "Contains classes of the cache admin app."}
{"index": 3326, "repo": "opencms-core-15.0", "code": "package filehistory\n\n// App for the history settings and clearing of history.\nClass CmsFileHistoryApp;\n// Configuration class of file history app.\nClass CmsFileHistoryConfiguration;\n// Class for the folder with the file history apps.\nClass CmsFileHistoryFolder;\n// Class for the clear file history dialog and execution.\nClass CmsFileHistoryPanel;\n// Class for the history settings dialog.\nClass CmsFileHistorySettings;\n// Clears the file history of the OpenCms database.\nClass CmsHistoryClearThread;\n", "des": "Contains classes of the file history app."}
{"index": 3327, "repo": "opencms-core-15.0", "code": "package git\n\n// Dialog that prints the result of the execution of a git action.\nClass CmsGitActionResultPanel;\n// App configuration for the Git checkin tool.\nClass CmsGitAppConfiguration;\n// The class provides methods to automatically export modules from OpenCms and check in the exported, unzipped modules into some git repository.\nClass CmsGitCheckin;\n// Access to a single git configuration file.\nClass CmsGitConfiguration;\n// Main widget for the Git check-in tool.\nClass CmsGitToolOptionsPanel;\n", "des": "This package contains the app classes for the git check in functionality."}
{"index": 3328, "repo": "opencms-core-15.0", "code": "package linkvalidation\n\n// Interface with method to update a vaadin table.\nInterface I_CmsUpdatableComponent;\n// Validator for links.\nClass A_CmsLinkValidator;\n// Thread for extern link validation.\nClass CmsExternalLinksValidatorThread;\n// Class for the layout for choosing the resources.\nClass CmsInternalResources;\n// App to check relations of resources in folder to other folder.\nClass CmsLinkInFolderValidationApp;\n", "des": "Contains classes of the link validation app."}
{"index": 3329, "repo": "opencms-core-15.0", "code": "package lists\n\n// Dialog handler to handle the selected option.\nInterface CmsOptionDialog.I_OptionHandler;\n// Manager for list configuration files.\nClass CmsListManager;\n// The list manager app configuration.\nClass CmsListManagerConfiguration;\n// Option dialog.\nClass CmsOptionDialog;\n// Displays search result facets.\nClass CmsResultFacets;\n// Table to display the list manager search results.\nClass CmsResultTable;\n", "des": "This package contains the app classes for the list configurations manager."}
{"index": 3330, "repo": "opencms-core-15.0", "code": "package logfile\n\n// Provides log file download functionality.\nInterface I_CmsLogDownloadProvider;\n// Default implementation for the log download functionality.\nClass CmsDefaultLogDownloadProvider;\n// Class for table to display and edit Log channels.\nClass CmsLogChannelTable;\n// Class for the Download dialog.\nClass CmsLogDownloadDialog;\n// Helper class for generating the zip file for the log download.\nClass CmsLogDownloadDialog.ZipGenerator;\n// Main class of Log management app.\nClass CmsLogFileApp;\n", "des": "Contains classes of the site manager app."}
{"index": 3331, "repo": "opencms-core-15.0", "code": "package modules\n\n// Abstract superclass for the module import forms.\nClass A_CmsModuleImportForm;\n// Module import dialog with two tabs, one for importing via HTTP and one for importing from the server.\nClass CmsImportTabForm;\n// Main module manager app class.\nClass CmsModuleApp;\n// Additional app attributes for the module manager.\nClass CmsModuleApp.Attributes;\n// Contains the icon constants for the module manager.\nClass CmsModuleApp.Icons;\n", "des": "Contains classes of the module manager app."}
{"index": 3332, "repo": "opencms-core-15.0", "code": "package edit\n\n// Form for editing a module.\nClass CmsEditModuleForm;\n// Widget used to edit a module export point.\nClass CmsExportPointWidget;\n// Widget used to edit a module dependency.\nClass CmsModuleDependencyWidget;\n// A widget for selecting a module resource.\nClass CmsModuleResourceSelectField;\n// Helper class used when new options are automatically added to a site selector combo box.\nClass CmsSiteSelectorNewValueHandler;\n", "des": "Contains classes of the module manager app used to edit modules."}
{"index": 3333, "repo": "opencms-core-15.0", "code": "package projects\n\n// The edit project form component.\nClass CmsEditProjectForm;\n// The project history table.\nClass CmsProjectHistoryTable;\n// The project manager app.\nClass CmsProjectManager;\n// The project manager app configuration.\nClass CmsProjectManagerConfiguration;\n// The project overview app configuration.\nClass CmsProjectOverviewConfiguration;\n// The projects table.\nClass CmsProjectsTable;\n// \nClass CmsProjectsTable.ProjectResources;\n", "des": "The project manager app classes."}
{"index": 3334, "repo": "opencms-core-15.0", "code": "package publishqueue\n\n// Class for the Publish queue app.\nClass CmsPublishQueue;\n// Configuration class for the publish queue app.\nClass CmsPublishQueueConfiguration;\n// Vertical Layout showing a publish report of a publish job.\nClass CmsPublishReport;\n// Class for the published resources dialog.\nClass CmsPublishResources;\n// Class for Vaadin Table showing history queue elements.\nClass CmsQueuedTable;\n", "des": "Contains classes of the publish queue app."}
{"index": 3335, "repo": "opencms-core-15.0", "code": "package scheduler\n\n// Don't use CmsScheduledJobInfo directly, so we don't need to change it if we want to change how the values are rendered, and having only the fields we want displayed in the table makes it easier to understand.\nClass CmsJobBean;\n// Form used to edit a scheduled job.\nClass CmsJobEditView;\n// The scheduled jobs manager app.\nClass CmsJobManagerApp;\n// Table used to display scheduled jobs, together with buttons for modifying the jobs.\nClass CmsJobTable;\n", "des": "The scheduled jobs manager app classes."}
{"index": 3336, "repo": "opencms-core-15.0", "code": "package search\n\n// Settings bean for the dialog.\nClass CmsSearchReplaceSettings;\n// Searches in sources.\nClass CmsSearchReplaceThread;\n// The source search app.\nClass CmsSourceSearchApp;\n// The source search app configuration.\nClass CmsSourceSearchAppConfiguration;\n// The source search form.\nClass CmsSourceSearchForm;\n// The available search types.\nEnum CmsSourceSearchForm.SearchType;\n", "des": "Contains classes of the source search app."}
{"index": 3337, "repo": "opencms-core-15.0", "code": "package searchindex\n\n// Implements methods to utilize a report thread for CmsIndexingReport.\nClass CmsIndexingReportThread;\n// Class for the search index app.\nClass CmsSearchindexApp;\n// Configuration class for the searchindex app.\nClass CmsSearchindexAppConfiguration;\n// Class for the GUI to rebuild indexes.\nClass CmsSearchindexRebuild;\n// Class for the vaadin table to show the indexes.\nClass CmsSearchIndexTable;\n// Class for the dialog to show source information of a given index.\nClass CmsSourceDialog;\n", "des": "Contains classes of the searchindex app."}
{"index": 3338, "repo": "opencms-core-15.0", "code": "package sessions\n\n// Configuration class of app.\nClass CmsBroadCastConfigurtion;\n// Class for the Edit Login View.\nClass CmsEditLoginView;\n// Class for the dialog to kill sessions.\nClass CmsKillSessionDialog;\n// Class for the dialiog to send broadcasts.\nClass CmsSendBroadcastDialog;\n// Class for the broadcast app.\nClass CmsSessionsApp;\n// Class for the table to show all current sessions.\nClass CmsSessionsTable;\n// Dialog to show user information and to switch to user session.\nClass CmsUserInfoDialog;\n", "des": "Contains classes of the site manager app."}
{"index": 3339, "repo": "opencms-core-15.0", "code": "package sitemanager\n\n// Report thread to save site configurations.\nClass CmsCreateSiteThread;\n// Dialog for deleting Sites.\nClass CmsDeleteSiteDialog;\n// Class for the Form to edit or add a site.\nClass CmsEditSiteForm;\n// Class for the Global configuration dialog.\nClass CmsGlobalForm;\n// Manager class for the Site manager app.\nClass CmsSiteManager;\n// Configuration class for the site management app.\nClass CmsSiteManagerConfiguration;\n", "des": "Contains classes of the site manager app."}
{"index": 3340, "repo": "opencms-core-15.0", "code": "package user\n\n// Interface for tables which support a filter function.\nInterface I_CmsFilterableTable;\n// Interface for OU tree types.\nInterface I_CmsOuTreeType;\n// Interface for fetching randomly generated passwords.\nInterface I_CmsPasswordFetcher;\n// Interface for toggable tables.\nInterface I_CmsToggleTable;\n// Interface for providers of tree types in the account management overview tree.\nInterface I_CmsTreeTypeProvider;\n", "des": "Contains classes of the user manager app."}
{"index": 3341, "repo": "opencms-core-15.0", "code": "package components\n\n// Handles automatic creation of new values.\nInterface CmsAutoItemCreatingComboBox.I_NewValueHandler;\n// Handles folder selects in the file table.\nInterface CmsFileTable.I_FolderSelectHandler;\n// Provides item property values for additional table columns.\nInterface CmsResourceTable.I_ResourcePropertyProvider;\n// Upload listener interface.\nInterface CmsUploadButton.I_UploadListener;\n// File table inline edit handler.\nInterface I_CmsFilePropertyEditHandler;\n", "des": "Contains some reusable GUI components for Vaadin UI."}
{"index": 3342, "repo": "opencms-core-15.0", "code": "package editablegroup\n\n// Handles state changes when the group becomes empty/not empty.\nInterface CmsEditableGroup.I_EmptyHandler;\n// Interface for group row components that can have errors.\nInterface CmsEditableGroup.I_HasError;\n// Builds editable group rows by wrapping other components.\nInterface CmsEditableGroup.I_RowBuilder;\n// Server side handler interface for button presses in a multivalue widget group row's button bar.\nInterface I_CmsEditableGroupActionHandler;\n", "des": "Contains components for editing a homogeneous list of Vaadin components, often used for multivalued fields in dialogs."}
{"index": 3343, "repo": "opencms-core-15.0", "code": "package extensions\n\n// Callback interfaces for height change notifications.\nInterface CmsMaxHeightExtension.I_HeightChangeHandler;\n// Extension to add a CSS class to any component depending on it's scroll position.\nClass CmsAutoGrowingTextArea;\n// The extension that provides RPC communication between the client and server side of embedded VAADIN dialogs.\nClass CmsEmbeddedDialogExtension;\n", "des": "Contains Vaadin UI extensions."}
{"index": 3344, "repo": "opencms-core-15.0", "code": "package fileselect\n\n// Handles selection of a generic type T.\nInterface I_CmsSelectionHandler<T>;\n// Abstract file select field.\nClass A_CmsFileSelectField<T>;\n// Filter used to hide folder tree items which are not either navigation items themselves or are required to navigate from the site root to a navigation item.\nClass CmsNavigationFilter;\n// File path select field.\nClass CmsPathSelectField;\n", "des": "Contains components for selecting resources."}
{"index": 3345, "repo": "opencms-core-15.0", "code": "package contextmenu\n\n// ContextMenuClosedListener is used to listen for the event that the context menu is closed, either when a item is clicked or when the popup is canceled.\nInterface CmsContextMenu.ContextMenuClosedListener;\n// ContextMenuItemClickListener is listener for context menu items wanting to notify listeners about item click\nInterface CmsContextMenu.ContextMenuItemClickListener;\n", "des": "Contains code for workplace context menu."}
{"index": 3346, "repo": "opencms-core-15.0", "code": "package dialogs\n\n// Implementing classes provide a title.\nInterface I_CmsHasTitle;\n// \nClass A_CmsSelectResourceTypeDialog;\n// Dialog for changing the resource type.\nClass CmsChangeTypeDialog;\n// The copy move dialog.\nClass CmsCopyMoveDialog;\n// The copy to project dialog.\nClass CmsCopyToProjectDialog;\n// Dialog for deleting resources.\nClass CmsDeleteDialog;\n// Context for dialogs embedded into plain GWT modules.\nClass CmsEmbeddedDialogContext;\n", "des": "Contains code for workplace dialogs."}
{"index": 3347, "repo": "opencms-core-15.0", "code": "package availability\n\n// Availability dialog.\nClass CmsAvailabilityDialog;\n// A bean that holds the informations of the availability dialog.\nClass CmsAvailabilityInfoBean;\n", "des": "Contains code for the availability dialog."}
{"index": 3348, "repo": "opencms-core-15.0", "code": "package history\n\n// Dialog used to change resource modification times.\nClass CmsHistoryDialog;\n// Represents a row of the file history table.\nClass CmsHistoryRow;\n", "des": "Contains code for the file history dialog."}
{"index": 3349, "repo": "opencms-core-15.0", "code": "package diff\n\n// Interface for classes which display a comparison widget in the comparison view of the history dialog.\nInterface I_CmsDiffProvider;\n// Abstract super class for displaying differences between a set of properties / attributes.\nClass A_CmsAttributeDiff;\n// Predicate used to check if an attribute comparison bean actually represents a difference.\nClass A_CmsAttributeDiff.IsAttributeDifference;\n// Displays changes between attributes (size, modification date, etc.\nClass CmsAttributeDiff;\n", "des": "Contains code for the comparison view of the file history dialog."}
{"index": 3350, "repo": "opencms-core-15.0", "code": "package permissions\n\n// Permission change handler.\nInterface CmsPermissionView.PermissionChangeHandler;\n// Handles the principal selection.\nInterface CmsPrincipalSelect.I_PrincipalSelectHandler;\n// Interface for use of CmsPrincipleSelectDialog.\nInterface I_CmsPrincipalSelect;\n// Bean for permissions which have changed.\nClass CmsPermissionBean;\n// The permission dialog.\nClass CmsPermissionDialog;\n// Displays the permission settings for a single principal.\nClass CmsPermissionView;\n", "des": "Contains permission dialog classes."}
{"index": 3351, "repo": "opencms-core-15.0", "code": "package editors\n\n// Interface for resource editors.\nInterface I_CmsEditor;\n// Class to extended by frame based editors.\nClass A_CmsFrameEditor;\n// The acacia XML content editor.\nClass CmsAcaciaEditor;\n// Extension for iFrame embedded editors storing the changed state of the edited content.\nClass CmsEditorStateExtension;\n// The plain text editor.\nClass CmsSourceEditor;\n// Stores the editor settings.\nClass CmsSourceEditor.EditorSettings;\n// The acacia XML content editor.\nClass CmsXmlContentEditor;\n", "des": "The available content editors."}
{"index": 3352, "repo": "opencms-core-15.0", "code": "package messagebundle\n\n// Controller for the VAADIN UI of the Message Bundle Editor.\nClass CmsMessageBundleEditor;\n// The class contains the logic behind the message translation editor.\nClass CmsMessageBundleEditorModel;\n// Comparator that compares strings case insensitive.\nClass CmsMessageBundleEditorModel.CmsCaseInsensitiveStringComparator;\n// Wrapper for the configurable messages for the column headers of the message bundle editor.\nClass CmsMessageBundleEditorModel.ConfigurableMessages;\n", "des": "The data bindings and logic for the translator editor."}
{"index": 3353, "repo": "opencms-core-15.0", "code": "package login\n\n// Dialog used to change the password.\nClass CmsChangePasswordDialog;\n// Dialog to request a password reset link if you forgot your passsword.\nClass CmsForgotPasswordDialog;\n// Helper class for getting localized messages for the 'lock inactive users' feature.\nClass CmsInactiveUserMessages;\n// Scheduled job for locking user accounts which have not been logged into for longer than the configured time.\nClass CmsLockInactiveAccountsJob;\n", "des": "Contains the user interface components for the Vaadin-based login dialog."}
{"index": 3354, "repo": "opencms-core-15.0", "code": "package report\n\n// Simple dialog for displaying a report.\nClass CmsReportDialog;\n// Report overlay, shows the wait spinner first and the report window later in case off longer running threads.\nClass CmsReportOverlay;\n// A widget used to display an OpenCms report.\nClass CmsReportWidget;\n// Widget that can be used to view a running report that is not generated specifically by an OpenCms report thread, but from the text written to the stream provided by this widget.\nClass CmsStreamReportWidget;\n", "des": "Contains the user interface components for reports."}
{"index": 3355, "repo": "opencms-core-15.0", "code": "package components\n\n// Server-to-client Interface for the GWT dialog extension.\nInterface I_CmsGwtDialogClientRpc;\n// Client-to-server rpc interface for the GWT dialog extension.\nInterface I_CmsGwtDialogServerRpc;\n// The scroll position CSS shared state.\nClass CmsAutoGrowingTextAreaState;\n// The bread crumb state.\nClass CmsBreadCrumbState;\n// The copy to clip-board/select text button shared state.\nClass CmsCopyToClipboardState;\n// The external layout state.\nClass CmsExternalLayoutState;\n", "des": "Contains Vaadin component state classes and other RPC classes."}
{"index": 3356, "repo": "opencms-core-15.0", "code": "package login\n\n// Client RPC interface for opening a login target.\nInterface I_CmsLoginTargetRpc;\n", "des": "Contains the user shared classes for the Vaadin-based login dialog."}
{"index": 3357, "repo": "opencms-core-15.0", "code": "package rpc\n\n// Server to client RPC communication.\nInterface I_CmsContextMenuClientRpc;\n// The context menu server RPC.\nInterface I_CmsContextMenuServerRpc;\n// Interface for the server side RPC for the CmsEditableGroupButtons component.\nInterface I_CmsEditableGroupButtonsServerRpc;\n// Editor state RPCs\nInterface I_CmsEditorStateRPC;\n// Client RPC to handle embedded dialogs.\nInterface I_CmsEmbeddedDialogClientRPC;\n", "des": "Contains Vaadin RPC interfaces."}
{"index": 3358, "repo": "opencms-core-15.0", "code": "package sitemap\n\n// Provides information about the current state of the locale comparison editor.\nInterface I_CmsLocaleCompareContext;\n// Dialog used to copy container pages including their elements.\nClass CmsCopyPageDialog;\n// View used to compare sitemaps across locales.\nClass CmsLocaleComparePanel;\n// Dialog used to select a resource which should be linked to a locale group.\nClass CmsLocaleLinkTargetSelectionDialog;\n", "des": "Vaadin GUI components and utilities for use in the sitemap editor."}
{"index": 3359, "repo": "opencms-core-15.0", "code": "package util\n\n// Listener interface.\nInterface CmsLogicalCheckboxGroup.I_ChangeListener;\n// Interface for callbacks which should be notified when this helper has created a resource.\nInterface CmsNewResourceBuilder.I_Callback;\n// Interface for item sorters that evaluate the sortable container properties.\nInterface I_CmsItemSorter;\n// Converts null values to an empty string for the input widgets.\nClass CmsComboNullToEmptyConverter;\n", "des": "Utilities for Vaadin workplace code."}
{"index": 3360, "repo": "opencms-core-15.0", "code": "package table\n\n// Builds a table based on a given bean class.\nClass CmsBeanTableBuilder<T>;\n// Contains utility methods for Vaadin tables.\nClass CmsTableUtil;\n// Annotation used to mark up bean properties with metadata for table columns.\nAnnotation Type Column;\n", "des": "Contains utility classes for dealing with Vaadin tables."}
{"index": 3361, "repo": "opencms-core-15.0", "code": "package util\n\n// Closeable interface that throws no exceptions.\nInterface I_CmsCloseable;\n// HTML converters can be used to clean up HTML code and/or pretty print the code.\nInterface I_CmsHtmlConverter;\n// Interface for a combination of a visitor of HTML documents along with the hook to start the parser / lexer that triggers the visit.\nInterface I_CmsHtmlNodeVisitor;\n", "des": "Utility functions for String manipulation and other often used tasks."}
{"index": 3362, "repo": "opencms-core-15.0", "code": "package widgets\n\n// Widgets to be used with the new XML content editor are required to implement this interface.\nInterface I_CmsADEWidget;\n// Interface for complex widgets which are used in the Acacia editor to render whole nested contents.\nInterface I_CmsComplexWidget;\n// Enables a dynamic configuration of values for the A_CmsGalleryWidget.\nInterface I_CmsGalleryWidgetDynamicConfiguration;\n", "des": "Contains the widget implementations, these are GUI elements used in editors and dialogs of the OpenCms workplace."}
{"index": 3363, "repo": "opencms-core-15.0", "code": "package serialdate\n\n// Interface for serial date beans.\nInterface I_CmsSerialDateBean;\n// Abstract base class for serial date beans.\nClass A_CmsSerialDateBean;\n// Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a daily base.\nClass CmsSerialDateBeanDaily;\n// Wrapper for the value stored by the CmsSerialDateWidget that provides easy access.\nClass CmsSerialDateBeanFactory;\n", "des": "Contains the server-side widget implementation, for the serial date widget.."}
{"index": 3364, "repo": "opencms-core-15.0", "code": "package workflow\n\n// Validator which can exclude some resources from publishing and supplies a status object for the excluded resources.\nInterface CmsDefaultPublishResourceFormatter.I_PublishResourceValidator;\n// 'Formats' a ResourceMap containing resources for publishing by creating a list of CmsPublishResource beans with the appropriate status informations to display.\nInterface I_CmsPublishResourceFormatter;\n// Workflow manager interface.\nInterface I_CmsWorkflowManager;\n", "des": "Classes related to publishing and workflow."}
{"index": 3365, "repo": "opencms-core-15.0", "code": "package workplace\n\n// Provides a method for selecting an individual jsp dialog.\nInterface I_CmsDialogHandler;\n// Interface for transforming group names into a more human-readable form.\nInterface I_CmsGroupNameTranslation;\n// An interface which provides a hook which can be called after uploading files.\nInterface I_CmsPostUploadDialogHandler;\n// Evaluates the repository folder.\nInterface I_CmsRepositoryFolderHandler;\n", "des": "The base classes for the OpenCms Workplace (standard dialog, tab dialog, report based dialog) and the Workplace configuration classes are located here."}
{"index": 3366, "repo": "opencms-core-15.0", "code": "package commons\n\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains often used OpenCms Workplace dialogs, for example for file operations, user preferences and project based operations like publishing."}
{"index": 3367, "repo": "opencms-core-15.0", "code": "package comparison\n\n// Comparison of resource attributes.\nClass CmsAttributeComparison;\n// Wrapper class for the different types of diff modes.\nClass CmsDiffViewMode;\n// Comparison of two xml page elements.\nClass CmsElementComparison;\n// Utility methods for the history list.\nClass CmsHistoryListUtil;\n// OpenCms Html Diff operation configuration class.\nClass CmsHtmlDifferenceConfiguration;\n// Comparison of two OpenCms resources.\nClass CmsResourceComparison;\n", "des": "Utilities for comparing different versions of resources, used by both the classic workplace and the new Vaadin-based workplace."}
{"index": 3368, "repo": "opencms-core-15.0", "code": "package editors\n\n// Provides a method for performing an individual action if the user pressed a special button in the editor.\nInterface I_CmsEditorActionHandler;\n// Provides methods to determine the CSS style sheet URI for the editors based on the edited resource path.\nInterface I_CmsEditorCssHandler;\n// Provides a method for selecting an individual file editor.\nInterface I_CmsEditorHandler;\n// Provides a method for assigning additional resource types to editors.\nInterface I_CmsEditorTypeMatcher;\n", "des": "Base classes for the editors (WYSIWYG, plain text, XML content) used in the OpenCms Workplace."}
{"index": 3369, "repo": "opencms-core-15.0", "code": "package directedit\n\n// Provides the methods to generate the \"direct edit\" HTML fragments that are inserted in the generated pages in offline mode.\nInterface I_CmsDirectEditProvider;\n// Edit handlers are optional and can be configured within the XSD-schema of a resource type.\nInterface I_CmsEditHandler;\n// Basic functions for direct edit providers.\nClass A_CmsDirectEditProvider;\n// Provider for the OpenCms AdvancedDirectEdit.\nClass CmsAdvancedDirectEditProvider;\n", "des": "Used to control the generation of the HTML for the \"direct edit\" buttons."}
{"index": 3370, "repo": "opencms-core-15.0", "code": "package explorer\n\n// Explorer type access object, encapsulates access control entries and lists of a explorer type.\nClass CmsExplorerTypeAccess;\n// Class which listens for cache flush events to uncache cached access control settings.\nClass CmsExplorerTypeAccessFlushListener;\n// Holds all information to build the explorer context menu of a resource type and information for the new resource dialog.\nClass CmsExplorerTypeSettings;\n// An icon configuration rule for an explorer type.\nClass CmsIconRule;\n", "des": "Contains the functions that generate the Workplace \"Explorer\" view, also contains the \"New resource\" wizard."}
{"index": 3371, "repo": "opencms-core-15.0", "code": "package galleries\n\n// Provides the general helper methods to generate the content of a gallery dialog used in the XML content editors, WYSIWYG editors and context menu.\nClass A_CmsAjaxGallery;\n// Provides the specific constants, members and helper methods to generate the content of the download gallery dialog used in the XML content editors, WYSIWYG editors and context menu.\nClass CmsAjaxDownloadGallery;\n", "des": "Contains the various \"Galleries\" which are available in the editors and widgets of the OpenCms Workplace."}
{"index": 3372, "repo": "opencms-core-15.0", "code": "package list\n\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Generates the list views commonly used in the OpenCms Workplace \"Administration\" tools."}
{"index": 3373, "repo": "opencms-core-15.0", "code": "package threads\n\n// Abstract thread to keep track of operation progress.\nClass A_CmsProgressThread;\n// Imports an OpenCms export file into the VFS.\nClass CmsDatabaseImportThread;\n// Exports selected resources of the OpenCms into an OpenCms export file.\nClass CmsExportThread;\n// Thread for extern link validation.\nClass CmsExternalLinksValidatorThread;\n// Deletes a module.\nClass CmsModuleDeleteThread;\n// Replaces a module.\nClass CmsModuleReplaceThread;\n// Deletes a project.\nClass CmsProjectDeleteThread;\n", "des": "A collection of thread classes that are used in the OpenCms Workplace, usually in connection with a report."}
{"index": 3374, "repo": "opencms-core-15.0", "code": "package tools\n\n// Interface for html buttons with icon.\nInterface I_CmsHtmlIconButton;\n// Interface for an admin tool handler.\nInterface I_CmsToolHandler;\n// Default skeleton for an html icon button.\nClass A_CmsHtmlIconButton;\n// Helper class to build easily other admin tool handlers.\nClass A_CmsToolHandler;\n// Default admin tool handler.\nClass CmsDefaultToolHandler;\n// Dialog for explorer views in the administration view.\nClass CmsExplorerDialog;\n", "des": "Contains the base classes for implementing a tool in the OpenCms Workplace \"Administration\" view."}
{"index": 3375, "repo": "opencms-core-15.0", "code": "package scheduler\n\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "This package contains the tool classes for the job management related administration views."}
{"index": 3376, "repo": "opencms-core-15.0", "code": "package xml\n\n// Describes the API to access the values of a XML content document.\nInterface I_CmsXmlDocument;\n// Provides basic XML document handling functions useful when dealing with XML documents that are stored in the OpenCms VFS.\nClass A_CmsXmlDocument;\n// Describes the structure definition of an XML content object.\nClass CmsXmlContentDefinition;\n// Manager class for registered OpenCms XML content types and content collectors.\nClass CmsXmlContentTypeManager;\n", "des": "Basic XML functionality and utilities used by OpenCms to maintain XML documents and content."}
{"index": 3377, "repo": "opencms-core-15.0", "code": "package containerpage\n\n// Configurable & expandable configuration.\nInterface I_CmsADEConfiguration;\n// Interface representing a configured formatter.\nInterface I_CmsFormatterBean;\n// Cache object instance for simultaneously cache online and offline items.\nClass CmsADECache;\n// The cache settings for ADE.\nClass CmsADECacheSettings;\n// ADE's session cache.\nClass CmsADESessionCache;\n", "des": "Contains functions for the ADE main pages, commonly called \"Container Pages\" in OpenCms."}
{"index": 3378, "repo": "opencms-core-15.0", "code": "package content\n\n// Handles changes during the xml content editor session.\nInterface I_CmsXmlContentEditorChangeHandler;\n// Handles special XML content livetime events, and also provides XML content editor rendering hints.\nInterface I_CmsXmlContentHandler;\n// This class represents a location in an XML content for a specific locale.\nInterface I_CmsXmlContentLocation;\n// Interface representing an XML content location which corresponds to an actual content value.\nInterface I_CmsXmlContentValueLocation;\n", "des": "Contains functions for structured content storage using XML, commonly called \"XML content\" in OpenCms."}
{"index": 3379, "repo": "opencms-core-15.0", "code": "package page\n\n// Implementation of a page object used to access and manage xml data.\nClass CmsXmlPage;\n// Provides factory methods to unmarshal (read) an XML page object.\nClass CmsXmlPageFactory;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains functions for unstructured content storage using XML, commonly called \"XML pages\" in OpenCms."}
{"index": 3380, "repo": "opencms-core-15.0", "code": "package types\n\n// Provides access to the value of a specific XML content node.\nInterface I_CmsXmlContentValue;\n// Describes a type in an OpenCms XML schema based content definition.\nInterface I_CmsXmlSchemaType;\n// Interface to provide specific error messages on validation\nInterface I_CmsXmlValidateWithMessage;\n// Base class for XML content value implementations.\nClass A_CmsXmlContentValue;\n", "des": "Contains the basic XML content type definitions, used for XML content and XML pages."}
{"index": 3381, "repo": "dagger-2.47", "code": "package dagger\n\n// A handle to a lazily-computed value.\nInterface Lazy<T>;\n// Injects dependencies into the fields and methods on instances of type T.\nInterface MembersInjector<T>;\n// Annotates abstract methods of a Module that delegate bindings.\nAnnotation Type Binds;\n// Marks a method on a component builder or a parameter on a component factory as binding an instance to some key within the component.\nAnnotation Type BindsInstance;\n", "des": "This package contains the public API for the Dagger 2 dependency injection framework."}
{"index": 3382, "repo": "dagger-2.47", "code": "package assisted\n\n// Annotates a parameter within an AssistedInject-annotated constructor.\nAnnotation Type Assisted;\n// Annotates an abstract class or interface used to create an instance of a type via an AssistedInject constructor.\nAnnotation Type AssistedFactory;\n// Annotates the constuctor of a type that will be created via assisted injection.\nAnnotation Type AssistedInject;\n", "des": "This package contains the API for Dagger's assisted injection."}
{"index": 3383, "repo": "dagger-2.47", "code": "package multibindings\n\n// A MapKey annotation for maps with Class<?> keys.\nAnnotation Type ClassKey;\n// The method's return type is Set<T> and all values are contributed to the set.\nAnnotation Type ElementsIntoSet;\n// A MapKey annotation for maps with int keys.\nAnnotation Type IntKey;\n", "des": "This package contains the API by which Dagger allows you to bind several objects into a collection that can be injected without depending directly on each of the individual bindings."}
{"index": 3384, "repo": "commons-imaging-1.0-alpha3", "code": "package imaging\n\n// Simple image format interface.\nInterface ImageFormat;\n// A selection of tools for evaluating and manipulating color spaces, color values, etc.\nClass ColorTools;\n// Provides information about the compliance of a specified data source (byte array, file, etc.) to an image format.\nClass FormatCompliance;\n// Used to store metadata and descriptive information extracted from image files.\nClass ImageDump;\n", "des": "The main package for Apache Commons Imaging."}
{"index": 3385, "repo": "commons-imaging-1.0-alpha3", "code": "package color\n\n// Represents a color in the CIELAB color space, also known as LAB color space.\nClass ColorCieLab;\n// Represents a color in the CIELCH color space.\nClass ColorCieLch;\n// Represents a color in the CIELUV color space..\nClass ColorCieLuv;\n// Represents a color in the CMY color space.\nClass ColorCmy;\n// Represents a color in the CMYK color space.\nClass ColorCmyk;\n// \nClass ColorConversions;\n", "des": "Color spaces and conversions between them."}
{"index": 3386, "repo": "commons-imaging-1.0-alpha3", "code": "package common\n\n// \nInterface BufferedImageFactory;\n// \nInterface ImageMetadata;\n// \nInterface ImageMetadata.ImageMetadataItem;\n// Implementations support embedding the Extensible Metadata Platform tags.\nInterface XmpEmbeddable;\n// A rudimentary preprocessor and parser for the C programming language.\nClass BasicCParser;\n// \nClass BinaryConstant;\n// \nClass BinaryFileParser;\n// Convenience methods for various binary and I/O operations.\nClass BinaryFunctions;\n// \nClass BinaryOutputStream;\n", "des": "Provides utility classes that are employed across multiple image formats and sub-packages."}
{"index": 3387, "repo": "commons-imaging-1.0-alpha3", "code": "package bytesource\n\n// \nClass ByteSource;\n// \nClass ByteSourceArray;\n// \nClass ByteSourceFile;\n// \nClass ByteSourceInputStream;\n", "des": "Encapsulates sources from which data may be read."}
{"index": 3388, "repo": "commons-imaging-1.0-alpha3", "code": "package itu_t4\n\n// \nClass T4AndT6Compression;\n", "des": "Provides ITU-T T.4 and T.6 compression classes."}
{"index": 3389, "repo": "commons-imaging-1.0-alpha3", "code": "package mylzw\n\n// \nInterface MyLzwCompressor.Listener;\n// \nInterface MyLzwDecompressor.Listener;\n// \nClass BitsToByteInputStream;\n// \nClass MyBitInputStream;\n// \nClass MyBitOutputStream;\n// \nClass MyLzwCompressor;\n// \nClass MyLzwDecompressor;\n", "des": "Provides LZW compression."}
{"index": 3390, "repo": "commons-imaging-1.0-alpha3", "code": "package bmp\n\n// \nClass BmpImageParser;\n// Bmp format parameters.\nClass BmpImagingParameters;\n", "des": "The BMP image format."}
{"index": 3391, "repo": "commons-imaging-1.0-alpha3", "code": "package dcx\n\n// \nClass DcxImageParser;\n", "des": "The DCX image format."}
{"index": 3392, "repo": "commons-imaging-1.0-alpha3", "code": "package gif\n\n// \nClass GifImageMetadata;\n// \nClass GifImageMetadataItem;\n// \nClass GifImageParser;\n// Gif format parameters.\nClass GifImagingParameters;\n// Describes the disposal of a GIF frame when rendering the animation.\nEnum DisposalMethod;\n", "des": "The GIF image format."}
{"index": 3393, "repo": "commons-imaging-1.0-alpha3", "code": "package icns\n\n// \nClass IcnsImageParser;\n// Icns format parameters.\nClass IcnsImagingParameters;\n", "des": "The ICNS image format."}
{"index": 3394, "repo": "commons-imaging-1.0-alpha3", "code": "package ico\n\n// \nClass IcoImageParser;\n// Ico format parameters.\nClass IcoImagingParameters;\n", "des": "The ICO/CUR image formats."}
{"index": 3395, "repo": "commons-imaging-1.0-alpha3", "code": "package jpeg\n\n// \nInterface JpegUtils.Visitor;\n// \nClass JpegConstants;\n// \nClass JpegImageMetadata;\n// \nClass JpegImageParser;\n// Jpeg format parameters.\nClass JpegImagingParameters;\n// \nClass JpegPhotoshopMetadata;\n// \nClass JpegUtils;\n", "des": "The JPEG image format."}
{"index": 3396, "repo": "commons-imaging-1.0-alpha3", "code": "package decoder\n\n// \nClass JpegDecoder;\n", "des": "JPEG image format decoder."}
{"index": 3397, "repo": "commons-imaging-1.0-alpha3", "code": "package exif\n\n// Interface for Exif write/update/remove functionality for Jpeg/JFIF images.\nClass ExifRewriter;\n// \nClass ExifRewriter.ExifOverflowException;\n", "des": "JPEG image format Exif utilities."}
{"index": 3398, "repo": "commons-imaging-1.0-alpha3", "code": "package iptc\n\n// \nInterface IptcType;\n// Represents an IPTC block, a set of key-value pairs of Photoshop IPTC data.\nClass IptcBlock;\n// \nClass IptcConstants;\n// \nClass IptcParser;\n// \nClass IptcRecord;\n// \nClass IptcTypeLookup;\n// Interface for Exif write/update/remove functionality for Jpeg/JFIF images.\nClass JpegIptcRewriter;\n// \nClass PhotoshopApp13Data;\n// \nEnum IptcTypes;\n", "des": "JPEG image format IPTC metadata."}
{"index": 3399, "repo": "commons-imaging-1.0-alpha3", "code": "package segments\n\n// \nClass App13Segment;\n// http://www.aiim.org/documents/standards/PDF-Ref/References/Adobe/5116.DCT_Filter.pdf\nClass App14Segment;\n// \nClass App2Segment;\n// \nClass AppnSegment;\n// \nClass ComSegment;\n// \nClass DhtSegment;\n// \nClass DhtSegment.HuffmanTable;\n// \nClass DqtSegment;\n// \nClass DqtSegment.QuantizationTable;\n// \nClass GenericSegment;\n// \nClass JfifSegment;\n// \nClass Segment;\n// \nClass SofnSegment;\n// \nClass SofnSegment.Component;\n// \nClass SosSegment;\n", "des": "JPEG image format segments."}
{"index": 3400, "repo": "commons-imaging-1.0-alpha3", "code": "package xmp\n\n// Interface for Exif write/update/remove functionality for Jpeg/JFIF images.\nClass JpegRewriter;\n// \nClass JpegRewriter.JFIFPiece;\n// \nClass JpegRewriter.JFIFPieces;\n// \nClass JpegRewriter.JFIFPieceSegment;\n// \nClass JpegXmpParser;\n// Interface for Exif write/update/remove functionality for Jpeg/JFIF images.\nClass JpegXmpRewriter;\n// \nClass JpegRewriter.JpegSegmentOverflowException;\n", "des": "JPEG image format XMP metadata."}
{"index": 3401, "repo": "commons-imaging-1.0-alpha3", "code": "package pcx\n\n// \nClass PcxConstants;\n// \nClass PcxImageParser;\n// Parameters used by the Pcx format.\nClass PcxImagingParameters;\n", "des": "The PCX image format."}
{"index": 3402, "repo": "commons-imaging-1.0-alpha3", "code": "package png\n\n// \nClass GammaCorrection;\n// Used to specify physical scale when reading or storing image information.\nClass PhysicalScale;\n// \nClass PngConstants;\n// \nClass PngImageInfo;\n// \nClass PngImageParser;\n// Png format parameters.\nClass PngImagingParameters;\n// \nClass PngText;\n// \nClass PngText.Itxt;\n// \nClass PngText.Text;\n// \nClass PngText.Ztxt;\n// Type of a PNG chunk.\nEnum ChunkType;\n// Interlace methods.\nEnum InterlaceMethod;\n// \nEnum PngColorType;\n", "des": "The PNG image format."}
{"index": 3403, "repo": "commons-imaging-1.0-alpha3", "code": "package pnm\n\n// \nClass PnmImageParser;\n// Pnm format parameters.\nClass PnmImagingParameters;\n", "des": "The PNM image format family."}
{"index": 3404, "repo": "commons-imaging-1.0-alpha3", "code": "package psd\n\n// \nClass PsdHeaderInfo;\n// \nClass PsdImageContents;\n// \nClass PsdImageParser;\n// Psd format parameters.\nClass PsdImagingParameters;\n", "des": "The PSD image format."}
{"index": 3405, "repo": "commons-imaging-1.0-alpha3", "code": "package rgbe\n\n// Parser for Radiance HDR images\nClass RgbeImageParser;\n// Rgbe format parameters.\nClass RgbeImagingParameters;\n", "des": "The Radiance HDR image format."}
{"index": 3406, "repo": "commons-imaging-1.0-alpha3", "code": "package tiff\n\n// \nInterface TiffReader.Listener;\n// \nClass JpegImageData;\n// \nClass TiffContents;\n// Provides methods and elements for accessing an Image File Directory (IFD) from a TIFF file.\nClass TiffDirectory;\n// \nClass TiffDirectory.ImageDataElement;\n// \nClass TiffElement;\n// \nClass TiffElement.DataElement;\n// \nClass TiffElement.Stub;\n// A TIFF field in a TIFF directory.\nClass TiffField;\n// \nClass TiffHeader;\n// \nClass TiffImageData;\n// \nClass TiffImageData.ByteSourceData;\n", "des": "Provides classes and methods for reading and writing Tagged Image File Format (TIFF) files."}
{"index": 3407, "repo": "commons-imaging-1.0-alpha3", "code": "package constants\n\n// TIFF specification supplement 1 Enhancements for Adobe PageMaker(R) 6.0 software http://partners.adobe.com/public/developer/en/tiff/TIFFPM6.pdf\nClass AdobePageMaker6TagConstants;\n// TIFF specification supplement 2 Adobe Photoshop (R) TIFF Technical Notes http://partners.adobe.com/public/developer/en/tiff/TIFFphotoshop.pdf\nClass AdobePhotoshopTagConstants;\n", "des": "TIFF constants."}
{"index": 3408, "repo": "commons-imaging-1.0-alpha3", "code": "package datareaders\n\n// Provides a data reader for TIFF file images organized by tiles.\nClass DataReaderStrips;\n// Provides a data reader for TIFF file images organized by tiles.\nClass DataReaderTiled;\n// Defines the base class for the TIFF file reader classes.\nClass ImageDataReader;\n", "des": "TIFF data readers."}
{"index": 3409, "repo": "commons-imaging-1.0-alpha3", "code": "package fieldtypes\n\n// TIFF field types.\nClass FieldType;\n// \nClass FieldTypeAscii;\n// \nClass FieldTypeByte;\n// \nClass FieldTypeDouble;\n// \nClass FieldTypeFloat;\n// \nClass FieldTypeLong;\n// \nClass FieldTypeRational;\n// \nClass FieldTypeShort;\n", "des": "TIFF field types."}
{"index": 3410, "repo": "commons-imaging-1.0-alpha3", "code": "package photometricinterpreters\n\n// Interpreter for photometric information in TIFF images.\nClass PhotometricInterpreter;\n// \nClass PhotometricInterpreterBiLevel;\n// \nClass PhotometricInterpreterCieLab;\n// \nClass PhotometricInterpreterCmyk;\n// Photometric interpretation Logluv support.\nClass PhotometricInterpreterLogLuv;\n// \nClass PhotometricInterpreterPalette;\n// \nClass PhotometricInterpreterRgb;\n// \nClass PhotometricInterpreterYCbCr;\n", "des": "Classes for TIFF photometric interpretation (specifies the intended interpretation of the image pixel data)."}
{"index": 3411, "repo": "commons-imaging-1.0-alpha3", "code": "package floatingpoint\n\n// Defines an interface for specifying color assignments to floating point values.\nInterface PaletteEntry;\n// Provides a palette entry for colors associated with a range of values.\nClass PaletteEntryForRange;\n// Provides a palette entry for a color assignment to a single value.\nClass PaletteEntryForValue;\n", "des": "Provides supplemental photometric interpreters for TIFF products based on floating-point data."}
{"index": 3412, "repo": "commons-imaging-1.0-alpha3", "code": "package taginfos\n\n// \nClass TagInfo;\n// \nClass TagInfoAny;\n// \nClass TagInfoAscii;\n// \nClass TagInfoAsciiOrByte;\n// \nClass TagInfoAsciiOrRational;\n// \nClass TagInfoByte;\n// \nClass TagInfoByteOrShort;\n// \nClass TagInfoBytes;\n// A LONG representing an offset to a TIFF directory.\nClass TagInfoDirectory;\n// \nClass TagInfoDouble;\n// \nClass TagInfoDoubles;\n// \nClass TagInfoFloat;\n// \nClass TagInfoFloats;\n", "des": "Classes for the TIFF tags."}
{"index": 3413, "repo": "commons-imaging-1.0-alpha3", "code": "package write\n\n// \nClass TiffImageWriterBase;\n// \nClass TiffImageWriterLossless;\n// \nClass TiffImageWriterLossy;\n// \nClass TiffOutputDirectory;\n// \nClass TiffOutputField;\n// \nClass TiffOutputSet;\n", "des": "TIFF writers."}
{"index": 3414, "repo": "commons-imaging-1.0-alpha3", "code": "package wbmp\n\n// \nClass WbmpImageParser;\n// Wbmp format parameters.\nClass WbmpImagingParameters;\n", "des": "The Wireless Application Protocol Bitmap Format image format."}
{"index": 3415, "repo": "commons-imaging-1.0-alpha3", "code": "package xbm\n\n// \nClass XbmImageParser;\n// Xbm format parameters.\nClass XbmImagingParameters;\n", "des": "The X BitMap image format."}
{"index": 3416, "repo": "commons-imaging-1.0-alpha3", "code": "package xpm\n\n// \nClass XpmImageParser;\n// Xpm format parameters.\nClass XpmImagingParameters;\n", "des": "The X PixMap image format."}
{"index": 3417, "repo": "commons-imaging-1.0-alpha3", "code": "package icc\n\n// \nClass IccConstants;\n// \nClass IccProfileInfo;\n// \nClass IccProfileParser;\n// \nClass IccTag;\n// \nEnum IccTagDataTypes;\n// \nEnum IccTagTypes;\n", "des": "ICC color profile."}
{"index": 3418, "repo": "commons-imaging-1.0-alpha3", "code": "package internal\n\n// Internal-only debug class.\nClass Debug;\n// Internal utilities.\nClass Util;\n", "des": "Internal utility classes."}
{"index": 3419, "repo": "commons-imaging-1.0-alpha3", "code": "package palette\n\n// \nInterface MedianCut;\n// Color palette.\nInterface Palette;\n// A comparator for {#link ColorCount} elements.\nClass ColorCountComparator;\n// Dithering algorithms to use when quantizing an image to palette form.\nClass Dithering;\n// \nClass LongestAxisMedianCut;\n// \nClass MedianCutQuantizer;\n// \nClass MostPopulatedBoxesMedianCut;\n// Factory for creating palettes.\nClass PaletteFactory;\n// \nClass QuantizedPalette;\n// \nClass SimplePalette;\n", "des": "Color quantization and palette manipulation tools."}
{"index": 3420, "repo": "gremlin-core-3.6.4", "code": "package kryoshim\n\n// A minimal Input-like abstraction.\nInterface InputShim;\n// A minimal Kryo-like abstraction.\nInterface KryoShim<I extends InputShim,​O extends OutputShim>;\n// This interface exists to decouple HadoopPools from TinkerPop's shaded Kryo.\nInterface KryoShimService;\n// A minimal Output-like abstraction.\nInterface OutputShim;\n// A minimal Serializer-like abstraction.\nInterface SerializerShim<T>;\n// Loads the highest-priority or user-selected KryoShimService.\nClass KryoShimServiceLoader;\n", "des": "Abstracts a minimal subset of Kryo types and methods."}
{"index": 3421, "repo": "gremlin-core-3.6.4", "code": "package shaded\n\n// \nClass ShadedInputAdapter;\n// \nClass ShadedKryoAdapter;\n// \nClass ShadedOutputAdapter;\n// \nClass ShadedSerializerAdapter<T>;\n", "des": "Implementations of the interfaces in org.apache.tinkerpop.gremlin.structure.io.gryo.kryoshim using TinkerPop's shaded copy of Kryo."}
{"index": 3422, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Contract representing some process that needs to occur during after transaction completion.\nInterface AfterTransactionCompletionProcess;\n// Contract representing some process that needs to occur during before transaction completion.\nInterface BeforeTransactionCompletionProcess;\n// An operation which may be scheduled for later execution.\nInterface Executable;\n", "des": "Defines SPI hooks into the ActionQueue."}
{"index": 3423, "repo": "hibernate-core-5.6.15.Final", "code": "package annotations\n\n// Consolidation of hints available to Hibernate JPA queries.\nClass QueryHints;\n// Cache concurrency strategy.\nEnum CacheConcurrencyStrategy;\n// Enumeration for the different interaction modes between the session and the Level 2 Cache.\nEnum CacheModeType;\n// Cascade types (can override default JPA cascades).\nEnum CascadeType;\n// Defines how the association should be fetched, compared to FetchType which defines when it should be fetched\nEnum FetchMode;\n", "des": "Package containing all the Hibernate specific annotations."}
{"index": 3424, "repo": "hibernate-core-5.6.15.Final", "code": "package boot\n\n// Delayed information about an AttributeConverter.\nInterface AttributeConverterInfo;\n// Represents the ORM model as determined from all provided mapping sources.\nInterface Metadata;\n// Contract for specifying various overrides to be used in metamodel building.\nInterface MetadataBuilder;\n// The contract for building a SessionFactory given a number of options.\nInterface SessionFactoryBuilder;\n// Models the definition of caching settings for a particular region.\nClass CacheRegionDefinition;\n", "des": "This package contains the contracts that make up the Hibernate native bootstrapping API (building a SessionFactory)."}
{"index": 3425, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Describes the context for visiting the entries within an archive\nInterface ArchiveContext;\n// Contract for visiting an archive, which might be a jar, a zip, an exploded directory, etc.\nInterface ArchiveDescriptor;\n// Contract for building ArchiveDescriptor instances.\nInterface ArchiveDescriptorFactory;\n// Represent an entry in the archive.\nInterface ArchiveEntry;\n// Handler for archive entries, based on the classified type of the entry\nInterface ArchiveEntryHandler;\n", "des": "Defines the SPI for support of \"scanning\" of \"archives\"."}
{"index": 3426, "repo": "hibernate-core-5.6.15.Final", "code": "package naming\n\n// \nInterface EntityNaming;\n// Context for determining the implicit name for an ANY mapping's discriminator column.\nInterface ImplicitAnyDiscriminatorColumnNameSource;\n// Context for determining the implicit name for an ANY mapping's key column.\nInterface ImplicitAnyKeyColumnNameSource;\n// Context for determining the implicit name related to basic values.\nInterface ImplicitBasicColumnNameSource;\n", "des": "Represents a proposed new approach to allowing hooks into the process of determining the name of database objects (tables, columns, constraints, etc)."}
{"index": 3427, "repo": "hibernate-core-5.6.15.Final", "code": "package registry\n\n// Provides the most basic services needed.\nInterface BootstrapServiceRegistry;\n// Contract for an initiator of services that target the standard ServiceRegistry.\nInterface StandardServiceInitiator<R extends Service>;\n// Specialization of the ServiceRegistry contract mainly for type safety.\nInterface StandardServiceRegistry;\n// Builder for BootstrapServiceRegistry instances.\nClass BootstrapServiceRegistryBuilder;\n", "des": "Defines service registry contracts application are likely to want to utilize for configuring Hibernate behavior."}
{"index": 3428, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// A service for interacting with class loaders.\nInterface ClassLoaderService;\n// \nInterface ClassLoaderService.Work<T>;\n// Indicates a problem performing class loading.\nClass ClassLoadingException;\n", "des": "The class loading service SPI."}
{"index": 3429, "repo": "hibernate-core-5.6.15.Final", "code": "package selector\n\n// Describes the registration of a named strategy implementation.\nInterface StrategyRegistration<T>;\n// Responsible for providing the registrations of strategy selector(s).\nInterface StrategyRegistrationProvider;\n// A simple implementation of StrategyRegistration.\nClass SimpleStrategyRegistrationImpl<T>;\n", "des": "Defines a feature-set around named registration of implementations of various contracts and the ability to select those implementations."}
{"index": 3430, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// \nInterface StrategyCreator<T>;\n// Service which acts as a registry for named strategy implementations.\nInterface StrategySelector;\n// Indicates a problem performing the selection/resolution.\nClass StrategySelectionException;\n", "des": "Defines actual contract used for strategy selection : StrategySelector."}
{"index": 3431, "repo": "hibernate-core-5.6.15.Final", "code": "package xsd\n\n// Support for XSD handling related to Hibernate's `cfg.xml` and JPA's `persistence.xml`.\nClass ConfigXsdSupport;\n// When Hibernate loads an XSD we fully expect that to be resolved from our jar file via ClassLoader resource look-up.\nClass LocalXsdResolver;\n// Support for XSD handling related to Hibernate's `hbm.xml` and JPA's `orm.xml`.\nClass MappingXsdSupport;\n// Representation of a locally resolved XSD\nClass XsdDescriptor;\n", "des": "Support for XSD handling, specifically for ORM mappings (Hibernate's `hbm.xml` and JPA's `orm.xml`) and config files (Hibernate's `cfg.xml` and JPA's `persistence.xml`)"}
{"index": 3432, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Interface to be implemented by collection trackers that hold the expected size od collections, a simplified Map<String, int>.\nInterface CollectionTracker;\n// The context for performing an enhancement.\nInterface EnhancementContext;\n// Class responsible for performing enhancement.\nInterface Enhancer;\n// Contract for controlling how lazy properties get initialized.\nInterface LazyPropertyInitializer;\n// \nInterface LazyPropertyInitializer.InterceptorImplementor;\n// \nInterface UnloadedClass;\n", "des": "package defining bytecode code enhancement (instrumentation) support."}
{"index": 3433, "repo": "hibernate-core-5.6.15.Final", "code": "package interceptor\n\n// Logging related to bytecode enhancement interceptors\nInterface BytecodeInterceptorLogging;\n// \nInterface BytecodeLazyAttributeInterceptor;\n// \nInterface EnhancementHelper.InheritanceChecker;\n// Information about a particular bytecode lazy attribute grouping.\nInterface LazyFetchGroupMetadata;\n// \nInterface SessionAssociableInterceptor;\n// \nClass AbstractInterceptor;\n// \nClass AbstractLazyLoadInterceptor;\n", "des": "interceptor implementations"}
{"index": 3434, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// A proxy factory for \"basic proxy\" generation.\nInterface BasicProxyFactory;\n// Encapsulates bytecode enhancement information about a particular entity.\nInterface BytecodeEnhancementMetadata;\n// Contract for providers of bytecode services to Hibernate.\nInterface BytecodeProvider;\n// A persistence provider provides an instance of this interface to the PersistenceUnitInfo.addTransformer method.\nInterface ClassTransformer;\n", "des": "Package defining bytecode code enhancement (instrumentation) support."}
{"index": 3435, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// SPI contract for Hibernate's second-level cache engine\nInterface CacheImplementor;\n// \nInterface CacheKeysFactory;\n// Defines a context object that a RegionFactory is asked to create (RegionFactory.createTransactionContext(org.hibernate.engine.spi.SharedSessionContractImplementor)}) when a Hibernate Session is created.\nInterface CacheTransactionSynchronization;\n// Specialized Region whose data is accessed directly (not requiring key/item wrapping, e.g.\nInterface DirectAccessRegion;\n", "des": "Defines the integration aspect of Hibernate's second-level caching allowing \"caching back ends\" to be plugged in as a caching provider."}
{"index": 3436, "repo": "hibernate-core-5.6.15.Final", "code": "package support\n\n// Optional interface caching implementors can implement in their CachedDomainDataAccess impls to automatically have them destroyed when this region is destroyed\nInterface AbstractDomainDataRegion.Destructible;\n// Interface type implemented by all wrapper objects in the cache.\nInterface AbstractReadWriteAccess.Lockable;\n// Specialization of StorageAccess for domain data regions\nInterface DomainDataStorageAccess;\n", "des": "Package intended for simplifying the worked needed to implement a caching provider."}
{"index": 3437, "repo": "hibernate-core-5.6.15.Final", "code": "package reflection\n\n// \nInterface AttributeConverterDefinitionCollector;\n// A ClassLoaderAccess implementation based on lazy access to MetadataBuildingOptions\nClass ClassLoaderAccessLazyImpl;\n// \nClass PersistentAttributeFilter;\n", "des": "Defines the capability to merge mapping information from both annotations and orm.xml sources into a unified set of metadata in the Hibernate commons-annotations model."}
{"index": 3438, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Hibernate \"wraps\" a java collection in an instance of PersistentCollection.\nInterface LazyInitializable;\n// Persistent collections are treated as value objects by Hibernate.\nInterface PersistentCollection;\n", "des": "SPI definitions for persistent collections"}
{"index": 3439, "repo": "hibernate-core-5.6.15.Final", "code": "package context\n\n// Indicates that tenant identifiers did not match in cases where CurrentTenantIdentifierResolver.validateExistingCurrentSessions() returns true and there is a mismatch found.\nClass TenantIdentifierMismatchException;\n", "des": "Defines support for \"current session\" feature."}
{"index": 3440, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Defines the contract for implementations which know how to scope the notion of a current session.\nInterface CurrentSessionContext;\n// A callback registered with the SessionFactory that is responsible for resolving the current tenant identifier for use with CurrentSessionContext and SessionFactory.getCurrentSession()\nInterface CurrentTenantIdentifierResolver;\n// Base support for CurrentSessionContext implementors.\nClass AbstractCurrentSessionContext;\n", "des": "SPI level contracts around \"current session\" support."}
{"index": 3441, "repo": "hibernate-core-5.6.15.Final", "code": "package lock\n\n// A strategy abstraction for how locks are obtained in the underlying database.\nInterface LockingStrategy;\n// Base LockingStrategy implementation to support implementations based on issuing SQL SELECT statements\nClass AbstractSelectLockingStrategy;\n// An optimistic locking strategy that forces an increment of the version (after verifying that version hasn't changed).\nClass OptimisticForceIncrementLockingStrategy;\n", "des": "Support for Dialect-specific locking strategies"}
{"index": 3442, "repo": "hibernate-core-5.6.15.Final", "code": "package pagination\n\n// Contract defining dialect-specific LIMIT clause handling.\nInterface LimitHandler;\n// Default implementation of LimitHandler interface.\nClass AbstractLimitHandler;\n// Limit handler for CUBRID\nClass CUBRIDLimitHandler;\n// \nClass FirstLimitHandler;\n// \nClass Informix10LimitHandler;\n// \nClass LegacyFirstLimitHandler;\n// Limit handler that delegates all operations to the underlying dialect.\nClass LegacyLimitHandler;\n", "des": "Support for Dialect-specific pagination strategies"}
{"index": 3443, "repo": "hibernate-core-5.6.15.Final", "code": "package unique\n\n// Dialect-level delegate in charge of applying \"uniqueness\" to a column.\nInterface UniqueDelegate;\n// DB2 does not allow unique constraints on nullable columns.\nClass DB2UniqueDelegate;\n// The default UniqueDelegate implementation for most dialects.\nClass DefaultUniqueDelegate;\n// Informix requires the constraint name to come last on the alter table.\nClass InformixUniqueDelegate;\n// \nClass MySQLUniqueDelegate;\n", "des": "Support for Dialect-specific unique constraint definition"}
{"index": 3444, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Provides access to the initial user-provided configuration values.\nInterface ConfigurationService;\n// Simple conversion contract for converting an untyped object to a specified type.\nInterface ConfigurationService.Converter<T>;\n// Standard set of setting converters\nClass StandardConverters;\n", "des": "SPI Package for the configuration service."}
{"index": 3445, "repo": "hibernate-core-5.6.15.Final", "code": "package jdbc\n\n// Wraps a binary stream to also provide the length which is needed when binding.\nInterface BinaryStream;\n// Marker interface for non-contextually created Blob instances..\nInterface BlobImplementer;\n// Wraps a character stream (reader) to also provide the length (number of characters) which is needed when binding.\nInterface CharacterStream;\n// Marker interface for non-contextually created Clob instances..\nInterface ClobImplementer;\n", "des": "Support for various aspects of JDBC interaction"}
{"index": 3446, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Conceptually models a batch.\nInterface Batch;\n// A builder for Batch instances\nInterface BatchBuilder;\n// Unique key for batch identification.\nInterface BatchKey;\n// An observer contract for batch events.\nInterface BatchObserver;\n", "des": "Defines contracts for JDBC batching support."}
{"index": 3447, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// A contract for obtaining JDBC connections.\nInterface ConnectionProvider;\n// Provides centralized access to JDBC connections.\nInterface JdbcConnectionAccess;\n// A specialized Connection provider contract used when the application is using multi-tenancy support requiring tenant aware connections.\nInterface MultiTenantConnectionProvider;\n// Basic support for implementations of MultiTenantConnectionProvider based on DataSources.\nClass AbstractDataSourceBasedMultiTenantConnectionProviderImpl;\n", "des": "Defines contracts for accessing JDBC Connections"}
{"index": 3448, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Contract for JDBC REF_CURSOR support.\nInterface RefCursorSupport;\n", "des": "Defines contracts for JDBC REF_CURSOR support."}
{"index": 3449, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// A factory for generating Dialect instances.\nInterface DialectFactory;\n// Exposes information about the database and JDBC driver that can be used in resolving the appropriate Dialect to use.\nInterface DialectResolutionInfo;\n// Contract for the source of DialectResolutionInfo.\nInterface DialectResolutionInfoSource;\n// Contract for determining the Dialect to use based on information about the database / driver.\nInterface DialectResolver;\n", "des": "Contracts supporting Dialect resolution (from JDBC metadata) and Dialect building."}
{"index": 3450, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// An observer of logical connection events.\nInterface ConnectionObserver;\n// Specialized JdbcWrapper contract for wrapped objects that can additioanlly be invalidated\nInterface InvalidatableWrapper<T>;\n// Coordinates JDBC-related activities.\nInterface JdbcCoordinator;\n// Contract for services around JDBC operations.\nInterface JdbcServices;\n// Generic contract for wrapped JDBC objects.\nInterface JdbcWrapper<T>;\n", "des": "SPI contracts for supporting various aspects of JDBC interaction"}
{"index": 3451, "repo": "hibernate-core-5.6.15.Final", "code": "package jndi\n\n// An exception indicating trouble accessing JNDI\nClass JndiException;\n// Indicates a problem with a given JNDI name being deemed as not valid.\nClass JndiNameException;\n", "des": "Support for JNDI within Hibernate"}
{"index": 3452, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Service providing simplified access to JNDI related features needed by Hibernate.\nInterface JndiService;\n", "des": "The SPI contracts for Hibernate JNDI support"}
{"index": 3453, "repo": "hibernate-core-5.6.15.Final", "code": "package profile\n\n// Models the association of a given fetch.\nClass Association;\n// Models an individual fetch within a profile.\nClass Fetch;\n// A 'fetch profile' allows a user to dynamically modify the fetching strategy used for particular associations at runtime, whereas that information was historically only statically defined in the metadata.\nClass FetchProfile;\n// The type or style of fetch.\nEnum Fetch.Style;\n", "des": "Models the fetch profiles defined by the application"}
{"index": 3454, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Service contract for dealing with native queries.\nInterface NativeQueryInterpreter;\n// Maybe better named a Journaler.\nInterface ParameterParser.Recognizer;\n// \nInterface QueryPlanCache.QueryPlanCreator;\n// NOTE: Consider this contract (and its sub-contracts) as incubating as we transition to 6.0 and SQM\nClass AbstractParameterDescriptor;\n// Encapsulates a JPA EntityGraph provided through a JPQL query hint.\nClass EntityGraphQueryHint;\n", "des": "Defines support for query plans and stored metadata about queries"}
{"index": 3455, "repo": "hibernate-core-5.6.15.Final", "code": "package graph\n\n// Hibernate extension to the JPA entity-graph AttributeNode contract.\nInterface AttributeNode<J>;\n// A container for AttributeNodes.\nInterface Graph<J>;\n// Commonality between AttributeNode and Graph.\nInterface GraphNode<J>;\n// Hibernate extension to the JPA EntityGraph contract.\nInterface RootGraph<J>;\n// Hibernate extension to the JPA entity-graph Subgraph contract.\nInterface SubGraph<J>;\n// A collection of EntityGraph utilities.\nClass EntityGraphs;\n", "des": "Hibernate's (extended) support for JPA's entity graphs"}
{"index": 3456, "repo": "hibernate-core-5.6.15.Final", "code": "package id\n\n// \nInterface AbstractMultiTableBulkIdStrategyImpl.PreparationContext;\n// \nInterface IdTableInfo;\n// \nInterface IdTableSupport;\n// Generalized strategy contract for handling multi-table bulk HQL operations.\nInterface MultiTableBulkIdStrategy;\n// Handler for dealing with multi-table HQL bulk delete statements.\nInterface MultiTableBulkIdStrategy.DeleteHandler;\n// Handler for dealing with multi-table HQL bulk update statements.\nInterface MultiTableBulkIdStrategy.UpdateHandler;\n", "des": "Support for multi-table update and delete statements via id-tables."}
{"index": 3457, "repo": "hibernate-core-5.6.15.Final", "code": "package persistent\n\n// \nClass DeleteHandlerImpl;\n// \nClass Helper;\n// This is a strategy that mimics temporary tables for databases which do not support temporary tables.\nClass PersistentTableBulkIdStrategy;\n// \nClass UpdateHandlerImpl;\n", "des": "Package contains an implementation of MultiTableBulkIdStrategy based on the use of a persistent (ANSI SQL term) table to hold id values."}
{"index": 3458, "repo": "hibernate-core-5.6.15.Final", "code": "package enhanced\n\n// Contract for providing callback access to a DatabaseStructure, typically from the Optimizer.\nInterface AccessCallback;\n// Encapsulates definition of the underlying data structure backing a sequence-style generator.\nInterface DatabaseStructure;\n// Marker interface for optimizer which wishes to know the user-specified initial value.\nInterface InitialValueAwareOptimizer;\n// Performs optimization on an optimizable identifier generator.\nInterface Optimizer;\n", "des": "Enhanced/improved versions of table and sequence based identifier generators targeting portability and unified configuration"}
{"index": 3459, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Represents a JPA event callback (the method).\nInterface Callback;\n// \nInterface CallbackBuilder;\n// \nInterface CallbackBuilder.CallbackRegistrar;\n// \nInterface CallbackDefinition;\n// \nInterface CallbackRegistrar;\n// Registry of Callbacks by entity and type\nInterface CallbackRegistry;\n// Contract for injecting the registry of Callbacks into event listeners.\nInterface CallbackRegistryConsumer;\n// \nEnum CallbackType;\n", "des": "The SPI contracts for supporting JPA lifecycle callbacks."}
{"index": 3460, "repo": "hibernate-core-5.6.15.Final", "code": "package plan\n\n// Base class for LoadPlan-based BatchingEntityLoaderBuilder implementations.\nClass AbstractBatchingEntityLoaderBuilder;\n// A UniqueEntityLoader implementation based on using LoadPlans\nClass AbstractLoadPlanBasedEntityLoader;\n// The base contract for UniqueEntityLoader implementations capable of performing batch-fetch loading of entities using multiple primary key values in the SQL WHERE clause.\nClass BatchingEntityLoader;\n", "des": "Support for entity loaders built on top of the org.hibernate.loader.plan API to apply entity-graphs"}
{"index": 3461, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Describes a collection query space that allows adding joins with other query spaces; used while building a CollectionQuerySpace.\nInterface ExpandingCollectionQuerySpace;\n// Describes a composite query space that allows adding joins with other query spaces; used while building a CompositeQuerySpace.\nInterface ExpandingCompositeQuerySpace;\n", "des": "Defines the SPI for building a metamodel-driven LoadPlan"}
{"index": 3462, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// The context for named parameters.\nInterface NamedParameterContext;\n// Provides values for all options that impact the built query.\nInterface QueryBuildingParameters;\n", "des": "Defines the SPI for obtaining values for options that impact the load query."}
{"index": 3463, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Provides aliases that are used by load queries and ResultSet processors.\nInterface AliasResolutionContext;\n// \nInterface CollectionReferenceAliases;\n// Aggregates the alias/suffix information in relation to an EntityReference todo : add a contract (interface) that can be shared by entity and collection alias info objects as lhs/rhs of a join ?\nInterface EntityReferenceAliases;\n// \nInterface LoadQueryDetails;\n// \nInterface LockModeResolver;\n", "des": "Defines the SPI for the load query generated for the LoadPlan and the ResultSet processor."}
{"index": 3464, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Models the requested fetching of an \"any\" attribute.\nInterface AnyAttributeFetch;\n// Models a Fetch that is specifically for an attribute.\nInterface AttributeFetch;\n// Represents the circular side of a bi-directional entity association.\nInterface BidirectionalEntityReference;\n// Models the requested fetching of a persistent collection attribute.\nInterface CollectionAttributeFetch;\n// A collection element which is a FetchSource.\nInterface CollectionFetchableElement;\n", "des": "Defines the SPI for the building blocks that make up a LoadPlan."}
{"index": 3465, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// The contract for getting value for a persistent property from its container/owner\nInterface Getter;\n// Describes access to a particular persistent property in terms of getting and setting values.\nInterface PropertyAccess;\n// Describes a strategy for persistent property access (field, JavaBean-style property, etc).\nInterface PropertyAccessStrategy;\n// Contract for resolving the PropertyAccessStrategy to use.\nInterface PropertyAccessStrategyResolver;\n", "des": "Defines strategies for accessing the persistent properties of an entity or composite."}
{"index": 3466, "repo": "hibernate-core-5.6.15.Final", "code": "package transaction\n\n// Wraps an exception thrown from a \"local synchronization\" (one registered in the SynchronizationRegistry).\nClass LocalSynchronizationException;\n// Indicates an attempt to register a null synchronization.\nClass NullSynchronizationException;\n// Indicates a call to TransactionCoordinator.explicitJoin() that requires an active transaction where there currently is none.\nClass TransactionRequiredForJoinException;\n", "des": "Defines the resource-level transaction capabilities of Hibernate, which revolves around the TransactionCoordinator contract."}
{"index": 3467, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Provides access to a Connection that is isolated from any \"current transaction\" with the designed purpose of performing DDL commands\nInterface DdlTransactionIsolator;\n// Manages a registry of (local) JTA Synchronization instances\nInterface SynchronizationRegistry;\n// SPI contract for SynchronizationRegistry implementors.\nInterface SynchronizationRegistryImplementor;\n// Models the coordination of all transaction related flows.\nInterface TransactionCoordinator;\n", "des": "Extended SPI contracts for the resource-level transaction capabilities of Hibernate."}
{"index": 3468, "repo": "hibernate-core-5.6.15.Final", "code": "package converter\n\n// The standard approach for defining a MutabilityPlan for converted (AttributeConverter) values is to always assume that they are immutable to make sure that dirty checking, deep copying and second-level caching all work properly no matter what.\nClass AttributeConverterMutabilityPlanImpl<T>;\n// Adapter for incorporating JPA AttributeConverter handling into the SqlTypeDescriptor contract.\nClass AttributeConverterSqlTypeDescriptorAdapter;\n", "des": "Support for handling JPA AttributeConverter instances as part of the Hibernate Type system."}
{"index": 3469, "repo": "hibernate-core-5.6.15.Final", "code": "package sql\n\n// Descriptor for the SQL/JDBC side of a value mapping.\nInterface SqlTypeDescriptor;\n// Convenience base implementation of ValueBinder\nClass BasicBinder<J>;\n// Convenience base implementation of ValueExtractor\nClass BasicExtractor<J>;\n// Descriptor for BIGINT handling.\nClass BigIntTypeDescriptor;\n// Descriptor for BINARY handling.\nClass BinaryTypeDescriptor;\n// Descriptor for BIT handling.\nClass BitTypeDescriptor;\n// Descriptor for BLOB handling.\nClass BlobTypeDescriptor;\n", "des": "Defines handling of the standard JDBC-defined types."}
{"index": 3470, "repo": "poi-ooxml-5.2.3", "code": "package binary\n\n// You need to implement this to handle the results of the sheet parsing.\nInterface XSSFBSheetHandler.SheetContentsHandler;\n// \nClass XSSFBCommentsTable;\n// \nClass XSSFBHyperlinksTable;\n// Experimental parser for Microsoft's ooxml xlsb format.\nClass XSSFBParser;\n// Need to have this mirror class of XSSFRelation because of conflicts with regular ooxml relations.\nClass XSSFBRelation;\n// \nClass XSSFBSharedStringsTable;\n// \nClass XSSFBSheetHandler;\n", "des": "The org.apache.poi.xssf.binary package includes necessary underlying components for streaming/read-only processing of xlsb files."}
{"index": 3471, "repo": "tomcat-jspapi-10.1", "code": "package jsp\n\n// The HttpJspPage interface describes the interaction that a JSP Page Implementation Class must satisfy when using the HTTP protocol.\nInterface HttpJspPage;\n// Stores application-scoped information for the JSP container.\nInterface JspApplicationContext;\n// The JspPage interface describes the generic interaction that a JSP Page Implementation class must satisfy; pages that use the HTTP protocol are described by the HttpJspPage interface.\nInterface JspPage;\n", "des": "Classes and interfaces for the Core JSP 2.0 API."}
{"index": 3472, "repo": "tomcat-jspapi-10.1", "code": "package el\n\n// \nInterface FunctionMapper;\n// \nInterface VariableResolver;\n// \nClass Expression;\n// \nClass ExpressionEvaluator;\n// Provides resolution in EL for the implicit variables of a JSP page.\nClass ImplicitObjectELResolver;\n// Providers resolution of imports and static imports in the Jakarta Server Pages ELResolver chain.\nClass ImportELResolver;\n// The final resolver of the Jakarta Server Pages ELResolver chain.\nClass NotFoundELResolver;\n", "des": "Classes and interfaces for the JSP 2.0 Expression Language API."}
{"index": 3473, "repo": "tomcat-jspapi-10.1", "code": "package tagext\n\n// The BodyTag interface extends IterationTag by defining additional methods that let a tag handler manipulate the content of evaluating its body.\nInterface BodyTag;\n// For a tag to declare that it accepts dynamic attributes, it must implement this interface.\nInterface DynamicAttributes;\n// The IterationTag interface extends Tag by defining one additional method that controls the reevaluation of its body.\nInterface IterationTag;\n", "des": "Classes and interfaces for the definition of JavaServer Pages Tag Libraries."}
{"index": 3474, "repo": "hilt-android-2.47", "code": "package android\n\n// A ActivityRetainedLifecycle class is associated with the lifecycle of the ActivityRetainedComponent.\nInterface ActivityRetainedLifecycle;\n// Listener for receiving a callback for when the ActivityRetainedComponent will no longer be used and destroyed.\nInterface ActivityRetainedLifecycle.OnClearedListener;\n// A class for registering listeners on the ViewModel lifecycle.\nInterface ViewModelLifecycle;\n", "des": "This package contains Hilt APIs for Android applications."}
{"index": 3475, "repo": "hilt-android-2.47", "code": "package components\n\n// A Hilt component that has the lifetime of the activity.\nInterface ActivityComponent;\n// A Hilt component that has the lifetime of a configuration surviving activity.\nInterface ActivityRetainedComponent;\n// A Hilt component that has the lifetime of the fragment.\nInterface FragmentComponent;\n// A Hilt component that has the lifetime of the service.\nInterface ServiceComponent;\n// A Hilt component that has the lifetime of the view.\nInterface ViewComponent;\n", "des": "This package contains Hilt's built-in Components for Android."}
{"index": 3476, "repo": "hilt-android-2.47", "code": "package flags\n\n// Entry point for getting the flag.\nInterface FragmentGetContextFix.FragmentGetContextFixEntryPoint;\n// Runtime flag for the Fragment.getContext() fix.\nClass FragmentGetContextFix;\n// Qualifier annotation to bind disable the Fragment.getContext() fix at runtime.\nAnnotation Type FragmentGetContextFix.DisableFragmentGetContextFix;\n", "des": "Runtime flags to control Hilt behavior for rollout of changes."}
{"index": 3477, "repo": "hilt-android-2.47", "code": "package lifecycle\n\n// A class for registered listeners on a retained lifecycle (generally backed up by a ViewModel).\nInterface RetainedLifecycle;\n// Listener for when the retained lifecycle is cleared.\nInterface RetainedLifecycle.OnClearedListener;\n// Identifies a ViewModel for construction injection.\nAnnotation Type HiltViewModel;\n", "des": "This package contains Hilt APIs for Android applications."}
{"index": 3478, "repo": "hilt-android-2.47", "code": "package migration\n\n// Utility methods for injecting the application when using CustomInject.\nClass CustomInjection;\n// Utility methods for validating if an AndroidEntryPoint-annotated class that is also annotated with OptionalInject was injected by Hilt.\nClass OptionalInjectCheck;\n// When used on a HiltAndroidApp-annotated application, this causes the application to no longer inject itself in onCreate and instead allows it to be injected at some other time.\nAnnotation Type CustomInject;\n", "des": "This package contains Android APIs to help migrating a codebase to Hilt."}
{"index": 3479, "repo": "hilt-android-2.47", "code": "package qualifiers\n\n// Annotation for a Context that corresponds to the activity.\nAnnotation Type ActivityContext;\n// Annotation for an Application Context dependency.\nAnnotation Type ApplicationContext;\n", "des": "This package contains Hilt's built-in Android Qualifier annotations."}
{"index": 3480, "repo": "hilt-android-2.47", "code": "package scopes\n\n// Scope annotation for bindings that should exist for the life of an activity, surviving configuration.\nAnnotation Type ActivityRetainedScoped;\n// Scope annotation for bindings that should exist for the life of an activity.\nAnnotation Type ActivityScoped;\n// Scope annotation for bindings that should exist for the life of a fragment.\nAnnotation Type FragmentScoped;\n// Scope annotation for bindings that should exist for the life of a service.\nAnnotation Type ServiceScoped;\n", "des": "This package contains Hilt's built-in Android Scope annotations."}
{"index": 3481, "repo": "dagger-producers-2.47", "code": "package producers\n\n// An interface that represents the production of a type T.\nInterface Producer<T>;\n// An interface that represents the result of a production of type T, or an exception that was thrown during that production.\nClass Produced<T>;\n// Utility methods to create Producers.\nClass Producers;\n// Enumeration of the options for what happens to a parent component when one of its child components is cancelled.\nEnum CancellationPolicy.Propagation;\n", "des": "This package contains the public API for Dagger 2's producer functionality."}
{"index": 3482, "repo": "dagger-producers-2.47", "code": "package monitoring\n\n// A hook for recording timing of the execution of production components.\nInterface ProductionComponentTimingRecorder;\n// \nInterface ProductionComponentTimingRecorder.Factory;\n// A hook for monitoring the execution of individual producer methods.\nClass ProducerMonitor;\n// A hook for recording the timing of the execution of individual producer methods.\nClass ProducerTimingRecorder;\n// A token that represents an individual producer method.\nClass ProducerToken;\n", "des": "This package provides hooks for monitoring producers."}
{"index": 3483, "repo": "opennlp-uima-2.2.0", "code": "package chunker\n\n// \nInterface ChunkerModelResource;\n// OpenNLP Chunker annotator.\nClass Chunker;\n// \nClass ChunkerModelResourceImpl;\n", "des": "Package related to finding non-recursive syntactic annotation such as noun phrase chunks."}
{"index": 3484, "repo": "opennlp-uima-2.2.0", "code": "package namefind\n\n// \nInterface TokenNameFinderModelResource;\n// \nClass DictionaryNameFinder;\n// OpenNLP Name annotator.\nClass NameFinder;\n// \nClass TokenNameFinderModelResourceImpl;\n", "des": "Package related to finding proper names and numeric amounts."}
{"index": 3485, "repo": "opennlp-uima-2.2.0", "code": "package postag\n\n// \nInterface POSModelResource;\n// \nClass POSModelResourceImpl;\n// OpenNLP Part Of Speech annotator.\nClass POSTagger;\n", "des": "Package related to part-of-speech tagging."}
{"index": 3486, "repo": "opennlp-uima-2.2.0", "code": "package sentdetect\n\n// \nInterface SentenceModelResource;\n// \nClass AbstractSentenceDetector;\n// OpenNLP Sentence annotator.\nClass SentenceDetector;\n// \nClass SentenceModelResourceImpl;\n", "des": "Package related to identifying sentence boundaries."}
{"index": 3487, "repo": "opennlp-uima-2.2.0", "code": "package tokenize\n\n// A TokenizerModel which can be shared between AnalysisEngines and loaded via the UIMA resource model.\nInterface TokenizerModelResource;\n// \nClass AbstractTokenizer;\n// OpenNLP Simple Tokenizer annotator.\nClass SimpleTokenizer;\n// OpenNLP Tokenizer annotator.\nClass Tokenizer;\n// \nClass TokenizerModelResourceImpl;\n// OpenNLP Whitespace Tokenizer annotator.\nClass WhitespaceTokenizer;\n", "des": "Package related to finding tokens or word segments."}
{"index": 3488, "repo": "poi-5.2.3", "code": "package ddf\n\n// The escher record factory interface allows for the creation of escher records from a pointer into a data array.\nInterface EscherRecordFactory;\n// Interface for listening to escher serialization events.\nInterface EscherSerializationListener;\n// Common abstract class for EscherOptRecord and EscherTertiaryOptRecord\nClass AbstractEscherOptRecord;\n// Generates escher records when provided the byte array containing those records.\nClass DefaultEscherRecordFactory;\n", "des": "This package contains classes for decoding the Microsoft Office Drawing format otherwise known as escher henceforth known in POI as the Dreadful Drawing Format."}
{"index": 3489, "repo": "poi-5.2.3", "code": "package hpsf\n\n// \nClass Array;\n// \nClass Blob;\n// Represents a class ID (16 bytes).\nClass ClassID;\n// \nClass ClipboardData;\n// \nClass CodePageString;\n// \nClass Currency;\n// Maintains the instances of CustomProperty that belong to a DocumentSummaryInformation.\nClass CustomProperties;\n// This class represents custom properties in the document summary information stream.\nClass CustomProperty;\n// \nClass Date;\n// \nClass Decimal;\n", "des": "Processes streams in the Horrible Property Set Format (HPSF) in POI filesystems."}
{"index": 3490, "repo": "poi-5.2.3", "code": "package wellknown\n\n// This is a dictionary which maps property ID values to property ID strings.\nClass PropertyIDMap;\n", "des": "Specific support for DocumentSummaryInformation, SummaryInformation types."}
{"index": 3491, "repo": "poi-5.2.3", "code": "package hssf\n\n// \nClass OldExcelFormatException;\n", "des": "Horrible SpreadSheet Format API's for reading/writting Excel files using pure Java."}
{"index": 3492, "repo": "poi-5.2.3", "code": "package eventusermodel\n\n// Interface for use with the HSSFRequest and HSSFEventFactory.\nInterface HSSFListener;\n// Abstract class for use with the HSSFRequest and HSSFEventFactory, which allows for the halting of processing.\nClass AbortableHSSFListener;\n// When working with the EventUserModel, if you want to process formulas, you need an instance of InternalWorkbook to pass to a HSSFWorkbook, to finally give to HSSFFormulaParser, and this will build you stub ones.\nClass EventWorkbookBuilder;\n", "des": "HSSF eventmodel Package provides an event-based API for reading HSSF files."}
{"index": 3493, "repo": "poi-5.2.3", "code": "package model\n\n// \nClass ConvertAnchor;\n// Provides utilities to manage drawing groups.\nClass DrawingManager2;\n// HSSF wrapper for the FormulaParser and FormulaRenderer\nClass HSSFFormulaParser;\n// Low level model implementation of a Sheet (one workbook contains many sheets) This file contains the low level binary records starting at the sheets BOF and ending with the sheets EOF.\nClass InternalSheet;\n// Low level model implementation of a Workbook.\nClass InternalWorkbook;\n", "des": "Provides low level API structures for reading, writing, modifying XLS files."}
{"index": 3494, "repo": "poi-5.2.3", "code": "package record\n\n// \nInterface BiffHeaderInput;\n// The cell value record interface is implemented by all classes of type Record that contain cell values.\nInterface CellValueRecordInterface;\n// \nInterface CFRuleBase.ComparisonOperator;\n// \nInterface HSSFRecordTypes.RecordConstructor<T extends Record>;\n// The margin interface is a parent used to define left, right, top and bottom margins.\nInterface Margin;\n// \nInterface SubRecord.SubRecordTypes.RecordConstructor<T extends SubRecord>;\n", "des": "Record package contains class representations for XLS binary strutures."}
{"index": 3495, "repo": "poi-5.2.3", "code": "package aggregates\n\n// \nInterface RecordAggregate.RecordVisitor;\n// CFRecordsAggregate - aggregates Conditional Formatting records CFHeaderRecord and number of up CFRuleRecord records together to simplify access to them.\nClass CFRecordsAggregate;\n// Manages the all the records associated with a chart sub-stream.\nClass ChartSubstreamRecordAggregate;\n// \nClass ColumnInfoRecordsAggregate;\n// Holds all the conditional formatting for a workbook sheet.\nClass ConditionalFormattingTable;\n", "des": "The record aggregates are not real \"records\" but collections of records that act as a single record."}
{"index": 3496, "repo": "poi-5.2.3", "code": "package usermodel\n\n// An interface that indicates whether a class can contain children.\nInterface HSSFShapeContainer;\n// \nInterface HSSFShapeTypes;\n// Data Validation Constraint\nClass DVConstraint;\n// Translates Graphics calls into escher calls.\nClass EscherGraphics;\n// Translates Graphics2d calls into escher calls.\nClass EscherGraphics2d;\n// Stores width and height details about a font.\nClass FontDetails;\n// Common class for HSSFHeader and HSSFFooter.\nClass HeaderFooter;\n", "des": "The usermodel package maps HSSF low level structures to familiar workbook/sheet model"}
{"index": 3497, "repo": "poi-5.2.3", "code": "package util\n\n// See OOO documentation: excelfileformat.pdf sec 2.5.14 - 'Cell Range Address'\nClass CellRangeAddress8Bit;\n// Intends to provide support for the very evil index to triplet issue and will likely replace the color constants interface for HSSF 2.0.\nClass HSSFColor;\n// Utility for delaying the concatenation of multiple byte arrays.\nClass LazilyConcatenatedByteArray;\n// Utility class for helping convert RK numbers.\nClass RKUtil;\n", "des": "The util package contains tools needed for writing HSSF files that are not necesarily \"real\" HSSF concepts."}
{"index": 3498, "repo": "poi-5.2.3", "code": "package common\n\n// A repository for constants shared by POI classes.\nInterface POIFSConstants;\n// A class describing attributes of the Big Block Size\nClass POIFSBigBlockSize;\n", "des": "common package contains constants and other classes shared across all POIFS subpackages"}
{"index": 3499, "repo": "poi-5.2.3", "code": "package crypt\n\n// \nInterface EncryptionInfoBuilder;\n// \nClass ChunkedCipherInputStream;\n// \nClass ChunkedCipherOutputStream;\n// Helper functions used for standard and agile encryption\nClass CryptoFunctions;\n// \nClass DataSpaceMapUtils;\n// \nClass DataSpaceMapUtils.DataSpaceDefinition;\n// \nClass DataSpaceMapUtils.DataSpaceMap;\n// \nClass DataSpaceMapUtils.DataSpaceMapEntry;\n// \nClass DataSpaceMapUtils.DataSpaceVersionInfo;\n// \nClass DataSpaceMapUtils.IRMDSTransformInfo;\n", "des": "Implementation of the ECMA-376 and MS-propritary document encryptions"}
{"index": 3500, "repo": "poi-5.2.3", "code": "package dev\n\n// Interface for a drill-down viewable object.\nInterface POIFSViewable;\n// Dump internal structure of a OLE2 file into file system\nClass POIFSDump;\n// A lister of the entries in POIFS files.\nClass POIFSLister;\n// This class contains methods used to inspect POIFSViewable objects\nClass POIFSViewEngine;\n// A simple viewer for POIFS files\nClass POIFSViewer;\n", "des": "DEV package serves two purposes."}
{"index": 3501, "repo": "poi-5.2.3", "code": "package eventfilesystem\n\n// Interface POIFSReaderListener\nInterface POIFSReaderListener;\n// An event-driven reader for POIFS file systems.\nClass POIFSReader;\n// Class POIFSReaderEvent\nClass POIFSReaderEvent;\n", "des": "The eventfilesystem is an efficient method for reading OLE 2 CDF files."}
{"index": 3502, "repo": "poi-5.2.3", "code": "package filesystem\n\n// This interface defines behaviors for objects managed by the Block Allocation Table (BAT).\nInterface BATManaged;\n// This interface defines methods specific to Directory objects managed by a Filesystem instance.\nInterface DirectoryEntry;\n// This interface defines methods specific to Document objects managed by a Filesystem instance.\nInterface DocumentEntry;\n// This interface provides access to an object managed by a Filesystem instance.\nInterface Entry;\n", "des": "filesystem package maps OLE 2 Compound document files to a more familiar filesystem interface."}
{"index": 3503, "repo": "poi-5.2.3", "code": "package property\n\n// This interface defines methods for finding and setting sibling Property instances\nInterface Child;\n// Behavior for parent (directory) properties\nInterface Parent;\n// Interface PropertyConstants\nInterface PropertyConstants;\n// Directory property\nClass DirectoryProperty;\n// \nClass DirectoryProperty.PropertyComparator;\n// Trivial extension of Property for POIFSDocuments\nClass DocumentProperty;\n", "des": "property package contains high and low level Property structures for POIFS."}
{"index": 3504, "repo": "poi-5.2.3", "code": "package storage\n\n// An interface for persisting block storage of POIFS components.\nInterface BlockWritable;\n// Constants used in reading/writing the Header block\nInterface HeaderBlockConstants;\n// A block of block allocation table entries.\nClass BATBlock;\n// \nClass BATBlock.BATBlockAndIndex;\n// The block containing the archive header\nClass HeaderBlock;\n", "des": "storage package contains low level binary structures for POIFS's implementation of the OLE 2 Compound Document Format."}
{"index": 3505, "repo": "poi-5.2.3", "code": "package format\n\n// Formats a date value.\nClass CellDateFormatter;\n// This class implements printing out an elapsed time format.\nClass CellElapsedFormatter;\n// Format a value according to the standard Excel behavior.\nClass CellFormat;\n// This object represents a condition in a cell format.\nClass CellFormatCondition;\n// Objects of this class represent a single part of a cell format expression.\nClass CellFormatPart;\n", "des": "This package contains classes that implement cell formatting"}
{"index": 3506, "repo": "poi-5.2.3", "code": "package formula\n\n// Abstracts a cell for the purpose of formula evaluation.\nInterface EvaluationCell;\n// Abstracts a name record for formula evaluation.\nInterface EvaluationName;\n// Abstracts a sheet for the purpose of formula evaluation.\nInterface EvaluationSheet;\n// Abstracts a workbook for the purpose of formula evaluation.\nInterface EvaluationWorkbook;\n// Should be implemented by any Ptg subclass that needs has an extern sheet index For POI internal use only\nInterface ExternSheetReferenceToken;\n", "des": "This package contains common internal POI code for manipulating formulas."}
{"index": 3507, "repo": "poi-5.2.3", "code": "package ptg\n\n// Common interface for AreaPtg and Area3DPtg, and their child classes.\nInterface AreaI;\n// An XSSF only special kind of Ptg, which stores the sheet / book reference in string form.\nInterface Pxg;\n// An XSSF only special kind of Ptg, which stores a range of sheet / book references in string form.\nInterface Pxg3D;\n", "des": "The formula package contains binary PTG structures used in Formulas"}
{"index": 3508, "repo": "poi-5.2.3", "code": "package util\n\n// Implementors of this interface allow client code to 'delay' writing to a certain section of a data output stream. A typical application is for writing BIFF records when the size is not known until well after the header has been written.\nInterface DelayableLittleEndianOutput;\n// behavior of a field at a fixed location within a byte array\nInterface FixedField;\n// \nInterface GenericRecordJsonWriter.GenericRecordHandler;\n// \nInterface GenericRecordXmlWriter.GenericRecordHandler;\n", "des": "Top-level util package are classes that are useful throughout the project."}
{"index": 3509, "repo": "opennlp-tools-2.2.0", "code": "package chunker\n\n// The interface for chunkers which provide chunk tags for a sequence of tokens.\nInterface Chunker;\n// Interface for a BeamSearchContextGenerator used in syntactic chunking.\nInterface ChunkerContextGenerator;\n// A marker interface for evaluating chunkers.\nInterface ChunkerEvaluationMonitor;\n// Cross validator for Chunker.\nClass ChunkerCrossValidator;\n// The ChunkerEvaluator measures the performance of the given Chunker with the provided reference samples.\nClass ChunkerEvaluator;\n", "des": "Package related to finding non-recursive syntactic annotation such as noun phrase chunks."}
{"index": 3510, "repo": "opennlp-tools-2.2.0", "code": "package lemmatizer\n\n// A default implementation of EvaluationMonitor that prints to an output stream.\nClass LemmaEvaluationErrorListener;\n// A default LemmaSample-centric implementation of AbstractEvaluatorTool that prints to an output stream.\nClass LemmatizerEvaluatorTool;\n// Generates a detailed report for the Lemmatizer.\nClass LemmatizerFineGrainedReportListener;\n// \nClass LemmatizerMETool;\n// Loads a LemmatizerModel for the command line tools.\nClass LemmatizerModelLoader;\n", "des": "Classes giving access to the opennlp.tools.lemmatizer functionalities."}
{"index": 3511, "repo": "opennlp-tools-2.2.0", "code": "package commons\n\n// Represents a generic type of processable elements.\nInterface Sample;\n// Represents a common base for training implementations.\nInterface Trainer;\n// Classes, fields, or methods annotated &#64;Internal are for OpenNLP internal use only.\nAnnotation Type Internal;\n// Classes, fields, or methods annotated &#64;ThreadSafe are safe to use in multithreading contexts.\nAnnotation Type ThreadSafe;\n", "des": "Package related to common interfaces used in different contexts."}
{"index": 3512, "repo": "opennlp-tools-2.2.0", "code": "package dictionary\n\n// An iterable and serializable dictionary implementation.\nClass Dictionary;\n// This classes indexes string lists.\nClass Index;\n", "des": "Package related to parsing and storing dictionaries."}
{"index": 3513, "repo": "opennlp-tools-2.2.0", "code": "package doccat\n\n// A marker interface for evaluating doccat.\nInterface DoccatEvaluationMonitor;\n// Interface for classes which categorize documents.\nInterface DocumentCategorizer;\n// Interface for generating features for document categorization.\nInterface FeatureGenerator;\n// Generates a feature for each word in a document.\nClass BagOfWordsFeatureGenerator;\n// Cross validator for DocumentCategorizer.\nClass DoccatCrossValidator;\n", "des": "Package for classifying a document into a category."}
{"index": 3514, "repo": "opennlp-tools-2.2.0", "code": "package entitylinker\n\n// EntityLinkers establish connections with external data to enrich extracted entities.\nInterface EntityLinker<T extends Span>;\n// Represents a minimal tuple of information.\nClass BaseLink;\n// Generates a EntityLinker instances via a properties file configuration.\nClass EntityLinkerFactory;\n// Properties wrapper for EntityLinker implementations.\nClass EntityLinkerProperties;\n", "des": "Package related to linking entities to external data sources."}
{"index": 3515, "repo": "opennlp-tools-2.2.0", "code": "package formats\n\n// \nInterface NameSampleDataStreamFactory.Parameters;\n// \nInterface ParseSampleStreamFactory.Parameters;\n// \nInterface WordTagSampleStreamFactory.Parameters;\n// Base class for sample stream factories.\nClass AbstractSampleStreamFactory<T,​P>;\n// A sample stream for the training files of the BioNLP/NLPBA 2004 shared task.\nClass BioNLP2004NameSampleStream;\n// \nClass BioNLP2004NameSampleStreamFactory<P>;\n// Factory producing OpenNLP ChunkSampleStreams.\nClass ChunkerSampleStreamFactory<P>;\n", "des": "Experimental package related to converting various corpora to OpenNLP Format."}
{"index": 3516, "repo": "opennlp-tools-2.2.0", "code": "package ad\n\n// Parser for Floresta Sita(c)tica Arvores Deitadas corpus, output to for the Portuguese Chunker training.\nClass ADChunkSampleStream;\n// A Factory to create a Arvores Deitadas ChunkStream from the command line utility.\nClass ADChunkSampleStreamFactory<P>;\n// Parser for Floresta Sita(c)tica Arvores Deitadas corpus, output to for the Portuguese NER training.\nClass ADNameSampleStream;\n", "des": "Experimental package related to the Arvores Deitadas corpus format."}
{"index": 3517, "repo": "opennlp-tools-2.2.0", "code": "package brat\n\n// \nClass AnnotationConfiguration;\n// \nClass AnnotatorNoteAnnotation;\n// \nClass AttributeAnnotation;\n// \nClass BratAnnotation;\n// Reads the annotations from the brat .ann annotation file.\nClass BratAnnotationStream;\n// Brat (brat rapid annotation tool) is based on the stav visualiser which was originally made in order to visualise BioNLP'11 Shared Task data.\nClass BratDocument;\n// \nClass BratDocumentParser;\n// \nClass BratDocumentStream;\n", "des": "Experimental package related to the corpus format used by the \"brat rapid annotation tool\" (brat)."}
{"index": 3518, "repo": "opennlp-tools-2.2.0", "code": "package conllu\n\n// \nClass ConlluLemmaSampleStream;\n// Note: Do not use this class, internal use only!\nClass ConlluLemmaSampleStreamFactory<P>;\n// \nClass ConlluPOSSampleStream;\n// Note: Do not use this class, internal use only!\nClass ConlluPOSSampleStreamFactory<P>;\n// \nClass ConlluSentence;\n// \nClass ConlluSentenceSampleStream;\n// Note: Do not use this class, internal use only!\nClass ConlluSentenceSampleStreamFactory<P>;\n// The CoNNL-U Format is specified here.\nClass ConlluStream;\n", "des": "Experimental package related to the CoNNL-U format."}
{"index": 3519, "repo": "opennlp-tools-2.2.0", "code": "package frenchtreebank\n\n// \nClass ConstitParseSampleStream;\n// Note: Do not use this class, internal use only!\nClass ConstitParseSampleStreamFactory;\n", "des": "Experimental package related to the French Treebank format."}
{"index": 3520, "repo": "opennlp-tools-2.2.0", "code": "package irishsentencebank\n\n// A structure to hold an Irish Sentence Bank document, which is a collection of tokenized sentences.\nClass IrishSentenceBankDocument;\n// \nClass IrishSentenceBankDocument.IrishSentenceBankFlex;\n// \nClass IrishSentenceBankDocument.IrishSentenceBankSentence;\n// \nClass IrishSentenceBankSentenceStreamFactory<P>;\n// \nClass IrishSentenceBankTokenSampleStreamFactory<P>;\n", "des": "Experimental package related to the Irish Sentence Bank format."}
{"index": 3521, "repo": "opennlp-tools-2.2.0", "code": "package leipzig\n\n// \nClass LeipzigLanguageSampleStream;\n// Note: Do not use this class, internal use only!\nClass LeipzigLanguageSampleStreamFactory<P>;\n", "des": "Experimental package related to the Leipzig corpus format."}
{"index": 3522, "repo": "opennlp-tools-2.2.0", "code": "package letsmt\n\n// \nClass DetokenizeSentenceSampleStream;\n// A structure to hold the letsmt document.\nClass LetsmtDocument;\n// A content handler to receive and process SAX events.\nClass LetsmtDocument.LetsmtDocumentHandler;\n// \nClass LetsmtDocument.LetsmtSentence;\n// \nClass LetsmtSentenceStreamFactory<P>;\n", "des": "Experimental package related to the letsmt corpus format."}
{"index": 3523, "repo": "opennlp-tools-2.2.0", "code": "package masc\n\n// \nClass MascDocument;\n// \nClass MascDocumentStream;\n// A class to process the MASC Named entity stand-off annotation file\nClass MascNamedEntityParser;\n// \nClass MascNamedEntitySampleStream;\n// \nClass MascNamedEntitySampleStreamFactory<P>;\n// A class for parsing MASC's Penn tagging/tokenization stand-off annotation\nClass MascPennTagParser;\n// \nClass MascPOSSampleStream;\n// \nClass MascPOSSampleStreamFactory<P>;\n// \nClass MascSentence;\n// \nClass MascSentenceSampleStream;\n", "des": "Experimental package related to the MASC corpus format."}
{"index": 3524, "repo": "opennlp-tools-2.2.0", "code": "package muc\n\n// \nClass Muc6NameSampleStreamFactory;\n// \nClass MucNameContentHandler;\n// \nClass MucNameSampleStream;\n// SAX style SGML parser.\nClass SgmlParser;\n// \nClass SgmlParser.ContentHandler;\n", "des": "Experimental package related to the MUC corpus format."}
{"index": 3525, "repo": "opennlp-tools-2.2.0", "code": "package nkjp\n\n// \nClass NKJPSegmentationDocument;\n// \nClass NKJPSegmentationDocument.Pointer;\n// \nClass NKJPSentenceSampleStream;\n// \nClass NKJPSentenceSampleStreamFactory<P>;\n// The National corpus of Polish (NKJP) format.\nClass NKJPTextDocument;\n", "des": "Experimental package related to the National corpus of Polish NKJP format."}
{"index": 3526, "repo": "opennlp-tools-2.2.0", "code": "package ontonotes\n\n// \nInterface OntoNotesFormatParameters;\n// Reads a plain text file and return each line as a String object.\nClass DocumentToLineStream;\n// Name Sample Stream parser for the OntoNotes 4.0 corpus.\nClass OntoNotesNameSampleStream;\n// \nClass OntoNotesNameSampleStreamFactory;\n// \nClass OntoNotesParseSampleStream;\n// \nClass OntoNotesParseSampleStreamFactory;\n// \nClass OntoNotesPOSSampleStreamFactory;\n", "des": "Experimental package related to the OntoNotes 4.0 format."}
{"index": 3527, "repo": "opennlp-tools-2.2.0", "code": "package langdetect\n\n// The interface for LanguageDetector which predicts the Language for a context.\nInterface LanguageDetector;\n// A context generator interface for LanguageDetector.\nInterface LanguageDetectorContextGenerator;\n// A marker interface for evaluating language detectors.\nInterface LanguageDetectorEvaluationMonitor;\n// A context generator for language detector.\nClass DefaultLanguageDetectorContextGenerator;\n// Class for holding the document language and its confidence\nClass Language;\n", "des": "Package related to predicting languages from samples of text."}
{"index": 3528, "repo": "opennlp-tools-2.2.0", "code": "package languagemodel\n\n// A language model can calculate the probability p (between 0 and 1) of a certain sequence of tokens, given its underlying vocabulary.\nInterface LanguageModel;\n// A LanguageModel based on a NGramModel using Stupid Backoff to get the probabilities of the ngrams.\nClass NGramLanguageModel;\n", "des": "Package related to language models"}
{"index": 3529, "repo": "opennlp-tools-2.2.0", "code": "package lemmatizer\n\n// The common interface for lemmatizers.\nInterface Lemmatizer;\n// Interface for the context generator used for probabilistic Lemmatizer.\nInterface LemmatizerContextGenerator;\n// A marker interface for evaluating lemmatizers.\nInterface LemmatizerEvaluationMonitor;\n// Simple feature generator for learning statistical lemmatizers.\nClass DefaultLemmatizerContextGenerator;\n// The default lemmatizer SequenceValidator implementation.\nClass DefaultLemmatizerSequenceValidator;\n", "des": "Package related to the lemmatizer functionality."}
{"index": 3530, "repo": "opennlp-tools-2.2.0", "code": "package log\n\n// This class serves as an adapter for a Logger used within a PrintStream.\nClass LogPrintStream;\n", "des": "Package contains a PrintStream adapter for internal use only."}
{"index": 3531, "repo": "opennlp-tools-2.2.0", "code": "package ml\n\n// A specialized Trainer that is based on a 'EventModelSequence' approach.\nInterface EventModelSequenceTrainer<T>;\n// A specialized Trainer that is based on an Event approach.\nInterface EventTrainer;\n// \nInterface SequenceTrainer;\n// A basic EventModelSequenceTrainer implementation that processes events.\nClass AbstractEventModelSequenceTrainer;\n// A basic EventTrainer implementation.\nClass AbstractEventTrainer;\n// \nClass AbstractTrainer;\n", "des": "Package related to Machine Learning (ML) features of OpenNLP, the related ML models, and trainers."}
{"index": 3532, "repo": "opennlp-tools-2.2.0", "code": "package maxent\n\n// Represents a generator of contexts for maxent decisions.\nInterface ContextGenerator<T>;\n// An interface for objects which can deliver a stream of training data to be supplied to an EventStream.\nInterface DataStream;\n// A ContextGenerator implementation for maxent decisions, assuming that the input given to the BasicContextGenerator.getContext(String) method is a String containing contextual predicates separated by spaces, for instance:\nClass BasicContextGenerator;\n", "des": "Package related to ML by means of the Maximum Entropy (ME) algorithm."}
{"index": 3533, "repo": "opennlp-tools-2.2.0", "code": "package io\n\n// A GISModelReader that reads models from a binary format.\nClass BinaryGISModelReader;\n// A GISModelWriter that writes models in a binary format.\nClass BinaryGISModelWriter;\n// A QNModelReader that reads models from a binary format.\nClass BinaryQNModelReader;\n// A QNModelWriter that writes models in a binary format.\nClass BinaryQNModelWriter;\n// The base class for readers of GIS models.\nClass GISModelReader;\n// The base class for writers of GIS models.\nClass GISModelWriter;\n", "des": "Package related to the I/O functionality of the maxent package including reading and writing models in several formats."}
{"index": 3534, "repo": "opennlp-tools-2.2.0", "code": "package quasinewton\n\n// Interface for a function.\nInterface Function;\n// Evaluate quality of training parameters.\nInterface QNMinimizer.Evaluator;\n// \nClass ArrayMath;\n// Class that performs line search to find minimum.\nClass LineSearch;\n// Represents a LineSearch result.\nClass LineSearch.LineSearchResult;\n// Evaluate negative log-likelihood and its gradient from DataIndexer.\nClass NegLogLikelihood;\n// Evaluate negative log-likelihood and its gradient in parallel\nClass ParallelNegLogLikelihood;\n", "des": "Package related to ML by means of the Quasi Newton (QN) algorithm."}
{"index": 3535, "repo": "opennlp-tools-2.2.0", "code": "package model\n\n// Represents an indexer which compresses events in memory and performs feature selection.\nInterface DataIndexer;\n// Describes generic ways to read data from a DataInputStream.\nInterface DataReader;\n// Interface for maximum entropy models.\nInterface MaxentModel;\n// This interface allows one to implement a prior distribution for use in maximum entropy model training.\nInterface Prior;\n// A classification model that can label an input Sequence.\nInterface SequenceClassificationModel<T>;\n", "des": "Package related to ML models and feature selection techniques."}
{"index": 3536, "repo": "opennlp-tools-2.2.0", "code": "package naivebayes\n\n// A NaiveBayesModelReader that reads models from a binary format.\nClass BinaryNaiveBayesModelReader;\n// A NaiveBayesModelWriter that writes models in a binary format.\nClass BinaryNaiveBayesModelWriter;\n// Class implementing the probability distribution over labels returned by a classifier as a log of probabilities.\nClass LogProbabilities<T>;\n// A class implementing the logarithmic Probability for a label.\nClass LogProbability<T>;\n", "des": "Package related to ML by means of the Naive Bayes algorithm."}
{"index": 3537, "repo": "opennlp-tools-2.2.0", "code": "package perceptron\n\n// A PerceptronModelReader that reads models from a binary format.\nClass BinaryPerceptronModelReader;\n// A PerceptronModelWriter that writes models in a binary format.\nClass BinaryPerceptronModelWriter;\n// A model implementation based one the perceptron algorithm.\nClass PerceptronModel;\n// The base class for readers of models.\nClass PerceptronModelReader;\n// The base class for PerceptronModel writers.\nClass PerceptronModelWriter;\n", "des": "Package related to ML by means of the perceptron algorithm."}
{"index": 3538, "repo": "opennlp-tools-2.2.0", "code": "package namefind\n\n// Interface for processing an entire document allowing a TokenNameFinder to use context from the entire document.\nInterface DocumentNameFinder;\n// Interface for generating the context for a name finder by specifying a set of feature generators.\nInterface NameContextGenerator;\n// \nInterface RegexNameFinderFactory.RegexAble;\n// The interface for name finders which provide name tags for a sequence of tokens.\nInterface TokenNameFinder;\n", "des": "Package related to finding proper names and numeric amounts."}
{"index": 3539, "repo": "opennlp-tools-2.2.0", "code": "package ngram\n\n// The NGramCharModel can be used to create character ngrams.\nClass NGramCharModel;\n// Generates an nGram, via an optional separator, and returns the grams as a list of strings\nClass NGramGenerator;\n// The NGramModel can be used to crate ngrams and character ngrams.\nClass NGramModel;\n// Utility class for ngrams.\nClass NGramUtils;\n", "des": "Package related to computing and storing n-gram frequencies."}
{"index": 3540, "repo": "opennlp-tools-2.2.0", "code": "package parser\n\n// Represents a labeler for nodes which contain traces so that these traces can be predicted by a Parser.\nInterface GapLabeler;\n// Encoder for head rules associated with parsing.\nInterface HeadRules;\n// Defines common methods for full-syntactic parsers.\nInterface Parser;\n// A marker interface for evaluating parsers.\nInterface ParserEvaluationMonitor;\n", "des": "Package containing common code for performing full syntactic parsing."}
{"index": 3541, "repo": "opennlp-tools-2.2.0", "code": "package chunking\n\n// Generates predictive contexts for deciding how constituents should be combined.\nClass BuildContextGenerator;\n// Generates predictive context for deciding when a constituent is complete.\nClass CheckContextGenerator;\n// A shift reduce style Parser implementation based on Adwait Ratnaparkhi's 1998 thesis.\nClass Parser;\n// Wrapper class for one of four shift-reduce parser event streams.\nClass ParserEventStream;\n", "des": "Package containing code for performing full syntactic parsing using shift/reduce-style decisions."}
{"index": 3542, "repo": "opennlp-tools-2.2.0", "code": "package treeinsert\n\n// Generates predictive contexts for deciding how constituents should be attached.\nClass AttachContextGenerator;\n// Creates the features or contexts for the building phase of parsing.\nClass BuildContextGenerator;\n// Generates predictive context for deciding when a constituent is complete.\nClass CheckContextGenerator;\n// A built-attach Parser implementation.\nClass Parser;\n// Wrapper class for one of four built-attach parser event streams.\nClass ParserEventStream;\n", "des": "Package containing experimental code for performing full syntactic parsing using attachment decisions."}
{"index": 3543, "repo": "opennlp-tools-2.2.0", "code": "package postag\n\n// Interface that allows TagDictionary entries to be added and removed.\nInterface MutableTagDictionary;\n// Interface for a BeamSearchContextGenerator used in POS tagging.\nInterface POSContextGenerator;\n// The interface for part of speech taggers.\nInterface POSTagger;\n// A marker interface for evaluating pos taggers.\nInterface POSTaggerEvaluationMonitor;\n// Interface to determine which tags are valid for a particular word based on a tag dictionary.\nInterface TagDictionary;\n", "des": "Package related to part-of-speech tagging."}
{"index": 3544, "repo": "opennlp-tools-2.2.0", "code": "package sentdetect\n\n// Scans CharSequence, StringBuffer, and char[] for the offsets of sentence ending characters.\nInterface EndOfSentenceScanner;\n// Interface for SentenceDetectorME context generators.\nInterface SDContextGenerator;\n// The interface for sentence detectors, which find the sentence boundaries in a text.\nInterface SentenceDetector;\n// \nInterface SentenceDetectorEvaluationMonitor;\n// Default implementation of the EndOfSentenceScanner.\nClass DefaultEndOfSentenceScanner;\n", "des": "Package related to identifying sentence boundaries."}
{"index": 3545, "repo": "opennlp-tools-2.2.0", "code": "package th\n\n// Creates contexts/features for end-of-sentence detection in Thai text.\nClass SentenceContextGenerator;\n", "des": "Package related to the processing of Thai data."}
{"index": 3546, "repo": "opennlp-tools-2.2.0", "code": "package tokenize\n\n// A Detokenizer merges tokens back to their detokenized representation.\nInterface Detokenizer;\n// Interface for context generators required for TokenizerME.\nInterface TokenContextGenerator;\n// The interface for tokenizers, which segment a string into its tokens.\nInterface Tokenizer;\n// A marker interface for evaluating tokenizers.\nInterface TokenizerEvaluationMonitor;\n", "des": "Contains classes related to finding token or words in a string."}
{"index": 3547, "repo": "opennlp-tools-2.2.0", "code": "package util\n\n// Interface for context generators used with a sequence beam search.\nInterface BeamSearchContextGenerator<T>;\n// Allows repeated reads through a stream for certain model building types.\nInterface InputStreamFactory;\n// Reads objects from a stream.\nInterface ObjectStream<T>;\n// This interface makes an Iterator resettable.\nInterface ResetableIterator<E>;\n// A codec for sequences of type SequenceCodec.\nInterface SequenceCodec<T>;\n// \nInterface SequenceValidator<T>;\n", "des": "Package containing utility data structures and algorithms used by multiple other packages."}
{"index": 3548, "repo": "opennlp-tools-2.2.0", "code": "package ext\n\n// The ExtensionLoader is responsible to load extensions to the OpenNLP library.\nClass ExtensionLoader;\n// \nClass ExtensionServiceKeys;\n// Exception indicates that an OpenNLP extension could not be loaded.\nClass ExtensionNotLoadedException;\n", "des": "Package containing extension loading code."}
{"index": 3549, "repo": "opennlp-tools-2.2.0", "code": "package featuregen\n\n// An interface for generating features for name entity identification and for updating document level contexts.\nInterface AdaptiveFeatureGenerator;\n// \nInterface ArtifactToSerializerMapper;\n// The FeatureGeneratorResourceProvider provides access to the resources available in the model.\nInterface FeatureGeneratorResourceProvider;\n// The AdditionalContextFeatureGenerator generates the context from the passed in additional context.\nClass AdditionalContextFeatureGenerator;\n", "des": "This package contains classes for generating sequence features."}
{"index": 3550, "repo": "guava-32.1.1-jre", "code": "package annotations\n\n// Signifies that a public API (public class, method or field) is subject to incompatible changes, or even removal, in a future release.\nAnnotation Type Beta;\n// The presence of this annotation on a type indicates that the type may be used with the Google Web Toolkit (GWT).\nAnnotation Type GwtCompatible;\n// The presence of this annotation on an API indicates that the method may not be used with the Google Web Toolkit (GWT).\nAnnotation Type GwtIncompatible;\n", "des": "Annotation types."}
{"index": 3551, "repo": "guava-32.1.1-jre", "code": "package base\n\n// Implemented by references that have code to run after garbage collection of their referents.\nInterface FinalizableReference;\n// Legacy version of java.util.function.Function.\nInterface Function<F extends @Nullable java.lang.Object,​T extends @Nullable java.lang.Object>;\n// Legacy version of java.util.function.Predicate.\nInterface Predicate<T extends @Nullable java.lang.Object>;\n// Legacy version of java.util.function.Supplier.\nInterface Supplier<T extends @Nullable java.lang.Object>;\n", "des": "Basic utility libraries and interfaces."}
{"index": 3552, "repo": "guava-32.1.1-jre", "code": "package cache\n\n// Accumulates statistics during the operation of a Cache for presentation by Cache.stats().\nInterface AbstractCache.StatsCounter;\n// A semi-persistent mapping from keys to values.\nInterface Cache<K,​V>;\n// A semi-persistent mapping from keys to values.\nInterface LoadingCache<K,​V>;\n// An object that can receive a notification when an entry is removed from a cache.\nInterface RemovalListener<K,​V>;\n// Calculates the weights of cache entries.\nInterface Weigher<K,​V>;\n", "des": "Discouraged (in favor of Caffeine) caching utilities."}
{"index": 3553, "repo": "guava-32.1.1-jre", "code": "package collect\n\n// A bimap (or \"bidirectional map\") is a map that preserves the uniqueness of its values as well as that of its keys.\nInterface BiMap<K extends @Nullable java.lang.Object,​V extends @Nullable java.lang.Object>;\n// A map, each entry of which maps a Java raw type to an instance of that type.\nInterface ClassToInstanceMap<B extends @Nullable java.lang.Object>;\n// Provides similar behavior to String.intern() for any immutable type.\nInterface Interner<E>;\n", "des": "Collection interfaces and implementations, and other utilities for collections."}
{"index": 3554, "repo": "guava-32.1.1-jre", "code": "package escape\n\n// A CharEscaper that uses an array to quickly look up replacement characters for a given char value.\nClass ArrayBasedCharEscaper;\n// An implementation-specific parameter class suitable for initializing ArrayBasedCharEscaper or ArrayBasedUnicodeEscaper instances.\nClass ArrayBasedEscaperMap;\n// A UnicodeEscaper that uses an array to quickly look up replacement characters for a given code point.\nClass ArrayBasedUnicodeEscaper;\n", "des": "Interfaces, utilities, and simple implementations of escapers and encoders."}
{"index": 3555, "repo": "guava-32.1.1-jre", "code": "package eventbus\n\n// Handler for exceptions thrown by event subscribers.\nInterface SubscriberExceptionHandler;\n// An EventBus that takes the Executor of your choice and uses it to dispatch events, allowing dispatch to occur asynchronously.\nClass AsyncEventBus;\n// Wraps an event that was posted, but which had no subscribers and thus could not be delivered.\nClass DeadEvent;\n// Dispatches events to listeners, and provides ways for listeners to register themselves.\nClass EventBus;\n", "des": "Discouraged in favor of dependency injection and concurrency frameworks, EventBus allows publish-subscribe-style communication."}
{"index": 3556, "repo": "guava-32.1.1-jre", "code": "package graph\n\n// An interface for graph-structured data, whose edges are anonymous entities with no identity or information of their own.\nInterface Graph<N>;\n// A subinterface of Graph which adds mutation methods.\nInterface MutableGraph<N>;\n// A subinterface of Network which adds mutation methods.\nInterface MutableNetwork<N,​E>;\n// A subinterface of ValueGraph which adds mutation methods.\nInterface MutableValueGraph<N,​V>;\n", "des": "An API for representing graph (node and edge) data."}
{"index": 3557, "repo": "guava-32.1.1-jre", "code": "package hash\n\n// An object which can send data from an object of type T into a PrimitiveSink.\nInterface Funnel<T extends @Nullable java.lang.Object>;\n// A PrimitiveSink that can compute a hash code after reading the input.\nInterface Hasher;\n// A hash function is a collision-averse pure function that maps an arbitrary block of data to a number called a hash code.\nInterface HashFunction;\n// An object which can receive a stream of primitive values.\nInterface PrimitiveSink;\n", "des": "Hash functions and related structures."}
{"index": 3558, "repo": "guava-32.1.1-jre", "code": "package html\n\n// Escaper instances suitable for strings to be included in HTML attribute values and most elements' text contents.\nClass HtmlEscapers;\n", "des": "Escapers for HTML."}
{"index": 3559, "repo": "guava-32.1.1-jre", "code": "package io\n\n// An extension of DataInput for reading from in-memory byte arrays; its methods offer identical functionality but do not throw IOException.\nInterface ByteArrayDataInput;\n// An extension of DataOutput for writing to in-memory byte arrays; its methods offer identical functionality but do not throw IOException.\nInterface ByteArrayDataOutput;\n// A callback interface to process bytes from a stream.\nInterface ByteProcessor<T extends @Nullable java.lang.Object>;\n", "des": "Utility methods and classes for I/O; for example input streams, output streams, readers, writers, and files."}
{"index": 3560, "repo": "guava-32.1.1-jre", "code": "package math\n\n// A class for arithmetic on BigDecimal that is not covered by its built-in methods.\nClass BigDecimalMath;\n// A class for arithmetic on values of type BigInteger.\nClass BigIntegerMath;\n// A class for arithmetic on doubles that is not covered by Math.\nClass DoubleMath;\n// A class for arithmetic on values of type int.\nClass IntMath;\n// The representation of a linear transformation between real numbers x and y.\nClass LinearTransformation;\n", "des": "Arithmetic functions operating on primitive values and on BigInteger and BigDecimal instances."}
{"index": 3561, "repo": "guava-32.1.1-jre", "code": "package net\n\n// An immutable representation of a host and port.\nClass HostAndPort;\n// A syntactically valid host specifier, suitable for use in a URI.\nClass HostSpecifier;\n// Contains constant definitions for the HTTP header field names.\nClass HttpHeaders;\n// Values for the Referrer-Policy header.\nClass HttpHeaders.ReferrerPolicyValues;\n// Static utility methods pertaining to InetAddress instances.\nClass InetAddresses;\n", "des": "Utility methods and classes for networking (such as IP addresses and domain names)."}
{"index": 3562, "repo": "guava-32.1.1-jre", "code": "package primitives\n\n// Static utility methods pertaining to boolean primitives, that are not already found in either Boolean or Arrays.\nClass Booleans;\n// Static utility methods pertaining to byte primitives, that are not already found in either Byte or Arrays, and interpret bytes as neither signed nor unsigned.\nClass Bytes;\n// Static utility methods pertaining to char primitives, that are not already found in either Character or Arrays.\nClass Chars;\n", "des": "Static utilities for the eight primitive types and void, and value types for treating them as unsigned or storing them in immutable arrays."}
{"index": 3563, "repo": "guava-32.1.1-jre", "code": "package reflect\n\n// A map, each entry of which maps a TypeToken to an instance of that type.\nInterface TypeToInstanceMap<B extends @Nullable java.lang.Object>;\n// Abstract implementation of InvocationHandler that handles Object.equals(java.lang.Object), Object.hashCode() and Object.toString().\nClass AbstractInvocationHandler;\n// Scans the source of a ClassLoader and finds all loadable classes and resources.\nClass ClassPath;\n", "des": "Utilities for reflection."}
{"index": 3564, "repo": "guava-32.1.1-jre", "code": "package concurrent\n\n// Computes a value, possibly asynchronously.\nInterface AsyncCallable<V extends @Nullable java.lang.Object>;\n// Transforms a value, possibly asynchronously.\nInterface AsyncFunction<I extends @Nullable java.lang.Object,​O extends @Nullable java.lang.Object>;\n// An operation that computes a ClosingFuture of a result.\nInterface ClosingFuture.AsyncClosingCallable<V extends @Nullable java.lang.Object>;\n", "des": "Concurrency utilities."}
{"index": 3565, "repo": "guava-32.1.1-jre", "code": "package xml\n\n// Escaper instances suitable for strings to be included in XML attribute values and elements' text contents.\nClass XmlEscapers;\n", "des": "Escapers for XML."}
{"index": 3566, "repo": "lucene-codecs-9.7.0", "code": "package blockterms\n\n// Handles a terms dict, but decouples all details of doc/freqs/positions reading to an instance of PostingsReaderBase.\nClass BlockTermsReader;\n// Writes terms dict, block-encoding (column stride) each term's metadata for each set of terms between two index terms.\nClass BlockTermsWriter;\n// TermsIndexReader for simple every Nth terms indexes.\nClass FixedGapTermsIndexReader;\n", "des": "Pluggable term index / block terms dictionary implementations."}
{"index": 3567, "repo": "lucene-codecs-9.7.0", "code": "package blocktreeords\n\n// Uses OrdsBlockTreeTermsWriter with Lucene90PostingsWriter.\nClass BlockTreeOrdsPostingsFormat;\n// See OrdsBlockTreeTermsWriter.\nClass OrdsBlockTreeTermsReader;\n// This is just like Lucene90BlockTreeTermsWriter, except it also stores a version per term, and adds a method to its TermsEnum implementation to seekExact only if the version is >= the specified version.\nClass OrdsBlockTreeTermsWriter;\n// Iterates through terms in this field.\nClass OrdsSegmentTermsEnum;\n", "des": "Same postings format as Lucene50, except the terms dictionary also supports ords, i.e."}
{"index": 3568, "repo": "lucene-codecs-9.7.0", "code": "package bloom\n\n// Class used to create index-time FuzzySet appropriately configured for each field.\nClass BloomFilterFactory;\n// A PostingsFormat useful for low doc-frequency fields such as primary keys.\nClass BloomFilteringPostingsFormat;\n// Default policy is to allocate a bitset with 10% saturation given a unique term per document.\nClass DefaultBloomFilterFactory;\n// A class used to represent a set of many, potentially large, values (e.g.\nClass FuzzySet;\n", "des": "Codec PostingsFormat for fast access to low-frequency terms such as primary key fields."}
{"index": 3569, "repo": "lucene-codecs-9.7.0", "code": "package memory\n\n// Wraps Lucene90PostingsFormat format for on-disk storage, but then at read time loads and stores all terms and postings directly in RAM as byte[], int[].\nClass DirectPostingsFormat;\n// FST term dict + Lucene50PBF\nClass FSTPostingsFormat;\n// FST-based terms dictionary reader.\nClass FSTTermsReader;\n// FST-based term dict, using metadata as FST output.\nClass FSTTermsWriter;\n", "des": "Term dictionary, DocValues or Postings formats that are read entirely into memory."}
{"index": 3570, "repo": "lucene-codecs-9.7.0", "code": "package simpletext\n\n// plain text index format.\nClass SimpleTextCodec;\n// plain text compound format.\nClass SimpleTextCompoundFormat;\n// plaintext field infos format\nClass SimpleTextFieldInfosFormat;\n// For debugging, curiosity, transparency only!! Do not use this codec in production.\nClass SimpleTextKnnVectorsFormat;\n// Reads vector values from a simple text format.\nClass SimpleTextKnnVectorsReader;\n// Writes vector-valued fields in a plain text format\nClass SimpleTextKnnVectorsWriter;\n", "des": "Simpletext Codec: writes human readable postings."}
{"index": 3571, "repo": "lucene-codecs-9.7.0", "code": "package uniformsplit\n\n// Decodes the raw bytes of a block when the index is read, according to the BlockEncoder used during the writing of the index.\nInterface BlockDecoder;\n// Encodes the raw bytes of a block when the index is written.\nInterface BlockEncoder;\n// Writable byte buffer.\nInterface BlockEncoder.WritableBytes;\n// Immutable stateless index dictionary kept in RAM.\nInterface IndexDictionary;\n", "des": "Pluggable term index / block terms dictionary implementations."}
{"index": 3572, "repo": "lucene-codecs-9.7.0", "code": "package sharedterms\n\n// Pair of FieldMetadata and BlockTermState for a specific field.\nClass FieldMetadataTermState;\n// Represents a term and its details stored in the BlockTermState.\nClass STBlockLine;\n// Reads block lines encoded incrementally, with all fields corresponding to the term of the line.\nClass STBlockLine.Serializer;\n// Reads terms blocks with the Shared Terms format.\nClass STBlockReader;\n// Writes terms blocks with the Shared Terms format.\nClass STBlockWriter;\n", "des": "Pluggable term index / block terms dictionary implementations."}
{"index": 3573, "repo": "lucene-sandbox-9.7.0", "code": "package payloads\n\n// SpanCollector for collecting payloads\nClass PayloadSpanCollector;\n// Experimental class to get set of payloads for most standard Lucene queries.\nClass PayloadSpanUtil;\n", "des": "Experimental classes for interacting with payloads"}
{"index": 3574, "repo": "lucene-sandbox-9.7.0", "code": "package idversion\n\n// A PostingsFormat optimized for primary-key (ID) fields that also record a version (long) for each ID, delivered as a payload created by IDVersionPostingsFormat.longToBytes(long, org.apache.lucene.util.BytesRef) during indexing.\nClass IDVersionPostingsFormat;\n", "des": "A primary-key postings format that associates a version (long) with each term and can provide fail-fast lookups by ID and version."}
{"index": 3575, "repo": "lucene-sandbox-9.7.0", "code": "package document\n\n// An indexed 128-bit BigInteger field.\nClass BigIntegerPoint;\n// Builder for multi range queries for DoublePoints\nClass DoublePointMultiRangeBuilder;\n// Builder for multi range queries for FloatPoints\nClass FloatPointMultiRangeBuilder;\n// KNN search on top of N dimensional indexed float points.\nClass FloatPointNearestNeighbor;\n// An indexed half-float field for fast range filters.\nClass HalfFloatPoint;\n// Builder for multi range queries for IntPoints\nClass IntPointMultiRangeBuilder;\n", "des": "This package contains several point types: BigIntegerPoint for 128-bit integers LatLonPoint for latitude/longitude geospatial points"}
{"index": 3576, "repo": "lucene-sandbox-9.7.0", "code": "package index\n\n// A simple extension to wrap MergePolicy to merge all tiny segments (or at least segments smaller than specified in MergeOnFlushMergePolicy.setSmallSegmentThresholdMB(double) into one segment on commit.\nClass MergeOnFlushMergePolicy;\n", "des": "Experimental index-related classes"}
{"index": 3577, "repo": "lucene-sandbox-9.7.0", "code": "package queries\n\n// Fuzzifies ALL terms provided as strings and then picks the best n differentiating terms.\nClass FuzzyLikeThisQuery;\n", "des": "Additional queries (some may have caveats or limitations)"}
{"index": 3578, "repo": "lucene-sandbox-9.7.0", "code": "package search\n\n// A Query that treats multiple fields as a single stream and scores terms as if you had indexed them as a single term in a single field.\nClass CombinedFieldQuery;\n// A builder for CombinedFieldQuery.\nClass CombinedFieldQuery.Builder;\n// A Query that allows to have a configurable number or required matches per document.\nClass CoveringQuery;\n// Optimized collector for large number of hits.\nClass LargeNumHitsTopDocsCollector;\n", "des": "This package contains a flexible graph-based proximity query, TermAutomatonQuery, and geospatial queries."}
{"index": 3579, "repo": "lucene-test-framework-9.7.0", "code": "package analysis\n\n// Attribute that records if it was cleared or not.\nInterface BaseTokenStreamTestCase.CheckClearAttributesAttribute;\n// Base class for testing tokenstream factories.\nClass BaseTokenStreamFactoryTestCase;\n// Base class for all Lucene unit tests that use TokenStreams.\nClass BaseTokenStreamTestCase;\n// Attribute that records if it was cleared or not.\nClass BaseTokenStreamTestCase.CheckClearAttributesAttributeImpl;\n", "des": "Support for testing analysis components."}
{"index": 3580, "repo": "lucene-test-framework-9.7.0", "code": "package standard\n\n// This class was automatically generated by generateEmojiTokenizationTest.pl.\nClass EmojiTokenizationTestUnicode_12_1;\n// This class was automatically generated by generateJavaUnicodeWordBreakTest.pl from: http://www.unicode.org/Public/12.1.0/ucd/auxiliary/WordBreakTest.txt\nClass WordBreakTestUnicode_12_1_0;\n", "des": "Classes to support StandardAnalyzer component testing."}
{"index": 3581, "repo": "lucene-test-framework-9.7.0", "code": "package asserting\n\n// Acts like the default codec but with additional asserts.\nClass AssertingCodec;\n// Just like the default but with additional asserts.\nClass AssertingDocValuesFormat;\n// Wraps the default KnnVectorsFormat and provides additional assertions.\nClass AssertingKnnVectorsFormat;\n// Just like the default live docs format but with additional asserts.\nClass AssertingLiveDocsFormat;\n// Just like the default but with additional asserts.\nClass AssertingNormsFormat;\n", "des": "Codec for testing that asserts various contracts of the codec apis."}
{"index": 3582, "repo": "lucene-test-framework-9.7.0", "code": "package blockterms\n\n// Customized version of Lucene90PostingsFormat that uses FixedGapTermsIndexWriter.\nClass LuceneFixedGap;\n// Customized version of Lucene90PostingsFormat that uses VariableGapTermsIndexWriter with a fixed interval, but forcing high docfreq terms to be indexed terms.\nClass LuceneVarGapDocFreqInterval;\n// Customized version of Lucene90PostingsFormat that uses VariableGapTermsIndexWriter with a fixed interval.\nClass LuceneVarGapFixedInterval;\n", "des": "Codecs for testing that support org.apache.lucene.codecs.blockterms."}
{"index": 3583, "repo": "lucene-test-framework-9.7.0", "code": "package bloom\n\n// A class used for testing BloomFilteringPostingsFormat with a concrete delegate (Lucene41).\nClass TestBloomFilteredLucenePostings;\n", "des": "Support for generating test indexes using the BloomFilteringPostingsFormat."}
{"index": 3584, "repo": "lucene-test-framework-9.7.0", "code": "package cheapbastard\n\n// Codec that tries to use as little ram as possible because he spent all his money on beer\nClass CheapBastardCodec;\n", "des": "Codec that unreasonably tries to use as little RAM as possible."}
{"index": 3585, "repo": "lucene-test-framework-9.7.0", "code": "package compressing\n\n// A codec that uses Lucene90CompressingStoredFieldsFormat for its stored fields and delegates to the default codec for everything else.\nClass CompressingCodec;\n// CompressionCodec that uses DeflateWithPresetDictCompressionMode.\nClass DeflateWithPresetCompressingCodec;\n// CompressionCodec that uses CompressionMode.FAST\nClass FastCompressingCodec;\n// CompressionCodec that uses CompressionMode.FAST_DECOMPRESSION\nClass FastDecompressionCompressingCodec;\n", "des": "Support for testing Lucene90CompressingStoredFieldsFormat."}
{"index": 3586, "repo": "lucene-test-framework-9.7.0", "code": "package dummy\n\n// CompressionCodec that does not compress data, useful for testing.\nClass DummyCompressingCodec;\n", "des": "Dummy CompressingCodec implementation used for testing."}
{"index": 3587, "repo": "lucene-test-framework-9.7.0", "code": "package cranky\n\n// Codec for testing that throws random IOExceptions\nClass CrankyCodec;\n", "des": "Codec for testing that throws random IOExceptions"}
{"index": 3588, "repo": "lucene-test-framework-9.7.0", "code": "package mockrandom\n\n// Randomly combines terms index impl w/ postings impls.\nClass MockRandomPostingsFormat;\n", "des": "Frankenstein codec for testing that pieces together random components."}
{"index": 3589, "repo": "lucene-test-framework-9.7.0", "code": "package ramonly\n\n// Stores all postings data in RAM, but writes a small token (header + single int) to identify which \"slot\" the index is using in RAM HashMap.\nClass RAMOnlyPostingsFormat;\n", "des": "Codec for testing that never writes to disk."}
{"index": 3590, "repo": "lucene-test-framework-9.7.0", "code": "package uniformsplit\n\n// Test utility for simple ROT13 cipher (https://en.wikipedia.org/wiki/ROT13).\nClass Rot13CypherTestUtil;\n// UniformSplitPostingsFormat with block encoding using ROT13 cypher.\nClass UniformSplitRot13PostingsFormat;\n", "des": "Test PostingsFormat for testing org.apache.lucene.codecs.uniformsplit with block encryption using basic ROT13."}
{"index": 3591, "repo": "lucene-test-framework-9.7.0", "code": "package sharedterms\n\n// STUniformSplitPostingsFormat with block encoding using ROT13 cypher.\nClass STUniformSplitRot13PostingsFormat;\n", "des": "Test PostingsFormat for testing org.apache.lucene.codecs.uniformsplit.sharedterms with block encryption using basic ROT13."}
{"index": 3592, "repo": "lucene-test-framework-9.7.0", "code": "package vector\n\n// This codec allows customization of the number of connections made for an hnsw index.\nClass ConfigurableMCodec;\n", "des": "Codecs for testing different vector formats."}
{"index": 3593, "repo": "lucene-test-framework-9.7.0", "code": "package geo\n\n// Abstract class to do basic tests for a geospatial impl (high level fields and queries) NOTE: This test focuses on geospatial (distance queries, polygon queries, etc) indexing and search, not any underlying storage format or encoding: it merely supplies two hooks for the encoding so that tests can be exact.\nClass BaseGeoPointTestCase;\n// Abstract class to do basic tests for a xy spatial impl (high level fields and queries)\nClass BaseXYPointTestCase;\n", "des": "Reusable geo test utilities."}
{"index": 3594, "repo": "lucene-test-framework-9.7.0", "code": "package index\n\n// Simple interface that is executed for each TP InfoStream component message.\nInterface RandomIndexWriter.TestPoint;\n// Merge policy for testing, it is like an alcoholic.\nClass AlcoholicMergePolicy;\n// Filters the incoming reader and makes all documents appear deleted.\nClass AllDeletedFilterReader;\n// A DirectoryReader that wraps all its subreaders with AssertingLeafReader\nClass AssertingDirectoryReader;\n", "des": "Support for testing of indexes."}
{"index": 3595, "repo": "lucene-test-framework-9.7.0", "code": "package mockfile\n\n// Disables actual calls to fsync.\nClass DisableFsyncFS;\n// Adds extra files/subdirectories when directories are created.\nClass ExtrasFS;\n// A FilterAsynchronousFileChannel contains another AsynchronousFileChannel, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.\nClass FilterAsynchronousFileChannel;\n", "des": "Support for testing/debugging with virtual filesystems"}
{"index": 3596, "repo": "lucene-test-framework-9.7.0", "code": "package search\n\n// Helper class that adds some extra checks to ensure correct usage of IndexSearcher and Weight.\nClass AssertingIndexSearcher;\n// An implementation of Matches with additional consistency checks.\nClass AssertingMatches;\n// Assertion-enabled query.\nClass AssertingQuery;\n// Wraps another Scorable and asserts that scores are reasonable and only called when positioned\nClass AssertingScorable;\n// Wraps a Scorer with additional checks\nClass AssertingScorer;\n", "des": "Support for testing search components."}
{"index": 3597, "repo": "lucene-test-framework-9.7.0", "code": "package similarities\n\n// wraps a similarity with checks for testing\nClass AssertingSimilarity;\n// Abstract class to do basic tests for a similarity.\nClass BaseSimilarityTestCase;\n// Similarity implementation that randomizes Similarity implementations per-field.\nClass RandomSimilarity;\n", "des": "Support for testing similarities."}
{"index": 3598, "repo": "lucene-test-framework-9.7.0", "code": "package store\n\n// Base class for Directories that \"chunk\" the input into blocks.\nClass BaseChunkedDirectoryTestCase;\n// Base class for Directory implementations.\nClass BaseDirectoryTestCase;\n// Calls check index on close.\nClass BaseDirectoryWrapper;\n// Base class for per-LockFactory tests.\nClass BaseLockFactoryTestCase;\n// Corrupts on bit of a file after close\nClass CorruptingIndexOutput;\n// This is a Directory Wrapper that adds methods intended to be used only by unit tests.\nClass MockDirectoryWrapper;\n", "des": "Support for testing store mechanisms."}
{"index": 3599, "repo": "lucene-test-framework-9.7.0", "code": "package util\n\n// A Consumer that can throw any checked exception.\nInterface LuceneTestCase.ThrowingConsumer<T>;\n// A runnable that can throw any checked exception.\nInterface LuceneTestCase.ThrowingRunnable;\n// Marker interface for nested suites that should be ignored if executed in stand-alone mode.\nInterface TestRuleIgnoreTestSuites.NestedTestSuite;\n// Base test case for BitSets.\nClass BaseBitSetTestCase<T extends BitSet>;\n// Base test class for DocIdSets.\nClass BaseDocIdSetTestCase<T extends DocIdSet>;\n", "des": "General test support."}
{"index": 3600, "repo": "lucene-test-framework-9.7.0", "code": "package automaton\n\n// Utilities for testing automata.\nClass AutomatonTestUtil;\n// Lets you retrieve random strings accepted by an Automaton.\nClass AutomatonTestUtil.RandomAcceptedStrings;\n", "des": "Support for testing automata."}
{"index": 3601, "repo": "lucene-test-framework-9.7.0", "code": "package fst\n\n// Helper class to test FSTs.\nClass FSTTester<T>;\n// Holds one input/output pair.\nClass FSTTester.InputOutput<T>;\n", "des": "Support for FST testing."}
{"index": 3602, "repo": "lucene-queries-9.7.0", "code": "package queries\n\n// A query that executes high-frequency terms in a optional sub-query to prevent slow queries due to \"common\" terms like stopwords.\nClass CommonTermsQuery;\n", "des": "Filters and Queries that add to core Lucene."}
{"index": 3603, "repo": "lucene-queries-9.7.0", "code": "package function\n\n// A query that retrieves all documents with a DoubleValues value matching a predicate\nClass FunctionMatchQuery;\n// Returns a score for each document based on a ValueSource, often some function of the value of a field.\nClass FunctionQuery;\n// A Query wrapping a ValueSource that matches docs in which the values in the value source match a configured range.\nClass FunctionRangeQuery;\n", "des": "Queries that compute score based upon a function."}
{"index": 3604, "repo": "lucene-queries-9.7.0", "code": "package docvalues\n\n// Abstract FunctionValues implementation which supports retrieving boolean values.\nClass BoolDocValues;\n// Serves as base class for FunctionValues based on DocTermsIndex.\nClass DocTermsIndexDocValues;\n// Abstract FunctionValues implementation which supports retrieving double values.\nClass DoubleDocValues;\n// Abstract FunctionValues implementation which supports retrieving float values.\nClass FloatDocValues;\n", "des": "FunctionValues for different data types."}
{"index": 3605, "repo": "lucene-queries-9.7.0", "code": "package valuesource\n\n// Abstract parent class for those ValueSource implementations which apply boolean logic to their values\nClass BoolFunction;\n// An implementation for retrieving FunctionValues instances for byte knn vectors fields.\nClass ByteKnnVectorFieldSource;\n// An implementation for retrieving FunctionValues instances for string based fields.\nClass BytesRefFieldSource;\n", "des": "A variety of functions to use with FunctionQuery."}
{"index": 3606, "repo": "lucene-queries-9.7.0", "code": "package intervals\n\n// An extension of MatchesIterator that allows it to be treated as an IntervalIterator\nInterface IntervalMatchesIterator;\n// An IntervalsSource that filters the intervals from another IntervalsSource\nClass FilteredIntervalsSource;\n// Wraps an IntervalIterator and passes through those intervals that match the IntervalFilter.accept() function\nClass IntervalFilter;\n// A DocIdSetIterator that also allows iteration over matching intervals in a document.\nClass IntervalIterator;\n", "des": "Intervals queries"}
{"index": 3607, "repo": "lucene-queries-9.7.0", "code": "package mlt\n\n// Generate \"more like this\" similarity queries.\nClass MoreLikeThis;\n// A simple wrapper for MoreLikeThis for use in scenarios where a Query object is required eg in custom QueryParser extensions.\nClass MoreLikeThisQuery;\n", "des": "Document similarity query generators."}
{"index": 3608, "repo": "lucene-queries-9.7.0", "code": "package payloads\n\n// Defines a way of converting payloads to float values, for use by PayloadScoreQuery\nInterface PayloadDecoder;\n// Defines an interface for testing if two payloads should be consider to match\nInterface PayloadMatcher;\n// Calculate the final score as the average score of all payloads seen.\nClass AveragePayloadFunction;\n// Returns the maximum payload score seen, else 1 if there are no payloads on the doc.\nClass MaxPayloadFunction;\n", "des": "The payloads package provides Query mechanisms for finding and using payloads."}
{"index": 3609, "repo": "lucene-queries-9.7.0", "code": "package spans\n\n// An interface defining the collection of postings information from the leaves of a Spans\nInterface SpanCollector;\n// Wrapper to allow SpanQuery objects participate in composite single-field SpanQueries by 'lying' about their search field.\nClass FieldMaskingSpanQuery;\n// A Spans implementation wrapping another spans instance, allowing to filter spans matches easily by implementing FilterSpans.accept(org.apache.lucene.queries.spans.Spans)\nClass FilterSpans;\n", "des": "The calculus of spans."}
{"index": 3610, "repo": "lucene-suggest-9.7.0", "code": "package spell\n\n// A simple interface representing a Dictionary.\nInterface Dictionary;\n// Interface for string distances.\nInterface StringDistance;\n// A suggestion generated by combining one or more original query terms\nClass CombineSuggestion;\n// Simple automaton-based spellchecker.\nClass DirectSpellChecker;\n// Holds a spelling correction for internal usage inside DirectSpellChecker.\nClass DirectSpellChecker.ScoreTerm;\n", "des": "Suggest alternate spellings for words."}
{"index": 3611, "repo": "lucene-suggest-9.7.0", "code": "package suggest\n\n// Interface for enumerating term,weight,payload triples for suggester consumption; currently only AnalyzingSuggester, FuzzySuggester and AnalyzingInfixSuggester support payloads.\nInterface InputIterator;\n// A producer of Bits per segment.\nClass BitsProducer;\n// This wrapper buffers incoming elements.\nClass BufferedInputIterator;\n", "des": "Support for Autocomplete/Autosuggest"}
{"index": 3612, "repo": "lucene-suggest-9.7.0", "code": "package analyzing\n\n// Analyzes the input text and then suggests matches based on prefix matches to any tokens in the indexed text.\nClass AnalyzingInfixSuggester;\n// Suggester that first analyzes the surface form, adds the analyzed form to a weighted FST, and then does the same thing at lookup time.\nClass AnalyzingSuggester;\n", "des": "Analyzer based autosuggest."}
{"index": 3613, "repo": "lucene-suggest-9.7.0", "code": "package document\n\n// CompletionPostingsFormat for org.apache.lucene.backward_codecs.lucene50.Lucene50PostingsFormat.\nClass Completion50PostingsFormat;\n// CompletionPostingsFormat for org.apache.lucene.backward_codecs.lucene84.Lucene84PostingsFormat.\nClass Completion84PostingsFormat;\n// CompletionPostingsFormat for Lucene90PostingsFormat\nClass Completion90PostingsFormat;\n// Wraps an Analyzer to provide additional completion-only tuning (e.g.\nClass CompletionAnalyzer;\n", "des": "Support for document suggestion"}
{"index": 3614, "repo": "lucene-suggest-9.7.0", "code": "package fst\n\n// Collects BytesRef and then allows one to iterate over their sorted order.\nInterface BytesRefSorter;\n// An implementation of a BytesRefSorter that allows appending BytesRefs to an OfflineSorter and returns a Closeable ExternalRefSorter.ByteSequenceIterator that iterates over sequences stored on disk.\nClass ExternalRefSorter;\n// Iterates over BytesRefs in a file, closes the reader when the iterator is exhausted.\nClass ExternalRefSorter.ByteSequenceIterator;\n", "des": "Finite-state based autosuggest."}
{"index": 3615, "repo": "lucene-suggest-9.7.0", "code": "package tst\n\n// The class creates a TST node.\nClass TernaryTreeNode;\n// Ternary Search Trie implementation.\nClass TSTAutocomplete;\n// Suggest implementation based on a Ternary Search Tree\nClass TSTLookup;\n", "des": "Ternary Search Tree based autosuggest."}
{"index": 3616, "repo": "solr-test-framework-9.3.0", "code": "package solr\n\n// Helper base class for distributed search test cases\nClass BaseDistributedSearchTestCase;\n// \nClass BaseDistributedSearchTestCase.RandDate;\n// \nClass BaseDistributedSearchTestCase.RandVal;\n// \nClass EmbeddedSolrServerTestBase;\n// \nClass JSONTestUtil;\n// This ignores those threads in Solr for which there is no way to clean up after a suite.\nClass SolrIgnoredThreadsFilter;\n// \nClass SolrJettyTestBase;\n// All Solr test cases should derive from this class eventually.\nClass SolrTestCase;\n", "des": "Common base classes for implementing tests."}
{"index": 3617, "repo": "solr-test-framework-9.3.0", "code": "package analysis\n\n// Factory for MockCharFilter for testing purposes.\nClass MockCharFilterFactory;\n// Factory for MockTokenFilter for testing purposes.\nClass MockTokenFilterFactory;\n// Factory for MockTokenizer for testing purposes.\nClass MockTokenizerFactory;\n", "des": "Factories for Mock analysis classes that can be used in test configurations."}
{"index": 3618, "repo": "solr-test-framework-9.3.0", "code": "package cloud\n\n// This test simply does a bunch of basic things in solrcloud mode and asserts things work as expected.\nClass AbstractBasicDistributedZk2TestBase;\n// This test simply does a bunch of basic things in solrcloud mode and asserts things work as expected.\nClass AbstractBasicDistributedZkTestBase;\n// \nClass AbstractChaosMonkeyNothingIsSafeTestBase;\n// \nClass AbstractChaosMonkeySafeLeaderTestBase;\n// \nClass AbstractDigestZkACLAndCredentialsProvidersTestBase;\n", "des": "Base classes and utilities for creating and testing Solr Cloud clusters."}
{"index": 3619, "repo": "solr-test-framework-9.3.0", "code": "package placement\n\n// \nClass AttributeFetcherForTest;\n// Builder classes to make tests using different cluster and node configurations easier to write and to read.\nClass Builders;\n// \nClass Builders.ClusterBuilder;\n// \nClass Builders.CollectionBuilder;\n// \nClass Builders.NodeBuilder;\n// \nClass Builders.ReplicaBuilder;\n// \nClass Builders.ShardBuilder;\n", "des": "Utility classes to test placement plugins."}
{"index": 3620, "repo": "solr-test-framework-9.3.0", "code": "package core\n\n// \nClass AbstractBadConfigTestBase;\n// Opens a directory with LuceneTestCase.newDirectory()\nClass MockDirectoryFactory;\n// Opens a directory with LuceneTestCase.newFSDirectory(Path)\nClass MockFSDirectoryFactory;\n// \nClass MockQuerySenderListenerReqHandler;\n// \nClass TrackingBackupRepository;\n", "des": "Factories for Mock classes that can be used in test configurations"}
{"index": 3621, "repo": "solr-test-framework-9.3.0", "code": "package embedded\n\n// \nClass JettyConfig;\n// \nClass JettyConfig.Builder;\n// Run solr using jetty\nClass JettySolrRunner;\n// \nClass JettySolrRunner.DebugFilter;\n// This is a stupid hack to give jetty something to attach to\nClass JettySolrRunner.Servlet404;\n", "des": "Classes for running embedded Solr Jetty Servers in tests."}
{"index": 3622, "repo": "solr-test-framework-9.3.0", "code": "package handler\n\n// \nClass BackupRestoreUtils;\n// Helper class for validating when the replication handler has finished a backup.\nClass BackupStatusChecker;\n// \nClass TestRestoreCoreUtil;\n", "des": "Concrete implementations of org.apache.solr.request.SolrRequestHandler"}
{"index": 3623, "repo": "solr-test-framework-9.3.0", "code": "package component\n\n// A Dummy SpellChecker for testing purposes\nClass DummyCustomParamSpellChecker;\n// A ShardHandlerFactory that extends HttpShardHandlerFactory and tracks requests made to nodes/shards such that interested parties can watch such requests and make assertions inside tests\nClass TrackingShardHandlerFactory;\n// A queue having helper methods to select requests by shard and purpose.\nClass TrackingShardHandlerFactory.RequestTrackingQueue;\n", "des": "Class for tracking shard requests"}
{"index": 3624, "repo": "solr-test-framework-9.3.0", "code": "package search\n\n// \nClass FooQParserPlugin;\n", "des": "Mock classes for testing search."}
{"index": 3625, "repo": "solr-test-framework-9.3.0", "code": "package spelling\n\n// Comparator for testing purposes\nClass SampleComparator;\n", "des": "Mock classes for testing spelling."}
{"index": 3626, "repo": "solr-test-framework-9.3.0", "code": "package processor\n\n// \nClass BufferingRequestProcessor;\n// This Factory can optionally save references to the commands it receives in BlockingQueues that tests can poll from to observe that the expected commands are executed.\nClass RecordingUpdateProcessorFactory;\n// This Factory is similar to RecordingUpdateProcessorFactory, but with the goal of tracking requests across multiple collections/shards/replicas in a SolrCloudTestCase.\nClass TrackingUpdateProcessorFactory;\n// \nClass UpdateProcessorTestBase;\n", "des": "Mock classes for testing Update Processor chains."}
{"index": 3627, "repo": "solr-test-framework-9.3.0", "code": "package util\n\n// \nInterface RESTfulServerProvider;\n// \nClass BadZookeeperThreadsFilter;\n// \nClass BaseTestHarness;\n// \nClass DirectoryUtil;\n// \nClass DOMUtilTestBase;\n// Provides an EmbeddedSolrServer for tests.\nClass EmbeddedSolrServerTestRule;\n// Helper code for \"Muting\" ERROR log messages that you expect as a result of the things you are testing, so they aren't a distraction in test logs.\nClass ErrorLogMuter;\n", "des": "Misc utilities useful when implementing test cases."}
{"index": 3628, "repo": "lucene-misc-9.7.0", "code": "package misc\n\n// Default implementation of MemoryTracker that tracks allocations and allows setting a memory limit per collector\nClass CollectorMemoryTracker;\n// Utility to get document frequency and total number of occurrences (sum of the tf for each doc) of a term.\nClass GetTermInfo;\n// HighFreqTerms class extracts the top n most frequent terms (by document frequency) from an existing Lucene index and reports their document frequency.\nClass HighFreqTerms;\n", "des": "Miscellaneous Lucene utilities that don't really fit anywhere else."}
{"index": 3629, "repo": "lucene-misc-9.7.0", "code": "package document\n\n// Defers actually loading a field's value until you ask for it.\nClass LazyDocument;\n", "des": "Misc extensions of the Document/Field API."}
{"index": 3630, "repo": "lucene-misc-9.7.0", "code": "package index\n\n// Select document within a CodecReader\nInterface IndexRearranger.DocumentSelector;\n// Select documents using binary doc values\nClass BinaryDocValueSelector;\n// Copy and rearrange index according to document selectors, from input dir to output dir.\nClass IndexRearranger;\n// Command-line tool that enables listing segments in an index, copying specific segments to another index, and deleting segments from an index.\nClass IndexSplitter;\n", "des": "Misc index tools and index support."}
{"index": 3631, "repo": "lucene-misc-9.7.0", "code": "package search\n\n// A TopDocsCollector that controls diversity in results by ensuring no more than maxHitsPerKey results from a common source are collected in the final results.\nClass DiversifiedTopDocsCollector;\n// An extension to ScoreDoc that includes a key used for grouping purposes\nClass DiversifiedTopDocsCollector.ScoreDocKey;\n// Holds statistics for a DocValues field.\nClass DocValuesStats<T>;\n", "des": "Misc search implementations."}
{"index": 3632, "repo": "lucene-misc-9.7.0", "code": "package store\n\n// An IndexOutput that wraps another instance and tracks the number of bytes written\nClass ByteTrackingIndexOutput;\n// FilterDirectory that tracks write amplification factor\nClass ByteWritesTrackingDirectoryWrapper;\n// A Directory implementation for all Unixes and Windows that uses DIRECT I/O to bypass OS level IO caching during merging.\nClass DirectIODirectory;\n", "des": "Misc Directory implementations."}
{"index": 3633, "repo": "lucene-misc-9.7.0", "code": "package util\n\n// Tracks dynamic allocations/deallocations of memory for transient objects\nInterface MemoryTracker;\n", "des": "Memory Tracker interface which allows defining custom collector level memory trackers"}
{"index": 3634, "repo": "lucene-misc-9.7.0", "code": "package fst\n\n// Wraps another Outputs implementation and encodes one or more of its output values.\nClass ListOfOutputs<T>;\n// An FST Outputs implementation where each output is one or two non-negative long values.\nClass UpToTwoPositiveIntOutputs;\n// Holds two long outputs.\nClass UpToTwoPositiveIntOutputs.TwoLongs;\n", "des": "Misc FST classes."}
{"index": 3635, "repo": "solr-core-9.3.0", "code": "package analysis\n\n// \nClass LowerCaseTokenizer;\n// \nClass LowerCaseTokenizerFactory;\n// This class produces a special form of reversed tokens, suitable for better handling of leading wildcards.\nClass ReversedWildcardFilter;\n// Factory for ReversedWildcardFilter-s.\nClass ReversedWildcardFilterFactory;\n// \nClass SolrAnalyzer;\n// An analyzer that uses a tokenizer and a list of token filters to create a TokenStream.\nClass TokenizerChain;\n", "des": "Factories and classes specific to text analysis and the creation of TokenStreams"}
{"index": 3636, "repo": "solr-core-9.3.0", "code": "package api\n\n// The interface that is implemented by a request handler to support the V2 end point\nInterface ApiSupport;\n// Implement this interface if your plugin needs to accept some configuration\nInterface ConfigurablePlugin<T extends org.apache.solr.common.MapWriter>;\n// Listener for notifications about added / deleted / modified plugins.\nInterface ContainerPluginsRegistry.PluginRegistryListener;\n", "des": "Commonly used classes for Solr V2 API."}
{"index": 3637, "repo": "solr-core-9.3.0", "code": "package cli\n\n// \nInterface CLIO;\n// \nInterface Tool;\n// \nClass ApiTool;\n// Asserts various conditions and exists with error code if fails, else continues with no output\nClass AssertTool;\n// \nClass AuthTool;\n// \nClass ConfigSetDownloadTool;\n// \nClass ConfigSetUploadTool;\n// Sends a POST to the Config API to perform a specified action.\nClass ConfigTool;\n// Supports create_collection command in the bin/solr script.\nClass CreateCollectionTool;\n// \nClass CreateCoreTool;\n// \nClass CreateTool;\n", "des": "Solr Command Line Interface classes"}
{"index": 3638, "repo": "solr-core-9.3.0", "code": "package embedded\n\n// SolrClient that connects directly to a CoreContainer.\nClass EmbeddedSolrServer;\n// \nEnum EmbeddedSolrServer.RequestWriterSupplier;\n", "des": "SolrJ client implementations for embedded solr access."}
{"index": 3639, "repo": "solr-core-9.3.0", "code": "package cloud\n\n// Intended for components that should be enabled only one instance per cluster.\nInterface ClusterSingleton;\n// \nInterface DistributedCollectionLockFactory;\n// \nInterface DistributedConfigSetLockFactory;\n// A lock that can be used across cluster nodes.\nInterface DistributedLock;\n// \nInterface Overseer.Message;\n// Interface for processing messages received by an OverseerTaskProcessor\nInterface OverseerMessageHandler;\n// \nInterface OverseerMessageHandler.Lock;\n", "des": "Classes for dealing with ZooKeeper when operating in SolrCloud mode."}
{"index": 3640, "repo": "solr-core-9.3.0", "code": "package collections\n\n// Strategy for assigning replicas to nodes.\nInterface Assign.AssignStrategy;\n// Interface implemented by all Collection API commands.\nInterface CollApiCmds.CollectionApiCommand;\n", "des": "Package related to internal implementations of the SolrCloud collections api"}
{"index": 3641, "repo": "solr-core-9.3.0", "code": "package overseer\n\n// \nInterface ZkStateWriter.ZkWriteCallback;\n// \nClass ClusterStateMutator;\n// \nClass CollectionMutator;\n// \nClass NodeMutator;\n// \nClass ReplicaMutator;\n// \nClass SliceMutator;\n// ZkStateWriter is responsible for writing updates to the cluster state stored in ZooKeeper for collections each of which gets their own individual state.json in ZK.\nClass ZkStateWriter;\n// \nClass ZkWriteCommand;\n// Enum of actions supported by the overseer only.\nEnum OverseerAction;\n", "des": "Classes for updating cluster state in SolrCloud mode."}
{"index": 3642, "repo": "solr-core-9.3.0", "code": "package cluster\n\n// A representation of the SolrCloud cluster state, providing information on which nodes and collections are part of the cluster and a way to get to more detailed info.\nInterface Cluster;\n// Representation of a SolrCloud node or server in the SolrCloud cluster.\nInterface Node;\n// An instantiation (or one of the copies) of a given Shard of a given SolrCollection.\nInterface Replica;\n// Shard in a SolrCollection, i.e.\nInterface Shard;\n", "des": "This package contains the interfaces giving access to cluster state, including nodes, collections and the structure of the collections (shards and replicas)."}
{"index": 3643, "repo": "solr-core-9.3.0", "code": "package events\n\n// Cluster-level event.\nInterface ClusterEvent;\n// Components that want to be notified of cluster-wide events should use this.\nInterface ClusterEventListener;\n// Component that produces ClusterEvent instances.\nInterface ClusterEventProducer;\n// Event generated when ZkStateReader.CLUSTER_PROPS is modified.\nInterface ClusterPropertiesChangedEvent;\n// Event generated when some collections have been added.\nInterface CollectionsAddedEvent;\n", "des": "Interfaces defining support for cluster-level event generation and processing."}
{"index": 3644, "repo": "solr-core-9.3.0", "code": "package impl\n\n// This class helps in handling the initial registration of plugin-based listeners, when both the final ClusterEventProducer implementation and listeners are configured using plugins.\nClass ClusterEventProducerFactory;\n// This is an illustration how to re-implement the combination of Solr 8x NodeLostTrigger and AutoAddReplicasPlanAction to maintain the collection's replicas when nodes are lost.\nClass CollectionsRepairEventListener;\n", "des": "Default implementation of ClusterEventProducer."}
{"index": 3645, "repo": "solr-core-9.3.0", "code": "package placement\n\n// Instances of this interface are used to fetch various attributes from nodes (and other sources) in the cluster.\nInterface AttributeFetcher;\n// \nInterface AttributeValues;\n// A fully specified plan or instructions for replica balancing to be applied to the cluster.\nInterface BalancePlan;\n// Allows plugins to create BalancePlans telling the Solr layer how to balance replicas following the processing of a BalanceRequest.\nInterface BalancePlanFactory;\n", "des": "This package contains interfaces visible by plugins (i.e."}
{"index": 3646, "repo": "solr-core-9.3.0", "code": "package impl\n\n// Implementation of AttributeFetcher that uses SolrCloudManager to access Solr cluster details.\nClass AttributeFetcherImpl;\n// Implementation of AttributeValues used by AttributeFetcherImpl.\nClass AttributeValuesImpl;\n// Simple implementation of BalancePlanFactory.\nClass BalancePlanFactoryImpl;\n// \nClass BalanceRequestImpl;\n// Builder class for constructing instances of CollectionMetrics.\nClass CollectionMetricsBuilder;\n// \nClass CollectionMetricsBuilder.ReplicaMetricsBuilder;\n", "des": "Implementation classes (not visible to plugins, subject to change at any time) for the interfaces in org.apache.solr.cluster.placement and to make them work with the rest of Solr."}
{"index": 3647, "repo": "solr-core-9.3.0", "code": "package plugins\n\n// Configuration bean for AffinityPlacementFactory.\nClass AffinityPlacementConfig;\n// This factory is instantiated by config from its class name.\nClass AffinityPlacementFactory;\n// Factory for creating MinimizeCoresPlacementFactory.MinimizeCoresPlacementPlugin, a Placement plugin implementing placing replicas to minimize number of cores per Node, while not placing two replicas of the same shard on the same node.\nClass MinimizeCoresPlacementFactory;\n// \nClass OrderedNodePlacementPlugin;\n", "des": "Sample plugin implementations."}
{"index": 3648, "repo": "solr-core-9.3.0", "code": "package core\n\n// \nInterface BlobRepository.Decoder<T>;\n// \nInterface CachingDirectoryFactory.CloseListener;\n// Used to request notification when the core is closed.\nInterface CloseHook;\n// \nInterface ConfigSetService.ConfigResource;\n// Manage the discovery and persistence of core definitions across Solr restarts\nInterface CoresLocator;\n// \nInterface Diagnostics.Callable;\n", "des": "Core classes implementing Solr internals and the management of SolrCores"}
{"index": 3649, "repo": "solr-core-9.3.0", "code": "package backup\n\n// Aggregate stats from multiple ShardBackupMetadata\nClass AggregateBackupStats;\n// Utility class for getting paths related to backups, or parsing information out of those paths.\nClass BackupFilePaths;\n// Represents the ID of a particular backup.\nClass BackupId;\n// This class implements functionality to create a backup with extension points provided to integrate with different types of file-systems.\nClass BackupManager;\n", "des": "Core classes for Solr's Backup/Restore functionality"}
{"index": 3650, "repo": "solr-core-9.3.0", "code": "package repository\n\n// This interface defines the functionality required to backup/restore Solr indexes to an arbitrary storage system.\nInterface BackupRepository;\n// \nClass BackupRepositoryFactory;\n// A concrete implementation of BackupRepository interface supporting backup/restore of Solr indexes to a local file-system.\nClass LocalFileSystemRepository;\n// This enumeration defines the type of a given path.\nEnum BackupRepository.PathType;\n", "des": "BackupRepository Providing backup/restore repository interfaces to plug different storage systems"}
{"index": 3651, "repo": "solr-core-9.3.0", "code": "package snapshots\n\n// This class defines the meta-data about a collection level snapshot\nClass CollectionSnapshotMetaData;\n// \nClass CollectionSnapshotMetaData.CoreSnapshotMetaData;\n// This class provides functionality required to handle the data files corresponding to Solr snapshots.\nClass SolrSnapshotManager;\n// This class is responsible to manage the persistent snapshots meta-data for the Solr indexes.\nClass SolrSnapshotMetaDataManager;\n", "des": "Core classes for Solr's persistent snapshots functionality"}
{"index": 3652, "repo": "solr-core-9.3.0", "code": "package filestore\n\n// The interface to be implemented by any package store provider * @lucene.experimental\nInterface PackageStore;\n// \nInterface PackageStore.FileDetails;\n// \nClass DistribPackageStore;\n// \nClass PackageStore.FileEntry;\n// \nClass PackageStoreAPI;\n// \nClass PackageStoreAPI.MetaData;\n// \nEnum PackageStore.FileType;\n", "des": "Implementation of Package Store."}
{"index": 3653, "repo": "solr-core-9.3.0", "code": "package handler\n\n// This is an Attribute used to track the positions of tokens in the analysis chain.\nInterface AnalysisRequestHandlerBase.TokenTrackingAttribute;\n// An interface for RequestHandlers need to handle all paths under its registered path\nInterface NestedRequestHandler;\n// \nInterface ReplicationHandler.PollListener;\n// A base class for all analysis request handlers.\nClass AnalysisRequestHandlerBase;\n", "des": "Concrete implementations of SolrRequestHandler"}
{"index": 3654, "repo": "solr-core-9.3.0", "code": "package admin\n\n// \nInterface BaseHandlerApiSupport.ApiCommand;\n// \nInterface CoreAdminHandler.CoreAdminOp;\n// Static methods to proxy calls to an Admin (GET) API to other nodes in the cluster and return a combined response\nClass AdminHandlersProxy;\n// This is a utility class to provide an easy mapping of request handlers which support multiple commands to the V2 API format (core admin api, collections api).\nClass BaseHandlerApiSupport;\n// \nClass ClusterStatus;\n// \nClass CollectionsHandler;\n", "des": "SolrRequestHandler implementations for powering he Solr Admin UI"}
{"index": 3655, "repo": "solr-core-9.3.0", "code": "package api\n\n// V2 API for adding a property to a collection replica\nClass AddReplicaPropertyAPI;\n// \nClass AddReplicaPropertyAPI.AddReplicaPropertyRequestBody;\n// A common parent for \"admin\" (i.e.\nClass AdminAPIBase;\n// V2 APIs for managing and inspecting properties for collection aliases\nClass AliasPropertyAPI;\n// \nClass AliasPropertyAPI.GetAliasPropertyResponse;\n// \nClass AliasPropertyAPI.GetAllAliasPropertiesResponse;\n// \nClass AliasPropertyAPI.UpdateAliasPropertiesRequestBody;\n", "des": "V2 API implementations for \"admin\" APIs."}
{"index": 3656, "repo": "solr-core-9.3.0", "code": "package api\n\n// Utilities helpful for common V2 API declaration tasks.\nClass V2ApiUtils;\n", "des": "V2 utilities useful for all API implementations."}
{"index": 3657, "repo": "solr-core-9.3.0", "code": "package component\n\n// The MergeStrategy class defines custom merge logic for distributed searches.\nInterface MergeStrategy;\n// Provides the elevations defined for queries.\nInterface QueryElevationComponent.ElevationProvider;\n// StatsValue defines the interface for the collection of statistical values about fields and facets.\nInterface StatsValues;\n// List the active tasks that can be cancelled\nClass ActiveTasksListComponent;\n", "des": "SearchComponent implementations for use in SearchHandler"}
{"index": 3658, "repo": "solr-core-9.3.0", "code": "package configsets\n\n// Parent class for all APIs that manipulate configsets\nClass ConfigSetAPIBase;\n// V2 API for creating a new configset as a copy of an existing one.\nClass CreateConfigSetAPI;\n// V2 API for deleting an existing configset\nClass DeleteConfigSetAPI;\n// V2 API for adding or updating a single file within a configset.\nClass ListConfigSetsAPI;\n// Response body POJO for the ListConfigSetsAPI resource.\nClass ListConfigSetsAPI.ListConfigsetsResponse;\n", "des": "V2 API classes for performing CRUD operations on configsets."}
{"index": 3659, "repo": "solr-core-9.3.0", "code": "package designer\n\n// \nInterface SampleDocumentsLoader;\n// \nInterface SchemaDesignerConstants;\n// \nInterface SchemaSuggester;\n// \nClass DefaultSampleDocumentsLoader;\n// \nClass DefaultSchemaSuggester;\n// Utility methods for comparing managed index schemas\nClass ManagedSchemaDiff;\n// \nClass SampleDocuments;\n// All V2 APIs that have a prefix of /api/schema-designer/\nClass SchemaDesignerAPI;\n", "des": "The SchemaDesignerAPI and supporting classes."}
{"index": 3660, "repo": "solr-core-9.3.0", "code": "package export\n\n// \nInterface IntComp;\n// Prepares and writes the documents requested by /export requests\nClass ExportWriter;\n// Stream implementation that helps supporting 'expr' streaming in export writer.\nClass ExportWriterStream;\n// \nClass IntComp.IntAsc;\n// \nClass IntComp.IntDesc;\n// \nClass IntValue;\n// \nClass LongValue;\n// \nClass ExportWriter.IgnoreException;\n", "des": "Solr's Export Handler Functionality"}
{"index": 3661, "repo": "solr-core-9.3.0", "code": "package loader\n\n// This class can load a single document or a stream of documents in CBOR format this is equivalent of loading a single json documet or an array of json documents\nClass CborLoader;\n// Load a ContentStream into Solr\nClass ContentStreamLoader;\n// \nClass CSVLoader;\n// \nClass CSVLoaderBase;\n// Update handler which uses the JavaBin format\nClass JavabinLoader;\n// \nClass JsonLoader;\n// \nClass XMLLoader;\n", "des": "ContentStreamLoader implementations for use in ContentStreamHandlerBase implementations"}
{"index": 3662, "repo": "solr-core-9.3.0", "code": "package tagger\n\n// \nInterface TagClusterReducer;\n// Attribute used by the Tagger to decide if a token can start a new tag.\nInterface TaggingAttribute;\n// \nClass OffsetCorrector;\n// Tags maximum string of words in a corpus.\nClass Tagger;\n// Scans posted text, looking for matching strings in the Solr index.\nClass TaggerRequestHandler;\n// Implementation of the TaggingAttribute\nClass TaggingAttributeImpl;\n// This is a Tag -- a startOffset, endOffset and value.\nClass TagLL;\n", "des": "The TaggerRequestHandler and supporting classes."}
{"index": 3663, "repo": "solr-core-9.3.0", "code": "package highlight\n\n// \nInterface SolrEncoder;\n// \nInterface SolrFormatter;\n// \nInterface SolrFragListBuilder;\n// \nInterface SolrFragmenter;\n// \nClass BreakIteratorBoundaryScanner;\n// Use the DefaultEncoder\nClass DefaultEncoder;\n// \nClass DefaultSolrHighlighter;\n// \nClass DefaultSolrHighlighter.FvhContainer;\n// \nClass GapFragmenter;\n// \nClass HighlightingPluginBase;\n// Use the SimpleHTMLEncoder\nClass HtmlEncoder;\n// Use the SimpleHTMLFormatter\nClass HtmlFormatter;\n", "des": "SolrHighlighter API and related implementations and utilities"}
{"index": 3664, "repo": "solr-core-9.3.0", "code": "package index\n\n// A MergePolicyFactory for the default MergePolicy.\nClass DefaultMergePolicyFactory;\n// A MergePolicyFactory for LogByteSizeMergePolicy objects.\nClass LogByteSizeMergePolicyFactory;\n// A MergePolicyFactory for LogDocMergePolicy objects.\nClass LogDocMergePolicyFactory;\n// A factory for creating a MergePolicy.\nClass MergePolicyFactory;\n// \nClass MergePolicyFactoryArgs;\n// \nClass NoMergePolicyFactory;\n// A MergePolicyFactory for simple MergePolicy objects.\nClass SimpleMergePolicyFactory;\n", "des": "Indexing related classes."}
{"index": 3665, "repo": "solr-core-9.3.0", "code": "package csv\n\n// A simple StringBuffer replacement that aims to reduce copying as much as possible.\nClass CharBuffer;\n// Parses CSV files according to the specified configuration.\nClass CSVParser;\n// Print values as a comma separated list.\nClass CSVPrinter;\n// CSVStrategy\nClass CSVStrategy;\n// Utility methods for dealing with CSV files\nClass CSVUtils;\n", "des": "Internal classes used for reading/writing CSV"}
{"index": 3666, "repo": "solr-core-9.3.0", "code": "package jersey\n\n// A MapWriter implementation that relies on Jackson's JsonProperty annotation.\nInterface JacksonReflectMapWriter;\n// Keys used to store and retrieve values from the Jersey request context.\nInterface RequestContextKeys;\n// \nClass AsyncJerseyResponse;\n// Flattens the exception and sets on a SolrJerseyResponse.\nClass CatchAllExceptionMapper;\n// A value type representing an error.\nClass ErrorInfo;\n// \nClass ErrorInfo.ErrorMetadata;\n", "des": "Jersey integration code"}
{"index": 3667, "repo": "solr-core-9.3.0", "code": "package container\n\n// Utility methods for creating and populating a ContainerRequest for use with Jersey ApplicationHandlers\nClass ContainerRequestUtils;\n// A ResponseWriter which copies that output of JAX-RS computation over to HttpServletResponse object used by the Jetty server.\nClass JettyBridgeResponseWriter;\n", "des": "Adapter code used to convert the native Jetty request/response abstractions into the objects required by Jersey"}
{"index": 3668, "repo": "solr-core-9.3.0", "code": "package legacy\n\n// Expert: Use this attribute to get the details of the currently generated token.\nInterface LegacyNumericTokenStream.LegacyNumericTermAttribute;\n// \nClass BBoxStrategy;\n// \nClass LegacyDoubleField;\n// \nClass LegacyField;\n// \nClass LegacyFieldType;\n// \nClass LegacyFloatField;\n// \nClass LegacyIntField;\n// \nClass LegacyLongField;\n// \nClass LegacyNumericRangeQuery<T extends Number>;\n// \nClass LegacyNumericTokenStream;\n", "des": "Deprecated stuff!"}
{"index": 3669, "repo": "solr-core-9.3.0", "code": "package logging\n\n// FIFO Circular List.\nClass CircularList<T>;\n// Utility to log a deprecation.\nClass DeprecationLog;\n// \nClass ListenerConfig;\n// Wrapper class for Logger implementations\nClass LoggerInfo;\n// A Class to monitor Logging events and hold N events in memory\nClass LogWatcher<E>;\n// Defines the configuration of a LogWatcher\nClass LogWatcherConfig;\n// Set's per thread context info for logging.\nClass MDCLoggingContext;\n", "des": "APIs related to capturing log event info in the LoggingHandler"}
{"index": 3670, "repo": "solr-core-9.3.0", "code": "package jul\n\n// \nClass JulInfo;\n// \nClass JulWatcher;\n// \nClass RecordHandler;\n", "des": "JUL based implementation of LogWatcher"}
{"index": 3671, "repo": "solr-core-9.3.0", "code": "package log4j2\n\n// \nClass Log4j2Watcher;\n// \nClass Log4j2Watcher.Log4j2Appender;\n// \nClass Log4j2Watcher.Log4j2Info;\n", "des": "LOG4J2 based implementation of LogWatcher"}
{"index": 3672, "repo": "solr-core-9.3.0", "code": "package metrics\n\n// Marker interface for all no-op metrics.\nInterface MetricSuppliers.NoOpMetric;\n// Used by objects that expose metrics through SolrMetricManager.\nInterface SolrMetricProducer;\n// This class is used for keeping several partial named values and providing useful statistics over them.\nClass AggregateMetric;\n// Simple class to represent current value and how many times it was set.\nClass AggregateMetric.Update;\n", "des": "The SolrCoreMetricManager is responsible for collecting metrics from SolrMetricProducer's and exposing metrics to SolrMetricReporter's."}
{"index": 3673, "repo": "solr-core-9.3.0", "code": "package reporters\n\n// Provide an instance of service client.\nInterface ReporterClientCache.ClientProvider<T>;\n// Simple cache for reusable service clients used by some implementations of SolrMetricReporter.\nClass ReporterClientCache<T>;\n// Metrics reporter that wraps GraphiteReporter.\nClass SolrGraphiteReporter;\n// A SolrMetricReporter that finds (or creates) a MBeanServer from the given configuration and registers metrics to it with JMX.\nClass SolrJmxReporter;\n", "des": "This package houses 'pluggable' metric reporters that inherit from the SolrMetricReporter class."}
{"index": 3674, "repo": "solr-core-9.3.0", "code": "package jmx\n\n// \nInterface JmxMetricsReporter.JmxCounterMBean;\n// \nInterface JmxMetricsReporter.JmxGaugeMBean;\n// \nInterface JmxMetricsReporter.JmxHistogramMBean;\n// \nInterface JmxMetricsReporter.JmxMeterMBean;\n// \nInterface JmxMetricsReporter.JmxTimerMBean;\n// \nInterface JmxMetricsReporter.MetricMBean;\n", "des": "This package contains components that support SolrJmxReporter."}
{"index": 3675, "repo": "solr-core-9.3.0", "code": "package solr\n\n// Implementation of ScheduledReporter that reports metrics from selected registries and sends them periodically as update requests to a selected Solr collection and to a configured handler.\nClass SolrReporter;\n// Builder for the SolrReporter class.\nClass SolrReporter.Builder;\n// Specification of what registries and what metrics to send.\nClass SolrReporter.Report;\n", "des": "This package contains SolrMetricReporter implementations specific to SolrCloud reporting."}
{"index": 3676, "repo": "solr-core-9.3.0", "code": "package packagemanager\n\n// This is a serializable bean (for the JSON that is stored in /repository.json) representing a repository of Solr packages.\nClass DefaultPackageRepository;\n// Handles most of the management of packages that are already installed in Solr.\nClass PackageManager;\n// Abstract class for a repository, holding SolrPackage items.\nClass PackageRepository;\n// \nClass PackageUtils;\n", "des": "This package contains Package Manager (CLI) implementation"}
{"index": 3677, "repo": "solr-core-9.3.0", "code": "package parser\n\n// Token literal values and constants.\nInterface QueryParserConstants;\n// \nClass QueryParser;\n// Token Manager.\nClass QueryParserTokenManager;\n// This class is overridden by QueryParser in QueryParser.jj and acts to separate the majority of the Java code from the .jj grammar file.\nClass SolrQueryParserBase;\n// \nClass SolrQueryParserBase.RawQuery;\n// Describes the input token stream.\nClass Token;\n// The default operator for parsing queries.\nEnum QueryParser.Operator;\n", "des": "Solr native variant of the Lucene Classic QueryParser"}
{"index": 3678, "repo": "solr-core-9.3.0", "code": "package pkg\n\n// \nInterface PackageListeners.Listener;\n// This implements the public end points (/api/cluster/package) of package API.\nClass PackageAPI;\n// \nClass PackageAPI.Packages;\n// \nClass PackageAPI.PkgVersion;\n// \nClass PackageListeners;\n// \nClass PackageListeners.Listener.Ctx;\n// A SolrClassLoader that is designed to listen to a set of packages.\nClass PackageListeningClassLoader;\n// \nClass PackagePluginHolder<T>;\n", "des": "Package management implementation"}
{"index": 3679, "repo": "solr-core-9.3.0", "code": "package query\n\n// A filtered query wrapped around another query similar to BooleanClause.Occur.FILTER -- it scores as 0.\nClass FilterQuery;\n// \nClass SolrRangeQuery;\n", "des": "Solr Queries"}
{"index": 3680, "repo": "solr-core-9.3.0", "code": "package request\n\n// Container for a request to execute a query.\nInterface SolrQueryRequest;\n// Implementations of SolrRequestHandler are called to handle query requests.\nInterface SolrRequestHandler;\n// A SolrQueryRequest implementation that defers to a delegate in all cases.\nClass DelegatingSolrQueryRequest;\n// Computes term facets for docvalues field (single or multivalued).\nClass DocValuesFacets;\n// Computes term stats for docvalues field (single or multivalued).\nClass DocValuesStats;\n", "des": "APIs and classes for dealing with Solr requests"}
{"index": 3681, "repo": "solr-core-9.3.0", "code": "package json\n\n// \nClass JSONUtil;\n// \nClass ObjectUtil;\n// \nClass ObjectUtil.ConflictHandler;\n// \nClass RequestUtil;\n", "des": "JSON related classes"}
{"index": 3682, "repo": "solr-core-9.3.0", "code": "package macro\n\n// \nClass MacroExpander;\n", "des": "Parameter substitution / macro expansion."}
{"index": 3683, "repo": "solr-core-9.3.0", "code": "package response\n\n// Implementations of BinaryQueryResponseWriter are used to write response in binary format.\nInterface BinaryQueryResponseWriter;\n// Implementations of QueryResponseWriter are used to format responses to query requests.\nInterface QueryResponseWriter;\n// \nClass BasicResultContext;\n// \nClass BinaryResponseWriter;\n// \nClass BinaryResponseWriter.Resolver;\n// A response writer impl that can write results in CBOR (cbor.io) format when wt=cbor.\nClass CborResponseWriter;\n", "des": "API and implementations of QueryResponseWriter for formatting Solr request responses"}
{"index": 3684, "repo": "solr-core-9.3.0", "code": "package transform\n\n// The TransformerFactory.FieldRenamer interface should be implemented by any TransformerFactory capable of generating transformers that might rename fields, and should implement TransformerFactory.FieldRenamer.create(String, SolrParams, SolrQueryRequest, Map, Set) in place of TransformerFactory.create(String, SolrParams, SolrQueryRequest) (with the latter method overridden to throw UnsupportedOperationException).\nInterface TransformerFactory.FieldRenamer;\n", "des": "APIs and implementations of DocTransformer for modifying documents in Solr request responses"}
{"index": 3685, "repo": "solr-core-9.3.0", "code": "package rest\n\n// Marker interface to indicate a ManagedResource implementation class also supports managing child resources at path: /<resource>/{child}\nInterface ManagedResource.ChildResourceSupport;\n// Allows a Solr component to register as an observer of important ManagedResource events, such as when the managed data is loaded.\nInterface ManagedResourceObserver;\n// Hides the underlying storage implementation for data being managed by a ManagedResource.\nInterface ManagedResourceStorage.StorageIO;\n", "des": "Solr RESTful APIs."}
{"index": 3686, "repo": "solr-core-9.3.0", "code": "package schema\n\n// Utility class for converting a JSON definition of a FieldType into the XML format expected by the FieldTypePluginLoader.\nClass FieldTypeXmlAdapter;\n", "des": "Provides RESTful API access to managed resources in the Solr Schema."}
{"index": 3687, "repo": "solr-core-9.3.0", "code": "package analysis\n\n// Abstract based class for implementing TokenFilterFactory objects that are managed by the REST API.\nClass BaseManagedTokenFilterFactory;\n// TokenFilterFactory that uses the ManagedWordSetResource implementation for managing stop words using the REST API.\nClass ManagedStopFilterFactory;\n// \nClass ManagedSynonymFilterFactory;\n", "des": "Analysis-related functionality for RESTful API access to managed resources related to the schema, such as stopwords, protected words, and synonyms."}
{"index": 3688, "repo": "solr-core-9.3.0", "code": "package schema\n\n// Marker interface for Date-valued field types.\nInterface DateValueFieldType;\n// Marker interface for double-valued field types.\nInterface DoubleValueFieldType;\n// Interface for providing pluggable exchange rate providers to @CurrencyField\nInterface ExchangeRateProvider;\n// Marker interface for float-valued field types.\nInterface FloatValueFieldType;\n// Marker interface for field types that have an implicit (non-user-configurable) index-time schema.\nInterface HasImplicitIndexAnalyzer;\n", "des": "IndexSchema and FieldType implementations for powering schema.xml"}
{"index": 3689, "repo": "solr-core-9.3.0", "code": "package search\n\n// Implementations of CacheRegenerator are used in autowarming to populate a new cache based on an old cache.\nInterface CacheRegenerator;\n// Simple Iterator of document Ids which may include score information.\nInterface DocIterator;\n// DocList represents the result of a query: an ordered list of document ids with optional score.\nInterface DocList;\n// \nInterface DocSetProducer;\n// The ExtendedQuery interface provides extra metadata to a query.\nInterface ExtendedQuery;\n", "des": "APIs and classes for parsing and processing search requests"}
{"index": 3690, "repo": "solr-core-9.3.0", "code": "package facet\n\n// The following ord visitors and wrappers are a work in progress and experimental\nInterface FieldUtil.OrdFunc;\n// \nInterface UnInvertedField.Callback;\n// \nClass AggUtil;\n// \nClass AggValueSource;\n// \nClass AvgAgg;\n// \nClass BlockJoin;\n// constants used in facets package\nClass Constants;\n// \nClass CountAgg;\n// AggValueSource to count values for given ValueSource\nClass CountValsAgg;\n// Accumulates stats separated by slot number for the fields with DocValues\nClass DocValuesAcc;\n", "des": "APIs and classes for the JSON Facet API."}
{"index": 3691, "repo": "solr-core-9.3.0", "code": "package function\n\n// \nInterface SolrComparisonBoolFunction.Compare;\n// \nClass CollapseScoreFunction;\n// \nClass CollapseScoreFunction.CollapseScoreFunctionValues;\n// ConcatStringFunction concatenates the string values of its components in the order given.\nClass ConcatStringFunction;\n// Abstract ValueSource implementation which wraps two ValueSources and applies an extendible double function to their values.\nClass DualDoubleFunction;\n// Compares two values for equality.\nClass EqualFunction;\n", "des": "Solr implementations of ValueSource for function queries."}
{"index": 3692, "repo": "solr-core-9.3.0", "code": "package distance\n\n// Parses \"geodist\" creating HaversineConstFunction or HaversineFunction or calling SpatialStrategy.makeDistanceValueSource(org.locationtech.spatial4j.shape.Point,double).\nClass GeoDistValueSourceParser;\n// \nClass GeohashFunction;\n// \nClass GeohashHaversineFunction;\n// Haversine function with one point constant\nClass HaversineConstFunction;\n", "des": "Solr implementations of ValueSource for distance based function queries."}
{"index": 3693, "repo": "solr-core-9.3.0", "code": "package grouping\n\n// Defines a grouping command.\nInterface Command<T>;\n// Responsible for executing a search with a number of Command instances.\nClass CommandHandler;\n// \nClass CommandHandler.Builder;\n// Encapsulates the grouping options like fields group sort and more specified by clients.\nClass GroupingSpecification;\n", "des": "APIs and classes for implementing result grouping"}
{"index": 3694, "repo": "solr-core-9.3.0", "code": "package collector\n\n// A collector that filters incoming doc ids that are not in the filter.\nClass FilterCollector;\n", "des": "Grouping related Collectors"}
{"index": 3695, "repo": "solr-core-9.3.0", "code": "package distributed\n\n// Responsible for creating shard requests to the shards in the cluster to perform distributed grouping.\nInterface ShardRequestFactory;\n// Responsible for processing shard responses.\nInterface ShardResponseProcessor;\n", "des": "Internal classes used to implement distributed result grouping"}
{"index": 3696, "repo": "solr-core-9.3.0", "code": "package command\n\n// \nClass QueryCommand;\n// \nClass QueryCommand.Builder;\n// Encapsulates TopDocs and the number of matches.\nClass QueryCommandResult;\n// Creates all the collectors needed for the first phase and how to handle the results.\nClass SearchGroupsFieldCommand;\n// \nClass SearchGroupsFieldCommand.Builder;\n// Encapsulates the result of a SearchGroupsFieldCommand command\nClass SearchGroupsFieldCommandResult;\n", "des": "Internal classes used to implement distributed result grouping"}
{"index": 3697, "repo": "solr-core-9.3.0", "code": "package requestfactory\n\n// Concrete implementation of ShardRequestFactory that creates ShardRequest instances for getting the search groups from all shards.\nClass SearchGroupsRequestFactory;\n// \nClass StoredFieldsShardRequestFactory;\n// Concrete implementation of ShardRequestFactory that creates ShardRequest instances for getting the top groups from all shards.\nClass TopGroupsShardRequestFactory;\n", "des": "Internal classes used to implement distributed result grouping"}
{"index": 3698, "repo": "solr-core-9.3.0", "code": "package responseprocessor\n\n// Concrete implementation for merging SearchGroup instances from shard responses.\nClass SearchGroupShardResponseProcessor;\n// Concrete implementation for processing the stored field values from shard responses.\nClass StoredFieldsShardResponseProcessor;\n// Concrete implementation for merging TopGroups instances from shard responses.\nClass TopGroupsShardResponseProcessor;\n", "des": "Internal classes used to implement distributed result grouping"}
{"index": 3699, "repo": "solr-core-9.3.0", "code": "package shardresultserializer\n\n// A ShardResultTransformer is responsible for transforming a grouped shard result into group related structures (such as TopGroups and SearchGroup) and visa versa.\nInterface ShardResultTransformer<T,​R>;\n// Implementation for transforming SearchGroup into a NamedList structure and visa versa.\nClass SearchGroupsResultTransformer;\n// Implementation for transforming TopGroups and TopDocs into a NamedList structure and vice versa.\nClass TopGroupsResultTransformer;\n", "des": "Internal classes used to implement distributed result grouping"}
{"index": 3700, "repo": "solr-core-9.3.0", "code": "package endresulttransformer\n\n// Responsible for transforming the grouped result into the final format for displaying purposes.\nInterface EndResultTransformer;\n// Abstracts the source for SolrDocument instances.\nInterface EndResultTransformer.SolrDocumentSource;\n// Implementation of EndResultTransformer that keeps each grouped result separate in the final response.\nClass GroupedEndResultTransformer;\n", "des": "APIs and classes for transforming result grouping results into the appropriate response format"}
{"index": 3701, "repo": "solr-core-9.3.0", "code": "package join\n\n// \nClass BlockJoinChildQParser;\n// Usage: {!child of=\"PARENT:true\"}PARENT_PRICE:10\nClass BlockJoinChildQParserPlugin;\n// \nClass BlockJoinParentQParser;\n// Usage: {!parent which=\"PARENT:true\"}CHILD_PRICE:10 supports optional score parameter with one of ScoreMode values: None,Avg,Total,Min,Max.\nClass BlockJoinParentQParserPlugin;\n// \nClass ChildFieldValueSourceParser;\n// \nClass CrossCollectionJoinQParser;\n// \nClass CrossCollectionJoinQuery;\n// \nClass FiltersQParser;\n", "des": "Classes related to joins."}
{"index": 3702, "repo": "solr-core-9.3.0", "code": "package mlt\n\n// \nClass CloudMLTQParser;\n// \nClass MLTContentQParserPlugin;\n// Usage: {!mlt qf=queryField1,queryField2}uniqueId\nClass MLTQParserPlugin;\n// \nClass SimpleMLTQParser;\n", "des": "APIs and classes for implementing MoreLikeThis (mlt) QueryParser."}
{"index": 3703, "repo": "solr-core-9.3.0", "code": "package neural\n\n// \nClass KnnQParser;\n// A neural query parser to run K-nearest neighbors search on Dense Vector fields.\nClass KnnQParserPlugin;\n", "des": "APIs and classes for implementing Neural (Dense Retrieval) QueryParsers."}
{"index": 3704, "repo": "solr-core-9.3.0", "code": "package similarities\n\n// Factory for BM25Similarity.\nClass BM25SimilarityFactory;\n// Factory for BooleanSimilarity\nClass BooleanSimilarityFactory;\n// Factory for ClassicSimilarity\nClass ClassicSimilarityFactory;\n// Factory for DFISimilarity\nClass DFISimilarityFactory;\n// Factory for DFRSimilarity\nClass DFRSimilarityFactory;\n// Factory for IBSimilarity\nClass IBSimilarityFactory;\n// Factory for LMDirichletSimilarity\nClass LMDirichletSimilarityFactory;\n", "des": "Factories for various built-in Lucene ranking models."}
{"index": 3705, "repo": "solr-core-9.3.0", "code": "package stats\n\n// Modifiable version of CollectionStatistics useful for aggregation of per-shard stats.\nClass CollectionStats;\n// This class implements exact caching of statistics.\nClass ExactSharedStatsCache;\n// This class implements exact caching of statistics.\nClass ExactStatsCache;\n// \nClass ExactStatsCache.ExactStatsSource;\n// Default implementation that simply ignores global term statistics, and always uses local term statistics.\nClass LocalStatsCache;\n", "des": "APIs and Classes implementing the Stats component used for document frequency calculations."}
{"index": 3706, "repo": "solr-core-9.3.0", "code": "package security\n\n// Interface for formatting the event\nInterface AuditLoggerPlugin.AuditEventFormatter;\n// \nInterface AuditLoggerPlugin.MuteRule;\n// Authorization interface that needs to be implemented to write an authorization plugin.\nInterface AuthorizationPlugin;\n// \nInterface BasicAuthPlugin.AuthenticationProvider;\n// An interface to be implemented by a Plugin whose Configuration is runtime editable\nInterface ConfigEditablePlugin;\n", "des": "Commonly used classes for Solr security framework."}
{"index": 3707, "repo": "solr-core-9.3.0", "code": "package servlet\n\n// Denotes an object, usually a servlet that denies access to some paths based on the supplied patterns.\nInterface PathExcluder;\n// internal API\nInterface SolrDispatchFilter.HttpSolrCallFactory;\n// \nClass CoordinatorHttpSolrCall;\n// \nClass CoordinatorHttpSolrCall.Factory;\n// A service that can provide access to solr cores.\nClass CoreContainerProvider;\n", "des": "Servlet related classes for powering the Solr HTTP API"}
{"index": 3708, "repo": "solr-core-9.3.0", "code": "package cache\n\n// \nClass HttpCacheHeaderUtil;\n// \nEnum Method;\n", "des": "Caching related classes used in the Solr HTTP API"}
{"index": 3709, "repo": "solr-core-9.3.0", "code": "package spelling\n\n// Abstract base class for all Lucene-based spell checking implementations.\nClass AbstractLuceneSpellChecker;\n// This class lets a query be run through multiple spell checkers.\nClass ConjunctionSolrSpellChecker;\n// Spellchecker implementation that uses DirectSpellChecker\nClass DirectSolrSpellChecker;\n// A spell checker implementation that loads words from a text file (one word per line).\nClass FileBasedSpellChecker;\n", "des": "APIs and classes used by the SpellCheckComponent"}
{"index": 3710, "repo": "solr-core-9.3.0", "code": "package suggest\n\n// \nInterface SuggesterParams;\n// Encapsulates shared fields for all types of dictionaryFactory classes\nClass DictionaryFactory;\n// Factory for DocumentDictionary\nClass DocumentDictionaryFactory;\n// Factory for DocumentValueSourceDictionary\nClass DocumentExpressionDictionaryFactory;\n// Factory for FileDictionary\nClass FileDictionaryFactory;\n// Factory for HighFrequencyDictionary\nClass HighFrequencyDictionaryFactory;\n// Suggester factory for creating Lookup instances.\nClass LookupFactory;\n", "des": "APIs and classes used by the SpellCheckComponent"}
{"index": 3711, "repo": "solr-core-9.3.0", "code": "package fst\n\n// Factory for AnalyzingInfixSuggester\nClass AnalyzingInfixLookupFactory;\n// Factory for AnalyzingSuggester\nClass AnalyzingLookupFactory;\n// Factory for BlendedInfixLookupFactory\nClass BlendedInfixLookupFactory;\n// LookupFactory implementation for FreeTextSuggester\nClass FreeTextLookupFactory;\n// Factory for FSTCompletionLookup\nClass FSTLookupFactory;\n// Factory for FuzzySuggester\nClass FuzzyLookupFactory;\n// Factory for WFSTCompletionLookup\nClass WFSTLookupFactory;\n", "des": "Factories for FST and Analyzing based Suggesters"}
{"index": 3712, "repo": "solr-core-9.3.0", "code": "package jaspell\n\n// \nClass JaspellLookup;\n// Factory for JaspellLookup Note: This Suggester is not very RAM efficient.\nClass JaspellLookupFactory;\n// \nClass JaspellTernarySearchTrie;\n// An inner class of Ternary Search Trie that represents a node in the trie.\nClass JaspellTernarySearchTrie.TSTNode;\n", "des": "Factories for JaSpell based Suggesters"}
{"index": 3713, "repo": "solr-core-9.3.0", "code": "package tst\n\n// Factory for TSTLookup\nClass TSTLookupFactory;\n", "des": "Factories for TST based Suggesters"}
{"index": 3714, "repo": "solr-core-9.3.0", "code": "package uninverting\n\n// Expert: Maintains caches of term values.\nInterface FieldCache;\n// interface to all parsers.\nInterface FieldCache.Parser;\n// This class enables fast access to multiple term ords for a specified field across all docIDs.\nClass DocTermOrds;\n// EXPERT: A unique Identifier/Description for each item in the FieldCache.\nClass FieldCache.CacheEntry;\n// Placeholder indicating creation of this cache is currently in-progress.\nClass FieldCache.CreationPlaceholder;\n", "des": "Support for creating docvalues on-the-fly from the inverted index at runtime."}
{"index": 3715, "repo": "solr-core-9.3.0", "code": "package update\n\n// \nInterface SolrCoreState.IndexWriterCloser;\n// \nInterface VersionBucket.CheckedFunction<T,​R>;\n// An UpdateCommand for adding or updating one document.\nClass AddUpdateCommand;\n// Helper class for tracking autoCommit state.\nClass CommitTracker;\n// A commit index command encapsulated in an object.\nClass CommitUpdateCommand;\n// \nClass DefaultSolrCoreState;\n// \nClass DeleteUpdateCommand;\n", "des": "APIs and classes for managing index updates"}
{"index": 3716, "repo": "solr-core-9.3.0", "code": "package processor\n\n// A marker interface for denoting that a factory is responsible for handling distributed communication of updates across a SolrCloud cluster.\nInterface DistributingUpdateProcessorFactory;\n// Interface for identifying which fields should be mutated\nInterface FieldMutatingUpdateProcessor.FieldNameSelector;\n", "des": "UpdateRequestProcessorFactory APIs and implementations for use in UpdateRequestProcessorChains"}
{"index": 3717, "repo": "solr-core-9.3.0", "code": "package util\n\n// \nInterface ConcurrentLRUCache.EvictionListener<K,​V>;\n// An efficient map for storing keys as integer in range from 0..n with n can be estimated up-front.\nInterface DynamicMap;\n// Represents an operation that accepts a single float-valued argument and returns no result.\nInterface FloatConsumer;\n// A Function that may throw an IOException\nInterface IOFunction<T,​R>;\n// A long-based iterator.\nInterface LongIterator;\n// \nInterface RTimer.TimerImpl;\n// \nInterface TestInjection.Hook;\n", "des": "Common utility classes used throughout Solr"}
{"index": 3718, "repo": "solr-core-9.3.0", "code": "package circuitbreaker\n\n// Default class to define circuit breakers for Solr.\nClass CircuitBreaker;\n// \nClass CircuitBreaker.CircuitBreakerConfig;\n// Manages all registered circuit breaker instances.\nClass CircuitBreakerManager;\n// Tracks current CPU usage and triggers if the specified threshold is breached.\nClass CPUCircuitBreaker;\n// Tracks the current JVM heap usage and triggers if it exceeds the defined percentage of the maximum heap size allocated to the JVM.\nClass MemoryCircuitBreaker;\n", "des": "Support for triggering exceptions on excessive resource usage"}
{"index": 3719, "repo": "solr-core-9.3.0", "code": "package configuration\n\n// Interface for different source of SSL configurations.\nInterface SSLCredentialProvider;\n// Dedicated object to handle Solr configurations\nClass SSLConfigurations;\n// \nClass SSLConfigurations.SysProps;\n// \nClass SSLConfigurationsFactory;\n// Class responsible to build SSL credential providers\nClass SSLCredentialProviderFactory;\n// \nEnum SSLCredentialProvider.CredentialType;\n", "des": "Common Util APIs related to Solr configuration."}
{"index": 3720, "repo": "solr-core-9.3.0", "code": "package providers\n\n// Abstract provider with default implementation\nClass AbstractSSLCredentialProvider;\n// Environment variable based SSL configuration provider\nClass EnvSSLCredentialProvider;\n// \nClass EnvSSLCredentialProvider.EnvVars;\n// System property based SSL configuration provider\nClass SysPropSSLCredentialProvider;\n", "des": "TODO"}
{"index": 3721, "repo": "solr-core-9.3.0", "code": "package hll\n\n// A serialization schema for HLLs.\nInterface ISchemaVersion;\n// Reads 'words' of a fixed width, in sequence, from a byte array.\nInterface IWordDeserializer;\n// A probabilistic set of hashed long elements.\nClass HLL;\n// The types of algorithm/data structure that HLL can utilize.\nEnum HLLType;\n", "des": "A fork of Java-HyperLogLog package tweaked not to depend on fastutil and with cleanups to make it lean and clean."}
{"index": 3722, "repo": "solr-core-9.3.0", "code": "package plugin\n\n// A plugin that can be initialized with a Map<String,String>\nInterface MapInitializedPlugin;\n// A plugin that can be initialized with a NamedList\nInterface NamedListInitializedPlugin;\n// A plugin that can be initialized with a PluginInfo\nInterface PluginInfoInitialized;\n// \nInterface SolrCoreAware;\n// An abstract super class that manages standard solr-style plugin configuration.\nClass AbstractPluginLoader<T>;\n// \nClass MapPluginLoader<T extends MapInitializedPlugin>;\n", "des": "Common APIs related to implementing Solr plugins"}
{"index": 3723, "repo": "solr-core-9.3.0", "code": "package stats\n\n// Strategy for creating metric names for HttpClient Copied from metrics-httpclient library\nInterface HttpClientMetricNameStrategy;\n// \nInterface InstrumentedHttpListenerFactory.NameStrategy;\n// A HttpListenerFactory tracks metrics interesting to solr Inspired and partially copied from dropwizard httpclient library\nClass InstrumentedHttpListenerFactory;\n", "des": "Utilities for collecting statistics"}
{"index": 3724, "repo": "solr-core-9.3.0", "code": "package tracing\n\n// A Carrier for extract Span context out of request headers\nClass HttpServletCarrier;\n// An OpenTracing Carrier for injecting Span context through SolrRequest\nClass SolrRequestCarrier;\n// Utilities for distributed tracing.\nClass TraceUtils;\n", "des": "Tracing related utilities"}
{"index": 3725, "repo": "solr-core-9.3.0", "code": "package vector\n\n// \nClass ByteDenseVectorParser;\n// \nClass DenseVectorParser;\n// \nClass FloatDenseVectorParser;\n// \nEnum DenseVectorParser.BuilderPhase;\n", "des": "Utilities for dense vector search"}
{"index": 3726, "repo": "lucene-queryparser-9.7.0", "code": "package charstream\n\n// This interface describes a character stream that maintains line and column number positions of the characters.\nInterface CharStream;\n// An efficient implementation of JavaCC's CharStream interface.\nClass FastCharStream;\n", "des": "This package contains reusable parts for javacc-generated grammars (query parsers)."}
{"index": 3727, "repo": "lucene-queryparser-9.7.0", "code": "package classic\n\n// Token literal values and constants.\nInterface QueryParserConstants;\n// A QueryParser which constructs queries to search multiple fields.\nClass MultiFieldQueryParser;\n// This class is generated by JavaCC.\nClass QueryParser;\n// This class is overridden by QueryParser in QueryParser.jj and acts to separate the majority of the Java code from the .jj grammar file.\nClass QueryParserBase;\n// Token Manager.\nClass QueryParserTokenManager;\n// Describes the input token stream.\nClass Token;\n", "des": "A simple query parser implemented with JavaCC."}
{"index": 3728, "repo": "lucene-queryparser-9.7.0", "code": "package complexPhrase\n\n// QueryParser which permits complex phrase query syntax eg \"(john jon jonathan~) peters*\".\nClass ComplexPhraseQueryParser;\n", "des": "QueryParser which permits complex phrase query syntax eg \"(john jon jonathan~) peters*\""}
{"index": 3729, "repo": "lucene-queryparser-9.7.0", "code": "package ext\n\n// The ExtendableQueryParser enables arbitrary query parser extension based on a customizable field naming scheme.\nClass ExtendableQueryParser;\n// ExtensionQuery holds all query components extracted from the original query string like the query field and the extension query string.\nClass ExtensionQuery;\n// The Extensions class represents an extension mapping to associate ParserExtension instances with extension keys.\nClass Extensions;\n", "des": "Extendable QueryParser provides a simple and flexible extension mechanism by overloading query field names."}
{"index": 3730, "repo": "lucene-queryparser-9.7.0", "code": "package core\n\n// This class is a helper for the query parser framework, it does all the three query parser phrases at once: text parsing, query processing and query building.\nClass QueryParserHelper;\n// This exception should be thrown if something wrong happens when dealing with QueryNodes.\nClass QueryNodeException;\n// This should be thrown when an exception happens during the query parsing from string to the query node tree.\nClass QueryNodeParseException;\n", "des": "Core classes of the flexible query parser framework."}
{"index": 3731, "repo": "lucene-queryparser-9.7.0", "code": "package builders\n\n// This interface is used by implementors classes that builds some kind of object from a query tree.\nInterface QueryBuilder;\n// This class should be used when there is a builder for each type of node.\nClass QueryTreeBuilder;\n", "des": "Necessary classes to implement query builders."}
{"index": 3732, "repo": "lucene-queryparser-9.7.0", "code": "package config\n\n// This interface should be implemented by classes that wants to listen for field configuration requests.\nInterface FieldConfigListener;\n// This class is the base of QueryConfigHandler and FieldConfig.\nClass AbstractQueryConfig;\n// An instance of this class represents a key that is used to retrieve a value from AbstractQueryConfig.\nClass ConfigurationKey<T>;\n// This class represents a field configuration.\nClass FieldConfig;\n", "des": "Base classes used to configure the query processing."}
{"index": 3733, "repo": "lucene-queryparser-9.7.0", "code": "package messages\n\n// Flexible Query Parser message bundle class\nClass QueryParserMessages;\n", "des": "Messages usually used by query parser implementations."}
{"index": 3734, "repo": "lucene-queryparser-9.7.0", "code": "package nodes\n\n// A query node implements FieldableNode interface to indicate that its children and itself are associated to a specific field.\nInterface FieldableNode;\n// This interface should be implemented by QueryNode that holds a field and an arbitrary value.\nInterface FieldValuePairQueryNode<T>;\n// A QueryNode is a interface implemented by all nodes on a QueryNode tree.\nInterface QueryNode;\n", "des": "Query nodes commonly used by query parser implementations."}
{"index": 3735, "repo": "lucene-queryparser-9.7.0", "code": "package parser\n\n// A parser needs to implement EscapeQuerySyntax to allow the QueryNode to escape the queries, when the toQueryString method is called.\nInterface EscapeQuerySyntax;\n// A parser needs to implement SyntaxParser interface\nInterface SyntaxParser;\n// Type of escaping: String for escaping syntax, NORMAL for escaping reserved words (like AND) in terms\nEnum EscapeQuerySyntax.Type;\n", "des": "Necessary interfaces to implement text parsers."}
{"index": 3736, "repo": "lucene-queryparser-9.7.0", "code": "package processors\n\n// A QueryNodeProcessor is an interface for classes that process a QueryNode tree.\nInterface QueryNodeProcessor;\n// A NoChildOptimizationQueryNodeProcessor removes every BooleanQueryNode, BoostQueryNode, TokenizedPhraseQueryNode or ModifierQueryNode that do not have a valid children.\nClass NoChildOptimizationQueryNodeProcessor;\n", "des": "Interfaces and implementations used by query node processors"}
{"index": 3737, "repo": "lucene-queryparser-9.7.0", "code": "package util\n\n// Allow joining 2 QueryNode Trees, into one.\nClass QueryNodeOperation;\n// String manipulation routines\nClass StringUtils;\n// CharsSequence with escaped chars information.\nClass UnescapedCharSequence;\n", "des": "Utility classes to used with the Query Parser."}
{"index": 3738, "repo": "lucene-queryparser-9.7.0", "code": "package messages\n\n// Message Interface for a lazy loading.\nInterface Message;\n// Interface that exceptions should implement to support lazy loading of messages.\nInterface NLSException;\n// Default implementation of Message interface.\nClass MessageImpl;\n// MessageBundles classes extend this class, to implement a bundle.\nClass NLS;\n", "des": "For Native Language Support (NLS), system of software internationalization."}
{"index": 3739, "repo": "lucene-queryparser-9.7.0", "code": "package precedence\n\n// This query parser works exactly as the standard query parser ( StandardQueryParser ), except that it respect the boolean precedence, so <a AND b OR c AND d> is parsed to <(+a +b) (+c +d)> instead of <+a +b +c +d>.\nClass PrecedenceQueryParser;\n", "des": "Precedence Query Parser Implementation"}
{"index": 3740, "repo": "lucene-queryparser-9.7.0", "code": "package processors\n\n// This processor is used to apply the correct ModifierQueryNode to BooleanQueryNodes children.\nClass BooleanModifiersQueryNodeProcessor;\n// This processor pipeline extends StandardQueryNodeProcessorPipeline and enables boolean precedence on it.\nClass PrecedenceQueryNodeProcessorPipeline;\n", "des": "Lucene Precedence Query Parser Processors"}
{"index": 3741, "repo": "lucene-queryparser-9.7.0", "code": "package standard\n\n// Configuration options common across queryparser implementations.\nInterface CommonQueryParserConfiguration;\n// This class defines utility methods to (help) parse query strings into Query objects.\nClass QueryParserUtil;\n", "des": "Lucene Flexible Query Parser Implementation"}
{"index": 3742, "repo": "lucene-queryparser-9.7.0", "code": "package builders\n\n// This interface should be implemented by every class that wants to build Query objects from QueryNode objects.\nInterface StandardQueryBuilder;\n// Builds a BooleanQuery of SHOULD clauses, possibly with some minimum number to match.\nClass AnyQueryNodeBuilder;\n// Builds a BooleanQuery object from a BooleanQueryNode object.\nClass BooleanQueryNodeBuilder;\n", "des": "Standard Lucene Query Node Builders."}
{"index": 3743, "repo": "lucene-queryparser-9.7.0", "code": "package config\n\n// This listener listens for every field configuration request and assign a StandardQueryConfigHandler.ConfigurationKeys.BOOST to the equivalent FieldConfig based on a defined map: fieldName -> boostValue stored in StandardQueryConfigHandler.ConfigurationKeys.FIELD_BOOST_MAP.\nClass FieldBoostMapFCListener;\n", "des": "Standard Lucene Query Configuration."}
{"index": 3744, "repo": "lucene-queryparser-9.7.0", "code": "package nodes\n\n// This class should be extended by nodes intending to represent range queries.\nClass AbstractRangeQueryNode<T extends FieldValuePairQueryNode<?>>;\n// A BooleanModifierNode has the same behaviour as ModifierQueryNode, it only indicates that this modifier was added by BooleanQuery2ModifierNodeProcessor and not by the user.\nClass BooleanModifierNode;\n// Node that represents an interval function.\nClass IntervalQueryNode;\n", "des": "Standard Lucene Query Nodes."}
{"index": 3745, "repo": "lucene-queryparser-9.7.0", "code": "package intervalfn\n\n// Node that represents Intervals.after(IntervalsSource, IntervalsSource).\nClass After;\n// Node that represents Intervals.analyzedText(String, Analyzer, String, int, boolean).\nClass AnalyzedText;\n// Node that represents Intervals.atLeast(int, IntervalsSource...).\nClass AtLeast;\n// Node that represents Intervals.before(IntervalsSource, IntervalsSource).\nClass Before;\n// Node that represents Intervals.containedBy(IntervalsSource, IntervalsSource).\nClass ContainedBy;\n", "des": "This package contains classes that implement interval function support for the standard syntax parser."}
{"index": 3746, "repo": "lucene-queryparser-9.7.0", "code": "package parser\n\n// Token literal values and constants.\nInterface StandardSyntaxParserConstants;\n// Implementation of EscapeQuerySyntax for the standard lucene syntax.\nClass EscapeQuerySyntaxImpl;\n// Parser for the standard Lucene syntax\nClass StandardSyntaxParser;\n// Token Manager.\nClass StandardSyntaxParserTokenManager;\n// Describes the input token stream.\nClass Token;\n// This exception is thrown when parse errors are encountered.\nClass ParseException;\n// Token Manager Error.\nClass TokenMgrError;\n", "des": "Lucene Query Parser"}
{"index": 3747, "repo": "lucene-queryparser-9.7.0", "code": "package processors\n\n// This processor verifies if StandardQueryConfigHandler.ConfigurationKeys.ALLOW_LEADING_WILDCARD is defined in the QueryConfigHandler.\nClass AllowLeadingWildcardProcessor;\n// This processor verifies if StandardQueryConfigHandler.ConfigurationKeys.ANALYZER is defined in the QueryConfigHandler.\nClass AnalyzerQueryNodeProcessor;\n// This processor is used to apply the correct ModifierQueryNode to BooleanQueryNodes children.\nClass BooleanQuery2ModifierNodeProcessor;\n", "des": "Lucene Query Node Processors."}
{"index": 3748, "repo": "lucene-queryparser-9.7.0", "code": "package simple\n\n// SimpleQueryParser is used to parse human readable query syntax.\nClass SimpleQueryParser;\n", "des": "A simple query parser for human-entered queries."}
{"index": 3749, "repo": "lucene-queryparser-9.7.0", "code": "package parser\n\n// Token literal values and constants.\nInterface QueryParserConstants;\n// This class is generated by JavaCC.\nClass QueryParser;\n// Token Manager.\nClass QueryParserTokenManager;\n// Describes the input token stream.\nClass Token;\n// This exception is thrown when parse errors are encountered.\nClass ParseException;\n// Token Manager Error.\nClass TokenMgrError;\n", "des": "This package contains the QueryParser.jj source file for the Surround parser."}
{"index": 3750, "repo": "lucene-queryparser-9.7.0", "code": "package query\n\n// Interface for queries that can be nested as subqueries into a span near.\nInterface DistanceSubQuery;\n// Callback to visit each matching term during \"rewrite\" in SimpleTerm.MatchingTermVisitor.visitMatchingTerm(Term)\nInterface SimpleTerm.MatchingTermVisitor;\n// Factory for conjunctions\nClass AndQuery;\n// Factory for creating basic term queries\nClass BasicQueryFactory;\n// Base class for composite queries (such as AND/OR/NOT)\nClass ComposedQuery;\n", "des": "This package contains SrndQuery and its subclasses."}
{"index": 3751, "repo": "lucene-queryparser-9.7.0", "code": "package xml\n\n// Implemented by objects that produce Lucene Query objects from XML streams.\nInterface QueryBuilder;\n// Assembles a QueryBuilder which uses only core Lucene Query objects\nClass CoreParser;\n// Assembles a QueryBuilder which uses Query objects from Lucene's sandbox and queries modules in addition to core queries.\nClass CorePlusExtensionsParser;\n// Assembles a QueryBuilder which uses Query objects from Lucene's queries module in addition to core queries.\nClass CorePlusQueriesParser;\n", "des": "Parser that produces Lucene Query objects from XML streams."}
{"index": 3752, "repo": "lucene-queryparser-9.7.0", "code": "package builders\n\n// Interface for retrieving a SpanQuery.\nInterface SpanQueryBuilder;\n// Builder for BooleanQuery\nClass BooleanQueryBuilder;\n// Builder for PayloadScoreQuery\nClass BoostingTermBuilder;\n// Builder for ConstantScoreQuery\nClass ConstantScoreQueryBuilder;\n// Builder for DisjunctionMaxQuery\nClass DisjunctionMaxQueryBuilder;\n// Builder for FuzzyLikeThisQuery\nClass FuzzyLikeThisQueryBuilder;\n// Builder for MoreLikeThisQuery\nClass LikeThisQueryBuilder;\n", "des": "XML Parser factories for different Lucene Query/Filters."}
{"index": 3753, "repo": "lucene-facet-9.7.0", "code": "package facet\n\n// A Query for drill-down over facet categories.\nClass DrillDownQuery;\n// Computes drill down and sideways counts for the provided DrillDownQuery.\nClass DrillSideways;\n// Result of a concurrent drill sideways search, including the Facets and TopDocs.\nClass DrillSideways.ConcurrentDrillSidewaysResult<R>;\n// Result of a drill sideways search, including the Facets and TopDocs.\nClass DrillSideways.DrillSidewaysResult;\n// Base class for facet counts.\nClass FacetCountsWithFilterQuery;\n", "des": "Faceted search."}
{"index": 3754, "repo": "lucene-facet-9.7.0", "code": "package facetset\n\n// A functional interface for decoding facet set values into comparable `long` ones.\nInterface FacetSetDecoder;\n// Defines a single range in a FacetSet dimension.\nClass DimRange;\n// A FacetSet which encodes double dimension values.\nClass DoubleFacetSet;\n// A FacetSetMatcher which considers a set as a match only if all dimension values are equal to the given one.\nClass ExactFacetSetMatcher;\n// Holds a set of facet dimension values.\nClass FacetSet;\n", "des": "Provides FacetSets faceting capabilities which allows users to facet on high dimensional field values."}
{"index": 3755, "repo": "lucene-facet-9.7.0", "code": "package range\n\n// Represents a range over double values.\nClass DoubleRange;\n// Facets implementation that computes counts for dynamic double ranges.\nClass DoubleRangeFacetCounts;\n// Represents a range over long values.\nClass LongRange;\n// Facets implementation that computes counts for dynamic long ranges.\nClass LongRangeFacetCounts;\n// Base class for a single labeled range.\nClass Range;\n", "des": "Provides range faceting capabilities."}
{"index": 3756, "repo": "lucene-facet-9.7.0", "code": "package rangeonrange\n\n// Represents a double range for RangeOnRange faceting\nClass DoubleRange;\n// Represents counts for double range on range faceting.\nClass DoubleRangeOnRangeFacetCounts;\n// Represents a long range for RangeOnRange faceting\nClass LongRange;\n// Represents counts for long range on range faceting.\nClass LongRangeOnRangeFacetCounts;\n// Base class for a single labeled range.\nClass Range;\n", "des": "Provides range on range faceting capabilities."}
{"index": 3757, "repo": "lucene-facet-9.7.0", "code": "package sortedset\n\n// Like SortedSetDocValuesFacetCounts, but aggregates counts concurrently across segments.\nClass ConcurrentSortedSetDocValuesFacetCounts;\n// Default implementation of SortedSetDocValuesFacetCounts.\nClass DefaultSortedSetDocValuesReaderState;\n// Compute facets counts from previously indexed SortedSetDocValuesFacetField, without require a separate taxonomy index.\nClass SortedSetDocValuesFacetCounts;\n", "des": "Provides faceting capabilities over facets that were indexed with SortedSetDocValuesFacetField."}
{"index": 3758, "repo": "lucene-facet-9.7.0", "code": "package taxonomy\n\n// TaxonomyWriter is the interface which the faceted-search library uses to dynamically build the taxonomy at indexing time.\nInterface TaxonomyWriter;\n// Specify aggregation logic used in TaxonomyFacetIntAssociations and TaxonomyFacetFloatAssociations.\nClass AssociationAggregationFunction;\n// Add an instance of this to your Document to add a facet label associated with an arbitrary byte[].\nClass AssociationFacetField;\n// \nClass BackCompatSortedNumericDocValues;\n", "des": "Taxonomy of Categories."}
{"index": 3759, "repo": "lucene-facet-9.7.0", "code": "package directory\n\n// Mapping from old ordinal to new ordinals, used when merging indexes with separate taxonomies.\nInterface DirectoryTaxonomyWriter.OrdinalMap;\n// A TaxonomyReader which retrieves stored taxonomy information from a Directory.\nClass DirectoryTaxonomyReader;\n// TaxonomyWriter which uses a Directory to store the taxonomy information on disk, and keeps an additional in-memory cache of some or all categories.\nClass DirectoryTaxonomyWriter;\n", "des": "Taxonomy index implementation using on top of a Directory."}
{"index": 3760, "repo": "lucene-facet-9.7.0", "code": "package writercache\n\n// TaxonomyWriterCache is a relatively simple interface for a cache of category->ordinal mappings, used in TaxonomyWriter implementations (such as DirectoryTaxonomyWriter).\nInterface TaxonomyWriterCache;\n// Abstract class for storing Label->Ordinal mappings in a taxonomy.\nClass LabelToOrdinal;\n// LRU TaxonomyWriterCache - good choice for huge taxonomies.\nClass LruTaxonomyWriterCache;\n// An LRU cache of mapping from name to int.\nClass NameHashIntCacheLRU;\n", "des": "Improves indexing time by caching a map of CategoryPath to their Ordinal."}
{"index": 3761, "repo": "lucene-analysis-common-9.7.0", "code": "package ar\n\n// Analyzer for Arabic.\nClass ArabicAnalyzer;\n// A TokenFilter that applies ArabicNormalizer to normalize the orthography.\nClass ArabicNormalizationFilter;\n// Factory for ArabicNormalizationFilter.\nClass ArabicNormalizationFilterFactory;\n// Normalizer for Arabic.\nClass ArabicNormalizer;\n// A TokenFilter that applies ArabicStemmer to stem Arabic words..\nClass ArabicStemFilter;\n// Factory for ArabicStemFilter.\nClass ArabicStemFilterFactory;\n// Stemmer for Arabic.\nClass ArabicStemmer;\n", "des": "Analyzer for Arabic."}
{"index": 3762, "repo": "lucene-analysis-common-9.7.0", "code": "package bg\n\n// Analyzer for Bulgarian.\nClass BulgarianAnalyzer;\n// A TokenFilter that applies BulgarianStemmer to stem Bulgarian words.\nClass BulgarianStemFilter;\n// Factory for BulgarianStemFilter.\nClass BulgarianStemFilterFactory;\n// Light Stemmer for Bulgarian.\nClass BulgarianStemmer;\n", "des": "Analyzer for Bulgarian."}
{"index": 3763, "repo": "lucene-analysis-common-9.7.0", "code": "package bn\n\n// Analyzer for Bengali.\nClass BengaliAnalyzer;\n// A TokenFilter that applies BengaliNormalizer to normalize the orthography.\nClass BengaliNormalizationFilter;\n// Factory for BengaliNormalizationFilter.\nClass BengaliNormalizationFilterFactory;\n// Normalizer for Bengali.\nClass BengaliNormalizer;\n// A TokenFilter that applies BengaliStemmer to stem Bengali words.\nClass BengaliStemFilter;\n// Factory for BengaliStemFilter.\nClass BengaliStemFilterFactory;\n", "des": "Analyzer for Bengali Language."}
{"index": 3764, "repo": "lucene-analysis-common-9.7.0", "code": "package boost\n\n// Characters before the delimiter are the \"token\", those after are the boost.\nClass DelimitedBoostTokenFilter;\n// Factory for DelimitedBoostTokenFilter.\nClass DelimitedBoostTokenFilterFactory;\n", "des": "Provides various convenience classes for creating boosts on Tokens."}
{"index": 3765, "repo": "lucene-analysis-common-9.7.0", "code": "package br\n\n// Analyzer for Brazilian Portuguese language.\nClass BrazilianAnalyzer;\n// A TokenFilter that applies BrazilianStemmer.\nClass BrazilianStemFilter;\n// Factory for BrazilianStemFilter.\nClass BrazilianStemFilterFactory;\n// A stemmer for Brazilian Portuguese words.\nClass BrazilianStemmer;\n", "des": "Analyzer for Brazilian Portuguese."}
{"index": 3766, "repo": "lucene-analysis-common-9.7.0", "code": "package ca\n\n// Analyzer for Catalan.\nClass CatalanAnalyzer;\n", "des": "Analyzer for Catalan."}
{"index": 3767, "repo": "lucene-analysis-common-9.7.0", "code": "package charfilter\n\n// Base utility class for implementing a CharFilter.\nClass BaseCharFilter;\n// A CharFilter that wraps another Reader and attempts to strip out HTML constructs.\nClass HTMLStripCharFilter;\n// Factory for HTMLStripCharFilter.\nClass HTMLStripCharFilterFactory;\n// Simplistic CharFilter that applies the mappings contained in a NormalizeCharMap to the character stream, and correcting the resulting changes to the offsets.\nClass MappingCharFilter;\n", "des": "Normalization of text before the tokenizer."}
{"index": 3768, "repo": "lucene-analysis-common-9.7.0", "code": "package cjk\n\n// An Analyzer that tokenizes text with StandardTokenizer, normalizes content with CJKWidthFilter, folds case with LowerCaseFilter, forms bigrams of CJK with CJKBigramFilter, and filters stopwords with StopFilter\nClass CJKAnalyzer;\n// Forms bigrams of CJK terms that are generated from StandardTokenizer or ICUTokenizer.\nClass CJKBigramFilter;\n// Factory for CJKBigramFilter.\nClass CJKBigramFilterFactory;\n", "des": "Analyzer for Chinese, Japanese, and Korean, which indexes bigrams."}
{"index": 3769, "repo": "lucene-analysis-common-9.7.0", "code": "package ckb\n\n// Analyzer for Sorani Kurdish.\nClass SoraniAnalyzer;\n// A TokenFilter that applies SoraniNormalizer to normalize the orthography.\nClass SoraniNormalizationFilter;\n// Factory for SoraniNormalizationFilter.\nClass SoraniNormalizationFilterFactory;\n// Normalizes the Unicode representation of Sorani text.\nClass SoraniNormalizer;\n// A TokenFilter that applies SoraniStemmer to stem Sorani words.\nClass SoraniStemFilter;\n// Factory for SoraniStemFilter.\nClass SoraniStemFilterFactory;\n", "des": "Analyzer for Sorani Kurdish."}
{"index": 3770, "repo": "lucene-analysis-common-9.7.0", "code": "package classic\n\n// Filters ClassicTokenizer with ClassicFilter, LowerCaseFilter and StopFilter, using a list of English stop words.\nClass ClassicAnalyzer;\n// Normalizes tokens extracted with ClassicTokenizer.\nClass ClassicFilter;\n// Factory for ClassicFilter.\nClass ClassicFilterFactory;\n// A grammar-based tokenizer constructed with JFlex\nClass ClassicTokenizer;\n// Factory for ClassicTokenizer.\nClass ClassicTokenizerFactory;\n", "des": "Fast, general-purpose grammar-based tokenizers."}
{"index": 3771, "repo": "lucene-analysis-common-9.7.0", "code": "package commongrams\n\n// Construct bigrams for frequently occurring terms while indexing.\nClass CommonGramsFilter;\n// Constructs a CommonGramsFilter.\nClass CommonGramsFilterFactory;\n// Wrap a CommonGramsFilter optimizing phrase queries by only returning single words when they are not a member of a bigram.\nClass CommonGramsQueryFilter;\n// Construct CommonGramsQueryFilter.\nClass CommonGramsQueryFilterFactory;\n", "des": "Construct n-grams for frequently occurring terms and phrases."}
{"index": 3772, "repo": "lucene-analysis-common-9.7.0", "code": "package compound\n\n// Base class for decomposition token filters.\nClass CompoundWordTokenFilterBase;\n// A TokenFilter that decomposes compound words found in many Germanic languages.\nClass DictionaryCompoundWordTokenFilter;\n// Factory for DictionaryCompoundWordTokenFilter.\nClass DictionaryCompoundWordTokenFilterFactory;\n// A TokenFilter that decomposes compound words found in many Germanic languages.\nClass HyphenationCompoundWordTokenFilter;\n", "des": "A filter that decomposes compound words you find in many Germanic languages into the word parts."}
{"index": 3773, "repo": "lucene-analysis-common-9.7.0", "code": "package hyphenation\n\n// This interface is used to connect the XML pattern file parser to the hyphenation tree.\nInterface PatternConsumer;\n// This class implements a simple byte vector with access to the underlying array.\nClass ByteVector;\n// This class implements a simple char vector with access to the underlying array.\nClass CharVector;\n// This class represents a hyphen.\nClass Hyphen;\n// This class represents a hyphenated word.\nClass Hyphenation;\n", "des": "Hyphenation code for the CompoundWordTokenFilter."}
{"index": 3774, "repo": "lucene-analysis-common-9.7.0", "code": "package core\n\n// Folds all Unicode digits in [:General_Category=Decimal_Number:] to Basic Latin digits (0-9).\nClass DecimalDigitFilter;\n// Factory for DecimalDigitFilter.\nClass DecimalDigitFilterFactory;\n// Converts an incoming graph token stream, such as one from SynonymGraphFilter, into a flat form so that all nodes form a single linear chain with no side paths.\nClass FlattenGraphFilter;\n// Factory for FlattenGraphFilter.\nClass FlattenGraphFilterFactory;\n", "des": "Basic, general-purpose analysis components."}
{"index": 3775, "repo": "lucene-analysis-common-9.7.0", "code": "package custom\n\n// A general-purpose Analyzer that can be created with a builder-style API.\nClass CustomAnalyzer;\n// Builder for CustomAnalyzer.\nClass CustomAnalyzer.Builder;\n// Factory class for a ConditionalTokenFilter\nClass CustomAnalyzer.ConditionBuilder;\n", "des": "A general-purpose Analyzer that can be created with a builder-style API."}
{"index": 3776, "repo": "lucene-analysis-common-9.7.0", "code": "package cz\n\n// Analyzer for Czech language.\nClass CzechAnalyzer;\n// A TokenFilter that applies CzechStemmer to stem Czech words.\nClass CzechStemFilter;\n// Factory for CzechStemFilter.\nClass CzechStemFilterFactory;\n// Light Stemmer for Czech.\nClass CzechStemmer;\n", "des": "Analyzer for Czech."}
{"index": 3777, "repo": "lucene-analysis-common-9.7.0", "code": "package da\n\n// Analyzer for Danish.\nClass DanishAnalyzer;\n", "des": "Analyzer for Danish."}
{"index": 3778, "repo": "lucene-analysis-common-9.7.0", "code": "package de\n\n// Analyzer for German language.\nClass GermanAnalyzer;\n// A TokenFilter that applies GermanLightStemmer to stem German words.\nClass GermanLightStemFilter;\n// Factory for GermanLightStemFilter.\nClass GermanLightStemFilterFactory;\n// Light Stemmer for German.\nClass GermanLightStemmer;\n// A TokenFilter that applies GermanMinimalStemmer to stem German words.\nClass GermanMinimalStemFilter;\n// Factory for GermanMinimalStemFilter.\nClass GermanMinimalStemFilterFactory;\n", "des": "Analyzer for German."}
{"index": 3779, "repo": "lucene-analysis-common-9.7.0", "code": "package el\n\n// Analyzer for the Greek language.\nClass GreekAnalyzer;\n// Normalizes token text to lower case, removes some Greek diacritics, and standardizes final sigma to sigma.\nClass GreekLowerCaseFilter;\n// Factory for GreekLowerCaseFilter.\nClass GreekLowerCaseFilterFactory;\n// A TokenFilter that applies GreekStemmer to stem Greek words.\nClass GreekStemFilter;\n// Factory for GreekStemFilter.\nClass GreekStemFilterFactory;\n", "des": "Analyzer for Greek."}
{"index": 3780, "repo": "lucene-analysis-common-9.7.0", "code": "package email\n\n// Filters UAX29URLEmailTokenizer with LowerCaseFilter and StopFilter, using a list of English stop words.\nClass UAX29URLEmailAnalyzer;\n// This class implements Word Break rules from the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29 URLs and email addresses are also tokenized according to the relevant RFCs.\nClass UAX29URLEmailTokenizer;\n// Factory for UAX29URLEmailTokenizer.\nClass UAX29URLEmailTokenizerFactory;\n", "des": "Fast, general-purpose URLs and email addresses tokenizers."}
{"index": 3781, "repo": "lucene-analysis-common-9.7.0", "code": "package en\n\n// Abstract parent class for analysis factories that accept a stopwords file as input.\nClass AbstractWordsFileFilterFactory;\n// Analyzer for English.\nClass EnglishAnalyzer;\n// A TokenFilter that applies EnglishMinimalStemmer to stem English words.\nClass EnglishMinimalStemFilter;\n// Factory for EnglishMinimalStemFilter.\nClass EnglishMinimalStemFilterFactory;\n// Minimal plural stemmer for English.\nClass EnglishMinimalStemmer;\n", "des": "Analyzer for English."}
{"index": 3782, "repo": "lucene-analysis-common-9.7.0", "code": "package es\n\n// Analyzer for Spanish.\nClass SpanishAnalyzer;\n// A TokenFilter that applies SpanishLightStemmer to stem Spanish words.\nClass SpanishLightStemFilter;\n// Factory for SpanishLightStemFilter.\nClass SpanishLightStemFilterFactory;\n// Light Stemmer for Spanish\nClass SpanishLightStemmer;\n// \nClass SpanishMinimalStemFilter;\n// \nClass SpanishMinimalStemFilterFactory;\n// \nClass SpanishMinimalStemmer;\n// A TokenFilter that applies SpanishPluralStemmer to stem Spanish words.\nClass SpanishPluralStemFilter;\n", "des": "Analyzer for Spanish."}
{"index": 3783, "repo": "lucene-analysis-common-9.7.0", "code": "package et\n\n// Analyzer for Estonian.\nClass EstonianAnalyzer;\n", "des": "Analyzer for Estonian."}
{"index": 3784, "repo": "lucene-analysis-common-9.7.0", "code": "package eu\n\n// Analyzer for Basque.\nClass BasqueAnalyzer;\n", "des": "Analyzer for Basque."}
{"index": 3785, "repo": "lucene-analysis-common-9.7.0", "code": "package fa\n\n// Analyzer for Persian.\nClass PersianAnalyzer;\n// CharFilter that replaces instances of Zero-width non-joiner with an ordinary space.\nClass PersianCharFilter;\n// Factory for PersianCharFilter.\nClass PersianCharFilterFactory;\n// A TokenFilter that applies PersianNormalizer to normalize the orthography.\nClass PersianNormalizationFilter;\n// Factory for PersianNormalizationFilter.\nClass PersianNormalizationFilterFactory;\n// Normalizer for Persian.\nClass PersianNormalizer;\n", "des": "Analyzer for Persian."}
{"index": 3786, "repo": "lucene-analysis-common-9.7.0", "code": "package fi\n\n// Analyzer for Finnish.\nClass FinnishAnalyzer;\n// A TokenFilter that applies FinnishLightStemmer to stem Finnish words.\nClass FinnishLightStemFilter;\n// Factory for FinnishLightStemFilter.\nClass FinnishLightStemFilterFactory;\n// Light Stemmer for Finnish.\nClass FinnishLightStemmer;\n", "des": "Analyzer for Finnish."}
{"index": 3787, "repo": "lucene-analysis-common-9.7.0", "code": "package fr\n\n// Analyzer for French language.\nClass FrenchAnalyzer;\n// A TokenFilter that applies FrenchLightStemmer to stem French words.\nClass FrenchLightStemFilter;\n// Factory for FrenchLightStemFilter.\nClass FrenchLightStemFilterFactory;\n// Light Stemmer for French.\nClass FrenchLightStemmer;\n// A TokenFilter that applies FrenchMinimalStemmer to stem French words.\nClass FrenchMinimalStemFilter;\n// Factory for FrenchMinimalStemFilter.\nClass FrenchMinimalStemFilterFactory;\n", "des": "Analyzer for French."}
{"index": 3788, "repo": "lucene-analysis-common-9.7.0", "code": "package ga\n\n// Analyzer for Irish.\nClass IrishAnalyzer;\n// Normalises token text to lower case, handling t-prothesis and n-eclipsis (i.e., that 'nAthair' should become 'n-athair')\nClass IrishLowerCaseFilter;\n// Factory for IrishLowerCaseFilter.\nClass IrishLowerCaseFilterFactory;\n", "des": "Analyzer for Irish."}
{"index": 3789, "repo": "lucene-analysis-common-9.7.0", "code": "package gl\n\n// Analyzer for Galician.\nClass GalicianAnalyzer;\n// A TokenFilter that applies GalicianMinimalStemmer to stem Galician words.\nClass GalicianMinimalStemFilter;\n// Factory for GalicianMinimalStemFilter.\nClass GalicianMinimalStemFilterFactory;\n// Minimal Stemmer for Galician\nClass GalicianMinimalStemmer;\n// A TokenFilter that applies GalicianStemmer to stem Galician words.\nClass GalicianStemFilter;\n// Factory for GalicianStemFilter.\nClass GalicianStemFilterFactory;\n", "des": "Analyzer for Galician."}
{"index": 3790, "repo": "lucene-analysis-common-9.7.0", "code": "package hi\n\n// Analyzer for Hindi.\nClass HindiAnalyzer;\n// A TokenFilter that applies HindiNormalizer to normalize the orthography.\nClass HindiNormalizationFilter;\n// Factory for HindiNormalizationFilter.\nClass HindiNormalizationFilterFactory;\n// Normalizer for Hindi.\nClass HindiNormalizer;\n// A TokenFilter that applies HindiStemmer to stem Hindi words.\nClass HindiStemFilter;\n// Factory for HindiStemFilter.\nClass HindiStemFilterFactory;\n// Light Stemmer for Hindi.\nClass HindiStemmer;\n", "des": "Analyzer for Hindi."}
{"index": 3791, "repo": "lucene-analysis-common-9.7.0", "code": "package hu\n\n// Analyzer for Hungarian.\nClass HungarianAnalyzer;\n// A TokenFilter that applies HungarianLightStemmer to stem Hungarian words.\nClass HungarianLightStemFilter;\n// Factory for HungarianLightStemFilter.\nClass HungarianLightStemFilterFactory;\n// Light Stemmer for Hungarian.\nClass HungarianLightStemmer;\n", "des": "Analyzer for Hungarian."}
{"index": 3792, "repo": "lucene-analysis-common-9.7.0", "code": "package hunspell\n\n// An object representing homonym dictionary entries.\nInterface DictEntries;\n// An oracle for quickly checking that a specific part of a word can never be a valid word.\nInterface FragmentChecker;\n// A callback for n-gram ranges in words\nInterface NGramFragmentChecker.NGramConsumer;\n// An object representing the analysis result of a simple (non-compound) word\nClass AffixedWord;\n// An object representing a prefix or a suffix applied to a word stem\nClass AffixedWord.Affix;\n", "des": "A Java implementation of Hunspell stemming and spell-checking algorithms (Hunspell), and a stemming TokenFilter (HunspellStemFilter) based on it."}
{"index": 3793, "repo": "lucene-analysis-common-9.7.0", "code": "package hy\n\n// Analyzer for Armenian.\nClass ArmenianAnalyzer;\n", "des": "Analyzer for Armenian."}
{"index": 3794, "repo": "lucene-analysis-common-9.7.0", "code": "package id\n\n// Analyzer for Indonesian (Bahasa)\nClass IndonesianAnalyzer;\n// A TokenFilter that applies IndonesianStemmer to stem Indonesian words.\nClass IndonesianStemFilter;\n// Factory for IndonesianStemFilter.\nClass IndonesianStemFilterFactory;\n// Stemmer for Indonesian.\nClass IndonesianStemmer;\n", "des": "Analyzer for Indonesian."}
{"index": 3795, "repo": "lucene-analysis-common-9.7.0", "code": "package in\n\n// A TokenFilter that applies IndicNormalizer to normalize text in Indian Languages.\nClass IndicNormalizationFilter;\n// Factory for IndicNormalizationFilter.\nClass IndicNormalizationFilterFactory;\n// Normalizes the Unicode representation of text in Indian languages.\nClass IndicNormalizer;\n", "des": "Analyzer for Indian languages."}
{"index": 3796, "repo": "lucene-analysis-common-9.7.0", "code": "package it\n\n// Analyzer for Italian.\nClass ItalianAnalyzer;\n// A TokenFilter that applies ItalianLightStemmer to stem Italian words.\nClass ItalianLightStemFilter;\n// Factory for ItalianLightStemFilter.\nClass ItalianLightStemFilterFactory;\n// Light Stemmer for Italian.\nClass ItalianLightStemmer;\n", "des": "Analyzer for Italian."}
{"index": 3797, "repo": "lucene-analysis-common-9.7.0", "code": "package lt\n\n// Analyzer for Lithuanian.\nClass LithuanianAnalyzer;\n", "des": "Analyzer for Lithuanian."}
{"index": 3798, "repo": "lucene-analysis-common-9.7.0", "code": "package lv\n\n// Analyzer for Latvian.\nClass LatvianAnalyzer;\n// A TokenFilter that applies LatvianStemmer to stem Latvian words.\nClass LatvianStemFilter;\n// Factory for LatvianStemFilter.\nClass LatvianStemFilterFactory;\n// Light stemmer for Latvian.\nClass LatvianStemmer;\n", "des": "Analyzer for Latvian."}
{"index": 3799, "repo": "lucene-analysis-common-9.7.0", "code": "package minhash\n\n// Generate min hash tokens from an incoming stream of tokens.\nClass MinHashFilter;\n// TokenFilterFactory for MinHashFilter.\nClass MinHashFilterFactory;\n", "des": "MinHash filtering (for LSH)."}
{"index": 3800, "repo": "lucene-analysis-common-9.7.0", "code": "package miscellaneous\n\n// Attribute providing access to the term builder and UTF-16 conversion\nInterface ConcatenateGraphFilter.BytesRefBuilderTermAttribute;\n// This class converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \"Basic Latin\" Unicode block) into their ASCII equivalents, if one exists.\nClass ASCIIFoldingFilter;\n// Factory for ASCIIFoldingFilter.\nClass ASCIIFoldingFilterFactory;\n", "des": "Miscellaneous Tokenstreams."}
{"index": 3801, "repo": "lucene-analysis-common-9.7.0", "code": "package ne\n\n// Analyzer for Nepali.\nClass NepaliAnalyzer;\n", "des": "Analyzer for Nepali."}
{"index": 3802, "repo": "lucene-analysis-common-9.7.0", "code": "package ngram\n\n// Creates new instances of EdgeNGramTokenFilter.\nClass EdgeNGramFilterFactory;\n// Tokenizes the given token into n-grams of given size(s).\nClass EdgeNGramTokenFilter;\n// Tokenizes the input from an edge into n-grams of given size(s).\nClass EdgeNGramTokenizer;\n// Creates new instances of EdgeNGramTokenizer.\nClass EdgeNGramTokenizerFactory;\n// Factory for NGramTokenFilter.\nClass NGramFilterFactory;\n// Tokenizes the input into n-grams of the given size(s).\nClass NGramTokenFilter;\n", "des": "Character n-gram tokenizers and filters."}
{"index": 3803, "repo": "lucene-analysis-common-9.7.0", "code": "package nl\n\n// Analyzer for Dutch language.\nClass DutchAnalyzer;\n", "des": "Analyzer for Dutch."}
{"index": 3804, "repo": "lucene-analysis-common-9.7.0", "code": "package no\n\n// Analyzer for Norwegian.\nClass NorwegianAnalyzer;\n// A TokenFilter that applies NorwegianLightStemmer to stem Norwegian words.\nClass NorwegianLightStemFilter;\n// Factory for NorwegianLightStemFilter.\nClass NorwegianLightStemFilterFactory;\n// Light Stemmer for Norwegian.\nClass NorwegianLightStemmer;\n// A TokenFilter that applies NorwegianMinimalStemmer to stem Norwegian words.\nClass NorwegianMinimalStemFilter;\n// Factory for NorwegianMinimalStemFilter.\nClass NorwegianMinimalStemFilterFactory;\n", "des": "Analyzer for Norwegian."}
{"index": 3805, "repo": "lucene-analysis-common-9.7.0", "code": "package path\n\n// Tokenizer for path-like hierarchies.\nClass PathHierarchyTokenizer;\n// Factory for PathHierarchyTokenizer.\nClass PathHierarchyTokenizerFactory;\n// Tokenizer for domain-like hierarchies.\nClass ReversePathHierarchyTokenizer;\n", "des": "Analysis components for path-like strings such as filenames."}
{"index": 3806, "repo": "lucene-analysis-common-9.7.0", "code": "package pattern\n\n// Factory for PatternCaptureGroupTokenFilter.\nClass PatternCaptureGroupFilterFactory;\n// CaptureGroup uses Java regexes to emit multiple tokens - one for each capture group in one or more patterns.\nClass PatternCaptureGroupTokenFilter;\n// CharFilter that uses a regular expression for the target of replace string.\nClass PatternReplaceCharFilter;\n// Factory for PatternReplaceCharFilter.\nClass PatternReplaceCharFilterFactory;\n", "des": "Set of components for pattern-based (regex) analysis."}
{"index": 3807, "repo": "lucene-analysis-common-9.7.0", "code": "package payloads\n\n// Mainly for use with the DelimitedPayloadTokenFilter, converts char buffers to BytesRef.\nInterface PayloadEncoder;\n// Base class for payload encoders.\nClass AbstractEncoder;\n// Characters before the delimiter are the \"token\", those after are the payload.\nClass DelimitedPayloadTokenFilter;\n// Factory for DelimitedPayloadTokenFilter.\nClass DelimitedPayloadTokenFilterFactory;\n// Encode a character array Float as a BytesRef.\nClass FloatEncoder;\n", "des": "Provides various convenience classes for creating payloads on Tokens."}
{"index": 3808, "repo": "lucene-analysis-common-9.7.0", "code": "package pt\n\n// Analyzer for Portuguese.\nClass PortugueseAnalyzer;\n// A TokenFilter that applies PortugueseLightStemmer to stem Portuguese words.\nClass PortugueseLightStemFilter;\n// Factory for PortugueseLightStemFilter.\nClass PortugueseLightStemFilterFactory;\n// Light Stemmer for Portuguese\nClass PortugueseLightStemmer;\n// A TokenFilter that applies PortugueseMinimalStemmer to stem Portuguese words.\nClass PortugueseMinimalStemFilter;\n", "des": "Analyzer for Portuguese."}
{"index": 3809, "repo": "lucene-analysis-common-9.7.0", "code": "package query\n\n// An Analyzer used primarily at query time to wrap another analyzer and provide a layer of protection which prevents very common words from being passed into queries.\nClass QueryAutoStopWordAnalyzer;\n", "des": "Automatically filter high-frequency stopwords."}
{"index": 3810, "repo": "lucene-analysis-common-9.7.0", "code": "package reverse\n\n// Reverse token string, for example \"country\" => \"yrtnuoc\".\nClass ReverseStringFilter;\n// Factory for ReverseStringFilter.\nClass ReverseStringFilterFactory;\n", "des": "Filter to reverse token text."}
{"index": 3811, "repo": "lucene-analysis-common-9.7.0", "code": "package ro\n\n// Analyzer for Romanian.\nClass RomanianAnalyzer;\n", "des": "Analyzer for Romanian."}
{"index": 3812, "repo": "lucene-analysis-common-9.7.0", "code": "package ru\n\n// Analyzer for Russian language.\nClass RussianAnalyzer;\n// A TokenFilter that applies RussianLightStemmer to stem Russian words.\nClass RussianLightStemFilter;\n// Factory for RussianLightStemFilter.\nClass RussianLightStemFilterFactory;\n// Light Stemmer for Russian.\nClass RussianLightStemmer;\n", "des": "Analyzer for Russian."}
{"index": 3813, "repo": "lucene-analysis-common-9.7.0", "code": "package shingle\n\n// A FixedShingleFilter constructs shingles (token n-grams) from a token stream.\nClass FixedShingleFilter;\n// Factory for FixedShingleFilter\nClass FixedShingleFilterFactory;\n// A ShingleAnalyzerWrapper wraps a ShingleFilter around another Analyzer.\nClass ShingleAnalyzerWrapper;\n// A ShingleFilter constructs shingles (token n-grams) from a token stream.\nClass ShingleFilter;\n// Factory for ShingleFilter.\nClass ShingleFilterFactory;\n", "des": "Word n-gram filters."}
{"index": 3814, "repo": "lucene-analysis-common-9.7.0", "code": "package sinks\n\n// This TokenFilter provides the ability to set aside attribute states that have already been analyzed.\nClass TeeSinkTokenFilter;\n// TokenStream output from a tee.\nClass TeeSinkTokenFilter.SinkTokenStream;\n", "des": "TeeSinkTokenFilter."}
{"index": 3815, "repo": "lucene-analysis-common-9.7.0", "code": "package snowball\n\n// A filter that stems words using a Snowball-generated stemmer.\nClass SnowballFilter;\n// Factory for SnowballFilter, with configurable language\nClass SnowballPorterFilterFactory;\n", "des": "TokenFilter and Analyzer implementations that use a modified version of Snowball stemmers."}
{"index": 3816, "repo": "lucene-analysis-common-9.7.0", "code": "package sr\n\n// Analyzer for Serbian.\nClass SerbianAnalyzer;\n// Normalizes Serbian Cyrillic and Latin characters to \"bald\" Latin.\nClass SerbianNormalizationFilter;\n// Factory for SerbianNormalizationFilter.\nClass SerbianNormalizationFilterFactory;\n// Normalizes Serbian Cyrillic to Latin.\nClass SerbianNormalizationRegularFilter;\n", "des": "Analyzer for Serbian."}
{"index": 3817, "repo": "lucene-analysis-common-9.7.0", "code": "package sv\n\n// Analyzer for Swedish.\nClass SwedishAnalyzer;\n// A TokenFilter that applies SwedishLightStemmer to stem Swedish words.\nClass SwedishLightStemFilter;\n// Factory for SwedishLightStemFilter.\nClass SwedishLightStemFilterFactory;\n// Light Stemmer for Swedish.\nClass SwedishLightStemmer;\n// A TokenFilter that applies SwedishMinimalStemmer to stem Swedish words.\nClass SwedishMinimalStemFilter;\n// Factory for SwedishMinimalStemFilter.\nClass SwedishMinimalStemFilterFactory;\n", "des": "Analyzer for Swedish."}
{"index": 3818, "repo": "lucene-analysis-common-9.7.0", "code": "package synonym\n\n// Parser for the Solr synonyms format.\nClass SolrSynonymParser;\n// \nClass SynonymFilter;\n// \nClass SynonymFilterFactory;\n// Applies single- or multi-token synonyms from a SynonymMap to an incoming TokenStream, producing a fully correct graph output.\nClass SynonymGraphFilter;\n// Factory for SynonymGraphFilter.\nClass SynonymGraphFilterFactory;\n// A map of synonyms, keys and values are phrases.\nClass SynonymMap;\n// Builds an FSTSynonymMap.\nClass SynonymMap.Builder;\n", "des": "Analysis components for Synonyms."}
{"index": 3819, "repo": "lucene-analysis-common-9.7.0", "code": "package word2vec\n\n// Dl4jModelReader reads the file generated by the library Deeplearning4j and provide a Word2VecModel with normalized vectors\nClass Dl4jModelReader;\n// Wraps a term and boost\nClass TermAndBoost;\n// Word2VecModel is a class representing the parsed Word2Vec model containing the vectors for each word in dictionary\nClass Word2VecModel;\n// Applies single-token synonyms from a Word2Vec trained network to an incoming TokenStream.\nClass Word2VecSynonymFilter;\n", "des": "Analysis components for Synonyms using Word2Vec model."}
{"index": 3820, "repo": "lucene-analysis-common-9.7.0", "code": "package ta\n\n// Analyzer for Tamil.\nClass TamilAnalyzer;\n", "des": "Analyzer for Tamil."}
{"index": 3821, "repo": "lucene-analysis-common-9.7.0", "code": "package te\n\n// Analyzer for Telugu.\nClass TeluguAnalyzer;\n// A TokenFilter that applies TeluguNormalizer to normalize the orthography.\nClass TeluguNormalizationFilter;\n// Factory for TeluguNormalizationFilter.\nClass TeluguNormalizationFilterFactory;\n// Normalizer for Telugu.\nClass TeluguNormalizer;\n// A TokenFilter that applies TeluguStemmer to stem Telugu words.\nClass TeluguStemFilter;\n// Factory for TeluguStemFilter.\nClass TeluguStemFilterFactory;\n// Stemmer for Telugu.\nClass TeluguStemmer;\n", "des": "Analyzer for Telugu Language."}
{"index": 3822, "repo": "lucene-analysis-common-9.7.0", "code": "package th\n\n// Analyzer for Thai language.\nClass ThaiAnalyzer;\n// Tokenizer that use BreakIterator to tokenize Thai text.\nClass ThaiTokenizer;\n// Factory for ThaiTokenizer.\nClass ThaiTokenizerFactory;\n", "des": "Analyzer for Thai."}
{"index": 3823, "repo": "lucene-analysis-common-9.7.0", "code": "package tr\n\n// Strips all characters after an apostrophe (including the apostrophe itself).\nClass ApostropheFilter;\n// Factory for ApostropheFilter.\nClass ApostropheFilterFactory;\n// Analyzer for Turkish.\nClass TurkishAnalyzer;\n// Normalizes Turkish token text to lower case.\nClass TurkishLowerCaseFilter;\n// Factory for TurkishLowerCaseFilter.\nClass TurkishLowerCaseFilterFactory;\n", "des": "Analyzer for Turkish."}
{"index": 3824, "repo": "lucene-analysis-common-9.7.0", "code": "package util\n\n// A CharacterIterator used internally for use with BreakIterator\nClass CharArrayIterator;\n// An abstract base class for simple, character-oriented tokenizers.\nClass CharTokenizer;\n// Removes elisions from a TokenStream.\nClass ElisionFilter;\n// Factory for ElisionFilter.\nClass ElisionFilterFactory;\n// Simple ResourceLoader that opens resource files from the local file system, optionally resolving against a base directory.\nClass FilesystemResourceLoader;\n", "des": "Utility functions for text analysis."}
{"index": 3825, "repo": "lucene-analysis-common-9.7.0", "code": "package wikipedia\n\n// Extension of StandardTokenizer that is aware of Wikipedia syntax.\nClass WikipediaTokenizer;\n// Factory for WikipediaTokenizer.\nClass WikipediaTokenizerFactory;\n", "des": "Tokenizer that is aware of Wikipedia syntax."}
{"index": 3826, "repo": "lucene-analysis-common-9.7.0", "code": "package collation\n\n// Converts each token into its CollationKey, and then encodes the bytes as an index term.\nClass CollationAttributeFactory;\n// Indexes collation keys as a single-valued SortedDocValuesField.\nClass CollationDocValuesField;\n// Configures KeywordTokenizer with CollationAttributeFactory.\nClass CollationKeyAnalyzer;\n", "des": "Unicode collation support."}
{"index": 3827, "repo": "lucene-analysis-common-9.7.0", "code": "package tokenattributes\n\n// Extension of CharTermAttributeImpl that encodes the term text as a binary Unicode collation key instead of as UTF-8 bytes.\nClass CollatedTermAttributeImpl;\n", "des": "Custom AttributeImpl for indexing collation keys as index terms."}
{"index": 3828, "repo": "lucene-analysis-common-9.7.0", "code": "package snowball\n\n// Internal class used by Snowball stemmers\nClass Among;\n// Base class for a snowball stemmer\nClass SnowballProgram;\n// Parent class of all snowball stemmers, which must implement stem\nClass SnowballStemmer;\n", "des": "Snowball stemmer API"}
{"index": 3829, "repo": "lucene-analysis-common-9.7.0", "code": "package ext\n\n// This class implements the stemming algorithm defined by a snowball script.\nClass ArabicStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass ArmenianStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass BasqueStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass CatalanStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass DanishStemmer;\n", "des": "Autogenerated snowball stemmer implementations."}
{"index": 3830, "repo": "lucene-highlighter-9.7.0", "code": "package highlight\n\n// Encodes original text.\nInterface Encoder;\n// Processes terms found in the original text, typically by applying some form of mark-up to highlight terms in HTML search results pages.\nInterface Formatter;\n// Implements the policy for breaking text into multiple fragments for consideration by the Highlighter class.\nInterface Fragmenter;\n// A Scorer is responsible for scoring a stream of tokens.\nInterface Scorer;\n", "des": "Highlighting search terms."}
{"index": 3831, "repo": "lucene-highlighter-9.7.0", "code": "package matchhighlight\n\n// Actual per-field highlighter.\nInterface MatchHighlighter.FieldValueHighlighter;\n// An abstraction that provides document values for a given field.\nInterface MatchRegionRetriever.FieldValueProvider;\n// A callback for accepting a single document (and its associated leaf reader, leaf document ID) and its match offset ranges, as indicated by the Matches interface retrieved for the query.\nInterface MatchRegionRetriever.MatchOffsetsConsumer;\n", "des": "This package contains several components useful to build a highlighter on top of the Matches API."}
{"index": 3832, "repo": "lucene-highlighter-9.7.0", "code": "package uhighlight\n\n// Matches a character array\nInterface CharArrayMatcher;\n// Associates a label with a CharArrayMatcher to distinguish different sources for terms in highlighting\nInterface LabelledCharArrayMatcher;\n// Provides a base class for analysis based offset strategies to extend from.\nClass AnalysisOffsetStrategy;\n// A BreakIterator that breaks the text whenever a certain separator, provided as a constructor argument, is found.\nClass CustomSeparatorBreakIterator;\n", "des": "The UnifiedHighlighter -- a flexible highlighter that can get offsets from postings, term vectors, or analysis."}
{"index": 3833, "repo": "lucene-highlighter-9.7.0", "code": "package vectorhighlight\n\n// Finds fragment boundaries: pluggable into BaseFragmentsBuilder\nInterface BoundaryScanner;\n// FragListBuilder is an interface for FieldFragList builder classes.\nInterface FragListBuilder;\n// FragmentsBuilder is an interface for fragments (snippets) builder classes.\nInterface FragmentsBuilder;\n// A abstract implementation of FragListBuilder.\nClass BaseFragListBuilder;\n", "des": "Another highlighter implementation based on term vectors."}
{"index": 3834, "repo": "lucene-core-9.7.0", "code": "package analysis\n\n// Abstract parent class for analysis factories TokenizerFactory, TokenFilterFactory and CharFilterFactory.\nClass AbstractAnalysisFactory;\n// Helper class for loading named SPIs from classpath (e.g.\nClass AnalysisSPILoader<S extends AbstractAnalysisFactory>;\n// An Analyzer builds TokenStreams, which analyze text.\nClass Analyzer;\n// Strategy defining how TokenStreamComponents are reused per call to Analyzer.tokenStream(String, java.io.Reader).\nClass Analyzer.ReuseStrategy;\n", "des": "Text analysis."}
{"index": 3835, "repo": "lucene-core-9.7.0", "code": "package standard\n\n// Filters StandardTokenizer with LowerCaseFilter and StopFilter, using a configurable list of stop words.\nClass StandardAnalyzer;\n// A grammar-based tokenizer constructed with JFlex.\nClass StandardTokenizer;\n// Factory for StandardTokenizer.\nClass StandardTokenizerFactory;\n// This class implements Word Break rules from the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29.\nClass StandardTokenizerImpl;\n", "des": "Fast, general-purpose grammar-based tokenizer StandardTokenizer implements the Word Break rules from the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29."}
{"index": 3836, "repo": "lucene-core-9.7.0", "code": "package tokenattributes\n\n// This attribute can be used if you have the raw term bytes to be indexed.\nInterface BytesTermAttribute;\n// The term text of a Token.\nInterface CharTermAttribute;\n// This attribute can be used to pass different flags down the Tokenizer chain, e.g.\nInterface FlagsAttribute;\n// This attribute can be used to mark a token as a keyword.\nInterface KeywordAttribute;\n// The start and end character offset of a Token.\nInterface OffsetAttribute;\n", "des": "General-purpose attributes for text analysis."}
{"index": 3837, "repo": "lucene-core-9.7.0", "code": "package codecs\n\n// Holds all state required for PostingsReaderBase to produce a PostingsEnum without re-seeking the terms dict.\nClass BlockTermState;\n// Buffers up pending vector value(s) per doc, then flushes when segment flushes.\nClass BufferingKnnVectorsWriter;\n// Encodes/decodes an inverted index segment.\nClass Codec;\n// Utility class for reading and writing versioned headers.\nClass CodecUtil;\n", "des": "Codecs API: API for customization of the encoding and structure of the index."}
{"index": 3838, "repo": "lucene-core-9.7.0", "code": "package compressing\n\n// A compression mode.\nClass CompressionMode;\n// A data compressor.\nClass Compressor;\n// A decompressor.\nClass Decompressor;\n// Computes which segments have identical field name to number mappings, which allows stored fields and term vectors in this codec to be bulk-merged.\nClass MatchingReaders;\n", "des": "Compressing helper classes."}
{"index": 3839, "repo": "lucene-core-9.7.0", "code": "package lucene90\n\n// A compression mode that trades speed for compression ratio.\nClass DeflateWithPresetDictCompressionMode;\n// Disk-based implementation of a DocIdSetIterator which can return the index of the current document, i.e.\nClass IndexedDISI;\n// Lucene 9.0 compound file format\nClass Lucene90CompoundFormat;\n// Lucene 9.0 DocValues format.\nClass Lucene90DocValuesFormat;\n// Lucene 9.0 live docs format\nClass Lucene90LiveDocsFormat;\n// Lucene 9.0 Score normalization format.\nClass Lucene90NormsFormat;\n", "des": "Lucene 9.0 file format."}
{"index": 3840, "repo": "lucene-core-9.7.0", "code": "package blocktree\n\n// BlockTree's implementation of Terms.\nClass FieldReader;\n// A block-based terms index and dictionary that assigns terms to variable length blocks according to how they share prefixes.\nClass Lucene90BlockTreeTermsReader;\n// Block-based terms index and dictionary writer.\nClass Lucene90BlockTreeTermsWriter;\n// BlockTree statistics for a single field returned by FieldReader.getStats().\nClass Stats;\n", "des": "BlockTree terms dictionary."}
{"index": 3841, "repo": "lucene-core-9.7.0", "code": "package compressing\n\n// Efficient index format for block-based Codecs.\nClass FieldsIndexWriter;\n// A StoredFieldsFormat that compresses documents in chunks in order to improve the compression ratio.\nClass Lucene90CompressingStoredFieldsFormat;\n// StoredFieldsReader impl for Lucene90CompressingStoredFieldsFormat.\nClass Lucene90CompressingStoredFieldsReader;\n// StoredFieldsWriter impl for Lucene90CompressingStoredFieldsFormat.\nClass Lucene90CompressingStoredFieldsWriter;\n", "des": "Lucene 9.0 compressing format."}
{"index": 3842, "repo": "lucene-core-9.7.0", "code": "package lucene94\n\n// Lucene 9.0 Field Infos format.\nClass Lucene94FieldInfosFormat;\n", "des": "Lucene 9.4 file format."}
{"index": 3843, "repo": "lucene-core-9.7.0", "code": "package lucene95\n\n// Implements the Lucene 9.5 index format\nClass Lucene95Codec;\n// Lucene 9.5 vector format, which encodes numeric vector values and an optional associated graph connecting the documents having values.\nClass Lucene95HnswVectorsFormat;\n// Reads vectors from the index segments along with index data structures supporting KNN search.\nClass Lucene95HnswVectorsReader;\n// Writes vector values and knn graphs to index segments.\nClass Lucene95HnswVectorsWriter;\n", "des": "Lucene 9.5 file format."}
{"index": 3844, "repo": "lucene-core-9.7.0", "code": "package perfield\n\n// Enables per field docvalues support.\nClass PerFieldDocValuesFormat;\n// Enables per field numeric vector support.\nClass PerFieldKnnVectorsFormat;\n// VectorReader that can wrap multiple delegate readers, selected by field.\nClass PerFieldKnnVectorsFormat.FieldsReader;\n// Enables per field postings support.\nClass PerFieldPostingsFormat;\n", "des": "Postings format that can delegate to different formats per-field."}
{"index": 3845, "repo": "lucene-core-9.7.0", "code": "package document\n\n// Field that stores a per-document BytesRef value.\nClass BinaryDocValuesField;\n// An indexed binary field for fast range filters.\nClass BinaryPoint;\n// A binary representation of a range that wraps a BinaryDocValues field\nClass BinaryRangeDocValues;\n// Provides support for converting dates to strings and vice-versa.\nClass DateTools;\n// Documents are the unit of indexing and search.\nClass Document;\n", "des": "The logical representation of a Document for indexing and searching."}
{"index": 3846, "repo": "lucene-core-9.7.0", "code": "package geo\n\n// 2D Geometry object that supports spatial relationships with bounding boxes, triangles and points.\nInterface Component2D;\n// Implementation of this interface will receive calls with internal data at each step of the triangulation algorithm.\nInterface Tessellator.Monitor;\n// Represents a circle on the earth's surface.\nClass Circle;\n// reusable geopoint encoding methods\nClass GeoEncodingUtils;\n", "des": "Geospatial Utility Implementations for Lucene Core"}
{"index": 3847, "repo": "lucene-core-9.7.0", "code": "package index\n\n// Source of Impacts.\nInterface ImpactsSource;\n// Represents a single field for indexing.\nInterface IndexableField;\n// Describes the properties of a field.\nInterface IndexableFieldType;\n// A utility class that gives hooks in order to help build a cache based on the data that is contained in this index.\nInterface IndexReader.CacheHelper;\n// A listener that is called when a resource gets closed.\nInterface IndexReader.ClosedListener;\n", "des": "Code to maintain and access indices."}
{"index": 3848, "repo": "lucene-core-9.7.0", "code": "package tests\n\n// Access to ConcurrentMergeScheduler internals exposed to the test framework.\nInterface ConcurrentMergeSchedulerAccess;\n// Access to org.apache.lucene.index package internals exposed to the test framework.\nInterface IndexPackageAccess;\n// Public type exposing FieldInfo internal builders.\nInterface IndexPackageAccess.FieldInfosBuilder;\n// Access to IndexWriter internals exposed to the test framework.\nInterface IndexWriterAccess;\n", "des": "Internal bridges to package-private internals, for use by the lucene test framework only."}
{"index": 3849, "repo": "lucene-core-9.7.0", "code": "package search\n\n// Add this Attribute to a TermsEnum returned by MultiTermQuery.getTermsEnum(Terms,AttributeSource) and update the boost on each returned term.\nInterface BoostAttribute;\n// Expert: Collectors are primarily meant to be used to gather raw results from a search, and implement sorting or custom result filtering, collation, etc.\nInterface Collector;\n// A manager of collectors.\nInterface CollectorManager<C extends Collector,​T>;\n", "des": "Code to search indices."}
{"index": 3850, "repo": "lucene-core-9.7.0", "code": "package comparators\n\n// Comparator that sorts by asc _doc\nClass DocComparator;\n// Comparator based on Double.compare(double, double) for numHits.\nClass DoubleComparator;\n// Comparator based on Float.compare(float, float) for numHits.\nClass FloatComparator;\n// Comparator based on Integer.compare(int, int) for numHits.\nClass IntComparator;\n// Comparator based on Long.compare(long, long) for numHits.\nClass LongComparator;\n", "des": "Comparators, used to compare hits so as to determine their sort order when collecting the top results with TopFieldCollector."}
{"index": 3851, "repo": "lucene-core-9.7.0", "code": "package similarities\n\n// A strategy for computing the collection language model.\nInterface LMSimilarity.CollectionModel;\n// This class acts as the base class for the implementations of the first normalization of the informative content in the DFR framework.\nClass AfterEffect;\n// Model of the information gain based on the ratio of two Bernoulli processes.\nClass AfterEffectB;\n// Model of the information gain based on Laplace's law of succession.\nClass AfterEffectL;\n", "des": "This package contains the various ranking models that can be used in Lucene."}
{"index": 3852, "repo": "lucene-core-9.7.0", "code": "package store\n\n// Random Access Index API.\nInterface RandomAccessInput;\n// Base implementation for a concrete Directory that uses a LockFactory for locking.\nClass BaseDirectory;\n// Wraps another Checksum with an internal buffer to speed up checksum calculations.\nClass BufferedChecksum;\n// Simple implementation of ChecksumIndexInput that wraps another input and delegates calls.\nClass BufferedChecksumIndexInput;\n// Base implementation class for buffered IndexInput.\nClass BufferedIndexInput;\n", "des": "Binary i/o API, used for all index data."}
{"index": 3853, "repo": "lucene-core-9.7.0", "code": "package util\n\n// An object whose RAM usage can be computed.\nInterface Accountable;\n// Comparator for a fixed number of bytes.\nInterface ArrayUtil.ByteArrayComparator;\n// Base interface for attributes.\nInterface Attribute;\n// This interface is used to reflect contents of AttributeSource or AttributeImpl.\nInterface AttributeReflector;\n// Interface for Bitset-like structures.\nInterface Bits;\n", "des": "Some utility classes."}
{"index": 3854, "repo": "lucene-core-9.7.0", "code": "package automaton\n\n// Automaton provider for RegExp. RegExp.toAutomaton(AutomatonProvider,int)\nInterface AutomatonProvider;\n// Construction of basic automata.\nClass Automata;\n// Represents an automaton and all its states and transitions.\nClass Automaton;\n// Records new states and transitions and then Automaton.Builder.finish() creates the Automaton.\nClass Automaton.Builder;\n// Automaton representation for matching UTF-8 byte[].\nClass ByteRunAutomaton;\n", "des": "Finite-state automaton for regular expressions."}
{"index": 3855, "repo": "lucene-core-9.7.0", "code": "package bkd\n\n// One pass iterator through all points previously written with a PointWriter, abstracting away whether points are read from (offline) disk or simple arrays in heap.\nInterface PointReader;\n// Represents a dimensional point value written in the BKD tree.\nInterface PointValue;\n// Appends many points, and then at the end provides a PointReader to iterate those points.\nInterface PointWriter;\n// Basic parameters for indexing points on the BKD tree.\nClass BKDConfig;\n", "des": "Block KD-tree, implementing the generic spatial data structure described in this paper."}
{"index": 3856, "repo": "lucene-core-9.7.0", "code": "package compress\n\n// Utility class that can efficiently compress arrays that mostly contain characters in the [0x1F,0x3F) or [0x5F,0x7F) ranges, which notably include all digits, lowercase characters, '.', '-' and '_'.\nClass LowercaseAsciiCompression;\n// LZ4 compression and decompression routines.\nClass LZ4;\n// Simple lossy LZ4.HashTable that only stores the last ocurrence for each hash on 2^14 bytes of memory.\nClass LZ4.FastCompressionHashTable;\n", "des": "Compression utilities."}
{"index": 3857, "repo": "lucene-core-9.7.0", "code": "package fst\n\n// Abstraction for reading/writing bytes necessary for FST.\nInterface FSTStore;\n// An FST Outputs implementation where each output is a sequence of bytes.\nClass ByteSequenceOutputs;\n// Enumerates all input (BytesRef) + output pairs in an FST.\nClass BytesRefFSTEnum<T>;\n// Holds a single input (BytesRef) + output pair.\nClass BytesRefFSTEnum.InputOutput<T>;\n// An FST Outputs implementation where each output is a sequence of characters.\nClass CharSequenceOutputs;\n", "des": "Finite state transducers"}
{"index": 3858, "repo": "lucene-core-9.7.0", "code": "package graph\n\n// Consumes a TokenStream and creates an Automaton where the transition labels are terms from the TermToBytesRefAttribute.\nClass GraphTokenStreamFiniteStrings;\n", "des": "Utility classes for working with token streams as graphs."}
{"index": 3859, "repo": "lucene-core-9.7.0", "code": "package hnsw\n\n// Provides random access to vectors by dense ordinal.\nInterface RandomAccessVectorValues<T>;\n// Hierarchical Navigable Small World graph.\nClass HnswGraph;\n// NodesIterator that accepts nodes as an integer array.\nClass HnswGraph.ArrayNodesIterator;\n// Nodes iterator based on set representation of nodes.\nClass HnswGraph.CollectionNodesIterator;\n", "des": "Navigable Small-World graph, nominally Hierarchical but currently only has a single layer."}
{"index": 3860, "repo": "lucene-core-9.7.0", "code": "package hppc\n\n// Bit mixing utilities.\nClass BitMixer;\n// A hash map of int to int, implemented using open addressing with linear probing for collision resolution.\nClass IntIntHashMap;\n// Simplifies the implementation of iterators a bit.\nClass IntIntHashMap.AbstractIterator<E>;\n// BufferAllocationException forked from HPPC\nClass IntIntHashMap.BufferAllocationException;\n", "des": "package holding hppc related classes."}
{"index": 3861, "repo": "lucene-core-9.7.0", "code": "package mutable\n\n// Base class for all mutable values.\nClass MutableValue;\n// MutableValue implementation of type boolean.\nClass MutableValueBool;\n// MutableValue implementation of type Date.\nClass MutableValueDate;\n// MutableValue implementation of type double.\nClass MutableValueDouble;\n// MutableValue implementation of type float.\nClass MutableValueFloat;\n// MutableValue implementation of type int.\nClass MutableValueInt;\n// MutableValue implementation of type long.\nClass MutableValueLong;\n", "des": "Comparable object wrappers"}
{"index": 3862, "repo": "lucene-core-9.7.0", "code": "package packed\n\n// A decoder for packed integers.\nInterface PackedInts.Decoder;\n// An encoder for packed integers.\nInterface PackedInts.Encoder;\n// Run-once iterator interface, to decode previously saved PackedInts.\nInterface PackedInts.ReaderIterator;\n// Base implementation for PagedMutable and PagedGrowableWriter.\nClass AbstractPagedMutable<T extends AbstractPagedMutable<T>>;\n// Reader for sequences of longs written with BlockPackedWriter.\nClass BlockPackedReaderIterator;\n", "des": "Packed integer arrays and streams."}
{"index": 3863, "repo": "lucene-spatial-extras-9.7.0", "code": "package spatial\n\n// Iterator over Shape objects for an index segment\nClass ShapeValues;\n// Produces ShapeValues per-segment\nClass ShapeValuesSource;\n// The SpatialStrategy encapsulates an approach to indexing and searching based on shapes.\nClass SpatialStrategy;\n", "des": "Lucene advanced spatial search"}
{"index": 3864, "repo": "lucene-spatial-extras-9.7.0", "code": "package bbox\n\n// The algorithm is implemented as envelope on envelope (rect on rect) overlays rather than complex polygon on complex polygon overlays.\nClass BBoxOverlapRatioValueSource;\n// A base class for calculating a spatial relevance rank per document from a provided ShapeValuesSource returning a Rectangle per-document.\nClass BBoxSimilarityValueSource;\n// A SpatialStrategy for indexing and searching Rectangles by storing its coordinates in numeric fields.\nClass BBoxStrategy;\n", "des": "Bounding Box Spatial Strategy"}
{"index": 3865, "repo": "lucene-spatial-extras-9.7.0", "code": "package composite\n\n// A composite SpatialStrategy based on RecursivePrefixTreeStrategy (RPT) and SerializedDVStrategy (SDV).\nClass CompositeSpatialStrategy;\n// A Query that considers an \"indexQuery\" to have approximate results, and a follow-on ShapeValuesSource is called to verify each hit from TwoPhaseIterator.matches().\nClass CompositeVerifyQuery;\n", "des": "Composite strategies."}
{"index": 3866, "repo": "lucene-spatial-extras-9.7.0", "code": "package prefix\n\n// Base class for Lucene Queries on SpatialPrefixTree fields.\nClass AbstractPrefixTreeQuery;\n// Traverses a SpatialPrefixTree indexed field, using the template and visitor design patterns for subclasses to guide the traversal and collect matching documents.\nClass AbstractVisitingPrefixTreeQuery;\n// A visitor node/cell found via the query shape for AbstractVisitingPrefixTreeQuery.VisitorTemplate.\nClass AbstractVisitingPrefixTreeQuery.VNode;\n", "des": "Prefix Tree Strategy."}
{"index": 3867, "repo": "lucene-spatial-extras-9.7.0", "code": "package tree\n\n// Represents a grid cell.\nInterface Cell;\n// Grid cells that share nothing with other cells when calling Cell.getNextLevelCells(Shape) might implement this interface.\nInterface CellCanPrune;\n// Base interface for Shapes this prefix tree supports.\nInterface NumberRangePrefixTree.NRShape;\n// A unit value Shape implemented as a stack of numbers, one for each level in the prefix tree.\nInterface NumberRangePrefixTree.UnitNRShape;\n", "des": "This package is about SpatialPrefixTree and any supporting classes."}
{"index": 3868, "repo": "lucene-spatial-extras-9.7.0", "code": "package query\n\n// Principally holds the query Shape and the SpatialOperation.\nClass SpatialArgs;\n// Parses a string that usually looks like \"OPERATION(SHAPE)\" into a SpatialArgs object.\nClass SpatialArgsParser;\n// A predicate that compares a stored geometry to a supplied geometry.\nClass SpatialOperation;\n// Exception thrown when the SpatialStrategy cannot implement the requested operation.\nClass UnsupportedSpatialOperation;\n", "des": "Spatial Query options useful for client side requests"}
{"index": 3869, "repo": "lucene-spatial-extras-9.7.0", "code": "package serialized\n\n// A SpatialStrategy based on serializing a Shape stored into BinaryDocValues.\nClass SerializedDVStrategy;\n", "des": "Strategies that serialize the shape (non-indexed)."}
{"index": 3870, "repo": "lucene-spatial-extras-9.7.0", "code": "package spatial4j\n\n// Geo3d implementation of BinaryCodec\nClass Geo3dBinaryCodec;\n// Specialization of a Geo3dShape which represents a Circle.\nClass Geo3dCircleShape;\n// Geo3d implementation of DistanceCalculator\nClass Geo3dDistanceCalculator;\n// Specialization of a Geo3dShape which represents a Point.\nClass Geo3dPointShape;\n// Specialization of a Geo3dShape which represents a Rectangle.\nClass Geo3dRectangleShape;\n", "des": "Spatial4j stuff that ideally belongs in Spatial4j (isn't related to Lucene)."}
{"index": 3871, "repo": "lucene-spatial-extras-9.7.0", "code": "package util\n\n// Caches the doubleVal of another value source in a HashMap so that it is computed only once.\nClass CachingDoubleValueSource;\n// The distance from a provided Point to a Point retrieved from an ShapeValuesSource.\nClass DistanceToShapeValueSource;\n// Transforms a DoubleValuesSource using the formula v = k / (v + k)\nClass ReciprocalDoubleValuesSource;\n// The area of a Shape retrieved from an ShapeValuesSource\nClass ShapeAreaValueSource;\n", "des": "Advanced spatial utilities."}
{"index": 3872, "repo": "lucene-spatial-extras-9.7.0", "code": "package vector\n\n// A DoubleValuesSource that returns the distance for a PointVectorStrategy.\nClass DistanceValueSource;\n// Simple SpatialStrategy which represents Points in two numeric fields.\nClass PointVectorStrategy;\n", "des": "Spatial strategy that uses two fields."}
{"index": 3873, "repo": "solr-ltr-9.3.0", "code": "package ltr\n\n// A feature logger that logs in csv format.\nClass CSVFeatureLogger;\n// \nClass DocInfo;\n// FeatureLogger can be registered in a model and provide a strategy for logging the feature values.\nClass FeatureLogger;\n// Implements the rescoring logic.\nClass LTRRescorer;\n// The ranking query that is run, reranking results using the LTRScoringModel algorithm\nClass LTRScoringQuery;\n// \nClass LTRScoringQuery.FeatureInfo;\n", "des": "This package contains the main logic for performing the reranking using a Learning to Rank model."}
{"index": 3874, "repo": "solr-ltr-9.3.0", "code": "package feature\n\n// A recipe for computing a feature.\nClass Feature;\n// This feature returns the length of a field (in terms) for the current document.\nClass FieldLengthFeature;\n// This feature returns the value of a field in the current document.\nClass FieldValueFeature;\n// This feature returns the original score that the document had before performing the reranking.\nClass OriginalScoreFeature;\n// This feature allows you to reuse any Solr query as a feature.\nClass SolrFeature;\n", "des": "Contains Feature related classes"}
{"index": 3875, "repo": "solr-ltr-9.3.0", "code": "package interleaving\n\n// Interleaving considers two ranking models: modelA and modelB. For a given query, each model returns its ranked list of documents La = (a1,a2,...) and Lb = (b1, b2, ...). An Interleaving algorithm creates a unique ranked list I = (i1, i2, ...). This list is created by interleaving elements from the two lists la and lb as described by the implementation algorithm. Each element Ij is labelled TeamA if it is selected from La and TeamB if it is selected from Lb.\nInterface Interleaving;\n", "des": "Contains Various Interleaving auxiliary classes"}
{"index": 3876, "repo": "solr-ltr-9.3.0", "code": "package algorithms\n\n", "des": "Contains Various Interleaving Algorithms"}
{"index": 3877, "repo": "solr-ltr-9.3.0", "code": "package model\n\n// \nInterface NeuralNetworkModel.Activation;\n// \nInterface NeuralNetworkModel.Layer;\n// A scoring model whose initialization is completed via its AdapterModel.init(SolrResourceLoader) method.\nClass AdapterModel;\n// A scoring model that fetches the wrapped model from SolrResourceLoader.\nClass DefaultWrapperModel;\n// A scoring model that computes scores using a dot product.\nClass LinearModel;\n// A scoring model computes scores that can be used to rerank documents.\nClass LTRScoringModel;\n", "des": "Contains Model related classes"}
{"index": 3878, "repo": "solr-ltr-9.3.0", "code": "package norm\n\n// A Normalizer that normalizes a feature value to itself.\nClass IdentityNormalizer;\n// A Normalizer to scale a feature value using a (min,max) range.\nClass MinMaxNormalizer;\n// A normalizer normalizes the value of a feature.\nClass Normalizer;\n// A Normalizer to scale a feature value around an average-and-standard-deviation distribution.\nClass StandardNormalizer;\n// \nClass NormalizerException;\n", "des": "A normalizer normalizes the value of a feature."}
{"index": 3879, "repo": "solr-ltr-9.3.0", "code": "package transform\n\n// This transformer will take care to generate and append in the response the features declared in the feature store of the current reranking model, or a specified feature store.\nClass LTRFeatureLoggerTransformerFactory;\n// \nClass LTRInterleavingTransformerFactory;\n", "des": "APIs and implementations of DocTransformer for modifying documents in Solr request responses"}
{"index": 3880, "repo": "solr-ltr-9.3.0", "code": "package search\n\n// Plug into solr a rerank model.\nClass LTRQParserPlugin;\n// A learning to rank Query, will incapsulate a learning to rank model, and delegate to it the rescoring of the documents.\nClass LTRQuery;\n", "des": "APIs and classes for parsing and processing search requests"}
{"index": 3881, "repo": "solr-ltr-9.3.0", "code": "package store\n\n// \nClass FeatureStore;\n// Contains the model and features declared.\nClass ModelStore;\n", "des": "Contains feature and model store related classes."}
{"index": 3882, "repo": "solr-ltr-9.3.0", "code": "package rest\n\n// Managed resource for a storing a feature.\nClass ManagedFeatureStore;\n// Menaged resource for storing a model\nClass ManagedModelStore;\n", "des": "Contains the ManagedResource that encapsulate the feature and the model stores."}
{"index": 3883, "repo": "solr-solrj-9.3.0", "code": "package solrj\n\n// \nInterface FastStreamingDocsCallback;\n// A a request object is able to convert itself to V2 Request it should implement this interface\nInterface V2RequestSupport;\n// \nClass ResponseParser;\n// Abstraction through which all communication with a Solr server may be routed\nClass SolrClient;\n// This is an augmented SolrParams with get/set/add fields for common fields used in the Standard and Dismax request handlers\nClass SolrQuery;\n", "des": "Primary APIs for communicating with a Solr Server from a Java client."}
{"index": 3884, "repo": "solr-solrj-9.3.0", "code": "package beans\n\n// A class to map objects to and from solr documents.\nClass DocumentObjectBinder;\n// \nClass BindingException;\n// This class can be used to annotate a field or a setter an any class and SolrJ would help you convert to SolrInputDocument and from SolrDocument\nAnnotation Type Field;\n", "des": "Annotation based mapping of client objects to Solr documents."}
{"index": 3885, "repo": "solr-solrj-9.3.0", "code": "package cloud\n\n// Base class for overriding some behavior of ClusterStateProvider\nClass DelegatingClusterStateProvider;\n// Hold values of terms, this class is immutable.\nClass ShardTerms;\n// Kindly borrowed the idea and base implementation from the ActiveMQ project; useful for blocking traffic on a specified port.\nClass SocketProxy;\n", "des": "Common classes for SolrCloud."}
{"index": 3886, "repo": "solr-solrj-9.3.0", "code": "package embedded\n\n// Encapsulates settings related to SSL Configuration.\nClass SSLConfig;\n", "des": "SolrJ client implementations for embedded solr access."}
{"index": 3887, "repo": "solr-solrj-9.3.0", "code": "package impl\n\n// Provides cluster state from some source\nInterface ClusterStateProvider;\n// Factory interface for configuring SolrHttpClientBuilder.\nInterface HttpClientBuilderFactory;\n// \nInterface HttpListenerFactory;\n// \nInterface SolrHttpClientBuilder.AuthSchemeRegistryProvider;\n// \nInterface SolrHttpClientBuilder.CookieSpecRegistryProvider;\n// \nInterface SolrHttpClientBuilder.CredentialsProviderProvider;\n// \nClass AuthenticationStoreHolder;\n// \nClass BaseHttpClusterStateProvider;\n", "des": "Concrete implementations of client API classes."}
{"index": 3888, "repo": "solr-solrj-9.3.0", "code": "package request\n\n// \nInterface ApiMapping.CommandMeta;\n// \nInterface ApiMapping.V2EndPoint;\n// \nInterface CollectionAdminRequest.RoutedAliasAdminRequest;\n// Marker class so that we can determine which requests are updates.\nInterface IsUpdateRequest;\n// \nInterface JavaBinUpdateRequestCodec.StreamingUpdateHandler;\n// \nInterface RequestWriter.ContentWriter;\n// \nClass AbstractUpdateRequest;\n// Types and utilities used by many ApiMapping classes.\nClass ApiMapping;\n", "des": "Convenience classes for dealing with various types of Solr requests."}
{"index": 3889, "repo": "solr-solrj-9.3.0", "code": "package beans\n\n// V2 API POJO for the /v2/collections 'backup-collection' command.\nClass BackupCollectionPayload;\n// \nClass ClusterPropPayload;\n// \nClass ClusterPropPayload.Cluster;\n// \nClass ClusterPropPayload.CollectionDefaults;\n// \nClass ClusterPropPayload.Defaults;\n// \nClass CreateConfigPayload;\n// \nClass CreateCorePayload;\n// \nClass CreateShardPayload;\n// \nClass DeleteBasicAuthUserPayload;\n// \nClass MigrateDocsPayload;\n// \nClass ModifyCollectionPayload;\n// \nClass MoveReplicaPayload;\n", "des": "Annotated Data objects used in V2 Requests"}
{"index": 3890, "repo": "solr-solrj-9.3.0", "code": "package json\n\n// Represents a query using the JSON Query DSL\nClass DirectJsonQueryRequest;\n// \nClass DomainMap;\n// Represents a \"heatmap\" facet in a JSON request query.\nClass HeatmapFacetMap;\n// A common parent for a small set of classes that allow easier composition of JSON facet objects.\nClass JsonFacetMap<B extends JsonFacetMap<B>>;\n// Represents a query using the JSON Query DSL\nClass JsonQueryRequest;\n// Represents a \"query\" facet in a JSON query request.\nClass QueryFacetMap;\n", "des": "Allows sending of requests using Solr's JSON query/faceting API"}
{"index": 3891, "repo": "solr-solrj-9.3.0", "code": "package schema\n\n// \nClass AbstractSchemaRequest<T extends SolrResponse>;\n// \nClass AnalyzerDefinition;\n// \nClass FieldTypeDefinition;\n// This class offers access to the operations exposed by the Solr Schema API.\nClass SchemaRequest;\n// Adds a new copy field rule to the schema of the specified collection.\nClass SchemaRequest.AddCopyField;\n// Adds a new dynamic field rule to the schema of the specified collection.\nClass SchemaRequest.AddDynamicField;\n", "des": "Convenience classes for making Schema API requests."}
{"index": 3892, "repo": "solr-solrj-9.3.0", "code": "package response\n\n// A base class for all analysis responses.\nClass AnalysisResponseBase;\n// A phase in the analysis process.\nClass AnalysisResponseBase.AnalysisPhase;\n// Holds all information of a token as part of an analysis phase.\nClass AnalysisResponseBase.TokenInfo;\n// This class represents a cluster of Solr Docs .\nClass Cluster;\n// Encapsulates responses from ClusteringComponent\nClass ClusteringResponse;\n// \nClass CollectionAdminResponse;\n", "des": "Convenience classes for dealing with various types of Solr responses."}
{"index": 3893, "repo": "solr-solrj-9.3.0", "code": "package json\n\n// Represents the top-level response for a bucket-based JSON facet (i.e.\nClass BucketBasedJsonFacet;\n// Represents an individual bucket result of a \"term\" or \"range\" facet.\nClass BucketJsonFacet;\n// Represents the result of a \"heatmap\" JSON facet.\nClass HeatmapJsonFacet;\n// Represents the response to a \"query\" JSON facet.\nClass NestableJsonFacet;\n", "des": "Allows parsing of JSON query/faceting API responses"}
{"index": 3894, "repo": "solr-solrj-9.3.0", "code": "package schema\n\n// \nClass FieldTypeRepresentation;\n// \nClass SchemaRepresentation;\n// This class is used to wrap the response messages retrieved from Solr Schema API.\nClass SchemaResponse;\n// \nClass SchemaResponse.CopyFieldsResponse;\n// \nClass SchemaResponse.DynamicFieldResponse;\n// \nClass SchemaResponse.DynamicFieldsResponse;\n// \nClass SchemaResponse.FieldResponse;\n// \nClass SchemaResponse.FieldsResponse;\n// \nClass SchemaResponse.FieldTypeResponse;\n// \nClass SchemaResponse.FieldTypesResponse;\n", "des": "Convenience classes for dealing with Schema API responses."}
{"index": 3895, "repo": "solr-solrj-9.3.0", "code": "package routing\n\n// \nInterface ReplicaListTransformer;\n// \nInterface ReplicaListTransformerFactory;\n// Allows better caching by establishing deterministic evenly-distributed replica routing preferences according to either explicitly configured hash routing parameter, or the hash of a query parameter (configurable, usually related to the main query).\nClass AffinityReplicaListTransformer;\n", "des": "Classes to handle query routing preferences"}
{"index": 3896, "repo": "solr-solrj-9.3.0", "code": "package util\n\n// Listener for async requests\nInterface AsyncListener<T>;\n// \nInterface Cancellable;\n// \nClass ClientUtils;\n// \nClass Constants;\n// BasicAuthentication that does not care about uri and realm\nClass SolrBasicAuthentication;\n// Ensures that provided identifiers align with Solr's recommendations/requirements for choosing collection, core, etc identifiers.\nClass SolrIdentifierValidator;\n// \nEnum SolrIdentifierValidator.IdentifierType;\n", "des": "Utilities for Solr client applications."}
{"index": 3897, "repo": "solr-solrj-9.3.0", "code": "package api\n\n// \nInterface CollectionConfig;\n// A range of hash that is stored in a shard\nInterface HashRange;\n// A binary resource.\nInterface Resource;\n// \nInterface Resource.Consumer;\n// identify shards for a given routing key or document id\nInterface Router;\n// A shard of a collection\nInterface Shard;\n// replica of a shard\nInterface ShardReplica;\n// A simplified read-only key-value structure.\nInterface SimpleMap<T>;\n// Represents a Solr cluster\nInterface SolrCluster;\n", "des": "API interfaces for core SolrCloud classes"}
{"index": 3898, "repo": "solr-solrj-9.3.0", "code": "package common\n\n// \nInterface Callable<T>;\n// A generic interface that represents a config file, mostly XML Please note that this is an immutable, read-only object.\nInterface ConfigNode;\n// Interface to help do push writing to an array\nInterface IteratorWriter;\n// \nInterface IteratorWriter.ItemWriter;\n// This is to facilitate just in time creation of objects before writing it to the response.\nInterface MapSerializable;\n// Use this class to push all entries of a Map into an output.\nInterface MapWriter;\n", "des": "Common classes reused on both clients & server for dealing with documents to be indexed and result documents."}
{"index": 3899, "repo": "solr-solrj-9.3.0", "code": "package annotation\n\n// Provides a 1:1 mapping from jackson's annotation.\nAnnotation Type JsonProperty;\n", "des": "Annotations mapping to Jackson"}
{"index": 3900, "repo": "solr-solrj-9.3.0", "code": "package cloud\n\n// Interface to determine if a set of liveNodes and a collection's state matches some expecatations.\nInterface CollectionStatePredicate;\n// JSON properties related to a collection's state.\nInterface DocCollection.CollectionStateProps;\n// \nInterface DocCollection.PrsSupplier;\n// Fetch a node's system properties.\nInterface NodesSysProps;\n// JSON properties related to a replica's state.\nInterface Replica.ReplicaStateProps;\n", "des": "Common Solr Cloud and ZooKeeper related classes reused on both clients & server."}
{"index": 3901, "repo": "solr-solrj-9.3.0", "code": "package luke\n\n// \nEnum FieldFlag;\n", "des": "Common constants used by the LukeRequestHandler."}
{"index": 3902, "repo": "solr-solrj-9.3.0", "code": "package params\n\n// Defines the request parameters used by all analysis request handlers.\nInterface AnalysisParams;\n// \nInterface CollectionAdminParams;\n// \nInterface CollectionParams;\n// \nInterface CommonAdminParams;\n// Parameters used across many handlers\nInterface CommonParams;\n// ConfigSets API related parameters and actions.\nInterface ConfigSetParams;\n// Parameters and constants used when dealing with cursor based requests across large sorted result sets.\nInterface CursorMarkParams;\n", "des": "Parameter constants and enumerations."}
{"index": 3903, "repo": "solr-solrj-9.3.0", "code": "package util\n\n// \nInterface Cache<K,​V>;\n// \nInterface Compressor;\n// \nInterface ContentStream;\n// This represents a data entry in the payload/stream.\nInterface DataEntry;\n// \nInterface DataEntry.EntryListener;\n// \nInterface DataEntry.FastDecoder;\n// Any class which wants to carry forward the threadlocal values to the threads run by threadpools must implement this interface and the implementation should be registered here\nInterface ExecutorUtil.InheritableThreadLocalProvider;\n", "des": "Common utility classes reused on both clients & server."}
