{"index": 3120, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package pagination\n\n// Contract defining dialect-specific LIMIT clause handling.\nInterface LimitHandler;\n// Default implementation of LimitHandler interface.\nClass AbstractLimitHandler;\n// Limit handler for CUBRID\nClass CUBRIDLimitHandler;\n// \nClass FirstLimitHandler;\n// \nClass Informix10LimitHandler;\n// \nClass LegacyFirstLimitHandler;\n// Limit handler that delegates all operations to the underlying dialect.\nClass LegacyLimitHandler;\n// A helper for dealing with LimitHandler implementations\nClass LimitHelper;\n// Handler not supporting query LIMIT clause.\nClass NoopLimitHandler;\n// A LimitHandler for databases which support the ANSI SQL standard syntax FETCH FIRST m ROWS ONLY and OFFSET n ROWS FETCH NEXT m ROWS ONLY.\nClass Oracle12LimitHandler;\n// LIMIT clause handler compatible with ISO and ANSI SQL:2008 standard.\nClass SQL2008StandardLimitHandler;\n// LIMIT clause handler compatible with SQL Server 2005 and later.\nClass SQLServer2005LimitHandler;\n// LIMIT clause handler compatible with SQL Server 2012 and later.\nClass SQLServer2012LimitHandler;\n// This limit handler is very conservative and is only triggered in simple cases involving a select or select distinct.\nClass SybaseASE157LimitHandler;\n// \nClass TopLimitHandler;\n", "des": "Support for Dialect-specific pagination strategies"}
{"index": 3121, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package unique\n\n// Dialect-level delegate in charge of applying \"uniqueness\" to a column.\nInterface UniqueDelegate;\n// DB2 does not allow unique constraints on nullable columns.\nClass DB2UniqueDelegate;\n// The default UniqueDelegate implementation for most dialects.\nClass DefaultUniqueDelegate;\n// Informix requires the constraint name to come last on the alter table.\nClass InformixUniqueDelegate;\n// \nClass MySQLUniqueDelegate;\n", "des": "Support for Dialect-specific unique constraint definition"}
{"index": 3122, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Provides access to the initial user-provided configuration values.\nInterface ConfigurationService;\n// Simple conversion contract for converting an untyped object to a specified type.\nInterface ConfigurationService.Converter<T>;\n// Standard set of setting converters\nClass StandardConverters;\n", "des": "SPI Package for the configuration service."}
{"index": 3123, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package jdbc\n\n// SPI contracts for supporting various aspects of JDBC interaction\npackage jdbc.spi\n// Wraps a binary stream to also provide the length which is needed when binding.\nInterface BinaryStream;\n// Marker interface for non-contextually created Blob instances..\nInterface BlobImplementer;\n// Wraps a character stream (reader) to also provide the length (number of characters) which is needed when binding.\nInterface CharacterStream;\n// Marker interface for non-contextually created Clob instances..\nInterface ClobImplementer;\n// Provides callback access into the context in which the LOB is to be created.\nInterface LobCreationContext;\n// The callback contract for making use of the JDBC Connection.\nInterface LobCreationContext.Callback<T>;\n// Contract for creating various LOB references.\nInterface LobCreator;\n// Marker interface for non-contextually created java.sql.NClob instances..\nInterface NClobImplementer;\n// Contract for Blob wrappers.\nInterface WrappedBlob;\n// Contract for Clob wrappers.\nInterface WrappedClob;\n// Contract for NClob wrappers.\nInterface WrappedNClob;\n// Convenient base class for proxy-based LobCreator for handling wrapping.\nClass AbstractLobCreator;\n// Manages aspects of representing Blob objects.\nClass BlobProxy;\n// Manages aspects of proxying Clobs for non-contextual creation, including proxy creation and handling proxy invocations.\nClass ClobProxy;\n// \nClass ColumnNameCache;\n// LobCreator implementation using contextual creation against the JDBC Connection class's LOB creation methods.\nClass ContextualLobCreator;\n// Manages aspects of proxying java.sql.NClobs for non-contextual creation, including proxy creation and handling proxy invocations.\nClass NClobProxy;\n// LobCreator implementation using non-contextual or local creation, meaning that we generate the LOB references ourselves as opposed to delegating to the JDBC Connection.\nClass NonContextualLobCreator;\n// Exposes a Reader as an InputStream.\nClass ReaderInputStream;\n// \nClass ResultSetWrapperProxy;\n// Manages aspects of proxying Blobs to add serializability.\nClass SerializableBlobProxy;\n", "des": "Support for various aspects of JDBC interaction"}
{"index": 3124, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Conceptually models a batch.\nInterface Batch;\n// A builder for Batch instances\nInterface BatchBuilder;\n// Unique key for batch identification.\nInterface BatchKey;\n// An observer contract for batch events.\nInterface BatchObserver;\n", "des": "Defines contracts for JDBC batching support."}
{"index": 3125, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// A contract for obtaining JDBC connections.\nInterface ConnectionProvider;\n// Provides centralized access to JDBC connections.\nInterface JdbcConnectionAccess;\n// A specialized Connection provider contract used when the application is using multi-tenancy support requiring tenant aware connections.\nInterface MultiTenantConnectionProvider;\n// Basic support for implementations of MultiTenantConnectionProvider based on DataSources.\nClass AbstractDataSourceBasedMultiTenantConnectionProviderImpl;\n// Basic support for MultiTenantConnectionProvider implementations using individual ConnectionProvider instances per tenant behind the scenes.\nClass AbstractMultiTenantConnectionProvider;\n// A concrete implementation of the MultiTenantConnectionProvider contract bases on a number of reasonable assumptions.\nClass DataSourceBasedMultiTenantConnectionProviderImpl;\n", "des": "Defines contracts for accessing JDBC Connections"}
{"index": 3126, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Contract for JDBC REF_CURSOR support.\nInterface RefCursorSupport;\n", "des": "Defines contracts for JDBC REF_CURSOR support."}
{"index": 3127, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// A factory for generating Dialect instances.\nInterface DialectFactory;\n// Exposes information about the database and JDBC driver that can be used in resolving the appropriate Dialect to use.\nInterface DialectResolutionInfo;\n// Contract for the source of DialectResolutionInfo.\nInterface DialectResolutionInfoSource;\n// Contract for determining the Dialect to use based on information about the database / driver.\nInterface DialectResolver;\n// Intended as support for custom resolvers which match a single db name (with optional version info).\nClass BasicDialectResolver;\n// A helper to centralize conversion of SQLExceptions to JDBCExceptions.\nClass BasicSQLExceptionConverter;\n// An implementation of DialectResolutionInfo that delegates calls to a wrapped DatabaseMetaData.\nClass DatabaseMetaDataDialectResolutionInfoAdapter;\n", "des": "Contracts supporting Dialect resolution (from JDBC metadata) and Dialect building."}
{"index": 3128, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// An observer of logical connection events.\nInterface ConnectionObserver;\n// Specialized JdbcWrapper contract for wrapped objects that can additioanlly be invalidated\nInterface InvalidatableWrapper<T>;\n// Coordinates JDBC-related activities.\nInterface JdbcCoordinator;\n// Contract for services around JDBC operations.\nInterface JdbcServices;\n// Generic contract for wrapped JDBC objects.\nInterface JdbcWrapper<T>;\n// Additional optional contract for connection observers to indicate that they should be released when the physical connection is released.\nInterface NonDurableConnectionObserver;\n// Contract for extracting ResultSets from Statements, executing Statements, managing Statement/ResultSet resources, and logging statement calls.\nInterface ResultSetReturn;\n// \nInterface ResultSetWrapper;\n// Contract for resolving the schema of a Connection.\nInterface SchemaNameResolver;\n// Contract for handling warnings\nInterface SqlExceptionHelper.WarningHandler;\n// Contracting for preparing SQL statements\nInterface StatementPreparer;\n// A no-op adapter for ConnectionObserver.\nClass ConnectionObserverAdapter;\n// Helper for handling SQLExceptions in various manners.\nClass SqlExceptionHelper;\n// Standard SQLWarning handler for logging warnings\nClass SqlExceptionHelper.StandardWarningHandler;\n// Basic support for SqlExceptionHelper.WarningHandler implementations which handle warnings\nClass SqlExceptionHelper.WarningHandlerLoggingSupport;\n// Centralize logging for SQL statements.\nClass SqlStatementLogger;\n// Models type info extracted from DatabaseMetaData.getTypeInfo()\nClass TypeInfo;\n// Describes the instrinsic nullability of a data type as reported by the JDBC driver.\nEnum TypeNullability;\n// Describes the searchability of a data type as reported by the JDBC driver.\nEnum TypeSearchability;\n", "des": "SPI contracts for supporting various aspects of JDBC interaction"}
{"index": 3129, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package jndi\n\n// The SPI contracts for Hibernate JNDI support\npackage jndi.spi\n// An exception indicating trouble accessing JNDI\nClass JndiException;\n// Indicates a problem with a given JNDI name being deemed as not valid.\nClass JndiNameException;\n", "des": "Support for JNDI within Hibernate"}
{"index": 3130, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Service providing simplified access to JNDI related features needed by Hibernate.\nInterface JndiService;\n", "des": "The SPI contracts for Hibernate JNDI support"}
{"index": 3131, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package profile\n\n// Models the association of a given fetch.\nClass Association;\n// Models an individual fetch within a profile.\nClass Fetch;\n// A 'fetch profile' allows a user to dynamically modify the fetching strategy used for particular associations at runtime, whereas that information was historically only statically defined in the metadata.\nClass FetchProfile;\n// The type or style of fetch.\nEnum Fetch.Style;\n", "des": "Models the fetch profiles defined by the application"}
{"index": 3132, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Service contract for dealing with native queries.\nInterface NativeQueryInterpreter;\n// Maybe better named a Journaler.\nInterface ParameterParser.Recognizer;\n// \nInterface QueryPlanCache.QueryPlanCreator;\n// NOTE: Consider this contract (and its sub-contracts) as incubating as we transition to 6.0 and SQM\nClass AbstractParameterDescriptor;\n// Encapsulates a JPA EntityGraph provided through a JPQL query hint.\nClass EntityGraphQueryHint;\n// Extends an HQLQueryPlan to maintain a reference to the collection-role name being filtered.\nClass FilterQueryPlan;\n// Defines a query execution plan for an HQL query (or filter).\nClass HQLQueryPlan;\n// Descriptor regarding a named parameter.\nClass NamedParameterDescriptor;\n// \nClass NativeQueryInterpreterInitiator;\n// Defines a query execution plan for a native-SQL query.\nClass NativeSQLQueryPlan;\n// Descriptor regarding an ordinal parameter.\nClass OrdinalParameterDescriptor;\n// The single available method ParameterParser.parse(java.lang.String, org.hibernate.engine.query.spi.ParameterParser.Recognizer) is responsible for parsing a query string and recognizing tokens in relation to parameters (either named, JPA-style, or ordinal) and providing callbacks about such recognitions.\nClass ParameterParser;\n// Implements a parameter parser recognizer specifically for the purpose of journaling parameter locations.\nClass ParamLocationRecognizer;\n// Internal in-flight representation of a recognized named parameter\nClass ParamLocationRecognizer.InFlightJpaOrdinalParameterState;\n// Internal in-flight representation of a recognized named parameter\nClass ParamLocationRecognizer.InFlightNamedParameterState;\n// Internal in-flight representation of a recognized named parameter\nClass ParamLocationRecognizer.InFlightOrdinalParameterState;\n// Acts as a cache for compiled query plans, as well as query-parameter metadata.\nClass QueryPlanCache;\n// Metadata about the query return(s).\nClass ReturnMetadata;\n", "des": "Defines support for query plans and stored metadata about queries"}
{"index": 3133, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package graph\n\n// Hibernate extension to the JPA entity-graph AttributeNode contract.\nInterface AttributeNode<J>;\n// A container for AttributeNodes.\nInterface Graph<J>;\n// Commonality between AttributeNode and Graph.\nInterface GraphNode<J>;\n// Hibernate extension to the JPA EntityGraph contract.\nInterface RootGraph<J>;\n// Hibernate extension to the JPA entity-graph Subgraph contract.\nInterface SubGraph<J>;\n// A collection of EntityGraph utilities.\nClass EntityGraphs;\n// Parser for string representations of JPA EntityGraph (RootGraph) and Subgraph (SubGraph), using a simple syntax defined by the `graph.g` Antlr grammar.\nClass GraphParser;\n// JPA defines 2 distinct semantics for applying an EntityGraph.\nEnum GraphSemantic;\n// Indicates an illegal attempt to make a Graph become an EntityGraph via Graph.makeRootGraph(String, boolean).\nClass CannotBecomeEntityGraphException;\n// Indicates an attempt was made to add a (key)? sub-graph to an attribute type that does not support (key)? sub-graphs.\nClass CannotContainSubGraphException;\n// Thrown by GraphParser to indicate textual entity graph representation parsing errors.\nClass InvalidGraphException;\n", "des": "Hibernate's (extended) support for JPA's entity graphs"}
{"index": 3134, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package id\n\n// Package contains an implementation of MultiTableBulkIdStrategy based on the use of a persistent (ANSI SQL term) table to hold id values.\npackage id.persistent\n// \nInterface AbstractMultiTableBulkIdStrategyImpl.PreparationContext;\n// \nInterface IdTableInfo;\n// \nInterface IdTableSupport;\n// Generalized strategy contract for handling multi-table bulk HQL operations.\nInterface MultiTableBulkIdStrategy;\n// Handler for dealing with multi-table HQL bulk delete statements.\nInterface MultiTableBulkIdStrategy.DeleteHandler;\n// Handler for dealing with multi-table HQL bulk update statements.\nInterface MultiTableBulkIdStrategy.UpdateHandler;\n// Base class for all strategies that select the ids to be updated/deleted prior to executing the update/delete operation.\nClass AbstractIdsBulkIdHandler;\n// Convenience base class for MultiTableBulkIdStrategy implementations.\nClass AbstractMultiTableBulkIdStrategyImpl<TT extends IdTableInfo,​CT extends AbstractMultiTableBulkIdStrategyImpl.PreparationContext>;\n// Convenience base class for MultiTableBulkIdStrategy.UpdateHandler and MultiTableBulkIdStrategy.DeleteHandler implementations through TableBasedUpdateHandlerImpl and TableBasedDeleteHandlerImpl respectively.\nClass AbstractTableBasedBulkIdHandler;\n// \nClass AbstractTableBasedBulkIdHandler.ProcessedWhereClause;\n// \nClass IdTableHelper;\n// \nClass IdTableSupportStandardImpl;\n// \nClass TableBasedDeleteHandlerImpl;\n// \nClass TableBasedUpdateHandlerImpl;\n", "des": "Support for multi-table update and delete statements via id-tables."}
{"index": 3135, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package persistent\n\n// \nClass DeleteHandlerImpl;\n// \nClass Helper;\n// This is a strategy that mimics temporary tables for databases which do not support temporary tables.\nClass PersistentTableBulkIdStrategy;\n// \nClass UpdateHandlerImpl;\n", "des": "Package contains an implementation of MultiTableBulkIdStrategy based on the use of a persistent (ANSI SQL term) table to hold id values."}
{"index": 3136, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package enhanced\n\n// Contract for providing callback access to a DatabaseStructure, typically from the Optimizer.\nInterface AccessCallback;\n// Encapsulates definition of the underlying data structure backing a sequence-style generator.\nInterface DatabaseStructure;\n// Marker interface for optimizer which wishes to know the user-specified initial value.\nInterface InitialValueAwareOptimizer;\n// Performs optimization on an optimizable identifier generator.\nInterface Optimizer;\n// Common support for optimizer implementations.\nClass AbstractOptimizer;\n// Optimizer which applies a 'hilo' algorithm in memory to achieve optimization.\nClass HiLoOptimizer;\n// Slight variation from HiLoOptimizer, maintaining compatibility with the values generated by the legacy Hibernate hilo based generators.\nClass LegacyHiLoAlgorithmOptimizer;\n// An optimizer that performs no optimization.\nClass NoopOptimizer;\n// Factory for Optimizer instances.\nClass OptimizerFactory;\n// Variation of PooledOptimizer which interprets the incoming database value as the lo value, rather than the hi value.\nClass PooledLoOptimizer;\n// Variation of PooledOptimizer which interprets the incoming database value as the lo value, rather than the hi value, as well as using thread local to cache the generation state.\nClass PooledLoThreadLocalOptimizer;\n// Optimizer which uses a pool of values, storing the next low value of the range in the database.\nClass PooledOptimizer;\n// Describes a sequence.\nClass SequenceStructure;\n// Generates identifier values based on a sequence-style database structure.\nClass SequenceStyleGenerator;\n// An enhanced version of table-based id generation.\nClass TableGenerator;\n// Describes a table used to mimic sequence behavior\nClass TableStructure;\n// Enumeration of the standard Hibernate id generation optimizers.\nEnum StandardOptimizerDescriptor;\n", "des": "Enhanced/improved versions of table and sequence based identifier generators targeting portability and unified configuration"}
{"index": 3137, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Represents a JPA event callback (the method).\nInterface Callback;\n// \nInterface CallbackBuilder;\n// \nInterface CallbackBuilder.CallbackRegistrar;\n// \nInterface CallbackDefinition;\n// \nInterface CallbackRegistrar;\n// Registry of Callbacks by entity and type\nInterface CallbackRegistry;\n// Contract for injecting the registry of Callbacks into event listeners.\nInterface CallbackRegistryConsumer;\n// \nEnum CallbackType;\n", "des": "The SPI contracts for supporting JPA lifecycle callbacks."}
{"index": 3138, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package plan\n\n// Base class for LoadPlan-based BatchingEntityLoaderBuilder implementations.\nClass AbstractBatchingEntityLoaderBuilder;\n// A UniqueEntityLoader implementation based on using LoadPlans\nClass AbstractLoadPlanBasedEntityLoader;\n// The base contract for UniqueEntityLoader implementations capable of performing batch-fetch loading of entities using multiple primary key values in the SQL WHERE clause.\nClass BatchingEntityLoader;\n// Batching entity loader using dynamic where-clause\nClass DynamicBatchingEntityLoader;\n// A walking/plan based BatchingEntityLoaderBuilder that builds entity-loader instances capable of dynamically building its batch-fetch SQL based on the actual number of entity ids waiting to be batch fetched.\nClass DynamicBatchingEntityLoaderBuilder;\n// UniqueEntityLoader implementation that is the main functionality for LoadPlan-based Entity loading.\nClass EntityLoader;\n// \nClass EntityLoader.Builder;\n// LoadPlan-based implementation of the legacy batch loading strategy\nClass LegacyBatchingEntityLoaderBuilder;\n// \nClass LegacyBatchingEntityLoaderBuilder.LegacyBatchingEntityLoader;\n// \nClass MultiEntityLoadingSupport;\n// Batching entity loader using padded where-clause\nClass PaddedBatchingEntityLoader;\n// A walking/plan based BatchingEntityLoaderBuilder that builds entity-loader instances building its batch-fetch SQL based on padding - using a set number of parameters, but setting \"unneeded ones\" to null.\nClass PaddedBatchingEntityLoaderBuilder;\n", "des": "Support for entity loaders built on top of the org.hibernate.loader.plan API to apply entity-graphs"}
{"index": 3139, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Describes a collection query space that allows adding joins with other query spaces; used while building a CollectionQuerySpace.\nInterface ExpandingCollectionQuerySpace;\n// Describes a composite query space that allows adding joins with other query spaces; used while building a CompositeQuerySpace.\nInterface ExpandingCompositeQuerySpace;\n// Describes an entity identifier description that allows adding fetches; used while building a EntityIdentifierDescription.\nInterface ExpandingEntityIdentifierDescription;\n// Describes an entity query space that allows adding joins with other query spaces; used while building an EntityQuerySpace.\nInterface ExpandingEntityQuerySpace;\n// Describes the internal contract for things which can contain fetches.\nInterface ExpandingFetchSource;\n// Describes a query space that allows adding joins with other query spaces; used while building a QuerySpace.\nInterface ExpandingQuerySpace;\n// Models a collection of QuerySpace references and exposes the ability to create an ExpandingQuerySpace for \"returns\" and fetches; used when building a load plan.\nInterface ExpandingQuerySpaces;\n// Specialized AssociationVisitationStrategy implementation for building LoadPlan instances.\nInterface LoadPlanBuildingAssociationVisitationStrategy;\n// Provides access to context needed in building a LoadPlan.\nInterface LoadPlanBuildingContext;\n// Prints a LoadPlan graph and its QuerySpaces graph as tree structures.\nClass LoadPlanTreePrinter;\n// A metadata-driven builder of LoadPlans.\nClass MetamodelDrivenLoadPlanBuilder;\n// Prints a QuerySpaces graph as a tree structure.\nClass QuerySpaceTreePrinter;\n// Prints a Return graph as a tree structure.\nClass ReturnGraphTreePrinter;\n// A singleton helper class for printing tree structures using indentation.\nClass TreePrinterHelper;\n", "des": "Defines the SPI for building a metamodel-driven LoadPlan"}
{"index": 3140, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// The context for named parameters.\nInterface NamedParameterContext;\n// Provides values for all options that impact the built query.\nInterface QueryBuildingParameters;\n", "des": "Defines the SPI for obtaining values for options that impact the load query."}
{"index": 3141, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Provides aliases that are used by load queries and ResultSet processors.\nInterface AliasResolutionContext;\n// \nInterface CollectionReferenceAliases;\n// Aggregates the alias/suffix information in relation to an EntityReference todo : add a contract (interface) that can be shared by entity and collection alias info objects as lhs/rhs of a join ?\nInterface EntityReferenceAliases;\n// \nInterface LoadQueryDetails;\n// \nInterface LockModeResolver;\n", "des": "Defines the SPI for the load query generated for the LoadPlan and the ResultSet processor."}
{"index": 3142, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Models the requested fetching of an \"any\" attribute.\nInterface AnyAttributeFetch;\n// Models a Fetch that is specifically for an attribute.\nInterface AttributeFetch;\n// Represents the circular side of a bi-directional entity association.\nInterface BidirectionalEntityReference;\n// Models the requested fetching of a persistent collection attribute.\nInterface CollectionAttributeFetch;\n// A collection element which is a FetchSource.\nInterface CollectionFetchableElement;\n// A collection index which is a FetchSource.\nInterface CollectionFetchableIndex;\n// Models a QuerySpace for a persistent collection.\nInterface CollectionQuerySpace;\n// Represents a reference to a persistent collection either as a Return or as a CollectionAttributeFetch.\nInterface CollectionReference;\n// Models the a persistent collection as root Return.\nInterface CollectionReturn;\n// Models the requested fetching of a composite attribute.\nInterface CompositeAttributeFetch;\n// Models the requested fetching of a composition (component/embeddable), which may or may not be an attribute.\nInterface CompositeFetch;\n// Models a QuerySpace for a composition (component/embeddable).\nInterface CompositeQuerySpace;\n// Models the requested fetching of an entity attribute.\nInterface EntityFetch;\n// Descriptor for the identifier of an entity as a FetchSource (which allows for key-many-to-one handling).\nInterface EntityIdentifierDescription;\n// Models a QuerySpace specific to an entity (EntityPersister).\nInterface EntityQuerySpace;\n// Represents a reference to an entity either as a return, fetch, or collection element or index.\nInterface EntityReference;\n// Models the an entity as root Return.\nInterface EntityReturn;\n// Contract for associations that are being fetched.\nInterface Fetch;\n// Contract for a FetchSource (aka, the thing that owns the fetched attribute).\nInterface FetchSource;\n// Represents a join in the QuerySpace-sense.\nInterface Join;\n// Specialization of a Join that is defined by the metadata.\nInterface JoinDefinedByMetadata;\n// Describes a plan for performing a load of results.\nInterface LoadPlan;\n// Defines a persister reference (either entity or collection) or a composite reference.\nInterface QuerySpace;\n// Models a collection of QuerySpace references and exposes the ability to find a QuerySpace by its UID\nInterface QuerySpaces;\n", "des": "Defines the SPI for the building blocks that make up a LoadPlan."}
{"index": 3143, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// The contract for getting value for a persistent property from its container/owner\nInterface Getter;\n// Describes access to a particular persistent property in terms of getting and setting values.\nInterface PropertyAccess;\n// Describes a strategy for persistent property access (field, JavaBean-style property, etc).\nInterface PropertyAccessStrategy;\n// Contract for resolving the PropertyAccessStrategy to use.\nInterface PropertyAccessStrategyResolver;\n// The contract for setting a persistent property value into its container/owner\nInterface Setter;\n// \nClass EnhancedGetterMethodImpl;\n// A specialized Setter implementation for handling setting values into a bytecode-enhanced Class.\nClass EnhancedSetterImpl;\n// Field-based implementation of Getter\nClass GetterFieldImpl;\n// \nClass GetterMethodImpl;\n// Field-based implementation of Setter\nClass SetterFieldImpl;\n// \nClass SetterMethodImpl;\n// Describes the built-in externally-nameable PropertyAccessStrategy implementations.\nEnum BuiltInPropertyAccessStrategies;\n// Indicates a problem while building a PropertyAccess\nClass PropertyAccessBuildingException;\n// Indicates a problem reading or writing value from/to a persistent property.\nClass PropertyAccessException;\n// \nClass PropertyAccessSerializationException;\n", "des": "Defines strategies for accessing the persistent properties of an entity or composite."}
{"index": 3144, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package transaction\n\n// Extended SPI contracts for the resource-level transaction capabilities of Hibernate.\npackage transaction.spi\n// Wraps an exception thrown from a \"local synchronization\" (one registered in the SynchronizationRegistry).\nClass LocalSynchronizationException;\n// Indicates an attempt to register a null synchronization.\nClass NullSynchronizationException;\n// Indicates a call to TransactionCoordinator.explicitJoin() that requires an active transaction where there currently is none.\nClass TransactionRequiredForJoinException;\n", "des": "Defines the resource-level transaction capabilities of Hibernate, which revolves around the TransactionCoordinator contract."}
{"index": 3145, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Provides access to a Connection that is isolated from any \"current transaction\" with the designed purpose of performing DDL commands\nInterface DdlTransactionIsolator;\n// Manages a registry of (local) JTA Synchronization instances\nInterface SynchronizationRegistry;\n// SPI contract for SynchronizationRegistry implementors.\nInterface SynchronizationRegistryImplementor;\n// Models the coordination of all transaction related flows.\nInterface TransactionCoordinator;\n// Provides the means for \"local transactions\" (as transaction drivers) to control the underlying \"physical transaction\" currently associated with the TransactionCoordinator.\nInterface TransactionCoordinator.TransactionDriver;\n// Builder for TransactionCoordinator instances\nInterface TransactionCoordinatorBuilder;\n// Access to options to are specific to each TransactionCoordinator instance\nInterface TransactionCoordinatorBuilder.Options;\n// Models an owner of a TransactionCoordinator.\nInterface TransactionCoordinatorOwner;\n// Enumeration of statuses in which a transaction facade (Transaction) might be.\nEnum TransactionStatus;\n", "des": "Extended SPI contracts for the resource-level transaction capabilities of Hibernate."}
{"index": 3146, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package converter\n\n// The standard approach for defining a MutabilityPlan for converted (AttributeConverter) values is to always assume that they are immutable to make sure that dirty checking, deep copying and second-level caching all work properly no matter what.\nClass AttributeConverterMutabilityPlanImpl<T>;\n// Adapter for incorporating JPA AttributeConverter handling into the SqlTypeDescriptor contract.\nClass AttributeConverterSqlTypeDescriptorAdapter;\n// Adapts the Hibernate Type contract to incorporate JPA AttributeConverter calls.\nClass AttributeConverterTypeAdapter<T>;\n", "des": "Support for handling JPA AttributeConverter instances as part of the Hibernate Type system."}
{"index": 3147, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package sql\n\n// Descriptor for the SQL/JDBC side of a value mapping.\nInterface SqlTypeDescriptor;\n// Convenience base implementation of ValueBinder\nClass BasicBinder<J>;\n// Convenience base implementation of ValueExtractor\nClass BasicExtractor<J>;\n// Descriptor for BIGINT handling.\nClass BigIntTypeDescriptor;\n// Descriptor for BINARY handling.\nClass BinaryTypeDescriptor;\n// Descriptor for BIT handling.\nClass BitTypeDescriptor;\n// Descriptor for BLOB handling.\nClass BlobTypeDescriptor;\n// Descriptor for BOOLEAN handling.\nClass BooleanTypeDescriptor;\n// Descriptor for CHAR handling.\nClass CharTypeDescriptor;\n// Descriptor for CLOB handling.\nClass ClobTypeDescriptor;\n// Descriptor for DATE handling.\nClass DateTypeDescriptor;\n// Descriptor for DECIMAL handling.\nClass DecimalTypeDescriptor;\n// Descriptor for DOUBLE handling.\nClass DoubleTypeDescriptor;\n// Descriptor for FLOAT handling.\nClass FloatTypeDescriptor;\n// Descriptor for INTEGER handling.\nClass IntegerTypeDescriptor;\n// Information pertaining to JDBC type families.\nClass JdbcTypeFamilyInformation;\n// Maintains the JDBC recommended mappings for JDBC type-code to/from Java Class as defined in _Appendix B : Data Type Conversion Tables_ of the _JDBC 4.0 Specification_ Eventually, the plan is to have Dialect and DatabaseMetaData.getTypeInfo() contribute this information.\nClass JdbcTypeJavaClassMappings;\n// \nClass LobTypeMappings;\n// Descriptor for LONGNVARCHAR handling.\nClass LongNVarcharTypeDescriptor;\n// Descriptor for LONGVARBINARY handling.\nClass LongVarbinaryTypeDescriptor;\n// Descriptor for LONGVARCHAR handling.\nClass LongVarcharTypeDescriptor;\n// Manages a mapping between nationalized and non-nationalized variants of JDBC types.\nClass NationalizedTypeMappings;\n// Descriptor for NCHAR handling.\nClass NCharTypeDescriptor;\n// Descriptor for NCLOB handling.\nClass NClobTypeDescriptor;\n// Descriptor for NUMERIC handling.\nClass NumericTypeDescriptor;\n// Descriptor for NVARCHAR handling.\nClass NVarcharTypeDescriptor;\n// Descriptor for REAL handling.\nClass RealTypeDescriptor;\n// Descriptor for SMALLINT handling.\nClass SmallIntTypeDescriptor;\n// \nClass SqlTypeDescriptorRegistry;\n", "des": "Defines handling of the standard JDBC-defined types."}
{"index": 3148, "repo": "tika-core-2.8.0", "code": "package tika\n\n// Tika configuration tools.\npackage tika.config\n// Media type detection.\npackage tika.detect\n// Tika exception.\npackage tika.exception\n// Extraction of component documents.\npackage tika.extractor\n// Forked parser.\npackage tika.fork\n// IO utilities.\npackage tika.io\n// Multi-valued metadata container, and set of constant metadata fields.\npackage tika.metadata\n// Media type information.\npackage tika.mime\n// Tika parsers.\npackage tika.parser\n// SAX utilities.\npackage tika.sax\n// Utilities.\npackage tika.utils\n// Facade class for accessing Tika functionality.\nClass Tika;\n", "des": "Apache Tika."}
{"index": 3149, "repo": "tika-core-2.8.0", "code": "package config\n\n// Components that must do special processing across multiple fields at initialization time should implement this interface.\nInterface Initializable;\n// This is to be used to handle potential recoverable problems that might arise during initialization.\nInterface InitializableProblemHandler;\n// Interface for error handling strategies in service class loading.\nInterface LoadErrorHandler;\n// \nClass ConfigBase;\n// This is a serializable model class for parameters from configuration file.\nClass Param<T>;\n// This class stores metdata for Field annotation are used to map them to Param at runtime\nClass ParamField;\n// Internal utility class that Tika uses to look up service providers.\nClass ServiceLoader;\n// Bundle activator that adjust the class loading mechanism of the ServiceLoader class to work correctly in an OSGi environment.\nClass TikaActivator;\n// Parse xml config file.\nClass TikaConfig;\n// \nClass TikaConfigSerializer;\n// \nClass TikaTaskTimeout;\n// \nEnum TikaConfigSerializer.Mode;\n// Field annotation is a contract for binding Param value from Tika Configuration to an object.\nAnnotation Type Field;\n", "des": "Tika configuration tools."}
{"index": 3150, "repo": "tika-core-2.8.0", "code": "package detect\n\n// Content type detector.\nInterface Detector;\n// Character encoding detector.\nInterface EncodingDetector;\n// An input stream reader that automatically detects the character encoding to be used for converting bytes to characters.\nClass AutoDetectReader;\n// Content type detector that combines multiple different detection mechanisms.\nClass CompositeDetector;\n// \nClass CompositeEncodingDetector;\n// A composite detector based on all the Detector implementations available through the service provider mechanism.\nClass DefaultDetector;\n// A composite encoding detector based on all the EncodingDetector implementations available through the service provider mechanism.\nClass DefaultEncodingDetector;\n// A version of DefaultDetector for probabilistic mime detectors, which use statistical techniques to blend the results of differing underlying detectors when attempting to detect the type of a given file.\nClass DefaultProbDetector;\n// Dummy detector that returns application/octet-stream for all documents.\nClass EmptyDetector;\n// This runs the linux 'file' command against a file.\nClass FileCommandDetector;\n// Content type detection based on magic bytes, i.e.\nClass MagicDetector;\n// Content type detection based on the resource name.\nClass NameDetector;\n// \nClass NNExampleModelDetector;\n// \nClass NNTrainedModel;\n// \nClass NNTrainedModelBuilder;\n// Always returns the charset passed in via the initializer\nClass NonDetectingEncodingDetector;\n// \nClass OverrideDetector;\n// Content type detection of plain text documents.\nClass TextDetector;\n// Utility class for computing a histogram of the bytes seen in a stream.\nClass TextStatistics;\n// \nClass TrainedModel;\n// \nClass TrainedModelDetector;\n// Content type detection based on a content type hint.\nClass TypeDetector;\n// Utility class that uses a SAXParser to determine the namespace URI and local name of the root element of an XML file.\nClass XmlRootExtractor;\n// Detector to identify zero length files as application/x-zerovalue\nClass ZeroSizeFileDetector;\n", "des": "Media type detection."}
{"index": 3151, "repo": "tika-core-2.8.0", "code": "package exception\n\n// \nClass ZeroByteFileException.IgnoreZeroByteFileException;\n// Exception to be thrown when a document does not allow content extraction.\nClass AccessPermissionException;\n// This exception should be thrown when the parse absolutely, positively has to stop.\nClass CorruptedFileException;\n// \nClass EncryptedDocumentException;\n// \nClass FileTooLongException;\n// Use this to throw a SAXException in subclassed methods that don't throw SAXExceptions\nClass RuntimeSAXException;\n// Tika Config Exception is an exception to occur when there is an error in Tika config file and/or one or more of the parsers failed to initialize from that erroneous config.\nClass TikaConfigException;\n// Tika exception\nClass TikaException;\n// \nClass TikaMemoryLimitException;\n// Runtime/unchecked version of TimeoutException\nClass TikaTimeoutException;\n// Parsers should throw this exception when they encounter a file format that they do not support.\nClass UnsupportedFormatException;\n// \nClass WriteLimitReachedException;\n// Exception thrown by the AutoDetectParser when a file contains zero-bytes.\nClass ZeroByteFileException;\n", "des": "Tika exception."}
{"index": 3152, "repo": "tika-core-2.8.0", "code": "package extractor\n\n// Tika container extractor interface.\nInterface ContainerExtractor;\n// Interface for different document selection strategies for purposes like embedded document extraction by a ContainerExtractor instance.\nInterface DocumentSelector;\n// \nInterface EmbeddedDocumentExtractor;\n// \nInterface EmbeddedDocumentExtractorFactory;\n// Tika container extractor callback interface.\nInterface EmbeddedResourceHandler;\n// Interface for different filtering of embedded streams.\nInterface EmbeddedStreamTranslator;\n// Loads EmbeddedStreamTranslators via service loading.\nClass DefaultEmbeddedStreamTranslator;\n// Utility class to handle common issues with embedded documents.\nClass EmbeddedDocumentUtil;\n// An implementation of ContainerExtractor powered by the regular Parser API.\nClass ParserContainerExtractor;\n// Helper class for parsers of package archives or other compound document formats that support embedded or attached component documents.\nClass ParsingEmbeddedDocumentExtractor;\n// \nClass ParsingEmbeddedDocumentExtractorFactory;\n", "des": "Extraction of component documents."}
{"index": 3153, "repo": "tika-core-2.8.0", "code": "package fork\n\n// \nInterface ForkProxy;\n// \nInterface ForkResource;\n// \nClass ForkParser;\n// Lightweight, easily serializable class that contains enough information to build a ParserFactory\nClass ParserFactoryFactory;\n", "des": "Forked parser."}
{"index": 3154, "repo": "tika-core-2.8.0", "code": "package io\n\n// A factory which returns a fresh InputStream for the same resource each time.\nInterface InputStreamFactory;\n// Very slight modification of Commons' BoundedInputStream so that we can figure out if this hit the bound or not.\nClass BoundedInputStream;\n// General Endian Related Utilties.\nClass EndianUtils;\n// \nClass FilenameUtils;\n// \nClass IOUtils;\n// Stream wrapper that make it easy to read up to n bytes ahead from a stream that supports the mark feature.\nClass LookaheadInputStream;\n// Copied/pasted from the Apache Lucene/Solr project.\nClass MappedBufferCleaner;\n// A specialized input stream implementation which records the last portion read from an underlying stream.\nClass TailStream;\n// Utility class for tracking and ultimately closing or otherwise disposing a collection of temporary resources.\nClass TemporaryResources;\n// Input stream with extended capabilities.\nClass TikaInputStream;\n// \nClass EndianUtils.BufferUnderrunException;\n", "des": "IO utilities."}
{"index": 3155, "repo": "tika-core-2.8.0", "code": "package metadata\n\n// Until we can find a common standard, we'll use these options.\nInterface AccessPermissions;\n// Met keys from NCAR CCSM files in the Climate Forecast Convention.\nInterface ClimateForcast;\n// A collection of Creative Commons properties names.\nInterface CreativeCommons;\n// \nInterface Database;\n// A collection of Dublin Core metadata names.\nInterface DublinCore;\n// EPub properties collection.\nInterface Epub;\n// \nInterface ExternalProcess;\n// A collection of metadata elements for file system level metadata\nInterface FileSystem;\n// \nInterface Font;\n// Geographic schema.\nInterface Geographic;\n// \nInterface HTML;\n// A collection of HTTP header names.\nInterface HttpHeaders;\n// IPTC photo metadata schema.\nInterface IPTC;\n// Metadata for describing machines, such as their architecture, type and endian-ness\nInterface MachineMetadata;\n// A collection of Message related property names.\nInterface Message;\n// Office Document properties collection.\nInterface Office;\n// Core properties as defined in the Office Open XML specification part Two that are not in the DublinCore namespace.\nInterface OfficeOpenXMLCore;\n// Extended properties as defined in the Office Open XML specification part Four.\nInterface OfficeOpenXMLExtended;\n// XMP Paged-text schema.\nInterface PagedText;\n// PDF properties collection.\nInterface PDF;\n// XMP Photoshop metadata schema.\nInterface Photoshop;\n// QuattroPro properties collection.\nInterface QuattroPro;\n// \nInterface Rendering;\n// \nInterface RTFMetadata;\n// XMP Exif TIFF schema.\nInterface TIFF;\n// Contains a core set of basic Tika metadata properties, which all parsers will attempt to supply (where the file format permits).\nInterface TikaCoreProperties;\n// A collection of Tika metadata keys used in Mime Type resolution\nInterface TikaMimeKeys;\n// Metadata properties for paged text, metadata appropriate for an individual page (useful for embedded document handlers called on individual pages).\nInterface TikaPagedText;\n// \nInterface WARC;\n// WordPerfect properties collection.\nInterface WordPerfect;\n// \nInterface XMP;\n", "des": "Multi-valued metadata container, and set of constant metadata fields."}
{"index": 3156, "repo": "tika-core-2.8.0", "code": "package mime\n\n// Met Keys used by the MimeTypesReader.\nInterface MimeTypesReaderMetKeys;\n// A set of Hex encoding and decoding utility methods.\nClass HexCoDec;\n// Internet media type.\nClass MediaType;\n// Registry of known Internet media types.\nClass MediaTypeRegistry;\n// Internet media type.\nClass MimeType;\n// This class is a MimeType repository.\nClass MimeTypes;\n// Creates instances of MimeTypes.\nClass MimeTypesFactory;\n// A reader for XML files compliant with the freedesktop MIME-info DTD.\nClass MimeTypesReader;\n// Selector for combining different mime detection results based on probability\nClass ProbabilisticMimeDetectionSelector;\n// build class for probability parameters setting\nClass ProbabilisticMimeDetectionSelector.Builder;\n// A class to encapsulate MimeType related exceptions.\nClass MimeTypeException;\n", "des": "Media type information."}
{"index": 3157, "repo": "tika-core-2.8.0", "code": "package parser\n\n// External parser process.\npackage parser.external\n// Interface for digester.\nInterface DigestingParser.Digester;\n// This is used in AutoDetectParserConfig to (optionally) wrap the parser in a digesting parser.\nInterface DigestingParser.DigesterFactory;\n// Encodes byte array from a MessageDigest to String\nInterface DigestingParser.Encoder;\n// Tika parser interface.\nInterface Parser;\n// Interface for providing a password to a Parser for handling Encrypted and Password Protected Documents.\nInterface PasswordProvider;\n// \nInterface RenderingParser;\n// Abstract base class for parsers that use the AutoDetectReader and need to use the EncodingDetector configured by TikaConfig\nClass AbstractEncodingDetectorParser;\n// Abstract base class for parsers that call external processes.\nClass AbstractExternalProcessParser;\n// Abstract base class for new parsers.\nClass AbstractParser;\n// \nClass AutoDetectParser;\n// This config object can be used to tune how conservative we want to be when parsing data that is extremely compressible and resembles a ZIP bomb.\nClass AutoDetectParserConfig;\n// Factory for an AutoDetectParser\nClass AutoDetectParserFactory;\n// Composite parser that delegates parsing tasks to a component parser based on the declared content type of the incoming document.\nClass CompositeParser;\n// Decrypts the incoming document stream and delegates further parsing to another parser instance.\nClass CryptoParser;\n// A composite parser based on all the Parser implementations available through the service provider mechanism.\nClass DefaultParser;\n// Base class for parser implementations that want to delegate parts of the task of parsing an input document to another parser.\nClass DelegatingParser;\n// \nClass DigestingParser;\n// Dummy parser that always produces an empty XHTML document without even attempting to parse the given document stream.\nClass EmptyParser;\n// Dummy parser that always throws a TikaException without even attempting to parse the given document stream.\nClass ErrorParser;\n// \nClass NetworkParser;\n// Parse context.\nClass ParseContext;\n// Decorator base class for the Parser interface.\nClass ParserDecorator;\n// Use this class to store exceptions, warnings and other information during the parse.\nClass ParseRecord;\n// \nClass ParserFactory;\n// Parser decorator that post-processes the results from a decorated parser.\nClass ParserPostProcessor;\n", "des": "Tika parsers."}
{"index": 3158, "repo": "tika-core-2.8.0", "code": "package external\n\n// Consumer contract\nInterface ExternalParser.LineConsumer;\n// Met Keys used by the ExternalParsersConfigReader.\nInterface ExternalParsersConfigReaderMetKeys;\n// A Composite Parser that wraps up all the available External Parsers, and provides an easy way to access them.\nClass CompositeExternalParser;\n// Parser that uses an external program (like catdoc or pdf2txt) to extract text content and metadata from a given document.\nClass ExternalParser;\n// Builds up ExternalParser instances based on XML file(s) which define what to run, for what, and how to process any output metadata.\nClass ExternalParsersConfigReader;\n// Creates instances of ExternalParser based on XML configuration files.\nClass ExternalParsersFactory;\n", "des": "External parser process."}
{"index": 3159, "repo": "tika-core-2.8.0", "code": "package sax\n\n// XPath utilities\npackage sax.xpath\n// \nInterface ContentHandlerDecoratorFactory;\n// Interface to allow easier injection of code for getting a new ContentHandler\nInterface ContentHandlerFactory;\n// Internal interface that allows both character and ignorable whitespace content to be filtered the same way.\nInterface SafeContentHandler.Output;\n// \nInterface WriteLimiter;\n// This is a special handler to be used only with the RecursiveParserWrapper.\nClass AbstractRecursiveParserWrapperHandler;\n// Basic factory for creating common types of ContentHandlers\nClass BasicContentHandlerFactory;\n// Content handler decorator that only passes everything inside the XHTML <body/> tag to the underlying handler.\nClass BodyContentHandler;\n// Class to help de-obfuscate phone numbers in text.\nClass CleanPhoneText;\n// Decorator base class for the ContentHandler interface.\nClass ContentHandlerDecorator;\n// \nClass DIFContentHandler;\n// Content handler decorator that maps element QNames using a Map.\nClass ElementMappingContentHandler;\n// \nClass ElementMappingContentHandler.TargetElement;\n// Content handler decorator that prevents the EmbeddedContentHandler.startDocument() and EmbeddedContentHandler.endDocument() events from reaching the decorated handler.\nClass EmbeddedContentHandler;\n// A wrapper around a ContentHandler which will ignore normal SAX calls to EndDocumentShieldingContentHandler.endDocument(), and only fire them later.\nClass EndDocumentShieldingContentHandler;\n// Content handler decorator which wraps a TransformerHandler in order to allow the TITLE tag to render as <title></title> rather than <title/> which is accomplished by calling the ContentHandler.characters(char[], int, int) method with a length of 1 but a zero length char array.\nClass ExpandedTitleContentHandler;\n// \nClass Link;\n// Content handler that collects links from an XHTML document.\nClass LinkContentHandler;\n// Content handler decorator that always returns an empty stream from the OfflineContentHandler.resolveEntity(String, String) method to prevent potential network or other external resources from being accessed by an XML parser.\nClass OfflineContentHandler;\n// Class used to extract phone numbers while parsing.\nClass PhoneExtractingContentHandler;\n// This is the default implementation of AbstractRecursiveParserWrapperHandler.\nClass RecursiveParserWrapperHandler;\n", "des": "SAX utilities."}
{"index": 3160, "repo": "tika-core-2.8.0", "code": "package xpath\n\n// Final evaluation state of a .../@* XPath expression.\nClass AttributeMatcher;\n// Intermediate evaluation state of a .../*... XPath expression.\nClass ChildMatcher;\n// Composite XPath evaluation state.\nClass CompositeMatcher;\n// Final evaluation state of an XPath expression that targets an element.\nClass ElementMatcher;\n// XPath element matcher.\nClass Matcher;\n// Content handler decorator that only passes the elements, attributes, and text nodes that match the given XPath expression.\nClass MatchingContentHandler;\n// Final evaluation state of a .../@name XPath expression.\nClass NamedAttributeMatcher;\n// Intermediate evaluation state of a .../name... XPath expression.\nClass NamedElementMatcher;\n// Final evaluation state of a .../node() XPath expression.\nClass NodeMatcher;\n// Evaluation state of a ...//... XPath expression.\nClass SubtreeMatcher;\n// Final evaluation state of a .../text() XPath expression.\nClass TextMatcher;\n// Parser for a very simple XPath subset.\nClass XPathParser;\n", "des": "XPath utilities"}
{"index": 3161, "repo": "tika-core-2.8.0", "code": "package utils\n\n// This class contains utilities for dealing with tika annotations\nClass AnnotationUtils;\n// \nClass CharsetUtils;\n// \nClass CompareUtils;\n// Utility Class for Concurrency in Tika\nClass ConcurrentUtils;\n// Date related utility methods and constants\nClass DateUtils;\n// \nClass ExceptionUtils;\n// \nClass FileProcessResult;\n// Helper util methods for Parsers themselves.\nClass ParserUtils;\n// \nClass ProcessUtils;\n// Inspired from Nutch code class OutlinkExtractor.\nClass RegexUtils;\n// Wraps an input stream, reading it only once, but making it available for rereading an arbitrary number of times.\nClass RereadableInputStream;\n// Service Loading and Ordering related utils\nClass ServiceLoaderUtils;\n// \nClass StreamGobbler;\n// \nClass StringUtils;\n// Copied from commons-lang to avoid requiring the dependency\nClass SystemUtils;\n// Utility functions for reading XML.\nClass XMLReaderUtils;\n", "des": "Utilities."}
{"index": 3162, "repo": "gson-2.10.1", "code": "package gson\n\n// This package provides annotations that can be used with Gson.\npackage gson.annotations\n// This package provides utility classes for finding type information for generic types.\npackage gson.reflect\n// This package provides classes for processing JSON in an efficient streaming way.\npackage gson.stream\n// A strategy (or policy) definition that is used to decide whether or not a field or class should be serialized or deserialized as part of the JSON output/input.\nInterface ExclusionStrategy;\n// A mechanism for providing custom field naming in Gson.\nInterface FieldNamingStrategy;\n// This interface is implemented to create instances of a class that does not define a no-args constructor.\nInterface InstanceCreator<T>;\n// Context for deserialization that is passed to a custom deserializer during invocation of its JsonDeserializer.deserialize(JsonElement, Type, JsonDeserializationContext) method.\nInterface JsonDeserializationContext;\n// Interface representing a custom deserializer for JSON.\nInterface JsonDeserializer<T>;\n// Context for serialization that is passed to a custom serializer during invocation of its JsonSerializer.serialize(Object, Type, JsonSerializationContext) method.\nInterface JsonSerializationContext;\n// Interface representing a custom serializer for JSON.\nInterface JsonSerializer<T>;\n// Filter for determining whether reflection based serialization and deserialization is allowed for a class.\nInterface ReflectionAccessFilter;\n// A strategy that is used to control how numbers should be deserialized for Object and Number when a concrete type of the deserialized number is unknown in advance.\nInterface ToNumberStrategy;\n// Creates type adapters for set of related types.\nInterface TypeAdapterFactory;\n// A data object that stores attributes of a field.\nClass FieldAttributes;\n// This is the main class for using Gson.\nClass Gson;\n// Use this builder to construct a Gson instance when you need to set configuration options other than the default.\nClass GsonBuilder;\n// A class representing an array type in JSON.\nClass JsonArray;\n// A class representing an element of JSON.\nClass JsonElement;\n// A class representing a JSON null value.\nClass JsonNull;\n// A class representing an object type in Json.\nClass JsonObject;\n// A parser to parse JSON into a parse tree of JsonElements.\nClass JsonParser;\n// A class representing a JSON primitive value.\nClass JsonPrimitive;\n", "des": "This package provides the Gson class to convert Json to Java and vice-versa."}
{"index": 3163, "repo": "gson-2.10.1", "code": "package annotations\n\n// An annotation that indicates this member should be exposed for JSON serialization or deserialization.\nAnnotation Type Expose;\n// An annotation that indicates the Gson TypeAdapter to use with a class or field.\nAnnotation Type JsonAdapter;\n// An annotation that indicates this member should be serialized to JSON with the provided name value as its field name.\nAnnotation Type SerializedName;\n// An annotation that indicates the version number since a member or a type has been present.\nAnnotation Type Since;\n// An annotation that indicates the version number until a member or a type should be present.\nAnnotation Type Until;\n", "des": "This package provides annotations that can be used with Gson."}
{"index": 3164, "repo": "gson-2.10.1", "code": "package reflect\n\n// Represents a generic type T.\nClass TypeToken<T>;\n", "des": "This package provides utility classes for finding type information for generic types."}
{"index": 3165, "repo": "gson-2.10.1", "code": "package stream\n\n// Reads a JSON (RFC 7159) encoded value as a stream of tokens.\nClass JsonReader;\n// Writes a JSON (RFC 7159) encoded value to a stream, one token at a time.\nClass JsonWriter;\n// A structure, name or value type in a JSON-encoded string.\nEnum JsonToken;\n// Thrown when a reader encounters malformed JSON.\nClass MalformedJsonException;\n", "des": "This package provides classes for processing JSON in an efficient streaming way."}
{"index": 3166, "repo": "tomcat-api-10.1", "code": "package ant\n\n// This package contains a set of JMX Task implementations for Ant (version 1.6 or later) that can be used to interact with the Remote JMX JSR 160 RMI Adaptor to get/set attributes, invoke MBean operations and query for Mbeans inside a running instance of Tomcat.\npackage ant.jmx\n// \nClass AbstractCatalinaCommandTask;\n// Abstract base class for Ant tasks that interact with the Manager web application for dynamically deploying and undeploying applications.\nClass AbstractCatalinaTask;\n// Abstract base class to add output redirection support for Catalina Ant tasks.\nClass BaseRedirectorHelperTask;\n// Ant task that implements the /deploy command, supported by the Tomcat manager application.\nClass DeployTask;\n// Ant task that implements the /findleaks command, supported by the Tomcat manager application.\nClass FindLeaksTask;\n// Ant task that implements the /status command, supported by the mod_jk status (1.2.9) application.\nClass JKStatusUpdateTask;\n// Ant task that implements the JMX Get command (/jmxproxy/?\nClass JMXGetTask;\n// Ant task that implements the JMX Query command (/jmxproxy/?\nClass JMXQueryTask;\n// Ant task that implements the JMX Set command (/jmxproxy/?\nClass JMXSetTask;\n// Ant task that implements the /list command, supported by the Tomcat manager application.\nClass ListTask;\n// Ant task that implements the /reload command, supported by the Tomcat manager application.\nClass ReloadTask;\n// Ant task that implements the /resources command, supported by the Tomcat manager application.\nClass ResourcesTask;\n// Ant task that implements the /serverinfo command supported by the Tomcat manager application.\nClass ServerinfoTask;\n// Ant task that implements the /sessions command supported by the Tomcat manager application.\nClass SessionsTask;\n// Ant task that implements the /sslConnectorCiphers command supported by the Tomcat manager application.\nClass SslConnectorCiphersTask;\n// Ant task that implements the /start command, supported by the Tomcat manager application.\nClass StartTask;\n// Ant task that implements the /stop command, supported by the Tomcat manager application.\nClass StopTask;\n", "des": "This package contains a set of Task implementations for Ant (version 1.6.x or later) that can be used to interact with the Manager application to deploy, undeploy, list, reload, start and stop web applications from a running instance of Tomcat."}
{"index": 3167, "repo": "tomcat-api-10.1", "code": "package jmx\n\n// \nClass Arg;\n// Definition:\nClass JMXAccessorCondition;\n// \nClass JMXAccessorConditionBase;\n// Create new MBean at JMX JSR 160 MBeans Server.\nClass JMXAccessorCreateTask;\n// Definition\nClass JMXAccessorEqualsCondition;\n// Access JMX JSR 160 MBeans Server.\nClass JMXAccessorGetTask;\n// Access JMX JSR 160 MBeans Server.\nClass JMXAccessorInvokeTask;\n// Query for Mbeans.\nClass JMXAccessorQueryTask;\n// Access JMX JSR 160 MBeans Server.\nClass JMXAccessorSetTask;\n// Access JMX JSR 160 MBeans Server.\nClass JMXAccessorTask;\n// unregister an MBean at JMX JSR 160 MBeans Server.\nClass JMXAccessorUnregisterTask;\n", "des": "This package contains a set of JMX Task implementations for Ant (version 1.6 or later) that can be used to interact with the Remote JMX JSR 160 RMI Adaptor to get/set attributes, invoke MBean operations and query for Mbeans inside a running instance of Tomcat."}
{"index": 3168, "repo": "tomcat-api-10.1", "code": "package authenticator\n\n// Basic implementation of the Valve interface that enforces the <security-constraint> elements in the web application deployment descriptor.\nClass AuthenticatorBase;\n// An Authenticator and Valve implementation of HTTP BASIC Authentication, as outlined in RFC 7617: \"The 'Basic' HTTP Authentication Scheme\"\nClass BasicAuthenticator;\n// Parser for an HTTP Authorization header for BASIC authentication as per RFC 2617 section 2, and the Base64 encoded credentials as per RFC 2045 section 6.8.\nClass BasicAuthenticator.BasicCredentials;\n// \nClass Constants;\n// An Authenticator and Valve implementation of HTTP DIGEST Authentication, as outlined in RFC 7616: \"HTTP Digest Authentication\"\nClass DigestAuthenticator;\n// \nClass DigestAuthenticator.DigestInfo;\n// \nClass DigestAuthenticator.NonceInfo;\n// An Authenticator and Valve implementation of FORM BASED Authentication, as described in the Servlet API Specification.\nClass FormAuthenticator;\n// An Authenticator and Valve implementation that checks only security constraints not involving user authentication.\nClass NonLoginAuthenticator;\n// Object that saves the critical information from a request so that form-based authentication can reproduce it once the user has been authenticated.\nClass SavedRequest;\n// A Valve that supports a \"single sign on\" user experience, where the security identity of a user who successfully authenticates to one web application is propagated to other web applications in the same security domain.\nClass SingleSignOn;\n// A class that represents entries in the cache of authenticated users.\nClass SingleSignOnEntry;\n// \nClass SingleSignOnListener;\n// Key used by SSO to identify a session.\nClass SingleSignOnSessionKey;\n// A SPNEGO authenticator that uses the SPNEGO/Kerberos support built in to Java 6.\nClass SpnegoAuthenticator;\n// This class gets a gss credential via a privileged action.\nClass SpnegoAuthenticator.AcceptAction;\n// \nClass SpnegoAuthenticator.AuthenticateAction;\n// This class implements a hack around an incompatibility between the SPNEGO implementation in Windows and the SPNEGO implementation in Java 8 update 40 onwards.\nClass SpnegoAuthenticator.SpnegoTokenFixer;\n// An Authenticator and Valve implementation of authentication that utilizes SSL certificates to identify client users.\nClass SSLAuthenticator;\n", "des": "This package contains Authenticator implementations for the various supported authentication methods (BASIC, DIGEST, and FORM)."}
{"index": 3169, "repo": "tomcat-api-10.1", "code": "package ha\n\n// A CatalinaCluster interface allows to plug in and out the different cluster implementations\nInterface CatalinaCluster;\n// A ClusterDeployer interface allows to plug in and out the different deployment implementations\nInterface ClusterDeployer;\n// The common interface used by all cluster manager.\nInterface ClusterManager;\n// \nInterface ClusterMessage;\n// \nInterface ClusterSession;\n// Cluster valves are a simple extension to the Tomcat valve architecture with a small addition of being able to reference the cluster component in the container it sits in.\nInterface ClusterValve;\n// Receive SessionID cluster change from other backup node after primary session node is failed.\nClass ClusterListener;\n// \nClass ClusterMessageBase;\n// RuleSet for processing the contents of a Cluster definition element.\nClass ClusterRuleSet;\n", "des": "This package contains code for Clustering, the base class of a Cluster is org.apache.catalina.Cluster implementations of this class is done when implementing a new Cluster protocol"}
{"index": 3170, "repo": "tomcat-api-10.1", "code": "package realm\n\n// Provides an interface for retrieving a user name from an X509Certificate.\nInterface X509UsernameRetriever;\n// This Realm is intended for use with Authenticator implementations (SSLAuthenticator, SpnegoAuthenticator) that authenticate the user as well as obtain the user credentials.\nClass AuthenticatedUserRealm;\n// Realm implementation that contains one or more realms.\nClass CombinedRealm;\n// Implementation of Realm that works with any JDBC JNDI DataSource.\nClass DataSourceRealm;\n// Base implementation for the Tomcat provided CredentialHandlers.\nClass DigestCredentialHandlerBase;\n// Generic implementation of java.security.Principal that is available for use by Realm implementations.\nClass GenericPrincipal;\n// Implementation of the JAAS CallbackHandler interface, used to negotiate delivery of the username and credentials that were specified to our constructor.\nClass JAASCallbackHandler;\n// Implementation of the JAAS LoginModule interface, primarily for use in testing JAASRealm.\nClass JAASMemoryLoginModule;\n// Implementation of Realm that authenticates users via the Java Authentication and Authorization Service (JAAS).\nClass JAASRealm;\n// Implementation of Realm that works with a directory server accessed via the Java Naming and Directory Interface (JNDI) APIs.\nClass JNDIRealm;\n// Class holding the connection to the directory plus the associated non thread safe message formats.\nClass JNDIRealm.JNDIConnection;\n// A protected class representing a User\nClass JNDIRealm.User;\n// This class extends the CombinedRealm (hence it can wrap other Realms) to provide a user lock out mechanism if there are too many failed authentication attempts in a given period of time.\nClass LockOutRealm;\n// \nClass LockOutRealm.LockRecord;\n// Simple implementation of Realm that reads an XML file to configure the valid users, passwords, and roles.\nClass MemoryRealm;\n// RuleSet for recognizing the users defined in the XML file processed by MemoryRealm.\nClass MemoryRuleSet;\n", "des": "This package contains Realm implementations for the various supported realm technologies for authenticating users and identifying their associated roles."}
{"index": 3171, "repo": "tomcat-api-10.1", "code": "package servlets\n\n// CGI-invoking servlet for web applications, used to execute scripts which comply to the Common Gateway Interface (CGI) specification and are named in the path-info used to invoke this servlet.\nClass CGIServlet;\n// This is an input stream specifically for reading HTTP headers.\nClass CGIServlet.HTTPHeaderInputStream;\n// The default resource-serving servlet for most web applications, used to serve static resources such as HTML pages and images.\nClass DefaultServlet;\n// \nClass DefaultServlet.CompressionFormat;\n// Servlet which adds support for WebDAV level 2.\nClass WebdavServlet;\n", "des": "This package contains Servlets that implement some of the standard functionality provided by the Catalina servlet container."}
{"index": 3172, "repo": "tomcat-api-10.1", "code": "package session\n\n// Manifest constants for the org.apache.catalina.session package.\nClass Constants;\n// Implementation of the Store interface that stores serialized session objects in a database.\nClass DataSourceStore;\n// Concrete implementation of the Store interface that utilizes a file per saved Session in a configured directory.\nClass FileStore;\n// Minimal implementation of the Manager interface that supports no session persistence or distributable capabilities.\nClass ManagerBase;\n// \nClass ManagerBase.SessionTiming;\n// Implementation of the Manager interface that makes use of a Store to swap active Sessions to disk.\nClass PersistentManager;\n// Extends the ManagerBase class to implement most of the functionality required by a Manager which supports any kind of persistence, even if only for restarts.\nClass PersistentManagerBase;\n// Standard implementation of the Manager interface that provides simple session persistence across restarts of this component (such as when the entire server is shut down and restarted, or when a particular web application is reloaded.\nClass StandardManager;\n// Standard implementation of the Session interface.\nClass StandardSession;\n// Facade for the StandardSession object.\nClass StandardSessionFacade;\n// Abstract implementation of the Store interface to support most of the functionality required by a Store.\nClass StoreBase;\n// An exception that indicates the maximum number of active sessions has been reached and the server is refusing to create any new sessions.\nClass TooManyActiveSessionsException;\n", "des": "This package contains the standard Manager and Session implementations that represent the collection of active sessions and the individual sessions themselves, respectively, that are associated with a Context."}
{"index": 3173, "repo": "tomcat-api-10.1", "code": "package ssi\n\n// The interface that all SSI commands ( SSIEcho, SSIInclude, ...) must implement.\nInterface SSICommand;\n// Interface used by SSIMediator to talk to the 'outside world' ( usually a servlet )\nInterface SSIExternalResolver;\n// Class that extends ServletOutputStream, used as a wrapper from within SsiInclude\nClass ByteArrayServletOutputStream;\n// Represents a parsed expression.\nClass ExpressionParseTree;\n// Parses an expression string to return the individual tokens.\nClass ExpressionTokenizer;\n// An HttpServletResponseWrapper, used from SSIServletExternalResolver\nClass ResponseIncludeWrapper;\n// SSI command that handles all conditional directives.\nClass SSIConditional;\n// Implements the Server-side #exec command\nClass SSIConfig;\n// Return the result associated with the supplied Server Variable.\nClass SSIEcho;\n// Implements the Server-side #exec command\nClass SSIExec;\n// Filter to process SSI requests within a webpage.\nClass SSIFilter;\n// Implements the Server-side #flastmod command\nClass SSIFlastmod;\n// Implements the Server-side #fsize command\nClass SSIFsize;\n// Implements the Server-side #include command\nClass SSIInclude;\n// Allows the different SSICommand implementations to share data/talk to each other\nClass SSIMediator;\n// Implements the Server-side #printenv command\nClass SSIPrintenv;\n// The entry point to SSI processing.\nClass SSIProcessor;\n// Servlet to process SSI requests within a webpage.\nClass SSIServlet;\n// An implementation of SSIExternalResolver that is used with servlets.\nClass SSIServletExternalResolver;\n// \nClass SSIServletExternalResolver.ServletContextAndPath;\n// \nClass SSIServletRequestUtil;\n// Implements the Server-side #set command\nClass SSISet;\n// Exception used to tell SSIProcessor that it should stop processing SSI commands.\nClass SSIStopProcessingException;\n", "des": "This package contains code that is used by the SsiInvoker."}
{"index": 3174, "repo": "tomcat-api-10.1", "code": "package tribes\n\n// Channel interface A channel is a representation of a group of nodes all participating in some sort of communication with each other. The channel is the main API class for Tribes, this is essentially the only class that an application needs to be aware of.\nInterface Channel;\n// A ChannelInterceptor is an interceptor that intercepts messages and membership messages in the channel stack.\nInterface ChannelInterceptor;\n// \nInterface ChannelInterceptor.InterceptorEvent;\n// An interface to listens to incoming messages from a channel.\nInterface ChannelListener;\n// Message that is passed through the interceptor stack after the data serialized in the Channel object and then passed down to the interceptor and eventually down to the ChannelSender component\nInterface ChannelMessage;\n// ChannelReceiver Interface The ChannelReceiver interface is the data receiver component at the bottom layer, the IO layer (for layers see the javadoc for the Channel interface).\nInterface ChannelReceiver;\n// ChannelReceiver Interface The ChannelSender interface is the data sender component at the bottom layer, the IO layer (for layers see the javadoc for the Channel interface). The channel sender must support \"silent\" members, ie, be able to send a message to a member that is not in the membership, but is part of the destination parameter\nInterface ChannelSender;\n// The ErrorHandler class is used when sending messages that are sent asynchronously and the application still needs to get confirmation when the message was sent successfully or when a message errored out.\nInterface ErrorHandler;\n// Can be implemented by the ChannelListener and Membership listeners to receive heartbeat notifications from the Channel\nInterface Heartbeat;\n// \nInterface JmxChannel;\n// Channel interface A managed channel interface gives you access to the components of the channels such as senders, receivers, interceptors etc for configurations purposes\nInterface ManagedChannel;\n// The Member interface, defines a member in the group.\nInterface Member;\n// The MembershipListener interface is used as a callback to the membership service.\nInterface MembershipListener;\n// \nInterface MembershipProvider;\n// MembershipService Interface The MembershipService interface is the membership component at the bottom layer, the IO layer (for layers see the javadoc for the Channel interface).\nInterface MembershipService;\n// The listener to be registered with the ChannelReceiver, internal Tribes component.\nInterface MessageListener;\n", "des": "QuickStart"}
{"index": 3175, "repo": "tomcat-api-10.1", "code": "package valves\n\n// AccessLogElement writes the partial message into the buffer.\nInterface AbstractAccessLogValve.AccessLogElement;\n// Marks an AccessLogElement as needing to be have the value cached at the start of the request rather than just recorded at the end as the source data for the element may not be available at the end of the request.\nInterface AbstractAccessLogValve.CachedElement;\n// Abstract implementation of the Valve interface that generates a web server access log with the detailed line contents matching a configurable pattern.\nClass AbstractAccessLogValve;\n// write bytes sent, excluding HTTP headers - %b, %B\nClass AbstractAccessLogValve.ByteSentElement;\n// Write connection status when response is completed - %X\nClass AbstractAccessLogValve.ConnectionStatusElement;\n// write a specific cookie - %{xxx}c\nClass AbstractAccessLogValve.CookieElement;\n// Cache structure for formatted timestamps based on seconds.\nClass AbstractAccessLogValve.DateFormatCache;\n// write time taken to process the request - %D, %T\nClass AbstractAccessLogValve.ElapsedTimeElement;\n// write time until first byte is written (commit time) in millis - %F\nClass AbstractAccessLogValve.FirstByteTimeElement;\n// write incoming headers - %{xxx}i\nClass AbstractAccessLogValve.HeaderElement;\n// write HTTP status code of the response - %s\nClass AbstractAccessLogValve.HttpStatusCodeElement;\n// write local IP address - %A\nClass AbstractAccessLogValve.LocalAddrElement;\n// write remote logical username from identd (always returns '-') - %l\nClass AbstractAccessLogValve.LogicalUserNameElement;\n// write request method (GET, POST, etc.) - %m\nClass AbstractAccessLogValve.MethodElement;\n// write Query string (prepended with a '?'\nClass AbstractAccessLogValve.QueryElement;\n// write an attribute in the ServletRequest - %{xxx}r\nClass AbstractAccessLogValve.RequestAttributeElement;\n// write first line of the request (method and request URI) - %r\nClass AbstractAccessLogValve.RequestElement;\n// write requested URL path - %U\nClass AbstractAccessLogValve.RequestURIElement;\n", "des": "This package contains a variety of small Valve implementations that do not warrant being packaged separately."}
{"index": 3176, "repo": "tomcat-api-10.1", "code": "package logging\n\n// A simple logging interface abstracting logging APIs.\nInterface Log;\n// This is a modified LogFactory that uses a simple ServiceLoader based discovery mechanism with a default of using JDK based logging.\nClass LogFactory;\n// An exception that is thrown only if a suitable LogFactory or Log instance cannot be created by the corresponding factory methods.\nClass LogConfigurationException;\n", "des": "Overview"}
{"index": 3177, "repo": "tomcat-api-10.1", "code": "package naming\n\n// This package contains object factories used by the naming service.\npackage naming.factory\n// This package contains the URL context factory for the \"java\" namespace.\npackage naming.java\n// \nClass AbstractRef;\n// Handles the access control on the JNDI contexts.\nClass ContextAccessController;\n// Handles the associations : Object with a NamingContext Calling thread with a NamingContext Calling thread with object bound to the same naming context Thread context class loader with a NamingContext Thread context class loader with object bound to the same NamingContext The objects are typically Catalina Server or Context objects.\nClass ContextBindings;\n// Represents a reference address to an EJB.\nClass EjbRef;\n// Represents a reference handler for a web service.\nClass HandlerRef;\n// Represents a reference to lookup.\nClass LookupRef;\n// Parses names.\nClass NameParserImpl;\n// Catalina JNDI Context implementation.\nClass NamingContext;\n// Naming enumeration implementation.\nClass NamingContextBindingsEnumeration;\n// Naming enumeration implementation.\nClass NamingContextEnumeration;\n// Represents a binding in a NamingContext.\nClass NamingEntry;\n// Represents a reference address to a resource environment.\nClass ResourceEnvRef;\n// Represents a reference address to a resource.\nClass ResourceLinkRef;\n// Represents a reference address to a resource.\nClass ResourceRef;\n// Catalina JNDI Context implementation.\nClass SelectorContext;\n// Represents a reference web service.\nClass ServiceRef;\n// An internationalization / localization helper class which reduces the bother of handling ResourceBundles and takes care of the common cases of message formatting which otherwise require the creation of Object arrays and such.\nClass StringManager;\n// Represents a reference address to a transaction.\nClass TransactionRef;\n", "des": "This package contains a memory based naming service provider."}
{"index": 3178, "repo": "tomcat-api-10.1", "code": "package factory\n\n// Object factory for any Resource conforming to the JavaBean spec.\nClass BeanFactory;\n// Static constants for this package.\nClass Constants;\n// Object factory for resource links for shared data sources.\nClass DataSourceLinkFactory;\n// Simple wrapper class that will allow a user to configure a ResourceLink for a data source so that when DataSource.getConnection() is called, it will invoke DataSource.getConnection(String, String) with the preconfigured username and password.\nClass DataSourceLinkFactory.DataSourceHandler;\n// Object factory for EJBs.\nClass EjbFactory;\n// Abstract base class that provides common functionality required by sub-classes.\nClass FactoryBase;\n// Object factory for lookups.\nClass LookupFactory;\n// Factory class that creates a JNDI named JavaMail Session factory, which can be used for managing inbound and outbound electronic mail messages via JavaMail APIs.\nClass MailSessionFactory;\n// Object factory for EJBs.\nClass OpenEjbFactory;\n// Object factory for Resources env.\nClass ResourceEnvFactory;\n// Object factory for Resources.\nClass ResourceFactory;\n// Object factory for resource links.\nClass ResourceLinkFactory;\n// Factory class that creates a JNDI named javamail MimePartDataSource object which can be used for sending email using SMTP.\nClass SendMailFactory;\n// Object factory for User transactions.\nClass TransactionFactory;\n", "des": "This package contains object factories used by the naming service."}
{"index": 3179, "repo": "tomcat-api-10.1", "code": "package java\n\n// Context factory for the \"java:\" namespace.\nClass javaURLContextFactory;\n", "des": "This package contains the URL context factory for the \"java\" namespace."}
{"index": 3180, "repo": "tomcat-api-10.1", "code": "package dbcp2\n\n// This package contains one public class which is a ConnectionPoolDataSource (CPDS) implementation that can be used to adapt older Driver based JDBC implementations.\npackage dbcp2.cpdsadapter\n// This package contains two DataSources: PerUserPoolDataSource and SharedPoolDataSource which provide a database connection pool.\npackage dbcp2.datasources\n// This package provides support for pooling of ManagedConnections.\npackage dbcp2.managed\n// Interface to keep API compatibility.\nInterface BasicDataSourceMXBean;\n// Abstract factory interface for creating Connections.\nInterface ConnectionFactory;\n// Defines the methods that will be made available via JMX.\nInterface DataSourceMXBean;\n// Defines the attributes and methods that will be exposed via JMX for PoolableConnection instances.\nInterface PoolableConnectionMXBean;\n// Tracks connection usage for recovering and reporting abandoned connections.\nClass AbandonedTrace;\n// Basic implementation of javax.sql.DataSource that is configured via JavaBeans properties.\nClass BasicDataSource;\n// JNDI object factory that creates an instance of BasicDataSource that has been configured based on the RefAddr values of the specified Reference, which must match the names and data types of the BasicDataSource bean properties with the following exceptions: connectionInitSqls must be passed to this factory as a single String using semicolon to delimit the statements whereas BasicDataSource requires a collection of Strings.\nClass BasicDataSourceFactory;\n// Constants.\nClass Constants;\n// A DataSource-based implementation of ConnectionFactory.\nClass DataSourceConnectionFactory;\n// A base delegating implementation of CallableStatement.\nClass DelegatingCallableStatement;\n// A base delegating implementation of Connection.\nClass DelegatingConnection<C extends Connection>;\n// A base delegating implementation of DatabaseMetaData.\nClass DelegatingDatabaseMetaData;\n// A base delegating implementation of PreparedStatement.\nClass DelegatingPreparedStatement;\n// A base delegating implementation of ResultSet.\nClass DelegatingResultSet;\n// A base delegating implementation of Statement.\nClass DelegatingStatement;\n// A Driver-based implementation of ConnectionFactory.\nClass DriverConnectionFactory;\n// A DriverManager-based implementation of ConnectionFactory.\nClass DriverManagerConnectionFactory;\n", "des": "Database Connection Pool API."}
{"index": 3181, "repo": "tomcat-api-10.1", "code": "package cpdsadapter\n\n// An adapter for JDBC drivers that do not include an implementation of ConnectionPoolDataSource, but still include a DriverManager implementation.\nClass DriverAdapterCPDS;\n// \nClass PStmtKeyCPDS;\n", "des": "This package contains one public class which is a ConnectionPoolDataSource (CPDS) implementation that can be used to adapt older Driver based JDBC implementations."}
{"index": 3182, "repo": "tomcat-api-10.1", "code": "package datasources\n\n// The base class for SharedPoolDataSource and PerUserPoolDataSource.\nClass InstanceKeyDataSource;\n// A pooling DataSource appropriate for deployment within J2EE environment.\nClass PerUserPoolDataSource;\n// A JNDI ObjectFactory which creates SharedPoolDataSources\nClass PerUserPoolDataSourceFactory;\n// A pooling DataSource appropriate for deployment within J2EE environment.\nClass SharedPoolDataSource;\n// A JNDI ObjectFactory which creates SharedPoolDataSources\nClass SharedPoolDataSourceFactory;\n", "des": "This package contains two DataSources: PerUserPoolDataSource and SharedPoolDataSource which provide a database connection pool."}
{"index": 3183, "repo": "tomcat-api-10.1", "code": "package managed\n\n// A listener for transaction completion events.\nInterface TransactionContextListener;\n// XAConnectionFactory is an extension of ConnectionFactory used to create connections in a transaction managed environment.\nInterface XAConnectionFactory;\n// BasicManagedDataSource is an extension of BasicDataSource which creates ManagedConnections.\nClass BasicManagedDataSource;\n// An implementation of XAConnectionFactory which uses a real XADataSource to obtain connections and XAResources.\nClass DataSourceXAConnectionFactory;\n// An implementation of XAConnectionFactory which manages non-XA connections in XA transactions.\nClass LocalXAConnectionFactory;\n// LocalXAResource is a fake XAResource for non-XA connections.\nClass LocalXAConnectionFactory.LocalXAResource;\n// ManagedConnection is responsible for managing a database connection in a transactional environment (typically called \"Container Managed\").\nClass ManagedConnection<C extends Connection>;\n// The ManagedDataSource is a PoolingDataSource that creates ManagedConnections.\nClass ManagedDataSource<C extends Connection>;\n// PoolableConnection that unregisters from TransactionRegistry on Connection real destroy.\nClass PoolableManagedConnection;\n// A PoolableConnectionFactory that creates PoolableManagedConnections.\nClass PoolableManagedConnectionFactory;\n// TransactionContext represents the association between a single XAConnectionFactory and a Transaction.\nClass TransactionContext;\n// TransactionRegistry tracks Connections and XAResources in a transacted environment for a single XAConnectionFactory.\nClass TransactionRegistry;\n", "des": "This package provides support for pooling of ManagedConnections."}
{"index": 3184, "repo": "tomcat-api-10.1", "code": "package pool2\n\n// Object pooling API implementations.\npackage pool2.impl\n// A \"keyed\" pooling interface.\nInterface KeyedObjectPool<K,​V>;\n// An interface defining life-cycle methods for instances to be served by a KeyedObjectPool.\nInterface KeyedPooledObjectFactory<K,​V>;\n// A pooling simple interface.\nInterface ObjectPool<T>;\n// Defines the wrapper that is used to track the additional information, such as state, for the pooled objects.\nInterface PooledObject<T>;\n// An interface defining life-cycle methods for instances to be served by an ObjectPool.\nInterface PooledObjectFactory<T>;\n// Pools that unavoidably swallow exceptions may be configured with an instance of this listener so the user may receive notification of when this happens.\nInterface SwallowedExceptionListener;\n// Allows pooled objects to make information available about when and how they were used available to the object pool.\nInterface TrackedUse;\n// This interface may be implemented by an object pool to enable clients (primarily those clients that wrap pools to provide pools with extended features) to provide additional information to the pool relating to object using allowing more informed decisions and reporting to be made regarding abandoned objects.\nInterface UsageTracking<T>;\n// A base class for common functionality.\nClass BaseObject;\n// A simple base implementation of ObjectPool.\nClass BaseObjectPool<T>;\n// This class consists exclusively of static methods that operate on or return ObjectPool or KeyedObjectPool related interfaces.\nClass PoolUtils;\n// Destroy context provided to object factories via destroyObject and invalidateObject methods.\nEnum DestroyMode;\n// Provides all possible states of a PooledObject.\nEnum PooledObjectState;\n", "des": "Object pooling API."}
{"index": 3185, "repo": "tomcat-api-10.1", "code": "package impl\n\n// Strategy for obtaining and printing the current call stack.\nInterface CallStack;\n// The interface that defines the information about pooled objects that will be exposed via JMX.\nInterface DefaultPooledObjectInfoMBean;\n// To provide a custom eviction policy (i.e. something other than DefaultEvictionPolicy for a pool, users must provide an implementation of this interface that provides the required eviction policy.\nInterface EvictionPolicy<T>;\n// Defines the methods that will be made available via JMX.\nInterface GenericKeyedObjectPoolMXBean<K>;\n// Defines the methods that will be made available via JMX.\nInterface GenericObjectPoolMXBean;\n// Configuration settings for abandoned object removal.\nClass AbandonedConfig;\n// Base class that provides common functionality for GenericObjectPool and GenericKeyedObjectPool.\nClass BaseGenericObjectPool<T>;\n// Provides the implementation for the common attributes shared by the sub-classes.\nClass BaseObjectPoolConfig<T>;\n// Utility methods for CallStack.\nClass CallStackUtils;\n// Provides the default implementation of EvictionPolicy used by the pools.\nClass DefaultEvictionPolicy<T>;\n// This wrapper is used to track the additional information, such as state, for the pooled objects.\nClass DefaultPooledObject<T>;\n// Implementation of object that is used to provide information on pooled objects via JMX.\nClass DefaultPooledObjectInfo;\n// This class is used by pool implementations to pass configuration information to EvictionPolicy instances.\nClass EvictionConfig;\n// A configurable KeyedObjectPool implementation.\nClass GenericKeyedObjectPool<K,​T>;\n// A simple \"struct\" encapsulating the configuration for a GenericKeyedObjectPool.\nClass GenericKeyedObjectPoolConfig<T>;\n// A configurable ObjectPool implementation.\nClass GenericObjectPool<T>;\n// A simple \"struct\" encapsulating the configuration for a GenericObjectPool.\nClass GenericObjectPoolConfig<T>;\n// CallStack strategy using no-op implementations of all functionality.\nClass NoOpCallStack;\n// Extension of DefaultPooledObject to wrap pooled soft references.\nClass PooledSoftReference<T>;\n// A CallStack strategy using a SecurityManager.\nClass SecurityManagerCallStack;\n", "des": "Object pooling API implementations."}
{"index": 3186, "repo": "tomcat-api-10.1", "code": "package bcel\n\n// This package contains the classes that describe the structure of a Java class file and a class file parser.\npackage bcel.classfile\n// Constants for the project, mostly defined in the JVM specification.\nClass Const;\n", "des": "This package contains basic classes for the Byte Code Engineering Library and constants defined by the JVM specification."}
{"index": 3187, "repo": "tomcat-api-10.1", "code": "package classfile\n\n// \nClass AnnotationElementValue;\n// Represents one annotation in the annotation table\nClass AnnotationEntry;\n// base class for annotations\nClass Annotations;\n// \nClass ArrayElementValue;\n// \nClass ClassElementValue;\n// Wrapper class that parses a given Java .class file.\nClass ClassParser;\n// Abstract superclass for classes to represent the different constant types in the constant pool of a class file.\nClass Constant;\n// This class is derived from the abstract Constant and represents a reference to a (external) class.\nClass ConstantClass;\n// This class is derived from the abstract Constant and represents a reference to a Double object.\nClass ConstantDouble;\n// This class is derived from the abstract Constant and represents a reference to a float object.\nClass ConstantFloat;\n// This class is derived from the abstract Constant and represents a reference to an int object.\nClass ConstantInteger;\n// This class is derived from the abstract Constant and represents a reference to a long object.\nClass ConstantLong;\n// This class represents the constant pool, i.e., a table of constants, of a parsed classfile.\nClass ConstantPool;\n// Extends the abstract Constant to represent a reference to a UTF-8 encoded string.\nClass ConstantUtf8;\n// The element_value structure is documented at https://docs.oracle.com/javase/specs/jvms/se11/html/jvms-4.html#jvms-4.7.16.1\nClass ElementValue;\n// An annotation's element value pair.\nClass ElementValuePair;\n// \nClass EnumElementValue;\n// Represents a Java class, i.e., the data structures, constant pool, fields, methods and commands contained in a Java .class file.\nClass JavaClass;\n// \nClass SimpleElementValue;\n// Thrown when the BCEL attempts to read a class file and determines that a class is malformed or otherwise cannot be interpreted as a class file.\nClass ClassFormatException;\n", "des": "This package contains the classes that describe the structure of a Java class file and a class file parser."}
{"index": 3188, "repo": "tomcat-api-10.1", "code": "package buf\n\n// Input interface, used when the buffer is empty.\nInterface ByteChunk.ByteInputChannel;\n// When we need more space we'll either grow the buffer ( up to the limit ) or send it to a channel.\nInterface ByteChunk.ByteOutputChannel;\n// Input interface, used when the buffer is empty.\nInterface CharChunk.CharInputChannel;\n// When we need more space we'll either grow the buffer ( up to the limit ) or send it to a channel.\nInterface CharChunk.CharOutputChannel;\n// Base class for the *Chunk implementation to reduce duplication.\nClass AbstractChunk;\n// This class implements some basic ASCII character handling functions.\nClass Ascii;\n// This is a very basic ASN.1 parser that provides the limited functionality required by Tomcat.\nClass Asn1Parser;\n// \nClass Asn1Writer;\n// NIO based character decoder.\nClass B2CConverter;\n// Simple wrapper for a ByteBuffer that remembers if the buffer has been flipped or not.\nClass ByteBufferHolder;\n// \nClass ByteBufferUtils;\n// This class is used to represent a chunk of bytes, and utilities to manipulate byte[].\nClass ByteChunk;\n// NIO based character encoder.\nClass C2BConverter;\n// Utilities to manipulate char chunks.\nClass CharChunk;\n// \nClass CharsetCache;\n// \nClass CharsetUtil;\n// Tables useful when converting byte arrays to and from strings of hexadecimal digits.\nClass HexUtils;\n// This class is used to represent a subarray of bytes in an HTTP message.\nClass MessageBytes;\n// This class implements a String cache for ByteChunk and CharChunk.\nClass StringCache;\n// Utility methods to build a separated list from a given set (not java.util.Set) of inputs and return that list as a string or append it to an existing StringBuilder.\nClass StringUtils;\n// All URL decoding happens here.\nClass UDecoder;\n// Efficient implementation of a UTF-8 encoder.\nClass UEncoder;\n// Utility class for working with URIs and URLs.\nClass UriUtil;\n// Encodes characters as bytes using UTF-8.\nClass Utf8Encoder;\n// \nEnum EncodedSolidusHandling;\n// \nEnum UEncoder.SafeCharsSet;\n// \nClass ByteChunk.BufferOverflowException;\n", "des": "Buffers and Encodings"}
{"index": 3189, "repo": "tomcat-api-10.1", "code": "package binary\n\n// Provides Base64 encoding and decoding as defined by RFC 2045.\nClass Base64;\n// Abstract superclass for Base-N encoders and decoders.\nClass BaseNCodec;\n// Converts String to and from bytes using the encodings required by the Java specification.\nClass StringUtils;\n", "des": "Base64, Base32, Binary, and Hexadecimal String encoding and decoding."}
{"index": 3190, "repo": "tomcat-api-10.1", "code": "package tld\n\n// RulesSet for digesting implicit.tld files.\nClass ImplicitTldRuleSet;\n// Bare-bone model of a tag file loaded from a TLD.\nClass TagFileXml;\n// Common representation of a Tag Library Descriptor (TLD) XML file.\nClass TaglibXml;\n// Model of a tag define in a tag library descriptor.\nClass TagXml;\n// Parses a Tag Library Descriptor.\nClass TldParser;\n// A TLD Resource Path as defined in JSP 7.3.2.\nClass TldResourcePath;\n// RulesSet for digesting TLD files.\nClass TldRuleSet;\n// \nClass TldRuleSet.Attribute;\n// \nClass TldRuleSet.Variable;\n// Model of a Tag Library Validator from the XML descriptor.\nClass ValidatorXml;\n", "des": "Package containing a Java model of the XML for a Tag Library Descriptor."}
{"index": 3191, "repo": "tomcat-api-10.1", "code": "package web\n\n// \nInterface Injectable;\n// Defines an interface for the object that is added to the representation of a JNDI resource in web.xml to enable it to also be the implementation of that JNDI resource.\nInterface NamingResources;\n// Representation of a context initialization parameter that is configured in the server configuration file, rather than the application deployment descriptor.\nClass ApplicationParameter;\n// \nClass Constants;\n// Representation of an EJB resource reference for a web application, as represented in a <ejb-ref> element in the deployment descriptor.\nClass ContextEjb;\n// Representation of an application environment entry, as represented in an <env-entry> element in the deployment descriptor.\nClass ContextEnvironment;\n// Representation of a handler reference for a web service, as represented in a <handler> element in the deployment descriptor.\nClass ContextHandler;\n// Representation of a local EJB resource reference for a web application, as represented in a <ejb-local-ref> element in the deployment descriptor.\nClass ContextLocalEjb;\n// Representation of a resource reference for a web application, as represented in a <resource-ref> element in the deployment descriptor.\nClass ContextResource;\n// Representation of an application resource reference, as represented in an <res-env-refy> element in the deployment descriptor.\nClass ContextResourceEnvRef;\n// Representation of a resource link for a web application, as represented in a <ResourceLink> element in the server configuration file.\nClass ContextResourceLink;\n// Representation of a web service reference for a web application, as represented in a <service-ref> element in the deployment descriptor.\nClass ContextService;\n// Representation of an application resource reference, as represented in an <res-env-refy> element in the deployment descriptor.\nClass ContextTransaction;\n// Representation of an error page element for a web application, as represented in a <error-page> element in the deployment descriptor.\nClass ErrorPage;\n// Representation of a filter definition for a web application, as represented in a <filter> element in the deployment descriptor.\nClass FilterDef;\n// Representation of a filter mapping for a web application, as represented in a <filter-mapping> element in the deployment descriptor.\nClass FilterMap;\n", "des": "This package contains Java objects that represent complex data structures from the web application deployment descriptor file (web.xml)."}
{"index": 3192, "repo": "tomcat-api-10.1", "code": "package digester\n\n// \nInterface Digester.GeneratedCodeLoader;\n// A collection of interfaces, one per property, that enables the object being populated by the digester to signal to the digester that it supports the given property and that the digester should populate that property if available.\nInterface DocumentProperties;\n// The character encoding used by the source XML document.\nInterface DocumentProperties.Charset;\n// Interface for use with FactoryCreateRule.\nInterface ObjectCreationFactory;\n// Public interface defining a collection of Rule instances (and corresponding matching patterns) plus an implementation of a matching policy that selects the rules that match a particular pattern of nested elements discovered during parsing.\nInterface Rules;\n// Public interface defining a shorthand means of configuring a complete set of related Rule definitions, possibly associated with a particular namespace URI, in one operation.\nInterface RuleSet;\n// \nInterface SetPropertiesRule.Listener;\n// Abstract base class for ObjectCreationFactory implementations.\nClass AbstractObjectCreationFactory;\n// Imported copy of the ArrayStack class from Commons Collections, which was the only direct dependency from Digester.\nClass ArrayStack<E>;\n// Rule implementation that calls a method on an object on the stack (normally the top/parent object), passing arguments collected from subsequent CallParamRule rules or from the body of this element.\nClass CallMethodRule;\n// Rule implementation that saves a parameter for use by a surrounding CallMethodRule.\nClass CallParamRule;\n// A Digester processes an XML input stream by matching a series of element nesting patterns to execute Rules that have been added prior to the start of parsing.\nClass Digester;\n// A IntrospectionUtils.SecurePropertySource that uses environment variables to resolve expressions.\nClass EnvironmentPropertySource;\n// Rule implementation that uses an ObjectCreationFactory to create a new object which it pushes onto the object stack.\nClass FactoryCreateRule;\n// Rule implementation that creates a new object and pushes it onto the object stack.\nClass ObjectCreateRule;\n// Concrete implementations of this class implement actions to be taken when a corresponding nested pattern of XML elements has been matched.\nClass Rule;\n// Default implementation of the Rules interface that supports the standard rule matching behavior.\nClass RulesBase;\n// A IntrospectionUtils.SecurePropertySource that uses Kubernetes service bindings to resolve expressions.\nClass ServiceBindingPropertySource;\n", "des": "The Digester package provides for rules-based processing of arbitrary XML documents."}
{"index": 3193, "repo": "tomcat-api-10.1", "code": "package file\n\n// Abstracts configuration file storage.\nInterface ConfigurationSource;\n// This class is used to obtain InputStreams for configuration files from a given location String.\nClass ConfigFileLoader;\n// Represents a resource: a stream to the resource associated with its URI.\nClass ConfigurationSource.Resource;\n// This is a utility class to match file globs.\nClass Matcher;\n", "des": "This package contains utility classes for file handling."}
{"index": 3194, "repo": "tomcat-api-10.1", "code": "package http\n\n// NOTE: This code has been copied from commons-fileupload trunk 1.3 and commons-io 1.4 and package renamed to avoid clashes with any web apps that may wish to use these libraries.\npackage http.fileupload\n// \nInterface CookieProcessor;\n// A thread safe wrapper around SimpleDateFormat that does not make use of ThreadLocal and - broadly - only creates enough SimpleDateFormat objects to satisfy the concurrency requirements.\nClass ConcurrentDateFormat;\n// \nClass CookieProcessorBase;\n// Utility class to generate HTTP dates.\nClass FastHttpDateFormat;\n// \nClass HeaderUtil;\n// Memory-efficient repository for Mime Headers.\nClass MimeHeaders;\n// \nClass Parameters;\n// \nClass RequestUtil;\n// \nClass ResponseUtil;\n// \nClass Rfc6265CookieProcessor;\n// Server-side cookie representation.\nClass ServerCookie;\n// This class is not thread-safe.\nClass ServerCookies;\n// \nEnum Parameters.FailReason;\n// \nEnum SameSiteCookies;\n", "des": "Special utils for handling HTTP-specific entities - headers, parameters, cookies, etc."}
{"index": 3195, "repo": "tomcat-api-10.1", "code": "package fileupload\n\n// A disk-based implementation of the FileItem interface.\npackage fileupload.disk\n// Implementations and exceptions utils.\npackage fileupload.impl\n// An implementation of FileUpload for use in servlets conforming to JSR 53.\npackage fileupload.servlet\n// This package contains various IO related utility classes or methods, which are basically reusable and not necessarily restricted to the scope of a file upload.\npackage fileupload.util\n// This class represents a file or form item that was received within a multipart/form-data POST request.\nInterface FileItem;\n// A factory interface for creating FileItem instances.\nInterface FileItemFactory;\n// This class provides support for accessing the headers for a file or form item that was received within a multipart/form-data POST request.\nInterface FileItemHeaders;\n// Interface that will indicate that FileItem or FileItemStream implementations will accept the headers read for the item.\nInterface FileItemHeadersSupport;\n// An iterator, as returned by FileUploadBase.getItemIterator(RequestContext).\nInterface FileItemIterator;\n// This interface provides access to a file or form item that was received within a multipart/form-data POST request.\nInterface FileItemStream;\n// The ProgressListener may be used to display a progress bar or do stuff like that.\nInterface ProgressListener;\n// Abstracts access to the request information needed for file uploads.\nInterface RequestContext;\n// Enhanced access to the request information needed for file uploads, which fixes the Content Length data access in RequestContext.\nInterface UploadContext;\n// This class implements an output stream in which the data is written into a byte array.\nClass ByteArrayOutputStream;\n// An output stream which will retain data in memory until a specified threshold is reached, and only then commit it to disk.\nClass DeferredFileOutputStream;\n// High level API for processing file uploads.\nClass FileUpload;\n// High level API for processing file uploads.\nClass FileUploadBase;\n// General file manipulation utilities.\nClass FileUtils;\n// General IO stream manipulation utilities.\nClass IOUtils;\n// Low level API for processing file uploads.\nClass MultipartStream;\n// Internal class, which is used to invoke the ProgressListener.\nClass MultipartStream.ProgressNotifier;\n// A simple parser intended to parse sequences of name/value pairs.\nClass ParameterParser;\n", "des": "NOTE: This code has been copied from commons-fileupload trunk 1.3 and commons-io 1.4 and package renamed to avoid clashes with any web apps that may wish to use these libraries."}
{"index": 3196, "repo": "tomcat-api-10.1", "code": "package disk\n\n// The default implementation of the FileItem interface.\nClass DiskFileItem;\n// The default FileItemFactory implementation.\nClass DiskFileItemFactory;\n", "des": "A disk-based implementation of the FileItem interface."}
{"index": 3197, "repo": "tomcat-api-10.1", "code": "package impl\n\n// The iterator, which is returned by FileUploadBase.getItemIterator(RequestContext).\nClass FileItemIteratorImpl;\n// Default implementation of FileItemStream.\nClass FileItemStreamImpl;\n// This exception is thrown if a request contains more files than the specified limit.\nClass FileCountLimitExceededException;\n// Thrown to indicate that A files size exceeds the configured maximum.\nClass FileSizeLimitExceededException;\n// This exception is thrown for hiding an inner FileUploadException in an IOException.\nClass FileUploadIOException;\n// Thrown to indicate that the request is not a multipart request.\nClass InvalidContentTypeException;\n// Thrown to indicate an IOException.\nClass IOFileUploadException;\n// This exception is thrown, if a requests permitted size is exceeded.\nClass SizeException;\n// Thrown to indicate that the request size exceeds the configured maximum.\nClass SizeLimitExceededException;\n", "des": "Implementations and exceptions utils."}
{"index": 3198, "repo": "tomcat-api-10.1", "code": "package servlet\n\n// Provides access to the request information needed for a request made to an HTTP servlet.\nClass ServletRequestContext;\n", "des": "An implementation of FileUpload for use in servlets conforming to JSR 53."}
{"index": 3199, "repo": "tomcat-api-10.1", "code": "package util\n\n// MIME decoder implementation, imported and retailed from Apache Geronimo.\npackage util.mime\n// Interface of an object, which may be closed.\nInterface Closeable;\n// Default implementation of the FileItemHeaders interface.\nClass FileItemHeadersImpl;\n// An input stream, which limits its data size.\nClass LimitedInputStream;\n// Utility class for working with streams.\nClass Streams;\n", "des": "This package contains various IO related utility classes or methods, which are basically reusable and not necessarily restricted to the scope of a file upload."}
{"index": 3200, "repo": "tomcat-api-10.1", "code": "package mime\n\n// Utility class to decode MIME texts.\nClass MimeUtility;\n// Utility class to decode/encode character set on HTTP Header fields based on RFC 2231.\nClass RFC2231Utility;\n", "des": "MIME decoder implementation, imported and retailed from Apache Geronimo."}
{"index": 3201, "repo": "tomcat-api-10.1", "code": "package modeler\n\n// Implementation classes - should not be used directly.\npackage modeler.modules\n// Interface for modeler MBeans.\nInterface RegistryMBean;\n// Internal configuration information for an Attribute descriptor.\nClass AttributeInfo;\n// Implementation of NotificationFilter for attribute change notifications.\nClass BaseAttributeFilter;\n// Basic implementation of the DynamicMBean interface, which supports the minimal requirements of the interface contract.\nClass BaseModelMBean;\n// Implementation of NotificationBroadcaster for attribute change notifications.\nClass BaseNotificationBroadcaster;\n// Convenience base class for AttributeInfo and OperationInfo classes that will be used to collect configuration information for the ModelMBean beans exposed for management.\nClass FeatureInfo;\n// Internal configuration information for a managed bean (MBean) descriptor.\nClass ManagedBean;\n// An implementation of the MBean registry that effectively disables MBean registration.\nClass NoDescriptorRegistry;\n// Internal configuration information for a Notification descriptor.\nClass NotificationInfo;\n// Internal configuration information for an Operation descriptor.\nClass OperationInfo;\n// Internal configuration information for a Parameter descriptor.\nClass ParameterInfo;\n// Registry for modeler MBeans.\nClass Registry;\n// \nClass Util;\n", "des": "The Modeler component of the Commons project offers convenient support for configuring and instantiating Model MBeans (management beans), as described in the JMX Specification."}
{"index": 3202, "repo": "tomcat-api-10.1", "code": "package modules\n\n// \nClass MbeansDescriptorsDigesterSource;\n// \nClass MbeansDescriptorsIntrospectionSource;\n// Source for descriptor data.\nClass ModelerSource;\n", "des": "Implementation classes - should not be used directly."}
{"index": 3203, "repo": "tomcat-api-10.1", "code": "package scan\n\n// Base implementation of Jar for implementations that use a JarInputStream to access the JAR file.\nClass AbstractInputStreamJar;\n// String constants for the scan package.\nClass Constants;\n// Provide a mechanism to obtain objects that implement Jar.\nClass JarFactory;\n// Implementation of Jar that is optimised for file based JAR URLs that refer directly to a JAR file (e.g URLs of the form jar:file: ... .jar!\nClass JarFileUrlJar;\n// Implementation of Jar that is optimised for file based JAR URLs that refer to a JAR file nested inside a WAR (e.g URLs of the form jar:file: ... .war!\nClass JarFileUrlNestedJar;\n// When using a JarInputStream with an XML parser, the stream will be closed by the parser.\nClass NonClosingJarInputStream;\n// This class provides a wrapper around Jar that uses reference counting to close and re-create the wrapped Jar instance as required.\nClass ReferenceCountedJar;\n// \nClass StandardJarScanFilter;\n// The default JarScanner implementation scans the WEB-INF/lib directory followed by the provided classloader and then works up the classloader hierarchy.\nClass StandardJarScanner;\n// Implementation of Jar that is optimised for non-file based JAR URLs.\nClass UrlJar;\n", "des": "This package contains the common classes used to perform configuration scanning for Catalina and Jasper."}
{"index": 3204, "repo": "tomcat-api-10.1", "code": "package pojo\n\n// Internal implementation constants.\nClass Constants;\n// Base implementation (client and server have different concrete implementations) of the wrapper that converts a POJO instance into a WebSocket endpoint instance.\nClass PojoEndpointBase;\n// Wrapper class for instances of POJOs annotated with ClientEndpoint so they appear as standard Endpoint instances.\nClass PojoEndpointClient;\n// Wrapper class for instances of POJOs annotated with ServerEndpoint so they appear as standard Endpoint instances.\nClass PojoEndpointServer;\n// Common implementation code for the POJO message handlers.\nClass PojoMessageHandlerBase<T>;\n// Common implementation code for the POJO partial message handlers.\nClass PojoMessageHandlerPartialBase<T>;\n// ByteBuffer specific concrete implementation for handling partial messages.\nClass PojoMessageHandlerPartialBinary;\n// Text specific concrete implementation for handling partial messages.\nClass PojoMessageHandlerPartialText;\n// Common implementation code for the POJO whole message handlers.\nClass PojoMessageHandlerWholeBase<T>;\n// ByteBuffer specific concrete implementation for handling whole messages.\nClass PojoMessageHandlerWholeBinary;\n// PongMessage specific concrete implementation for handling whole messages.\nClass PojoMessageHandlerWholePong;\n// Text specific concrete implementation for handling whole messages.\nClass PojoMessageHandlerWholeText;\n// For a POJO class annotated with ServerEndpoint, an instance of this class creates and caches the method handler, method information and parameter information for the onXXX calls.\nClass PojoMethodMapping;\n// Stores the parameter type and name for a parameter that needs to be passed to an onXxx method of Endpoint.\nClass PojoPathParam;\n", "des": "This package provides the necessary plumbing to convert an annotated POJO into a WebSocket Endpoint."}
{"index": 3205, "repo": "tomcat-api-10.1", "code": "package server\n\n// Internal implementation constants.\nClass Constants;\n// \nClass DefaultServerEndpointConfigurator;\n// \nClass UpgradeUtil;\n// Extracts path parameters from URIs used to create web socket connections using the URI template defined for the associated Endpoint.\nClass UriTemplate;\n// In normal usage, this ServletContextListener does not need to be explicitly configured as the WsSci performs all the necessary bootstrap and installs this listener in the ServletContext.\nClass WsContextListener;\n// Handles the initial HTTP connection for WebSocket connections.\nClass WsFilter;\n// \nClass WsFrameServer;\n// Represents the request that this session was opened under.\nClass WsHandshakeRequest;\n// Servlet 3.1 HTTP upgrade handler for WebSocket connections.\nClass WsHttpUpgradeHandler;\n// This is the server side RemoteEndpoint implementation - i.e. what the server uses to send data to the client.\nClass WsRemoteEndpointImplServer;\n// Registers an interest in any class that is annotated with ServerEndpoint so that Endpoint can be published via the WebSocket server.\nClass WsSci;\n// Provides a per class loader (i.e. per web application) instance of a ServerContainer.\nClass WsServerContainer;\n// \nClass WsSessionListener;\n// Provides timeouts for asynchronous web socket writes.\nClass WsWriteTimeout;\n", "des": "Server-side specific implementation classes."}
{"index": 3206, "repo": "tomcat-servletapi-10.1", "code": "package servlet\n\n// The jakarta.servlet.http package contains a number of classes and interfaces that describe and define the contracts between a servlet class running under the HTTP protocol and the runtime environment provided for an instance of such a class by a conforming servlet container.\npackage servlet.http\n// Provides the context for asynchronous request handling\nInterface AsyncContext;\n// Listener for events associated with an AsyncContext.\nInterface AsyncListener;\n// A filter is an object that performs filtering tasks on either the request to a resource (a servlet or static content), or on the response from a resource, or both.\nInterface Filter;\n// A FilterChain is an object provided by the servlet container to the developer giving a view into the invocation chain of a filtered request for a resource.\nInterface FilterChain;\n// A filter configuration object used by a servlet container to pass information to a filter during initialization.\nInterface FilterConfig;\n// Interface through which a Filter may be further configured.\nInterface FilterRegistration;\n// Interface through which a Filter registered via one of the addFilter methods on ServletContext may be further configured.\nInterface FilterRegistration.Dynamic;\n// Receives notification of read events when using non-blocking IO.\nInterface ReadListener;\n// Common interface for the registration of Filters and Servlets.\nInterface Registration;\n// Interface through which a Servlet or Filter registered via one of the addServlet or addFilter methods, respectively, on ServletContext may be further configured.\nInterface Registration.Dynamic;\n// Defines an object that receives requests from the client and sends them to any resource (such as a servlet, HTML file, or JSP file) on the server.\nInterface RequestDispatcher;\n// Defines methods that all servlets must implement.\nInterface Servlet;\n// A servlet configuration object used by a servlet container to pass information to a servlet during initialization.\nInterface ServletConfig;\n// Provides information about the connection made to the Servlet container.\nInterface ServletConnection;\n// ServletContainerInitializers (SCIs) are registered via an entry in the file META-INF/services/jakarta.servlet.ServletContainerInitializer that must be included in the JAR file that contains the SCI implementation.\nInterface ServletContainerInitializer;\n", "des": "The jakarta.servlet package contains a number of classes and interfaces that describe and define the contracts between a servlet class and the runtime environment provided for an instance of such a class by a conforming servlet container."}
{"index": 3207, "repo": "tomcat-servletapi-10.1", "code": "package http\n\n// Represents how the request from which this object was obtained was mapped to the associated servlet.\nInterface HttpServletMapping;\n// Extends the ServletRequest interface to provide request information for HTTP servlets.\nInterface HttpServletRequest;\n// Extends the ServletResponse interface to provide HTTP-specific functionality in sending a response.\nInterface HttpServletResponse;\n// Provides a way to identify a user across more than one page request or visit to a Web site and to store information about that user.\nInterface HttpSession;\n// Objects that are bound to a session may listen to container events notifying them that sessions will be passivated and that session will be activated.\nInterface HttpSessionActivationListener;\n// This listener interface can be implemented in order to get notifications of changes to the attribute lists of sessions within this web application.\nInterface HttpSessionAttributeListener;\n// Causes an object to be notified when it is bound to or unbound from a session.\nInterface HttpSessionBindingListener;\n// Implementations of this interface are notified when an HttpSession's ID changes.\nInterface HttpSessionIdListener;\n// Implementations of this interface are notified of changes to the list of active sessions in a web application.\nInterface HttpSessionListener;\n// Interface between the HTTP upgrade process and the new protocol.\nInterface HttpUpgradeHandler;\n// This class represents a part as uploaded to the server as part of a multipart/form-data request body.\nInterface Part;\n// Builds a push request based on the HttpServletRequest from which this builder was obtained.\nInterface PushBuilder;\n// The interface used by an HttpUpgradeHandler to interact with an upgraded HTTP connection.\nInterface WebConnection;\n// Creates a cookie, a small amount of information sent by a servlet to a Web browser, saved by the browser, and later sent back to the server.\nClass Cookie;\n// Provides a base class that implements the Filter interface and ensures that the Request and Response are of type HttpServletRequest and HttpServletResponse respectively.\nClass HttpFilter;\n// Provides an abstract class to be subclassed to create an HTTP servlet suitable for a Web site.\nClass HttpServlet;\n// Provides a convenient implementation of the HttpServletRequest interface that can be subclassed by developers wishing to adapt the request to a Servlet.\nClass HttpServletRequestWrapper;\n// Provides a convenient implementation of the HttpServletResponse interface that can be subclassed by developers wishing to adapt the response from a Servlet.\nClass HttpServletResponseWrapper;\n", "des": "The jakarta.servlet.http package contains a number of classes and interfaces that describe and define the contracts between a servlet class running under the HTTP protocol and the runtime environment provided for an instance of such a class by a conforming servlet container."}
{"index": 3208, "repo": "commons-configuration2-2.9.0", "code": "package configuration2\n\n// In this package a Configuration implementation can be found that implements the DynaBean interface.\npackage configuration2.beanutils\n// This package contains the implementations of configuration builder classes used to create new Configuration objects.\npackage configuration2.builder\n// This package contains interfaces and classes related to data type conversions.\npackage configuration2.convert\n// This package contains interfaces and classes for receiving notifications about changes at configurations.\npackage configuration2.event\n// This package contains all exception classes used by this library.\npackage configuration2.ex\n// A package with helper classes used for interpolation (variable substitution).\npackage configuration2.interpol\n// A package with classes related to I/O operations.\npackage configuration2.io\n// Configuration classes supporting NeXT / OpenStep /GNUStep style configuration.\npackage configuration2.plist\n// This package contains classes and interfaces related to the reloading mechanism.\npackage configuration2.reloading\n// A package containing EntityResolvers.\npackage configuration2.resolver\n// A package containing integrations for the Spring Framework.\npackage configuration2.spring\n// A package containing interfaces and classes related to synchronization of configurations.\npackage configuration2.sync\n// A package with helper and utility classes used by hierarchical configurations.\npackage configuration2.tree\n// This package contains some implementations of the Configuration interface that are useful in web environments.\npackage configuration2.web\n// The main Configuration interface.\nInterface Configuration;\n// Comparator for configurations interface.\nInterface ConfigurationComparator;\n// A Configuration task that may throw a ConfigurationException.\nInterface ConfigurationConsumer<T>;\n// An interface for decoding encoded values from a configuration source.\nInterface ConfigurationDecoder;\n// An interface which combines the FileBased and Configuration interfaces.\nInterface FileBasedConfiguration;\n// An interface for mutable hierarchical configurations.\nInterface HierarchicalConfiguration<T>;\n// The main interface for accessing configuration data in a read-only fashion.\nInterface ImmutableConfiguration;\n// An interface for immutable hierarchical configurations.\nInterface ImmutableHierarchicalConfiguration;\n// Definition of an interface to be implemented by Configuration implementations which support a special initialization method.\nInterface Initializable;\n// Definition of an interface that allows customization of read and write operations.\nInterface PropertiesConfiguration.IOFactory;\n// Abstract configuration class.\nClass AbstractConfiguration;\n", "des": "The Configuration main package."}
{"index": 3209, "repo": "commons-configuration2-2.9.0", "code": "package beanutils\n\n// Definition of a context object storing all required information for the creation of a bean.\nInterface BeanCreationContext;\n// Definition of an interface for declaring a bean in a configuration file.\nInterface BeanDeclaration;\n// Definition of an interface for bean factories.\nInterface BeanFactory;\n// A helper class for creating bean instances that are defined in configuration files.\nClass BeanHelper;\n// A special implementation of the BeanDeclaration interface which allows combining multiple BeanDeclaration objects.\nClass CombinedBeanDeclaration;\n// The ConfigurationDynaBean dynamically reads and writes configurations properties from a wrapped configuration-collection Configuration instance.\nClass ConfigurationDynaBean;\n// The ConfigurationDynaClass dynamically determines properties for a ConfigurationDynaBean from a wrapped configuration-collection Configuration instance.\nClass ConfigurationDynaClass;\n// A class representing an argument for a constructor invocation to be used by a BeanDeclaration.\nClass ConstructorArg;\n// The default implementation of the BeanFactory interface.\nClass DefaultBeanFactory;\n// An implementation of the BeanDeclaration interface that is suitable for XML configuration files.\nClass XMLBeanDeclaration;\n", "des": "In this package a Configuration implementation can be found that implements the DynaBean interface."}
{"index": 3210, "repo": "commons-configuration2-2.9.0", "code": "package builder\n\n// A package containing the implementation of the builder for combined configurations.\npackage builder.combined\n// This package defines a fluent API for setting up fully configured configuration builders.\npackage builder.fluent\n// Definition of a properties interface for basic parameters which are supported by all ConfigurationBuilder implementations derived from BasicConfigurationBuilder.\nInterface BasicBuilderProperties<T>;\n// An interface to be implemented by objects which can be used to parameterize a ConfigurationBuilder.\nInterface BuilderParameters;\n// Definition of an interface for objects that can create ImmutableConfiguration or Configuration objects of a specific type.\nInterface ConfigurationBuilder<T extends ImmutableConfiguration>;\n// Definition of a properties interface for parameters of a database configuration.\nInterface DatabaseBuilderProperties<T>;\n// Definition of an interface for setting default values for specific configuration parameter objects.\nInterface DefaultParametersHandler<T>;\n// Definition of an interface that is evaluated by a ConfigurationBuilder to initialize event listeners.\nInterface EventListenerProvider;\n// Definition of a properties interface for parameters of file-based configurations.\nInterface FileBasedBuilderProperties<T>;\n// Definition of a parameters interface for hierarchical configurations.\nInterface HierarchicalBuilderProperties<T>;\n// Definition of a parameters interface for INI configurations.\nInterface INIBuilderProperties<T>;\n// Definition of a properties interface for parameters of a JNDI configuration.\nInterface JndiBuilderProperties<T>;\n// Definition of a parameters interface for properties configurations.\nInterface PropertiesBuilderProperties<T>;\n// Definition of an interface for objects which can create a ReloadingDetector.\nInterface ReloadingDetectorFactory;\n// Definition of a parameters interface for XML configurations.\nInterface XMLBuilderProperties<T>;\n// An implementation of BuilderParameters which handles the parameters of a ConfigurationBuilder common to all concrete Configuration implementations.\nClass BasicBuilderParameters;\n// An implementation of the ConfigurationBuilder interface which is able to create different concrete ImmutableConfiguration implementations based on reflection.\nClass BasicConfigurationBuilder<T extends ImmutableConfiguration>;\n// A class that allows the creation of configuration objects wrapping a ConfigurationBuilder.\nClass BuilderConfigurationWrapperFactory;\n// A base event class for events generated by a ConfigurationBuilder.\nClass ConfigurationBuilderEvent;\n// A specialized event class which is generated by a ConfigurationBuilder when a result configuration has been created.\nClass ConfigurationBuilderResultCreatedEvent;\n", "des": "This package contains the implementations of configuration builder classes used to create new Configuration objects."}
{"index": 3211, "repo": "commons-configuration2-2.9.0", "code": "package combined\n\n// Definition of a properties interface for the parameters of a combined configuration builder.\nInterface CombinedBuilderProperties<T>;\n// An interface for creating builders for configuration sources of a CombinedConfigurationBuilder.\nInterface ConfigurationBuilderProvider;\n// Definition of a properties interface for the parameters of a multiple file configuration builder.\nInterface MultiFileBuilderProperties<T>;\n// A fully-functional, reflection-based implementation of the ConfigurationBuilderProvider interface which can deal with the default tags defining configuration sources.\nClass BaseConfigurationBuilderProvider;\n// A specialized parameters object for a CombinedConfigurationBuilder.\nClass CombinedBuilderParametersImpl;\n// A specialized ConfigurationBuilder implementation that creates a CombinedConfiguration from multiple configuration sources defined by an XML-based configuration definition file.\nClass CombinedConfigurationBuilder;\n// A specialized ConfigurationBuilderProvider implementation which deals with combined configuration builders.\nClass CombinedConfigurationBuilderProvider;\n// A specialized BeanDeclaration implementation that represents the declaration of a configuration source.\nClass ConfigurationDeclaration;\n// A specialized implementation of ConfigurationBuilderProvider which determines the name of the result configuration class based on the extension of the file to load.\nClass FileExtensionConfigurationBuilderProvider;\n// A specialized parameters object for MultiFileConfigurationBuilder.\nClass MultiFileBuilderParametersImpl;\n// A specialized ConfigurationBuilder implementation providing access to multiple file-based configurations based on a file name pattern.\nClass MultiFileConfigurationBuilder<T extends FileBasedConfiguration>;\n// A specialized ConfigurationBuilderProvider implementation for integrating MultiFileConfigurationBuilder with CombinedConfigurationBuilder.\nClass MultiFileConfigurationBuilderProvider;\n// An extension of CombinedConfigurationBuilder which also supports reloading operations.\nClass ReloadingCombinedConfigurationBuilder;\n// A specialized MultiFileConfigurationBuilder implementation which adds support for reloading.\nClass ReloadingMultiFileConfigurationBuilder<T extends FileBasedConfiguration>;\n", "des": "A package containing the implementation of the builder for combined configurations."}
{"index": 3212, "repo": "commons-configuration2-2.9.0", "code": "package fluent\n\n// Definition of a parameters interface providing a fluent API for setting all properties of a builder for a combined configuration.\nInterface CombinedBuilderParameters;\n// Definition of a parameters interface providing a fluent API for setting all properties for a database configuration.\nInterface DatabaseBuilderParameters;\n// Definition of a parameters interface providing a fluent API for setting all properties of a configuration of a file-based configuration builder.\nInterface FileBasedBuilderParameters;\n// Definition of a parameters interface providing a fluent API for setting all properties for a hierarchical configuration.\nInterface HierarchicalBuilderParameters;\n// Definition of a parameters interface providing a fluent API for setting all properties for a INI configuration.\nInterface INIBuilderParameters;\n// Definition of a parameters interface providing a fluent API for setting all properties for a JNDI configuration.\nInterface JndiBuilderParameters;\n// Definition of a parameters interface providing a fluent API for setting all properties of a builder managing multiple file-based configurations.\nInterface MultiFileBuilderParameters;\n// Definition of a parameters interface providing a fluent API for setting all properties for a properties configuration.\nInterface PropertiesBuilderParameters;\n// Definition of a parameters interface providing a fluent API for setting all properties for a XML configuration.\nInterface XMLBuilderParameters;\n// A convenience class which simplifies the creation of standard configurations and their builders.\nClass Configurations;\n// A convenience class for creating parameter objects for initializing configuration builder objects.\nClass Parameters;\n", "des": "This package defines a fluent API for setting up fully configured configuration builders."}
{"index": 3213, "repo": "commons-configuration2-2.9.0", "code": "package convert\n\n// An interface defining the possible data type conversions supported by the configuration framework.\nInterface ConversionHandler;\n// Definition of an interface that controls the handling of list delimiters in configuration properties.\nInterface ListDelimiterHandler;\n// Definition of an interface used by ListDelimiterHandler to perform additional transformations on behalf of a configuration when a property value is escaped.\nInterface ValueTransformer;\n// An abstract base class for concrete ListDelimiterHandler implementations.\nClass AbstractListDelimiterHandler;\n// A default implementation of the ConversionHandler interface.\nClass DefaultConversionHandler;\n// The default implementation of the ListDelimiterHandler interface.\nClass DefaultListDelimiterHandler;\n// A specialized implementation of the ListDelimiterHandler interface which disables list splitting.\nClass DisabledListDelimiterHandler;\n// A specialized implementation of ListDelimiterHandler which simulates the list delimiter handling as it was used by PropertiesConfiguration in Commons Configuration 1.x.\nClass LegacyListDelimiterHandler;\n// A utility class to convert the configuration properties into any type.\nClass PropertyConverter;\n", "des": "This package contains interfaces and classes related to data type conversions."}
{"index": 3214, "repo": "commons-configuration2-2.9.0", "code": "package event\n\n// Definition of a generic event listener interface.\nInterface EventListener<T extends Event>;\n// An interface for configuration implementations which support registration of event listeners.\nInterface EventSource;\n// A base class for objects that can generate configuration events.\nClass BaseEventSource;\n// An event class that is used for reporting errors that occurred while processing configuration properties.\nClass ConfigurationErrorEvent;\n// An event class for reporting updates on a configuration object.\nClass ConfigurationEvent;\n// The base class for all events generated by this library.\nClass Event;\n// A class for managing event listeners for an event source.\nClass EventListenerList;\n// A special Iterator implementation used by the getEventListenerIterator() method.\nClass EventListenerList.EventListenerIterator<T extends Event>;\n// A data class holding information about an event listener registration.\nClass EventListenerRegistrationData<T extends Event>;\n// A class representing an event type.\nClass EventType<T extends Event>;\n", "des": "This package contains interfaces and classes for receiving notifications about changes at configurations."}
{"index": 3215, "repo": "commons-configuration2-2.9.0", "code": "package ex\n\n// Any exception that occurs while initializing a Configuration object.\nClass ConfigurationException;\n// A configuration related runtime exception.\nClass ConfigurationRuntimeException;\n// Thrown when a property is incompatible with the type requested.\nClass ConversionException;\n", "des": "This package contains all exception classes used by this library."}
{"index": 3216, "repo": "commons-configuration2-2.9.0", "code": "package interpol\n\n// Definition of an interface for looking up variables during interpolation.\nInterface Lookup;\n// A class that handles interpolation (variable substitution) for configuration objects.\nClass ConfigurationInterpolator;\n// Looks up constant fields in classes.\nClass ConstantLookup;\n// \nClass EnvironmentLookup;\n// Lookup that allows expressions to be evaluated.\nClass ExprLookup;\n// The key and corresponding object that will be made available to the JexlContext for use in expressions.\nClass ExprLookup.Variable;\n// List wrapper used to allow the Variables list to be created as beans in DefaultConfigurationBuilder.\nClass ExprLookup.Variables;\n// A simple value class defining a ConfigurationInterpolator.\nClass InterpolatorSpecification;\n// A builder class for creating instances of InterpolatorSpecification.\nClass InterpolatorSpecification.Builder;\n// \nClass SystemPropertiesLookup;\n// An enumeration class defining constants for built-in Lookup objects available for Configuration instances.\nEnum DefaultLookups;\n// A simple dummy Lookup implementation.\nEnum DummyLookup;\n", "des": "A package with helper classes used for interpolation (variable substitution)."}
{"index": 3217, "repo": "commons-configuration2-2.9.0", "code": "package io\n\n// Definition of an interface to be implemented by objects which know how to read and write themselves from or to a character stream.\nInterface FileBased;\n// A listener interface for receiving notifications about updates of a FileHandler.\nInterface FileHandlerListener;\n// An interface allowing applications to customize the process of locating a file.\nInterface FileLocationStrategy;\n// Definition of an interface to be implemented by FileBased objects which need access to the current FileLocator.\nInterface FileLocatorAware;\n// Some FileSystems allow options to be passed on File operations.\nInterface FileOptionsProvider;\n// Definition of an interface to be implemented by objects which support reading from an input stream.\nInterface InputStreamSupport;\n// A specialized implementation of FileLocationStrategy which checks whether the provided file name is already an absolute file name.\nClass AbsoluteNameLocationStrategy;\n// A specialized implementation of FileLocationStrategy which tries to construct a file path from the locator's base path and file name.\nClass BasePathLocationStrategy;\n// A specialized FileLocationStrategy implementation which searches for files on the class path.\nClass ClasspathLocationStrategy;\n// A specialized implementation of a FileLocationStrategy which encapsulates an arbitrary number of FileLocationStrategy objects.\nClass CombinedLocationStrategy;\n// A class providing basic logging capabilities.\nClass ConfigurationLogger;\n// FileSystem that uses java.io.File or HttpClient.\nClass DefaultFileSystem;\n// A class that manages persistence of an associated FileBased object.\nClass FileHandler;\n// An adapter class simplifying the implementation of custom FileHandlerListener classes.\nClass FileHandlerListenerAdapter;\n// A class describing the location of a file.\nClass FileLocator;\n// A typical builder implementation for creating FileLocator objects.\nClass FileLocator.FileLocatorBuilder;\n// A utility class providing helper methods related to locating files.\nClass FileLocatorUtils;\n// Abstract layer to allow various types of file systems.\nClass FileSystem;\n// A specialized implementation of FileLocationStrategy which uses the passed in FileSystem to locate a file.\nClass FileSystemLocationStrategy;\n// A specialized implementation of FileLocationStrategy which searches for files in the user's home directory or another special configurable directory.\nClass HomeDirectoryLocationStrategy;\n// A specialized implementation of FileLocationStrategy which checks whether a passed in FileLocator already has a defined URL.\nClass ProvidedURLLocationStrategy;\n", "des": "A package with classes related to I/O operations."}
{"index": 3218, "repo": "commons-configuration2-2.9.0", "code": "package plist\n\n// Token literal values and constants.\nInterface PropertyListParserConstants;\n// NeXT / OpenStep style configuration.\nClass PropertyListConfiguration;\n// Token Manager.\nClass PropertyListParserTokenManager;\n// An implementation of interface CharStream, where the stream is assumed to contain only ASCII characters (without unicode processing).\nClass SimpleCharStream;\n// Describes the input token stream.\nClass Token;\n// Property list file (plist) in XML FORMAT as used by Mac OS X (http://www.apple.com/DTDs/PropertyList-1.0.dtd).\nClass XMLPropertyListConfiguration;\n// This exception is thrown when parse errors are encountered.\nClass ParseException;\n// Token Manager Error.\nClass TokenMgrError;\n", "des": "Configuration classes supporting NeXT / OpenStep /GNUStep style configuration."}
{"index": 3219, "repo": "commons-configuration2-2.9.0", "code": "package reloading\n\n// MBean definition for managing configuration reload.\nInterface ManagedReloadingDetectorMBean;\n// Definition of an interface to be implemented by components which support reloading operations managed by a ReloadingController.\nInterface ReloadingControllerSupport;\n// An interface to be implemented by objects which can detect whether a reload operation is required.\nInterface ReloadingDetector;\n// A specialized ReloadingController implementation which manages an arbitrary number of other ReloadingController objects.\nClass CombinedReloadingController;\n// A specialized implementation of ReloadingDetector which monitors a file specified by a FileHandler.\nClass FileHandlerReloadingDetector;\n// A strategy to reload configuration based on management requests.\nClass ManagedReloadingDetector;\n// A timer-based trigger for reloading checks.\nClass PeriodicReloadingTrigger;\n// A class for adding support for reload operations in a generic way.\nClass ReloadingController;\n// An event that is fired when a reload operation is required.\nClass ReloadingEvent;\n// A file-based reloading strategy that uses Commons VFS to determine when a file was changed.\nClass VFSFileHandlerReloadingDetector;\n", "des": "This package contains classes and interfaces related to the reloading mechanism."}
{"index": 3220, "repo": "commons-configuration2-2.9.0", "code": "package resolver\n\n// Interface used for registering and retrieving PUBLICID to URL mappings.\nInterface EntityRegistry;\n// Interface that identifies the class as using an EntityResolver\nInterface EntityResolverSupport;\n// Thin wrapper around xml commons CatalogResolver to allow list of catalogs to be provided.\nClass CatalogResolver;\n// Overrides the Catalog implementation to use the underlying FileSystem.\nClass CatalogResolver.Catalog;\n// Extends the CatalogManager to make the FileSystem and base directory accessible.\nClass CatalogResolver.CatalogManager;\n// The DefaultEntityResolver used by XML Configurations.\nClass DefaultEntityResolver;\n", "des": "A package containing EntityResolvers."}
{"index": 3221, "repo": "commons-configuration2-2.9.0", "code": "package spring\n\n// FactoryBean which wraps a Commons CompositeConfiguration object for usage with PropertiesLoaderSupport.\nClass ConfigurationPropertiesFactoryBean;\n// Allow use of Apache Commons Configuration Objects as Spring PropertySources\nClass ConfigurationPropertySource;\n", "des": "A package containing integrations for the Spring Framework."}
{"index": 3222, "repo": "commons-configuration2-2.9.0", "code": "package sync\n\n// An interface controlling synchronization of configuration instances.\nInterface Synchronizer;\n// Definition of an interface for objects that can be associated with a Synchronizer.\nInterface SynchronizerSupport;\n// A special implementation of Synchronizer based on the JDK's ReentrantReadWriteLock class.\nClass ReadWriteSynchronizer;\n// An enumeration used by SynchronizerSupport to specify how an object is locked.\nEnum LockMode;\n// An implementation of the Synchronizer interface which does not perform any synchronization.\nEnum NoOpSynchronizer;\n", "des": "A package containing interfaces and classes related to synchronization of configurations."}
{"index": 3223, "repo": "commons-configuration2-2.9.0", "code": "package tree\n\n// This package contains the XPathExpressionEngine class which enables XPATH support for querying configuration properties.\npackage tree.xpath\n// Definition of a Visitor interface for a configuration node structure.\nInterface ConfigurationNodeVisitor<T>;\n// Definition of an interface for evaluating keys for hierarchical configurations.\nInterface ExpressionEngine;\n// A specialized version of the NodeModelSupport interface which allows querying an InMemoryNodeModel.\nInterface InMemoryNodeModelSupport;\n// Definition of an interface for accessing the data of a configuration node.\nInterface NodeHandler<T>;\n// Definition of an interface which allows resolving a (property) key for different manipulating operations.\nInterface NodeKeyResolver<T>;\n// An interface for matching nodes based on specific criteria.\nInterface NodeMatcher<C>;\n// Definition of an interface describing a model based on a nodes structure.\nInterface NodeModel<T>;\n// An interface to be implemented by objects that support a NodeModel.\nInterface NodeModelSupport<T>;\n// An extension of the NodeHandler interface which allows access to so-called references stored for a node.\nInterface ReferenceNodeHandler;\n// A simple adapter class that simplifies writing custom node visitor implementations.\nClass ConfigurationNodeVisitorAdapter<T>;\n// A simple class that supports creation of and iteration on configuration keys supported by a DefaultExpressionEngine object.\nClass DefaultConfigurationKey;\n// A default implementation of the ExpressionEngine interface providing the \"native\" expression language for hierarchical configurations.\nClass DefaultExpressionEngine;\n// A class representing the various symbols that are supported in keys recognized by DefaultExpressionEngine.\nClass DefaultExpressionEngineSymbols;\n// A builder class for creating instances of DefaultExpressionEngineSymbols.\nClass DefaultExpressionEngineSymbols.Builder;\n// An immutable default implementation for configuration nodes.\nClass ImmutableNode;\n// A builder class for creating instances of ImmutableNode.\nClass ImmutableNode.Builder;\n// A specialized node model implementation which operates on ImmutableNode structures.\nClass InMemoryNodeModel;\n// A specialized implementation of the NodeCombiner interface that performs a merge from two passed in node hierarchies.\nClass MergeCombiner;\n// A simple data class used by ExpressionEngine to store the results of the prepareAdd() operation.\nClass NodeAddData<T>;\n// A base class for node combiner implementations.\nClass NodeCombiner;\n", "des": "A package with helper and utility classes used by hierarchical configurations."}
{"index": 3224, "repo": "commons-configuration2-2.9.0", "code": "package xpath\n\n// Implementation of the NodePointerFactory interface for configuration nodes.\nClass ConfigurationNodePointerFactory;\n// A specialized implementation of the ExpressionEngine interface that is able to evaluate XPATH expressions.\nClass XPathExpressionEngine;\n", "des": "This package contains the XPathExpressionEngine class which enables XPATH support for querying configuration properties."}
{"index": 3225, "repo": "commons-configuration2-2.9.0", "code": "package web\n\n// A configuration wrapper to read applet parameters.\nClass AppletConfiguration;\n// A configuration wrapper around a ServletConfig.\nClass ServletConfiguration;\n// A configuration wrapper to read the initialization parameters of a servlet context.\nClass ServletContextConfiguration;\n// A configuration wrapper around a FilterConfig.\nClass ServletFilterConfiguration;\n// A configuration wrapper to read the parameters of a servlet request.\nClass ServletRequestConfiguration;\n", "des": "This package contains some implementations of the Configuration interface that are useful in web environments."}
{"index": 3226, "repo": "commons-release-plugin-1.8.1", "code": "package plugin\n\n// This package contains all the maven mojos for the commons-release-plugin.\npackage plugin.mojos\n// Contains classes that take our velocity templates and render's them to a Writer class.\npackage plugin.velocity\n// Shared static functions for all of our Mojos.\nClass SharedFunctions;\n", "des": "Base package for the commons-release-plugin."}
{"index": 3227, "repo": "commons-release-plugin-1.8.1", "code": "package mojos\n\n// The purpose of this Maven mojo is to detach the artifacts generated by the maven-assembly-plugin, which for the Apache Commons Project do not get uploaded to Nexus, and putting those artifacts in the dev distribution location for Apache projects.\nClass CommonsDistributionDetachmentMojo;\n// This class checks out the dev distribution location, copies the distributions into that directory structure under the target/commons-release-plugin/scm directory.\nClass CommonsDistributionStagingMojo;\n// \nClass CommonsSiteCompressionMojo;\n// This class checks out the dev distribution location, checks whether anything exists in the distribution location, and if it is non-empty it deletes all the resources there.\nClass CommonsStagingCleanupMojo;\n", "des": "This package contains all the maven mojos for the commons-release-plugin."}
{"index": 3228, "repo": "commons-release-plugin-1.8.1", "code": "package velocity\n\n// This class' purpose is to generate the HEADER.html that moves along with the release for the sake of downloading the release from the distribution area.\nClass HeaderHtmlVelocityDelegate;\n// A builder class for instantiation of the HeaderHtmlVelocityDelegate.\nClass HeaderHtmlVelocityDelegate.HeaderHtmlVelocityDelegateBuilder;\n// This class' purpose is to generate the README.html that moves along with the release for the sake of downloading the release from the distribution area.\nClass ReadmeHtmlVelocityDelegate;\n// A builder class for instantiation of the ReadmeHtmlVelocityDelegate.\nClass ReadmeHtmlVelocityDelegate.ReadmeHtmlVelocityDelegateBuilder;\n", "des": "Contains classes that take our velocity templates and render's them to a Writer class."}
{"index": 3229, "repo": "opencms-core-15.0", "code": "package rpc\n\n// \nAnnotation Type SynchronizedRpcRequest;\n", "des": "Contains the compile time classes required to allow synchronous RPC calls."}
{"index": 3230, "repo": "opencms-core-15.0", "code": "package shared\n\n// Contains the acacia editor RPC service interfaces.\npackage shared.rpc\n// Interface to access serial date values easily.\nInterface I_CmsSerialDateValue;\n// The base class for implementations of serial date values.\nClass A_CmsSerialDateValue;\n// The attribute configuration.\nClass CmsAttributeConfiguration;\n// Contains all information defining a content entity type.\nClass CmsContentDefinition;\n// Serializable entity implementation.\nClass CmsEntity;\n// Serializable entity attribute implementation.\nClass CmsEntityAttribute;\n// Value change event for entities with an additional field that indicates the type of change.\nClass CmsEntityChangeEvent;\n// The entity HTML representation including validation data.\nClass CmsEntityHtml;\n// Utility methods for the serial date widget.\nClass CmsSerialDateUtil;\n// Form tab information bean.\nClass CmsTabInfo;\n// CmsEntity attribute type data.\nClass CmsType;\n// The entity validation result containing all errors and warnings for a set of entities.\nClass CmsValidationResult;\n// Helper with methods commonly used in editor widgets.\nClass CmsWidgetUtil;\n// The JSON keys used in the JSON representation of serial date specifications.\nClass I_CmsSerialDateValue.JsonKey;\n// Enum indicating the type of changes.\nEnum CmsEntityChangeEvent.ChangeType;\n// Different types of serial dates.\nEnum I_CmsSerialDateValue.DateType;\n// Different types of conditions how serial dates can end.\nEnum I_CmsSerialDateValue.EndType;\n// Months as enumeration.\nEnum I_CmsSerialDateValue.Month;\n// Type of the series.\nEnum I_CmsSerialDateValue.PatternType;\n// Enumeration representing the week days.\nEnum I_CmsSerialDateValue.WeekDay;\n// Possible weeks of a month.\nEnum I_CmsSerialDateValue.WeekOfMonth;\n", "des": "Contains the acacia editor shared client/server classes."}
{"index": 3231, "repo": "opencms-core-15.0", "code": "package rpc\n\n// The content service used to load and persist entity and type information.\nInterface I_CmsContentService;\n// The content service used to load and persist entity and type information.\nInterface I_CmsContentServiceAsync;\n// Synchronous interface for the serial date service.\nInterface I_CmsSerialDateService;\n// Asynchronous interface for the serial date service.\nInterface I_CmsSerialDateServiceAsync;\n", "des": "Contains the acacia editor RPC service interfaces."}
{"index": 3232, "repo": "opencms-core-15.0", "code": "package configuration\n\n// Classes for handling formatter configurations.\npackage configuration.formatters\n// Interface for a single named configuration object that can either be merged with other configuration objects or disable a configuration object with the same name.\nInterface I_CmsConfigurationObject<X extends I_CmsConfigurationObject<X>>;\n// This is interface is intended to be used in combination with the CmsGlobalConfigurationCacheEventHandler class.\nInterface I_CmsGlobalConfigurationCache;\n// An immutable object which represents the complete ADE configuration (sitemap and module configurations) at a certain instant in time.\nClass CmsADEConfigCacheState;\n// A class which represents the accessible configuration data at a given point in a sitemap.\nClass CmsADEConfigData;\n// Represents a parsed sitemap or module configuration.\nClass CmsADEConfigDataInternal;\n// Represents the value of an attribute, with additional information about where the value originated from.\nClass CmsADEConfigDataInternal.AttributeValue;\n// Represents a sequence of inherited module/sitemap configurations, together with an index into that list.\nClass CmsADEConfigurationSequence;\n// This is the main class used to access the ADE configuration and also accomplish some other related tasks like loading/saving favorite and recent lists.\nClass CmsADEManager;\n// A class to parse ADE sitemap or module configuration files and create configuration objects from them.\nClass CmsConfigurationReader;\n// A bean which represents the location configured for content elements of a specific type in a sitemap configuration.\nClass CmsContentFolderDescriptor;\n// A cache which stores structure ids for URL names.\nClass CmsDetailNameCache;\n// Represents a element view for the container page editor.\nClass CmsElementView;\n// The element view comparator.\nClass CmsElementView.ElementViewComparator;\n// Helper class for formatter-related functionality.\nClass CmsFormatterUtils;\n// Helper class for computing dynamic function availability based on sitemap configuration settings.\nClass CmsFunctionAvailability;\n// Bean for representing a named dynamic function reference from the configuration.\nClass CmsFunctionReference;\n// This event handler manages cache instances which are instances of the interface I_CmsGlobalConfigurationCache.\nClass CmsGlobalConfigurationCacheEventHandler;\n// This class contains the model page configuration for a sitemap region.\nClass CmsModelPageConfig;\n", "des": "Contains the ade configuration classes."}
{"index": 3233, "repo": "opencms-core-15.0", "code": "package formatters\n\n// Parses formatter beans from formatter configuration XML contents.\nClass CmsFormatterBeanParser;\n// This class represents the changes which can be made to formatters in a sitemap configuration file.\nClass CmsFormatterChangeSet;\n// A cache object which holds a collection of formatter configuration beans read from the VFS.\nClass CmsFormatterConfigurationCache;\n// Represents the currently cached collection of all formatter beans extracted from formatter configuration files.\nClass CmsFormatterConfigurationCacheState;\n// Helper class for keeping track of which keys map to which formatters, and which formatters are active, when evaluating the sitemap configuration.\nClass CmsFormatterIndex;\n// Contains the setting-related data for a formatter bean.\nClass CmsSettingConfiguration;\n// A pair consisting of the include name of a setting definition and the formatter key (possibly null) for which the setting should be used, for use as a map key in a map of setting definitions.\nClass CmsSharedSettingKey;\n// Exception for the errors in the configuration file not covered by other exception types.\nClass CmsFormatterBeanParser.ParseException;\n", "des": "Classes for handling formatter configurations."}
{"index": 3234, "repo": "opencms-core-15.0", "code": "package containerpage\n\n// Contains classes used for reading and caching inheritance groups.\npackage containerpage.inherited\n// Contains the shared container page editor classes.\npackage containerpage.shared\n// Checks whether types are enabled for Add/New dialogs.\nInterface I_CmsResourceTypeEnabledCheck;\n// Convenience class to access the localized messages of this OpenCms package.\nClass ClientMessages;\n// Helper class for preparing the resource type lists for gallery and new dialog.\nClass CmsAddDialogTypeHelper;\n// Action element for container-page editor includes.\nClass CmsContainerpageActionElement;\n// The RPC service used by the container-page editor.\nClass CmsContainerpageService;\n// This is a simple helper class to more easily produce container page beans to be used as detail-only containers.\nClass CmsDetailOnlyContainerPageBuilder;\n// Bean containing the information for a single container.\nClass CmsDetailOnlyContainerPageBuilder.ContainerInfo;\n// Static utility class for functions related to detail-only containers.\nClass CmsDetailOnlyContainerUtil;\n// Utility class to generate the element data objects used within the container-page editor.\nClass CmsElementUtil;\n// Handles all model group specific tasks.\nClass CmsModelGroupHelper;\n// Helper bean used to collect a list of resources (usually relation targets) and keep track of whether any of them have the \"changed\" state.\nClass CmsRelationTargetListBean;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains the container page editor service classes."}
{"index": 3235, "repo": "opencms-core-15.0", "code": "package inherited\n\n// A bean representing a single configuration entry for the inherited container configuration.\nClass CmsContainerConfiguration;\n// A cache class for storing inherited container configurations.\nClass CmsContainerConfigurationCache;\n// A cache class for storing inherited container configurations.\nClass CmsContainerConfigurationCacheState;\n// A class which represents all the configuration entries which have been read from an inherited container configuration file.\nClass CmsContainerConfigurationGroup;\n// A parser class which reads data from inherited container configuration files.\nClass CmsContainerConfigurationParser;\n// A helper class for writing inherited container configuration back to a VFS file.\nClass CmsContainerConfigurationWriter;\n// Utility methods for inheritance groups which don't fit anywhere else.\nClass CmsInheritanceGroupUtils;\n// Reference to an container inheritance configuration.\nClass CmsInheritanceReference;\n// Parser class for parsing inheritance container references.\nClass CmsInheritanceReferenceParser;\n// The state of an inherited container at a given point in the VFS tree.\nClass CmsInheritedContainerState;\n", "des": "Contains classes used for reading and caching inheritance groups."}
{"index": 3236, "repo": "opencms-core-15.0", "code": "package shared\n\n// Contains the container page editor service interfaces.\npackage shared.rpc\n// Convenience class to provide server-side information to the client.\nClass CmsCntPageData;\n// Container bean.\nClass CmsContainer;\n// Bean holding basic container element information.\nClass CmsContainerElement;\n// Bean holding all element information including it's formatted contents.\nClass CmsContainerElementData;\n// Gallery data loaded initially for the 'Add' menu in the page editor.\nClass CmsContainerPageGalleryData;\n// Bean containing the 'context' of the edited container page for use in RPC calls.\nClass CmsContainerPageRpcContext;\n// Bean containing the needed data when creating a new resource.\nClass CmsCreateElementData;\n// Option dialog data.\nClass CmsDialogOptions;\n// Describes a dialog option.\nClass CmsDialogOptions.Option;\n// Holds both a bean containing edit handler dialog options and a resource info bean for a selected resource.\nClass CmsDialogOptionsAndInfo;\n// Contains lock information for a container page element.\nClass CmsElementLockInfo;\n// Represents the setting configuration for a container element.\nClass CmsElementSettingsConfig;\n// Element view info.\nClass CmsElementViewInfo;\n// Formatter configuration data.\nClass CmsFormatterConfig;\n// Bean which holds a list of formatter configurations (client-side) which can be retrieved by key or id.\nClass CmsFormatterConfigCollection;\n// Group container bean.\nClass CmsGroupContainer;\n// Bean which holds the results of saving a group container.\nClass CmsGroupContainerSaveResult;\n// The inheritance container data.\nClass CmsInheritanceContainer;\n// A class whose instances are added to container element beans to provide information about container inheritance.\nClass CmsInheritanceInfo;\n// Bean representing a link to a different locale variant.\nClass CmsLocaleLinkBean;\n// A bean used to store information about a container page element which was just removed.\nClass CmsRemovedElementStatus;\n// The element delte modes.\nEnum CmsCntPageData.ElementDeleteMode;\n// Enum representing the different ways dropping elements on a container page can be handled.\nEnum CmsCntPageData.ElementReuseMode;\n// The model group states.\nEnum CmsContainerElement.ModelGroupState;\n", "des": "Contains the shared container page editor classes."}
{"index": 3237, "repo": "opencms-core-15.0", "code": "package rpc\n\n// The RPC service interface used by the container-page editor.\nInterface I_CmsContainerpageService;\n// The RPC service asynchronous interface used by the container-page editor.\nInterface I_CmsContainerpageServiceAsync;\n", "des": "Contains the container page editor service interfaces."}
{"index": 3238, "repo": "opencms-core-15.0", "code": "package contenteditor\n\n// Contains data beans used on the server side as well as on the client side of the XML content editor.\npackage contenteditor.shared\n// Abstract implementation of the content editor change handler.\nClass A_CmsXmlContentEditorChangeHandler;\n// Convenience class to access the localized messages of this OpenCms package.\nClass ClientMessages;\n// The content editor action element.\nClass CmsContentEditorActionElement;\n// Service to provide entity persistence within OpenCms.\nClass CmsContentService;\n// Visitor to read all types and attribute configurations within a content definition.\nClass CmsContentTypeVisitor;\n// A change handler that reacts to changes in a field by setting another empty field to a default value.\nClass CmsDelayedDefaultChangeHandler;\n// Class used to keep track of optional dynamic category fields for a content.\nClass CmsDynamicCategoryFieldList;\n// Editor change handler implementation for the formatter selection in the sitemap config.\nClass CmsEditorChangeHandlerFormatterSelection;\n// Handles editor content changes to read OpenCms resource properties and insert their values into the edited content.\nClass CmsEditorChangeHandlerProperty;\n// Implementation of the serial date RPC service.\nClass CmsSerialDateService;\n// Utility methods for getting widget informations out of content definitions.\nClass CmsWidgetUtil;\n// Bean representing widget information.\nClass CmsWidgetUtil.WidgetInfo;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Widget display type evaluation rules.\nEnum CmsContentTypeVisitor.EvaluationRule;\n", "des": "Contains server side classes for the XML content editor."}
{"index": 3239, "repo": "opencms-core-15.0", "code": "package shared\n\n// Contains the RPC service interfaces used by the XML content editor.\npackage shared.rpc\n// Bean which holds the necessary data for complex value widgets in the Acacia editor.\nClass CmsComplexWidgetData;\n// Contains all information needed for editing an XMLContent.\nClass CmsContentDefinition;\n// Data which needs to be passed to the edit handler when using the 'new' button for an editable list element.\nClass CmsEditHandlerData;\n// Constants used for content editor integration.\nClass CmsEditorConstants;\n// External widget configuration settings.\nClass CmsExternalWidgetConfiguration;\n// Stores the editor save result information.\nClass CmsSaveResult;\n", "des": "Contains data beans used on the server side as well as on the client side of the XML content editor."}
{"index": 3240, "repo": "opencms-core-15.0", "code": "package rpc\n\n// The content editor service interface.\nInterface I_CmsContentService;\n// The content editor asynchronous service interface.\nInterface I_CmsContentServiceAsync;\n", "des": "Contains the RPC service interfaces used by the XML content editor."}
{"index": 3241, "repo": "opencms-core-15.0", "code": "package detailpage\n\n// Interface for classes which can find the detail page for a given resource, and determine whether a given detail page / detail content combination is valid.\nInterface I_CmsDetailPageHandler;\n// This class uses information from the detail page information stored in the sitemap to find/recognize the detail pages for a given resource.\nClass CmsDefaultDetailPageHandler;\n// Class for writing detail page information to an XML configuration file.\nClass CmsDetailPageConfigurationWriter;\n// Data bean containing the information for a detail page.\nClass CmsDetailPageInfo;\n// Resource init handler for detail-pages.\nClass CmsDetailPageResourceHandler;\n// This is a utility class which provides convenience methods for finding detail page names for resources which include the URL names of the resources themselves.\nClass CmsDetailPageUtil;\n// Original detail page handler implementing the detail page logic from OpenCms versions up to 11.0.\nClass CmsPermissiveDetailPageHandler;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains functions for the detail pages in OpenCms."}
{"index": 3242, "repo": "opencms-core-15.0", "code": "package galleries\n\n// Contains the shared client/server side gallery dialog classes.\npackage galleries.shared\n// Abstract class which is used to generate the data for showing an already opened tree in the gallery dialog.\nClass A_CmsTreeTabDataPreloader<T extends I_CmsGalleryTreeEntry<T>>;\n// Convenience class to access the localized messages of this OpenCms package.\nClass ClientMessages;\n// Replacement configuration for the 'add content' dialog.\nClass CmsAddContentRestriction;\n// Contains the replacements (and titles of the replacements) for a single type.\nClass CmsAddContentRestriction.TypeEntry;\n// Gallery action used to generate the gallery dialog.\nClass CmsGalleryActionElement;\n// Helper class for building a filtered sitemap tree for the gallery dialog's 'Sitemap' tab.\nClass CmsGalleryFilteredNavTreeBuilder;\n// Handles all RPC services related to the gallery dialog.\nClass CmsGalleryService;\n// Provides methods to open gwt-based gallery dialog.\nClass CmsOpenGallery;\n// Handles all RPC services related to the gallery preview dialog.\nClass CmsPreviewService;\n// Helper class for building the options for the site selector in the gallery dialog.\nClass CmsSiteSelectorOptionBuilder;\n// The tree open state of a gallery tree tab.\nClass CmsTreeOpenState;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains server side classes for the gallery dialogs."}
{"index": 3243, "repo": "opencms-core-15.0", "code": "package shared\n\n// Constants interface for binary resource preview.\nInterface I_CmsBinaryPreviewProvider;\n// The gallery configuration interface.\nInterface I_CmsGalleryConfiguration;\n// Shared constants interface.\nInterface I_CmsGalleryProviderConstants;\n// Common interface for accessing sitemap/VFS entry beans as tree nodes.\nInterface I_CmsGalleryTreeEntry<T>;\n// Constants interface for binary resource preview.\nInterface I_CmsImagePreviewProvider;\n// Represents information about whether a gallery folder should use a custom upload action.\nClass CmsGalleryActionInfo;\n// The gallery configuration.\nClass CmsGalleryConfiguration;\n// This bean holding the gallery dialog information required for displaying the content of the gallery tabs.\nClass CmsGalleryDataBean;\n// Represents a gallery folder.\nClass CmsGalleryFolderBean;\n// This bean represents the current search object.\nClass CmsGallerySearchBean;\n// A bean containing a configuration for the gallery dialog's available tabs, consisting of a list of tabs and a default tab to display first.\nClass CmsGalleryTabConfiguration;\n// Gallery tree entry class.\nClass CmsGalleryTreeEntry;\n// Bean holding image info to be display in the resource preview dialog.\nClass CmsImageInfoBean;\n// A point in 2D space.\nClass CmsPoint;\n// This bean contains the preview content for the selected item.\nClass CmsResourceInfoBean;\n// Bean representing resource type information.\nClass CmsResourceTypeBean;\n// A specific bean holding all info to be displayed in org.opencms.ade.galleries.client.ui.CmsResultListItems.\nClass CmsResultItemBean;\n// A sitemap entry bean.\nClass CmsSitemapEntryBean;\n// Bean class which represents an option for the site selector in the gallery dialog.\nClass CmsSiteSelectorOption;\n// Represents a single VFS resource entry for use by the VFS tab of the galleries.\nClass CmsVfsEntryBean;\n// An enum that represents the possible search scope choices in the ADE gallery search tab.\nEnum CmsGallerySearchScope;\n// Enum for data source from which resource type bean was constructed.\nEnum CmsResourceTypeBean.Origin;\n// Enum representing the visibility of a resource type in the bean.\nEnum CmsResourceTypeBean.TypeVisibility;\n// Enum for indicating the site type.\nEnum CmsSiteSelectorOption.Type;\n", "des": "Contains the shared client/server side gallery dialog classes."}
{"index": 3244, "repo": "opencms-core-15.0", "code": "package publish\n\n// Classes for the publish dialog which are used by both the client and the server.\npackage publish.shared\n// Interface used to generate mode-specific 'related resources' for the publish dialog in addition to resources linked by normal relations.\nInterface I_CmsPublishRelatedResourceProvider;\n// This interface can be used to implement a new option in the publish dialog's project selector.\nInterface I_CmsVirtualProject;\n// Helper class for splitting a publish list into publish groups.\nClass A_CmsPublishGroupHelper<RESOURCE,​GROUP>;\n// \nClass ClientMessages;\n// Helper class used to determine which resources from a collector list should be included in a publish list.\nClass CmsCollectorPublishListHelper;\n// Virtual project which includes the currently edited resource and all its related resources.\nClass CmsCurrentPageProject;\n// Default implementation of the I_CmsCollectorPublishListProvider interface.\nClass CmsDefaultCollectorPublishListProvider;\n// Default implementation of the publish group helper which operates on CmsPublishResource objects.\nClass CmsDefaultPublishGroupHelper;\n// Virtual project for 'direct publishing' of resources.\nClass CmsDirectPublishProject;\n// Dummy implementation of the I_CmsRelatedResourceProvider interface which doesn't actually add any related resources.\nClass CmsDummyRelatedResourceProvider;\n// Virtual project for the \"My changes\" mode in the publish dialog.\nClass CmsMyChangesProject;\n// ADE publishing features.\nClass CmsPublish;\n// \nClass CmsPublishActionElement;\n// Helper functions used to collect information for the publish dialog.\nClass CmsPublishListHelper;\n// Helper class for finding all related resources for a set of resources to be published, for use with the new ADE publish dialog.\nClass CmsPublishRelationFinder;\n// A map from resources to sets of resources, which automtically instantiates an empty set when accessing a key that doesn't exist via get().\nClass CmsPublishRelationFinder.ResourceMap;\n// The implementation of the publish service.\nClass CmsPublishService;\n// Wrapper to use real OpenCms projects through the I_CmsVirtualProject interface.\nClass CmsRealProjectVirtualWrapper;\n// Publish group helper which only puts all publish resources into a single group.\nClass CmsSinglePublishGroupHelper;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "This package contains the server-side classes for the publish module."}
{"index": 3245, "repo": "opencms-core-15.0", "code": "package shared\n\n// Classes to handle client-side GWT-RPC services.\npackage shared.rpc\n// A project bean.\nClass CmsProjectBean;\n// A bean that contains both publish options and a map of projects.\nClass CmsPublishData;\n// A publish group.\nClass CmsPublishGroup;\n// A class which represents a list of publish groups to display to the user for selection.\nClass CmsPublishGroupList;\n// A bean which can be used to reconstruct a publish list.\nClass CmsPublishListToken;\n// Bean encapsulating all ADE publish options.\nClass CmsPublishOptions;\n// A publish resource.\nClass CmsPublishResource;\n// A publish resource additional information bean.\nClass CmsPublishResourceInfo;\n// A bean which represents a possible workflow, containing an identifier, a user-readable name and a list of workflow actions.\nClass CmsWorkflow;\n// Work flow action information.\nClass CmsWorkflowAction;\n// Contains the data on which a workflow action should act (usually, a list of resources).\nClass CmsWorkflowActionParams;\n// The result of a workflow action.\nClass CmsWorkflowResponse;\n// Reason value constants, when resources can not be published.\nEnum CmsPublishResourceInfo.Type;\n", "des": "Classes for the publish dialog which are used by both the client and the server."}
{"index": 3246, "repo": "opencms-core-15.0", "code": "package rpc\n\n// The synchronous publish list interface.\nInterface I_CmsPublishService;\n// The asynchronous interface to the publish service.\nInterface I_CmsPublishServiceAsync;\n", "des": "Classes to handle client-side GWT-RPC services."}
{"index": 3247, "repo": "opencms-core-15.0", "code": "package sitemap\n\n// Shared Client-Server side of the sitemap view.\npackage sitemap.shared\n// Convenience class to access the localized messages of this OpenCms package.\nClass ClientMessages;\n// Helper class used by a service to edit or import aliases for a whole site.\nClass CmsAliasBulkEditHelper;\n// A class used to keep track of which user is editing the alias table from which sites.\nClass CmsAliasEditorLockTable;\n// A class used for storing alias import results by key.\nClass CmsAliasImportResponseTable;\n// Helper class for model page operations in the sitemap editor.\nClass CmsModelPageHelper;\n// Sitemap action used to generate the sitemap editor.\nClass CmsSitemapActionElement;\n// Performs attribute changes in a sitemap configuration file CmsXmlContent instance.\nClass CmsSitemapAttributeUpdater;\n// Helper class for recalculating navigation positions when a user has changed the order of navigation entries in the sitemap editor.\nClass CmsSitemapNavPosCalculator;\n// Sitemap session cache.\nClass CmsSitemapSessionCache;\n// Handles all RPC services related to the vfs sitemap.\nClass CmsVfsSitemapService;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Server side of the sitemap view."}
{"index": 3248, "repo": "opencms-core-15.0", "code": "package shared\n\n// Shared RPC interfaces.\npackage shared.rpc\n// Constants for parameters, JSON keys, etc.\nInterface I_CmsAliasConstants;\n// The interface to the sitemap controller.\nInterface I_CmsSitemapController;\n// Bean for additional site-map entry information.\nClass CmsAdditionalEntryInfo;\n// Sitemap entry data.\nClass CmsClientSitemapEntry;\n// A data structure for managing the detail page ordering for different types in a given sitemap.\nClass CmsDetailPageTable;\n// Gallery folder entry bean.\nClass CmsGalleryFolderEntry;\n// The gallery type bean.\nClass CmsGalleryType;\n// Data used for the property editor in the sitemap editor's locale comparison view.\nClass CmsLocaleComparePropertyData;\n// Wraps the model page and model group info into one object.\nClass CmsModelInfo;\n// Bean representing a model page, for use in the model page mode of the sitemap editor.\nClass CmsModelPageEntry;\n// A bean representing a resource type for use in the detail page creation menu.\nClass CmsNewResourceInfo;\n// The data needed by the sitemap attribute editor dialog in the sitemap editor.\nClass CmsSitemapAttributeData;\n// The category data for the current sitemap.\nClass CmsSitemapCategoryData;\n// Bean containing sitemap entry change information.\nClass CmsSitemapChange;\n// Sitemap clipboard data bean.\nClass CmsSitemapClipboardData;\n// Sitemap initialization data bean for prefetching.\nClass CmsSitemapData;\n// Sitemap info object.\nClass CmsSitemapInfo;\n// This class represents the result of a 'merge sub-sitemap' operation.\nClass CmsSitemapMergeInfo;\n// A data class which is used to transfer information about sub-sitemaps which have been created.\nClass CmsSubSitemapInfo;\n// An enum for the edit status of the entry.\nEnum CmsClientSitemapEntry.EditStatus;\n// An enum for the entry type.\nEnum CmsClientSitemapEntry.EntryType;\n// A type indicating the status of a page.\nEnum CmsDetailPageTable.Status;\n// The change types.\nEnum CmsSitemapChange.ChangeType;\n// The sitemap editor modes.\nEnum CmsSitemapData.EditorMode;\n", "des": "Shared Client-Server side of the sitemap view."}
{"index": 3249, "repo": "opencms-core-15.0", "code": "package rpc\n\n// Handles all RPC services related to the sitemap.\nInterface I_CmsSitemapService;\n// Handles all RPC services related to the sitemap.\nInterface I_CmsSitemapServiceAsync;\n", "des": "Shared RPC interfaces."}
{"index": 3250, "repo": "opencms-core-15.0", "code": "package cache\n\n// Defines the methods which an object being cached by CmsFlexLruCache must implement.\nInterface I_CmsLruCacheObject;\n// Implements an LRU (last recently used) cache.\nClass CmsLruCache;\n// A singleton memory cache, that stores objects related with keys.\nClass CmsMemoryObjectCache;\n// Configurable VFS based cache, for caching objects related to offline/online resources.\nClass CmsVfsCache;\n// Implements a RFS file based disk cache, that handles parameter based versions of VFS files, providing a cache for the \"online\" and another for the \"offline\" project.\nClass CmsVfsDiskCache;\n// Implements a memory cache, that stores objects related to VFS files, providing a cache for the \"online\" and another for the \"offline\" project.\nClass CmsVfsMemoryObjectCache;\n// Implements a name based RFS file based disk cache, that handles parameter based versions of VFS files.\nClass CmsVfsNameBasedDiskCache;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Implementations of specialized caches used in OpenCms."}
{"index": 3251, "repo": "opencms-core-15.0", "code": "package configuration\n\n// Classes to build the user preferences dialog.\npackage configuration.preferences\n// Used for classes that are configurable using <param name=\"name\">value</param> in the XML configuration.\nInterface I_CmsConfigurationParameterHandler;\n// Interface for configured classes that need a CmsObject with admin privileges.\nInterface I_CmsNeedsAdminCmsObject;\n// Each configurable element in OpenCms must implement this interface.\nInterface I_CmsXmlConfiguration;\n// Interface for configurations which should run custom logic when the configuration is written back by OpenCms.\nInterface I_CmsXmlConfigurationWithUpdateHandler;\n// Abstract base implementation for xml configurations.\nClass A_CmsXmlConfiguration;\n// Bean containing additional log folders available for the log file viewer.\nClass CmsAdditionalLogFolderConfig;\n// Describes a resource to copy during the creation of a new resource.\nClass CmsConfigurationCopyResource;\n// Configuration manager for digesting the OpenCms XML configuration.\nClass CmsConfigurationManager;\n// Default user workplace settings, used as default values for worklace settings in the user preferences.\nClass CmsDefaultUserSettings;\n// Enumeration class for defining the publish related resources mode.\nClass CmsDefaultUserSettings.CmsPublishRelatedResourcesMode;\n// Factory to create resource type instances from the XML configuration.\nClass CmsDigesterResourceTypeCreationFactory;\n// Helper class for parsing an element with no content but several attributes into a subclass of I_CmsConfigurationParameterHandler.\nClass CmsElementWithAttrsParamConfigHelper;\n// Helper class for parsing an element with several sub-elements which are text-valued (i.e.\nClass CmsElementWithSubElementsParamConfigHelper;\n// Import / export master configuration class.\nClass CmsImportExportConfiguration;\n// Modules configuration class.\nClass CmsModuleConfiguration;\n// Provides convenient access to configuration parameters.\nClass CmsParameterConfiguration;\n// Used to read parameter lines from a property file.\nClass CmsParameterConfiguration.ParameterReader;\n// This class divides property value into tokens separated by \",\".\nClass CmsParameterConfiguration.ParameterTokenizer;\n// Class for accessing global 'weighted' configuration parameters defined in parameter files in the VFS.\nClass CmsParameterStore;\n// An individual weighted parameter value, with a 'source' attribute for better debuggability.\nClass CmsParameterStore.WeightedValue;\n// RMI shell server configuration.\nClass CmsRemoteShellConfiguration;\n", "des": "Reads and writes the XML based OpenCms configuration files."}
{"index": 3252, "repo": "opencms-core-15.0", "code": "package preferences\n\n// Interface describing a single preference value which can possibly be edited by the user.\nInterface I_CmsPreference;\n// Abstract superclass for preferences.\nClass A_CmsPreference;\n// Preference subclass for built-in preferences accessed with a getter/setter pair via reflection.\nClass CmsBuiltinPreference;\n// A bean representing a set of select options.\nClass CmsBuiltinPreference.SelectOptions;\n// Preference subclass for preferred editors.\nClass CmsEditorPreference;\n// Element view preference configuration.\nClass CmsElementViewPreference;\n// Explorer element view preference.\nClass CmsExplorerElementViewPreference;\n// Class for the preference which controls whether invalid elements should be shown by default in the gallery result tab.\nClass CmsGalleryShowInvalidDefaultPreference;\n// Class for preferences that are not meant to be displayed in the preference dialog.\nClass CmsHiddenBuiltinPreference;\n// Workplace locale preference.\nClass CmsLanguagePreference;\n// Bean representing the configurable attributes for a preference.\nClass CmsPreferenceData;\n// Preference subclass for selecting the start project.\nClass CmsProjectPreference;\n// Preference for the start site.\nClass CmsSitePreference;\n// Preference for the start folder.\nClass CmsStartFolderPreference;\n// Start gallery preference.\nClass CmsStartGallleryPreference;\n// Preference for the start site.\nClass CmsStartViewPreference;\n// Preference for the timewarp widget.\nClass CmsTimeWarpPreference;\n// Subclass for user-defined preferences.\nClass CmsUserDefinedPreference;\n// Bean used to access the built-in preferences via reflection.\nClass CmsUserSettingsStringPropertyWrapper;\n// Workplace mode preference configuration.\nClass CmsWorkplaceModePreference;\n// Wrapper used for built-in preferene which have also been configured in opencms-workplace.xml.\nClass CmsWrapperPreference;\n// Annotation used for declaring that a specific preference class should be used for a built-in preference.\nAnnotation Type PrefMetadata;\n", "des": "Classes to build the user preferences dialog."}
{"index": 3253, "repo": "opencms-core-15.0", "code": "package db\n\n// AS400 implementation of the OpenCms database connector.\npackage db.as400\n// DB2 implementation of the OpenCms database connector.\npackage db.db2\n// Generic (ANSI-SQL) implementation of the OpenCms database connector.\npackage db.generic\n// HSQLDB implementation of the OpenCms database connector.\npackage db.hsqldb\n// This package contains the implementation classes for the DB log.\npackage db.log\n// MS SQL implementation of the OpenCms database connector.\npackage db.mssql\n// MySQL4+ implementation of the OpenCms database connector.\npackage db.mysql\n// Oracle9+ implementation of the OpenCms database connector.\npackage db.oracle\n// PostgreSql implementation of the OpenCms database connector.\npackage db.postgresql\n// Utility classes for profiling driver calls.\npackage db.timing\n// Describes the cache key generating methods.\nInterface I_CmsCacheKey;\n// This interface defines a factory to create runtime info objects.\nInterface I_CmsDbContextFactory;\n// Generic base driver interface.\nInterface I_CmsDriver;\n// Provides methods to write export points to the \"real\" file system.\nInterface I_CmsExportPointDriver;\n// Definitions of all required history driver methods.\nInterface I_CmsHistoryDriver;\n// An interface which represents a parameter value which is going to be used in an SQL prepared statement.\nInterface I_CmsPreparedStatementParameter;\n// Definitions of all required project driver methods.\nInterface I_CmsProjectDriver;\n// An interface for classes which are used to generate SQL statements.\nInterface I_CmsQueryFragment;\n// The interface for drivers handling subscriptions and user tracking.\nInterface I_CmsSubscriptionDriver;\n// Definitions of all required user driver methods.\nInterface I_CmsUserDriver;\n// Definitions of all required VFS driver methods.\nInterface I_CmsVfsDriver;\n// This class represents an alias from a virtual path to a resource in the VFS.\nClass CmsAlias;\n// This class is used for filtering aliases in database operations.\nClass CmsAliasFilter;\n// The alias manager provides access to the aliases stored in the database.\nClass CmsAliasManager;\n// Generates the cache keys for the user and permission caches.\nClass CmsCacheKey;\n// The settings of the OpenCms memory monitor.\nClass CmsCacheSettings;\n", "des": "Low-level database connection and access functionality."}
{"index": 3254, "repo": "opencms-core-15.0", "code": "package as400\n\n// AS400 implementation of the history driver methods.\nClass CmsHistoryDriver;\n// AS400 implementation of the project driver methods.\nClass CmsProjectDriver;\n// AS400 implementation of the SQL Manager.\nClass CmsSqlManager;\n// AS/400 implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// AS400 implementation of the user driver methods.\nClass CmsUserDriver;\n// AS400 implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "AS400 implementation of the OpenCms database connector."}
{"index": 3255, "repo": "opencms-core-15.0", "code": "package db2\n\n// DB2 implementation of the history driver methods.\nClass CmsHistoryDriver;\n// DB2 implementation of the project driver methods.\nClass CmsProjectDriver;\n// DB2 implementation of the SQL Manager.\nClass CmsSqlManager;\n// DB2 implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// DB2 implementation of the user driver methods.\nClass CmsUserDriver;\n// DB2 implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "DB2 implementation of the OpenCms database connector."}
{"index": 3256, "repo": "opencms-core-15.0", "code": "package generic\n\n// Generic (ANSI-SQL) database server implementation of the history driver methods.\nClass CmsHistoryDriver;\n// Generic (ANSI-SQL) implementation of the project driver methods.\nClass CmsProjectDriver;\n// Filter object that describes what to clean up in a publish history cleanup operation.\nClass CmsPublishHistoryCleanupFilter;\n// Generic (ANSI-SQL) implementation of the SQL manager.\nClass CmsSqlManager;\n// Generic implementation of the user tracking and subscription driver interface.\nClass CmsSubscriptionDriver;\n// Generic (ANSI-SQL) database server implementation of the user driver methods.\nClass CmsUserDriver;\n// Default implementation of the user query builder.\nClass CmsUserQueryBuilder;\n// Generic (ANSI-SQL) database server implementation of the VFS driver methods.\nClass CmsVfsDriver;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Mode of operation for publish history cleanup.\nEnum CmsPublishHistoryCleanupFilter.Mode;\n", "des": "Generic (ANSI-SQL) implementation of the OpenCms database connector."}
{"index": 3257, "repo": "opencms-core-15.0", "code": "package hsqldb\n\n// HSQLDB implementation of the history driver methods.\nClass CmsHistoryDriver;\n// HSQLDB implementation of the project driver methods.\nClass CmsProjectDriver;\n// HSQLDB implementation of the SQL Manager.\nClass CmsSqlManager;\n// HSQLDB implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// HSQLDB implementation of the user driver methods.\nClass CmsUserDriver;\n// HSQLDB implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "HSQLDB implementation of the OpenCms database connector."}
{"index": 3258, "repo": "opencms-core-15.0", "code": "package log\n\n// Wrapper class for a DB log entry.\nClass CmsLogEntry;\n// A filter to retrieve log entries.\nClass CmsLogFilter;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Wrapper class for the different types of log entries.\nEnum CmsLogEntryType;\n", "des": "This package contains the implementation classes for the DB log."}
{"index": 3259, "repo": "opencms-core-15.0", "code": "package mssql\n\n// MS SQL implementation of the history driver methods.\nClass CmsHistoryDriver;\n// MS SQL implementation of the project driver methods.\nClass CmsProjectDriver;\n// MS SQL implementation of the SQL manager.\nClass CmsSqlManager;\n// MSSQL implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// MS SQL implementation of the user driver methods.\nClass CmsUserDriver;\n// MS SQL implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "MS SQL implementation of the OpenCms database connector."}
{"index": 3260, "repo": "opencms-core-15.0", "code": "package mysql\n\n// MySQL implementation of the history driver methods.\nClass CmsHistoryDriver;\n// MySQL implementation of the project driver methods.\nClass CmsProjectDriver;\n// MySQL implementation of the SQL manager.\nClass CmsSqlManager;\n// MySQL implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// MySQL implementation of the user driver methods.\nClass CmsUserDriver;\n// MySQL implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "MySQL4+ implementation of the OpenCms database connector."}
{"index": 3261, "repo": "opencms-core-15.0", "code": "package oracle\n\n// Oracle implementation of the history driver methods.\nClass CmsHistoryDriver;\n// Oracle/OCI implementation of the project driver methods.\nClass CmsProjectDriver;\n// Oracle implementation of the SQL manager.\nClass CmsSqlManager;\n// Oracle implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// Oracle implementation of the user driver methods.\nClass CmsUserDriver;\n// Oracle implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "Oracle9+ implementation of the OpenCms database connector."}
{"index": 3262, "repo": "opencms-core-15.0", "code": "package postgresql\n\n// PostgreSql implementation of the history driver methods.\nClass CmsHistoryDriver;\n// PostgreSql implementation of the project driver methods.\nClass CmsProjectDriver;\n// PostgreSql implementation of the SQL manager.\nClass CmsSqlManager;\n// PostgreSQL implementation of the subscription driver.\nClass CmsSubscriptionDriver;\n// PostgreSql implementation of the user driver methods.\nClass CmsUserDriver;\n// PostgreSql implementation of the VFS driver methods.\nClass CmsVfsDriver;\n", "des": "PostgreSql implementation of the OpenCms database connector."}
{"index": 3263, "repo": "opencms-core-15.0", "code": "package timing\n\n// Profiling handler interface which gets informed of method call durations.\nInterface I_CmsProfilingHandler;\n// Default profiling handler which only has a single instance and delegates method calls to its registered child handlers.\nClass CmsDefaultProfilingHandler;\n// Invocation handler used to measure method calls durations.\nClass CmsProfilingInvocationHandler;\n// Builds up a tree whose nodes correspond to stack trace lines of the threads calling this profiling handler.\nClass CmsThreadStatsTreeProfilingHandler;\n// The tree node.\nClass CmsThreadStatsTreeProfilingHandler.Node;\n", "des": "Utility classes for profiling driver calls."}
{"index": 3264, "repo": "opencms-core-15.0", "code": "package file\n\n// Collectors allow to gather lists of OpenCms resources from the OpenCms VFS using specific rules.\npackage file.collectors\n// This package contains the classes to deal with the OpenCms VFS history archive.\npackage file.history\n// The implementations of the core resource types for the VFS are located here.\npackage file.types\n// This package contains classes and interfaces used to access OpenCms through a wrapped CmsObject.\npackage file.wrapper\n// Common ancestor interface for CmsFile and CmsFolder as well as for CmsHistoryFile and CmsHistoryFolder.\nInterface I_CmsResource;\n// A file resource in the OpenCms VFS.\nClass CmsFile;\n// A folder resource in the OpenCms VFS.\nClass CmsFolder;\n// A group principal in the OpenCms permission system.\nClass CmsGroup;\n// A class used to rewrite links and relations in one subtree such that relations from that subtree to another given subtree replaced with relations to the first subtree.\nClass CmsLinkRewriter;\n// This pivotal class provides all authorized access to the OpenCms VFS resources.\nClass CmsObject;\n// Describes an OpenCms project, which contains a set of VFS resources that are being worked on at the same time.\nClass CmsProject;\n// Enumeration class for project types.\nClass CmsProject.CmsProjectType;\n// Represents a property (meta-information) mapped to a VFS resource.\nClass CmsProperty;\n// Transforms a given properties map, to a map where the returned values for a property are dependent on the locale.\nClass CmsProperty.CmsPropertyLocaleTransformer;\n// Defines a property name, so that CmsProperty instances can be created with that name.\nClass CmsPropertyDefinition;\n// Enumeration class for property types.\nClass CmsPropertyDefinition.CmsPropertyType;\n// Stores the information about the current users OpenCms context, for example the requested URI, the current project, the selected site and more.\nClass CmsRequestContext;\n// Base class for all OpenCms VFS resources like CmsFile or CmsFolder.\nClass CmsResource;\n// Enumeration class for resource copy modes.\nClass CmsResource.CmsResourceCopyMode;\n// Enumeration class for resource delete modes.\nClass CmsResource.CmsResourceDeleteMode;\n// Enumeration class for resource undo changes modes.\nClass CmsResource.CmsResourceUndoMode;\n// This class allows the developer to build a CmsResource object by filling out individual fields one after the other.\nClass CmsResourceBuilder;\n", "des": "This important package provides the methods to access the OpenCms VFS repository with the permissions of an authenticated user."}
{"index": 3265, "repo": "opencms-core-15.0", "code": "package collectors\n\n// Interface which can be used to add custom code to execute after a user has created a new content via a collector list.\nInterface I_CmsCollectorPostCreateHandler;\n// Interface which should be used for collectors which can provide their own publish list.\nInterface I_CmsCollectorPublishListProvider;\n// A collector that generates list of CmsResource objects from the VFS.\nInterface I_CmsResourceCollector;\n// Provides some helpful base implementations for resource collector classes.\nClass A_CmsResourceCollector;\n// A post create handler that adds categories to newly created resources (that are not a copy of an existing resource).\nClass CmsAddCategoriesPostCreateHandler;\n// A collector to fetch XML contents in a folder or the current site filtered by one or more given category types.\nClass CmsCategoryResourceCollector;\n// A resource collector that collects resources changed in a given time frame and supports flexible sorting based on resource dates.\nClass CmsChangedResourceCollector;\n// Data structure for the collector, parsed from the collector parameters.\nClass CmsCollectorData;\n// A default resource collector that supports flexible sorting based on resource dates.\nClass CmsDateResourceCollector;\n// Comparator for sorting resource objects based on dates.\nClass CmsDateResourceComparator;\n// Default implementation for the post-create handler interface.\nClass CmsDefaultPostCreateHandler;\n// A default resource collector to generate some example list of resources from the VFS.\nClass CmsDefaultResourceCollector;\n// Extended data structure for the collector, parsed from the collector parameters.\nClass CmsExtendedCollectorData;\n// Comparator for sorting resource objects based on priority and date.\nClass CmsPriorityDateResourceComparator;\n// A collector to fetch sorted XML contents in a folder or subtree based on their priority and date or title values.\nClass CmsPriorityResourceCollector;\n// Comparator for sorting resource objects based on priority and title.\nClass CmsPriorityTitleResourceComparator;\n// Comparator for sorting resource objects based on a selected property value.\nClass CmsPropertyResourceComparator;\n// A Solr collector.\nClass CmsSolrCollector;\n// A collector that returns visited or subscribed resources depending on the current user and parameters.\nClass CmsSubscriptionCollector;\n// A collector that allows to collect resources within a time range based upon a configurable property that contains a time stamp.\nClass CmsTimeFrameCategoryCollector;\n", "des": "Collectors allow to gather lists of OpenCms resources from the OpenCms VFS using specific rules."}
{"index": 3266, "repo": "opencms-core-15.0", "code": "package history\n\n// A historical version of a resource in the OpenCms VFS resource history.\nInterface I_CmsHistoryResource;\n// A historical version of a file in the OpenCms VFS resource history.\nClass CmsHistoryFile;\n// A historical version of a file in the OpenCms VFS resource history.\nClass CmsHistoryFolder;\n// Describes an OpenCms historical principal entry.\nClass CmsHistoryPrincipal;\n// Describes an OpenCms historical project entry.\nClass CmsHistoryProject;\n// Resource init handler that loads historical versions of resources.\nClass CmsHistoryResourceHandler;\n", "des": "This package contains the classes to deal with the OpenCms VFS history archive."}
{"index": 3267, "repo": "opencms-core-15.0", "code": "package types\n\n// Resource type descriptors for all resources in the VFS.\nInterface I_CmsResourceType;\n// Base implementation for resource type classes.\nClass A_CmsResourceType;\n// Resource type descriptor for the type \"folder\".\nClass A_CmsResourceTypeFolderBase;\n// Base implementation for resource types implementing the I_CmsLinkParseable interface.\nClass A_CmsResourceTypeLinkParseable;\n// Resource type descriptor for the type \"binary\".\nClass CmsResourceTypeBinary;\n// Resource type descriptor for the type \"folder\".\nClass CmsResourceTypeFolder;\n// Resource type descriptor for extended folder types (like for example the workplace galleries).\nClass CmsResourceTypeFolderExtended;\n// Resource type descriptor for sub site map folder types.\nClass CmsResourceTypeFolderSubSitemap;\n// Resource type class for the second version of dynamic functions.\nClass CmsResourceTypeFunctionConfig;\n// The HTML redirect resource type.\nClass CmsResourceTypeHtmlRedirect;\n// Resource type descriptor for the type \"image\".\nClass CmsResourceTypeImage;\n// A data container for image size and scale operations.\nClass CmsResourceTypeImage.CmsImageAdjuster;\n// Resource type descriptor for the type \"jsp\".\nClass CmsResourceTypeJsp;\n// Special resource type for locale independent XML contents.\nClass CmsResourceTypeLocaleIndependentXmlContent;\n// The macro formatter resource type.\nClass CmsResourceTypeMacroFormatter;\n// Resource type descriptor for the type \"plain\".\nClass CmsResourceTypePlain;\n// Resource type descriptor for the type \"pointer\".\nClass CmsResourceTypePointer;\n// The SEO file resource type.\nClass CmsResourceTypeSeoFile;\n// Content type class for subsitemap content folders.\nClass CmsResourceTypeSubsitemapContentFolder;\n// Resource type descriptor used in case the given resource type class in the XML configuration could not be instantiated.\nClass CmsResourceTypeUnknown;\n// Resource type descriptor for unknown file types.\nClass CmsResourceTypeUnknownFile;\n// Resource type descriptor for unknown folder types.\nClass CmsResourceTypeUnknownFolder;\n// Custom resource type for ADE configurations.\nClass CmsResourceTypeXmlAdeConfiguration;\n// Resource type descriptor for the type \"containerpage\".\nClass CmsResourceTypeXmlContainerPage;\n// Resource type descriptor for the type \"xmlcontent\".\nClass CmsResourceTypeXmlContent;\n// Resource type descriptor for the type \"xmlpage\".\nClass CmsResourceTypeXmlPage;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "The implementations of the core resource types for the VFS are located here."}
{"index": 3268, "repo": "opencms-core-15.0", "code": "package wrapper\n\n// Interface which is used by the CmsObjectWrapper to create a different view to the resources in the VFS.\nInterface I_CmsResourceWrapper;\n// Abstract base class which implements I_CmsResourceWrapper and makes it possible to add and remove file extensions to resources.\nClass A_CmsResourceExtensionWrapper;\n// Default abstract implementation of the interface I_CmsResourceWrapper.\nClass A_CmsResourceWrapper;\n// This class contains a subset of the methods of CmsObject and uses the configured resource wrappers (I_CmsResourceWrapper) to change the view to the existing resources in the VFS.\nClass CmsObjectWrapper;\n// A resource type wrapper for jsp files, which adds the correct file extension \"jsp\" to the resources.\nClass CmsResourceExtensionWrapperJsp;\n// A resource type wrapper for xml content files, which adds the correct file extension \"xml\" to the resources.\nClass CmsResourceExtensionWrapperXmlContent;\n// A resource type wrapper for xml pages, which adds the correct file extension \"xml\" to the resources.\nClass CmsResourceExtensionWrapperXmlPage;\n// Resource wrapper used to import/export modules by copying them to/from virtual folders.\nClass CmsResourceWrapperModules;\n// Resource wrapper used to import/export modules by copying them to/from virtual folders.\nClass CmsResourceWrapperModulesNonLazy;\n// Resource wrapper class which is used to prevent resources with a certain name from being created.\nClass CmsResourceWrapperPreventCreateNameCI;\n// Resource wrapper class which is used to prevent resources with names matching a given regex from being created.\nClass CmsResourceWrapperPreventCreateNameRegex;\n// Adds a folder in every existing folder with the name \"__properties\" which contains property files for every resource in the existing folder.\nClass CmsResourceWrapperPropertyFile;\n// Resource wrapper which intercepts createResource calls and substitutes them with replaceResource if there is already a deleted file at the same path.\nClass CmsResourceWrapperReplaceDeleted;\n// Adds the system folder to every root folder of target sites.\nClass CmsResourceWrapperSystemFolder;\n// Helper class with several methods used by different implementations of the interface I_CmsResourceWrapper.\nClass CmsResourceWrapperUtils;\n// A resource type wrapper for xml page files, which explodes the xml pages to folders.\nClass CmsResourceWrapperXmlPage;\n// Helper class to create \"virtual\" resources not existing in the vfs which are based on existing resources.\nClass CmsWrappedResource;\n", "des": "This package contains classes and interfaces used to access OpenCms through a wrapped CmsObject."}
{"index": 3269, "repo": "opencms-core-15.0", "code": "package flex\n\n// Represents a Flex bucket configuration.\nClass CmsFlexBucketConfiguration;\n// This class implements the FlexCache.\nClass CmsFlexCache;\n// A simple data container class for the FlexCache variations.\nClass CmsFlexCache.CmsFlexCacheVariation;\n// Flex Cache configuration class.\nClass CmsFlexCacheConfiguration;\n// Contains the contents of a cached resource.\nClass CmsFlexCacheEntry;\n// Key used to describe the caching behaviour of a specific resource.\nClass CmsFlexCacheKey;\n// Controller for getting access to the CmsObject, should be used as a request attribute.\nClass CmsFlexController;\n// Wrapper class for a HttpServletRequest.\nClass CmsFlexRequest;\n// Contains information about the OpenCms request context required by the Flex implementation.\nClass CmsFlexRequestContextInfo;\n// Implementation of the RequestDispatcher interface to allow JSPs to be loaded from the OpenCms VFS.\nClass CmsFlexRequestDispatcher;\n// Describes the caching behaviour (or caching options) for a Flex request.\nClass CmsFlexRequestKey;\n// Contains the root paths to be used for determining the buckets of a flex cache entry.\nClass CmsFlexRequestKey.PathsBean;\n// Wrapper class for a HttpServletResponse, required in order to process JSPs from the OpenCms VFS.\nClass CmsFlexResponse;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Signals an error of the Flex cache.\nClass CmsFlexCacheException;\n", "des": "Provides low-level JSP integration funtionality for OpenCms, also implements the FlexCache, a declarative parameter-based cache."}
{"index": 3270, "repo": "opencms-core-15.0", "code": "package gwt\n\n// Core shared stuff.\npackage gwt.shared\n// Convenient client message bundle interface.\nInterface I_CmsClientMessageBundle;\n// Convenience interface to provide core server-side data to the client.\nInterface I_CmsCoreProvider;\n// Interface for handling the server-side validation of a whole form.\nInterface I_CmsFormValidator;\n// This interface is the server-side counterpart to the org.opencms.gwt.client.validation.I_CmsValidator.\nInterface I_CmsValidationService;\n// Convenience class to access the localized messages of this OpenCms package.\nClass A_CmsClientMessageBundle;\n// Convenience class to access the localized messages of this OpenCms package.\nClass ClientMessages;\n// This class contains the real implementations of service methods related to aliases.\nClass CmsAliasHelper;\n// A helper class used to generate the necessary information for displaying links which will be broken if the user tries to delete a file in the ADE GUI.\nClass CmsBrokenLinkRenderer;\n// Helper class to deal with loading and saving user preferences from the ADE user interface.\nClass CmsClientUserSettingConverter;\n// Provides general core services.\nClass CmsCoreService;\n// A form validator which does nothing special and just validates form field values independently of each other.\nClass CmsDefaultFormValidator;\n// Helper class to generate all the data which is necessary for the resource status dialog(s).\nClass CmsDefaultResourceStatusProvider;\n// A serialization policy which allows serialization and deserialization of all classes.\nClass CmsDummySerializationPolicy;\n// Sitemap action used to generate the sitemap editor.\nClass CmsGwtActionElement;\n// Wrapper for GWT services served through OpenCms.\nClass CmsGwtService;\n// This class contains the data that should be cached for a specific service class.\nClass CmsGwtServiceContext;\n// Utility class to generate the resource icon CSS.\nClass CmsIconUtil;\n// Handles client side logging.\nClass CmsLogService;\n// Exports the register client messages into a single JavaScript resource.\nClass CmsMessagesService;\n// A GWT serialization policy for pre-fetching.\nClass CmsPrefetchSerializationPolicy;\n// Helper class responsible for loading / saving properties when using the property dialog.\nClass CmsPropertyEditorHelper;\n", "des": "Provides core support for GWT."}
{"index": 3271, "repo": "opencms-core-15.0", "code": "package shared\n\n// Shared RPC interfaces.\npackage shared.rpc\n// General AutoBean factory interface.\nInterface I_CmsAutoBeanFactory;\n// AutoBean interface that represents the configuration for the client-side CodeMirror editor widget.\nInterface I_CmsCodeMirrorClientConfiguration;\n// Interface defining the data used to call a content collector.\nInterface I_CmsContentLoadCollectorInfo;\n// Extended attributes for editable data generated by e.g.\nInterface I_CmsEditableDataExtensions;\n// AutoBean interface for the data needed to open an embedded Vaadin dialog from GWT.\nInterface I_CmsEmbeddedDialogInfo;\n// Interface for elements with icons.\nInterface I_CmsHasIconClasses;\n// AutoBean interface for the data injected into the page by the cms:enable-list-add tag.\nInterface I_CmsListAddMetadata;\n// Parameters for the unlock service.\nInterface I_CmsUnlockData;\n// An interface that holds some constants for the upload dialog.\nInterface I_CmsUploadConstants;\n// Additional info bean.\nClass CmsAdditionalInfoBean;\n// Contains the broadcast message data.\nClass CmsBroadcastMessage;\n// A bean which represents either the source or the target of a broken link.\nClass CmsBrokenLinkBean;\n// A specific bean holding all info to be displayed in the categories tab.\nClass CmsCategoryBean;\n// Recursive category tree entry.\nClass CmsCategoryTreeEntry;\n// A bean containing a date, both as a 'long' value and a user-readable string representation.\nClass CmsClientDateBean;\n// Client side lock class.\nClass CmsClientLock;\n// Client-side bean which holds information about a client variant of a template context.\nClass CmsClientVariantInfo;\n// A context menu entry bean.\nClass CmsContextMenuEntryBean;\n// Runtime data bean for prefetching.\nClass CmsCoreData;\n// Bean class containing info about the current user.\nClass CmsCoreData.UserInfo;\n// Constants used by the data view widget code (client/server side).\nClass CmsDataViewConstants;\n// Encodes/decodes the configuration passed to the data view popup as a request parameter.\nClass CmsDataViewParamEncoder;\n// A bean which represents the information for the delete dialog.\nClass CmsDeleteResourceBean;\n", "des": "Core shared stuff."}
{"index": 3272, "repo": "opencms-core-15.0", "code": "package rpc\n\n// Provides general core services.\nInterface I_CmsCoreService;\n// Provides general core services.\nInterface I_CmsCoreServiceAsync;\n// Handles client side logging.\nInterface I_CmsLogService;\n// Handles client side logging.\nInterface I_CmsLogServiceAsync;\n// Handles all RPC services related to the upload dialog.\nInterface I_CmsUploadService;\n// Handles all RPC services related to the upload dialog.\nInterface I_CmsUploadServiceAsync;\n// A service interface for retrieving information about the VFS tree.\nInterface I_CmsVfsService;\n// An asynchronous service interface for retrieving information about the VFS tree.\nInterface I_CmsVfsServiceAsync;\n", "des": "Shared RPC interfaces."}
{"index": 3273, "repo": "opencms-core-15.0", "code": "package i18n\n\n// Tools for i18n.\npackage i18n.tools\n// Interface to provide fallback keys to be used when the message for a key is not found.\nInterface CmsMultiMessages.I_KeyFallbackHandler;\n// Implementors of this interface are responsible for actually loading the data from the VFS.\nInterface CmsVfsResourceBundle.I_Loader;\n// A locale handler returns the locale name to use for the given request context.\nInterface I_CmsLocaleHandler;\n// Utility interface for generating localized messages for internal OpenCms operations.\nInterface I_CmsMessageBundle;\n// Interface which represents a message independent of the locale.\nInterface I_CmsMessageContainer;\n// Increases the visibility of some key methods of a ResourceBundle.\nInterface I_CmsResourceBundle;\n// Convenience base class to access the localized messages of an OpenCms package.\nClass A_CmsMessageBundle;\n// Parses the HTTP Accept-Language header as per section 14.4 of RFC 2068 (HTTP 1.1 header field definitions) and creates a sorted list of Locales from it.\nClass CmsAcceptLanguageHeaderParser;\n// Struct representing an element of the HTTP Accept-Language header.\nClass CmsAcceptLanguageHeaderParser.AcceptLanguage;\n// Default implementation of the locale handler.\nClass CmsDefaultLocaleHandler;\n// The OpenCms CmsEncoder class provides static methods to decode and encode data.\nClass CmsEncoder;\n// Bundle of i18n setting to be used to setup a new request context.\nClass CmsI18nInfo;\n// A list based resource bundle that with increased visibility of some key methods.\nClass CmsListResourceBundle;\n// Simple comparator implementation for locales, that compares the String value of the locales.\nClass CmsLocaleComparator;\n// Represents a group of resources which are locale variants of each other.\nClass CmsLocaleGroup;\n// Helper class for manipulating locale groups.\nClass CmsLocaleGroupService;\n// Manages the locales configured for this OpenCms installation.\nClass CmsLocaleManager;\n// Contains a localized message key, it's arguments and a I_CmsMessageBundle.\nClass CmsMessageContainer;\n// Reads localized resource Strings from a java.util.ResourceBundle and provides convenience methods to access the Strings from a template.\nClass CmsMessages;\n", "des": "Classes to handle internalization (i18n) and locale selection in OpenCms."}
{"index": 3274, "repo": "opencms-core-15.0", "code": "package tools\n\n// Helper class for copying container pages including some of their elements.\nClass CmsContainerPageCopier;\n// Enum representing the element copy mode.\nEnum CmsContainerPageCopier.CopyMode;\n// Exception indicating that no custom replacement element was found for a type which requires replacement.\nClass CmsContainerPageCopier.NoCustomReplacementException;\n", "des": "Tools for i18n."}
{"index": 3275, "repo": "opencms-core-15.0", "code": "package importexport\n\n// This interface describes a import class which is used to import resources into the VFS.\nInterface I_CmsImport;\n// An import/export handler is an abstract layer to hide the logic how to import/export a specific type of Cms data.\nInterface I_CmsImportExportHandler;\n// \nClass A_CmsImport;\n// Provides the functionality to export files from the OpenCms VFS to a ZIP file.\nClass CmsExport;\n// Wrapper to write exported OpenCms resources either to a .ZIP file or to the file system.\nClass CmsExportHelper;\n// Export parameters.\nClass CmsExportParameters;\n// The CmsExtendedHtmlImportManager keeps the default values for the HTML-> OpenCms Template converter.\nClass CmsExtendedHtmlImportDefault;\n// Holds the functionality to import resources from the file system or a zip file into the OpenCms VFS.\nClass CmsImport;\n// Provides information about how to handle imported resources.\nClass CmsImportExportManager;\n// Import helper.\nClass CmsImportHelper;\n// Import parameters.\nClass CmsImportParameters;\n// Subclass which doesn't actually import anything, but just reads the module data into a data structure which can then be used by the module updater.\nClass CmsImportResourceDataReader;\n// Adds the XML handler rules for import and export of resources and accounts.\nClass CmsImportVersion10;\n// Data class to temporarily keep track of relation data for a resource to be imported.\nClass CmsImportVersion10.RelationData;\n// \nClass CmsImportVersion2;\n// \nClass CmsImportVersion3;\n// \nClass CmsImportVersion4;\n// \nClass CmsImportVersion5;\n// \nClass CmsImportVersion6;\n// \nClass CmsImportVersion7;\n// Import/export handler implementation for VFS data.\nClass CmsVfsImportExportHandler;\n// \nClass CmsXmlPageConverter;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Time modes to specify how time stamps should be handled.\nEnum CmsImportExportManager.TimestampMode;\n// Categories of resources that need to be handled differently in the 'rewrite parseables' import step.\nEnum CmsImportVersion10.LinkParsableCategory;\n// Signals an error during import or export of OpenCms data.\nClass CmsImportExportException;\n", "des": "Contains functions to import and export resources from the OpenCms VFS."}
{"index": 3276, "repo": "opencms-core-15.0", "code": "package json\n\n// To convert objects to json.\nInterface I_CmsJsonifable;\n// The I_JSONString interface allows a toJSONString() method so that a class can change the behavior of JSONObject.toString(), JSONArray.toString(), and JSONWriter.value(Object).\nInterface I_JSONString;\n// This provides static methods to convert comma delimited text into a JSONArray, and to covert a JSONArray into comma delimited text.\nClass CDL;\n// A JSONArray is an ordered sequence of values.\nClass JSONArray;\n// This provides static methods to convert an XML text into a JSONObject, and to convert a JSONObject into an XML text using the JsonML transform.\nClass JSONML;\n// A JSONObject is an unordered collection of name/value pairs.\nClass JSONObject;\n// JSONObject.NULL is equivalent to the value that JavaScript calls null, whilst Java's null is equivalent to the value that JavaScript calls undefined.\nClass JSONObject.Null;\n// JSONStringer provides a quick and convenient way of producing JSON text.\nClass JSONStringer;\n// A JSONTokener takes a source string and extracts characters and tokens from it.\nClass JSONTokener;\n// JSONWriter provides a quick and convenient way of producing JSON text.\nClass JSONWriter;\n// This provides static methods to convert an XML text into a JSONObject, and to covert a JSONObject into an XML text.\nClass XML;\n// The XMLTokener extends the JSONTokener to provide additional methods for the parsing of XML texts.\nClass XMLTokener;\n// The JSONException is thrown by the JSON.org classes when things are amiss.\nClass JSONException;\n", "des": "Classes to create JSON objects and arrays for JavaScript in OpenCms."}
{"index": 3277, "repo": "opencms-core-15.0", "code": "package jsp\n\n// HTML postprocessor, used to tag single words or phrases in the HTML output.\npackage jsp.decorator\n// API classes for the <cms:parse> tag.\npackage jsp.parse\n// Utility classes to be used for JSP pages.\npackage jsp.util\n// Interface implemented by JSON tags.\nInterface I_CmsJspJsonContext;\n// Interface for tag handlers implementing valid parent tags for <c:param>.\nInterface I_CmsJspTagParamParent;\n// Provides access to a CmsResource object that was previously loaded by a parent tag.\nInterface I_CmsResourceContainer;\n// Provides access to a I_CmsXmlDocument document that was previously loaded by a parent tag.\nInterface I_CmsXmlContentContainer;\n// Abstract superclass that handles the common behavior of the jsonarray/jsonobject/jsonvalue tags.\nClass A_CmsJspJsonTag;\n// A container to store information about a collector's result.\nClass CmsContentInfoBean;\n// Bean containing the data needed to call a collector.\nClass CmsContentLoadCollectorInfo;\n// Bean to be used in JSP scriptlet code that provides direct access to the functionality offered by the OpenCms taglib.\nClass CmsJspActionElement;\n// Superclass for OpenCms JSP beans that provides convient access to OpenCms core and VFS functionality.\nClass CmsJspBean;\n// Abstract parent for all JSP tags dealing with image scaling, defines some common image scaler properties and corresponding getters/setters that may be used by extending classes.\nClass CmsJspImageScalerTagSupport;\n// Provides convenient wrappers useful to create user login pages.\nClass CmsJspLoginBean;\n// Login bean which sets a cookie that can be used by CmsPersistentLoginAuthorizationHandler to automatically log the user back in when his session has expired.\nClass CmsJspLoginPersistingBean;\n// Bean to provide a convenient way to build navigation structures based on the CmsJspNavElement.\nClass CmsJspNavBuilder;\n// Navigation builder context.\nClass CmsJspNavBuilder.NavContext;\n// Bean to collect navigation information from a resource in the OpenCms VFS.\nClass CmsJspNavElement;\n// Wrapper subclass of CmsResource with some convenience methods.\nClass CmsJspResourceWrapper;\n// Parent for body tags that require support for setting scoped variables to the JSP page context.\nClass CmsJspScopedVarBodyTagSuport;\n", "des": "The implementation of the OpenCms JSP tag library, with some additional utility classes to help in JSP scriplet code and navigation building."}
{"index": 3278, "repo": "opencms-core-15.0", "code": "package decorator\n\n// Interface for a CmsDecoratorConfiguration.\nInterface I_CmsDecoratorConfiguration;\n// CmsDecorationBundle, contains a map of merged CmsDEcorationMaps.\nClass CmsDecorationBundle;\n// This class defines text decoration to be made by the postprocessor.\nClass CmsDecorationDefintion;\n// The CmsDecorationMap is the object representation of a single decoartion file.\nClass CmsDecorationMap;\n// The CmsDecorationObject defines a single text decoration.\nClass CmsDecorationObject;\n// The CmsDecoratorConfiguration initalizes and stores the text decorations.\nClass CmsDecoratorConfiguration;\n// The CmsHtmlDecorator is the main object for processing the text decorations.\nClass CmsHtmlDecorator;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "HTML postprocessor, used to tag single words or phrases in the HTML output."}
{"index": 3279, "repo": "opencms-core-15.0", "code": "package parse\n\n// Base class for all classes that are specified for the <cms:parse parserClass=\"name\" param=\"config\" /> tag in the parserClass Attribute.\nClass A_CmsConfiguredHtmlParser;\n", "des": "API classes for the <cms:parse> tag."}
{"index": 3280, "repo": "opencms-core-15.0", "code": "package config\n\n// API classes for the configuration parsers of the search form support provided for server-side Solr search.\npackage config.parser\n// Interface the main search configuration must implement.\nInterface I_CmsSearchConfiguration;\n// Interface the common search configuration must implement.\nInterface I_CmsSearchConfigurationCommon;\n// Interface of the \"Did you mean ...?\" configuration for the JSP search form.\nInterface I_CmsSearchConfigurationDidYouMean;\n// Configuration common to all facets.\nInterface I_CmsSearchConfigurationFacet;\n// The interface a field facet configuration must implement.\nInterface I_CmsSearchConfigurationFacetField;\n// Interface for the query facet configuration.\nInterface I_CmsSearchConfigurationFacetQuery;\n// The interface of a single query facet item.\nInterface I_CmsSearchConfigurationFacetQuery.I_CmsFacetQueryItem;\n// The interface a field facet configuration must implement.\nInterface I_CmsSearchConfigurationFacetRange;\n// The interface a Geo filter configuration must implement.\nInterface I_CmsSearchConfigurationGeoFilter;\n// The interface each highlighting configuration must implement.\nInterface I_CmsSearchConfigurationHighlighting;\n// The interface a pagination configuration must implement.\nInterface I_CmsSearchConfigurationPagination;\n// The interface a sort configuration must implement.\nInterface I_CmsSearchConfigurationSorting;\n// The interface a sort option configuration must implement.\nInterface I_CmsSearchConfigurationSortOption;\n// The main search configuration.\nClass CmsSearchConfiguration;\n// Search configuration for common parameters as the query parameter etc.\nClass CmsSearchConfigurationCommon;\n// Class keeping the configuration of the \"Did you mean ...?\" feature of the search form.\nClass CmsSearchConfigurationDidYouMean;\n// Configuration that is common for all facets.\nClass CmsSearchConfigurationFacet;\n// Search configuration special for field facets.\nClass CmsSearchConfigurationFacetField;\n// Configuration for the query facet.\nClass CmsSearchConfigurationFacetQuery;\n// Representation of one query facet item.\nClass CmsSearchConfigurationFacetQuery.CmsFacetQueryItem;\n// Search configuration special for field facets.\nClass CmsSearchConfigurationFacetRange;\n// Search configuration for the Geo filter.\nClass CmsSearchConfigurationGeoFilter;\n// Search configuration for highlighting options.\nClass CmsSearchConfigurationHighlighting;\n// Search configuration for pagination.\nClass CmsSearchConfigurationPagination;\n// Configuration for sorting in general.\nClass CmsSearchConfigurationSorting;\n", "des": "API classes for the configuration of the search form support provided for server-side Solr search."}
{"index": 3281, "repo": "opencms-core-15.0", "code": "package parser\n\n// Helpers to convert the list configuration XML content into a suitable bean, used by the CmsSimpleSearchConfigurationParser and the List manager app.\npackage parser.simplesearch\n// The interface that must be implemented by search (form) configuration parsers.\nInterface I_CmsSearchConfigurationParser;\n// Search configuration parser reading JSON.\nClass CmsJSONSearchConfigurationParser;\n// Search configuration parser reading a configuration containing a plain Solr query.\nClass CmsPlainQuerySearchConfigurationParser;\n// Search configuration parser using a list configuration file as the base configuration with additional JSON.\nClass CmsSimpleSearchConfigurationParser;\n// Search configuration parser reading XML.\nClass CmsXMLSearchConfigurationParser;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Sort options that are available by default.\nEnum CmsSimpleSearchConfigurationParser.SortOption;\n", "des": "API classes for the configuration parsers of the search form support provided for server-side Solr search."}
{"index": 3282, "repo": "opencms-core-15.0", "code": "package simplesearch\n\n// Contains classes for dealing with restrictions in list configurations.\npackage simplesearch.daterestrictions\n// Helpers for the preconfigured filter query part of the list configuration (ie.\npackage simplesearch.preconfiguredrestrictions\n// Wrapper for a combined category and folder restriction.\nClass CmsCategoryFolderRestrictionBean;\n// Utils to read and update the list configuration.\nClass CmsConfigParserUtils;\n// The list configuration data.\nClass CmsConfigurationBean;\n// Bean representing a Geo filter.\nClass CmsGeoFilterBean;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Enum representing how filter queries should be combined in a search.\nEnum CmsConfigurationBean.CombinationMode;\n", "des": "Helpers to convert the list configuration XML content into a suitable bean, used by the CmsSimpleSearchConfigurationParser and the List manager app."}
{"index": 3283, "repo": "opencms-core-15.0", "code": "package daterestrictions\n\n// Interface for date restrictions used in list configurations.\nInterface I_CmsDateRestriction;\n// Date restrictions for a fixed number of time units going backward or forward from the current time.\nClass CmsDateFromTodayRestriction;\n// A restriction which selects either all entries in the past (from the current time) or all entries in the future.\nClass CmsDatePastFutureRestriction;\n// Restriction to a date between a fixed start and end date, but only one of them has to be given.\nClass CmsDateRangeRestriction;\n// Parses date restrictions in a list configuration.\nClass CmsDateRestrictionParser;\n// Enum representing a direction in time (past / future).\nEnum I_CmsDateRestriction.TimeDirection;\n// Enum representing a time unit.\nEnum I_CmsDateRestriction.TimeUnit;\n", "des": "Contains classes for dealing with restrictions in list configurations."}
{"index": 3284, "repo": "opencms-core-15.0", "code": "package preconfiguredrestrictions\n\n// A single restriction rule, telling for which field and type what kind of restriction should be enforced.\nClass CmsRestrictionRule;\n// Parser for restriction rules.\nClass CmsRestrictionRuleParser;\n// Wraps the preconfigured restrictions.\nClass CmsRestrictionsBean;\n// The values in one input field.\nClass CmsRestrictionsBean.FieldValues;\n// Match type of the restriction, i.e., how the values should be treated.\nEnum CmsRestrictionRule.MatchType;\n// The type describes how values in that input field should be handled.\nEnum CmsRestrictionsBean.FieldValues.FieldType;\n", "des": "Helpers for the preconfigured filter query part of the list configuration (ie."}
{"index": 3285, "repo": "opencms-core-15.0", "code": "package controller\n\n// Interface all search controllers must implement.\nInterface I_CmsSearchController;\n// Interface to get controllers state and configuration - version for common search configurations.\nInterface I_CmsSearchControllerCommon;\n// Interface the \"Did you mean ...?\" controller must implement.\nInterface I_CmsSearchControllerDidYouMean;\n// Interface to get controllers state and configuration - version for field facets.\nInterface I_CmsSearchControllerFacetField;\n// Interface to get controllers state and configuration - version for the query facet.\nInterface I_CmsSearchControllerFacetQuery;\n// Interface to get controllers state and configuration - version for field facets.\nInterface I_CmsSearchControllerFacetRange;\n// Interface the controller for all field facets must implement - just allow access to the single controllers.\nInterface I_CmsSearchControllerFacetsField;\n// Interface the controller for all range facets must implement - just allow access to the single controllers.\nInterface I_CmsSearchControllerFacetsRange;\n// Interface to get controllers state and configuration - version for the Geo filter.\nInterface I_CmsSearchControllerGeoFilter;\n// Interface to get controllers configuration - version for highlighting.\nInterface I_CmsSearchControllerHighlighting;\n// Interface for the main search controller.\nInterface I_CmsSearchControllerMain;\n// Interface to get controllers state and configuration - version for pagination.\nInterface I_CmsSearchControllerPagination;\n// Interface to get controllers state and configuration - version for common search configurations.\nInterface I_CmsSearchControllerSorting;\n// The main controller that allows to access all single sub-controllers.\nClass CmsSearchController;\n// Search controller for the common search options.\nClass CmsSearchControllerCommon;\n// Controller for the \"Did you mean ...?\" feature.\nClass CmsSearchControllerDidYouMean;\n// Search controller for the field facet options.\nClass CmsSearchControllerFacetField;\n// Search controller for the query facet options.\nClass CmsSearchControllerFacetQuery;\n// Search controller for the field facet options.\nClass CmsSearchControllerFacetRange;\n// Search controller as aggregation of all single field facet controllers.\nClass CmsSearchControllerFacetsField;\n// Search controller as aggregation of all single field facet controllers.\nClass CmsSearchControllerFacetsRange;\n// Search controller for the Geo filter.\nClass CmsSearchControllerGeoFilter;\n// Controller for highlighting options.\nClass CmsSearchControllerHighlighting;\n", "des": "API classes for the controllers of the search form support provided for server-side Solr search."}
{"index": 3286, "repo": "opencms-core-15.0", "code": "package result\n\n// Interface for a single search result, as wrapped JSP EL friendly.\nInterface I_CmsSearchResourceBean;\n// Interface of the JSP EL friendly wrapper for all Solr search results and the search form controller.\nInterface I_CmsSearchResultWrapper;\n// Interface for the search state parameters.\nInterface I_CmsSearchStateParameters;\n// JSP EL friendly wrapper class for a single search result (document).\nClass CmsSearchResourceBean;\n// Wrapper for the whole search result.\nClass CmsSearchResultWrapper;\n// State parameter wrapper that allows to manipulate the request parameters representing the state of the current search.\nClass CmsSearchStateParameters;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "API classes for the result of the search form support provided for server-side Solr search."}
{"index": 3287, "repo": "opencms-core-15.0", "code": "package state\n\n// Class for keeping the state of the common search options.\nInterface I_CmsSearchStateCommon;\n// Class for keeping the state of the spellcheck search options.\nInterface I_CmsSearchStateDidYouMean;\n// Interface for the state all facet types have in common.\nInterface I_CmsSearchStateFacet;\n// Interface for the Geo filter state.\nInterface I_CmsSearchStateGeoFilter;\n// Interface for pagination states.\nInterface I_CmsSearchStatePagination;\n// Interface for sorting states.\nInterface I_CmsSearchStateSorting;\n// Class for handling the state of the common search options.\nClass CmsSearchStateCommon;\n// Class for handling the state of the \"Did you mean?\" search options.\nClass CmsSearchStateDidYouMean;\n// Class for keeping the state common for all facet types.\nClass CmsSearchStateFacet;\n// Class keeping the state of the Geo filter.\nClass CmsSearchStateGeoFilter;\n// Class for keeping the state for the pagination.\nClass CmsSearchStatePagination;\n// Class for keeping the state of the sorting options.\nClass CmsSearchStateSorting;\n", "des": "API classes for the state of the search form support provided for server-side Solr search."}
{"index": 3288, "repo": "opencms-core-15.0", "code": "package util\n\n// Common interface for accessing formatter / resource type infos in JSPs.\nInterface I_CmsFormatterInfo;\n// This interface supports the basic functionality for the device detection.\nInterface I_CmsJspDeviceSelector;\n// Base class for context sensitive custom beans that supports creation via CmsJspStandardContextBean.getBean(String className).\nClass A_CmsJspCustomContextBean;\n// Wrapper bean for querying information related to a container type in JSPs.\nClass CmsContainerTypeInfoWrapper;\n// A wrapper class for using dynamic function beans inside JSPs via the EL.\nClass CmsDynamicFunctionBeanWrapper;\n// Wrapper class for dynamic function formats which can be used from JSP EL.\nClass CmsDynamicFunctionFormatWrapper;\n// Class to display the error dialog.\nClass CmsErrorBean;\n// Wrapper class for accessing formatter information from JSPs.\nClass CmsFormatterInfoWrapper;\n// Class used for rendering dynamic functions (v2).\nClass CmsFunctionRenderer;\n// Bean for easy access to categories of a resource in JSPs.\nClass CmsJspCategoryAccessBean;\n// Wrapper for using container pages in JSPs.\nClass CmsJspContainerPageWrapper;\n// Allows access to the individual elements of an XML content, usually used inside a loop of a <cms:contentload> tag.\nClass CmsJspContentAccessBean;\n// Allows direct access to XML content values, with possible iteration of sub-nodes.\nClass CmsJspContentAccessValueWrapper;\n// The null value info, used to generate RDFA and DND annotations for null values.\nClass CmsJspContentAccessValueWrapper.NullValueInfo;\n// Allows accessing 'attachments' of an XML content via the EL in JSP code, which in OpenCms are defined as the contents of its detail-only containers.\nClass CmsJspContentAttachmentsBean;\n// Allows JSP access to the results of a <cms:contentload ...\nClass CmsJspContentLoadBean;\n// Bean for easy access to information of an event series.\nClass CmsJspDateSeriesBean;\n// This class provides the detection for different devices, so that the <cms:device type=\"...\">-Tag can detect which device sends the HTTP request.\nClass CmsJspDeviceSelector;\n// Device selector class which distinguishes between the cases \"desktop\", \"mobile\" and \"tablet\".\nClass CmsJspDeviceSelectorDesktopMobileTablet;\n", "des": "Utility classes to be used for JSP pages."}
{"index": 3289, "repo": "opencms-core-15.0", "code": "package letsencrypt\n\n// Interface for classes which should handle an updated certificate configuration.\nInterface I_CmsLetsEncryptUpdater;\n// Configuration class containing the LetsEncrypt configuration settings OpenCms needed by OpenCms.\nClass CmsLetsEncryptConfiguration;\n// Updates the certificate configuration for the LetsEncrypt container.\nClass CmsLetsEncryptUpdater;\n// Class which converts the OpenCms site configuration to a certificate configuration for the LetsEncrypt docker instance.\nClass CmsSiteConfigToLetsEncryptConfigConverter;\n// Represents a grouping of domains into certificates.\nClass CmsSiteConfigToLetsEncryptConfigConverter.DomainGrouping;\n// Represents the domain information for a single site.\nClass CmsSiteConfigToLetsEncryptConfigConverter.SiteDomainInfo;\n// Enum which represents different modes that control which domains OpenCms puts into the certificate configuration.\nEnum CmsLetsEncryptConfiguration.Mode;\n// Enum which represents the different types of events that LetsEncrypt updates should be triggered by.\nEnum CmsLetsEncryptConfiguration.Trigger;\n", "des": "Classes related to the LetsEncrypt docker integration."}
{"index": 3290, "repo": "opencms-core-15.0", "code": "package loader\n\n// Provides methods to generate file names either for the urlName mapping or when using a \"new\" operation in the context of the direct edit interface.\nInterface I_CmsFileNameGenerator;\n// Resource loaders that implement this interface are flex cache enabled.\nInterface I_CmsFlexCacheEnabledLoader;\n// This interface describes a resource loader for OpenCms, a class that can load a resource from the VFS, process it's contents and deliver the result to the user.\nInterface I_CmsResourceLoader;\n// Resource loaders that implement this method can easily provide the contents of a selected targe element as a String.\nInterface I_CmsResourceStringDumpLoader;\n// Interface for template context providers.\nInterface I_CmsTemplateContextProvider;\n// Bean that represents a client variant of a template context.\nClass CmsClientVariant;\n// The default class used for generating file names either for the urlName mapping or when using a \"new\" operation in the context of the direct edit interface.\nClass CmsDefaultFileNameGenerator;\n// Example implementation of a template context provider for deciding between a desktop template and a mobile template.\nClass CmsDefaultTemplateContextProvider;\n// Dump loader for binary or other unprocessed resource types.\nClass CmsDumpLoader;\n// Loader for images from the OpenCms VSF with integrated image scaling and processing capabilities.\nClass CmsImageLoader;\n// Creates scaled images, acting as it's own parameter container.\nClass CmsImageScaler;\n// Simple JSON-based message container.\nClass CmsJsonMessageContainer;\n// The JSP loader which enables the execution of JSP in OpenCms.\nClass CmsJspLoader;\n// Loader for macro formatter.\nClass CmsMacroFormatterLoader;\n// Describes a MIME type configured in OpenCms.\nClass CmsMimeType;\n// Loader for \"pointers\" to resources in the VFS or to external resources.\nClass CmsPointerLoader;\n// Loader for HTML redirects.\nClass CmsRedirectLoader;\n// Collects all available resource loaders, resource types and resource collectors at startup and provides methods to access them during OpenCms runtime.\nClass CmsResourceManager;\n// Bean containing a template resource and the name of the template.\nClass CmsResourceManager.NamedTemplate;\n// The SEO file loader.\nClass CmsSeoFileLoader;\n", "des": "Low-level functions to manage the loading of resources from the OpenCms VFS."}
{"index": 3291, "repo": "opencms-core-15.0", "code": "package lock\n\n// Represents the lock state of a VFS resource.\nClass CmsLock;\n// Bean class which keeps track of a locking action performed on a resource.\nClass CmsLockActionRecord;\n// A filter to retrieve the locks.\nClass CmsLockFilter;\n// The CmsLockManager is used by the Cms application to detect the lock state of a resource.\nClass CmsLockManager;\n// Indicates the different possible lock types.\nClass CmsLockType;\n// Locking utility class.\nClass CmsLockUtil;\n// Helper to handle the lock reports together with the files.\nClass CmsLockUtil.LockedFile;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// A type for the different locking actions.\nEnum CmsLockActionRecord.LockChange;\n// Signals that a particular action was invoked on resource with an insufficient lock state.\nClass CmsLockException;\n", "des": "The lock state of the resources in the VFS is handled with these classes."}
{"index": 3292, "repo": "opencms-core-15.0", "code": "package mail\n\n// This class is used to send an HTML formatted email with optional attachments.\nClass CmsHtmlMail;\n// DataSource implementation that may be filled with content from an InputStream.\nClass CmsInputStreamDataSource;\n// Contains the configuration of an individual mail host.\nClass CmsMailHost;\n// Contains the settings for the OpenCms mail service.\nClass CmsMailSettings;\n// Sends an email using a Thread, so that the application can continue without waiting for the mail to be send.\nClass CmsMailTransport;\n// Contains utility methods for dealing with emails.\nClass CmsMailUtil;\n// This class is used to send multi-part internet email like messages with attachments.\nClass CmsMultiPartMail;\n// This class is used to send simple text internet email messages without attachments.\nClass CmsSimpleMail;\n// DataSource wrapper for VFS resources, allows easy sending of VFS resources as email attachments.\nClass CmsVfsDataSource;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Provides utility classes to generate email messages using the OpenCms email configuration."}
{"index": 3293, "repo": "opencms-core-15.0", "code": "package main\n\n// Implement this interface in case your class has to react to CmsEvents that are thrown by system.\nInterface I_CmsEventListener;\n// Describes an OpenCms request handler.\nInterface I_CmsRequestHandler;\n// This interface checks the requested resource from the OpenCms request context and returns it to the calling method, which will usually be OpenCms.initResource(CmsObject, String, HttpServletRequest, HttpServletResponse).\nInterface I_CmsResourceInit;\n// Interface used for notifying objects stored in a session when the session is destroyed.\nInterface I_CmsSessionDestroyHandler;\n// This interface is used to define the session storage implementation provider.\nInterface I_CmsSessionStorageProvider;\n// Provides scriptable access to a class from the CmsShell.\nInterface I_CmsShellCommands;\n// Interface for plugins that need to be called during startup and shutdown.\nInterface I_CmsStartStopHandler;\n// Provides localized Exception handling based on the OpenCms default locale.\nInterface I_CmsThrowable;\n// Abstract class to grant the needed access to the session manager.\nClass A_CmsAuthorizationHandler;\n// Resource init handler for detail-pages.\nClass CmsAliasResourceHandler;\n// A single broadcast message, send from one OpenCms user to another.\nClass CmsBroadcast;\n// Contains user information for automated creation of a CmsRequestContext during system runtime.\nClass CmsContextInfo;\n// The default session storage provider implementation.\nClass CmsDefaultSessionStorageProvider;\n// Class used to collect log messages and later write them to the actual log but with duplicates removed.\nClass CmsDuplicateRemovingLogBuffer;\n// Entry to write to the log.\nClass CmsDuplicateRemovingLogBuffer.Entry;\n// Event class for OpenCms for system wide events that are thrown by various operations (e.g.\nClass CmsEvent;\n// Manager that controls the OpenCms event system.\nClass CmsEventManager;\n// Contains the settings to handle HTTP basic authentication.\nClass CmsHttpAuthenticationSettings;\n// Provides the OpenCms logging mechanism.\nClass CmsLog;\n// Resource init handler that loads a resource given its permalink.\nClass CmsPermalinkResourceHandler;\n// Resource init handler that provides an alternative way of serving static files like images or binary files, using the API authorization mechanism instead of the normal authorization handler.\nClass CmsProtectedStaticFileHandler;\n", "des": "Provides the main OpenCms \"operating system\"."}
{"index": 3294, "repo": "opencms-core-15.0", "code": "package module\n\n// Module action classes in OpenCms must implement this interface.\nInterface I_CmsModuleAction;\n// Simple base implementation of the I_CmsModuleAction interface, extend this class for more sophisticated module action implementations.\nClass A_CmsModuleAction;\n// Describes an OpenCms module.\nClass CmsModule;\n// Describes an OpenCms module dependency.\nClass CmsModuleDependency;\n// Module data read from a module zip file.\nClass CmsModuleImportData;\n// Import/export handler implementation for Cms modules.\nClass CmsModuleImportExportHandler;\n// Class which manages import/export of modules from repositories configured in opencms-importexport.xml.\nClass CmsModuleImportExportRepository;\n// Holds exported module data and a modification date.\nClass CmsModuleImportExportRepository.ModuleExportData;\n// This class is responsible for reading and writing module import/export log messages, to be used by CmsResourceWrapperModules.\nClass CmsModuleLog;\n// Manages the modules of an OpenCms installation.\nClass CmsModuleManager;\n// Class used for updating modules.\nClass CmsModuleUpdater;\n// A version number for an OpenCms module.\nClass CmsModuleVersion;\n// Adds the XML handler rules for import and export of a single module.\nClass CmsModuleXmlHandler;\n// Status after updating a module.\nClass CmsReplaceModuleInfo;\n// Import data for a single resource.\nClass CmsResourceImportData;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// The available module export modes.\nEnum CmsModule.ExportMode;\n// Action type.\nEnum CmsModuleLog.Action;\n// Enum used to distinguish whether we want to generate the XML for a module export's manifest or the XML for writing back opencms-modules.xml.\nEnum CmsModuleXmlHandler.XmlWriteMode;\n", "des": "OpenCms modules provide a powerful, standardized way to extend the core OpenCms functionality."}
{"index": 3295, "repo": "opencms-core-15.0", "code": "package monitor\n\n// Describes an object that can be memory monitored.\nInterface I_CmsMemoryMonitorable;\n// Cache for users' groups and data derived from those groups, like role membership.\nClass CmsGroupListCache;\n// Monitors OpenCms memory consumption.\nClass CmsMemoryMonitor;\n// Memory Monitor configuration class.\nClass CmsMemoryMonitorConfiguration;\n// Data structure for dealing with memory status information.\nClass CmsMemoryStatus;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Cache types.\nEnum CmsMemoryMonitor.CacheType;\n", "des": "Contains functions to monitor the OpenCms system status."}
{"index": 3296, "repo": "opencms-core-15.0", "code": "package newsletter\n\n// Interface for the newsletter.\nInterface I_CmsNewsletter;\n// Every I_CmsNewsletter contains a list of I_CmsNewsletterContent objects.\nInterface I_CmsNewsletterContent;\n// Interface for recipients of I_CmsNewsletter objects.\nInterface I_CmsNewsletterRecipient;\n// Basic implementation of the interface I_CmsNewsletter.\nClass CmsNewsletter;\n// Content for newsletters.\nClass CmsNewsletterContent;\n// Type definition class for email content types.\nClass CmsNewsletterContentType;\n// A content distributor that sends the extracted xmlcontent data to the recepient via email.\nClass CmsNewsletterDistributor;\n// Simple implementation of interface I_CmsNewsletterRecipient, with I_CmsNewsletterRecipient.isSubscriber(org.opencms.newsletter.I_CmsNewsletterContent) always returning true.\nClass CmsSimpleNewsletterRecipient;\n", "des": "Contains classes to distribute newsletters."}
{"index": 3297, "repo": "opencms-core-15.0", "code": "package notification\n\n// Abstract class to create a notfication which will be send as a html mail to a user in OpenCms.\nClass A_CmsNotification;\n// The E-Mail to be written to responsibles of resources.\nClass CmsContentNotification;\n// Scheduled job that checks the system for resources that will shortly expire, be released, or will be outdated.\nClass CmsContentNotificationJob;\n// Class to encapsulate a resource and the cause of its notification.\nClass CmsExtendedNotificationCause;\n// The basic class for the content notification feature in OpenCms.\nClass CmsNotificationCandidates;\n// Objects of this class are serialized in the additional infos of a user to store, which resources were already confirmed by the user.\nClass CmsNotificationCause;\n// MacroResolver for Notifications.\nClass CmsNotificationMacroResolver;\n// Class to send a notification to an OpenCms user with a summary of warnings and errors occurred while publishing the project.\nClass CmsPublishNotification;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains classes for the automatical notification of outdated, expiring or released content."}
{"index": 3298, "repo": "opencms-core-15.0", "code": "package publish\n\n// This interface listens to events for a specific publish job.\nInterface I_CmsPublishEventListener;\n// This class is responsible for the publish process.\nClass CmsPublishEngine;\n// Class defining the publish engine states.\nClass CmsPublishEngineState;\n// Default implementation for the I_CmsPublishEventListener.\nClass CmsPublishEventAdapter;\n// List of already finished publish jobs.\nClass CmsPublishHistory;\n// Defines a read-only publish job.\nClass CmsPublishJobBase;\n// Defines a read-only publish job that is still waiting for publishing.\nClass CmsPublishJobEnqueued;\n// Defines a read-only publish job that has been already published.\nClass CmsPublishJobFinished;\n// Publish job information bean.\nClass CmsPublishJobInfoBean;\n// Defines a read-only publish job that is being published.\nClass CmsPublishJobRunning;\n// Publish job information bean.\nClass CmsPublishListenerCollection;\n// Performs some additional checks on publish lists to prevent inconsistent VFS states.\nClass CmsPublishListVerifier;\n// This manager provide access to the publish engine runtime information.\nClass CmsPublishManager;\n// This queue contains all not jet started publish jobs.\nClass CmsPublishQueue;\n// Report class used for the publish operations.\nClass CmsPublishReport;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Enum for the different publish list remove modes.\nEnum CmsPublishManager.PublishListRemoveMode;\n// Used to signal publish issues.\nClass CmsPublishException;\n", "des": "Classes to handle the OpenCms publish process."}
{"index": 3299, "repo": "opencms-core-15.0", "code": "package relations\n\n// Interface used to inject custom link handling behavior into HTML/link content fields.\nInterface I_CmsCustomLinkRenderer;\n// This interface serves to retrieve all links from a given file by parsing.\nInterface I_CmsLinkParseable;\n// Represents a category, that is just a folder.\nClass CmsCategory;\n// Provides several simplified methods for manipulating category relations.\nClass CmsCategoryService;\n// Stores the result of a pointer link validation.\nClass CmsExternalLinksValidationResult;\n// Class to validate pointer links.\nClass CmsExternalLinksValidator;\n// Util class to find broken links in a bundle of resources.\nClass CmsInternalLinksValidator;\n// A schedulable OpenCms job to validate internal relations.\nClass CmsInternalRelationsValidationJob;\n// A single link entry in the link table.\nClass CmsLink;\n// Immutable bean representing most of the information in a CmsLink.\nClass CmsLinkInfo;\n// An utility class for updating the link xml node.\nClass CmsLinkUpdateUtil;\n// A relation between two opencms resources.\nClass CmsRelation;\n// Util class to find broken links in a bundle of resources to be deleted.\nClass CmsRelationDeleteValidator;\n// A filter to retrieve the relations for a given resource.\nClass CmsRelationFilter;\n// Util class to find broken links in a bundle of resources to be published.\nClass CmsRelationPublishValidator;\n// Validates relations of resources in the OpenCms VFS.\nClass CmsRelationSystemValidator;\n// Wrapper class for the different types of relations.\nClass CmsRelationType;\n// Relation validator entry information bean.\nClass CmsRelationValidatorInfoEntry;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Enum representing how relations should be handled while copying resources.\nEnum CmsRelationType.CopyBehavior;\n", "des": "Classes to represent and validate the internal and external links/relations of resources in the OpenCms VFS."}
{"index": 3300, "repo": "opencms-core-15.0", "code": "package report\n\n// This is the interface for the report classes which are used for the output during operations that run on a spearate Thread in OpenCms, like publish, import, export etc.\nInterface I_CmsReport;\n// Identifies a class that can be used as a report thread .\nInterface I_CmsReportThread;\n// Interface used to format report updates.\nInterface I_CmsReportUpdateFormatter;\n// Base report class.\nClass A_CmsReport;\n// Provides a common Thread class for the reports.\nClass A_CmsReportThread;\n// Report update formatter for the Javascript-based report update format, which was used in the old workplace most of the time.\nClass CmsClassicJavascriptReportUpdateFormatter;\n// HTML report output to be used for import / export / publish operations in the entire OpenCms system.\nClass CmsHtmlReport;\n// Report class used for the logfile.\nClass CmsLogReport;\n// Report proxy that multiplexes to all contained I_CmsReport instances.\nClass CmsMultiplexReport;\n// Stream report where the output is streamed to the given print stream instance.\nClass CmsPrintStreamReport;\n// Represents a single report entry.\nClass CmsReportUpdateItem;\n// Report for shell which writes to LOG.\nClass CmsShellLogReport;\n// Report class used for the shell.\nClass CmsShellReport;\n// Report class used to write the output of a report to a StringBuffer.\nClass CmsStringBufferReport;\n// Report update formatter for the new Vaadin-based workplace.\nClass CmsVaadinHtmlReportUpdateFormatter;\n// Report class for displaying reports to the user in the workplace.\nClass CmsWorkplaceReport;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Enum representing report entry types.\nEnum CmsReportFormatType;\n", "des": "Classes used to generate the OpenCms reports, which are displayed during publish, import, export etc."}
{"index": 3301, "repo": "opencms-core-15.0", "code": "package repository\n\n// Represents a repository.\nInterface I_CmsRepository;\n// This class represents items in the repository interface.\nInterface I_CmsRepositoryItem;\n// A repository session which provides basic file and folder operations to the resources in the VFS of OpenCms.\nInterface I_CmsRepositorySession;\n// Abstract implementation of the repository interface I_CmsRepository.\nClass A_CmsRepository;\n// Abstract implementation of the interface I_CmsRepositorySession to provide the functionality of filtering items.\nClass A_CmsRepositorySession;\n// \nClass CmsPropertyName;\n// Creates a repository session to access OpenCms.\nClass CmsRepository;\n// This class is a filter for the repositories.\nClass CmsRepositoryFilter;\n// Represents a single entry in the repository.\nClass CmsRepositoryItem;\n// The class represents a lock to a I_CmsRepositoryItem.\nClass CmsRepositoryLockInfo;\n// The RepositoryManager keeps a list with all configured I_CmsRepository and can be used to get a repository by its name.\nClass CmsRepositoryManager;\n// This is the session class to work with the CmsRepository.\nClass CmsRepositorySession;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Package contains all classes and interfaces needed to create or use a repository to access the resources in the VFS."}
{"index": 3302, "repo": "opencms-core-15.0", "code": "package rmi\n\n// Remote interface for executing shell commands.\nInterface I_CmsRemoteShell;\n// Used to create new instances of I_CmsRemoteShell.\nInterface I_CmsRemoteShellProvider;\n// RMI object which wraps a CmsShell and can be used for shell command execution.\nClass CmsRemoteShell;\n// Client application used to connect locally to the CmsShell server.\nClass CmsRemoteShellClient;\n// Constants used by both the shell server and the client application.\nClass CmsRemoteShellConstants;\n// Remote object responsible for creating new remote shell instances.\nClass CmsRemoteShellProvider;\n// This class is used to initialize the RMI mechanism and export the object used to access the remote shell.\nClass CmsRemoteShellServer;\n// An object containing the output of a remote shell command and also the updated values for some of the internal state fields of the client application.\nClass CmsShellCommandResult;\n", "des": "The CmsRemoteShell allows to manipulate a running server using OpenCms shell commands."}
{"index": 3303, "repo": "opencms-core-15.0", "code": "package scheduler\n\n// Some predefined implementations for often used scheduled job tasks.\npackage scheduler.jobs\n// Identifies a class that can be scheduled with the OpenCms scheduler.\nInterface I_CmsScheduledJob;\n// Describes a scheduled job for the OpenCms scheduler.\nClass CmsScheduledJobInfo;\n// Manages the OpenCms scheduled jobs.\nClass CmsScheduleManager;\n// A worker thread for the OpenCms scheduler.\nClass CmsSchedulerThread;\n// Simple thread pool used for the Quartz scheduler in OpenCms.\nClass CmsSchedulerThreadPool;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Describes errors that occur in the context of the OpenCms scheduler.\nClass CmsSchedulerException;\n", "des": "The OpenCms scheduler provides a facility to run jobs in a regular schedule, much like the \"cron\" faciltiy in UNIX systems."}
{"index": 3304, "repo": "opencms-core-15.0", "code": "package jobs\n\n// A schedulable OpenCms job to calculate image size information.\nClass CmsCreateImageSizeJob;\n// A schedulable OpenCms job to delete expired resources.\nClass CmsDeleteExpiredResourcesJob;\n// A schedulable OpenCms job to clear the history.\nClass CmsHistoryClearJob;\n// A schedulable OpenCms job that clear the image cache for the scaled images created by the CmsImageLoader.\nClass CmsImageCacheCleanupJob;\n// Scheduled job for time based publishing.\nClass CmsPublishJob;\n// Scheduled job for time based publishing.\nClass CmsPublishScheduledJob;\n// A scheduled job which removes entries older than a given amount of time from the CMS_LOG table, to improve database performance.\nClass CmsRemoveOldDbLogEntriesJob;\n// A schedulable OpenCms job that optimizes the Lucene based search indexes at runtime.\nClass CmsSearchIndexOptimizeJob;\n// A schedulable OpenCms job to write a complete static export (e.g.\nClass CmsStaticExportJob;\n// A scheduled OpenCms job to unsubscribe deleted resources.\nClass CmsUnsubscribeDeletedResourcesJob;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Some predefined implementations for often used scheduled job tasks."}
{"index": 3305, "repo": "opencms-core-15.0", "code": "package search\n\n// Handles indexing different sorts of document and resource type from the OpenCms VFS for the full text search.\npackage search.documents\n// Contains a generic, low-level framework for extration of plain text content out of various popular file formats.\npackage search.extractors\n// These classes control the mapping of the OpenCms content to the Lucene search fields.\npackage search.fields\n// Implements the search functions for the OpenCms Gallery search index, which is used by the Advanced Direct Edit (ADE) functions.\npackage search.galleries\n// The package contains the Solr search integration.\npackage search.solr\n// Indexes resources for the OpenCms search.\nInterface I_CmsIndexer;\n// Abstracts the index writer implementation for the most important index manipulation operations.\nInterface I_CmsIndexWriter;\n// The interface for search documents.\nInterface I_CmsSearchDocument;\n// Interface for search indizes that should be handled by the CmsSearchManager.\nInterface I_CmsSearchIndex;\n// Abstract base class for search indexes.\nClass A_CmsSearchIndex;\n// A VFS indexer that resolves locale dependent documents.\nClass CmsDependencyIndexer;\n// Implements the indexing method for a single resource as thread.\nClass CmsIndexingThread;\n// Implements the management of indexing threads.\nClass CmsIndexingThreadManager;\n// A Lucene search document implementation.\nClass CmsLuceneDocument;\n// Delegates indexing to a standard Lucene IndexWriter.\nClass CmsLuceneIndexWriter;\n// Helper class to access the search facility within a jsp.\nClass CmsSearch;\n// An analyzer class is used by Lucene to reduce the content to be indexed with trimmed endings etc.\nClass CmsSearchAnalyzer;\n// Collects category information during a search process.\nClass CmsSearchCategoryCollector;\n// A document type specifies which document factory class is used to pull the content of an OpenCms document into a Lucene index document.\nClass CmsSearchDocumentType;\n// Abstract search index implementation.\nClass CmsSearchIndex;\n// A search index source is a description of a list of Cms resources to be indexed.\nClass CmsSearchIndexSource;\n// A collection of resources for the incremental update of a search index.\nClass CmsSearchIndexUpdateData;\n// Implements the general management and configuration of the search and indexing facilities in OpenCms.\nClass CmsSearchManager;\n", "des": "Implements the main full text search and indexing functions available in OpenCms."}
{"index": 3306, "repo": "opencms-core-15.0", "code": "package documents\n\n// Used to create index Lucene Documents for OpenCms resources, controls the text extraction algorithm used for a specific OpenCms resource type / MIME type combination.\nInterface I_CmsDocumentFactory;\n// Defines a text extractor for the integrated search engine.\nInterface I_CmsSearchExtractor;\n// Highlights arbitrary terms, used for generation of search excerpts.\nInterface I_CmsTermHighlighter;\n// Base document factory class for a VFS CmsResource, just requires a specialized implementation of I_CmsSearchExtractor.extractContent(CmsObject, CmsResource, I_CmsSearchIndex) for text extraction from the binary document content.\nClass A_CmsVfsDocument;\n// Lucene document factory class to extract index data from a resource of type CmsResourceTypeContainerPage.\nClass CmsDocumentContainerPage;\n// Provides the dependency information about one search result document, used to generate the list of document search results.\nClass CmsDocumentDependency;\n// Lucene document factory class for indexing data from a generic CmsResource.\nClass CmsDocumentGeneric;\n// Lucene document factory class to extract index data from a cms resource containing plain html data.\nClass CmsDocumentHtml;\n// Lucene document factory class to extract text data from a VFS resource that is an OLE 2 MS Office document.\nClass CmsDocumentMsOfficeOLE2;\n// Lucene document factory class to extract text data from a VFS resource that is an OOXML MS Office document.\nClass CmsDocumentMsOfficeOOXML;\n// Lucene document factory class to extract index data from a cms resource containing Open Document Format data.\nClass CmsDocumentOpenOffice;\n// Lucene document factory class to extract index data from a cms resource containing Adobe pdf data.\nClass CmsDocumentPdf;\n// Lucene document factory class to extract index data from a cms resource containing plain text data.\nClass CmsDocumentPlainText;\n// Lucene document factory class to extract index data from a cms resource containing RTF data.\nClass CmsDocumentRtf;\n// Lucene document factory class to extract index data from an OpenCms VFS resource of type CmsResourceTypeXmlContent.\nClass CmsDocumentXmlContent;\n// Lucene document factory class to extract index data from a cms resource of type CmsResourceTypeXmlPage.\nClass CmsDocumentXmlPage;\n// Implements a disk cache that stores text extraction results in the RFS.\nClass CmsExtractionResultCache;\n", "des": "Handles indexing different sorts of document and resource type from the OpenCms VFS for the full text search."}
{"index": 3307, "repo": "opencms-core-15.0", "code": "package extractors\n\n// The result of a document text extraction.\nInterface I_CmsExtractionResult;\n// Allows extraction of the indexable \"plain\" text plus (optional) meta information from a given binary input document format.\nInterface I_CmsTextExtractor;\n// Base utility class that allows extraction of the indexable \"plain\" text from a given document format.\nClass A_CmsTextExtractor;\n// The result of a document text extraction.\nClass CmsExtractionResult;\n// Extracts the text from an HTML document.\nClass CmsExtractorHtml;\n// Extracts text data from a VFS resource that is an OLE 2 MS Office document.\nClass CmsExtractorMsOfficeOLE2;\n// Extracts text data from a VFS resource that is an OOXML MS Office document.\nClass CmsExtractorMsOfficeOOXML;\n// Extracts the text from OpenOffice documents (.ods, .odf).\nClass CmsExtractorOpenOffice;\n// Extracts the text from a PDF document.\nClass CmsExtractorPdf;\n// Extracts the text from a RTF document.\nClass CmsExtractorRtf;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains a generic, low-level framework for extration of plain text content out of various popular file formats."}
{"index": 3308, "repo": "opencms-core-15.0", "code": "package fields\n\n// Interface for search field configurations used by I_CmsSearchIndex and configured in the opencms-search.xml (see CmsSearchConfiguration).\nInterface I_CmsSearchFieldConfiguration;\n// Describes a mapping of a piece of content from an OpenCms VFS resource to a field of a search index.\nInterface I_CmsSearchFieldMapping;\n// Base class for a typical field configuration.\nClass A_CmsSearchFieldConfiguration;\n// Class extracting the Geo coordinates from a content field.\nClass CmsGeoCoordinateFieldMapping;\n// An individual field configuration in a Lucene search index.\nClass CmsLuceneField;\n// Describes a configuration of fields that are used in building a search index.\nClass CmsLuceneFieldConfiguration;\n// Field mapping to resolve macros as for gallery names.\nClass CmsMacroSearchFieldMapping;\n// A abstract implementation for a search field.\nClass CmsSearchField;\n// Abstract implementation for OpenCms search field configurations.\nClass CmsSearchFieldConfiguration;\n// Describes a field configuration using the old (pre 8.0) logic for categories that depend on properties.\nClass CmsSearchFieldConfigurationOldCategories;\n// Describes a mapping of a piece of content from an OpenCms VFS resource to a field of a search index.\nClass CmsSearchFieldMapping;\n// Describes a possible mapping type for a piece of content used in building a search index.\nClass CmsSearchFieldMappingType;\n", "des": "These classes control the mapping of the OpenCms content to the Lucene search fields."}
{"index": 3309, "repo": "opencms-core-15.0", "code": "package galleries\n\n// Macro resolver used to resolve macros for the gallery name mapping.\nClass CmsGalleryNameMacroResolver;\n// Contains the functions for the gallery search.\nClass CmsGallerySearch;\n// Parameters used for the gallery search index.\nClass CmsGallerySearchParameters;\n// \nClass CmsGallerySearchResult;\n// The search result list for the gallery search index.\nClass CmsGallerySearchResultList;\n// Sort parameter constants.\nEnum CmsGallerySearchParameters.CmsGallerySortParam;\n", "des": "Implements the search functions for the OpenCms Gallery search index, which is used by the Advanced Direct Edit (ADE) functions."}
{"index": 3310, "repo": "opencms-core-15.0", "code": "package solr\n\n// Contains the SOLR based spellcheck service classes.\npackage solr.spellchecking\n// Interface for Solr index writers.\nInterface I_CmsSolrIndexWriter;\n// The post document processor can be used in order to manipulate search results after the OpenCms permission check has been done.\nInterface I_CmsSolrPostSearchProcessor;\n// The Solr configuration class.\nClass CmsSolrConfiguration;\n// A search document implementation for Solr indexes.\nClass CmsSolrDocument;\n// Lucene document factory class to extract index data from a resource of type CmsResourceTypeContainerPage.\nClass CmsSolrDocumentContainerPage;\n// Special document text extraction factory for Solr index.\nClass CmsSolrDocumentXmlContent;\n// An individual field for the Solr search index.\nClass CmsSolrField;\n// The search field implementation for Solr.\nClass CmsSolrFieldConfiguration;\n// Implements the search within an Solr index.\nClass CmsSolrIndex;\n// Implements the index writer for the Solr server used by OpenCms.\nClass CmsSolrIndexWriter;\n// This Solr post processor generates for each found document the corresponding link and adds this link into the resulting document as field.\nClass CmsSolrLinkProcessor;\n// A Solr search query.\nClass CmsSolrQuery;\n// Utilities for building and analyzing Solr queries.\nClass CmsSolrQueryUtil;\n// Encapsulates a list of 'OpenCms resource documents' (CmsSearchResource).\nClass CmsSolrResultList;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "The package contains the Solr search integration."}
{"index": 3311, "repo": "opencms-core-15.0", "code": "package spellchecking\n\n// CmsSolrSpellchecker is used to perform spellchecking in OpenCms by using Solr.\nClass CmsSolrSpellchecker;\n// Helping class for manipulating the Solr spellchecker indices.\nClass CmsSpellcheckDictionaryIndexer;\n", "des": "Contains the SOLR based spellcheck service classes."}
{"index": 3312, "repo": "opencms-core-15.0", "code": "package security\n\n// Defines general authorization methods.\nInterface I_CmsAuthorizationHandler;\n// Class providing the privileged login action.\nInterface I_CmsAuthorizationHandler.I_PrivilegedLoginAction;\n// This interface can be used to override or replace user names or passwords which occur in the OpenCms configuration, for example to hide passwords from users who can read the configuration files.\nInterface I_CmsCredentialsResolver;\n// Interface used to provide a protected login method.\nInterface I_CmsLoginAction;\n// \nInterface I_CmsPasswordGenerator;\n// Defines methods for OpenCms password validation.\nInterface I_CmsPasswordHandler;\n// Password handler implementing this interface allow the password security to be evaluated.\nInterface I_CmsPasswordSecurityEvaluator;\n// Permission handler interface.\nInterface I_CmsPermissionHandler;\n// Representation of an identity in the cms (currently user or group), used to define permissions on a resource.\nInterface I_CmsPrincipal;\n// Defines general validation methods.\nInterface I_CmsValidationHandler;\n// An access control entry defines the permissions of a user or group for a distinct resource.\nClass CmsAccessControlEntry;\n// An access control list contains the permission sets of all principals for a distinct resource that are calculated on the permissions defined by various access control entries.\nClass CmsAccessControlList;\n// Validates the user passwords in with advanced password requirements.\nClass CmsAdvancedPasswordHandler;\n// Defines default authorization methods.\nClass CmsDefaultAuthorizationHandler;\n// Default implementation of a I_CmsCredentialResolver, which does nothing but return the credential which was passed in.\nClass CmsDefaultCredentialsResolver;\n// Default Password Generator class.\nClass CmsDefaultPasswordGenerator;\n// Default implementation for OpenCms password validation, just checks if a password is at last 4 characters long.\nClass CmsDefaultPasswordHandler;\n// Generic base driver interface.\nClass CmsDefaultPermissionHandler;\n// Default implementation for the validation handler.\nClass CmsDefaultValidationHandler;\n// An organizational unit in OpenCms.\nClass CmsOrganizationalUnit;\n// This manager provide access to the organizational unit related operations.\nClass CmsOrgUnitManager;\n// Validating bean for changing the password.\nClass CmsPasswordInfo;\n// An immutable permission set that contains both allowed and denied permissions as bitsets.\nClass CmsPermissionSet;\n", "des": "Access control and security classes for the OpenCms ACL permission system."}
{"index": 3313, "repo": "opencms-core-15.0", "code": "package site\n\n// Contains classes related to XML sitemap generation.\npackage site.xmlsitemap\n// Describes a mapping rule that selects a different site root based on whether the requested path matches a set of prefixes or not.\nClass CmsAlternativeSiteRootMapping;\n// Describes a configured site in OpenCms.\nClass CmsSite;\n// Manages all configured sites in OpenCms.\nClass CmsSiteManagerImpl;\n// A matcher object to compare request data against the configured sites.\nClass CmsSiteMatcher;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// The site localization modes.\nEnum CmsSite.LocalizationMode;\n// Represents the different redirect modes for a site alias.\nEnum CmsSiteMatcher.RedirectMode;\n// Enumeration for different SSL Modes of sites.\nEnum CmsSSLMode;\n", "des": "Provides access to the multi-site configuration of OpenCms."}
{"index": 3314, "repo": "opencms-core-15.0", "code": "package xmlsitemap\n\n// Sitemap generator class which tries to eliminate duplicate detail pages for the same content and locale.\nClass CmsDetailPageDuplicateEliminatingSitemapGenerator;\n// A helper class used for calculating which paths need to be included or excluded from the XML sitemap generation.\nClass CmsPathIncludeExcludeSet;\n// Scheduled job for updating the XML sitemap cache.\nClass CmsUpdateXmlSitemapCacheJob;\n// Configuration bean which represents the options which are configurable from a 'seo-file' resource.\nClass CmsXmlSeoConfiguration;\n// Action element class for displaying the XML sitemap from a JSP.\nClass CmsXmlSitemapActionElement;\n// Cache for XML sitemaps.\nClass CmsXmlSitemapCache;\n// Class for generating XML sitemaps for SEO purposes, as described in http://www.sitemaps.org/protocol.html.\nClass CmsXmlSitemapGenerator;\n// A bean which represents an entry in an XML sitemap for SEO purposes.\nClass CmsXmlSitemapUrlBean;\n", "des": "Contains classes related to XML sitemap generation."}
{"index": 3315, "repo": "opencms-core-15.0", "code": "package staticexport\n\n// Allows to configure customized link substitution behavior.\nInterface I_CmsLinkSubstitutionHandler;\n// Provides a method for scrubbing files from the export folder that might have been changed, so that the export is newly created after the next request to the resource.\nInterface I_CmsStaticExportHandler;\n// Abstract implementation for the I_CmsStaticExportHandler interface.\nClass A_CmsOnDemandStaticExportHandler;\n// Abstract base implementation for the I_CmsStaticExportHandler interface.\nClass A_CmsStaticExportHandler;\n// Advanced link substitution behavior.\nClass CmsAdvancedLinkSubstitutionHandler;\n// Extended after publish static export handler, supporting multi-language exports.\nClass CmsAfterPublishMultiLanguageStaticExportHandler;\n// Implementation for the I_CmsStaticExportHandler interface.\nClass CmsAfterPublishStaticExportHandler;\n// Default link substitution behavior.\nClass CmsDefaultLinkSubstitutionHandler;\n// This class provides a file name matcher to find out those resources which must be part of a static export.\nClass CmsExportFolderMatcher;\n// A bean for a export name.\nClass CmsExportname;\n// A export name comparator.\nClass CmsExportname.CmsExportNameComparator;\n// Does the link replacement for the ≶link> tags.\nClass CmsLinkManager;\n// Implements the HTML parser node visitor pattern to exchange all links on the page.\nClass CmsLinkProcessor;\n// Maintains a table of links for an element of a CmsXmlPage.\nClass CmsLinkTable;\n// Comparator used to deterministically order the link table.\nClass CmsLinkTable.LinkKeyComparator;\n// Link substitution handler required to render single tree localized sites.\nClass CmsLocalePrefixLinkSubstitutionHandler;\n// Concrete OnDemandExportHandler.\nClass CmsOnDemandHtmlSubTreeHandler;\n// Concrete OnDemandExportHandler.\nClass CmsOnDemandStaticExportHandler;\n// Implements the file filter used to guess the right suffix of a deleted jsp file.\nClass CmsPrefixFileFilter;\n// Provides a data structure for the result of an export request.\nClass CmsStaticExportData;\n// Help class for storing of export-rules.\nClass CmsStaticExportExportRule;\n// Provides the functionality to export resources from the OpenCms VFS to the file system.\nClass CmsStaticExportManager;\n", "des": "Contains the functionality for the static HTML page export."}
{"index": 3316, "repo": "opencms-core-15.0", "code": "package synchronize\n\n// Defines methods which can be pluged into the syncronisation process between VFS and \"real\" FS.\nInterface I_CmsSynchronizeModification;\n// Contains all methods to synchronize the VFS with the \"real\" FS.\nClass CmsSynchronize;\n// Defines the CmsSynchronizeList object, used to store synchronisation data required to synchronize the VFS and the server FS.\nClass CmsSynchronizeList;\n// Contains the settings for the synchronization.\nClass CmsSynchronizeSettings;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Thrown by a class which implements org.opencms.file.I_CmsSyncModifications.\nClass CmsSynchronizeException;\n", "des": "Classes used to synchronize the OpenCms VFS with the real file system."}
{"index": 3317, "repo": "opencms-core-15.0", "code": "package ui\n\n// Contains classes for workplace actions.\npackage ui.actions\n// Contains code for workplace apps.\npackage ui.apps\n// Contains some reusable GUI components for Vaadin UI.\npackage ui.components\n// Contains code for workplace context menu.\npackage ui.contextmenu\n// Contains code for workplace dialogs.\npackage ui.dialogs\n// The available content editors.\npackage ui.editors\n// Contains the user interface components for the Vaadin-based login dialog.\npackage ui.login\n// Contains the user interface components for reports.\npackage ui.report\n// Vaadin GUI components and utilities for use in the sitemap editor.\npackage ui.sitemap\n// Utilities for Vaadin workplace code.\npackage ui.util\n// Factory to create components.\nInterface I_CmsAppView;\n// Context for dialogs opened from the context menu.\nInterface I_CmsDialogContext;\n// Interface for a dialog context which also has access to the ADE context for which it is used.\nInterface I_CmsDialogContextWithAdeContext;\n// Action context that allows direct editing of single properties.\nInterface I_CmsEditPropertyContext;\n// Provides buttons for a dialog.\nInterface I_CmsHasButtons;\n// Handles updates to items of a given type.\nInterface I_CmsUpdateListener<T>;\n// Abstract dialog context.\nClass A_CmsDialogContext;\n// Abstract UI class providing access to the OpenCms context.\nClass A_CmsUI;\n// An icon resource.\nClass CmsCssIcon;\n// Generates user ident-icons.\nClass CmsUserIconHelper;\n// Error handler for uncaught Vaadin exceptions.\nClass CmsVaadinErrorHandler;\n// Vaadin utility functions.\nClass CmsVaadinUtils;\n// Helper class for building option groups.\nClass CmsVaadinUtils.OptionGroupBuilder;\n// Message bundle class.\nClass Messages;\n// Container property ids.\nEnum CmsVaadinUtils.PropertyId;\n// The available OpenCms workplace icons.\nEnum FontOpenCms;\n// The available context types.\nEnum I_CmsDialogContext.ContextType;\n", "des": "General code for the Vaadin UI."}
{"index": 3318, "repo": "opencms-core-15.0", "code": "package actions\n\n// Interface for actions used within the ADE context.\nInterface I_CmsADEAction;\n// Marks workplace actions as an default action to be executed on item click within the file table.\nInterface I_CmsDefaultAction;\n// Workplace action interface.\nInterface I_CmsWorkplaceAction;\n// Action to edit a file given by the file param.\nClass A_CmsEditFileAction;\n// Class representing an abstract gallery dialog action.\nClass A_CmsGalleryDialogAction;\n// Abstract class for actions to display a JSP file in a vaadin window.\nClass A_CmsJSPAction;\n// Workplace action only visible in the toolbar context menus, not within the file table.\nClass A_CmsToolbarAction;\n// Abstract workplace actions class providing helper methods.\nClass A_CmsWorkplaceAction;\n// The about dialog action.\nClass CmsAboutDialogAction;\n// The availability dialog action.\nClass CmsAvailabilityDialogAction;\n// The categories dialog action.\nClass CmsCategoriesDialogAction;\n// The change type dialog action.\nClass CmsChangeTypeDialogAction;\n// A workplace action context menu item.\nClass CmsContextMenuActionItem;\n// The copy move dialog action.\nClass CmsCopyDialogAction;\n// Action for the 'copy page' dialog.\nClass CmsCopyPageDialogAction;\n// The copy to project dialog action.\nClass CmsCopyToProjectDialogAction;\n// The delete dialog action.\nClass CmsDeleteDialogAction;\n// The direct publish dialog action.\nClass CmsDirectPublishDialogAction;\n// The display action.\nClass CmsDisplayAction;\n// The edit control code dialog action.\nClass CmsEditCodeDialogAction;\n// Action to logout.\nClass CmsEditContentAction;\n// The edit dialog action.\nClass CmsEditDialogAction;\n// The edit page action.\nClass CmsEditPageAction;\n// Action for editing external links resources.\nClass CmsEditPointerAction;\n// The edit table property action.\nClass CmsEditPropertyAction;\n// Action to logout.\nClass CmsEditSmallElementsAction;\n// The delete dialog action.\nClass CmsEditUserDialogAction;\n// The action for the favorite dialog.\nClass CmsFavoriteDialogAction;\n// The form edit dialog action.\nClass CmsFormEditDialogAction;\n", "des": "Contains classes for workplace actions."}
{"index": 3319, "repo": "opencms-core-15.0", "code": "package apps\n\n// Contains classes of the cache admin app.\npackage apps.cacheadmin\n// Contains classes of the cache admin app.\npackage apps.dbmanager\n// Contains classes of the file history app.\npackage apps.filehistory\n// This package contains the app classes for the git check in functionality.\npackage apps.git\n// Contains classes of the link validation app.\npackage apps.linkvalidation\n// This package contains the app classes for the list configurations manager.\npackage apps.lists\n// Contains classes of the site manager app.\npackage apps.logfile\n// Contains classes of the module manager app.\npackage apps.modules\n// The project manager app classes.\npackage apps.projects\n// Contains classes of the publish queue app.\npackage apps.publishqueue\n// The scheduled jobs manager app classes.\npackage apps.scheduler\n// Contains classes of the source search app.\npackage apps.search\n// Contains classes of the searchindex app.\npackage apps.searchindex\n// Contains classes of the site manager app.\npackage apps.sessions\n// Contains classes of the site manager app.\npackage apps.sitemanager\n// Contains classes of the user manager app.\npackage apps.user\n// Generates app launcher buttons.\nInterface I_CmsAppButtonProvider;\n// App category interface.\nInterface I_CmsAppCategory;\n// Used to write app settings to the user.\nInterface I_CmsAppSettings;\n// The app ui context.\nInterface I_CmsAppUIContext;\n// Apps implementing this interface will be stored in the user session so returning to the app will be quicker and use less resources.\nInterface I_CmsCachableApp;\n// Provides the dialog context to context menus and other context sensitive dialogs.\nInterface I_CmsContextProvider;\n// Interface for apps which perform CRUD operations on any kind of element like CmsSites or CmsScheduledJobs.\nInterface I_CmsCRUDApp<T>;\n// Displays a sub menu in the app launch pad.\nInterface I_CmsFolderAppCategory;\n// Implement this interface for apps that require special app launch actions.\nInterface I_CmsHasAppLaunchCommand;\n// Sortable configuration item interface.\nInterface I_CmsHasOrder;\n// To provide shortcut actions an app may implement this intreface.\nInterface I_CmsHasShortcutActions;\n", "des": "Contains code for workplace apps."}
{"index": 3320, "repo": "opencms-core-15.0", "code": "package cacheadmin\n\n// Interface for the dialogs.\nInterface CmsFlushCache.I_CloseableDialog;\n// Vaadin app for Cache Administration.\nClass CmsCacheAdminApp;\n// Configuration for Cache Administration vaadin-tool.\nClass CmsCacheAdminConfiguration;\n// Class for the Cache folder.\nClass CmsCacheFolder;\n// Class for the app which shows the content of caches.\nClass CmsCacheViewApp;\n// Configuration class for the view flex cache app.\nClass CmsCacheViewFlexConfiguration;\n// Configuration class for the image cache view app.\nClass CmsCacheViewImageConfiguration;\n// Dialog to confirm flush without any options.\nClass CmsConfirmSimpleFlushDialog;\n// Dialog for clean flex cache.\nClass CmsFlexCacheCleanDialog;\n// Table showong content of flex cache.\nClass CmsFlexCacheTable;\n// Dialog for the flush actions.\nClass CmsFlushButtonHolderDialog;\n// Vaadin Layout with Buttons to clear the different types of cache.\nClass CmsFlushCache;\n// Dialog to clean Image Cache.\nClass CmsImageCacheCleanDialog;\n// Image Cache helper.\nClass CmsImageCacheHelper;\n// Helper class for getting information about cached images.\nClass CmsImageCacheHolder;\n// class for the input dialog to search for cached images.\nClass CmsImageCacheInput;\n// Table to show entries of image cache.\nClass CmsImageCacheTable;\n// Table showing information about variations of images.\nClass CmsImageVariationsTable;\n// Bean for Variations im image resources.\nClass CmsVariationBean;\n// Class for the dialog to show variations of flex cache and image cache.\nClass CmsVariationsDialog;\n// Modes to run this app.\nEnum CmsCacheViewApp.Mode;\n", "des": "Contains classes of the cache admin app."}
{"index": 3321, "repo": "opencms-core-15.0", "code": "package dbmanager\n\n// Interface for Apps, which run an import thread for files.\nInterface I_CmsReportApp;\n// Abstract class for HTTP imports.\nClass A_CmsHTTPImportForm;\n// Abstract class for a form to import a file.\nClass A_CmsImportForm;\n// Abstract class for the import from a folder on the server.\nClass A_CmsServerImportForm;\n// Dialog used to enter a list of paths to be added to the resources in the database export dialog.\nClass CmsAddExportResourcesDialog;\n// Class for dialog to create property definition.\nClass CmsAddPropertyDefinitionDialog;\n// Class for the database export function.\nClass CmsDbExportApp;\n// Configuration for Database manager app.\nClass CmsDbExportConfiguration;\n// Class for the Export dialog.\nClass CmsDbExportView;\n// Class for the database import app.\nClass CmsDbImportApp;\n// HTTP import class.\nClass CmsDbImportHTTP;\n// Configuration for Database manager app.\nClass CmsDbImportHTTPConfiguration;\n// Class for the import from server option.\nClass CmsDbImportServer;\n// Class for app configuration.\nClass CmsDbImportServerConfiguration;\n// Class for database manager app.\nClass CmsDbManager;\n// Configuration for Database manager app.\nClass CmsDbManagerConfiguration;\n// Class for the app folder.\nClass CmsDbManagerFolder;\n// Class for the property definition app.\nClass CmsDbPropertiesApp;\n// Configuration class for property app.\nClass CmsDbPropertiesAppConfiguration;\n// Remove publish locks.\nClass CmsDbRemovePublishLocks;\n// App for the remove publish-locks function.\nClass CmsDbRemovePubLocksApp;\n// Class for app configuration.\nClass CmsDbRemovePubLocksConfiguration;\n// Class for the database static export app.\nClass CmsDbStaticExportApp;\n// Configuration for Database manager app.\nClass CmsDbStaticExportConfiguration;\n// Class for the static export view.\nClass CmsDbStaticExportView;\n// Class for the synchronization dialog.\nClass CmsDbSynchDialog;\n// Class for the database synchronization app.\nClass CmsDbSynchronizationApp;\n// Configuration class for the synchronization app.\nClass CmsDbSynchronizationConfiguration;\n// Synchronization layout class.\nClass CmsDbSynchronizationView;\n// The export thread report.\nClass CmsExportThreadDialog;\n// \nClass CmsImportFile;\n", "des": "Contains classes of the cache admin app."}
{"index": 3322, "repo": "opencms-core-15.0", "code": "package filehistory\n\n// App for the history settings and clearing of history.\nClass CmsFileHistoryApp;\n// Configuration class of file history app.\nClass CmsFileHistoryConfiguration;\n// Class for the folder with the file history apps.\nClass CmsFileHistoryFolder;\n// Class for the clear file history dialog and execution.\nClass CmsFileHistoryPanel;\n// Class for the history settings dialog.\nClass CmsFileHistorySettings;\n// Clears the file history of the OpenCms database.\nClass CmsHistoryClearThread;\n", "des": "Contains classes of the file history app."}
{"index": 3323, "repo": "opencms-core-15.0", "code": "package git\n\n// Dialog that prints the result of the execution of a git action.\nClass CmsGitActionResultPanel;\n// App configuration for the Git checkin tool.\nClass CmsGitAppConfiguration;\n// The class provides methods to automatically export modules from OpenCms and check in the exported, unzipped modules into some git repository.\nClass CmsGitCheckin;\n// Access to a single git configuration file.\nClass CmsGitConfiguration;\n// Main widget for the Git check-in tool.\nClass CmsGitToolOptionsPanel;\n// Message bundle class.\nClass Messages;\n", "des": "This package contains the app classes for the git check in functionality."}
{"index": 3324, "repo": "opencms-core-15.0", "code": "package linkvalidation\n\n// Interface with method to update a vaadin table.\nInterface I_CmsUpdatableComponent;\n// Validator for links.\nClass A_CmsLinkValidator;\n// Thread for extern link validation.\nClass CmsExternalLinksValidatorThread;\n// Class for the layout for choosing the resources.\nClass CmsInternalResources;\n// App to check relations of resources in folder to other folder.\nClass CmsLinkInFolderValidationApp;\n// Configuration for Check relation to resources outside of folder - app.\nClass CmsLinkInFolderValidationConfiguration;\n// Class for the Link validation app.\nClass CmsLinkValidationApp;\n// Configuration for Link Validation app.\nClass CmsLinkValidationConfiguration;\n// Class for the external link validation.\nClass CmsLinkValidationExternal;\n// Class for the Link validation app.\nClass CmsLinkValidationExternalApp;\n// Configuration for Link Validation app.\nClass CmsLinkValidationExternalConfiguration;\n// Class for the folder for the link validation tools.\nClass CmsLinkValidationFolder;\n// Result table for broken internal relations.\nClass CmsLinkValidationInternalTable;\n// Dialog to show list of resources.\nClass CmsResourceListDialog;\n", "des": "Contains classes of the link validation app."}
{"index": 3325, "repo": "opencms-core-15.0", "code": "package lists\n\n// Dialog handler to handle the selected option.\nInterface CmsOptionDialog.I_OptionHandler;\n// Manager for list configuration files.\nClass CmsListManager;\n// The list manager app configuration.\nClass CmsListManagerConfiguration;\n// Option dialog.\nClass CmsOptionDialog;\n// Displays search result facets.\nClass CmsResultFacets;\n// Table to display the list manager search results.\nClass CmsResultTable;\n", "des": "This package contains the app classes for the list configurations manager."}
{"index": 3326, "repo": "opencms-core-15.0", "code": "package logfile\n\n// Provides log file download functionality.\nInterface I_CmsLogDownloadProvider;\n// Default implementation for the log download functionality.\nClass CmsDefaultLogDownloadProvider;\n// Class for table to display and edit Log channels.\nClass CmsLogChannelTable;\n// Class for the Download dialog.\nClass CmsLogDownloadDialog;\n// Helper class for generating the zip file for the log download.\nClass CmsLogDownloadDialog.ZipGenerator;\n// Main class of Log management app.\nClass CmsLogFileApp;\n// Configuration class for Log management app.\nClass CmsLogFileConfiguration;\n// Provides log files which should be available as options in the OpenCms log file viewer.\nClass CmsLogFileOptionProvider;\n// Class for the view of log files.\nClass CmsLogFileView;\n// Class for the log file view settings dialog.\nClass CmsLogFileViewSettings;\n", "des": "Contains classes of the site manager app."}
{"index": 3327, "repo": "opencms-core-15.0", "code": "package modules\n\n// Contains classes of the module manager app used to edit modules.\npackage modules.edit\n// Abstract superclass for the module import forms.\nClass A_CmsModuleImportForm;\n// Module import dialog with two tabs, one for importing via HTTP and one for importing from the server.\nClass CmsImportTabForm;\n// Main module manager app class.\nClass CmsModuleApp;\n// Additional app attributes for the module manager.\nClass CmsModuleApp.Attributes;\n// Contains the icon constants for the module manager.\nClass CmsModuleApp.Icons;\n// Contains the different navigation states for the module maanger.\nClass CmsModuleApp.States;\n// App configuration for the module maanger app.\nClass CmsModuleAppConfiguration;\n// The module export dialog.\nClass CmsModuleExportDialog;\n// A bean representing a module zip file to be imported.\nClass CmsModuleImportFile;\n// The form for importing modules via HTTP.\nClass CmsModuleImportForm;\n// Report thread for importing a module.\nClass CmsModuleImportThread;\n// Widget to display the list of resource / explorer types defined in a module.\nClass CmsModuleInfoDialog;\n// Represents a row of the modules overview table.\nClass CmsModuleRow;\n// Overview list for module information.\nClass CmsModuleTable<T>;\n// \nClass CmsNewTypeForm;\n// The form for importing a module from the application server.\nClass CmsServerModuleImportForm;\n// The dialog for selecting a site when exporting / deleting a module without a module site.\nClass CmsSiteSelectDialog;\n", "des": "Contains classes of the module manager app."}
{"index": 3328, "repo": "opencms-core-15.0", "code": "package edit\n\n// Form for editing a module.\nClass CmsEditModuleForm;\n// Widget used to edit a module export point.\nClass CmsExportPointWidget;\n// Widget used to edit a module dependency.\nClass CmsModuleDependencyWidget;\n// A widget for selecting a module resource.\nClass CmsModuleResourceSelectField;\n// Helper class used when new options are automatically added to a site selector combo box.\nClass CmsSiteSelectorNewValueHandler;\n", "des": "Contains classes of the module manager app used to edit modules."}
{"index": 3329, "repo": "opencms-core-15.0", "code": "package projects\n\n// The edit project form component.\nClass CmsEditProjectForm;\n// The project history table.\nClass CmsProjectHistoryTable;\n// The project manager app.\nClass CmsProjectManager;\n// The project manager app configuration.\nClass CmsProjectManagerConfiguration;\n// The project overview app configuration.\nClass CmsProjectOverviewConfiguration;\n// The projects table.\nClass CmsProjectsTable;\n// \nClass CmsProjectsTable.ProjectResources;\n", "des": "The project manager app classes."}
{"index": 3330, "repo": "opencms-core-15.0", "code": "package publishqueue\n\n// Class for the Publish queue app.\nClass CmsPublishQueue;\n// Configuration class for the publish queue app.\nClass CmsPublishQueueConfiguration;\n// Vertical Layout showing a publish report of a publish job.\nClass CmsPublishReport;\n// Class for the published resources dialog.\nClass CmsPublishResources;\n// Class for Vaadin Table showing history queue elements.\nClass CmsQueuedTable;\n", "des": "Contains classes of the publish queue app."}
{"index": 3331, "repo": "opencms-core-15.0", "code": "package scheduler\n\n// Don't use CmsScheduledJobInfo directly, so we don't need to change it if we want to change how the values are rendered, and having only the fields we want displayed in the table makes it easier to understand.\nClass CmsJobBean;\n// Form used to edit a scheduled job.\nClass CmsJobEditView;\n// The scheduled jobs manager app.\nClass CmsJobManagerApp;\n// Table used to display scheduled jobs, together with buttons for modifying the jobs.\nClass CmsJobTable;\n// App configuration for the job scheduler.\nClass CmsScheduledJobsAppConfig;\n// Property columns of table, including their Messages for header.\nEnum CmsJobTable.TableProperty;\n", "des": "The scheduled jobs manager app classes."}
{"index": 3332, "repo": "opencms-core-15.0", "code": "package search\n\n// Settings bean for the dialog.\nClass CmsSearchReplaceSettings;\n// Searches in sources.\nClass CmsSearchReplaceThread;\n// The source search app.\nClass CmsSourceSearchApp;\n// The source search app configuration.\nClass CmsSourceSearchAppConfiguration;\n// The source search form.\nClass CmsSourceSearchForm;\n// The available search types.\nEnum CmsSourceSearchForm.SearchType;\n", "des": "Contains classes of the source search app."}
{"index": 3333, "repo": "opencms-core-15.0", "code": "package searchindex\n\n// Implements methods to utilize a report thread for CmsIndexingReport.\nClass CmsIndexingReportThread;\n// Class for the search index app.\nClass CmsSearchindexApp;\n// Configuration class for the searchindex app.\nClass CmsSearchindexAppConfiguration;\n// Class for the GUI to rebuild indexes.\nClass CmsSearchindexRebuild;\n// Class for the vaadin table to show the indexes.\nClass CmsSearchIndexTable;\n// Class for the dialog to show source information of a given index.\nClass CmsSourceDialog;\n", "des": "Contains classes of the searchindex app."}
{"index": 3334, "repo": "opencms-core-15.0", "code": "package sessions\n\n// Configuration class of app.\nClass CmsBroadCastConfigurtion;\n// Class for the Edit Login View.\nClass CmsEditLoginView;\n// Class for the dialog to kill sessions.\nClass CmsKillSessionDialog;\n// Class for the dialiog to send broadcasts.\nClass CmsSendBroadcastDialog;\n// Class for the broadcast app.\nClass CmsSessionsApp;\n// Class for the table to show all current sessions.\nClass CmsSessionsTable;\n// Dialog to show user information and to switch to user session.\nClass CmsUserInfoDialog;\n", "des": "Contains classes of the site manager app."}
{"index": 3335, "repo": "opencms-core-15.0", "code": "package sitemanager\n\n// Report thread to save site configurations.\nClass CmsCreateSiteThread;\n// Dialog for deleting Sites.\nClass CmsDeleteSiteDialog;\n// Class for the Form to edit or add a site.\nClass CmsEditSiteForm;\n// Class for the Global configuration dialog.\nClass CmsGlobalForm;\n// Manager class for the Site manager app.\nClass CmsSiteManager;\n// Configuration class for the site management app.\nClass CmsSiteManagerConfiguration;\n// Class to create Vaadin Table object with all available sites.\nClass CmsSitesTable;\n// Executes a script file.\nClass CmsSitesWebserverThread;\n// Class for the Web server configuration form and execution of script.\nClass CmsWebServerConfigForm;\n// Layout for workplace server configuration.\nClass CmsWorkplaceServerWidget;\n// Table properties.\nEnum CmsSitesTable.TableProperty;\n", "des": "Contains classes of the site manager app."}
{"index": 3336, "repo": "opencms-core-15.0", "code": "package user\n\n// Interface for tables which support a filter function.\nInterface I_CmsFilterableTable;\n// Interface for OU tree types.\nInterface I_CmsOuTreeType;\n// Interface for fetching randomly generated passwords.\nInterface I_CmsPasswordFetcher;\n// Interface for toggable tables.\nInterface I_CmsToggleTable;\n// Interface for providers of tree types in the account management overview tree.\nInterface I_CmsTreeTypeProvider;\n// Abstract class for dialogs to change role or groups of a given user.\nClass A_CmsEditUserGroupRoleDialog;\n// Class to export user.\nClass A_CmsImportExportUserDialog;\n// App for the OU Management.\nClass CmsAccountsApp;\n// Configuration for Account Management app.\nClass CmsAccountsAppConfiguration;\n// Class for the Additional User info dialog.\nClass CmsAdditionalInfosDialog;\n// Table showing available items from A_CmsEditUserGroupRoleDialog.\nClass CmsAvailableRoleOrPrincipalTable;\n// Helper to produce Csv files.\nClass CmsCsvWriter;\n// Class for the table to view and edit groups of a given user.\nClass CmsCurrentRoleOrPrincipalTable;\n// Default tree type provider implementation.\nClass CmsDefaultTreeTypeProvider;\n// Dialog for delete multiple principal.\nClass CmsDeleteMultiplePrincipalDialog;\n// Dialog for delete of principals and ous.\nClass CmsDeleteOUDialog;\n// Dialog to generate a random password.\nClass CmsGeneratePasswordDialog;\n// Class for the dialog to edit or create a CmsGroup.\nClass CmsGroupEditDialog;\n// The group edit parameters.\nClass CmsGroupEditParameters;\n// Table showing all Groups of a user.\nClass CmsGroupsOfUserTable;\n// Class for the table containing groups of a ou.\nClass CmsGroupTable;\n// Dialog for CSV im- and export.\nClass CmsImportExportUserDialog;\n// Class for the import user thread.\nClass CmsImportUserThread;\n// Dialog to change OU of given user.\nClass CmsMoveUserToOU;\n// Dialog to create new element.\nClass CmsNewElementDialog;\n// Class for the ou edit and new dialog.\nClass CmsOUEditDialog;\n// Ou Handler.\nClass CmsOUHandler;\n// Class to show ous in table for account management.\nClass CmsOUTable;\n", "des": "Contains classes of the user manager app."}
{"index": 3337, "repo": "opencms-core-15.0", "code": "package components\n\n// Contains components for editing a homogeneous list of Vaadin components, often used for multivalued fields in dialogs.\npackage components.editablegroup\n// Contains Vaadin UI extensions.\npackage components.extensions\n// Contains components for selecting resources.\npackage components.fileselect\n// Handles automatic creation of new values.\nInterface CmsAutoItemCreatingComboBox.I_NewValueHandler;\n// Handles folder selects in the file table.\nInterface CmsFileTable.I_FolderSelectHandler;\n// Provides item property values for additional table columns.\nInterface CmsResourceTable.I_ResourcePropertyProvider;\n// Upload listener interface.\nInterface CmsUploadButton.I_UploadListener;\n// File table inline edit handler.\nInterface I_CmsFilePropertyEditHandler;\n// Window close listener.\nInterface I_CmsWindowCloseListener;\n// Shortcut listener that will only be active, while the given text field has the keyboard focus.\nClass A_CmsFocusShortcutListener;\n// The layout used within the app view.\nClass CmsAppViewLayout;\n// A combo box which automatically creates a new option if setValue is called with an item id not already contained in the data source.\nClass CmsAutoItemCreatingComboBox;\n// Basic dialog class with a content panel and button bar.\nClass CmsBasicDialog;\n// Page to display a report.\nClass CmsBasicReportPage;\n// The bread crumb component.\nClass CmsBreadCrumb;\n// Extending the browser frame class to allow setting of the iFrame name attribute.\nClass CmsBrowserFrame;\n// Form row with button.\nClass CmsButtonFormRow<T extends com.vaadin.ui.Component>;\n// Basic confirmation dialog.\nClass CmsConfirmationDialog;\n// The copy to clip-board/select text button.\nClass CmsCopyToClipboardButton;\n// Convenience subclass of PopupDateField which comes preconfigured with a resolution and validation error message.\nClass CmsDateField;\n// Dialog used to display error stack traces in the workplace.\nClass CmsErrorDialog;\n// Site selector widget which also optionally offers subsite options.\nClass CmsExtendedSiteSelector;\n// Class representing a single option.\nClass CmsExtendedSiteSelector.SiteSelectorOption;\n// Single component container that can render the given component in any HTML element.\nClass CmsExternalLayout;\n", "des": "Contains some reusable GUI components for Vaadin UI."}
{"index": 3338, "repo": "opencms-core-15.0", "code": "package editablegroup\n\n// Handles state changes when the group becomes empty/not empty.\nInterface CmsEditableGroup.I_EmptyHandler;\n// Interface for group row components that can have errors.\nInterface CmsEditableGroup.I_HasError;\n// Builds editable group rows by wrapping other components.\nInterface CmsEditableGroup.I_RowBuilder;\n// Server side handler interface for button presses in a multivalue widget group row's button bar.\nInterface I_CmsEditableGroupActionHandler;\n// Interface for components used as editable group rows.\nInterface I_CmsEditableGroupRow;\n// Default action handler for group buttons.\nClass CmsDefaultActionHandler;\n// Manages a group of widgets used as a multivalue input.\nClass CmsEditableGroup;\n// Empty handler which shows or hides an 'Add' button to add new rows, depending on whether the group is empty.\nClass CmsEditableGroup.AddButtonEmptyHandler;\n// Default implementation for row builder.\nClass CmsEditableGroup.DefaultRowBuilder;\n// Button bar for manipulating rows in a multivalued field list.\nClass CmsEditableGroupButtons;\n// Default implementation for row for multivalue field lists.\nClass CmsEditableGroupRow;\n", "des": "Contains components for editing a homogeneous list of Vaadin components, often used for multivalued fields in dialogs."}
{"index": 3339, "repo": "opencms-core-15.0", "code": "package extensions\n\n// Callback interfaces for height change notifications.\nInterface CmsMaxHeightExtension.I_HeightChangeHandler;\n// Extension to add a CSS class to any component depending on it's scroll position.\nClass CmsAutoGrowingTextArea;\n// The extension that provides RPC communication between the client and server side of embedded VAADIN dialogs.\nClass CmsEmbeddedDialogExtension;\n// Extension used to open existing GWT based dialogs (from ADE, etc.) from the server side, for use in context menu actions.\nClass CmsGwtDialogExtension;\n// Extension to allow clientside history back and forward.\nClass CmsHistoryExtension;\n// Vaadin extension class for a BrowserFrame to display a JSP.\nClass CmsJSPBrowserFrameExtension;\n// Allows the use of max height in combination with vaadin layout components.\nClass CmsMaxHeightExtension;\n// Allows the use of max height in combination with vaadin layout components.\nClass CmsPollServerExtension;\n// Extension used for the GWT-based property dialog called from the workplace.\nClass CmsPropertyDialogExtension;\n// Extension to add a CSS class to any component depending on it's scroll position.\nClass CmsScrollPositionCss;\n// Extends the given component to be an upload drop area.\nClass CmsUploadAreaExtension;\n// Makes window close events available on the server side.\nClass CmsWindowCloseExtension;\n// Extension used to open new browser windows.\nClass CmsWindowExtension;\n", "des": "Contains Vaadin UI extensions."}
{"index": 3340, "repo": "opencms-core-15.0", "code": "package fileselect\n\n// Handles selection of a generic type T.\nInterface I_CmsSelectionHandler<T>;\n// Abstract file select field.\nClass A_CmsFileSelectField<T>;\n// Filter used to hide folder tree items which are not either navigation items themselves or are required to navigate from the site root to a navigation item.\nClass CmsNavigationFilter;\n// File path select field.\nClass CmsPathSelectField;\n// Dialog with a site selector and file tree which can be used to select resources.\nClass CmsResourceSelectDialog;\n// Class for site select options.\nClass CmsResourceSelectDialog.Options;\n// Contents of the resource select dialog, filled using the declarative layout mechanism.\nClass CmsResourceSelectDialogContents;\n// The data container for the sitmeap folder selection tree.\nClass CmsResourceTreeContainer;\n// Tree subclass used to display VFS resource trees.\nClass CmsResourceTreeTable;\n// Extends the default sorting to differentiate between files and folder when sorting by name.\nClass CmsResourceTreeTable.FileSorter;\n", "des": "Contains components for selecting resources."}
{"index": 3341, "repo": "opencms-core-15.0", "code": "package contextmenu\n\n// ContextMenuClosedListener is used to listen for the event that the context menu is closed, either when a item is clicked or when the popup is canceled.\nInterface CmsContextMenu.ContextMenuClosedListener;\n// ContextMenuItemClickListener is listener for context menu items wanting to notify listeners about item click\nInterface CmsContextMenu.ContextMenuItemClickListener;\n// ContextMenuOpenedListener is used to modify the content of context menu based on what was clicked.\nInterface CmsContextMenu.ContextMenuOpenedListener;\n// ComponentListener is used when context menu is extending a component and works in mode where auto opening is disabled.\nInterface CmsContextMenu.ContextMenuOpenedListener.ComponentListener;\n// ContextMenuOpenedListener.TableListener sub interface for table related context menus.\nInterface CmsContextMenu.ContextMenuOpenedListener.TableListener;\n// Tree listener interface.\nInterface CmsContextMenu.ContextMenuOpenedListener.TreeListener;\n// Action to perform when a context menu item is clicked.\nInterface I_CmsContextMenuAction;\n// Builds an explorer context menu based on the set of selected resources' IDs.\nInterface I_CmsContextMenuBuilder;\n// Interface for workplace context menu items.\nInterface I_CmsContextMenuItem;\n// Interface for classes which provide context menu items.\nInterface I_CmsContextMenuItemProvider;\n// Interface used to check menu item visibility for context menus.\nInterface I_CmsHasMenuItemVisibility;\n// Interface for generic context menu entris.\nInterface I_CmsSimpleContextMenuEntry<T>;\n// This interface allows special styles for certain entries.\nInterface I_CmsSimpleContextMenuEntry.I_HasCssStyles;\n// Abstract superclass for menu item visibility checks.\nClass A_CmsSimpleVisibilityCheck;\n// A wrapper context menu action which first checks whether the resources for which the action is executed have any children locked by different users.\nClass CmsBlockingLockCheck;\n// ContextMenu is an extension which can be attached to any Vaadin component to display a popup context menu.\nClass CmsContextMenu;\n// ContextMenuClosedEvent is an event fired by the context menu when it's closed.\nClass CmsContextMenu.ContextMenuClosedEvent;\n// ContextMenuItemClickEvent is an event produced by the context menu item when it is clicked.\nClass CmsContextMenu.ContextMenuItemClickEvent;\n", "des": "Contains code for workplace context menu."}
{"index": 3342, "repo": "opencms-core-15.0", "code": "package dialogs\n\n// Contains code for the availability dialog.\npackage dialogs.availability\n// Contains code for the file history dialog.\npackage dialogs.history\n// Contains permission dialog classes.\npackage dialogs.permissions\n// Implementing classes provide a title.\nInterface I_CmsHasTitle;\n// \nClass A_CmsSelectResourceTypeDialog;\n// Dialog for changing the resource type.\nClass CmsChangeTypeDialog;\n// The copy move dialog.\nClass CmsCopyMoveDialog;\n// The copy to project dialog.\nClass CmsCopyToProjectDialog;\n// Dialog for deleting resources.\nClass CmsDeleteDialog;\n// Context for dialogs embedded into plain GWT modules.\nClass CmsEmbeddedDialogContext;\n// Separate UI for VAADIN based dialog embedded into a GWT module.\nClass CmsEmbeddedDialogsUI;\n// Class representing a dialog for optimizing galleries.\nClass CmsGalleryOptimizeDialog;\n// Dialog for creating new resources.\nClass CmsNewDialog;\n// The project select dialog.\nClass CmsProjectSelectDialog;\n// The publish schedule dialog.\nClass CmsPublishScheduledDialog;\n// Dialog used to change resource modification times.\nClass CmsReindexDialog;\n// Dialog for restoring deleted resources in a folder.\nClass CmsRestoreDeletedDialog;\n// Dialog used to change resource modification times.\nClass CmsSecureExportDialog;\n// The site select dialog.\nClass CmsSiteSelectDialog;\n// Dialog used to change resource modification times.\nClass CmsTouchDialog;\n// Dialog used to change resource modification times.\nClass CmsUndeleteDialog;\n// Dialog used to change resource modification times.\nClass CmsUndoDialog;\n// Dialog to edit the user data.\nClass CmsUserDataDialog;\n// Message bundle class.\nClass Messages;\n// The copy/move actions.\nEnum CmsCopyMoveDialog.Action;\n// The dialog mode.\nEnum CmsCopyMoveDialog.DialogMode;\n", "des": "Contains code for workplace dialogs."}
{"index": 3343, "repo": "opencms-core-15.0", "code": "package availability\n\n// Availability dialog.\nClass CmsAvailabilityDialog;\n// A bean that holds the informations of the availability dialog.\nClass CmsAvailabilityInfoBean;\n", "des": "Contains code for the availability dialog."}
{"index": 3344, "repo": "opencms-core-15.0", "code": "package history\n\n// Contains code for the comparison view of the file history dialog.\npackage history.diff\n// Dialog used to change resource modification times.\nClass CmsHistoryDialog;\n// Represents a row of the file history table.\nClass CmsHistoryRow;\n", "des": "Contains code for the file history dialog."}
{"index": 3345, "repo": "opencms-core-15.0", "code": "package diff\n\n// Interface for classes which display a comparison widget in the comparison view of the history dialog.\nInterface I_CmsDiffProvider;\n// Abstract super class for displaying differences between a set of properties / attributes.\nClass A_CmsAttributeDiff;\n// Predicate used to check if an attribute comparison bean actually represents a difference.\nClass A_CmsAttributeDiff.IsAttributeDifference;\n// Displays changes between attributes (size, modification date, etc.\nClass CmsAttributeDiff;\n// Displays two image versions side by side, scaled.\nClass CmsImageDiff;\n// Represents a row in an attribute comparison table.\nClass CmsPropertyCompareBean;\n// Displays differences between the sets of properties of two versions of a resource.\nClass CmsPropertyDiff;\n// Provides buttons for showing the two versions being compared.\nClass CmsShowVersionButtons;\n// Interprets two versions of a resource as text files, and shows a diff view for the two texts.\nClass CmsTextDiff;\n// Widget used to display a colorized diff view for two texts.\nClass CmsTextDiffPanel;\n// Represents a row of the XML content value comparison table.\nClass CmsValueCompareBean;\n// Displays either a diff for the XML file, or a table displaying the differences between individual content values, allowing the user to switch between the two views.\nClass CmsValueDiff;\n// \nClass CmsVersionMacroResolver;\n", "des": "Contains code for the comparison view of the file history dialog."}
{"index": 3346, "repo": "opencms-core-15.0", "code": "package permissions\n\n// Permission change handler.\nInterface CmsPermissionView.PermissionChangeHandler;\n// Handles the principal selection.\nInterface CmsPrincipalSelect.I_PrincipalSelectHandler;\n// Interface for use of CmsPrincipleSelectDialog.\nInterface I_CmsPrincipalSelect;\n// Bean for permissions which have changed.\nClass CmsPermissionBean;\n// The permission dialog.\nClass CmsPermissionDialog;\n// Displays the permission settings for a single principal.\nClass CmsPermissionView;\n// Table for the ACE Entries.\nClass CmsPermissionViewTable;\n// The principal select widget.\nClass CmsPrincipalSelect;\n// Class for the dialog to show the principal table.\nClass CmsPrincipalSelectDialog;\n// The principal select extension.\nClass CmsPrincipalSelectExtension;\n// Table to selecet principals used in the CmsPrincipalSelect vaadin element.\nClass CmsPrincipalTable;\n// Type of principal.\nEnum CmsPrincipalSelect.PrincipalType;\n// The widget types.\nEnum CmsPrincipalSelect.WidgetType;\n", "des": "Contains permission dialog classes."}
{"index": 3347, "repo": "opencms-core-15.0", "code": "package editors\n\n// The data bindings and logic for the translator editor.\npackage editors.messagebundle\n// Interface for resource editors.\nInterface I_CmsEditor;\n// Class to extended by frame based editors.\nClass A_CmsFrameEditor;\n// The acacia XML content editor.\nClass CmsAcaciaEditor;\n// Extension for iFrame embedded editors storing the changed state of the edited content.\nClass CmsEditorStateExtension;\n// The plain text editor.\nClass CmsSourceEditor;\n// Stores the editor settings.\nClass CmsSourceEditor.EditorSettings;\n// The acacia XML content editor.\nClass CmsXmlContentEditor;\n// The acacia XML content editor.\nClass CmsXmlPageEditor;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "The available content editors."}
{"index": 3348, "repo": "opencms-core-15.0", "code": "package messagebundle\n\n// Controller for the VAADIN UI of the Message Bundle Editor.\nClass CmsMessageBundleEditor;\n// The class contains the logic behind the message translation editor.\nClass CmsMessageBundleEditorModel;\n// Comparator that compares strings case insensitive.\nClass CmsMessageBundleEditorModel.CmsCaseInsensitiveStringComparator;\n// Wrapper for the configurable messages for the column headers of the message bundle editor.\nClass CmsMessageBundleEditorModel.ConfigurableMessages;\n// Extension of Properties to allow saving with keys alphabetically ordered and without time stamp as first comment.\nClass CmsMessageBundleEditorModel.SortedProperties;\n// View of the message bundle editor options, i.e., language/mode switcher, file name display and \"Add key\" option.\nClass CmsMessageBundleEditorOptions;\n// Types and helper classes used by the message bundle editor.\nClass CmsMessageBundleEditorTypes;\n// Helper for accessing Bundle descriptor XML contents.\nClass CmsMessageBundleEditorTypes.Descriptor;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Types of bundles editable by the Editor.\nEnum CmsMessageBundleEditorTypes.BundleType;\n// The propertyIds of the table columns.\nEnum CmsMessageBundleEditorTypes.TableProperty;\n", "des": "The data bindings and logic for the translator editor."}
{"index": 3349, "repo": "opencms-core-15.0", "code": "package login\n\n// Dialog used to change the password.\nClass CmsChangePasswordDialog;\n// Dialog to request a password reset link if you forgot your passsword.\nClass CmsForgotPasswordDialog;\n// Helper class for getting localized messages for the 'lock inactive users' feature.\nClass CmsInactiveUserMessages;\n// Scheduled job for locking user accounts which have not been logged into for longer than the configured time.\nClass CmsLockInactiveAccountsJob;\n// Controller class which actually handles the login dialog logic.\nClass CmsLoginController;\n// Represents the login target information.\nClass CmsLoginController.CmsLoginTargetInfo;\n// The login context.\nClass CmsLoginController.LoginContext;\n// Helper subclass of CmsLoginUserAgreement which can be used without a page context.\nClass CmsLoginController.UserAgreementHelper;\n// Login form.\nClass CmsLoginForm;\n// Utility to login users to the OpenCms workplace.\nClass CmsLoginHelper;\n// Holds the current login parameters.\nClass CmsLoginHelper.LoginParameters;\n// Widget used to allow the user to search and select an organizational unit.\nClass CmsLoginOuSelector;\n// Password field for the login dialog.\nClass CmsLoginPasswordField;\n// Server side component used to open the login target for a logged in user.\nClass CmsLoginTargetOpener;\n// The UI class for the Vaadin-based login dialog.\nClass CmsLoginUI;\n// Parameters which are initialized during the initial page load of the login dialog.\nClass CmsLoginUI.Parameters;\n// Widget for the user name field of the login dialog.\nClass CmsLoginUserField;\n// Notification used to send password change link to user.\nClass CmsPasswordChangeNotification;\n// The change password form.\nClass CmsPasswordForm;\n// Dialog used to ask the user for a verification code generated from his second factor, using an authenticator app.\nClass CmsSecondFactorDialog;\n// Dialog used to set up two-factor authentication for a user.\nClass CmsSecondFactorSetupDialog;\n// Dialog used to change the password.\nClass CmsSetPasswordDialog;\n// Helper class for dealing with authorization tokens for the 'forgot password' functionality.\nClass CmsTokenValidator;\n", "des": "Contains the user interface components for the Vaadin-based login dialog."}
{"index": 3350, "repo": "opencms-core-15.0", "code": "package report\n\n// Simple dialog for displaying a report.\nClass CmsReportDialog;\n// Report overlay, shows the wait spinner first and the report window later in case off longer running threads.\nClass CmsReportOverlay;\n// A widget used to display an OpenCms report.\nClass CmsReportWidget;\n// Widget that can be used to view a running report that is not generated specifically by an OpenCms report thread, but from the text written to the stream provided by this widget.\nClass CmsStreamReportWidget;\n", "des": "Contains the user interface components for reports."}
{"index": 3351, "repo": "opencms-core-15.0", "code": "package components\n\n// Server-to-client Interface for the GWT dialog extension.\nInterface I_CmsGwtDialogClientRpc;\n// Client-to-server rpc interface for the GWT dialog extension.\nInterface I_CmsGwtDialogServerRpc;\n// The scroll position CSS shared state.\nClass CmsAutoGrowingTextAreaState;\n// The bread crumb state.\nClass CmsBreadCrumbState;\n// The copy to clip-board/select text button shared state.\nClass CmsCopyToClipboardState;\n// The external layout state.\nClass CmsExternalLayoutState;\n// Context menu button widget state.\nClass CmsGwtContextMenuButtonState;\n// The history state.\nClass CmsHistoryState;\n// The max height shared state.\nClass CmsMaxHeightState;\n// Widget state for the special password field used by the login dialog.\nClass CmsPasswordFieldState;\n// Report widget state.\nClass CmsReportWidgetState;\n// The scroll position CSS shared state.\nClass CmsScrollPositionCssState;\n// The upload button state.\nClass CmsUploadAreaState;\n// The upload button state.\nClass CmsUploadState;\n// The upload types.\nEnum CmsUploadState.UploadType;\n", "des": "Contains Vaadin component state classes and other RPC classes."}
{"index": 3352, "repo": "opencms-core-15.0", "code": "package login\n\n// Client RPC interface for opening a login target.\nInterface I_CmsLoginTargetRpc;\n", "des": "Contains the user shared classes for the Vaadin-based login dialog."}
{"index": 3353, "repo": "opencms-core-15.0", "code": "package rpc\n\n// Server to client RPC communication.\nInterface I_CmsContextMenuClientRpc;\n// The context menu server RPC.\nInterface I_CmsContextMenuServerRpc;\n// Interface for the server side RPC for the CmsEditableGroupButtons component.\nInterface I_CmsEditableGroupButtonsServerRpc;\n// Editor state RPCs\nInterface I_CmsEditorStateRPC;\n// Client RPC to handle embedded dialogs.\nInterface I_CmsEmbeddedDialogClientRPC;\n// Client-to-server RPC for embedding Vaadin dialogs in GWT.\nInterface I_CmsEmbeddingServerRpc;\n// Server side RPC interface for the GWT based context menu buttons.\nInterface I_CmsGwtContextMenuServerRpc;\n// Rpc -interface for handling results from JSP displayed on an extended BrowserFrame.\nInterface I_CmsJSPBrowserFrameRpc;\n// The max height server interface.\nInterface I_CmsMaxHeightServerRpc;\n// The max height server interface.\nInterface I_CmsPollServerRpc;\n// The principal select RPC service.\nInterface I_CmsPrincipalSelectRpc;\n// Server-to-client Interface for the GWT dialog extension.\nInterface I_CmsPropertyClientRpc;\n// Client-to-server rpc interface for the GWT dialog extension.\nInterface I_CmsPropertyServerRpc;\n// Client RPC interface for the report widget.\nInterface I_CmsReportClientRpc;\n// Server RPC interface for the report widget.\nInterface I_CmsReportServerRpc;\n// Interface for the server-to-client RPC calls used by the sitemap extension.\nInterface I_CmsSitemapClientRpc;\n// Interface for the client-to-server rpc calls used by the sitemap extension.\nInterface I_CmsSitemapServerRpc;\n// The upload RPC interface.\nInterface I_CmsUploadRpc;\n// Server-to-client RPC for CmsWindowExtension.\nInterface I_CmsWindowClientRpc;\n// Handles window close calls.\nInterface I_CmsWindowCloseServerRpc;\n// Client-to-server RPC interface for CmsWindowExtension.\nInterface I_CmsWindowServerRpc;\n", "des": "Contains Vaadin RPC interfaces."}
{"index": 3354, "repo": "opencms-core-15.0", "code": "package sitemap\n\n// Provides information about the current state of the locale comparison editor.\nInterface I_CmsLocaleCompareContext;\n// Dialog used to copy container pages including their elements.\nClass CmsCopyPageDialog;\n// View used to compare sitemaps across locales.\nClass CmsLocaleComparePanel;\n// Dialog used to select a resource which should be linked to a locale group.\nClass CmsLocaleLinkTargetSelectionDialog;\n// Extension used for the Vaadin dialogs in the sitemap editor.\nClass CmsSitemapExtension;\n// Manages the sitemap tree in the 'locale comparison' view in the sitemap editor.\nClass CmsSitemapTreeController;\n// Loads node data for the sitemap tree.\nClass CmsSitemapTreeDataProvider;\n// Widget displaying a sitemap tree node, with an openable area for its children.\nClass CmsSitemapTreeNode;\n// Represents the data of a sitemap tree node.\nClass CmsSitemapTreeNodeData;\n// Button used for opening / closing tree levels.\nClass CmsSitemapTreeNodeOpener;\n// UI class for Vaadin dialogs in the sitemap editor.\nClass CmsSitemapUI;\n// Dialog to confirm detaching a resource from a locale group.\nClass CmsUnlinkDialog;\n", "des": "Vaadin GUI components and utilities for use in the sitemap editor."}
{"index": 3355, "repo": "opencms-core-15.0", "code": "package util\n\n// Contains utility classes for dealing with Vaadin tables.\npackage util.table\n// Listener interface.\nInterface CmsLogicalCheckboxGroup.I_ChangeListener;\n// Interface for callbacks which should be notified when this helper has created a resource.\nInterface CmsNewResourceBuilder.I_Callback;\n// Interface for item sorters that evaluate the sortable container properties.\nInterface I_CmsItemSorter;\n// Converts null values to an empty string for the input widgets.\nClass CmsComboNullToEmptyConverter;\n// Container wrapping a single UI component.\nClass CmsComponentField<T extends com.vaadin.ui.Component>;\n// Ensures that among a set of check boxes, at most one of them is checked, without imposing constraints on the location of the checkboxes in the UI.\nClass CmsLogicalCheckboxGroup;\n// Helper class for creating a new resource using the New dialog.\nClass CmsNewResourceBuilder;\n// Converts null values to an empty string for the input widgets.\nClass CmsNullToEmptyConverter;\n// \nClass CmsStyleVariable;\n// Represents the three possible display types (small, medium, wide).\nEnum CmsDisplayType;\n", "des": "Utilities for Vaadin workplace code."}
{"index": 3356, "repo": "opencms-core-15.0", "code": "package table\n\n// Builds a table based on a given bean class.\nClass CmsBeanTableBuilder<T>;\n// Contains utility methods for Vaadin tables.\nClass CmsTableUtil;\n// Annotation used to mark up bean properties with metadata for table columns.\nAnnotation Type Column;\n", "des": "Contains utility classes for dealing with Vaadin tables."}
{"index": 3357, "repo": "opencms-core-15.0", "code": "package util\n\n// Closeable interface that throws no exceptions.\nInterface I_CmsCloseable;\n// HTML converters can be used to clean up HTML code and/or pretty print the code.\nInterface I_CmsHtmlConverter;\n// Interface for a combination of a visitor of HTML documents along with the hook to start the parser / lexer that triggers the visit.\nInterface I_CmsHtmlNodeVisitor;\n// Describes a macro mapper, which is used to efficiently resolve macros in the form of %(key) or ${key} in an input String.\nInterface I_CmsMacroResolver;\n// Interface for generating a substitution for a pattern in a string.\nInterface I_CmsRegexSubstitution;\n// \nClass A_CmsHtmlConverter;\n// Base class for all integer mode enumeration classes.\nClass A_CmsModeIntEnumeration;\n// Base class for all string mode enumeration classes.\nClass A_CmsModeStringEnumeration;\n// A DataSource backed by a byte array.\nClass CmsByteArrayDataSource;\n// Provides Map wrapping utility functions for Java generics.\nClass CmsCollectionsGenericWrapper;\n// Wrapper for lazy maps providing a better containsKey implementation.\nClass CmsCollectionsGenericWrapper.MapWrapper<K,​V>;\n// Returns the constant Object the map was initialized with for all CmsConstantMap.get(Object) calls, regardless of what the actual key is.\nClass CmsConstantMap<K,​V>;\n// Utilities to handle basic data types.\nClass CmsDataTypeUtil;\n// Utilities to get and set formated dates in OpenCms.\nClass CmsDateUtil;\n// A utility class used for keeping track of a set of objects.\nClass CmsDefaultSet<T>;\n// Simple utility class for caching a single value with a given cache expiration time.\nClass CmsExpiringValue<T>;\n// Provides File utility functions.\nClass CmsFileUtil;\n// Data bean which walkFileSystem passes to its callback.\nClass CmsFileUtil.FileWalkState;\n// Utility methods for processing geo coordinates.\nClass CmsGeoUtil;\n// Extracts the HTML page content.\nClass CmsHtml2TextConverter;\n// HTML cleaner and pretty printer.\nClass CmsHtmlConverter;\n// HTML cleaner and pretty printer using JTidy.\nClass CmsHtmlConverterJTidy;\n", "des": "Utility functions for String manipulation and other often used tasks."}
{"index": 3358, "repo": "opencms-core-15.0", "code": "package widgets\n\n// Contains the server-side widget implementation, for the serial date widget..\npackage widgets.serialdate\n// Widgets to be used with the new XML content editor are required to implement this interface.\nInterface I_CmsADEWidget;\n// Interface for complex widgets which are used in the Acacia editor to render whole nested contents.\nInterface I_CmsComplexWidget;\n// Enables a dynamic configuration of values for the A_CmsGalleryWidget.\nInterface I_CmsGalleryWidgetDynamicConfiguration;\n// Enables a dynamic configuration of values for the CmsVfsImageWidget.\nInterface I_CmsImageWidgetDynamicConfiguration;\n// Describes an editor widget for use in the OpenCms workplace.\nInterface I_CmsWidget;\n// Describes a widget enabled dialog.\nInterface I_CmsWidgetDialog;\n// Parameter value wrapper used by the OpenCms workplace widgets.\nInterface I_CmsWidgetParameter;\n// Base class for all ADE gallery widget implementations.\nClass A_CmsAdeGalleryWidget;\n// Abstract base class for categorized select widgets.\nClass A_CmsCategorizedSelectWidget;\n// Abstract superclass for widgets used to enable or disable formatters.\nClass A_CmsFormatterWidget;\n// Comparator used to sort formatter beans in the order in which they should be displayed in the selection.\nClass A_CmsFormatterWidget.FormatterSelectComparator;\n// Base class for all gallery widget implementations.\nClass A_CmsGalleryWidget;\n// Provides a widget that creates a rich input field using the matching component, for use on a widget dialog.\nClass A_CmsHtmlWidget;\n// This is an abstract class which you can inherit from to relatively easily implement complex widgets for rendering nested contents in Javascript.\nClass A_CmsNativeComplexWidget;\n// Base class for select widgets.\nClass A_CmsSelectWidget;\n// Base class for XML editor widgets.\nClass A_CmsWidget;\n// Widget used to select a formatter to add.\nClass CmsAddFormatterWidget;\n// ADE download gallery widget implementations.\nClass CmsAdeDownloadGalleryWidget;\n// ADE image gallery widget implementations.\nClass CmsAdeImageGalleryWidget;\n// Provides a DHTML calendar widget, for use on a widget dialog.\nClass CmsCalendarWidget;\n// Provides a widget for a category based dependent select boxes.\nClass CmsCategoryWidget;\n", "des": "Contains the widget implementations, these are GUI elements used in editors and dialogs of the OpenCms workplace."}
{"index": 3359, "repo": "opencms-core-15.0", "code": "package serialdate\n\n// Interface for serial date beans.\nInterface I_CmsSerialDateBean;\n// Abstract base class for serial date beans.\nClass A_CmsSerialDateBean;\n// Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a daily base.\nClass CmsSerialDateBeanDaily;\n// Wrapper for the value stored by the CmsSerialDateWidget that provides easy access.\nClass CmsSerialDateBeanFactory;\n// Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified as individual dates.\nClass CmsSerialDateBeanIndividual;\n// Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a monthly base.\nClass CmsSerialDateBeanMonthly;\n// Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a monthly base.\nClass CmsSerialDateBeanMonthlyWeeks;\n// Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles single events.\nClass CmsSerialDateBeanSingle;\n// Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a weekly base.\nClass CmsSerialDateBeanWeekly;\n// Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a daily base.\nClass CmsSerialDateBeanWorkingDays;\n// Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a yearly base.\nClass CmsSerialDateBeanYearly;\n// Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a yearly base.\nClass CmsSerialDateBeanYearlyWeekday;\n// Server-side implementation of I_CmsSerialDateValue.\nClass CmsSerialDateValue;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains the server-side widget implementation, for the serial date widget.."}
{"index": 3360, "repo": "opencms-core-15.0", "code": "package workflow\n\n// Validator which can exclude some resources from publishing and supplies a status object for the excluded resources.\nInterface CmsDefaultPublishResourceFormatter.I_PublishResourceValidator;\n// 'Formats' a ResourceMap containing resources for publishing by creating a list of CmsPublishResource beans with the appropriate status informations to display.\nInterface I_CmsPublishResourceFormatter;\n// Workflow manager interface.\nInterface I_CmsWorkflowManager;\n// Abstract class which provides common functionality for workflow managers, like initialization of the configuration parameters.\nClass A_CmsWorkflowManager;\n// Default formatter class for publish resources.\nClass CmsDefaultPublishResourceFormatter;\n// Compares publish resources by their sort date.\nClass CmsDefaultPublishResourceFormatter.DefaultComparator;\n// The default implementation of the workflow manager interface, which offers only publish functionality.\nClass CmsDefaultWorkflowManager;\n// Publish resource formatter for the extended workflow manager.\nClass CmsExtendedPublishResourceFormatter;\n// Project wrapper which specially handles the 'release' workflow by reading resources of a project regardless of publish permissions.\nClass CmsExtendedRealProjectWrapper;\n// The default workflow manager implementation, which supports 2 basic actions, Release and Publish.\nClass CmsExtendedWorkflowManager;\n// Notification class for the workflow 'release' action.\nClass CmsWorkflowNotification;\n// Set of workflow resources, and an optional workflow.\nClass CmsWorkflowResources;\n// The message bundle for the workflow package.\nClass Messages;\n// An exception which indicates that a user tried to execute an invalid workflow action.\nClass CmsInvalidActionException;\n// An exception which indicates that the user tried to trigger a workflow action for a set of resources for which some parent folder is not included in the set, but has the resource state 'new'.\nClass CmsNewParentNotInWorkflowException;\n", "des": "Classes related to publishing and workflow."}
{"index": 3361, "repo": "opencms-core-15.0", "code": "package workplace\n\n// Contains often used OpenCms Workplace dialogs, for example for file operations, user preferences and project based operations like publishing.\npackage workplace.commons\n// Utilities for comparing different versions of resources, used by both the classic workplace and the new Vaadin-based workplace.\npackage workplace.comparison\n// Base classes for the editors (WYSIWYG, plain text, XML content) used in the OpenCms Workplace.\npackage workplace.editors\n// Contains the functions that generate the Workplace \"Explorer\" view, also contains the \"New resource\" wizard.\npackage workplace.explorer\n// Contains the various \"Galleries\" which are available in the editors and widgets of the OpenCms Workplace.\npackage workplace.galleries\n// Generates the list views commonly used in the OpenCms Workplace \"Administration\" tools.\npackage workplace.list\n// A collection of thread classes that are used in the OpenCms Workplace, usually in connection with a report.\npackage workplace.threads\n// Contains the base classes for implementing a tool in the OpenCms Workplace \"Administration\" view.\npackage workplace.tools\n// Provides a method for selecting an individual jsp dialog.\nInterface I_CmsDialogHandler;\n// Interface for transforming group names into a more human-readable form.\nInterface I_CmsGroupNameTranslation;\n// An interface which provides a hook which can be called after uploading files.\nInterface I_CmsPostUploadDialogHandler;\n// Evaluates the repository folder.\nInterface I_CmsRepositoryFolderHandler;\n// Implement this interface to provide message bundle names to added to the CmsWorkplaceMessages bundle.\nInterface I_CmsWorkplaceMessageBundleProvider;\n// Account info bean.\nClass CmsAccountInfo;\n// Provides methods for building the dialog windows of OpenCms.\nClass CmsDialog;\n// Selects the dialog which should be displayed by OpenCms depending on the configuration value.\nClass CmsDialogSelector;\n// Provides methods to show a configurable user agreement dialog after a successful workplace login.\nClass CmsLoginUserAgreement;\n// The default upload folder handler.\nClass CmsRepositoryFolderHandler;\n// Master class for the JSP based workplace which provides default methods and session handling for all JSP workplace classes.\nClass CmsWorkplace;\n// Resource init handler that loads the login form with the right parameters.\nClass CmsWorkplaceLoginHandler;\n", "des": "The base classes for the OpenCms Workplace (standard dialog, tab dialog, report based dialog) and the Workplace configuration classes are located here."}
{"index": 3362, "repo": "opencms-core-15.0", "code": "package commons\n\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains often used OpenCms Workplace dialogs, for example for file operations, user preferences and project based operations like publishing."}
{"index": 3363, "repo": "opencms-core-15.0", "code": "package comparison\n\n// Comparison of resource attributes.\nClass CmsAttributeComparison;\n// Wrapper class for the different types of diff modes.\nClass CmsDiffViewMode;\n// Comparison of two xml page elements.\nClass CmsElementComparison;\n// Utility methods for the history list.\nClass CmsHistoryListUtil;\n// OpenCms Html Diff operation configuration class.\nClass CmsHtmlDifferenceConfiguration;\n// Comparison of two OpenCms resources.\nClass CmsResourceComparison;\n// Comparison of two xml content elements.\nClass CmsXmlContentElementComparison;\n// A comparison of properties, attributes and elements of xml documents.\nClass CmsXmlDocumentComparison;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Utilities for comparing different versions of resources, used by both the classic workplace and the new Vaadin-based workplace."}
{"index": 3364, "repo": "opencms-core-15.0", "code": "package editors\n\n// Used to control the generation of the HTML for the \"direct edit\" buttons.\npackage editors.directedit\n// Provides a method for performing an individual action if the user pressed a special button in the editor.\nInterface I_CmsEditorActionHandler;\n// Provides methods to determine the CSS style sheet URI for the editors based on the edited resource path.\nInterface I_CmsEditorCssHandler;\n// Provides a method for selecting an individual file editor.\nInterface I_CmsEditorHandler;\n// Provides a method for assigning additional resource types to editors.\nInterface I_CmsEditorTypeMatcher;\n// Defines an action to be performed before the workplace editor is opened for the first time.\nInterface I_CmsPreEditorActionDefinition;\n// Defines an action to be performed before the workplace editor is opened for the first time.\nClass A_CmsPreEditorActionDefinition;\n// Provides methods for building editors for the CmsDefaultPage page type.\nClass CmsDefaultPageEditor;\n// Provides methods for the editor copy language dialog.\nClass CmsDialogCopyLanguage;\n// Contains the setup information about a single dialog element.\nClass CmsDialogElement;\n// Provides methods for the editor elements dialog.\nClass CmsDialogElements;\n// Provides basic methods for building the file editors of OpenCms.\nClass CmsEditor;\n// Provides a method to perform a user defined action when editing a page.\nClass CmsEditorActionDefault;\n// Base class for all editors that turns of time warp deletion inherited from CmsWorkplace.\nClass CmsEditorBase;\n// A default editor CSS handler to obtain the CSS style sheet path from the template property value of the template itself.\nClass CmsEditorCssHandlerDefault;\n// Provides methods to determine the display options of a workplace editor for the current user.\nClass CmsEditorDisplayOptions;\n// Helper class to create the editor frameset.\nClass CmsEditorFrameset;\n// This editor handler class returns the editor URI depending on various factors.\nClass CmsEditorHandler;\n// Selects the dialog which should be displayed by OpenCms depending on the configuration value.\nClass CmsEditorSelector;\n// Stores editor session data.\nClass CmsEditorSessionInfo;\n// Handles the actions that should be performed before opening the editor frameset.\nClass CmsPreEditorAction;\n", "des": "Base classes for the editors (WYSIWYG, plain text, XML content) used in the OpenCms Workplace."}
{"index": 3365, "repo": "opencms-core-15.0", "code": "package directedit\n\n// Provides the methods to generate the \"direct edit\" HTML fragments that are inserted in the generated pages in offline mode.\nInterface I_CmsDirectEditProvider;\n// Edit handlers are optional and can be configured within the XSD-schema of a resource type.\nInterface I_CmsEditHandler;\n// Basic functions for direct edit providers.\nClass A_CmsDirectEditProvider;\n// Provider for the OpenCms AdvancedDirectEdit.\nClass CmsAdvancedDirectEditProvider;\n// Special edit handler for contents that define multiple instances in a date series.\nClass CmsDateSeriesEditHandler;\n// Constants to indicate which direct edit buttons should be displayed for a direct edit resource if the user has the permissions.\nClass CmsDirectEditButtonSelection;\n// Provider for the OpenCms default graphical \"direct edit\" buttons.\nClass CmsDirectEditDefaultProvider;\n// Provider for the OpenCms graphical \"direct edit\" buttons.\nClass CmsDirectEditJQueryProvider;\n// Direct edit provider that uses the same JSP include based logic that has been the default before the 6.2.3 release.\nClass CmsDirectEditJspIncludeProvider;\n// Constants to indicate which mode to use for placement of the HTML that generates the direct edit buttons.\nClass CmsDirectEditMode;\n// A parameter set to start a direct edit element, for internal use only.\nClass CmsDirectEditParams;\n// Constants to indicate the direct edit permissions of a user for a VFS resource, used to describe if and how to show the direct edit buttons for the resource.\nClass CmsDirectEditPermissions;\n// Contains information about a resource that is direct edited.\nClass CmsDirectEditResourceInfo;\n// Creates HTML for simple text based direct edit buttons.\nClass CmsDirectEditTextButtonProvider;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Direct edit permissions according to the sitemap configuration.\nEnum CmsAdvancedDirectEditProvider.SitemapDirectEditPermissions;\n", "des": "Used to control the generation of the HTML for the \"direct edit\" buttons."}
{"index": 3366, "repo": "opencms-core-15.0", "code": "package explorer\n\n// Explorer type access object, encapsulates access control entries and lists of a explorer type.\nClass CmsExplorerTypeAccess;\n// Class which listens for cache flush events to uncache cached access control settings.\nClass CmsExplorerTypeAccessFlushListener;\n// Holds all information to build the explorer context menu of a resource type and information for the new resource dialog.\nClass CmsExplorerTypeSettings;\n// An icon configuration rule for an explorer type.\nClass CmsIconRule;\n// Provides CmsResource utility functions.\nClass CmsResourceUtil;\n// Enumeration class for defining the resource project state.\nClass CmsResourceUtil.CmsResourceProjectState;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains the functions that generate the Workplace \"Explorer\" view, also contains the \"New resource\" wizard."}
{"index": 3367, "repo": "opencms-core-15.0", "code": "package galleries\n\n// Provides the general helper methods to generate the content of a gallery dialog used in the XML content editors, WYSIWYG editors and context menu.\nClass A_CmsAjaxGallery;\n// Provides the specific constants, members and helper methods to generate the content of the download gallery dialog used in the XML content editors, WYSIWYG editors and context menu.\nClass CmsAjaxDownloadGallery;\n// Provides the specific constants, members and helper methods to generate the content of the image gallery dialog used in the XML content editors, WYSIWYG editors and context menu.\nClass CmsAjaxImageGallery;\n// Provides the specific constants, members and helper methods to generate the content of the external link gallery dialog used in the XML content editors, WYSIWYG editors and context menu.\nClass CmsAjaxLinkGallery;\n// Provides methods for open gallery dialog.\nClass CmsOpenGallery;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains the various \"Galleries\" which are available in the editors and widgets of the OpenCms Workplace."}
{"index": 3368, "repo": "opencms-core-15.0", "code": "package list\n\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Generates the list views commonly used in the OpenCms Workplace \"Administration\" tools."}
{"index": 3369, "repo": "opencms-core-15.0", "code": "package threads\n\n// Abstract thread to keep track of operation progress.\nClass A_CmsProgressThread;\n// Imports an OpenCms export file into the VFS.\nClass CmsDatabaseImportThread;\n// Exports selected resources of the OpenCms into an OpenCms export file.\nClass CmsExportThread;\n// Thread for extern link validation.\nClass CmsExternalLinksValidatorThread;\n// Deletes a module.\nClass CmsModuleDeleteThread;\n// Replaces a module.\nClass CmsModuleReplaceThread;\n// Deletes a project.\nClass CmsProjectDeleteThread;\n// A report thread for the relations validator.\nClass CmsRelationsValidatorThread;\n// Synchronizes a VFS folder with a folder form the \"real\" file system.\nClass CmsSynchronizeThread;\n// Settings object that provides the settings to repair XML content resources in the OpenCms virtual file system (VFS).\nClass CmsXmlContentRepairSettings;\n// Repairs XML content resources according to their XSD using the corresponding settings object.\nClass CmsXmlContentRepairThread;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "A collection of thread classes that are used in the OpenCms Workplace, usually in connection with a report."}
{"index": 3370, "repo": "opencms-core-15.0", "code": "package tools\n\n// This package contains the tool classes for the job management related administration views.\npackage tools.scheduler\n// Interface for html buttons with icon.\nInterface I_CmsHtmlIconButton;\n// Interface for an admin tool handler.\nInterface I_CmsToolHandler;\n// Default skeleton for an html icon button.\nClass A_CmsHtmlIconButton;\n// Helper class to build easily other admin tool handlers.\nClass A_CmsToolHandler;\n// Default admin tool handler.\nClass CmsDefaultToolHandler;\n// Dialog for explorer views in the administration view.\nClass CmsExplorerDialog;\n// Wrapper class for the different style of icon buttons.\nClass CmsHtmlIconButtonStyleEnum;\n// Default implementation of a named object container.\nClass CmsIdentifiableObjectContainer<T>;\n// This tool handler just hides the tool for the user, but the tool can still be invoked explicitly, usefull for tool that requires an argument, like edit tools.\nClass CmsInvisibleToolHandler;\n// This tool handler disables the tool if in online project.\nClass CmsOfflineToolHandler;\n// This tool handler hides the tool to non admin users.\nClass CmsOnlyAdminToolHandler;\n// Implementation of an administration tool.\nClass CmsTool;\n// Helper class that encapsulates all the code for the \"new\" style of the administration dialogs.\nClass CmsToolDialog;\n// This is an admin tool group, it just generates the html code for the group structure.\nClass CmsToolGroup;\n// Resolves special macros for the admin view.\nClass CmsToolMacroResolver;\n// Manages the registered tools, actualizing its state every time the workplace is reinitialize.\nClass CmsToolManager;\n// Admin tool handler for tool roots.\nClass CmsToolRootHandler;\n// Store for some administration view parameters, for each user, used by the CmsToolManager.\nClass CmsToolUserData;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains the base classes for implementing a tool in the OpenCms Workplace \"Administration\" view."}
{"index": 3371, "repo": "opencms-core-15.0", "code": "package scheduler\n\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "This package contains the tool classes for the job management related administration views."}
{"index": 3372, "repo": "opencms-core-15.0", "code": "package xml\n\n// Contains functions for the ADE main pages, commonly called \"Container Pages\" in OpenCms.\npackage xml.containerpage\n// Contains functions for structured content storage using XML, commonly called \"XML content\" in OpenCms.\npackage xml.content\n// Contains functions for unstructured content storage using XML, commonly called \"XML pages\" in OpenCms.\npackage xml.page\n// Contains the basic XML content type definitions, used for XML content and XML pages.\npackage xml.types\n// Describes the API to access the values of a XML content document.\nInterface I_CmsXmlDocument;\n// Provides basic XML document handling functions useful when dealing with XML documents that are stored in the OpenCms VFS.\nClass A_CmsXmlDocument;\n// Describes the structure definition of an XML content object.\nClass CmsXmlContentDefinition;\n// Manager class for registered OpenCms XML content types and content collectors.\nClass CmsXmlContentTypeManager;\n// Resolves XML entities (e.g.\nClass CmsXmlEntityResolver;\n// Error hander for writing errors found during XML validation to the OpenCms log.\nClass CmsXmlErrorHandler;\n// Transforms all resources of a given type by\nClass CmsXmlFileTransformer;\n// Provides generic wrappers for XML library methods that do not support Java 5 generic types.\nClass CmsXmlGenericWrapper;\n// The xml messages overwrite some methods of the general CmsMessages class to get keys from an individual configuration file.\nClass CmsXmlMessages;\n// Provides some basic XML handling utilities.\nClass CmsXmlUtils;\n// Error hander for writing errors found during XML validation to the OpenCms log.\nClass CmsXmlValidationErrorHandler;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// Enumeration of possible sequence types in a content definition.\nEnum CmsXmlContentDefinition.SequenceType;\n// Signals that an error occurred while processing an xml resource.\nClass CmsXmlException;\n", "des": "Basic XML functionality and utilities used by OpenCms to maintain XML documents and content."}
{"index": 3373, "repo": "opencms-core-15.0", "code": "package containerpage\n\n// Configurable & expandable configuration.\nInterface I_CmsADEConfiguration;\n// Interface representing a configured formatter.\nInterface I_CmsFormatterBean;\n// Cache object instance for simultaneously cache online and offline items.\nClass CmsADECache;\n// The cache settings for ADE.\nClass CmsADECacheSettings;\n// ADE's session cache.\nClass CmsADESessionCache;\n// Stores information about the container page which was last edited, so we can jump back to it later.\nClass CmsADESessionCache.LastPageBean;\n// Helper class for locating configuration files by looking up their location in properties of another resource.\nClass CmsConfigurationFileFinder;\n// A single item of the ADE file type configuration.\nClass CmsConfigurationItem;\n// One container of a container page.\nClass CmsContainerBean;\n// One element of a container in a container page.\nClass CmsContainerElementBean;\n// Describes one locale of a container page.\nClass CmsContainerPageBean;\n// A class which contains the data parsed from a dynamic function XML content.\nClass CmsDynamicFunctionBean;\n// A bean which contains a single format for a dynamic function, which contains of the function JSP, the container settings and the parameters.\nClass CmsDynamicFunctionBean.Format;\n// The parser class for creating dynamic function beans from XML contents.\nClass CmsDynamicFunctionParser;\n// Formatter configuration for flex formatters.\nClass CmsFlexFormatterBean;\n// A bean containing formatter configuration data as strings.\nClass CmsFormatterBean;\n// Represents a formatter configuration.\nClass CmsFormatterConfiguration;\n// This class is used to sort lists of formatter beans in order of importance.\nClass CmsFormatterConfiguration.FormatterComparator;\n// Predicate which checks whether the given formatter is a detail formatter.\nClass CmsFormatterConfiguration.IsDetail;\n// Predicate which checks whether the given formatter is a display formatter.\nClass CmsFormatterConfiguration.IsDisplay;\n// Predicate to check whether the formatter is from a schema.\nClass CmsFormatterConfiguration.IsSchemaFormatter;\n// A bean containing formatter configuration data as strings.\nClass CmsFunctionFormatterBean;\n// A group container.\nClass CmsGroupContainerBean;\n// Content handler for HTML redirects.\nClass CmsHtmlRedirectHandler;\n", "des": "Contains functions for the ADE main pages, commonly called \"Container Pages\" in OpenCms."}
{"index": 3374, "repo": "opencms-core-15.0", "code": "package content\n\n// Handles changes during the xml content editor session.\nInterface I_CmsXmlContentEditorChangeHandler;\n// Handles special XML content livetime events, and also provides XML content editor rendering hints.\nInterface I_CmsXmlContentHandler;\n// This class represents a location in an XML content for a specific locale.\nInterface I_CmsXmlContentLocation;\n// Interface representing an XML content location which corresponds to an actual content value.\nInterface I_CmsXmlContentValueLocation;\n// Visitor interface that allows looping through all the values in a XML content document.\nInterface I_CmsXmlContentValueVisitor;\n// Handles the visibility of fields in the XML content editor.\nInterface I_CmsXmlContentVisibilityHandler;\n// A configuration bean representing a <ChangeHandler> element configured in an XSD's field settings.\nClass CmsChangeHandlerConfig;\n// Default implementation for the XML content handler, will be used by all XML contents that do not provide their own handler.\nClass CmsDefaultXmlContentHandler;\n// Contains the visibility handler configuration for a content field path.\nClass CmsDefaultXmlContentHandler.VisibilityConfiguration;\n// Geo-coordinate mapping configuration for an XML content schema.\nClass CmsGeoMappingConfiguration;\n// A single configuration entry.\nClass CmsGeoMappingConfiguration.Entry;\n// A class which represents the context for resolving all content value mappings of an XML content.\nClass CmsMappingResolutionContext;\n// Name generator which appends a numeric suffix to a given base string.\nClass CmsNumberSuffixNameSequence;\n// Provides static methods for XML content version transformations.\nClass CmsVersionTransformer;\n// Loads message bundles from the different locales of a single XML content.\nClass CmsVfsBundleLoaderXml;\n// A bean class containing both a path and a UUID which should be stored in an XML file value.\nClass CmsVfsFileValueBean;\n// Implementation of a XML content object, used to access and manage structured content.\nClass CmsXmlContent;\n// Handler for issues found during XML content validation.\nClass CmsXmlContentErrorHandler;\n// Provides factory methods to unmarshal (read) an XML content object.\nClass CmsXmlContentFactory;\n// Visitor implementation that provides macro resolving for all visited values.\nClass CmsXmlContentMacroVisitor;\n// Describes both VFS properties and Container Page Element settings, used by the GWT client.\nClass CmsXmlContentProperty;\n// Provides common methods on XML property configuration.\nClass CmsXmlContentPropertyHelper;\n", "des": "Contains functions for structured content storage using XML, commonly called \"XML content\" in OpenCms."}
{"index": 3375, "repo": "opencms-core-15.0", "code": "package page\n\n// Implementation of a page object used to access and manage xml data.\nClass CmsXmlPage;\n// Provides factory methods to unmarshal (read) an XML page object.\nClass CmsXmlPageFactory;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n", "des": "Contains functions for unstructured content storage using XML, commonly called \"XML pages\" in OpenCms."}
{"index": 3376, "repo": "opencms-core-15.0", "code": "package types\n\n// Provides access to the value of a specific XML content node.\nInterface I_CmsXmlContentValue;\n// Describes a type in an OpenCms XML schema based content definition.\nInterface I_CmsXmlSchemaType;\n// Interface to provide specific error messages on validation\nInterface I_CmsXmlValidateWithMessage;\n// Base class for XML content value implementations.\nClass A_CmsXmlContentValue;\n// Base class for XML content value implementations that require only a simple XML cdata text node.\nClass A_CmsXmlValueCdataBase;\n// Base class for XML content value implementations that require only a simple XML plain text node.\nClass A_CmsXmlValueTextBase;\n// Describes the XML content type \"OpenCmsBoolean\".\nClass CmsXmlBooleanValue;\n// Describes the XML content type \"OpenCmsVfsFile\".\nClass CmsXmlCategoryValue;\n// Describes the XML content type \"OpenCmsColor\".\nClass CmsXmlColorValue;\n// Describes the XML content type \"OpenCmsDateTime\".\nClass CmsXmlDateTimeValue;\n// XML value type for display formatters.\nClass CmsXmlDisplayFormatterValue;\n// Describes the XML content type \"OpenCmsVfsFile\".\nClass CmsXmlDynamicCategoryValue;\n// Describes the XML content type \"OpenCmsHtml\".\nClass CmsXmlHtmlValue;\n// Describes the XML content type \"OpenCmsLocale\".\nClass CmsXmlLocaleValue;\n// A nested content XML definition that is included by another XML content definition.\nClass CmsXmlNestedContentDefinition;\n// Describes the XML content type \"OpenCmsPlainTextString\".\nClass CmsXmlPlainTextStringValue;\n// Describes the XML content type \"OpenCmsSerialDate\".\nClass CmsXmlSerialDateValue;\n// Describes the XML content type \"OpenCmsString\".\nClass CmsXmlStringValue;\n// Describes the XML content type \"OpenCmsVarLink\".\nClass CmsXmlVarLinkValue;\n// Describes the XML content type \"OpenCmsVfsFile\".\nClass CmsXmlVfsFileValue;\n// Describes the XML content type \"OpenCmsVfsImage\".\nClass CmsXmlVfsImageValue;\n// Convenience class to access the localized messages of this OpenCms package.\nClass Messages;\n// The available search types for element searchsetting.\nEnum I_CmsXmlContentValue.SearchContentType;\n", "des": "Contains the basic XML content type definitions, used for XML content and XML pages."}
{"index": 3377, "repo": "dagger-2.47", "code": "package dagger\n\n// This package contains the API for Dagger's assisted injection.\npackage dagger.assisted\n// This package contains the API by which Dagger allows you to bind several objects into a collection that can be injected without depending directly on each of the individual bindings.\npackage dagger.multibindings\n// A handle to a lazily-computed value.\nInterface Lazy<T>;\n// Injects dependencies into the fields and methods on instances of type T.\nInterface MembersInjector<T>;\n// Annotates abstract methods of a Module that delegate bindings.\nAnnotation Type Binds;\n// Marks a method on a component builder or a parameter on a component factory as binding an instance to some key within the component.\nAnnotation Type BindsInstance;\n// Annotates methods that declare bindings for Optional containers of values from bindings that may or may not be present in the component.\nAnnotation Type BindsOptionalOf;\n// Annotates an interface or abstract class for which a fully-formed, dependency-injected implementation is to be generated from a set of Component.modules().\nAnnotation Type Component;\n// A builder for a component.\nAnnotation Type Component.Builder;\n// A factory for a component.\nAnnotation Type Component.Factory;\n// Identifies annotation types that are used to associate keys with values returned by provider methods in order to compose a map.\nAnnotation Type MapKey;\n// Annotates a class that contributes to the object graph.\nAnnotation Type Module;\n// Annotates methods of a module to create a provider method binding.\nAnnotation Type Provides;\n// A scope that indicates that the object returned by a binding may be (but might not be) reused.\nAnnotation Type Reusable;\n// A subcomponent that inherits the bindings from a parent Component or Subcomponent.\nAnnotation Type Subcomponent;\n// A builder for a subcomponent.\nAnnotation Type Subcomponent.Builder;\n// A factory for a subcomponent.\nAnnotation Type Subcomponent.Factory;\n", "des": "This package contains the public API for the Dagger 2 dependency injection framework."}
{"index": 3378, "repo": "dagger-2.47", "code": "package assisted\n\n// Annotates a parameter within an AssistedInject-annotated constructor.\nAnnotation Type Assisted;\n// Annotates an abstract class or interface used to create an instance of a type via an AssistedInject constructor.\nAnnotation Type AssistedFactory;\n// Annotates the constuctor of a type that will be created via assisted injection.\nAnnotation Type AssistedInject;\n", "des": "This package contains the API for Dagger's assisted injection."}
{"index": 3379, "repo": "dagger-2.47", "code": "package multibindings\n\n// A MapKey annotation for maps with Class<?> keys.\nAnnotation Type ClassKey;\n// The method's return type is Set<T> and all values are contributed to the set.\nAnnotation Type ElementsIntoSet;\n// A MapKey annotation for maps with int keys.\nAnnotation Type IntKey;\n// The method's return type forms the type argument for the value of a Map<K, Provider<V>>, and the combination of the annotated key and the returned value is contributed to the map as a key/value pair.\nAnnotation Type IntoMap;\n// The method's return type forms the generic type argument of a Set<T>, and the returned value is contributed to the set.\nAnnotation Type IntoSet;\n// A MapKey annotation for maps with long keys.\nAnnotation Type LongKey;\n// Annotates abstract module methods that declare multibindings.\nAnnotation Type Multibinds;\n// A MapKey annotation for maps with String keys.\nAnnotation Type StringKey;\n", "des": "This package contains the API by which Dagger allows you to bind several objects into a collection that can be injected without depending directly on each of the individual bindings."}
{"index": 3380, "repo": "commons-imaging-1.0-alpha3", "code": "package imaging\n\n// Color spaces and conversions between them.\npackage imaging.color\n// Provides utility classes that are employed across multiple image formats and sub-packages.\npackage imaging.common\n// ICC color profile.\npackage imaging.icc\n// Internal utility classes.\npackage imaging.internal\n// Color quantization and palette manipulation tools.\npackage imaging.palette\n// Simple image format interface.\nInterface ImageFormat;\n// A selection of tools for evaluating and manipulating color spaces, color values, etc.\nClass ColorTools;\n// Provides information about the compliance of a specified data source (byte array, file, etc.) to an image format.\nClass FormatCompliance;\n// Used to store metadata and descriptive information extracted from image files.\nClass ImageDump;\n// ImageInfo represents a collection of basic properties of an image, such as width, height, format, bit depth, etc.\nClass ImageInfo;\n// Provides the abstract base class for all image reading and writing utilities.\nClass ImageParser<T extends ImagingParameters>;\n// The primary application programming interface (API) to the Imaging library.\nClass Imaging;\n// Defines constants that may be used in passing options to ImageParser read/write implementations, the utility routines implemented in the Imaging class, and throughout the Apache Commons Imaging package.\nClass ImagingConstants;\n// Imaging parameters.\nClass ImagingParameters;\n// Used to specify pixel density and physical dimensions when reading or storing image information.\nClass PixelDensity;\n// Enum of known image formats.\nEnum ImageFormats;\n// \nEnum ImageInfo.ColorType;\n// \nEnum ImageInfo.CompressionAlgorithm;\n// A custom exception thrown when an ImageParser or other utility encounters a format-violation, non-supported element, or other condition that renders image data unaccessible.\nClass ImageReadException;\n// A custom exception thrown when an ImageParser or other utility encounters a format-violation, non-supported element, or other condition that renders image data unwritable.\nClass ImageWriteException;\n// The base class for implementing custom exceptions in the Apache Commons Imaging package.\nClass ImagingException;\n", "des": "The main package for Apache Commons Imaging."}
{"index": 3381, "repo": "commons-imaging-1.0-alpha3", "code": "package color\n\n// Represents a color in the CIELAB color space, also known as LAB color space.\nClass ColorCieLab;\n// Represents a color in the CIELCH color space.\nClass ColorCieLch;\n// Represents a color in the CIELUV color space..\nClass ColorCieLuv;\n// Represents a color in the CMY color space.\nClass ColorCmy;\n// Represents a color in the CMYK color space.\nClass ColorCmyk;\n// \nClass ColorConversions;\n// Represents a color in the DIN99 color space, a derivation of the CIE LAB color space.\nClass ColorDin99Lab;\n// Represents a color in the HSL color space.\nClass ColorHsl;\n// Represents a color in the HSV color space.\nClass ColorHsv;\n// Represents a color in the Hunter Lab color space.\nClass ColorHunterLab;\n// Represents a color in the CIE 1931 color space, also known as XYZ color space.\nClass ColorXyz;\n", "des": "Color spaces and conversions between them."}
{"index": 3382, "repo": "commons-imaging-1.0-alpha3", "code": "package common\n\n// Encapsulates sources from which data may be read.\npackage common.bytesource\n// Provides ITU-T T.4 and T.6 compression classes.\npackage common.itu_t4\n// Provides LZW compression.\npackage common.mylzw\n// \nInterface BufferedImageFactory;\n// \nInterface ImageMetadata;\n// \nInterface ImageMetadata.ImageMetadataItem;\n// Implementations support embedding the Extensible Metadata Platform tags.\nInterface XmpEmbeddable;\n// A rudimentary preprocessor and parser for the C programming language.\nClass BasicCParser;\n// \nClass BinaryConstant;\n// \nClass BinaryFileParser;\n// Convenience methods for various binary and I/O operations.\nClass BinaryFunctions;\n// \nClass BinaryOutputStream;\n// Convenience methods for converting data types to and from byte arrays.\nClass ByteConversions;\n// \nClass GenericImageMetadata;\n// \nClass GenericImageMetadata.GenericImageMetadataItem;\n// A utility class primary intended for storing data obtained by reading image files.\nClass ImageBuilder;\n// \nClass PackBits;\n// Rational number, as used by the TIFF image format.\nClass RationalNumber;\n// \nClass RgbBufferedImageFactory;\n// \nClass SimpleBufferedImageFactory;\n// Parameters for formats that support Xmp.\nClass XmpImagingParameters;\n// Utility class to compress/decompress bytes using the ZLIB deflate/inflate compression.\nClass ZlibDeflate;\n", "des": "Provides utility classes that are employed across multiple image formats and sub-packages."}
{"index": 3383, "repo": "commons-imaging-1.0-alpha3", "code": "package bytesource\n\n// \nClass ByteSource;\n// \nClass ByteSourceArray;\n// \nClass ByteSourceFile;\n// \nClass ByteSourceInputStream;\n", "des": "Encapsulates sources from which data may be read."}
{"index": 3384, "repo": "commons-imaging-1.0-alpha3", "code": "package itu_t4\n\n// \nClass T4AndT6Compression;\n", "des": "Provides ITU-T T.4 and T.6 compression classes."}
{"index": 3385, "repo": "commons-imaging-1.0-alpha3", "code": "package mylzw\n\n// \nInterface MyLzwCompressor.Listener;\n// \nInterface MyLzwDecompressor.Listener;\n// \nClass BitsToByteInputStream;\n// \nClass MyBitInputStream;\n// \nClass MyBitOutputStream;\n// \nClass MyLzwCompressor;\n// \nClass MyLzwDecompressor;\n", "des": "Provides LZW compression."}
{"index": 3386, "repo": "commons-imaging-1.0-alpha3", "code": "package bmp\n\n// \nClass BmpImageParser;\n// Bmp format parameters.\nClass BmpImagingParameters;\n", "des": "The BMP image format."}
{"index": 3387, "repo": "commons-imaging-1.0-alpha3", "code": "package dcx\n\n// \nClass DcxImageParser;\n", "des": "The DCX image format."}
{"index": 3388, "repo": "commons-imaging-1.0-alpha3", "code": "package gif\n\n// \nClass GifImageMetadata;\n// \nClass GifImageMetadataItem;\n// \nClass GifImageParser;\n// Gif format parameters.\nClass GifImagingParameters;\n// Describes the disposal of a GIF frame when rendering the animation.\nEnum DisposalMethod;\n", "des": "The GIF image format."}
{"index": 3389, "repo": "commons-imaging-1.0-alpha3", "code": "package icns\n\n// \nClass IcnsImageParser;\n// Icns format parameters.\nClass IcnsImagingParameters;\n", "des": "The ICNS image format."}
{"index": 3390, "repo": "commons-imaging-1.0-alpha3", "code": "package ico\n\n// \nClass IcoImageParser;\n// Ico format parameters.\nClass IcoImagingParameters;\n", "des": "The ICO/CUR image formats."}
{"index": 3391, "repo": "commons-imaging-1.0-alpha3", "code": "package jpeg\n\n// JPEG image format decoder.\npackage jpeg.decoder\n// JPEG image format Exif utilities.\npackage jpeg.exif\n// JPEG image format IPTC metadata.\npackage jpeg.iptc\n// JPEG image format segments.\npackage jpeg.segments\n// JPEG image format XMP metadata.\npackage jpeg.xmp\n// \nInterface JpegUtils.Visitor;\n// \nClass JpegConstants;\n// \nClass JpegImageMetadata;\n// \nClass JpegImageParser;\n// Jpeg format parameters.\nClass JpegImagingParameters;\n// \nClass JpegPhotoshopMetadata;\n// \nClass JpegUtils;\n", "des": "The JPEG image format."}
{"index": 3392, "repo": "commons-imaging-1.0-alpha3", "code": "package decoder\n\n// \nClass JpegDecoder;\n", "des": "JPEG image format decoder."}
{"index": 3393, "repo": "commons-imaging-1.0-alpha3", "code": "package exif\n\n// Interface for Exif write/update/remove functionality for Jpeg/JFIF images.\nClass ExifRewriter;\n// \nClass ExifRewriter.ExifOverflowException;\n", "des": "JPEG image format Exif utilities."}
{"index": 3394, "repo": "commons-imaging-1.0-alpha3", "code": "package iptc\n\n// \nInterface IptcType;\n// Represents an IPTC block, a set of key-value pairs of Photoshop IPTC data.\nClass IptcBlock;\n// \nClass IptcConstants;\n// \nClass IptcParser;\n// \nClass IptcRecord;\n// \nClass IptcTypeLookup;\n// Interface for Exif write/update/remove functionality for Jpeg/JFIF images.\nClass JpegIptcRewriter;\n// \nClass PhotoshopApp13Data;\n// \nEnum IptcTypes;\n", "des": "JPEG image format IPTC metadata."}
{"index": 3395, "repo": "commons-imaging-1.0-alpha3", "code": "package segments\n\n// \nClass App13Segment;\n// http://www.aiim.org/documents/standards/PDF-Ref/References/Adobe/5116.DCT_Filter.pdf\nClass App14Segment;\n// \nClass App2Segment;\n// \nClass AppnSegment;\n// \nClass ComSegment;\n// \nClass DhtSegment;\n// \nClass DhtSegment.HuffmanTable;\n// \nClass DqtSegment;\n// \nClass DqtSegment.QuantizationTable;\n// \nClass GenericSegment;\n// \nClass JfifSegment;\n// \nClass Segment;\n// \nClass SofnSegment;\n// \nClass SofnSegment.Component;\n// \nClass SosSegment;\n// \nClass SosSegment.Component;\n// \nClass UnknownSegment;\n", "des": "JPEG image format segments."}
{"index": 3396, "repo": "commons-imaging-1.0-alpha3", "code": "package xmp\n\n// Interface for Exif write/update/remove functionality for Jpeg/JFIF images.\nClass JpegRewriter;\n// \nClass JpegRewriter.JFIFPiece;\n// \nClass JpegRewriter.JFIFPieces;\n// \nClass JpegRewriter.JFIFPieceSegment;\n// \nClass JpegXmpParser;\n// Interface for Exif write/update/remove functionality for Jpeg/JFIF images.\nClass JpegXmpRewriter;\n// \nClass JpegRewriter.JpegSegmentOverflowException;\n", "des": "JPEG image format XMP metadata."}
{"index": 3397, "repo": "commons-imaging-1.0-alpha3", "code": "package pcx\n\n// \nClass PcxConstants;\n// \nClass PcxImageParser;\n// Parameters used by the Pcx format.\nClass PcxImagingParameters;\n", "des": "The PCX image format."}
{"index": 3398, "repo": "commons-imaging-1.0-alpha3", "code": "package png\n\n// \nClass GammaCorrection;\n// Used to specify physical scale when reading or storing image information.\nClass PhysicalScale;\n// \nClass PngConstants;\n// \nClass PngImageInfo;\n// \nClass PngImageParser;\n// Png format parameters.\nClass PngImagingParameters;\n// \nClass PngText;\n// \nClass PngText.Itxt;\n// \nClass PngText.Text;\n// \nClass PngText.Ztxt;\n// Type of a PNG chunk.\nEnum ChunkType;\n// Interlace methods.\nEnum InterlaceMethod;\n// \nEnum PngColorType;\n", "des": "The PNG image format."}
{"index": 3399, "repo": "commons-imaging-1.0-alpha3", "code": "package pnm\n\n// \nClass PnmImageParser;\n// Pnm format parameters.\nClass PnmImagingParameters;\n", "des": "The PNM image format family."}
{"index": 3400, "repo": "commons-imaging-1.0-alpha3", "code": "package psd\n\n// \nClass PsdHeaderInfo;\n// \nClass PsdImageContents;\n// \nClass PsdImageParser;\n// Psd format parameters.\nClass PsdImagingParameters;\n", "des": "The PSD image format."}
{"index": 3401, "repo": "commons-imaging-1.0-alpha3", "code": "package rgbe\n\n// Parser for Radiance HDR images\nClass RgbeImageParser;\n// Rgbe format parameters.\nClass RgbeImagingParameters;\n", "des": "The Radiance HDR image format."}
{"index": 3402, "repo": "commons-imaging-1.0-alpha3", "code": "package tiff\n\n// TIFF constants.\npackage tiff.constants\n// TIFF data readers.\npackage tiff.datareaders\n// TIFF field types.\npackage tiff.fieldtypes\n// Classes for TIFF photometric interpretation (specifies the intended interpretation of the image pixel data).\npackage tiff.photometricinterpreters\n// Classes for the TIFF tags.\npackage tiff.taginfos\n// TIFF writers.\npackage tiff.write\n// \nInterface TiffReader.Listener;\n// \nClass JpegImageData;\n// \nClass TiffContents;\n// Provides methods and elements for accessing an Image File Directory (IFD) from a TIFF file.\nClass TiffDirectory;\n// \nClass TiffDirectory.ImageDataElement;\n// \nClass TiffElement;\n// \nClass TiffElement.DataElement;\n// \nClass TiffElement.Stub;\n// A TIFF field in a TIFF directory.\nClass TiffField;\n// \nClass TiffHeader;\n// \nClass TiffImageData;\n// \nClass TiffImageData.ByteSourceData;\n// \nClass TiffImageData.Data;\n// \nClass TiffImageData.Strips;\n// \nClass TiffImageData.Tiles;\n// \nClass TiffImageMetadata;\n// \nClass TiffImageMetadata.Directory;\n// \nClass TiffImageMetadata.GPSInfo;\n// \nClass TiffImageMetadata.TiffMetadataItem;\n// \nClass TiffImageParser;\n// Tiff format parameters.\nClass TiffImagingParameters;\n// Provides a simple container for numeric-raster data.\nClass TiffRasterData;\n// Provides a simple container for floating-point data.\nClass TiffRasterDataFloat;\n// Provides a simple container for floating-point data.\nClass TiffRasterDataInt;\n// Collects and stores a set of simple statistics from the input raster.\nClass TiffRasterStatistics;\n// \nClass TiffReader;\n// Provides an enumeration indicating the type of data for an instance of a TiffRasterData class.\nEnum TiffRasterDataType;\n", "des": "Provides classes and methods for reading and writing Tagged Image File Format (TIFF) files."}
{"index": 3403, "repo": "commons-imaging-1.0-alpha3", "code": "package constants\n\n// TIFF specification supplement 1 Enhancements for Adobe PageMaker(R) 6.0 software http://partners.adobe.com/public/developer/en/tiff/TIFFPM6.pdf\nClass AdobePageMaker6TagConstants;\n// TIFF specification supplement 2 Adobe Photoshop (R) TIFF Technical Notes http://partners.adobe.com/public/developer/en/tiff/TIFFphotoshop.pdf\nClass AdobePhotoshopTagConstants;\n// Alias Sketchbook Pro multi-layer TIFF http://www.awaresystems.be/imaging/tiff/tifftags/docs/alias.html\nClass AliasSketchbookProTagConstants;\n// Design rule for Camera Filesystem http://www.exif.org/dcf.PDF\nClass DcfTagConstants;\n// Digital Negative (DNG) Specification http://www.adobe.com/products/dng/pdfs/dng_spec_1_3_0_0.pdf\nClass DngTagConstants;\n// References: http://www.sno.phy.queensu.ca/~phil/exiftool/TagNames/EXIF.html http://tiki-lounge.com/~raf/tiff/fields.html http://www.awaresystems.be/imaging/tiff/tifftags.html \"Stonits\": http://www.anyhere.com/gward/pixformat/tiffluv.html\nClass ExifTagConstants;\n// GDAL library.\nClass GdalLibraryTagConstants;\n// Geo Tiff.\nClass GeoTiffTagConstants;\n// \nClass GpsTagConstants;\n// \nClass HylaFaxTagConstants;\n// Microsoft's HDP/WDP file format.\nClass MicrosoftHdPhotoTagConstants;\n// Largely undocumented and derived by experimentation.\nClass MicrosoftTagConstants;\n// Molecular Dynamics GEL file format http://www.awaresystems.be/imaging/tiff/tifftags/docs/gel.html\nClass MolecularDynamicsGelTagConstants;\n// Oce Scanjob.\nClass OceScanjobTagConstants;\n", "des": "TIFF constants."}
{"index": 3404, "repo": "commons-imaging-1.0-alpha3", "code": "package datareaders\n\n// Provides a data reader for TIFF file images organized by tiles.\nClass DataReaderStrips;\n// Provides a data reader for TIFF file images organized by tiles.\nClass DataReaderTiled;\n// Defines the base class for the TIFF file reader classes.\nClass ImageDataReader;\n", "des": "TIFF data readers."}
{"index": 3405, "repo": "commons-imaging-1.0-alpha3", "code": "package fieldtypes\n\n// TIFF field types.\nClass FieldType;\n// \nClass FieldTypeAscii;\n// \nClass FieldTypeByte;\n// \nClass FieldTypeDouble;\n// \nClass FieldTypeFloat;\n// \nClass FieldTypeLong;\n// \nClass FieldTypeRational;\n// \nClass FieldTypeShort;\n", "des": "TIFF field types."}
{"index": 3406, "repo": "commons-imaging-1.0-alpha3", "code": "package photometricinterpreters\n\n// Provides supplemental photometric interpreters for TIFF products based on floating-point data.\npackage photometricinterpreters.floatingpoint\n// Interpreter for photometric information in TIFF images.\nClass PhotometricInterpreter;\n// \nClass PhotometricInterpreterBiLevel;\n// \nClass PhotometricInterpreterCieLab;\n// \nClass PhotometricInterpreterCmyk;\n// Photometric interpretation Logluv support.\nClass PhotometricInterpreterLogLuv;\n// \nClass PhotometricInterpreterPalette;\n// \nClass PhotometricInterpreterRgb;\n// \nClass PhotometricInterpreterYCbCr;\n", "des": "Classes for TIFF photometric interpretation (specifies the intended interpretation of the image pixel data)."}
{"index": 3407, "repo": "commons-imaging-1.0-alpha3", "code": "package floatingpoint\n\n// Defines an interface for specifying color assignments to floating point values.\nInterface PaletteEntry;\n// Provides a palette entry for colors associated with a range of values.\nClass PaletteEntryForRange;\n// Provides a palette entry for a color assignment to a single value.\nClass PaletteEntryForValue;\n// Implements a custom photometric interpreter that can be supplied by applications in order to render Java images from real-valued TIFF data products.\nClass PhotometricInterpreterFloat;\n", "des": "Provides supplemental photometric interpreters for TIFF products based on floating-point data."}
{"index": 3408, "repo": "commons-imaging-1.0-alpha3", "code": "package taginfos\n\n// \nClass TagInfo;\n// \nClass TagInfoAny;\n// \nClass TagInfoAscii;\n// \nClass TagInfoAsciiOrByte;\n// \nClass TagInfoAsciiOrRational;\n// \nClass TagInfoByte;\n// \nClass TagInfoByteOrShort;\n// \nClass TagInfoBytes;\n// A LONG representing an offset to a TIFF directory.\nClass TagInfoDirectory;\n// \nClass TagInfoDouble;\n// \nClass TagInfoDoubles;\n// \nClass TagInfoFloat;\n// \nClass TagInfoFloats;\n// Used by some GPS tags and the EXIF user comment tag, this badly documented value is meant to contain the text encoding in the first 8 bytes followed by the non-null-terminated text in an unknown byte order.\nClass TagInfoGpsText;\n// \nClass TagInfoLong;\n// \nClass TagInfoLongOrIFD;\n// \nClass TagInfoLongs;\n// \nClass TagInfoRational;\n// \nClass TagInfoRationals;\n// \nClass TagInfoSByte;\n// \nClass TagInfoSBytes;\n// \nClass TagInfoShort;\n// \nClass TagInfoShortOrLong;\n// \nClass TagInfoShortOrLongOrRational;\n// \nClass TagInfoShortOrRational;\n// \nClass TagInfoShorts;\n// \nClass TagInfoSLong;\n// \nClass TagInfoSLongs;\n// \nClass TagInfoSRational;\n// \nClass TagInfoSRationals;\n// \nClass TagInfoSShort;\n// \nClass TagInfoSShorts;\n// \nClass TagInfoUndefined;\n// \nClass TagInfoUndefineds;\n// A TIFF tag whose definition isn't known.\nClass TagInfoUnknown;\n// \nClass TagInfoUnknowns;\n// Windows XP onwards store some tags using UTF-16LE, but the field type is byte - here we deal with this.\nClass TagInfoXpString;\n", "des": "Classes for the TIFF tags."}
{"index": 3409, "repo": "commons-imaging-1.0-alpha3", "code": "package write\n\n// \nClass TiffImageWriterBase;\n// \nClass TiffImageWriterLossless;\n// \nClass TiffImageWriterLossy;\n// \nClass TiffOutputDirectory;\n// \nClass TiffOutputField;\n// \nClass TiffOutputSet;\n", "des": "TIFF writers."}
{"index": 3410, "repo": "commons-imaging-1.0-alpha3", "code": "package wbmp\n\n// \nClass WbmpImageParser;\n// Wbmp format parameters.\nClass WbmpImagingParameters;\n", "des": "The Wireless Application Protocol Bitmap Format image format."}
{"index": 3411, "repo": "commons-imaging-1.0-alpha3", "code": "package xbm\n\n// \nClass XbmImageParser;\n// Xbm format parameters.\nClass XbmImagingParameters;\n", "des": "The X BitMap image format."}
{"index": 3412, "repo": "commons-imaging-1.0-alpha3", "code": "package xpm\n\n// \nClass XpmImageParser;\n// Xpm format parameters.\nClass XpmImagingParameters;\n", "des": "The X PixMap image format."}
{"index": 3413, "repo": "commons-imaging-1.0-alpha3", "code": "package icc\n\n// \nClass IccConstants;\n// \nClass IccProfileInfo;\n// \nClass IccProfileParser;\n// \nClass IccTag;\n// \nEnum IccTagDataTypes;\n// \nEnum IccTagTypes;\n", "des": "ICC color profile."}
{"index": 3414, "repo": "commons-imaging-1.0-alpha3", "code": "package internal\n\n// Internal-only debug class.\nClass Debug;\n// Internal utilities.\nClass Util;\n", "des": "Internal utility classes."}
{"index": 3415, "repo": "commons-imaging-1.0-alpha3", "code": "package palette\n\n// \nInterface MedianCut;\n// Color palette.\nInterface Palette;\n// A comparator for {#link ColorCount} elements.\nClass ColorCountComparator;\n// Dithering algorithms to use when quantizing an image to palette form.\nClass Dithering;\n// \nClass LongestAxisMedianCut;\n// \nClass MedianCutQuantizer;\n// \nClass MostPopulatedBoxesMedianCut;\n// Factory for creating palettes.\nClass PaletteFactory;\n// \nClass QuantizedPalette;\n// \nClass SimplePalette;\n", "des": "Color quantization and palette manipulation tools."}
{"index": 3416, "repo": "gremlin-core-3.6.4", "code": "package kryoshim\n\n// Implementations of the interfaces in org.apache.tinkerpop.gremlin.structure.io.gryo.kryoshim using TinkerPop's shaded copy of Kryo.\npackage kryoshim.shaded\n// A minimal Input-like abstraction.\nInterface InputShim;\n// A minimal Kryo-like abstraction.\nInterface KryoShim<I extends InputShim,​O extends OutputShim>;\n// This interface exists to decouple HadoopPools from TinkerPop's shaded Kryo.\nInterface KryoShimService;\n// A minimal Output-like abstraction.\nInterface OutputShim;\n// A minimal Serializer-like abstraction.\nInterface SerializerShim<T>;\n// Loads the highest-priority or user-selected KryoShimService.\nClass KryoShimServiceLoader;\n", "des": "Abstracts a minimal subset of Kryo types and methods."}
{"index": 3417, "repo": "gremlin-core-3.6.4", "code": "package shaded\n\n// \nClass ShadedInputAdapter;\n// \nClass ShadedKryoAdapter;\n// \nClass ShadedOutputAdapter;\n// \nClass ShadedSerializerAdapter<T>;\n", "des": "Implementations of the interfaces in org.apache.tinkerpop.gremlin.structure.io.gryo.kryoshim using TinkerPop's shaded copy of Kryo."}
{"index": 3418, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Contract representing some process that needs to occur during after transaction completion.\nInterface AfterTransactionCompletionProcess;\n// Contract representing some process that needs to occur during before transaction completion.\nInterface BeforeTransactionCompletionProcess;\n// An operation which may be scheduled for later execution.\nInterface Executable;\n", "des": "Defines SPI hooks into the ActionQueue."}
{"index": 3419, "repo": "hibernate-core-5.6.15.Final", "code": "package annotations\n\n// Consolidation of hints available to Hibernate JPA queries.\nClass QueryHints;\n// Cache concurrency strategy.\nEnum CacheConcurrencyStrategy;\n// Enumeration for the different interaction modes between the session and the Level 2 Cache.\nEnum CacheModeType;\n// Cascade types (can override default JPA cascades).\nEnum CascadeType;\n// Defines how the association should be fetched, compared to FetchType which defines when it should be fetched\nEnum FetchMode;\n// Enumeration extending javax.persistence flush modes.\nEnum FlushModeType;\n// At what time(s) will the generation occur?\nEnum GenerationTime;\n// Lazy options available for a collection.\nEnum LazyCollectionOption;\n// Lazy options available for a ToOne association.\nEnum LazyToOneOption;\n// Possible actions when the database contains a non-null fk with no matching target.\nEnum NotFoundAction;\n// Possible actions for on-delete.\nEnum OnDeleteAction;\n// Possible optimistic locking strategies.\nEnum OptimisticLockType;\n// Type of available polymorphism for a particular entity.\nEnum PolymorphismType;\n// Possible styles of checking return codes on SQL INSERT, UPDATE and DELETE queries.\nEnum ResultCheckStyle;\n// \nEnum SortType;\n// Where should Hibernate retrieve the value from? From the database, or from the current JVM?\nEnum SourceType;\n// \nAnnotation Type AccessType;\n// Defines a ToOne-style association pointing to one of several entity types depending on a local discriminator, as opposed to discriminated inheritance where the discriminator is kept as part of the entity hierarchy.\nAnnotation Type Any;\n// \nAnnotation Type AnyMetaDef;\n// \nAnnotation Type AnyMetaDefs;\n// Names a persistent property access strategy (PropertyAccessStrategy) to use.\nAnnotation Type AttributeAccessor;\n// Defines size for batch loading of collections or lazy entities.\nAnnotation Type BatchSize;\n// Add caching strategy to a root entity or a collection.\nAnnotation Type Cache;\n// Apply a cascade strategy on an association.\nAnnotation Type Cascade;\n// Arbitrary SQL CHECK constraints which can be defined at the class, property or collection level.\nAnnotation Type Check;\n// Describe an identifier column for a bag (ie an idbag).\nAnnotation Type CollectionId;\n", "des": "Package containing all the Hibernate specific annotations."}
{"index": 3420, "repo": "hibernate-core-5.6.15.Final", "code": "package boot\n\n// Defines service registry contracts application are likely to want to utilize for configuring Hibernate behavior.\npackage boot.registry\n// Support for XSD handling, specifically for ORM mappings (Hibernate's `hbm.xml` and JPA's `orm.xml`) and config files (Hibernate's `cfg.xml` and JPA's `persistence.xml`)\npackage boot.xsd\n// Delayed information about an AttributeConverter.\nInterface AttributeConverterInfo;\n// Represents the ORM model as determined from all provided mapping sources.\nInterface Metadata;\n// Contract for specifying various overrides to be used in metamodel building.\nInterface MetadataBuilder;\n// The contract for building a SessionFactory given a number of options.\nInterface SessionFactoryBuilder;\n// Models the definition of caching settings for a particular region.\nClass CacheRegionDefinition;\n// \nClass JaccPermissionDefinition;\n// Entry point into working with sources of metadata information (mapping XML, annotations).\nClass MetadataSources;\n// \nEnum CacheRegionDefinition.CacheRegionType;\n// Defines the possible values for \"hbm2ddl_auto\"\nEnum SchemaAutoTooling;\n// Enum describing how creation and dropping of temporary tables should be done in terms of transaction handling.\nEnum TempTableDdlTransactionHandling;\n// \nClass InvalidMappingException;\n// Indicates a problem parsing a mapping document.\nClass MappingException;\n// \nClass MappingNotFoundException;\n// \nClass UnsupportedOrmXsdVersionException;\n", "des": "This package contains the contracts that make up the Hibernate native bootstrapping API (building a SessionFactory)."}
{"index": 3421, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Describes the context for visiting the entries within an archive\nInterface ArchiveContext;\n// Contract for visiting an archive, which might be a jar, a zip, an exploded directory, etc.\nInterface ArchiveDescriptor;\n// Contract for building ArchiveDescriptor instances.\nInterface ArchiveDescriptorFactory;\n// Represent an entry in the archive.\nInterface ArchiveEntry;\n// Handler for archive entries, based on the classified type of the entry\nInterface ArchiveEntryHandler;\n// Contract for building InputStreams, especially in on-demand situations\nInterface InputStreamAccess;\n// Optional contract for ArchiveDescriptorFactory implementations to implement to be able to adjust <jar-file/> URL's defined in persistence.xml files.\nInterface JarFileEntryUrlAdjuster;\n// Base support for ArchiveDescriptor implementors.\nClass AbstractArchiveDescriptor;\n// \nClass AbstractArchiveDescriptorFactory;\n// Indicates a problem accessing or visiting the archive\nClass ArchiveException;\n", "des": "Defines the SPI for support of \"scanning\" of \"archives\"."}
{"index": 3422, "repo": "hibernate-core-5.6.15.Final", "code": "package naming\n\n// \nInterface EntityNaming;\n// Context for determining the implicit name for an ANY mapping's discriminator column.\nInterface ImplicitAnyDiscriminatorColumnNameSource;\n// Context for determining the implicit name for an ANY mapping's key column.\nInterface ImplicitAnyKeyColumnNameSource;\n// Context for determining the implicit name related to basic values.\nInterface ImplicitBasicColumnNameSource;\n// Context for determining the implicit name for a collection table.\nInterface ImplicitCollectionTableNameSource;\n// Common implicit name source traits for all constraint naming: FK, UK, index\nInterface ImplicitConstraintNameSource;\n// Context for determining the implicit name of an entity's discriminator column.\nInterface ImplicitDiscriminatorColumnNameSource;\n// Context for determining the implicit name of an entity's primary table\nInterface ImplicitEntityNameSource;\n// \nInterface ImplicitForeignKeyNameSource;\n// Context for determining the implicit name of an entity's identifier column.\nInterface ImplicitIdentifierColumnNameSource;\n// \nInterface ImplicitIndexColumnNameSource;\n// \nInterface ImplicitIndexNameSource;\n// Context for determining the implicit name of a \"join column\" (think JoinColumn).\nInterface ImplicitJoinColumnNameSource;\n// Context for determining the implicit name for a join table.\nInterface ImplicitJoinTableNameSource;\n// Context for determining the implicit name of a column used to back the key of a Map.\nInterface ImplicitMapKeyColumnNameSource;\n// Common contract for all implicit naming sources\nInterface ImplicitNameSource;\n// Pluggable strategy for applying implicit naming rules when an explicit name is not given.\nInterface ImplicitNamingStrategy;\n// Used to help determine the implicit name of columns which are part of a primary-key, well simultaneously being part of a foreign-key (join).\nInterface ImplicitPrimaryKeyJoinColumnNameSource;\n// Context for determining the implicit name of an entity's tenant identifier column.\nInterface ImplicitTenantIdColumnNameSource;\n// \nInterface ImplicitUniqueKeyNameSource;\n// Helper contract for dealing with naming strategies.\nInterface NamingStrategyHelper;\n// Pluggable strategy contract for applying physical naming rules for database object names.\nInterface PhysicalNamingStrategy;\n// Originally copied from Spring Boot as this strategy is popular there (original name is SpringPhysicalNamingStrategy).\nClass CamelCaseToUnderscoresNamingStrategy;\n// Models an identifier (name), retrieved from the database.\nClass DatabaseIdentifier;\n", "des": "Represents a proposed new approach to allowing hooks into the process of determining the name of database objects (tables, columns, constraints, etc)."}
{"index": 3423, "repo": "hibernate-core-5.6.15.Final", "code": "package registry\n\n// Defines a feature-set around named registration of implementations of various contracts and the ability to select those implementations.\npackage registry.selector\n// Provides the most basic services needed.\nInterface BootstrapServiceRegistry;\n// Contract for an initiator of services that target the standard ServiceRegistry.\nInterface StandardServiceInitiator<R extends Service>;\n// Specialization of the ServiceRegistry contract mainly for type safety.\nInterface StandardServiceRegistry;\n// Builder for BootstrapServiceRegistry instances.\nClass BootstrapServiceRegistryBuilder;\n// Builder for standard ServiceRegistry instances.\nClass StandardServiceRegistryBuilder;\n", "des": "Defines service registry contracts application are likely to want to utilize for configuring Hibernate behavior."}
{"index": 3424, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// A service for interacting with class loaders.\nInterface ClassLoaderService;\n// \nInterface ClassLoaderService.Work<T>;\n// Indicates a problem performing class loading.\nClass ClassLoadingException;\n", "des": "The class loading service SPI."}
{"index": 3425, "repo": "hibernate-core-5.6.15.Final", "code": "package selector\n\n// Defines actual contract used for strategy selection : StrategySelector.\npackage selector.spi\n// Describes the registration of a named strategy implementation.\nInterface StrategyRegistration<T>;\n// Responsible for providing the registrations of strategy selector(s).\nInterface StrategyRegistrationProvider;\n// A simple implementation of StrategyRegistration.\nClass SimpleStrategyRegistrationImpl<T>;\n", "des": "Defines a feature-set around named registration of implementations of various contracts and the ability to select those implementations."}
{"index": 3426, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// \nInterface StrategyCreator<T>;\n// Service which acts as a registry for named strategy implementations.\nInterface StrategySelector;\n// Indicates a problem performing the selection/resolution.\nClass StrategySelectionException;\n", "des": "Defines actual contract used for strategy selection : StrategySelector."}
{"index": 3427, "repo": "hibernate-core-5.6.15.Final", "code": "package xsd\n\n// Support for XSD handling related to Hibernate's `cfg.xml` and JPA's `persistence.xml`.\nClass ConfigXsdSupport;\n// When Hibernate loads an XSD we fully expect that to be resolved from our jar file via ClassLoader resource look-up.\nClass LocalXsdResolver;\n// Support for XSD handling related to Hibernate's `hbm.xml` and JPA's `orm.xml`.\nClass MappingXsdSupport;\n// Representation of a locally resolved XSD\nClass XsdDescriptor;\n", "des": "Support for XSD handling, specifically for ORM mappings (Hibernate's `hbm.xml` and JPA's `orm.xml`) and config files (Hibernate's `cfg.xml` and JPA's `persistence.xml`)"}
{"index": 3428, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// interceptor implementations\npackage spi.interceptor\n// Interface to be implemented by collection trackers that hold the expected size od collections, a simplified Map<String, int>.\nInterface CollectionTracker;\n// The context for performing an enhancement.\nInterface EnhancementContext;\n// Class responsible for performing enhancement.\nInterface Enhancer;\n// Contract for controlling how lazy properties get initialized.\nInterface LazyPropertyInitializer;\n// \nInterface LazyPropertyInitializer.InterceptorImplementor;\n// \nInterface UnloadedClass;\n// \nInterface UnloadedField;\n// default implementation of EnhancementContext.\nClass DefaultEnhancementContext;\n// \nClass EnhancementContextWrapper;\n// Constants used during enhancement.\nClass EnhancerConstants;\n// An exception indicating some kind of problem performing bytecode enhancement.\nClass EnhancementException;\n", "des": "package defining bytecode code enhancement (instrumentation) support."}
{"index": 3429, "repo": "hibernate-core-5.6.15.Final", "code": "package interceptor\n\n// Logging related to bytecode enhancement interceptors\nInterface BytecodeInterceptorLogging;\n// \nInterface BytecodeLazyAttributeInterceptor;\n// \nInterface EnhancementHelper.InheritanceChecker;\n// Information about a particular bytecode lazy attribute grouping.\nInterface LazyFetchGroupMetadata;\n// \nInterface SessionAssociableInterceptor;\n// \nClass AbstractInterceptor;\n// \nClass AbstractLazyLoadInterceptor;\n// Warning this class consists of generated code.\nClass BytecodeInterceptorLogging_$logger;\n// \nClass EnhancementAsProxyLazinessInterceptor;\n// \nClass EnhancementHelper;\n// Descriptor for an attribute which is enabled for bytecode lazy fetching\nClass LazyAttributeDescriptor;\n// Interceptor that loads attributes lazily\nClass LazyAttributeLoadingInterceptor;\n// Information about all of the bytecode lazy attributes for an entity\nClass LazyAttributesMetadata;\n", "des": "interceptor implementations"}
{"index": 3430, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// A proxy factory for \"basic proxy\" generation.\nInterface BasicProxyFactory;\n// Encapsulates bytecode enhancement information about a particular entity.\nInterface BytecodeEnhancementMetadata;\n// Contract for providers of bytecode services to Hibernate.\nInterface BytecodeProvider;\n// A persistence provider provides an instance of this interface to the PersistenceUnitInfo.addTransformer method.\nInterface ClassTransformer;\n// An interface for factories of proxy factory instances.\nInterface ProxyFactoryFactory;\n// Represents reflection optimization for a particular class.\nInterface ReflectionOptimizer;\n// Represents optimized entity property access.\nInterface ReflectionOptimizer.AccessOptimizer;\n// Represents optimized entity instantiation.\nInterface ReflectionOptimizer.InstantiationOptimizer;\n// A helper for reading byte code from various input sources.\nClass ByteCodeHelper;\n// \nClass ClassLoadingStrategyHelper;\n// A specialized ClassLoader which performs bytecode enhancement on class definitions as they are loaded into the ClassLoader scope.\nClass InstrumentedClassLoader;\n// Indicates a condition where an instrumented/enhanced class was expected, but the class was not instrumented/enhanced.\nClass NotInstrumentedException;\n", "des": "Package defining bytecode code enhancement (instrumentation) support."}
{"index": 3431, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Package intended for simplifying the worked needed to implement a caching provider.\npackage spi.support\n// SPI contract for Hibernate's second-level cache engine\nInterface CacheImplementor;\n// \nInterface CacheKeysFactory;\n// Defines a context object that a RegionFactory is asked to create (RegionFactory.createTransactionContext(org.hibernate.engine.spi.SharedSessionContractImplementor)}) when a Hibernate Session is created.\nInterface CacheTransactionSynchronization;\n// Specialized Region whose data is accessed directly (not requiring key/item wrapping, e.g.\nInterface DirectAccessRegion;\n// A Region for cacheable domain data - entity, collection, natural-id.\nInterface DomainDataRegion;\n// Optional Region contract defining support for extra statistic information\nInterface ExtendedStatisticsSupport;\n// \nInterface QueryCache;\n// Defines the responsibility for managing query result data caching in regards to a specific region.\nInterface QueryResultsCache;\n// Defines the contract for a cache region which will specifically be used to store query results.\nInterface QueryResultsRegion;\n// Contract for a named \"region\".\nInterface Region;\n// Contract for building second level cache regions.\nInterface RegionFactory;\n// \nInterface SecondLevelCacheLogger;\n// Wrapper for a TimestampsRegion adding handling of stale results\nInterface TimestampsCache;\n// Responsible for building the TimestampsRegionAccessFactory to use for managing query results in regards to staleness of the underlying tables (sometimes called \"query spaces\" or \"table spaces\")\nInterface TimestampsCacheFactory;\n// \nInterface TimestampsRegion;\n// \nInterface UpdateTimestampsCache;\n// \nClass AbstractCacheTransactionSynchronization;\n// \nClass AbstractRegionFactory;\n// Allows cached queries to be keyed by enabled filters.\nClass FilterKey;\n// A key that identifies a particular query with bound parameter values.\nClass QueryKey;\n// \nClass QuerySpacesHelper;\n// Warning this class consists of generated code.\nClass SecondLevelCacheLogger_$logger;\n// \nClass StandardCacheTransactionSynchronization;\n", "des": "Defines the integration aspect of Hibernate's second-level caching allowing \"caching back ends\" to be plugged in as a caching provider."}
{"index": 3432, "repo": "hibernate-core-5.6.15.Final", "code": "package support\n\n// Optional interface caching implementors can implement in their CachedDomainDataAccess impls to automatically have them destroyed when this region is destroyed\nInterface AbstractDomainDataRegion.Destructible;\n// Interface type implemented by all wrapper objects in the cache.\nInterface AbstractReadWriteAccess.Lockable;\n// Specialization of StorageAccess for domain data regions\nInterface DomainDataStorageAccess;\n// A general read/write abstraction over the specific \"cache\" object from the caching provider.\nInterface StorageAccess;\n// \nClass AbstractCachedDomainDataAccess;\n// \nClass AbstractCollectionDataAccess;\n// \nClass AbstractDomainDataRegion;\n// \nClass AbstractEntityDataAccess;\n// \nClass AbstractNaturalIdDataAccess;\n// \nClass AbstractReadWriteAccess;\n// Wrapper type representing unlocked items.\nClass AbstractReadWriteAccess.Item;\n// Wrapper type representing locked items.\nClass AbstractReadWriteAccess.SoftLockImpl;\n// \nClass AbstractRegion;\n// \nClass CacheUtils;\n// Standard support for CollectionDataAccess using the AccessType.NONSTRICT_READ_WRITE access type.\nClass CollectionNonStrictReadWriteAccess;\n// Standard support for CollectionDataAccess using the AccessType.READ_ONLY access type.\nClass CollectionReadOnlyAccess;\n// Standard support for CollectionDataAccess using the AccessType.READ_WRITE access type.\nClass CollectionReadWriteAccess;\n// \nClass CollectionTransactionAccess;\n// Bridge between DirectAccessRegion and StorageAccess\nClass DirectAccessRegionTemplate;\n// \nClass DomainDataRegionImpl;\n// Abstract implementation of DomainDataRegion based on implementations just needing to provide a DomainDataStorageAccess reference for basic caching support - DomainDataStorageAccess acts as a simple wrapper around some generalized cache actions such as put or get.\nClass DomainDataRegionTemplate;\n// Standard support for EntityDataAccess using the AccessType.NONSTRICT_READ_WRITE access type.\nClass EntityNonStrictReadWriteAccess;\n// Standard support for EntityDataAccess using the AccessType.READ_ONLY access type.\nClass EntityReadOnlyAccess;\n// Standard support for EntityDataAccess using the AccessType.READ_WRITE access type.\nClass EntityReadWriteAccess;\n// \nClass EntityTransactionalAccess;\n", "des": "Package intended for simplifying the worked needed to implement a caching provider."}
{"index": 3433, "repo": "hibernate-core-5.6.15.Final", "code": "package reflection\n\n// \nInterface AttributeConverterDefinitionCollector;\n// A ClassLoaderAccess implementation based on lazy access to MetadataBuildingOptions\nClass ClassLoaderAccessLazyImpl;\n// \nClass PersistentAttributeFilter;\n", "des": "Defines the capability to merge mapping information from both annotations and orm.xml sources into a unified set of metadata in the Hibernate commons-annotations model."}
{"index": 3434, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Hibernate \"wraps\" a java collection in an instance of PersistentCollection.\nInterface LazyInitializable;\n// Persistent collections are treated as value objects by Hibernate.\nInterface PersistentCollection;\n", "des": "SPI definitions for persistent collections"}
{"index": 3435, "repo": "hibernate-core-5.6.15.Final", "code": "package context\n\n// SPI level contracts around \"current session\" support.\npackage context.spi\n// Indicates that tenant identifiers did not match in cases where CurrentTenantIdentifierResolver.validateExistingCurrentSessions() returns true and there is a mismatch found.\nClass TenantIdentifierMismatchException;\n", "des": "Defines support for \"current session\" feature."}
{"index": 3436, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Defines the contract for implementations which know how to scope the notion of a current session.\nInterface CurrentSessionContext;\n// A callback registered with the SessionFactory that is responsible for resolving the current tenant identifier for use with CurrentSessionContext and SessionFactory.getCurrentSession()\nInterface CurrentTenantIdentifierResolver;\n// Base support for CurrentSessionContext implementors.\nClass AbstractCurrentSessionContext;\n", "des": "SPI level contracts around \"current session\" support."}
{"index": 3437, "repo": "hibernate-core-5.6.15.Final", "code": "package lock\n\n// A strategy abstraction for how locks are obtained in the underlying database.\nInterface LockingStrategy;\n// Base LockingStrategy implementation to support implementations based on issuing SQL SELECT statements\nClass AbstractSelectLockingStrategy;\n// An optimistic locking strategy that forces an increment of the version (after verifying that version hasn't changed).\nClass OptimisticForceIncrementLockingStrategy;\n// An optimistic locking strategy that verifies that the version hasn't changed (prior to transaction commit).\nClass OptimisticLockingStrategy;\n// A pessimistic locking strategy that increments the version immediately (obtaining an exclusive write lock).\nClass PessimisticForceIncrementLockingStrategy;\n// A pessimistic locking strategy where the locks are obtained through select statements.\nClass PessimisticReadSelectLockingStrategy;\n// A pessimistic locking strategy where the locks are obtained through update statements.\nClass PessimisticReadUpdateLockingStrategy;\n// A pessimistic locking strategy where the locks are obtained through select statements.\nClass PessimisticWriteSelectLockingStrategy;\n// A pessimistic locking strategy where the locks are obtained through update statements.\nClass PessimisticWriteUpdateLockingStrategy;\n// A locking strategy where the locks are obtained through select statements.\nClass SelectLockingStrategy;\n// A locking strategy where the locks are obtained through update statements.\nClass UpdateLockingStrategy;\n// Represents an error trying to apply a LockingStrategy to an entity\nClass LockingStrategyException;\n// Represents an error trying to apply an optimistic LockingStrategy to an entity\nClass OptimisticEntityLockException;\n// Represents an error trying to apply a pessimistic LockingStrategy to an entity\nClass PessimisticEntityLockException;\n", "des": "Support for Dialect-specific locking strategies"}
{"index": 3438, "repo": "hibernate-core-5.6.15.Final", "code": "package pagination\n\n// Contract defining dialect-specific LIMIT clause handling.\nInterface LimitHandler;\n// Default implementation of LimitHandler interface.\nClass AbstractLimitHandler;\n// Limit handler for CUBRID\nClass CUBRIDLimitHandler;\n// \nClass FirstLimitHandler;\n// \nClass Informix10LimitHandler;\n// \nClass LegacyFirstLimitHandler;\n// Limit handler that delegates all operations to the underlying dialect.\nClass LegacyLimitHandler;\n// A helper for dealing with LimitHandler implementations\nClass LimitHelper;\n// Handler not supporting query LIMIT clause.\nClass NoopLimitHandler;\n// A LimitHandler for databases which support the ANSI SQL standard syntax FETCH FIRST m ROWS ONLY and OFFSET n ROWS FETCH NEXT m ROWS ONLY.\nClass Oracle12LimitHandler;\n// LIMIT clause handler compatible with ISO and ANSI SQL:2008 standard.\nClass SQL2008StandardLimitHandler;\n// LIMIT clause handler compatible with SQL Server 2005 and later.\nClass SQLServer2005LimitHandler;\n// LIMIT clause handler compatible with SQL Server 2012 and later.\nClass SQLServer2012LimitHandler;\n// This limit handler is very conservative and is only triggered in simple cases involving a select or select distinct.\nClass SybaseASE157LimitHandler;\n// \nClass TopLimitHandler;\n", "des": "Support for Dialect-specific pagination strategies"}
{"index": 3439, "repo": "hibernate-core-5.6.15.Final", "code": "package unique\n\n// Dialect-level delegate in charge of applying \"uniqueness\" to a column.\nInterface UniqueDelegate;\n// DB2 does not allow unique constraints on nullable columns.\nClass DB2UniqueDelegate;\n// The default UniqueDelegate implementation for most dialects.\nClass DefaultUniqueDelegate;\n// Informix requires the constraint name to come last on the alter table.\nClass InformixUniqueDelegate;\n// \nClass MySQLUniqueDelegate;\n", "des": "Support for Dialect-specific unique constraint definition"}
{"index": 3440, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Provides access to the initial user-provided configuration values.\nInterface ConfigurationService;\n// Simple conversion contract for converting an untyped object to a specified type.\nInterface ConfigurationService.Converter<T>;\n// Standard set of setting converters\nClass StandardConverters;\n", "des": "SPI Package for the configuration service."}
{"index": 3441, "repo": "hibernate-core-5.6.15.Final", "code": "package jdbc\n\n// SPI contracts for supporting various aspects of JDBC interaction\npackage jdbc.spi\n// Wraps a binary stream to also provide the length which is needed when binding.\nInterface BinaryStream;\n// Marker interface for non-contextually created Blob instances..\nInterface BlobImplementer;\n// Wraps a character stream (reader) to also provide the length (number of characters) which is needed when binding.\nInterface CharacterStream;\n// Marker interface for non-contextually created Clob instances..\nInterface ClobImplementer;\n// Provides callback access into the context in which the LOB is to be created.\nInterface LobCreationContext;\n// The callback contract for making use of the JDBC Connection.\nInterface LobCreationContext.Callback<T>;\n// Contract for creating various LOB references.\nInterface LobCreator;\n// Marker interface for non-contextually created java.sql.NClob instances..\nInterface NClobImplementer;\n// Contract for Blob wrappers.\nInterface WrappedBlob;\n// Contract for Clob wrappers.\nInterface WrappedClob;\n// Contract for NClob wrappers.\nInterface WrappedNClob;\n// Convenient base class for proxy-based LobCreator for handling wrapping.\nClass AbstractLobCreator;\n// Manages aspects of representing Blob objects.\nClass BlobProxy;\n// Manages aspects of proxying Clobs for non-contextual creation, including proxy creation and handling proxy invocations.\nClass ClobProxy;\n// \nClass ColumnNameCache;\n// LobCreator implementation using contextual creation against the JDBC Connection class's LOB creation methods.\nClass ContextualLobCreator;\n// Manages aspects of proxying java.sql.NClobs for non-contextual creation, including proxy creation and handling proxy invocations.\nClass NClobProxy;\n// LobCreator implementation using non-contextual or local creation, meaning that we generate the LOB references ourselves as opposed to delegating to the JDBC Connection.\nClass NonContextualLobCreator;\n// Exposes a Reader as an InputStream.\nClass ReaderInputStream;\n// \nClass ResultSetWrapperProxy;\n// Manages aspects of proxying Blobs to add serializability.\nClass SerializableBlobProxy;\n", "des": "Support for various aspects of JDBC interaction"}
{"index": 3442, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Conceptually models a batch.\nInterface Batch;\n// A builder for Batch instances\nInterface BatchBuilder;\n// Unique key for batch identification.\nInterface BatchKey;\n// An observer contract for batch events.\nInterface BatchObserver;\n", "des": "Defines contracts for JDBC batching support."}
{"index": 3443, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// A contract for obtaining JDBC connections.\nInterface ConnectionProvider;\n// Provides centralized access to JDBC connections.\nInterface JdbcConnectionAccess;\n// A specialized Connection provider contract used when the application is using multi-tenancy support requiring tenant aware connections.\nInterface MultiTenantConnectionProvider;\n// Basic support for implementations of MultiTenantConnectionProvider based on DataSources.\nClass AbstractDataSourceBasedMultiTenantConnectionProviderImpl;\n// Basic support for MultiTenantConnectionProvider implementations using individual ConnectionProvider instances per tenant behind the scenes.\nClass AbstractMultiTenantConnectionProvider;\n// A concrete implementation of the MultiTenantConnectionProvider contract bases on a number of reasonable assumptions.\nClass DataSourceBasedMultiTenantConnectionProviderImpl;\n", "des": "Defines contracts for accessing JDBC Connections"}
{"index": 3444, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Contract for JDBC REF_CURSOR support.\nInterface RefCursorSupport;\n", "des": "Defines contracts for JDBC REF_CURSOR support."}
{"index": 3445, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// A factory for generating Dialect instances.\nInterface DialectFactory;\n// Exposes information about the database and JDBC driver that can be used in resolving the appropriate Dialect to use.\nInterface DialectResolutionInfo;\n// Contract for the source of DialectResolutionInfo.\nInterface DialectResolutionInfoSource;\n// Contract for determining the Dialect to use based on information about the database / driver.\nInterface DialectResolver;\n// Intended as support for custom resolvers which match a single db name (with optional version info).\nClass BasicDialectResolver;\n// A helper to centralize conversion of SQLExceptions to JDBCExceptions.\nClass BasicSQLExceptionConverter;\n// An implementation of DialectResolutionInfo that delegates calls to a wrapped DatabaseMetaData.\nClass DatabaseMetaDataDialectResolutionInfoAdapter;\n", "des": "Contracts supporting Dialect resolution (from JDBC metadata) and Dialect building."}
{"index": 3446, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// An observer of logical connection events.\nInterface ConnectionObserver;\n// Specialized JdbcWrapper contract for wrapped objects that can additioanlly be invalidated\nInterface InvalidatableWrapper<T>;\n// Coordinates JDBC-related activities.\nInterface JdbcCoordinator;\n// Contract for services around JDBC operations.\nInterface JdbcServices;\n// Generic contract for wrapped JDBC objects.\nInterface JdbcWrapper<T>;\n// Additional optional contract for connection observers to indicate that they should be released when the physical connection is released.\nInterface NonDurableConnectionObserver;\n// Contract for extracting ResultSets from Statements, executing Statements, managing Statement/ResultSet resources, and logging statement calls.\nInterface ResultSetReturn;\n// \nInterface ResultSetWrapper;\n// Contract for resolving the schema of a Connection.\nInterface SchemaNameResolver;\n// Contract for handling warnings\nInterface SqlExceptionHelper.WarningHandler;\n// Contracting for preparing SQL statements\nInterface StatementPreparer;\n// A no-op adapter for ConnectionObserver.\nClass ConnectionObserverAdapter;\n// Helper for handling SQLExceptions in various manners.\nClass SqlExceptionHelper;\n// Standard SQLWarning handler for logging warnings\nClass SqlExceptionHelper.StandardWarningHandler;\n// Basic support for SqlExceptionHelper.WarningHandler implementations which handle warnings\nClass SqlExceptionHelper.WarningHandlerLoggingSupport;\n// Centralize logging for SQL statements.\nClass SqlStatementLogger;\n// Models type info extracted from DatabaseMetaData.getTypeInfo()\nClass TypeInfo;\n// Describes the instrinsic nullability of a data type as reported by the JDBC driver.\nEnum TypeNullability;\n// Describes the searchability of a data type as reported by the JDBC driver.\nEnum TypeSearchability;\n", "des": "SPI contracts for supporting various aspects of JDBC interaction"}
{"index": 3447, "repo": "hibernate-core-5.6.15.Final", "code": "package jndi\n\n// The SPI contracts for Hibernate JNDI support\npackage jndi.spi\n// An exception indicating trouble accessing JNDI\nClass JndiException;\n// Indicates a problem with a given JNDI name being deemed as not valid.\nClass JndiNameException;\n", "des": "Support for JNDI within Hibernate"}
{"index": 3448, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Service providing simplified access to JNDI related features needed by Hibernate.\nInterface JndiService;\n", "des": "The SPI contracts for Hibernate JNDI support"}
{"index": 3449, "repo": "hibernate-core-5.6.15.Final", "code": "package profile\n\n// Models the association of a given fetch.\nClass Association;\n// Models an individual fetch within a profile.\nClass Fetch;\n// A 'fetch profile' allows a user to dynamically modify the fetching strategy used for particular associations at runtime, whereas that information was historically only statically defined in the metadata.\nClass FetchProfile;\n// The type or style of fetch.\nEnum Fetch.Style;\n", "des": "Models the fetch profiles defined by the application"}
{"index": 3450, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Service contract for dealing with native queries.\nInterface NativeQueryInterpreter;\n// Maybe better named a Journaler.\nInterface ParameterParser.Recognizer;\n// \nInterface QueryPlanCache.QueryPlanCreator;\n// NOTE: Consider this contract (and its sub-contracts) as incubating as we transition to 6.0 and SQM\nClass AbstractParameterDescriptor;\n// Encapsulates a JPA EntityGraph provided through a JPQL query hint.\nClass EntityGraphQueryHint;\n// Extends an HQLQueryPlan to maintain a reference to the collection-role name being filtered.\nClass FilterQueryPlan;\n// Defines a query execution plan for an HQL query (or filter).\nClass HQLQueryPlan;\n// Descriptor regarding a named parameter.\nClass NamedParameterDescriptor;\n// \nClass NativeQueryInterpreterInitiator;\n// Defines a query execution plan for a native-SQL query.\nClass NativeSQLQueryPlan;\n// Descriptor regarding an ordinal parameter.\nClass OrdinalParameterDescriptor;\n// The single available method ParameterParser.parse(java.lang.String, org.hibernate.engine.query.spi.ParameterParser.Recognizer) is responsible for parsing a query string and recognizing tokens in relation to parameters (either named, JPA-style, or ordinal) and providing callbacks about such recognitions.\nClass ParameterParser;\n// Implements a parameter parser recognizer specifically for the purpose of journaling parameter locations.\nClass ParamLocationRecognizer;\n// Internal in-flight representation of a recognized named parameter\nClass ParamLocationRecognizer.InFlightJpaOrdinalParameterState;\n// Internal in-flight representation of a recognized named parameter\nClass ParamLocationRecognizer.InFlightNamedParameterState;\n// Internal in-flight representation of a recognized named parameter\nClass ParamLocationRecognizer.InFlightOrdinalParameterState;\n// Acts as a cache for compiled query plans, as well as query-parameter metadata.\nClass QueryPlanCache;\n// Metadata about the query return(s).\nClass ReturnMetadata;\n", "des": "Defines support for query plans and stored metadata about queries"}
{"index": 3451, "repo": "hibernate-core-5.6.15.Final", "code": "package graph\n\n// Hibernate extension to the JPA entity-graph AttributeNode contract.\nInterface AttributeNode<J>;\n// A container for AttributeNodes.\nInterface Graph<J>;\n// Commonality between AttributeNode and Graph.\nInterface GraphNode<J>;\n// Hibernate extension to the JPA EntityGraph contract.\nInterface RootGraph<J>;\n// Hibernate extension to the JPA entity-graph Subgraph contract.\nInterface SubGraph<J>;\n// A collection of EntityGraph utilities.\nClass EntityGraphs;\n// Parser for string representations of JPA EntityGraph (RootGraph) and Subgraph (SubGraph), using a simple syntax defined by the `graph.g` Antlr grammar.\nClass GraphParser;\n// JPA defines 2 distinct semantics for applying an EntityGraph.\nEnum GraphSemantic;\n// Indicates an illegal attempt to make a Graph become an EntityGraph via Graph.makeRootGraph(String, boolean).\nClass CannotBecomeEntityGraphException;\n// Indicates an attempt was made to add a (key)? sub-graph to an attribute type that does not support (key)? sub-graphs.\nClass CannotContainSubGraphException;\n// Thrown by GraphParser to indicate textual entity graph representation parsing errors.\nClass InvalidGraphException;\n", "des": "Hibernate's (extended) support for JPA's entity graphs"}
{"index": 3452, "repo": "hibernate-core-5.6.15.Final", "code": "package id\n\n// Package contains an implementation of MultiTableBulkIdStrategy based on the use of a persistent (ANSI SQL term) table to hold id values.\npackage id.persistent\n// \nInterface AbstractMultiTableBulkIdStrategyImpl.PreparationContext;\n// \nInterface IdTableInfo;\n// \nInterface IdTableSupport;\n// Generalized strategy contract for handling multi-table bulk HQL operations.\nInterface MultiTableBulkIdStrategy;\n// Handler for dealing with multi-table HQL bulk delete statements.\nInterface MultiTableBulkIdStrategy.DeleteHandler;\n// Handler for dealing with multi-table HQL bulk update statements.\nInterface MultiTableBulkIdStrategy.UpdateHandler;\n// Base class for all strategies that select the ids to be updated/deleted prior to executing the update/delete operation.\nClass AbstractIdsBulkIdHandler;\n// Convenience base class for MultiTableBulkIdStrategy implementations.\nClass AbstractMultiTableBulkIdStrategyImpl<TT extends IdTableInfo,​CT extends AbstractMultiTableBulkIdStrategyImpl.PreparationContext>;\n// Convenience base class for MultiTableBulkIdStrategy.UpdateHandler and MultiTableBulkIdStrategy.DeleteHandler implementations through TableBasedUpdateHandlerImpl and TableBasedDeleteHandlerImpl respectively.\nClass AbstractTableBasedBulkIdHandler;\n// \nClass AbstractTableBasedBulkIdHandler.ProcessedWhereClause;\n// \nClass IdTableHelper;\n// \nClass IdTableSupportStandardImpl;\n// \nClass TableBasedDeleteHandlerImpl;\n// \nClass TableBasedUpdateHandlerImpl;\n", "des": "Support for multi-table update and delete statements via id-tables."}
{"index": 3453, "repo": "hibernate-core-5.6.15.Final", "code": "package persistent\n\n// \nClass DeleteHandlerImpl;\n// \nClass Helper;\n// This is a strategy that mimics temporary tables for databases which do not support temporary tables.\nClass PersistentTableBulkIdStrategy;\n// \nClass UpdateHandlerImpl;\n", "des": "Package contains an implementation of MultiTableBulkIdStrategy based on the use of a persistent (ANSI SQL term) table to hold id values."}
{"index": 3454, "repo": "hibernate-core-5.6.15.Final", "code": "package enhanced\n\n// Contract for providing callback access to a DatabaseStructure, typically from the Optimizer.\nInterface AccessCallback;\n// Encapsulates definition of the underlying data structure backing a sequence-style generator.\nInterface DatabaseStructure;\n// Marker interface for optimizer which wishes to know the user-specified initial value.\nInterface InitialValueAwareOptimizer;\n// Performs optimization on an optimizable identifier generator.\nInterface Optimizer;\n// Common support for optimizer implementations.\nClass AbstractOptimizer;\n// Optimizer which applies a 'hilo' algorithm in memory to achieve optimization.\nClass HiLoOptimizer;\n// Slight variation from HiLoOptimizer, maintaining compatibility with the values generated by the legacy Hibernate hilo based generators.\nClass LegacyHiLoAlgorithmOptimizer;\n// An optimizer that performs no optimization.\nClass NoopOptimizer;\n// Factory for Optimizer instances.\nClass OptimizerFactory;\n// Variation of PooledOptimizer which interprets the incoming database value as the lo value, rather than the hi value.\nClass PooledLoOptimizer;\n// Variation of PooledOptimizer which interprets the incoming database value as the lo value, rather than the hi value, as well as using thread local to cache the generation state.\nClass PooledLoThreadLocalOptimizer;\n// Optimizer which uses a pool of values, storing the next low value of the range in the database.\nClass PooledOptimizer;\n// Describes a sequence.\nClass SequenceStructure;\n// Generates identifier values based on a sequence-style database structure.\nClass SequenceStyleGenerator;\n// An enhanced version of table-based id generation.\nClass TableGenerator;\n// Describes a table used to mimic sequence behavior\nClass TableStructure;\n// Enumeration of the standard Hibernate id generation optimizers.\nEnum StandardOptimizerDescriptor;\n", "des": "Enhanced/improved versions of table and sequence based identifier generators targeting portability and unified configuration"}
{"index": 3455, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Represents a JPA event callback (the method).\nInterface Callback;\n// \nInterface CallbackBuilder;\n// \nInterface CallbackBuilder.CallbackRegistrar;\n// \nInterface CallbackDefinition;\n// \nInterface CallbackRegistrar;\n// Registry of Callbacks by entity and type\nInterface CallbackRegistry;\n// Contract for injecting the registry of Callbacks into event listeners.\nInterface CallbackRegistryConsumer;\n// \nEnum CallbackType;\n", "des": "The SPI contracts for supporting JPA lifecycle callbacks."}
{"index": 3456, "repo": "hibernate-core-5.6.15.Final", "code": "package plan\n\n// Base class for LoadPlan-based BatchingEntityLoaderBuilder implementations.\nClass AbstractBatchingEntityLoaderBuilder;\n// A UniqueEntityLoader implementation based on using LoadPlans\nClass AbstractLoadPlanBasedEntityLoader;\n// The base contract for UniqueEntityLoader implementations capable of performing batch-fetch loading of entities using multiple primary key values in the SQL WHERE clause.\nClass BatchingEntityLoader;\n// Batching entity loader using dynamic where-clause\nClass DynamicBatchingEntityLoader;\n// A walking/plan based BatchingEntityLoaderBuilder that builds entity-loader instances capable of dynamically building its batch-fetch SQL based on the actual number of entity ids waiting to be batch fetched.\nClass DynamicBatchingEntityLoaderBuilder;\n// UniqueEntityLoader implementation that is the main functionality for LoadPlan-based Entity loading.\nClass EntityLoader;\n// \nClass EntityLoader.Builder;\n// LoadPlan-based implementation of the legacy batch loading strategy\nClass LegacyBatchingEntityLoaderBuilder;\n// \nClass LegacyBatchingEntityLoaderBuilder.LegacyBatchingEntityLoader;\n// \nClass MultiEntityLoadingSupport;\n// Batching entity loader using padded where-clause\nClass PaddedBatchingEntityLoader;\n// A walking/plan based BatchingEntityLoaderBuilder that builds entity-loader instances building its batch-fetch SQL based on padding - using a set number of parameters, but setting \"unneeded ones\" to null.\nClass PaddedBatchingEntityLoaderBuilder;\n", "des": "Support for entity loaders built on top of the org.hibernate.loader.plan API to apply entity-graphs"}
{"index": 3457, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Describes a collection query space that allows adding joins with other query spaces; used while building a CollectionQuerySpace.\nInterface ExpandingCollectionQuerySpace;\n// Describes a composite query space that allows adding joins with other query spaces; used while building a CompositeQuerySpace.\nInterface ExpandingCompositeQuerySpace;\n// Describes an entity identifier description that allows adding fetches; used while building a EntityIdentifierDescription.\nInterface ExpandingEntityIdentifierDescription;\n// Describes an entity query space that allows adding joins with other query spaces; used while building an EntityQuerySpace.\nInterface ExpandingEntityQuerySpace;\n// Describes the internal contract for things which can contain fetches.\nInterface ExpandingFetchSource;\n// Describes a query space that allows adding joins with other query spaces; used while building a QuerySpace.\nInterface ExpandingQuerySpace;\n// Models a collection of QuerySpace references and exposes the ability to create an ExpandingQuerySpace for \"returns\" and fetches; used when building a load plan.\nInterface ExpandingQuerySpaces;\n// Specialized AssociationVisitationStrategy implementation for building LoadPlan instances.\nInterface LoadPlanBuildingAssociationVisitationStrategy;\n// Provides access to context needed in building a LoadPlan.\nInterface LoadPlanBuildingContext;\n// Prints a LoadPlan graph and its QuerySpaces graph as tree structures.\nClass LoadPlanTreePrinter;\n// A metadata-driven builder of LoadPlans.\nClass MetamodelDrivenLoadPlanBuilder;\n// Prints a QuerySpaces graph as a tree structure.\nClass QuerySpaceTreePrinter;\n// Prints a Return graph as a tree structure.\nClass ReturnGraphTreePrinter;\n// A singleton helper class for printing tree structures using indentation.\nClass TreePrinterHelper;\n", "des": "Defines the SPI for building a metamodel-driven LoadPlan"}
{"index": 3458, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// The context for named parameters.\nInterface NamedParameterContext;\n// Provides values for all options that impact the built query.\nInterface QueryBuildingParameters;\n", "des": "Defines the SPI for obtaining values for options that impact the load query."}
{"index": 3459, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Provides aliases that are used by load queries and ResultSet processors.\nInterface AliasResolutionContext;\n// \nInterface CollectionReferenceAliases;\n// Aggregates the alias/suffix information in relation to an EntityReference todo : add a contract (interface) that can be shared by entity and collection alias info objects as lhs/rhs of a join ?\nInterface EntityReferenceAliases;\n// \nInterface LoadQueryDetails;\n// \nInterface LockModeResolver;\n", "des": "Defines the SPI for the load query generated for the LoadPlan and the ResultSet processor."}
{"index": 3460, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Models the requested fetching of an \"any\" attribute.\nInterface AnyAttributeFetch;\n// Models a Fetch that is specifically for an attribute.\nInterface AttributeFetch;\n// Represents the circular side of a bi-directional entity association.\nInterface BidirectionalEntityReference;\n// Models the requested fetching of a persistent collection attribute.\nInterface CollectionAttributeFetch;\n// A collection element which is a FetchSource.\nInterface CollectionFetchableElement;\n// A collection index which is a FetchSource.\nInterface CollectionFetchableIndex;\n// Models a QuerySpace for a persistent collection.\nInterface CollectionQuerySpace;\n// Represents a reference to a persistent collection either as a Return or as a CollectionAttributeFetch.\nInterface CollectionReference;\n// Models the a persistent collection as root Return.\nInterface CollectionReturn;\n// Models the requested fetching of a composite attribute.\nInterface CompositeAttributeFetch;\n// Models the requested fetching of a composition (component/embeddable), which may or may not be an attribute.\nInterface CompositeFetch;\n// Models a QuerySpace for a composition (component/embeddable).\nInterface CompositeQuerySpace;\n// Models the requested fetching of an entity attribute.\nInterface EntityFetch;\n// Descriptor for the identifier of an entity as a FetchSource (which allows for key-many-to-one handling).\nInterface EntityIdentifierDescription;\n// Models a QuerySpace specific to an entity (EntityPersister).\nInterface EntityQuerySpace;\n// Represents a reference to an entity either as a return, fetch, or collection element or index.\nInterface EntityReference;\n// Models the an entity as root Return.\nInterface EntityReturn;\n// Contract for associations that are being fetched.\nInterface Fetch;\n// Contract for a FetchSource (aka, the thing that owns the fetched attribute).\nInterface FetchSource;\n// Represents a join in the QuerySpace-sense.\nInterface Join;\n// Specialization of a Join that is defined by the metadata.\nInterface JoinDefinedByMetadata;\n// Describes a plan for performing a load of results.\nInterface LoadPlan;\n// Defines a persister reference (either entity or collection) or a composite reference.\nInterface QuerySpace;\n// Models a collection of QuerySpace references and exposes the ability to find a QuerySpace by its UID\nInterface QuerySpaces;\n", "des": "Defines the SPI for the building blocks that make up a LoadPlan."}
{"index": 3461, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// The contract for getting value for a persistent property from its container/owner\nInterface Getter;\n// Describes access to a particular persistent property in terms of getting and setting values.\nInterface PropertyAccess;\n// Describes a strategy for persistent property access (field, JavaBean-style property, etc).\nInterface PropertyAccessStrategy;\n// Contract for resolving the PropertyAccessStrategy to use.\nInterface PropertyAccessStrategyResolver;\n// The contract for setting a persistent property value into its container/owner\nInterface Setter;\n// \nClass EnhancedGetterMethodImpl;\n// A specialized Setter implementation for handling setting values into a bytecode-enhanced Class.\nClass EnhancedSetterImpl;\n// Field-based implementation of Getter\nClass GetterFieldImpl;\n// \nClass GetterMethodImpl;\n// Field-based implementation of Setter\nClass SetterFieldImpl;\n// \nClass SetterMethodImpl;\n// Describes the built-in externally-nameable PropertyAccessStrategy implementations.\nEnum BuiltInPropertyAccessStrategies;\n// Indicates a problem while building a PropertyAccess\nClass PropertyAccessBuildingException;\n// Indicates a problem reading or writing value from/to a persistent property.\nClass PropertyAccessException;\n// \nClass PropertyAccessSerializationException;\n", "des": "Defines strategies for accessing the persistent properties of an entity or composite."}
{"index": 3462, "repo": "hibernate-core-5.6.15.Final", "code": "package transaction\n\n// Extended SPI contracts for the resource-level transaction capabilities of Hibernate.\npackage transaction.spi\n// Wraps an exception thrown from a \"local synchronization\" (one registered in the SynchronizationRegistry).\nClass LocalSynchronizationException;\n// Indicates an attempt to register a null synchronization.\nClass NullSynchronizationException;\n// Indicates a call to TransactionCoordinator.explicitJoin() that requires an active transaction where there currently is none.\nClass TransactionRequiredForJoinException;\n", "des": "Defines the resource-level transaction capabilities of Hibernate, which revolves around the TransactionCoordinator contract."}
{"index": 3463, "repo": "hibernate-core-5.6.15.Final", "code": "package spi\n\n// Provides access to a Connection that is isolated from any \"current transaction\" with the designed purpose of performing DDL commands\nInterface DdlTransactionIsolator;\n// Manages a registry of (local) JTA Synchronization instances\nInterface SynchronizationRegistry;\n// SPI contract for SynchronizationRegistry implementors.\nInterface SynchronizationRegistryImplementor;\n// Models the coordination of all transaction related flows.\nInterface TransactionCoordinator;\n// Provides the means for \"local transactions\" (as transaction drivers) to control the underlying \"physical transaction\" currently associated with the TransactionCoordinator.\nInterface TransactionCoordinator.TransactionDriver;\n// Builder for TransactionCoordinator instances\nInterface TransactionCoordinatorBuilder;\n// Access to options to are specific to each TransactionCoordinator instance\nInterface TransactionCoordinatorBuilder.Options;\n// Models an owner of a TransactionCoordinator.\nInterface TransactionCoordinatorOwner;\n// Enumeration of statuses in which a transaction facade (Transaction) might be.\nEnum TransactionStatus;\n", "des": "Extended SPI contracts for the resource-level transaction capabilities of Hibernate."}
{"index": 3464, "repo": "hibernate-core-5.6.15.Final", "code": "package converter\n\n// The standard approach for defining a MutabilityPlan for converted (AttributeConverter) values is to always assume that they are immutable to make sure that dirty checking, deep copying and second-level caching all work properly no matter what.\nClass AttributeConverterMutabilityPlanImpl<T>;\n// Adapter for incorporating JPA AttributeConverter handling into the SqlTypeDescriptor contract.\nClass AttributeConverterSqlTypeDescriptorAdapter;\n// Adapts the Hibernate Type contract to incorporate JPA AttributeConverter calls.\nClass AttributeConverterTypeAdapter<T>;\n", "des": "Support for handling JPA AttributeConverter instances as part of the Hibernate Type system."}
{"index": 3465, "repo": "hibernate-core-5.6.15.Final", "code": "package sql\n\n// Descriptor for the SQL/JDBC side of a value mapping.\nInterface SqlTypeDescriptor;\n// Convenience base implementation of ValueBinder\nClass BasicBinder<J>;\n// Convenience base implementation of ValueExtractor\nClass BasicExtractor<J>;\n// Descriptor for BIGINT handling.\nClass BigIntTypeDescriptor;\n// Descriptor for BINARY handling.\nClass BinaryTypeDescriptor;\n// Descriptor for BIT handling.\nClass BitTypeDescriptor;\n// Descriptor for BLOB handling.\nClass BlobTypeDescriptor;\n// Descriptor for BOOLEAN handling.\nClass BooleanTypeDescriptor;\n// Descriptor for CHAR handling.\nClass CharTypeDescriptor;\n// Descriptor for CLOB handling.\nClass ClobTypeDescriptor;\n// Descriptor for DATE handling.\nClass DateTypeDescriptor;\n// Descriptor for DECIMAL handling.\nClass DecimalTypeDescriptor;\n// Descriptor for DOUBLE handling.\nClass DoubleTypeDescriptor;\n// Descriptor for FLOAT handling.\nClass FloatTypeDescriptor;\n// Descriptor for INTEGER handling.\nClass IntegerTypeDescriptor;\n// Information pertaining to JDBC type families.\nClass JdbcTypeFamilyInformation;\n// Maintains the JDBC recommended mappings for JDBC type-code to/from Java Class as defined in _Appendix B : Data Type Conversion Tables_ of the _JDBC 4.0 Specification_ Eventually, the plan is to have Dialect and DatabaseMetaData.getTypeInfo() contribute this information.\nClass JdbcTypeJavaClassMappings;\n// \nClass LobTypeMappings;\n// Descriptor for LONGNVARCHAR handling.\nClass LongNVarcharTypeDescriptor;\n// Descriptor for LONGVARBINARY handling.\nClass LongVarbinaryTypeDescriptor;\n// Descriptor for LONGVARCHAR handling.\nClass LongVarcharTypeDescriptor;\n// Manages a mapping between nationalized and non-nationalized variants of JDBC types.\nClass NationalizedTypeMappings;\n// Descriptor for NCHAR handling.\nClass NCharTypeDescriptor;\n// Descriptor for NCLOB handling.\nClass NClobTypeDescriptor;\n// Descriptor for NUMERIC handling.\nClass NumericTypeDescriptor;\n// Descriptor for NVARCHAR handling.\nClass NVarcharTypeDescriptor;\n// Descriptor for REAL handling.\nClass RealTypeDescriptor;\n// Descriptor for SMALLINT handling.\nClass SmallIntTypeDescriptor;\n// \nClass SqlTypeDescriptorRegistry;\n", "des": "Defines handling of the standard JDBC-defined types."}
{"index": 3466, "repo": "poi-ooxml-5.2.3", "code": "package binary\n\n// You need to implement this to handle the results of the sheet parsing.\nInterface XSSFBSheetHandler.SheetContentsHandler;\n// \nClass XSSFBCommentsTable;\n// \nClass XSSFBHyperlinksTable;\n// Experimental parser for Microsoft's ooxml xlsb format.\nClass XSSFBParser;\n// Need to have this mirror class of XSSFRelation because of conflicts with regular ooxml relations.\nClass XSSFBRelation;\n// \nClass XSSFBSharedStringsTable;\n// \nClass XSSFBSheetHandler;\n// This is a very thin shim to gather number formats from styles.bin files.\nClass XSSFBStylesTable;\n// \nClass XSSFBUtils;\n// This is a read only record that maintains information about a hyperlink.\nClass XSSFHyperlinkRecord;\n// \nEnum XSSFBRecordType;\n// Parse exception while reading an xssfb.\nClass XSSFBParseException;\n", "des": "The org.apache.poi.xssf.binary package includes necessary underlying components for streaming/read-only processing of xlsb files."}
{"index": 3467, "repo": "tomcat-jspapi-10.1", "code": "package jsp\n\n// Classes and interfaces for the JSP 2.0 Expression Language API.\npackage jsp.el\n// Classes and interfaces for the definition of JavaServer Pages Tag Libraries.\npackage jsp.tagext\n// The HttpJspPage interface describes the interaction that a JSP Page Implementation Class must satisfy when using the HTTP protocol.\nInterface HttpJspPage;\n// Stores application-scoped information for the JSP container.\nInterface JspApplicationContext;\n// The JspPage interface describes the generic interaction that a JSP Page Implementation class must satisfy; pages that use the HTTP protocol are described by the HttpJspPage interface.\nInterface JspPage;\n// Contains information about an error, for error pages.\nClass ErrorData;\n// JspContext serves as the base class for the PageContext class and abstracts all information that is not specific to servlets.\nClass JspContext;\n// The JspEngineInfo is an abstract class that provides information on the current JSP engine.\nClass JspEngineInfo;\n// The JspFactory is an abstract class that defines a number of factory methods available to a JSP page at runtime for the purposes of creating instances of various interfaces and classes used to support the JSP implementation.\nClass JspFactory;\n// The actions and template data in a JSP page is written using the JspWriter object that is referenced by the implicit variable out which is initialized automatically using methods in the PageContext object.\nClass JspWriter;\n// PageContext extends JspContext to provide useful context information for when JSP technology is used in a Servlet environment.\nClass PageContext;\n// A generic exception known to the JSP engine; uncaught JspExceptions will result in an invocation of the errorpage machinery.\nClass JspException;\n// Exception to be used by a Tag Handler to indicate some unrecoverable error.\nClass JspTagException;\n// Exception to indicate the calling page must cease evaluation.\nClass SkipPageException;\n", "des": "Classes and interfaces for the Core JSP 2.0 API."}
{"index": 3468, "repo": "tomcat-jspapi-10.1", "code": "package el\n\n// \nInterface FunctionMapper;\n// \nInterface VariableResolver;\n// \nClass Expression;\n// \nClass ExpressionEvaluator;\n// Provides resolution in EL for the implicit variables of a JSP page.\nClass ImplicitObjectELResolver;\n// Providers resolution of imports and static imports in the Jakarta Server Pages ELResolver chain.\nClass ImportELResolver;\n// The final resolver of the Jakarta Server Pages ELResolver chain.\nClass NotFoundELResolver;\n// An ELResolver for working with JSP scoped attributes which may have page, request, session or application scope.\nClass ScopedAttributeELResolver;\n// \nClass ELException;\n// \nClass ELParseException;\n", "des": "Classes and interfaces for the JSP 2.0 Expression Language API."}
{"index": 3469, "repo": "tomcat-jspapi-10.1", "code": "package tagext\n\n// The BodyTag interface extends IterationTag by defining additional methods that let a tag handler manipulate the content of evaluating its body.\nInterface BodyTag;\n// For a tag to declare that it accepts dynamic attributes, it must implement this interface.\nInterface DynamicAttributes;\n// The IterationTag interface extends Tag by defining one additional method that controls the reevaluation of its body.\nInterface IterationTag;\n// Interface that allows tag handlers to be provided with a unique (within the scope of the web application) ID.\nInterface JspIdConsumer;\n// Serves as a base class for Tag and SimpleTag.\nInterface JspTag;\n// Interface for defining Simple Tag Handlers.\nInterface SimpleTag;\n// The interface of a classic tag handler that does not want to manipulate its body.\nInterface Tag;\n// The auxiliary interface of a Tag, IterationTag or BodyTag tag handler that wants additional hooks for managing resources.\nInterface TryCatchFinally;\n// An encapsulation of the evaluation of the body of an action so it is available to a tag handler.\nClass BodyContent;\n// A base class for defining tag handlers implementing BodyTag.\nClass BodyTagSupport;\n// Information for a function in a Tag Library.\nClass FunctionInfo;\n// Encapsulates a portion of JSP code in an object that can be invoked as many times as needed.\nClass JspFragment;\n// Translation-time information on a JSP page.\nClass PageData;\n// A base class for defining tag handlers implementing SimpleTag.\nClass SimpleTagSupport;\n// Wraps any SimpleTag and exposes it using a Tag interface.\nClass TagAdapter;\n// Information on the attributes of a Tag, available at translation time.\nClass TagAttributeInfo;\n// The (translation-time only) attribute/value information for a tag instance.\nClass TagData;\n// Optional class provided by the tag library author to describe additional translation-time information not described in the TLD.\nClass TagExtraInfo;\n// Tag information for a tag file in a Tag Library; This class is instantiated from the Tag Library Descriptor file (TLD) and is available only at translation time.\nClass TagFileInfo;\n// Tag information for a tag in a Tag Library; This class is instantiated from the Tag Library Descriptor file (TLD) and is available only at translation time.\nClass TagInfo;\n", "des": "Classes and interfaces for the definition of JavaServer Pages Tag Libraries."}
{"index": 3470, "repo": "hilt-android-2.47", "code": "package android\n\n// This package contains Hilt's built-in Components for Android.\npackage android.components\n// Runtime flags to control Hilt behavior for rollout of changes.\npackage android.flags\n// This package contains Hilt APIs for Android applications.\npackage android.lifecycle\n// This package contains Android APIs to help migrating a codebase to Hilt.\npackage android.migration\n// This package contains Hilt's built-in Android Qualifier annotations.\npackage android.qualifiers\n// This package contains Hilt's built-in Android Scope annotations.\npackage android.scopes\n// A ActivityRetainedLifecycle class is associated with the lifecycle of the ActivityRetainedComponent.\nInterface ActivityRetainedLifecycle;\n// Listener for receiving a callback for when the ActivityRetainedComponent will no longer be used and destroyed.\nInterface ActivityRetainedLifecycle.OnClearedListener;\n// A class for registering listeners on the ViewModel lifecycle.\nInterface ViewModelLifecycle;\n// Static utility methods for accessing entry points annotated with EarlyEntryPoint.\nClass EarlyEntryPoints;\n// Marks an Android component class to be setup for injection with the standard Hilt Dagger Android components.\nAnnotation Type AndroidEntryPoint;\n// An escape hatch for when a Hilt entry point usage needs to be called before the singleton component is available in a Hilt test.\nAnnotation Type EarlyEntryPoint;\n// Annotation for marking the Application class where the Dagger components should be generated.\nAnnotation Type HiltAndroidApp;\n// Makes a View annotated with AndroidEntryPoint have access to fragment bindings.\nAnnotation Type WithFragmentBindings;\n", "des": "This package contains Hilt APIs for Android applications."}
{"index": 3471, "repo": "hilt-android-2.47", "code": "package components\n\n// A Hilt component that has the lifetime of the activity.\nInterface ActivityComponent;\n// A Hilt component that has the lifetime of a configuration surviving activity.\nInterface ActivityRetainedComponent;\n// A Hilt component that has the lifetime of the fragment.\nInterface FragmentComponent;\n// A Hilt component that has the lifetime of the service.\nInterface ServiceComponent;\n// A Hilt component that has the lifetime of the view.\nInterface ViewComponent;\n// A Hilt component that has the lifetime of a single ViewModel.\nInterface ViewModelComponent;\n// A Hilt component that has the lifetime of the view.\nInterface ViewWithFragmentComponent;\n", "des": "This package contains Hilt's built-in Components for Android."}
{"index": 3472, "repo": "hilt-android-2.47", "code": "package flags\n\n// Entry point for getting the flag.\nInterface FragmentGetContextFix.FragmentGetContextFixEntryPoint;\n// Runtime flag for the Fragment.getContext() fix.\nClass FragmentGetContextFix;\n// Qualifier annotation to bind disable the Fragment.getContext() fix at runtime.\nAnnotation Type FragmentGetContextFix.DisableFragmentGetContextFix;\n", "des": "Runtime flags to control Hilt behavior for rollout of changes."}
{"index": 3473, "repo": "hilt-android-2.47", "code": "package lifecycle\n\n// A class for registered listeners on a retained lifecycle (generally backed up by a ViewModel).\nInterface RetainedLifecycle;\n// Listener for when the retained lifecycle is cleared.\nInterface RetainedLifecycle.OnClearedListener;\n// Identifies a ViewModel for construction injection.\nAnnotation Type HiltViewModel;\n", "des": "This package contains Hilt APIs for Android applications."}
{"index": 3474, "repo": "hilt-android-2.47", "code": "package migration\n\n// Utility methods for injecting the application when using CustomInject.\nClass CustomInjection;\n// Utility methods for validating if an AndroidEntryPoint-annotated class that is also annotated with OptionalInject was injected by Hilt.\nClass OptionalInjectCheck;\n// When used on a HiltAndroidApp-annotated application, this causes the application to no longer inject itself in onCreate and instead allows it to be injected at some other time.\nAnnotation Type CustomInject;\n// When placed on an AndroidEntryPoint-annotated activity / fragment / view / etc, allows injection to occur optionally based on whether or not the application is using Hilt.\nAnnotation Type OptionalInject;\n", "des": "This package contains Android APIs to help migrating a codebase to Hilt."}
{"index": 3475, "repo": "hilt-android-2.47", "code": "package qualifiers\n\n// Annotation for a Context that corresponds to the activity.\nAnnotation Type ActivityContext;\n// Annotation for an Application Context dependency.\nAnnotation Type ApplicationContext;\n", "des": "This package contains Hilt's built-in Android Qualifier annotations."}
{"index": 3476, "repo": "hilt-android-2.47", "code": "package scopes\n\n// Scope annotation for bindings that should exist for the life of an activity, surviving configuration.\nAnnotation Type ActivityRetainedScoped;\n// Scope annotation for bindings that should exist for the life of an activity.\nAnnotation Type ActivityScoped;\n// Scope annotation for bindings that should exist for the life of a fragment.\nAnnotation Type FragmentScoped;\n// Scope annotation for bindings that should exist for the life of a service.\nAnnotation Type ServiceScoped;\n// Scope annotation for bindings that should exist for the life of a a single ViewModel.\nAnnotation Type ViewModelScoped;\n// Scope annotation for bindings that should exist for the life of a View.\nAnnotation Type ViewScoped;\n", "des": "This package contains Hilt's built-in Android Scope annotations."}
{"index": 3477, "repo": "dagger-producers-2.47", "code": "package producers\n\n// This package provides hooks for monitoring producers.\npackage producers.monitoring\n// An interface that represents the production of a type T.\nInterface Producer<T>;\n// An interface that represents the result of a production of type T, or an exception that was thrown during that production.\nClass Produced<T>;\n// Utility methods to create Producers.\nClass Producers;\n// Enumeration of the options for what happens to a parent component when one of its child components is cancelled.\nEnum CancellationPolicy.Propagation;\n// Annotates a production component or subcomponent to specify its policy when a child component is cancelled.\nAnnotation Type CancellationPolicy;\n// Annotates a class that contributes Produces bindings to the production component.\nAnnotation Type ProducerModule;\n// Annotates methods of a producer module to create a production binding.\nAnnotation Type Produces;\n// Qualifies a type that will be provided to the framework for use internally.\nAnnotation Type Production;\n// Annotates an interface or abstract class for which a fully-formed, dependency-injected implementation is to be generated from a set of modules.\nAnnotation Type ProductionComponent;\n// A builder for a production component.\nAnnotation Type ProductionComponent.Builder;\n// A factory for a production component.\nAnnotation Type ProductionComponent.Factory;\n// A scope annotation for provision bindings that are tied to the lifetime of a ProductionComponent or ProductionSubcomponent.\nAnnotation Type ProductionScope;\n// A subcomponent that inherits the bindings from a parent Component, Subcomponent, ProductionComponent, or ProductionSubcomponent.\nAnnotation Type ProductionSubcomponent;\n// A builder for a production subcomponent.\nAnnotation Type ProductionSubcomponent.Builder;\n// A factory for a production subcomponent.\nAnnotation Type ProductionSubcomponent.Factory;\n", "des": "This package contains the public API for Dagger 2's producer functionality."}
{"index": 3478, "repo": "dagger-producers-2.47", "code": "package monitoring\n\n// A hook for recording timing of the execution of production components.\nInterface ProductionComponentTimingRecorder;\n// \nInterface ProductionComponentTimingRecorder.Factory;\n// A hook for monitoring the execution of individual producer methods.\nClass ProducerMonitor;\n// A hook for recording the timing of the execution of individual producer methods.\nClass ProducerTimingRecorder;\n// A token that represents an individual producer method.\nClass ProducerToken;\n// A hook for monitoring execution of production components.\nClass ProductionComponentMonitor;\n// \nClass ProductionComponentMonitor.Factory;\n// A monitor that measures the timing of the execution of a production component, and logs those timings with the given recorder.\nClass TimingProductionComponentMonitor;\n// \nClass TimingProductionComponentMonitor.Factory;\n// Utility methods relating to timing.\nClass TimingRecorders;\n", "des": "This package provides hooks for monitoring producers."}
{"index": 3479, "repo": "opennlp-uima-2.2.0", "code": "package chunker\n\n// \nInterface ChunkerModelResource;\n// OpenNLP Chunker annotator.\nClass Chunker;\n// \nClass ChunkerModelResourceImpl;\n", "des": "Package related to finding non-recursive syntactic annotation such as noun phrase chunks."}
{"index": 3480, "repo": "opennlp-uima-2.2.0", "code": "package namefind\n\n// \nInterface TokenNameFinderModelResource;\n// \nClass DictionaryNameFinder;\n// OpenNLP Name annotator.\nClass NameFinder;\n// \nClass TokenNameFinderModelResourceImpl;\n", "des": "Package related to finding proper names and numeric amounts."}
{"index": 3481, "repo": "opennlp-uima-2.2.0", "code": "package postag\n\n// \nInterface POSModelResource;\n// \nClass POSModelResourceImpl;\n// OpenNLP Part Of Speech annotator.\nClass POSTagger;\n", "des": "Package related to part-of-speech tagging."}
{"index": 3482, "repo": "opennlp-uima-2.2.0", "code": "package sentdetect\n\n// \nInterface SentenceModelResource;\n// \nClass AbstractSentenceDetector;\n// OpenNLP Sentence annotator.\nClass SentenceDetector;\n// \nClass SentenceModelResourceImpl;\n", "des": "Package related to identifying sentence boundaries."}
{"index": 3483, "repo": "opennlp-uima-2.2.0", "code": "package tokenize\n\n// A TokenizerModel which can be shared between AnalysisEngines and loaded via the UIMA resource model.\nInterface TokenizerModelResource;\n// \nClass AbstractTokenizer;\n// OpenNLP Simple Tokenizer annotator.\nClass SimpleTokenizer;\n// OpenNLP Tokenizer annotator.\nClass Tokenizer;\n// \nClass TokenizerModelResourceImpl;\n// OpenNLP Whitespace Tokenizer annotator.\nClass WhitespaceTokenizer;\n", "des": "Package related to finding tokens or word segments."}
{"index": 3484, "repo": "poi-5.2.3", "code": "package ddf\n\n// The escher record factory interface allows for the creation of escher records from a pointer into a data array.\nInterface EscherRecordFactory;\n// Interface for listening to escher serialization events.\nInterface EscherSerializationListener;\n// Common abstract class for EscherOptRecord and EscherTertiaryOptRecord\nClass AbstractEscherOptRecord;\n// Generates escher records when provided the byte array containing those records.\nClass DefaultEscherRecordFactory;\n// Escher array properties are the most weird construction ever invented with all sorts of special cases.\nClass EscherArrayProperty;\n// \nClass EscherBitmapBlip;\n// \nClass EscherBlipRecord;\n// Represents a boolean property.\nClass EscherBoolProperty;\n// The BSE record is related closely to the EscherBlipRecord and stores extra information about the blip.\nClass EscherBSERecord;\n// The escher child anchor record is used to specify the position of a shape under an existing group.\nClass EscherChildAnchorRecord;\n// The escher client anchor specifies which rows and cells the shape is bound to as well as the offsets within those cells.\nClass EscherClientAnchorRecord;\n// The EscherClientDataRecord is used to store client specific data about the position of a shape within a container.\nClass EscherClientDataRecord;\n// An OfficeArtCOLORREF structure entry which also handles color extension opid data\nClass EscherColorRef;\n// A complex property differs from a simple property in that the data can not fit inside a 32 bit integer.\nClass EscherComplexProperty;\n// Escher container records store other escher records as children.\nClass EscherContainerRecord;\n// This record defines the drawing groups used for a particular sheet.\nClass EscherDggRecord;\n// \nClass EscherDggRecord.FileIdCluster;\n// This record simply holds the number of shapes in the drawing group and the last shape id used for this drawing group.\nClass EscherDgRecord;\n// Used to dump the contents of escher records to a PrintStream.\nClass EscherDump;\n// \nClass EscherMetafileBlip;\n// The opt record is used to store property values for a shape.\nClass EscherOptRecord;\n", "des": "This package contains classes for decoding the Microsoft Office Drawing format otherwise known as escher henceforth known in POI as the Dreadful Drawing Format."}
{"index": 3485, "repo": "poi-5.2.3", "code": "package hpsf\n\n// Specific support for DocumentSummaryInformation, SummaryInformation types.\npackage hpsf.wellknown\n// \nClass Array;\n// \nClass Blob;\n// Represents a class ID (16 bytes).\nClass ClassID;\n// \nClass ClipboardData;\n// \nClass CodePageString;\n// \nClass Currency;\n// Maintains the instances of CustomProperty that belong to a DocumentSummaryInformation.\nClass CustomProperties;\n// This class represents custom properties in the document summary information stream.\nClass CustomProperty;\n// \nClass Date;\n// \nClass Decimal;\n// Convenience class representing a DocumentSummary Information stream in a Microsoft Office document.\nClass DocumentSummaryInformation;\n// The Windows FILETIME structure holds a date and time associated with a file.\nClass Filetime;\n// \nClass GUID;\n// A version of POIDocument which allows access to the HPSF Properties, but no other document contents.\nClass HPSFPropertiesOnlyDocument;\n// \nClass IndirectPropertyName;\n// A property in a Section of a PropertySet.\nClass Property;\n// Represents a property set in the Horrible Property Set Format (HPSF).\nClass PropertySet;\n// Factory class to create instances of SummaryInformation, DocumentSummaryInformation and PropertySet.\nClass PropertySetFactory;\n// Represents a section in a PropertySet.\nClass Section;\n// Convenience class representing a Summary Information stream in a Microsoft Office document.\nClass SummaryInformation;\n// Class to manipulate data in the Clipboard Variant (VT_CF) format.\nClass Thumbnail;\n// \nClass TypedPropertyValue;\n// \nClass UnicodeString;\n// The Variant types as defined by Microsoft's COM.\nClass Variant;\n// \nClass VariantBool;\n// Supports reading and writing of variant data.\nClass VariantSupport;\n// Holder for vector-type properties\nClass Vector;\n// \nClass VersionedStream;\n// \nEnum ClassIDPredefined;\n// This exception is the superclass of all other checked exceptions thrown in this package.\nClass HPSFException;\n// This exception is the superclass of all other unchecked exceptions thrown in this package.\nClass HPSFRuntimeException;\n", "des": "Processes streams in the Horrible Property Set Format (HPSF) in POI filesystems."}
{"index": 3486, "repo": "poi-5.2.3", "code": "package wellknown\n\n// This is a dictionary which maps property ID values to property ID strings.\nClass PropertyIDMap;\n", "des": "Specific support for DocumentSummaryInformation, SummaryInformation types."}
{"index": 3487, "repo": "poi-5.2.3", "code": "package hssf\n\n// HSSF eventmodel Package provides an event-based API for reading HSSF files.\npackage hssf.eventusermodel\n// Provides low level API structures for reading, writing, modifying XLS files.\npackage hssf.model\n// Record package contains class representations for XLS binary strutures.\npackage hssf.record\n// The usermodel package maps HSSF low level structures to familiar workbook/sheet model\npackage hssf.usermodel\n// The util package contains tools needed for writing HSSF files that are not necesarily \"real\" HSSF concepts.\npackage hssf.util\n// \nClass OldExcelFormatException;\n", "des": "Horrible SpreadSheet Format API's for reading/writting Excel files using pure Java."}
{"index": 3488, "repo": "poi-5.2.3", "code": "package eventusermodel\n\n// Interface for use with the HSSFRequest and HSSFEventFactory.\nInterface HSSFListener;\n// Abstract class for use with the HSSFRequest and HSSFEventFactory, which allows for the halting of processing.\nClass AbortableHSSFListener;\n// When working with the EventUserModel, if you want to process formulas, you need an instance of InternalWorkbook to pass to a HSSFWorkbook, to finally give to HSSFFormulaParser, and this will build you stub ones.\nClass EventWorkbookBuilder;\n// A wrapping HSSFListener which will collect BoundSheetRecords and ExternSheetRecords as they go past, so you can create a Stub InternalWorkbook from them once required.\nClass EventWorkbookBuilder.SheetRecordCollectingListener;\n// A proxy HSSFListener that keeps track of the document formatting records, and provides an easy way to look up the format strings used by cells from their ids.\nClass FormatTrackingHSSFListener;\n// Low level event based HSSF reader.\nClass HSSFEventFactory;\n// An HSSFRequest object should be constructed registering an instance or multiple instances of HSSFListener with each Record.sid you wish to listen for.\nClass HSSFRequest;\n// A HSSFListener which tracks rows and columns, and will trigger your HSSFListener for all rows and cells, even the ones that aren't actually stored in the file.\nClass MissingRecordAwareHSSFListener;\n// This exception is provided as a way for API users to throw exceptions from their event handling code.\nClass HSSFUserException;\n", "des": "HSSF eventmodel Package provides an event-based API for reading HSSF files."}
{"index": 3489, "repo": "poi-5.2.3", "code": "package model\n\n// \nClass ConvertAnchor;\n// Provides utilities to manage drawing groups.\nClass DrawingManager2;\n// HSSF wrapper for the FormulaParser and FormulaRenderer\nClass HSSFFormulaParser;\n// Low level model implementation of a Sheet (one workbook contains many sheets) This file contains the low level binary records starting at the sheets BOF and ending with the sheets EOF.\nClass InternalSheet;\n// Low level model implementation of a Workbook.\nClass InternalWorkbook;\n// Simplifies iteration over a sequence of Record objects.\nClass RecordStream;\n// Segregates the 'Row Blocks' section of a single sheet into plain row/cell records and shared formula records.\nClass RowBlocksReader;\n// \nClass WorkbookRecordList;\n// \nClass InternalSheet.UnsupportedBOFType;\n", "des": "Provides low level API structures for reading, writing, modifying XLS files."}
{"index": 3490, "repo": "poi-5.2.3", "code": "package record\n\n// The record aggregates are not real \"records\" but collections of records that act as a single record.\npackage record.aggregates\n// \nInterface BiffHeaderInput;\n// The cell value record interface is implemented by all classes of type Record that contain cell values.\nInterface CellValueRecordInterface;\n// \nInterface CFRuleBase.ComparisonOperator;\n// \nInterface HSSFRecordTypes.RecordConstructor<T extends Record>;\n// The margin interface is a parent used to define left, right, top and bottom margins.\nInterface Margin;\n// \nInterface SubRecord.SubRecordTypes.RecordConstructor<T extends SubRecord>;\n// The escher container record is used to hold escher records.\nClass AbstractEscherHolderRecord;\n// ARRAY (0x0221)\nClass ArrayRecord;\n// The AutoFilterInfo record specifies the number of columns that have AutoFilter enabled and indicates the beginning of the collection of AutoFilter records.\nClass AutoFilterInfoRecord;\n// Boolean specifying whether the GUI should store a backup of the file.\nClass BackupRecord;\n// Represents a column in a row with no value but with styling.\nClass BlankRecord;\n// Somewhat of a misnomer, its used for the beginning of a set of records that have a particular purpose or subject.\nClass BOFRecord;\n// Contains a flag specifying whether the Gui should save externally linked values from other workbooks.\nClass BookBoolRecord;\n// Creates new BoolErrRecord.\nClass BoolErrRecord;\n// Record for the bottom margin.\nClass BottomMarginRecord;\n// Defines a sheet within a workbook.\nClass BoundSheetRecord;\n// Specifies the maximum times the gui should perform a formula recalculation.\nClass CalcCountRecord;\n// Tells the gui whether to calculate formulas automatically, manually or automatically except for tables.\nClass CalcModeRecord;\n// Base class for all cell value records (implementors of CellValueRecordInterface).\nClass CellRecord;\n// Conditional Formatting Header v12 record CFHEADER12 (0x0879), for conditional formattings introduced in Excel 2007 and newer.\nClass CFHeader12Record;\n// Parent of Conditional Formatting Header records, CFHeaderRecord and CFHeader12Record.\nClass CFHeaderBase;\n", "des": "Record package contains class representations for XLS binary strutures."}
{"index": 3491, "repo": "poi-5.2.3", "code": "package aggregates\n\n// \nInterface RecordAggregate.RecordVisitor;\n// CFRecordsAggregate - aggregates Conditional Formatting records CFHeaderRecord and number of up CFRuleRecord records together to simplify access to them.\nClass CFRecordsAggregate;\n// Manages the all the records associated with a chart sub-stream.\nClass ChartSubstreamRecordAggregate;\n// \nClass ColumnInfoRecordsAggregate;\n// Holds all the conditional formatting for a workbook sheet.\nClass ConditionalFormattingTable;\n// Manages the all the records associated with a 'Custom View Settings' sub-stream.\nClass CustomViewSettingsRecordAggregate;\n// Manages the DVALRecord and DVRecords for a single sheet\nClass DataValidityTable;\n// The formula record aggregate is used to join together the formula record and it's (optional) string record and (optional) Shared Formula Record (template reads, excel optimization).\nClass FormulaRecordAggregate;\n// \nClass MergedCellsTable;\n// Groups the page settings records for a worksheet.\nClass PageSettingsBlock;\n// RecordAggregates are groups of of BIFF Records that are typically stored together and/or updated together.\nClass RecordAggregate;\n// A wrapper for RecordAggregate.RecordVisitor which accumulates the sizes of all records visited.\nClass RecordAggregate.PositionTrackingVisitor;\n// \nClass RowRecordsAggregate;\n// Manages various auxiliary records while constructing a RowRecordsAggregate: SharedFormulaRecords ArrayRecords TableRecords\nClass SharedValueManager;\n// Aggregate value records together.\nClass ValueRecordsAggregate;\n// Groups the sheet protection records for a worksheet.\nClass WorksheetProtectionBlock;\n", "des": "The record aggregates are not real \"records\" but collections of records that act as a single record."}
{"index": 3492, "repo": "poi-5.2.3", "code": "package usermodel\n\n// An interface that indicates whether a class can contain children.\nInterface HSSFShapeContainer;\n// \nInterface HSSFShapeTypes;\n// Data Validation Constraint\nClass DVConstraint;\n// Translates Graphics calls into escher calls.\nClass EscherGraphics;\n// Translates Graphics2d calls into escher calls.\nClass EscherGraphics2d;\n// Stores width and height details about a font.\nClass FontDetails;\n// Common class for HSSFHeader and HSSFFooter.\nClass HeaderFooter;\n// An anchor is what specifics the position of a shape within a client object or within another containing shape.\nClass HSSFAnchor;\n// Represents autofiltering for the specified worksheet.\nClass HSSFAutoFilter;\n// High level representation for Border Formatting component of Conditional Formatting settings\nClass HSSFBorderFormatting;\n// High level representation of a cell in a row of a spreadsheet.\nClass HSSFCell;\n// High level representation of the style of a cell in a sheet of a workbook.\nClass HSSFCellStyle;\n// Has methods for construction of a chart object.\nClass HSSFChart;\n// A series in a chart\nClass HSSFChart.HSSFSeries;\n// \nClass HSSFChildAnchor;\n// A client anchor is attached to an excel worksheet.\nClass HSSFClientAnchor;\n// High level representation for Color Scale / Color Gradient Formatting component of Conditional Formatting settings\nClass HSSFColorScaleFormatting;\n// \nClass HSSFCombobox;\n// Represents a cell comment - a sticky note associated with a cell.\nClass HSSFComment;\n// HSSFConditionalFormatting class encapsulates all settings of Conditional Formatting.\nClass HSSFConditionalFormatting;\n// High level representation of Conditional Formatting Rule.\nClass HSSFConditionalFormattingRule;\n// High level representation for Icon / Multi-State / Databar / Colour Scale change thresholds\nClass HSSFConditionalFormattingThreshold;\n// \nClass HSSFCreationHelper;\n// High level representation for DataBar / Data-Bar Formatting component of Conditional Formatting settings\nClass HSSFDataBarFormatting;\n", "des": "The usermodel package maps HSSF low level structures to familiar workbook/sheet model"}
{"index": 3493, "repo": "poi-5.2.3", "code": "package util\n\n// See OOO documentation: excelfileformat.pdf sec 2.5.14 - 'Cell Range Address'\nClass CellRangeAddress8Bit;\n// Intends to provide support for the very evil index to triplet issue and will likely replace the color constants interface for HSSF 2.0.\nClass HSSFColor;\n// Utility for delaying the concatenation of multiple byte arrays.\nClass LazilyConcatenatedByteArray;\n// Utility class for helping convert RK numbers.\nClass RKUtil;\n// Predefined HSSFColors with their given palette index (and an optional 2nd index)\nEnum HSSFColor.HSSFColorPredefined;\n", "des": "The util package contains tools needed for writing HSSF files that are not necesarily \"real\" HSSF concepts."}
{"index": 3494, "repo": "poi-5.2.3", "code": "package common\n\n// A repository for constants shared by POI classes.\nInterface POIFSConstants;\n// A class describing attributes of the Big Block Size\nClass POIFSBigBlockSize;\n", "des": "common package contains constants and other classes shared across all POIFS subpackages"}
{"index": 3495, "repo": "poi-5.2.3", "code": "package crypt\n\n// \nInterface EncryptionInfoBuilder;\n// \nClass ChunkedCipherInputStream;\n// \nClass ChunkedCipherOutputStream;\n// Helper functions used for standard and agile encryption\nClass CryptoFunctions;\n// \nClass DataSpaceMapUtils;\n// \nClass DataSpaceMapUtils.DataSpaceDefinition;\n// \nClass DataSpaceMapUtils.DataSpaceMap;\n// \nClass DataSpaceMapUtils.DataSpaceMapEntry;\n// \nClass DataSpaceMapUtils.DataSpaceVersionInfo;\n// \nClass DataSpaceMapUtils.IRMDSTransformInfo;\n// \nClass DataSpaceMapUtils.TransformInfoHeader;\n// \nClass Decryptor;\n// Reads and processes OOXML Encryption Headers The constants are largely based on ZIP constants.\nClass EncryptionHeader;\n// Wrapper for the EncryptionInfo node of encrypted documents\nClass EncryptionInfo;\n// Used when checking if a key is valid for a document\nClass EncryptionVerifier;\n// \nClass Encryptor;\n// \nEnum ChainingMode;\n// \nEnum CipherAlgorithm;\n// \nEnum CipherProvider;\n// Office supports various encryption modes.\nEnum EncryptionMode;\n// \nEnum HashAlgorithm;\n", "des": "Implementation of the ECMA-376 and MS-propritary document encryptions"}
{"index": 3496, "repo": "poi-5.2.3", "code": "package dev\n\n// Interface for a drill-down viewable object.\nInterface POIFSViewable;\n// Dump internal structure of a OLE2 file into file system\nClass POIFSDump;\n// A lister of the entries in POIFS files.\nClass POIFSLister;\n// This class contains methods used to inspect POIFSViewable objects\nClass POIFSViewEngine;\n// A simple viewer for POIFS files\nClass POIFSViewer;\n", "des": "DEV package serves two purposes."}
{"index": 3497, "repo": "poi-5.2.3", "code": "package eventfilesystem\n\n// Interface POIFSReaderListener\nInterface POIFSReaderListener;\n// An event-driven reader for POIFS file systems.\nClass POIFSReader;\n// Class POIFSReaderEvent\nClass POIFSReaderEvent;\n", "des": "The eventfilesystem is an efficient method for reading OLE 2 CDF files."}
{"index": 3498, "repo": "poi-5.2.3", "code": "package filesystem\n\n// This interface defines behaviors for objects managed by the Block Allocation Table (BAT).\nInterface BATManaged;\n// This interface defines methods specific to Directory objects managed by a Filesystem instance.\nInterface DirectoryEntry;\n// This interface defines methods specific to Document objects managed by a Filesystem instance.\nInterface DocumentEntry;\n// This interface provides access to an object managed by a Filesystem instance.\nInterface Entry;\n// Interface POIFSWriterListener\nInterface POIFSWriterListener;\n// This abstract class describes a way to read, store, chain and free a series of blocks (be they Big or Small ones)\nClass BlockStore;\n// Simple implementation of DirectoryEntry\nClass DirectoryNode;\n// Class DocumentDescriptor\nClass DocumentDescriptor;\n// A small base class for the various factories, e.g.\nClass DocumentFactoryHelper;\n// This class provides methods to read a DocumentEntry managed by a POIFSFileSystem instance.\nClass DocumentInputStream;\n// Simple implementation of DocumentEntry for OPOIFS\nClass DocumentNode;\n// This class provides methods to write a DocumentEntry managed by a POIFSFileSystem instance.\nClass DocumentOutputStream;\n// Abstract implementation of Entry Extending classes should override isDocument() or isDirectory(), as appropriate Extending classes must override isDeleteOK()\nClass EntryNode;\n// \nClass EntryUtils;\n// A DirectoryEntry filter, which exposes another DirectoryEntry less certain parts.\nClass FilteringDirectoryNode;\n// Represents an Ole10Native record which is wrapped around certain binary files being embedded in OLE2 documents.\nClass Ole10Native;\n// This class manages a document in the NIO POIFS filesystem.\nClass POIFSDocument;\n// Class POIFSDocumentPath\nClass POIFSDocumentPath;\n// This is the main class of the POIFS system; it manages the entire life cycle of the filesystem.\nClass POIFSFileSystem;\n// This class handles the MiniStream (small block store) in the NIO case for POIFSFileSystem\nClass POIFSMiniStore;\n// This handles reading and writing a stream within a POIFSFileSystem.\nClass POIFSStream;\n// Class POIFSWriterEvent\nClass POIFSWriterEvent;\n", "des": "filesystem package maps OLE 2 Compound document files to a more familiar filesystem interface."}
{"index": 3499, "repo": "poi-5.2.3", "code": "package property\n\n// This interface defines methods for finding and setting sibling Property instances\nInterface Child;\n// Behavior for parent (directory) properties\nInterface Parent;\n// Interface PropertyConstants\nInterface PropertyConstants;\n// Directory property\nClass DirectoryProperty;\n// \nClass DirectoryProperty.PropertyComparator;\n// Trivial extension of Property for POIFSDocuments\nClass DocumentProperty;\n// This abstract base class is the ancestor of all classes implementing POIFS Property behavior.\nClass Property;\n// This class embodies the Property Table for a POIFSFileSystem; this is basically the directory for all of the documents in the filesystem and looks up entries in the filesystem to their chain of blocks.\nClass PropertyTable;\n// Root property\nClass RootProperty;\n", "des": "property package contains high and low level Property structures for POIFS."}
{"index": 3500, "repo": "poi-5.2.3", "code": "package storage\n\n// An interface for persisting block storage of POIFS components.\nInterface BlockWritable;\n// Constants used in reading/writing the Header block\nInterface HeaderBlockConstants;\n// A block of block allocation table entries.\nClass BATBlock;\n// \nClass BATBlock.BATBlockAndIndex;\n// The block containing the archive header\nClass HeaderBlock;\n", "des": "storage package contains low level binary structures for POIFS's implementation of the OLE 2 Compound Document Format."}
{"index": 3501, "repo": "poi-5.2.3", "code": "package format\n\n// Formats a date value.\nClass CellDateFormatter;\n// This class implements printing out an elapsed time format.\nClass CellElapsedFormatter;\n// Format a value according to the standard Excel behavior.\nClass CellFormat;\n// This object represents a condition in a cell format.\nClass CellFormatCondition;\n// Objects of this class represent a single part of a cell format expression.\nClass CellFormatPart;\n// This object contains the result of applying a cell format or cell format part to a value.\nClass CellFormatResult;\n// This is the abstract supertype for the various cell formatters.\nClass CellFormatter;\n// A formatter for the default \"General\" cell format.\nClass CellGeneralFormatter;\n// This class implements printing out a value using a number format.\nClass CellNumberFormatter;\n// Internal helper class for CellNumberFormatter\nClass CellNumberPartHandler;\n// Internal helper class for CellNumberFormatter This class represents a single modification to a result string.\nClass CellNumberStringMod;\n// This class implements printing out text.\nClass CellTextFormatter;\n// \nClass SimpleFraction;\n// The different kinds of formats that the formatter understands.\nEnum CellFormatType;\n", "des": "This package contains classes that implement cell formatting"}
{"index": 3502, "repo": "poi-5.2.3", "code": "package formula\n\n// The formula package contains binary PTG structures used in Formulas\npackage formula.ptg\n// Abstracts a cell for the purpose of formula evaluation.\nInterface EvaluationCell;\n// Abstracts a name record for formula evaluation.\nInterface EvaluationName;\n// Abstracts a sheet for the purpose of formula evaluation.\nInterface EvaluationSheet;\n// Abstracts a workbook for the purpose of formula evaluation.\nInterface EvaluationWorkbook;\n// Should be implemented by any Ptg subclass that needs has an extern sheet index For POI internal use only\nInterface ExternSheetReferenceToken;\n// Abstracts a workbook for the purpose of formula parsing. For POI internal use only\nInterface FormulaParsingWorkbook;\n// Abstracts a workbook for the purpose of converting formula to text.\nInterface FormulaRenderingWorkbook;\n// Used to help optimise cell evaluation result caching by allowing applications to specify which parts of a workbook are final. The term final is introduced here to denote immutability or 'having constant definition'.\nInterface IStabilityClassifier;\n// \nInterface SheetRange;\n// Optional Extension to the likes of AreaEval and AreaEvalBase, which allows for looking up 3D (sheet+row+column) evaluations\nInterface ThreeDEval;\n// Common interface of AreaEval and AreaEvalBase, for 2D (row+column) evaluations\nInterface TwoDEval;\n// Should be implemented by any Ptg subclass that needs a workbook to render its formula.\nInterface WorkbookDependentFormula;\n// Provides access to a WorkbookEvaluator, eg for use with CollaboratingWorkbooksEnvironment\nInterface WorkbookEvaluatorProvider;\n// Common functionality across file formats for evaluating formula cells.\nClass BaseFormulaEvaluator;\n// Provides holding structure for temporary values in arrays during the evaluation process.\nClass CacheAreaEval;\n// Manages a collection of WorkbookEvaluators, in order to support evaluation of formulas across spreadsheets.\nClass CollaboratingWorkbooksEnvironment;\n// Evaluates Conditional Formatting constraints.\nClass ConditionalFormattingEvaluator;\n// Evaluates Data Validation constraints.\nClass DataValidationEvaluator;\n// This class organizes and encapsulates all the pieces of information related to a single data validation configuration for a single cell.\nClass DataValidationEvaluator.DataValidationContext;\n", "des": "This package contains common internal POI code for manipulating formulas."}
{"index": 3503, "repo": "poi-5.2.3", "code": "package ptg\n\n// Common interface for AreaPtg and Area3DPtg, and their child classes.\nInterface AreaI;\n// An XSSF only special kind of Ptg, which stores the sheet / book reference in string form.\nInterface Pxg;\n// An XSSF only special kind of Ptg, which stores a range of sheet / book references in string form.\nInterface Pxg3D;\n// This class provides the base functionality for Excel sheet functions There are two kinds of function Ptgs - tFunc and tFuncVar Therefore, this class will have ONLY two subclasses\nClass AbstractFunctionPtg;\n// Addition operator PTG the \"+\" binomial operator.\nClass AddPtg;\n// Common superclass of 2-D area refs\nClass Area2DPtgBase;\n// Area 3D Ptg - 3D reference (Sheet + Area)\nClass Area3DPtg;\n// XSSF Area 3D Reference (Sheet + Area)\nClass Area3DPxg;\n// AreaErr - handles deleted cell area references.\nClass AreaErrPtg;\n// \nClass AreaI.OffsetArea;\n// Specifies a rectangular area of cells A1:A4 for instance.\nClass AreaNPtg;\n// Specifies a rectangular area of cells A1:A4 for instance.\nClass AreaPtg;\n// Specifies a rectangular area of cells A1:A4 for instance.\nClass AreaPtgBase;\n// ArrayPtg - handles arrays The ArrayPtg is a little weird, the size of the Ptg when parsing initially only includes the Ptg sid and the reserved bytes.\nClass ArrayPtg;\n// \"Special Attributes\"\nClass AttrPtg;\n// \nClass AttrPtg.SpaceType;\n// Boolean (boolean) Stores a (java) boolean value in a formula.\nClass BoolPtg;\n// \nClass ConcatPtg;\n// \nClass ControlPtg;\n// An XSSF only representation of a reference to a deleted area\nClass Deleted3DPxg;\n// Deleted Area 3D Ptg - 3D referecnce (Sheet + Area)\nClass DeletedArea3DPtg;\n", "des": "The formula package contains binary PTG structures used in Formulas"}
{"index": 3504, "repo": "poi-5.2.3", "code": "package util\n\n// Implementors of this interface allow client code to 'delay' writing to a certain section of a data output stream. A typical application is for writing BIFF records when the size is not known until well after the header has been written.\nInterface DelayableLittleEndianOutput;\n// behavior of a field at a fixed location within a byte array\nInterface FixedField;\n// \nInterface GenericRecordJsonWriter.GenericRecordHandler;\n// \nInterface GenericRecordXmlWriter.GenericRecordHandler;\n// a repository for constants shared by classes within this package\nInterface LittleEndianConsts;\n// \nInterface LittleEndianInput;\n// \nInterface LittleEndianOutput;\n// Interface used by the TempFile utility class to create temporary files.\nInterface TempFileCreationStrategy;\n// Utility classes for dealing with arrays.\nClass ArrayUtil;\n// Manage operations dealing with bit-mapped fields.\nClass BitField;\n// Returns immutable Bitfield instances.\nClass BitFieldFactory;\n// representation of a byte (8-bit) field at a fixed location within a byte array\nClass ByteField;\n// Utilities for working with Microsoft CodePages.\nClass CodePageUtil;\n// \nClass CodepointsUtil;\n// Helper for fetching int values from system properties\nClass Configurator;\n// Default implementation of the TempFileCreationStrategy used by TempFile: Files are collected into one directory and by default are deleted on exit from the VM.\nClass DefaultTempFileCreationStrategy;\n// \nClass Dimension2DDouble;\n// Dump out the aggregated escher records\nClass DrawingDump;\n// \nClass FontMetricsDumper;\n// \nClass GenericRecordJsonWriter;\n// \nClass GenericRecordUtil;\n// \nClass GenericRecordUtil.AnnotatedFlag;\n// \nClass GenericRecordXmlWriter;\n// dump data in hexadecimal format\nClass HexDump;\n// Utilities to read hex from files.\nClass HexRead;\n// representation of an integer (32-bit) field at a fixed location within a byte array\nClass IntegerField;\n", "des": "Top-level util package are classes that are useful throughout the project."}
{"index": 3505, "repo": "opennlp-tools-2.2.0", "code": "package chunker\n\n// The interface for chunkers which provide chunk tags for a sequence of tokens.\nInterface Chunker;\n// Interface for a BeamSearchContextGenerator used in syntactic chunking.\nInterface ChunkerContextGenerator;\n// A marker interface for evaluating chunkers.\nInterface ChunkerEvaluationMonitor;\n// Cross validator for Chunker.\nClass ChunkerCrossValidator;\n// The ChunkerEvaluator measures the performance of the given Chunker with the provided reference samples.\nClass ChunkerEvaluator;\n// Class for creating an event stream out of data files for training a Chunker.\nClass ChunkerEventStream;\n// \nClass ChunkerFactory;\n// The class represents a maximum-entropy-based Chunker.\nClass ChunkerME;\n// The ChunkerModel is the model used by a learnable Chunker.\nClass ChunkerModel;\n// Class for holding chunks for a single unit of text.\nClass ChunkSample;\n// A SequenceStream implementation encapsulating samples.\nClass ChunkSampleSequenceStream;\n// Parses the conll 2000 shared task shallow parser training data.\nClass ChunkSampleStream;\n// Features based on chunking model described in Fei Sha and Fernando Pereira.\nClass DefaultChunkerContextGenerator;\n// The default chunker SequenceValidator implementation.\nClass DefaultChunkerSequenceValidator;\n", "des": "Package related to finding non-recursive syntactic annotation such as noun phrase chunks."}
{"index": 3506, "repo": "opennlp-tools-2.2.0", "code": "package lemmatizer\n\n// A default implementation of EvaluationMonitor that prints to an output stream.\nClass LemmaEvaluationErrorListener;\n// A default LemmaSample-centric implementation of AbstractEvaluatorTool that prints to an output stream.\nClass LemmatizerEvaluatorTool;\n// Generates a detailed report for the Lemmatizer.\nClass LemmatizerFineGrainedReportListener;\n// \nClass LemmatizerMETool;\n// Loads a LemmatizerModel for the command line tools.\nClass LemmatizerModelLoader;\n// \nClass LemmatizerTrainerTool;\n", "des": "Classes giving access to the opennlp.tools.lemmatizer functionalities."}
{"index": 3507, "repo": "opennlp-tools-2.2.0", "code": "package commons\n\n// Represents a generic type of processable elements.\nInterface Sample;\n// Represents a common base for training implementations.\nInterface Trainer;\n// Classes, fields, or methods annotated &#64;Internal are for OpenNLP internal use only.\nAnnotation Type Internal;\n// Classes, fields, or methods annotated &#64;ThreadSafe are safe to use in multithreading contexts.\nAnnotation Type ThreadSafe;\n", "des": "Package related to common interfaces used in different contexts."}
{"index": 3508, "repo": "opennlp-tools-2.2.0", "code": "package dictionary\n\n// An iterable and serializable dictionary implementation.\nClass Dictionary;\n// This classes indexes string lists.\nClass Index;\n", "des": "Package related to parsing and storing dictionaries."}
{"index": 3509, "repo": "opennlp-tools-2.2.0", "code": "package doccat\n\n// A marker interface for evaluating doccat.\nInterface DoccatEvaluationMonitor;\n// Interface for classes which categorize documents.\nInterface DocumentCategorizer;\n// Interface for generating features for document categorization.\nInterface FeatureGenerator;\n// Generates a feature for each word in a document.\nClass BagOfWordsFeatureGenerator;\n// Cross validator for DocumentCategorizer.\nClass DoccatCrossValidator;\n// The factory that provides Doccat default implementations and resources.\nClass DoccatFactory;\n// A model for document categorization\nClass DoccatModel;\n// The DocumentCategorizerEvaluator measures the performance of the given DocumentCategorizer with the provided reference samples.\nClass DocumentCategorizerEvaluator;\n// Iterator-like class for modeling document classification events.\nClass DocumentCategorizerEventStream;\n// A Max-Ent based implementation of DocumentCategorizer.\nClass DocumentCategorizerME;\n// Class which holds a classified document and its category.\nClass DocumentSample;\n// Reads in string encoded training samples, parses them and outputs DocumentSample objects.\nClass DocumentSampleStream;\n// Generates ngram features for a document.\nClass NGramFeatureGenerator;\n", "des": "Package for classifying a document into a category."}
{"index": 3510, "repo": "opennlp-tools-2.2.0", "code": "package entitylinker\n\n// EntityLinkers establish connections with external data to enrich extracted entities.\nInterface EntityLinker<T extends Span>;\n// Represents a minimal tuple of information.\nClass BaseLink;\n// Generates a EntityLinker instances via a properties file configuration.\nClass EntityLinkerFactory;\n// Properties wrapper for EntityLinker implementations.\nClass EntityLinkerProperties;\n// A default, extended Span that holds additional information about a Span.\nClass LinkedSpan<T extends BaseLink>;\n", "des": "Package related to linking entities to external data sources."}
{"index": 3511, "repo": "opennlp-tools-2.2.0", "code": "package formats\n\n// Experimental package related to the Arvores Deitadas corpus format.\npackage formats.ad\n// Experimental package related to the corpus format used by the \"brat rapid annotation tool\" (brat).\npackage formats.brat\n// Experimental package related to the CoNNL-U format.\npackage formats.conllu\n// Experimental package related to the French Treebank format.\npackage formats.frenchtreebank\n// Experimental package related to the Irish Sentence Bank format.\npackage formats.irishsentencebank\n// Experimental package related to the Leipzig corpus format.\npackage formats.leipzig\n// Experimental package related to the letsmt corpus format.\npackage formats.letsmt\n// Experimental package related to the MASC corpus format.\npackage formats.masc\n// Experimental package related to the MUC corpus format.\npackage formats.muc\n// Experimental package related to the National corpus of Polish NKJP format.\npackage formats.nkjp\n// Experimental package related to the OntoNotes 4.0 format.\npackage formats.ontonotes\n// \nInterface NameSampleDataStreamFactory.Parameters;\n// \nInterface ParseSampleStreamFactory.Parameters;\n// \nInterface WordTagSampleStreamFactory.Parameters;\n// Base class for sample stream factories.\nClass AbstractSampleStreamFactory<T,​P>;\n// A sample stream for the training files of the BioNLP/NLPBA 2004 shared task.\nClass BioNLP2004NameSampleStream;\n// \nClass BioNLP2004NameSampleStreamFactory<P>;\n// Factory producing OpenNLP ChunkSampleStreams.\nClass ChunkerSampleStreamFactory<P>;\n// Parser for the Dutch and Spanish ner training files of the CONLL 2002 shared task.\nClass Conll02NameSampleStream;\n// Note: Do not use this class, internal use only!\nClass Conll02NameSampleStreamFactory<P>;\n// An import stream which can parse the CONLL03 data.\nClass Conll03NameSampleStream;\n// \nClass Conll03NameSampleStreamFactory<P>;\n", "des": "Experimental package related to converting various corpora to OpenNLP Format."}
{"index": 3512, "repo": "opennlp-tools-2.2.0", "code": "package ad\n\n// Parser for Floresta Sita(c)tica Arvores Deitadas corpus, output to for the Portuguese Chunker training.\nClass ADChunkSampleStream;\n// A Factory to create a Arvores Deitadas ChunkStream from the command line utility.\nClass ADChunkSampleStreamFactory<P>;\n// Parser for Floresta Sita(c)tica Arvores Deitadas corpus, output to for the Portuguese NER training.\nClass ADNameSampleStream;\n// A Factory to create a Arvores Deitadas NameSampleDataStream from the command line utility.\nClass ADNameSampleStreamFactory<P>;\n// Note: Do not use this class, internal use only!\nClass ADPOSSampleStream;\n// Note: Do not use this class, internal use only!\nClass ADPOSSampleStreamFactory<P>;\n// Note: Do not use this class, internal use only!\nClass ADSentenceSampleStream;\n// Note: Do not use this class, internal use only!\nClass ADSentenceSampleStreamFactory<P>;\n// Stream filter which merges text lines into sentences, following the Arvores Deitadas syntax.\nClass ADSentenceStream;\n// \nClass ADSentenceStream.Sentence;\n// Parses a sample of AD corpus.\nClass ADSentenceStream.SentenceParser;\n// Represents the AD leaf\nClass ADSentenceStream.SentenceParser.Leaf;\n// Represents the AD node\nClass ADSentenceStream.SentenceParser.Node;\n// Represents a tree element, Node or Leaf\nClass ADSentenceStream.SentenceParser.TreeElement;\n// Note: Do not use this class, internal use only!\nClass ADTokenSampleStreamFactory<P>;\n// Utility class to handle Portuguese contractions.\nClass PortugueseContractionUtility;\n", "des": "Experimental package related to the Arvores Deitadas corpus format."}
{"index": 3513, "repo": "opennlp-tools-2.2.0", "code": "package brat\n\n// \nClass AnnotationConfiguration;\n// \nClass AnnotatorNoteAnnotation;\n// \nClass AttributeAnnotation;\n// \nClass BratAnnotation;\n// Reads the annotations from the brat .ann annotation file.\nClass BratAnnotationStream;\n// Brat (brat rapid annotation tool) is based on the stav visualiser which was originally made in order to visualise BioNLP'11 Shared Task data.\nClass BratDocument;\n// \nClass BratDocumentParser;\n// \nClass BratDocumentStream;\n// Generates Name Sample objects for a Brat Document object.\nClass BratNameSampleStream;\n// \nClass BratNameSampleStreamFactory;\n// \nClass EventAnnotation;\n// \nClass RelationAnnotation;\n// \nClass SegmenterObjectStream<S,​T>;\n// \nClass SpanAnnotation;\n", "des": "Experimental package related to the corpus format used by the \"brat rapid annotation tool\" (brat)."}
{"index": 3514, "repo": "opennlp-tools-2.2.0", "code": "package conllu\n\n// \nClass ConlluLemmaSampleStream;\n// Note: Do not use this class, internal use only!\nClass ConlluLemmaSampleStreamFactory<P>;\n// \nClass ConlluPOSSampleStream;\n// Note: Do not use this class, internal use only!\nClass ConlluPOSSampleStreamFactory<P>;\n// \nClass ConlluSentence;\n// \nClass ConlluSentenceSampleStream;\n// Note: Do not use this class, internal use only!\nClass ConlluSentenceSampleStreamFactory<P>;\n// The CoNNL-U Format is specified here.\nClass ConlluStream;\n// \nClass ConlluTokenSampleStream;\n// Note: Do not use this class, internal use only!\nClass ConlluTokenSampleStreamFactory<P>;\n// \nClass ConlluWordLine;\n// \nEnum ConlluTagset;\n", "des": "Experimental package related to the CoNNL-U format."}
{"index": 3515, "repo": "opennlp-tools-2.2.0", "code": "package frenchtreebank\n\n// \nClass ConstitParseSampleStream;\n// Note: Do not use this class, internal use only!\nClass ConstitParseSampleStreamFactory;\n", "des": "Experimental package related to the French Treebank format."}
{"index": 3516, "repo": "opennlp-tools-2.2.0", "code": "package irishsentencebank\n\n// A structure to hold an Irish Sentence Bank document, which is a collection of tokenized sentences.\nClass IrishSentenceBankDocument;\n// \nClass IrishSentenceBankDocument.IrishSentenceBankFlex;\n// \nClass IrishSentenceBankDocument.IrishSentenceBankSentence;\n// \nClass IrishSentenceBankSentenceStreamFactory<P>;\n// \nClass IrishSentenceBankTokenSampleStreamFactory<P>;\n", "des": "Experimental package related to the Irish Sentence Bank format."}
{"index": 3517, "repo": "opennlp-tools-2.2.0", "code": "package leipzig\n\n// \nClass LeipzigLanguageSampleStream;\n// Note: Do not use this class, internal use only!\nClass LeipzigLanguageSampleStreamFactory<P>;\n", "des": "Experimental package related to the Leipzig corpus format."}
{"index": 3518, "repo": "opennlp-tools-2.2.0", "code": "package letsmt\n\n// \nClass DetokenizeSentenceSampleStream;\n// A structure to hold the letsmt document.\nClass LetsmtDocument;\n// A content handler to receive and process SAX events.\nClass LetsmtDocument.LetsmtDocumentHandler;\n// \nClass LetsmtDocument.LetsmtSentence;\n// \nClass LetsmtSentenceStreamFactory<P>;\n", "des": "Experimental package related to the letsmt corpus format."}
{"index": 3519, "repo": "opennlp-tools-2.2.0", "code": "package masc\n\n// \nClass MascDocument;\n// \nClass MascDocumentStream;\n// A class to process the MASC Named entity stand-off annotation file\nClass MascNamedEntityParser;\n// \nClass MascNamedEntitySampleStream;\n// \nClass MascNamedEntitySampleStreamFactory<P>;\n// A class for parsing MASC's Penn tagging/tokenization stand-off annotation\nClass MascPennTagParser;\n// \nClass MascPOSSampleStream;\n// \nClass MascPOSSampleStreamFactory<P>;\n// \nClass MascSentence;\n// \nClass MascSentenceSampleStream;\n// \nClass MascSentenceSampleStreamFactory<P>;\n// A specialized Span to express tokens in documents.\nClass MascToken;\n// \nClass MascTokenSampleStream;\n// \nClass MascTokenSampleStreamFactory<P>;\n// \nClass MascWord;\n", "des": "Experimental package related to the MASC corpus format."}
{"index": 3520, "repo": "opennlp-tools-2.2.0", "code": "package muc\n\n// \nClass Muc6NameSampleStreamFactory;\n// \nClass MucNameContentHandler;\n// \nClass MucNameSampleStream;\n// SAX style SGML parser.\nClass SgmlParser;\n// \nClass SgmlParser.ContentHandler;\n", "des": "Experimental package related to the MUC corpus format."}
{"index": 3521, "repo": "opennlp-tools-2.2.0", "code": "package nkjp\n\n// \nClass NKJPSegmentationDocument;\n// \nClass NKJPSegmentationDocument.Pointer;\n// \nClass NKJPSentenceSampleStream;\n// \nClass NKJPSentenceSampleStreamFactory<P>;\n// The National corpus of Polish (NKJP) format.\nClass NKJPTextDocument;\n", "des": "Experimental package related to the National corpus of Polish NKJP format."}
{"index": 3522, "repo": "opennlp-tools-2.2.0", "code": "package ontonotes\n\n// \nInterface OntoNotesFormatParameters;\n// Reads a plain text file and return each line as a String object.\nClass DocumentToLineStream;\n// Name Sample Stream parser for the OntoNotes 4.0 corpus.\nClass OntoNotesNameSampleStream;\n// \nClass OntoNotesNameSampleStreamFactory;\n// \nClass OntoNotesParseSampleStream;\n// \nClass OntoNotesParseSampleStreamFactory;\n// \nClass OntoNotesPOSSampleStreamFactory;\n", "des": "Experimental package related to the OntoNotes 4.0 format."}
{"index": 3523, "repo": "opennlp-tools-2.2.0", "code": "package langdetect\n\n// The interface for LanguageDetector which predicts the Language for a context.\nInterface LanguageDetector;\n// A context generator interface for LanguageDetector.\nInterface LanguageDetectorContextGenerator;\n// A marker interface for evaluating language detectors.\nInterface LanguageDetectorEvaluationMonitor;\n// A context generator for language detector.\nClass DefaultLanguageDetectorContextGenerator;\n// Class for holding the document language and its confidence\nClass Language;\n// \nClass LanguageDetectorConfig;\n// Cross validator for LanguageDetector.\nClass LanguageDetectorCrossValidator;\n// The LanguageDetectorEvaluator measures the performance of the given LanguageDetector with the provided reference LanguageSamples.\nClass LanguageDetectorEvaluator;\n// Iterator-like class for modeling an event stream of samples.\nClass LanguageDetectorEventStream;\n// Default factory used by LanguageDetector.\nClass LanguageDetectorFactory;\n// Implements a learnable LanguageDetector.\nClass LanguageDetectorME;\n// The LanguageDetectorModel is the model used by a learnable LanguageDetector.\nClass LanguageDetectorModel;\n// This class reads in string encoded training samples, parses them and outputs LanguageSample objects.\nClass LanguageDetectorSampleStream;\n// Holds a classified document and its Language.\nClass LanguageSample;\n// A data container encapsulating language detection results.\nClass ProbingLanguageDetectionResult;\n", "des": "Package related to predicting languages from samples of text."}
{"index": 3524, "repo": "opennlp-tools-2.2.0", "code": "package languagemodel\n\n// A language model can calculate the probability p (between 0 and 1) of a certain sequence of tokens, given its underlying vocabulary.\nInterface LanguageModel;\n// A LanguageModel based on a NGramModel using Stupid Backoff to get the probabilities of the ngrams.\nClass NGramLanguageModel;\n", "des": "Package related to language models"}
{"index": 3525, "repo": "opennlp-tools-2.2.0", "code": "package lemmatizer\n\n// The common interface for lemmatizers.\nInterface Lemmatizer;\n// Interface for the context generator used for probabilistic Lemmatizer.\nInterface LemmatizerContextGenerator;\n// A marker interface for evaluating lemmatizers.\nInterface LemmatizerEvaluationMonitor;\n// Simple feature generator for learning statistical lemmatizers.\nClass DefaultLemmatizerContextGenerator;\n// The default lemmatizer SequenceValidator implementation.\nClass DefaultLemmatizerSequenceValidator;\n// A Lemmatizer implementation that works by simple dictionary lookup into a Map built from a file containing, for each line:\nClass DictionaryLemmatizer;\n// Represents a lemmatized sentence.\nClass LemmaSample;\n// Class for creating an event stream out of data files for training a probabilistic Lemmatizer.\nClass LemmaSampleEventStream;\n// A SequenceStream implementation encapsulating samples.\nClass LemmaSampleSequenceStream;\n// Reads data for training and testing the Lemmatizer.\nClass LemmaSampleStream;\n// The LemmatizerEvaluator measures the performance of the given Lemmatizer with the provided reference samples.\nClass LemmatizerEvaluator;\n// The factory that provides Lemmatizer default implementation and resources.\nClass LemmatizerFactory;\n// A probabilistic Lemmatizer implementation.\nClass LemmatizerME;\n// The LemmatizerModel is the model used by a learnable Lemmatizer.\nClass LemmatizerModel;\n", "des": "Package related to the lemmatizer functionality."}
{"index": 3526, "repo": "opennlp-tools-2.2.0", "code": "package log\n\n// This class serves as an adapter for a Logger used within a PrintStream.\nClass LogPrintStream;\n", "des": "Package contains a PrintStream adapter for internal use only."}
{"index": 3527, "repo": "opennlp-tools-2.2.0", "code": "package ml\n\n// Package related to ML by means of the Maximum Entropy (ME) algorithm.\npackage ml.maxent\n// Package related to ML models and feature selection techniques.\npackage ml.model\n// Package related to ML by means of the Naive Bayes algorithm.\npackage ml.naivebayes\n// Package related to ML by means of the perceptron algorithm.\npackage ml.perceptron\n// A specialized Trainer that is based on a 'EventModelSequence' approach.\nInterface EventModelSequenceTrainer<T>;\n// A specialized Trainer that is based on an Event approach.\nInterface EventTrainer;\n// \nInterface SequenceTrainer;\n// A basic EventModelSequenceTrainer implementation that processes events.\nClass AbstractEventModelSequenceTrainer;\n// A basic EventTrainer implementation.\nClass AbstractEventTrainer;\n// \nClass AbstractTrainer;\n// Utility class for simple vector arithmetic.\nClass ArrayMath;\n// Performs k-best search over a sequence.\nClass BeamSearch<T>;\n// A factory to initialize Trainer instances depending on a trainer type configured via TrainingParameters.\nClass TrainerFactory;\n// \nEnum TrainerFactory.TrainerType;\n", "des": "Package related to Machine Learning (ML) features of OpenNLP, the related ML models, and trainers."}
{"index": 3528, "repo": "opennlp-tools-2.2.0", "code": "package maxent\n\n// Package related to the I/O functionality of the maxent package including reading and writing models in several formats.\npackage maxent.io\n// Package related to ML by means of the Quasi Newton (QN) algorithm.\npackage maxent.quasinewton\n// Represents a generator of contexts for maxent decisions.\nInterface ContextGenerator<T>;\n// An interface for objects which can deliver a stream of training data to be supplied to an EventStream.\nInterface DataStream;\n// A ContextGenerator implementation for maxent decisions, assuming that the input given to the BasicContextGenerator.getContext(String) method is a String containing contextual predicates separated by spaces, for instance:\nClass BasicContextGenerator;\n// A maximum entropy model which has been trained using the Generalized Iterative Scaling (GIS) procedure.\nClass GISModel;\n// An implementation of Generalized Iterative Scaling (GIS).\nClass GISTrainer;\n// Class for real-valued events as an event stream.\nClass RealBasicEventStream;\n", "des": "Package related to ML by means of the Maximum Entropy (ME) algorithm."}
{"index": 3529, "repo": "opennlp-tools-2.2.0", "code": "package io\n\n// A GISModelReader that reads models from a binary format.\nClass BinaryGISModelReader;\n// A GISModelWriter that writes models in a binary format.\nClass BinaryGISModelWriter;\n// A QNModelReader that reads models from a binary format.\nClass BinaryQNModelReader;\n// A QNModelWriter that writes models in a binary format.\nClass BinaryQNModelWriter;\n// The base class for readers of GIS models.\nClass GISModelReader;\n// The base class for writers of GIS models.\nClass GISModelWriter;\n// The base class for readers of QN models.\nClass QNModelReader;\n// The base class for writers of models.\nClass QNModelWriter;\n", "des": "Package related to the I/O functionality of the maxent package including reading and writing models in several formats."}
{"index": 3530, "repo": "opennlp-tools-2.2.0", "code": "package quasinewton\n\n// Interface for a function.\nInterface Function;\n// Evaluate quality of training parameters.\nInterface QNMinimizer.Evaluator;\n// \nClass ArrayMath;\n// Class that performs line search to find minimum.\nClass LineSearch;\n// Represents a LineSearch result.\nClass LineSearch.LineSearchResult;\n// Evaluate negative log-likelihood and its gradient from DataIndexer.\nClass NegLogLikelihood;\n// Evaluate negative log-likelihood and its gradient in parallel\nClass ParallelNegLogLikelihood;\n// Implementation of L-BFGS which supports L1-, L2-regularization and Elastic Net for solving convex optimization problems.\nClass QNMinimizer;\n// L2-regularized objective Function.\nClass QNMinimizer.L2RegFunction;\n// A maximum entropy model which has been trained using the Quasi Newton (QN) algorithm.\nClass QNModel;\n// A Maxent model Trainer using L-BFGS algorithm.\nClass QNTrainer;\n", "des": "Package related to ML by means of the Quasi Newton (QN) algorithm."}
{"index": 3531, "repo": "opennlp-tools-2.2.0", "code": "package model\n\n// Represents an indexer which compresses events in memory and performs feature selection.\nInterface DataIndexer;\n// Describes generic ways to read data from a DataInputStream.\nInterface DataReader;\n// Interface for maximum entropy models.\nInterface MaxentModel;\n// This interface allows one to implement a prior distribution for use in maximum entropy model training.\nInterface Prior;\n// A classification model that can label an input Sequence.\nInterface SequenceClassificationModel<T>;\n// Interface for streams of sequences used to train sequence models.\nInterface SequenceStream<S>;\n// Abstract DataIndexer implementation for collecting event and context counts used in training.\nClass AbstractDataIndexer;\n// A basic MaxentModel implementation.\nClass AbstractModel;\n// An abstract, basic implementation of a model reader.\nClass AbstractModelReader;\n// An abstract, basic implementation of a model writer.\nClass AbstractModelWriter;\n// A DataReader that reads files from a binary format.\nClass BinaryFileDataReader;\n// A maxent event representation which we can use to sort based on the predicates indexes contained in the events.\nClass ComparableEvent;\n// A maxent predicate representation which we can use to sort based on the outcomes.\nClass ComparablePredicate;\n// Class which associates a real valued parameter or expected value with a particular contextual predicate or feature.\nClass Context;\n// A factory that produces DataIndexer instances.\nClass DataIndexerFactory;\n// \nClass DynamicEvalParameters;\n// This class encapsulates the variables used in producing probabilities from a model and facilitates passing these variables to the eval method.\nClass EvalParameters;\n// The context of a decision point during training.\nClass Event;\n// Class for using a file of events as an event stream.\nClass FileEventStream;\n// An generic AbstractModelReader implementation.\nClass GenericModelReader;\n// An generic AbstractModelWriter implementation.\nClass GenericModelWriter;\n// A hash sum based AbstractObjectStream implementation.\nClass HashSumEventStream;\n// A helper class that handles Strings with more than 64k (65535 bytes) in length.\nClass ModelParameterChunker;\n// An extension of Context used to store parameters or expected values associated with this context which can be updated or assigned.\nClass MutableContext;\n// A DataReader implementation based on ObjectInputStream.\nClass ObjectDataReader;\n", "des": "Package related to ML models and feature selection techniques."}
{"index": 3532, "repo": "opennlp-tools-2.2.0", "code": "package naivebayes\n\n// A NaiveBayesModelReader that reads models from a binary format.\nClass BinaryNaiveBayesModelReader;\n// A NaiveBayesModelWriter that writes models in a binary format.\nClass BinaryNaiveBayesModelWriter;\n// Class implementing the probability distribution over labels returned by a classifier as a log of probabilities.\nClass LogProbabilities<T>;\n// A class implementing the logarithmic Probability for a label.\nClass LogProbability<T>;\n// Specialized parameters for the evaluation of a naive bayes classifier\nClass NaiveBayesEvalParameters;\n// A MaxentModel implementation of the multinomial Naive Bayes classifier model.\nClass NaiveBayesModel;\n// The base class for readers of models.\nClass NaiveBayesModelReader;\n// The base class for NaiveBayesModel writers.\nClass NaiveBayesModelWriter;\n// Trains models using the combination of EM algorithm and Naive Bayes classifier which is described in:\nClass NaiveBayesTrainer;\n// A NaiveBayesModelReader that reads models from a plain text format.\nClass PlainTextNaiveBayesModelReader;\n// A NaiveBayesModelWriter that writes models in a plain text format.\nClass PlainTextNaiveBayesModelWriter;\n// Class implementing the probability distribution over labels returned by a classifier.\nClass Probabilities<T>;\n// Class implementing the probability for a label.\nClass Probability<T>;\n", "des": "Package related to ML by means of the Naive Bayes algorithm."}
{"index": 3533, "repo": "opennlp-tools-2.2.0", "code": "package perceptron\n\n// A PerceptronModelReader that reads models from a binary format.\nClass BinaryPerceptronModelReader;\n// A PerceptronModelWriter that writes models in a binary format.\nClass BinaryPerceptronModelWriter;\n// A model implementation based one the perceptron algorithm.\nClass PerceptronModel;\n// The base class for readers of models.\nClass PerceptronModelReader;\n// The base class for PerceptronModel writers.\nClass PerceptronModelWriter;\n// Trains models using the perceptron algorithm.\nClass PerceptronTrainer;\n// Trains models with sequences using the perceptron algorithm.\nClass SimplePerceptronSequenceTrainer;\n", "des": "Package related to ML by means of the perceptron algorithm."}
{"index": 3534, "repo": "opennlp-tools-2.2.0", "code": "package namefind\n\n// Interface for processing an entire document allowing a TokenNameFinder to use context from the entire document.\nInterface DocumentNameFinder;\n// Interface for generating the context for a name finder by specifying a set of feature generators.\nInterface NameContextGenerator;\n// \nInterface RegexNameFinderFactory.RegexAble;\n// The interface for name finders which provide name tags for a sequence of tokens.\nInterface TokenNameFinder;\n// A marker interface for evaluating name finders.\nInterface TokenNameFinderEvaluationMonitor;\n// The default SequenceCodec implementation according to the BILOU scheme.\nClass BilouCodec;\n// A SequenceValidator implementation for the BilouCodec.\nClass BilouNameFinderSequenceValidator;\n// The default SequenceCodec implementation according to the BIO scheme: B: 'beginning' of a NE I: 'inside', the word is inside a NE O: 'outside', the word is a regular word outside a NE See also the paper by Roth D.\nClass BioCodec;\n// A NameContextGenerator implementation for determining contextual features for a tag-chunk style named-entity recognizer.\nClass DefaultNameContextGenerator;\n// This is a Dictionary based name finder.\nClass DictionaryNameFinder;\n// Class for creating an event stream out of data files for training an TokenNameFinder.\nClass NameFinderEventStream;\n// A maximum-entropy-based name finder implementation.\nClass NameFinderME;\n// The default name finder SequenceValidator implementation.\nClass NameFinderSequenceValidator;\n// Encapsulates names for a single unit of text.\nClass NameSample;\n// The NameSampleDataStream class converts tagged strings provided by a DataStream to NameSample objects.\nClass NameSampleDataStream;\n// A SequenceStream implementation encapsulating samples.\nClass NameSampleSequenceStream;\n// A stream which removes name samples which do not have a certain type.\nClass NameSampleTypeFilter;\n// A TokenNameFinder implementation based on a series of regular expressions.\nClass RegexNameFinder;\n// Returns a RegexNameFinder based on a selection of defaults or a configuration and a selection of defaults.\nClass RegexNameFinderFactory;\n// Cross validator for TokenNameFinder.\nClass TokenNameFinderCrossValidator;\n", "des": "Package related to finding proper names and numeric amounts."}
{"index": 3535, "repo": "opennlp-tools-2.2.0", "code": "package ngram\n\n// The NGramCharModel can be used to create character ngrams.\nClass NGramCharModel;\n// Generates an nGram, via an optional separator, and returns the grams as a list of strings\nClass NGramGenerator;\n// The NGramModel can be used to crate ngrams and character ngrams.\nClass NGramModel;\n// Utility class for ngrams.\nClass NGramUtils;\n", "des": "Package related to computing and storing n-gram frequencies."}
{"index": 3536, "repo": "opennlp-tools-2.2.0", "code": "package parser\n\n// Package containing code for performing full syntactic parsing using shift/reduce-style decisions.\npackage parser.chunking\n// Package containing experimental code for performing full syntactic parsing using attachment decisions.\npackage parser.treeinsert\n// Represents a labeler for nodes which contain traces so that these traces can be predicted by a Parser.\nInterface GapLabeler;\n// Encoder for head rules associated with parsing.\nInterface HeadRules;\n// Defines common methods for full-syntactic parsers.\nInterface Parser;\n// A marker interface for evaluating parsers.\nInterface ParserEvaluationMonitor;\n// Abstract class which contains code to tag and chunk parses for bottom up parsing and leaves implementation of advancing parses and completing parses to extend class.\nClass AbstractBottomUpParser;\n// Abstract class containing many of the methods used to generate contexts for parsing.\nClass AbstractContextGenerator;\n// Abstract class extended by parser event streams which perform tagging and chunking.\nClass AbstractParserEventStream;\n// Creates predictive context for the pre-chunking phases of parsing.\nClass ChunkContextGenerator;\n// \nClass ChunkSampleStream;\n// Holds feature information about a specific Parse node.\nClass Cons;\n// Holds constituents when reading parses.\nClass Constituent;\n// Data structure for holding parse constituents.\nClass Parse;\n// \nClass ParserChunkerFactory;\n// The parser chunker SequenceValidator implementation.\nClass ParserChunkerSequenceValidator;\n// Cross validator for a Parser.\nClass ParserCrossValidator;\n// This implementation of Evaluator behaves like EVALB with no exceptions, e.g, without removing punctuation tags, or equality between ADVP and PRT, as in COLLINS convention.\nClass ParserEvaluator;\n// \nClass ParserFactory;\n// This is the default ParserModel implementation.\nClass ParserModel;\n// \nClass ParseSampleStream;\n// \nClass PosSampleStream;\n// Enumeration of event types for a Parser.\nEnum ParserEventTypeEnum;\n// Enumeration of supported Parser types.\nEnum ParserType;\n", "des": "Package containing common code for performing full syntactic parsing."}
{"index": 3537, "repo": "opennlp-tools-2.2.0", "code": "package chunking\n\n// Generates predictive contexts for deciding how constituents should be combined.\nClass BuildContextGenerator;\n// Generates predictive context for deciding when a constituent is complete.\nClass CheckContextGenerator;\n// A shift reduce style Parser implementation based on Adwait Ratnaparkhi's 1998 thesis.\nClass Parser;\n// Wrapper class for one of four shift-reduce parser event streams.\nClass ParserEventStream;\n", "des": "Package containing code for performing full syntactic parsing using shift/reduce-style decisions."}
{"index": 3538, "repo": "opennlp-tools-2.2.0", "code": "package treeinsert\n\n// Generates predictive contexts for deciding how constituents should be attached.\nClass AttachContextGenerator;\n// Creates the features or contexts for the building phase of parsing.\nClass BuildContextGenerator;\n// Generates predictive context for deciding when a constituent is complete.\nClass CheckContextGenerator;\n// A built-attach Parser implementation.\nClass Parser;\n// Wrapper class for one of four built-attach parser event streams.\nClass ParserEventStream;\n", "des": "Package containing experimental code for performing full syntactic parsing using attachment decisions."}
{"index": 3539, "repo": "opennlp-tools-2.2.0", "code": "package postag\n\n// Interface that allows TagDictionary entries to be added and removed.\nInterface MutableTagDictionary;\n// Interface for a BeamSearchContextGenerator used in POS tagging.\nInterface POSContextGenerator;\n// The interface for part of speech taggers.\nInterface POSTagger;\n// A marker interface for evaluating pos taggers.\nInterface POSTaggerEvaluationMonitor;\n// Interface to determine which tags are valid for a particular word based on a tag dictionary.\nInterface TagDictionary;\n// A configurable context generator for a POSTagger.\nClass ConfigurablePOSContextGenerator;\n// A default context generator for a POSTagger.\nClass DefaultPOSContextGenerator;\n// The default POS tagger SequenceValidator implementation.\nClass DefaultPOSSequenceValidator;\n// Provides a means of determining which tags are valid for a particular word based on a TagDictionary read from a file.\nClass POSDictionary;\n// The POSEvaluator measures the performance of the given POSTagger with the provided reference samples.\nClass POSEvaluator;\n// The POSModel is the model used by a learnable POSTagger.\nClass POSModel;\n// Represents an pos-tagged sentence.\nClass POSSample;\n// Reads the samples from an Iterator and converts those samples into events which can be used by the maxent library for training.\nClass POSSampleEventStream;\n// A SequenceStream implementation encapsulating samples.\nClass POSSampleSequenceStream;\n// \nClass POSTaggerCrossValidator;\n// The factory that provides POSTagger default implementations and resources.\nClass POSTaggerFactory;\n// \nClass POSTaggerFactory.POSDictionarySerializer;\n// A part-of-speech tagger that uses maximum entropy.\nClass POSTaggerME;\n// A stream filter which reads a sentence per line which contains words and tags in word_tag format and outputs a POSSample objects.\nClass WordTagSampleStream;\n", "des": "Package related to part-of-speech tagging."}
{"index": 3540, "repo": "opennlp-tools-2.2.0", "code": "package sentdetect\n\n// Scans CharSequence, StringBuffer, and char[] for the offsets of sentence ending characters.\nInterface EndOfSentenceScanner;\n// Interface for SentenceDetectorME context generators.\nInterface SDContextGenerator;\n// The interface for sentence detectors, which find the sentence boundaries in a text.\nInterface SentenceDetector;\n// \nInterface SentenceDetectorEvaluationMonitor;\n// Default implementation of the EndOfSentenceScanner.\nClass DefaultEndOfSentenceScanner;\n// Generate event contexts for maxent decisions for sentence detection.\nClass DefaultSDContextGenerator;\n// ObjectStream to clean up empty lines for empty line separated document streams. - Skips empty line at training data start - Transforms multiple empty lines in a row into one - Replaces white space lines with empty lines - TODO: Terminates last document with empty line if it is missing This stream should be used by the components that mark empty lines to mark document boundaries.\nClass EmptyLinePreprocessorStream;\n// The Newline SentenceDetector assumes that sentences are line delimited and recognizes one sentence per non-empty line.\nClass NewlineSentenceDetector;\n// A cross validator for sentence detectors.\nClass SDCrossValidator;\n// \nClass SDEventStream;\n// The SentenceDetectorEvaluator measures the performance of the given SentenceDetector with the provided reference SentenceSamples.\nClass SentenceDetectorEvaluator;\n// The factory that provides SentenceDetector default implementations and resources\nClass SentenceDetectorFactory;\n// A sentence detector for splitting up raw text into sentences.\nClass SentenceDetectorME;\n// The SentenceModel is the model used by a learnable SentenceDetector.\nClass SentenceModel;\n// A SentenceSample contains a document with begin indexes of the individual sentences.\nClass SentenceSample;\n// This class is a stream filter which reads a sentence by line samples from an ObjectStream and converts them into SentenceSample objects.\nClass SentenceSampleStream;\n", "des": "Package related to identifying sentence boundaries."}
{"index": 3541, "repo": "opennlp-tools-2.2.0", "code": "package th\n\n// Creates contexts/features for end-of-sentence detection in Thai text.\nClass SentenceContextGenerator;\n", "des": "Package related to the processing of Thai data."}
{"index": 3542, "repo": "opennlp-tools-2.2.0", "code": "package tokenize\n\n// A Detokenizer merges tokens back to their detokenized representation.\nInterface Detokenizer;\n// Interface for context generators required for TokenizerME.\nInterface TokenContextGenerator;\n// The interface for tokenizers, which segment a string into its tokens.\nInterface Tokenizer;\n// A marker interface for evaluating tokenizers.\nInterface TokenizerEvaluationMonitor;\n// A default TokenContextGenerator which produces events for maxent decisions for tokenization.\nClass DefaultTokenContextGenerator;\n// \nClass DetokenizationDictionary;\n// The DetokenizerEvaluator measures the performance of the given Detokenizer with the provided reference samples.\nClass DetokenizerEvaluator;\n// A rule based detokenizer.\nClass DictionaryDetokenizer;\n// A basic Tokenizer implementation which performs tokenization using character classes.\nClass SimpleTokenizer;\n// A cross validator for tokenizers.\nClass TokenizerCrossValidator;\n// The TokenizerEvaluator measures the performance of the given Tokenizer with the provided reference samples.\nClass TokenizerEvaluator;\n// The factory that provides Tokenizer default implementation and resources.\nClass TokenizerFactory;\n// A Tokenizer for converting raw text into separated tokens.\nClass TokenizerME;\n// The TokenizerModel is the model used by a learnable Tokenizer.\nClass TokenizerModel;\n// The TokenizerStream uses a Tokenizer to tokenize the input string and output samples.\nClass TokenizerStream;\n// A TokenSample is text with token spans.\nClass TokenSample;\n// This class is a stream filter which reads in string encoded samples and creates samples out of them.\nClass TokenSampleStream;\n// This class reads the samples via an Iterator and converts the samples into events which can be used by the maxent library for training.\nClass TokSpanEventStream;\n// A basic Tokenizer implementation which performs tokenization using white spaces.\nClass WhitespaceTokenizer;\n// This stream formats ObjectStream of samples into whitespace separated token strings.\nClass WhitespaceTokenStream;\n// A Tokenizer implementation which performs tokenization using word pieces.\nClass WordpieceTokenizer;\n// \nEnum DetokenizationDictionary.Operation;\n// This enum contains an operation for every token to merge the tokens together to their detokenized form.\nEnum Detokenizer.DetokenizationOperation;\n", "des": "Contains classes related to finding token or words in a string."}
{"index": 3543, "repo": "opennlp-tools-2.2.0", "code": "package util\n\n// Package containing extension loading code.\npackage util.ext\n// This package contains classes for generating sequence features.\npackage util.featuregen\n// Interface for context generators used with a sequence beam search.\nInterface BeamSearchContextGenerator<T>;\n// Allows repeated reads through a stream for certain model building types.\nInterface InputStreamFactory;\n// Reads objects from a stream.\nInterface ObjectStream<T>;\n// This interface makes an Iterator resettable.\nInterface ResetableIterator<E>;\n// A codec for sequences of type SequenceCodec.\nInterface SequenceCodec<T>;\n// \nInterface SequenceValidator<T>;\n// A base ObjectStream implementation for events.\nClass AbstractEventStream<T>;\n// A base ObjectStream implementation.\nClass AbstractObjectStream<T>;\n// Base class for all tool factories.\nClass BaseToolFactory;\n// Provides fixed size, pre-allocated, least recently used replacement cache.\nClass Cache<K,​V>;\n// An ObjectStream implementation that works on a Collection of CollectionObjectStream as source for elements.\nClass CollectionObjectStream<E>;\n// This class facilitates the downloading of pretrained OpenNLP models.\nClass DownloadUtil;\n// \nClass EventTraceStream;\n// Abstract base class for filtering streams.\nClass FilterObjectStream<S,​T>;\n// A factory that creates MarkableFileInputStream from a File\nClass MarkableFileInputStreamFactory;\n// This is a non-thread safe mutable int.\nClass MutableInt;\n// \nClass ObjectStreamUtils;\n// A FilterObjectStream which merges text lines into paragraphs.\nClass ParagraphStream;\n// Reads a plain text file and returns each line as a String object.\nClass PlainTextByLineStream;\n// An iterator for a list which returns values in the opposite order as the typical list iterator.\nClass ReverseListIterator<T>;\n// Represents a weighted sequence of outcomes.\nClass Sequence;\n// Class for storing start and end integer offsets.\nClass Span;\n// A StringList is an immutable list of Strings.\nClass StringList;\n// \nClass StringUtil;\n// \nClass TokenTag;\n// Declares and handles default parameters used for or during training models.\nClass TrainingParameters;\n", "des": "Package containing utility data structures and algorithms used by multiple other packages."}
{"index": 3544, "repo": "opennlp-tools-2.2.0", "code": "package ext\n\n// The ExtensionLoader is responsible to load extensions to the OpenNLP library.\nClass ExtensionLoader;\n// \nClass ExtensionServiceKeys;\n// Exception indicates that an OpenNLP extension could not be loaded.\nClass ExtensionNotLoadedException;\n", "des": "Package containing extension loading code."}
{"index": 3545, "repo": "opennlp-tools-2.2.0", "code": "package featuregen\n\n// An interface for generating features for name entity identification and for updating document level contexts.\nInterface AdaptiveFeatureGenerator;\n// \nInterface ArtifactToSerializerMapper;\n// The FeatureGeneratorResourceProvider provides access to the resources available in the model.\nInterface FeatureGeneratorResourceProvider;\n// The AdditionalContextFeatureGenerator generates the context from the passed in additional context.\nClass AdditionalContextFeatureGenerator;\n// The AggregatedFeatureGenerator aggregates a set of AdaptiveFeatureGenerators and calls them to generate the features.\nClass AggregatedFeatureGenerator;\n// \nClass AggregatedFeatureGeneratorFactory;\n// \nClass BigramNameFeatureGenerator;\n// \nClass BigramNameFeatureGeneratorFactory;\n// Generates Brown cluster features for token bigrams.\nClass BrownBigramFeatureGenerator;\n// Class to load a Brown cluster document: word\\tword_class\\tprob\nClass BrownCluster;\n// \nClass BrownCluster.BrownClusterSerializer;\n// Generates Brown clustering features for token bigrams.\nClass BrownClusterBigramFeatureGeneratorFactory;\n// Generates Brown clustering features for token classes.\nClass BrownClusterTokenClassFeatureGeneratorFactory;\n// Generates Brown clustering features for current token.\nClass BrownClusterTokenFeatureGeneratorFactory;\n// Obtain the paths listed in the pathLengths array from the Brown class.\nClass BrownTokenClasses;\n// Generates BrownCluster features for current token and token class.\nClass BrownTokenClassFeatureGenerator;\n// Generates BrownCluster features for current token.\nClass BrownTokenFeatureGenerator;\n// Caches features of the aggregated generators.\nClass CachedFeatureGenerator;\n// \nClass CachedFeatureGeneratorFactory;\n// The CharacterNgramFeatureGenerator uses character ngrams to generate features about each token.\nClass CharacterNgramFeatureGenerator;\n// \nClass CharacterNgramFeatureGeneratorFactory;\n// \nClass CustomFeatureGenerator;\n// \nClass DefinitionFeatureGeneratorFactory;\n// The DictionaryFeatureGenerator uses the DictionaryNameFinder to generated features for detected names based on the InSpanGenerator.\nClass DictionaryFeatureGenerator;\n// \nClass DictionaryFeatureGeneratorFactory;\n// \nClass DocumentBeginFeatureGenerator;\n// \nClass DocumentBeginFeatureGeneratorFactory;\n// This class provide common utilities for feature generation.\nClass FeatureGeneratorUtil;\n", "des": "This package contains classes for generating sequence features."}
{"index": 3546, "repo": "guava-32.1.1-jre", "code": "package annotations\n\n// Signifies that a public API (public class, method or field) is subject to incompatible changes, or even removal, in a future release.\nAnnotation Type Beta;\n// The presence of this annotation on a type indicates that the type may be used with the Google Web Toolkit (GWT).\nAnnotation Type GwtCompatible;\n// The presence of this annotation on an API indicates that the method may not be used with the Google Web Toolkit (GWT).\nAnnotation Type GwtIncompatible;\n// The presence of this annotation on an API indicates that the method may not be used with J2kt.\nAnnotation Type J2ktIncompatible;\n// Annotates a program element that exists, or is more widely visible than otherwise necessary, only for use in test code.\nAnnotation Type VisibleForTesting;\n", "des": "Annotation types."}
{"index": 3547, "repo": "guava-32.1.1-jre", "code": "package base\n\n// Implemented by references that have code to run after garbage collection of their referents.\nInterface FinalizableReference;\n// Legacy version of java.util.function.Function.\nInterface Function<F extends @Nullable java.lang.Object,​T extends @Nullable java.lang.Object>;\n// Legacy version of java.util.function.Predicate.\nInterface Predicate<T extends @Nullable java.lang.Object>;\n// Legacy version of java.util.function.Supplier.\nInterface Supplier<T extends @Nullable java.lang.Object>;\n// Static methods pertaining to ASCII characters (those in the range of values 0x00 through 0x7F), and to strings containing such characters.\nClass Ascii;\n// Determines a true or false value for any Java char value, just as Predicate does for any Object.\nClass CharMatcher;\n// Contains constant definitions for the six standard Charset instances, which are guaranteed to be supported by all Java platform implementations.\nClass Charsets;\n// A function from A to B with an associated reverse function from B to A; used for converting back and forth between different representations of the same information.\nClass Converter<A,​B>;\n// This class provides default values for all Java types, as defined by the JLS.\nClass Defaults;\n// Utility methods for working with Enum instances.\nClass Enums;\n// A strategy for determining whether two instances are considered equivalent, and for computing hash codes in a manner consistent with that equivalence.\nClass Equivalence<T>;\n// Wraps an object so that Equivalence.Wrapper.equals(Object) and Equivalence.Wrapper.hashCode() delegate to an Equivalence.\nClass Equivalence.Wrapper<T extends @Nullable java.lang.Object>;\n// Phantom reference with a finalizeReferent() method which a background thread invokes after the garbage collector reclaims the referent.\nClass FinalizablePhantomReference<T>;\n// A reference queue with an associated background thread that dequeues references and invokes FinalizableReference.finalizeReferent() on them.\nClass FinalizableReferenceQueue;\n// Soft reference with a finalizeReferent() method which a background thread invokes after the garbage collector reclaims the referent.\nClass FinalizableSoftReference<T>;\n", "des": "Basic utility libraries and interfaces."}
{"index": 3548, "repo": "guava-32.1.1-jre", "code": "package cache\n\n// Accumulates statistics during the operation of a Cache for presentation by Cache.stats().\nInterface AbstractCache.StatsCounter;\n// A semi-persistent mapping from keys to values.\nInterface Cache<K,​V>;\n// A semi-persistent mapping from keys to values.\nInterface LoadingCache<K,​V>;\n// An object that can receive a notification when an entry is removed from a cache.\nInterface RemovalListener<K,​V>;\n// Calculates the weights of cache entries.\nInterface Weigher<K,​V>;\n// This class provides a skeletal implementation of the Cache interface to minimize the effort required to implement this interface.\nClass AbstractCache<K,​V>;\n// A thread-safe AbstractCache.StatsCounter implementation for use by Cache implementors.\nClass AbstractCache.SimpleStatsCounter;\n// This class provides a skeletal implementation of the Cache interface to minimize the effort required to implement this interface.\nClass AbstractLoadingCache<K,​V>;\n// A builder of LoadingCache and Cache instances.\nClass CacheBuilder<K,​V>;\n// A specification of a CacheBuilder configuration.\nClass CacheBuilderSpec;\n// Computes or retrieves values, based on a key, for use in populating a LoadingCache.\nClass CacheLoader<K,​V>;\n// Statistics about the performance of a Cache.\nClass CacheStats;\n// A cache which forwards all its method calls to another cache.\nClass ForwardingCache<K,​V>;\n// A simplified version of ForwardingCache where subclasses can pass in an already constructed Cache as the delegate.\nClass ForwardingCache.SimpleForwardingCache<K,​V>;\n// A cache which forwards all its method calls to another cache.\nClass ForwardingLoadingCache<K,​V>;\n// A simplified version of ForwardingLoadingCache where subclasses can pass in an already constructed LoadingCache as the delegate.\nClass ForwardingLoadingCache.SimpleForwardingLoadingCache<K,​V>;\n// A collection of common removal listeners.\nClass RemovalListeners;\n", "des": "Discouraged (in favor of Caffeine) caching utilities."}
{"index": 3549, "repo": "guava-32.1.1-jre", "code": "package collect\n\n// A bimap (or \"bidirectional map\") is a map that preserves the uniqueness of its values as well as that of its keys.\nInterface BiMap<K extends @Nullable java.lang.Object,​V extends @Nullable java.lang.Object>;\n// A map, each entry of which maps a Java raw type to an instance of that type.\nInterface ClassToInstanceMap<B extends @Nullable java.lang.Object>;\n// Provides similar behavior to String.intern() for any immutable type.\nInterface Interner<E>;\n// A Multimap that can hold duplicate key-value pairs and that maintains the insertion ordering of values for a given key.\nInterface ListMultimap<K extends @Nullable java.lang.Object,​V extends @Nullable java.lang.Object>;\n// An object representing the differences between two maps.\nInterface MapDifference<K extends @Nullable java.lang.Object,​V extends @Nullable java.lang.Object>;\n// A difference between the mappings from two maps with the same key.\nInterface MapDifference.ValueDifference<V extends @Nullable java.lang.Object>;\n// A transformation of the value of a key-value pair, using both key and value as inputs.\nInterface Maps.EntryTransformer<K extends @Nullable java.lang.Object,​V1 extends @Nullable java.lang.Object,​V2 extends @Nullable java.lang.Object>;\n// A collection that maps keys to values, similar to Map, but in which each key may be associated with multiple values.\nInterface Multimap<K extends @Nullable java.lang.Object,​V extends @Nullable java.lang.Object>;\n// A collection that supports order-independent equality, like Set, but may have duplicate elements.\nInterface Multiset<E extends @Nullable java.lang.Object>;\n// An unmodifiable element-count pair for a multiset.\nInterface Multiset.Entry<E extends @Nullable java.lang.Object>;\n// An iterator that supports a one-element lookahead while iterating.\nInterface PeekingIterator<E extends @Nullable java.lang.Object>;\n", "des": "Collection interfaces and implementations, and other utilities for collections."}
{"index": 3550, "repo": "guava-32.1.1-jre", "code": "package escape\n\n// A CharEscaper that uses an array to quickly look up replacement characters for a given char value.\nClass ArrayBasedCharEscaper;\n// An implementation-specific parameter class suitable for initializing ArrayBasedCharEscaper or ArrayBasedUnicodeEscaper instances.\nClass ArrayBasedEscaperMap;\n// A UnicodeEscaper that uses an array to quickly look up replacement characters for a given code point.\nClass ArrayBasedUnicodeEscaper;\n// An object that converts literal text into a format safe for inclusion in a particular context (such as an XML document).\nClass CharEscaper;\n// Simple helper class to build a \"sparse\" array of objects based on the indexes that were added to it.\nClass CharEscaperBuilder;\n// An object that converts literal text into a format safe for inclusion in a particular context (such as an XML document).\nClass Escaper;\n// Static utility methods pertaining to Escaper instances.\nClass Escapers;\n// A builder for simple, fast escapers.\nClass Escapers.Builder;\n// An Escaper that converts literal text into a format safe for inclusion in a particular context (such as an XML document).\nClass UnicodeEscaper;\n", "des": "Interfaces, utilities, and simple implementations of escapers and encoders."}
{"index": 3551, "repo": "guava-32.1.1-jre", "code": "package eventbus\n\n// Handler for exceptions thrown by event subscribers.\nInterface SubscriberExceptionHandler;\n// An EventBus that takes the Executor of your choice and uses it to dispatch events, allowing dispatch to occur asynchronously.\nClass AsyncEventBus;\n// Wraps an event that was posted, but which had no subscribers and thus could not be delivered.\nClass DeadEvent;\n// Dispatches events to listeners, and provides ways for listeners to register themselves.\nClass EventBus;\n// Context for an exception thrown by a subscriber.\nClass SubscriberExceptionContext;\n// Marks an event subscriber method as being thread-safe.\nAnnotation Type AllowConcurrentEvents;\n// Marks a method as an event subscriber.\nAnnotation Type Subscribe;\n", "des": "Discouraged in favor of dependency injection and concurrency frameworks, EventBus allows publish-subscribe-style communication."}
{"index": 3552, "repo": "guava-32.1.1-jre", "code": "package graph\n\n// An interface for graph-structured data, whose edges are anonymous entities with no identity or information of their own.\nInterface Graph<N>;\n// A subinterface of Graph which adds mutation methods.\nInterface MutableGraph<N>;\n// A subinterface of Network which adds mutation methods.\nInterface MutableNetwork<N,​E>;\n// A subinterface of ValueGraph which adds mutation methods.\nInterface MutableValueGraph<N,​V>;\n// An interface for graph-structured data, whose edges are unique objects.\nInterface Network<N,​E>;\n// A functional interface for graph-structured data.\nInterface PredecessorsFunction<N>;\n// A functional interface for graph-structured data.\nInterface SuccessorsFunction<N>;\n// An interface for graph-structured data, whose edges have associated non-unique values.\nInterface ValueGraph<N,​V>;\n// This class provides a skeletal implementation of Graph.\nClass AbstractGraph<N>;\n// This class provides a skeletal implementation of Network.\nClass AbstractNetwork<N,​E>;\n// This class provides a skeletal implementation of ValueGraph.\nClass AbstractValueGraph<N,​V>;\n// Used to represent the order of elements in a data structure that supports different options for iteration order guarantees.\nClass ElementOrder<T>;\n// An immutable pair representing the two endpoints of an edge in a graph.\nClass EndpointPair<N>;\n// A builder for constructing instances of MutableGraph or ImmutableGraph with user-defined properties.\nClass GraphBuilder<N>;\n// Static utility methods for Graph, ValueGraph, and Network instances.\nClass Graphs;\n// A Graph whose elements and structural relationships will never change.\nClass ImmutableGraph<N>;\n// A builder for creating ImmutableGraph instances, especially static final graphs.\nClass ImmutableGraph.Builder<N>;\n// A Network whose elements and structural relationships will never change.\nClass ImmutableNetwork<N,​E>;\n// A builder for creating ImmutableNetwork instances, especially static final networks.\nClass ImmutableNetwork.Builder<N,​E>;\n", "des": "An API for representing graph (node and edge) data."}
{"index": 3553, "repo": "guava-32.1.1-jre", "code": "package hash\n\n// An object which can send data from an object of type T into a PrimitiveSink.\nInterface Funnel<T extends @Nullable java.lang.Object>;\n// A PrimitiveSink that can compute a hash code after reading the input.\nInterface Hasher;\n// A hash function is a collision-averse pure function that maps an arbitrary block of data to a number called a hash code.\nInterface HashFunction;\n// An object which can receive a stream of primitive values.\nInterface PrimitiveSink;\n// A Bloom filter for instances of T.\nClass BloomFilter<T extends @Nullable java.lang.Object>;\n// Funnels for common types.\nClass Funnels;\n// An immutable hash code of arbitrary bit length.\nClass HashCode;\n// Static methods to obtain HashFunction instances, and other static hashing-related utilities.\nClass Hashing;\n// An InputStream that maintains a hash of the data read from it.\nClass HashingInputStream;\n// An OutputStream that maintains a hash of the data written to it.\nClass HashingOutputStream;\n", "des": "Hash functions and related structures."}
{"index": 3554, "repo": "guava-32.1.1-jre", "code": "package html\n\n// Escaper instances suitable for strings to be included in HTML attribute values and most elements' text contents.\nClass HtmlEscapers;\n", "des": "Escapers for HTML."}
{"index": 3555, "repo": "guava-32.1.1-jre", "code": "package io\n\n// An extension of DataInput for reading from in-memory byte arrays; its methods offer identical functionality but do not throw IOException.\nInterface ByteArrayDataInput;\n// An extension of DataOutput for writing to in-memory byte arrays; its methods offer identical functionality but do not throw IOException.\nInterface ByteArrayDataOutput;\n// A callback interface to process bytes from a stream.\nInterface ByteProcessor<T extends @Nullable java.lang.Object>;\n// A callback to be used with the streaming readLines methods.\nInterface LineProcessor<T extends @Nullable java.lang.Object>;\n// A binary encoding scheme for reversibly translating between byte sequences and printable ASCII strings.\nClass BaseEncoding;\n// A destination to which bytes can be written, such as a file.\nClass ByteSink;\n// A readable source of bytes, such as a file.\nClass ByteSource;\n// Provides utility methods for working with byte arrays and I/O streams.\nClass ByteStreams;\n// A destination to which characters can be written, such as a text file.\nClass CharSink;\n// A readable source of characters, such as a text file.\nClass CharSource;\n// Provides utility methods for working with character streams.\nClass CharStreams;\n// Utility methods for working with Closeable objects.\nClass Closeables;\n// A Closeable that collects Closeable resources and closes them all when it is closed.\nClass Closer;\n// An InputStream that counts the number of bytes read.\nClass CountingInputStream;\n// An OutputStream that counts the number of bytes written.\nClass CountingOutputStream;\n// An OutputStream that starts buffering to a byte array, but switches to file buffering once the data reaches a configurable size.\nClass FileBackedOutputStream;\n// Provides utility methods for working with files.\nClass Files;\n// Utility methods for working with Flushable objects.\nClass Flushables;\n// A class for reading lines of text.\nClass LineReader;\n// An implementation of DataInput that uses little-endian byte ordering for reading short, int, float, double, and long values.\nClass LittleEndianDataInputStream;\n// An implementation of DataOutput that uses little-endian byte ordering for writing char, short, int, float, double, and long values.\nClass LittleEndianDataOutputStream;\n// Static utilities for use with Path instances, intended to complement Files.\nClass MoreFiles;\n", "des": "Utility methods and classes for I/O; for example input streams, output streams, readers, writers, and files."}
{"index": 3556, "repo": "guava-32.1.1-jre", "code": "package math\n\n// A class for arithmetic on BigDecimal that is not covered by its built-in methods.\nClass BigDecimalMath;\n// A class for arithmetic on values of type BigInteger.\nClass BigIntegerMath;\n// A class for arithmetic on doubles that is not covered by Math.\nClass DoubleMath;\n// A class for arithmetic on values of type int.\nClass IntMath;\n// The representation of a linear transformation between real numbers x and y.\nClass LinearTransformation;\n// This is an intermediate stage in the construction process.\nClass LinearTransformation.LinearTransformationBuilder;\n// A class for arithmetic on values of type long.\nClass LongMath;\n// An immutable value object capturing some basic statistics about a collection of paired double values (e.g.\nClass PairedStats;\n// A mutable object which accumulates paired double values (e.g.\nClass PairedStatsAccumulator;\n// Provides a fluent API for calculating quantiles.\nClass Quantiles;\n// Describes the point in a fluent API chain where only the scale (i.e.\nClass Quantiles.Scale;\n// Describes the point in a fluent API chain where the scale and a single quantile index (i.e.\nClass Quantiles.ScaleAndIndex;\n// Describes the point in a fluent API chain where the scale and a multiple quantile indexes (i.e.\nClass Quantiles.ScaleAndIndexes;\n// A bundle of statistical summary values -- sum, count, mean/average, min and max, and several forms of variance -- that were computed from a single set of zero or more floating-point values.\nClass Stats;\n// A mutable object which accumulates double values and tracks some basic statistics over all the values added so far.\nClass StatsAccumulator;\n", "des": "Arithmetic functions operating on primitive values and on BigInteger and BigDecimal instances."}
{"index": 3557, "repo": "guava-32.1.1-jre", "code": "package net\n\n// An immutable representation of a host and port.\nClass HostAndPort;\n// A syntactically valid host specifier, suitable for use in a URI.\nClass HostSpecifier;\n// Contains constant definitions for the HTTP header field names.\nClass HttpHeaders;\n// Values for the Referrer-Policy header.\nClass HttpHeaders.ReferrerPolicyValues;\n// Static utility methods pertaining to InetAddress instances.\nClass InetAddresses;\n// A simple immutable data class to encapsulate the information to be found in a Teredo address.\nClass InetAddresses.TeredoInfo;\n// An immutable well-formed internet domain name, such as com or foo.co.uk.\nClass InternetDomainName;\n// Represents an Internet Media Type (also known as a MIME Type or Content Type).\nClass MediaType;\n// A UnicodeEscaper that escapes some set of Java characters using a UTF-8 based percent encoding scheme.\nClass PercentEscaper;\n// Escaper instances suitable for strings to be included in particular sections of URLs.\nClass UrlEscapers;\n", "des": "Utility methods and classes for networking (such as IP addresses and domain names)."}
{"index": 3558, "repo": "guava-32.1.1-jre", "code": "package primitives\n\n// Static utility methods pertaining to boolean primitives, that are not already found in either Boolean or Arrays.\nClass Booleans;\n// Static utility methods pertaining to byte primitives, that are not already found in either Byte or Arrays, and interpret bytes as neither signed nor unsigned.\nClass Bytes;\n// Static utility methods pertaining to char primitives, that are not already found in either Character or Arrays.\nClass Chars;\n// Static utility methods pertaining to double primitives, that are not already found in either Double or Arrays.\nClass Doubles;\n// Static utility methods pertaining to float primitives, that are not already found in either Float or Arrays.\nClass Floats;\n// An immutable array of double values, with an API resembling List.\nClass ImmutableDoubleArray;\n// A builder for ImmutableDoubleArray instances; obtained using ImmutableDoubleArray.builder(int).\nClass ImmutableDoubleArray.Builder;\n// An immutable array of int values, with an API resembling List.\nClass ImmutableIntArray;\n// A builder for ImmutableIntArray instances; obtained using ImmutableIntArray.builder(int).\nClass ImmutableIntArray.Builder;\n// An immutable array of long values, with an API resembling List.\nClass ImmutableLongArray;\n// A builder for ImmutableLongArray instances; obtained using ImmutableLongArray.builder(int).\nClass ImmutableLongArray.Builder;\n// Static utility methods pertaining to int primitives, that are not already found in either Integer or Arrays.\nClass Ints;\n// Static utility methods pertaining to long primitives, that are not already found in either Long or Arrays.\nClass Longs;\n// Contains static utility methods pertaining to primitive types and their corresponding wrapper types.\nClass Primitives;\n// Static utility methods pertaining to short primitives, that are not already found in either Short or Arrays.\nClass Shorts;\n// Static utility methods pertaining to byte primitives that interpret values as signed.\nClass SignedBytes;\n// Static utility methods pertaining to byte primitives that interpret values as unsigned (that is, any negative value b is treated as the positive value 256 + b).\nClass UnsignedBytes;\n// A wrapper class for unsigned int values, supporting arithmetic operations.\nClass UnsignedInteger;\n", "des": "Static utilities for the eight primitive types and void, and value types for treating them as unsigned or storing them in immutable arrays."}
{"index": 3559, "repo": "guava-32.1.1-jre", "code": "package reflect\n\n// A map, each entry of which maps a TypeToken to an instance of that type.\nInterface TypeToInstanceMap<B extends @Nullable java.lang.Object>;\n// Abstract implementation of InvocationHandler that handles Object.equals(java.lang.Object), Object.hashCode() and Object.toString().\nClass AbstractInvocationHandler;\n// Scans the source of a ClassLoader and finds all loadable classes and resources.\nClass ClassPath;\n// Represents a class that can be loaded through ClassPath.ClassInfo.load().\nClass ClassPath.ClassInfo;\n// Represents a class path resource that can be either a class file or any other resource file loadable from the class path.\nClass ClassPath.ResourceInfo;\n// A type-to-instance map backed by an ImmutableMap.\nClass ImmutableTypeToInstanceMap<B>;\n// A builder for creating immutable type-to-instance maps.\nClass ImmutableTypeToInstanceMap.Builder<B>;\n// Wrapper around either a Method or a Constructor.\nClass Invokable<T,​R>;\n// A mutable type-to-instance map.\nClass MutableTypeToInstanceMap<B extends @Nullable java.lang.Object>;\n// Represents a method or constructor parameter.\nClass Parameter;\n// Static utilities relating to Java reflection.\nClass Reflection;\n// Captures a free type variable that can be used in TypeToken.where(com.google.common.reflect.TypeParameter<X>, com.google.common.reflect.TypeToken<X>).\nClass TypeParameter<T>;\n// An object of this class encapsulates type mappings from type variables.\nClass TypeResolver;\n// A Type with generics.\nClass TypeToken<T>;\n", "des": "Utilities for reflection."}
{"index": 3560, "repo": "guava-32.1.1-jre", "code": "package concurrent\n\n// Computes a value, possibly asynchronously.\nInterface AsyncCallable<V extends @Nullable java.lang.Object>;\n// Transforms a value, possibly asynchronously.\nInterface AsyncFunction<I extends @Nullable java.lang.Object,​O extends @Nullable java.lang.Object>;\n// An operation that computes a ClosingFuture of a result.\nInterface ClosingFuture.AsyncClosingCallable<V extends @Nullable java.lang.Object>;\n// A function from an input to a ClosingFuture of a result.\nInterface ClosingFuture.AsyncClosingFunction<T extends @Nullable java.lang.Object,​U extends @Nullable java.lang.Object>;\n// An operation that computes a result.\nInterface ClosingFuture.ClosingCallable<V extends @Nullable java.lang.Object>;\n// A function from an input to a result.\nInterface ClosingFuture.ClosingFunction<T extends @Nullable java.lang.Object,​U extends @Nullable java.lang.Object>;\n// An operation that returns a ClosingFuture result and may throw an exception.\nInterface ClosingFuture.Combiner.AsyncCombiningCallable<V extends @Nullable java.lang.Object>;\n// An operation that returns a result and may throw an exception.\nInterface ClosingFuture.Combiner.CombiningCallable<V extends @Nullable java.lang.Object>;\n// A function that returns a ClosingFuture when applied to the values of the two futures passed to ClosingFuture.whenAllSucceed(ClosingFuture, ClosingFuture).\nInterface ClosingFuture.Combiner2.AsyncClosingFunction2<V1 extends @Nullable java.lang.Object,​V2 extends @Nullable java.lang.Object,​U extends @Nullable java.lang.Object>;\n// A function that returns a value when applied to the values of the two futures passed to ClosingFuture.whenAllSucceed(ClosingFuture, ClosingFuture).\nInterface ClosingFuture.Combiner2.ClosingFunction2<V1 extends @Nullable java.lang.Object,​V2 extends @Nullable java.lang.Object,​U extends @Nullable java.lang.Object>;\n", "des": "Concurrency utilities."}
{"index": 3561, "repo": "guava-32.1.1-jre", "code": "package xml\n\n// Escaper instances suitable for strings to be included in XML attribute values and elements' text contents.\nClass XmlEscapers;\n", "des": "Escapers for XML."}
{"index": 3562, "repo": "lucene-codecs-9.7.0", "code": "package blockterms\n\n// Handles a terms dict, but decouples all details of doc/freqs/positions reading to an instance of PostingsReaderBase.\nClass BlockTermsReader;\n// Writes terms dict, block-encoding (column stride) each term's metadata for each set of terms between two index terms.\nClass BlockTermsWriter;\n// TermsIndexReader for simple every Nth terms indexes.\nClass FixedGapTermsIndexReader;\n// Selects every Nth term as and index term, and hold term bytes (mostly) fully expanded in memory.\nClass FixedGapTermsIndexWriter;\n// BlockTermsReader interacts with an instance of this class to manage its terms index.\nClass TermsIndexReaderBase;\n// Similar to TermsEnum, except, the only \"metadata\" it reports for a given indexed term is the long fileOffset into the main terms dictionary file.\nClass TermsIndexReaderBase.FieldIndexEnum;\n// Base class for terms index implementations to plug into BlockTermsWriter.\nClass TermsIndexWriterBase;\n// See VariableGapTermsIndexWriter\nClass VariableGapTermsIndexReader;\n// Selects index terms according to provided pluggable VariableGapTermsIndexWriter.IndexTermSelector, and stores them in a prefix trie that's loaded entirely in RAM stored as an FST.\nClass VariableGapTermsIndexWriter;\n// Sets an index term when docFreq >= docFreqThresh, or every interval terms.\nClass VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector;\n// Same policy as FixedGapTermsIndexWriter\nClass VariableGapTermsIndexWriter.EveryNTermSelector;\n// Hook for selecting which terms should be placed in the terms index.\nClass VariableGapTermsIndexWriter.IndexTermSelector;\n", "des": "Pluggable term index / block terms dictionary implementations."}
{"index": 3563, "repo": "lucene-codecs-9.7.0", "code": "package blocktreeords\n\n// Uses OrdsBlockTreeTermsWriter with Lucene90PostingsWriter.\nClass BlockTreeOrdsPostingsFormat;\n// See OrdsBlockTreeTermsWriter.\nClass OrdsBlockTreeTermsReader;\n// This is just like Lucene90BlockTreeTermsWriter, except it also stores a version per term, and adds a method to its TermsEnum implementation to seekExact only if the version is >= the specified version.\nClass OrdsBlockTreeTermsWriter;\n// Iterates through terms in this field.\nClass OrdsSegmentTermsEnum;\n", "des": "Same postings format as Lucene50, except the terms dictionary also supports ords, i.e."}
{"index": 3564, "repo": "lucene-codecs-9.7.0", "code": "package bloom\n\n// Class used to create index-time FuzzySet appropriately configured for each field.\nClass BloomFilterFactory;\n// A PostingsFormat useful for low doc-frequency fields such as primary keys.\nClass BloomFilteringPostingsFormat;\n// Default policy is to allocate a bitset with 10% saturation given a unique term per document.\nClass DefaultBloomFilterFactory;\n// A class used to represent a set of many, potentially large, values (e.g.\nClass FuzzySet;\n// Base class for hashing functions that can be referred to by name.\nClass HashFunction;\n// This is a very fast, non-cryptographic hash suitable for general hash-based lookup.\nClass MurmurHash64;\n// Result from FuzzySet.contains(BytesRef): can never return definitively YES (always MAYBE), but can sometimes definitely return NO.\nEnum FuzzySet.ContainsResult;\n", "des": "Codec PostingsFormat for fast access to low-frequency terms such as primary key fields."}
{"index": 3565, "repo": "lucene-codecs-9.7.0", "code": "package memory\n\n// Wraps Lucene90PostingsFormat format for on-disk storage, but then at read time loads and stores all terms and postings directly in RAM as byte[], int[].\nClass DirectPostingsFormat;\n// FST term dict + Lucene50PBF\nClass FSTPostingsFormat;\n// FST-based terms dictionary reader.\nClass FSTTermsReader;\n// FST-based term dict, using metadata as FST output.\nClass FSTTermsWriter;\n", "des": "Term dictionary, DocValues or Postings formats that are read entirely into memory."}
{"index": 3566, "repo": "lucene-codecs-9.7.0", "code": "package simpletext\n\n// plain text index format.\nClass SimpleTextCodec;\n// plain text compound format.\nClass SimpleTextCompoundFormat;\n// plaintext field infos format\nClass SimpleTextFieldInfosFormat;\n// For debugging, curiosity, transparency only!! Do not use this codec in production.\nClass SimpleTextKnnVectorsFormat;\n// Reads vector values from a simple text format.\nClass SimpleTextKnnVectorsReader;\n// Writes vector-valued fields in a plain text format\nClass SimpleTextKnnVectorsWriter;\n// reads/writes plaintext live docs\nClass SimpleTextLiveDocsFormat;\n// plain-text norms format.\nClass SimpleTextNormsFormat;\n// Writes plain-text norms.\nClass SimpleTextNormsFormat.SimpleTextNormsConsumer;\n// Reads plain-text norms.\nClass SimpleTextNormsFormat.SimpleTextNormsProducer;\n// For debugging, curiosity, transparency only!! Do not use this codec in production.\nClass SimpleTextPointsFormat;\n// plain text segments file format.\nClass SimpleTextSegmentInfoFormat;\n// plain text stored fields format.\nClass SimpleTextStoredFieldsFormat;\n// reads plaintext stored fields\nClass SimpleTextStoredFieldsReader;\n// Writes plain-text stored fields.\nClass SimpleTextStoredFieldsWriter;\n// plain text term vectors format.\nClass SimpleTextTermVectorsFormat;\n// Reads plain-text term vectors.\nClass SimpleTextTermVectorsReader;\n// Writes plain-text term vectors.\nClass SimpleTextTermVectorsWriter;\n", "des": "Simpletext Codec: writes human readable postings."}
{"index": 3567, "repo": "lucene-codecs-9.7.0", "code": "package uniformsplit\n\n// Pluggable term index / block terms dictionary implementations.\npackage uniformsplit.sharedterms\n// Decodes the raw bytes of a block when the index is read, according to the BlockEncoder used during the writing of the index.\nInterface BlockDecoder;\n// Encodes the raw bytes of a block when the index is written.\nInterface BlockEncoder;\n// Writable byte buffer.\nInterface BlockEncoder.WritableBytes;\n// Immutable stateless index dictionary kept in RAM.\nInterface IndexDictionary;\n// Stateful IndexDictionary.Browser to seek a term in this IndexDictionary and get its corresponding block file pointer in the block file.\nInterface IndexDictionary.Browser;\n// Supplier for a new stateful IndexDictionary.Browser created on the immutable IndexDictionary.\nInterface IndexDictionary.BrowserSupplier;\n// Builds an immutable IndexDictionary.\nInterface IndexDictionary.Builder;\n// Block header containing block metadata.\nClass BlockHeader;\n// Reads/writes block header.\nClass BlockHeader.Serializer;\n// One term block line.\nClass BlockLine;\n// Reads/writes block lines with terms encoded incrementally inside a block.\nClass BlockLine.Serializer;\n// Seeks the block corresponding to a given term, read the block bytes, and scans the block terms.\nClass BlockReader;\n// Writes blocks in the block file.\nClass BlockWriter;\n// TermState serializer which encodes each file pointer as a delta relative to a base file pointer.\nClass DeltaBaseTermStateSerializer;\n// Metadata and stats for one field in the index.\nClass FieldMetadata;\n// Reads/writes field metadata.\nClass FieldMetadata.Serializer;\n// Immutable stateless FST-based index dictionary kept in memory.\nClass FSTDictionary;\n// Provides stateful FSTDictionary.Browser to seek in the FSTDictionary.\nClass FSTDictionary.BrowserSupplier;\n// Builds an immutable FSTDictionary.\nClass FSTDictionary.Builder;\n// The \"intersect\" TermsEnum response to UniformSplitTerms.intersect(CompiledAutomaton, BytesRef), intersecting the terms with an automaton.\nClass IntersectBlockReader;\n// Utility methods to estimate the RAM usage of objects.\nClass RamUsageUtil;\n// Term of a block line.\nClass TermBytes;\n", "des": "Pluggable term index / block terms dictionary implementations."}
{"index": 3568, "repo": "lucene-codecs-9.7.0", "code": "package sharedterms\n\n// Pair of FieldMetadata and BlockTermState for a specific field.\nClass FieldMetadataTermState;\n// Represents a term and its details stored in the BlockTermState.\nClass STBlockLine;\n// Reads block lines encoded incrementally, with all fields corresponding to the term of the line.\nClass STBlockLine.Serializer;\n// Reads terms blocks with the Shared Terms format.\nClass STBlockReader;\n// Writes terms blocks with the Shared Terms format.\nClass STBlockWriter;\n// The \"intersect\" TermsEnum response to STUniformSplitTerms.intersect(CompiledAutomaton, BytesRef), intersecting the terms with an automaton.\nClass STIntersectBlockReader;\n// TermsEnum used when merging segments, to enumerate the terms of an input segment and get all the fields TermStates of each term.\nClass STMergingBlockReader;\n// PostingsFormat based on the Uniform Split technique and supporting Shared Terms.\nClass STUniformSplitPostingsFormat;\n// Extends UniformSplitTerms for a shared-terms dictionary, with all the fields of a term in the same block line.\nClass STUniformSplitTerms;\n// A block-based terms index and dictionary based on the Uniform Split technique, and sharing all the fields terms in the same dictionary, with all the fields of a term in the same block line.\nClass STUniformSplitTermsReader;\n// Extends UniformSplitTermsWriter by sharing all the fields terms in the same dictionary and by writing all the fields of a term in the same block line.\nClass STUniformSplitTermsWriter;\n// Builds a FieldMetadata that is the union of multiple FieldMetadata.\nClass UnionFieldMetadataBuilder;\n", "des": "Pluggable term index / block terms dictionary implementations."}
{"index": 3569, "repo": "lucene-sandbox-9.7.0", "code": "package payloads\n\n// SpanCollector for collecting payloads\nClass PayloadSpanCollector;\n// Experimental class to get set of payloads for most standard Lucene queries.\nClass PayloadSpanUtil;\n", "des": "Experimental classes for interacting with payloads"}
{"index": 3570, "repo": "lucene-sandbox-9.7.0", "code": "package idversion\n\n// A PostingsFormat optimized for primary-key (ID) fields that also record a version (long) for each ID, delivered as a payload created by IDVersionPostingsFormat.longToBytes(long, org.apache.lucene.util.BytesRef) during indexing.\nClass IDVersionPostingsFormat;\n// Iterates through terms in this field; this class is public so users can cast it to call IDVersionSegmentTermsEnum.seekExact(BytesRef, long) for optimistic-concurrency, and also IDVersionSegmentTermsEnum.getVersion() to get the version of the currently seek'd term.\nClass IDVersionSegmentTermsEnum;\n// See VersionBlockTreeTermsWriter.\nClass VersionBlockTreeTermsReader;\n// This is just like Lucene90BlockTreeTermsWriter, except it also stores a version per term, and adds a method to its TermsEnum implementation to seekExact only if the version is >= the specified version.\nClass VersionBlockTreeTermsWriter;\n", "des": "A primary-key postings format that associates a version (long) with each term and can provide fail-fast lookups by ID and version."}
{"index": 3571, "repo": "lucene-sandbox-9.7.0", "code": "package document\n\n// An indexed 128-bit BigInteger field.\nClass BigIntegerPoint;\n// Builder for multi range queries for DoublePoints\nClass DoublePointMultiRangeBuilder;\n// Builder for multi range queries for FloatPoints\nClass FloatPointMultiRangeBuilder;\n// KNN search on top of N dimensional indexed float points.\nClass FloatPointNearestNeighbor;\n// An indexed half-float field for fast range filters.\nClass HalfFloatPoint;\n// Builder for multi range queries for IntPoints\nClass IntPointMultiRangeBuilder;\n// An indexed 2-Dimension Bounding Box field for the Geospatial Lat/Lon Coordinate system\nClass LatLonBoundingBox;\n// Builder for multi range queries for LongPoints\nClass LongPointMultiRangeBuilder;\n", "des": "This package contains several point types: BigIntegerPoint for 128-bit integers LatLonPoint for latitude/longitude geospatial points"}
{"index": 3572, "repo": "lucene-sandbox-9.7.0", "code": "package index\n\n// A simple extension to wrap MergePolicy to merge all tiny segments (or at least segments smaller than specified in MergeOnFlushMergePolicy.setSmallSegmentThresholdMB(double) into one segment on commit.\nClass MergeOnFlushMergePolicy;\n", "des": "Experimental index-related classes"}
{"index": 3573, "repo": "lucene-sandbox-9.7.0", "code": "package queries\n\n// Fuzzifies ALL terms provided as strings and then picks the best n differentiating terms.\nClass FuzzyLikeThisQuery;\n", "des": "Additional queries (some may have caveats or limitations)"}
{"index": 3574, "repo": "lucene-sandbox-9.7.0", "code": "package search\n\n// A Query that treats multiple fields as a single stream and scores terms as if you had indexed them as a single term in a single field.\nClass CombinedFieldQuery;\n// A builder for CombinedFieldQuery.\nClass CombinedFieldQuery.Builder;\n// A Query that allows to have a configurable number or required matches per document.\nClass CoveringQuery;\n// Optimized collector for large number of hits.\nClass LargeNumHitsTopDocsCollector;\n// Holder class for prototype sandboxed queries\nClass LatLonPointPrototypeQueries;\n// Abstract class for range queries involving multiple ranges against physical points such as IntPoints All ranges are logically ORed together\nClass MultiRangeQuery;\n// A builder for multirange queries.\nClass MultiRangeQuery.Builder;\n// Representation of a single clause in a MultiRangeQuery\nClass MultiRangeQuery.RangeClause;\n// A generalized version of PhraseQuery, built with one or more MultiTermQuery that provides term expansions for multi-terms (one of the expanded terms must match).\nClass PhraseWildcardQuery;\n// Builds a PhraseWildcardQuery.\nClass PhraseWildcardQuery.Builder;\n// Phrase term with expansions.\nClass PhraseWildcardQuery.MultiTerm;\n// All PhraseWildcardQuery.PhraseTerm are light and immutable.\nClass PhraseWildcardQuery.PhraseTerm;\n// Phrase term with no expansion.\nClass PhraseWildcardQuery.SingleTerm;\n// Holds a pair of term bytes - term state.\nClass PhraseWildcardQuery.TermBytesTermState;\n// Holds the TermState for all the collected Term, for a specific phrase term, for all segments.\nClass PhraseWildcardQuery.TermData;\n// Holds the TermState and TermStatistics for all the matched and collected Term, for all phrase terms, for all segments.\nClass PhraseWildcardQuery.TermsData;\n// Accumulates the doc freq and total term freq.\nClass PhraseWildcardQuery.TermStats;\n// Test counters incremented when assertions are enabled.\nClass PhraseWildcardQuery.TestCounters;\n// This class wraps a Collector and times the execution of: - setScorer() - collect() - doSetNextReader() - needsScores()\nClass ProfilerCollector;\n", "des": "This package contains a flexible graph-based proximity query, TermAutomatonQuery, and geospatial queries."}
{"index": 3575, "repo": "lucene-test-framework-9.7.0", "code": "package analysis\n\n// Classes to support StandardAnalyzer component testing.\npackage analysis.standard\n// Attribute that records if it was cleared or not.\nInterface BaseTokenStreamTestCase.CheckClearAttributesAttribute;\n// Base class for testing tokenstream factories.\nClass BaseTokenStreamFactoryTestCase;\n// Base class for all Lucene unit tests that use TokenStreams.\nClass BaseTokenStreamTestCase;\n// Attribute that records if it was cleared or not.\nClass BaseTokenStreamTestCase.CheckClearAttributesAttributeImpl;\n// TokenStream from a canned list of binary (BytesRef-based) tokens.\nClass CannedBinaryTokenStream;\n// Represents a binary token.\nClass CannedBinaryTokenStream.BinaryToken;\n// TokenStream from a canned list of Tokens.\nClass CannedTokenStream;\n// Base test class for testing Unicode collation.\nClass CollationTestBase;\n// Throws IOException from random Tokenstream methods.\nClass CrankyTokenFilter;\n// An abstract TokenFilter to make it easier to build graph token filters requiring some lookahead.\nClass LookaheadTokenFilter<T extends LookaheadTokenFilter.Position>;\n// Holds all state for a single position; subclass this to record other state at each position.\nClass LookaheadTokenFilter.Position;\n// Analyzer for testing\nClass MockAnalyzer;\n// Analyzer for testing that encodes terms as UTF-16 bytes.\nClass MockBytesAnalyzer;\n// the purpose of this charfilter is to send offsets out of bounds if the analyzer doesn't use correctOffset or does incorrect offset math.\nClass MockCharFilter;\n// TokenFilter that adds random fixed-length payloads.\nClass MockFixedLengthPayloadFilter;\n// Randomly inserts overlapped (posInc=0) tokens with posLength sometimes > 1.\nClass MockGraphTokenFilter;\n// Randomly injects holes (similar to what a stopfilter would do)\nClass MockHoleInjectingTokenFilter;\n// A lowercasing TokenFilter.\nClass MockLowerCaseFilter;\n// Wraps a whitespace tokenizer with a filter that sets the first token, and odd tokens to posinc=1, and all others to 0, encoding the position as pos: XXX in the payload.\nClass MockPayloadAnalyzer;\n// Uses LookaheadTokenFilter to randomly peek at future tokens.\nClass MockRandomLookaheadTokenFilter;\n", "des": "Support for testing analysis components."}
{"index": 3576, "repo": "lucene-test-framework-9.7.0", "code": "package standard\n\n// This class was automatically generated by generateEmojiTokenizationTest.pl.\nClass EmojiTokenizationTestUnicode_12_1;\n// This class was automatically generated by generateJavaUnicodeWordBreakTest.pl from: http://www.unicode.org/Public/12.1.0/ucd/auxiliary/WordBreakTest.txt\nClass WordBreakTestUnicode_12_1_0;\n", "des": "Classes to support StandardAnalyzer component testing."}
{"index": 3577, "repo": "lucene-test-framework-9.7.0", "code": "package asserting\n\n// Acts like the default codec but with additional asserts.\nClass AssertingCodec;\n// Just like the default but with additional asserts.\nClass AssertingDocValuesFormat;\n// Wraps the default KnnVectorsFormat and provides additional assertions.\nClass AssertingKnnVectorsFormat;\n// Just like the default live docs format but with additional asserts.\nClass AssertingLiveDocsFormat;\n// Just like the default but with additional asserts.\nClass AssertingNormsFormat;\n// Just like the default point format but with additional asserts.\nClass AssertingPointsFormat;\n// Just like the default postings format but with additional asserts.\nClass AssertingPostingsFormat;\n// Just like the default stored fields format but with additional asserts.\nClass AssertingStoredFieldsFormat;\n// Just like the default vectors format but with additional asserts.\nClass AssertingTermVectorsFormat;\n", "des": "Codec for testing that asserts various contracts of the codec apis."}
{"index": 3578, "repo": "lucene-test-framework-9.7.0", "code": "package blockterms\n\n// Customized version of Lucene90PostingsFormat that uses FixedGapTermsIndexWriter.\nClass LuceneFixedGap;\n// Customized version of Lucene90PostingsFormat that uses VariableGapTermsIndexWriter with a fixed interval, but forcing high docfreq terms to be indexed terms.\nClass LuceneVarGapDocFreqInterval;\n// Customized version of Lucene90PostingsFormat that uses VariableGapTermsIndexWriter with a fixed interval.\nClass LuceneVarGapFixedInterval;\n", "des": "Codecs for testing that support org.apache.lucene.codecs.blockterms."}
{"index": 3579, "repo": "lucene-test-framework-9.7.0", "code": "package bloom\n\n// A class used for testing BloomFilteringPostingsFormat with a concrete delegate (Lucene41).\nClass TestBloomFilteredLucenePostings;\n", "des": "Support for generating test indexes using the BloomFilteringPostingsFormat."}
{"index": 3580, "repo": "lucene-test-framework-9.7.0", "code": "package cheapbastard\n\n// Codec that tries to use as little ram as possible because he spent all his money on beer\nClass CheapBastardCodec;\n", "des": "Codec that unreasonably tries to use as little RAM as possible."}
{"index": 3581, "repo": "lucene-test-framework-9.7.0", "code": "package compressing\n\n// Dummy CompressingCodec implementation used for testing.\npackage compressing.dummy\n// A codec that uses Lucene90CompressingStoredFieldsFormat for its stored fields and delegates to the default codec for everything else.\nClass CompressingCodec;\n// CompressionCodec that uses DeflateWithPresetDictCompressionMode.\nClass DeflateWithPresetCompressingCodec;\n// CompressionCodec that uses CompressionMode.FAST\nClass FastCompressingCodec;\n// CompressionCodec that uses CompressionMode.FAST_DECOMPRESSION\nClass FastDecompressionCompressingCodec;\n// CompressionCodec that uses CompressionMode.HIGH_COMPRESSION\nClass HighCompressionCompressingCodec;\n// CompressionCodec that uses LZ4WithPresetDictCompressionMode.\nClass LZ4WithPresetCompressingCodec;\n", "des": "Support for testing Lucene90CompressingStoredFieldsFormat."}
{"index": 3582, "repo": "lucene-test-framework-9.7.0", "code": "package dummy\n\n// CompressionCodec that does not compress data, useful for testing.\nClass DummyCompressingCodec;\n", "des": "Dummy CompressingCodec implementation used for testing."}
{"index": 3583, "repo": "lucene-test-framework-9.7.0", "code": "package cranky\n\n// Codec for testing that throws random IOExceptions\nClass CrankyCodec;\n", "des": "Codec for testing that throws random IOExceptions"}
{"index": 3584, "repo": "lucene-test-framework-9.7.0", "code": "package mockrandom\n\n// Randomly combines terms index impl w/ postings impls.\nClass MockRandomPostingsFormat;\n", "des": "Frankenstein codec for testing that pieces together random components."}
{"index": 3585, "repo": "lucene-test-framework-9.7.0", "code": "package ramonly\n\n// Stores all postings data in RAM, but writes a small token (header + single int) to identify which \"slot\" the index is using in RAM HashMap.\nClass RAMOnlyPostingsFormat;\n", "des": "Codec for testing that never writes to disk."}
{"index": 3586, "repo": "lucene-test-framework-9.7.0", "code": "package uniformsplit\n\n// Test PostingsFormat for testing org.apache.lucene.codecs.uniformsplit.sharedterms with block encryption using basic ROT13.\npackage uniformsplit.sharedterms\n// Test utility for simple ROT13 cipher (https://en.wikipedia.org/wiki/ROT13).\nClass Rot13CypherTestUtil;\n// UniformSplitPostingsFormat with block encoding using ROT13 cypher.\nClass UniformSplitRot13PostingsFormat;\n", "des": "Test PostingsFormat for testing org.apache.lucene.codecs.uniformsplit with block encryption using basic ROT13."}
{"index": 3587, "repo": "lucene-test-framework-9.7.0", "code": "package sharedterms\n\n// STUniformSplitPostingsFormat with block encoding using ROT13 cypher.\nClass STUniformSplitRot13PostingsFormat;\n", "des": "Test PostingsFormat for testing org.apache.lucene.codecs.uniformsplit.sharedterms with block encryption using basic ROT13."}
{"index": 3588, "repo": "lucene-test-framework-9.7.0", "code": "package vector\n\n// This codec allows customization of the number of connections made for an hnsw index.\nClass ConfigurableMCodec;\n", "des": "Codecs for testing different vector formats."}
{"index": 3589, "repo": "lucene-test-framework-9.7.0", "code": "package geo\n\n// Abstract class to do basic tests for a geospatial impl (high level fields and queries) NOTE: This test focuses on geospatial (distance queries, polygon queries, etc) indexing and search, not any underlying storage format or encoding: it merely supplies two hooks for the encoding so that tests can be exact.\nClass BaseGeoPointTestCase;\n// Abstract class to do basic tests for a xy spatial impl (high level fields and queries)\nClass BaseXYPointTestCase;\n// Draws shapes on the earth surface and renders using the very cool http://www.webglearth.org.\nClass EarthDebugger;\n// static methods for testing geo\nClass GeoTestUtil;\n// generates random cartesian geometry; heavy reuse of GeoTestUtil\nClass ShapeTestUtil;\n", "des": "Reusable geo test utilities."}
{"index": 3590, "repo": "lucene-test-framework-9.7.0", "code": "package index\n\n// Simple interface that is executed for each TP InfoStream component message.\nInterface RandomIndexWriter.TestPoint;\n// Merge policy for testing, it is like an alcoholic.\nClass AlcoholicMergePolicy;\n// Filters the incoming reader and makes all documents appear deleted.\nClass AllDeletedFilterReader;\n// A DirectoryReader that wraps all its subreaders with AssertingLeafReader\nClass AssertingDirectoryReader;\n// A FilterLeafReader that can be used to apply additional checks for tests.\nClass AssertingLeafReader;\n// Wraps a BinaryDocValues but with additional asserts\nClass AssertingLeafReader.AssertingBinaryDocValues;\n// Wraps a Bits but with additional asserts\nClass AssertingLeafReader.AssertingBits;\n// Wraps a Fields but with additional asserts\nClass AssertingLeafReader.AssertingFields;\n// Wraps a ImpactsEnum with additional checks\nClass AssertingLeafReader.AssertingImpactsEnum;\n// Wraps a NumericDocValues but with additional asserts\nClass AssertingLeafReader.AssertingNumericDocValues;\n// Wraps a SortedSetDocValues but with additional asserts\nClass AssertingLeafReader.AssertingPointValues;\n// Wraps a docsenum with additional checks\nClass AssertingLeafReader.AssertingPostingsEnum;\n// Wraps a SortedDocValues but with additional asserts\nClass AssertingLeafReader.AssertingSortedDocValues;\n// Wraps a SortedNumericDocValues but with additional asserts\nClass AssertingLeafReader.AssertingSortedNumericDocValues;\n// Wraps a SortedSetDocValues but with additional asserts\nClass AssertingLeafReader.AssertingSortedSetDocValues;\n// Wraps a StoredFields but with additional asserts\nClass AssertingLeafReader.AssertingStoredFields;\n// Wraps a Terms but with additional asserts\nClass AssertingLeafReader.AssertingTerms;\n// Wraps a TermVectors but with additional asserts\nClass AssertingLeafReader.AssertingTermVectors;\n// Abstract class to do basic tests for a compound format.\nClass BaseCompoundFormatTestCase;\n// Extends BaseDocValuesFormatTestCase to add compression checks.\nClass BaseCompressingDocValuesFormatTestCase;\n// Abstract class to do basic tests for a docvalues format.\nClass BaseDocValuesFormatTestCase;\n", "des": "Support for testing of indexes."}
{"index": 3591, "repo": "lucene-test-framework-9.7.0", "code": "package mockfile\n\n// Disables actual calls to fsync.\nClass DisableFsyncFS;\n// Adds extra files/subdirectories when directories are created.\nClass ExtrasFS;\n// A FilterAsynchronousFileChannel contains another AsynchronousFileChannel, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.\nClass FilterAsynchronousFileChannel;\n// A FilterDirectoryStream contains another DirectoryStream, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.\nClass FilterDirectoryStream;\n// A FilterFileChannel contains another FileChannel, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.\nClass FilterFileChannel;\n// A FilterFileStore contains another FileStore, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.\nClass FilterFileStore;\n// A FilterFileSystem contains another FileSystem, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.\nClass FilterFileSystem;\n// A FilterFileSystemProvider contains another FileSystemProvider, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.\nClass FilterFileSystemProvider;\n// A FilterInputStream2 contains another InputStream, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.\nClass FilterInputStream2;\n// A FilterOutputStream2 contains another OutputStream, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.\nClass FilterOutputStream2;\n// A FilterPath contains another Path, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.\nClass FilterPath;\n// A FilterSeekableByteChannel contains another SeekableByteChannel, which it uses as its basic source of data, possibly transforming the data along the way or providing additional functionality.\nClass FilterSeekableByteChannel;\n// FileSystem that throws exception if file handles in use exceeds a specified limit.\nClass HandleLimitFS;\n// Base class for tracking file handles.\nClass HandleTrackingFS;\n// FileSystem that tracks open handles.\nClass LeakFS;\n// Base class for testing mockfilesystems.\nClass MockFileSystemTestCase;\n", "des": "Support for testing/debugging with virtual filesystems"}
{"index": 3592, "repo": "lucene-test-framework-9.7.0", "code": "package search\n\n// Support for testing similarities.\npackage search.similarities\n// Helper class that adds some extra checks to ensure correct usage of IndexSearcher and Weight.\nClass AssertingIndexSearcher;\n// An implementation of Matches with additional consistency checks.\nClass AssertingMatches;\n// Assertion-enabled query.\nClass AssertingQuery;\n// Wraps another Scorable and asserts that scores are reasonable and only called when positioned\nClass AssertingScorable;\n// Wraps a Scorer with additional checks\nClass AssertingScorer;\n// Tests primitive queries (ie: that rewrite to themselves) to insure they match the expected set of docs, and that the score of each match is equal to the value of the scores explanation.\nClass BaseExplanationTestCase;\n// Abstract class to do basic tests for a RangeField query.\nClass BaseRangeFieldQueryTestCase;\n// base class for range verification\nClass BaseRangeFieldQueryTestCase.Range;\n// Query wrapper that reduces the size of max-score blocks to more easily detect problems with the max-score logic.\nClass BlockScoreQueryWrapper;\n// A BulkScorer-backed scorer.\nClass BulkScorerWrapperScorer;\n// Utility class for asserting expected hits in tests.\nClass CheckHits;\n// Asserts that the score explanation for every document matching a query corresponds with the true score.\nClass CheckHits.ExplanationAsserter;\n// an IndexSearcher that implicitly checks hte explanation of every match whenever it executes a search.\nClass CheckHits.ExplanationAssertingSearcher;\n// Asserts that the Matches from a query is non-null whenever the document its created for is a hit.\nClass CheckHits.MatchesAsserter;\n// Just collects document ids into a set.\nClass CheckHits.SetCollector;\n// A dummy version of TotalHitCountCollector that doesn't shortcut using Weight.count(org.apache.lucene.index.LeafReaderContext).\nClass DummyTotalHitCountCollector;\n// Collector that accumulates matching docs in a FixedBitSet\nClass FixedBitSetCollector;\n// Base class for tests checking the Weight.matches(LeafReaderContext, int) implementations\nClass MatchesTestBase;\n// Encapsulates a term position, start and end offset\nClass MatchesTestBase.TermMatch;\n", "des": "Support for testing search components."}
{"index": 3593, "repo": "lucene-test-framework-9.7.0", "code": "package similarities\n\n// wraps a similarity with checks for testing\nClass AssertingSimilarity;\n// Abstract class to do basic tests for a similarity.\nClass BaseSimilarityTestCase;\n// Similarity implementation that randomizes Similarity implementations per-field.\nClass RandomSimilarity;\n", "des": "Support for testing similarities."}
{"index": 3594, "repo": "lucene-test-framework-9.7.0", "code": "package store\n\n// Base class for Directories that \"chunk\" the input into blocks.\nClass BaseChunkedDirectoryTestCase;\n// Base class for Directory implementations.\nClass BaseDirectoryTestCase;\n// Calls check index on close.\nClass BaseDirectoryWrapper;\n// Base class for per-LockFactory tests.\nClass BaseLockFactoryTestCase;\n// Corrupts on bit of a file after close\nClass CorruptingIndexOutput;\n// This is a Directory Wrapper that adds methods intended to be used only by unit tests.\nClass MockDirectoryWrapper;\n// Objects that represent fail-able conditions.\nClass MockDirectoryWrapper.Failure;\n// Used by MockDirectoryWrapper to create an input stream that keeps track of when it's been closed.\nClass MockIndexInputWrapper;\n// Used to create an output stream that will throw an IOException on fake disk full, track max disk space actually used, and maybe throw random IOExceptions.\nClass MockIndexOutputWrapper;\n// Delegates all operations, even optional ones, to the wrapped directory.\nClass RawDirectoryWrapper;\n// Enum for controlling hard disk throttling.\nEnum MockDirectoryWrapper.Throttling;\n// Use this when throwing fake IOException, e.g.\nClass MockDirectoryWrapper.FakeIOException;\n", "des": "Support for testing store mechanisms."}
{"index": 3595, "repo": "lucene-test-framework-9.7.0", "code": "package util\n\n// Support for testing automata.\npackage util.automaton\n// Support for FST testing.\npackage util.fst\n// A Consumer that can throw any checked exception.\nInterface LuceneTestCase.ThrowingConsumer<T>;\n// A runnable that can throw any checked exception.\nInterface LuceneTestCase.ThrowingRunnable;\n// Marker interface for nested suites that should be ignored if executed in stand-alone mode.\nInterface TestRuleIgnoreTestSuites.NestedTestSuite;\n// Base test case for BitSets.\nClass BaseBitSetTestCase<T extends BitSet>;\n// Base test class for DocIdSets.\nClass BaseDocIdSetTestCase<T extends DocIdSet>;\n// Converts numbers to english strings for testing.\nClass English;\n// Hackidy-Häck-Hack to cause a test to fail on non-bulk merges\nClass FailOnNonBulkMergesInfoStream;\n// A RunListener that detects suite/ test failures.\nClass FailureMarker;\n// Minimal port of benchmark's LneDocSource + DocMaker, so tests can enum docs from a line file created by benchmark's WriteLineDoc task\nClass LineFileDocs;\n// Backwards compatible test* method provider (public, non-static).\nClass LuceneJUnit3MethodProvider;\n// Base class for all Lucene unit tests, Junit3 or Junit4 variant.\nClass LuceneTestCase;\n// Prints nothing.\nClass NullInfoStream;\n// Last minute patches.\nClass QuickPatchThreadsFilter;\n// Crawls object graph to collect RAM usage for testing\nClass RamUsageTester;\n// An accumulator of object references.\nClass RamUsageTester.Accumulator;\n// Sneaky: rethrowing checked exceptions as unchecked ones.\nClass Rethrow;\n// A suite listener printing a \"reproduce string\".\nClass RunListenerPrintReproduceInfo;\n// Fake resource loader for tests: works if you want to fake reading a single file\nClass StringMockResourceLoader;\n// Require assertions for Lucene/Solr packages.\nClass TestRuleAssertionsRequired;\n", "des": "General test support."}
{"index": 3596, "repo": "lucene-test-framework-9.7.0", "code": "package automaton\n\n// Utilities for testing automata.\nClass AutomatonTestUtil;\n// Lets you retrieve random strings accepted by an Automaton.\nClass AutomatonTestUtil.RandomAcceptedStrings;\n", "des": "Support for testing automata."}
{"index": 3597, "repo": "lucene-test-framework-9.7.0", "code": "package fst\n\n// Helper class to test FSTs.\nClass FSTTester<T>;\n// Holds one input/output pair.\nClass FSTTester.InputOutput<T>;\n", "des": "Support for FST testing."}
{"index": 3598, "repo": "lucene-queries-9.7.0", "code": "package queries\n\n// Queries that compute score based upon a function.\npackage queries.function\n// Intervals queries\npackage queries.intervals\n// Document similarity query generators.\npackage queries.mlt\n// The payloads package provides Query mechanisms for finding and using payloads.\npackage queries.payloads\n// The calculus of spans.\npackage queries.spans\n// A query that executes high-frequency terms in a optional sub-query to prevent slow queries due to \"common\" terms like stopwords.\nClass CommonTermsQuery;\n", "des": "Filters and Queries that add to core Lucene."}
{"index": 3599, "repo": "lucene-queries-9.7.0", "code": "package function\n\n// FunctionValues for different data types.\npackage function.docvalues\n// A variety of functions to use with FunctionQuery.\npackage function.valuesource\n// A query that retrieves all documents with a DoubleValues value matching a predicate\nClass FunctionMatchQuery;\n// Returns a score for each document based on a ValueSource, often some function of the value of a field.\nClass FunctionQuery;\n// A Query wrapping a ValueSource that matches docs in which the values in the value source match a configured range.\nClass FunctionRangeQuery;\n// A query that wraps another query, and uses a DoubleValuesSource to replace or modify the wrapped query's score\nClass FunctionScoreQuery;\n// Represents field values as different types.\nClass FunctionValues;\n// Abstraction of the logic required to fill the value of a specified doc into a reusable MutableValue.\nClass FunctionValues.ValueFiller;\n// Class exposing static helper methods for generating DoubleValuesSource instances over some IndexReader statistics\nClass IndexReaderFunctions;\n// Instantiates FunctionValues for a particular reader.\nClass ValueSource;\n// Scorer which returns the result of FunctionValues.floatVal(int) as the score for a document, and which filters out documents that don't match ValueSourceScorer.matches(int).\nClass ValueSourceScorer;\n", "des": "Queries that compute score based upon a function."}
{"index": 3600, "repo": "lucene-queries-9.7.0", "code": "package docvalues\n\n// Abstract FunctionValues implementation which supports retrieving boolean values.\nClass BoolDocValues;\n// Serves as base class for FunctionValues based on DocTermsIndex.\nClass DocTermsIndexDocValues;\n// Abstract FunctionValues implementation which supports retrieving double values.\nClass DoubleDocValues;\n// Abstract FunctionValues implementation which supports retrieving float values.\nClass FloatDocValues;\n// Abstract FunctionValues implementation which supports retrieving int values.\nClass IntDocValues;\n// Abstract FunctionValues implementation which supports retrieving long values.\nClass LongDocValues;\n// Abstract FunctionValues implementation which supports retrieving String values.\nClass StrDocValues;\n// Custom Exception to be thrown when the DocTermsIndex for a field cannot be generated\nClass DocTermsIndexDocValues.DocTermsIndexException;\n", "des": "FunctionValues for different data types."}
{"index": 3601, "repo": "lucene-queries-9.7.0", "code": "package valuesource\n\n// Abstract parent class for those ValueSource implementations which apply boolean logic to their values\nClass BoolFunction;\n// An implementation for retrieving FunctionValues instances for byte knn vectors fields.\nClass ByteKnnVectorFieldSource;\n// An implementation for retrieving FunctionValues instances for string based fields.\nClass BytesRefFieldSource;\n// ByteVectorSimilarityFunction returns a similarity function between two knn vectors with byte elements.\nClass ByteVectorSimilarityFunction;\n// Base class for comparison operators useful within an \"if\"/conditional.\nClass ComparisonBoolFunction;\n// Function that returns a constant byte vector value for every document.\nClass ConstKnnByteVectorValueSource;\n// Function that returns a constant float vector value for every document.\nClass ConstKnnFloatValueSource;\n// ConstNumberSource is the base class for all constant numbers\nClass ConstNumberSource;\n// ConstValueSource returns a constant for all documents\nClass ConstValueSource;\n// ValueSource implementation which only returns the values from the provided ValueSources which are available for a particular docId.\nClass DefFunction;\n// Function to divide \"a\" by \"b\"\nClass DivFloatFunction;\n// DocFreqValueSource returns the number of documents containing the term.\nClass DocFreqValueSource;\n// Function that returns a constant double value for every document.\nClass DoubleConstValueSource;\n// Obtains double field values from LeafReader.getNumericDocValues(java.lang.String) and makes those values available as other numeric types, casting as needed.\nClass DoubleFieldSource;\n// Abstract ValueSource implementation which wraps two ValueSources and applies an extendible float function to their values.\nClass DualFloatFunction;\n// Obtains int field values from LeafReader.getNumericDocValues(java.lang.String) and makes those values available as other numeric types, casting as needed.\nClass EnumFieldSource;\n// A base class for ValueSource implementations that retrieve values for a single field from DocValues.\nClass FieldCacheSource;\n// Obtains float field values from LeafReader.getNumericDocValues(java.lang.String) and makes those values available as other numeric types, casting as needed.\nClass FloatFieldSource;\n// An implementation for retrieving FunctionValues instances for float knn vectors fields.\nClass FloatKnnVectorFieldSource;\n", "des": "A variety of functions to use with FunctionQuery."}
{"index": 3602, "repo": "lucene-queries-9.7.0", "code": "package intervals\n\n// An extension of MatchesIterator that allows it to be treated as an IntervalIterator\nInterface IntervalMatchesIterator;\n// An IntervalsSource that filters the intervals from another IntervalsSource\nClass FilteredIntervalsSource;\n// Wraps an IntervalIterator and passes through those intervals that match the IntervalFilter.accept() function\nClass IntervalFilter;\n// A DocIdSetIterator that also allows iteration over matching intervals in a document.\nClass IntervalIterator;\n// A query that retrieves documents containing intervals returned from an IntervalsSource\nClass IntervalQuery;\n// Factory functions for creating interval sources.\nClass Intervals;\n// A helper class for IntervalQuery that provides an IntervalIterator for a given field and segment\nClass IntervalsSource;\n", "des": "Intervals queries"}
{"index": 3603, "repo": "lucene-queries-9.7.0", "code": "package mlt\n\n// Generate \"more like this\" similarity queries.\nClass MoreLikeThis;\n// A simple wrapper for MoreLikeThis for use in scenarios where a Query object is required eg in custom QueryParser extensions.\nClass MoreLikeThisQuery;\n", "des": "Document similarity query generators."}
{"index": 3604, "repo": "lucene-queries-9.7.0", "code": "package payloads\n\n// Defines a way of converting payloads to float values, for use by PayloadScoreQuery\nInterface PayloadDecoder;\n// Defines an interface for testing if two payloads should be consider to match\nInterface PayloadMatcher;\n// Calculate the final score as the average score of all payloads seen.\nClass AveragePayloadFunction;\n// Returns the maximum payload score seen, else 1 if there are no payloads on the doc.\nClass MaxPayloadFunction;\n// Calculates the minimum payload seen\nClass MinPayloadFunction;\n// An abstract class that defines a way for PayloadScoreQuery instances to transform the cumulative effects of payload scores for a document.\nClass PayloadFunction;\n// Creates a payload matcher object based on a payload type and an operation.\nClass PayloadMatcherFactory;\n// A Query class that uses a PayloadFunction to modify the score of a wrapped SpanQuery\nClass PayloadScoreQuery;\n// Only return those matches that have a specific payload at the given position.\nClass SpanPayloadCheckQuery;\n// Calculate the final score as the sum of scores of all payloads seen.\nClass SumPayloadFunction;\n// The payload type.\nEnum SpanPayloadCheckQuery.MatchOperation;\n// The payload type.\nEnum SpanPayloadCheckQuery.PayloadType;\n", "des": "The payloads package provides Query mechanisms for finding and using payloads."}
{"index": 3605, "repo": "lucene-queries-9.7.0", "code": "package spans\n\n// An interface defining the collection of postings information from the leaves of a Spans\nInterface SpanCollector;\n// Wrapper to allow SpanQuery objects participate in composite single-field SpanQueries by 'lying' about their search field.\nClass FieldMaskingSpanQuery;\n// A Spans implementation wrapping another spans instance, allowing to filter spans matches easily by implementing FilterSpans.accept(org.apache.lucene.queries.spans.Spans)\nClass FilterSpans;\n// A Spans that is formed from the ordered subspans of a SpanNearQuery where the subspans do not overlap and have a maximum slop between them.\nClass NearSpansOrdered;\n// Similar to NearSpansOrdered, but for the unordered case.\nClass NearSpansUnordered;\n// Keep matches that contain another SpanScorer.\nClass SpanContainingQuery;\n// Wrapper used in SpanDisiPriorityQueue.\nClass SpanDisiWrapper;\n// Matches spans near the beginning of a field.\nClass SpanFirstQuery;\n// Wraps any MultiTermQuery as a SpanQuery, so it can be nested within other SpanQuery classes.\nClass SpanMultiTermQueryWrapper<Q extends MultiTermQuery>;\n// Abstract class that defines how the query is rewritten.\nClass SpanMultiTermQueryWrapper.SpanRewriteMethod;\n// A rewrite method that first translates each term into a SpanTermQuery in a BooleanClause.Occur.SHOULD clause in a BooleanQuery, and keeps the scores as computed by the query.\nClass SpanMultiTermQueryWrapper.TopTermsSpanBooleanQueryRewrite;\n// Matches spans which are near one another.\nClass SpanNearQuery;\n// A builder for SpanNearQueries\nClass SpanNearQuery.Builder;\n// Removes matches which overlap with another SpanQuery or which are within x tokens before or y tokens after another SpanQuery.\nClass SpanNotQuery;\n// Matches the union of its clauses.\nClass SpanOrQuery;\n// Base class for filtering a SpanQuery based on the position of a match.\nClass SpanPositionCheckQuery;\n// Checks to see if the SpanPositionCheckQuery.getMatch() lies between a start and end position\nClass SpanPositionRangeQuery;\n// Base class for span-based queries.\nClass SpanQuery;\n// Iterates through combinations of start/end positions per-doc.\nClass Spans;\n", "des": "The calculus of spans."}
{"index": 3606, "repo": "lucene-suggest-9.7.0", "code": "package spell\n\n// A simple interface representing a Dictionary.\nInterface Dictionary;\n// Interface for string distances.\nInterface StringDistance;\n// A suggestion generated by combining one or more original query terms\nClass CombineSuggestion;\n// Simple automaton-based spellchecker.\nClass DirectSpellChecker;\n// Holds a spelling correction for internal usage inside DirectSpellChecker.\nClass DirectSpellChecker.ScoreTerm;\n// HighFrequencyDictionary: terms taken from the given field of a Lucene index, which appear in a number of documents above a given threshold.\nClass HighFrequencyDictionary;\n// Similarity measure for short strings such as person names.\nClass JaroWinklerDistance;\n// Levenshtein edit distance class.\nClass LevenshteinDistance;\n// Lucene Dictionary: terms taken from the given field of a Lucene index.\nClass LuceneDictionary;\n// Damerau-Levenshtein (optimal string alignment) implemented in a consistent way as Lucene's FuzzyTermsEnum with the transpositions option enabled.\nClass LuceneLevenshteinDistance;\n// N-Gram version of edit distance based on paper by Grzegorz Kondrak, \"N-gram similarity and distance\".\nClass NGramDistance;\n// Dictionary represented by a text file.\nClass PlainTextDictionary;\n// Spell Checker class (Main class). (initially inspired by the David Spencer code).\nClass SpellChecker;\n// SuggestWord, used in suggestSimilar method in SpellChecker class.\nClass SuggestWord;\n// Frequency first, then score.\nClass SuggestWordFrequencyComparator;\n// Sorts SuggestWord instances\nClass SuggestWordQueue;\n// Score first, then frequency\nClass SuggestWordScoreComparator;\n// A spell checker whose sole function is to offer suggestions by combining multiple terms into one word and/or breaking terms into multiple words.\nClass WordBreakSpellChecker;\n// Set of strategies for suggesting related terms\nEnum SuggestMode;\n// Determines the order to list word break suggestions\nEnum WordBreakSpellChecker.BreakSuggestionSortMethod;\n", "des": "Suggest alternate spellings for words."}
{"index": 3607, "repo": "lucene-suggest-9.7.0", "code": "package suggest\n\n// Analyzer based autosuggest.\npackage suggest.analyzing\n// Support for document suggestion\npackage suggest.document\n// Finite-state based autosuggest.\npackage suggest.fst\n// Ternary Search Tree based autosuggest.\npackage suggest.tst\n// Interface for enumerating term,weight,payload triples for suggester consumption; currently only AnalyzingSuggester, FuzzySuggester and AnalyzingInfixSuggester support payloads.\nInterface InputIterator;\n// A producer of Bits per segment.\nClass BitsProducer;\n// This wrapper buffers incoming elements.\nClass BufferedInputIterator;\n// Dictionary with terms, weights, payload (optional) and contexts (optional) information taken from stored/indexed fields in a Lucene index.\nClass DocumentDictionary;\n// Dictionary with terms and optionally payload and optionally contexts information taken from stored fields in a Lucene index.\nClass DocumentValueSourceDictionary;\n// Dictionary represented by a text file.\nClass FileDictionary;\n// An BytesRefSorter that keeps all the entries in memory.\nClass InMemorySorter;\n// Wraps a BytesRefIterator as a suggester InputIterator, with all weights set to 1 and carries no payload\nClass InputIterator.InputIteratorWrapper;\n// Simple Lookup interface for CharSequence suggestions.\nClass Lookup;\n// A PriorityQueue collecting a fixed size of high priority Lookup.LookupResult\nClass Lookup.LookupPriorityQueue;\n// Result of a lookup.\nClass Lookup.LookupResult;\n// This wrapper buffers incoming elements and makes sure they are sorted based on given comparator.\nClass SortedInputIterator;\n// This wrapper buffers the incoming elements and makes sure they are in random order.\nClass UnsortedInputIterator;\n", "des": "Support for Autocomplete/Autosuggest"}
{"index": 3608, "repo": "lucene-suggest-9.7.0", "code": "package analyzing\n\n// Analyzes the input text and then suggests matches based on prefix matches to any tokens in the indexed text.\nClass AnalyzingInfixSuggester;\n// Suggester that first analyzes the surface form, adds the analyzed form to a weighted FST, and then does the same thing at lookup time.\nClass AnalyzingSuggester;\n// Extension of the AnalyzingInfixSuggester which transforms the weight after search to take into account the position of the searched term into the indexed text.\nClass BlendedInfixSuggester;\n// Builds an ngram model from the text sent to FreeTextSuggester.build(org.apache.lucene.search.suggest.InputIterator) and predicts based on the last grams-1 tokens in the request sent to FreeTextSuggester.lookup(java.lang.CharSequence, boolean, int).\nClass FreeTextSuggester;\n// Exposes a utility method to enumerate all paths intersecting an Automaton with an FST.\nClass FSTUtil;\n// Holds a pair (automaton, fst) of states and accumulated output in the intersected machine.\nClass FSTUtil.Path<T>;\n// Implements a fuzzy AnalyzingSuggester.\nClass FuzzySuggester;\n// Like StopFilter except it will not remove the last token if that token was not followed by some token separator.\nClass SuggestStopFilter;\n// Factory for SuggestStopFilter.\nClass SuggestStopFilterFactory;\n// The different types of blender.\nEnum BlendedInfixSuggester.BlenderType;\n", "des": "Analyzer based autosuggest."}
{"index": 3609, "repo": "lucene-suggest-9.7.0", "code": "package document\n\n// CompletionPostingsFormat for org.apache.lucene.backward_codecs.lucene50.Lucene50PostingsFormat.\nClass Completion50PostingsFormat;\n// CompletionPostingsFormat for org.apache.lucene.backward_codecs.lucene84.Lucene84PostingsFormat.\nClass Completion84PostingsFormat;\n// CompletionPostingsFormat for Lucene90PostingsFormat\nClass Completion90PostingsFormat;\n// Wraps an Analyzer to provide additional completion-only tuning (e.g.\nClass CompletionAnalyzer;\n// A PostingsFormat which supports document suggestion based on indexed SuggestFields.\nClass CompletionPostingsFormat;\n// Abstract Query that match documents containing terms with a specified prefix filtered by BitsProducer.\nClass CompletionQuery;\n// Expert: Responsible for executing the query against an appropriate suggester and collecting the results via a collector.\nClass CompletionScorer;\n// Holder for suggester and field-level info for a suggest field\nClass CompletionsTermsReader;\n// Wrapped Terms used by SuggestField and ContextSuggestField to access corresponding suggester and their attributes\nClass CompletionTerms;\n// A ConcatenateGraphFilter but we can set the payload and provide access to config options.\nClass CompletionTokenStream;\n// Expert: the Weight for CompletionQuery, used to score and explain these queries.\nClass CompletionWeight;\n// A CompletionQuery that matches documents specified by a wrapped CompletionQuery supporting boosting and/or filtering by specified contexts.\nClass ContextQuery;\n// SuggestField which additionally takes in a set of contexts.\nClass ContextSuggestField;\n// A CompletionQuery that match documents containing terms within an edit distance of the specified prefix.\nClass FuzzyCompletionQuery;\n// NRTSuggester executes Top N search on a weighted FST specified by a CompletionScorer\nClass NRTSuggester;\n// A CompletionQuery which takes an Analyzer to analyze the prefix of the query term.\nClass PrefixCompletionQuery;\n// A CompletionQuery which takes a regular expression as the prefix of the query term.\nClass RegexCompletionQuery;\n// Field that indexes a string value and a weight as a weighted completion against a named suggester.\nClass SuggestField;\n// Adds document suggest capabilities to IndexSearcher.\nClass SuggestIndexSearcher;\n", "des": "Support for document suggestion"}
{"index": 3610, "repo": "lucene-suggest-9.7.0", "code": "package fst\n\n// Collects BytesRef and then allows one to iterate over their sorted order.\nInterface BytesRefSorter;\n// An implementation of a BytesRefSorter that allows appending BytesRefs to an OfflineSorter and returns a Closeable ExternalRefSorter.ByteSequenceIterator that iterates over sequences stored on disk.\nClass ExternalRefSorter;\n// Iterates over BytesRefs in a file, closes the reader when the iterator is exhausted.\nClass ExternalRefSorter.ByteSequenceIterator;\n// Finite state automata based implementation of \"autocomplete\" functionality.\nClass FSTCompletion;\n// A single completion for a given key.\nClass FSTCompletion.Completion;\n// Finite state automata based implementation of \"autocomplete\" functionality.\nClass FSTCompletionBuilder;\n// An adapter from Lookup API to FSTCompletion.\nClass FSTCompletionLookup;\n// Suggester based on a weighted FST: it first traverses the prefix, then walks the n shortest paths to retrieve top-ranked suggestions.\nClass WFSTCompletionLookup;\n", "des": "Finite-state based autosuggest."}
{"index": 3611, "repo": "lucene-suggest-9.7.0", "code": "package tst\n\n// The class creates a TST node.\nClass TernaryTreeNode;\n// Ternary Search Trie implementation.\nClass TSTAutocomplete;\n// Suggest implementation based on a Ternary Search Tree\nClass TSTLookup;\n", "des": "Ternary Search Tree based autosuggest."}
{"index": 3612, "repo": "solr-test-framework-9.3.0", "code": "package solr\n\n// Factories for Mock analysis classes that can be used in test configurations.\npackage solr.analysis\n// Base classes and utilities for creating and testing Solr Cloud clusters.\npackage solr.cloud\n// Factories for Mock classes that can be used in test configurations\npackage solr.core\n// Classes for running embedded Solr Jetty Servers in tests.\npackage solr.embedded\n// Concrete implementations of org.apache.solr.request.SolrRequestHandler\npackage solr.handler\n// Mock classes for testing search.\npackage solr.search\n// Mock classes for testing spelling.\npackage solr.spelling\n// Misc utilities useful when implementing test cases.\npackage solr.util\n// Helper base class for distributed search test cases\nClass BaseDistributedSearchTestCase;\n// \nClass BaseDistributedSearchTestCase.RandDate;\n// \nClass BaseDistributedSearchTestCase.RandVal;\n// \nClass EmbeddedSolrServerTestBase;\n// \nClass JSONTestUtil;\n// This ignores those threads in Solr for which there is no way to clean up after a suite.\nClass SolrIgnoredThreadsFilter;\n// \nClass SolrJettyTestBase;\n// All Solr test cases should derive from this class eventually.\nClass SolrTestCase;\n// \nClass SolrTestCaseHS;\n// \nClass SolrTestCaseHS.Client;\n// \nClass SolrTestCaseHS.Client.Tester;\n// \nClass SolrTestCaseHS.ClientProvider;\n// \nClass SolrTestCaseHS.SolrInstance;\n// \nClass SolrTestCaseHS.SolrInstances;\n// A junit4 Solr test harness that extends SolrTestCase and, by extension, LuceneTestCase.\nClass SolrTestCaseJ4;\n// \nClass SolrTestCaseJ4.BVal;\n// \nClass SolrTestCaseJ4.Doc;\n// \nClass SolrTestCaseJ4.Fld;\n// \nClass SolrTestCaseJ4.FldType;\n// \nClass SolrTestCaseJ4.FVal;\n// \nClass SolrTestCaseJ4.IRange;\n// \nClass SolrTestCaseJ4.IVals;\n// \nClass SolrTestCaseJ4.IValsPercent;\n", "des": "Common base classes for implementing tests."}
{"index": 3613, "repo": "solr-test-framework-9.3.0", "code": "package analysis\n\n// Factory for MockCharFilter for testing purposes.\nClass MockCharFilterFactory;\n// Factory for MockTokenFilter for testing purposes.\nClass MockTokenFilterFactory;\n// Factory for MockTokenizer for testing purposes.\nClass MockTokenizerFactory;\n", "des": "Factories for Mock analysis classes that can be used in test configurations."}
{"index": 3614, "repo": "solr-test-framework-9.3.0", "code": "package cloud\n\n// This test simply does a bunch of basic things in solrcloud mode and asserts things work as expected.\nClass AbstractBasicDistributedZk2TestBase;\n// This test simply does a bunch of basic things in solrcloud mode and asserts things work as expected.\nClass AbstractBasicDistributedZkTestBase;\n// \nClass AbstractChaosMonkeyNothingIsSafeTestBase;\n// \nClass AbstractChaosMonkeySafeLeaderTestBase;\n// \nClass AbstractDigestZkACLAndCredentialsProvidersTestBase;\n// \nClass AbstractDigestZkACLAndCredentialsProvidersTestBase.AllAndReadonlyCredentialZkCredentialsInjector;\n// \nClass AbstractDigestZkACLAndCredentialsProvidersTestBase.AllCredentialZkCredentialsInjector;\n// \nClass AbstractDigestZkACLAndCredentialsProvidersTestBase.ConnectWithReadonlyCredsInjector;\n// \nClass AbstractDigestZkACLAndCredentialsProvidersTestBase.NoCredentialZkCredentialsInjector;\n// \nClass AbstractDigestZkACLAndCredentialsProvidersTestBase.WrongAllCredentialZkCredentialsInjector;\n// \nClass AbstractDistribZkTestBase;\n// TODO: we should still test this works as a custom update chain as well as what we test now - the default update chain\nClass AbstractFullDistribZkTestBase;\n// \nClass AbstractFullDistribZkTestBase.CloudJettyRunner;\n// \nClass AbstractFullDistribZkTestBase.CloudSolrServerClient;\n// \nClass AbstractMoveReplicaTestBase;\n// \nClass AbstractRecoveryZkTestBase;\n// \nClass AbstractRestartWhileUpdatingTestBase;\n// Test sync phase that occurs when Leader goes down and a new Leader is elected.\nClass AbstractSyncSliceTestBase;\n// \nClass AbstractTlogReplayBufferedWhileIndexingTestBase;\n// This test simply does a bunch of basic things in solrcloud mode and asserts things work as expected.\nClass AbstractUnloadDistributedZkTestBase;\n// Base test class for ZooKeeper tests.\nClass AbstractZkTestCase;\n// The monkey can stop random or specific jetties used with SolrCloud.\nClass ChaosMonkey;\n// \nClass CloudInspectUtil;\n", "des": "Base classes and utilities for creating and testing Solr Cloud clusters."}
{"index": 3615, "repo": "solr-test-framework-9.3.0", "code": "package placement\n\n// \nClass AttributeFetcherForTest;\n// Builder classes to make tests using different cluster and node configurations easier to write and to read.\nClass Builders;\n// \nClass Builders.ClusterBuilder;\n// \nClass Builders.CollectionBuilder;\n// \nClass Builders.NodeBuilder;\n// \nClass Builders.ReplicaBuilder;\n// \nClass Builders.ShardBuilder;\n", "des": "Utility classes to test placement plugins."}
{"index": 3616, "repo": "solr-test-framework-9.3.0", "code": "package core\n\n// \nClass AbstractBadConfigTestBase;\n// Opens a directory with LuceneTestCase.newDirectory()\nClass MockDirectoryFactory;\n// Opens a directory with LuceneTestCase.newFSDirectory(Path)\nClass MockFSDirectoryFactory;\n// \nClass MockQuerySenderListenerReqHandler;\n// \nClass TrackingBackupRepository;\n", "des": "Factories for Mock classes that can be used in test configurations"}
{"index": 3617, "repo": "solr-test-framework-9.3.0", "code": "package embedded\n\n// \nClass JettyConfig;\n// \nClass JettyConfig.Builder;\n// Run solr using jetty\nClass JettySolrRunner;\n// \nClass JettySolrRunner.DebugFilter;\n// This is a stupid hack to give jetty something to attach to\nClass JettySolrRunner.Servlet404;\n", "des": "Classes for running embedded Solr Jetty Servers in tests."}
{"index": 3618, "repo": "solr-test-framework-9.3.0", "code": "package handler\n\n// Class for tracking shard requests\npackage handler.component\n// \nClass BackupRestoreUtils;\n// Helper class for validating when the replication handler has finished a backup.\nClass BackupStatusChecker;\n// \nClass TestRestoreCoreUtil;\n", "des": "Concrete implementations of org.apache.solr.request.SolrRequestHandler"}
{"index": 3619, "repo": "solr-test-framework-9.3.0", "code": "package component\n\n// A Dummy SpellChecker for testing purposes\nClass DummyCustomParamSpellChecker;\n// A ShardHandlerFactory that extends HttpShardHandlerFactory and tracks requests made to nodes/shards such that interested parties can watch such requests and make assertions inside tests\nClass TrackingShardHandlerFactory;\n// A queue having helper methods to select requests by shard and purpose.\nClass TrackingShardHandlerFactory.RequestTrackingQueue;\n// \nClass TrackingShardHandlerFactory.ShardRequestAndParams;\n", "des": "Class for tracking shard requests"}
{"index": 3620, "repo": "solr-test-framework-9.3.0", "code": "package search\n\n// \nClass FooQParserPlugin;\n", "des": "Mock classes for testing search."}
{"index": 3621, "repo": "solr-test-framework-9.3.0", "code": "package spelling\n\n// Comparator for testing purposes\nClass SampleComparator;\n", "des": "Mock classes for testing spelling."}
{"index": 3622, "repo": "solr-test-framework-9.3.0", "code": "package processor\n\n// \nClass BufferingRequestProcessor;\n// This Factory can optionally save references to the commands it receives in BlockingQueues that tests can poll from to observe that the expected commands are executed.\nClass RecordingUpdateProcessorFactory;\n// This Factory is similar to RecordingUpdateProcessorFactory, but with the goal of tracking requests across multiple collections/shards/replicas in a SolrCloudTestCase.\nClass TrackingUpdateProcessorFactory;\n// \nClass UpdateProcessorTestBase;\n", "des": "Mock classes for testing Update Processor chains."}
{"index": 3623, "repo": "solr-test-framework-9.3.0", "code": "package util\n\n// \nInterface RESTfulServerProvider;\n// \nClass BadZookeeperThreadsFilter;\n// \nClass BaseTestHarness;\n// \nClass DirectoryUtil;\n// \nClass DOMUtilTestBase;\n// Provides an EmbeddedSolrServer for tests.\nClass EmbeddedSolrServerTestRule;\n// Helper code for \"Muting\" ERROR log messages that you expect as a result of the things you are testing, so they aren't a distraction in test logs.\nClass ErrorLogMuter;\n// Some tests need to reach outside the classpath to get certain resources (e.g.\nClass ExternalPaths;\n// \nClass LogLevel.Configurer;\n// Helper code to listen for LogEvent messages (via a Queue) that you expect as a result of the things you are testing, So you can make assertions about when a particular action should/shouldn't cause Solr to produce a particular Log message\nClass LogListener;\n// \nClass MockCoreContainer;\n// \nClass MockCoreContainer.MockCoreDescriptor;\n// A mocked up instance of SecureRandom that just uses Random under the covers.\nClass NotSecurePseudoRandomSpi;\n// \nClass QueryMatchers;\n// A MergePolicy with a no-arg constructor that proxies to a ForceMergePolicy wrapped instance retrieved from LuceneTestCase.newMergePolicy(java.util.Random).\nClass RandomForceMergePolicy;\n// A MergePolicyFactory for RandomForceMergePolicy.\nClass RandomForceMergePolicyFactory;\n// A simple data structure for encapsulating the effective values to be used when randomizing SSL in a test, based on the configured values in the RandomizeSSL annotation.\nClass RandomizeSSL.SSLRandomizer;\n// A MergePolicy with a no-arg constructor that proxies to an instance retrieved from LuceneTestCase.newMergePolicy(java.util.Random).\nClass RandomMergePolicy;\n// A MergePolicyFactory for RandomMergePolicy.\nClass RandomMergePolicyFactory;\n// \nClass ReadOnlyCoresLocator;\n// \nClass RestTestBase;\n// Facilitates testing Solr's REST API via a provided embedded Jetty\nClass RestTestHarness;\n// \nClass RevertDefaultThreadHandlerRule;\n// Provides access to a SolrClient instance and a running Solr in tests.\nClass SolrClientTestRule;\n", "des": "Misc utilities useful when implementing test cases."}
{"index": 3624, "repo": "lucene-misc-9.7.0", "code": "package misc\n\n// Misc extensions of the Document/Field API.\npackage misc.document\n// Misc index tools and index support.\npackage misc.index\n// Misc search implementations.\npackage misc.search\n// Misc Directory implementations.\npackage misc.store\n// Memory Tracker interface which allows defining custom collector level memory trackers\npackage misc.util\n// Default implementation of MemoryTracker that tracks allocations and allows setting a memory limit per collector\nClass CollectorMemoryTracker;\n// Utility to get document frequency and total number of occurrences (sum of the tf for each doc) of a term.\nClass GetTermInfo;\n// HighFreqTerms class extracts the top n most frequent terms (by document frequency) from an existing Lucene index and reports their document frequency.\nClass HighFreqTerms;\n// Compares terms by docTermFreq\nClass HighFreqTerms.DocFreqComparator;\n// Compares terms by totalTermFreq\nClass HighFreqTerms.TotalTermFreqComparator;\n// Merges indices specified on the command line into the index specified as the first command line argument.\nClass IndexMergeTool;\n// A similarity with a lengthNorm that provides for a \"plateau\" of equally good lengths, and tf helper functions.\nClass SweetSpotSimilarity;\n// Holder for a term along with its statistics (TermStats.docFreq and TermStats.totalTermFreq).\nClass TermStats;\n", "des": "Miscellaneous Lucene utilities that don't really fit anywhere else."}
{"index": 3625, "repo": "lucene-misc-9.7.0", "code": "package document\n\n// Defers actually loading a field's value until you ask for it.\nClass LazyDocument;\n", "des": "Misc extensions of the Document/Field API."}
{"index": 3626, "repo": "lucene-misc-9.7.0", "code": "package index\n\n// Select document within a CodecReader\nInterface IndexRearranger.DocumentSelector;\n// Select documents using binary doc values\nClass BinaryDocValueSelector;\n// Copy and rearrange index according to document selectors, from input dir to output dir.\nClass IndexRearranger;\n// Command-line tool that enables listing segments in an index, copying specific segments to another index, and deleting segments from an index.\nClass IndexSplitter;\n// This tool splits input index into multiple equal parts.\nClass MultiPassIndexSplitter;\n// Split an index based on a Query.\nClass PKIndexSplitter;\n", "des": "Misc index tools and index support."}
{"index": 3627, "repo": "lucene-misc-9.7.0", "code": "package search\n\n// A TopDocsCollector that controls diversity in results by ensuring no more than maxHitsPerKey results from a common source are collected in the final results.\nClass DiversifiedTopDocsCollector;\n// An extension to ScoreDoc that includes a key used for grouping purposes\nClass DiversifiedTopDocsCollector.ScoreDocKey;\n// Holds statistics for a DocValues field.\nClass DocValuesStats<T>;\n// Holds DocValues statistics for a numeric field storing double values.\nClass DocValuesStats.DoubleDocValuesStats;\n// Holds DocValues statistics for a numeric field storing long values.\nClass DocValuesStats.LongDocValuesStats;\n// Holds statistics for a numeric DocValues field.\nClass DocValuesStats.NumericDocValuesStats<T extends Number>;\n// Holds statistics for a sorted DocValues field.\nClass DocValuesStats.SortedDocValuesStats;\n// Holds DocValues statistics for a sorted-numeric field storing double values.\nClass DocValuesStats.SortedDoubleDocValuesStats;\n// Holds DocValues statistics for a sorted-numeric field storing long values.\nClass DocValuesStats.SortedLongDocValuesStats;\n// Holds statistics for a sorted-numeric DocValues field.\nClass DocValuesStats.SortedNumericDocValuesStats<T extends Number>;\n// Holds statistics for a sorted-set DocValues field.\nClass DocValuesStats.SortedSetDocValuesStats;\n// A Collector which computes statistics for a DocValues field.\nClass DocValuesStatsCollector;\n// Bitset collector which supports memory tracking\nClass MemoryAccountingBitsetCollector;\n", "des": "Misc search implementations."}
{"index": 3628, "repo": "lucene-misc-9.7.0", "code": "package store\n\n// An IndexOutput that wraps another instance and tracks the number of bytes written\nClass ByteTrackingIndexOutput;\n// FilterDirectory that tracks write amplification factor\nClass ByteWritesTrackingDirectoryWrapper;\n// A Directory implementation for all Unixes and Windows that uses DIRECT I/O to bypass OS level IO caching during merging.\nClass DirectIODirectory;\n// This directory wrapper overrides Directory.copyFrom(Directory, String, String, IOContext) in order to optionally use a hard-link instead of a full byte by byte file copy if applicable.\nClass HardlinkCopyDirectoryWrapper;\n// A straightforward implementation of FSDirectory using java.io.RandomAccessFile.\nClass RAFDirectory;\n", "des": "Misc Directory implementations."}
{"index": 3629, "repo": "lucene-misc-9.7.0", "code": "package util\n\n// Misc FST classes.\npackage util.fst\n// Tracks dynamic allocations/deallocations of memory for transient objects\nInterface MemoryTracker;\n", "des": "Memory Tracker interface which allows defining custom collector level memory trackers"}
{"index": 3630, "repo": "lucene-misc-9.7.0", "code": "package fst\n\n// Wraps another Outputs implementation and encodes one or more of its output values.\nClass ListOfOutputs<T>;\n// An FST Outputs implementation where each output is one or two non-negative long values.\nClass UpToTwoPositiveIntOutputs;\n// Holds two long outputs.\nClass UpToTwoPositiveIntOutputs.TwoLongs;\n", "des": "Misc FST classes."}
{"index": 3631, "repo": "solr-core-9.3.0", "code": "package analysis\n\n// \nClass LowerCaseTokenizer;\n// \nClass LowerCaseTokenizerFactory;\n// This class produces a special form of reversed tokens, suitable for better handling of leading wildcards.\nClass ReversedWildcardFilter;\n// Factory for ReversedWildcardFilter-s.\nClass ReversedWildcardFilterFactory;\n// \nClass SolrAnalyzer;\n// An analyzer that uses a tokenizer and a list of token filters to create a TokenStream.\nClass TokenizerChain;\n", "des": "Factories and classes specific to text analysis and the creation of TokenStreams"}
{"index": 3632, "repo": "solr-core-9.3.0", "code": "package api\n\n// The interface that is implemented by a request handler to support the V2 end point\nInterface ApiSupport;\n// Implement this interface if your plugin needs to accept some configuration\nInterface ConfigurablePlugin<T extends org.apache.solr.common.MapWriter>;\n// Listener for notifications about added / deleted / modified plugins.\nInterface ContainerPluginsRegistry.PluginRegistryListener;\n// This class implements an Api just from an annotated java class The class must have an annotation EndPoint Each method must have an annotation Command The methods that implement a command should have the first 2 parameters SolrQueryRequest and SolrQueryResponse or it may optionally have a third parameter which could be a java class annotated with jackson annotations.\nClass AnnotatedApi;\n// Every version 2 API must extend the this class.\nClass Api;\n// \nClass ApiBag;\n// \nClass ApiBag.IntrospectApi;\n// \nClass ApiBag.LazyLoadedApi;\n// \nClass ApiBag.ReqHandlerToApi;\n// This class manages the container-level plugins and their Api-s.\nClass ContainerPluginsRegistry;\n// \nClass CoordinatorV2HttpSolrCall;\n// A marker parent type for all Jersey \"resource\" classes.\nClass JerseyResource;\n// Holds the deserialized object for each command and also holds request , response objects\nClass PayloadObj<T>;\n// \nClass V2HttpCall;\n// \nClass V2HttpCall.CompositeApi;\n// \nEnum ContainerPluginsRegistry.Diff;\n// \nClass ApiBag.ExceptionWithErrObject;\n// \nAnnotation Type Command;\n// \nAnnotation Type EndPoint;\n", "des": "Commonly used classes for Solr V2 API."}
{"index": 3633, "repo": "solr-core-9.3.0", "code": "package cli\n\n// \nInterface CLIO;\n// \nInterface Tool;\n// \nClass ApiTool;\n// Asserts various conditions and exists with error code if fails, else continues with no output\nClass AssertTool;\n// \nClass AuthTool;\n// \nClass ConfigSetDownloadTool;\n// \nClass ConfigSetUploadTool;\n// Sends a POST to the Config API to perform a specified action.\nClass ConfigTool;\n// Supports create_collection command in the bin/solr script.\nClass CreateCollectionTool;\n// \nClass CreateCoreTool;\n// \nClass CreateTool;\n// \nClass DeleteTool;\n// \nClass ExportTool;\n// \nClass ExportTool.Info;\n// \nClass HealthcheckTool;\n// \nClass PackageTool;\n// Supports an interactive session with the user to launch (or relaunch the -e cloud example)\nClass RunExampleTool;\n// A simple utility class for posting raw updates to a Solr server.\nClass SimplePostTool;\n// \nClass SimplePostTool.BAOS;\n// Utility class to hold the result form a page fetch\nClass SimplePostTool.PageFetcherResult;\n// Command-line utility for working with Solr.\nClass SolrCLI;\n// A command line tool for indexing Solr logs in the out-of-the-box log format.\nClass SolrLogPostTool;\n// \nClass SolrLogPostTool.LogRecordReader;\n// \nClass StatusTool;\n// \nClass ToolBase;\n// \nClass ZkCpTool;\n// \nClass ZkLsTool;\n// \nClass ZkMkrootTool;\n// \nClass ZkMvTool;\n// \nClass ZkRmTool;\n// \nClass SolrCLI.AssertionFailureException;\n", "des": "Solr Command Line Interface classes"}
{"index": 3634, "repo": "solr-core-9.3.0", "code": "package embedded\n\n// SolrClient that connects directly to a CoreContainer.\nClass EmbeddedSolrServer;\n// \nEnum EmbeddedSolrServer.RequestWriterSupplier;\n", "des": "SolrJ client implementations for embedded solr access."}
{"index": 3635, "repo": "solr-core-9.3.0", "code": "package cloud\n\n// Classes for updating cluster state in SolrCloud mode.\npackage cloud.overseer\n// Intended for components that should be enabled only one instance per cluster.\nInterface ClusterSingleton;\n// \nInterface DistributedCollectionLockFactory;\n// \nInterface DistributedConfigSetLockFactory;\n// A lock that can be used across cluster nodes.\nInterface DistributedLock;\n// \nInterface Overseer.Message;\n// Interface for processing messages received by an OverseerTaskProcessor\nInterface OverseerMessageHandler;\n// \nInterface OverseerMessageHandler.Lock;\n// An interface to determine which OverseerMessageHandler handles a given message.\nInterface OverseerTaskProcessor.OverseerMessageHandlerSelector;\n// \nInterface RecoveryStrategy.RecoveryListener;\n// \nClass ActionThrottle;\n// Watch for replicas to become Replica.State.ACTIVE.\nClass ActiveReplicaWatcher;\n// SolrCloud metadata attached to a CoreDescriptor.\nClass CloudDescriptor;\n// \nClass CloudUtil;\n// This class implements a higher level locking abstraction for the Config Set API using lower level read and write locks.\nClass ConfigSetApiLockFactory;\n// This class contains methods dealing with Config Sets and called for Config Set API execution, called from the OverseerConfigSetMessageHandler or from DistributedCollectionConfigSetCommandRunner.runConfigSetCommand(org.apache.solr.response.SolrQueryResponse, org.apache.solr.common.params.ConfigSetParams.ConfigSetAction, java.util.Map<java.lang.String, java.lang.Object>, long) depending on whether Collection and Config Set APIs are Overseer based or distributed.\nClass ConfigSetCmds;\n// Class holding the implementation required for tracking asynchronous Collection API (or other) tasks when the Collection API is distributed.\nClass DistributedApiAsyncTracker;\n// Gives access to distributed cluster state update methods and allows code to inquire whether distributed state update is enabled.\nClass DistributedClusterStateUpdater;\n// Class handling the distributed updates of collection's Zookeeper files state.json based on multiple updates applied to a single collection (as is sometimes done by *Cmd classes implementing the Collection API commands).\nClass DistributedClusterStateUpdater.StateChangeRecorder;\n// A distributed map.\nClass DistributedMap;\n", "des": "Classes for dealing with ZooKeeper when operating in SolrCloud mode."}
{"index": 3636, "repo": "solr-core-9.3.0", "code": "package collections\n\n// Strategy for assigning replicas to nodes.\nInterface Assign.AssignStrategy;\n// Interface implemented by all Collection API commands.\nInterface CollApiCmds.CollectionApiCommand;\n// Data passed to Collection API command execution, to allow calls from either the OverseerCollectionMessageHandler when commands are executed on the Overseer, or - in a future change - allow Collection API commands to be executed in a distributed way, unrelated to and not depending upon Overseer abstractions (including overseer collection message handling).\nInterface CollectionCommandContext;\n// \nClass AddReplicaCmd;\n// A data structure to keep all information required to create a new replica in one place.\nClass AddReplicaCmd.CreateReplica;\n// \nClass Assign;\n// \nClass Assign.AssignRequest;\n// \nClass Assign.AssignRequestBuilder;\n// \nClass BackupCmd;\n// \nClass BalanceReplicasCmd;\n// \nClass CategoryRoutedAlias;\n// This class contains \"smaller\" Collection API commands implementation, the interface implemented by all commands and the class mapping a collection action to the actual command.\nClass CollApiCmds;\n// \nClass CollApiCmds.AddReplicaPropCmd;\n// \nClass CollApiCmds.BalanceShardsUniqueCmd;\n// Map CollectionParams.CollectionAction to instances of CollApiCmds.CollectionApiCommand and being usable by both OverseerCollectionMessageHandler and DistributedCollectionConfigSetCommandRunner so that the mappings do not have to be maintained in two places.\nClass CollApiCmds.CommandMap;\n// \nClass CollApiCmds.DeleteReplicaPropCmd;\n// \nClass CollApiCmds.MockOperationCmd;\n// \nClass CollApiCmds.ModifyCollectionCmd;\n// \nClass CollApiCmds.RebalanceLeadersCmd;\n// \nClass CollApiCmds.ReloadCollectionCmd;\n// This class implements a higher level locking abstraction for the Collection API using lower level read and write locks.\nClass CollectionApiLockFactory;\n// This class contains helper methods used by commands of the Collection API.\nClass CollectionHandlingUtils;\n// \nClass CollectionHandlingUtils.ShardRequestTracker;\n// \nClass CreateAliasCmd;\n// \nClass CreateCollectionCmd;\n// \nClass CreateShardCmd;\n", "des": "Package related to internal implementations of the SolrCloud collections api"}
{"index": 3637, "repo": "solr-core-9.3.0", "code": "package overseer\n\n// \nInterface ZkStateWriter.ZkWriteCallback;\n// \nClass ClusterStateMutator;\n// \nClass CollectionMutator;\n// \nClass NodeMutator;\n// \nClass ReplicaMutator;\n// \nClass SliceMutator;\n// ZkStateWriter is responsible for writing updates to the cluster state stored in ZooKeeper for collections each of which gets their own individual state.json in ZK.\nClass ZkStateWriter;\n// \nClass ZkWriteCommand;\n// Enum of actions supported by the overseer only.\nEnum OverseerAction;\n", "des": "Classes for updating cluster state in SolrCloud mode."}
{"index": 3638, "repo": "solr-core-9.3.0", "code": "package cluster\n\n// Interfaces defining support for cluster-level event generation and processing.\npackage cluster.events\n// This package contains interfaces visible by plugins (i.e.\npackage cluster.placement\n// A representation of the SolrCloud cluster state, providing information on which nodes and collections are part of the cluster and a way to get to more detailed info.\nInterface Cluster;\n// Representation of a SolrCloud node or server in the SolrCloud cluster.\nInterface Node;\n// An instantiation (or one of the copies) of a given Shard of a given SolrCollection.\nInterface Replica;\n// Shard in a SolrCollection, i.e.\nInterface Shard;\n// Represents a Collection in SolrCloud (unrelated to Collection that uses the nicer name).\nInterface SolrCollection;\n// \nEnum Replica.ReplicaState;\n// The order of this enum is important from the most to least \"important\" replica type.\nEnum Replica.ReplicaType;\n// \nEnum Shard.ShardState;\n", "des": "This package contains the interfaces giving access to cluster state, including nodes, collections and the structure of the collections (shards and replicas)."}
{"index": 3639, "repo": "solr-core-9.3.0", "code": "package events\n\n// Default implementation of ClusterEventProducer.\npackage events.impl\n// Cluster-level event.\nInterface ClusterEvent;\n// Components that want to be notified of cluster-wide events should use this.\nInterface ClusterEventListener;\n// Component that produces ClusterEvent instances.\nInterface ClusterEventProducer;\n// Event generated when ZkStateReader.CLUSTER_PROPS is modified.\nInterface ClusterPropertiesChangedEvent;\n// Event generated when some collections have been added.\nInterface CollectionsAddedEvent;\n// Event generated when some collections have been removed.\nInterface CollectionsRemovedEvent;\n// Event generated when some nodes went down.\nInterface NodesDownEvent;\n// Event generated when some nodes went up.\nInterface NodesUpEvent;\n// Base class for implementing ClusterEventProducer.\nClass ClusterEventProducerBase;\n// No-op implementation of ClusterEventProducer.\nClass NoOpProducer;\n// \nEnum ClusterEvent.EventType;\n", "des": "Interfaces defining support for cluster-level event generation and processing."}
{"index": 3640, "repo": "solr-core-9.3.0", "code": "package impl\n\n// This class helps in handling the initial registration of plugin-based listeners, when both the final ClusterEventProducer implementation and listeners are configured using plugins.\nClass ClusterEventProducerFactory;\n// This is an illustration how to re-implement the combination of Solr 8x NodeLostTrigger and AutoAddReplicasPlanAction to maintain the collection's replicas when nodes are lost.\nClass CollectionsRepairEventListener;\n// Implementation of ClusterEventProducer.\nClass DefaultClusterEventProducer;\n// This implementation allows Solr to dynamically change the underlying implementation of ClusterEventProducer in response to the changed plugin configuration.\nClass DelegatingClusterEventProducer;\n", "des": "Default implementation of ClusterEventProducer."}
{"index": 3641, "repo": "solr-core-9.3.0", "code": "package placement\n\n// Implementation classes (not visible to plugins, subject to change at any time) for the interfaces in org.apache.solr.cluster.placement and to make them work with the rest of Solr.\npackage placement.impl\n// Sample plugin implementations.\npackage placement.plugins\n// Instances of this interface are used to fetch various attributes from nodes (and other sources) in the cluster.\nInterface AttributeFetcher;\n// \nInterface AttributeValues;\n// A fully specified plan or instructions for replica balancing to be applied to the cluster.\nInterface BalancePlan;\n// Allows plugins to create BalancePlans telling the Solr layer how to balance replicas following the processing of a BalanceRequest.\nInterface BalancePlanFactory;\n// A cluster related placement request that Solr asks a PlacementPlugin to resolve and compute replica balancing plan for replicas that already exist across a set of Nodes.\nInterface BalanceRequest;\n// Collection-level metrics.\nInterface CollectionMetrics;\n// Delete collection request.\nInterface DeleteCollectionRequest;\n// Delete replicas request.\nInterface DeleteReplicasRequest;\n// Delete shards request.\nInterface DeleteShardsRequest;\n// Metric-related attribute of a node or replica.\nInterface Metric<T>;\n// Collection modification request.\nInterface ModificationRequest;\n// Node metric identifier, corresponding to a node-level metric registry and the internal metric name.\nInterface NodeMetric<T>;\n// Placement context makes it easier to pass around and access main placement-related components.\nInterface PlacementContext;\n// A fully specified plan or instructions for placement, deletion or move to be applied to the cluster.\nInterface PlacementPlan;\n// Allows plugins to create PlacementPlans telling the Solr layer where to create replicas following the processing of a PlacementRequest.\nInterface PlacementPlanFactory;\n// Implemented by external plugins to control replica placement and movement on the search cluster (as well as other things such as cluster elasticity?) when cluster changes are required (initiated elsewhere, most likely following a Collection API call).\nInterface PlacementPlugin;\n// Configuration beans should use this interface to define public (mutable) configuration properties.\nInterface PlacementPluginConfig;\n// Factory implemented by client code and configured in container plugins (see ContainerPluginsApi.editAPI) allowing the creation of instances of PlacementPlugin to be used for replica placement computation.\nInterface PlacementPluginFactory<T extends PlacementPluginConfig>;\n", "des": "This package contains interfaces visible by plugins (i.e."}
{"index": 3642, "repo": "solr-core-9.3.0", "code": "package impl\n\n// Implementation of AttributeFetcher that uses SolrCloudManager to access Solr cluster details.\nClass AttributeFetcherImpl;\n// Implementation of AttributeValues used by AttributeFetcherImpl.\nClass AttributeValuesImpl;\n// Simple implementation of BalancePlanFactory.\nClass BalancePlanFactoryImpl;\n// \nClass BalanceRequestImpl;\n// Builder class for constructing instances of CollectionMetrics.\nClass CollectionMetricsBuilder;\n// \nClass CollectionMetricsBuilder.ReplicaMetricsBuilder;\n// \nClass CollectionMetricsBuilder.ShardMetricsBuilder;\n// Helper class to support dynamic reloading of plugin implementations.\nClass DelegatingPlacementPluginFactory;\n// Base class for Metric implementations.\nClass MetricImpl<T>;\n// Helper class to create modification request instances.\nClass ModificationRequestImpl;\n// Node metric identifier, corresponding to a node-level metric registry and the internal metric name.\nClass NodeMetricImpl<T>;\n// Simple implementation of PlacementPlanFactory.\nClass PlacementPlanFactoryImpl;\n// This assign strategy delegates placement computation to \"plugin\" code.\nClass PlacementPluginAssignStrategy;\n// Utility class to load the configured PlacementPluginFactory plugin and then keep it up to date as the plugin configuration changes.\nClass PlacementPluginFactoryLoader;\n// \nClass PlacementRequestImpl;\n// Replica metric identifier, corresponding to one of the internal replica-level metric names (as reported in solr.core.[collection].[replica] registry)\nClass ReplicaMetricImpl<T>;\n// Implementation of PlacementContext that uses SimpleClusterAbstractionsImpl to create components necessary for the placement plugins to use.\nClass SimplePlacementContextImpl;\n", "des": "Implementation classes (not visible to plugins, subject to change at any time) for the interfaces in org.apache.solr.cluster.placement and to make them work with the rest of Solr."}
{"index": 3643, "repo": "solr-core-9.3.0", "code": "package plugins\n\n// Configuration bean for AffinityPlacementFactory.\nClass AffinityPlacementConfig;\n// This factory is instantiated by config from its class name.\nClass AffinityPlacementFactory;\n// Factory for creating MinimizeCoresPlacementFactory.MinimizeCoresPlacementPlugin, a Placement plugin implementing placing replicas to minimize number of cores per Node, while not placing two replicas of the same shard on the same node.\nClass MinimizeCoresPlacementFactory;\n// \nClass OrderedNodePlacementPlugin;\n// A class that determines the weight of a given node and the replicas that reside on it.\nClass OrderedNodePlacementPlugin.WeightedNode;\n// Factory for creating RandomPlacementFactory.RandomPlacementPlugin, a placement plugin implementing random placement for new collection creation while preventing two replicas of same shard from being placed on same node..\nClass RandomPlacementFactory;\n// \nClass RandomPlacementFactory.RandomPlacementPlugin;\n// Factory for creating SimplePlacementFactory.SimplePlacementPlugin, a placement plugin implementing the logic from the old LegacyAssignStrategy.\nClass SimplePlacementFactory;\n// \nClass SimplePlacementFactory.SimplePlacementPlugin;\n", "des": "Sample plugin implementations."}
{"index": 3644, "repo": "solr-core-9.3.0", "code": "package core\n\n// Core classes for Solr's Backup/Restore functionality\npackage core.backup\n// Core classes for Solr's persistent snapshots functionality\npackage core.snapshots\n// \nInterface BlobRepository.Decoder<T>;\n// \nInterface CachingDirectoryFactory.CloseListener;\n// Used to request notification when the core is closed.\nInterface CloseHook;\n// \nInterface ConfigSetService.ConfigResource;\n// Manage the discovery and persistence of core definitions across Solr restarts\nInterface CoresLocator;\n// \nInterface Diagnostics.Callable;\n// CachingDirectoryFactory will call this method rather than Directory.close() on shutdown if a Directory implements this interface.\nInterface ShutdownAwareDirectory;\n// \nInterface SolrCore.RawWriter;\n// \nInterface SolrEventListener;\n// Interface for getting various ui friendly strings for use by objects which are 'pluggable' to make server administration easier.\nInterface SolrInfoBean;\n// \nClass AbstractSolrEventListener;\n// The purpose of this class is to store the Jars loaded in memory and to keep only one copy of the Jar in a single node.\nClass BlobRepository;\n// \nClass BlobRepository.BlobContent<T>;\n// \nClass BlobRepository.BlobContentRef<T>;\n// Factory to instantiate ByteBuffersDirectory\nClass ByteBuffersDirectoryFactory;\n// A DirectoryFactory impl base class for caching Directory instances per path.\nClass CachingDirectoryFactory;\n// \nClass CachingDirectoryFactory.CacheValue;\n// Tracks metadata for active queries and provides methods for access\nClass CancellableQueryTracker;\n// \nClass CloudConfig;\n// \nClass CloudConfig.CloudConfigBuilder;\n// Helper class to manage the initial registration of ClusterSingleton plugins and to track the changes in loaded plugins in ContainerPluginsRegistry.\nClass ClusterSingletons;\n// Factory for plugging in a custom Codec\nClass CodecFactory;\n// This class encapsulates the config overlay json file.\nClass ConfigOverlay;\n// Stores a core's configuration in the form of a SolrConfig and IndexSchema.\nClass ConfigSet;\n// Utility methods for reading configSet properties.\nClass ConfigSetProperties;\n// Service class used by the CoreContainer to load ConfigSets for use in SolrCore creation.\nClass ConfigSetService;\n// \nClass CoreContainer;\n", "des": "Core classes implementing Solr internals and the management of SolrCores"}
{"index": 3645, "repo": "solr-core-9.3.0", "code": "package backup\n\n// BackupRepository Providing backup/restore repository interfaces to plug different storage systems\npackage backup.repository\n// Aggregate stats from multiple ShardBackupMetadata\nClass AggregateBackupStats;\n// Utility class for getting paths related to backups, or parsing information out of those paths.\nClass BackupFilePaths;\n// Represents the ID of a particular backup.\nClass BackupId;\n// This class implements functionality to create a backup with extension points provided to integrate with different types of file-systems.\nClass BackupManager;\n// Represents a backup[-*].properties file, responsible for holding whole-collection and whole-backup metadata.\nClass BackupProperties;\n// Represents checksum information for an index file being backed up.\nClass Checksum;\n// Represents the ID of a particular backup point for a particular shard.\nClass ShardBackupId;\n// Represents the shard-backup metadata file.\nClass ShardBackupMetadata;\n// \nClass ShardBackupMetadata.BackedFile;\n", "des": "Core classes for Solr's Backup/Restore functionality"}
{"index": 3646, "repo": "solr-core-9.3.0", "code": "package repository\n\n// This interface defines the functionality required to backup/restore Solr indexes to an arbitrary storage system.\nInterface BackupRepository;\n// \nClass BackupRepositoryFactory;\n// A concrete implementation of BackupRepository interface supporting backup/restore of Solr indexes to a local file-system.\nClass LocalFileSystemRepository;\n// This enumeration defines the type of a given path.\nEnum BackupRepository.PathType;\n", "des": "BackupRepository Providing backup/restore repository interfaces to plug different storage systems"}
{"index": 3647, "repo": "solr-core-9.3.0", "code": "package snapshots\n\n// This class defines the meta-data about a collection level snapshot\nClass CollectionSnapshotMetaData;\n// \nClass CollectionSnapshotMetaData.CoreSnapshotMetaData;\n// This class provides functionality required to handle the data files corresponding to Solr snapshots.\nClass SolrSnapshotManager;\n// This class is responsible to manage the persistent snapshots meta-data for the Solr indexes.\nClass SolrSnapshotMetaDataManager;\n// A class defining the meta-data for a specific snapshot.\nClass SolrSnapshotMetaDataManager.SnapshotMetaData;\n// \nEnum CollectionSnapshotMetaData.SnapshotStatus;\n", "des": "Core classes for Solr's persistent snapshots functionality"}
{"index": 3648, "repo": "solr-core-9.3.0", "code": "package filestore\n\n// The interface to be implemented by any package store provider * @lucene.experimental\nInterface PackageStore;\n// \nInterface PackageStore.FileDetails;\n// \nClass DistribPackageStore;\n// \nClass PackageStore.FileEntry;\n// \nClass PackageStoreAPI;\n// \nClass PackageStoreAPI.MetaData;\n// \nEnum PackageStore.FileType;\n", "des": "Implementation of Package Store."}
{"index": 3649, "repo": "solr-core-9.3.0", "code": "package handler\n\n// SolrRequestHandler implementations for powering he Solr Admin UI\npackage handler.admin\n// V2 utilities useful for all API implementations.\npackage handler.api\n// SearchComponent implementations for use in SearchHandler\npackage handler.component\n// V2 API classes for performing CRUD operations on configsets.\npackage handler.configsets\n// The SchemaDesignerAPI and supporting classes.\npackage handler.designer\n// Solr's Export Handler Functionality\npackage handler.export\n// ContentStreamLoader implementations for use in ContentStreamHandlerBase implementations\npackage handler.loader\n// The TaggerRequestHandler and supporting classes.\npackage handler.tagger\n// This is an Attribute used to track the positions of tokens in the analysis chain.\nInterface AnalysisRequestHandlerBase.TokenTrackingAttribute;\n// An interface for RequestHandlers need to handle all paths under its registered path\nInterface NestedRequestHandler;\n// \nInterface ReplicationHandler.PollListener;\n// A base class for all analysis request handlers.\nClass AnalysisRequestHandlerBase;\n// Serves as the context of an analysis process.\nClass AnalysisRequestHandlerBase.AnalysisContext;\n// TokenStream that iterates over a list of pre-existing Tokens\nClass AnalysisRequestHandlerBase.ListBasedTokenStream;\n// Implementation of AnalysisRequestHandlerBase.TokenTrackingAttribute.\nClass AnalysisRequestHandlerBase.TokenTrackingAttributeImpl;\n// \nClass AnalyzeEvaluator;\n// \nClass BlobHandler;\n// \nClass CatStream;\n// \nClass CatStream.CrawlFile;\n// The classify expression retrieves a model trained by the train expression and uses it to classify documents from a stream Syntax: classif(model(...), anyStream(...), field=\"body\")\nClass ClassifyStream;\n// All V2 APIs that have a prefix of /api/cluster/\nClass ClusterAPI;\n// \nClass ClusterAPI.RoleInfo;\n// Shares common code between various handlers that manipulate ContentStream objects.\nClass ContentStreamHandlerBase;\n// An analysis handler that provides a breakdown of the analysis process of provided documents.\nClass DocumentAnalysisRequestHandler;\n// \nClass DumpRequestHandler;\n// \nClass ExportHandler;\n// \nClass ExportHandler.ExportHandlerStreamFactory;\n// Provides the ability to specify multiple field types and field names in the same request.\nClass FieldAnalysisRequestHandler;\n", "des": "Concrete implementations of SolrRequestHandler"}
{"index": 3650, "repo": "solr-core-9.3.0", "code": "package admin\n\n// V2 API implementations for \"admin\" APIs.\npackage admin.api\n// \nInterface BaseHandlerApiSupport.ApiCommand;\n// \nInterface CoreAdminHandler.CoreAdminOp;\n// Static methods to proxy calls to an Admin (GET) API to other nodes in the cluster and return a combined response\nClass AdminHandlersProxy;\n// This is a utility class to provide an easy mapping of request handlers which support multiple commands to the V2 API format (core admin api, collections api).\nClass BaseHandlerApiSupport;\n// \nClass ClusterStatus;\n// \nClass CollectionsHandler;\n// Report low-level details of collection.\nClass ColStatus;\n// A SolrRequestHandler for ConfigSets API requests.\nClass ConfigSetsHandler;\n// API to maintain container-level plugin configurations.\nClass ContainerPluginsApi;\n// \nClass CoreAdminHandler;\n// \nClass CoreAdminHandler.CallInfo;\n// \nClass CoreAdminHandler.CoreAdminAsyncTracker;\n// Helper class to manage the tasks to be tracked.\nClass CoreAdminHandler.CoreAdminAsyncTracker.TaskObject;\n// Health Check Handler for reporting the health of a specific node.\nClass HealthCheckHandler;\n// Estimates the raw size of all uncompressed indexed data by scanning term, docValues and stored fields data.\nClass IndexSizeEstimator;\n// \nClass IndexSizeEstimator.Estimate;\n// \nClass IndexSizeEstimator.Item;\n// \nClass IndexSizeEstimator.ItemPriorityQueue;\n// \nClass IndexSizeEstimator.MapWriterSummaryStatistics;\n// \nClass InfoHandler;\n// v1 shim implementation of the \"Install Core Data\" API, a core-admin API used to implement the \"Install Shard Data\" Collection-Admin functionality\nClass InstallCoreDataOp;\n// A request handler to show which loggers are registered and allows you to set them\nClass LoggingHandler;\n// Exposes the internal lucene index.\nClass LukeRequestHandler;\n// Handler to collect and aggregate metric reports.\nClass MetricsCollectorHandler;\n// Request handler to return metrics\nClass MetricsHandler;\n// \nClass PluginInfoHandler;\n// \nClass PropertiesRequestHandler;\n// \nClass SecurityConfHandler;\n", "des": "SolrRequestHandler implementations for powering he Solr Admin UI"}
{"index": 3651, "repo": "solr-core-9.3.0", "code": "package api\n\n// V2 API for adding a property to a collection replica\nClass AddReplicaPropertyAPI;\n// \nClass AddReplicaPropertyAPI.AddReplicaPropertyRequestBody;\n// A common parent for \"admin\" (i.e.\nClass AdminAPIBase;\n// V2 APIs for managing and inspecting properties for collection aliases\nClass AliasPropertyAPI;\n// \nClass AliasPropertyAPI.GetAliasPropertyResponse;\n// \nClass AliasPropertyAPI.GetAllAliasPropertiesResponse;\n// \nClass AliasPropertyAPI.UpdateAliasPropertiesRequestBody;\n// \nClass AliasPropertyAPI.UpdateAliasPropertyRequestBody;\n// V2 API for retrieving status information for all cores on the receiving node.\nClass AllCoresStatusAPI;\n// Base class that facilitates reuse of common validation logic for collection-backup APIs.\nClass BackupAPIBase;\n// V2 API for balancing the replicas that already exist across a set of nodes.\nClass BalanceReplicasAPI;\n// \nClass BalanceReplicasAPI.BalanceReplicasRequestBody;\n// V2 API for insuring that a particular property is distributed evenly amongst the physical nodes comprising a collection.\nClass BalanceShardUniqueAPI;\n// \nClass BalanceShardUniqueAPI.BalanceShardUniqueRequestBody;\n// V2 API for cancelling a currently running \"task\".\nClass CancelTaskAPI;\n// V2 API for modifying collection-level properties.\nClass CollectionPropertyAPI;\n// \nClass CollectionPropertyAPI.UpdateCollectionPropertyRequestBody;\n// V2 API for displaying basic information about a single collection.\nClass CollectionStatusAPI;\n// A common parent for admin Core Jersey-based APIs.\nClass CoreAdminAPIBase;\n// V2 APIs for inspecting and replicating indices\nClass CoreReplicationAPI;\n// Response for CoreReplicationAPI.fetchFileList(long).\nClass CoreReplicationAPI.FileListResponse;\n// Contained in CoreReplicationAPI.FileListResponse, this holds metadata from a file for an index\nClass CoreReplicationAPI.FileMetaData;\n// Response for CoreReplicationAPI.fetchIndexVersion().\nClass CoreReplicationAPI.IndexVersionResponse;\n// V2 API for Creating, Listing, and Deleting Core Snapshots.\nClass CoreSnapshotAPI;\n", "des": "V2 API implementations for \"admin\" APIs."}
{"index": 3652, "repo": "solr-core-9.3.0", "code": "package api\n\n// Utilities helpful for common V2 API declaration tasks.\nClass V2ApiUtils;\n", "des": "V2 utilities useful for all API implementations."}
{"index": 3653, "repo": "solr-core-9.3.0", "code": "package component\n\n// The MergeStrategy class defines custom merge logic for distributed searches.\nInterface MergeStrategy;\n// Provides the elevations defined for queries.\nInterface QueryElevationComponent.ElevationProvider;\n// StatsValue defines the interface for the collection of statistical values about fields and facets.\nInterface StatsValues;\n// List the active tasks that can be cancelled\nClass ActiveTasksListComponent;\n// Handles request for listing all active cancellable tasks\nClass ActiveTasksListHandler;\n// Adds debugging information to a request.\nClass DebugComponent;\n// The ExpandComponent is designed to work with the CollapsingPostFilter.\nClass ExpandComponent;\n// Computes facets -- aggregations with counts of terms or ranges over the whole search results.\nClass FacetComponent;\n// This API is experimental and subject to change\nClass FacetComponent.DistribFieldFacet;\n// This API is experimental and subject to change\nClass FacetComponent.FacetBase;\n// Encapsulates facet ranges and facet queries such that their parameters are parsed and cached for efficient re-use.\nClass FacetComponent.FacetContext;\n// This class is used exclusively for merging results from each shard in a distributed facet request.\nClass FacetComponent.FacetInfo;\n// This API is experimental and subject to change\nClass FacetComponent.FieldFacet;\n// This API is experimental and subject to change\nClass FacetComponent.QueryFacet;\n// This API is experimental and subject to change\nClass FacetComponent.ShardFacetCount;\n// FieldFacetStats is a utility to accumulate statistics on a set of values in one field, for facet values present in another field.\nClass FieldFacetStats;\n// Highlights query words in the search results.\nClass HighlightComponent;\n// \nClass HttpShardHandler;\n// \nClass HttpShardHandlerFactory;\n// \nClass IterativeMergeStrategy;\n// TODO!\nClass MoreLikeThisComponent;\n// A component that can be used in isolation, or in conjunction with QueryComponent to identify & score \"phrases\" found in the input string, based on shingles in indexed fields.\nClass PhrasesIdentificationComponent;\n// Model the data known about a single (candidate) Phrase -- which may or may not be indexed\nClass PhrasesIdentificationComponent.Phrase;\n", "des": "SearchComponent implementations for use in SearchHandler"}
{"index": 3654, "repo": "solr-core-9.3.0", "code": "package configsets\n\n// Parent class for all APIs that manipulate configsets\nClass ConfigSetAPIBase;\n// V2 API for creating a new configset as a copy of an existing one.\nClass CreateConfigSetAPI;\n// V2 API for deleting an existing configset\nClass DeleteConfigSetAPI;\n// V2 API for adding or updating a single file within a configset.\nClass ListConfigSetsAPI;\n// Response body POJO for the ListConfigSetsAPI resource.\nClass ListConfigSetsAPI.ListConfigsetsResponse;\n// V2 API for uploading a new configset (or overwriting an existing one).\nClass UploadConfigSetAPI;\n// V2 API for adding or updating a single file within a configset.\nClass UploadConfigSetFileAPI;\n", "des": "V2 API classes for performing CRUD operations on configsets."}
{"index": 3655, "repo": "solr-core-9.3.0", "code": "package designer\n\n// \nInterface SampleDocumentsLoader;\n// \nInterface SchemaDesignerConstants;\n// \nInterface SchemaSuggester;\n// \nClass DefaultSampleDocumentsLoader;\n// \nClass DefaultSchemaSuggester;\n// Utility methods for comparing managed index schemas\nClass ManagedSchemaDiff;\n// \nClass SampleDocuments;\n// All V2 APIs that have a prefix of /api/schema-designer/\nClass SchemaDesignerAPI;\n", "des": "The SchemaDesignerAPI and supporting classes."}
{"index": 3656, "repo": "solr-core-9.3.0", "code": "package export\n\n// \nInterface IntComp;\n// Prepares and writes the documents requested by /export requests\nClass ExportWriter;\n// Stream implementation that helps supporting 'expr' streaming in export writer.\nClass ExportWriterStream;\n// \nClass IntComp.IntAsc;\n// \nClass IntComp.IntDesc;\n// \nClass IntValue;\n// \nClass LongValue;\n// \nClass ExportWriter.IgnoreException;\n", "des": "Solr's Export Handler Functionality"}
{"index": 3657, "repo": "solr-core-9.3.0", "code": "package loader\n\n// This class can load a single document or a stream of documents in CBOR format this is equivalent of loading a single json documet or an array of json documents\nClass CborLoader;\n// Load a ContentStream into Solr\nClass ContentStreamLoader;\n// \nClass CSVLoader;\n// \nClass CSVLoaderBase;\n// Update handler which uses the JavaBin format\nClass JavabinLoader;\n// \nClass JsonLoader;\n// \nClass XMLLoader;\n", "des": "ContentStreamLoader implementations for use in ContentStreamHandlerBase implementations"}
{"index": 3658, "repo": "solr-core-9.3.0", "code": "package tagger\n\n// \nInterface TagClusterReducer;\n// Attribute used by the Tagger to decide if a token can start a new tag.\nInterface TaggingAttribute;\n// \nClass OffsetCorrector;\n// Tags maximum string of words in a corpus.\nClass Tagger;\n// Scans posted text, looking for matching strings in the Solr index.\nClass TaggerRequestHandler;\n// Implementation of the TaggingAttribute\nClass TaggingAttributeImpl;\n// This is a Tag -- a startOffset, endOffset and value.\nClass TagLL;\n// Corrects offsets to adjust for XML formatted data.\nClass XmlOffsetCorrector;\n", "des": "The TaggerRequestHandler and supporting classes."}
{"index": 3659, "repo": "solr-core-9.3.0", "code": "package highlight\n\n// \nInterface SolrEncoder;\n// \nInterface SolrFormatter;\n// \nInterface SolrFragListBuilder;\n// \nInterface SolrFragmenter;\n// \nClass BreakIteratorBoundaryScanner;\n// Use the DefaultEncoder\nClass DefaultEncoder;\n// \nClass DefaultSolrHighlighter;\n// \nClass DefaultSolrHighlighter.FvhContainer;\n// \nClass GapFragmenter;\n// \nClass HighlightingPluginBase;\n// Use the SimpleHTMLEncoder\nClass HtmlEncoder;\n// Use the SimpleHTMLFormatter\nClass HtmlFormatter;\n// Fragmenter that tries to produce snippets that \"look\" like a regular expression.\nClass RegexFragmenter;\n// \nClass ScoreOrderFragmentsBuilder;\n// \nClass SimpleBoundaryScanner;\n// \nClass SimpleFragListBuilder;\n// \nClass SimpleFragmentsBuilder;\n// \nClass SingleFragListBuilder;\n// \nClass SolrBoundaryScanner;\n// \nClass SolrFragmentsBuilder;\n// \nClass SolrHighlighter;\n// Highlighter impl that uses UnifiedHighlighter\nClass UnifiedSolrHighlighter;\n// From UnifiedSolrHighlighter.getHighlighter(org.apache.solr.request.SolrQueryRequest).\nClass UnifiedSolrHighlighter.SolrExtendedUnifiedHighlighter;\n// \nClass WeightedFragListBuilder;\n", "des": "SolrHighlighter API and related implementations and utilities"}
{"index": 3660, "repo": "solr-core-9.3.0", "code": "package index\n\n// A MergePolicyFactory for the default MergePolicy.\nClass DefaultMergePolicyFactory;\n// A MergePolicyFactory for LogByteSizeMergePolicy objects.\nClass LogByteSizeMergePolicyFactory;\n// A MergePolicyFactory for LogDocMergePolicy objects.\nClass LogDocMergePolicyFactory;\n// A factory for creating a MergePolicy.\nClass MergePolicyFactory;\n// \nClass MergePolicyFactoryArgs;\n// \nClass NoMergePolicyFactory;\n// A MergePolicyFactory for simple MergePolicy objects.\nClass SimpleMergePolicyFactory;\n// This class forces a composite reader (eg a MultiReader or DirectoryReader) to emulate a LeafReader.\nClass SlowCompositeReaderWrapper;\n// \nClass SortingMergePolicy;\n// A MergePolicyFactory for SortingMergePolicy objects.\nClass SortingMergePolicyFactory;\n// A MergePolicyFactory for TieredMergePolicy objects.\nClass TieredMergePolicyFactory;\n// A MergePolicyFactory for UpgradeIndexMergePolicy objects.\nClass UpgradeIndexMergePolicyFactory;\n// A MergePolicyFactory for wrapping additional factories.\nClass WrapperMergePolicyFactory;\n", "des": "Indexing related classes."}
{"index": 3661, "repo": "solr-core-9.3.0", "code": "package csv\n\n// A simple StringBuffer replacement that aims to reduce copying as much as possible.\nClass CharBuffer;\n// Parses CSV files according to the specified configuration.\nClass CSVParser;\n// Print values as a comma separated list.\nClass CSVPrinter;\n// CSVStrategy\nClass CSVStrategy;\n// Utility methods for dealing with CSV files\nClass CSVUtils;\n", "des": "Internal classes used for reading/writing CSV"}
{"index": 3662, "repo": "solr-core-9.3.0", "code": "package jersey\n\n// Adapter code used to convert the native Jetty request/response abstractions into the objects required by Jersey\npackage jersey.container\n// A MapWriter implementation that relies on Jackson's JsonProperty annotation.\nInterface JacksonReflectMapWriter;\n// Keys used to store and retrieve values from the Jersey request context.\nInterface RequestContextKeys;\n// \nClass AsyncJerseyResponse;\n// Flattens the exception and sets on a SolrJerseyResponse.\nClass CatchAllExceptionMapper;\n// A value type representing an error.\nClass ErrorInfo;\n// \nClass ErrorInfo.ErrorMetadata;\n// SolrJerseyResponse implementation with a warning field indicating that the format may change\nClass ExperimentalResponse;\n// \nClass InjectionFactories;\n// Allows access to a ContainerRequestContext via a ServiceLocator\nClass InjectionFactories.RequestContextBasedFactory;\n// \nClass InjectionFactories.ReuseFromContextIndexSchemaFactory;\n// Fetch the (existing) SolrCore from the request context\nClass InjectionFactories.ReuseFromContextSolrCoreFactory;\n// \nClass InjectionFactories.ReuseFromContextSolrParamsFactory;\n// \nClass InjectionFactories.SingletonFactory<T>;\n// \nClass InjectionFactories.SolrQueryRequestFactory;\n// \nClass InjectionFactories.SolrQueryResponseFactory;\n// Stores Jersey 'ApplicationHandler' instances by an ID or hash derived from their ConfigSet.\nClass JerseyAppHandlerCache;\n// JAX-RS \"application\" configurations for Solr's CoreContainer and SolrCore instances\nClass JerseyApplications;\n// \nClass JerseyApplications.CoreContainerApp;\n// \nClass JerseyApplications.SolrCoreApp;\n// Overrides the content-type of the response based on an optional user-provided 'wt' parameter\nClass MediaTypeOverridingFilter;\n// A collection point for various MessageBodyReader implementations.\nClass MessageBodyReaders;\n// Caches the deserialized request body in the ContainerRequestContext for use later in the request lifecycle.\nClass MessageBodyReaders.CachingDelegatingMessageBodyReader;\n// A JSON MessageBodyReader that caches request bodies for use later in the request lifecycle.\nClass MessageBodyReaders.CachingJsonMessageBodyReader;\n", "des": "Jersey integration code"}
{"index": 3663, "repo": "solr-core-9.3.0", "code": "package container\n\n// Utility methods for creating and populating a ContainerRequest for use with Jersey ApplicationHandlers\nClass ContainerRequestUtils;\n// A ResponseWriter which copies that output of JAX-RS computation over to HttpServletResponse object used by the Jetty server.\nClass JettyBridgeResponseWriter;\n", "des": "Adapter code used to convert the native Jetty request/response abstractions into the objects required by Jersey"}
{"index": 3664, "repo": "solr-core-9.3.0", "code": "package legacy\n\n// Expert: Use this attribute to get the details of the currently generated token.\nInterface LegacyNumericTokenStream.LegacyNumericTermAttribute;\n// \nClass BBoxStrategy;\n// \nClass LegacyDoubleField;\n// \nClass LegacyField;\n// \nClass LegacyFieldType;\n// \nClass LegacyFloatField;\n// \nClass LegacyIntField;\n// \nClass LegacyLongField;\n// \nClass LegacyNumericRangeQuery<T extends Number>;\n// \nClass LegacyNumericTokenStream;\n// Implementation of LegacyNumericTokenStream.LegacyNumericTermAttribute.\nClass LegacyNumericTokenStream.LegacyNumericTermAttributeImpl;\n// \nClass LegacyNumericUtils;\n// Callback for LegacyNumericUtils.splitIntRange(org.apache.solr.legacy.LegacyNumericUtils.IntRangeBuilder, int, int, int).\nClass LegacyNumericUtils.IntRangeBuilder;\n// Callback for LegacyNumericUtils.splitLongRange(org.apache.solr.legacy.LegacyNumericUtils.LongRangeBuilder, int, long, long).\nClass LegacyNumericUtils.LongRangeBuilder;\n// \nEnum LegacyNumericType;\n", "des": "Deprecated stuff!"}
{"index": 3665, "repo": "solr-core-9.3.0", "code": "package logging\n\n// JUL based implementation of LogWatcher\npackage logging.jul\n// LOG4J2 based implementation of LogWatcher\npackage logging.log4j2\n// FIFO Circular List.\nClass CircularList<T>;\n// Utility to log a deprecation.\nClass DeprecationLog;\n// \nClass ListenerConfig;\n// Wrapper class for Logger implementations\nClass LoggerInfo;\n// A Class to monitor Logging events and hold N events in memory\nClass LogWatcher<E>;\n// Defines the configuration of a LogWatcher\nClass LogWatcherConfig;\n// Set's per thread context info for logging.\nClass MDCLoggingContext;\n// Takes a 'snapshot' of the current MDC context map which is restored on (auto) close.\nClass MDCSnapshot;\n", "des": "APIs related to capturing log event info in the LoggingHandler"}
{"index": 3666, "repo": "solr-core-9.3.0", "code": "package jul\n\n// \nClass JulInfo;\n// \nClass JulWatcher;\n// \nClass RecordHandler;\n", "des": "JUL based implementation of LogWatcher"}
{"index": 3667, "repo": "solr-core-9.3.0", "code": "package log4j2\n\n// \nClass Log4j2Watcher;\n// \nClass Log4j2Watcher.Log4j2Appender;\n// \nClass Log4j2Watcher.Log4j2Info;\n", "des": "LOG4J2 based implementation of LogWatcher"}
{"index": 3668, "repo": "solr-core-9.3.0", "code": "package metrics\n\n// This package houses 'pluggable' metric reporters that inherit from the SolrMetricReporter class.\npackage metrics.reporters\n// Marker interface for all no-op metrics.\nInterface MetricSuppliers.NoOpMetric;\n// Used by objects that expose metrics through SolrMetricManager.\nInterface SolrMetricProducer;\n// This class is used for keeping several partial named values and providing useful statistics over them.\nClass AggregateMetric;\n// Simple class to represent current value and how many times it was set.\nClass AggregateMetric.Update;\n// This is an alternative implementation of BufferPoolMetricSet that doesn't need an MBean server.\nClass AltBufferPoolMetricSet;\n// A counter implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries\nClass DelegateRegistryCounter;\n// A meter implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries\nClass DelegateRegistryHistogram;\n// A meter implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries\nClass DelegateRegistryMeter;\n// A timer implementation that is aware of both primary and delegate metrics belonging to different registries and able to update metrics in multiple registries\nClass DelegateRegistryTimer;\n// A SolrMetricReporter that supports (prefix) filters.\nClass FilteringSolrMetricReporter;\n// Dynamically constructed map of metrics, intentionally different from MetricSet where each metric had to be known in advance and registered separately in MetricRegistry.\nClass MetricsMap;\n// Helper class for constructing instances of MetricRegistry.MetricSupplier based on plugin configuration.\nClass MetricSuppliers;\n// Default Counter supplier.\nClass MetricSuppliers.DefaultCounterSupplier;\n// Default supplier of Histogram instances, with configurable reservoir.\nClass MetricSuppliers.DefaultHistogramSupplier;\n// Default Meter supplier.\nClass MetricSuppliers.DefaultMeterSupplier;\n// Default supplier of Timer instances, with configurable clock and reservoir.\nClass MetricSuppliers.DefaultTimerSupplier;\n// No-op implementation of Counter supplier.\nClass MetricSuppliers.NoOpCounterSupplier;\n// No-op implementation of Gauge.\nClass MetricSuppliers.NoOpGauge;\n", "des": "The SolrCoreMetricManager is responsible for collecting metrics from SolrMetricProducer's and exposing metrics to SolrMetricReporter's."}
{"index": 3669, "repo": "solr-core-9.3.0", "code": "package reporters\n\n// This package contains components that support SolrJmxReporter.\npackage reporters.jmx\n// This package contains SolrMetricReporter implementations specific to SolrCloud reporting.\npackage reporters.solr\n// Provide an instance of service client.\nInterface ReporterClientCache.ClientProvider<T>;\n// Simple cache for reusable service clients used by some implementations of SolrMetricReporter.\nClass ReporterClientCache<T>;\n// Metrics reporter that wraps GraphiteReporter.\nClass SolrGraphiteReporter;\n// A SolrMetricReporter that finds (or creates) a MBeanServer from the given configuration and registers metrics to it with JMX.\nClass SolrJmxReporter;\n// Metrics reporter that wraps Slf4jReporter.\nClass SolrSlf4jReporter;\n", "des": "This package houses 'pluggable' metric reporters that inherit from the SolrMetricReporter class."}
{"index": 3670, "repo": "solr-core-9.3.0", "code": "package jmx\n\n// \nInterface JmxMetricsReporter.JmxCounterMBean;\n// \nInterface JmxMetricsReporter.JmxGaugeMBean;\n// \nInterface JmxMetricsReporter.JmxHistogramMBean;\n// \nInterface JmxMetricsReporter.JmxMeterMBean;\n// \nInterface JmxMetricsReporter.JmxTimerMBean;\n// \nInterface JmxMetricsReporter.MetricMBean;\n// This is a modified copy of Dropwizard's JmxReporter and classes that it internally uses, with a few important differences: this class knows that it can directly use MetricsMap as a dynamic MBean.\nClass JmxMetricsReporter;\n// Builder for the JmxMetricsReporter class.\nClass JmxMetricsReporter.Builder;\n// Factory to create MBean names for a given metric.\nClass JmxObjectNameFactory;\n", "des": "This package contains components that support SolrJmxReporter."}
{"index": 3671, "repo": "solr-core-9.3.0", "code": "package solr\n\n// Implementation of ScheduledReporter that reports metrics from selected registries and sends them periodically as update requests to a selected Solr collection and to a configured handler.\nClass SolrReporter;\n// Builder for the SolrReporter class.\nClass SolrReporter.Builder;\n// Specification of what registries and what metrics to send.\nClass SolrReporter.Report;\n", "des": "This package contains SolrMetricReporter implementations specific to SolrCloud reporting."}
{"index": 3672, "repo": "solr-core-9.3.0", "code": "package packagemanager\n\n// This is a serializable bean (for the JSON that is stored in /repository.json) representing a repository of Solr packages.\nClass DefaultPackageRepository;\n// Handles most of the management of packages that are already installed in Solr.\nClass PackageManager;\n// Abstract class for a repository, holding SolrPackage items.\nClass PackageRepository;\n// \nClass PackageUtils;\n// Handles most of the management of repositories and packages present in external repositories.\nClass RepositoryManager;\n// Describes a package (along with all released versions) as it appears in a repository.\nClass SolrPackage;\n// \nClass SolrPackage.Artifact;\n// \nClass SolrPackage.Command;\n// \nClass SolrPackage.Manifest;\n// \nClass SolrPackage.Plugin;\n// \nClass SolrPackage.SolrPackageRelease;\n// Describes one instance of a package as it exists in Solr when installed.\nClass SolrPackageInstance;\n", "des": "This package contains Package Manager (CLI) implementation"}
{"index": 3673, "repo": "solr-core-9.3.0", "code": "package parser\n\n// Token literal values and constants.\nInterface QueryParserConstants;\n// \nClass QueryParser;\n// Token Manager.\nClass QueryParserTokenManager;\n// This class is overridden by QueryParser in QueryParser.jj and acts to separate the majority of the Java code from the .jj grammar file.\nClass SolrQueryParserBase;\n// \nClass SolrQueryParserBase.RawQuery;\n// Describes the input token stream.\nClass Token;\n// The default operator for parsing queries.\nEnum QueryParser.Operator;\n// Identifies the list of all known \"magic fields\" that trigger special parsing behavior\nEnum SolrQueryParserBase.MagicFieldName;\n// Query strategy when analyzed query terms overlap the same position (ie synonyms) consider if pants and khakis are query time synonyms\nEnum SolrQueryParserBase.SynonymQueryStyle;\n// This exception is thrown when parse errors are encountered.\nClass ParseException;\n// Token Manager Error.\nClass TokenMgrError;\n", "des": "Solr native variant of the Lucene Classic QueryParser"}
{"index": 3674, "repo": "solr-core-9.3.0", "code": "package pkg\n\n// \nInterface PackageListeners.Listener;\n// This implements the public end points (/api/cluster/package) of package API.\nClass PackageAPI;\n// \nClass PackageAPI.Packages;\n// \nClass PackageAPI.PkgVersion;\n// \nClass PackageListeners;\n// \nClass PackageListeners.Listener.Ctx;\n// A SolrClassLoader that is designed to listen to a set of packages.\nClass PackageListeningClassLoader;\n// \nClass PackagePluginHolder<T>;\n// The class that holds a mapping of various packages and classloaders\nClass SolrPackageLoader;\n", "des": "Package management implementation"}
{"index": 3675, "repo": "solr-core-9.3.0", "code": "package query\n\n// A filtered query wrapped around another query similar to BooleanClause.Occur.FILTER -- it scores as 0.\nClass FilterQuery;\n// \nClass SolrRangeQuery;\n", "des": "Solr Queries"}
{"index": 3676, "repo": "solr-core-9.3.0", "code": "package request\n\n// JSON related classes\npackage request.json\n// Parameter substitution / macro expansion.\npackage request.macro\n// Container for a request to execute a query.\nInterface SolrQueryRequest;\n// Implementations of SolrRequestHandler are called to handle query requests.\nInterface SolrRequestHandler;\n// A SolrQueryRequest implementation that defers to a delegate in all cases.\nClass DelegatingSolrQueryRequest;\n// Computes term facets for docvalues field (single or multivalued).\nClass DocValuesFacets;\n// Computes term stats for docvalues field (single or multivalued).\nClass DocValuesStats;\n// Computes interval facets for docvalues field (single or multivalued).\nClass IntervalFacets;\n// Helper class to match and count of documents in specified intervals\nClass IntervalFacets.FacetInterval;\n// \nClass LocalSolrQueryRequest;\n// An implementation of Predicate which returns true if the BytesRef matches the supplied regular expression.\nClass RegexBytesRefFilter;\n// A class that generates simple Facet information for a request.\nClass SimpleFacets;\n// A simple key=>val pair whose natural order is such that higher vals come before lower vals.\nClass SimpleFacets.CountPair<K extends Comparable<? super K>,​V extends Comparable<? super V>>;\n// \nClass SimpleFacets.ParsedParams;\n// Base implementation of SolrQueryRequest that provides some convenience methods for accessing parameters, and manages an IndexSearcher reference.\nClass SolrQueryRequestBase;\n// Information about the Solr request/response held in a ThreadLocal.\nClass SolrRequestInfo;\n// An implementation of Predicate which returns true if the BytesRef contains a given substring.\nClass SubstringBytesRefFilter;\n", "des": "APIs and classes for dealing with Solr requests"}
{"index": 3677, "repo": "solr-core-9.3.0", "code": "package json\n\n// \nClass JSONUtil;\n// \nClass ObjectUtil;\n// \nClass ObjectUtil.ConflictHandler;\n// \nClass RequestUtil;\n", "des": "JSON related classes"}
{"index": 3678, "repo": "solr-core-9.3.0", "code": "package macro\n\n// \nClass MacroExpander;\n", "des": "Parameter substitution / macro expansion."}
{"index": 3679, "repo": "solr-core-9.3.0", "code": "package response\n\n// APIs and implementations of DocTransformer for modifying documents in Solr request responses\npackage response.transform\n// Implementations of BinaryQueryResponseWriter are used to write response in binary format.\nInterface BinaryQueryResponseWriter;\n// Implementations of QueryResponseWriter are used to format responses to query requests.\nInterface QueryResponseWriter;\n// \nClass BasicResultContext;\n// \nClass BinaryResponseWriter;\n// \nClass BinaryResponseWriter.Resolver;\n// A response writer impl that can write results in CBOR (cbor.io) format when wt=cbor.\nClass CborResponseWriter;\n// Response writer for csv data\nClass CSVResponseWriter;\n// This streams SolrDocuments from a DocList and applies transformer\nClass DocsStreamer;\n// Extend the standard JSONResponseWriter to support GeoJSON.\nClass GeoJSONResponseWriter;\n// \nClass GraphMLResponseWriter;\n// A JSON ResponseWriter that uses jackson.\nClass JacksonJsonWriter;\n// \nClass JacksonJsonWriter.WriterImpl;\n// \nClass JSONResponseWriter;\n// \nClass JSONWriter;\n// \nClass PHPResponseWriter;\n// A description of the PHP serialization format can be found here: http://www.hurring.com/scott/code/perl/serialize/\nClass PHPSerializedResponseWriter;\n// \nClass PythonResponseWriter;\n// Static utility methods relating to QueryResponseWriters\nClass QueryResponseWriterUtil;\n// Writes a ContentStream directly to the output.\nClass RawResponseWriter;\n// A class to hold the QueryResult and the Query\nClass ResultContext;\n// \nClass RubyResponseWriter;\n// \nClass SchemaXmlResponseWriter;\n// \nClass SchemaXmlWriter;\n// \nClass SmileResponseWriter;\n// \nClass SmileResponseWriter.SmileWriter;\n// SolrQueryResponse is used by a query handler to return the response to a query request.\nClass SolrQueryResponse;\n// Base response writer for table-oriented data\nClass TabularResponseWriter;\n// Base class for text-oriented response writers.\nClass TextResponseWriter;\n// \nClass XMLResponseWriter;\n// \nClass XMLWriter;\n", "des": "API and implementations of QueryResponseWriter for formatting Solr request responses"}
{"index": 3680, "repo": "solr-core-9.3.0", "code": "package transform\n\n// The TransformerFactory.FieldRenamer interface should be implemented by any TransformerFactory capable of generating transformers that might rename fields, and should implement TransformerFactory.FieldRenamer.create(String, SolrParams, SolrQueryRequest, Map, Set) in place of TransformerFactory.create(String, SolrParams, SolrQueryRequest) (with the latter method overridden to throw UnsupportedOperationException).\nInterface TransformerFactory.FieldRenamer;\n// \nClass BaseEditorialTransformer;\n// Attaches all descendants (child documents) to each parent document.\nClass ChildDocTransformerFactory;\n// \nClass CoreAugmenterFactory;\n// Augments the document with a [docid] integer containing it's current (internal) id in the lucene index.\nClass DocIdAugmenterFactory;\n// A DocTransformer can add, remove or alter a Document before it is written out to the Response.\nClass DocTransformer;\n// Trivial Impl that ensure that the specified field is requested as an \"extra\" field, but then does nothing during the transformation phase.\nClass DocTransformer.NoopFieldTransformer;\n// Transform a document before it gets sent out\nClass DocTransformers;\n// Used to mark whether a document has been elevated or not\nClass ElevatedMarkerFactory;\n// \nClass ExcludedMarkerFactory;\n// \nClass ExplainAugmenterFactory;\n// This DocumentTransformer will write a Shape to the SolrDocument using the requested format.\nClass GeoTransformerFactory;\n// \nClass RawValueTransformerFactory;\n// Return a field with a name that is different that what is indexed\nClass RenameFieldTransformer;\n// Simple Augmenter that adds the score\nClass ScoreAugmenter;\n// \nClass ShardAugmenterFactory;\n// This transformer executes subquery per every result document.\nClass SubQueryAugmenterFactory;\n// New instance for each request\nClass TransformerFactory;\n// \nClass ValueAugmenterFactory;\n// Add values from a ValueSource (function query etc)\nClass ValueSourceAugmenter;\n// \nEnum ExplainAugmenterFactory.Style;\n// \nEnum ShardAugmenterFactory.Style;\n", "des": "APIs and implementations of DocTransformer for modifying documents in Solr request responses"}
{"index": 3681, "repo": "solr-core-9.3.0", "code": "package rest\n\n// Provides RESTful API access to managed resources in the Solr Schema.\npackage rest.schema\n// Marker interface to indicate a ManagedResource implementation class also supports managing child resources at path: /<resource>/{child}\nInterface ManagedResource.ChildResourceSupport;\n// Allows a Solr component to register as an observer of important ManagedResource events, such as when the managed data is loaded.\nInterface ManagedResourceObserver;\n// Hides the underlying storage implementation for data being managed by a ManagedResource.\nInterface ManagedResourceStorage.StorageIO;\n// Base class for delegating REST-oriented requests to ManagedResources.\nClass BaseSolrResource;\n// Supports Solr components that have external data that needs to be managed using the REST API.\nClass ManagedResource;\n// Abstract base class that provides most of the functionality needed to store arbitrary data for managed resources.\nClass ManagedResourceStorage;\n// Local file-based storage implementation.\nClass ManagedResourceStorage.FileStorageIO;\n// Memory-backed storage IO; not really intended for storage large amounts of data in production, but useful for testing and other transient workloads.\nClass ManagedResourceStorage.InMemoryStorageIO;\n// Default storage implementation that uses JSON as the storage format for managed data.\nClass ManagedResourceStorage.JsonStorage;\n// ZooKeeper based storage implementation that uses the SolrZkClient provided by the CoreContainer.\nClass ManagedResourceStorage.ZooKeeperStorageIO;\n// Supports runtime mapping of REST API endpoints to ManagedResource implementations; endpoints can be registered at either the /schema or /config base paths, depending on which base path is more appropriate for the type of managed resource.\nClass RestManager;\n// Request handling needs a lightweight object to delegate a request to.\nClass RestManager.ManagedEndpoint;\n// Per-core registry of ManagedResources found during core initialization.\nClass RestManager.Registry;\n", "des": "Solr RESTful APIs."}
{"index": 3682, "repo": "solr-core-9.3.0", "code": "package schema\n\n// Analysis-related functionality for RESTful API access to managed resources related to the schema, such as stopwords, protected words, and synonyms.\npackage schema.analysis\n// Utility class for converting a JSON definition of a FieldType into the XML format expected by the FieldTypePluginLoader.\nClass FieldTypeXmlAdapter;\n", "des": "Provides RESTful API access to managed resources in the Solr Schema."}
{"index": 3683, "repo": "solr-core-9.3.0", "code": "package analysis\n\n// Abstract based class for implementing TokenFilterFactory objects that are managed by the REST API.\nClass BaseManagedTokenFilterFactory;\n// TokenFilterFactory that uses the ManagedWordSetResource implementation for managing stop words using the REST API.\nClass ManagedStopFilterFactory;\n// \nClass ManagedSynonymFilterFactory;\n// ManagedResource implementation for synonyms, which are so specialized that it makes sense to implement this class as an inner class as it has little application outside the SynonymFilterFactory use cases.\nClass ManagedSynonymFilterFactory.SynonymManager;\n// TokenFilterFactory and ManagedResource implementation for doing CRUD on synonyms using the REST API.\nClass ManagedSynonymGraphFilterFactory;\n// ManagedResource implementation for synonyms, which are so specialized that it makes sense to implement this class as an inner class as it has little application outside the SynonymFilterFactory use cases.\nClass ManagedSynonymGraphFilterFactory.SynonymManager;\n// ManagedResource implementation for managing a set of words using the REST API; useful for managing stop words and/or protected words for analysis components like the KeywordMarkerFilter.\nClass ManagedWordSetResource;\n", "des": "Analysis-related functionality for RESTful API access to managed resources related to the schema, such as stopwords, protected words, and synonyms."}
{"index": 3684, "repo": "solr-core-9.3.0", "code": "package schema\n\n// Marker interface for Date-valued field types.\nInterface DateValueFieldType;\n// Marker interface for double-valued field types.\nInterface DoubleValueFieldType;\n// Interface for providing pluggable exchange rate providers to @CurrencyField\nInterface ExchangeRateProvider;\n// Marker interface for float-valued field types.\nInterface FloatValueFieldType;\n// Marker interface for field types that have an implicit (non-user-configurable) index-time schema.\nInterface HasImplicitIndexAnalyzer;\n// Marker interface for int-valued field types.\nInterface IntValueFieldType;\n// Marker interface for long-valued field types.\nInterface LongValueFieldType;\n// Marker interface for numeric-valued field types.\nInterface NumericValueFieldType;\n// Parse the input and return the stored part and the tokens with attributes.\nInterface PreAnalyzedField.PreAnalyzedParser;\n// An interface that can be extended to provide a callback mechanism for informing an IndexSchema instance of changes to it, dynamically performed at runtime.\nInterface SchemaAware;\n// Indicate that the implementing class is capable of generating a Query against spatial resources.\nInterface SpatialQueryable;\n// Abstract Field type for support of string values with custom sort order.\nClass AbstractEnumField;\n// Models all the info contained in an enums config XML file\nClass AbstractEnumField.EnumMapping;\n// Abstract base class for Solr FieldTypes based on a Lucene 4 SpatialStrategy.\nClass AbstractSpatialFieldType<T extends org.apache.lucene.spatial.SpatialStrategy>;\n// \nClass AbstractSpatialPrefixTreeFieldType<T extends org.apache.lucene.spatial.prefix.PrefixTreeStrategy>;\n// An abstract base class for FieldTypes that delegate work to another FieldType.\nClass AbstractSubTypeFieldType;\n// \nClass BBoxField;\n// \nClass BinaryField;\n// \nClass BoolField;\n// \nClass ClassicIndexSchemaFactory;\n// Field for collated sort keys.\nClass CollationField;\n// A CoordinateFieldType is the base class for FieldTypes that have semantics related to items in a coordinate system.\nClass CoordinateFieldType;\n// CopyField contains all the information of a valid copy fields in an index.\nClass CopyField;\n// \nClass CurrencyField;\n// Field type for support of monetary values.\nClass CurrencyFieldType;\n", "des": "IndexSchema and FieldType implementations for powering schema.xml"}
{"index": 3685, "repo": "solr-core-9.3.0", "code": "package search\n\n// APIs and classes for the JSON Facet API.\npackage search.facet\n// Solr implementations of ValueSource for function queries.\npackage search.function\n// APIs and classes for implementing result grouping\npackage search.grouping\n// Classes related to joins.\npackage search.join\n// APIs and classes for implementing MoreLikeThis (mlt) QueryParser.\npackage search.mlt\n// APIs and classes for implementing Neural (Dense Retrieval) QueryParsers.\npackage search.neural\n// Factories for various built-in Lucene ranking models.\npackage search.similarities\n// APIs and Classes implementing the Stats component used for document frequency calculations.\npackage search.stats\n// Implementations of CacheRegenerator are used in autowarming to populate a new cache based on an old cache.\nInterface CacheRegenerator;\n// Simple Iterator of document Ids which may include score information.\nInterface DocIterator;\n// DocList represents the result of a query: an ordered list of document ids with optional score.\nInterface DocList;\n// \nInterface DocSetProducer;\n// The ExtendedQuery interface provides extra metadata to a query.\nInterface ExtendedQuery;\n// The PostFilter interface provides a mechanism to further filter documents after they have already gone through the main query and other filters.\nInterface PostFilter;\n// Primary API for dealing with Solr's internal caches.\nInterface SolrCache<K,​V>;\n// \nClass AbstractReRankQuery;\n// Note: This API is experimental and may change in non backward-compatible ways in the future\nClass AnalyticsQuery;\n// A FixedBitSet based implementation of a DocSet.\nClass BitDocSet;\n// \nClass BitsFilteredPostingsEnum;\n// Create a boolean query from sub queries.\nClass BoolQParserPlugin;\n// Create a boosted query from the input value.\nClass BoostQParserPlugin;\n// Contains the knowledge of how cache config is stored in the solrconfig.xml file, and implements a factory to create caches.\nClass CacheConfig;\n// A SolrCache backed by the Caffeine caching library [1].\nClass CaffeineCache<K,​V>;\n// Allows a query to be cancelled\nClass CancellableCollector;\n", "des": "APIs and classes for parsing and processing search requests"}
{"index": 3686, "repo": "solr-core-9.3.0", "code": "package facet\n\n// The following ord visitors and wrappers are a work in progress and experimental\nInterface FieldUtil.OrdFunc;\n// \nInterface UnInvertedField.Callback;\n// \nClass AggUtil;\n// \nClass AggValueSource;\n// \nClass AvgAgg;\n// \nClass BlockJoin;\n// constants used in facets package\nClass Constants;\n// \nClass CountAgg;\n// AggValueSource to count values for given ValueSource\nClass CountValsAgg;\n// Accumulates stats separated by slot number for the fields with DocValues\nClass DocValuesAcc;\n// \nClass FacetBucket;\n// \nClass FacetContext;\n// \nClass FacetDebugInfo;\n// \nClass FacetField;\n// \nClass FacetFieldMerger;\n// JSON Facet API request for a 2D spatial summary of a rectangular region.\nClass FacetHeatmap;\n// \nClass FacetMerger;\n// \nClass FacetMerger.Context;\n// \nClass FacetModule;\n// Base abstraction for a class that computes facets.\nClass FacetProcessor<T extends FacetRequest>;\n// \nClass FacetQuery;\n// \nClass FacetRange;\n// \nClass FacetRangeMerger;\n// A request to do facets/stats that might itself be composed of sub-FacetRequests.\nClass FacetRequest;\n// \nClass FacetRequest.Domain;\n// Are we doing a query time graph across other documents\nClass FacetRequest.Domain.GraphField;\n// Are we doing a query time join across other documents\nClass FacetRequest.Domain.JoinField;\n// Simple structure for encapsulating a sort variable and a direction\nClass FacetRequest.FacetSort;\n// \nClass FieldUtil;\n// \nClass FieldUtil.DVOrdValues;\n// \nClass FieldUtil.FCOrdValues;\n// \nClass FieldUtil.OrdValues;\n// \nClass HLLAgg;\n// \nClass HLLAgg.HLLFactory;\n// \nClass LegacyFacet;\n// \nClass LegacyFacet.Subfacet;\n// \nClass MinMaxAgg;\n// AggValueSource to compute missing counts for given ValueSource\nClass MissingAgg;\n// \nClass PercentileAgg;\n", "des": "APIs and classes for the JSON Facet API."}
{"index": 3687, "repo": "solr-core-9.3.0", "code": "package function\n\n// Solr implementations of ValueSource for distance based function queries.\npackage function.distance\n// \nInterface SolrComparisonBoolFunction.Compare;\n// \nClass CollapseScoreFunction;\n// \nClass CollapseScoreFunction.CollapseScoreFunctionValues;\n// ConcatStringFunction concatenates the string values of its components in the order given.\nClass ConcatStringFunction;\n// Abstract ValueSource implementation which wraps two ValueSources and applies an extendible double function to their values.\nClass DualDoubleFunction;\n// Compares two values for equality.\nClass EqualFunction;\n// Placeholder value source.\nClass FieldNameValueSource;\n// Obtains float field values from an external file.\nClass FileFloatSource;\n// \nClass FileFloatSource.ReloadCacheRequestHandler;\n// Abstract ValueSource implementation which wraps multiple ValueSources and applies an extendible string function to their values.\nClass MultiStringFunction;\n// Obtains the ordinal of the field value from LeafReader.getSortedDocValues(java.lang.String).\nClass OrdFieldSource;\n// Obtains the ordinal of the field value from LeafReader.getSortedDocValues(java.lang.String) and reverses the order.\nClass ReverseOrdFieldSource;\n// Refines ComparisonBoolFunction to compare based on a 'long' or 'double' depending on if the any of the FunctionValues are LongDocValues.\nClass SolrComparisonBoolFunction;\n// RangeFilter over a ValueSource.\nClass ValueSourceRangeFilter;\n", "des": "Solr implementations of ValueSource for function queries."}
{"index": 3688, "repo": "solr-core-9.3.0", "code": "package distance\n\n// Parses \"geodist\" creating HaversineConstFunction or HaversineFunction or calling SpatialStrategy.makeDistanceValueSource(org.locationtech.spatial4j.shape.Point,double).\nClass GeoDistValueSourceParser;\n// \nClass GeohashFunction;\n// \nClass GeohashHaversineFunction;\n// Haversine function with one point constant\nClass HaversineConstFunction;\n// Calculate the Haversine formula (distance) between any two points on a sphere Takes in four value sources: (latA, lonA); (latB, lonB).\nClass HaversineFunction;\n// While not strictly a distance, the Sq.\nClass SquaredEuclideanFunction;\n// \nClass StringDistanceFunction;\n// Calculate the p-norm for a Vector.\nClass VectorDistanceFunction;\n", "des": "Solr implementations of ValueSource for distance based function queries."}
{"index": 3689, "repo": "solr-core-9.3.0", "code": "package grouping\n\n// Grouping related Collectors\npackage grouping.collector\n// Internal classes used to implement distributed result grouping\npackage grouping.distributed\n// APIs and classes for transforming result grouping results into the appropriate response format\npackage grouping.endresulttransformer\n// Defines a grouping command.\nInterface Command<T>;\n// Responsible for executing a search with a number of Command instances.\nClass CommandHandler;\n// \nClass CommandHandler.Builder;\n// Encapsulates the grouping options like fields group sort and more specified by clients.\nClass GroupingSpecification;\n", "des": "APIs and classes for implementing result grouping"}
{"index": 3690, "repo": "solr-core-9.3.0", "code": "package collector\n\n// A collector that filters incoming doc ids that are not in the filter.\nClass FilterCollector;\n", "des": "Grouping related Collectors"}
{"index": 3691, "repo": "solr-core-9.3.0", "code": "package distributed\n\n// Internal classes used to implement distributed result grouping\npackage distributed.command\n// Internal classes used to implement distributed result grouping\npackage distributed.requestfactory\n// Internal classes used to implement distributed result grouping\npackage distributed.responseprocessor\n// Internal classes used to implement distributed result grouping\npackage distributed.shardresultserializer\n// Responsible for creating shard requests to the shards in the cluster to perform distributed grouping.\nInterface ShardRequestFactory;\n// Responsible for processing shard responses.\nInterface ShardResponseProcessor;\n", "des": "Internal classes used to implement distributed result grouping"}
{"index": 3692, "repo": "solr-core-9.3.0", "code": "package command\n\n// \nClass QueryCommand;\n// \nClass QueryCommand.Builder;\n// Encapsulates TopDocs and the number of matches.\nClass QueryCommandResult;\n// Creates all the collectors needed for the first phase and how to handle the results.\nClass SearchGroupsFieldCommand;\n// \nClass SearchGroupsFieldCommand.Builder;\n// Encapsulates the result of a SearchGroupsFieldCommand command\nClass SearchGroupsFieldCommandResult;\n// Defines all collectors for retrieving the second phase and how to handle the collector result.\nClass TopGroupsFieldCommand;\n// \nClass TopGroupsFieldCommand.Builder;\n", "des": "Internal classes used to implement distributed result grouping"}
{"index": 3693, "repo": "solr-core-9.3.0", "code": "package requestfactory\n\n// Concrete implementation of ShardRequestFactory that creates ShardRequest instances for getting the search groups from all shards.\nClass SearchGroupsRequestFactory;\n// \nClass StoredFieldsShardRequestFactory;\n// Concrete implementation of ShardRequestFactory that creates ShardRequest instances for getting the top groups from all shards.\nClass TopGroupsShardRequestFactory;\n", "des": "Internal classes used to implement distributed result grouping"}
{"index": 3694, "repo": "solr-core-9.3.0", "code": "package responseprocessor\n\n// Concrete implementation for merging SearchGroup instances from shard responses.\nClass SearchGroupShardResponseProcessor;\n// Concrete implementation for processing the stored field values from shard responses.\nClass StoredFieldsShardResponseProcessor;\n// Concrete implementation for merging TopGroups instances from shard responses.\nClass TopGroupsShardResponseProcessor;\n", "des": "Internal classes used to implement distributed result grouping"}
{"index": 3695, "repo": "solr-core-9.3.0", "code": "package shardresultserializer\n\n// A ShardResultTransformer is responsible for transforming a grouped shard result into group related structures (such as TopGroups and SearchGroup) and visa versa.\nInterface ShardResultTransformer<T,​R>;\n// Implementation for transforming SearchGroup into a NamedList structure and visa versa.\nClass SearchGroupsResultTransformer;\n// Implementation for transforming TopGroups and TopDocs into a NamedList structure and vice versa.\nClass TopGroupsResultTransformer;\n", "des": "Internal classes used to implement distributed result grouping"}
{"index": 3696, "repo": "solr-core-9.3.0", "code": "package endresulttransformer\n\n// Responsible for transforming the grouped result into the final format for displaying purposes.\nInterface EndResultTransformer;\n// Abstracts the source for SolrDocument instances.\nInterface EndResultTransformer.SolrDocumentSource;\n// Implementation of EndResultTransformer that keeps each grouped result separate in the final response.\nClass GroupedEndResultTransformer;\n// Implementation of EndResultTransformer that transforms the grouped result into the main result list in the response.\nClass MainEndResultTransformer;\n// Implementation of EndResultTransformer that transforms the grouped result into a single flat list.\nClass SimpleEndResultTransformer;\n", "des": "APIs and classes for transforming result grouping results into the appropriate response format"}
{"index": 3697, "repo": "solr-core-9.3.0", "code": "package join\n\n// \nClass BlockJoinChildQParser;\n// Usage: {!child of=\"PARENT:true\"}PARENT_PRICE:10\nClass BlockJoinChildQParserPlugin;\n// \nClass BlockJoinParentQParser;\n// Usage: {!parent which=\"PARENT:true\"}CHILD_PRICE:10 supports optional score parameter with one of ScoreMode values: None,Avg,Total,Min,Max.\nClass BlockJoinParentQParserPlugin;\n// \nClass ChildFieldValueSourceParser;\n// \nClass CrossCollectionJoinQParser;\n// \nClass CrossCollectionJoinQuery;\n// \nClass FiltersQParser;\n// \nClass FiltersQParserPlugin;\n// \nClass GraphPointsCollector;\n// Query parser plugin for solr to wrap the graph query parser.\nClass GraphQParserPlugin;\n// GraphQuery - search for nodes and traverse edges in an index.\nClass GraphQuery;\n// Solr query parser that will handle parsing graph query requests.\nClass GraphQueryParser;\n// \nClass HashRangeQParser;\n// Matches documents where the specified field hashes to a value within the given range.\nClass HashRangeQParserPlugin;\n// \nClass HashRangeQuery;\n// Populates a bitset of (top-level) ordinals based on field values in a multi-valued field.\nClass MultiValueTermOrdinalCollector;\n// Create a query-time join query with scoring.\nClass ScoreJoinQParserPlugin;\n", "des": "Classes related to joins."}
{"index": 3698, "repo": "solr-core-9.3.0", "code": "package mlt\n\n// \nClass CloudMLTQParser;\n// \nClass MLTContentQParserPlugin;\n// Usage: {!mlt qf=queryField1,queryField2}uniqueId\nClass MLTQParserPlugin;\n// \nClass SimpleMLTQParser;\n", "des": "APIs and classes for implementing MoreLikeThis (mlt) QueryParser."}
{"index": 3699, "repo": "solr-core-9.3.0", "code": "package neural\n\n// \nClass KnnQParser;\n// A neural query parser to run K-nearest neighbors search on Dense Vector fields.\nClass KnnQParserPlugin;\n", "des": "APIs and classes for implementing Neural (Dense Retrieval) QueryParsers."}
{"index": 3700, "repo": "solr-core-9.3.0", "code": "package similarities\n\n// Factory for BM25Similarity.\nClass BM25SimilarityFactory;\n// Factory for BooleanSimilarity\nClass BooleanSimilarityFactory;\n// Factory for ClassicSimilarity\nClass ClassicSimilarityFactory;\n// Factory for DFISimilarity\nClass DFISimilarityFactory;\n// Factory for DFRSimilarity\nClass DFRSimilarityFactory;\n// Factory for IBSimilarity\nClass IBSimilarityFactory;\n// Factory for LMDirichletSimilarity\nClass LMDirichletSimilarityFactory;\n// Factory for LMJelinekMercerSimilarity\nClass LMJelinekMercerSimilarityFactory;\n// SimilarityFactory that returns a global PerFieldSimilarityWrapper that delegates to the field type, if it's configured.\nClass SchemaSimilarityFactory;\n// Factory for SweetSpotSimilarity.\nClass SweetSpotSimilarityFactory;\n", "des": "Factories for various built-in Lucene ranking models."}
{"index": 3701, "repo": "solr-core-9.3.0", "code": "package stats\n\n// Modifiable version of CollectionStatistics useful for aggregation of per-shard stats.\nClass CollectionStats;\n// This class implements exact caching of statistics.\nClass ExactSharedStatsCache;\n// This class implements exact caching of statistics.\nClass ExactStatsCache;\n// \nClass ExactStatsCache.ExactStatsSource;\n// Default implementation that simply ignores global term statistics, and always uses local term statistics.\nClass LocalStatsCache;\n// Convenience class that wraps a local SolrIndexSearcher to provide local statistics.\nClass LocalStatsSource;\n// Unlike ExactStatsCache this implementation preserves term stats across queries in a set of LRU caches (with the same life-cycle as SolrIndexSearcher), and based on surface features of a query it determines the need to send additional requests to retrieve local term and collection statistics from shards.\nClass LRUStatsCache;\n// This class represents a cache of global document frequency information for selected terms.\nClass StatsCache;\n// \nClass StatsCache.StatsCacheMetrics;\n// The purpose of this class is only to provide two pieces of information necessary to create Weight from a Query, that is TermStatistics for a term and CollectionStatistics for the whole collection.\nClass StatsSource;\n// Various utilities for de/serialization of term stats and collection stats.\nClass StatsUtil;\n// Modifiable version of TermStatistics useful for aggregation of per-shard stats.\nClass TermStats;\n", "des": "APIs and Classes implementing the Stats component used for document frequency calculations."}
{"index": 3702, "repo": "solr-core-9.3.0", "code": "package security\n\n// Interface for formatting the event\nInterface AuditLoggerPlugin.AuditEventFormatter;\n// \nInterface AuditLoggerPlugin.MuteRule;\n// Authorization interface that needs to be implemented to write an authorization plugin.\nInterface AuthorizationPlugin;\n// \nInterface BasicAuthPlugin.AuthenticationProvider;\n// An interface to be implemented by a Plugin whose Configuration is runtime editable\nInterface ConfigEditablePlugin;\n// Plugin interface for configuring internal HttpClients.\nInterface HttpClientBuilderPlugin;\n// A requestHandler should implement this interface to provide the well known permission at request time\nInterface PermissionNameProvider;\n// Interface used to pass verified user roles in a Principal object.\nInterface VerifiedUserRoles;\n// Validates URLs based on an allow list or a ClusterState in SolrCloud.\nClass AllowListUrlChecker;\n// Audit event that takes request and auth context as input to be able to audit log custom things.\nClass AuditEvent;\n// Base class for Audit logger plugins.\nClass AuditLoggerPlugin;\n// Event formatter that returns event as JSON string\nClass AuditLoggerPlugin.JSONAuditEventFormatter;\n// \nClass AuthenticationPlugin;\n// Request context for Solr to be used by Authorization plugin.\nClass AuthorizationContext;\n// \nClass AuthorizationContext.CollectionRequest;\n// \nClass AuthorizationResponse;\n// \nClass AuthorizationUtils;\n// \nClass AuthorizationUtils.AuthorizationFailure;\n// \nClass BasicAuthPlugin;\n// An authentication plugin that sets principal based on the certificate subject\nClass CertAuthPlugin;\n// Rule Based Authz plugin implementation which reads user roles from the request.\nClass ExternalRoleRuleBasedAuthorizationPlugin;\n// An AuthorizationContext implementation that delegates many methods to an underlying HttpServletRequest\nClass HttpServletAuthorizationContext;\n// Authentication plugin that supports multiple Authorization schemes, such as Bearer and Basic.\nClass MultiAuthPlugin;\n// Authorization plugin designed to work with the MultiAuthPlugin to support different AuthorizationPlugin per scheme.\nClass MultiAuthRuleBasedAuthorizationPlugin;\n// Audit logger that chains other loggers.\nClass MultiDestinationAuditLogger;\n// \nClass PKIAuthenticationPlugin;\n// \nClass PKIAuthenticationPlugin.PKIHeaderData;\n// Wrapper for PrintWriter that delegates to constructor arg\nClass PrintWriterWrapper;\n// V2 API for fetching the public key of the receiving node.\nClass PublicKeyAPI;\n", "des": "Commonly used classes for Solr security framework."}
{"index": 3703, "repo": "solr-core-9.3.0", "code": "package servlet\n\n// Caching related classes used in the Solr HTTP API\npackage servlet.cache\n// Denotes an object, usually a servlet that denies access to some paths based on the supplied patterns.\nInterface PathExcluder;\n// internal API\nInterface SolrDispatchFilter.HttpSolrCallFactory;\n// \nClass CoordinatorHttpSolrCall;\n// \nClass CoordinatorHttpSolrCall.Factory;\n// A service that can provide access to solr cores.\nClass CoreContainerProvider;\n// DirectSolrConnection provides an interface to Solr that is similar to the HTTP interface, but does not require an HTTP connection.\nClass DirectSolrConnection;\n// This class represents a call made to Solr\nClass HttpSolrCall;\n// A simple servlet to load the Solr Admin UI\nClass LoadAdminUiServlet;\n// Implementation of RequestRateLimiter specific to query request types.\nClass QueryRateLimiter;\n// This class is responsible for managing rate limiting per request type.\nClass RateLimitManager;\n// \nClass RateLimitManager.Builder;\n// A Simple redirection servlet to help us deprecate old UI elements\nClass RedirectServlet;\n// Handles rate limiting for a specific request type.\nClass RequestRateLimiter;\n// Response helper methods.\nClass ResponseUtils;\n// Provides a convenient extension of the ServletInputStream class that can be subclassed by developers wishing to adapt the behavior of a Stream.\nClass ServletInputStreamWrapper;\n// Provides a convenient extension of the ServletOutputStream class that can be subclassed by developers wishing to adapt the behavior of a Stream.\nClass ServletOutputStreamWrapper;\n// Various Util methods for interaction on servlet level, i.e.\nClass ServletUtils;\n// \nClass ServletUtils.ClosedServletInputStream;\n// \nClass ServletUtils.ClosedServletOutputStream;\n// This filter looks at the incoming URL maps them to handlers defined in solrconfig.xml\nClass SolrDispatchFilter;\n// \nClass SolrRequestParsers;\n// Enum to define action that needs to be processed.\nEnum SolrDispatchFilter.Action;\n// \nClass ExceptionWhileTracing;\n// \nClass SolrAuthenticationException;\n", "des": "Servlet related classes for powering the Solr HTTP API"}
{"index": 3704, "repo": "solr-core-9.3.0", "code": "package cache\n\n// \nClass HttpCacheHeaderUtil;\n// \nEnum Method;\n", "des": "Caching related classes used in the Solr HTTP API"}
{"index": 3705, "repo": "solr-core-9.3.0", "code": "package spelling\n\n// APIs and classes used by the SpellCheckComponent\npackage spelling.suggest\n// Abstract base class for all Lucene-based spell checking implementations.\nClass AbstractLuceneSpellChecker;\n// This class lets a query be run through multiple spell checkers.\nClass ConjunctionSolrSpellChecker;\n// Spellchecker implementation that uses DirectSpellChecker\nClass DirectSolrSpellChecker;\n// A spell checker implementation that loads words from a text file (one word per line).\nClass FileBasedSpellChecker;\n// A spell checker implementation that loads words from Solr as well as arbitrary Lucene indices.\nClass IndexBasedSpellChecker;\n// Given a list of possible Spelling Corrections for multiple mis-spelled words in a query, This iterator returns Possible Correction combinations ordered by reasonable probability that such a combination will return actual hits if re-queried.\nClass PossibilityIterator;\n// \nClass PossibilityIterator.RankedSpellPossibility;\n// The QueryConverter is an abstract base class defining a method for converting input \"raw\" queries into a set of tokens for spell checking.\nClass QueryConverter;\n// \nClass ResultEntry;\n// Refer to https://solr.apache.org/guide/solr/latest/query-guide/spell-checking.html for more details.\nClass SolrSpellChecker;\n// \nClass SpellCheckCollation;\n// \nClass SpellCheckCollator;\n// \nClass SpellCheckCorrection;\n// \nClass SpellingOptions;\n// Converts the query string to a Collection of Lucene tokens using a regular expression.\nClass SpellingQueryConverter;\n// Implementations of SolrSpellChecker must return suggestions as SpellResult instance.\nClass SpellingResult;\n// Passes the entire query string to the configured analyzer as-is.\nClass SuggestQueryConverter;\n// \nClass Token;\n// A spellchecker that breaks and combines words.\nClass WordBreakSolrSpellChecker;\n// Specify a value on the \"breakSugestionTieBreaker\" parameter.\nEnum WordBreakSolrSpellChecker.BreakSuggestionTieBreaker;\n", "des": "APIs and classes used by the SpellCheckComponent"}
{"index": 3706, "repo": "solr-core-9.3.0", "code": "package suggest\n\n// Factories for FST and Analyzing based Suggesters\npackage suggest.fst\n// Factories for JaSpell based Suggesters\npackage suggest.jaspell\n// Factories for TST based Suggesters\npackage suggest.tst\n// \nInterface SuggesterParams;\n// Encapsulates shared fields for all types of dictionaryFactory classes\nClass DictionaryFactory;\n// Factory for DocumentDictionary\nClass DocumentDictionaryFactory;\n// Factory for DocumentValueSourceDictionary\nClass DocumentExpressionDictionaryFactory;\n// Factory for FileDictionary\nClass FileDictionaryFactory;\n// Factory for HighFrequencyDictionary\nClass HighFrequencyDictionaryFactory;\n// Suggester factory for creating Lookup instances.\nClass LookupFactory;\n// Responsible for loading the lookup and dictionary Implementations specified by the SolrConfig.\nClass SolrSuggester;\n// \nClass Suggester;\n// Encapsulates the inputs required to be passed on to the underlying suggester in SolrSuggester\nClass SuggesterOptions;\n// Encapsulates the results returned by the suggester in SolrSuggester\nClass SuggesterResult;\n", "des": "APIs and classes used by the SpellCheckComponent"}
{"index": 3707, "repo": "solr-core-9.3.0", "code": "package fst\n\n// Factory for AnalyzingInfixSuggester\nClass AnalyzingInfixLookupFactory;\n// Factory for AnalyzingSuggester\nClass AnalyzingLookupFactory;\n// Factory for BlendedInfixLookupFactory\nClass BlendedInfixLookupFactory;\n// LookupFactory implementation for FreeTextSuggester\nClass FreeTextLookupFactory;\n// Factory for FSTCompletionLookup\nClass FSTLookupFactory;\n// Factory for FuzzySuggester\nClass FuzzyLookupFactory;\n// Factory for WFSTCompletionLookup\nClass WFSTLookupFactory;\n", "des": "Factories for FST and Analyzing based Suggesters"}
{"index": 3708, "repo": "solr-core-9.3.0", "code": "package jaspell\n\n// \nClass JaspellLookup;\n// Factory for JaspellLookup Note: This Suggester is not very RAM efficient.\nClass JaspellLookupFactory;\n// \nClass JaspellTernarySearchTrie;\n// An inner class of Ternary Search Trie that represents a node in the trie.\nClass JaspellTernarySearchTrie.TSTNode;\n", "des": "Factories for JaSpell based Suggesters"}
{"index": 3709, "repo": "solr-core-9.3.0", "code": "package tst\n\n// Factory for TSTLookup\nClass TSTLookupFactory;\n", "des": "Factories for TST based Suggesters"}
{"index": 3710, "repo": "solr-core-9.3.0", "code": "package uninverting\n\n// Expert: Maintains caches of term values.\nInterface FieldCache;\n// interface to all parsers.\nInterface FieldCache.Parser;\n// This class enables fast access to multiple term ords for a specified field across all docIDs.\nClass DocTermOrds;\n// EXPERT: A unique Identifier/Description for each item in the FieldCache.\nClass FieldCache.CacheEntry;\n// Placeholder indicating creation of this cache is currently in-progress.\nClass FieldCache.CreationPlaceholder;\n// Base class for points parsers.\nClass FieldCache.PointParser;\n// Expert: The default cache implementation, storing all values in memory.\nClass FieldCacheImpl;\n// \nClass FieldCacheImpl.BinaryDocValuesImpl;\n// \nClass FieldCacheImpl.LongsFromArray;\n// \nClass FieldCacheImpl.SortedDocValuesImpl;\n// A FilterReader that exposes indexed values as if they also had docvalues.\nClass UninvertingReader;\n// Return information about the backing cache\nClass UninvertingReader.FieldCacheStats;\n// Specifies the type of uninversion to apply for the field.\nEnum UninvertingReader.Type;\n", "des": "Support for creating docvalues on-the-fly from the inverted index at runtime."}
{"index": 3711, "repo": "solr-core-9.3.0", "code": "package update\n\n// UpdateRequestProcessorFactory APIs and implementations for use in UpdateRequestProcessorChains\npackage update.processor\n// \nInterface SolrCoreState.IndexWriterCloser;\n// \nInterface VersionBucket.CheckedFunction<T,​R>;\n// An UpdateCommand for adding or updating one document.\nClass AddUpdateCommand;\n// Helper class for tracking autoCommit state.\nClass CommitTracker;\n// A commit index command encapsulated in an object.\nClass CommitUpdateCommand;\n// \nClass DefaultSolrCoreState;\n// \nClass DeleteUpdateCommand;\n// DirectUpdateHandler2 implements an UpdateHandler where documents are added directly to the main Lucene index as opposed to adding to a separate smaller index.\nClass DirectUpdateHandler2;\n// Builds a Lucene Document from a SolrInputDocument.\nClass DocumentBuilder;\n// \nClass IndexFingerprint;\n// An InfoStream implementation which passes messages on to Solr's logging.\nClass LoggingInfoStream;\n// \nClass MemOutputStream;\n// A merge indexes command encapsulated in an object.\nClass MergeIndexesCommand;\n// This class is useful for performing peer to peer synchronization of recently indexed update commands during recovery process.\nClass PeerSync;\n// Helper class for doing comparison ourUpdates and other replicas's updates to find the updates that we missed\nClass PeerSync.MissedUpdatesFinder;\n// Result of PeerSync.MissedUpdatesFinder\nClass PeerSync.MissedUpdatesRequest;\n// \nClass PeerSync.PeerSyncResult;\n// \nClass PeerSyncWithLeader;\n// Helper class for doing comparison ourUpdates and other replicas's updates to find the updates that we missed\nClass PeerSyncWithLeader.MissedUpdatesFinder;\n// \nClass RollbackUpdateCommand;\n// Used for distributing commands from a shard leader to its replicas.\nClass SolrCmdDistributor;\n// \nClass SolrCmdDistributor.ForwardNode;\n// \nClass SolrCmdDistributor.Node;\n// \nClass SolrCmdDistributor.Req;\n// \nClass SolrCmdDistributor.Response;\n// \nClass SolrCmdDistributor.SolrError;\n// \nClass SolrCmdDistributor.StdNode;\n// The state in this class can be easily shared between SolrCores across SolrCore reloads.\nClass SolrCoreState;\n", "des": "APIs and classes for managing index updates"}
{"index": 3712, "repo": "solr-core-9.3.0", "code": "package processor\n\n// A marker interface for denoting that a factory is responsible for handling distributed communication of updates across a SolrCloud cluster.\nInterface DistributingUpdateProcessorFactory;\n// Interface for identifying which fields should be mutated\nInterface FieldMutatingUpdateProcessor.FieldNameSelector;\n// A marker interface for UpdateRequestProcessorFactory implementations indicating that the factory should be used even if the update.distrib parameter would otherwise cause it to not be run.\nInterface UpdateRequestProcessorFactory.RunAlways;\n// Base class that can be extended by any UpdateRequestProcessorFactory designed to add a default value to the document in an AddUpdateCommand when that field is not already specified.\nClass AbstractDefaultValueUpdateProcessorFactory;\n// This processor will dynamically add fields to the schema if an input document contains one or more fields that don't match any field or dynamic field in the schema.\nClass AddSchemaFieldsUpdateProcessorFactory;\n// Abstract subclass of FieldMutatingUpdateProcessor for implementing UpdateProcessors that will mutate all individual values of a selected field independently.\nClass AllValuesOrNoneFieldMutatingUpdateProcessor;\n// \nClass AtomicUpdateDocumentMerger;\n// An update processor that will convert conventional field-value document to atomic update document\nClass AtomicUpdateProcessorFactory;\n// This class implements an UpdateProcessorFactory for the Classification Update Processor.\nClass ClassificationUpdateProcessorFactory;\n// \nClass ClassificationUpdateProcessorParams;\n// Clones the values found in any matching source field into a configured dest field.\nClass CloneFieldUpdateProcessorFactory;\n// Concatenates multiple values for fields matching the specified conditions using a configurable delimiter which defaults to \", \".\nClass ConcatFieldUpdateProcessorFactory;\n// Replaces any list of values for a field matching the specified conditions with the count of the number of values for that field.\nClass CountFieldValuesUpdateProcessorFactory;\n// An update processor that adds a constant default value to any document being added that does not already have a value in the specified field.\nClass DefaultValueUpdateProcessorFactory;\n// \nClass DistributedUpdateProcessor;\n// \nClass DistributedUpdateProcessor.LeaderRequestReplicationTracker;\n// \nClass DistributedUpdateProcessor.RollupRequestReplicationTracker;\n// Factory for DistributedUpdateProcessor.\nClass DistributedUpdateProcessorFactory;\n// \nClass DistributedZkUpdateProcessor;\n// \nClass DocBasedVersionConstraintsProcessor;\n", "des": "UpdateRequestProcessorFactory APIs and implementations for use in UpdateRequestProcessorChains"}
{"index": 3713, "repo": "solr-core-9.3.0", "code": "package util\n\n// Support for triggering exceptions on excessive resource usage\npackage util.circuitbreaker\n// Common Util APIs related to Solr configuration.\npackage util.configuration\n// A fork of Java-HyperLogLog package tweaked not to depend on fastutil and with cleanups to make it lean and clean.\npackage util.hll\n// Common APIs related to implementing Solr plugins\npackage util.plugin\n// Utilities for collecting statistics\npackage util.stats\n// Tracing related utilities\npackage util.tracing\n// Utilities for dense vector search\npackage util.vector\n// \nInterface ConcurrentLRUCache.EvictionListener<K,​V>;\n// An efficient map for storing keys as integer in range from 0..n with n can be estimated up-front.\nInterface DynamicMap;\n// Represents an operation that accepts a single float-valued argument and returns no result.\nInterface FloatConsumer;\n// A Function that may throw an IOException\nInterface IOFunction<T,​R>;\n// A long-based iterator.\nInterface LongIterator;\n// \nInterface RTimer.TimerImpl;\n// \nInterface TestInjection.Hook;\n// \nClass AdjustableSemaphore;\n// A TreeSet that ensures it never grows beyond a max size.\nClass BoundedTreeSet<E>;\n// A LRU cache implementation based upon ConcurrentHashMap and other techniques to reduce contention and synchronization overhead to utilize multiple CPU cores more effectively.\nClass ConcurrentLRUCache<K,​V>;\n// \nClass ConcurrentLRUCache.CacheEntry<K,​V>;\n// \nClass ConcurrentLRUCache.Stats;\n// A utility class with helpers for various signature and certificate tasks\nClass CryptoKeys;\n// \nClass CryptoKeys.RSAKeyPair;\n// ConfigNode impl that copies and maintains data internally from DOM\nClass DataConfigNode;\n// A Simple Utility class for parsing \"math\" like strings relating to Dates.\nClass DateMathParser;\n// Used with a spatial field type for all distance measurements.\nClass DistanceUnits;\n// Read using DOM\nClass DOMConfigNode;\n// \nClass FileUtils;\n// Helper class for generating unique ID-s.\nClass IdUtils;\n// \nClass IntFloatDynamicMap;\n", "des": "Common utility classes used throughout Solr"}
{"index": 3714, "repo": "solr-core-9.3.0", "code": "package circuitbreaker\n\n// Default class to define circuit breakers for Solr.\nClass CircuitBreaker;\n// \nClass CircuitBreaker.CircuitBreakerConfig;\n// Manages all registered circuit breaker instances.\nClass CircuitBreakerManager;\n// Tracks current CPU usage and triggers if the specified threshold is breached.\nClass CPUCircuitBreaker;\n// Tracks the current JVM heap usage and triggers if it exceeds the defined percentage of the maximum heap size allocated to the JVM.\nClass MemoryCircuitBreaker;\n", "des": "Support for triggering exceptions on excessive resource usage"}
{"index": 3715, "repo": "solr-core-9.3.0", "code": "package configuration\n\n// TODO\npackage configuration.providers\n// Interface for different source of SSL configurations.\nInterface SSLCredentialProvider;\n// Dedicated object to handle Solr configurations\nClass SSLConfigurations;\n// \nClass SSLConfigurations.SysProps;\n// \nClass SSLConfigurationsFactory;\n// Class responsible to build SSL credential providers\nClass SSLCredentialProviderFactory;\n// \nEnum SSLCredentialProvider.CredentialType;\n", "des": "Common Util APIs related to Solr configuration."}
{"index": 3716, "repo": "solr-core-9.3.0", "code": "package providers\n\n// Abstract provider with default implementation\nClass AbstractSSLCredentialProvider;\n// Environment variable based SSL configuration provider\nClass EnvSSLCredentialProvider;\n// \nClass EnvSSLCredentialProvider.EnvVars;\n// System property based SSL configuration provider\nClass SysPropSSLCredentialProvider;\n", "des": "TODO"}
{"index": 3717, "repo": "solr-core-9.3.0", "code": "package hll\n\n// A serialization schema for HLLs.\nInterface ISchemaVersion;\n// Reads 'words' of a fixed width, in sequence, from a byte array.\nInterface IWordDeserializer;\n// A probabilistic set of hashed long elements.\nClass HLL;\n// The types of algorithm/data structure that HLL can utilize.\nEnum HLLType;\n", "des": "A fork of Java-HyperLogLog package tweaked not to depend on fastutil and with cleanups to make it lean and clean."}
{"index": 3718, "repo": "solr-core-9.3.0", "code": "package plugin\n\n// A plugin that can be initialized with a Map<String,String>\nInterface MapInitializedPlugin;\n// A plugin that can be initialized with a NamedList\nInterface NamedListInitializedPlugin;\n// A plugin that can be initialized with a PluginInfo\nInterface PluginInfoInitialized;\n// \nInterface SolrCoreAware;\n// An abstract super class that manages standard solr-style plugin configuration.\nClass AbstractPluginLoader<T>;\n// \nClass MapPluginLoader<T extends MapInitializedPlugin>;\n// \nClass NamedListPluginLoader<T extends NamedListInitializedPlugin>;\n", "des": "Common APIs related to implementing Solr plugins"}
{"index": 3719, "repo": "solr-core-9.3.0", "code": "package stats\n\n// Strategy for creating metric names for HttpClient Copied from metrics-httpclient library\nInterface HttpClientMetricNameStrategy;\n// \nInterface InstrumentedHttpListenerFactory.NameStrategy;\n// A HttpListenerFactory tracks metrics interesting to solr Inspired and partially copied from dropwizard httpclient library\nClass InstrumentedHttpListenerFactory;\n// Sub-class of HttpRequestExecutor which tracks metrics interesting to solr Inspired and partially copied from dropwizard httpclient library\nClass InstrumentedHttpRequestExecutor;\n// Sub-class of PoolingHttpClientConnectionManager which tracks metrics interesting to Solr.\nClass InstrumentedPoolingHttpClientConnectionManager;\n// Metrics specific utility functions.\nClass MetricUtils;\n", "des": "Utilities for collecting statistics"}
{"index": 3720, "repo": "solr-core-9.3.0", "code": "package tracing\n\n// A Carrier for extract Span context out of request headers\nClass HttpServletCarrier;\n// An OpenTracing Carrier for injecting Span context through SolrRequest\nClass SolrRequestCarrier;\n// Utilities for distributed tracing.\nClass TraceUtils;\n", "des": "Tracing related utilities"}
{"index": 3721, "repo": "solr-core-9.3.0", "code": "package vector\n\n// \nClass ByteDenseVectorParser;\n// \nClass DenseVectorParser;\n// \nClass FloatDenseVectorParser;\n// \nEnum DenseVectorParser.BuilderPhase;\n", "des": "Utilities for dense vector search"}
{"index": 3722, "repo": "lucene-queryparser-9.7.0", "code": "package charstream\n\n// This interface describes a character stream that maintains line and column number positions of the characters.\nInterface CharStream;\n// An efficient implementation of JavaCC's CharStream interface.\nClass FastCharStream;\n", "des": "This package contains reusable parts for javacc-generated grammars (query parsers)."}
{"index": 3723, "repo": "lucene-queryparser-9.7.0", "code": "package classic\n\n// Token literal values and constants.\nInterface QueryParserConstants;\n// A QueryParser which constructs queries to search multiple fields.\nClass MultiFieldQueryParser;\n// This class is generated by JavaCC.\nClass QueryParser;\n// This class is overridden by QueryParser in QueryParser.jj and acts to separate the majority of the Java code from the .jj grammar file.\nClass QueryParserBase;\n// Token Manager.\nClass QueryParserTokenManager;\n// Describes the input token stream.\nClass Token;\n// The default operator for parsing queries.\nEnum QueryParser.Operator;\n// This exception is thrown when parse errors are encountered.\nClass ParseException;\n// Token Manager Error.\nClass TokenMgrError;\n", "des": "A simple query parser implemented with JavaCC."}
{"index": 3724, "repo": "lucene-queryparser-9.7.0", "code": "package complexPhrase\n\n// QueryParser which permits complex phrase query syntax eg \"(john jon jonathan~) peters*\".\nClass ComplexPhraseQueryParser;\n", "des": "QueryParser which permits complex phrase query syntax eg \"(john jon jonathan~) peters*\""}
{"index": 3725, "repo": "lucene-queryparser-9.7.0", "code": "package ext\n\n// The ExtendableQueryParser enables arbitrary query parser extension based on a customizable field naming scheme.\nClass ExtendableQueryParser;\n// ExtensionQuery holds all query components extracted from the original query string like the query field and the extension query string.\nClass ExtensionQuery;\n// The Extensions class represents an extension mapping to associate ParserExtension instances with extension keys.\nClass Extensions;\n// This class represents a generic pair.\nClass Extensions.Pair<Cur,​Cud>;\n// This class represents an extension base class to the Lucene standard QueryParser.\nClass ParserExtension;\n", "des": "Extendable QueryParser provides a simple and flexible extension mechanism by overloading query field names."}
{"index": 3726, "repo": "lucene-queryparser-9.7.0", "code": "package core\n\n// Necessary classes to implement query builders.\npackage core.builders\n// Base classes used to configure the query processing.\npackage core.config\n// Messages usually used by query parser implementations.\npackage core.messages\n// Query nodes commonly used by query parser implementations.\npackage core.nodes\n// Necessary interfaces to implement text parsers.\npackage core.parser\n// Interfaces and implementations used by query node processors\npackage core.processors\n// Utility classes to used with the Query Parser.\npackage core.util\n// This class is a helper for the query parser framework, it does all the three query parser phrases at once: text parsing, query processing and query building.\nClass QueryParserHelper;\n// This exception should be thrown if something wrong happens when dealing with QueryNodes.\nClass QueryNodeException;\n// This should be thrown when an exception happens during the query parsing from string to the query node tree.\nClass QueryNodeParseException;\n// Error class with NLS support\nClass QueryNodeError;\n", "des": "Core classes of the flexible query parser framework."}
{"index": 3727, "repo": "lucene-queryparser-9.7.0", "code": "package builders\n\n// This interface is used by implementors classes that builds some kind of object from a query tree.\nInterface QueryBuilder;\n// This class should be used when there is a builder for each type of node.\nClass QueryTreeBuilder;\n", "des": "Necessary classes to implement query builders."}
{"index": 3728, "repo": "lucene-queryparser-9.7.0", "code": "package config\n\n// This interface should be implemented by classes that wants to listen for field configuration requests.\nInterface FieldConfigListener;\n// This class is the base of QueryConfigHandler and FieldConfig.\nClass AbstractQueryConfig;\n// An instance of this class represents a key that is used to retrieve a value from AbstractQueryConfig.\nClass ConfigurationKey<T>;\n// This class represents a field configuration.\nClass FieldConfig;\n// This class can be used to hold any query configuration and no field configuration.\nClass QueryConfigHandler;\n", "des": "Base classes used to configure the query processing."}
{"index": 3729, "repo": "lucene-queryparser-9.7.0", "code": "package messages\n\n// Flexible Query Parser message bundle class\nClass QueryParserMessages;\n", "des": "Messages usually used by query parser implementations."}
{"index": 3730, "repo": "lucene-queryparser-9.7.0", "code": "package nodes\n\n// A query node implements FieldableNode interface to indicate that its children and itself are associated to a specific field.\nInterface FieldableNode;\n// This interface should be implemented by QueryNode that holds a field and an arbitrary value.\nInterface FieldValuePairQueryNode<T>;\n// A QueryNode is a interface implemented by all nodes on a QueryNode tree.\nInterface QueryNode;\n// This interface should be implemented by a QueryNode that represents some kind of range query.\nInterface RangeQueryNode<T extends FieldValuePairQueryNode<?>>;\n// Interface for a node that has text as a CharSequence\nInterface TextableQueryNode;\n// This interface should be implemented by QueryNode that holds an arbitrary value.\nInterface ValueQueryNode<T>;\n// A AndQueryNode represents an AND boolean operation performed on a list of nodes.\nClass AndQueryNode;\n// A AnyQueryNode represents an ANY operator performed on a list of nodes.\nClass AnyQueryNode;\n// A BooleanQueryNode represents a list of elements which do not have an explicit boolean operator defined between them.\nClass BooleanQueryNode;\n// A BoostQueryNode boosts the QueryNode tree which is under this node.\nClass BoostQueryNode;\n// A DeletedQueryNode represents a node that was deleted from the query node tree.\nClass DeletedQueryNode;\n// A FieldQueryNode represents a element that contains field/text tuple\nClass FieldQueryNode;\n// A FuzzyQueryNode represents a element that contains field/text/similarity tuple\nClass FuzzyQueryNode;\n// A GroupQueryNode represents a location where the original user typed real parenthesis on the query string.\nClass GroupQueryNode;\n// A MatchAllDocsQueryNode indicates that a query node tree or subtree will match all documents if executed in the index.\nClass MatchAllDocsQueryNode;\n// A MatchNoDocsQueryNode indicates that a query node tree or subtree will not match any documents if executed in the index.\nClass MatchNoDocsQueryNode;\n// A ModifierQueryNode indicates the modifier value (+,-,?,NONE) for each term on the query string.\nClass ModifierQueryNode;\n// A NoTokenFoundQueryNode is used if a term is convert into no tokens by the tokenizer/lemmatizer/analyzer (null).\nClass NoTokenFoundQueryNode;\n", "des": "Query nodes commonly used by query parser implementations."}
{"index": 3731, "repo": "lucene-queryparser-9.7.0", "code": "package parser\n\n// A parser needs to implement EscapeQuerySyntax to allow the QueryNode to escape the queries, when the toQueryString method is called.\nInterface EscapeQuerySyntax;\n// A parser needs to implement SyntaxParser interface\nInterface SyntaxParser;\n// Type of escaping: String for escaping syntax, NORMAL for escaping reserved words (like AND) in terms\nEnum EscapeQuerySyntax.Type;\n", "des": "Necessary interfaces to implement text parsers."}
{"index": 3732, "repo": "lucene-queryparser-9.7.0", "code": "package processors\n\n// A QueryNodeProcessor is an interface for classes that process a QueryNode tree.\nInterface QueryNodeProcessor;\n// A NoChildOptimizationQueryNodeProcessor removes every BooleanQueryNode, BoostQueryNode, TokenizedPhraseQueryNode or ModifierQueryNode that do not have a valid children.\nClass NoChildOptimizationQueryNodeProcessor;\n// This is a default implementation for the QueryNodeProcessor interface, it's an abstract class, so it should be extended by classes that want to process a QueryNode tree.\nClass QueryNodeProcessorImpl;\n// A QueryNodeProcessorPipeline class should be used to build a query node processor pipeline.\nClass QueryNodeProcessorPipeline;\n// A QueryNodeProcessorPipeline class removes every instance of DeletedQueryNode from a query node tree.\nClass RemoveDeletedQueryNodesProcessor;\n", "des": "Interfaces and implementations used by query node processors"}
{"index": 3733, "repo": "lucene-queryparser-9.7.0", "code": "package util\n\n// Allow joining 2 QueryNode Trees, into one.\nClass QueryNodeOperation;\n// String manipulation routines\nClass StringUtils;\n// CharsSequence with escaped chars information.\nClass UnescapedCharSequence;\n", "des": "Utility classes to used with the Query Parser."}
{"index": 3734, "repo": "lucene-queryparser-9.7.0", "code": "package messages\n\n// Message Interface for a lazy loading.\nInterface Message;\n// Interface that exceptions should implement to support lazy loading of messages.\nInterface NLSException;\n// Default implementation of Message interface.\nClass MessageImpl;\n// MessageBundles classes extend this class, to implement a bundle.\nClass NLS;\n", "des": "For Native Language Support (NLS), system of software internationalization."}
{"index": 3735, "repo": "lucene-queryparser-9.7.0", "code": "package precedence\n\n// Lucene Precedence Query Parser Processors\npackage precedence.processors\n// This query parser works exactly as the standard query parser ( StandardQueryParser ), except that it respect the boolean precedence, so <a AND b OR c AND d> is parsed to <(+a +b) (+c +d)> instead of <+a +b +c +d>.\nClass PrecedenceQueryParser;\n", "des": "Precedence Query Parser Implementation"}
{"index": 3736, "repo": "lucene-queryparser-9.7.0", "code": "package processors\n\n// This processor is used to apply the correct ModifierQueryNode to BooleanQueryNodes children.\nClass BooleanModifiersQueryNodeProcessor;\n// This processor pipeline extends StandardQueryNodeProcessorPipeline and enables boolean precedence on it.\nClass PrecedenceQueryNodeProcessorPipeline;\n", "des": "Lucene Precedence Query Parser Processors"}
{"index": 3737, "repo": "lucene-queryparser-9.7.0", "code": "package standard\n\n// Standard Lucene Query Node Builders.\npackage standard.builders\n// Standard Lucene Query Configuration.\npackage standard.config\n// Standard Lucene Query Nodes.\npackage standard.nodes\n// Lucene Query Parser\npackage standard.parser\n// Lucene Query Node Processors.\npackage standard.processors\n// Configuration options common across queryparser implementations.\nInterface CommonQueryParserConfiguration;\n// This class defines utility methods to (help) parse query strings into Query objects.\nClass QueryParserUtil;\n// The StandardQueryParser is a pre-assembled query parser that supports most features of the classic Lucene query parser, allows dynamic configuration of some of its features (like multi-field expansion or wildcard query restrictions) and adds support for new query types and expressions.\nClass StandardQueryParser;\n", "des": "Lucene Flexible Query Parser Implementation"}
{"index": 3738, "repo": "lucene-queryparser-9.7.0", "code": "package builders\n\n// This interface should be implemented by every class that wants to build Query objects from QueryNode objects.\nInterface StandardQueryBuilder;\n// Builds a BooleanQuery of SHOULD clauses, possibly with some minimum number to match.\nClass AnyQueryNodeBuilder;\n// Builds a BooleanQuery object from a BooleanQueryNode object.\nClass BooleanQueryNodeBuilder;\n// This builder basically reads the Query object set on the BoostQueryNode child using QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID and applies the boost value defined in the BoostQueryNode.\nClass BoostQueryNodeBuilder;\n// This builder does nothing.\nClass DummyQueryNodeBuilder;\n// Builds a TermQuery object from a FieldQueryNode object.\nClass FieldQueryNodeBuilder;\n// Builds a FuzzyQuery object from a FuzzyQueryNode object.\nClass FuzzyQueryNodeBuilder;\n// Builds no object, it only returns the Query object set on the GroupQueryNode object using a QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID tag.\nClass GroupQueryNodeBuilder;\n// Builds a Query from an IntervalQueryNode.\nClass IntervalQueryNodeBuilder;\n// Builds a MatchAllDocsQuery object from a MatchAllDocsQueryNode object.\nClass MatchAllDocsQueryNodeBuilder;\n// Builds a MatchNoDocsQuery object from a MatchNoDocsQueryNode object.\nClass MatchNoDocsQueryNodeBuilder;\n// Builds a BooleanQuery from a MinShouldMatchNode.\nClass MinShouldMatchNodeBuilder;\n// Builds no object, it only returns the Query object set on the ModifierQueryNode object using a QueryTreeBuilder.QUERY_TREE_BUILDER_TAGID tag.\nClass ModifierQueryNodeBuilder;\n// Builds a MultiPhraseQuery object from a MultiPhraseQueryNode object.\nClass MultiPhraseQueryNodeBuilder;\n// Builds a PhraseQuery object from a TokenizedPhraseQueryNode object.\nClass PhraseQueryNodeBuilder;\n// Builds PointValues range queries out of PointRangeQueryNodes.\nClass PointRangeQueryNodeBuilder;\n// Builds a PrefixQuery object from a PrefixWildcardQueryNode object.\nClass PrefixWildcardQueryNodeBuilder;\n// Builds a RegexpQuery object from a RegexpQueryNode object.\nClass RegexpQueryNodeBuilder;\n", "des": "Standard Lucene Query Node Builders."}
{"index": 3739, "repo": "lucene-queryparser-9.7.0", "code": "package config\n\n// This listener listens for every field configuration request and assign a StandardQueryConfigHandler.ConfigurationKeys.BOOST to the equivalent FieldConfig based on a defined map: fieldName -> boostValue stored in StandardQueryConfigHandler.ConfigurationKeys.FIELD_BOOST_MAP.\nClass FieldBoostMapFCListener;\n// This listener listens for every field configuration request and assign a StandardQueryConfigHandler.ConfigurationKeys.DATE_RESOLUTION to the equivalent FieldConfig based on a defined map: fieldName -> DateTools.Resolution stored in StandardQueryConfigHandler.ConfigurationKeys.FIELD_DATE_RESOLUTION_MAP.\nClass FieldDateResolutionFCListener;\n// Configuration parameters for FuzzyQuerys\nClass FuzzyConfig;\n// This Format parses Long into date strings and vice-versa.\nClass NumberDateFormat;\n// This class holds the configuration used to parse numeric queries and create PointValues queries.\nClass PointsConfig;\n// This listener is used to listen to FieldConfig requests in QueryConfigHandler and add StandardQueryConfigHandler.ConfigurationKeys.POINTS_CONFIG based on the StandardQueryConfigHandler.ConfigurationKeys.POINTS_CONFIG_MAP set in the QueryConfigHandler.\nClass PointsConfigListener;\n// This query configuration handler is used for almost every processor defined in the StandardQueryNodeProcessorPipeline processor pipeline.\nClass StandardQueryConfigHandler;\n// Class holding keys for StandardQueryNodeProcessorPipeline options.\nClass StandardQueryConfigHandler.ConfigurationKeys;\n// Boolean Operator: AND or OR\nEnum StandardQueryConfigHandler.Operator;\n", "des": "Standard Lucene Query Configuration."}
{"index": 3740, "repo": "lucene-queryparser-9.7.0", "code": "package nodes\n\n// This package contains classes that implement interval function support for the standard syntax parser.\npackage nodes.intervalfn\n// This class should be extended by nodes intending to represent range queries.\nClass AbstractRangeQueryNode<T extends FieldValuePairQueryNode<?>>;\n// A BooleanModifierNode has the same behaviour as ModifierQueryNode, it only indicates that this modifier was added by BooleanQuery2ModifierNodeProcessor and not by the user.\nClass BooleanModifierNode;\n// Node that represents an interval function.\nClass IntervalQueryNode;\n// Node that represents a minimum-should-match restriction on a GroupQueryNode.\nClass MinShouldMatchNode;\n// A MultiPhraseQueryNode indicates that its children should be used to build a MultiPhraseQuery instead of PhraseQuery.\nClass MultiPhraseQueryNode;\n// This query node represents a field query that holds a point value.\nClass PointQueryNode;\n// This query node represents a range query composed by PointQueryNode bounds, which means the bound values are Numbers.\nClass PointRangeQueryNode;\n// A PrefixWildcardQueryNode represents wildcardquery that matches abc* or *.\nClass PrefixWildcardQueryNode;\n// A RegexpQueryNode represents RegexpQuery query Examples: /[a-z]|[0-9]/\nClass RegexpQueryNode;\n// QueryNode for clauses that are synonym of each other.\nClass SynonymQueryNode;\n// This query node represents a range query composed by FieldQueryNode bounds, which means the bound values are strings.\nClass TermRangeQueryNode;\n// A WildcardQueryNode represents wildcard query This does not apply to phrases.\nClass WildcardQueryNode;\n", "des": "Standard Lucene Query Nodes."}
{"index": 3741, "repo": "lucene-queryparser-9.7.0", "code": "package intervalfn\n\n// Node that represents Intervals.after(IntervalsSource, IntervalsSource).\nClass After;\n// Node that represents Intervals.analyzedText(String, Analyzer, String, int, boolean).\nClass AnalyzedText;\n// Node that represents Intervals.atLeast(int, IntervalsSource...).\nClass AtLeast;\n// Node that represents Intervals.before(IntervalsSource, IntervalsSource).\nClass Before;\n// Node that represents Intervals.containedBy(IntervalsSource, IntervalsSource).\nClass ContainedBy;\n// Node that represents Intervals.containing(IntervalsSource, IntervalsSource).\nClass Containing;\n// Node that represents Intervals.extend(IntervalsSource, int, int).\nClass Extend;\n// An interval function equivalent to FuzzyQuery.\nClass FuzzyTerm;\n// Representation of an interval function that can be converted to IntervalsSource.\nClass IntervalFunction;\n// Node that represents Intervals.maxgaps(int, IntervalsSource).\nClass MaxGaps;\n// Node that represents Intervals.maxwidth(int, IntervalsSource).\nClass MaxWidth;\n// Node that represents Intervals.nonOverlapping(IntervalsSource, IntervalsSource) .\nClass NonOverlapping;\n// Node that represents Intervals.notContainedBy(IntervalsSource, IntervalsSource).\nClass NotContainedBy;\n// Node that represents Intervals.notContaining(IntervalsSource, IntervalsSource).\nClass NotContaining;\n// Node that represents Intervals.notWithin(IntervalsSource, int, IntervalsSource).\nClass NotWithin;\n// Node that represents Intervals.or(IntervalsSource...).\nClass Or;\n// Node that represents Intervals.ordered(IntervalsSource...).\nClass Ordered;\n// Node that represents Intervals.overlapping(IntervalsSource, IntervalsSource).\nClass Overlapping;\n// Node that represents Intervals.phrase(String...).\nClass Phrase;\n// Node that represents Intervals.unordered(IntervalsSource...).\nClass Unordered;\n// Node that represents Intervals.unorderedNoOverlaps(IntervalsSource, IntervalsSource).\nClass UnorderedNoOverlaps;\n// Node that represents Intervals.wildcard(BytesRef).\nClass Wildcard;\n", "des": "This package contains classes that implement interval function support for the standard syntax parser."}
{"index": 3742, "repo": "lucene-queryparser-9.7.0", "code": "package parser\n\n// Token literal values and constants.\nInterface StandardSyntaxParserConstants;\n// Implementation of EscapeQuerySyntax for the standard lucene syntax.\nClass EscapeQuerySyntaxImpl;\n// Parser for the standard Lucene syntax\nClass StandardSyntaxParser;\n// Token Manager.\nClass StandardSyntaxParserTokenManager;\n// Describes the input token stream.\nClass Token;\n// This exception is thrown when parse errors are encountered.\nClass ParseException;\n// Token Manager Error.\nClass TokenMgrError;\n", "des": "Lucene Query Parser"}
{"index": 3743, "repo": "lucene-queryparser-9.7.0", "code": "package processors\n\n// This processor verifies if StandardQueryConfigHandler.ConfigurationKeys.ALLOW_LEADING_WILDCARD is defined in the QueryConfigHandler.\nClass AllowLeadingWildcardProcessor;\n// This processor verifies if StandardQueryConfigHandler.ConfigurationKeys.ANALYZER is defined in the QueryConfigHandler.\nClass AnalyzerQueryNodeProcessor;\n// This processor is used to apply the correct ModifierQueryNode to BooleanQueryNodes children.\nClass BooleanQuery2ModifierNodeProcessor;\n// This processor removes every BooleanQueryNode that contains only one child and returns this child.\nClass BooleanSingleChildOptimizationQueryNodeProcessor;\n// This processor iterates the query node tree looking for every FieldableNode that has StandardQueryConfigHandler.ConfigurationKeys.BOOST in its config.\nClass BoostQueryNodeProcessor;\n// This processor verifies if StandardQueryConfigHandler.ConfigurationKeys.PHRASE_SLOP is defined in the QueryConfigHandler.\nClass DefaultPhraseSlopQueryNodeProcessor;\n// This processor iterates the query node tree looking for every FuzzyQueryNode, when this kind of node is found, it checks on the query configuration for StandardQueryConfigHandler.ConfigurationKeys.FUZZY_CONFIG, gets the fuzzy prefix length and default similarity from it and set to the fuzzy node.\nClass FuzzyQueryNodeProcessor;\n// This processor makes sure that StandardQueryConfigHandler.ConfigurationKeys.ANALYZER is defined in the QueryConfigHandler and injects this analyzer into IntervalQueryNodes.\nClass IntervalQueryNodeProcessor;\n// This processor converts every WildcardQueryNode that is \"*:*\" to MatchAllDocsQueryNode.\nClass MatchAllDocsQueryNodeProcessor;\n// This processor is used to expand terms so the query looks for the same term in different fields.\nClass MultiFieldQueryNodeProcessor;\n// This processor instates the default MultiTermQuery.RewriteMethod, MultiTermQuery.CONSTANT_SCORE_BLENDED_REWRITE, for multi-term query nodes.\nClass MultiTermRewriteMethodProcessor;\n// Processes TermRangeQuerys with open ranges.\nClass OpenRangeQueryNodeProcessor;\n// This processor removes invalid SlopQueryNode objects in the query node tree.\nClass PhraseSlopQueryNodeProcessor;\n// This processor is used to convert FieldQueryNodes to PointRangeQueryNodes.\nClass PointQueryNodeProcessor;\n", "des": "Lucene Query Node Processors."}
{"index": 3744, "repo": "lucene-queryparser-9.7.0", "code": "package simple\n\n// SimpleQueryParser is used to parse human readable query syntax.\nClass SimpleQueryParser;\n", "des": "A simple query parser for human-entered queries."}
{"index": 3745, "repo": "lucene-queryparser-9.7.0", "code": "package parser\n\n// Token literal values and constants.\nInterface QueryParserConstants;\n// This class is generated by JavaCC.\nClass QueryParser;\n// Token Manager.\nClass QueryParserTokenManager;\n// Describes the input token stream.\nClass Token;\n// This exception is thrown when parse errors are encountered.\nClass ParseException;\n// Token Manager Error.\nClass TokenMgrError;\n", "des": "This package contains the QueryParser.jj source file for the Surround parser."}
{"index": 3746, "repo": "lucene-queryparser-9.7.0", "code": "package query\n\n// Interface for queries that can be nested as subqueries into a span near.\nInterface DistanceSubQuery;\n// Callback to visit each matching term during \"rewrite\" in SimpleTerm.MatchingTermVisitor.visitMatchingTerm(Term)\nInterface SimpleTerm.MatchingTermVisitor;\n// Factory for conjunctions\nClass AndQuery;\n// Factory for creating basic term queries\nClass BasicQueryFactory;\n// Base class for composite queries (such as AND/OR/NOT)\nClass ComposedQuery;\n// Factory for NEAR queries\nClass DistanceQuery;\n// Forms an OR query of the provided query across multiple fields.\nClass FieldsQuery;\n// Factory for prohibited clauses\nClass NotQuery;\n// Factory for disjunctions\nClass OrQuery;\n// Base class for queries that expand to sets of simple terms.\nClass SimpleTerm;\n// Factory for SpanOrQuery\nClass SpanNearClauseFactory;\n// Query that matches String prefixes\nClass SrndPrefixQuery;\n// Lowest level base class for surround queries\nClass SrndQuery;\n// Simple single-term clause\nClass SrndTermQuery;\n// Query that matches wildcards\nClass SrndTruncQuery;\n// Exception thrown when BasicQueryFactory would exceed the limit of query clauses.\nClass TooManyBasicQueries;\n", "des": "This package contains SrndQuery and its subclasses."}
{"index": 3747, "repo": "lucene-queryparser-9.7.0", "code": "package xml\n\n// XML Parser factories for different Lucene Query/Filters.\npackage xml.builders\n// Implemented by objects that produce Lucene Query objects from XML streams.\nInterface QueryBuilder;\n// Assembles a QueryBuilder which uses only core Lucene Query objects\nClass CoreParser;\n// Assembles a QueryBuilder which uses Query objects from Lucene's sandbox and queries modules in addition to core queries.\nClass CorePlusExtensionsParser;\n// Assembles a QueryBuilder which uses Query objects from Lucene's queries module in addition to core queries.\nClass CorePlusQueriesParser;\n// Helper methods for parsing XML\nClass DOMUtils;\n// Factory for QueryBuilder\nClass QueryBuilderFactory;\n// Thrown when the xml queryparser encounters invalid syntax/configuration.\nClass ParserException;\n", "des": "Parser that produces Lucene Query objects from XML streams."}
{"index": 3748, "repo": "lucene-queryparser-9.7.0", "code": "package builders\n\n// Interface for retrieving a SpanQuery.\nInterface SpanQueryBuilder;\n// Builder for BooleanQuery\nClass BooleanQueryBuilder;\n// Builder for PayloadScoreQuery\nClass BoostingTermBuilder;\n// Builder for ConstantScoreQuery\nClass ConstantScoreQueryBuilder;\n// Builder for DisjunctionMaxQuery\nClass DisjunctionMaxQueryBuilder;\n// Builder for FuzzyLikeThisQuery\nClass FuzzyLikeThisQueryBuilder;\n// Builder for MoreLikeThisQuery\nClass LikeThisQueryBuilder;\n// Builder for MatchAllDocsQuery\nClass MatchAllDocsQueryBuilder;\n// Creates a range query across 1D PointValues.\nClass PointRangeQueryBuilder;\n// Builder for TermRangeQuery\nClass RangeQueryBuilder;\n// Base class for building SpanQuerys\nClass SpanBuilderBase;\n// Builder for SpanFirstQuery\nClass SpanFirstBuilder;\n// Builder for SpanNearQuery\nClass SpanNearBuilder;\n// Builder for SpanNotQuery\nClass SpanNotBuilder;\n// Builder for SpanOrQuery\nClass SpanOrBuilder;\n// Builder that analyzes the text into a SpanOrQuery\nClass SpanOrTermsBuilder;\n// Builder for SpanPositionRangeQuery\nClass SpanPositionRangeBuilder;\n// Factory for SpanQueryBuilders\nClass SpanQueryBuilderFactory;\n// Builder for SpanTermQuery\nClass SpanTermBuilder;\n// Builder for TermQuery\nClass TermQueryBuilder;\n// Builds a BooleanQuery from all of the terms found in the XML element using the choice of analyzer\nClass TermsQueryBuilder;\n// UserInputQueryBuilder uses 1 of 2 strategies for thread-safe parsing: 1) Synchronizing access to \"parse\" calls on a previously supplied QueryParser or..\nClass UserInputQueryBuilder;\n", "des": "XML Parser factories for different Lucene Query/Filters."}
{"index": 3749, "repo": "lucene-facet-9.7.0", "code": "package facet\n\n// Provides FacetSets faceting capabilities which allows users to facet on high dimensional field values.\npackage facet.facetset\n// Provides range faceting capabilities.\npackage facet.range\n// Provides range on range faceting capabilities.\npackage facet.rangeonrange\n// Provides faceting capabilities over facets that were indexed with SortedSetDocValuesFacetField.\npackage facet.sortedset\n// Taxonomy of Categories.\npackage facet.taxonomy\n// A Query for drill-down over facet categories.\nClass DrillDownQuery;\n// Computes drill down and sideways counts for the provided DrillDownQuery.\nClass DrillSideways;\n// Result of a concurrent drill sideways search, including the Facets and TopDocs.\nClass DrillSideways.ConcurrentDrillSidewaysResult<R>;\n// Result of a drill sideways search, including the Facets and TopDocs.\nClass DrillSideways.DrillSidewaysResult;\n// Base class for facet counts.\nClass FacetCountsWithFilterQuery;\n// Add an instance of this to your Document for every facet label.\nClass FacetField;\n// A term Query over a FacetField.\nClass FacetQuery;\n// Counts or aggregates for a single dimension.\nClass FacetResult;\n// Common base class for all facets implementations.\nClass Facets;\n// Collects hits for subsequent faceting.\nClass FacetsCollector;\n// Holds the documents that were matched in the LeafReaderContext.\nClass FacetsCollector.MatchingDocs;\n// A CollectorManager implementation which produces FacetsCollector and produces a merged FacetsCollector.\nClass FacetsCollectorManager;\n// Records per-dimension configuration.\nClass FacetsConfig;\n// Holds the configuration for one dimension\nClass FacetsConfig.DimConfig;\n// Utility class with a single method for getting a DocIdSetIterator that skips deleted docs\nClass FacetUtils;\n// Single label and its value, usually contained in a FacetResult.\nClass LabelAndValue;\n// Facets implementation that computes counts for all unique long values, more efficiently counting small values (0-1023) using an int array, and switching to a HashMap for values above 1023.\nClass LongValueFacetCounts;\n", "des": "Faceted search."}
{"index": 3750, "repo": "lucene-facet-9.7.0", "code": "package facetset\n\n// A functional interface for decoding facet set values into comparable `long` ones.\nInterface FacetSetDecoder;\n// Defines a single range in a FacetSet dimension.\nClass DimRange;\n// A FacetSet which encodes double dimension values.\nClass DoubleFacetSet;\n// A FacetSetMatcher which considers a set as a match only if all dimension values are equal to the given one.\nClass ExactFacetSetMatcher;\n// Holds a set of facet dimension values.\nClass FacetSet;\n// Matches the encoded FacetSet that was indexed in FacetSetsField.\nClass FacetSetMatcher;\n// A BinaryDocValuesField which encodes a list of facet sets.\nClass FacetSetsField;\n// A FacetSet which encodes float dimension values.\nClass FloatFacetSet;\n// A FacetSet which encodes integer dimension values.\nClass IntFacetSet;\n// A FacetSet which encodes long dimension values.\nClass LongFacetSet;\n// Returns the counts for each given FacetSet\nClass MatchingFacetSetsCounts;\n// A FacetSetMatcher which considers a set as a match if all dimensions fall within the given corresponding range.\nClass RangeFacetSetMatcher;\n", "des": "Provides FacetSets faceting capabilities which allows users to facet on high dimensional field values."}
{"index": 3751, "repo": "lucene-facet-9.7.0", "code": "package range\n\n// Represents a range over double values.\nClass DoubleRange;\n// Facets implementation that computes counts for dynamic double ranges.\nClass DoubleRangeFacetCounts;\n// Represents a range over long values.\nClass LongRange;\n// Facets implementation that computes counts for dynamic long ranges.\nClass LongRangeFacetCounts;\n// Base class for a single labeled range.\nClass Range;\n", "des": "Provides range faceting capabilities."}
{"index": 3752, "repo": "lucene-facet-9.7.0", "code": "package rangeonrange\n\n// Represents a double range for RangeOnRange faceting\nClass DoubleRange;\n// Represents counts for double range on range faceting.\nClass DoubleRangeOnRangeFacetCounts;\n// Represents a long range for RangeOnRange faceting\nClass LongRange;\n// Represents counts for long range on range faceting.\nClass LongRangeOnRangeFacetCounts;\n// Base class for a single labeled range.\nClass Range;\n", "des": "Provides range on range faceting capabilities."}
{"index": 3753, "repo": "lucene-facet-9.7.0", "code": "package sortedset\n\n// Like SortedSetDocValuesFacetCounts, but aggregates counts concurrently across segments.\nClass ConcurrentSortedSetDocValuesFacetCounts;\n// Default implementation of SortedSetDocValuesFacetCounts.\nClass DefaultSortedSetDocValuesReaderState;\n// Compute facets counts from previously indexed SortedSetDocValuesFacetField, without require a separate taxonomy index.\nClass SortedSetDocValuesFacetCounts;\n// Add an instance of this to your Document for every facet label to be indexed via SortedSetDocValues.\nClass SortedSetDocValuesFacetField;\n// Wraps a IndexReader and resolves ords using existing SortedSetDocValues APIs without a separate taxonomy index.\nClass SortedSetDocValuesReaderState;\n// Holds children and sibling information for a single dimension.\nClass SortedSetDocValuesReaderState.DimTree;\n// Holds start/end range of ords, which maps to one dimension.\nClass SortedSetDocValuesReaderState.OrdRange;\n", "des": "Provides faceting capabilities over facets that were indexed with SortedSetDocValuesFacetField."}
{"index": 3754, "repo": "lucene-facet-9.7.0", "code": "package taxonomy\n\n// Taxonomy index implementation using on top of a Directory.\npackage taxonomy.directory\n// Improves indexing time by caching a map of CategoryPath to their Ordinal.\npackage taxonomy.writercache\n// TaxonomyWriter is the interface which the faceted-search library uses to dynamically build the taxonomy at indexing time.\nInterface TaxonomyWriter;\n// Specify aggregation logic used in TaxonomyFacetIntAssociations and TaxonomyFacetFloatAssociations.\nClass AssociationAggregationFunction;\n// Add an instance of this to your Document to add a facet label associated with an arbitrary byte[].\nClass AssociationFacetField;\n// \nClass BackCompatSortedNumericDocValues;\n// \nClass CachedOrdinalsReader;\n// Holds the cached ordinals in two parallel int[] arrays.\nClass CachedOrdinalsReader.CachedOrds;\n// \nClass DocValuesOrdinalsReader;\n// Holds a sequence of string components, specifying the hierarchical name of a category.\nClass FacetLabel;\n// Computes facets counts, assuming the default encoding into DocValues was used.\nClass FastTaxonomyFacetCounts;\n// Add an instance of this to your Document to add a facet label associated with a float.\nClass FloatAssociationFacetField;\n// \nClass FloatTaxonomyFacets;\n// Add an instance of this to your Document to add a facet label associated with an int.\nClass IntAssociationFacetField;\n// \nClass IntTaxonomyFacets;\n// LRUHashMap is an extension of Java's HashMap, which has a bounded size(); When it reaches that size, each time a new element is added, the least recently used (LRU) entry is removed.\nClass LRUHashMap<K,​V>;\n// A FilterLeafReader for updating facets ordinal references, based on an ordinal map.\nClass OrdinalMappingLeafReader;\n// \nClass OrdinalsReader;\n// Returns ordinals for documents in one segment.\nClass OrdinalsReader.OrdinalsSegmentReader;\n// Returns 3 arrays for traversing the taxonomy: parents: parents[i] denotes the parent of category ordinal i.\nClass ParallelTaxonomyArrays;\n// Prints how many ords are under each dimension.\nClass PrintTaxonomyStats;\n", "des": "Taxonomy of Categories."}
{"index": 3755, "repo": "lucene-facet-9.7.0", "code": "package directory\n\n// Mapping from old ordinal to new ordinals, used when merging indexes with separate taxonomies.\nInterface DirectoryTaxonomyWriter.OrdinalMap;\n// A TaxonomyReader which retrieves stored taxonomy information from a Directory.\nClass DirectoryTaxonomyReader;\n// TaxonomyWriter which uses a Directory to store the taxonomy information on disk, and keeps an additional in-memory cache of some or all categories.\nClass DirectoryTaxonomyWriter;\n// DirectoryTaxonomyWriter.OrdinalMap maintained on file system\nClass DirectoryTaxonomyWriter.DiskOrdinalMap;\n// DirectoryTaxonomyWriter.OrdinalMap maintained in memory\nClass DirectoryTaxonomyWriter.MemoryOrdinalMap;\n", "des": "Taxonomy index implementation using on top of a Directory."}
{"index": 3756, "repo": "lucene-facet-9.7.0", "code": "package writercache\n\n// TaxonomyWriterCache is a relatively simple interface for a cache of category->ordinal mappings, used in TaxonomyWriter implementations (such as DirectoryTaxonomyWriter).\nInterface TaxonomyWriterCache;\n// Abstract class for storing Label->Ordinal mappings in a taxonomy.\nClass LabelToOrdinal;\n// LRU TaxonomyWriterCache - good choice for huge taxonomies.\nClass LruTaxonomyWriterCache;\n// An LRU cache of mapping from name to int.\nClass NameHashIntCacheLRU;\n// \nClass UTF8TaxonomyWriterCache;\n// Determines cache type.\nEnum LruTaxonomyWriterCache.LRUType;\n", "des": "Improves indexing time by caching a map of CategoryPath to their Ordinal."}
{"index": 3757, "repo": "lucene-analysis-common-9.7.0", "code": "package ar\n\n// Analyzer for Arabic.\nClass ArabicAnalyzer;\n// A TokenFilter that applies ArabicNormalizer to normalize the orthography.\nClass ArabicNormalizationFilter;\n// Factory for ArabicNormalizationFilter.\nClass ArabicNormalizationFilterFactory;\n// Normalizer for Arabic.\nClass ArabicNormalizer;\n// A TokenFilter that applies ArabicStemmer to stem Arabic words..\nClass ArabicStemFilter;\n// Factory for ArabicStemFilter.\nClass ArabicStemFilterFactory;\n// Stemmer for Arabic.\nClass ArabicStemmer;\n", "des": "Analyzer for Arabic."}
{"index": 3758, "repo": "lucene-analysis-common-9.7.0", "code": "package bg\n\n// Analyzer for Bulgarian.\nClass BulgarianAnalyzer;\n// A TokenFilter that applies BulgarianStemmer to stem Bulgarian words.\nClass BulgarianStemFilter;\n// Factory for BulgarianStemFilter.\nClass BulgarianStemFilterFactory;\n// Light Stemmer for Bulgarian.\nClass BulgarianStemmer;\n", "des": "Analyzer for Bulgarian."}
{"index": 3759, "repo": "lucene-analysis-common-9.7.0", "code": "package bn\n\n// Analyzer for Bengali.\nClass BengaliAnalyzer;\n// A TokenFilter that applies BengaliNormalizer to normalize the orthography.\nClass BengaliNormalizationFilter;\n// Factory for BengaliNormalizationFilter.\nClass BengaliNormalizationFilterFactory;\n// Normalizer for Bengali.\nClass BengaliNormalizer;\n// A TokenFilter that applies BengaliStemmer to stem Bengali words.\nClass BengaliStemFilter;\n// Factory for BengaliStemFilter.\nClass BengaliStemFilterFactory;\n// Stemmer for Bengali.\nClass BengaliStemmer;\n", "des": "Analyzer for Bengali Language."}
{"index": 3760, "repo": "lucene-analysis-common-9.7.0", "code": "package boost\n\n// Characters before the delimiter are the \"token\", those after are the boost.\nClass DelimitedBoostTokenFilter;\n// Factory for DelimitedBoostTokenFilter.\nClass DelimitedBoostTokenFilterFactory;\n", "des": "Provides various convenience classes for creating boosts on Tokens."}
{"index": 3761, "repo": "lucene-analysis-common-9.7.0", "code": "package br\n\n// Analyzer for Brazilian Portuguese language.\nClass BrazilianAnalyzer;\n// A TokenFilter that applies BrazilianStemmer.\nClass BrazilianStemFilter;\n// Factory for BrazilianStemFilter.\nClass BrazilianStemFilterFactory;\n// A stemmer for Brazilian Portuguese words.\nClass BrazilianStemmer;\n", "des": "Analyzer for Brazilian Portuguese."}
{"index": 3762, "repo": "lucene-analysis-common-9.7.0", "code": "package ca\n\n// Analyzer for Catalan.\nClass CatalanAnalyzer;\n", "des": "Analyzer for Catalan."}
{"index": 3763, "repo": "lucene-analysis-common-9.7.0", "code": "package charfilter\n\n// Base utility class for implementing a CharFilter.\nClass BaseCharFilter;\n// A CharFilter that wraps another Reader and attempts to strip out HTML constructs.\nClass HTMLStripCharFilter;\n// Factory for HTMLStripCharFilter.\nClass HTMLStripCharFilterFactory;\n// Simplistic CharFilter that applies the mappings contained in a NormalizeCharMap to the character stream, and correcting the resulting changes to the offsets.\nClass MappingCharFilter;\n// Factory for MappingCharFilter.\nClass MappingCharFilterFactory;\n// Holds a map of String input to String output, to be used with MappingCharFilter.\nClass NormalizeCharMap;\n// Builds an NormalizeCharMap.\nClass NormalizeCharMap.Builder;\n", "des": "Normalization of text before the tokenizer."}
{"index": 3764, "repo": "lucene-analysis-common-9.7.0", "code": "package cjk\n\n// An Analyzer that tokenizes text with StandardTokenizer, normalizes content with CJKWidthFilter, folds case with LowerCaseFilter, forms bigrams of CJK with CJKBigramFilter, and filters stopwords with StopFilter\nClass CJKAnalyzer;\n// Forms bigrams of CJK terms that are generated from StandardTokenizer or ICUTokenizer.\nClass CJKBigramFilter;\n// Factory for CJKBigramFilter.\nClass CJKBigramFilterFactory;\n// A CharFilter that normalizes CJK width differences: Folds fullwidth ASCII variants into the equivalent basic latin Folds halfwidth Katakana variants into the equivalent kana\nClass CJKWidthCharFilter;\n// Factory for CJKWidthCharFilter.\nClass CJKWidthCharFilterFactory;\n// A TokenFilter that normalizes CJK width differences: Folds fullwidth ASCII variants into the equivalent basic latin Folds halfwidth Katakana variants into the equivalent kana\nClass CJKWidthFilter;\n// Factory for CJKWidthFilter.\nClass CJKWidthFilterFactory;\n", "des": "Analyzer for Chinese, Japanese, and Korean, which indexes bigrams."}
{"index": 3765, "repo": "lucene-analysis-common-9.7.0", "code": "package ckb\n\n// Analyzer for Sorani Kurdish.\nClass SoraniAnalyzer;\n// A TokenFilter that applies SoraniNormalizer to normalize the orthography.\nClass SoraniNormalizationFilter;\n// Factory for SoraniNormalizationFilter.\nClass SoraniNormalizationFilterFactory;\n// Normalizes the Unicode representation of Sorani text.\nClass SoraniNormalizer;\n// A TokenFilter that applies SoraniStemmer to stem Sorani words.\nClass SoraniStemFilter;\n// Factory for SoraniStemFilter.\nClass SoraniStemFilterFactory;\n// Light stemmer for Sorani\nClass SoraniStemmer;\n", "des": "Analyzer for Sorani Kurdish."}
{"index": 3766, "repo": "lucene-analysis-common-9.7.0", "code": "package classic\n\n// Filters ClassicTokenizer with ClassicFilter, LowerCaseFilter and StopFilter, using a list of English stop words.\nClass ClassicAnalyzer;\n// Normalizes tokens extracted with ClassicTokenizer.\nClass ClassicFilter;\n// Factory for ClassicFilter.\nClass ClassicFilterFactory;\n// A grammar-based tokenizer constructed with JFlex\nClass ClassicTokenizer;\n// Factory for ClassicTokenizer.\nClass ClassicTokenizerFactory;\n", "des": "Fast, general-purpose grammar-based tokenizers."}
{"index": 3767, "repo": "lucene-analysis-common-9.7.0", "code": "package commongrams\n\n// Construct bigrams for frequently occurring terms while indexing.\nClass CommonGramsFilter;\n// Constructs a CommonGramsFilter.\nClass CommonGramsFilterFactory;\n// Wrap a CommonGramsFilter optimizing phrase queries by only returning single words when they are not a member of a bigram.\nClass CommonGramsQueryFilter;\n// Construct CommonGramsQueryFilter.\nClass CommonGramsQueryFilterFactory;\n", "des": "Construct n-grams for frequently occurring terms and phrases."}
{"index": 3768, "repo": "lucene-analysis-common-9.7.0", "code": "package compound\n\n// Hyphenation code for the CompoundWordTokenFilter.\npackage compound.hyphenation\n// Base class for decomposition token filters.\nClass CompoundWordTokenFilterBase;\n// A TokenFilter that decomposes compound words found in many Germanic languages.\nClass DictionaryCompoundWordTokenFilter;\n// Factory for DictionaryCompoundWordTokenFilter.\nClass DictionaryCompoundWordTokenFilterFactory;\n// A TokenFilter that decomposes compound words found in many Germanic languages.\nClass HyphenationCompoundWordTokenFilter;\n// Factory for HyphenationCompoundWordTokenFilter.\nClass HyphenationCompoundWordTokenFilterFactory;\n", "des": "A filter that decomposes compound words you find in many Germanic languages into the word parts."}
{"index": 3769, "repo": "lucene-analysis-common-9.7.0", "code": "package hyphenation\n\n// This interface is used to connect the XML pattern file parser to the hyphenation tree.\nInterface PatternConsumer;\n// This class implements a simple byte vector with access to the underlying array.\nClass ByteVector;\n// This class implements a simple char vector with access to the underlying array.\nClass CharVector;\n// This class represents a hyphen.\nClass Hyphen;\n// This class represents a hyphenated word.\nClass Hyphenation;\n// This tree structure stores the hyphenation patterns in an efficient way for fast lookup.\nClass HyphenationTree;\n// A SAX document handler to read and parse hyphenation patterns from a XML file.\nClass PatternParser;\n// Ternary Search Tree.\nClass TernaryTree;\n", "des": "Hyphenation code for the CompoundWordTokenFilter."}
{"index": 3770, "repo": "lucene-analysis-common-9.7.0", "code": "package core\n\n// Folds all Unicode digits in [:General_Category=Decimal_Number:] to Basic Latin digits (0-9).\nClass DecimalDigitFilter;\n// Factory for DecimalDigitFilter.\nClass DecimalDigitFilterFactory;\n// Converts an incoming graph token stream, such as one from SynonymGraphFilter, into a flat form so that all nodes form a single linear chain with no side paths.\nClass FlattenGraphFilter;\n// Factory for FlattenGraphFilter.\nClass FlattenGraphFilterFactory;\n// \"Tokenizes\" the entire stream as a single token.\nClass KeywordAnalyzer;\n// Emits the entire input as a single token.\nClass KeywordTokenizer;\n// Factory for KeywordTokenizer.\nClass KeywordTokenizerFactory;\n// A LetterTokenizer is a tokenizer that divides text at non-letters.\nClass LetterTokenizer;\n// Factory for LetterTokenizer.\nClass LetterTokenizerFactory;\n// Normalizes token text to lower case.\nClass LowerCaseFilter;\n// Factory for LowerCaseFilter.\nClass LowerCaseFilterFactory;\n// An Analyzer that filters LetterTokenizer with LowerCaseFilter\nClass SimpleAnalyzer;\n// Filters LetterTokenizer with LowerCaseFilter and StopFilter.\nClass StopAnalyzer;\n// Removes stop words from a token stream.\nClass StopFilter;\n// Factory for StopFilter.\nClass StopFilterFactory;\n// Removes tokens whose types appear in a set of blocked types from a token stream.\nClass TypeTokenFilter;\n// Factory class for TypeTokenFilter.\nClass TypeTokenFilterFactory;\n// An Analyzer that uses UnicodeWhitespaceTokenizer.\nClass UnicodeWhitespaceAnalyzer;\n// A UnicodeWhitespaceTokenizer is a tokenizer that divides text at whitespace.\nClass UnicodeWhitespaceTokenizer;\n// Normalizes token text to UPPER CASE.\nClass UpperCaseFilter;\n// Factory for UpperCaseFilter.\nClass UpperCaseFilterFactory;\n// An Analyzer that uses WhitespaceTokenizer.\nClass WhitespaceAnalyzer;\n// A tokenizer that divides text at whitespace characters as defined by Character.isWhitespace(int).\nClass WhitespaceTokenizer;\n// Factory for WhitespaceTokenizer.\nClass WhitespaceTokenizerFactory;\n", "des": "Basic, general-purpose analysis components."}
{"index": 3771, "repo": "lucene-analysis-common-9.7.0", "code": "package custom\n\n// A general-purpose Analyzer that can be created with a builder-style API.\nClass CustomAnalyzer;\n// Builder for CustomAnalyzer.\nClass CustomAnalyzer.Builder;\n// Factory class for a ConditionalTokenFilter\nClass CustomAnalyzer.ConditionBuilder;\n", "des": "A general-purpose Analyzer that can be created with a builder-style API."}
{"index": 3772, "repo": "lucene-analysis-common-9.7.0", "code": "package cz\n\n// Analyzer for Czech language.\nClass CzechAnalyzer;\n// A TokenFilter that applies CzechStemmer to stem Czech words.\nClass CzechStemFilter;\n// Factory for CzechStemFilter.\nClass CzechStemFilterFactory;\n// Light Stemmer for Czech.\nClass CzechStemmer;\n", "des": "Analyzer for Czech."}
{"index": 3773, "repo": "lucene-analysis-common-9.7.0", "code": "package da\n\n// Analyzer for Danish.\nClass DanishAnalyzer;\n", "des": "Analyzer for Danish."}
{"index": 3774, "repo": "lucene-analysis-common-9.7.0", "code": "package de\n\n// Analyzer for German language.\nClass GermanAnalyzer;\n// A TokenFilter that applies GermanLightStemmer to stem German words.\nClass GermanLightStemFilter;\n// Factory for GermanLightStemFilter.\nClass GermanLightStemFilterFactory;\n// Light Stemmer for German.\nClass GermanLightStemmer;\n// A TokenFilter that applies GermanMinimalStemmer to stem German words.\nClass GermanMinimalStemFilter;\n// Factory for GermanMinimalStemFilter.\nClass GermanMinimalStemFilterFactory;\n// Minimal Stemmer for German.\nClass GermanMinimalStemmer;\n// Normalizes German characters according to the heuristics of the German2 snowball algorithm.\nClass GermanNormalizationFilter;\n// Factory for GermanNormalizationFilter.\nClass GermanNormalizationFilterFactory;\n// A TokenFilter that stems German words.\nClass GermanStemFilter;\n// Factory for GermanStemFilter.\nClass GermanStemFilterFactory;\n// A stemmer for German words.\nClass GermanStemmer;\n", "des": "Analyzer for German."}
{"index": 3775, "repo": "lucene-analysis-common-9.7.0", "code": "package el\n\n// Analyzer for the Greek language.\nClass GreekAnalyzer;\n// Normalizes token text to lower case, removes some Greek diacritics, and standardizes final sigma to sigma.\nClass GreekLowerCaseFilter;\n// Factory for GreekLowerCaseFilter.\nClass GreekLowerCaseFilterFactory;\n// A TokenFilter that applies GreekStemmer to stem Greek words.\nClass GreekStemFilter;\n// Factory for GreekStemFilter.\nClass GreekStemFilterFactory;\n// A stemmer for Greek words, according to: Development of a Stemmer for the Greek Language. Georgios Ntais\nClass GreekStemmer;\n", "des": "Analyzer for Greek."}
{"index": 3776, "repo": "lucene-analysis-common-9.7.0", "code": "package email\n\n// Filters UAX29URLEmailTokenizer with LowerCaseFilter and StopFilter, using a list of English stop words.\nClass UAX29URLEmailAnalyzer;\n// This class implements Word Break rules from the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29 URLs and email addresses are also tokenized according to the relevant RFCs.\nClass UAX29URLEmailTokenizer;\n// Factory for UAX29URLEmailTokenizer.\nClass UAX29URLEmailTokenizerFactory;\n// This class implements Word Break rules from the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29 URLs and email addresses are also tokenized according to the relevant RFCs.\nClass UAX29URLEmailTokenizerImpl;\n", "des": "Fast, general-purpose URLs and email addresses tokenizers."}
{"index": 3777, "repo": "lucene-analysis-common-9.7.0", "code": "package en\n\n// Abstract parent class for analysis factories that accept a stopwords file as input.\nClass AbstractWordsFileFilterFactory;\n// Analyzer for English.\nClass EnglishAnalyzer;\n// A TokenFilter that applies EnglishMinimalStemmer to stem English words.\nClass EnglishMinimalStemFilter;\n// Factory for EnglishMinimalStemFilter.\nClass EnglishMinimalStemFilterFactory;\n// Minimal plural stemmer for English.\nClass EnglishMinimalStemmer;\n// TokenFilter that removes possessives (trailing 's) from words.\nClass EnglishPossessiveFilter;\n// Factory for EnglishPossessiveFilter.\nClass EnglishPossessiveFilterFactory;\n// A high-performance kstem filter for english.\nClass KStemFilter;\n// Factory for KStemFilter.\nClass KStemFilterFactory;\n// This class implements the Kstem algorithm\nClass KStemmer;\n// Transforms the token stream as per the Porter stemming algorithm.\nClass PorterStemFilter;\n// Factory for PorterStemFilter.\nClass PorterStemFilterFactory;\n", "des": "Analyzer for English."}
{"index": 3778, "repo": "lucene-analysis-common-9.7.0", "code": "package es\n\n// Analyzer for Spanish.\nClass SpanishAnalyzer;\n// A TokenFilter that applies SpanishLightStemmer to stem Spanish words.\nClass SpanishLightStemFilter;\n// Factory for SpanishLightStemFilter.\nClass SpanishLightStemFilterFactory;\n// Light Stemmer for Spanish\nClass SpanishLightStemmer;\n// \nClass SpanishMinimalStemFilter;\n// \nClass SpanishMinimalStemFilterFactory;\n// \nClass SpanishMinimalStemmer;\n// A TokenFilter that applies SpanishPluralStemmer to stem Spanish words.\nClass SpanishPluralStemFilter;\n// Factory for SpanishPluralStemFilterFactory.\nClass SpanishPluralStemFilterFactory;\n// Plural Stemmer for Spanish\nClass SpanishPluralStemmer;\n", "des": "Analyzer for Spanish."}
{"index": 3779, "repo": "lucene-analysis-common-9.7.0", "code": "package et\n\n// Analyzer for Estonian.\nClass EstonianAnalyzer;\n", "des": "Analyzer for Estonian."}
{"index": 3780, "repo": "lucene-analysis-common-9.7.0", "code": "package eu\n\n// Analyzer for Basque.\nClass BasqueAnalyzer;\n", "des": "Analyzer for Basque."}
{"index": 3781, "repo": "lucene-analysis-common-9.7.0", "code": "package fa\n\n// Analyzer for Persian.\nClass PersianAnalyzer;\n// CharFilter that replaces instances of Zero-width non-joiner with an ordinary space.\nClass PersianCharFilter;\n// Factory for PersianCharFilter.\nClass PersianCharFilterFactory;\n// A TokenFilter that applies PersianNormalizer to normalize the orthography.\nClass PersianNormalizationFilter;\n// Factory for PersianNormalizationFilter.\nClass PersianNormalizationFilterFactory;\n// Normalizer for Persian.\nClass PersianNormalizer;\n// A TokenFilter that applies PersianStemmer to stem Persian words.\nClass PersianStemFilter;\n// Factory for PersianStemFilter.\nClass PersianStemFilterFactory;\n// Stemmer for Persian.\nClass PersianStemmer;\n", "des": "Analyzer for Persian."}
{"index": 3782, "repo": "lucene-analysis-common-9.7.0", "code": "package fi\n\n// Analyzer for Finnish.\nClass FinnishAnalyzer;\n// A TokenFilter that applies FinnishLightStemmer to stem Finnish words.\nClass FinnishLightStemFilter;\n// Factory for FinnishLightStemFilter.\nClass FinnishLightStemFilterFactory;\n// Light Stemmer for Finnish.\nClass FinnishLightStemmer;\n", "des": "Analyzer for Finnish."}
{"index": 3783, "repo": "lucene-analysis-common-9.7.0", "code": "package fr\n\n// Analyzer for French language.\nClass FrenchAnalyzer;\n// A TokenFilter that applies FrenchLightStemmer to stem French words.\nClass FrenchLightStemFilter;\n// Factory for FrenchLightStemFilter.\nClass FrenchLightStemFilterFactory;\n// Light Stemmer for French.\nClass FrenchLightStemmer;\n// A TokenFilter that applies FrenchMinimalStemmer to stem French words.\nClass FrenchMinimalStemFilter;\n// Factory for FrenchMinimalStemFilter.\nClass FrenchMinimalStemFilterFactory;\n// Light Stemmer for French.\nClass FrenchMinimalStemmer;\n", "des": "Analyzer for French."}
{"index": 3784, "repo": "lucene-analysis-common-9.7.0", "code": "package ga\n\n// Analyzer for Irish.\nClass IrishAnalyzer;\n// Normalises token text to lower case, handling t-prothesis and n-eclipsis (i.e., that 'nAthair' should become 'n-athair')\nClass IrishLowerCaseFilter;\n// Factory for IrishLowerCaseFilter.\nClass IrishLowerCaseFilterFactory;\n", "des": "Analyzer for Irish."}
{"index": 3785, "repo": "lucene-analysis-common-9.7.0", "code": "package gl\n\n// Analyzer for Galician.\nClass GalicianAnalyzer;\n// A TokenFilter that applies GalicianMinimalStemmer to stem Galician words.\nClass GalicianMinimalStemFilter;\n// Factory for GalicianMinimalStemFilter.\nClass GalicianMinimalStemFilterFactory;\n// Minimal Stemmer for Galician\nClass GalicianMinimalStemmer;\n// A TokenFilter that applies GalicianStemmer to stem Galician words.\nClass GalicianStemFilter;\n// Factory for GalicianStemFilter.\nClass GalicianStemFilterFactory;\n// Galician stemmer implementing \"Regras do lematizador para o galego\".\nClass GalicianStemmer;\n", "des": "Analyzer for Galician."}
{"index": 3786, "repo": "lucene-analysis-common-9.7.0", "code": "package hi\n\n// Analyzer for Hindi.\nClass HindiAnalyzer;\n// A TokenFilter that applies HindiNormalizer to normalize the orthography.\nClass HindiNormalizationFilter;\n// Factory for HindiNormalizationFilter.\nClass HindiNormalizationFilterFactory;\n// Normalizer for Hindi.\nClass HindiNormalizer;\n// A TokenFilter that applies HindiStemmer to stem Hindi words.\nClass HindiStemFilter;\n// Factory for HindiStemFilter.\nClass HindiStemFilterFactory;\n// Light Stemmer for Hindi.\nClass HindiStemmer;\n", "des": "Analyzer for Hindi."}
{"index": 3787, "repo": "lucene-analysis-common-9.7.0", "code": "package hu\n\n// Analyzer for Hungarian.\nClass HungarianAnalyzer;\n// A TokenFilter that applies HungarianLightStemmer to stem Hungarian words.\nClass HungarianLightStemFilter;\n// Factory for HungarianLightStemFilter.\nClass HungarianLightStemFilterFactory;\n// Light Stemmer for Hungarian.\nClass HungarianLightStemmer;\n", "des": "Analyzer for Hungarian."}
{"index": 3788, "repo": "lucene-analysis-common-9.7.0", "code": "package hunspell\n\n// An object representing homonym dictionary entries.\nInterface DictEntries;\n// An oracle for quickly checking that a specific part of a word can never be a valid word.\nInterface FragmentChecker;\n// A callback for n-gram ranges in words\nInterface NGramFragmentChecker.NGramConsumer;\n// An object representing the analysis result of a simple (non-compound) word\nClass AffixedWord;\n// An object representing a prefix or a suffix applied to a word stem\nClass AffixedWord.Affix;\n// An object representing *.dic file entry with its word, flags and morphological data.\nClass DictEntry;\n// In-memory structure for the dictionary (.dic) and affix (.aff) data of a hunspell dictionary.\nClass Dictionary;\n// Suggestion to add/edit dictionary entries to generate a given list of words created by WordFormGenerator.compress(java.util.List<java.lang.String>, java.util.Set<java.lang.String>, java.lang.Runnable).\nClass EntrySuggestion;\n// A spell checker based on Hunspell dictionaries.\nClass Hunspell;\n// TokenFilter that uses hunspell affix rules and words to stem tokens.\nClass HunspellStemFilter;\n// TokenFilterFactory that creates instances of HunspellStemFilter.\nClass HunspellStemFilterFactory;\n// A FragmentChecker based on all character n-grams possible in a certain language, keeping them in a relatively memory-efficient, but probabilistic data structure.\nClass NGramFragmentChecker;\n// A generator for misspelled word corrections based on Hunspell flags.\nClass Suggester;\n// A utility class used for generating possible word forms by adding affixes to stems (WordFormGenerator.getAllWordForms(String, String, Runnable)), and suggesting stems and flags to generate the given set of words (WordFormGenerator.compress(List, Set, Runnable)).\nClass WordFormGenerator;\n// A strategy determining what to do when Hunspell API calls take too much time\nEnum TimeoutPolicy;\n", "des": "A Java implementation of Hunspell stemming and spell-checking algorithms (Hunspell), and a stemming TokenFilter (HunspellStemFilter) based on it."}
{"index": 3789, "repo": "lucene-analysis-common-9.7.0", "code": "package hy\n\n// Analyzer for Armenian.\nClass ArmenianAnalyzer;\n", "des": "Analyzer for Armenian."}
{"index": 3790, "repo": "lucene-analysis-common-9.7.0", "code": "package id\n\n// Analyzer for Indonesian (Bahasa)\nClass IndonesianAnalyzer;\n// A TokenFilter that applies IndonesianStemmer to stem Indonesian words.\nClass IndonesianStemFilter;\n// Factory for IndonesianStemFilter.\nClass IndonesianStemFilterFactory;\n// Stemmer for Indonesian.\nClass IndonesianStemmer;\n", "des": "Analyzer for Indonesian."}
{"index": 3791, "repo": "lucene-analysis-common-9.7.0", "code": "package in\n\n// A TokenFilter that applies IndicNormalizer to normalize text in Indian Languages.\nClass IndicNormalizationFilter;\n// Factory for IndicNormalizationFilter.\nClass IndicNormalizationFilterFactory;\n// Normalizes the Unicode representation of text in Indian languages.\nClass IndicNormalizer;\n", "des": "Analyzer for Indian languages."}
{"index": 3792, "repo": "lucene-analysis-common-9.7.0", "code": "package it\n\n// Analyzer for Italian.\nClass ItalianAnalyzer;\n// A TokenFilter that applies ItalianLightStemmer to stem Italian words.\nClass ItalianLightStemFilter;\n// Factory for ItalianLightStemFilter.\nClass ItalianLightStemFilterFactory;\n// Light Stemmer for Italian.\nClass ItalianLightStemmer;\n", "des": "Analyzer for Italian."}
{"index": 3793, "repo": "lucene-analysis-common-9.7.0", "code": "package lt\n\n// Analyzer for Lithuanian.\nClass LithuanianAnalyzer;\n", "des": "Analyzer for Lithuanian."}
{"index": 3794, "repo": "lucene-analysis-common-9.7.0", "code": "package lv\n\n// Analyzer for Latvian.\nClass LatvianAnalyzer;\n// A TokenFilter that applies LatvianStemmer to stem Latvian words.\nClass LatvianStemFilter;\n// Factory for LatvianStemFilter.\nClass LatvianStemFilterFactory;\n// Light stemmer for Latvian.\nClass LatvianStemmer;\n", "des": "Analyzer for Latvian."}
{"index": 3795, "repo": "lucene-analysis-common-9.7.0", "code": "package minhash\n\n// Generate min hash tokens from an incoming stream of tokens.\nClass MinHashFilter;\n// TokenFilterFactory for MinHashFilter.\nClass MinHashFilterFactory;\n", "des": "MinHash filtering (for LSH)."}
{"index": 3796, "repo": "lucene-analysis-common-9.7.0", "code": "package miscellaneous\n\n// Attribute providing access to the term builder and UTF-16 conversion\nInterface ConcatenateGraphFilter.BytesRefBuilderTermAttribute;\n// This class converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \"Basic Latin\" Unicode block) into their ASCII equivalents, if one exists.\nClass ASCIIFoldingFilter;\n// Factory for ASCIIFoldingFilter.\nClass ASCIIFoldingFilterFactory;\n// A filter to apply normal capitalization rules to Tokens.\nClass CapitalizationFilter;\n// Factory for CapitalizationFilter.\nClass CapitalizationFilterFactory;\n// Removes words that are too long or too short from the stream.\nClass CodepointCountFilter;\n// Factory for CodepointCountFilter.\nClass CodepointCountFilterFactory;\n// Concatenates/Joins every incoming token with a separator into one output token for every path through the token stream (which is a graph).\nClass ConcatenateGraphFilter;\n// Implementation of ConcatenateGraphFilter.BytesRefBuilderTermAttribute\nClass ConcatenateGraphFilter.BytesRefBuilderTermAttributeImpl;\n// Factory for ConcatenateGraphFilter.\nClass ConcatenateGraphFilterFactory;\n// A TokenStream that takes an array of input TokenStreams as sources, and concatenates them together.\nClass ConcatenatingTokenStream;\n// Allows skipping TokenFilters based on the current set of attributes.\nClass ConditionalTokenFilter;\n// Abstract parent class for analysis factories that create ConditionalTokenFilter instances\nClass ConditionalTokenFilterFactory;\n// Filters all tokens that cannot be parsed to a date, using the provided DateFormat.\nClass DateRecognizerFilter;\n// Factory for DateRecognizerFilter.\nClass DateRecognizerFilterFactory;\n// Characters before the delimiter are the \"token\", the textual integer after is the term frequency.\nClass DelimitedTermFrequencyTokenFilter;\n// Factory for DelimitedTermFrequencyTokenFilter.\nClass DelimitedTermFrequencyTokenFilterFactory;\n// Allows Tokens with a given combination of flags to be dropped.\nClass DropIfFlaggedFilter;\n// Provides a filter that will drop tokens matching a set of flags.\nClass DropIfFlaggedFilterFactory;\n// An always exhausted token stream.\nClass EmptyTokenStream;\n", "des": "Miscellaneous Tokenstreams."}
{"index": 3797, "repo": "lucene-analysis-common-9.7.0", "code": "package ne\n\n// Analyzer for Nepali.\nClass NepaliAnalyzer;\n", "des": "Analyzer for Nepali."}
{"index": 3798, "repo": "lucene-analysis-common-9.7.0", "code": "package ngram\n\n// Creates new instances of EdgeNGramTokenFilter.\nClass EdgeNGramFilterFactory;\n// Tokenizes the given token into n-grams of given size(s).\nClass EdgeNGramTokenFilter;\n// Tokenizes the input from an edge into n-grams of given size(s).\nClass EdgeNGramTokenizer;\n// Creates new instances of EdgeNGramTokenizer.\nClass EdgeNGramTokenizerFactory;\n// Factory for NGramTokenFilter.\nClass NGramFilterFactory;\n// Tokenizes the input into n-grams of the given size(s).\nClass NGramTokenFilter;\n// Tokenizes the input into n-grams of the given size(s).\nClass NGramTokenizer;\n// Factory for NGramTokenizer.\nClass NGramTokenizerFactory;\n", "des": "Character n-gram tokenizers and filters."}
{"index": 3799, "repo": "lucene-analysis-common-9.7.0", "code": "package nl\n\n// Analyzer for Dutch language.\nClass DutchAnalyzer;\n", "des": "Analyzer for Dutch."}
{"index": 3800, "repo": "lucene-analysis-common-9.7.0", "code": "package no\n\n// Analyzer for Norwegian.\nClass NorwegianAnalyzer;\n// A TokenFilter that applies NorwegianLightStemmer to stem Norwegian words.\nClass NorwegianLightStemFilter;\n// Factory for NorwegianLightStemFilter.\nClass NorwegianLightStemFilterFactory;\n// Light Stemmer for Norwegian.\nClass NorwegianLightStemmer;\n// A TokenFilter that applies NorwegianMinimalStemmer to stem Norwegian words.\nClass NorwegianMinimalStemFilter;\n// Factory for NorwegianMinimalStemFilter.\nClass NorwegianMinimalStemFilterFactory;\n// Minimal Stemmer for Norwegian Bokmål (no-nb) and Nynorsk (no-nn)\nClass NorwegianMinimalStemmer;\n// This filter normalize use of the interchangeable Scandinavian characters æÆäÄöÖøØ and folded variants (ae, oe, aa) by transforming them to åÅæÆøØ.\nClass NorwegianNormalizationFilter;\n// Factory for NorwegianNormalizationFilter.\nClass NorwegianNormalizationFilterFactory;\n", "des": "Analyzer for Norwegian."}
{"index": 3801, "repo": "lucene-analysis-common-9.7.0", "code": "package path\n\n// Tokenizer for path-like hierarchies.\nClass PathHierarchyTokenizer;\n// Factory for PathHierarchyTokenizer.\nClass PathHierarchyTokenizerFactory;\n// Tokenizer for domain-like hierarchies.\nClass ReversePathHierarchyTokenizer;\n", "des": "Analysis components for path-like strings such as filenames."}
{"index": 3802, "repo": "lucene-analysis-common-9.7.0", "code": "package pattern\n\n// Factory for PatternCaptureGroupTokenFilter.\nClass PatternCaptureGroupFilterFactory;\n// CaptureGroup uses Java regexes to emit multiple tokens - one for each capture group in one or more patterns.\nClass PatternCaptureGroupTokenFilter;\n// CharFilter that uses a regular expression for the target of replace string.\nClass PatternReplaceCharFilter;\n// Factory for PatternReplaceCharFilter.\nClass PatternReplaceCharFilterFactory;\n// A TokenFilter which applies a Pattern to each token in the stream, replacing match occurrences with the specified replacement string.\nClass PatternReplaceFilter;\n// Factory for PatternReplaceFilter.\nClass PatternReplaceFilterFactory;\n// This tokenizer uses regex pattern matching to construct distinct tokens for the input stream.\nClass PatternTokenizer;\n// Factory for PatternTokenizer.\nClass PatternTokenizerFactory;\n// Set a type attribute to a parameterized value when tokens are matched by any of a several regex patterns.\nClass PatternTypingFilter;\n// Value holding class for pattern typing rules.\nClass PatternTypingFilter.PatternTypingRule;\n// Provides a filter that will analyze tokens with the analyzer from an arbitrary field type.\nClass PatternTypingFilterFactory;\n// This tokenizer uses a Lucene RegExp or (expert usage) a pre-built determinized Automaton, to locate tokens.\nClass SimplePatternSplitTokenizer;\n// Factory for SimplePatternSplitTokenizer, for producing tokens by splitting according to the provided regexp.\nClass SimplePatternSplitTokenizerFactory;\n// This tokenizer uses a Lucene RegExp or (expert usage) a pre-built determinized Automaton, to locate tokens.\nClass SimplePatternTokenizer;\n// Factory for SimplePatternTokenizer, for matching tokens based on the provided regexp.\nClass SimplePatternTokenizerFactory;\n", "des": "Set of components for pattern-based (regex) analysis."}
{"index": 3803, "repo": "lucene-analysis-common-9.7.0", "code": "package payloads\n\n// Mainly for use with the DelimitedPayloadTokenFilter, converts char buffers to BytesRef.\nInterface PayloadEncoder;\n// Base class for payload encoders.\nClass AbstractEncoder;\n// Characters before the delimiter are the \"token\", those after are the payload.\nClass DelimitedPayloadTokenFilter;\n// Factory for DelimitedPayloadTokenFilter.\nClass DelimitedPayloadTokenFilterFactory;\n// Encode a character array Float as a BytesRef.\nClass FloatEncoder;\n// Does nothing other than convert the char array to a byte array using the specified encoding.\nClass IdentityEncoder;\n// Encode a character array Integer as a BytesRef.\nClass IntegerEncoder;\n// Assigns a payload to a token based on the TypeAttribute\nClass NumericPayloadTokenFilter;\n// Factory for NumericPayloadTokenFilter.\nClass NumericPayloadTokenFilterFactory;\n// Utility methods for encoding payloads.\nClass PayloadHelper;\n// Adds the OffsetAttribute.startOffset() and OffsetAttribute.endOffset() First 4 bytes are the start\nClass TokenOffsetPayloadTokenFilter;\n// Factory for TokenOffsetPayloadTokenFilter.\nClass TokenOffsetPayloadTokenFilterFactory;\n// Makes the TypeAttribute a payload.\nClass TypeAsPayloadTokenFilter;\n// Factory for TypeAsPayloadTokenFilter.\nClass TypeAsPayloadTokenFilterFactory;\n", "des": "Provides various convenience classes for creating payloads on Tokens."}
{"index": 3804, "repo": "lucene-analysis-common-9.7.0", "code": "package pt\n\n// Analyzer for Portuguese.\nClass PortugueseAnalyzer;\n// A TokenFilter that applies PortugueseLightStemmer to stem Portuguese words.\nClass PortugueseLightStemFilter;\n// Factory for PortugueseLightStemFilter.\nClass PortugueseLightStemFilterFactory;\n// Light Stemmer for Portuguese\nClass PortugueseLightStemmer;\n// A TokenFilter that applies PortugueseMinimalStemmer to stem Portuguese words.\nClass PortugueseMinimalStemFilter;\n// Factory for PortugueseMinimalStemFilter.\nClass PortugueseMinimalStemFilterFactory;\n// Minimal Stemmer for Portuguese\nClass PortugueseMinimalStemmer;\n// A TokenFilter that applies PortugueseStemmer to stem Portuguese words.\nClass PortugueseStemFilter;\n// Factory for PortugueseStemFilter.\nClass PortugueseStemFilterFactory;\n// Portuguese stemmer implementing the RSLP (Removedor de Sufixos da Lingua Portuguesa) algorithm.\nClass PortugueseStemmer;\n// Base class for stemmers that use a set of RSLP-like stemming steps.\nClass RSLPStemmerBase;\n// A basic rule, with no exceptions.\nClass RSLPStemmerBase.Rule;\n// A rule with a set of whole-word exceptions.\nClass RSLPStemmerBase.RuleWithSetExceptions;\n// A rule with a set of exceptional suffixes.\nClass RSLPStemmerBase.RuleWithSuffixExceptions;\n// A step containing a list of rules.\nClass RSLPStemmerBase.Step;\n", "des": "Analyzer for Portuguese."}
{"index": 3805, "repo": "lucene-analysis-common-9.7.0", "code": "package query\n\n// An Analyzer used primarily at query time to wrap another analyzer and provide a layer of protection which prevents very common words from being passed into queries.\nClass QueryAutoStopWordAnalyzer;\n", "des": "Automatically filter high-frequency stopwords."}
{"index": 3806, "repo": "lucene-analysis-common-9.7.0", "code": "package reverse\n\n// Reverse token string, for example \"country\" => \"yrtnuoc\".\nClass ReverseStringFilter;\n// Factory for ReverseStringFilter.\nClass ReverseStringFilterFactory;\n", "des": "Filter to reverse token text."}
{"index": 3807, "repo": "lucene-analysis-common-9.7.0", "code": "package ro\n\n// Analyzer for Romanian.\nClass RomanianAnalyzer;\n", "des": "Analyzer for Romanian."}
{"index": 3808, "repo": "lucene-analysis-common-9.7.0", "code": "package ru\n\n// Analyzer for Russian language.\nClass RussianAnalyzer;\n// A TokenFilter that applies RussianLightStemmer to stem Russian words.\nClass RussianLightStemFilter;\n// Factory for RussianLightStemFilter.\nClass RussianLightStemFilterFactory;\n// Light Stemmer for Russian.\nClass RussianLightStemmer;\n", "des": "Analyzer for Russian."}
{"index": 3809, "repo": "lucene-analysis-common-9.7.0", "code": "package shingle\n\n// A FixedShingleFilter constructs shingles (token n-grams) from a token stream.\nClass FixedShingleFilter;\n// Factory for FixedShingleFilter\nClass FixedShingleFilterFactory;\n// A ShingleAnalyzerWrapper wraps a ShingleFilter around another Analyzer.\nClass ShingleAnalyzerWrapper;\n// A ShingleFilter constructs shingles (token n-grams) from a token stream.\nClass ShingleFilter;\n// Factory for ShingleFilter.\nClass ShingleFilterFactory;\n", "des": "Word n-gram filters."}
{"index": 3810, "repo": "lucene-analysis-common-9.7.0", "code": "package sinks\n\n// This TokenFilter provides the ability to set aside attribute states that have already been analyzed.\nClass TeeSinkTokenFilter;\n// TokenStream output from a tee.\nClass TeeSinkTokenFilter.SinkTokenStream;\n", "des": "TeeSinkTokenFilter."}
{"index": 3811, "repo": "lucene-analysis-common-9.7.0", "code": "package snowball\n\n// A filter that stems words using a Snowball-generated stemmer.\nClass SnowballFilter;\n// Factory for SnowballFilter, with configurable language\nClass SnowballPorterFilterFactory;\n", "des": "TokenFilter and Analyzer implementations that use a modified version of Snowball stemmers."}
{"index": 3812, "repo": "lucene-analysis-common-9.7.0", "code": "package sr\n\n// Analyzer for Serbian.\nClass SerbianAnalyzer;\n// Normalizes Serbian Cyrillic and Latin characters to \"bald\" Latin.\nClass SerbianNormalizationFilter;\n// Factory for SerbianNormalizationFilter.\nClass SerbianNormalizationFilterFactory;\n// Normalizes Serbian Cyrillic to Latin.\nClass SerbianNormalizationRegularFilter;\n", "des": "Analyzer for Serbian."}
{"index": 3813, "repo": "lucene-analysis-common-9.7.0", "code": "package sv\n\n// Analyzer for Swedish.\nClass SwedishAnalyzer;\n// A TokenFilter that applies SwedishLightStemmer to stem Swedish words.\nClass SwedishLightStemFilter;\n// Factory for SwedishLightStemFilter.\nClass SwedishLightStemFilterFactory;\n// Light Stemmer for Swedish.\nClass SwedishLightStemmer;\n// A TokenFilter that applies SwedishMinimalStemmer to stem Swedish words.\nClass SwedishMinimalStemFilter;\n// Factory for SwedishMinimalStemFilter.\nClass SwedishMinimalStemFilterFactory;\n// Minimal Stemmer for Swedish.\nClass SwedishMinimalStemmer;\n", "des": "Analyzer for Swedish."}
{"index": 3814, "repo": "lucene-analysis-common-9.7.0", "code": "package synonym\n\n// Analysis components for Synonyms using Word2Vec model.\npackage synonym.word2vec\n// Parser for the Solr synonyms format.\nClass SolrSynonymParser;\n// \nClass SynonymFilter;\n// \nClass SynonymFilterFactory;\n// Applies single- or multi-token synonyms from a SynonymMap to an incoming TokenStream, producing a fully correct graph output.\nClass SynonymGraphFilter;\n// Factory for SynonymGraphFilter.\nClass SynonymGraphFilterFactory;\n// A map of synonyms, keys and values are phrases.\nClass SynonymMap;\n// Builds an FSTSynonymMap.\nClass SynonymMap.Builder;\n// Abstraction for parsing synonym files.\nClass SynonymMap.Parser;\n// Parser for wordnet prolog format\nClass WordnetSynonymParser;\n", "des": "Analysis components for Synonyms."}
{"index": 3815, "repo": "lucene-analysis-common-9.7.0", "code": "package word2vec\n\n// Dl4jModelReader reads the file generated by the library Deeplearning4j and provide a Word2VecModel with normalized vectors\nClass Dl4jModelReader;\n// Wraps a term and boost\nClass TermAndBoost;\n// Word2VecModel is a class representing the parsed Word2Vec model containing the vectors for each word in dictionary\nClass Word2VecModel;\n// Applies single-token synonyms from a Word2Vec trained network to an incoming TokenStream.\nClass Word2VecSynonymFilter;\n// Factory for Word2VecSynonymFilter.\nClass Word2VecSynonymFilterFactory;\n// The Word2VecSynonymProvider generates the list of sysnonyms of a term.\nClass Word2VecSynonymProvider;\n// Supply Word2Vec Word2VecSynonymProvider cache avoiding that multiple instances of Word2VecSynonymFilterFactory will instantiate multiple instances of the same SynonymProvider.\nClass Word2VecSynonymProviderFactory;\n", "des": "Analysis components for Synonyms using Word2Vec model."}
{"index": 3816, "repo": "lucene-analysis-common-9.7.0", "code": "package ta\n\n// Analyzer for Tamil.\nClass TamilAnalyzer;\n", "des": "Analyzer for Tamil."}
{"index": 3817, "repo": "lucene-analysis-common-9.7.0", "code": "package te\n\n// Analyzer for Telugu.\nClass TeluguAnalyzer;\n// A TokenFilter that applies TeluguNormalizer to normalize the orthography.\nClass TeluguNormalizationFilter;\n// Factory for TeluguNormalizationFilter.\nClass TeluguNormalizationFilterFactory;\n// Normalizer for Telugu.\nClass TeluguNormalizer;\n// A TokenFilter that applies TeluguStemmer to stem Telugu words.\nClass TeluguStemFilter;\n// Factory for TeluguStemFilter.\nClass TeluguStemFilterFactory;\n// Stemmer for Telugu.\nClass TeluguStemmer;\n", "des": "Analyzer for Telugu Language."}
{"index": 3818, "repo": "lucene-analysis-common-9.7.0", "code": "package th\n\n// Analyzer for Thai language.\nClass ThaiAnalyzer;\n// Tokenizer that use BreakIterator to tokenize Thai text.\nClass ThaiTokenizer;\n// Factory for ThaiTokenizer.\nClass ThaiTokenizerFactory;\n", "des": "Analyzer for Thai."}
{"index": 3819, "repo": "lucene-analysis-common-9.7.0", "code": "package tr\n\n// Strips all characters after an apostrophe (including the apostrophe itself).\nClass ApostropheFilter;\n// Factory for ApostropheFilter.\nClass ApostropheFilterFactory;\n// Analyzer for Turkish.\nClass TurkishAnalyzer;\n// Normalizes Turkish token text to lower case.\nClass TurkishLowerCaseFilter;\n// Factory for TurkishLowerCaseFilter.\nClass TurkishLowerCaseFilterFactory;\n", "des": "Analyzer for Turkish."}
{"index": 3820, "repo": "lucene-analysis-common-9.7.0", "code": "package util\n\n// A CharacterIterator used internally for use with BreakIterator\nClass CharArrayIterator;\n// An abstract base class for simple, character-oriented tokenizers.\nClass CharTokenizer;\n// Removes elisions from a TokenStream.\nClass ElisionFilter;\n// Factory for ElisionFilter.\nClass ElisionFilterFactory;\n// Simple ResourceLoader that opens resource files from the local file system, optionally resolving against a base directory.\nClass FilesystemResourceLoader;\n// A StringBuilder that allows one to access the array.\nClass OpenStringBuilder;\n// Acts like a forever growing char[] as you read characters into it from the provided reader, but internally it uses a circular buffer to only hold the characters that haven't been freed yet.\nClass RollingCharBuffer;\n// Breaks text into sentences with a BreakIterator and allows subclasses to decompose these sentences into words.\nClass SegmentingTokenizerBase;\n// Some commonly-used stemming functions\nClass StemmerUtil;\n// This file contains unicode properties used by various CharTokenizers.\nClass UnicodeProps;\n", "des": "Utility functions for text analysis."}
{"index": 3821, "repo": "lucene-analysis-common-9.7.0", "code": "package wikipedia\n\n// Extension of StandardTokenizer that is aware of Wikipedia syntax.\nClass WikipediaTokenizer;\n// Factory for WikipediaTokenizer.\nClass WikipediaTokenizerFactory;\n", "des": "Tokenizer that is aware of Wikipedia syntax."}
{"index": 3822, "repo": "lucene-analysis-common-9.7.0", "code": "package collation\n\n// Custom AttributeImpl for indexing collation keys as index terms.\npackage collation.tokenattributes\n// Converts each token into its CollationKey, and then encodes the bytes as an index term.\nClass CollationAttributeFactory;\n// Indexes collation keys as a single-valued SortedDocValuesField.\nClass CollationDocValuesField;\n// Configures KeywordTokenizer with CollationAttributeFactory.\nClass CollationKeyAnalyzer;\n", "des": "Unicode collation support."}
{"index": 3823, "repo": "lucene-analysis-common-9.7.0", "code": "package tokenattributes\n\n// Extension of CharTermAttributeImpl that encodes the term text as a binary Unicode collation key instead of as UTF-8 bytes.\nClass CollatedTermAttributeImpl;\n", "des": "Custom AttributeImpl for indexing collation keys as index terms."}
{"index": 3824, "repo": "lucene-analysis-common-9.7.0", "code": "package snowball\n\n// Autogenerated snowball stemmer implementations.\npackage snowball.ext\n// Internal class used by Snowball stemmers\nClass Among;\n// Base class for a snowball stemmer\nClass SnowballProgram;\n// Parent class of all snowball stemmers, which must implement stem\nClass SnowballStemmer;\n", "des": "Snowball stemmer API"}
{"index": 3825, "repo": "lucene-analysis-common-9.7.0", "code": "package ext\n\n// This class implements the stemming algorithm defined by a snowball script.\nClass ArabicStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass ArmenianStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass BasqueStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass CatalanStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass DanishStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass DutchStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass EnglishStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass EstonianStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass FinnishStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass FrenchStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass German2Stemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass GermanStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass GreekStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass HindiStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass HungarianStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass IndonesianStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass IrishStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass ItalianStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass KpStemmer;\n// This class implements the stemming algorithm defined by a snowball script.\nClass LithuanianStemmer;\n", "des": "Autogenerated snowball stemmer implementations."}
{"index": 3826, "repo": "lucene-highlighter-9.7.0", "code": "package highlight\n\n// Encodes original text.\nInterface Encoder;\n// Processes terms found in the original text, typically by applying some form of mark-up to highlight terms in HTML search results pages.\nInterface Formatter;\n// Implements the policy for breaking text into multiple fragments for consideration by the Highlighter class.\nInterface Fragmenter;\n// A Scorer is responsible for scoring a stream of tokens.\nInterface Scorer;\n// Simple Encoder implementation that does not modify the output\nClass DefaultEncoder;\n// Formats text with different color intensity depending on the score of the term.\nClass GradientFormatter;\n// Marks up highlighted terms found in the best sections of text, using configurable Fragmenter, Scorer, Formatter, Encoder and tokenizers.\nClass Highlighter;\n// Fragmenter implementation which does not fragment the text.\nClass NullFragmenter;\n// This TokenFilter limits the number of tokens while indexing by adding up the current offset.\nClass OffsetLimitTokenFilter;\n// Utility class to record Positions Spans\nClass PositionSpan;\n// Scorer implementation which scores text fragments by the number of unique query terms found.\nClass QueryScorer;\n// Utility class used to extract the terms used in a query, plus any weights.\nClass QueryTermExtractor;\n// Scorer implementation which scores text fragments by the number of unique query terms found.\nClass QueryTermScorer;\n// Fragmenter implementation which breaks text up into same-size fragments with no concerns over spotting sentence boundaries.\nClass SimpleFragmenter;\n// Simple Encoder implementation to escape text for HTML output\nClass SimpleHTMLEncoder;\n// Simple Formatter implementation to highlight terms with a pre and post tag.\nClass SimpleHTMLFormatter;\n// Fragmenter implementation which breaks text up into same-size fragments but does not split up Spans.\nClass SimpleSpanFragmenter;\n// Formats text with different color intensity depending on the score of the term using the span tag.\nClass SpanGradientFormatter;\n// Wraps a Terms with a LeafReader, typically from term vectors.\nClass TermVectorLeafReader;\n// Low-level class used to record information about a section of a document with a score.\nClass TextFragment;\n// One, or several overlapping tokens, along with the score(s) and the scope of the original text.\nClass TokenGroup;\n", "des": "Highlighting search terms."}
{"index": 3827, "repo": "lucene-highlighter-9.7.0", "code": "package matchhighlight\n\n// Actual per-field highlighter.\nInterface MatchHighlighter.FieldValueHighlighter;\n// An abstraction that provides document values for a given field.\nInterface MatchRegionRetriever.FieldValueProvider;\n// A callback for accepting a single document (and its associated leaf reader, leaf document ID) and its match offset ranges, as indicated by the Matches interface retrieved for the query.\nInterface MatchRegionRetriever.MatchOffsetsConsumer;\n// Determines how match offset regions are computed from MatchesIterator.\nInterface OffsetsRetrievalStrategy;\n// A per-field supplier of OffsetsRetrievalStrategy.\nInterface OffsetsRetrievalStrategySupplier;\n// Adjusts the range of one or more passages over a given value.\nInterface PassageAdjuster;\n// A PassageAdjuster that adjusts the Passage range to word boundaries hinted by the given BreakIterator.\nClass BreakIteratorShrinkingAdjuster;\n// A factory of MatchHighlighter.FieldValueHighlighter classes that cover typical use cases (verbatim values, highlights, abbreviations).\nClass FieldValueHighlighters;\n// An example highlighter that combines several lower-level highlighting utilities in this package into a fully featured, ready-to-use component.\nClass MatchHighlighter;\n// Single document's highlights.\nClass MatchHighlighter.DocHighlights;\n// An OffsetRange of a match, together with the source query that caused it.\nClass MatchHighlighter.QueryOffsetRange;\n// Utility class to compute a list of \"match regions\" for a given query, searcher and document(s) using Matches API.\nClass MatchRegionRetriever;\n// A non-empty range of offset positions.\nClass OffsetRange;\n// This strategy retrieves offsets directly from MatchesIterator, if they are available, otherwise it falls back to using OffsetsFromPositions.\nClass OffsetsFromMatchIterator;\n// This strategy applies to fields with stored positions but no offsets.\nClass OffsetsFromPositions;\n// This strategy works for fields where we know the match occurred but there are no known positions or offsets.\nClass OffsetsFromTokens;\n// This strategy works for fields where we know the match occurred but there are no known positions or offsets.\nClass OffsetsFromValues;\n", "des": "This package contains several components useful to build a highlighter on top of the Matches API."}
{"index": 3828, "repo": "lucene-highlighter-9.7.0", "code": "package uhighlight\n\n// Matches a character array\nInterface CharArrayMatcher;\n// Associates a label with a CharArrayMatcher to distinguish different sources for terms in highlighting\nInterface LabelledCharArrayMatcher;\n// Provides a base class for analysis based offset strategies to extend from.\nClass AnalysisOffsetStrategy;\n// A BreakIterator that breaks the text whenever a certain separator, provided as a constructor argument, is found.\nClass CustomSeparatorBreakIterator;\n// Creates a formatted snippet from the top passages.\nClass DefaultPassageFormatter;\n// Internal highlighter abstraction that operates on a per field basis.\nClass FieldHighlighter;\n// Ultimately returns an OffsetsEnum yielding potentially highlightable words in the text.\nClass FieldOffsetStrategy;\n// Wraps another BreakIterator to skip past breaks that would result in passages that are too short.\nClass LengthGoalBreakIterator;\n// Uses an Analyzer on content to get offsets and then populates a MemoryIndex.\nClass MemoryIndexOffsetStrategy;\n// Never returns offsets.\nClass NoOpOffsetStrategy;\n// An enumeration/iterator of a term and its offsets for use by FieldHighlighter.\nClass OffsetsEnum;\n// A view over several OffsetsEnum instances, merging them in-place\nClass OffsetsEnum.MultiOffsetsEnum;\n// Based on a MatchesIterator; does not look at submatches.\nClass OffsetsEnum.OfMatchesIterator;\n// Based on a MatchesIterator with submatches.\nClass OffsetsEnum.OfMatchesIteratorWithSubs;\n// Based on a PostingsEnum -- the typical/standard OE impl.\nClass OffsetsEnum.OfPostings;\n// Overlays a 2nd LeafReader for the terms of one field, otherwise the primary reader is consulted.\nClass OverlaySingleDocTermsLeafReader;\n// Represents a passage (typically a sentence of the document).\nClass Passage;\n// Creates a formatted snippet from the top passages.\nClass PassageFormatter;\n// Ranks passages found by UnifiedHighlighter.\nClass PassageScorer;\n// Helps the FieldOffsetStrategy with position sensitive queries (e.g.\nClass PhraseHelper;\n// Uses offsets in postings -- IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS.\nClass PostingsOffsetStrategy;\n", "des": "The UnifiedHighlighter -- a flexible highlighter that can get offsets from postings, term vectors, or analysis."}
{"index": 3829, "repo": "lucene-highlighter-9.7.0", "code": "package vectorhighlight\n\n// Finds fragment boundaries: pluggable into BaseFragmentsBuilder\nInterface BoundaryScanner;\n// FragListBuilder is an interface for FieldFragList builder classes.\nInterface FragListBuilder;\n// FragmentsBuilder is an interface for fragments (snippets) builder classes.\nInterface FragmentsBuilder;\n// A abstract implementation of FragListBuilder.\nClass BaseFragListBuilder;\n// Base FragmentsBuilder implementation that supports colored pre/post tags and multivalued fields.\nClass BaseFragmentsBuilder;\n// A BoundaryScanner implementation that uses BreakIterator to find boundaries in the text.\nClass BreakIteratorBoundaryScanner;\n// Another highlighter implementation.\nClass FastVectorHighlighter;\n// FieldFragList has a list of \"frag info\" that is used by FragmentsBuilder class to create fragments (snippets).\nClass FieldFragList;\n// List of term offsets + weight for a frag info\nClass FieldFragList.WeightedFragInfo;\n// Represents the list of term offsets for some text\nClass FieldFragList.WeightedFragInfo.SubInfo;\n// FieldPhraseList has a list of WeightedPhraseInfo that is used by FragListBuilder to create a FieldFragList object.\nClass FieldPhraseList;\n// Represents the list of term offsets and boost for some text\nClass FieldPhraseList.WeightedPhraseInfo;\n// Term offsets (start + end)\nClass FieldPhraseList.WeightedPhraseInfo.Toffs;\n// FieldQuery breaks down query object into terms/phrases and keeps them in a QueryPhraseMap structure.\nClass FieldQuery;\n// Internal structure of a query for highlighting: represents a nested query structure\nClass FieldQuery.QueryPhraseMap;\n// FieldTermStack is a stack that keeps query terms in the specified field of the document to be highlighted.\nClass FieldTermStack;\n// Single term with its position/offsets in the document and IDF weight.\nClass FieldTermStack.TermInfo;\n// An implementation of FragmentsBuilder that outputs score-order fragments.\nClass ScoreOrderFragmentsBuilder;\n// Comparator for FieldFragList.WeightedFragInfo by boost, breaking ties by offset.\nClass ScoreOrderFragmentsBuilder.ScoreComparator;\n", "des": "Another highlighter implementation based on term vectors."}
{"index": 3830, "repo": "lucene-core-9.7.0", "code": "package analysis\n\n// Fast, general-purpose grammar-based tokenizer StandardTokenizer implements the Word Break rules from the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29.\npackage analysis.standard\n// General-purpose attributes for text analysis.\npackage analysis.tokenattributes\n// Abstract parent class for analysis factories TokenizerFactory, TokenFilterFactory and CharFilterFactory.\nClass AbstractAnalysisFactory;\n// Helper class for loading named SPIs from classpath (e.g.\nClass AnalysisSPILoader<S extends AbstractAnalysisFactory>;\n// An Analyzer builds TokenStreams, which analyze text.\nClass Analyzer;\n// Strategy defining how TokenStreamComponents are reused per call to Analyzer.tokenStream(String, java.io.Reader).\nClass Analyzer.ReuseStrategy;\n// This class encapsulates the outer components of a token stream.\nClass Analyzer.TokenStreamComponents;\n// Extension to Analyzer suitable for Analyzers which wrap other Analyzers.\nClass AnalyzerWrapper;\n// Converts an Automaton into a TokenStream.\nClass AutomatonToTokenStream;\n// This class can be used if the token attributes of a TokenStream are intended to be consumed more than once.\nClass CachingTokenFilter;\n// Utility class to write tokenizers or token filters.\nClass CharacterUtils;\n// A simple IO buffer to use with CharacterUtils.fill(CharacterBuffer, Reader).\nClass CharacterUtils.CharacterBuffer;\n// A simple class that stores key Strings as char[]'s in a hash table.\nClass CharArrayMap<V>;\n// A simple class that stores Strings as char[]'s in a hash table.\nClass CharArraySet;\n// Subclasses of CharFilter can be chained to filter a Reader They can be used as Reader with additional offset correction.\nClass CharFilter;\n// Abstract parent class for analysis factories that create CharFilter instances.\nClass CharFilterFactory;\n// An analyzer wrapper, that doesn't allow to wrap components or readers.\nClass DelegatingAnalyzerWrapper;\n// Abstract base class for TokenFilters that may remove tokens.\nClass FilteringTokenFilter;\n// An abstract TokenFilter that exposes its input stream as a graph\nClass GraphTokenFilter;\n// Normalizes token text to lower case.\nClass LowerCaseFilter;\n// Removes stop words from a token stream.\nClass StopFilter;\n", "des": "Text analysis."}
{"index": 3831, "repo": "lucene-core-9.7.0", "code": "package standard\n\n// Filters StandardTokenizer with LowerCaseFilter and StopFilter, using a configurable list of stop words.\nClass StandardAnalyzer;\n// A grammar-based tokenizer constructed with JFlex.\nClass StandardTokenizer;\n// Factory for StandardTokenizer.\nClass StandardTokenizerFactory;\n// This class implements Word Break rules from the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29.\nClass StandardTokenizerImpl;\n", "des": "Fast, general-purpose grammar-based tokenizer StandardTokenizer implements the Word Break rules from the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29."}
{"index": 3832, "repo": "lucene-core-9.7.0", "code": "package tokenattributes\n\n// This attribute can be used if you have the raw term bytes to be indexed.\nInterface BytesTermAttribute;\n// The term text of a Token.\nInterface CharTermAttribute;\n// This attribute can be used to pass different flags down the Tokenizer chain, e.g.\nInterface FlagsAttribute;\n// This attribute can be used to mark a token as a keyword.\nInterface KeywordAttribute;\n// The start and end character offset of a Token.\nInterface OffsetAttribute;\n// The payload of a Token.\nInterface PayloadAttribute;\n// Determines the position of this token relative to the previous Token in a TokenStream, used in phrase searching.\nInterface PositionIncrementAttribute;\n// Determines how many positions this token spans.\nInterface PositionLengthAttribute;\n// This attribute tracks what sentence a given token belongs to as well as potentially other sentence specific attributes.\nInterface SentenceAttribute;\n// Sets the custom term frequency of a term within one document.\nInterface TermFrequencyAttribute;\n// This attribute is requested by TermsHashPerField to index the contents.\nInterface TermToBytesRefAttribute;\n// A Token's lexical type.\nInterface TypeAttribute;\n// Implementation class for BytesTermAttribute.\nClass BytesTermAttributeImpl;\n// Default implementation of CharTermAttribute.\nClass CharTermAttributeImpl;\n// Default implementation of FlagsAttribute.\nClass FlagsAttributeImpl;\n// Default implementation of KeywordAttribute.\nClass KeywordAttributeImpl;\n// Default implementation of OffsetAttribute.\nClass OffsetAttributeImpl;\n// Default implementation of the common attributes used by Lucene: CharTermAttribute TypeAttribute PositionIncrementAttribute PositionLengthAttribute OffsetAttribute TermFrequencyAttribute\nClass PackedTokenAttributeImpl;\n// Default implementation of PayloadAttribute.\nClass PayloadAttributeImpl;\n// Default implementation of PositionIncrementAttribute.\nClass PositionIncrementAttributeImpl;\n// Default implementation of PositionLengthAttribute.\nClass PositionLengthAttributeImpl;\n// Default implementation of SentenceAttribute.\nClass SentenceAttributeImpl;\n// Default implementation of TermFrequencyAttribute.\nClass TermFrequencyAttributeImpl;\n// Default implementation of TypeAttribute.\nClass TypeAttributeImpl;\n", "des": "General-purpose attributes for text analysis."}
{"index": 3833, "repo": "lucene-core-9.7.0", "code": "package codecs\n\n// Compressing helper classes.\npackage codecs.compressing\n// Lucene 9.0 file format.\npackage codecs.lucene90\n// Lucene 9.4 file format.\npackage codecs.lucene94\n// Lucene 9.5 file format.\npackage codecs.lucene95\n// Postings format that can delegate to different formats per-field.\npackage codecs.perfield\n// Holds all state required for PostingsReaderBase to produce a PostingsEnum without re-seeking the terms dict.\nClass BlockTermState;\n// Buffers up pending vector value(s) per doc, then flushes when segment flushes.\nClass BufferingKnnVectorsWriter;\n// Encodes/decodes an inverted index segment.\nClass Codec;\n// Utility class for reading and writing versioned headers.\nClass CodecUtil;\n// This class accumulates the (freq, norm) pairs that may produce competitive scores.\nClass CompetitiveImpactAccumulator;\n// A read-only Directory that consists of a view over a compound file.\nClass CompoundDirectory;\n// Encodes/decodes compound files\nClass CompoundFormat;\n// Abstract API that consumes numeric, binary and sorted docvalues.\nClass DocValuesConsumer;\n// Encodes/decodes per-document values.\nClass DocValuesFormat;\n// Abstract API that produces numeric, binary, sorted, sortedset, and sortednumeric docvalues.\nClass DocValuesProducer;\n// Encodes/decodes FieldInfos\nClass FieldInfosFormat;\n// Abstract API that consumes terms, doc, freq, prox, offset and payloads postings.\nClass FieldsConsumer;\n// Abstract API that produces terms, doc, freq, prox, offset and payloads postings.\nClass FieldsProducer;\n// A codec that forwards all its method calls to another codec.\nClass FilterCodec;\n// Vectors' writer for a field\nClass KnnFieldVectorsWriter<T>;\n// Encodes/decodes per-document vector and any associated indexing structures required to support nearest-neighbor search\nClass KnnVectorsFormat;\n// Reads vectors from an index.\nClass KnnVectorsReader;\n// Writes vectors to an index.\nClass KnnVectorsWriter;\n// View over multiple vector values supporting iterator-style access via DocIdMerger.\nClass KnnVectorsWriter.MergedVectorValues;\n", "des": "Codecs API: API for customization of the encoding and structure of the index."}
{"index": 3834, "repo": "lucene-core-9.7.0", "code": "package compressing\n\n// A compression mode.\nClass CompressionMode;\n// A data compressor.\nClass Compressor;\n// A decompressor.\nClass Decompressor;\n// Computes which segments have identical field name to number mappings, which allows stored fields and term vectors in this codec to be bulk-merged.\nClass MatchingReaders;\n", "des": "Compressing helper classes."}
{"index": 3835, "repo": "lucene-core-9.7.0", "code": "package lucene90\n\n// BlockTree terms dictionary.\npackage lucene90.blocktree\n// Lucene 9.0 compressing format.\npackage lucene90.compressing\n// A compression mode that trades speed for compression ratio.\nClass DeflateWithPresetDictCompressionMode;\n// Disk-based implementation of a DocIdSetIterator which can return the index of the current document, i.e.\nClass IndexedDISI;\n// Lucene 9.0 compound file format\nClass Lucene90CompoundFormat;\n// Lucene 9.0 DocValues format.\nClass Lucene90DocValuesFormat;\n// Lucene 9.0 live docs format\nClass Lucene90LiveDocsFormat;\n// Lucene 9.0 Score normalization format.\nClass Lucene90NormsFormat;\n// Lucene 9.0 point format, which encodes dimensional values in a block KD-tree structure for fast 1D range and N dimensional shape intersection filtering.\nClass Lucene90PointsFormat;\n// Reads point values previously written with Lucene90PointsWriter\nClass Lucene90PointsReader;\n// Writes dimensional values\nClass Lucene90PointsWriter;\n// Lucene 5.0 postings format, which encodes postings in packed integer blocks for fast decode.\nClass Lucene90PostingsFormat;\n// Holds all state required for Lucene90PostingsReader to produce a PostingsEnum without re-seeking the terms dict.\nClass Lucene90PostingsFormat.IntBlockTermState;\n// Concrete class that reads docId(maybe frq,pos,offset,payloads) list with postings format.\nClass Lucene90PostingsReader;\n// Concrete class that writes docId(maybe frq,pos,offset,payloads) list with postings format.\nClass Lucene90PostingsWriter;\n// Lucene 9.0 Segment info format.\nClass Lucene90SegmentInfoFormat;\n// Lucene 9.0 stored fields format.\nClass Lucene90StoredFieldsFormat;\n// Lucene 9.0 term vectors format.\nClass Lucene90TermVectorsFormat;\n// A compression mode that compromises on the compression ratio to provide fast compression and decompression.\nClass LZ4WithPresetDictCompressionMode;\n// Configuration option for stored fields.\nEnum Lucene90StoredFieldsFormat.Mode;\n", "des": "Lucene 9.0 file format."}
{"index": 3836, "repo": "lucene-core-9.7.0", "code": "package blocktree\n\n// BlockTree's implementation of Terms.\nClass FieldReader;\n// A block-based terms index and dictionary that assigns terms to variable length blocks according to how they share prefixes.\nClass Lucene90BlockTreeTermsReader;\n// Block-based terms index and dictionary writer.\nClass Lucene90BlockTreeTermsWriter;\n// BlockTree statistics for a single field returned by FieldReader.getStats().\nClass Stats;\n", "des": "BlockTree terms dictionary."}
{"index": 3837, "repo": "lucene-core-9.7.0", "code": "package compressing\n\n// Efficient index format for block-based Codecs.\nClass FieldsIndexWriter;\n// A StoredFieldsFormat that compresses documents in chunks in order to improve the compression ratio.\nClass Lucene90CompressingStoredFieldsFormat;\n// StoredFieldsReader impl for Lucene90CompressingStoredFieldsFormat.\nClass Lucene90CompressingStoredFieldsReader;\n// StoredFieldsWriter impl for Lucene90CompressingStoredFieldsFormat.\nClass Lucene90CompressingStoredFieldsWriter;\n// A TermVectorsFormat that compresses chunks of documents together in order to improve the compression ratio.\nClass Lucene90CompressingTermVectorsFormat;\n// TermVectorsReader for Lucene90CompressingTermVectorsFormat.\nClass Lucene90CompressingTermVectorsReader;\n// TermVectorsWriter for Lucene90CompressingTermVectorsFormat.\nClass Lucene90CompressingTermVectorsWriter;\n", "des": "Lucene 9.0 compressing format."}
{"index": 3838, "repo": "lucene-core-9.7.0", "code": "package lucene94\n\n// Lucene 9.0 Field Infos format.\nClass Lucene94FieldInfosFormat;\n", "des": "Lucene 9.4 file format."}
{"index": 3839, "repo": "lucene-core-9.7.0", "code": "package lucene95\n\n// Implements the Lucene 9.5 index format\nClass Lucene95Codec;\n// Lucene 9.5 vector format, which encodes numeric vector values and an optional associated graph connecting the documents having values.\nClass Lucene95HnswVectorsFormat;\n// Reads vectors from the index segments along with index data structures supporting KNN search.\nClass Lucene95HnswVectorsReader;\n// Writes vector values and knn graphs to index segments.\nClass Lucene95HnswVectorsWriter;\n// Configuration option for the codec.\nEnum Lucene95Codec.Mode;\n", "des": "Lucene 9.5 file format."}
{"index": 3840, "repo": "lucene-core-9.7.0", "code": "package perfield\n\n// Enables per field docvalues support.\nClass PerFieldDocValuesFormat;\n// Enables per field numeric vector support.\nClass PerFieldKnnVectorsFormat;\n// VectorReader that can wrap multiple delegate readers, selected by field.\nClass PerFieldKnnVectorsFormat.FieldsReader;\n// Enables per field postings support.\nClass PerFieldPostingsFormat;\n", "des": "Postings format that can delegate to different formats per-field."}
{"index": 3841, "repo": "lucene-core-9.7.0", "code": "package document\n\n// Field that stores a per-document BytesRef value.\nClass BinaryDocValuesField;\n// An indexed binary field for fast range filters.\nClass BinaryPoint;\n// A binary representation of a range that wraps a BinaryDocValues field\nClass BinaryRangeDocValues;\n// Provides support for converting dates to strings and vice-versa.\nClass DateTools;\n// Documents are the unit of indexing and search.\nClass Document;\n// A StoredFieldVisitor that creates a Document from stored fields.\nClass DocumentStoredFieldVisitor;\n// Syntactic sugar for encoding doubles as NumericDocValues via Double.doubleToRawLongBits(double).\nClass DoubleDocValuesField;\n// Field that stores a per-document double value for scoring, sorting or value retrieval and index the field for fast range filters.\nClass DoubleField;\n// An indexed double field for fast range filters.\nClass DoublePoint;\n// An indexed Double Range field.\nClass DoubleRange;\n// DocValues field for DoubleRange.\nClass DoubleRangeDocValuesField;\n// Field that can be used to store static scoring factors into documents.\nClass FeatureField;\n// Expert: directly create a field for a document.\nClass Field;\n// Describes the properties of a field.\nClass FieldType;\n// Syntactic sugar for encoding floats as NumericDocValues via Float.floatToRawIntBits(float).\nClass FloatDocValuesField;\n// Field that stores a per-document float value for scoring, sorting or value retrieval and index the field for fast range filters.\nClass FloatField;\n// An indexed float field for fast range filters.\nClass FloatPoint;\n// An indexed Float Range field.\nClass FloatRange;\n// DocValues field for FloatRange.\nClass FloatRangeDocValuesField;\n// An indexed 128-bit InetAddress field.\nClass InetAddressPoint;\n// An indexed InetAddress Range Field\nClass InetAddressRange;\n// Field that stores a per-document int value for scoring, sorting or value retrieval and index the field for fast range filters.\nClass IntField;\n// An indexed int field for fast range filters.\nClass IntPoint;\n// An indexed Integer Range field.\nClass IntRange;\n// DocValues field for IntRange.\nClass IntRangeDocValuesField;\n", "des": "The logical representation of a Document for indexing and searching."}
{"index": 3842, "repo": "lucene-core-9.7.0", "code": "package geo\n\n// 2D Geometry object that supports spatial relationships with bounding boxes, triangles and points.\nInterface Component2D;\n// Implementation of this interface will receive calls with internal data at each step of the triangulation algorithm.\nInterface Tessellator.Monitor;\n// Represents a circle on the earth's surface.\nClass Circle;\n// reusable geopoint encoding methods\nClass GeoEncodingUtils;\n// A predicate that checks whether a given point is within a component2D geometry.\nClass GeoEncodingUtils.Component2DPredicate;\n// A predicate that checks whether a given point is within a distance of another point.\nClass GeoEncodingUtils.DistancePredicate;\n// Base class for LatLonGeometry and XYGeometry\nClass Geometry;\n// Basic reusable geo-spatial utility methods\nClass GeoUtils;\n// Lat/Lon Geometry object.\nClass LatLonGeometry;\n// Represents a line on the earth's surface.\nClass Line;\n// Represents a point on the earth's surface.\nClass Point;\n// Represents a closed polygon on the earth's surface.\nClass Polygon;\n// Represents a lat/lon rectangle.\nClass Rectangle;\n// Parses shape geometry represented in WKT format\nClass SimpleWKTShapeParser;\n// Computes a triangular mesh tessellation for a given polygon.\nClass Tessellator;\n// Circular Doubly-linked list used for polygon coordinates\nClass Tessellator.Node;\n// Triangle in the tessellated mesh\nClass Tessellator.Triangle;\n// Represents a circle on the XY plane.\nClass XYCircle;\n// reusable cartesian geometry encoding methods\nClass XYEncodingUtils;\n// Cartesian Geometry object.\nClass XYGeometry;\n// Represents a line in cartesian space.\nClass XYLine;\n// Represents a point on the earth's surface.\nClass XYPoint;\n// Represents a polygon in cartesian space.\nClass XYPolygon;\n// Represents a x/y cartesian rectangle.\nClass XYRectangle;\n// Used by withinTriangle to check the within relationship between a triangle and the query shape (e.g.\nEnum Component2D.WithinRelation;\n", "des": "Geospatial Utility Implementations for Lucene Core"}
{"index": 3843, "repo": "lucene-core-9.7.0", "code": "package index\n\n// Source of Impacts.\nInterface ImpactsSource;\n// Represents a single field for indexing.\nInterface IndexableField;\n// Describes the properties of a field.\nInterface IndexableFieldType;\n// A utility class that gives hooks in order to help build a cache based on the data that is contained in this index.\nInterface IndexReader.CacheHelper;\n// A listener that is called when a resource gets closed.\nInterface IndexReader.ClosedListener;\n// Handles how documents should be sorted in an index, both within a segment and between segments.\nInterface IndexSorter;\n// Used for sorting documents across segments\nInterface IndexSorter.ComparableProvider;\n// A comparator of doc IDs, used for sorting documents within a segment\nInterface IndexSorter.DocComparator;\n// Provide a NumericDocValues instance for a LeafReader\nInterface IndexSorter.NumericDocValuesProvider;\n// Provide a SortedDocValues instance for a LeafReader\nInterface IndexSorter.SortedDocValuesProvider;\n// If DirectoryReader.open(IndexWriter) has been called (ie, this writer is in near real-time mode), then after a merge completes, this class can be invoked to warm the reader on the newly merged segment, before the merge commits.\nInterface IndexWriter.IndexReaderWarmer;\n// A callback event listener for recording key events happened inside IndexWriter\nInterface IndexWriterEventListener;\n// This interface represents the current context of the merge selection process.\nInterface MergePolicy.MergeContext;\n// Provides access to new merges and executes the actual merge\nInterface MergeScheduler.MergeSource;\n// We recurse the PointValues.PointTree, using a provided instance of this to guide the recursion.\nInterface PointValues.IntersectVisitor;\n// Basic operations to read the KD-tree.\nInterface PointValues.PointTree;\n// Query timeout abstraction that controls whether a query should continue or be stopped.\nInterface QueryTimeout;\n// An interface for implementations that support 2-phase commit.\nInterface TwoPhaseCommit;\n// A FilteredTermsEnum that enumerates terms based upon what is accepted by a DFA.\nClass AutomatonTermsEnum;\n// Base class for implementing CompositeReaders based on an array of sub-readers.\nClass BaseCompositeReader<R extends IndexReader>;\n", "des": "Code to maintain and access indices."}
{"index": 3844, "repo": "lucene-core-9.7.0", "code": "package tests\n\n// Access to ConcurrentMergeScheduler internals exposed to the test framework.\nInterface ConcurrentMergeSchedulerAccess;\n// Access to org.apache.lucene.index package internals exposed to the test framework.\nInterface IndexPackageAccess;\n// Public type exposing FieldInfo internal builders.\nInterface IndexPackageAccess.FieldInfosBuilder;\n// Access to IndexWriter internals exposed to the test framework.\nInterface IndexWriterAccess;\n// Access to SegmentReader internals exposed to the test framework.\nInterface SegmentReaderAccess;\n// A set of static methods returning accessors for internal, package-private functionality in Lucene.\nClass TestSecrets;\n", "des": "Internal bridges to package-private internals, for use by the lucene test framework only."}
{"index": 3845, "repo": "lucene-core-9.7.0", "code": "package search\n\n// Comparators, used to compare hits so as to determine their sort order when collecting the top results with TopFieldCollector.\npackage search.comparators\n// This package contains the various ranking models that can be used in Lucene.\npackage search.similarities\n// Add this Attribute to a TermsEnum returned by MultiTermQuery.getTermsEnum(Terms,AttributeSource) and update the boost on each returned term.\nInterface BoostAttribute;\n// Expert: Collectors are primarily meant to be used to gather raw results from a search, and implement sorting or custom result filtering, collation, etc.\nInterface Collector;\n// A manager of collectors.\nInterface CollectorManager<C extends Collector,​T>;\n// Collector decouples the score from the collected doc: the score computation is skipped entirely if it's not needed.\nInterface LeafCollector;\n// Expert: comparator that gets instantiated on each leaf from a top-level FieldComparator instance.\nInterface LeafFieldComparator;\n// Reports the positions and optionally offsets of all matching terms in a query for a single document\nInterface Matches;\n// An iterator over match positions (and optionally offsets) for a single document and field\nInterface MatchesIterator;\n// Add this Attribute to a fresh AttributeSource before calling MultiTermQuery.getTermsEnum(Terms,AttributeSource).\nInterface MaxNonCompetitiveBoostAttribute;\n// A cache for queries.\nInterface QueryCache;\n// A policy defining which filters should be cached.\nInterface QueryCachingPolicy;\n// Use to receive notification when a refresh has finished.\nInterface ReferenceManager.RefreshListener;\n// See SearcherLifetimeManager.prune(org.apache.lucene.search.SearcherLifetimeManager.Pruner).\nInterface SearcherLifetimeManager.Pruner;\n// Interface defining whether or not an object can be cached against a LeafReader\nInterface SegmentCacheable;\n// A Query that will match terms against a finite-state machine.\nClass AutomatonQuery;\n// A Query that blends index statistics across multiple terms.\nClass BlendedTermQuery;\n// A Builder for BlendedTermQuery.\nClass BlendedTermQuery.Builder;\n// A BlendedTermQuery.RewriteMethod that creates a DisjunctionMaxQuery out of the sub queries.\nClass BlendedTermQuery.DisjunctionMaxRewrite;\n", "des": "Code to search indices."}
{"index": 3846, "repo": "lucene-core-9.7.0", "code": "package comparators\n\n// Comparator that sorts by asc _doc\nClass DocComparator;\n// Comparator based on Double.compare(double, double) for numHits.\nClass DoubleComparator;\n// Comparator based on Float.compare(float, float) for numHits.\nClass FloatComparator;\n// Comparator based on Integer.compare(int, int) for numHits.\nClass IntComparator;\n// Comparator based on Long.compare(long, long) for numHits.\nClass LongComparator;\n// Docs iterator that starts iterating from a configurable minimum document\nClass MinDocIterator;\n// Abstract numeric comparator for comparing numeric values.\nClass NumericComparator<T extends Number>;\n// Sorts by field's natural Term sort order, using ordinals.\nClass TermOrdValComparator;\n", "des": "Comparators, used to compare hits so as to determine their sort order when collecting the top results with TopFieldCollector."}
{"index": 3847, "repo": "lucene-core-9.7.0", "code": "package similarities\n\n// A strategy for computing the collection language model.\nInterface LMSimilarity.CollectionModel;\n// This class acts as the base class for the implementations of the first normalization of the informative content in the DFR framework.\nClass AfterEffect;\n// Model of the information gain based on the ratio of two Bernoulli processes.\nClass AfterEffectB;\n// Model of the information gain based on Laplace's law of succession.\nClass AfterEffectL;\n// Axiomatic approaches for IR.\nClass Axiomatic;\n// F1EXP is defined as Sum(tf(term_doc_freq)*ln(docLen)*IDF(term)) where IDF(t) = pow((N+1)/df(t), k) N=total num of docs, df=doc freq\nClass AxiomaticF1EXP;\n// F1LOG is defined as Sum(tf(term_doc_freq)*ln(docLen)*IDF(term)) where IDF(t) = ln((N+1)/df(t)) N=total num of docs, df=doc freq\nClass AxiomaticF1LOG;\n// F2EXP is defined as Sum(tfln(term_doc_freq, docLen)*IDF(term)) where IDF(t) = pow((N+1)/df(t), k) N=total num of docs, df=doc freq\nClass AxiomaticF2EXP;\n// F2EXP is defined as Sum(tfln(term_doc_freq, docLen)*IDF(term)) where IDF(t) = ln((N+1)/df(t)) N=total num of docs, df=doc freq\nClass AxiomaticF2LOG;\n// F3EXP is defined as Sum(tf(term_doc_freq)*IDF(term)-gamma(docLen, queryLen)) where IDF(t) = pow((N+1)/df(t), k) N=total num of docs, df=doc freq gamma(docLen, queryLen) = (docLen-queryLen)*queryLen*s/avdl NOTE: the gamma function of this similarity creates negative scores\nClass AxiomaticF3EXP;\n", "des": "This package contains the various ranking models that can be used in Lucene."}
{"index": 3848, "repo": "lucene-core-9.7.0", "code": "package store\n\n// Random Access Index API.\nInterface RandomAccessInput;\n// Base implementation for a concrete Directory that uses a LockFactory for locking.\nClass BaseDirectory;\n// Wraps another Checksum with an internal buffer to speed up checksum calculations.\nClass BufferedChecksum;\n// Simple implementation of ChecksumIndexInput that wraps another input and delegates calls.\nClass BufferedChecksumIndexInput;\n// Base implementation class for buffered IndexInput.\nClass BufferedIndexInput;\n// DataInput backed by a byte array.\nClass ByteArrayDataInput;\n// DataOutput backed by a byte array.\nClass ByteArrayDataOutput;\n// Base IndexInput implementation that uses an array of ByteBuffers to represent a file.\nClass ByteBufferIndexInput;\n// A DataInput implementing RandomAccessInput and reading data from a list of ByteBuffers.\nClass ByteBuffersDataInput;\n// A DataOutput storing data in a list of ByteBuffers.\nClass ByteBuffersDataOutput;\n// An implementation of a ByteBuffer allocation and recycling policy.\nClass ByteBuffersDataOutput.ByteBufferRecycler;\n// A ByteBuffer-based Directory implementation that can be used to store index files on the heap.\nClass ByteBuffersDirectory;\n// An IndexInput implementing RandomAccessInput and backed by a ByteBuffersDataInput.\nClass ByteBuffersIndexInput;\n// An IndexOutput writing to a ByteBuffersDataOutput.\nClass ByteBuffersIndexOutput;\n// Extension of IndexInput, computing checksum as it goes.\nClass ChecksumIndexInput;\n// Abstract base class for performing read operations of Lucene's low-level data types.\nClass DataInput;\n// Abstract base class for performing write operations of Lucene's low-level data types.\nClass DataOutput;\n// A Directory provides an abstraction layer for storing a list of files.\nClass Directory;\n// Expert: A Directory instance that switches files between two other Directory instances.\nClass FileSwitchDirectory;\n// Directory implementation that delegates calls to another directory.\nClass FilterDirectory;\n// IndexInput implementation that delegates calls to another directory.\nClass FilterIndexInput;\n// IndexOutput implementation that delegates calls to another directory.\nClass FilterIndexOutput;\n// A FlushInfo provides information required for a FLUSH context.\nClass FlushInfo;\n// Base class for Directory implementations that store index files in the file system.\nClass FSDirectory;\n", "des": "Binary i/o API, used for all index data."}
{"index": 3849, "repo": "lucene-core-9.7.0", "code": "package util\n\n// Finite-state automaton for regular expressions.\npackage util.automaton\n// Block KD-tree, implementing the generic spatial data structure described in this paper.\npackage util.bkd\n// Compression utilities.\npackage util.compress\n// Finite state transducers\npackage util.fst\n// Utility classes for working with token streams as graphs.\npackage util.graph\n// Navigable Small-World graph, nominally Hierarchical but currently only has a single layer.\npackage util.hnsw\n// package holding hppc related classes.\npackage util.hppc\n// Comparable object wrappers\npackage util.mutable\n// Packed integer arrays and streams.\npackage util.packed\n// An object whose RAM usage can be computed.\nInterface Accountable;\n// Comparator for a fixed number of bytes.\nInterface ArrayUtil.ByteArrayComparator;\n// Base interface for attributes.\nInterface Attribute;\n// This interface is used to reflect contents of AttributeSource or AttributeImpl.\nInterface AttributeReflector;\n// Interface for Bitset-like structures.\nInterface Bits;\n// An extension of BytesRefIterator that allows retrieving the index of the current element\nInterface BytesRefArray.IndexedBytesRefIterator;\n// A simple iterator interface for BytesRef iteration.\nInterface BytesRefIterator;\n// Helper class used by ServiceLoader to investigate parent/child relationships of ClassLoaders.\nInterface ClassLoaderUtils;\n// An IO operation with a single input that may throw an IOException.\nInterface IOConsumer<T>;\n// A Function that may throw an IOException\nInterface IOFunction<T,​R>;\n// This is a result supplier that is allowed to throw an IOException.\nInterface IOSupplier<T>;\n// \nInterface IOUtils.IOConsumer<T>;\n// \nInterface IOUtils.IOFunction<T,​R>;\n// Interface to support NamedSPILoader.lookup(String) by name.\nInterface NamedSPILoader.NamedSPI;\n// Abstraction for loading resources (streams, files, and classes).\nInterface ResourceLoader;\n// Interface for a component that needs to be initialized by an implementation of ResourceLoader.\nInterface ResourceLoaderAware;\n// Implement to reset an instance\nInterface RollingBuffer.Resettable;\n", "des": "Some utility classes."}
{"index": 3850, "repo": "lucene-core-9.7.0", "code": "package automaton\n\n// Automaton provider for RegExp. RegExp.toAutomaton(AutomatonProvider,int)\nInterface AutomatonProvider;\n// Construction of basic automata.\nClass Automata;\n// Represents an automaton and all its states and transitions.\nClass Automaton;\n// Records new states and transitions and then Automaton.Builder.finish() creates the Automaton.\nClass Automaton.Builder;\n// Automaton representation for matching UTF-8 byte[].\nClass ByteRunAutomaton;\n// Automaton representation for matching char[].\nClass CharacterRunAutomaton;\n// Immutable class holding compiled details for a given Automaton.\nClass CompiledAutomaton;\n// \nClass DaciukMihovAutomatonBuilder;\n// Iterates all accepted strings.\nClass FiniteStringsIterator;\n// Class to construct DFAs that match a word within some edit distance.\nClass LevenshteinAutomata;\n// FiniteStringsIterator which limits the number of iterated accepted strings.\nClass LimitedFiniteStringsIterator;\n// Operations for minimizing automata.\nClass MinimizationOperations;\n// Automata operations.\nClass Operations;\n// Regular Expression extension to Automaton.\nClass RegExp;\n// Finite-state automaton with fast run operation.\nClass RunAutomaton;\n// Pair of states.\nClass StatePair;\n// Holds one transition from an Automaton.\nClass Transition;\n// Converts UTF-32 automata to the equivalent UTF-8 representation.\nClass UTF32ToUTF8;\n// Automata are compiled into different internal forms for the most efficient execution depending upon the language they accept.\nEnum CompiledAutomaton.AUTOMATON_TYPE;\n// The type of expression represented by a RegExp node.\nEnum RegExp.Kind;\n// This exception is thrown when determinizing an automaton would require too much work.\nClass TooComplexToDeterminizeException;\n", "des": "Finite-state automaton for regular expressions."}
{"index": 3851, "repo": "lucene-core-9.7.0", "code": "package bkd\n\n// One pass iterator through all points previously written with a PointWriter, abstracting away whether points are read from (offline) disk or simple arrays in heap.\nInterface PointReader;\n// Represents a dimensional point value written in the BKD tree.\nInterface PointValue;\n// Appends many points, and then at the end provides a PointReader to iterate those points.\nInterface PointWriter;\n// Basic parameters for indexing points on the BKD tree.\nClass BKDConfig;\n// Offline Radix selector for BKD tree.\nClass BKDRadixSelector;\n// Sliced reference to points in an PointWriter.\nClass BKDRadixSelector.PathSlice;\n// Handles reading a block KD-tree in byte[] space previously written with BKDWriter.\nClass BKDReader;\n// Recursively builds a block KD-tree to assign all incoming points in N-dim space to smaller and smaller N-dim rectangles (cells) until the number of points in a given rectangle is <= config.maxPointsInLeafNode.\nClass BKDWriter;\n// Utility class to read buffered points from in-heap arrays.\nClass HeapPointReader;\n// Utility class to write new points into in-heap arrays.\nClass HeapPointWriter;\n// Utility APIs for sorting and partitioning buffered points.\nClass MutablePointTreeReaderUtils;\n// Reads points from disk in a fixed-with format, previously written with OfflinePointWriter.\nClass OfflinePointReader;\n// Writes points to disk in a fixed-with format.\nClass OfflinePointWriter;\n", "des": "Block KD-tree, implementing the generic spatial data structure described in this paper."}
{"index": 3852, "repo": "lucene-core-9.7.0", "code": "package compress\n\n// Utility class that can efficiently compress arrays that mostly contain characters in the [0x1F,0x3F) or [0x5F,0x7F) ranges, which notably include all digits, lowercase characters, '.', '-' and '_'.\nClass LowercaseAsciiCompression;\n// LZ4 compression and decompression routines.\nClass LZ4;\n// Simple lossy LZ4.HashTable that only stores the last ocurrence for each hash on 2^14 bytes of memory.\nClass LZ4.FastCompressionHashTable;\n// A higher-precision LZ4.HashTable.\nClass LZ4.HighCompressionHashTable;\n", "des": "Compression utilities."}
{"index": 3853, "repo": "lucene-core-9.7.0", "code": "package fst\n\n// Abstraction for reading/writing bytes necessary for FST.\nInterface FSTStore;\n// An FST Outputs implementation where each output is a sequence of bytes.\nClass ByteSequenceOutputs;\n// Enumerates all input (BytesRef) + output pairs in an FST.\nClass BytesRefFSTEnum<T>;\n// Holds a single input (BytesRef) + output pair.\nClass BytesRefFSTEnum.InputOutput<T>;\n// An FST Outputs implementation where each output is a sequence of characters.\nClass CharSequenceOutputs;\n// Represents an finite state machine (FST), using a compact byte[] format.\nClass FST<T>;\n// Represents a single arc.\nClass FST.Arc<T>;\n// Reads bytes stored in an FST.\nClass FST.BytesReader;\n// Builds a minimal FST (maps an IntsRef term to an arbitrary output) from pre-sorted terms with outputs.\nClass FSTCompiler<T>;\n// Fluent-style constructor for FST FSTCompiler.\nClass FSTCompiler.Builder<T>;\n// An FST Outputs implementation where each output is a sequence of ints.\nClass IntSequenceOutputs;\n// Enumerates all input (IntsRef) + output pairs in an FST.\nClass IntsRefFSTEnum<T>;\n// Holds a single input (IntsRef) + output pair.\nClass IntsRefFSTEnum.InputOutput<T>;\n// A null FST Outputs implementation; use this if you just want to build an FSA.\nClass NoOutputs;\n// Provides off heap storage of finite state machine (FST), using underlying index input instead of byte store on heap\nClass OffHeapFSTStore;\n// Provides storage of finite state machine (FST), using byte array or byte store allocated on heap.\nClass OnHeapFSTStore;\n// Represents the outputs for an FST, providing the basic algebra required for building and traversing the FST.\nClass Outputs<T>;\n// An FST Outputs implementation, holding two other outputs.\nClass PairOutputs<A,​B>;\n", "des": "Finite state transducers"}
{"index": 3854, "repo": "lucene-core-9.7.0", "code": "package graph\n\n// Consumes a TokenStream and creates an Automaton where the transition labels are terms from the TermToBytesRefAttribute.\nClass GraphTokenStreamFiniteStrings;\n", "des": "Utility classes for working with token streams as graphs."}
{"index": 3855, "repo": "lucene-core-9.7.0", "code": "package hnsw\n\n// Provides random access to vectors by dense ordinal.\nInterface RandomAccessVectorValues<T>;\n// Hierarchical Navigable Small World graph.\nClass HnswGraph;\n// NodesIterator that accepts nodes as an integer array.\nClass HnswGraph.ArrayNodesIterator;\n// Nodes iterator based on set representation of nodes.\nClass HnswGraph.CollectionNodesIterator;\n// Iterator over the graph nodes on a certain level, Iterator also provides the size – the total number of nodes to be iterated over.\nClass HnswGraph.NodesIterator;\n// Builder for HNSW graph.\nClass HnswGraphBuilder<T>;\n// Searches an HNSW graph to find nearest neighbors to a query vector.\nClass HnswGraphSearcher<T>;\n// NeighborArray encodes the neighbors of a node and their mutual scores in the HNSW graph as a pair of growable arrays.\nClass NeighborArray;\n// NeighborQueue uses a LongHeap to store lists of arcs in an HNSW graph, represented as a neighbor node id with an associated score packed together as a sortable long, which is sorted primarily by score.\nClass NeighborQueue;\n// An HnswGraph where all nodes and connections are held in memory.\nClass OnHeapHnswGraph;\n", "des": "Navigable Small-World graph, nominally Hierarchical but currently only has a single layer."}
{"index": 3856, "repo": "lucene-core-9.7.0", "code": "package hppc\n\n// Bit mixing utilities.\nClass BitMixer;\n// A hash map of int to int, implemented using open addressing with linear probing for collision resolution.\nClass IntIntHashMap;\n// Simplifies the implementation of iterators a bit.\nClass IntIntHashMap.AbstractIterator<E>;\n// BufferAllocationException forked from HPPC\nClass IntIntHashMap.BufferAllocationException;\n", "des": "package holding hppc related classes."}
{"index": 3857, "repo": "lucene-core-9.7.0", "code": "package mutable\n\n// Base class for all mutable values.\nClass MutableValue;\n// MutableValue implementation of type boolean.\nClass MutableValueBool;\n// MutableValue implementation of type Date.\nClass MutableValueDate;\n// MutableValue implementation of type double.\nClass MutableValueDouble;\n// MutableValue implementation of type float.\nClass MutableValueFloat;\n// MutableValue implementation of type int.\nClass MutableValueInt;\n// MutableValue implementation of type long.\nClass MutableValueLong;\n// MutableValue implementation of type String.\nClass MutableValueStr;\n", "des": "Comparable object wrappers"}
{"index": 3858, "repo": "lucene-core-9.7.0", "code": "package packed\n\n// A decoder for packed integers.\nInterface PackedInts.Decoder;\n// An encoder for packed integers.\nInterface PackedInts.Encoder;\n// Run-once iterator interface, to decode previously saved PackedInts.\nInterface PackedInts.ReaderIterator;\n// Base implementation for PagedMutable and PagedGrowableWriter.\nClass AbstractPagedMutable<T extends AbstractPagedMutable<T>>;\n// Reader for sequences of longs written with BlockPackedWriter.\nClass BlockPackedReaderIterator;\n// A writer for large sequences of longs.\nClass BlockPackedWriter;\n// Retrieves an instance previously written by DirectMonotonicWriter.\nClass DirectMonotonicReader;\n// In-memory metadata that needs to be kept around for DirectMonotonicReader to read data from disk.\nClass DirectMonotonicReader.Meta;\n// Write monotonically-increasing sequences of integers.\nClass DirectMonotonicWriter;\n// Retrieves an instance previously written by DirectWriter\nClass DirectReader;\n// Class for writing packed integers to be directly read from Directory.\nClass DirectWriter;\n// Implements PackedInts.Mutable, but grows the bit count of the underlying packed ints on-demand.\nClass GrowableWriter;\n// Provides random access to a stream written with MonotonicBlockPackedWriter.\nClass MonotonicBlockPackedReader;\n// A writer for large monotonically increasing sequences of positive longs.\nClass MonotonicBlockPackedWriter;\n// A DataInput wrapper to read unaligned, variable-length packed integers.\nClass PackedDataInput;\n// A DataOutput wrapper to write unaligned, variable-length packed integers.\nClass PackedDataOutput;\n// Simplistic compression for array of unsigned long values.\nClass PackedInts;\n// Simple class that holds a format and a number of bits per value.\nClass PackedInts.FormatAndBits;\n// A packed integer array that can be modified.\nClass PackedInts.Mutable;\n// A PackedInts.Reader which has all its values equal to 0 (bitsPerValue = 0).\nClass PackedInts.NullReader;\n// A read-only random access array of positive integers.\nClass PackedInts.Reader;\n// A write-once Writer.\nClass PackedInts.Writer;\n", "des": "Packed integer arrays and streams."}
{"index": 3859, "repo": "lucene-spatial-extras-9.7.0", "code": "package spatial\n\n// Bounding Box Spatial Strategy\npackage spatial.bbox\n// Composite strategies.\npackage spatial.composite\n// Prefix Tree Strategy.\npackage spatial.prefix\n// Spatial Query options useful for client side requests\npackage spatial.query\n// Strategies that serialize the shape (non-indexed).\npackage spatial.serialized\n// Spatial4j stuff that ideally belongs in Spatial4j (isn't related to Lucene).\npackage spatial.spatial4j\n// Advanced spatial utilities.\npackage spatial.util\n// Spatial strategy that uses two fields.\npackage spatial.vector\n// Iterator over Shape objects for an index segment\nClass ShapeValues;\n// Produces ShapeValues per-segment\nClass ShapeValuesSource;\n// The SpatialStrategy encapsulates an approach to indexing and searching based on shapes.\nClass SpatialStrategy;\n", "des": "Lucene advanced spatial search"}
{"index": 3860, "repo": "lucene-spatial-extras-9.7.0", "code": "package bbox\n\n// The algorithm is implemented as envelope on envelope (rect on rect) overlays rather than complex polygon on complex polygon overlays.\nClass BBoxOverlapRatioValueSource;\n// A base class for calculating a spatial relevance rank per document from a provided ShapeValuesSource returning a Rectangle per-document.\nClass BBoxSimilarityValueSource;\n// A SpatialStrategy for indexing and searching Rectangles by storing its coordinates in numeric fields.\nClass BBoxStrategy;\n", "des": "Bounding Box Spatial Strategy"}
{"index": 3861, "repo": "lucene-spatial-extras-9.7.0", "code": "package composite\n\n// A composite SpatialStrategy based on RecursivePrefixTreeStrategy (RPT) and SerializedDVStrategy (SDV).\nClass CompositeSpatialStrategy;\n// A Query that considers an \"indexQuery\" to have approximate results, and a follow-on ShapeValuesSource is called to verify each hit from TwoPhaseIterator.matches().\nClass CompositeVerifyQuery;\n// A spatial Intersects predicate that distinguishes an approximated match from an exact match based on which cells are within the query shape.\nClass IntersectsRPTVerifyQuery;\n", "des": "Composite strategies."}
{"index": 3862, "repo": "lucene-spatial-extras-9.7.0", "code": "package prefix\n\n// This package is about SpatialPrefixTree and any supporting classes.\npackage prefix.tree\n// Base class for Lucene Queries on SpatialPrefixTree fields.\nClass AbstractPrefixTreeQuery;\n// Traverses a SpatialPrefixTree indexed field, using the template and visitor design patterns for subclasses to guide the traversal and collect matching documents.\nClass AbstractVisitingPrefixTreeQuery;\n// A visitor node/cell found via the query shape for AbstractVisitingPrefixTreeQuery.VisitorTemplate.\nClass AbstractVisitingPrefixTreeQuery.VNode;\n// A TokenStream used internally by PrefixTreeStrategy.\nClass BytesRefIteratorTokenStream;\n// A reset'able BytesRefIterator wrapper around an Iterator of Cells.\nClass CellToBytesRefIterator;\n// Finds docs where its indexed shape CONTAINS the query shape.\nClass ContainsPrefixTreeQuery;\n// Computes spatial facets in two dimensions as a grid of numbers.\nClass HeatmapFacetCounter;\n// Response structure\nClass HeatmapFacetCounter.Heatmap;\n// A Query matching documents that have an SpatialRelation.INTERSECTS (i.e.\nClass IntersectsPrefixTreeQuery;\n// A PrefixTree based on Number/Date ranges.\nClass NumberRangePrefixTreeStrategy;\n// Facet response information\nClass NumberRangePrefixTreeStrategy.Facets;\n// Holds a block of detailLevel counts aggregated to their parent level.\nClass NumberRangePrefixTreeStrategy.Facets.FacetParentVal;\n// Implementation of ShapeFieldCacheProvider designed for PrefixTreeStrategys that index points (AND ONLY POINTS!).\nClass PointPrefixTreeFieldCacheProvider;\n// Computes facets on cells for PrefixTreeStrategy.\nClass PrefixTreeFacetCounter;\n// A callback/visitor of facet counts.\nClass PrefixTreeFacetCounter.FacetVisitor;\n// An abstract SpatialStrategy based on SpatialPrefixTree.\nClass PrefixTreeStrategy;\n// A PrefixTreeStrategy which uses AbstractVisitingPrefixTreeQuery.\nClass RecursivePrefixTreeStrategy;\n// A basic implementation of PrefixTreeStrategy using a large TermInSetQuery of all the cells from SpatialPrefixTree.getTreeCellIterator(org.locationtech.spatial4j.shape.Shape, int).\nClass TermQueryPrefixTreeStrategy;\n", "des": "Prefix Tree Strategy."}
{"index": 3863, "repo": "lucene-spatial-extras-9.7.0", "code": "package tree\n\n// Represents a grid cell.\nInterface Cell;\n// Grid cells that share nothing with other cells when calling Cell.getNextLevelCells(Shape) might implement this interface.\nInterface CellCanPrune;\n// Base interface for Shapes this prefix tree supports.\nInterface NumberRangePrefixTree.NRShape;\n// A unit value Shape implemented as a stack of numbers, one for each level in the prefix tree.\nInterface NumberRangePrefixTree.UnitNRShape;\n// Shape factory for Spatial contexts that support S2 geometry.\nInterface S2ShapeFactory;\n// An Iterator of SpatialPrefixTree Cells.\nClass CellIterator;\n// A PrefixTree for date ranges in which the levels of the tree occur at natural periods of time (e.g.\nClass DateRangePrefixTree;\n// A SpatialPrefixTree based on Geohashes.\nClass GeohashPrefixTree;\n// Factory for creating GeohashPrefixTree instances with useful defaults\nClass GeohashPrefixTree.Factory;\n// The base for the original two SPT's: Geohash and Quad.\nClass LegacyCell;\n// A SpatialPrefixTree for single-dimensional numbers and number ranges of fixed precision values (not floating point).\nClass NumberRangePrefixTree;\n// Uses a compact binary representation of 8 bytes to encode a spatial quad trie.\nClass PackedQuadPrefixTree;\n// Factory for creating PackedQuadPrefixTree instances with useful defaults.\nClass PackedQuadPrefixTree.Factory;\n// A SpatialPrefixTree which uses a quad tree in which an indexed term will be generated for each cell, 'A', 'B', 'C', 'D'.\nClass QuadPrefixTree;\n// Factory for creating QuadPrefixTree instances with useful defaults\nClass QuadPrefixTree.Factory;\n// Spatial prefix tree for S2 Geometry.\nClass S2PrefixTree;\n// Factory for creating S2PrefixTree instances with useful defaults\nClass S2PrefixTree.Factory;\n// A spatial Prefix Tree, or Trie, which decomposes shapes into prefixed strings at variable lengths corresponding to variable precision.\nClass SpatialPrefixTree;\n// Abstract Factory for creating SpatialPrefixTree instances with useful defaults and passed on configurations defined in a Map.\nClass SpatialPrefixTreeFactory;\n", "des": "This package is about SpatialPrefixTree and any supporting classes."}
{"index": 3864, "repo": "lucene-spatial-extras-9.7.0", "code": "package query\n\n// Principally holds the query Shape and the SpatialOperation.\nClass SpatialArgs;\n// Parses a string that usually looks like \"OPERATION(SHAPE)\" into a SpatialArgs object.\nClass SpatialArgsParser;\n// A predicate that compares a stored geometry to a supplied geometry.\nClass SpatialOperation;\n// Exception thrown when the SpatialStrategy cannot implement the requested operation.\nClass UnsupportedSpatialOperation;\n", "des": "Spatial Query options useful for client side requests"}
{"index": 3865, "repo": "lucene-spatial-extras-9.7.0", "code": "package serialized\n\n// A SpatialStrategy based on serializing a Shape stored into BinaryDocValues.\nClass SerializedDVStrategy;\n", "des": "Strategies that serialize the shape (non-indexed)."}
{"index": 3866, "repo": "lucene-spatial-extras-9.7.0", "code": "package spatial4j\n\n// Geo3d implementation of BinaryCodec\nClass Geo3dBinaryCodec;\n// Specialization of a Geo3dShape which represents a Circle.\nClass Geo3dCircleShape;\n// Geo3d implementation of DistanceCalculator\nClass Geo3dDistanceCalculator;\n// Specialization of a Geo3dShape which represents a Point.\nClass Geo3dPointShape;\n// Specialization of a Geo3dShape which represents a Rectangle.\nClass Geo3dRectangleShape;\n// A Spatial4j Shape wrapping a GeoAreaShape (\"Geo3D\") -- a 3D planar geometry based Spatial4j Shape implementation.\nClass Geo3dShape<T extends GeoAreaShape>;\n// Geo3d implementation of S2ShapeFactory\nClass Geo3dShapeFactory;\n// Geo3d implementation of SpatialContextFactory\nClass Geo3dSpatialContextFactory;\n", "des": "Spatial4j stuff that ideally belongs in Spatial4j (isn't related to Lucene)."}
{"index": 3867, "repo": "lucene-spatial-extras-9.7.0", "code": "package util\n\n// Caches the doubleVal of another value source in a HashMap so that it is computed only once.\nClass CachingDoubleValueSource;\n// The distance from a provided Point to a Point retrieved from an ShapeValuesSource.\nClass DistanceToShapeValueSource;\n// Transforms a DoubleValuesSource using the formula v = k / (v + k)\nClass ReciprocalDoubleValuesSource;\n// The area of a Shape retrieved from an ShapeValuesSource\nClass ShapeAreaValueSource;\n// Bounded Cache of Shapes associated with docIds.\nClass ShapeFieldCache<T extends org.locationtech.spatial4j.shape.Shape>;\n// A DoubleValuesSource that returns the spatial distance between an input point and a document's points in ShapeFieldCacheProvider.\nClass ShapeFieldCacheDistanceValueSource;\n// Provides access to a ShapeFieldCache for a given LeafReader.\nClass ShapeFieldCacheProvider<T extends org.locationtech.spatial4j.shape.Shape>;\n// Compares a shape from a provided ShapeValuesSource with a given Shape and sees if it matches a given SpatialOperation (the predicate).\nClass ShapeValuesPredicate;\n", "des": "Advanced spatial utilities."}
{"index": 3868, "repo": "lucene-spatial-extras-9.7.0", "code": "package vector\n\n// A DoubleValuesSource that returns the distance for a PointVectorStrategy.\nClass DistanceValueSource;\n// Simple SpatialStrategy which represents Points in two numeric fields.\nClass PointVectorStrategy;\n", "des": "Spatial strategy that uses two fields."}
{"index": 3869, "repo": "solr-ltr-9.3.0", "code": "package ltr\n\n// Contains Feature related classes\npackage ltr.feature\n// Contains Various Interleaving auxiliary classes\npackage ltr.interleaving\n// Contains Model related classes\npackage ltr.model\n// A normalizer normalizes the value of a feature.\npackage ltr.norm\n// APIs and classes for parsing and processing search requests\npackage ltr.search\n// Contains feature and model store related classes.\npackage ltr.store\n// A feature logger that logs in csv format.\nClass CSVFeatureLogger;\n// \nClass DocInfo;\n// FeatureLogger can be registered in a model and provide a strategy for logging the feature values.\nClass FeatureLogger;\n// Implements the rescoring logic.\nClass LTRRescorer;\n// The ranking query that is run, reranking results using the LTRScoringModel algorithm\nClass LTRScoringQuery;\n// \nClass LTRScoringQuery.FeatureInfo;\n// The LTRThreadModule is optionally used by the LTRQParserPlugin and LTRFeatureLoggerTransformerFactory classes to parallelize the creation of Feature.FeatureWeight objects.\nClass LTRThreadModule;\n// \nClass SolrQueryRequestContextUtils;\n// \nEnum FeatureLogger.FeatureFormat;\n", "des": "This package contains the main logic for performing the reranking using a Learning to Rank model."}
{"index": 3870, "repo": "solr-ltr-9.3.0", "code": "package feature\n\n// A recipe for computing a feature.\nClass Feature;\n// This feature returns the length of a field (in terms) for the current document.\nClass FieldLengthFeature;\n// This feature returns the value of a field in the current document.\nClass FieldValueFeature;\n// This feature returns the original score that the document had before performing the reranking.\nClass OriginalScoreFeature;\n// This feature allows you to reuse any Solr query as a feature.\nClass SolrFeature;\n// This feature allows to return a constant given value for the current document.\nClass ValueFeature;\n// \nClass FeatureException;\n", "des": "Contains Feature related classes"}
{"index": 3871, "repo": "solr-ltr-9.3.0", "code": "package interleaving\n\n// Contains Various Interleaving Algorithms\npackage interleaving.algorithms\n// Interleaving considers two ranking models: modelA and modelB. For a given query, each model returns its ranked list of documents La = (a1,a2,...) and Lb = (b1, b2, ...). An Interleaving algorithm creates a unique ranked list I = (i1, i2, ...). This list is created by interleaving elements from the two lists la and lb as described by the implementation algorithm. Each element Ij is labelled TeamA if it is selected from La and TeamB if it is selected from Lb.\nInterface Interleaving;\n// \nClass InterleavingResult;\n// A learning to rank Query with Interleaving, will incapsulate two models, and delegate to it the rescoring of the documents.\nClass LTRInterleavingQuery;\n// Implements the rescoring logic.\nClass LTRInterleavingRescorer;\n// \nClass LTRInterleavingScoringQuery;\n// \nClass OriginalRankingLTRScoringQuery;\n", "des": "Contains Various Interleaving auxiliary classes"}
{"index": 3872, "repo": "solr-ltr-9.3.0", "code": "package algorithms\n\n// Interleaving was introduced the first time by Joachims in [1, 2]. Team Draft Interleaving is among the most successful and used interleaving approaches[3]. Team Draft Interleaving implements a method similar to the way in which captains select their players in team-matches. Team Draft Interleaving produces a fair distribution of ranking models’ elements in the final interleaved list. \"Team draft interleaving\" has also proved to overcome an issue of the \"Balanced interleaving\" approach, in determining the winning model[4].\nClass TeamDraftInterleaving;\n", "des": "Contains Various Interleaving Algorithms"}
{"index": 3873, "repo": "solr-ltr-9.3.0", "code": "package model\n\n// \nInterface NeuralNetworkModel.Activation;\n// \nInterface NeuralNetworkModel.Layer;\n// A scoring model whose initialization is completed via its AdapterModel.init(SolrResourceLoader) method.\nClass AdapterModel;\n// A scoring model that fetches the wrapped model from SolrResourceLoader.\nClass DefaultWrapperModel;\n// A scoring model that computes scores using a dot product.\nClass LinearModel;\n// A scoring model computes scores that can be used to rerank documents.\nClass LTRScoringModel;\n// A scoring model that computes scores based on the summation of multiple weighted trees.\nClass MultipleAdditiveTreesModel;\n// A scoring model that computes document scores using a neural network.\nClass NeuralNetworkModel;\n// A scoring model that wraps the other model.\nClass WrapperModel;\n// \nClass ModelException;\n", "des": "Contains Model related classes"}
{"index": 3874, "repo": "solr-ltr-9.3.0", "code": "package norm\n\n// A Normalizer that normalizes a feature value to itself.\nClass IdentityNormalizer;\n// A Normalizer to scale a feature value using a (min,max) range.\nClass MinMaxNormalizer;\n// A normalizer normalizes the value of a feature.\nClass Normalizer;\n// A Normalizer to scale a feature value around an average-and-standard-deviation distribution.\nClass StandardNormalizer;\n// \nClass NormalizerException;\n", "des": "A normalizer normalizes the value of a feature."}
{"index": 3875, "repo": "solr-ltr-9.3.0", "code": "package transform\n\n// This transformer will take care to generate and append in the response the features declared in the feature store of the current reranking model, or a specified feature store.\nClass LTRFeatureLoggerTransformerFactory;\n// \nClass LTRInterleavingTransformerFactory;\n", "des": "APIs and implementations of DocTransformer for modifying documents in Solr request responses"}
{"index": 3876, "repo": "solr-ltr-9.3.0", "code": "package search\n\n// Plug into solr a rerank model.\nClass LTRQParserPlugin;\n// A learning to rank Query, will incapsulate a learning to rank model, and delegate to it the rescoring of the documents.\nClass LTRQuery;\n", "des": "APIs and classes for parsing and processing search requests"}
{"index": 3877, "repo": "solr-ltr-9.3.0", "code": "package store\n\n// Contains the ManagedResource that encapsulate the feature and the model stores.\npackage store.rest\n// \nClass FeatureStore;\n// Contains the model and features declared.\nClass ModelStore;\n", "des": "Contains feature and model store related classes."}
{"index": 3878, "repo": "solr-ltr-9.3.0", "code": "package rest\n\n// Managed resource for a storing a feature.\nClass ManagedFeatureStore;\n// Menaged resource for storing a model\nClass ManagedModelStore;\n", "des": "Contains the ManagedResource that encapsulate the feature and the model stores."}
{"index": 3879, "repo": "solr-solrj-9.3.0", "code": "package solrj\n\n// Annotation based mapping of client objects to Solr documents.\npackage solrj.beans\n// Common classes for SolrCloud.\npackage solrj.cloud\n// SolrJ client implementations for embedded solr access.\npackage solrj.embedded\n// Concrete implementations of client API classes.\npackage solrj.impl\n// Convenience classes for dealing with various types of Solr requests.\npackage solrj.request\n// Convenience classes for dealing with various types of Solr responses.\npackage solrj.response\n// Classes to handle query routing preferences\npackage solrj.routing\n// Utilities for Solr client applications.\npackage solrj.util\n// \nInterface FastStreamingDocsCallback;\n// A a request object is able to convert itself to V2 Request it should implement this interface\nInterface V2RequestSupport;\n// \nClass ResponseParser;\n// Abstraction through which all communication with a Solr server may be routed\nClass SolrClient;\n// This is an augmented SolrParams with get/set/add fields for common fields used in the Standard and Dismax request handlers\nClass SolrQuery;\n// A single sort clause, encapsulating what to sort and the sort order.\nClass SolrQuery.SortClause;\n// \nClass SolrRequest<T extends SolrResponse>;\n// \nClass SolrResponse;\n// A callback interface for streaming response\nClass StreamingResponseCallback;\n// Types of Routed Alias supported.\nEnum RoutedAliasTypes;\n// \nEnum SolrQuery.ORDER;\n// \nEnum SolrRequest.METHOD;\n// \nEnum SolrRequest.SolrClientContext;\n// \nEnum SolrRequest.SolrRequestType;\n// Exception to catch all types of communication / parsing issues associated with talking to SOLR\nClass SolrServerException;\n", "des": "Primary APIs for communicating with a Solr Server from a Java client."}
{"index": 3880, "repo": "solr-solrj-9.3.0", "code": "package beans\n\n// A class to map objects to and from solr documents.\nClass DocumentObjectBinder;\n// \nClass BindingException;\n// This class can be used to annotate a field or a setter an any class and SolrJ would help you convert to SolrInputDocument and from SolrDocument\nAnnotation Type Field;\n", "des": "Annotation based mapping of client objects to Solr documents."}
{"index": 3881, "repo": "solr-solrj-9.3.0", "code": "package cloud\n\n// Base class for overriding some behavior of ClusterStateProvider\nClass DelegatingClusterStateProvider;\n// Hold values of terms, this class is immutable.\nClass ShardTerms;\n// Kindly borrowed the idea and base implementation from the ActiveMQ project; useful for blocking traffic on a specified port.\nClass SocketProxy;\n", "des": "Common classes for SolrCloud."}
{"index": 3882, "repo": "solr-solrj-9.3.0", "code": "package embedded\n\n// Encapsulates settings related to SSL Configuration.\nClass SSLConfig;\n", "des": "SolrJ client implementations for embedded solr access."}
{"index": 3883, "repo": "solr-solrj-9.3.0", "code": "package impl\n\n// Provides cluster state from some source\nInterface ClusterStateProvider;\n// Factory interface for configuring SolrHttpClientBuilder.\nInterface HttpClientBuilderFactory;\n// \nInterface HttpListenerFactory;\n// \nInterface SolrHttpClientBuilder.AuthSchemeRegistryProvider;\n// \nInterface SolrHttpClientBuilder.CookieSpecRegistryProvider;\n// \nInterface SolrHttpClientBuilder.CredentialsProviderProvider;\n// \nClass AuthenticationStoreHolder;\n// \nClass BaseHttpClusterStateProvider;\n// \nClass BaseHttpSolrClient;\n// A RequestWriter which writes requests in the javabin format\nClass BinaryRequestWriter;\n// \nClass BinaryRequestWriter.BAOS;\n// \nClass BinaryResponseParser;\n// SolrJ client class to communicate with SolrCloud using Http2SolrClient.\nClass CloudHttp2SolrClient;\n// Constructs CloudHttp2SolrClient instances from provided configuration.\nClass CloudHttp2SolrClient.Builder;\n// \nClass CloudLegacySolrClient;\n// Constructs CloudLegacySolrClient instances from provided configuration.\nClass CloudLegacySolrClient.Builder;\n// \nClass CloudSolrClient;\n// Constructs CloudSolrClient instances from provided configuration.\nClass CloudSolrClient.Builder;\n// \nClass CloudSolrClient.RouteResponse<T extends LBSolrClient.Req>;\n// \nClass ConcurrentUpdateHttp2SolrClient;\n// Constructs ConcurrentUpdateHttp2SolrClient instances from provided configuration.\nClass ConcurrentUpdateHttp2SolrClient.Builder;\n// \nClass ConcurrentUpdateSolrClient;\n// Constructs ConcurrentUpdateSolrClient instances from provided configuration.\nClass ConcurrentUpdateSolrClient.Builder;\n// \nClass DelegationTokenHttpSolrClient;\n// \nClass Http2ClusterStateProvider;\n// Difference between this Http2SolrClient and HttpSolrClient: Http2SolrClient sends requests in HTTP/2 Http2SolrClient can point to multiple urls Http2SolrClient does not expose its internal httpClient like HttpSolrClient.getHttpClient(), sharing connection pools should be done by Http2SolrClient.Builder.withHttpClient(Http2SolrClient)\nClass Http2SolrClient;\n// \nClass Http2SolrClient.Builder;\n// \nClass Http2SolrClient.OutStream;\n// \nClass HttpClientUtil;\n// \nClass HttpClientUtil.GzipDecompressingEntity;\n", "des": "Concrete implementations of client API classes."}
{"index": 3884, "repo": "solr-solrj-9.3.0", "code": "package request\n\n// Annotated Data objects used in V2 Requests\npackage request.beans\n// Allows sending of requests using Solr's JSON query/faceting API\npackage request.json\n// Convenience classes for making Schema API requests.\npackage request.schema\n// \nInterface ApiMapping.CommandMeta;\n// \nInterface ApiMapping.V2EndPoint;\n// \nInterface CollectionAdminRequest.RoutedAliasAdminRequest;\n// Marker class so that we can determine which requests are updates.\nInterface IsUpdateRequest;\n// \nInterface JavaBinUpdateRequestCodec.StreamingUpdateHandler;\n// \nInterface RequestWriter.ContentWriter;\n// \nClass AbstractUpdateRequest;\n// Types and utilities used by many ApiMapping classes.\nClass ApiMapping;\n// This class is experimental and subject to change.\nClass CollectionAdminRequest<T extends CollectionAdminResponse>;\n// \nClass CollectionAdminRequest.AddReplica;\n// \nClass CollectionAdminRequest.AddReplicaProp;\n// \nClass CollectionAdminRequest.AddRole;\n// Base class for asynchronous collection admin requests\nClass CollectionAdminRequest.AsyncCollectionAdminRequest;\n// \nClass CollectionAdminRequest.AsyncCollectionSpecificAdminRequest;\n// \nClass CollectionAdminRequest.AsyncShardSpecificAdminRequest;\n// \nClass CollectionAdminRequest.Backup;\n// \nClass CollectionAdminRequest.BalanceShardUnique;\n// \nClass CollectionAdminRequest.ClusterProp;\n// \nClass CollectionAdminRequest.ClusterStatus;\n// \nClass CollectionAdminRequest.CollectionAdminRoleRequest;\n// \nClass CollectionAdminRequest.CollectionProp;\n// \nClass CollectionAdminRequest.ColStatus;\n// \nClass CollectionAdminRequest.Create;\n// \nClass CollectionAdminRequest.CreateAlias;\n// \nClass CollectionAdminRequest.CreateCategoryRoutedAlias;\n// \nClass CollectionAdminRequest.CreateShard;\n// \nClass CollectionAdminRequest.CreateSnapshot;\n// \nClass CollectionAdminRequest.CreateTimeRoutedAlias;\n// \nClass CollectionAdminRequest.Delete;\n// \nClass CollectionAdminRequest.DeleteAlias;\n// SolrRequest class for the \"Backup Deletion\" API.\nClass CollectionAdminRequest.DeleteBackup;\n// \nClass CollectionAdminRequest.DeleteNode;\n// \nClass CollectionAdminRequest.DeleteReplica;\n", "des": "Convenience classes for dealing with various types of Solr requests."}
{"index": 3885, "repo": "solr-solrj-9.3.0", "code": "package beans\n\n// V2 API POJO for the /v2/collections 'backup-collection' command.\nClass BackupCollectionPayload;\n// \nClass ClusterPropPayload;\n// \nClass ClusterPropPayload.Cluster;\n// \nClass ClusterPropPayload.CollectionDefaults;\n// \nClass ClusterPropPayload.Defaults;\n// \nClass CreateConfigPayload;\n// \nClass CreateCorePayload;\n// \nClass CreateShardPayload;\n// \nClass DeleteBasicAuthUserPayload;\n// \nClass MigrateDocsPayload;\n// \nClass ModifyCollectionPayload;\n// \nClass MoveReplicaPayload;\n// \nClass OverseerOperationPayload;\n// Just a container class for POJOs used in Package APIs\nClass PackagePayload;\n// \nClass PackagePayload.AddVersion;\n// \nClass PackagePayload.DelVersion;\n// POJO for a plugin metadata used in container plugins\nClass PluginMeta;\n// \nClass PrepareCoreRecoveryPayload;\n// POJO for Rate Limiter Metadata Configuration\nClass RateLimiterPayload;\n// \nClass RebalanceLeadersPayload;\n// \nClass RejoinLeaderElectionPayload;\n// \nClass RequestApplyCoreUpdatesPayload;\n// \nClass RequestBufferUpdatesPayload;\n// \nClass RequestCoreRecoveryPayload;\n// \nClass RequestSyncShardPayload;\n// \nClass SetRuleBasedAuthPermissionPayload;\n// \nClass SplitShardPayload;\n// \nClass UpdateRuleBasedAuthPermissionPayload;\n// \nClass V2ApiConstants;\n", "des": "Annotated Data objects used in V2 Requests"}
{"index": 3886, "repo": "solr-solrj-9.3.0", "code": "package json\n\n// Represents a query using the JSON Query DSL\nClass DirectJsonQueryRequest;\n// \nClass DomainMap;\n// Represents a \"heatmap\" facet in a JSON request query.\nClass HeatmapFacetMap;\n// A common parent for a small set of classes that allow easier composition of JSON facet objects.\nClass JsonFacetMap<B extends JsonFacetMap<B>>;\n// Represents a query using the JSON Query DSL\nClass JsonQueryRequest;\n// Represents a \"query\" facet in a JSON query request.\nClass QueryFacetMap;\n// Represents a \"range\" facet in a JSON request query.\nClass RangeFacetMap;\n// Represents a \"terms\" facet in a JSON query request.\nClass TermsFacetMap;\n// \nEnum HeatmapFacetMap.HeatmapFormat;\n// \nEnum RangeFacetMap.OtherBuckets;\n// \nEnum TermsFacetMap.FacetMethod;\n", "des": "Allows sending of requests using Solr's JSON query/faceting API"}
{"index": 3887, "repo": "solr-solrj-9.3.0", "code": "package schema\n\n// \nClass AbstractSchemaRequest<T extends SolrResponse>;\n// \nClass AnalyzerDefinition;\n// \nClass FieldTypeDefinition;\n// This class offers access to the operations exposed by the Solr Schema API.\nClass SchemaRequest;\n// Adds a new copy field rule to the schema of the specified collection.\nClass SchemaRequest.AddCopyField;\n// Adds a new dynamic field rule to the schema of the specified collection.\nClass SchemaRequest.AddDynamicField;\n// Adds a new field definition to the schema.\nClass SchemaRequest.AddField;\n// Update request used to add a new field type to the schema.\nClass SchemaRequest.AddFieldType;\n// Schema API request that retrieves the source and destination of each copy field in the schema.\nClass SchemaRequest.CopyFields;\n// Deletes a copy field rule from the schema of the specified collection.\nClass SchemaRequest.DeleteCopyField;\n// Deletes a dynamic field rule from your schema.\nClass SchemaRequest.DeleteDynamicField;\n// Removes a field definition from the schema.\nClass SchemaRequest.DeleteField;\n// Removes a field type from the schema of the specified collection.\nClass SchemaRequest.DeleteFieldType;\n// Schema API request that lists the dynamic field definition for the specified field contained in the schema.\nClass SchemaRequest.DynamicField;\n// Schema API request that lists the dynamic field definitions contained in the schema.\nClass SchemaRequest.DynamicFields;\n// Schema API request that lists the field definition for the specified field contained in the schema.\nClass SchemaRequest.Field;\n// Schema API request class that lists the field definitions contained in the schema.\nClass SchemaRequest.Fields;\n// Schema API request that retrieves the type definitions for the specified field type contained in the schema.\nClass SchemaRequest.FieldType;\n// Schema API request that lists the types definitions contained in the schema.\nClass SchemaRequest.FieldTypes;\n// Retrieves the class name of the global similarity defined (if any) in the schema.\nClass SchemaRequest.GlobalSimilarity;\n// The Schema API offers the possibility to perform one or more add requests in a single command.\nClass SchemaRequest.MultiUpdate;\n// Replaces a dynamic field rule in the schema of the specified collection.\nClass SchemaRequest.ReplaceDynamicField;\n// Replaces a field's definition.\nClass SchemaRequest.ReplaceField;\n", "des": "Convenience classes for making Schema API requests."}
{"index": 3888, "repo": "solr-solrj-9.3.0", "code": "package response\n\n// Allows parsing of JSON query/faceting API responses\npackage response.json\n// Convenience classes for dealing with Schema API responses.\npackage response.schema\n// A base class for all analysis responses.\nClass AnalysisResponseBase;\n// A phase in the analysis process.\nClass AnalysisResponseBase.AnalysisPhase;\n// Holds all information of a token as part of an analysis phase.\nClass AnalysisResponseBase.TokenInfo;\n// This class represents a cluster of Solr Docs .\nClass Cluster;\n// Encapsulates responses from ClusteringComponent\nClass ClusteringResponse;\n// \nClass CollectionAdminResponse;\n// No special handling at this time.\nClass ConfigSetAdminResponse;\n// \nClass ConfigSetAdminResponse.List;\n// \nClass CoreAdminResponse;\n// Delegation Token responses\nClass DelegationTokenResponse;\n// \nClass DelegationTokenResponse.Cancel;\n// \nClass DelegationTokenResponse.Get;\n// \nClass DelegationTokenResponse.Renew;\n// A response that is returned by processing the DocumentAnalysisRequest.\nClass DocumentAnalysisResponse;\n// An analysis process breakdown of a document.\nClass DocumentAnalysisResponse.DocumentAnalysis;\n// An analysis process breakdown for a specific field.\nClass DocumentAnalysisResponse.FieldAnalysis;\n// A utility class to hold the facet response.\nClass FacetField;\n// \nClass FacetField.Count;\n// A response that is returned by processing the FieldAnalysisRequest.\nClass FieldAnalysisResponse;\n// The analysis of a field.\nClass FieldAnalysisResponse.Analysis;\n// Holds stats info\nClass FieldStatsInfo;\n// Represents a group.\nClass Group;\n// This class represents the result of a group command.\nClass GroupCommand;\n// Overall grouping result.\nClass GroupResponse;\n// \nClass HealthCheckResponse;\n// Objects of this class will contain the result of all the intervals defined for a specific field.\nClass IntervalFacet;\n// Holds counts for facet intervals defined in a field\nClass IntervalFacet.Count;\n// This is an incomplete representation of the data returned from Luke\nClass LukeResponse;\n// \nClass LukeResponse.FieldInfo;\n// \nClass LukeResponse.FieldTypeInfo;\n// \nClass PivotField;\n", "des": "Convenience classes for dealing with various types of Solr responses."}
{"index": 3889, "repo": "solr-solrj-9.3.0", "code": "package json\n\n// Represents the top-level response for a bucket-based JSON facet (i.e.\nClass BucketBasedJsonFacet;\n// Represents an individual bucket result of a \"term\" or \"range\" facet.\nClass BucketJsonFacet;\n// Represents the result of a \"heatmap\" JSON facet.\nClass HeatmapJsonFacet;\n// Represents the response to a \"query\" JSON facet.\nClass NestableJsonFacet;\n", "des": "Allows parsing of JSON query/faceting API responses"}
{"index": 3890, "repo": "solr-solrj-9.3.0", "code": "package schema\n\n// \nClass FieldTypeRepresentation;\n// \nClass SchemaRepresentation;\n// This class is used to wrap the response messages retrieved from Solr Schema API.\nClass SchemaResponse;\n// \nClass SchemaResponse.CopyFieldsResponse;\n// \nClass SchemaResponse.DynamicFieldResponse;\n// \nClass SchemaResponse.DynamicFieldsResponse;\n// \nClass SchemaResponse.FieldResponse;\n// \nClass SchemaResponse.FieldsResponse;\n// \nClass SchemaResponse.FieldTypeResponse;\n// \nClass SchemaResponse.FieldTypesResponse;\n// \nClass SchemaResponse.GlobalSimilarityResponse;\n// \nClass SchemaResponse.SchemaNameResponse;\n// \nClass SchemaResponse.SchemaVersionResponse;\n// \nClass SchemaResponse.UniqueKeyResponse;\n// \nClass SchemaResponse.UpdateResponse;\n", "des": "Convenience classes for dealing with Schema API responses."}
{"index": 3891, "repo": "solr-solrj-9.3.0", "code": "package routing\n\n// \nInterface ReplicaListTransformer;\n// \nInterface ReplicaListTransformerFactory;\n// Allows better caching by establishing deterministic evenly-distributed replica routing preferences according to either explicitly configured hash routing parameter, or the hash of a query parameter (configurable, usually related to the main query).\nClass AffinityReplicaListTransformer;\n// Factory for constructing an AffinityReplicaListTransformer that reorders replica routing preferences deterministically, based on request parameters.\nClass AffinityReplicaListTransformerFactory;\n// This comparator makes sure that the given replicas are sorted according to the given list of preferences.\nClass NodePreferenceRulesComparator;\n// \nClass NoOpReplicaListTransformer;\n// \nClass PreferenceRule;\n// \nClass RequestReplicaListTransformerGenerator;\n// \nClass ShufflingReplicaListTransformer;\n", "des": "Classes to handle query routing preferences"}
{"index": 3892, "repo": "solr-solrj-9.3.0", "code": "package util\n\n// Listener for async requests\nInterface AsyncListener<T>;\n// \nInterface Cancellable;\n// \nClass ClientUtils;\n// \nClass Constants;\n// BasicAuthentication that does not care about uri and realm\nClass SolrBasicAuthentication;\n// Ensures that provided identifiers align with Solr's recommendations/requirements for choosing collection, core, etc identifiers.\nClass SolrIdentifierValidator;\n// \nEnum SolrIdentifierValidator.IdentifierType;\n", "des": "Utilities for Solr client applications."}
{"index": 3893, "repo": "solr-solrj-9.3.0", "code": "package api\n\n// \nInterface CollectionConfig;\n// A range of hash that is stored in a shard\nInterface HashRange;\n// A binary resource.\nInterface Resource;\n// \nInterface Resource.Consumer;\n// identify shards for a given routing key or document id\nInterface Router;\n// A shard of a collection\nInterface Shard;\n// replica of a shard\nInterface ShardReplica;\n// A simplified read-only key-value structure.\nInterface SimpleMap<T>;\n// Represents a Solr cluster\nInterface SolrCluster;\n// Represents a collection in Solr\nInterface SolrCollection;\n// A read only view of a Solr node\nInterface SolrNode;\n// Types of API calls\nEnum ApiType;\n", "des": "API interfaces for core SolrCloud classes"}
{"index": 3894, "repo": "solr-solrj-9.3.0", "code": "package common\n\n// Annotations mapping to Jackson\npackage common.annotation\n// Common Solr Cloud and ZooKeeper related classes reused on both clients & server.\npackage common.cloud\n// Common constants used by the LukeRequestHandler.\npackage common.luke\n// Parameter constants and enumerations.\npackage common.params\n// Common utility classes reused on both clients & server.\npackage common.util\n// \nInterface Callable<T>;\n// A generic interface that represents a config file, mostly XML Please note that this is an immutable, read-only object.\nInterface ConfigNode;\n// Interface to help do push writing to an array\nInterface IteratorWriter;\n// \nInterface IteratorWriter.ItemWriter;\n// This is to facilitate just in time creation of objects before writing it to the response.\nInterface MapSerializable;\n// Use this class to push all entries of a Map into an output.\nInterface MapWriter;\n// An interface to push one entry at a time to the output.\nInterface MapWriter.EntryWriter;\n// This class contains helper methods for navigating deeply nested Objects.\nInterface NavigableObject;\n// This is an interface to stream data out using a push API\nInterface PushWriter;\n// A Closeable that also allows checking whether it's been closed.\nInterface SolrCloseable;\n// A generic interface for any class that is capable of providing its specification as a json schema\nInterface SpecProvider;\n// \nClass ConditionalKeyMapWriter;\n// \nClass ConditionalKeyMapWriter.EntryWriterWrapper;\n// \nClass ConditionalMapWriter;\n// \nClass ConditionalMapWriter.EntryWriterWrapper;\n// \nClass ConfigNode.Helpers;\n// This class provides several singletons of entity resolvers used by SAX and StAX in the Java API.\nClass EmptyEntityResolver;\n// Represents a Enum field value, which includes integer value (indicating the sort order) and string (displayed) value.\nClass EnumFieldValue;\n// \nClass LinkedHashMapWriter<V>;\n// \nClass MapWriterMap;\n// This class mimicks the operation of CountDownLatch, but it also periodically checks the state of the provided SolrCloseable and terminates the wait if it's closed by throwing an InterruptedException.\nClass SolrCloseableLatch;\n", "des": "Common classes reused on both clients & server for dealing with documents to be indexed and result documents."}
{"index": 3895, "repo": "solr-solrj-9.3.0", "code": "package annotation\n\n// Provides a 1:1 mapping from jackson's annotation.\nAnnotation Type JsonProperty;\n", "des": "Annotations mapping to Jackson"}
{"index": 3896, "repo": "solr-solrj-9.3.0", "code": "package cloud\n\n// Interface to determine if a set of liveNodes and a collection's state matches some expecatations.\nInterface CollectionStatePredicate;\n// JSON properties related to a collection's state.\nInterface DocCollection.CollectionStateProps;\n// \nInterface DocCollection.PrsSupplier;\n// Fetch a node's system properties.\nInterface NodesSysProps;\n// JSON properties related to a replica's state.\nInterface Replica.ReplicaStateProps;\n// JSON properties related to a slice's state.\nInterface Slice.SliceStateProps;\n// A generic interface to load plugin classes\nInterface SolrClassLoader;\n// Holds collection aliases -- virtual collections that point to one or more other collections.\nClass Aliases;\n// Immutable state of the cloud.\nClass ClusterState;\n// \nClass ClusterState.CollectionRef;\n// CompositeIdRouter partitions ids based on a CompositeIdRouter.SEPARATOR, hashes each partition and merges the hashes together to map the id to a slice.\nClass CompositeIdRouter;\n// Helper class to calculate parts, masks etc for an id.\nClass CompositeIdRouter.KeyParser;\n// Models a Collection in zookeeper (but that Java name is obviously taken, hence \"DocCollection\")\nClass DocCollection;\n// Class to partition int range into n ranges.\nClass DocRouter;\n// \nClass DocRouter.Range;\n// \nClass HashBasedRouter;\n// This document router is for custom sharding\nClass ImplicitDocRouter;\n// This represents the individual replica states in a collection This is an immutable object.\nClass PerReplicaStates;\n// \nClass PerReplicaStates.Operation;\n// The state of a replica as stored as a node under /collections/collection-name/state.json/replica-state\nClass PerReplicaStates.State;\n// \nClass PlainIdRouter;\n// \nClass Replica;\n// \nClass ReplicaPosition;\n// Used for routing docs with particular keys into another collection\nClass RoutingRule;\n// A Slice contains immutable information about a logical shard (all replicas that share the same shard id).\nClass Slice;\n// \nClass ZkCoreNodeProps;\n// ZkNodeProps contains generic immutable properties.\nClass ZkNodeProps;\n// \nEnum PerReplicaStates.Operation.Type;\n// The replica's state.\nEnum Replica.State;\n", "des": "Common Solr Cloud and ZooKeeper related classes reused on both clients & server."}
{"index": 3897, "repo": "solr-solrj-9.3.0", "code": "package luke\n\n// \nEnum FieldFlag;\n", "des": "Common constants used by the LukeRequestHandler."}
{"index": 3898, "repo": "solr-solrj-9.3.0", "code": "package params\n\n// Defines the request parameters used by all analysis request handlers.\nInterface AnalysisParams;\n// \nInterface CollectionAdminParams;\n// \nInterface CollectionParams;\n// \nInterface CommonAdminParams;\n// Parameters used across many handlers\nInterface CommonParams;\n// ConfigSets API related parameters and actions.\nInterface ConfigSetParams;\n// Parameters and constants used when dealing with cursor based requests across large sorted result sets.\nInterface CursorMarkParams;\n// A collection of params used in DisMaxRequestHandler, both for Plugin initialization and for Requests.\nInterface DisMaxParams;\n// \nInterface EventParams;\n// Expand parameters\nInterface ExpandParams;\n// Facet parameters\nInterface FacetParams;\n// Group parameters\nInterface GroupParams;\n// \nInterface HighlightParams;\n// Params for MoreLikeThisHandler.\nInterface MoreLikeThisParams;\n// Parameters used with the QueryElevationComponent\nInterface QueryElevationParams;\n// Parameters used for distributed search.\nInterface ShardParams;\n// Parameters used by the SimpleQParser.\nInterface SimpleParams;\n// \nInterface SpatialParams;\n// Parameters used for spellchecking\nInterface SpellingParams;\n// Stats Parameters\nInterface StatsParams;\n// Streaming Expressions Parameters and Properties.\nInterface StreamParams;\n// \nInterface TermsParams;\n// \nInterface TermVectorParams;\n// A collection of standard params used by Update handlers\nInterface UpdateParams;\n// SolrParams wrapper which acts similar to DefaultSolrParams except that it \"appends\" the values of multi-value params from both sub instances, so that all of the values are returned.\nClass AppendedSolrParams;\n// \nClass CoreAdminParams;\n// \nClass DefaultSolrParams;\n// SolrParams implementation that can be built from and is backed by a Map.\nClass MapSolrParams;\n// This class is similar to MultiMapSolrParams except you can edit the parameters after it is initialized.\nClass ModifiableSolrParams;\n// \nClass MultiMapSolrParams;\n// This is a simple wrapper to SolrParams that will throw a 400 exception if you ask for a parameter that does not exist.\nClass RequiredSolrParams;\n// SolrParams is designed to hold parameters to Solr, often from the request coming into Solr.\nClass SolrParams;\n", "des": "Parameter constants and enumerations."}
{"index": 3899, "repo": "solr-solrj-9.3.0", "code": "package util\n\n// \nInterface Cache<K,​V>;\n// \nInterface Compressor;\n// \nInterface ContentStream;\n// This represents a data entry in the payload/stream.\nInterface DataEntry;\n// \nInterface DataEntry.EntryListener;\n// \nInterface DataEntry.FastDecoder;\n// Any class which wants to carry forward the threadlocal values to the threads run by threadpools must implement this interface and the implementation should be registered here\nInterface ExecutorUtil.InheritableThreadLocalProvider;\n// Allows extension of JavaBinCodec to support serialization of arbitrary data types.\nInterface JavaBinCodec.ObjectResolver;\n// \nInterface JavaBinCodec.WritableDocFields;\n// Implement this interface to stream records as and when one is found.\nInterface JsonRecordReader.Handler;\n// \nInterface JsonTextWriter;\n// \nInterface ReflectMapWriter;\n// \nInterface RetryUtil.BooleanRetryCmd;\n// \nInterface RetryUtil.RetryCmd;\n// \nInterface TextWriter;\n// A byte[] backed String\nInterface Utf8CharSequence;\n// \nInterface Utils.InputStreamConsumer<T>;\n// \nInterface ValidatingJsonMap.PredicateWithErrMsg<T>;\n// \nInterface XML.Writable;\n// A mutable byte[] backed Utf8CharSequence.\nClass ByteArrayUtf8CharSequence;\n// \nClass BytesBlock;\n// \nClass BytesOutputStream;\n// \nClass BytesOutputStream.Bytes;\n// \nClass ByteUtils;\n// Methods for creating collections with exact sizes, and other convenience methods\nClass CollectionUtil;\n// \nClass CommandOperation;\n// Allows random faults to be injected in running code during test runs across all solr packages.\nClass CommonTestInjection;\n// Three concrete implementations for ContentStream - one for File/URL/String\nClass ContentStreamBase;\n// Construct a ContentStream from a File\nClass ContentStreamBase.ByteArrayStream;\n// Construct a ContentStream from a File\nClass ContentStreamBase.FileStream;\n// Construct a ContentStream from a String\nClass ContentStreamBase.StringStream;\n// Construct a ContentStream from a URL This uses a URLConnection to get the content stream\nClass ContentStreamBase.URLStream;\n// An abstract DataInput that extends InputStream\nClass DataInputInputStream;\n", "des": "Common utility classes reused on both clients & server."}
