{"index": 2342, "repo": "spring-boot-3.1.1", "code": "package client\n\n// Utility class that can be used to create ClientHttpRequestFactory instances configured using given ClientHttpRequestFactorySettings.\npublic final class ClientHttpRequestFactories extends Object;\n// Settings that can be applied when creating a ClientHttpRequestFactory.\npublic record ClientHttpRequestFactorySettings(Duration connectTimeout, Duration readTimeout, Boolean bufferRequestBody, SslBundle sslBundle) extends Record;\n", "des": "Web client utilities."}
{"index": 2343, "repo": "spring-boot-3.1.1", "code": "package codec\n\n// Callback interface that can be used to customize codecs configuration for an HTTP client and/or server with a CodecConfigurer.\n@FunctionalInterface public interface CodecCustomizer;\n", "des": "Support for web-based codecs."}
{"index": 2344, "repo": "spring-boot-3.1.1", "code": "package context\n\n// SPI interface to be implemented by most if not all web server application contexts.\npublic interface ConfigurableWebServerApplicationContext extends org.springframework.context.ConfigurableApplicationContext, WebServerApplicationContext;\n// Exception thrown when there is no WebServerFactory bean of the required type defined in a WebServerApplicationContext.\npublic class MissingWebServerFactoryBeanException extends org.springframework.beans.factory.NoSuchBeanDefinitionException;\n", "des": "Web integrations with Spring's ApplicationContext."}
{"index": 2345, "repo": "spring-boot-3.1.1", "code": "package jetty\n\n// ConfigurableWebServerFactory for Jetty-specific features.\npublic interface ConfigurableJettyWebServerFactory extends ConfigurableWebServerFactory;\n// ReactiveWebServerFactory that can be used to create JettyWebServers.\npublic class JettyReactiveWebServerFactory extends AbstractReactiveWebServerFactory implements ConfigurableJettyWebServerFactory;\n// Callback interface that can be used to customize a Jetty Server.\n@FunctionalInterface public interface JettyServerCustomizer;\n", "des": "Embedded reactive and servlet web server implementations backed by Jetty."}
{"index": 2346, "repo": "spring-boot-3.1.1", "code": "package netty\n\n// ReactiveWebServerFactory that can be used to create NettyWebServers.\npublic class NettyReactiveWebServerFactory extends AbstractReactiveWebServerFactory;\n// Function that can add new routes to an HttpServerRoutes instance.\n@FunctionalInterface public interface NettyRouteProvider extends Function<reactor.netty.http.server.HttpServerRoutes,reactor.netty.http.server.HttpServerRoutes>;\n", "des": "Embedded reactive web server implementation backed by Netty."}
{"index": 2347, "repo": "spring-boot-3.1.1", "code": "package tomcat\n\n// ConfigurableWebServerFactory for Tomcat-specific features.\npublic interface ConfigurableTomcatWebServerFactory extends ConfigurableWebServerFactory;\n// A ConnectorStartFailedException is thrown when a Tomcat Connector fails to start, for example due to a port clash or incorrect SSL configuration.\npublic class ConnectorStartFailedException extends WebServerException;\n", "des": "Embedded reactive and servlet web server implementations backed by Tomcat."}
{"index": 2348, "repo": "spring-boot-3.1.1", "code": "package undertow\n\n// ConfigurableWebServerFactory for Undertow-specific features.\npublic interface ConfigurableUndertowWebServerFactory extends ConfigurableWebServerFactory;\n// Factory used by UndertowServletWebServer to add HttpHandlers.\n@FunctionalInterface public interface HttpHandlerFactory;\n// Callback interface that can be used to customize an Undertow Undertow.Builder.\n@FunctionalInterface public interface UndertowBuilderCustomizer;\n", "des": "Embedded reactive and servlet web server implementations backed by Undertow."}
{"index": 2349, "repo": "spring-boot-3.1.1", "code": "package error\n\n// Options controlling the contents of ErrorAttributes.\npublic final class ErrorAttributeOptions extends Object;\n// Error attributes that can be included in an error response.\npublic static enum ErrorAttributeOptions.Include extends Enum<ErrorAttributeOptions.Include>;\n", "des": "Spring Web error handling infrastructure."}
{"index": 2350, "repo": "spring-boot-3.1.1", "code": "package context\n\n// ConfigurableReactiveWebApplicationContext that accepts annotated classes as input - in particular @Configuration-annotated classes, but also plain @Component classes and JSR-330 compliant classes using javax.inject annotations.\npublic class AnnotationConfigReactiveWebApplicationContext extends org.springframework.context.annotation.AnnotationConfigApplicationContext implements ConfigurableReactiveWebApplicationContext;\n", "des": "Reactive based web integrations with Spring's ApplicationContext."}
{"index": 2351, "repo": "spring-boot-3.1.1", "code": "package error\n\n// Default implementation of ErrorAttributes.\npublic class DefaultErrorAttributes extends Object implements ErrorAttributes;\n// Provides access to error attributes which can be logged or presented to the user.\npublic interface ErrorAttributes;\n// Marker interface that indicates that a WebExceptionHandler is used to render errors.\n@FunctionalInterface public interface ErrorWebExceptionHandler extends org.springframework.web.server.WebExceptionHandler;\n", "des": "Spring WebFlux error handling infrastructure."}
{"index": 2352, "repo": "spring-boot-3.1.1", "code": "package filter\n\n// HiddenHttpMethodFilter that also implements Ordered.\npublic class OrderedHiddenHttpMethodFilter extends org.springframework.web.filter.reactive.HiddenHttpMethodFilter implements OrderedWebFilter;\n// An Ordered WebFilter.\npublic interface OrderedWebFilter extends org.springframework.web.server.WebFilter, org.springframework.core.Ordered;\n", "des": "Spring Boot specific WebFilter implementations."}
{"index": 2353, "repo": "spring-boot-3.1.1", "code": "package client\n\n// Callback interface that can be used to customize a WebClient.Builder.\n@FunctionalInterface public interface WebClientCustomizer;\n", "des": "Spring WebFlux WebClient support abstractions."}
{"index": 2354, "repo": "spring-boot-3.1.1", "code": "package view\n\n// Spring WebFlux View using the Mustache template engine.\npublic class MustacheView extends org.springframework.web.reactive.result.view.AbstractUrlBasedView;\n// Spring WebFlux ViewResolver for Mustache.\npublic class MustacheViewResolver extends org.springframework.web.reactive.result.view.UrlBasedViewResolver;\n", "des": "Additional Views for use with WebFlux."}
{"index": 2355, "repo": "spring-boot-3.1.1", "code": "package server\n\n// Abstract base class for ReactiveWebServerFactory implementations.\npublic abstract class AbstractReactiveWebServerFactory extends AbstractConfigurableWebServerFactory implements ConfigurableReactiveWebServerFactory;\n// Configurable ReactiveWebServerFactory.\npublic interface ConfigurableReactiveWebServerFactory extends ConfigurableWebServerFactory, ReactiveWebServerFactory;\n", "des": "Reactive web server abstractions."}
{"index": 2356, "repo": "spring-boot-3.1.1", "code": "package server\n\n// Abstract base class for ConfigurableWebServerFactory implementations.\npublic abstract class AbstractConfigurableWebServerFactory extends Object implements ConfigurableWebServerFactory;\n// \n@Deprecated(since=\"3.1.0\", forRemoval=true) public final class CertificateFileSslStoreProvider extends Object implements SslStoreProvider;\n// Simple server-independent abstraction for compression configuration.\npublic class Compression extends Object;\n", "des": "Support for embedded web servers."}
{"index": 2357, "repo": "spring-boot-3.1.1", "code": "package servlet\n\n// Abstract base ServletContextInitializer to register Filters in a Servlet 3.0+ container.\npublic abstract class AbstractFilterRegistrationBean<T extends jakarta.servlet.Filter> extends DynamicRegistrationBean<jakarta.servlet.FilterRegistration.Dynamic>;\n", "des": "Classes and utilities designed to work with the jakarta.servlet specification."}
{"index": 2358, "repo": "spring-boot-3.1.1", "code": "package context\n\n// GenericWebApplicationContextthat accepts annotated classes as input - in particular @Configuration-annotated classes, but also plain @Component classes and JSR-330 compliant classes using javax.inject annotations.\npublic class AnnotationConfigServletWebApplicationContext extends org.springframework.web.context.support.GenericWebApplicationContext implements org.springframework.context.annotation.AnnotationConfigRegistry;\n", "des": "Servlet based web integrations with Spring's WebApplicationContext."}
{"index": 2359, "repo": "spring-boot-3.1.1", "code": "package error\n\n// Default implementation of ErrorAttributes.\n@Order(-2147483648) public class DefaultErrorAttributes extends Object implements ErrorAttributes, org.springframework.web.servlet.HandlerExceptionResolver, org.springframework.core.Ordered;\n// Provides access to error attributes which can be logged or presented to the user.\npublic interface ErrorAttributes;\n// Marker interface used to identify a @Controller that should be used to render errors.\npublic interface ErrorController;\n", "des": "Spring MVC error handling infrastructure."}
{"index": 2360, "repo": "spring-boot-3.1.1", "code": "package filter\n\n// OncePerRequestFilter to add an X-Application-Context header that contains the ApplicationContext ID.\npublic class ApplicationContextHeaderFilter extends org.springframework.web.filter.OncePerRequestFilter;\n// CharacterEncodingFilter that also implements Ordered.\npublic class OrderedCharacterEncodingFilter extends org.springframework.web.filter.CharacterEncodingFilter implements OrderedFilter;\n", "des": "Spring Boot specific Filter implementations."}
{"index": 2361, "repo": "spring-boot-3.1.1", "code": "package server\n\n// Abstract base class for ConfigurableServletWebServerFactory implementations.\npublic abstract class AbstractServletWebServerFactory extends AbstractConfigurableWebServerFactory implements ConfigurableServletWebServerFactory;\n// A configurable ServletWebServerFactory.\npublic interface ConfigurableServletWebServerFactory extends ConfigurableWebServerFactory, ServletWebServerFactory, WebListenerRegistry;\n", "des": "Servlet web server abstractions."}
{"index": 2362, "repo": "spring-boot-3.1.1", "code": "package support\n\n// A Servlet Filter that provides an ErrorPageRegistry for non-embedded applications (i.e.\npublic class ErrorPageFilter extends Object implements jakarta.servlet.Filter, ErrorPageRegistry, org.springframework.core.Ordered;\n", "des": "Support classes for Servlet-based web servers."}
{"index": 2363, "repo": "spring-boot-3.1.1", "code": "package view\n\n// Spring MVC View using the Mustache template engine.\npublic class MustacheView extends org.springframework.web.servlet.view.AbstractTemplateView;\n// Spring MVC ViewResolver for Mustache.\npublic class MustacheViewResolver extends org.springframework.web.servlet.view.AbstractTemplateViewResolver;\n", "des": "Additional Views for use with Web MVC."}
{"index": 2364, "repo": "spring-boot-3.1.1", "code": "package client\n\n// WebServiceMessageSender builder that can detect a suitable HTTP library based on the classpath.\npublic class HttpWebServiceMessageSenderBuilder extends Object;\n// Builder that can be used to configure and create a WebServiceTemplate.\npublic class WebServiceTemplateBuilder extends Object;\n// Callback interface that can be used to customize a WebServiceTemplate.\n@FunctionalInterface public interface WebServiceTemplateCustomizer;\n", "des": "Web Services client utilities."}
{"index": 2365, "repo": "camel-base-4.0.0-RC1", "code": "package properties\n\n// Base class for LoadablePropertiesSource which can load properties from a source such as classpath or file system.\npublic abstract class AbstractLocationPropertiesSource extends org.apache.camel.support.service.ServiceSupport implements org.apache.camel.spi.LoadablePropertiesSource, LocationPropertiesSource;\n// \npublic class ClasspathPropertiesSource extends AbstractLocationPropertiesSource implements org.apache.camel.Ordered;\n", "des": "The Properties Component for lookup of property placeholders for endpoint URI."}
{"index": 2366, "repo": "camel-base-4.0.0-RC1", "code": "package converter\n\n// Generated by camel build tools - do NOT edit this file!\n@DeferredContextBinding public final class CamelBaseBulkConverterLoader extends Object implements org.apache.camel.spi.TypeConverterLoader, org.apache.camel.spi.BulkTypeConverters, org.apache.camel.CamelContextAware;\n// Some useful converters for Camel APIs such as to convert a Predicate or Expression to a Processor\n@Converter(generateBulkLoader=true) public final class CamelConverter extends Object;\n", "des": "A set of helper classes for converting from different types of Java object to be used by the Type Conversion Support"}
{"index": 2367, "repo": "camel-base-4.0.0-RC1", "code": "package converter\n\n// A class which will auto-discover Converter objects and methods to pre-load the TypeConverterRegistry of converters on startup.\npublic class AnnotationTypeConverterLoader extends Object implements org.apache.camel.spi.TypeConverterLoader;\n// A type converter which is used to convert to and from array types particularly for derived types of array component types and dealing with primitive array types.\npublic class ArrayTypeConverter extends org.apache.camel.support.TypeConverterSupport;\n", "des": "Default implementation classes the Type Conversion Strategies"}
{"index": 2368, "repo": "camel-base-4.0.0-RC1", "code": "package event\n\n// Base class for CamelContext events.\npublic abstract class AbstractContextEvent extends EventObject implements org.apache.camel.spi.CamelEvent.CamelContextEvent;\n// Base class for Exchange events.\npublic abstract class AbstractExchangeEvent extends EventObject implements org.apache.camel.spi.CamelEvent.ExchangeEvent;\n// Base class for CamelContext events.\npublic abstract class AbstractRouteEvent extends EventObject implements org.apache.camel.spi.CamelEvent.RouteEvent;\n", "des": "Camel management events"}
{"index": 2369, "repo": "camel-base-4.0.0-RC1", "code": "package scan\n\n// Package scan filter for testing if a given class is annotated with any of the annotations.\npublic class AnnotatedWithAnyPackageScanFilter extends Object implements org.apache.camel.spi.PackageScanFilter;\n// Package scan filter for testing if a given class is annotated with a certain annotation.\npublic class AnnotatedWithPackageScanFilter extends Object implements org.apache.camel.spi.PackageScanFilter;\n", "des": "Package scan classes."}
{"index": 2370, "repo": "spring-security-crypto-6.1.2", "code": "package codec\n\n// \n@Deprecated public final class Base64 extends Object;\n// Hex data encoder.\npublic final class Hex extends Object;\n// UTF-8 Charset encoder/decoder.\npublic final class Utf8 extends Object;\n", "des": "Internal codec classes."}
{"index": 2371, "repo": "pulsar-client-api-3.0.0", "code": "package api\n\n// Interface of authentication providers.\n@LimitedPrivate @Stable public interface Authentication extends Closeable, Serializable;\n// Interface for accessing data which are used in variety of authentication schemes on client side.\n@LimitedPrivate @Stable public interface AuthenticationDataProvider extends Serializable;\n", "des": "Pulsar Client API."}
{"index": 2372, "repo": "pulsar-client-api-3.0.0", "code": "package interceptor\n\n// A plugin interface that allows you to intercept (and possibly mutate) the messages received by the producer before they are published to the Pulsar brokers.\n@Public @Stable public interface ProducerInterceptor extends AutoCloseable;\n// A wrapper for old style producer interceptor.\n@Private @Stable public class ProducerInterceptorWrapper extends Object implements ProducerInterceptor;\n", "des": "Pulsar interceptors."}
{"index": 2373, "repo": "pulsar-client-api-3.0.0", "code": "package schema\n\n// A field in a record, consisting of a field name, index, and Schema for the field value.\n@Public @Stable public class Field extends Object;\n// Build a field for a record.\n@Public @Stable public interface FieldSchemaBuilder<T extends FieldSchemaBuilder<T>>;\n// This is an abstraction over the logical value that is store into a Message.\npublic interface GenericObject;\n// An interface represents a message with schema.\n@Public @Stable public interface GenericRecord extends GenericObject;\n", "des": "Schema definitions for Pulsar Client API."}
{"index": 2374, "repo": "pulsar-client-api-3.0.0", "code": "package transaction\n\n// The class represents a transaction within Pulsar.\n@Public @Evolving public interface Transaction;\n// \npublic static enum Transaction.State extends Enum<Transaction.State>;\n// The transaction buffer client to commit and abort transactions on topics or subscription.\n@Private @Evolving public interface TransactionBufferClient;\n// Exceptions for transaction buffer client.\n@Private @Evolving public class TransactionBufferClientException extends IOException;\n", "des": "Pulsar transaction related API."}
{"index": 2375, "repo": "pulsar-client-api-3.0.0", "code": "package internal\n\n// This class loads the implementation for PulsarClientImplementationBinding and allows you to decouple the API from the actual implementation.\npublic class DefaultImplementation extends Object;\n// Internal utility methods for filtering and mapping Properties objects.\npublic class PropertiesUtils extends Object;\n// Helper class for class instantiations and it also contains methods to work with schemas.\npublic interface PulsarClientImplementationBinding;\n", "des": "Helpers which provide useful functionality for the implementation of Pulsar Client API."}
{"index": 2376, "repo": "pulsar-client-api-3.0.0", "code": "package api\n\n// Authentication data.\npublic final class AuthData extends Object;\n// Class representing an encryption context.\npublic class EncryptionContext extends Object;\n// Encryption key with metadata.\npublic static class EncryptionContext.EncryptionKey extends Object;\n", "des": "Common data classes used in the Pulsar Client API."}
{"index": 2377, "repo": "pulsar-client-api-3.0.0", "code": "package classification\n\n// Annotation to inform users of a package, class or method's intended audience.\n@Public @Stable public class InterfaceAudience extends Object;\n// Intended for use only within the project(s) specified in the annotation.\n@Documented @Retention(RUNTIME) public static @interface InterfaceAudience.LimitedPrivate;\n// Intended for use only within the project itself.\n@Documented @Retention(RUNTIME) public static @interface InterfaceAudience.Private;\n", "des": "Annotations used across the whole project."}
{"index": 2378, "repo": "pulsar-client-api-3.0.0", "code": "package schema\n\n// A simple KeyValue class.\n@Public @Stable public class KeyValue<K,V> extends Object;\n// Decoder to decode key/value bytes.\n@FunctionalInterface public static interface KeyValue.KeyValueDecoder<K,V>;\n// Encoding types of supported KeyValueSchema for Pulsar messages.\n@Public @Stable public enum KeyValueEncodingType extends Enum<KeyValueEncodingType>;\n// Information about the schema.\n@Public @Stable public interface SchemaInfo;\n", "des": "This package contains data structures for schema definitions used in the Pulsar Client API."}
{"index": 2379, "repo": "spring-batch-core-5.0.2", "code": "package core\n\n// Enumeration representing the status of an execution.\npublic enum BatchStatus extends Enum<BatchStatus>;\n// Listener interface for the lifecycle of a chunk.\npublic interface ChunkListener extends StepListener;\n// Default implementation of the JobKeyGenerator interface.\npublic class DefaultJobKeyGenerator extends Object implements JobKeyGenerator<JobParameters>;\n// Batch Domain Entity class.\npublic class Entity extends Object implements Serializable;\n", "des": "Core domain context for Spring Batch covering jobs, steps, configuration and execution abstractions."}
{"index": 2380, "repo": "spring-batch-core-5.0.2", "code": "package annotation\n\n// Marks a method to be called after a chunk is executed. Expected signature: void afterChunk(ChunkContext context)\n@Retention(RUNTIME) @Target(METHOD) public @interface AfterChunk;\n// Marks a method to be called after a chunk has failed and been marked for rollback. Expected signature: void afterFailedChunk(ChunkContext context)\n@Retention(RUNTIME) @Target(METHOD) public @interface AfterChunkError;\n", "des": "Annotations for java based configuration of listeners."}
{"index": 2381, "repo": "spring-batch-core-5.0.2", "code": "package configuration\n\n// Represents that an error has occurred in the configuration of the base batch infrastructure (the creation of a JobRepository, for example).\npublic class BatchConfigurationException extends RuntimeException;\n// Checked exception that indicates a name clash when registering Job instances.\npublic class DuplicateJobException extends JobExecutionException;\n// Strategy for creating a single job.\npublic interface JobFactory;\n", "des": "Interfaces for registration and location of job configurations."}
{"index": 2382, "repo": "spring-batch-core-5.0.2", "code": "package annotation\n\n// Bean post processor that configures observable batch artifacts (jobs and steps) with Micrometer's observation registry.\npublic class BatchObservabilityBeanPostProcessor extends Object implements org.springframework.beans.factory.config.BeanFactoryPostProcessor, org.springframework.beans.factory.config.BeanPostProcessor;\n", "des": "Annotations and builder factories for java based configuration"}
{"index": 2383, "repo": "spring-batch-core-5.0.2", "code": "package support\n\n// ApplicationContextFactory implementation that takes a parent context and a path to the context to create.\npublic abstract class AbstractApplicationContextFactory extends Object implements ApplicationContextFactory, org.springframework.context.ApplicationContextAware;\n// Factory for the creation of ApplicationContext instances.\npublic interface ApplicationContextFactory;\n", "des": "Specific implementations of configuration concerns."}
{"index": 2384, "repo": "spring-batch-core-5.0.2", "code": "package xml\n\n// \npublic abstract class AbstractFlowParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;\n// \npublic abstract class AbstractListenerParser extends Object;\n// Internal parser for the <step/> elements inside a job.\npublic abstract class AbstractStepParser extends Object;\n// \npublic class BeanDefinitionUtils extends Object;\n// Internal parser for the <chunk/> element inside a step.\npublic class ChunkElementParser extends Object;\n", "des": "Parsers for XML based configuration"}
{"index": 2385, "repo": "spring-batch-core-5.0.2", "code": "package converter\n\n// Converter implementation from Date to String.\npublic class DateToStringConverter extends Object implements org.springframework.core.convert.converter.Converter<Date,String>;\n// Converter for JobParameters instances that uses a simple naming convention for converting job parameters.\npublic class DefaultJobParametersConverter extends Object implements JobParametersConverter;\n", "des": "Support classes for implementations of the batch APIs."}
{"index": 2386, "repo": "spring-batch-core-5.0.2", "code": "package explore\n\n// Entry point for browsing the executions of running or historical jobs and steps.\npublic interface JobExplorer;\n", "des": "Interfaces and related classes to support meta data browsing."}
{"index": 2387, "repo": "spring-batch-core-5.0.2", "code": "package support\n\n// A FactoryBean that automates the creation of a SimpleJobExplorer.\npublic abstract class AbstractJobExplorerFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<JobExplorer>, org.springframework.beans.factory.InitializingBean;\n", "des": "Specific implementations of explorer concerns."}
{"index": 2388, "repo": "spring-batch-core-5.0.2", "code": "package job\n\n// Abstract implementation of the Job interface.\npublic abstract class AbstractJob extends Object implements Job, StepLocator, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean;\n// Composite JobParametersValidator that passes the job parameters through a sequence of injected JobParametersValidators\npublic class CompositeJobParametersValidator extends Object implements JobParametersValidator, org.springframework.beans.factory.InitializingBean;\n", "des": "Specific implementations of job concerns."}
{"index": 2389, "repo": "spring-batch-core-5.0.2", "code": "package builder\n\n// A builder for a flow of steps that can be executed as a job or as part of a job.\npublic class FlowBuilder<Q> extends Object;\n// A builder for building a split state.\npublic static class FlowBuilder.SplitBuilder<Q> extends Object;\n// A builder for transitions within a flow.\npublic static class FlowBuilder.TransitionBuilder<Q> extends Object;\n// A builder for continuing a flow from a decision state.\npublic static class FlowBuilder.UnterminatedFlowBuilder<Q> extends Object;\n", "des": "Job and flow level builders for java based configuration of batch jobs"}
{"index": 2390, "repo": "spring-batch-core-5.0.2", "code": "package flow\n\n// \npublic interface Flow;\n// \npublic class FlowExecution extends Object implements Comparable<FlowExecution>;\n// \npublic class FlowExecutionException extends Exception;\n// Represents the status of FlowExecution.\npublic class FlowExecutionStatus extends Object implements Comparable<FlowExecutionStatus>;\n// Context and execution strategy for FlowJob to allow it to delegate its execution step by step.\npublic interface FlowExecutor;\n", "des": "Flow related constructs including Flow interface, executors, and related exceptions"}
{"index": 2391, "repo": "spring-batch-core-5.0.2", "code": "package support\n\n// Sorts by decreasing specificity of pattern, based on just counting wildcards (with * taking precedence over ?).\npublic class DefaultStateTransitionComparator extends Object implements Comparator<StateTransition>;\n// A Flow that branches conditionally depending on the exit status of the last State.\npublic class SimpleFlow extends Object implements Flow, org.springframework.beans.factory.InitializingBean;\n", "des": "Basic implementations of flow constructs"}
{"index": 2392, "repo": "spring-batch-core-5.0.2", "code": "package state\n\n// \npublic abstract class AbstractState extends Object implements State;\n// State that requires a decider to make the status decision.\npublic class DecisionState extends AbstractState;\n// State implementation for ending a job if it is in progress and continuing if just starting.\npublic class EndState extends AbstractState;\n// Strategy interface for aggregating FlowExecution instances into a single exit status.\npublic interface FlowExecutionAggregator;\n", "des": "States used in defining the underlying Spring Batch state machine"}
{"index": 2393, "repo": "spring-batch-core-5.0.2", "code": "package launch\n\n// Checked exception to indicate that user asked for a job execution to be resumed when actually it didn't fail.\npublic class JobExecutionNotFailedException extends JobExecutionException;\n// Checked exception indicating that a JobExecution that is not currently running has been requested to stop.\npublic class JobExecutionNotRunningException extends JobExecutionException;\n", "des": "Interfaces and simple implementations of launch concerns."}
{"index": 2394, "repo": "spring-batch-core-5.0.2", "code": "package support\n\n// Basic launcher for starting jobs from the command line.\npublic class CommandLineJobRunner extends Object;\n// This incrementer uses a DataFieldMaxValueIncrementer to generate the sequence of values to use as job instance discriminator.\npublic class DataFieldMaxValueJobParametersIncrementer extends Object implements JobParametersIncrementer;\n", "des": "Support classes for use in bootstrap and launch implementations or configurations."}
{"index": 2395, "repo": "spring-batch-core-5.0.2", "code": "package listener\n\n// FactoryBean implementation that builds a listener based on the various lifecycle methods or annotations that are provided.\npublic abstract class AbstractListenerFactoryBean<T> extends Object implements org.springframework.beans.factory.FactoryBean<Object>, org.springframework.beans.factory.InitializingBean;\n// \n@Deprecated public class ChunkListenerSupport extends Object implements ChunkListener;\n// \npublic class CompositeChunkListener extends Object implements ChunkListener;\n", "des": "Generic implementations of core batch listener interfaces."}
{"index": 2396, "repo": "spring-batch-core-5.0.2", "code": "package observability\n\n// Observation context for batch jobs.\npublic class BatchJobContext extends io.micrometer.observation.Observation.Context implements Supplier<BatchJobContext>;\n// Observation created around a Job execution.\npublic enum BatchJobObservation extends Enum<BatchJobObservation> implements io.micrometer.observation.docs.ObservationDocumentation;\n", "des": "This package contains APIs related to batch observability."}
{"index": 2397, "repo": "spring-batch-core-5.0.2", "code": "package partition\n\n// Interface defining the responsibilities of controlling the execution of a partitioned StepExecution.\n@FunctionalInterface public interface PartitionHandler;\n// Strategy interface for generating input contexts for a partitioned step execution independent from the fabric they are going to run on.\npublic interface StepExecutionSplitter;\n", "des": "Interfaces for partitioning components."}
{"index": 2398, "repo": "spring-batch-core-5.0.2", "code": "package support\n\n// Base PartitionHandler implementation providing common base features.\npublic abstract class AbstractPartitionHandler extends Object implements PartitionHandler;\n// Convenience class for aggregating a set of StepExecution instances into a single result.\npublic class DefaultStepExecutionAggregator extends Object implements StepExecutionAggregator;\n", "des": "Implementation of common partition components."}
{"index": 2399, "repo": "spring-batch-core-5.0.2", "code": "package repository\n\n// A composite interface that combines both serialization and deserialization of an execution context into a single implementation.\npublic interface ExecutionContextSerializer extends org.springframework.core.serializer.Serializer<Map<String,Object>>, org.springframework.core.serializer.Deserializer<Map<String,Object>>;\n// \npublic class JobExecutionAlreadyRunningException extends JobExecutionException;\n", "des": "Interfaces and generic implementations of repository concerns."}
{"index": 2400, "repo": "spring-batch-core-5.0.2", "code": "package dao\n\n// Encapsulates common functionality needed by JDBC batch metadata DAOs - provides jdbcTemplate for subclasses and handles table prefixes.\npublic abstract class AbstractJdbcBatchMetadataDao extends Object implements org.springframework.beans.factory.InitializingBean;\n// An implementation of the ExecutionContextSerializer that produces/consumes Base64 content.\npublic class DefaultExecutionContextSerializer extends Object implements ExecutionContextSerializer;\n", "des": "Specific implementations of dao concerns."}
{"index": 2401, "repo": "spring-batch-core-5.0.2", "code": "package support\n\n// A FactoryBean that automates the creation of a SimpleJobRepository.\npublic abstract class AbstractJobRepositoryFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<JobRepository>, org.springframework.beans.factory.InitializingBean;\n", "des": "Specific implementations of repository concerns."}
{"index": 2402, "repo": "spring-batch-core-5.0.2", "code": "package scope\n\n// ScopeSupport.\npublic abstract class BatchScopeSupport extends Object implements org.springframework.beans.factory.config.Scope, org.springframework.beans.factory.config.BeanFactoryPostProcessor, org.springframework.core.Ordered;\n// Helper class to scan a bean definition hierarchy and force the use of auto-proxy for step scoped beans.\nprotected static class BatchScopeSupport.Scopifier extends org.springframework.beans.factory.config.BeanDefinitionVisitor;\n", "des": "Implementation of Spring Batch specific bean scopes (Job and Step)."}
{"index": 2403, "repo": "spring-batch-core-5.0.2", "code": "package context\n\n// Context object for weakly typed data stored for the duration of a chunk (usually a group of items processed together in a transaction).\npublic class ChunkContext extends org.springframework.core.AttributeAccessorSupport;\n// A context object that can be used to interrogate the current JobExecution and some of its associated properties using expressions based on bean paths.\npublic class JobContext extends SynchronizedAttributeAccessor;\n", "des": "Implementation of the contexts for each of the custom bean scopes in Spring Batch (Job and Step)."}
{"index": 2404, "repo": "spring-batch-core-5.0.2", "code": "package step\n\n// A Step implementation that provides common behavior to subclasses, including registering and calling listeners.\npublic abstract class AbstractStep extends Object implements Step, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.BeanNameAware;\n// \npublic class FatalStepExecutionException extends UnexpectedJobExecutionException;\n", "des": "Specific implementations of step concerns."}
{"index": 2405, "repo": "spring-batch-core-5.0.2", "code": "package builder\n\n// Base class for step builders that want to build a TaskletStep.\npublic abstract class AbstractTaskletStepBuilder<B extends AbstractTaskletStepBuilder<B>> extends StepBuilderHelper<B>;\n// A step builder for fully fault tolerant chunk-oriented item processing steps.\npublic class FaultTolerantStepBuilder<I,O> extends SimpleStepBuilder<I,O>;\n// A step builder for FlowStep instances.\npublic class FlowStepBuilder extends StepBuilderHelper<FlowStepBuilder>;\n", "des": "Step level builders for java based job configuration."}
{"index": 2406, "repo": "spring-batch-core-5.0.2", "code": "package factory\n\n// Factory bean for step that provides options for configuring skip behavior.\npublic class FaultTolerantStepFactoryBean<T,S> extends SimpleStepFactoryBean<T,S>;\n// Most common configuration options for simple steps should be found here.\npublic class SimpleStepFactoryBean<T,S> extends Object implements org.springframework.beans.factory.FactoryBean<Step>, org.springframework.beans.factory.BeanNameAware;\n", "des": "Factories for step level components."}
{"index": 2407, "repo": "spring-batch-core-5.0.2", "code": "package item\n\n// A special purpose retry template that deals specifically with multi-valued stateful retry.\npublic class BatchRetryTemplate extends Object implements org.springframework.retry.RetryOperations;\n// Manage the offset data between the last successful commit and updates made to an input chunk.\npublic class ChunkMonitor extends ItemStreamSupport;\n// \npublic static class ChunkMonitor.ChunkMonitorData extends Object;\n", "des": "Specific implementations of step concerns for item-oriented approach."}
{"index": 2408, "repo": "spring-batch-core-5.0.2", "code": "package job\n\n// Simple implementation of JobParametersExtractor which pulls parameters with named keys out of the step execution context and the job parameters of the surrounding job.\npublic class DefaultJobParametersExtractor extends Object implements JobParametersExtractor;\n// Strategy interface for translating a StepExecution into JobParameters.\n@FunctionalInterface public interface JobParametersExtractor;\n// A Step that delegates to a Job to do its work.\npublic class JobStep extends AbstractStep;\n", "des": "JobStep and related components."}
{"index": 2409, "repo": "spring-batch-core-5.0.2", "code": "package skip\n\n// Implementation of the SkipPolicy interface that will always return that an item should be skipped.\npublic class AlwaysSkipItemSkipPolicy extends Object implements SkipPolicy;\n// \npublic class CompositeSkipPolicy extends Object implements SkipPolicy;\n// A SkipPolicy that depends on an exception classifier to make its decision, and then delegates to the classifier result.\npublic class ExceptionClassifierSkipPolicy extends Object implements SkipPolicy;\n", "des": "Specific implementations of skip concerns for items in a step."}
{"index": 2410, "repo": "spring-batch-core-5.0.2", "code": "package tasklet\n\n// Adapts a Callable<RepeatStatus> to the Tasklet interface.\npublic class CallableTaskletAdapter extends Object implements Tasklet, org.springframework.beans.factory.InitializingBean;\n// Strategy interface for executing commands.\npublic interface CommandRunner;\n// Maps exit codes to ExitStatus according to injected map.\npublic class ConfigurableSystemProcessExitCodeMapper extends Object implements SystemProcessExitCodeMapper;\n", "des": "Interfaces and generic implementations of tasklet concerns."}
{"index": 2411, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package autoconfigure\n\n// Base endpoint element condition.\npublic abstract class OnEndpointElementCondition extends org.springframework.boot.autoconfigure.condition.SpringBootCondition;\n", "des": "Classes for general actuator auto-configuration concerns."}
{"index": 2412, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package amqp\n\n", "des": "Auto-configuration for actuator AMQP concerns."}
{"index": 2413, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package audit\n\n// Auto-configuration for AuditEvents.\n@AutoConfiguration @ConditionalOnBean(org.springframework.boot.actuate.audit.AuditEventRepository.class) @ConditionalOnProperty(prefix=\"management.auditevents\", name=\"enabled\", matchIfMissing=true) public class AuditAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator audit concerns."}
{"index": 2414, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package availability\n\n// Auto-configuration for AvailabilityStateHealthIndicator.\n@AutoConfiguration(after=org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration.class) public class AvailabilityHealthContributorAutoConfiguration extends Object;\n", "des": "Auto-configuration that extends health endpoints so that they can be used as availability probes."}
{"index": 2415, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package beans\n\n// Auto-configuration for the BeansEndpoint.\n@AutoConfiguration @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.beans.BeansEndpoint.class) public class BeansEndpointAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator Spring Bean concerns."}
{"index": 2416, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package cache\n\n// Auto-configuration for CachesEndpoint.\n@AutoConfiguration(after=org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration.class) @ConditionalOnClass(org.springframework.cache.CacheManager.class) @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.cache.CachesEndpoint.class) public class CachesEndpointAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator cache concerns."}
{"index": 2417, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package cassandra\n\n", "des": "Auto-configuration for actuator Cassandra concerns."}
{"index": 2418, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package cloudfoundry\n\n// The specific access level granted to the cloud foundry user that's calling the endpoints.\npublic enum AccessLevel extends Enum<AccessLevel>;\n// Authorization exceptions thrown to limit access to the endpoints.\npublic class CloudFoundryAuthorizationException extends RuntimeException;\n// Reasons why the exception can be thrown.\npublic static enum CloudFoundryAuthorizationException.Reason extends Enum<CloudFoundryAuthorizationException.Reason>;\n", "des": "Auto-configuration for actuator Cloud Foundry concerns."}
{"index": 2419, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package reactive\n\n// Reactive @EndpointExtension for the HealthEndpoint that always exposes full health details.\n@EndpointCloudFoundryExtension(endpoint=org.springframework.boot.actuate.health.HealthEndpoint.class) public class CloudFoundryReactiveHealthEndpointWebExtension extends Object;\n", "des": "Auto-configuration for actuator Cloud Foundry concerns using WebFlux."}
{"index": 2420, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package servlet\n\n", "des": "Auto-configuration for actuator Cloud Foundry concerns using Spring MVC."}
{"index": 2421, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package condition\n\n// @Endpoint to expose the ConditionEvaluationReport.\n@Endpoint(id=\"conditions\") public class ConditionsReportEndpoint extends Object;\n// A description of an application's condition evaluation.\npublic static final class ConditionsReportEndpoint.ConditionsDescriptor extends Object implements org.springframework.boot.actuate.endpoint.OperationResponseBody;\n", "des": "Auto-configuration for actuator condition concerns."}
{"index": 2422, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package context\n\n// Auto-configuration for the ShutdownEndpoint.\n@AutoConfiguration @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.context.ShutdownEndpoint.class) public class ShutdownEndpointAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator Spring Context concerns."}
{"index": 2423, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package properties\n\n// Auto-configuration for the ConfigurationPropertiesReportEndpoint.\n@AutoConfiguration @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint.class) @EnableConfigurationProperties(ConfigurationPropertiesReportEndpointProperties.class) public class ConfigurationPropertiesReportEndpointAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator property concerns."}
{"index": 2424, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package couchbase\n\n", "des": "Auto-configuration for actuator Couchbase concerns."}
{"index": 2425, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package elasticsearch\n\n", "des": "Auto-configuration for actuator Elasticsearch concerns dependent on Spring Data."}
{"index": 2426, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package mongo\n\n", "des": "Auto-configuration for actuator MongoDB concerns dependent on Spring Data."}
{"index": 2427, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package redis\n\n", "des": "Auto-configuration for actuator Redis concerns dependent on Spring Data."}
{"index": 2428, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package elasticsearch\n\n", "des": "Auto-configuration for actuator Elasticsearch concerns."}
{"index": 2429, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package endpoint\n\n// Auto-configuration for @Endpoint support.\n@AutoConfiguration public class EndpointAutoConfiguration extends Object;\n", "des": "Core classes for actuator endpoint auto-configuration."}
{"index": 2430, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package condition\n\n// @Conditional that checks whether an endpoint is available.\n@Retention(RUNTIME) @Target({METHOD,TYPE}) @Documented @Conditional(org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition.class) public @interface ConditionalOnAvailableEndpoint;\n", "des": "Actuator endpoint auto-configuration conditions."}
{"index": 2431, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package expose\n\n// Technologies that can be used to expose an endpoint.\npublic enum EndpointExposure extends Enum<EndpointExposure>;\n// EndpointFilter that will filter endpoints based on include and exclude patterns.\npublic class IncludeExcludeEndpointFilter<E extends org.springframework.boot.actuate.endpoint.ExposableEndpoint<?>> extends Object implements org.springframework.boot.actuate.endpoint.EndpointFilter<E>;\n", "des": "Endpoint exposure logic used for auto-configuration and conditions."}
{"index": 2432, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package jackson\n\n// Auto-configuration for Endpoint Jackson support.\n@Configuration(proxyBeanMethods=false) @AutoConfigureAfter(org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration.class) public class JacksonEndpointAutoConfiguration extends Object;\n", "des": "Actuator Jackson auto-configuration."}
{"index": 2433, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package jmx\n\n// Auto-configuration for JMX @Endpoint support.\n@AutoConfiguration(after={org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration.class,EndpointAutoConfiguration.class}) @EnableConfigurationProperties({JmxEndpointProperties.class,org.springframework.boot.autoconfigure.jmx.JmxProperties.class}) @ConditionalOnProperty(prefix=\"spring.jmx\", name=\"enabled\", havingValue=\"true\") public class JmxEndpointAutoConfiguration extends Object;\n", "des": "Actuator JMX endpoint auto-configuration."}
{"index": 2434, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package web\n\n// Configuration properties for web endpoints' CORS support.\n@ConfigurationProperties(prefix=\"management.endpoints.web.cors\") public class CorsEndpointProperties extends Object;\n// @ManagementContextConfiguration for servlet endpoints.\n@ManagementContextConfiguration(proxyBeanMethods=false) @ConditionalOnWebApplication(type=SERVLET) public class ServletEndpointManagementContextConfiguration extends Object;\n", "des": "Auto-configuration for the Actuator's web endpoints."}
{"index": 2435, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package reactive\n\n", "des": "Auto-configuration for exposing actuator web endpoints using WebFlux."}
{"index": 2436, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package servlet\n\n", "des": "Auto-configuration for exposing actuator web endpoints using Spring MVC."}
{"index": 2437, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package env\n\n// Auto-configuration for the EnvironmentEndpoint.\n@AutoConfiguration @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.env.EnvironmentEndpoint.class) @EnableConfigurationProperties(EnvironmentEndpointProperties.class) public class EnvironmentEndpointAutoConfiguration extends Object;\n// Configuration properties for EnvironmentEndpoint.\n@ConfigurationProperties(\"management.endpoint.env\") public class EnvironmentEndpointProperties extends Object;\n", "des": "Auto-configuration for actuator Spring Environment concerns."}
{"index": 2438, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package flyway\n\n// Auto-configuration for FlywayEndpoint.\n@AutoConfiguration(after=org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration.class) @ConditionalOnClass(org.flywaydb.core.Flyway.class) @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.flyway.FlywayEndpoint.class) public class FlywayEndpointAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator Flyway concerns."}
{"index": 2439, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package hazelcast\n\n", "des": "Auto-configuration for actuator Hazelcast concerns."}
{"index": 2440, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package health\n\n// Base class for health contributor configurations that can combine source beans into a composite.\npublic abstract class AbstractCompositeHealthContributorConfiguration<C,I extends C,B> extends Object;\n", "des": "Auto-configuration for actuator health concerns."}
{"index": 2441, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package influx\n\n// Auto-configuration for InfluxDbHealthIndicator.\n@AutoConfiguration(after=org.springframework.boot.autoconfigure.influx.InfluxDbAutoConfiguration.class) @ConditionalOnClass(org.influxdb.InfluxDB.class) @ConditionalOnBean(org.influxdb.InfluxDB.class) @ConditionalOnEnabledHealthIndicator(\"influxdb\") public class InfluxDbHealthContributorAutoConfiguration extends CompositeHealthContributorConfiguration<org.springframework.boot.actuate.influx.InfluxDbHealthIndicator,org.influxdb.InfluxDB>;\n", "des": "Auto-configuration for actuator InfluxDB concerns."}
{"index": 2442, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package info\n\n// @Conditional that checks whether an info contributor is enabled.\n@Retention(RUNTIME) @Target({TYPE,METHOD}) @Documented @Conditional(org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition.class) public @interface ConditionalOnEnabledInfoContributor;\n", "des": "Auto-configuration for actuator info concerns."}
{"index": 2443, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package integration\n\n", "des": "Auto-configuration for actuator Spring Integration concerns."}
{"index": 2444, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package jdbc\n\n", "des": "Auto-configuration for actuator JDBC concerns."}
{"index": 2445, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package jms\n\n", "des": "Auto-configuration for actuator JMS concerns."}
{"index": 2446, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package ldap\n\n", "des": "Auto-configuration for actuator LDAP concerns."}
{"index": 2447, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package liquibase\n\n// Auto-configuration for LiquibaseEndpoint.\n@AutoConfiguration(after=org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration.class) @ConditionalOnClass(liquibase.integration.spring.SpringLiquibase.class) @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.liquibase.LiquibaseEndpoint.class) public class LiquibaseEndpointAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator Liquibase concerns."}
{"index": 2448, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package logging\n\n// Auto-configuration for LogFileWebEndpoint.\n@AutoConfiguration @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.logging.LogFileWebEndpoint.class) @EnableConfigurationProperties(LogFileWebEndpointProperties.class) public class LogFileWebEndpointAutoConfiguration extends Object;\n// Configuration properties for LogFileWebEndpoint.\n@ConfigurationProperties(prefix=\"management.endpoint.logfile\") public class LogFileWebEndpointProperties extends Object;\n", "des": "Auto-configuration for actuator logging concerns."}
{"index": 2449, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package mail\n\n", "des": "Auto-configuration for actuator JavaMail concerns."}
{"index": 2450, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package management\n\n// Auto-configuration for HeapDumpWebEndpoint.\n@AutoConfiguration @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.management.HeapDumpWebEndpoint.class) public class HeapDumpWebEndpointAutoConfiguration extends Object;\n// Auto-configuration for the ThreadDumpEndpoint.\n@AutoConfiguration @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.management.ThreadDumpEndpoint.class) public class ThreadDumpEndpointAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator management concerns."}
{"index": 2451, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package metrics\n\n// Nested configuration properties for items that are automatically timed.\npublic final class AutoTimeProperties extends Object;\n", "des": "Auto-configuration for actuator metrics and Micrometer."}
{"index": 2452, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package amqp\n\n", "des": "Auto-configuration for RabbitMQ metrics."}
{"index": 2453, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package cache\n\n", "des": "Auto-configuration for cache metrics."}
{"index": 2454, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package data\n\n// Auto-configuration for Spring Data Repository metrics.\n@AutoConfiguration(after={MetricsAutoConfiguration.class,CompositeMeterRegistryAutoConfiguration.class,SimpleMetricsExportAutoConfiguration.class}) @ConditionalOnClass(org.springframework.data.repository.Repository.class) @ConditionalOnBean(io.micrometer.core.instrument.MeterRegistry.class) @EnableConfigurationProperties(MetricsProperties.class) public class RepositoryMetricsAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Data actuator metrics."}
{"index": 2455, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package export\n\n// @Conditional that checks whether a metrics exporter is enabled.\n@Retention(RUNTIME) @Target({TYPE,METHOD}) @Documented @Conditional(org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition.class) public @interface ConditionalOnEnabledMetricsExport;\n", "des": "Auto-configuration for metrics exporter."}
{"index": 2456, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package appoptics\n\n", "des": "Support for exporting actuator metrics to AppOptics."}
{"index": 2457, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package atlas\n\n", "des": "Support for exporting actuator metrics to Atlas."}
{"index": 2458, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package datadog\n\n", "des": "Support for exporting actuator metrics to Datadog."}
{"index": 2459, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package dynatrace\n\n", "des": "Support for exporting actuator metrics to Dynatrace."}
{"index": 2460, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package elastic\n\n", "des": "Support for exporting actuator metrics to Elastic."}
{"index": 2461, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package ganglia\n\n", "des": "Support for exporting actuator metrics to Ganglia."}
{"index": 2462, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package graphite\n\n", "des": "Support for exporting actuator metrics to Graphite."}
{"index": 2463, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package humio\n\n", "des": "Support for exporting actuator metrics to Humio."}
{"index": 2464, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package influx\n\n", "des": "Support for exporting actuator metrics to InfluxDB."}
{"index": 2465, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package jmx\n\n// Auto-configuration for exporting metrics to JMX.\n@AutoConfiguration(before={CompositeMeterRegistryAutoConfiguration.class,SimpleMetricsExportAutoConfiguration.class}, after=MetricsAutoConfiguration.class) @ConditionalOnBean(io.micrometer.core.instrument.Clock.class) @ConditionalOnClass(io.micrometer.jmx.JmxMeterRegistry.class) @ConditionalOnEnabledMetricsExport(\"jmx\") @EnableConfigurationProperties(JmxProperties.class) public class JmxMetricsExportAutoConfiguration extends Object;\n", "des": "Support for exporting actuator metrics to JMX."}
{"index": 2466, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package kairos\n\n", "des": "Support for exporting actuator metrics to KairosDB."}
{"index": 2467, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package newrelic\n\n", "des": "Support for exporting actuator metrics to New Relic."}
{"index": 2468, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package otlp\n\n", "des": "Support for exporting actuator metrics to OTLP."}
{"index": 2469, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package prometheus\n\n", "des": "Support for exporting actuator metrics to Prometheus."}
{"index": 2470, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package properties\n\n// Base class for properties to config adapters.\npublic class PropertiesConfigAdapter<T> extends Object;\n// Base class for properties that configure a metrics registry that pushes aggregated metrics on a regular interval.\npublic abstract class PushRegistryProperties extends Object;\n", "des": "Base properties and adapters used when exporting actuator metrics."}
{"index": 2471, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package signalfx\n\n", "des": "Support for exporting actuator metrics to SignalFX."}
{"index": 2472, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package simple\n\n// Auto-configuration for exporting metrics to a SimpleMeterRegistry.\n@AutoConfiguration(before=CompositeMeterRegistryAutoConfiguration.class, after=MetricsAutoConfiguration.class) @ConditionalOnBean(io.micrometer.core.instrument.Clock.class) @EnableConfigurationProperties(SimpleProperties.class) @ConditionalOnMissingBean(io.micrometer.core.instrument.MeterRegistry.class) @ConditionalOnEnabledMetricsExport(\"simple\") public class SimpleMetricsExportAutoConfiguration extends Object;\n", "des": "Support for exporting actuator metrics to a simple in-memory store."}
{"index": 2473, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package stackdriver\n\n", "des": "Support for exporting actuator metrics to Stackdriver."}
{"index": 2474, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package statsd\n\n", "des": "Support for exporting actuator metrics to StatsD."}
{"index": 2475, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package wavefront\n\n", "des": "Support for exporting actuator metrics to Wavefront."}
{"index": 2476, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package jdbc\n\n", "des": "Auto-configuration for JPA metrics."}
{"index": 2477, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package jersey\n\n", "des": "Auto-configuration for Jersey actuator metrics."}
{"index": 2478, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package mongo\n\n// Auto-configuration for Mongo metrics.\n@AutoConfiguration(before=org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration.class, after={MetricsAutoConfiguration.class,CompositeMeterRegistryAutoConfiguration.class}) @ConditionalOnClass(com.mongodb.MongoClientSettings.class) @ConditionalOnBean(io.micrometer.core.instrument.MeterRegistry.class) public class MongoMetricsAutoConfiguration extends Object;\n", "des": "Auto-configuration for Mongo metrics."}
{"index": 2479, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package jpa\n\n", "des": "Auto-configuration for JPA metrics."}
{"index": 2480, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package r2dbc\n\n", "des": "Auto-configuration for R2DBC metrics."}
{"index": 2481, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package redis\n\n// Auto-configuration for Lettuce metrics.\n@AutoConfiguration(before=org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration.class, after={MetricsAutoConfiguration.class,CompositeMeterRegistryAutoConfiguration.class}) @ConditionalOnClass({io.lettuce.core.RedisClient.class,io.lettuce.core.metrics.MicrometerCommandLatencyRecorder.class}) @ConditionalOnBean(io.micrometer.core.instrument.MeterRegistry.class) public class LettuceMetricsAutoConfiguration extends Object;\n", "des": "Auto-configuration for Redis metrics."}
{"index": 2482, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package startup\n\n// Auto-configuration for startup time metrics.\n@AutoConfiguration(after={MetricsAutoConfiguration.class,CompositeMeterRegistryAutoConfiguration.class}) @ConditionalOnClass(io.micrometer.core.instrument.MeterRegistry.class) @ConditionalOnBean(io.micrometer.core.instrument.MeterRegistry.class) public class StartupTimeMetricsListenerAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator startup time metrics."}
{"index": 2483, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package task\n\n", "des": "Auto-configuration for task execution and scheduling metrics."}
{"index": 2484, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package jetty\n\n// Auto-configuration for Jetty metrics.\n@AutoConfiguration(after=CompositeMeterRegistryAutoConfiguration.class) @ConditionalOnWebApplication @ConditionalOnClass({io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics.class,org.eclipse.jetty.server.Server.class}) @ConditionalOnBean(io.micrometer.core.instrument.MeterRegistry.class) public class JettyMetricsAutoConfiguration extends Object;\n", "des": "Auto-configuration for Jetty actuator metrics."}
{"index": 2485, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package tomcat\n\n// Auto-configuration for TomcatMetrics.\n@AutoConfiguration(after=CompositeMeterRegistryAutoConfiguration.class) @ConditionalOnWebApplication @ConditionalOnClass({io.micrometer.core.instrument.binder.tomcat.TomcatMetrics.class,org.apache.catalina.Manager.class}) public class TomcatMetricsAutoConfiguration extends Object;\n", "des": "Auto-configuration for Tomcat actuator metrics."}
{"index": 2486, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package neo4j\n\n", "des": "Auto-configuration for actuator Neo4J concerns."}
{"index": 2487, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package observation\n\n// Auto-configuration for the Micrometer Observation API.\n@AutoConfiguration(after={CompositeMeterRegistryAutoConfiguration.class,MicrometerTracingAutoConfiguration.class}) @ConditionalOnClass(io.micrometer.observation.ObservationRegistry.class) @EnableConfigurationProperties(ObservationProperties.class) public class ObservationAutoConfiguration extends Object;\n", "des": "Auto-configuration for the Micrometer Observation API."}
{"index": 2488, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package batch\n\n// Auto-configuration for instrumentation of Spring Batch Jobs.\n@AutoConfiguration(after=ObservationAutoConfiguration.class) @ConditionalOnBean(io.micrometer.observation.ObservationRegistry.class) @ConditionalOnClass({io.micrometer.observation.ObservationRegistry.class,org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor.class}) public class BatchObservationAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Batch observations."}
{"index": 2489, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package graphql\n\n// Auto-configuration for instrumentation of Spring GraphQL endpoints.\n@AutoConfiguration(after=ObservationAutoConfiguration.class) @ConditionalOnBean(io.micrometer.observation.ObservationRegistry.class) @ConditionalOnClass({graphql.GraphQL.class,org.springframework.graphql.execution.GraphQlSource.class,io.micrometer.observation.Observation.class}) public class GraphQlObservationAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring GraphQL observations."}
{"index": 2490, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package client\n\n", "des": "Auto-configuration for web client observation support."}
{"index": 2491, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package reactive\n\n", "des": "Auto-configuration for WebFlux actuator observations."}
{"index": 2492, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package servlet\n\n", "des": "Auto-configuration for Spring MVC observation support."}
{"index": 2493, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package quartz\n\n// Auto-configuration for QuartzEndpoint.\n@AutoConfiguration(after=org.springframework.boot.autoconfigure.quartz.QuartzAutoConfiguration.class) @ConditionalOnClass(org.quartz.Scheduler.class) @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.quartz.QuartzEndpoint.class) @EnableConfigurationProperties(QuartzEndpointProperties.class) public class QuartzEndpointAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator Quartz Scheduler concerns."}
{"index": 2494, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package r2dbc\n\n", "des": "Auto-configuration for actuator R2DBC."}
{"index": 2495, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package scheduling\n\n// Auto-configuration for ScheduledTasksEndpoint.\n@AutoConfiguration @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint.class) public class ScheduledTasksEndpointAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator scheduling concerns."}
{"index": 2496, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package reactive\n\n// Factory that can be used to create a ServerWebExchangeMatcher for actuator endpoint locations.\npublic final class EndpointRequest extends Object;\n// The ServerWebExchangeMatcher used to match against actuator endpoints.\npublic static final class EndpointRequest.EndpointServerWebExchangeMatcher extends org.springframework.boot.security.reactive.ApplicationContextServerWebExchangeMatcher<T>;\n", "des": "Auto-configuration for actuator security using WebFlux."}
{"index": 2497, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package servlet\n\n// Factory that can be used to create a RequestMatcher for actuator endpoint locations.\npublic final class EndpointRequest extends Object;\n// The request matcher used to match against actuator endpoints.\npublic static final class EndpointRequest.EndpointRequestMatcher extends org.springframework.boot.security.servlet.ApplicationContextRequestMatcher<org.springframework.web.context.WebApplicationContext>;\n", "des": "Auto-configuration for actuator security using Spring MVC."}
{"index": 2498, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package session\n\n// Auto-configuration for SessionsEndpoint.\n@AutoConfiguration(after=org.springframework.boot.autoconfigure.session.SessionAutoConfiguration.class) @ConditionalOnClass(org.springframework.session.FindByIndexNameSessionRepository.class) @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.session.SessionsEndpoint.class) public class SessionsEndpointAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator Spring Sessions concerns."}
{"index": 2499, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package startup\n\n// Auto-configuration for the StartupEndpoint.\n@AutoConfiguration @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.startup.StartupEndpoint.class) @Conditional(org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration.ApplicationStartupCondition.class) public class StartupEndpointAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator ApplicationStartup concerns."}
{"index": 2500, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package system\n\n// Auto-configuration for DiskSpaceHealthIndicator.\n@AutoConfiguration(before=HealthContributorAutoConfiguration.class) @ConditionalOnEnabledHealthIndicator(\"diskspace\") @EnableConfigurationProperties(DiskSpaceHealthIndicatorProperties.class) public class DiskSpaceHealthContributorAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator system concerns."}
{"index": 2501, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package tracing\n\n// Auto-configuration for Brave.\n@AutoConfiguration(before=MicrometerTracingAutoConfiguration.class) @ConditionalOnClass({brave.Tracer.class,io.micrometer.tracing.brave.bridge.BraveTracer.class}) @EnableConfigurationProperties(TracingProperties.class) @ConditionalOnEnabledTracing public class BraveAutoConfiguration extends Object;\n", "des": "Auto-configuration for Micrometer Tracing."}
{"index": 2502, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package otlp\n\n// Auto-configuration for OTLP.\n@AutoConfiguration @ConditionalOnEnabledTracing @ConditionalOnClass({io.micrometer.tracing.otel.bridge.OtelTracer.class,io.opentelemetry.sdk.trace.SdkTracerProvider.class,io.opentelemetry.api.OpenTelemetry.class,io.opentelemetry.exporter.otlp.http.trace.OtlpHttpSpanExporter.class}) @EnableConfigurationProperties(OtlpProperties.class) public class OtlpAutoConfiguration extends Object;\n", "des": "Auto-configuration for tracing with OTLP."}
{"index": 2503, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package prometheus\n\n// Auto-configuration for Prometheus Exemplars with Micrometer Tracing.\n@AutoConfiguration(before=PrometheusMetricsExportAutoConfiguration.class, after=MicrometerTracingAutoConfiguration.class) @ConditionalOnBean(io.micrometer.tracing.Tracer.class) @ConditionalOnClass({io.micrometer.tracing.Tracer.class,io.prometheus.client.exemplars.tracer.common.SpanContextSupplier.class}) @ConditionalOnEnabledTracing public class PrometheusExemplarsAutoConfiguration extends Object;\n", "des": "Auto-configuration for Prometheus Exemplars with Micrometer Tracing."}
{"index": 2504, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package wavefront\n\n", "des": "Auto-configuration for tracing with Wavefront."}
{"index": 2505, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package zipkin\n\n", "des": "Auto-configuration for tracing with Zipkin."}
{"index": 2506, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package wavefront\n\n// Auto-configuration for Wavefront common infrastructure.\n@AutoConfiguration @ConditionalOnClass({com.wavefront.sdk.common.application.ApplicationTags.class,com.wavefront.sdk.common.WavefrontSender.class}) @EnableConfigurationProperties(WavefrontProperties.class) public class WavefrontAutoConfiguration extends Object;\n// Configuration properties to configure Wavefront.\n@ConfigurationProperties(prefix=\"management.wavefront\") public class WavefrontProperties extends Object;\n", "des": "Classes shared between Wavefront tracing and metrics."}
{"index": 2507, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package web\n\n// Specialized @Configuration class that defines configuration specific for the management context.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Configuration public @interface ManagementContextConfiguration;\n// Factory for creating a separate management context when the management web server is running on a different port to the main application.\npublic final class ManagementContextFactory extends Object;\n", "des": "Core classes for auto-configuration of actuator web concerns."}
{"index": 2508, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package exchanges\n\n// Auto-configuration to record HTTP exchanges.\n@AutoConfiguration @ConditionalOnWebApplication @ConditionalOnProperty(prefix=\"management.httpexchanges.recording\", name=\"enabled\", matchIfMissing=true) @ConditionalOnBean(org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository.class) @EnableConfigurationProperties(HttpExchangesProperties.class) public class HttpExchangesAutoConfiguration extends Object;\n", "des": "Auto-configuration for actuator HTTP exchanges."}
{"index": 2509, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package jersey\n\n", "des": "Configuration for a Jersey-based management context."}
{"index": 2510, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package mappings\n\n// Auto-configuration for MappingsEndpoint.\n@AutoConfiguration @ConditionalOnAvailableEndpoint(endpoint=org.springframework.boot.actuate.web.mappings.MappingsEndpoint.class) public class MappingsEndpointAutoConfiguration extends Object;\n", "des": "Classes for auto-configuration of actuator web request mapping concerns."}
{"index": 2511, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package reactive\n\n// @ManagementContextConfiguration for reactive web infrastructure when a separate management context with a web server running on a different port is required.\n@EnableWebFlux @ManagementContextConfiguration(value=CHILD, proxyBeanMethods=false) @ConditionalOnWebApplication(type=REACTIVE) public class ReactiveManagementChildContextConfiguration extends Object;\n", "des": "Configuration for a WebFlux-based management context."}
{"index": 2512, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package server\n\n// @Conditional that matches based on the configuration of the management port.\n@Retention(RUNTIME) @Target({TYPE,METHOD}) @Documented @Conditional(org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition.class) public @interface ConditionalOnManagementPort;\n", "des": "Actuator web server support."}
{"index": 2513, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "package servlet\n\n// @Controller for handling \"/error\" path when the management servlet is in a child context.\n@Controller public class ManagementErrorEndpoint extends Object;\n// Provides information about the management servlet context for MVC controllers to use.\n@FunctionalInterface public interface ManagementServletContext;\n", "des": "Actuator Spring MVC support."}
{"index": 2514, "repo": "spring-security-core-6.1.2", "code": "package access\n\n// \n@Deprecated public interface AccessDecisionManager;\n// \n@Deprecated public interface AccessDecisionVoter<S>;\n// Thrown if an Authentication object does not hold a required authority.\npublic class AccessDeniedException extends RuntimeException;\n// \n@Deprecated public interface AfterInvocationProvider;\n// Thrown if an authorization request could not be processed due to a system problem.\npublic class AuthorizationServiceException extends AccessDeniedException;\n", "des": "Core access-control related code, including security metadata related classes, interception code, access control annotations, EL support and voter-based implementations of the central AccessDecisionManager interface."}
{"index": 2515, "repo": "spring-security-core-6.1.2", "code": "package annotation\n\n// \n@Deprecated public interface AnnotationMetadataExtractor<A extends Annotation>;\n// \n@Deprecated public class Jsr250MethodSecurityMetadataSource extends AbstractFallbackMethodSecurityMetadataSource;\n// \n@Deprecated public class Jsr250SecurityConfig extends SecurityConfig;\n// \n@Deprecated public class Jsr250Voter extends Object implements AccessDecisionVoter<Object>;\n", "des": "Support for JSR-250 and Spring Security @Secured annotations."}
{"index": 2516, "repo": "spring-security-core-6.1.2", "code": "package event\n\n// \n@Deprecated public abstract class AbstractAuthorizationEvent extends org.springframework.context.ApplicationEvent;\n// \n@Deprecated public class AuthenticationCredentialsNotFoundEvent extends AbstractAuthorizationEvent;\n// \n@Deprecated public class AuthorizationFailureEvent extends AbstractAuthorizationEvent;\n// \n@Deprecated public class AuthorizedEvent extends AbstractAuthorizationEvent;\n", "des": "Authorization event and listener classes."}
{"index": 2517, "repo": "spring-security-core-6.1.2", "code": "package expression\n\n// Base implementation of the facade which isolates Spring Security's requirements for evaluating security expressions from the implementation of the underlying expression objects.\npublic abstract class AbstractSecurityExpressionHandler<T> extends Object implements SecurityExpressionHandler<T>, org.springframework.context.ApplicationContextAware;\n// A null PermissionEvaluator which denies all access.\npublic class DenyAllPermissionEvaluator extends Object implements PermissionEvaluator;\n", "des": "Expression handling code to support the use of Spring-EL based expressions in @PreAuthorize, @PreFilter, @PostAuthorize and @PostFilter annotations."}
{"index": 2518, "repo": "spring-security-core-6.1.2", "code": "package method\n\n// The standard implementation of MethodSecurityExpressionHandler.\npublic class DefaultMethodSecurityExpressionHandler extends AbstractSecurityExpressionHandler<org.aopalliance.intercept.MethodInvocation> implements MethodSecurityExpressionHandler;\n// \n@Deprecated public class ExpressionBasedAnnotationAttributeFactory extends Object implements PrePostInvocationAttributeFactory;\n", "des": "Implementation of expression-based method security."}
{"index": 2519, "repo": "spring-security-core-6.1.2", "code": "package hierarchicalroles\n\n// Exception that is thrown because of a cycle in the role hierarchy definition\npublic class CycleInRoleHierarchyException extends RuntimeException;\n// \npublic final class NullRoleHierarchy extends Object implements RoleHierarchy;\n// The simple interface of a role hierarchy.\npublic interface RoleHierarchy;\n// \npublic class RoleHierarchyAuthoritiesMapper extends Object implements GrantedAuthoritiesMapper;\n", "des": "Role hierarchy implementation."}
{"index": 2520, "repo": "spring-security-core-6.1.2", "code": "package intercept\n\n// \n@Deprecated public abstract class AbstractSecurityInterceptor extends Object implements org.springframework.beans.factory.InitializingBean, org.springframework.context.ApplicationEventPublisherAware, org.springframework.context.MessageSourceAware;\n// \n@Deprecated public interface AfterInvocationManager;\n// \n@Deprecated public class AfterInvocationProviderManager extends Object implements AfterInvocationManager, org.springframework.beans.factory.InitializingBean;\n", "des": "Abstract level security interception classes which are responsible for enforcing the configured security constraints for a secure object."}
{"index": 2521, "repo": "spring-security-core-6.1.2", "code": "package aopalliance\n\n// \n@Deprecated public class MethodSecurityInterceptor extends AbstractSecurityInterceptor implements org.aopalliance.intercept.MethodInterceptor;\n// \n@Deprecated public class MethodSecurityMetadataSourceAdvisor extends org.springframework.aop.support.AbstractPointcutAdvisor implements org.springframework.beans.factory.BeanFactoryAware;\n", "des": "Enforces security for AOP Alliance MethodInvocations, such as via Spring AOP."}
{"index": 2522, "repo": "spring-security-core-6.1.2", "code": "package aspectj\n\n// \n@Deprecated public interface AspectJCallback;\n// \n@Deprecated public final class AspectJMethodSecurityInterceptor extends MethodSecurityInterceptor;\n// \n@Deprecated public final class MethodInvocationAdapter extends Object implements org.aopalliance.intercept.MethodInvocation;\n", "des": "Enforces security for AspectJ JointPoints, delegating secure object callbacks to the calling aspect."}
{"index": 2523, "repo": "spring-security-core-6.1.2", "code": "package method\n\n// \n@Deprecated public abstract class AbstractFallbackMethodSecurityMetadataSource extends AbstractMethodSecurityMetadataSource;\n// \n@Deprecated public abstract class AbstractMethodSecurityMetadataSource extends Object implements MethodSecurityMetadataSource;\n// \n@Deprecated public final class DelegatingMethodSecurityMetadataSource extends AbstractMethodSecurityMetadataSource;\n", "des": "Provides SecurityMetadataSource implementations for securing Java method invocations via different AOP libraries."}
{"index": 2524, "repo": "spring-security-core-6.1.2", "code": "package prepost\n\n// Annotation for specifying a method access-control expression which will be evaluated after a method has been invoked.\n@Target({METHOD,TYPE}) @Retention(RUNTIME) @Inherited @Documented public @interface PostAuthorize;\n// Annotation for specifying a method filtering expression which will be evaluated after a method has been invoked.\n@Target({METHOD,TYPE}) @Retention(RUNTIME) @Inherited @Documented public @interface PostFilter;\n", "des": "Contains the infrastructure classes for handling the @PreAuthorize, @PreFilter, @PostAuthorize and @PostFilter annotations."}
{"index": 2525, "repo": "spring-security-core-6.1.2", "code": "package vote\n\n// \n@Deprecated public abstract class AbstractAccessDecisionManager extends Object implements AccessDecisionManager, org.springframework.beans.factory.InitializingBean, org.springframework.context.MessageSourceAware;\n// \n@Deprecated public abstract class AbstractAclVoter extends Object implements AccessDecisionVoter<org.aopalliance.intercept.MethodInvocation>;\n// \n@Deprecated public class AffirmativeBased extends AbstractAccessDecisionManager;\n", "des": "Implements a vote-based approach to authorization decisions."}
{"index": 2526, "repo": "spring-security-core-6.1.2", "code": "package authentication\n\n// Base class for Authentication objects.\npublic abstract class AbstractAuthenticationToken extends Object implements Authentication, CredentialsContainer;\n// A base ReactiveAuthenticationManager that allows subclasses to override and work with UserDetails objects.\npublic abstract class AbstractUserDetailsReactiveAuthenticationManager extends Object implements ReactiveAuthenticationManager, org.springframework.context.MessageSourceAware;\n", "des": "Core classes and interfaces related to user authentication, which are used throughout Spring Security."}
{"index": 2527, "repo": "spring-security-core-6.1.2", "code": "package dao\n\n// A base AuthenticationProvider that allows subclasses to override and work with UserDetails objects.\npublic abstract class AbstractUserDetailsAuthenticationProvider extends Object implements AuthenticationProvider, org.springframework.beans.factory.InitializingBean, org.springframework.context.MessageSourceAware;\n", "des": "An AuthenticationProvider which relies upon a data access object."}
{"index": 2528, "repo": "spring-security-core-6.1.2", "code": "package event\n\n// Represents an application authentication event.\npublic abstract class AbstractAuthenticationEvent extends org.springframework.context.ApplicationEvent;\n// Abstract application event which indicates authentication failure for some reason.\npublic abstract class AbstractAuthenticationFailureEvent extends AbstractAuthenticationEvent;\n", "des": "Authentication success and failure events which can be published to the Spring application context."}
{"index": 2529, "repo": "spring-security-core-6.1.2", "code": "package jaas\n\n// An AuthenticationProvider implementation that retrieves user details from a JAAS login configuration.\npublic abstract class AbstractJaasAuthenticationProvider extends Object implements AuthenticationProvider, org.springframework.context.ApplicationEventPublisherAware, org.springframework.beans.factory.InitializingBean, org.springframework.context.ApplicationListener<SessionDestroyedEvent>;\n", "des": "An authentication provider for JAAS."}
{"index": 2530, "repo": "spring-security-core-6.1.2", "code": "package event\n\n// Parent class for events fired by the JaasAuthenticationProvider.\npublic abstract class JaasAuthenticationEvent extends org.springframework.context.ApplicationEvent;\n// Fired when LoginContext.login throws a LoginException, or if any other exception is thrown during that time.\npublic class JaasAuthenticationFailedEvent extends JaasAuthenticationEvent;\n", "des": "JAAS authentication events which can be published to the Spring application context by the JAAS authentication provider."}
{"index": 2531, "repo": "spring-security-core-6.1.2", "code": "package memory\n\n// An in memory representation of a JAAS configuration.\npublic class InMemoryConfiguration extends Configuration;\n", "des": "An in memory JAAS implementation."}
{"index": 2532, "repo": "spring-security-core-6.1.2", "code": "package core\n\n// Representation of an authenticated Principal once an Authentication request has been successfully authenticated by the AuthenticationManager.authenticate(Authentication) method.\npublic interface AuthenticatedPrincipal;\n// Represents the token for an authentication request or for an authenticated principal once the request has been processed by the AuthenticationManager.authenticate(Authentication) method.\npublic interface Authentication extends Principal, Serializable;\n", "des": "Core classes and interfaces related to user authentication and authorization, as well as the maintenance of a security context."}
{"index": 2533, "repo": "spring-security-core-6.1.2", "code": "package authority\n\n// Utility method for manipulating GrantedAuthority collections etc.\npublic final class AuthorityUtils extends Object;\n// Indicates that a object stores GrantedAuthority objects.\npublic interface GrantedAuthoritiesContainer extends Serializable;\n// Basic concrete implementation of a GrantedAuthority.\npublic final class SimpleGrantedAuthority extends Object implements GrantedAuthority;\n", "des": "The default implementation of the GrantedAuthority interface."}
{"index": 2534, "repo": "spring-security-core-6.1.2", "code": "package mapping\n\n// Interface to be implemented by classes that can map a list of security attributes (such as roles or group names) to a collection of Spring Security GrantedAuthoritys.\npublic interface Attributes2GrantedAuthoritiesMapper;\n// Mapping interface which can be injected into the authentication layer to convert the authorities loaded from storage into those which will be used in the Authentication object.\npublic interface GrantedAuthoritiesMapper;\n", "des": "Strategies for mapping a list of attributes (such as roles or LDAP groups) to a list of GrantedAuthoritys."}
{"index": 2535, "repo": "spring-security-core-6.1.2", "code": "package context\n\n// An interface that allows delayed access to a SecurityContext that may be generated.\npublic interface DeferredSecurityContext extends Supplier<SecurityContext>;\n// An API for notifying when the SecurityContext changes.\npublic final class ListeningSecurityContextHolderStrategy extends Object implements SecurityContextHolderStrategy;\n", "des": "Classes related to the establishment of a security context for the duration of a request (such as an HTTP or RMI invocation)."}
{"index": 2536, "repo": "spring-security-core-6.1.2", "code": "package session\n\n// Abstract superclass for all session related events.\npublic class AbstractSessionEvent extends org.springframework.context.ApplicationEvent;\n// Generic session creation event which indicates that a session (potentially represented by a security context) has begun.\npublic abstract class SessionCreationEvent extends AbstractSessionEvent;\n", "des": "Session abstraction which is provided by the org.springframework.security.core.session.SessionInformation SessionInformation class."}
{"index": 2537, "repo": "spring-security-core-6.1.2", "code": "package token\n\n// The default implementation of Token.\npublic class DefaultToken extends Object implements Token;\n// Basic implementation of TokenService that is compatible with clusters and across machine restarts, without requiring database persistence.\npublic class KeyBasedPersistenceTokenService extends Object implements TokenService, org.springframework.beans.factory.InitializingBean;\n", "des": "A service for building secure random tokens."}
{"index": 2538, "repo": "spring-security-core-6.1.2", "code": "package userdetails\n\n// Interface that allows for retrieving a UserDetails object based on an Authentication object.\npublic interface AuthenticationUserDetailsService<T extends Authentication>;\n// A Map based implementation of ReactiveUserDetailsService\npublic class MapReactiveUserDetailsService extends Object implements ReactiveUserDetailsService, ReactiveUserDetailsPasswordService;\n// An API for changing a UserDetails password.\npublic interface ReactiveUserDetailsPasswordService;\n", "des": "The standard interfaces for implementing user data DAOs."}
{"index": 2539, "repo": "spring-security-core-6.1.2", "code": "package cache\n\n// Does not perform any caching.\npublic class NullUserCache extends Object implements UserCache;\n// Caches UserDetails instances in a Spring defined Cache.\npublic class SpringCacheBasedUserCache extends Object implements UserCache;\n", "des": "Implementations of UserCache."}
{"index": 2540, "repo": "spring-security-core-6.1.2", "code": "package jdbc\n\n// UserDetailsService implementation which retrieves the user details (username, password, enabled flag, and authorities) from a database using JDBC queries.\npublic class JdbcDaoImpl extends org.springframework.jdbc.core.support.JdbcDaoSupport implements UserDetailsService, org.springframework.context.MessageSourceAware;\n", "des": "Exposes a JDBC-based authentication repository, implementing org.springframework.security.core.userdetails.UserDetailsService UserDetailsService."}
{"index": 2541, "repo": "spring-security-core-6.1.2", "code": "package memory\n\n// Used by InMemoryUserDetailsManager to temporarily store the attributes associated with a user.\npublic class UserAttribute extends Object;\n// Property editor that creates a UserAttribute from a comma separated list of values.\npublic class UserAttributeEditor extends PropertyEditorSupport;\n", "des": "Exposes an in-memory authentication repository."}
{"index": 2542, "repo": "spring-security-core-6.1.2", "code": "package jackson2\n\n// Jackson module for spring-security-core.\npublic class CoreJackson2Module extends com.fasterxml.jackson.databind.module.SimpleModule;\n// This utility class will find all the SecurityModules in classpath.\npublic final class SecurityJackson2Modules extends Object;\n// Jackson Mixin class helps in serialize/deserialize SimpleGrantedAuthority.\npublic abstract class SimpleGrantedAuthorityMixin extends Object;\n", "des": "Mix-in classes to add Jackson serialization support."}
{"index": 2543, "repo": "spring-security-core-6.1.2", "code": "package provisioning\n\n// Allows management of groups of authorities and their members.\npublic interface GroupManager;\n// Non-persistent implementation of UserDetailsManager which is backed by an in-memory map.\npublic class InMemoryUserDetailsManager extends Object implements UserDetailsManager, UserDetailsPasswordService;\n", "des": "Contains simple user and authority group account provisioning interfaces together with a a JDBC-based implementation."}
{"index": 2544, "repo": "spring-security-core-6.1.2", "code": "package util\n\n// Offers static methods for directly manipulating fields.\npublic final class FieldUtils extends Object;\n// An in memory implementation of Spring's Resource interface.\npublic class InMemoryResource extends org.springframework.core.io.AbstractResource;\n// Static utility methods for creating MethodInvocations usable within Spring Security.\npublic final class MethodInvocationUtils extends Object;\n", "des": "General utility classes used throughout the Spring Security framework."}
{"index": 2545, "repo": "pulsar-common-3.0.0", "code": "package zstd\n\n// Expose ZstdFrameCompressor which is a package protected class.\npublic class ZStdRawCompressor extends Object;\n// Exposes ZstdFrameDecompressor which is package protected.\npublic class ZStdRawDecompressor extends Object;\n", "des": "Helper class to access AirCompressor package private classes."}
{"index": 2546, "repo": "pulsar-common-3.0.0", "code": "package api\n\n// The MessageId interface provided for advanced users.\npublic interface MessageIdAdv extends MessageId;\n", "des": "Additional helper classes to the pulsar-client-api module."}
{"index": 2547, "repo": "pulsar-common-3.0.0", "code": "package url\n\n// Extension of the URLStreamHandler class to handle all stream protocol handlers.\npublic class DataURLStreamHandler extends URLStreamHandler;\n// This class defines a factory for URL stream protocol handlers.\npublic class PulsarURLStreamHandlerFactory extends Object implements URLStreamHandlerFactory;\n// Wrapper around java.net.URL to improve usability.\npublic class URL extends Object;\n", "des": "Classes to work with URLs."}
{"index": 2548, "repo": "pulsar-common-3.0.0", "code": "package allocator\n\n// Holder of a ByteBuf allocator.\npublic class PulsarByteBufAllocator extends Object;\n", "des": "Classes implementing pulsar allocator."}
{"index": 2549, "repo": "pulsar-common-3.0.0", "code": "package raw\n\n// Helper class to work with a raw Pulsar entry payload.\npublic class MessageParser extends Object;\n// Definition of an interface to process a raw Pulsar entry payload.\npublic static interface MessageParser.MessageProcessor;\n// View of a message that exposes the internal direct-memory buffer for more efficient processing.\npublic interface RawMessage;\n// Interface to uniquely identify an internal raw message.\npublic interface RawMessageId;\n", "des": "Classes implementing raw API messages."}
{"index": 2550, "repo": "pulsar-common-3.0.0", "code": "package compression\n\n// Utilities.\npublic abstract class AirliftUtils extends Object;\n// Generic compression codec interface.\npublic interface CompressionCodec;\n// LZ4 Compression.\npublic class CompressionCodecLZ4 extends Object implements CompressionCodec;\n// No compression.\npublic class CompressionCodecNone extends Object implements CompressionCodec;\n// Provider of compression codecs used in Pulsar.\npublic class CompressionCodecProvider extends Object;\n", "des": "Implementation of different compression codecs."}
{"index": 2551, "repo": "pulsar-common-3.0.0", "code": "package exception\n\n// \npublic abstract class PulsarExceptionBase extends Exception;\n", "des": "Exception classes"}
{"index": 2552, "repo": "pulsar-common-3.0.0", "code": "package functions\n\n// \npublic abstract class JsonIgnorePropertiesMixIn extends Object;\n// Options while updating the sink.\npublic class UpdateOptionsImpl extends Object implements UpdateOptions;\n// Helper class to work with configuration.\npublic class Utils extends Object;\n", "des": "Classes needed for pulsar functions."}
{"index": 2553, "repo": "pulsar-common-3.0.0", "code": "package intercept\n\n// A plugin interface that allows you to intercept the client requests to the Pulsar brokers and add timestamp from broker side metadata for each entry.\npublic class AppendBrokerTimestampMetadataInterceptor extends Object implements BrokerEntryMetadataInterceptor;\n// \npublic class AppendIndexMetadataInterceptor extends Object implements BrokerEntryMetadataInterceptor;\n", "des": "Classes needed for broker interceptor."}
{"index": 2554, "repo": "pulsar-common-3.0.0", "code": "package io\n\n// Information about a Pulsar connector config field.\npublic class ConfigFieldDefinition extends Object;\n", "des": "Configuration classes for IO."}
{"index": 2555, "repo": "pulsar-common-3.0.0", "code": "package lookup\n\n// \npublic class GetTopicsResult extends Object;\n", "des": "Lookup data."}
{"index": 2556, "repo": "pulsar-common-3.0.0", "code": "package data\n\n// This class encapsulates lookup data.\npublic class LookupData extends Object;\n", "des": "Lookup data."}
{"index": 2557, "repo": "pulsar-common-3.0.0", "code": "package naming\n\n// Definition of constants.\npublic class Constants extends Object;\n// Validator for metadata configuration.\npublic class Metadata extends Object;\n// \npublic class NamedEntity extends Object;\n// Parser of a value from the namespace field provided in configuration.\npublic class NamespaceName extends Object implements ServiceUnitId;\n// Basic interface for service unit's identification.\npublic interface ServiceUnitId;\n", "des": "Classes to work different configuration values."}
{"index": 2558, "repo": "pulsar-common-3.0.0", "code": "package nar\n\n// A utility class containing a few useful static methods to do typical IO operations.\npublic class FileUtils extends Object;\n// A ClassLoader for loading NARs (NiFi archives).\npublic class NarClassLoader extends URLClassLoader;\n// NarClassLoader builder class.\npublic class NarClassLoaderBuilder extends Object;\n// Helper class to unpack NARs.\npublic class NarUnpacker extends Object;\n", "des": "Classes to work with NARs."}
{"index": 2559, "repo": "pulsar-common-3.0.0", "code": "package net\n\n// ServiceURI represents service uri within pulsar cluster.\npublic class ServiceURI extends Object;\n", "des": "Classes for network configuration."}
{"index": 2560, "repo": "pulsar-common-3.0.0", "code": "package policies\n\n// Namespace isolation policy.\npublic interface NamespaceIsolationPolicy;\n", "des": "Common policies."}
{"index": 2561, "repo": "pulsar-common-3.0.0", "code": "package data\n\n// The auto failover policy configuration data.\npublic class AutoFailoverPolicyDataImpl extends Object implements AutoFailoverPolicyData;\n// \npublic static class AutoFailoverPolicyDataImpl.AutoFailoverPolicyDataImplBuilder extends Object implements AutoFailoverPolicyData.Builder;\n// The namespace isolation data for a given broker.\npublic final class BrokerNamespaceIsolationDataImpl extends Object implements BrokerNamespaceIsolationData;\n", "des": "Definition of different data structures for policies."}
{"index": 2562, "repo": "pulsar-common-3.0.0", "code": "package impl\n\n// Namespace isolation policies.\npublic class NamespaceIsolationPolicies extends Object;\n// Implementation of the namespace isolation policy.\npublic class NamespaceIsolationPolicyImpl extends Object implements NamespaceIsolationPolicy;\n", "des": "Implementation of policies."}
{"index": 2563, "repo": "pulsar-common-3.0.0", "code": "package path\n\n// Policy path utilities.\npublic class PolicyPath extends Object;\n", "des": "Paths for pulsar policies."}
{"index": 2564, "repo": "pulsar-common-3.0.0", "code": "package protocol\n\n// ByteBuf holder that contains 2 buffers.\npublic final class ByteBufPair extends io.netty.util.AbstractReferenceCounted;\n// \n@Sharable public static class ByteBufPair.CopyingEncoder extends io.netty.channel.ChannelOutboundHandlerAdapter;\n// \n@Sharable public static class ByteBufPair.Encoder extends io.netty.channel.ChannelOutboundHandlerAdapter;\n// \npublic class Commands extends Object;\n", "des": "Common protocol."}
{"index": 2565, "repo": "pulsar-common-3.0.0", "code": "package schema\n\n// Bytes schema version.\npublic class BytesSchemaVersion extends Object implements SchemaVersion, Comparable<BytesSchemaVersion>;\n// This interface helps to compare byte arrays.\npublic static interface BytesSchemaVersion.ByteArrayComparator extends Comparator<byte[]>, Serializable;\n// Response for schema deletion.\npublic class DeleteSchemaResponse extends Object;\n// Empty schema version.\npublic final class EmptyVersion extends Object implements SchemaVersion;\n", "des": "Classes to work with schemas."}
{"index": 2566, "repo": "pulsar-common-3.0.0", "code": "package sasl\n\n// JAAS Credentials Container.\npublic class JAASCredentialsContainer extends Object implements Closeable;\n// This class implements parsing and handling of Kerberos principal names.\npublic class KerberosName extends Object;\n// \npublic static class KerberosName.BadFormatString extends IOException;\n// \npublic static class KerberosName.NoMatchingRule extends IOException;\n// SASL Constants.\npublic class SaslConstants extends Object;\n", "des": "Implementation of Simple Authentication and Security Layer."}
{"index": 2567, "repo": "pulsar-common-3.0.0", "code": "package schema\n\n// Long schema version.\npublic class LongSchemaVersion extends Object implements SchemaVersion;\n", "des": "Implementation of the common of the pulsar schema."}
{"index": 2568, "repo": "pulsar-common-3.0.0", "code": "package stats\n\n// \npublic class JvmDefaultGCMetricsLogger extends Object implements JvmGCMetricsLogger;\n// Logger for the JVM G1 GC metrics.\npublic class JvmG1GCMetricsLogger extends Object implements JvmGCMetricsLogger;\n// JvmGCMetricsLogger can be implemented for each specific GC type which retrieves GC count and pause time and logs it into metrics.\npublic interface JvmGCMetricsLogger;\n// This class is responsible for providing JVM metrics.\npublic class JvmMetrics extends Object;\n", "des": "Definition of classes responsible for statistics."}
{"index": 2569, "repo": "pulsar-common-3.0.0", "code": "package util\n\n// \npublic abstract class BaseGenerateDocumentation extends Object;\n// \nprotected static class BaseGenerateDocumentation.CategoryComparator extends Object implements Comparator<org.apache.commons.lang3.tuple.Pair<Field,org.apache.pulsar.common.util.BaseGenerateDocumentation.FieldContextWrapper>>, Serializable;\n// This interface declares a Bouncy Castle provider Loader.\npublic interface BCLoader;\n// Helper methods wrt Classloading.\npublic class ClassLoaderUtils extends Object;\n", "des": "Common utils."}
{"index": 2570, "repo": "pulsar-common-3.0.0", "code": "package collections\n\n// This this copy of BitSet.\npublic class BitSetRecyclable extends Object implements Cloneable, Serializable;\n// Safe multithreaded version of BitSet.\npublic class ConcurrentBitSet extends BitSet;\n// Safe multithreaded version of BitSet and leverage netty recycler.\npublic class ConcurrentBitSetRecyclable extends ConcurrentBitSet;\n// Map from long to an Object.\npublic class ConcurrentLongHashMap<V> extends Object;\n", "des": "Set of different collections working in the concurrent environment."}
{"index": 2571, "repo": "pulsar-common-3.0.0", "code": "package keystoretls\n\n// KeyStoreSSLContext that mainly wrap a SSLContext to provide SSL context for both webservice and netty.\npublic class KeyStoreSSLContext extends Object;\n// Connection Mode for TLS.\npublic static enum KeyStoreSSLContext.Mode extends Enum<KeyStoreSSLContext.Mode>;\n// Similar to `DefaultSslContextBuilder`, which build `javax.net.ssl.SSLContext` for web service.\npublic class NetSslContextBuilder extends SslContextAutoRefreshBuilder<SSLContext>;\n", "des": "Helpers to work with events from the non-blocking I/O client-server framework."}
{"index": 2572, "repo": "pulsar-common-3.0.0", "code": "package netty\n\n// Static utility methods for operating on ChannelFutures.\npublic class ChannelFutures extends Object;\n// \npublic class DnsResolverUtil extends Object;\n// \npublic class EventLoopUtil extends Object;\n// Contains utility methods for working with Netty Channels.\npublic final class NettyChannelUtil extends Object;\n// Contains utility methods for working with Netty Futures.\npublic class NettyFutureUtil extends Object;\n", "des": "Helpers to work with events from the non-blocking I/O client-server framework."}
{"index": 2573, "repo": "pulsar-common-3.0.0", "code": "package loadbalancer\n\n// The advertisedListener for broker with brokerServiceUrl and brokerServiceUrlTls.\npublic class AdvertisedListener extends Object;\n// Data class containing three components comprising all the data available for the leader broker about other brokers: - The local broker data which is written to ZooKeeper by each individual broker (LocalBrokerData).\npublic class BrokerData extends Object;\n", "des": "Classes to define policies for the load distribution."}
{"index": 2574, "repo": "camel-api-4.0.0-RC1", "code": "package camel\n\n// To perform optional initialization on an element after its properties has been configured.\npublic interface AfterPropertiesConfigured;\n// A strategy for aggregating two exchanges together into a single exchange.\npublic interface AggregationStrategy;\n// Exception thrown in situations when a Service has already been stopped.\npublic class AlreadyStoppedException extends RuntimeCamelException;\n", "des": "The core Camel API."}
{"index": 2575, "repo": "camel-api-4.0.0-RC1", "code": "package catalog\n\n// Details result of validating configuration properties (eg application.properties for camel-main).\npublic class ConfigurationPropertiesValidationResult extends Object implements Serializable;\n// Details result of validating endpoint uri.\npublic class EndpointValidationResult extends Object implements Serializable;\n// Pluggable resolver to load JSON schema files for components, data formats, languages etc.\npublic interface JSonSchemaResolver;\n", "des": "Camel Catalog API"}
{"index": 2576, "repo": "camel-api-4.0.0-RC1", "code": "package cloud\n\n// \npublic interface DiscoverableService;\n// \npublic interface ServiceCallConstants;\n// Allows SPIs to implement custom Service Chooser.\n@FunctionalInterface public interface ServiceChooser;\n// An interface to represent an object which wishes to be injected with a ServiceChooser\npublic interface ServiceChooserAware;\n// A factory to create ServiceChooser\n@FunctionalInterface public interface ServiceChooserFactory extends ServiceFactory<ServiceChooser>;\n", "des": "Camel cloud"}
{"index": 2577, "repo": "camel-api-4.0.0-RC1", "code": "package cluster\n\n// Marker interface for cluster events\npublic interface CamelClusterEventListener;\n// \npublic static interface CamelClusterEventListener.Leadership extends CamelClusterEventListener;\n// \npublic static interface CamelClusterEventListener.Membership extends CamelClusterEventListener;\n// \npublic interface CamelClusterMember extends HasId;\n// \npublic interface CamelClusterService extends Service, CamelContextAware, IdAware, Ordered;\n", "des": "Camel Cluster support"}
{"index": 2578, "repo": "camel-api-4.0.0-RC1", "code": "package extension\n\n// Marker interface for component extensions.\npublic interface ComponentExtension;\n// Defines the interface used for validating component/endpoint parameters.\npublic interface ComponentVerifierExtension extends ComponentExtension;\n// The result of a verification\npublic static interface ComponentVerifierExtension.Result extends Serializable;\n// Status of the verification\npublic static enum ComponentVerifierExtension.Result.Status extends Enum<ComponentVerifierExtension.Result.Status>;\n", "des": "Component extension"}
{"index": 2579, "repo": "camel-api-4.0.0-RC1", "code": "package health\n\n// An interface to represent an object which provides HealthCheck\npublic interface HasHealthChecks;\n// Health check\npublic interface HealthCheck extends HasGroup, HasId, Ordered;\n// \npublic static enum HealthCheck.Kind extends Enum<HealthCheck.Kind>;\n// Response to a health check invocation.\npublic static interface HealthCheck.Result;\n// \npublic static enum HealthCheck.State extends Enum<HealthCheck.State>;\n", "des": "Camel Health Check support"}
{"index": 2580, "repo": "camel-api-4.0.0-RC1", "code": "package spi\n\n// Access to a repository to store aggregated exchanges to support pluggable implementations.\npublic interface AggregationRepository;\n// Factory to create Processor for annotation based EIPs.\npublic interface AnnotationBasedProcessorFactory;\n// A TypeConverter which is capable of annotation scanning for Converter classes and add these as type converters.\npublic interface AnnotationScanTypeConverters;\n", "des": "Service Provider Interfaces used by the Camel runtime which are plugin strategies."}
{"index": 2581, "repo": "camel-api-4.0.0-RC1", "code": "package annotations\n\n// \n@Retention(RUNTIME) @Documented @Target(TYPE) @ServiceFactory(\"cloud\") public @interface CloudServiceFactory;\n// \n@Retention(RUNTIME) @Documented @Target(TYPE) @ServiceFactory(\"component\") public @interface Component;\n// Internal annotation to mark a class as having constant fields for the source code generator.\n@Retention(RUNTIME) @Documented @Target(TYPE) public @interface ConstantProvider;\n", "des": "SPI annotations for plugins"}
{"index": 2582, "repo": "camel-api-4.0.0-RC1", "code": "package jsse\n\n// KeyManager to select a key with desired alias while delegating processing to specified KeyManager Can be used both with server and client sockets\npublic class AliasedX509ExtendedKeyManager extends X509ExtendedKeyManager;\n// Represents configuration options that can be applied in the client-side or server-side context depending on what they are applied to.\npublic abstract class BaseSSLContextParameters extends JsseParameters;\n", "des": "A collection of utility classes for configuring a JSSE SSLContext and other JSSE classes."}
{"index": 2583, "repo": "camel-api-4.0.0-RC1", "code": "package service\n\n// A useful base class which ensures that a service is only initialized once and provides some helper methods for enquiring of its status.\npublic abstract class BaseService extends Object;\n// A collection of helper methods for working with Service objects.\npublic final class ServiceHelper extends Object;\n", "des": "Base service classes"}
{"index": 2584, "repo": "spring-rabbit-3.0.6", "code": "package rabbit\n\n// Provides asynchronous send and receive operations returning a CompletableFuture allowing the caller to obtain the reply later, using get() or a callback.\npublic class AsyncRabbitTemplate extends Object implements org.springframework.amqp.core.AsyncAmqpTemplate, ChannelAwareMessageListener, RabbitTemplate.ReturnsCallback, RabbitTemplate.ConfirmCallback, org.springframework.beans.factory.BeanNameAware, org.springframework.context.SmartLifecycle;\n", "des": "Provides top-level classes for Spring Rabbit."}
{"index": 2585, "repo": "spring-rabbit-3.0.6", "code": "package annotation\n\n// Represents an argument used when declaring queues etc within a QueueBinding.\n@Target({}) @Retention(RUNTIME) public @interface Argument;\n// Enable Rabbit listener annotated endpoints that are created under the cover by a RabbitListenerContainerFactory.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(RabbitListenerConfigurationSelector.class) public @interface EnableRabbit;\n", "des": "Annotations and supporting classes for declarative Rabbit listener endpoint"}
{"index": 2586, "repo": "spring-rabbit-3.0.6", "code": "package aot\n\n// RuntimeHintsRegistrar for spring-rabbit.\npublic class RabbitRuntimeHints extends Object implements org.springframework.aot.hint.RuntimeHintsRegistrar;\n", "des": "Provides classes to support Spring AOT."}
{"index": 2587, "repo": "spring-rabbit-3.0.6", "code": "package batch\n\n// Strategy for batching messages.\npublic interface BatchingStrategy;\n// An object encapsulating a Message containing the batch of messages, the exchange, and routing key.\npublic class MessageBatch extends Object;\n// A simple batching strategy that supports only one exchange/routingKey; includes a batch size, a batched message size limit and a timeout.\npublic class SimpleBatchingStrategy extends Object implements BatchingStrategy;\n", "des": "Provides classes for message batching."}
{"index": 2588, "repo": "spring-rabbit-3.0.6", "code": "package config\n\n// \npublic abstract class AbstractExchangeParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;\n// RabbitListenerContainerFactory for Spring's base container implementation.\npublic abstract class AbstractRabbitListenerContainerFactory<C extends AbstractMessageListenerContainer> extends BaseRabbitListenerContainerFactory<C> implements org.springframework.context.ApplicationContextAware, org.springframework.context.ApplicationEventPublisherAware;\n", "des": "Provides classes supporting the Rabbit XML namespace."}
{"index": 2589, "repo": "spring-rabbit-3.0.6", "code": "package connection\n\n// \npublic abstract class AbstractConnectionFactory extends Object implements ConnectionFactory, org.springframework.beans.factory.DisposableBean, org.springframework.beans.factory.BeanNameAware, org.springframework.context.ApplicationContextAware, org.springframework.context.ApplicationEventPublisherAware, org.springframework.context.ApplicationListener<org.springframework.context.event.ContextClosedEvent>, com.rabbitmq.client.ShutdownListener;\n", "des": "Provides classes related to connections."}
{"index": 2590, "repo": "spring-rabbit-3.0.6", "code": "package core\n\n// An exception thrown when a negative acknowledgement received after publishing a message.\npublic class AmqpNackReceivedException extends org.springframework.amqp.AmqpException;\n// A RabbitTemplate that permits batching individual messages into a larger message.\npublic class BatchingRabbitTemplate extends RabbitTemplate;\n", "des": "Provides core classes for Spring Rabbit."}
{"index": 2591, "repo": "spring-rabbit-3.0.6", "code": "package listener\n\n// \npublic abstract class AbstractMessageListenerContainer extends ObservableListenerContainer implements org.springframework.context.ApplicationEventPublisherAware;\n// A handler for Error on the container thread(s).\n@FunctionalInterface public static interface AbstractMessageListenerContainer.JavaLangErrorHandler;\n", "des": "Provides classes for message listener containers."}
{"index": 2592, "repo": "spring-rabbit-3.0.6", "code": "package adapter\n\n// An abstract MessageListener adapter providing the necessary infrastructure to extract the payload of a Message.\npublic abstract class AbstractAdaptableMessageListener extends Object implements ChannelAwareMessageListener;\n// Root object for reply expression evaluation.\npublic static final class AbstractAdaptableMessageListener.ReplyExpressionRoot extends Object;\n", "des": "Provides classes for adapting listeners."}
{"index": 2593, "repo": "spring-rabbit-3.0.6", "code": "package api\n\n// Used to receive a batch of messages if the container supports it.\npublic interface ChannelAwareBatchMessageListener extends ChannelAwareMessageListener;\n// A message listener that is aware of the Channel on which the message was received.\n@FunctionalInterface public interface ChannelAwareMessageListener extends org.springframework.amqp.core.MessageListener;\n", "des": "Provides Additional APIs for listeners."}
{"index": 2594, "repo": "spring-rabbit-3.0.6", "code": "package exception\n\n// Exception to be thrown when the execution of a listener method failed with an irrecoverable problem.\npublic class FatalListenerExecutionException extends org.springframework.amqp.AmqpException;\n// Exception to be thrown when the execution of a listener method failed on startup.\npublic class FatalListenerStartupException extends org.springframework.amqp.AmqpException;\n", "des": "Provides classes for listener exceptions."}
{"index": 2595, "repo": "spring-rabbit-3.0.6", "code": "package support\n\n// Utility methods for listener containers.\npublic final class ContainerUtils extends Object;\n", "des": "Provides support classes for listeners."}
{"index": 2596, "repo": "spring-rabbit-3.0.6", "code": "package log4j2\n\n// A Log4j 2 appender that publishes logging events to an AMQP Exchange.\n@Plugin(name=\"RabbitMQ\", category=\"Core\", elementType=\"appender\", printObject=true) public class AmqpAppender extends org.apache.logging.log4j.core.appender.AbstractAppender;\n// Manager class for the appender.\nprotected static class AmqpAppender.AmqpManager extends org.apache.logging.log4j.core.appender.AbstractManager;\n", "des": "Provides classes supporting Log4j 2 appenders."}
{"index": 2597, "repo": "spring-rabbit-3.0.6", "code": "package logback\n\n// A Logback appender that publishes logging events to an AMQP Exchange.\npublic class AmqpAppender extends ch.qos.logback.core.AppenderBase<ch.qos.logback.classic.spi.ILoggingEvent>;\n// Small helper class to encapsulate a LoggingEvent, its MDC properties, and the number of retries.\nprotected static class AmqpAppender.Event extends Object;\n", "des": "Provides classes supporting Logback appenders."}
{"index": 2598, "repo": "spring-rabbit-3.0.6", "code": "package retry\n\n// The MessageRecoverer implementation to throw an ImmediateRequeueAmqpException for subsequent requeuing in the listener container.\npublic class ImmediateRequeueMessageRecoverer extends Object implements MessageRecoverer;\n// A retry recoverer for use with a batch listener.\n@FunctionalInterface public interface MessageBatchRecoverer extends MessageRecoverer;\n// \n@FunctionalInterface public interface MessageKeyGenerator;\n", "des": "Provides classes supporting retries."}
{"index": 2599, "repo": "spring-rabbit-3.0.6", "code": "package support\n\n// A mechanism to keep track of active objects.\npublic class ActiveObjectCounter<T> extends Object;\n// A builder for argument maps.\npublic class ArgumentBuilder extends org.springframework.amqp.utils.MapBuilder<ArgumentBuilder,String,Object>;\n// Thrown when the broker cancels the consumer and the message queue is drained.\npublic class ConsumerCancelledException extends RuntimeException;\n", "des": "Provides support classes for Spring Rabbit."}
{"index": 2600, "repo": "spring-rabbit-3.0.6", "code": "package micrometer\n\n// Spring Rabbit Observation for listeners.\npublic enum RabbitListenerObservation extends Enum<RabbitListenerObservation> implements io.micrometer.observation.docs.ObservationDocumentation;\n// Default RabbitListenerObservationConvention for Rabbit listener key values.\npublic static class RabbitListenerObservation.DefaultRabbitListenerObservationConvention extends Object implements RabbitListenerObservationConvention;\n", "des": "Provides classes for Micrometer support."}
{"index": 2601, "repo": "spring-rabbit-3.0.6", "code": "package transaction\n\n// PlatformTransactionManager implementation for a single Rabbit ConnectionFactory.\npublic class RabbitTransactionManager extends org.springframework.transaction.support.AbstractPlatformTransactionManager implements org.springframework.transaction.support.ResourceTransactionManager, org.springframework.beans.factory.InitializingBean;\n", "des": "Provides classes supporting transactions in Spring Rabbit."}
{"index": 2602, "repo": "wicket-util-10.0.0-M1", "code": "package collections\n\n// This class wraps a WeakHashMap that holds one ConcurrentHashMap per ClassLoader.\npublic class ClassMetaCache<T> extends Object;\n// This is an integer hashmap that has the exact same features and interface as a normal Map except that the key is directly an integer.\npublic class IntHashMap<V> extends Object implements Cloneable, Serializable;\n// \npublic static class IntHashMap.Entry<V> extends Object;\n", "des": "Useful collections."}
{"index": 2603, "repo": "wicket-util-10.0.0-M1", "code": "package convert\n\n// Thrown for conversion exceptions.\npublic class ConversionException extends RuntimeException;\n// Converts input to output and vice versa.\npublic interface IConverter<C> extends IClusterable;\n// A converter that takes a mask into account.\npublic class MaskConverter<C> extends Object implements IConverter<C>;\n", "des": "Conversion support."}
{"index": 2604, "repo": "wicket-util-10.0.0-M1", "code": "package converter\n\n// Base class for locale aware type converters.\npublic abstract class AbstractConverter<C> extends Object implements IConverter<C>;\n// A base class for all Date related converters\npublic abstract class AbstractDateConverter<D extends Date> extends AbstractConverter<D>;\n// Base class for all converters of decimal numbers.\npublic abstract class AbstractDecimalConverter<N extends Number> extends AbstractNumberConverter<N>;\n", "des": "Default converter implementations."}
{"index": 2605, "repo": "wicket-util-10.0.0-M1", "code": "package crypt\n\n// Abstract base class for JCE based ICrypt implementations.\npublic abstract class AbstractCrypt extends Object implements ICrypt;\n// Character encoding names required of every implementation of the Java platform.\npublic class CharEncoding extends Object;\n// Utility class meant to help building Cipher.\npublic class CipherUtils extends Object;\n", "des": "Encryption support for forms."}
{"index": 2606, "repo": "wicket-util-10.0.0-M1", "code": "package diff\n\n// Holds an add-delta between to revisions of a text.\npublic class AddDelta extends Delta;\n// Holds an change-delta between to revisions of a text.\npublic class ChangeDelta extends Delta;\n// Holds a information about a part of the text involved in a differencing or patching operation.\npublic class Chunk extends ToString;\n// Holds a delete-delta between to revisions of a text.\npublic class DeleteDelta extends Delta;\n", "des": "The diff package implements the differencing engine that JRCS uses."}
{"index": 2607, "repo": "wicket-util-10.0.0-M1", "code": "package myers\n\n// A diffnode in a diffpath.\npublic final class DiffNode extends PathNode;\n// A clean-room implementation of Eugene Myers differencing algorithm.\npublic class MyersDiff extends Object implements DiffAlgorithm;\n// A node in a diffpath.\npublic abstract class PathNode extends Object;\n// Represents a snake in a diffpath.\npublic final class Snake extends PathNode;\n", "des": "The diff.myers package implements Gene Myers' differencing algorithm."}
{"index": 2608, "repo": "wicket-util-10.0.0-M1", "code": "package file\n\n// Simple extension of File that adds an implementation of IModifiable for files.\npublic class File extends File implements IModifiable;\n// Default implementation of IFileCleaner that uses Apache commons-io FileCleaningTracker to track and clean the temporary created files.\npublic class FileCleaner extends Object implements IFileCleaner;\n// Adapts IFileCleaner to FileCleaningTracker\npublic class FileCleanerTrackerAdapter extends org.apache.commons.io.FileCleaningTracker;\n", "des": "File utilities."}
{"index": 2609, "repo": "wicket-util-10.0.0-M1", "code": "package io\n\n// This class is used to wrap a stream that includes an encoded ByteOrderMark as its first bytes.\npublic class BOMInputStream extends ProxyInputStream;\n// This class implements an output stream in which the data is written into a byte array.\npublic class ByteArrayOutputStream extends OutputStream;\n// Output stream that counts bytes written to it (but discards them).\npublic final class ByteCountingOutputStream extends OutputStream;\n", "des": "Input/Output utilities."}
{"index": 2610, "repo": "wicket-util-10.0.0-M1", "code": "package listener\n\n// Holds a set of IChangeListeners.\npublic final class ChangeListenerSet<T> extends ListenerCollection<IChangeListener<T>>;\n// Generic \"something changed\" listener interface.\n@FunctionalInterface public interface IChangeListener<T>;\n// Represents a collection of listeners.\npublic abstract class ListenerCollection<T> extends Object implements Serializable, Iterable<T>;\n// Used to notify a listener.\nprotected static interface ListenerCollection.INotifier<T>;\n", "des": "Listener/ Observer utilities."}
{"index": 2611, "repo": "wicket-util-10.0.0-M1", "code": "package metapattern\n\n// A Group that captures case-sensitive boolean values \"true\" or \"false\".\npublic final class BooleanGroup extends Group;\n// A Group that captures floating point values (doubles and floats).\npublic final class FloatingPointGroup extends Group;\n// A Group is a piece of a regular expression (referenced by some Java field or local variable) that forms a \"capturing group\" within the larger regular expression.\npublic class Group extends MetaPattern;\n", "des": "Regular Expressions meta pattern support."}
{"index": 2612, "repo": "wicket-util-10.0.0-M1", "code": "package parsers\n\n// Parses out strings separated by commas.\npublic final class CommaSeparatedVariableParser extends ListParser;\n// Parses integer variable assignments, such as \"x = 9\" or \"x=9\".\npublic final class IntegerVariableAssignmentParser extends MetaPatternParser;\n// Parses an arbitrary list format with a pattern for list entries and a pattern for list separators.\npublic class ListParser extends MetaPatternParser;\n", "des": "Regular Expressions meta pattern parsers."}
{"index": 2613, "repo": "wicket-util-10.0.0-M1", "code": "package resource\n\n// \npublic abstract class AbstractResourceStream extends Object implements IResourceStream;\n// Base implementation of an IResourceStreamWriter so that you only have to override the IResourceStreamWriter.write(java.io.OutputStream).\npublic abstract class AbstractResourceStreamWriter extends Object implements IResourceStreamWriter;\n// Base class for string resources.\npublic abstract class AbstractStringResourceStream extends AbstractResourceStream implements IStringResourceStream;\n", "des": "Base support for resources."}
{"index": 2614, "repo": "wicket-util-10.0.0-M1", "code": "package string\n\n// An abstract base class for string list implementations.\npublic abstract class AbstractStringList extends Object implements IStringSequence, Serializable;\n// This is a copy or combination of java.lang.StringBuffer and java.lang.String It has a special method getValue() which returns the internal char array.\npublic final class AppendingStringBuffer extends Object implements Serializable, CharSequence;\n// Typesafe string iterator interface\npublic interface IStringIterator;\n", "des": "String utilities."}
{"index": 2615, "repo": "wicket-util-10.0.0-M1", "code": "package interpolator\n\n// Interpolates variables into a String from a Map.\npublic class MapVariableInterpolator extends VariableInterpolator;\n// Convenient way of interpolating system properties.\npublic final class SystemVariableInterpolator extends MapVariableInterpolator;\n// Base class for variable interpolators.\npublic abstract class VariableInterpolator extends Object implements IClusterable;\n", "des": "Support for String-variable interpolation."}
{"index": 2616, "repo": "wicket-util-10.0.0-M1", "code": "package thread\n\n// Interface to an arbitrary piece of code that runs and can do logging.\n@FunctionalInterface public interface ICode;\n// Type-safe monitor class to be used in place of Object for readability.\npublic final class Lock extends Object;\n// Runs a block of code periodically.\npublic final class Task extends Object;\n", "des": "Threading utilities."}
{"index": 2617, "repo": "wicket-util-10.0.0-M1", "code": "package time\n\n// Utility class for Duration\npublic class Durations extends Object;\n// Utility class for Instant\npublic class Instants extends Object;\n", "des": "Utilities for working with Time(s)."}
{"index": 2618, "repo": "wicket-util-10.0.0-M1", "code": "package value\n\n// Map of values, extending ValueMap with methods for generating (HTML) markup attributes.\npublic final class AttributeMap extends ValueMap;\n// An implementation of IValueMap that makes a copy when a caller tries to change an immutable Map.\npublic class CopyOnWriteValueMap extends Object implements IValueMap, Serializable;\n", "des": "This package provides casting utilities."}
{"index": 2619, "repo": "wicket-util-10.0.0-M1", "code": "package watch\n\n// Interface to get the last time something was modified.\npublic interface IModifiable;\n// Monitors one or more IModifiable objects, calling a IChangeListener when a given object's modification time changes.\npublic interface IModificationWatcher;\n// Monitors one or more IModifiable objects, calling a IChangeListener when a given object's modification time changes.\npublic class ModificationWatcher extends Object implements IModificationWatcher;\n", "des": "This package provides modification watchers."}
{"index": 2620, "repo": "spring-integration-jms-6.1.2", "code": "package jms\n\n// \npublic abstract class AbstractJmsChannel extends org.springframework.integration.channel.AbstractMessageChannel;\n", "des": "Base package for JMS Support."}
{"index": 2621, "repo": "spring-integration-jms-6.1.2", "code": "package config\n\n// \npublic class JmsChannelFactoryBean extends org.springframework.beans.factory.config.AbstractFactoryBean<AbstractJmsChannel> implements org.springframework.context.SmartLifecycle, org.springframework.beans.factory.BeanNameAware;\n// Parser for the 'channel' and 'publish-subscribe-channel' elements of the Spring Integration JMS namespace.\npublic class JmsChannelParser extends org.springframework.integration.config.xml.AbstractChannelParser;\n", "des": "Provides classes for configuration - parsers, namespace handlers, factory beans."}
{"index": 2622, "repo": "spring-integration-jms-6.1.2", "code": "package dsl\n\n// Factory class for JMS components.\npublic final class Jms extends Object;\n// A DefaultMessageListenerContainer specific JmsListenerContainerSpec extension.\npublic class JmsDefaultListenerContainerSpec extends JmsListenerContainerSpec<JmsDefaultListenerContainerSpec,org.springframework.jms.listener.DefaultMessageListenerContainer>;\n", "des": "Provides JMS Component support for the Java DSL."}
{"index": 2623, "repo": "wicket-request-10.0.0-M1", "code": "package request\n\n// A multivalue map of headers names and header values suitable for processing http request and response headers.\npublic class HttpHeaderCollection extends Object;\n// Maps exception to IRequestHandler.\n@FunctionalInterface public interface IExceptionMapper;\n// Base interface for log data collected by request handlers.\npublic interface ILogData extends Serializable;\n", "des": "Package for classes that have generic (protocol independent) support for request cycle processing."}
{"index": 2624, "repo": "shiro-web-2.0.0-alpha-2", "code": "package config\n\n// A Factory that creates FilterChainResolver instances based on Ini configuration.\npublic class IniFilterChainResolverFactory extends org.apache.shiro.ini.IniFactorySupport<FilterChainResolver>;\n// Configuration for Shiro's root level servlet filter.\npublic class ShiroFilterConfiguration extends Object;\n// \n@Deprecated public class WebIniSecurityManagerFactory extends org.apache.shiro.ini.IniSecurityManagerFactory;\n", "des": "Web-specific implementation extensions to the org.apache.shiro.config components."}
{"index": 2625, "repo": "shiro-web-2.0.0-alpha-2", "code": "package env\n\n// Default WebEnvironment implementation based on a backing Map instance.\npublic class DefaultWebEnvironment extends org.apache.shiro.env.DefaultEnvironment implements MutableWebEnvironment;\n// An EnvironmentLoader is responsible for loading a web application's Shiro WebEnvironment (which includes the web app's WebSecurityManager) into the ServletContext at application startup.\npublic class EnvironmentLoader extends Object;\n", "des": "Web-specific Environment implementation and support."}
{"index": 2626, "repo": "shiro-web-2.0.0-alpha-2", "code": "package filter\n\n// Superclass for any filter that controls access to a resource and may redirect the user to the login page if they are not authenticated.\npublic abstract class AccessControlFilter extends PathMatchingFilter;\n// A request filter that blocks malicious requests.\npublic class InvalidRequestFilter extends AccessControlFilter;\n// A PathConfigProcessor processes configuration entries on a per path (url) basis.\npublic interface PathConfigProcessor;\n", "des": "Base package supporting all Servlet Filter implementations used to control access to web pages and URL resources."}
{"index": 2627, "repo": "shiro-web-2.0.0-alpha-2", "code": "package authc\n\n// Filter that allows access to a path immediately without performing security checks of any kind.\npublic class AnonymousFilter extends PathMatchingFilter;\n// An AuthenticationFilter that is capable of automatically performing an authentication attempt based on the incoming request.\npublic abstract class AuthenticatingFilter extends AuthenticationFilter;\n", "des": "Servlet Filter implementations specific to controlling access based on a subject's authentication status, or those that can execute authentications (log-ins) directly."}
{"index": 2628, "repo": "shiro-web-2.0.0-alpha-2", "code": "package authz\n\n// Superclass for authorization-related filters.\npublic abstract class AuthorizationFilter extends AccessControlFilter;\n// A Filter that can allow or deny access based on the host that sent the request.\npublic class HostFilter extends AuthorizationFilter;\n// A filter that translates an HTTP Request's Method (e.g.\npublic class HttpMethodPermissionFilter extends PermissionsAuthorizationFilter;\n", "des": "Servlet Filter implementations that perform authorization (access control) checks based on the Subject's abilities (for example, role or permission checks)."}
{"index": 2629, "repo": "shiro-web-2.0.0-alpha-2", "code": "package mgt\n\n// Enum representing all of the default Shiro Filter instances available to web applications.\npublic enum DefaultFilter extends Enum<DefaultFilter>;\n// Default FilterChainManager implementation maintaining a map of Filter instances (key: filter name, value: Filter) as well as a map of NamedFilterLists created from these Filters (key: filter chain name, value: NamedFilterList).\npublic class DefaultFilterChainManager extends Object implements FilterChainManager;\n", "des": "The filter 'mgt' (management) package contains components used in managing Filters that are available for filter chain construction, the filter chains themselves, as well as resolving filter chains based by name."}
{"index": 2630, "repo": "shiro-web-2.0.0-alpha-2", "code": "package mgt\n\n// Remembers a Subject's identity by saving the Subject's principals to a Cookie for later retrieval.\npublic class CookieRememberMeManager extends org.apache.shiro.mgt.AbstractRememberMeManager;\n// Default WebSecurityManager implementation used in web-based applications or any application that requires HTTP connectivity (SOAP, http remoting, etc.).\npublic class DefaultWebSecurityManager extends org.apache.shiro.mgt.DefaultSecurityManager implements WebSecurityManager;\n", "des": "Components supporting web-specific SecurityManager implementations."}
{"index": 2631, "repo": "shiro-web-2.0.0-alpha-2", "code": "package servlet\n\n// Base abstract Filter simplifying Filter initialization and access to init parameters.\npublic abstract class AbstractFilter extends ServletContextSupport implements javax.servlet.Filter;\n// Abstract base class that provides all standard Shiro request filtering behavior and expects subclasses to implement configuration-specific logic (INI, XML, .properties, etc.).\npublic abstract class AbstractShiroFilter extends OncePerRequestFilter;\n", "des": "Shiro-specific implementations of the Servlet API (Servlet Filters, et al.)."}
{"index": 2632, "repo": "shiro-web-2.0.0-alpha-2", "code": "package session\n\n// Session implementation that is backed entirely by a standard servlet container HttpSession instance.\npublic class HttpServletSession extends Object implements org.apache.shiro.session.Session;\n", "des": "Components supporting Session management in web-enabled applications."}
{"index": 2633, "repo": "shiro-web-2.0.0-alpha-2", "code": "package subject\n\n// A WebSubject represents a Subject instance that was acquired as a result of an incoming ServletRequest.\npublic interface WebSubject extends org.apache.shiro.subject.Subject, RequestPairSource;\n", "des": "Web-specific Subject interfaces to enable Subject use in web environments."}
{"index": 2634, "repo": "shiro-web-2.0.0-alpha-2", "code": "package support\n\n// Default WebSubjectContext implementation that provides for additional storage and retrieval of a ServletRequest and ServletResponse.\npublic class DefaultWebSubjectContext extends org.apache.shiro.subject.support.DefaultSubjectContext implements WebSubjectContext;\n", "des": "Supporting implementations of org.apache.shiro.web.subject package interfaces."}
{"index": 2635, "repo": "shiro-web-2.0.0-alpha-2", "code": "package tags\n\n// JSP tag that renders the tag body only if the current user has executed a successful authentication attempt during their current session.\npublic class AuthenticatedTag extends SecureTag;\n// JSP tag that renders the tag body if the current user is not known to the system, either because they haven't logged in yet, or because they have no 'RememberMe' identity.\npublic class GuestTag extends SecureTag;\n", "des": "Provides the Shiro JSP Tag Library implementations."}
{"index": 2636, "repo": "spring-integration-sftp-6.1.2", "code": "package config\n\n// Parser for 'sftp:inbound-channel-adapter'\npublic class SftpInboundChannelAdapterParser extends org.springframework.integration.file.config.AbstractRemoteFileInboundChannelAdapterParser;\n// Provides namespace support for using SFTP.\npublic class SftpNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n", "des": "Provides classes for configuration - parsers, namespace handlers."}
{"index": 2637, "repo": "spring-integration-sftp-6.1.2", "code": "package dsl\n\n// The factory for SFTP components.\npublic final class Sftp extends Object;\n// A RemoteFileInboundChannelAdapterSpec for an SftpInboundFileSynchronizingMessageSource.\npublic class SftpInboundChannelAdapterSpec extends org.springframework.integration.file.dsl.RemoteFileInboundChannelAdapterSpec<org.apache.sshd.sftp.client.SftpClient.DirEntry,SftpInboundChannelAdapterSpec,SftpInboundFileSynchronizingMessageSource>;\n", "des": "Provides SFTP Components for the Java DSL."}
{"index": 2638, "repo": "spring-integration-sftp-6.1.2", "code": "package filters\n\n// Persistent file list filter using the server's file timestamp to detect if we've already 'seen' this file.\npublic class SftpPersistentAcceptOnceFileListFilter extends org.springframework.integration.file.filters.AbstractPersistentAcceptOnceFileListFilter<org.apache.sshd.sftp.client.SftpClient.DirEntry>;\n", "des": "Provides classes supporting SFTP file filtering."}
{"index": 2639, "repo": "spring-integration-sftp-6.1.2", "code": "package gateway\n\n// Outbound Gateway for performing remote file operations via SFTP.\npublic class SftpOutboundGateway extends org.springframework.integration.file.remote.gateway.AbstractRemoteFileOutboundGateway<org.apache.sshd.sftp.client.SftpClient.DirEntry>;\n", "des": "Provides classes supporting SFTP gateways."}
{"index": 2640, "repo": "spring-integration-sftp-6.1.2", "code": "package inbound\n\n// Handles the synchronization between a remote SFTP directory and a local mount.\npublic class SftpInboundFileSynchronizer extends org.springframework.integration.file.remote.synchronizer.AbstractInboundFileSynchronizer<org.apache.sshd.sftp.client.SftpClient.DirEntry>;\n", "des": "Provides classes supporting inbound endpoints."}
{"index": 2641, "repo": "spring-integration-sftp-6.1.2", "code": "package outbound\n\n// Subclass of FileTransferringMessageHandler for SFTP.\npublic class SftpMessageHandler extends org.springframework.integration.file.remote.handler.FileTransferringMessageHandler<org.apache.sshd.sftp.client.SftpClient.DirEntry>;\n", "des": "Provides classes for the SFTP outbound channel adapter."}
{"index": 2642, "repo": "spring-integration-sftp-6.1.2", "code": "package server\n\n// ApplicationEvent generated from Apache Mina sftp events.\npublic abstract class ApacheMinaSftpEvent extends org.springframework.integration.file.remote.server.FileServerEvent;\n", "des": "Provides classes related to SFTP servers."}
{"index": 2643, "repo": "spring-integration-sftp-6.1.2", "code": "package session\n\n// Factory for creating SftpSession instances.\npublic class DefaultSftpSessionFactory extends Object implements org.springframework.integration.file.remote.session.SessionFactory<org.apache.sshd.sftp.client.SftpClient.DirEntry>, org.springframework.integration.file.remote.session.SharedSessionCapable;\n", "des": "Provides classes supporting SFTP sessions."}
{"index": 2644, "repo": "spring-data-cassandra-4.1.2", "code": "package cassandra\n\n// Spring data access exception for a Cassandra authentication failure.\npublic class CassandraAuthenticationException extends PermissionDeniedDataAccessException;\n// Spring data access exception for Cassandra when no host is available.\npublic class CassandraConnectionFailureException extends DataAccessResourceFailureException;\n", "des": "Spring Data's Cassandra abstraction."}
{"index": 2645, "repo": "spring-data-cassandra-4.1.2", "code": "package config\n\n// Base class for Spring Data Cassandra configuration using JavaConfig.\n@Configuration public abstract class AbstractCassandraConfiguration extends AbstractSessionConfiguration implements BeanClassLoaderAware;\n// \n@Deprecated public abstract class AbstractCqlTemplateConfiguration extends AbstractSessionConfiguration;\n", "des": "Spring Data Cassandra factory beans and configuration."}
{"index": 2646, "repo": "spring-data-cassandra-4.1.2", "code": "package core\n\n// Interface specifying a basic set of asynchronous Cassandra operations.\npublic interface AsyncCassandraOperations;\n// Primary implementation of AsyncCassandraOperations.\npublic class AsyncCassandraTemplate extends Object implements AsyncCassandraOperations, ApplicationEventPublisherAware, ApplicationContextAware;\n", "des": "Apache Cassandra core support."}
{"index": 2647, "repo": "spring-data-cassandra-4.1.2", "code": "package convert\n\n// Base class for CassandraConverter implementations.\npublic abstract class AbstractCassandraConverter extends Object implements CassandraConverter, InitializingBean;\n// \n@Deprecated public class BasicCassandraRowValueProvider extends RowValueProvider;\n// Descriptor for a Cassandra column type exposing a DataType.\npublic interface CassandraColumnType extends ColumnType;\n", "des": "Spring Data Cassandra specific converter infrastructure."}
{"index": 2648, "repo": "spring-data-cassandra-4.1.2", "code": "package cql\n\n// Simple adapter for PreparedStatementBinder that applies a given array of arguments.\npublic class ArgumentPreparedStatementBinder extends Object implements PreparedStatementBinder;\n// Interface specifying a basic set of CQL asynchronously executed operations.\npublic interface AsyncCqlOperations;\n", "des": "CQL core support."}
{"index": 2649, "repo": "spring-data-cassandra-4.1.2", "code": "package converter\n\n// Convenient converter that can be used to convert a single-row-single-column, single-row-multi-column, or multi-row ResultSet into the given value of a given type.\npublic abstract class AbstractResultSetConverter<T> extends Object implements Converter<com.datastax.oss.driver.api.core.cql.ResultSet,T>;\n", "des": "CQL specific converters."}
{"index": 2650, "repo": "spring-data-cassandra-4.1.2", "code": "package generator\n\n// CQL generator for generating an ADD clause of an ALTER TABLE statement.\npublic class AddColumnCqlGenerator extends ColumnChangeCqlGenerator<AddColumnSpecification>;\n// CQL generator for generating an ALTER column clause of an ALTER TABLE statement.\npublic class AlterColumnCqlGenerator extends ColumnChangeCqlGenerator<AlterColumnSpecification>;\n", "des": "CQL generators for Keyspace object actions."}
{"index": 2651, "repo": "spring-data-cassandra-4.1.2", "code": "package keyspace\n\n// Value object representing a specification to add a column.\npublic class AddColumnSpecification extends ColumnTypeChangeSpecification;\n// Value object representing a specification to alter a column.\npublic class AlterColumnSpecification extends ColumnTypeChangeSpecification;\n// Object to configure a ALTER KEYSPACE specification.\npublic class AlterKeyspaceSpecification extends KeyspaceOptionsSpecification<AlterKeyspaceSpecification>;\n", "des": "Keyspace object action specifications such as CREATE TABLE, DROP INDEX."}
{"index": 2652, "repo": "spring-data-cassandra-4.1.2", "code": "package legacy\n\n// \n@Deprecated(since=\"4.0\", forRemoval=true) public interface AsyncCqlOperations;\n// \n@Deprecated(since=\"4.0\", forRemoval=true) public class AsyncCqlTemplate extends CassandraAccessor implements AsyncCqlOperations;\n// Adapter to enable use of a RowCallbackHandler inside a ResultSetExtractor.\nprotected static class AsyncCqlTemplate.AsyncRowCallbackHandlerResultSetExtractor extends Object implements AsyncResultSetExtractor<Void>;\n", "des": "CQL legacy core asynchronous support for easier migration."}
{"index": 2653, "repo": "spring-data-cassandra-4.1.2", "code": "package session\n\n// Default implementation of a ReactiveSession.\npublic class DefaultBridgedReactiveSession extends Object implements ReactiveSession;\n// Default implementation of ReactiveSessionFactory.\npublic class DefaultReactiveSessionFactory extends Object implements ReactiveSessionFactory;\n// Default SessionFactory implementation.\npublic class DefaultSessionFactory extends Object implements SessionFactory;\n", "des": "Provides utility classes for simple CqlSession access and various session implementations."}
{"index": 2654, "repo": "spring-data-cassandra-4.1.2", "code": "package init\n\n// Thrown by ScriptUtils if a CQL script cannot be read.\npublic class CannotReadScriptException extends ScriptException;\n// Composite KeyspacePopulator that delegates to a list of given KeyspacePopulator implementations, executing all scripts.\npublic class CompositeKeyspacePopulator extends Object implements KeyspacePopulator;\n// Strategy used to populate, initialize, or clean up a Cassandra keyspace.\n@FunctionalInterface public interface KeyspacePopulator;\n", "des": "Provides extensible support for initializing databases through scripts."}
{"index": 2655, "repo": "spring-data-cassandra-4.1.2", "code": "package lookup\n\n// Abstract SessionFactory implementation that routes AbstractRoutingSessionFactory.getSession() calls to one of various target factories based on a lookup key.\npublic abstract class AbstractRoutingSessionFactory extends Object implements SessionFactory, InitializingBean;\n// SessionFactoryLookup implementation based on a Spring BeanFactory.\npublic class BeanFactorySessionFactoryLookup extends Object implements SessionFactoryLookup, BeanFactoryAware;\n", "des": "Provides a strategy for looking up SessionFactory."}
{"index": 2656, "repo": "spring-data-cassandra-4.1.2", "code": "package support\n\n// \n@Deprecated public class CachedPreparedStatementCreator extends Object implements PreparedStatementCreator;\n// \n@Deprecated public class MapPreparedStatementCache extends Object implements PreparedStatementCache;\n// MapPreparedStatementCache.CacheKey for PreparedStatement caching.\nprotected static class MapPreparedStatementCache.CacheKey extends Object;\n// \n@Deprecated public interface PreparedStatementCache;\n", "des": "Support classes for the CQL framework."}
{"index": 2657, "repo": "spring-data-cassandra-4.1.2", "code": "package util\n\n// \n@Deprecated public class CassandraFutureAdapter<T> extends Object implements ListenableFuture<T>;\n// Functional builder for Cassandra statements.\npublic class StatementBuilder<S extends com.datastax.oss.driver.api.querybuilder.BuildableQuery> extends Object;\n// Binding function.\n@FunctionalInterface public static interface StatementBuilder.BindFunction<S>;\n", "des": "Utility classes for basic CQL interaction."}
{"index": 2658, "repo": "spring-data-cassandra-4.1.2", "code": "package legacy\n\n// \n@Deprecated(since=\"4.0\", forRemoval=true) public interface AsyncCassandraOperations;\n// \n@Deprecated(since=\"4.0\", forRemoval=true) public class AsyncCassandraTemplate extends Object implements AsyncCassandraOperations, ApplicationEventPublisherAware, ApplicationContextAware;\n", "des": "Apache Cassandra legacy asynchronous support for easier migration."}
{"index": 2659, "repo": "spring-data-cassandra-4.1.2", "code": "package mapping\n\n// \n@Deprecated public class BasicCassandraMappingContext extends CassandraMappingContext;\n// Cassandra specific BasicPersistentEntity implementation that adds Cassandra specific metadata.\npublic class BasicCassandraPersistentEntity<T> extends BasicPersistentEntity<T,CassandraPersistentProperty> implements CassandraPersistentEntity<T>, ApplicationContextAware;\n", "des": "Infrastructure for the Apache Cassandra row-to-object mapping subsystem."}
{"index": 2660, "repo": "spring-data-cassandra-4.1.2", "code": "package event\n\n// Base class to implement domain specific ApplicationListeners for CassandraMappingEvent.\npublic abstract class AbstractCassandraEventListener<E> extends Object implements ApplicationListener<CassandraMappingEvent<?>>;\n// Base class for delete events.\npublic class AbstractDeleteEvent<T> extends AbstractStatementAwareMappingEvent<com.datastax.oss.driver.api.core.cql.Statement<?>>;\n", "des": "Event callback infrastructure for Cassandra mapping subsystem."}
{"index": 2661, "repo": "spring-data-cassandra-4.1.2", "code": "package query\n\n// Cassandra-specific PageRequest implementation providing access to paging state.\npublic class CassandraPageRequest extends PageRequest;\n// Value object representing a column name.\npublic abstract class ColumnName extends Object;\n// Value object to abstract column names involved in a CQL query.\npublic class Columns extends Object implements Iterable<ColumnName>;\n// Column selection.\npublic static class Columns.ColumnSelector extends Object implements Columns.Selector;\n", "des": "Apache Cassandra specific query and update support."}
{"index": 2662, "repo": "spring-data-cassandra-4.1.2", "code": "package observability\n\n// A Observation.Context for CqlSession.\npublic class CassandraObservationContext extends io.micrometer.observation.transport.SenderContext<Object>;\n// ObservationConvention for Cassandra.\npublic interface CassandraObservationConvention extends io.micrometer.observation.ObservationConvention<CassandraObservationContext>;\n// Returns the Cassandra Observation.\npublic interface CassandraObservationSupplier;\n", "des": "Infrastructure to provide driver observability using Micrometer."}
{"index": 2663, "repo": "spring-data-cassandra-4.1.2", "code": "package repository\n\n// Annotation to declare filtering for a derived query.\n@Documented @Target({METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) @Query(allowFiltering=true) public @interface AllowFiltering;\n// Cassandra-specific extension of the CrudRepository interface that allows the specification of a type for the identity of the @Table (or @Persistable) type.\n@NoRepositoryBean public interface CassandraRepository<T,ID> extends ListCrudRepository<T,ID>;\n", "des": "Apache Cassandra specific repository implementation."}
{"index": 2664, "repo": "spring-data-cassandra-4.1.2", "code": "package cdi\n\n// A bean which represents a Cassandra repository.\npublic class CassandraRepositoryBean<T> extends CdiRepositoryBean<T>;\n// A portable CDI extension which registers beans for Spring Data Cassandra repositories.\npublic class CassandraRepositoryExtension extends CdiRepositoryExtensionSupport;\n", "des": "CDI support for Apache Cassandra specific repository implementation."}
{"index": 2665, "repo": "spring-data-cassandra-4.1.2", "code": "package config\n\n// ImportBeanDefinitionRegistrar to setup Cassandra repositories via EnableCassandraRepositories.\npublic class CassandraRepositoriesRegistrar extends RepositoryBeanDefinitionRegistrarSupport;\n// RepositoryConfigurationExtension for Cassandra.\npublic class CassandraRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport;\n", "des": "Support infrastructure for the configuration of Apache Cassandra specific repositories."}
{"index": 2666, "repo": "spring-data-cassandra-4.1.2", "code": "package query\n\n// Base class for RepositoryQuery implementations for Cassandra.\npublic abstract class AbstractCassandraQuery extends CassandraRepositoryQuerySupport;\n// Base class for reactive RepositoryQuery implementations for Cassandra.\npublic abstract class AbstractReactiveCassandraQuery extends CassandraRepositoryQuerySupport;\n// Cassandra specific EntityInformation.\npublic interface CassandraEntityInformation<T,ID> extends EntityInformation<T,ID>, CassandraEntityMetadata<T>;\n", "des": "Query derivation mechanism for Apache Cassandra specific repositories."}
{"index": 2667, "repo": "spring-data-cassandra-4.1.2", "code": "package support\n\n// Factory to create CassandraRepository instances.\npublic class CassandraRepositoryFactory extends RepositoryFactorySupport;\n// FactoryBean to create CassandraRepository instances.\npublic class CassandraRepositoryFactoryBean<T extends Repository<S,ID>,S,ID> extends RepositoryFactoryBeanSupport<T,S,ID>;\n", "des": "Support infrastructure for query derivation of Apache Cassandra specific repositories."}
{"index": 2668, "repo": "spring-data-cassandra-4.1.2", "code": "package util\n\n// Builder for maps, which also conveniently implements Map via delegation for convenience so you don't have to actually MapBuilder.build() it.\npublic class MapBuilder<K,V> extends Object implements Map<K,V>;\n// Evaluates a SpEL expression.\npublic class SpelUtils extends Object;\n", "des": "Map and SpEL utility infrastructure."}
{"index": 2669, "repo": "spring-data-jdbc-3.1.2", "code": "package core\n\n// Specifies operations one can perform on a database, based on an Domain Type.\npublic interface JdbcAggregateOperations;\n// JdbcAggregateOperations implementation, storing aggregates in and obtaining them from a JDBC data store.\npublic class JdbcAggregateTemplate extends Object implements JdbcAggregateOperations;\n// Signals failure to set the id property of an entity.\npublic class UnableToSetId extends NonTransientDataAccessException;\n", "des": "Core JDBC implementation."}
{"index": 2670, "repo": "spring-data-jdbc-3.1.2", "code": "package convert\n\n// RelationalConverter that uses a MappingContext to apply basic conversion of relational values to property values.\npublic class BasicJdbcConverter extends BasicRelationalConverter implements JdbcConverter, ApplicationContextAware;\n// Counterpart to NamedParameterJdbcOperations containing methods for performing batch updates with generated keys.\npublic class BatchJdbcOperations extends Object;\n", "des": "JDBC-specific conversion classes."}
{"index": 2671, "repo": "spring-data-jdbc-3.1.2", "code": "package query\n\n// Base class for queries based on a repository method.\npublic abstract class AbstractJdbcQuery extends Object implements RepositoryQuery;\n// Delegating RowMapper that reads a row into T and converts it afterwards into Object.\nprotected static class AbstractJdbcQuery.ConvertingRowMapper<T> extends Object implements RowMapper<Object>;\n// Factory to create a RowMapper for a given class.\npublic static interface AbstractJdbcQuery.RowMapperFactory;\n", "des": "Query derivation mechanism for JDBC specific repositories."}
{"index": 2672, "repo": "spring-r2dbc-6.0.11", "code": "package r2dbc\n\n// Exception thrown when SQL specified is invalid.\npublic class BadSqlGrammarException extends org.springframework.dao.InvalidDataAccessResourceUsageException;\n// Exception thrown when we can't classify a R2dbcException into one of our generic data access exceptions.\npublic class UncategorizedR2dbcException extends org.springframework.dao.UncategorizedDataAccessException;\n", "des": "The classes in this package make R2DBC easier to use and reduce the likelihood of common errors."}
{"index": 2673, "repo": "spring-r2dbc-6.0.11", "code": "package connection\n\n// Helper class that provides static methods for obtaining R2DBC Connections from a ConnectionFactory.\npublic abstract class ConnectionFactoryUtils extends Object;\n// Resource holder wrapping a R2DBC Connection.\npublic class ConnectionHolder extends org.springframework.transaction.support.ResourceHolderSupport;\n", "des": "Provides a utility class for easy ConnectionFactory access, a ReactiveTransactionManager for a single ConnectionFactory, and various simple ConnectionFactory implementations."}
{"index": 2674, "repo": "spring-r2dbc-6.0.11", "code": "package init\n\n// Thrown by ScriptUtils if an SQL script cannot be read.\npublic class CannotReadScriptException extends ScriptException;\n// Composite DatabasePopulator that delegates to a list of given DatabasePopulator implementations, executing all scripts.\npublic class CompositeDatabasePopulator extends Object implements DatabasePopulator;\n", "des": "Provides extensible support for initializing databases through scripts."}
{"index": 2675, "repo": "spring-r2dbc-6.0.11", "code": "package lookup\n\n// Abstract ConnectionFactory implementation that routes AbstractRoutingConnectionFactory.create() calls to one of various target factories based on a lookup key.\npublic abstract class AbstractRoutingConnectionFactory extends Object implements ConnectionFactory, org.springframework.beans.factory.InitializingBean;\n", "des": "Provides a strategy for looking up R2DBC ConnectionFactories by name."}
{"index": 2676, "repo": "spring-r2dbc-6.0.11", "code": "package core\n\n// Mapping function implementation that creates a java.util.Map for each row, representing all columns as key-value pairs: one entry for each column, with the column name as key.\npublic class ColumnMapRowMapper extends Object implements BiFunction<Row,RowMetadata,Map<String,Object>>;\n// Interface declaring methods that accept callback Function to operate within the scope of a Connection.\npublic interface ConnectionAccessor;\n", "des": "Core domain types around DatabaseClient."}
{"index": 2677, "repo": "spring-r2dbc-6.0.11", "code": "package binding\n\n// Value object representing value and null bindings for a Statement using BindMarkers.\npublic class Bindings extends Object implements Iterable<Bindings.Binding>;\n// Base class for value objects representing a value or a NULL binding.\npublic abstract static class Bindings.Binding extends Object;\n// A bind marker represents a single bindable parameter within a query.\npublic interface BindMarker;\n", "des": "Classes providing an abstraction over SQL bind markers."}
{"index": 2678, "repo": "spring-session-core-3.1.1", "code": "package session\n\n// The WebSessionStore implementation that provides the WebSession implementation backed by a Session returned by the ReactiveSessionRepository.\npublic class SpringSessionWebSessionStore<S extends Session> extends Object implements org.springframework.web.server.session.WebSessionStore;\n", "des": "Spring Session reactive web support."}
{"index": 2679, "repo": "spring-data-jpa-3.1.2", "code": "package convert\n\n// QueryByExamplePredicateBuilder creates a single CriteriaBuilder.and(Predicate...) combined Predicate for a given Example.\npublic class QueryByExamplePredicateBuilder extends Object;\n", "des": "Spring Data JPA specific converter infrastructure."}
{"index": 2680, "repo": "spring-data-jpa-3.1.2", "code": "package threeten\n\n// JPA 2.1 converters to turn JSR-310 types into legacy Dates.\npublic class Jsr310JpaConverters extends Object;\n// \npublic static class Jsr310JpaConverters.InstantConverter extends Object implements jakarta.persistence.AttributeConverter<Instant,Timestamp>;\n// \npublic static class Jsr310JpaConverters.LocalDateConverter extends Object implements jakarta.persistence.AttributeConverter<LocalDate,Date>;\n", "des": "Spring Data JPA specific JSR-310 converters."}
{"index": 2681, "repo": "spring-data-jpa-3.1.2", "code": "package domain\n\n// Abstract base class for auditable entities.\n@MappedSuperclass public abstract class AbstractAuditable<U,PK extends Serializable> extends AbstractPersistable<PK> implements Auditable<U,PK,LocalDateTime>;\n// \n@Generated(\"org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor\") public abstract class AbstractAuditable_ extends AbstractPersistable_;\n", "des": "JPA specific support classes to implement domain classes."}
{"index": 2682, "repo": "spring-data-jpa-3.1.2", "code": "package support\n\n// BeanFactoryPostProcessor that ensures that the AnnotationBeanConfigurerAspect aspect is up and running before the EntityManagerFactory gets created as this already instantiates entity listeners and we need to get injection into Configurable to work in them.\npublic class AuditingBeanFactoryPostProcessor extends Object implements BeanFactoryPostProcessor;\n", "des": "Implementation classes for auditing with JPA."}
{"index": 2683, "repo": "spring-data-jpa-3.1.2", "code": "package mapping\n\n// MappingContext implementation based on a Jpa Metamodel.\npublic class JpaMetamodelMappingContext extends AbstractMappingContext<org.springframework.data.jpa.mapping.JpaPersistentEntityImpl<?>,JpaPersistentProperty>;\n// Interface for a JPA-specific entity.\npublic interface JpaPersistentEntity<T> extends PersistentEntity<T,JpaPersistentProperty>;\n// Interface for a JPA-specific PersistentProperty.\npublic interface JpaPersistentProperty extends PersistentProperty<JpaPersistentProperty>;\n", "des": "JPA specific support classes for the Spring Data mapping subsystem."}
{"index": 2684, "repo": "spring-data-jpa-3.1.2", "code": "package provider\n\n// Utility functions to work with Hibernate.\npublic abstract class HibernateUtils extends Object;\n// Enumeration representing persistence providers to be used.\npublic enum PersistenceProvider extends Enum<PersistenceProvider> implements QueryExtractor, ProxyIdAccessor, QueryComment;\n// Interface for a persistence provider specific accessor of identifiers held in proxies.\npublic interface ProxyIdAccessor;\n", "des": "JPA provider-specific utilities."}
{"index": 2685, "repo": "spring-data-jpa-3.1.2", "code": "package repository\n\n// Annotation to configure the JPA 2.1 EntityGraphs that should be used on repository methods.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented public @interface EntityGraph;\n// Enum for JPA 2.1 EntityGraph types.\npublic static enum EntityGraph.EntityGraphType extends Enum<EntityGraph.EntityGraphType>;\n// Interface for components to provide useful information about the current JPA setup within the current ApplicationContext.\npublic interface JpaContext;\n", "des": "Interfaces and annotations for JPA specific repositories."}
{"index": 2686, "repo": "spring-data-jpa-3.1.2", "code": "package cdi\n\n// A BeanManager-based QueryRewriterProvider.\npublic class BeanManagerQueryRewriterProvider extends Object implements QueryRewriterProvider;\n// A portable CDI extension which registers beans for Spring Data JPA repositories.\npublic class JpaRepositoryExtension extends CdiRepositoryExtensionSupport;\n", "des": "CDI support for Spring Data JPA Repositories."}
{"index": 2687, "repo": "spring-data-jpa-3.1.2", "code": "package config\n\n// BeanDefinitionParser for the auditing element.\npublic class AuditingBeanDefinitionParser extends Object implements BeanDefinitionParser;\n// Annotation to enable auditing in JPA via annotation configuration.\n@Documented @Target(TYPE) @Retention(RUNTIME) @Import(org.springframework.data.jpa.repository.config.JpaAuditingRegistrar.class) public @interface EnableJpaAuditing;\n", "des": "Classes for JPA namespace configuration."}
{"index": 2688, "repo": "spring-data-jpa-3.1.2", "code": "package query\n\n// Abstract base class to implement RepositoryQuerys.\npublic abstract class AbstractJpaQuery extends Object implements RepositoryQuery;\n// An exception thrown if the JPQL query is invalid.\npublic class BadJpqlGrammarException extends InvalidDataAccessResourceUsageException;\n// A BeanFactory-based QueryRewriterProvider.\npublic class BeanFactoryQueryRewriterProvider extends Object implements QueryRewriterProvider;\n", "des": "Query implementation to execute queries against JPA."}
{"index": 2689, "repo": "spring-data-jpa-3.1.2", "code": "package support\n\n// Interface to abstract CrudMethodMetadata that provide the LockModeType to be used for query execution.\npublic interface CrudMethodMetadata;\n// Default implementation of JpaContext.\npublic class DefaultJpaContext extends Object implements JpaContext;\n", "des": "JPA repository implementations."}
{"index": 2690, "repo": "spring-data-jpa-3.1.2", "code": "package support\n\n// PersistenceUnitPostProcessor that will scan for classes annotated with Entity or MappedSuperclass and add them to the PersistenceUnit post processed.\npublic class ClasspathScanningPersistenceUnitPostProcessor extends Object implements PersistenceUnitPostProcessor, ResourceLoaderAware, EnvironmentAware;\n", "des": "Various helper classes useful when working with JPA."}
{"index": 2691, "repo": "spring-data-jpa-3.1.2", "code": "package util\n\n// Utility methods to work with BeanDefinition instances from BeanFactoryPostProcessors.\npublic final class BeanDefinitionUtils extends Object;\n// Value object to represent a BeanDefinition for an EntityManagerFactory with a dedicated bean name.\npublic static class BeanDefinitionUtils.EntityManagerFactoryBeanDefinition extends Object;\n// Wrapper around the JPA Metamodel to be able to apply some fixes against bugs in provider implementations.\npublic class JpaMetamodel extends Object;\n", "des": "Spring Data JPA utilities."}
{"index": 2692, "repo": "spring-integration-http-6.1.2", "code": "package http\n\n// \npublic abstract class HttpHeaders extends Object;\n", "des": "Base package for Http support."}
{"index": 2693, "repo": "spring-integration-http-6.1.2", "code": "package config\n\n// Enables the IntegrationGraphController if org.springframework.web.servlet.DispatcherServlet or org.springframework.web.reactive.DispatcherHandler is present in the classpath.\n@Target(TYPE) @Retention(RUNTIME) @Inherited @Import(IntegrationGraphControllerRegistrar.class) public @interface EnableIntegrationGraphController;\n// Utility class for accessing HTTP integration components from the BeanFactory.\npublic final class HttpContextUtils extends Object;\n", "des": "Provides classes for configuration - parsers, namespace handlers."}
{"index": 2694, "repo": "spring-integration-http-6.1.2", "code": "package converter\n\n// An HttpMessageConverter implementation that delegates to an instance of AllEncompassingFormHttpMessageConverter while adding the capability to read multipart/form-data content in an HTTP request.\npublic class MultipartAwareFormHttpMessageConverter extends Object implements org.springframework.http.converter.HttpMessageConverter<org.springframework.util.MultiValueMap<String,?>>;\n", "des": "Provides classes supporting message conversion."}
{"index": 2695, "repo": "spring-integration-http-6.1.2", "code": "package dsl\n\n// A base MessagingGatewaySpec for the HttpRequestHandlingEndpointSupport implementations.\npublic abstract class BaseHttpInboundEndpointSpec<S extends BaseHttpInboundEndpointSpec<S,E>,E extends HttpRequestHandlingEndpointSupport> extends HttpInboundEndpointSupportSpec<S,E>;\n", "des": "Provides HTTP Components support for Spring Integration Java DSL."}
{"index": 2696, "repo": "spring-integration-http-6.1.2", "code": "package inbound\n\n// The MessagingGatewaySupport extension for HTTP Inbound endpoints with basic properties.\npublic class BaseHttpInboundEndpoint extends org.springframework.integration.gateway.MessagingGatewaySupport implements org.springframework.integration.context.OrderlyShutdownCapable;\n// The mapping to permit cross origin requests (CORS) for HttpRequestHandlingEndpointSupport.\npublic class CrossOrigin extends Object;\n", "des": "Provides classes supporting inbound endpoints."}
{"index": 2697, "repo": "spring-integration-http-6.1.2", "code": "package management\n\n// The REST Controller to provide the management API over IntegrationGraphServer.\n@RestController @RequestMapping(\"${spring.integration.graph.controller.request.mapping.path:/integration}\") public class IntegrationGraphController extends Object;\n", "des": "Provides classes related to management support."}
{"index": 2698, "repo": "spring-integration-http-6.1.2", "code": "package multipart\n\n// MultipartFileReader implementation that reads the MultipartFile content directly into a new MultipartFile instance that is not restricted to the HTTP request scope.\npublic class DefaultMultipartFileReader extends Object implements MultipartFileReader<org.springframework.web.multipart.MultipartFile>;\n", "des": "Provides classes supporting multipart HTTP requests."}
{"index": 2699, "repo": "spring-integration-http-6.1.2", "code": "package outbound\n\n// Base class for http outbound adapter/gateway.\npublic abstract class AbstractHttpRequestExecutingMessageHandler extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n// A MessageHandler implementation that executes HTTP requests by delegating to a RestTemplate instance.\npublic class HttpRequestExecutingMessageHandler extends AbstractHttpRequestExecutingMessageHandler;\n", "des": "Provides classes supporting outbound endpoints."}
{"index": 2700, "repo": "spring-integration-http-6.1.2", "code": "package support\n\n// Default HeaderMapper implementation for HTTP.\npublic class DefaultHttpHeaderMapper extends Object implements org.springframework.integration.mapping.HeaderMapper<org.springframework.http.HttpHeaders>, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Provides classes to support Http endpoints, including header mapping."}
{"index": 2701, "repo": "spring-integration-ftp-6.1.2", "code": "package config\n\n// Parser for the FTP 'inbound-channel-adapter' element.\npublic class FtpInboundChannelAdapterParser extends org.springframework.integration.file.config.AbstractRemoteFileInboundChannelAdapterParser;\n// Provides namespace support for using FTP\npublic class FtpNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n", "des": "Provides classes for configuration - parsers, namespace handlers."}
{"index": 2702, "repo": "spring-integration-ftp-6.1.2", "code": "package dsl\n\n// The factory for FTP components.\npublic final class Ftp extends Object;\n// A RemoteFileInboundChannelAdapterSpec for an FtpInboundFileSynchronizingMessageSource.\npublic class FtpInboundChannelAdapterSpec extends org.springframework.integration.file.dsl.RemoteFileInboundChannelAdapterSpec<org.apache.commons.net.ftp.FTPFile,FtpInboundChannelAdapterSpec,FtpInboundFileSynchronizingMessageSource>;\n", "des": "Provides FTP Components for the Java DSL."}
{"index": 2703, "repo": "spring-integration-ftp-6.1.2", "code": "package filters\n\n// Persistent file list filter using the server's file timestamp to detect if we've already 'seen' this file.\npublic class FtpPersistentAcceptOnceFileListFilter extends org.springframework.integration.file.filters.AbstractPersistentAcceptOnceFileListFilter<org.apache.commons.net.ftp.FTPFile>;\n", "des": "Provides classes supporting FTP file filtering."}
{"index": 2704, "repo": "spring-integration-ftp-6.1.2", "code": "package gateway\n\n// Outbound Gateway for performing remote file operations via FTP/FTPS.\npublic class FtpOutboundGateway extends org.springframework.integration.file.remote.gateway.AbstractRemoteFileOutboundGateway<org.apache.commons.net.ftp.FTPFile>;\n", "des": "Provides classes supporting FTP gateways."}
{"index": 2705, "repo": "spring-integration-ftp-6.1.2", "code": "package inbound\n\n// An implementation of AbstractInboundFileSynchronizer for FTP.\npublic class FtpInboundFileSynchronizer extends org.springframework.integration.file.remote.synchronizer.AbstractInboundFileSynchronizer<org.apache.commons.net.ftp.FTPFile>;\n// A MessageSource implementation for FTP.\npublic class FtpInboundFileSynchronizingMessageSource extends org.springframework.integration.file.remote.synchronizer.AbstractInboundFileSynchronizingMessageSource<org.apache.commons.net.ftp.FTPFile>;\n", "des": "Provides classes supporting inbound endpoints."}
{"index": 2706, "repo": "spring-integration-ftp-6.1.2", "code": "package outbound\n\n// The FTP specific FileTransferringMessageHandler extension.\npublic class FtpMessageHandler extends org.springframework.integration.file.remote.handler.FileTransferringMessageHandler<org.apache.commons.net.ftp.FTPFile>;\n", "des": "Provides classes for the FTP outbound channel adapter."}
{"index": 2707, "repo": "spring-integration-ftp-6.1.2", "code": "package server\n\n// ApplicationEvent generated from Apache Mina ftp events.\npublic abstract class ApacheMinaFtpEvent extends org.springframework.integration.file.remote.server.FileServerEvent;\n// A listener for FTP events emitted by an Apache Mina ftp server.\npublic class ApacheMinaFtplet extends org.apache.ftpserver.ftplet.DefaultFtplet implements org.springframework.context.ApplicationEventPublisherAware, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Provides classes related to FTP servers."}
{"index": 2708, "repo": "spring-integration-ftp-6.1.2", "code": "package session\n\n// Base class for FTP SessionFactory implementations.\npublic abstract class AbstractFtpSessionFactory<T extends org.apache.commons.net.ftp.FTPClient> extends Object implements org.springframework.integration.file.remote.session.SessionFactory<org.apache.commons.net.ftp.FTPFile>;\n// Default implementation of FTP SessionFactory.\npublic class DefaultFtpSessionFactory extends AbstractFtpSessionFactory<org.apache.commons.net.ftp.FTPClient>;\n", "des": "Provides classes supporting FTP sessions."}
{"index": 2709, "repo": "spring-batch-infrastructure-5.0.2", "code": "package item\n\n// Encapsulation of a list of items to be processed and possibly a list of failed items to be skipped.\npublic class Chunk<W> extends Object implements Iterable<W>, Serializable;\n// Object representing a context for an ItemStream.\npublic class ExecutionContext extends Object implements Serializable;\n// Marker interface indicating that an item should have the item count set on it.\npublic interface ItemCountAware;\n", "des": "Infrastructure interfaces and primary dependencies for item concerns."}
{"index": 2710, "repo": "spring-batch-infrastructure-5.0.2", "code": "package adapter\n\n// Superclass for delegating classes which dynamically call a custom method of injected object.\npublic abstract class AbstractMethodInvokingDelegator<T> extends Object implements org.springframework.beans.factory.InitializingBean;\n// Used to wrap a Throwable (not an Exception) thrown by a reflectively-invoked delegate.\npublic static class AbstractMethodInvokingDelegator.InvocationTargetThrowableWrapper extends RuntimeException;\n", "des": "Adapters for Plain Old Java Objects."}
{"index": 2711, "repo": "spring-batch-infrastructure-5.0.2", "code": "package amqp\n\n// AMQP ItemReader implementation using an AmqpTemplate to receive and/or convert messages.\npublic class AmqpItemReader<T> extends Object implements ItemReader<T>;\n// AMQP ItemWriter implementation using an AmqpTemplate to send messages.\npublic class AmqpItemWriter<T> extends Object implements ItemWriter<T>;\n", "des": "AMQP related batch components."}
{"index": 2712, "repo": "spring-batch-infrastructure-5.0.2", "code": "package builder\n\n// A builder implementation for the AmqpItemReader\npublic class AmqpItemReaderBuilder<T> extends Object;\n// A builder implementation for the AmqpItemWriter\npublic class AmqpItemWriterBuilder<T> extends Object;\n", "des": "Builders for AMQP item reader and writer."}
{"index": 2713, "repo": "spring-batch-infrastructure-5.0.2", "code": "package data\n\n// A base class that handles basic reading logic based on the paginated semantics of Spring Data's paginated facilities.\npublic abstract class AbstractPaginatedDataItemReader<T> extends AbstractItemCountingItemStreamItemReader<T>;\n// Restartable ItemReader that reads documents from MongoDB via a paging technique.\npublic class MongoItemReader<T> extends AbstractPaginatedDataItemReader<T> implements org.springframework.beans.factory.InitializingBean;\n", "des": "Spring Data related readers and writers."}
{"index": 2714, "repo": "spring-batch-infrastructure-5.0.2", "code": "package builder\n\n// A builder implementation for the MongoItemReader\npublic class MongoItemReaderBuilder<T> extends Object;\n// A builder implementation for the MongoItemWriter\npublic class MongoItemWriterBuilder<T> extends Object;\n// \n@Deprecated public class Neo4jItemReaderBuilder<T> extends Object;\n// \n@Deprecated public class Neo4jItemWriterBuilder<T> extends Object;\n// A builder implementation for the RepositoryItemReader.\npublic class RepositoryItemReaderBuilder<T> extends Object;\n", "des": "Builders for Spring Data item readers and writers."}
{"index": 2715, "repo": "spring-batch-infrastructure-5.0.2", "code": "package database\n\n// Abstract base class for any simple item reader that opens a database cursor and continually retrieves the next row in the ResultSet.\npublic abstract class AbstractCursorItemReader<T> extends AbstractItemCountingItemStreamItemReader<T> implements org.springframework.beans.factory.InitializingBean;\n", "des": "Infrastructure implementations of database based item readers and writers."}
{"index": 2716, "repo": "spring-batch-infrastructure-5.0.2", "code": "package builder\n\n// \n@Deprecated(since=\"5.0\", forRemoval=true) public class HibernateCursorItemReaderBuilder<T> extends Object;\n// \n@Deprecated(since=\"5.0\", forRemoval=true) public class HibernateItemWriterBuilder<T> extends Object;\n// \n@Deprecated(since=\"5.0\", forRemoval=true) public class HibernatePagingItemReaderBuilder<T> extends Object;\n// A builder implementation for the JdbcBatchItemWriter.\npublic class JdbcBatchItemWriterBuilder<T> extends Object;\n", "des": "Builders for database item readers and writers."}
{"index": 2717, "repo": "spring-batch-infrastructure-5.0.2", "code": "package orm\n\n// \n@Deprecated(since=\"5.0\", forRemoval=true) public abstract class AbstractHibernateQueryProvider<T> extends Object implements HibernateQueryProvider<T>;\n// Abstract JPA Query Provider to serve as a base class for all JPA Query providers.\npublic abstract class AbstractJpaQueryProvider extends Object implements JpaQueryProvider, org.springframework.beans.factory.InitializingBean;\n", "des": "Support classes for components using various ORM related technologies."}
{"index": 2718, "repo": "spring-batch-infrastructure-5.0.2", "code": "package support\n\n// Abstract SQL Paging Query Provider to serve as a base class for all provided SQL paging query providers.\npublic abstract class AbstractSqlPagingQueryProvider extends Object implements PagingQueryProvider;\n// Implementation of the ItemPreparedStatementSetter interface that assumes all keys are contained within a Map with the column name as the key.\npublic class ColumnMapItemPreparedStatementSetter extends Object implements ItemPreparedStatementSetter<Map<String,Object>>;\n", "des": "Support classes for database specific semantics."}
{"index": 2719, "repo": "spring-batch-infrastructure-5.0.2", "code": "package file\n\n// A factory strategy for custom extensions of BufferedReader allowing customisation of the standard behaviour of the java.io variety.\npublic interface BufferedReaderFactory;\n// \npublic class DefaultBufferedReaderFactory extends Object implements BufferedReaderFactory;\n// Callback interface for writing a footer to a file.\npublic interface FlatFileFooterCallback;\n// Callback interface for writing a header to a file.\npublic interface FlatFileHeaderCallback;\n", "des": "Infrastructure implementations of io file concerns."}
{"index": 2720, "repo": "spring-batch-infrastructure-5.0.2", "code": "package builder\n\n// A builder implementation for the FlatFileItemReader.\npublic class FlatFileItemReaderBuilder<T> extends Object;\n// A builder for constructing a DelimitedLineTokenizer\npublic static class FlatFileItemReaderBuilder.DelimitedBuilder<T> extends Object;\n// A builder for constructing a FixedLengthTokenizer\npublic static class FlatFileItemReaderBuilder.FixedLengthBuilder<T> extends Object;\n", "des": "Builders for file item readers and writers."}
{"index": 2721, "repo": "spring-batch-infrastructure-5.0.2", "code": "package mapping\n\n// A basic array mapper, returning the values backing a fieldset.\npublic class ArrayFieldSetMapper extends Object implements FieldSetMapper<String[]>;\n// FieldSetMapper implementation based on bean property paths.\npublic class BeanWrapperFieldSetMapper<T> extends DefaultPropertyEditorRegistrar implements FieldSetMapper<T>, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Infrastructure implementations of io file support mapping concerns."}
{"index": 2722, "repo": "spring-batch-infrastructure-5.0.2", "code": "package separator\n\n// A RecordSeparatorPolicy that treats all lines as record endings, as long as they do not have unterminated quotes, and do not end in a continuation marker.\npublic class DefaultRecordSeparatorPolicy extends SimpleRecordSeparatorPolicy;\n// JSON-based record separator.\npublic class JsonRecordSeparatorPolicy extends SimpleRecordSeparatorPolicy;\n// Policy for text file-based input sources to determine the end of a record, e.g.\npublic interface RecordSeparatorPolicy;\n", "des": "Infrastructure implementations of io file support separator concerns."}
{"index": 2723, "repo": "spring-batch-infrastructure-5.0.2", "code": "package transform\n\n// Abstract class handling common concerns of various LineTokenizer implementations such as dealing with names and actual construction of FieldSet\npublic abstract class AbstractLineTokenizer extends Object implements LineTokenizer;\n// This is a field extractor for a java bean.\npublic class BeanWrapperFieldExtractor<T> extends Object implements FieldExtractor<T>, org.springframework.beans.factory.InitializingBean;\n// \npublic class ConversionException extends RuntimeException;\n", "des": "Infrastructure implementations of io file support transform concerns."}
{"index": 2724, "repo": "spring-batch-infrastructure-5.0.2", "code": "package function\n\n// An ItemProcessor implementation that delegates to a Function\npublic class FunctionItemProcessor<I,O> extends Object implements ItemProcessor<I,O>;\n", "des": "Adapters for java.util.function components."}
{"index": 2725, "repo": "spring-batch-infrastructure-5.0.2", "code": "package jms\n\n// An ItemReader for JMS using a JmsTemplate.\npublic class JmsItemReader<T> extends Object implements ItemReader<T>, org.springframework.beans.factory.InitializingBean;\n// An ItemWriter for JMS using a JmsTemplate.\npublic class JmsItemWriter<T> extends Object implements ItemWriter<T>;\n// A MethodArgumentsKeyGenerator for JMS\npublic class JmsMethodArgumentsKeyGenerator extends Object implements org.springframework.retry.interceptor.MethodArgumentsKeyGenerator;\n", "des": "JMS based reader/writer and related components."}
{"index": 2726, "repo": "spring-batch-infrastructure-5.0.2", "code": "package builder\n\n// Creates a fully qualified JmsItemReader.\npublic class JmsItemReaderBuilder<T> extends Object;\n// Creates a fully qualified JmsItemWriter.\npublic class JmsItemWriterBuilder<T> extends Object;\n", "des": "Builders for JMS item reader and writer."}
{"index": 2727, "repo": "spring-batch-infrastructure-5.0.2", "code": "package json\n\n// A json object marshaller that uses Google Gson to marshal an object into a json representation.\npublic class GsonJsonObjectMarshaller<T> extends Object implements JsonObjectMarshaller<T>;\n// Implementation of JsonObjectReader based on Google Gson.\npublic class GsonJsonObjectReader<T> extends Object implements JsonObjectReader<T>;\n", "des": "Infrastructure implementations of JSON input and output."}
{"index": 2728, "repo": "spring-batch-infrastructure-5.0.2", "code": "package builder\n\n// Builder for JsonFileItemWriter.\npublic class JsonFileItemWriterBuilder<T> extends Object;\n// A builder for JsonItemReader.\npublic class JsonItemReaderBuilder<T> extends Object;\n", "des": "Builders for JSON item reader and writer."}
{"index": 2729, "repo": "spring-batch-infrastructure-5.0.2", "code": "package kafka\n\n// An ItemReader implementation for Apache Kafka.\npublic class KafkaItemReader<K,V> extends AbstractItemStreamItemReader<V>;\n// An ItemWriter implementation for Apache Kafka using a KafkaTemplate with default topic configured.\npublic class KafkaItemWriter<K,T> extends KeyValueItemWriter<K,T>;\n", "des": "Apache Kafka related readers and writers"}
{"index": 2730, "repo": "spring-batch-infrastructure-5.0.2", "code": "package builder\n\n// A builder implementation for the KafkaItemReader.\npublic class KafkaItemReaderBuilder<K,V> extends Object;\n// A builder implementation for the KafkaItemWriter\npublic class KafkaItemWriterBuilder<K,V> extends Object;\n", "des": "Builders for Apache Kafka item reader and writer."}
{"index": 2731, "repo": "spring-batch-infrastructure-5.0.2", "code": "package ldif\n\n// The LdifReader is an adaptation of the FlatFileItemReader built around an LdifParser.\npublic class LdifReader extends AbstractItemCountingItemStreamItemReader<org.springframework.ldap.core.LdapAttributes> implements ResourceAwareItemReaderItemStream<org.springframework.ldap.core.LdapAttributes>, org.springframework.beans.factory.InitializingBean;\n", "des": "This package contains the classes required for using the LdifParser in Spring LDAP."}
{"index": 2732, "repo": "spring-batch-infrastructure-5.0.2", "code": "package builder\n\n// Creates a fully qualified LdifReader.\npublic class LdifReaderBuilder extends Object;\n// Creates a fully qualified MappingLdifReader.\npublic class MappingLdifReaderBuilder<T> extends Object;\n", "des": "Builders for LDIF related components."}
{"index": 2733, "repo": "spring-batch-infrastructure-5.0.2", "code": "package mail\n\n// This MailErrorHandler implementation simply rethrows the exception it receives.\npublic class DefaultMailErrorHandler extends Object implements MailErrorHandler;\n// This class is used to handle errors that occur when email messages are unable to be sent.\npublic interface MailErrorHandler;\n", "des": "Java Mail based components."}
{"index": 2734, "repo": "spring-batch-infrastructure-5.0.2", "code": "package builder\n\n// Creates a fully qualified SimpleMailMessageItemWriter.\npublic class SimpleMailMessageItemWriterBuilder extends Object;\n", "des": "Builders for JavaMail related components."}
{"index": 2735, "repo": "spring-batch-infrastructure-5.0.2", "code": "package javamail\n\n// A simple ItemWriter that can send mail messages.\npublic class MimeMessageItemWriter extends Object implements ItemWriter<jakarta.mail.internet.MimeMessage>;\n", "des": "JavaMail related components."}
{"index": 2736, "repo": "spring-batch-infrastructure-5.0.2", "code": "package support\n\n// Base class for item writers that write data to a file or stream.\npublic abstract class AbstractFileItemWriter<T> extends AbstractItemStreamItemWriter<T> implements ResourceAwareItemWriterItemStream<T>, org.springframework.beans.factory.InitializingBean;\n", "des": "Internal support package"}
{"index": 2737, "repo": "spring-batch-infrastructure-5.0.2", "code": "package builder\n\n// Creates a fully qualified ClassifierCompositeItemProcessor.\npublic class ClassifierCompositeItemProcessorBuilder<I,O> extends Object;\n// Creates a fully qualified ClassifierCompositeItemWriter.\npublic class ClassifierCompositeItemWriterBuilder<T> extends Object;\n// Creates a fully qualified CompositeItemProcessorBuilder.\npublic class CompositeItemProcessorBuilder<I,O> extends Object;\n", "des": "Builders for support classes."}
{"index": 2738, "repo": "spring-batch-infrastructure-5.0.2", "code": "package util\n\n// Facilitates assigning names to objects persisting data in ExecutionContext and generating keys for ExecutionContext based on the name.\npublic class ExecutionContextUserSupport extends Object;\n// Utility methods for files used in batch processing.\npublic final class FileUtils extends Object;\n", "des": "Infrastructure utility classes."}
{"index": 2739, "repo": "spring-batch-infrastructure-5.0.2", "code": "package validator\n\n// A ValidatingItemProcessor that uses the Bean Validation API (JSR-303) to validate items.\npublic class BeanValidatingItemProcessor<T> extends ValidatingItemProcessor<T>;\n// Adapts the Validator interface to Validator.\npublic class SpringValidator<T> extends Object implements Validator<T>, org.springframework.beans.factory.InitializingBean;\n", "des": "Infrastructure implementations of item validator concerns."}
{"index": 2740, "repo": "spring-batch-infrastructure-5.0.2", "code": "package xml\n\n// Item reader for reading XML input based on StAX.\npublic class StaxEventItemReader<T> extends AbstractItemCountingItemStreamItemReader<T> implements ResourceAwareItemReaderItemStream<T>, org.springframework.beans.factory.InitializingBean;\n", "des": "Infrastructure implementations of xml input and output."}
{"index": 2741, "repo": "spring-batch-infrastructure-5.0.2", "code": "package builder\n\n// A fluent builder for the StaxEventItemReader\npublic class StaxEventItemReaderBuilder<T> extends Object;\n// A builder for the StaxEventItemWriter.\npublic class StaxEventItemWriterBuilder<T> extends Object;\n", "des": "Builders for Stax event item reader and writer."}
{"index": 2742, "repo": "spring-batch-infrastructure-5.0.2", "code": "package stax\n\n// Default implementation of FragmentEventReader\npublic class DefaultFragmentEventReader extends Object implements FragmentEventReader;\n// Interface for event readers which support treating XML fragments as standalone XML documents by wrapping the fragments with StartDocument and EndDocument events.\npublic interface FragmentEventReader extends XMLEventReader;\n", "des": "Item reader and writer based on Stax."}
{"index": 2743, "repo": "spring-batch-infrastructure-5.0.2", "code": "package poller\n\n// A Poller that uses the callers thread to poll for a result as soon as it is asked for.\npublic class DirectPoller<S> extends Object implements Poller<S>;\n// Interface for polling a Callable instance provided by the user.\npublic interface Poller<T>;\n", "des": "APIs for polling support."}
{"index": 2744, "repo": "spring-batch-infrastructure-5.0.2", "code": "package repeat\n\n// Interface for batch completion policies, to enable batch operations to strategise normal completion conditions.\npublic interface CompletionPolicy;\n// Callback interface for batch operations.\npublic interface RepeatCallback;\n// Base interface for context which controls the state and completion / termination of a batch step.\npublic interface RepeatContext extends org.springframework.core.AttributeAccessor;\n", "des": "Infrastructure implementations of repeat concerns."}
{"index": 2745, "repo": "spring-batch-infrastructure-5.0.2", "code": "package callback\n\n// Callback that delegates to another callback, via a RepeatOperations instance.\npublic class NestedRepeatCallback extends Object implements RepeatCallback;\n", "des": "Infrastructure implementations of repeat callback concerns."}
{"index": 2746, "repo": "spring-batch-infrastructure-5.0.2", "code": "package context\n\n// Helper class for policies that need to count the number of occurrences of some event (e.g.\npublic class RepeatContextCounter extends Object;\n// \npublic class RepeatContextSupport extends SynchronizedAttributeAccessor implements RepeatContext;\n// An AttributeAccessor that synchronizes on a mutex (not this) before modifying or accessing the underlying attributes.\npublic class SynchronizedAttributeAccessor extends Object implements org.springframework.core.AttributeAccessor;\n", "des": "Infrastructure implementations of repeat context concerns."}
{"index": 2747, "repo": "spring-batch-infrastructure-5.0.2", "code": "package exception\n\n// Composite ExceptionHandler that loops though a list of delegates.\npublic class CompositeExceptionHandler extends Object implements ExceptionHandler;\n// Default implementation of ExceptionHandler - just re-throws the exception it encounters.\npublic class DefaultExceptionHandler extends Object implements ExceptionHandler;\n// Handler to allow strategies for re-throwing exceptions.\n@FunctionalInterface public interface ExceptionHandler;\n", "des": "Infrastructure implementations of repeat exception handler concerns."}
{"index": 2748, "repo": "spring-batch-infrastructure-5.0.2", "code": "package interceptor\n\n// A MethodInterceptor that can be used to automatically repeat calls to a method on a service.\npublic class RepeatOperationsInterceptor extends Object implements org.aopalliance.intercept.MethodInterceptor;\n", "des": "Infrastructure implementations of repeat aop concerns."}
{"index": 2749, "repo": "spring-batch-infrastructure-5.0.2", "code": "package listener\n\n// Allows a user to register one or more RepeatListeners to be notified on batch events.\npublic class CompositeRepeatListener extends Object implements RepeatListener;\n// \n@Deprecated public class RepeatListenerSupport extends Object implements RepeatListener;\n", "des": "Infrastructure implementations of repeat interceptor concerns."}
{"index": 2750, "repo": "spring-batch-infrastructure-5.0.2", "code": "package policy\n\n// Very simple base class for CompletionPolicy implementations.\npublic class CompletionPolicySupport extends Object implements CompletionPolicy;\n// Composite policy that loops through a list of delegate policies and answers calls by a consensus.\npublic class CompositeCompletionPolicy extends Object implements CompletionPolicy;\n", "des": "Infrastructure implementations of repeat policy concerns."}
{"index": 2751, "repo": "spring-batch-infrastructure-5.0.2", "code": "package support\n\n// Internal interface for extensions of RepeatTemplate.\npublic interface RepeatInternalState;\n// \npublic class RepeatInternalStateSupport extends Object implements RepeatInternalState;\n// Global variable support for repeat clients.\npublic final class RepeatSynchronizationManager extends Object;\n// Simple implementation and base class for batch templates implementing RepeatOperations.\npublic class RepeatTemplate extends Object implements RepeatOperations;\n", "des": "Infrastructure implementations of repeat support concerns."}
{"index": 2752, "repo": "spring-batch-infrastructure-5.0.2", "code": "package support\n\n// MethodResolver implementation that finds a single Method on the given Class that contains the specified annotation type.\npublic class AnnotationMethodResolver extends Object implements MethodResolver;\n// Enum representing a database type, such as DB2 or oracle.\npublic enum DatabaseType extends Enum<DatabaseType>;\n", "des": "Infrastructure implementations of support concerns."}
{"index": 2753, "repo": "spring-batch-infrastructure-5.0.2", "code": "package transaction\n\n// Unchecked exception indicating that an error has occurred while trying to flush a buffer.\npublic class FlushFailedException extends RuntimeException;\n// \npublic class ResourcelessTransactionManager extends org.springframework.transaction.support.AbstractPlatformTransactionManager;\n// Wrapper for a FileChannel that delays actually writing to or closing the buffer if a transaction is active.\npublic class TransactionAwareBufferedWriter extends Writer;\n", "des": "Infrastructure implementations of support transaction concerns."}
{"index": 2754, "repo": "spring-beans-6.0.11", "code": "package beans\n\n// A basic ConfigurablePropertyAccessor that provides the necessary infrastructure for all typical use cases.\npublic abstract class AbstractNestablePropertyAccessor extends AbstractPropertyAccessor;\n// A handler for a specific property.\nprotected abstract static class AbstractNestablePropertyAccessor.PropertyHandler extends Object;\n// Holder class used to store property tokens.\nprotected static class AbstractNestablePropertyAccessor.PropertyTokenHolder extends Object;\n", "des": "This package contains interfaces and classes for manipulating Java beans."}
{"index": 2755, "repo": "spring-beans-6.0.11", "code": "package factory\n\n// A marker superinterface indicating that a bean is eligible to be notified by the Spring container of a particular framework object through a callback-style method.\npublic interface Aware;\n// Callback that allows a bean to be aware of the bean class loader; that is, the class loader used by the present bean factory to load bean classes.\npublic interface BeanClassLoaderAware extends Aware;\n", "des": "The core package implementing Spring's lightweight Inversion of Control (IoC) container."}
{"index": 2756, "repo": "spring-beans-6.0.11", "code": "package annotation\n\n// Extended BeanDefinition interface that exposes AnnotationMetadata about its bean class - without requiring the class to be loaded yet.\npublic interface AnnotatedBeanDefinition extends BeanDefinition;\n// Extension of the GenericBeanDefinition class, adding support for annotation metadata exposed through the AnnotatedBeanDefinition interface.\npublic class AnnotatedGenericBeanDefinition extends GenericBeanDefinition implements AnnotatedBeanDefinition;\n", "des": "Support package for annotation-driven bean configuration."}
{"index": 2757, "repo": "spring-beans-6.0.11", "code": "package aot\n\n// A collection of AOT services that can be loaded from a SpringFactoriesLoader or obtained from a ListableBeanFactory.\npublic final class AotServices<T> extends Object implements Iterable<T>;\n// Loader class used to actually load the services.\npublic static class AotServices.Loader extends Object;\n// Sources from which services were obtained.\npublic static enum AotServices.Source extends Enum<AotServices.Source>;\n", "des": "AOT support for bean factories."}
{"index": 2758, "repo": "spring-beans-6.0.11", "code": "package config\n\n// Simple template superclass for FactoryBean implementations that creates a singleton or a prototype object, depending on a flag.\npublic abstract class AbstractFactoryBean<T> extends Object implements FactoryBean<T>, BeanClassLoaderAware, BeanFactoryAware, InitializingBean, DisposableBean;\n", "des": "SPI interfaces and configuration-related convenience classes for bean factories."}
{"index": 2759, "repo": "spring-beans-6.0.11", "code": "package groovy\n\n// A Groovy-based reader for Spring bean definitions: like a Groovy builder, but more of a DSL for Spring configuration.\npublic class GroovyBeanDefinitionReader extends AbstractBeanDefinitionReader implements groovy.lang.GroovyObject;\n", "des": "Support package for Groovy-based bean definitions."}
{"index": 2760, "repo": "spring-beans-6.0.11", "code": "package parsing\n\n// Base implementation of ComponentDefinition that provides a basic implementation of AbstractComponentDefinition.getDescription() which delegates to ComponentDefinition.getName().\npublic abstract class AbstractComponentDefinition extends Object implements ComponentDefinition;\n// Representation of an alias that has been registered during the parsing process.\npublic class AliasDefinition extends Object implements BeanMetadataElement;\n", "des": "Support infrastructure for bean definition parsing."}
{"index": 2761, "repo": "spring-beans-6.0.11", "code": "package serviceloader\n\n// Abstract base class for FactoryBeans operating on the JDK 1.6 ServiceLoader facility.\npublic abstract class AbstractServiceLoaderBasedFactoryBean extends AbstractFactoryBean<Object> implements BeanClassLoaderAware;\n// FactoryBean that exposes the 'primary' service for the configured service class, obtained through the JDK 1.6 ServiceLoader facility.\npublic class ServiceFactoryBean extends AbstractServiceLoaderBasedFactoryBean implements BeanClassLoaderAware;\n", "des": "Support package for the Java ServiceLoader facility."}
{"index": 2762, "repo": "spring-beans-6.0.11", "code": "package support\n\n// Abstract bean factory superclass that implements default bean creation, with the full capabilities specified by the RootBeanDefinition class.\npublic abstract class AbstractAutowireCapableBeanFactory extends AbstractBeanFactory implements AutowireCapableBeanFactory;\n", "des": "Classes supporting the org.springframework.beans.factory package."}
{"index": 2763, "repo": "spring-beans-6.0.11", "code": "package wiring\n\n// Convenient base class for bean configurers that can perform Dependency Injection on objects (however they may be created).\npublic class BeanConfigurerSupport extends Object implements BeanFactoryAware, InitializingBean, DisposableBean;\n// Holder for bean wiring metadata information about a particular class.\npublic class BeanWiringInfo extends Object;\n", "des": "Mechanism to determine bean wiring metadata from a bean instance."}
{"index": 2764, "repo": "spring-beans-6.0.11", "code": "package xml\n\n// Abstract BeanDefinitionParser implementation providing a number of convenience methods and a template method that subclasses must override to provide the actual parsing logic.\npublic abstract class AbstractBeanDefinitionParser extends Object implements BeanDefinitionParser;\n", "des": "Contains an abstract XML-based BeanFactory implementation, including a standard \"spring-beans\" XSD."}
{"index": 2765, "repo": "spring-beans-6.0.11", "code": "package propertyeditors\n\n// Editor for byte arrays.\npublic class ByteArrayPropertyEditor extends PropertyEditorSupport;\n// Editor for a Character, to populate a property of type Character or char from a String value.\npublic class CharacterEditor extends PropertyEditorSupport;\n// Editor for char arrays.\npublic class CharArrayPropertyEditor extends PropertyEditorSupport;\n", "des": "Properties editors used to convert from String values to object types such as java.util.Properties."}
{"index": 2766, "repo": "spring-beans-6.0.11", "code": "package support\n\n// Subclass of MethodInvoker that tries to convert the given arguments for the actual target method via a TypeConverter.\npublic class ArgumentConvertingMethodInvoker extends org.springframework.util.MethodInvoker;\n// Mutable implementation of the SortDefinition interface.\npublic class MutableSortDefinition extends Object implements SortDefinition, Serializable;\n", "des": "Classes supporting the org.springframework.beans package, such as utility classes for sorting and holding lists of beans."}
{"index": 2767, "repo": "spring-jms-6.0.11", "code": "package jms\n\n// Runtime exception mirroring the JMS IllegalStateException.\npublic class IllegalStateException extends JmsException;\n// Runtime exception mirroring the JMS InvalidClientIDException.\npublic class InvalidClientIDException extends JmsException;\n// Runtime exception mirroring the JMS InvalidDestinationException.\npublic class InvalidDestinationException extends JmsException;\n", "des": "This package contains integration classes for JMS, allowing for Spring-style JMS access."}
{"index": 2768, "repo": "spring-jms-6.0.11", "code": "package annotation\n\n// Enable JMS listener annotated endpoints that are created under the cover by a JmsListenerContainerFactory.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(JmsBootstrapConfiguration.class) public @interface EnableJms;\n// @Configuration class that registers a JmsListenerAnnotationBeanPostProcessor bean capable of processing Spring's @JmsListener annotation.\n@Configuration(proxyBeanMethods=false) @Role(2) public class JmsBootstrapConfiguration extends Object;\n", "des": "Annotations and support classes for declarative JMS listener endpoints."}
{"index": 2769, "repo": "spring-jms-6.0.11", "code": "package config\n\n// Base JmsListenerContainerFactory for Spring's base container implementation.\npublic abstract class AbstractJmsListenerContainerFactory<C extends AbstractMessageListenerContainer> extends Object implements JmsListenerContainerFactory<C>;\n// Base model for a JMS listener endpoint.\npublic abstract class AbstractJmsListenerEndpoint extends Object implements JmsListenerEndpoint;\n", "des": "Support package for declarative messaging configuration, with Java configuration and XML schema support."}
{"index": 2770, "repo": "spring-jms-6.0.11", "code": "package connection\n\n// SingleConnectionFactory subclass that adds Session caching as well as MessageProducer and MessageConsumer caching.\npublic class CachingConnectionFactory extends SingleConnectionFactory;\n// Implementation of the JMS ExceptionListener interface that supports chaining, allowing the addition of multiple ExceptionListener instances in order.\npublic class ChainedExceptionListener extends Object implements ExceptionListener;\n", "des": "Provides a PlatformTransactionManager implementation for a single JMS ConnectionFactory, and a SingleConnectionFactory adapter."}
{"index": 2771, "repo": "spring-jms-6.0.11", "code": "package core\n\n// Callback for browsing the messages in a JMS queue.\n@FunctionalInterface public interface BrowserCallback<T>;\n", "des": "Core package of the JMS support."}
{"index": 2772, "repo": "spring-jms-6.0.11", "code": "package support\n\n// Convenient superclass for application classes that need JMS access.\npublic abstract class JmsGatewaySupport extends Object implements org.springframework.beans.factory.InitializingBean;\n", "des": "Classes supporting the org.springframework.jms.core package."}
{"index": 2773, "repo": "spring-jms-6.0.11", "code": "package listener\n\n// Common base class for all containers which need to implement listening based on a JMS Connection (either shared or freshly obtained for each attempt).\npublic abstract class AbstractJmsListeningContainer extends JmsDestinationAccessor implements org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.DisposableBean, org.springframework.context.SmartLifecycle;\n", "des": "This package contains the base message listener container facility."}
{"index": 2774, "repo": "spring-jms-6.0.11", "code": "package adapter\n\n// An abstract JMS MessageListener adapter providing the necessary infrastructure to extract the payload of a JMS Message.\npublic abstract class AbstractAdaptableMessageListener extends Object implements MessageListener, SessionAwareMessageListener<Message>;\n// Return type of any JMS listener method used to indicate the actual response destination alongside the response itself.\npublic class JmsResponse<T> extends Object;\n", "des": "Message listener adapter mechanism that delegates to target listener methods, converting messages to appropriate message content types (such as String or byte array) that get passed into listener methods."}
{"index": 2775, "repo": "spring-jms-6.0.11", "code": "package endpoint\n\n// Default implementation of the JmsActivationSpecFactory interface.\npublic class DefaultJmsActivationSpecFactory extends StandardJmsActivationSpecFactory;\n// Common configuration object for activating a JMS message endpoint.\npublic class JmsActivationSpecConfig extends Object;\n// Strategy interface for creating JCA 1.5 ActivationSpec objects based on a configured JmsActivationSpecConfig object.\npublic interface JmsActivationSpecFactory;\n", "des": "This package provides JCA-based endpoint management for JMS message listeners."}
{"index": 2776, "repo": "spring-jms-6.0.11", "code": "package support\n\n// Base class for JmsTemplate and other JMS-accessing gateway helpers, defining common properties such as the JMS ConnectionFactory to operate on.\npublic abstract class JmsAccessor extends Object implements org.springframework.beans.factory.InitializingBean;\n// Strategy interface for mapping Message headers to an outbound JMS Message (e.g.\npublic interface JmsHeaderMapper extends org.springframework.messaging.support.HeaderMapper<Message>;\n", "des": "This package provides generic JMS support classes, to be used by higher-level classes like JmsTemplate."}
{"index": 2777, "repo": "spring-jms-6.0.11", "code": "package converter\n\n// Message converter that uses Jackson 2.x to convert messages to and from JSON.\npublic class MappingJackson2MessageConverter extends Object implements SmartMessageConverter, org.springframework.beans.factory.BeanClassLoaderAware;\n// Spring JMS MessageConverter that uses a Marshaller and Unmarshaller.\npublic class MarshallingMessageConverter extends Object implements MessageConverter, org.springframework.beans.factory.InitializingBean;\n", "des": "Provides a MessageConverter abstraction to convert between Java objects and JMS messages."}
{"index": 2778, "repo": "spring-jms-6.0.11", "code": "package destination\n\n// DestinationResolver implementation based on a Spring BeanFactory.\npublic class BeanFactoryDestinationResolver extends Object implements DestinationResolver, org.springframework.beans.factory.BeanFactoryAware;\n// Extension of the DestinationResolver interface, exposing methods for clearing the cache.\npublic interface CachingDestinationResolver extends DestinationResolver;\n", "des": "Support classes for Spring's JMS framework."}
{"index": 2779, "repo": "spring-security-ldap-6.1.2", "code": "package ldap\n\n// This implementation appends a name component to the userDnBase context using the usernameAttributeName property.\npublic class DefaultLdapUsernameToDnMapper extends Object implements LdapUsernameToDnMapper;\n// ContextSource implementation which uses Spring LDAP's LdapContextSource as a base class.\npublic class DefaultSpringSecurityContextSource extends org.springframework.ldap.core.support.LdapContextSource;\n", "des": "Spring Security's LDAP module."}
{"index": 2780, "repo": "spring-security-ldap-6.1.2", "code": "package authentication\n\n// Base class for the standard LdapAuthenticationProvider and the ActiveDirectoryLdapAuthenticationProvider.\npublic abstract class AbstractLdapAuthenticationProvider extends Object implements org.springframework.security.authentication.AuthenticationProvider, org.springframework.context.MessageSourceAware;\n", "des": "The LDAP authentication provider package."}
{"index": 2781, "repo": "spring-security-ldap-6.1.2", "code": "package ppolicy\n\n// Extended version of the DefaultSpringSecurityContextSource which adds support for the use of PasswordPolicyControl to make use of user account data stored in the directory.\npublic class PasswordPolicyAwareContextSource extends DefaultSpringSecurityContextSource;\n// A Password Policy request control.\npublic class PasswordPolicyControl extends Object implements Control;\n", "des": "Implementation of password policy functionality based on the Password Policy for LDAP Directories."}
{"index": 2782, "repo": "spring-security-ldap-6.1.2", "code": "package search\n\n// LdapUserSearch implementation which uses an Ldap filter to locate the user.\npublic class FilterBasedLdapUserSearch extends Object implements LdapUserSearch;\n// Obtains a user's information from the LDAP directory given a login name.\npublic interface LdapUserSearch;\n", "des": "LdapUserSearch implementations."}
{"index": 2783, "repo": "spring-security-ldap-6.1.2", "code": "package server\n\n// \n@Deprecated public class ApacheDSContainer extends Object implements EmbeddedLdapServerContainer, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean, org.springframework.context.Lifecycle, org.springframework.context.ApplicationContextAware;\n// Provides lifecycle services for an embedded LDAP server.\npublic interface EmbeddedLdapServerContainer;\n", "des": "Embedded Apache Directory Server implementation, as used by the configuration namespace."}
{"index": 2784, "repo": "spring-security-ldap-6.1.2", "code": "package userdetails\n\n// The default strategy for obtaining user role information from the directory.\npublic class DefaultLdapAuthoritiesPopulator extends Object implements LdapAuthoritiesPopulator;\n// UserDetails implementation whose properties are based on a subset of the LDAP schema for inetOrgPerson.\npublic class InetOrgPerson extends Person;\n// \npublic static class InetOrgPerson.Essence extends Person.Essence;\n", "des": "LDAP-focused UserDetails implementations which map from a ubset of the data contained in some of the standard LDAP types (such as InetOrgPerson)."}
{"index": 2785, "repo": "spring-expression-6.0.11", "code": "package expression\n\n// An AccessException is thrown by an accessor if it has an unexpected problem.\npublic class AccessException extends Exception;\n// A bean resolver can be registered with the evaluation context and will kick in for bean references: @myBeanName and &myBeanName expressions.\npublic interface BeanResolver;\n// Executors are built by resolvers and can be cached by the infrastructure to repeat an operation quickly without going back to the resolvers.\npublic interface ConstructorExecutor;\n", "des": "Core abstractions behind the Spring Expression Language."}
{"index": 2786, "repo": "spring-expression-6.0.11", "code": "package common\n\n// Represents a template expression broken into pieces.\npublic class CompositeStringExpression extends Object implements Expression;\n// Common utility functions that may be used by any Expression Language provider.\npublic abstract class ExpressionUtils extends Object;\n// A very simple hardcoded implementation of the Expression interface that represents a string literal.\npublic class LiteralExpression extends Object implements Expression;\n", "des": "Common utility classes behind the Spring Expression Language."}
{"index": 2787, "repo": "spring-expression-6.0.11", "code": "package spel\n\n// Manages the class being generated by the compilation process.\npublic class CodeFlow extends Object implements org.springframework.asm.Opcodes;\n// Interface used to generate clinit static initializer blocks.\n@FunctionalInterface public static interface CodeFlow.ClinitAdder;\n// Interface used to generate fields.\n@FunctionalInterface public static interface CodeFlow.FieldAdder;\n", "des": "SpEL's central implementation package."}
{"index": 2788, "repo": "spring-expression-6.0.11", "code": "package ast\n\n// Represents assignment.\npublic class Assign extends SpelNodeImpl;\n// Utilities methods for use in the Ast classes.\npublic abstract class AstUtils extends Object;\n// Represents a bean reference to a type, for example @foo or @'foo.bar'.\npublic class BeanReference extends SpelNodeImpl;\n// Represents the literal values TRUE and FALSE.\npublic class BooleanLiteral extends Literal;\n", "des": "SpEL's abstract syntax tree."}
{"index": 2789, "repo": "spring-expression-6.0.11", "code": "package standard\n\n// A SpelCompiler will take a regular parsed expression and create (and load) a class containing byte code that does the same thing as that expression.\npublic final class SpelCompiler extends Object implements org.springframework.asm.Opcodes;\n// A SpelExpression represents a parsed (valid) expression that is ready to be evaluated in a specified context.\npublic class SpelExpression extends Object implements Expression;\n", "des": "SpEL's standard parser implementation."}
{"index": 2790, "repo": "spring-expression-6.0.11", "code": "package support\n\n// A TypedValue for booleans.\npublic final class BooleanTypedValue extends TypedValue;\n// A MethodResolver variant for data binding purposes, using reflection to access instance methods on a given target object.\npublic final class DataBindingMethodResolver extends ReflectiveMethodResolver;\n", "des": "SpEL's default implementations for various core abstractions."}
{"index": 2791, "repo": "shiro-spring-2.0.0-alpha-2", "code": "package spring\n\n// Bean post processor for Spring that automatically calls the init() and/or destroy() methods on Shiro objects that implement the Initializable or Destroyable interfaces, respectfully.\npublic class LifecycleBeanPostProcessor extends Object implements org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor, org.springframework.core.PriorityOrdered;\n", "des": "Spring Application Framework support for enabling Shiro in spring applications."}
{"index": 2792, "repo": "shiro-spring-2.0.0-alpha-2", "code": "package remoting\n\n// An implementation of the Spring RemoteInvocationExecutor that binds a sessionId to the incoming thread to make it available to the SecurityManager implementation during the thread execution.\npublic class SecureRemoteInvocationExecutor extends org.springframework.remoting.support.DefaultRemoteInvocationExecutor;\n", "des": "Support to enable Spring-based remote method invocations to carry a Shiro session ID as part of the invocation payload, allowing remote clients to perform security operations."}
{"index": 2793, "repo": "shiro-spring-2.0.0-alpha-2", "code": "package interceptor\n\n// Allows Shiro Annotations to work in any AOP Alliance specific implementation environment (for example, Spring).\npublic class AopAllianceAnnotationsAuthorizingMethodInterceptor extends org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor implements org.aopalliance.intercept.MethodInterceptor;\n// TODO - complete JavaDoc\npublic class AuthorizationAttributeSourceAdvisor extends org.springframework.aop.support.StaticMethodMatcherPointcutAdvisor;\n", "des": "Spring AOP support for enabling Shiro annotations in Spring-configured applications."}
{"index": 2794, "repo": "shiro-spring-2.0.0-alpha-2", "code": "package web\n\n// FactoryBean to be used in Spring-based web applications for defining the master Shiro Filter.\npublic class ShiroFilterFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean, org.springframework.beans.factory.config.BeanPostProcessor;\n// A Spring UrlPathHelper that uses Shiro's path resolution logic.\npublic class ShiroUrlPathHelper extends org.springframework.web.util.UrlPathHelper;\n", "des": "Spring-specific components for use in Spring-based web applications."}
{"index": 2795, "repo": "spring-amqp-3.0.6", "code": "package amqp\n\n// Thrown when the connection factory has been destroyed during context close; the factory can no longer open connections.\npublic class AmqpApplicationContextClosedException extends AmqpException;\n// Runtime wrapper for an authentication exception.\npublic class AmqpAuthenticationException extends AmqpException;\n", "des": "Base package for Spring AMQP."}
{"index": 2796, "repo": "spring-amqp-3.0.6", "code": "package core\n\n// Base class for builders supporting arguments.\npublic abstract class AbstractBuilder extends Object;\n// Base class for Declarable classes.\npublic abstract class AbstractDeclarable extends Object implements Declarable;\n// Common properties that describe all exchange types.\npublic abstract class AbstractExchange extends AbstractDeclarable implements Exchange;\n// Acknowledgment modes supported by the listener container.\npublic enum AcknowledgeMode extends Enum<AcknowledgeMode>;\n", "des": "Provides core classes for the spring AMQP abstraction."}
{"index": 2797, "repo": "spring-amqp-3.0.6", "code": "package event\n\n// Base class for events.\npublic abstract class AmqpEvent extends org.springframework.context.ApplicationEvent;\n", "des": "Classes related to application events"}
{"index": 2798, "repo": "spring-amqp-3.0.6", "code": "package support\n\n// Strategy interface for mapping messaging Message headers to an outbound MessageProperties (e.g.\npublic interface AmqpHeaderMapper extends org.springframework.messaging.support.HeaderMapper<MessageProperties>;\n// Pre-defined names and prefixes to be used for setting and/or retrieving AMQP MessageProperties from/to Message Headers.\npublic abstract class AmqpHeaders extends Object;\n", "des": "Package for Spring AMQP support classes."}
{"index": 2799, "repo": "spring-amqp-3.0.6", "code": "package converter\n\n// Abstract Jackson2 message converter.\npublic abstract class AbstractJackson2MessageConverter extends AbstractMessageConverter implements org.springframework.beans.factory.BeanClassLoaderAware, SmartMessageConverter;\n// Abstract type mapper.\npublic abstract class AbstractJavaTypeMapper extends Object implements org.springframework.beans.factory.BeanClassLoaderAware;\n", "des": "Provides classes for supporting message conversion."}
{"index": 2800, "repo": "spring-amqp-3.0.6", "code": "package postprocessor\n\n// Base class for post processors that compress the message body.\npublic abstract class AbstractCompressingPostProcessor extends Object implements MessagePostProcessor, org.springframework.core.Ordered;\n", "des": "Package for Spring AMQP message post processors."}
{"index": 2801, "repo": "spring-amqp-3.0.6", "code": "package utils\n\n// Chained utility methods to simplify some Java repetitive code.\npublic final class JavaUtils extends Object;\n// A Builder pattern implementation for a Map.\npublic class MapBuilder<B extends MapBuilder<B,K,V>,K,V> extends Object;\n// Static utility to help with serialization.\npublic final class SerializationUtils extends Object;\n", "des": "Provides utility classes to support Spring AMQP."}
{"index": 2802, "repo": "spring-security-oauth2-core-6.1.2", "code": "package core\n\n// Base class for OAuth 2.0 Token implementations.\npublic abstract class AbstractOAuth2Token extends Object implements OAuth2Token, Serializable;\n// The authentication method used when sending bearer access tokens in resource requests to resource servers.\npublic final class AuthenticationMethod extends Object implements Serializable;\n", "des": "Core classes and interfaces providing support for the OAuth 2.0 Authorization Framework."}
{"index": 2803, "repo": "spring-security-oauth2-core-6.1.2", "code": "package endpoint\n\n// A Converter that converts the provided OAuth 2.0 Access Token Response parameters to an OAuth2AccessTokenResponse.\npublic final class DefaultMapOAuth2AccessTokenResponseConverter extends Object implements org.springframework.core.convert.converter.Converter<Map<String,Object>,OAuth2AccessTokenResponse>;\n", "des": "Support classes that model the OAuth 2.0 Request and Response messages from the Authorization Endpoint and Token Endpoint."}
{"index": 2804, "repo": "spring-security-oauth2-core-6.1.2", "code": "package oidc\n\n// The Address Claim represents a physical mailing address defined by the OpenID Connect Core 1.0 specification that can be returned either in the UserInfo Response or the ID Token.\npublic interface AddressStandardClaim;\n// The default implementation of an Address Claim.\npublic final class DefaultAddressStandardClaim extends Object implements AddressStandardClaim;\n// A builder for DefaultAddressStandardClaim.\npublic static class DefaultAddressStandardClaim.Builder extends Object;\n", "des": "Core classes and interfaces providing support for OpenID Connect Core 1.0."}
{"index": 2805, "repo": "spring-security-oauth2-core-6.1.2", "code": "package endpoint\n\n// Standard parameter names defined in the OAuth Parameters Registry and used by the authorization endpoint and token endpoint.\npublic final class OidcParameterNames extends Object;\n", "des": "Support classes that model the OpenID Connect Core 1.0 Request and Response messages from the Authorization Endpoint and Token Endpoint."}
{"index": 2806, "repo": "spring-security-oauth2-core-6.1.2", "code": "package user\n\n// The default implementation of an OidcUser.\npublic class DefaultOidcUser extends DefaultOAuth2User implements OidcUser;\n// A representation of a user Principal that is registered with an OpenID Connect 1.0 Provider.\npublic interface OidcUser extends OAuth2User, IdTokenClaimAccessor;\n// A GrantedAuthority that may be associated to an OidcUser.\npublic class OidcUserAuthority extends OAuth2UserAuthority;\n", "des": "Provides a model for an OpenID Connect Core 1.0 representation of a user Principal."}
{"index": 2807, "repo": "spring-security-oauth2-core-6.1.2", "code": "package user\n\n// The default implementation of an OAuth2User.\npublic class DefaultOAuth2User extends Object implements OAuth2User, Serializable;\n// A representation of a user Principal that is registered with an OAuth 2.0 Provider.\npublic interface OAuth2User extends OAuth2AuthenticatedPrincipal;\n// A GrantedAuthority that may be associated to an OAuth2User.\npublic class OAuth2UserAuthority extends Object implements org.springframework.security.core.GrantedAuthority;\n", "des": "Provides a model for an OAuth 2.0 representation of a user Principal."}
{"index": 2808, "repo": "spring-integration-ip-6.1.2", "code": "package ip\n\n// Base class for inbound TCP/UDP Channel Adapters.\npublic abstract class AbstractInternetProtocolReceivingChannelAdapter extends org.springframework.integration.endpoint.MessageProducerSupport implements org.springframework.context.ApplicationEventPublisherAware, org.springframework.scheduling.SchedulingAwareRunnable, CommonSocketOptions;\n", "des": "Base package for IP (TCP/UDP) Support."}
{"index": 2809, "repo": "spring-integration-ip-6.1.2", "code": "package config\n\n// Utility methods and constants for IP adapter parsers.\npublic abstract class IpAdapterParserUtils extends Object;\n// Namespace handler for Spring Integration's ip namespace.\npublic class IpNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n", "des": "Provides classes for configuration - parsers, namespace handlers, factory beans."}
{"index": 2810, "repo": "spring-integration-ip-6.1.2", "code": "package dsl\n\n// An IntegrationComponentSpec for AbstractConnectionFactorys.\npublic abstract class AbstractConnectionFactorySpec<S extends AbstractConnectionFactorySpec<S,C>,C extends AbstractConnectionFactory> extends org.springframework.integration.dsl.IntegrationComponentSpec<S,C>;\n", "des": "Provides TCP/UDP Component support for the Java DSL."}
{"index": 2811, "repo": "spring-integration-ip-6.1.2", "code": "package event\n\n// \npublic abstract class IpIntegrationEvent extends org.springframework.integration.events.IntegrationEvent;\n", "des": "ApplicationEvents generated by the ip module."}
{"index": 2812, "repo": "spring-integration-ip-6.1.2", "code": "package tcp\n\n// Inbound Gateway using a server connection factory - threading is controlled by the factory.\npublic class TcpInboundGateway extends org.springframework.integration.gateway.MessagingGatewaySupport implements TcpListener, TcpSender, ClientModeCapable, org.springframework.integration.context.OrderlyShutdownCapable;\n", "des": "Base package for TCP Support."}
{"index": 2813, "repo": "spring-integration-ip-6.1.2", "code": "package connection\n\n// Abstract class for client connection factories; client connection factories establish outgoing connections.\npublic abstract class AbstractClientConnectionFactory extends AbstractConnectionFactory;\n// Base class for all connection factories.\npublic abstract class AbstractConnectionFactory extends org.springframework.integration.context.IntegrationObjectSupport implements ConnectionFactory, org.springframework.context.ApplicationEventPublisherAware;\n", "des": "All things related to tcp connections - client and server factories; listener and sender interfaces."}
{"index": 2814, "repo": "spring-integration-ip-6.1.2", "code": "package serializer\n\n// Base class for (de)serializers that provide a mechanism to reconstruct a byte array from an arbitrary stream.\npublic abstract class AbstractByteArraySerializer extends Object implements org.springframework.core.serializer.Serializer<byte[]>, org.springframework.core.serializer.Deserializer<byte[]>, org.springframework.context.ApplicationEventPublisherAware;\n", "des": "Byte array (de)serializers for putting some protocol on the wire so that incoming messages can be constructed from stream data."}
{"index": 2815, "repo": "spring-integration-ip-6.1.2", "code": "package udp\n\n// Message Mapper for converting to and from UDP DatagramPackets.\npublic class DatagramPacketMessageMapper extends Object implements org.springframework.integration.mapping.InboundMessageMapper<DatagramPacket>, org.springframework.integration.mapping.OutboundMessageMapper<DatagramPacket>, org.springframework.beans.factory.BeanFactoryAware;\n", "des": "Base package for UDP support."}
{"index": 2816, "repo": "spring-integration-ip-6.1.2", "code": "package util\n\n// Regular Expression Utilities.\npublic final class RegexUtils extends Object;\n// Convenience class providing methods for testing IP components.\npublic final class TestingUtilities extends Object;\n", "des": "Provides utilities for IP support."}
{"index": 2817, "repo": "spring-orm-6.0.11", "code": "package orm\n\n// Exception thrown on an optimistic locking violation for a mapped object.\npublic class ObjectOptimisticLockingFailureException extends org.springframework.dao.OptimisticLockingFailureException;\n// Exception thrown if a mapped object could not be retrieved via its identifier.\npublic class ObjectRetrievalFailureException extends org.springframework.dao.DataRetrievalFailureException;\n", "des": "Root package for Spring's O/R Mapping integration classes."}
{"index": 2818, "repo": "spring-orm-6.0.11", "code": "package hibernate5\n\n// Callback interface for Hibernate code.\n@FunctionalInterface public interface HibernateCallback<T>;\n// PersistenceExceptionTranslator capable of translating HibernateException instances to Spring's DataAccessException hierarchy.\npublic class HibernateExceptionTranslator extends Object implements org.springframework.dao.support.PersistenceExceptionTranslator;\n", "des": "Package providing integration of Hibernate 5.x with Spring concepts."}
{"index": 2819, "repo": "spring-orm-6.0.11", "code": "package support\n\n// Convenient superclass for Hibernate-based data access objects.\npublic abstract class HibernateDaoSupport extends org.springframework.dao.support.DaoSupport;\n// Simple AOP Alliance MethodInterceptor implementation that binds a new Hibernate Session for each method invocation, if none bound before.\npublic class OpenSessionInterceptor extends Object implements org.aopalliance.intercept.MethodInterceptor, org.springframework.beans.factory.InitializingBean;\n", "des": "Classes supporting the org.springframework.orm.hibernate5 package."}
{"index": 2820, "repo": "spring-orm-6.0.11", "code": "package jpa\n\n", "des": "Package providing integration of JPA (Java Persistence API) with Spring concepts."}
{"index": 2821, "repo": "spring-orm-6.0.11", "code": "package persistenceunit\n\n// Default implementation of the PersistenceUnitManager interface.\npublic class DefaultPersistenceUnitManager extends Object implements PersistenceUnitManager, org.springframework.context.ResourceLoaderAware, org.springframework.context.weaving.LoadTimeWeaverAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Internal support for managing JPA persistence units."}
{"index": 2822, "repo": "spring-orm-6.0.11", "code": "package support\n\n// Servlet Filter that binds a JPA EntityManager to the thread for the entire processing of the request.\npublic class OpenEntityManagerInViewFilter extends org.springframework.web.filter.OncePerRequestFilter;\n// Spring web request interceptor that binds a JPA EntityManager to the thread for the entire processing of the request.\npublic class OpenEntityManagerInViewInterceptor extends EntityManagerFactoryAccessor implements org.springframework.web.context.request.AsyncWebRequestInterceptor;\n", "des": "Classes supporting the org.springframework.orm.jpa package."}
{"index": 2823, "repo": "spring-orm-6.0.11", "code": "package vendor\n\n// Abstract JpaVendorAdapter implementation that defines common properties, to be translated into vendor-specific JPA properties by concrete subclasses.\npublic abstract class AbstractJpaVendorAdapter extends Object implements JpaVendorAdapter;\n// Enumeration for common database platforms.\npublic enum Database extends Enum<Database>;\n// JpaDialect implementation for Eclipse Persistence Services (EclipseLink).\npublic class EclipseLinkJpaDialect extends DefaultJpaDialect;\n", "des": "Support classes for adapting to specific JPA vendors."}
{"index": 2824, "repo": "groovy-xml-4.0.13", "code": "package xml\n\n// A helper class for creating a W3C DOM tree\npublic class DOMBuilder extends groovy.util.BuilderSupport;\n// Support class for creating XML Factories\npublic class FactorySupport extends Object;\n// A helper class for creating XML or HTML markup.\npublic class MarkupBuilder extends groovy.util.BuilderSupport;\n// \npublic static enum MarkupBuilder.CharFilter extends Enum<MarkupBuilder.CharFilter>;\n", "des": "Groovy markup builder classes for working with SAX and W3C DOM and Groovy markup."}
{"index": 2825, "repo": "groovy-xml-4.0.13", "code": "package dom\n\n// Category class which adds GPath style operations to Java's DOM classes.\npublic class DOMCategory extends Object;\n", "des": "Groovy XML Dom processing classes."}
{"index": 2826, "repo": "groovy-xml-4.0.13", "code": "package slurpersupport\n\n// Lazy evaluated representation of a node attribute.\npublic class Attribute extends GPathResult;\n// Lazy evaluated representation of a node's attributes.\npublic class Attributes extends NodeChildren;\n// Lazy evaluated representation of a node's attributes filtered by a Closure.\npublic class FilteredAttributes extends Attributes;\n// Lazy evaluated representation of child nodes filtered by a Closure.\npublic class FilteredNodeChildren extends NodeChildren;\n", "des": "Helper classes for XmlSlurper."}
{"index": 2827, "repo": "groovy-xml-4.0.13", "code": "package streamingmarkupsupport\n\n// \npublic class BaseMarkupBuilder extends Builder;\n// \npublic abstract class Builder extends groovy.lang.GroovyObjectSupport;\n// \nprotected abstract static class Builder.Built extends groovy.lang.GroovyObjectSupport;\n// \npublic class StreamingMarkupWriter extends Writer;\n", "des": "XmlBuilder related classes to support streaming XML."}
{"index": 2828, "repo": "spring-data-r2dbc-3.1.2", "code": "package config\n\n// Base class for Spring Data R2DBC configuration containing bean declarations that must be registered for Spring Data R2DBC to work.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractR2dbcConfiguration extends Object implements ApplicationContextAware;\n", "des": "Configuration classes for Spring Data R2DBC."}
{"index": 2829, "repo": "spring-data-r2dbc-3.1.2", "code": "package convert\n\n// Maps a Row to an entity of type T, including entities referenced.\npublic class EntityRowMapper<T> extends Object implements BiFunction<Row,RowMetadata,T>;\n// Support class to natively write Enum values to the database.\n@WritingConverter public abstract class EnumWriteSupport<E extends Enum<E>> extends Object implements Converter<E,E>;\n// Converter for R2DBC.\npublic class MappingR2dbcConverter extends BasicRelationalConverter implements R2dbcConverter;\n", "des": "R2DBC-specific conversion and converter implementations."}
{"index": 2830, "repo": "spring-data-r2dbc-3.1.2", "code": "package core\n\n// Default ReactiveDataAccessStrategy implementation.\npublic class DefaultReactiveDataAccessStrategy extends Object implements ReactiveDataAccessStrategy;\n// Stripped down interface providing access to a fluent API that specifies a basic set of reactive R2DBC operations.\npublic interface FluentR2dbcOperations extends ReactiveSelectOperation, ReactiveInsertOperation, ReactiveUpdateOperation, ReactiveDeleteOperation;\n", "des": "Core domain types around DatabaseClient."}
{"index": 2831, "repo": "spring-data-r2dbc-3.1.2", "code": "package dialect\n\n// Utility to bind Parameter to a BindTarget.\npublic final class BindTargetBinder extends Object;\n// Resolves a R2dbcDialect from a ConnectionFactory using DialectResolver.R2dbcDialectProvider.\npublic class DialectResolver extends Object;\n// Exception thrown when DialectResolver cannot resolve a R2dbcDialect.\npublic static class DialectResolver.NoDialectException extends NonTransientDataAccessException;\n", "des": "Dialects abstract the SQL dialect of the underlying database."}
{"index": 2832, "repo": "spring-data-r2dbc-3.1.2", "code": "package mapping\n\n// Representation of a Row to be written through a INSERT or UPDATE statement.\npublic class OutboundRow extends Object implements Map<SqlIdentifier,Parameter>, Cloneable;\n// R2DBC-specific extension to RelationalMappingContext.\npublic class R2dbcMappingContext extends RelationalMappingContext;\n// Simple constant holder for a SimpleTypeHolder enriched with R2DBC specific simple types.\npublic class R2dbcSimpleTypeHolder extends SimpleTypeHolder;\n", "des": "Domain objects for R2DBC."}
{"index": 2833, "repo": "spring-data-r2dbc-3.1.2", "code": "package event\n\n// Callback being invoked after a domain object is materialized from a row when reading results.\n@FunctionalInterface public interface AfterConvertCallback<T> extends EntityCallback<T>;\n// Entity callback triggered after save of a OutboundRow.\n@FunctionalInterface public interface AfterSaveCallback<T> extends EntityCallback<T>;\n", "des": "Mapping event callback infrastructure for the R2DBC row-to-object mapping subsystem."}
{"index": 2834, "repo": "spring-data-r2dbc-3.1.2", "code": "package query\n\n// Value object representing Assignments with their Bindings.\npublic class BoundAssignments extends Object;\n// Value object representing a Condition with its Bindings.\npublic class BoundCondition extends Object;\n// Maps CriteriaDefinition and Sort objects considering mapping metadata and dialect-specific conversion.\npublic class QueryMapper extends Object;\n// Value object to represent a field and its meta-information.\nprotected static class QueryMapper.Field extends Object;\n", "des": "Query and update support."}
{"index": 2835, "repo": "spring-data-r2dbc-3.1.2", "code": "package repository\n\n// Indicates a query method should be considered a modifying query that returns nothing or the number of rows affected by the query.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented public @interface Modifying;\n// Annotation to provide SQL statements that will get used for executing the method.\n@Retention(RUNTIME) @Target(METHOD) @Documented public @interface Query;\n", "des": "R2DBC-specific repository implementation."}
{"index": 2836, "repo": "spring-data-r2dbc-3.1.2", "code": "package config\n\n// Annotation to activate reactive relational repositories using R2DBC.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(org.springframework.data.r2dbc.repository.config.R2dbcRepositoriesRegistrar.class) public @interface EnableR2dbcRepositories;\n// Reactive RepositoryConfigurationExtension for R2DBC.\npublic class R2dbcRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport;\n", "des": "Support infrastructure for the configuration of R2DBC-specific repositories."}
{"index": 2837, "repo": "spring-data-r2dbc-3.1.2", "code": "package query\n\n// Base class for reactive RepositoryQuery implementations for R2DBC.\npublic abstract class AbstractR2dbcQuery extends Object implements RepositoryQuery;\n// Interface declaring a query that supplies SQL and can bind parameters to a DatabaseClient.GenericExecuteSpec.\npublic interface BindableQuery extends Supplier<String>;\n// An AbstractR2dbcQuery implementation based on a PartTree.\npublic class PartTreeR2dbcQuery extends AbstractR2dbcQuery;\n", "des": "Query support for R2DBC repositories."}
{"index": 2838, "repo": "spring-data-r2dbc-3.1.2", "code": "package support\n\n// Factory to create R2dbcRepository instances.\npublic class R2dbcRepositoryFactory extends ReactiveRepositoryFactorySupport;\n// FactoryBean to create R2dbcRepository instances.\npublic class R2dbcRepositoryFactoryBean<T extends Repository<S,ID>,S,ID extends Serializable> extends RepositoryFactoryBeanSupport<T,S,ID> implements ApplicationContextAware;\n", "des": "Support infrastructure for query derivation of R2DBC-specific repositories."}
{"index": 2839, "repo": "spring-data-r2dbc-3.1.2", "code": "package support\n\n// Utilities for array interaction.\npublic abstract class ArrayUtils extends Object;\n", "des": "Support infrastructure for the configuration of R2DBC-specific repositories."}
{"index": 2840, "repo": "spring-integration-core-6.1.2", "code": "package integration\n\n// Adds standard SI Headers.\npublic class IntegrationMessageHeaderAccessor extends org.springframework.messaging.support.MessageHeaderAccessor;\n// Indicates that a component implements some Enterprise Integration Pattern.\npublic interface IntegrationPattern;\n// The Enterprise Integration Pattern types.\npublic enum IntegrationPatternType extends Enum<IntegrationPatternType>;\n", "des": "Base package for Spring Integration Core."}
{"index": 2841, "repo": "spring-integration-core-6.1.2", "code": "package acks\n\n// A general abstraction over acknowledgments.\n@FunctionalInterface public interface AcknowledgmentCallback extends SimpleAcknowledgment;\n// \npublic static enum AcknowledgmentCallback.Status extends Enum<AcknowledgmentCallback.Status>;\n// A factory for creating AcknowledgmentCallbacks.\n@FunctionalInterface public interface AcknowledgmentCallbackFactory<T>;\n// Utility methods for acting on AcknowledgmentCallback headers.\npublic final class AckUtils extends Object;\n", "des": "Provides classes related to message acknowledgment."}
{"index": 2842, "repo": "spring-integration-core-6.1.2", "code": "package aggregator\n\n// Base class for MessageGroupProcessor implementations that aggregate the group of Messages into a single Message.\npublic abstract class AbstractAggregatingMessageGroupProcessor extends Object implements MessageGroupProcessor, org.springframework.beans.factory.BeanFactoryAware;\n", "des": "Provides classes related to message aggregation."}
{"index": 2843, "repo": "spring-integration-core-6.1.2", "code": "package annotation\n\n// Indicates that a method is capable of aggregating messages.\n@Target({METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Repeatable(Aggregators.class) public @interface Aggregator;\n// The repeatable container for Aggregator annotations.\n@Documented @Target({METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) public @interface Aggregators;\n// Common value constants for annotation attributes.\npublic final class AnnotationConstants extends Object;\n", "des": "Provides annotations for annotation-based configuration."}
{"index": 2844, "repo": "spring-integration-core-6.1.2", "code": "package aop\n\n// A MessageSourceMutator that uses a CompoundTrigger to adjust the poller - when a message is present, the compound trigger's primary trigger is used to determine the next poll.\npublic class CompoundTriggerAdvice extends Object implements MessageSourceMutator, ReceiveMessageAdvice;\n", "des": "Provides classes to support message publication using AOP."}
{"index": 2845, "repo": "spring-integration-core-6.1.2", "code": "package channel\n\n// The AbstractSubscribableChannel base implementation for those inheritors which logic may be based on the Executor.\npublic abstract class AbstractExecutorChannel extends AbstractSubscribableChannel implements ExecutorChannelInterceptorAware;\n", "des": "Provides classes representing various channel types."}
{"index": 2846, "repo": "spring-integration-core-6.1.2", "code": "package interceptor\n\n// \npublic class GlobalChannelInterceptorWrapper extends Object implements org.springframework.core.Ordered;\n// A ChannelInterceptor that delegates to a list of MessageSelectors to decide whether a Message should be accepted on the MessageChannel.\npublic class MessageSelectingInterceptor extends Object implements org.springframework.messaging.support.ChannelInterceptor;\n", "des": "Provides classes related to channel interception."}
{"index": 2847, "repo": "spring-integration-core-6.1.2", "code": "package codec\n\n// Interface for classes that perform both encode (serialize) and decode (deserialize) on multiple classes.\npublic interface Codec;\n// A MessageConverter that delegates to a Codec to convert.\npublic class CodecMessageConverter extends IntegrationObjectSupport implements org.springframework.messaging.converter.MessageConverter;\n// A Codec that can delegate to one out of many Codecs, each mapped to a class.\npublic class CompositeCodec extends Object implements Codec;\n", "des": "Provides base classes for the Codec abstraction."}
{"index": 2848, "repo": "spring-integration-core-6.1.2", "code": "package kryo\n\n// Base class for Codecs using Kryo.\npublic abstract class AbstractKryoCodec extends Object implements Codec;\n// Base class for KryoRegistrar implementations.\npublic abstract class AbstractKryoRegistrar extends Object implements KryoRegistrar;\n// A KryoRegistrar that delegates and validates registrations across all components.\npublic class CompositeKryoRegistrar extends AbstractKryoRegistrar;\n", "des": "The Kryo specific Codec classes."}
{"index": 2849, "repo": "spring-integration-core-6.1.2", "code": "package config\n\n// Abstract class for integration evaluation context factory beans.\npublic abstract class AbstractEvaluationContextFactoryBean extends Object implements org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Base package for configuration."}
{"index": 2850, "repo": "spring-integration-core-6.1.2", "code": "package annotation\n\n// An AnnotationMetadata implementation to expose a metadata by the provided Map of attributes.\npublic abstract class AnnotationMetadataAdapter extends Object implements org.springframework.core.type.AnnotationMetadata;\n// Strategy interface for post-processing annotated methods.\npublic interface MethodAnnotationPostProcessor<T extends Annotation>;\n", "des": "Provides classes supporting annotation-based configuration."}
{"index": 2851, "repo": "spring-integration-core-6.1.2", "code": "package xml\n\n// Base parser for Channel Adapters.\npublic abstract class AbstractChannelAdapterParser extends org.springframework.beans.factory.xml.AbstractBeanDefinitionParser;\n// Base class for channel parsers.\npublic abstract class AbstractChannelParser extends org.springframework.beans.factory.xml.AbstractBeanDefinitionParser;\n", "des": "Provides supporting XML-based configuration - parsers, namespace handlers."}
{"index": 2852, "repo": "spring-integration-core-6.1.2", "code": "package context\n\n// Components that implement this interface are capable of supporting a primary SpEL expression as part of their configuration.\npublic interface ExpressionCapable;\n// Utility methods for accessing common integration components from the BeanFactory.\npublic abstract class IntegrationContextUtils extends Object;\n", "des": "Provides classes relating to application context configuration."}
{"index": 2853, "repo": "spring-integration-core-6.1.2", "code": "package core\n\n// \npublic interface AsyncMessagingOperations;\n// \npublic class AsyncMessagingTemplate extends MessagingTemplate implements AsyncMessagingOperations;\n// The component which can be used as general purpose of errors publishing.\npublic class ErrorMessagePublisher extends Object implements org.springframework.beans.factory.BeanFactoryAware;\n// A functional interface to specify MessageHandler logic with Java 8 Lambda expression:\n@FunctionalInterface public interface GenericHandler<P>;\n", "des": "Provides core classes."}
{"index": 2854, "repo": "spring-integration-core-6.1.2", "code": "package dispatcher\n\n// Base class for MessageDispatcher implementations.\npublic abstract class AbstractDispatcher extends Object implements MessageDispatcher;\n// An Exception that encapsulates an aggregated group of Exceptions for use by dispatchers that may try multiple handler invocations within a single dispatch operation.\npublic class AggregateMessageDeliveryException extends org.springframework.messaging.MessageDeliveryException;\n", "des": "Provides classes related to dispatching messages."}
{"index": 2855, "repo": "spring-integration-core-6.1.2", "code": "package dsl\n\n// A MessageHandlerSpec for AbstractMessageRouters.\npublic class AbstractRouterSpec<S extends AbstractRouterSpec<S,R>,R extends AbstractMessageRouter> extends ConsumerEndpointSpec<S,R>;\n// A CorrelationHandlerSpec for an AggregatingMessageHandler.\npublic class AggregatorSpec extends CorrelationHandlerSpec<AggregatorSpec,AggregatingMessageHandler>;\n// A MessageHandlerSpec for the BarrierMessageHandler.\npublic class BarrierSpec extends ConsumerEndpointSpec<BarrierSpec,BarrierMessageHandler>;\n", "des": "Root package of the Spring Integration Java DSL."}
{"index": 2856, "repo": "spring-integration-core-6.1.2", "code": "package context\n\n// The Java DSL Integration infrastructure beanFactory initializer.\npublic class DslIntegrationConfigurationInitializer extends Object implements IntegrationConfigurationInitializer;\n", "des": "The context support classes for Spring Integration Java DSL."}
{"index": 2857, "repo": "spring-integration-core-6.1.2", "code": "package support\n\n// An \"artificial\" MessageChannel implementation which will be unwrapped to the FixedSubscriberChannel on the bean registration phase.\npublic class FixedSubscriberChannelPrototype extends Object implements org.springframework.messaging.MessageChannel;\n", "des": "Provides various support classes used across Spring Integration Java DSL Components."}
{"index": 2858, "repo": "spring-integration-core-6.1.2", "code": "package endpoint\n\n// The base class for Message Endpoint implementations.\n@IntegrationManagedResource public abstract class AbstractEndpoint extends IntegrationObjectSupport implements ManageableSmartLifecycle, org.springframework.beans.factory.DisposableBean;\n// A message source that can limit the number of remote objects it fetches.\npublic abstract class AbstractFetchLimitingMessageSource<T> extends AbstractMessageSource<T> implements MessageSourceManagement;\n", "des": "Provides core classes related to Endpoints."}
{"index": 2859, "repo": "spring-integration-core-6.1.2", "code": "package events\n\n// Base class for all ApplicationEvents generated by the framework.\npublic abstract class IntegrationEvent extends org.springframework.context.ApplicationEvent;\n", "des": "ApplicationEvents generated by the Spring Integration framework."}
{"index": 2860, "repo": "spring-integration-core-6.1.2", "code": "package expression\n\n// SpEL MethodFilter to restrict method invocations to: Pausable or Lifecycle components get, set and shutdown methods of CustomizableThreadCreator methods with ManagedAttribute and ManagedOperation annotations This class isn't designed for target applications and typically is used from ExpressionControlBusFactoryBean.\npublic class ControlBusMethodFilter extends Object implements org.springframework.expression.MethodFilter;\n", "des": "Provides classes supporting SpEL expressions."}
{"index": 2861, "repo": "spring-integration-core-6.1.2", "code": "package filter\n\n// A base class for MessageSelector implementations that delegate to a MessageProcessor.\npublic abstract class AbstractMessageProcessingSelector extends Object implements MessageSelector, org.springframework.beans.factory.BeanFactoryAware, ManageableLifecycle;\n// A MessageSelector implementation that evaluates a SpEL expression.\npublic class ExpressionEvaluatingSelector extends AbstractMessageProcessingSelector;\n", "des": "Provides classes supporting the filter pattern."}
{"index": 2862, "repo": "spring-integration-core-6.1.2", "code": "package gateway\n\n// A GatewayProxyFactoryBean extension for Java configuration.\npublic class AnnotationGatewayProxyFactoryBean<T> extends GatewayProxyFactoryBean<T>;\n// The AbstractReplyProducingMessageHandler implementation for mid-flow Gateway.\npublic class GatewayMessageHandler extends AbstractReplyProducingMessageHandler implements ManageableLifecycle;\n// Represents the metadata associated with a Gateway method.\npublic class GatewayMethodMetadata extends Object;\n", "des": "Provides classes supporting messaging gateways."}
{"index": 2863, "repo": "spring-integration-core-6.1.2", "code": "package graph\n\n// Represents a composite message handler.\npublic class CompositeMessageHandlerNode extends MessageHandlerNode;\n// \npublic static class CompositeMessageHandlerNode.InnerHandler extends Object;\n// Represents an endpoint that has a discard channel.\npublic class DiscardingMessageHandlerNode extends MessageHandlerNode;\n// Base class for all endpoints.\npublic abstract class EndpointNode extends IntegrationNode;\n", "des": "Provides classes related to the runtime object graph."}
{"index": 2864, "repo": "spring-integration-core-6.1.2", "code": "package handler\n\n// Base class for MessageHandler implementations.\npublic abstract class AbstractMessageHandler extends MessageHandlerSupport implements org.springframework.messaging.MessageHandler, reactor.core.CoreSubscriber<org.springframework.messaging.Message<?>>;\n// \npublic abstract class AbstractMessageProcessor<T> extends AbstractExpressionEvaluator implements MessageProcessor<T>;\n", "des": "Provides classes implementing various types of message handler."}
{"index": 2865, "repo": "spring-integration-core-6.1.2", "code": "package advice\n\n// The base HandleMessageAdvice for advices which can be applied only for the MessageHandler.handleMessage(Message).\npublic abstract class AbstractHandleMessageAdvice extends IntegrationObjectSupport implements HandleMessageAdvice;\n// Base class for MessageHandler advice classes.\npublic abstract class AbstractRequestHandlerAdvice extends IntegrationObjectSupport implements org.aopalliance.intercept.MethodInterceptor;\n", "des": "Provides classes that are used to advise MessageHandlers with cross-cutting concerns."}
{"index": 2866, "repo": "spring-integration-core-6.1.2", "code": "package support\n\n// A HandlerMethodArgumentResolver implementation for Collection, Iterator or array MethodParameter.\npublic class CollectionArgumentResolver extends AbstractExpressionEvaluator implements org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolver;\n// No-op resolver for method arguments of type Continuation.\npublic class ContinuationHandlerMethodArgumentResolver extends Object implements org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolver;\n", "des": "Provides classes for message handlers support."}
{"index": 2867, "repo": "spring-integration-core-6.1.2", "code": "package history\n\n// \npublic class HistoryWritingMessagePostProcessor extends Object implements org.springframework.messaging.core.MessagePostProcessor;\n// \npublic final class MessageHistory extends Object implements List<Properties>, Serializable;\n// Inner class for each Entry in the history.\npublic static class MessageHistory.Entry extends Properties;\n", "des": "Provides classes supporting the capture of message history."}
{"index": 2868, "repo": "spring-integration-core-6.1.2", "code": "package json\n\n// The Converter implementation for the conversion of JsonPropertyAccessor.JsonNodeWrapper to JsonNode, when the JsonPropertyAccessor.JsonNodeWrapper can be a result of the expression for JSON in case of the JsonPropertyAccessor usage.\npublic class JsonNodeWrapperToJsonNodeConverter extends Object implements org.springframework.core.convert.converter.GenericConverter;\n", "des": "Provides classes supporting JSON in Spring Integration."}
{"index": 2869, "repo": "spring-integration-core-6.1.2", "code": "package leader\n\n// Base implementation of a Candidate.\npublic abstract class AbstractCandidate extends Object implements Candidate;\n// Interface that defines the contract for candidates to participate in a leader election.\npublic interface Candidate;\n// Interface that defines the context for candidate leadership.\n@FunctionalInterface public interface Context;\n// Simple Candidate for leadership.\npublic class DefaultCandidate extends AbstractCandidate;\n", "des": "Temporary package until s-c-c-core is released."}
{"index": 2870, "repo": "spring-integration-core-6.1.2", "code": "package event\n\n// Base ApplicationEvent class for leader based events.\npublic abstract class AbstractLeaderEvent extends org.springframework.context.ApplicationEvent;\n// Default implementation of LeaderEventPublisher.\npublic class DefaultLeaderEventPublisher extends Object implements LeaderEventPublisher, org.springframework.context.ApplicationEventPublisherAware;\n// Interface for publishing leader based application events.\npublic interface LeaderEventPublisher;\n", "des": "Temporary package until s-c-c-core is released."}
{"index": 2871, "repo": "spring-integration-core-6.1.2", "code": "package mapping\n\n// Abstract base class for RequestReplyHeaderMapper implementations.\npublic abstract class AbstractHeaderMapper<T> extends Object implements RequestReplyHeaderMapper<T>, org.springframework.beans.factory.BeanClassLoaderAware;\n", "des": "Provides classes related to mapping to/from message headers."}
{"index": 2872, "repo": "spring-integration-core-6.1.2", "code": "package support\n\n// Pre-defined names and prefixes to be used for setting and/or retrieving JSON entries from/to Message Headers and other adapter, e.g.\npublic final class JsonHeaders extends Object;\n", "des": "Support classes for mapping."}
{"index": 2873, "repo": "spring-integration-core-6.1.2", "code": "package message\n\n// A message implementation that is produced by an advice after successful message handling.\npublic class AdviceMessage<T> extends org.springframework.messaging.support.GenericMessage<T>;\n", "des": "Provides concrete Message implementations."}
{"index": 2874, "repo": "spring-integration-core-6.1.2", "code": "package metadata\n\n// Supports atomic updates to values in the store.\npublic interface ConcurrentMetadataStore extends MetadataStore;\n// ConcurrentMetadataStore with the ability of registering MetadataStoreListener callbacks, to be invoked when changes occur in the metadata store.\npublic interface ListenableMetadataStore extends ConcurrentMetadataStore;\n", "des": "Provides classes supporting metadata stores."}
{"index": 2875, "repo": "spring-integration-core-6.1.2", "code": "package resource\n\n// Implementation of MessageSource based on ResourcePatternResolver which will attempt to resolve Resources based on the pattern specified.\npublic class ResourceRetrievingMessageSource extends AbstractMessageSource<org.springframework.core.io.Resource[]> implements org.springframework.context.ApplicationContextAware;\n", "des": "Provides classes related to messaging using Spring Resources"}
{"index": 2876, "repo": "spring-integration-core-6.1.2", "code": "package router\n\n// Base class for all Message Routers that support mapping from arbitrary String values to Message Channel names.\npublic abstract class AbstractMappingMessageRouter extends AbstractMessageRouter implements MappingMessageRouterManagement;\n// Base class for all Message Routers.\n@ManagedResource @IntegrationManagedResource public abstract class AbstractMessageRouter extends AbstractMessageHandler implements MessageRouter;\n", "des": "Provides classes supporting the router pattern."}
{"index": 2877, "repo": "spring-integration-core-6.1.2", "code": "package routingslip\n\n// The Expression based RoutingSlipRouteStrategy implementation.\npublic class ExpressionEvaluatingRoutingSlipRouteStrategy extends Object implements RoutingSlipRouteStrategy, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean;\n// \npublic static class ExpressionEvaluatingRoutingSlipRouteStrategy.RequestAndReply extends Object;\n", "des": "Provides classes supporting the RoutingSlip pattern."}
{"index": 2878, "repo": "spring-integration-core-6.1.2", "code": "package scattergather\n\n// The MessageHandler implementation for the Scatter-Gather EIP pattern.\npublic class ScatterGatherHandler extends AbstractReplyProducingMessageHandler implements ManageableLifecycle;\n", "des": "Provides classes supporting the Scatter-Gather pattern."}
{"index": 2879, "repo": "spring-integration-core-6.1.2", "code": "package scheduling\n\n// \npublic class PollerMetadata extends Object;\n// An advice that can be added to a poller's advice chain that determines whether a poll should be skipped or not.\npublic class PollSkipAdvice extends Object implements org.aopalliance.intercept.MethodInterceptor;\n// Implementations determine whether a particular poll should be skipped.\npublic interface PollSkipStrategy;\n", "des": "Provides classes related to task scheduling."}
{"index": 2880, "repo": "spring-integration-core-6.1.2", "code": "package selector\n\n// A message selector implementation that passes incoming messages through a chain of selectors.\npublic class MessageSelectorChain extends Object implements MessageSelector;\n// \npublic static enum MessageSelectorChain.VotingStrategy extends Enum<MessageSelectorChain.VotingStrategy>;\n// The MessageSelector implementation using a ConcurrentMetadataStore and MessageProcessor.\npublic class MetadataStoreSelector extends Object implements MessageSelector;\n", "des": "Provides classes related to message selection."}
{"index": 2881, "repo": "spring-integration-core-6.1.2", "code": "package splitter\n\n// Base class for Message-splitting handlers.\npublic abstract class AbstractMessageSplitter extends AbstractReplyProducingMessageHandler implements DiscardingMessageHandler;\n// The default Message Splitter implementation.\npublic class DefaultMessageSplitter extends AbstractMessageSplitter;\n// A Message Splitter implementation that evaluates the specified SpEL expression.\npublic class ExpressionEvaluatingSplitter extends AbstractMessageSplitter;\n", "des": "Provides classes supporting the splitter pattern."}
{"index": 2882, "repo": "spring-integration-core-6.1.2", "code": "package store\n\n// \npublic abstract class AbstractBatchingMessageGroupStore extends Object implements BasicMessageGroupStore;\n// Base class for implementations of Key/Value style MessageGroupStore and MessageStore.\npublic abstract class AbstractKeyValueMessageStore extends AbstractMessageGroupStore implements MessageStore;\n// \n@ManagedResource public abstract class AbstractMessageGroupStore extends AbstractBatchingMessageGroupStore implements MessageGroupStore, Iterable<MessageGroup>;\n", "des": "Provides classes releated to storing messages."}
{"index": 2883, "repo": "spring-integration-core-6.1.2", "code": "package support\n\n// \npublic abstract class AbstractIntegrationMessageBuilder<T> extends Object;\n// A simple ErrorMessageStrategy implementations which produces a error message with original message if the AttributeAccessor has ErrorMessageUtils.INPUT_MESSAGE_CONTEXT_KEY attribute.\npublic class DefaultErrorMessageStrategy extends Object implements ErrorMessageStrategy;\n// \npublic class DefaultMessageBuilderFactory extends Object implements MessageBuilderFactory;\n", "des": "Base core support package."}
{"index": 2884, "repo": "spring-integration-core-6.1.2", "code": "package context\n\n// \npublic interface NamedComponent;\n", "des": "Provides classes supporting use of the application context."}
{"index": 2885, "repo": "spring-integration-core-6.1.2", "code": "package converter\n\n// A Converter that delegates to a Deserializer to convert data in a byte array to an object.\npublic class AllowListDeserializingConverter extends Object implements org.springframework.core.convert.converter.Converter<byte[],Object>;\n", "des": "Provides classes supporting message conversion."}
{"index": 2886, "repo": "spring-integration-core-6.1.2", "code": "package json\n\n// Base class for Jackson JsonObjectMapper implementations.\npublic abstract class AbstractJacksonJsonObjectMapper<N,P,J> extends Object implements JsonObjectMapper<N,P>, org.springframework.beans.factory.BeanClassLoaderAware;\n// Abstract InboundMessageMapper implementation that maps incoming JSON messages to a Message with the specified payload type.\npublic abstract class AbstractJsonInboundMessageMapper<P> extends Object implements InboundMessageMapper<String>;\n", "des": "Provides classes supporting json."}
{"index": 2887, "repo": "spring-integration-core-6.1.2", "code": "package locks\n\n// Default implementation of LockRegistry which uses Masked Hashcode algorithm to obtain locks.\npublic final class DefaultLockRegistry extends Object implements LockRegistry;\n// A LockRegistry implementing this interface supports the removal of aged locks that are not currently locked.\npublic interface ExpirableLockRegistry extends LockRegistry;\n// Strategy for maintaining a registry of shared locks.\n@FunctionalInterface public interface LockRegistry;\n", "des": "Provides classes related to locking resources."}
{"index": 2888, "repo": "spring-integration-core-6.1.2", "code": "package management\n\n// Marker interface indicating that this IntegrationManagement component initiates message flow.\npublic interface IntegrationInboundManagement extends IntegrationManagement;\n// Clone of ManagedResource limiting beans thus annotated so that they will only be exported by the IntegrationMBeanExporter and prevented from being exported by other MBeanExporters (if present).\n@Target(TYPE) @Retention(RUNTIME) @Inherited @Documented public @interface IntegrationManagedResource;\n", "des": "Provides classes related to management support."}
{"index": 2889, "repo": "spring-integration-core-6.1.2", "code": "package metrics\n\n// \npublic interface CounterFacade extends MeterFacade;\n// \npublic interface GaugeFacade extends MeterFacade;\n// Facade for Meters.\npublic interface MeterFacade;\n// A metrics facade that delegates to a concrete implementation.\npublic interface MetricsCaptor;\n// A builder for a counter.\npublic static interface MetricsCaptor.CounterBuilder;\n// A builder for a gauge.\npublic static interface MetricsCaptor.GaugeBuilder;\n", "des": "Provides interfaces related to 5.0 metrics."}
{"index": 2890, "repo": "spring-integration-core-6.1.2", "code": "package micrometer\n\n// The Micrometer implementation of MetricsCaptor.\npublic class MicrometerMetricsCaptor extends Object implements MetricsCaptor;\n// \nprotected abstract static class MicrometerMetricsCaptor.AbstractMeter<M extends io.micrometer.core.instrument.Meter> extends Object implements MeterFacade;\n// \nprotected static class MicrometerMetricsCaptor.MicroCounter extends MicrometerMetricsCaptor.AbstractMeter<io.micrometer.core.instrument.Counter> implements CounterFacade;\n", "des": "Provides classes to support the use of Micrometer for metrics."}
{"index": 2891, "repo": "spring-integration-core-6.1.2", "code": "package observation\n\n// A default MessageReceiverObservationConvention implementation.\npublic class DefaultMessageReceiverObservationConvention extends Object implements MessageReceiverObservationConvention;\n// A default MessageRequestReplyReceiverObservationConvention implementation.\npublic class DefaultMessageRequestReplyReceiverObservationConvention extends Object implements MessageRequestReplyReceiverObservationConvention;\n", "des": "Provides classes to support of Micrometer Observation API."}
{"index": 2892, "repo": "spring-integration-core-6.1.2", "code": "package utils\n\n// General utility methods.\npublic final class IntegrationUtils extends Object;\n// Utility methods for pattern matching.\npublic final class PatternMatchUtils extends Object;\n", "des": "Provides global utility support classes for the runtime system."}
{"index": 2893, "repo": "spring-integration-core-6.1.2", "code": "package transaction\n\n// Default implementation of TransactionSynchronizationFactory which takes an instance of TransactionSynchronizationProcessor allowing you to create a TransactionSynchronization using {DefaultTransactionSynchronizationFactory.create(Object) method.\npublic class DefaultTransactionSynchronizationFactory extends Object implements TransactionSynchronizationFactory;\n", "des": "Provides classes supporting the use of transactions and pseudo transactions in Spring Integration applications."}
{"index": 2894, "repo": "spring-integration-core-6.1.2", "code": "package transformer\n\n// Base class for Message Transformers that delegate to a MessageProcessor.\npublic abstract class AbstractMessageProcessingTransformer extends Object implements Transformer, org.springframework.beans.factory.BeanFactoryAware, ManageableLifecycle;\n// A base class for Transformer implementations that modify the payload of a Message.\npublic abstract class AbstractPayloadTransformer<T,U> extends AbstractTransformer;\n", "des": "Contains core-implementation of various Transformers which includes Enrichers and Filters."}
{"index": 2895, "repo": "spring-integration-core-6.1.2", "code": "package support\n\n// \npublic abstract class AbstractHeaderValueMessageProcessor<T> extends Object implements HeaderValueMessageProcessor<T>;\n// Pre-defined names and prefixes for Apache Avro related headers.\npublic final class AvroHeaders extends Object;\n// \npublic class ExpressionEvaluatingHeaderValueMessageProcessor<T> extends AbstractHeaderValueMessageProcessor<T> implements org.springframework.beans.factory.BeanFactoryAware;\n", "des": "Contains support classes for Transformers."}
{"index": 2896, "repo": "spring-integration-core-6.1.2", "code": "package util\n\n// \npublic abstract class AbstractExpressionEvaluator extends Object implements org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean;\n// An implementation of CollectionFilter that remembers the elements passed in the previous invocation in order to avoid returning those elements more than once.\npublic class AcceptOnceCollectionFilter<T> extends Object implements CollectionFilter<T>;\n", "des": "Provides core utility classes."}
{"index": 2897, "repo": "spring-integration-amqp-6.1.2", "code": "package channel\n\n// The base AbstractMessageChannel implementation for AMQP.\npublic abstract class AbstractAmqpChannel extends org.springframework.integration.channel.AbstractMessageChannel implements org.springframework.amqp.rabbit.connection.ConnectionListener;\n// The AbstractSubscribableAmqpChannel implementation for one-to-one subscription over AMQP queue.\npublic class PointToPointSubscribableAmqpChannel extends AbstractAmqpChannel;\n", "des": "Provides classes related to AMQP-backed channels."}
{"index": 2898, "repo": "spring-integration-amqp-6.1.2", "code": "package config\n\n// If point-to-point, we send to the default exchange with the routing key equal to \"[beanName]\" and we declare that same Queue and register a listener if message-driven or poll explicitly otherwise.\npublic class AmqpChannelFactoryBean extends org.springframework.beans.factory.config.AbstractFactoryBean<AbstractAmqpChannel> implements org.springframework.context.SmartLifecycle, org.springframework.beans.factory.BeanNameAware;\n", "des": "Provides classes for configuration - parsers, namespace handlers, factory beans."}
{"index": 2899, "repo": "spring-integration-amqp-6.1.2", "code": "package dsl\n\n// Base class for container specs for containers that extend AbstractMessageListenerContainer.\npublic abstract class AbstractMessageListenerContainerSpec<S extends AbstractMessageListenerContainerSpec<S,C>,C extends org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer> extends MessageListenerContainerSpec<S,C>;\n// Factory class for AMQP components.\npublic final class Amqp extends Object;\n", "des": "Provides AMQP Component support for the Java DSL."}
{"index": 2900, "repo": "spring-integration-amqp-6.1.2", "code": "package inbound\n\n// Adapter that receives Messages from an AMQP Queue, converts them into Spring Integration Messages, and sends the results to a Message Channel.\npublic class AmqpInboundChannelAdapter extends org.springframework.integration.endpoint.MessageProducerSupport implements org.springframework.integration.context.OrderlyShutdownCapable;\n", "des": "Provides classes supporting inbound endpoints."}
{"index": 2901, "repo": "spring-integration-amqp-6.1.2", "code": "package outbound\n\n// A base AbstractReplyProducingMessageHandler extension for AMQP message handlers.\npublic abstract class AbstractAmqpOutboundEndpoint extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler implements org.springframework.integration.support.management.ManageableLifecycle;\n// \nprotected static final class AbstractAmqpOutboundEndpoint.CorrelationDataWrapper extends org.springframework.amqp.rabbit.connection.CorrelationData;\n", "des": "Provides classes supporting outbound endpoints."}
{"index": 2902, "repo": "spring-integration-amqp-6.1.2", "code": "package support\n\n// A convenience interface that extends RequestReplyHeaderMapper, parameterized with MessageProperties.\npublic interface AmqpHeaderMapper extends org.springframework.integration.mapping.RequestReplyHeaderMapper<org.springframework.amqp.core.MessageProperties>;\n", "des": "Provides AMQP support classes."}
{"index": 2903, "repo": "spring-aspects-6.0.11", "code": "package aspectj\n\n// Marker interface for domain objects that need DI through aspects.\npublic interface ConfigurableObject;\n", "des": "AspectJ-based dependency injection support."}
{"index": 2904, "repo": "spring-aspects-6.0.11", "code": "package aspectj\n\n// @Configuration class that registers the Spring infrastructure beans necessary to enable AspectJ-based annotation-driven cache management.\n@Configuration(proxyBeanMethods=false) @Role(2) public class AspectJCachingConfiguration extends org.springframework.cache.annotation.AbstractCachingConfiguration;\n", "des": "AspectJ-based caching support."}
{"index": 2905, "repo": "spring-aspects-6.0.11", "code": "package aspectj\n\n// Signals the current application context to apply dependency injection to non-managed classes that are instantiated outside the Spring bean factory (typically classes annotated with the @Configurable annotation).\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(SpringConfiguredConfiguration.class) public @interface EnableSpringConfigured;\n", "des": "AspectJ-based dependency injection support driven by the @Configurable annotation."}
{"index": 2906, "repo": "spring-aspects-6.0.11", "code": "package aspectj\n\n// @Configuration class that registers the Spring infrastructure beans necessary to enable AspectJ-based asynchronous method execution.\n@Configuration(proxyBeanMethods=false) @Role(2) public class AspectJAsyncConfiguration extends org.springframework.scheduling.annotation.AbstractAsyncConfiguration;\n", "des": "AspectJ-based scheduling support."}
{"index": 2907, "repo": "spring-aspects-6.0.11", "code": "package aspectj\n\n// @Configuration class that registers the Spring infrastructure beans necessary to enable AspectJ-based annotation-driven transaction management for the JTA 1.2 Transactional annotation in addition to Spring's own Transactional annotation.\n@Configuration @Role(2) public class AspectJJtaTransactionManagementConfiguration extends AspectJTransactionManagementConfiguration;\n", "des": "AspectJ-based transaction management support."}
{"index": 2908, "repo": "spring-boot-maven-plugin-3.1.1", "code": "package maven\n\n// Abstract base class for AOT processing MOJOs.\npublic abstract class AbstractAotMojo extends AbstractDependencyFilterMojo;\n// DiagnosticListener used to collect errors.\nprotected static class AbstractAotMojo.Errors extends Object implements DiagnosticListener<JavaFileObject>;\n// A base mojo filtering the dependencies of the project.\npublic abstract class AbstractDependencyFilterMojo extends org.apache.maven.plugin.AbstractMojo;\n", "des": "Maven plugin for Spring Boot."}
{"index": 2909, "repo": "spring-xml-4.0.5", "code": "package xml\n\n// \npublic class DocumentBuilderFactoryUtils extends Object;\n// Helper class used to find the current version of JAXP.\npublic abstract class JaxpVersion extends Object;\n// Root of the hierarchy of XML exception.\npublic abstract class XmlException extends org.springframework.core.NestedRuntimeException;\n// \npublic class XMLInputFactoryUtils extends Object;\n", "des": "Provides classes for XML handling: version detection and a base XML exception class."}
{"index": 2910, "repo": "spring-xml-4.0.5", "code": "package dom\n\n// SAX ContentHandler that transforms callback calls to DOM Nodes.\npublic class DomContentHandler extends Object implements ContentHandler;\n", "des": "Provides classes that help with DOM: the Document Object Model."}
{"index": 2911, "repo": "spring-xml-4.0.5", "code": "package namespace\n\n// PropertyEditor for javax.xml.namespace.QName, to populate a property of type QName from a String value.\npublic class QNameEditor extends PropertyEditorSupport;\n// Helper class for using QName.\npublic abstract class QNameUtils extends Object;\n// Simple javax.xml.namespace.NamespaceContext implementation.\npublic class SimpleNamespaceContext extends Object implements NamespaceContext;\n", "des": "Provides classes that help with XML Namespace processing."}
{"index": 2912, "repo": "spring-xml-4.0.5", "code": "package sax\n\n// Abstract base class for SAX XMLReader implementations.\npublic abstract class AbstractXmlReader extends Object implements XMLReader;\n// Convenient utility methods for dealing with SAX.\npublic abstract class SaxUtils extends Object;\n", "des": "Provides classes that help with SAX: the Simple API for XML."}
{"index": 2913, "repo": "spring-xml-4.0.5", "code": "package transform\n\n// Convenient subclass of SAXSource that reads from a Spring Resource.\npublic class ResourceSource extends SAXSource;\n// Convenient subclass of StreamResult that writes to a StringWriter.\npublic class StringResult extends StreamResult;\n// Convenient subclass of StreamSource that reads from a StringReader.\npublic class StringSource extends StreamSource;\n// \npublic class TransformerFactoryUtils extends Object;\n", "des": "Provides classes that help with XML transformations."}
{"index": 2914, "repo": "spring-xml-4.0.5", "code": "package validation\n\n// \npublic class SchemaFactoryUtils extends Object;\n// Convenient utility methods for loading of Schema objects, performing standard handling of input streams.\npublic abstract class SchemaLoaderUtils extends Object;\n// Subinterface of ErrorHandler that allows the registered errors to be retrieved.\npublic interface ValidationErrorHandler extends ErrorHandler;\n// \npublic class XMLReaderFactoryUtils extends Object;\n", "des": "Provides classes for XML validation in JAXP 1.0 and JAXP 1.3."}
{"index": 2915, "repo": "spring-xml-4.0.5", "code": "package xpath\n\n// Abstract base class for implementations of XPathOperations.\npublic abstract class AbstractXPathTemplate extends TransformerObjectSupport implements XPathOperations;\n// Implementation of XPathOperations that uses Jaxen.\npublic class JaxenXPathTemplate extends AbstractXPathTemplate;\n// Implementation of XPathOperations that uses JAXP 1.3.\npublic class Jaxp13XPathTemplate extends AbstractXPathTemplate;\n", "des": "Provides XPathTemplate implementations, and various classes for XPath evaluation using JAXP 1.3, and Jaxen."}
{"index": 2916, "repo": "spring-xml-4.0.5", "code": "package xsd\n\n// The default XsdSchema implementation.\npublic class SimpleXsdSchema extends Object implements XsdSchema, org.springframework.beans.factory.InitializingBean;\n// Represents an abstraction for XSD schemas.\npublic interface XsdSchema;\n// Represents an abstraction for a collection of XSD schemas.\npublic interface XsdSchemaCollection;\n// Base class for all WSDL definition exceptions.\npublic class XsdSchemaException extends XmlException;\n", "des": "Provides an abstraction over XSD XML schemas."}
{"index": 2917, "repo": "spring-xml-4.0.5", "code": "package commons\n\n// Implementation of the XsdSchema interface that uses Apache WS-Commons XML Schema.\npublic class CommonsXsdSchema extends Object implements XsdSchema;\n// Implementation of the XsdSchemaCollection that uses Apache WS-Commons XML Schema.\npublic class CommonsXsdSchemaCollection extends Object implements XsdSchemaCollection, org.springframework.beans.factory.InitializingBean, org.springframework.context.ResourceLoaderAware;\n", "des": "Contains a implementation of the XsdSchema interfaces that uses Apache WS-Commons XML Schema."}
{"index": 2918, "repo": "groovy-4.0.13", "code": "package inspect\n\n// The Inspector provides a unified access to an object's information that can be determined by introspection.\npublic class Inspector extends Object;\n// \npublic static class Inspector.MemberComparator extends Object implements Comparator<Object>, Serializable;\n// \npublic static class Inspector.MemberComparatorWithValue extends Object implements Comparator<Object>, Serializable;\n", "des": "Classes for inspecting object properties through introspection."}
{"index": 2919, "repo": "groovy-4.0.13", "code": "package io\n\n// A buffered writer only for OutputStreamWriter that is aware of the encoding of the OutputStreamWriter.\npublic class EncodingAwareBufferedWriter extends BufferedWriter;\n// Represents particular files of interest.\npublic enum FileType extends Enum<FileType>;\n", "des": "Classes for Groovier Input/Output."}
{"index": 2920, "repo": "groovy-4.0.13", "code": "package lang\n\n// An interface for MetaClass instances that \"adapt\" other MetaClass instances such as a proxy or delegating MetaClass.\npublic interface AdaptingMetaClass extends MetaClass;\n// Interceptor that registers the timestamp of each method call before and after invocation.\npublic class BenchmarkInterceptor extends Object implements Interceptor;\n", "des": "Core Groovy language classes for implementing data structures, closures, metadata and so forth."}
{"index": 2921, "repo": "groovy-4.0.13", "code": "package security\n\n// Permission required to explicitly specify a codebase for a groovy script whose codebase cannot be determined.\npublic final class GroovyCodeSourcePermission extends BasicPermission;\n", "des": "Security-related classes"}
{"index": 2922, "repo": "groovy-4.0.13", "code": "package time\n\n// Base class for date and time durations.\npublic abstract class BaseDuration extends Object implements Comparable<BaseDuration>;\n// \npublic abstract static class BaseDuration.From extends Object;\n// DatumDependentDuration represents durations whose length in milliseconds cannot be determined without knowing the datum point.\npublic class DatumDependentDuration extends BaseDuration;\n", "des": "Classes for easily manipulating Dates and times."}
{"index": 2923, "repo": "groovy-4.0.13", "code": "package util\n\n// \npublic abstract class AbstractFactory extends Object implements Factory;\n// An iterator that allows examining the next element without consuming it.\npublic interface BufferedIterator<T> extends Iterator<T>;\n// Base class for creating arbitrary nested trees of objects or events.\npublic abstract class BuilderSupport extends GroovyObjectSupport;\n// Utility class to guess the encoding of a given text file.\npublic class CharsetToolkit extends Object;\n", "des": "Various Groovy utilities for working with nodes, builders, logging, and other things."}
{"index": 2924, "repo": "groovy-4.0.13", "code": "package concurrentlinkedhashmap\n\n// A hash table supporting full concurrency of retrievals, adjustable expected concurrency for updates, and a maximum capacity to bound the map by.\n@ThreadSafe public final class ConcurrentLinkedHashMap<K,V> extends AbstractMap<K,V> implements ConcurrentMap<K,V>, Serializable;\n// A builder that creates ConcurrentLinkedHashMap instances.\npublic static final class ConcurrentLinkedHashMap.Builder<K,V> extends Object;\n", "des": "This package contains an implementation of a bounded ConcurrentMap data structure."}
{"index": 2925, "repo": "groovy-4.0.13", "code": "package groovy\n\n// This class represents an error that is thrown when a bug is recognized inside the runtime.\npublic class GroovyBugError extends AssertionError;\n// \npublic class GroovyException extends Exception implements GroovyExceptionInterface;\n// An interface for use by all Groovy compiler exceptions.\npublic interface GroovyExceptionInterface;\n", "des": "Groovy Language for the JVM"}
{"index": 2926, "repo": "groovy-4.0.13", "code": "package ast\n\n// Base class for any AST node which is capable of being annotated\npublic class AnnotatedNode extends ASTNode implements GroovydocHolder<AnnotatedNode>;\n// Represents an annotation which can be attached to interfaces, classes, methods, fields, parameters, and other places.\npublic class AnnotationNode extends ASTNode;\n// Base class for any AST node.\npublic class ASTNode extends Object implements NodeMetaDataHandler;\n", "des": "Groovy AST nodes for the syntax of the language"}
{"index": 2927, "repo": "groovy-4.0.13", "code": "package expr\n\n// Represents an annotation \"constant\" that may appear in annotation attributes (mainly used as a marker).\npublic class AnnotationConstantExpression extends ConstantExpression;\n// Represents one or more arguments being passed into a method\npublic class ArgumentListExpression extends TupleExpression;\n// Represents an array object construction.\npublic class ArrayExpression extends Expression;\n", "des": "AST nodes for Groovy expressions"}
{"index": 2928, "repo": "groovy-4.0.13", "code": "package stmt\n\n// Represents an assert statement.\npublic class AssertStatement extends Statement;\n// A list of statements and a scope.\npublic class BlockStatement extends Statement;\n// Represents a break statement in a switch or loop statement\npublic class BreakStatement extends Statement;\n// Represents a case statement in a switch statement\npublic class CaseStatement extends Statement;\n// Represents a catch (Exception var) { } statement\npublic class CatchStatement extends Statement;\n", "des": "AST nodes for Groovy statements"}
{"index": 2929, "repo": "groovy-4.0.13", "code": "package classgen\n\n// An Annotation visitor responsible for: reading annotation metadata (@Retention, @Target, attribute types) verify that an AnnotationNode conforms to annotation meta enhancing an AnnotationNode AST to reflect real annotation meta\npublic class AnnotationVisitor extends Object;\n// Generates Java class versions of Groovy classes using ASM.\npublic class AsmClassGenerator extends ClassGenerator;\n", "des": "Generates Java classes for Groovy classes using ASM."}
{"index": 2930, "repo": "groovy-4.0.13", "code": "package asm\n\n// \npublic class AssertionWriter extends Object;\n// Binary write operations specialised for Booleans\npublic class BinaryBooleanExpressionHelper extends BinaryIntExpressionHelper;\n// \npublic class BinaryDoubleExpressionHelper extends BinaryLongExpressionHelper;\n// \npublic class BinaryExpressionHelper extends Object;\n", "des": "Helper classes for ASMClassGenerator."}
{"index": 2931, "repo": "groovy-4.0.13", "code": "package control\n\n// Resolves constants in annotation definitions.\npublic class AnnotationConstantsVisitor extends ClassCodeVisitorSupport;\n// Stores state information about global AST transformations applied to a compilation unit.\npublic class ASTTransformationsContext extends Object;\n// \npublic interface BytecodeProcessor;\n// This class is used as a pluggable way to resolve class names.\npublic class ClassNodeResolver extends Object;\n", "des": "Compiler control classes."}
{"index": 2932, "repo": "groovy-4.0.13", "code": "package io\n\n// For ReaderSources that can choose a parent class, a base that provides common functionality.\npublic abstract class AbstractReaderSource extends Object implements ReaderSource;\n// A ReaderSource for source files.\npublic class FileReaderSource extends AbstractReaderSource;\n// A ReaderSource for source strings.\npublic class InputStreamReaderSource extends AbstractReaderSource;\n// A Writer that eats its input.\npublic class NullWriter extends Writer;\n", "des": "Internal classes for Groovier Input/Output."}
{"index": 2933, "repo": "groovy-4.0.13", "code": "package messages\n\n// A class for error messages produced by the parser system.\npublic class ExceptionMessage extends Message;\n// A base class for compilation messages.\npublic class LocatedMessage extends SimpleMessage;\n// A base class for compilation messages.\npublic abstract class Message extends Object;\n// A base class for compilation messages.\npublic class SimpleMessage extends Message;\n// A class for error messages produced by the parser system.\npublic class SyntaxErrorMessage extends Message;\n", "des": "Error message classes."}
{"index": 2934, "repo": "groovy-4.0.13", "code": "package reflection\n\n// \npublic class CacheAccessControlException extends GroovyRuntimeException;\n// \npublic class CachedClass extends Object;\n// \npublic static class CachedClass.CachedMethodComparatorByName extends Object implements Comparator<CachedMethod>;\n// \npublic static class CachedClass.CachedMethodComparatorWithString extends Object implements Comparator;\n// \npublic class CachedConstructor extends ParameterTypes;\n// \npublic class CachedField extends MetaProperty;\n", "des": "Internal classes for assisting with reflection."}
{"index": 2935, "repo": "groovy-4.0.13", "code": "package runtime\n\n// \npublic abstract class AbstractComparator<T> extends Object implements Comparator<T>;\n// Utilities for handling array types\npublic class ArrayTypeUtils extends Object;\n// This is a generated class used internally during the writing of bytecode within the CallSiteWriter logic.\npublic class ArrayUtil extends Object;\n// This class contains methods special to optimizations used directly from bytecode in Groovy 1.8\npublic class BytecodeInterface8 extends Object;\n", "des": "Runtime classes for Groovy - whether the dynamic interpreter is being used, the compiler or the bytecode generator."}
{"index": 2936, "repo": "groovy-4.0.13", "code": "package metaclass\n\n// A metaclass for closures generated by the Groovy compiler.\npublic final class ClosureMetaClass extends MetaClassImpl;\n// A MetaMethod that accepts a closure in the constructor which is invoked when the MetaMethod is called.\npublic class ClosureMetaMethod extends MetaMethod implements ClosureInvokingMethod;\n", "des": "Internal classes related to Groovy's metaclass implementation."}
{"index": 2937, "repo": "groovy-4.0.13", "code": "package typehandling\n\n// BigDecimal NumberMath operations\npublic final class BigDecimalMath extends NumberMath;\n// BigInteger NumberMath operations\npublic final class BigIntegerMath extends NumberMath;\n// Class providing various type conversions, coercions and boxing/unboxing operations.\npublic class DefaultTypeTransformation extends Object;\n// FloatingPoint (Double and Float) NumberMath operations\npublic final class FloatingPointMath extends NumberMath;\n", "des": "Classes used to execute special actions based on the type."}
{"index": 2938, "repo": "groovy-4.0.13", "code": "package wrappers\n\n// \npublic class BooleanWrapper extends PojoWrapper;\n// \npublic class ByteWrapper extends PojoWrapper;\n// \npublic class CharWrapper extends PojoWrapper;\n// \npublic class DoubleWrapper extends PojoWrapper;\n// \npublic class FloatWrapper extends PojoWrapper;\n// \npublic class GroovyObjectWrapper extends Wrapper;\n// \npublic class IntWrapper extends PojoWrapper;\n// \npublic class LongWrapper extends PojoWrapper;\n// \npublic class PojoWrapper extends Wrapper;\n", "des": "Groovy wrapper classes for primitive types."}
{"index": 2939, "repo": "groovy-4.0.13", "code": "package syntax\n\n// A common base class of AST helper methods which can be shared across the classic and new parsers\npublic class ASTHelper extends Object;\n// An abstract base class for nodes in the concrete syntax tree that is the result of parsing.\npublic abstract class CSTNode extends Object;\n// Helper class for processing Groovy numeric literals.\npublic class Numbers extends Object;\n// \npublic class ParserException extends TokenException;\n", "des": "Lexer, parser and trees."}
{"index": 2940, "repo": "groovy-4.0.13", "code": "package tools\n\n// A convenience front end for getting standard compilations done.\npublic class Compiler extends Object;\n// \npublic class DgmConverter extends Object;\n// Provides services for reporting compilation errors to the user.\npublic class ErrorReporter extends Object;\n// Command-line compiler (aka.\npublic class FileSystemCompiler extends Object;\n// \npublic static class FileSystemCompiler.CompilationOptions extends Object;\n", "des": "Compiler entry points and miscellaneous development tools."}
{"index": 2941, "repo": "groovy-4.0.13", "code": "package javac\n\n// Compilation Unit capable of compiling Java source files.\npublic class JavaAwareCompilationUnit extends CompilationUnit;\n// \npublic class JavaAwareResolveVisitor extends ResolveVisitor;\n// \npublic class JavacCompilerFactory extends Object implements JavaCompilerFactory;\n// \npublic class JavacJavaCompiler extends Object implements JavaCompiler;\n// \npublic interface JavaCompiler;\n// \npublic interface JavaCompilerFactory;\n", "des": "Classes related to the joint compiler."}
{"index": 2942, "repo": "groovy-4.0.13", "code": "package vmplugin\n\n// Interface to access VM version based actions.\npublic interface VMPlugin;\n// Factory class to get functionality based on the VM version.\npublic class VMPluginFactory extends Object;\n", "des": "JVM version specific classes."}
{"index": 2943, "repo": "spring-security-config-6.1.2", "code": "package config\n\n// Contains globally used default Bean IDs for beans created by the namespace support in Spring Security 2.\npublic abstract class BeanIds extends Object;\n// Callback interface that accepts a single input argument and returns no result.\n@FunctionalInterface public interface Customizer<T>;\n// \npublic class DebugBeanDefinitionParser extends Object implements org.springframework.beans.factory.xml.BeanDefinitionParser;\n", "des": "Support classes for the Spring Security namespace."}
{"index": 2944, "repo": "spring-security-config-6.1.2", "code": "package authentication\n\n// \npublic abstract class AbstractUserDetailsServiceBeanDefinitionParser extends Object implements org.springframework.beans.factory.xml.BeanDefinitionParser;\n", "des": "Parsing of <authentication-manager> and related elements."}
{"index": 2945, "repo": "spring-security-config-6.1.2", "code": "package http\n\n// Used as a factory bean to create config attribute values for the requires-channel attribute.\npublic final class ChannelAttributeFactory extends Object;\n// Parser for the CorsFilter.\npublic class CorsBeanDefinitionParser extends Object;\n// Parser for the CsrfFilter.\npublic class CsrfBeanDefinitionParser extends Object implements org.springframework.beans.factory.xml.BeanDefinitionParser;\n", "des": "Parsing of the <http> namespace element."}
{"index": 2946, "repo": "spring-security-config-6.1.2", "code": "package ldap\n\n// Creates an AuthenticationManager that can perform LDAP authentication.\npublic abstract class AbstractLdapAuthenticationManagerFactory<T extends org.springframework.security.ldap.authentication.AbstractLdapAuthenticator> extends Object;\n// Checks for the presence of a ContextSource instance.\npublic class ContextSourceSettingPostProcessor extends Object implements org.springframework.beans.factory.config.BeanFactoryPostProcessor, org.springframework.core.Ordered;\n", "des": "Security namespace support for LDAP authentication."}
{"index": 2947, "repo": "spring-security-config-6.1.2", "code": "package method\n\n// \n@Deprecated public class GlobalMethodSecurityBeanDefinitionParser extends Object implements org.springframework.beans.factory.xml.BeanDefinitionParser;\n// \npublic class InterceptMethodsBeanDefinitionDecorator extends Object implements org.springframework.beans.factory.xml.BeanDefinitionDecorator;\n// Processes the top-level \"method-security\" element.\npublic class MethodSecurityBeanDefinitionParser extends Object implements org.springframework.beans.factory.xml.BeanDefinitionParser;\n", "des": "Support for parsing of the <global-method-security> and <intercept-methods> elements."}
{"index": 2948, "repo": "spring-integration-xml-6.1.2", "code": "package xml\n\n// The validation exception which aggregate all the XML validation errors.\npublic class AggregatedXmlMessageValidationException extends RuntimeException;\n// Default implementation of XmlPayloadConverter.\npublic class DefaultXmlPayloadConverter extends Object implements XmlPayloadConverter;\n// Converter for creating XML Document, Node or Source instances from other types (e.g.\npublic interface XmlPayloadConverter;\n", "des": "Root package of the XML Module."}
{"index": 2949, "repo": "spring-integration-xml-6.1.2", "code": "package config\n\n// \npublic class IntegrationXmlNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n// \npublic class MarshallingTransformerParser extends org.springframework.integration.config.xml.AbstractTransformerParser;\n// \npublic class UnmarshallingTransformerParser extends org.springframework.integration.config.xml.AbstractTransformerParser;\n", "des": "Contains parser classes for the XML namespace support."}
{"index": 2950, "repo": "spring-integration-xml-6.1.2", "code": "package result\n\n// \npublic class DomResultFactory extends Object implements ResultFactory;\n// Factory to create a Result possibly taking into account the provided message payload instance.\npublic interface ResultFactory;\n// \npublic class StringResultFactory extends Object implements ResultFactory;\n", "des": "Provides ResultFactory that will return Result, possibly taking into account payload instance."}
{"index": 2951, "repo": "spring-integration-xml-6.1.2", "code": "package router\n\n// Message Router that uses XPathExpression evaluation to determine channel names.\npublic class XPathRouter extends org.springframework.integration.router.AbstractMappingMessageRouter;\n", "des": "Provides XML message routers."}
{"index": 2952, "repo": "spring-integration-xml-6.1.2", "code": "package selector\n\n// Base class for XPath MessageSelector implementations.\npublic abstract class AbstractXPathMessageSelector extends Object implements org.springframework.integration.core.MessageSelector;\n// Boolean XPath testing MessageSelector.\npublic class BooleanTestXPathMessageSelector extends AbstractXPathMessageSelector;\n// XPath MessageSelector that tests if a provided String value matches a given Regular Expression.\npublic class RegexTestXPathMessageSelector extends AbstractXPathMessageSelector;\n", "des": "Provides XML-centric MessageSelector implementations."}
{"index": 2953, "repo": "spring-integration-xml-6.1.2", "code": "package source\n\n// SourceFactory implementation which supports creation of a DOMSource from a Document, File or String payload.\npublic class DomSourceFactory extends Object implements SourceFactory;\n// Factory to create a Source possibly taking into account the provided message payload instance.\npublic interface SourceFactory;\n", "des": "Provides various SourceFactory implementations."}
{"index": 2954, "repo": "spring-integration-xml-6.1.2", "code": "package splitter\n\n// Message Splitter that uses an XPathExpression to split a Document, File or String payload into a NodeList.\npublic class XPathMessageSplitter extends org.springframework.integration.splitter.AbstractMessageSplitter;\n", "des": "Provides implementations of AbstractMessageSplitter."}
{"index": 2955, "repo": "spring-integration-xml-6.1.2", "code": "package transformer\n\n// Super class for XML transformers.\npublic abstract class AbstractXmlTransformer extends org.springframework.integration.transformer.AbstractTransformer;\n// An implementation of AbstractTransformer that delegates to an OXM Marshaller.\npublic class MarshallingTransformer extends AbstractXmlTransformer;\n// Creates a Document from a Result payload.\npublic class ResultToDocumentTransformer extends Object implements ResultTransformer;\n", "des": "Provides Transformer and Enricher implementations."}
{"index": 2956, "repo": "spring-integration-xml-6.1.2", "code": "package support\n\n// The xPath-specific HeaderValueMessageProcessor\npublic class XPathExpressionEvaluatingHeaderValueMessageProcessor extends Object implements org.springframework.integration.transformer.support.HeaderValueMessageProcessor<Object>, org.springframework.beans.factory.BeanFactoryAware;\n", "des": "Contains support classes for Transformers."}
{"index": 2957, "repo": "spring-integration-xml-6.1.2", "code": "package xpath\n\n// Enumeration of different types of XPath evaluation used to indicate the type of evaluation that should be carried out using a provided XPath expression.\npublic enum XPathEvaluationType extends Enum<XPathEvaluationType>;\n// Utility class for 'xpath' support.\npublic final class XPathUtils extends Object;\n", "des": "Provides XPath supporting classes."}
{"index": 2958, "repo": "spring-integration-redis-6.1.2", "code": "package channel\n\n// An AbstractMessageChannel implementation with BroadcastCapableChannel aspect to provide a pub-sub semantics to consume messages fgrom Redis topic.\npublic class SubscribableRedisChannel extends org.springframework.integration.channel.AbstractMessageChannel implements org.springframework.integration.channel.BroadcastCapableChannel, org.springframework.integration.support.management.ManageableSmartLifecycle;\n", "des": "Provides classes related to Redis-backed channels."}
{"index": 2959, "repo": "spring-integration-redis-6.1.2", "code": "package config\n\n// Parser for the 'channel' and 'publish-subscribe-channel' elements of the Spring Integration Redis namespace.\npublic class RedisChannelParser extends org.springframework.integration.config.xml.AbstractChannelParser;\n// \npublic class RedisInboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractChannelAdapterParser;\n", "des": "Provides classes for configuration - parsers, namespace handlers."}
{"index": 2960, "repo": "spring-integration-redis-6.1.2", "code": "package event\n\n// \npublic class RedisExceptionEvent extends RedisIntegrationEvent;\n// \npublic abstract class RedisIntegrationEvent extends org.springframework.integration.events.IntegrationEvent;\n", "des": "Events generated by the redis module"}
{"index": 2961, "repo": "spring-integration-redis-6.1.2", "code": "package inbound\n\n// A MessageProducerSupport for reading messages from a Redis Stream and publishing them into the provided output channel.\npublic class ReactiveRedisStreamMessageProducer extends org.springframework.integration.endpoint.MessageProducerSupport;\n// \npublic class RedisInboundChannelAdapter extends org.springframework.integration.endpoint.MessageProducerSupport;\n", "des": "Provides classes supporting inbound endpoints."}
{"index": 2962, "repo": "spring-integration-redis-6.1.2", "code": "package metadata\n\n// Redis implementation of ConcurrentMetadataStore.\npublic class RedisMetadataStore extends Object implements org.springframework.integration.metadata.ConcurrentMetadataStore;\n", "des": "Provides support for Redis-based MetadataStores."}
{"index": 2963, "repo": "spring-integration-redis-6.1.2", "code": "package outbound\n\n// \n@FunctionalInterface public interface ArgumentsStrategy;\n// \npublic class ExpressionArgumentsStrategy extends Object implements ArgumentsStrategy, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Provides classes supporting outbound endpoints."}
{"index": 2964, "repo": "spring-integration-redis-6.1.2", "code": "package store\n\n// Specialized Redis ChannelMessageStore that uses a list to back a QueueChannel.\npublic class RedisChannelMessageStore extends Object implements org.springframework.integration.store.ChannelMessageStore, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.BeanClassLoaderAware;\n", "des": "Provides classes related to the Redis message store."}
{"index": 2965, "repo": "spring-integration-redis-6.1.2", "code": "package support\n\n// Pre-defined names and prefixes to be used for for dealing with headers required by Redis components\npublic final class RedisHeaders extends Object;\n", "des": "Provides supporting classes for this module."}
{"index": 2966, "repo": "spring-integration-redis-6.1.2", "code": "package util\n\n// Implementation of ExpirableLockRegistry providing a distributed lock using Redis.\npublic final class RedisLockRegistry extends Object implements org.springframework.integration.support.locks.ExpirableLockRegistry, org.springframework.beans.factory.DisposableBean;\n// The mode in which this registry is going to work with locks.\npublic static enum RedisLockRegistry.RedisLockType extends Enum<RedisLockRegistry.RedisLockType>;\n", "des": "Provides utility classes."}
{"index": 2967, "repo": "pulsar-broker-3.0.0", "code": "package intercept\n\n// A plugin interface that allows you to intercept the client requests to the Pulsar brokers.\n@LimitedPrivate @Evolving public interface BrokerInterceptor extends AutoCloseable;\n// Metadata information about a broker interceptor.\npublic class BrokerInterceptorDefinition extends Object;\n// The collection of broker interceptor.\npublic class BrokerInterceptorDefinitions extends Object;\n// The metadata of broker interceptor.\npublic class BrokerInterceptorMetadata extends Object;\n", "des": "Pulsar broker interceptor."}
{"index": 2968, "repo": "pulsar-broker-3.0.0", "code": "package protocol\n\n// The protocol handler interface for support additional protocols on Pulsar brokers.\n@LimitedPrivate @Evolving public interface ProtocolHandler extends AutoCloseable;\n// Metadata information about a Pulsar protocol handler.\npublic class ProtocolHandlerDefinition extends Object;\n// A collection of loaded handlers.\npublic class ProtocolHandlers extends Object implements AutoCloseable;\n", "des": "Pulsar broker protocol handlers."}
{"index": 2969, "repo": "pulsar-broker-3.0.0", "code": "package storage\n\n// Storage to access ManagedLedgers.\n@Private @Unstable public interface ManagedLedgerStorage extends AutoCloseable;\n", "des": "The storage layer for Apache Pulsar."}
{"index": 2970, "repo": "pulsar-broker-3.0.0", "code": "package tools\n\n// broker-tool is used for operations on a specific broker.\npublic class BrokerTool extends Object;\n// The command to generate documents of broker-tool.\npublic class GenerateDocsCommand extends org.apache.bookkeeper.tools.framework.CliCommand<org.apache.bookkeeper.tools.framework.CliFlags,GenerateDocsCommand.GenDocFlags>;\n// The CLI flags of gen docs command.\nprotected static class GenerateDocsCommand.GenDocFlags extends org.apache.bookkeeper.tools.framework.CliFlags;\n", "des": "Tools for broker related operations."}
{"index": 2971, "repo": "pulsar-broker-3.0.0", "code": "package buffer\n\n// \npublic interface AbortedTxnProcessor;\n// A class represent a transaction buffer.\n@Beta public interface TransactionBuffer;\n// \npublic interface TransactionBufferClientStats;\n// A provider that provides TransactionBuffer.\n@Beta public interface TransactionBufferProvider;\n// A reader to read entries of a given transaction from transaction buffer.\n@Beta public interface TransactionBufferReader extends AutoCloseable;\n", "des": "Implementation of a transaction buffer."}
{"index": 2972, "repo": "pulsar-broker-3.0.0", "code": "package impl\n\n// A provider that provides in-memory implementations of TransactionBuffer.\npublic class InMemTransactionBufferProvider extends Object implements TransactionBufferProvider;\n// A TransactionBufferReader implementation that reads entries from InMemTransactionBuffer.\npublic class InMemTransactionBufferReader extends Object implements TransactionBufferReader;\n// \npublic class SingleSnapshotAbortedTxnProcessorImpl extends Object implements AbortedTxnProcessor;\n", "des": "The implementation of a transaction buffer."}
{"index": 2973, "repo": "pulsar-broker-3.0.0", "code": "package metadata\n\n// Abort txn metadata.\npublic class AbortTxnMetadata extends Object;\n// Transaction buffer snapshot metadata.\npublic class TransactionBufferSnapshot extends Object;\n", "des": "The transaction buffer snapshot metadata."}
{"index": 2974, "repo": "pulsar-broker-3.0.0", "code": "package exception\n\n// The base exception class for the errors thrown from Transaction.\npublic abstract class TransactionException extends Exception;\n// Exception is thrown when opening a reader on a transaction that is not sealed yet.\npublic static class TransactionException.TransactionNotSealedException extends TransactionException;\n// Exception thrown if a transaction is already sealed.\npublic static class TransactionException.TransactionSealedException extends TransactionException;\n", "des": "Exceptions thrown when encountering errors in transaction buffer."}
{"index": 2975, "repo": "pulsar-broker-3.0.0", "code": "package buffer\n\n// The base exception class for the errors thrown from Transaction Buffer.\npublic abstract class TransactionBufferException extends TransactionException;\n// Exception thrown when reaching end of a transaction.\npublic static class TransactionBufferException.EndOfTransactionException extends TransactionBufferException;\n", "des": "Exceptions thrown when encountering errors in transaction buffer."}
{"index": 2976, "repo": "pulsar-broker-3.0.0", "code": "package coordinator\n\n// The base exception class for the errors thrown from Transaction Coordinator.\npublic abstract class TransactionCoordinatorException extends TransactionException;\n// Exceptions are thrown when txnAction is unsupported.\npublic static class TransactionCoordinatorException.UnsupportedTxnActionException extends TransactionCoordinatorException;\n", "des": "Exceptions thrown when encountering errors in transaction buffer."}
{"index": 2977, "repo": "pulsar-broker-3.0.0", "code": "package pendingack\n\n// The base exception class for the errors thrown from Transaction Pending ACk.\npublic abstract class TransactionPendingAckException extends TransactionException;\n// Transaction pending ack store provider exception.\npublic static class TransactionPendingAckException.TransactionPendingAckStoreProviderException extends TransactionPendingAckException;\n", "des": "Exceptions thrown when encountering errors in transaction buffer."}
{"index": 2978, "repo": "pulsar-broker-3.0.0", "code": "package pendingack\n\n// Handle for processing pending acks for transactions.\npublic interface PendingAckHandle;\n// \npublic interface PendingAckHandleStats;\n// Call back for pending ack reply.\npublic interface PendingAckReplyCallBack;\n// To store transaction pending ack.\npublic interface PendingAckStore;\n// Provider of transaction pending ack store.\npublic interface TransactionPendingAckStoreProvider;\n", "des": "Component for processing pending acks for transactions."}
{"index": 2979, "repo": "pulsar-broker-3.0.0", "code": "package impl\n\n// In memory implementation of PendingAckStore.\npublic class InMemoryPendingAckStore extends Object implements PendingAckStore;\n// \npublic class InMemoryPendingAckStoreProvider extends Object implements TransactionPendingAckStoreProvider;\n// MLPendingAckStore reply call back.\npublic class MLPendingAckReplyCallBack extends Object implements PendingAckReplyCallBack;\n", "des": "The implementation for processing pending acks in transactions."}
{"index": 2980, "repo": "pulsar-broker-3.0.0", "code": "package recover\n\n// The transaction recover tracker implementation TransactionRecoverTracker.\npublic class TransactionRecoverTrackerImpl extends Object implements TransactionRecoverTracker;\n", "des": "Implementation of a transaction recover tracker."}
{"index": 2981, "repo": "pulsar-broker-3.0.0", "code": "package timeout\n\n// An timeout tracker factory implementation of TransactionTimeoutTrackerFactory.\npublic class TransactionTimeoutTrackerFactoryImpl extends Object implements TransactionTimeoutTrackerFactory;\n// An timer-task implementation of TransactionTimeoutTracker.\npublic class TransactionTimeoutTrackerImpl extends Object implements TransactionTimeoutTracker, io.netty.util.TimerTask;\n", "des": "Implementation of a transaction buffer."}
{"index": 2982, "repo": "pulsar-broker-3.0.0", "code": "package util\n\n// \npublic class LogIndexLagBackoff extends Object;\n", "des": "Implementation of a transaction tools."}
{"index": 2983, "repo": "pulsar-broker-3.0.0", "code": "package servlet\n\n// The additional servlet with pulsarService interface for support additional servlet to get pulsarService.\npublic interface AdditionalServletWithPulsarService extends AdditionalServlet;\n", "des": "Pulsar broker servlet plugin."}
{"index": 2984, "repo": "spring-security-oauth2-resource-server-6.1.2", "code": "package resource\n\n// \n@Deprecated public class BearerTokenAuthenticationToken extends BearerTokenAuthenticationToken;\n// A representation of a Bearer Token Error.\npublic final class BearerTokenError extends org.springframework.security.oauth2.core.OAuth2Error;\n// Standard error codes defined by the OAuth 2.0 Authorization Framework: Bearer Token Usage.\npublic final class BearerTokenErrorCodes extends Object;\n", "des": "OAuth 2.0 Resource Server core classes and interfaces providing support."}
{"index": 2985, "repo": "spring-security-oauth2-resource-server-6.1.2", "code": "package authentication\n\n// Base class for AbstractAuthenticationToken implementations that expose common attributes between different OAuth 2.0 Access Token Formats.\npublic abstract class AbstractOAuth2TokenAuthenticationToken<T extends org.springframework.security.oauth2.core.OAuth2Token> extends org.springframework.security.authentication.AbstractAuthenticationToken;\n", "des": "OAuth 2.0 Resource Server Authentications and supporting classes and interfaces."}
{"index": 2986, "repo": "spring-security-oauth2-resource-server-6.1.2", "code": "package introspection\n\n// An exception similar to BadCredentialsException that indicates an opaque token that is invalid in some way.\npublic class BadOpaqueTokenException extends OAuth2IntrospectionException;\n// A Nimbus implementation of OpaqueTokenIntrospector that verifies and introspects a token using the configured OAuth 2.0 Introspection Endpoint.\npublic class NimbusOpaqueTokenIntrospector extends Object implements OpaqueTokenIntrospector;\n", "des": "OAuth 2.0 Introspection supporting classes and interfaces."}
{"index": 2987, "repo": "spring-security-oauth2-resource-server-6.1.2", "code": "package web\n\n// An AuthenticationEntryPoint implementation used to commence authentication of protected resource requests using BearerTokenAuthenticationFilter.\npublic final class BearerTokenAuthenticationEntryPoint extends Object implements org.springframework.security.web.AuthenticationEntryPoint;\n// \n@Deprecated public final class BearerTokenAuthenticationFilter extends BearerTokenAuthenticationFilter;\n", "des": "OAuth 2.0 Resource Server Filter's and supporting classes and interfaces."}
{"index": 2988, "repo": "spring-security-oauth2-resource-server-6.1.2", "code": "package access\n\n// Translates any AccessDeniedException into an HTTP response in accordance with RFC 6750 Section 3: The WWW-Authenticate.\npublic final class BearerTokenAccessDeniedHandler extends Object implements org.springframework.security.web.access.AccessDeniedHandler;\n", "des": "OAuth 2.0 Resource Server access denial classes and interfaces."}
{"index": 2989, "repo": "spring-ldap-core-3.1.0", "code": "package annotations\n\n// Maps a Java field to an LDAP attribute.\n@Target(FIELD) @Retention(RUNTIME) public @interface Attribute;\n// The Type attribute indicates whether a field is regarded as binary based or string based by the LDAP JNDI provider.\npublic static enum Attribute.Type extends Enum<Attribute.Type>;\n// Maps a Java field to a component of an entry's distinguished name.\n@Target(FIELD) @Retention(RUNTIME) public @interface DnAttribute;\n", "des": "Provides a set of annotations to describe the mapping of a Java class to an LDAP entry."}
{"index": 2990, "repo": "spring-ldap-core-3.1.0", "code": "package core\n\n// The ObjectDirectoryMapper keeps track of managed class metadata and is used by LdapTemplate to map to/from entity objects annotated with the annotations specified in the org.springframework.ldap.odm.annotations package.\npublic interface ObjectDirectoryMapper;\n// The root of the Spring LDAP ODM exception hierarchy.\npublic class OdmException extends NamingException;\n", "des": "Provides an OdmManager interface for interaction with an LDAP directory."}
{"index": 2991, "repo": "spring-ldap-core-3.1.0", "code": "package impl\n\n// Default implementation of ObjectDirectoryMapper.\npublic class DefaultObjectDirectoryMapper extends Object implements ObjectDirectoryMapper;\n// Thrown to indicate that an instance is not suitable for persisting in the LDAP directory.\npublic class InvalidEntryException extends OdmException;\n// Thrown to indicate an error in the annotated meta-data.\npublic class MetaDataException extends OdmException;\n", "des": "Provides a single public class which implements OdmManager."}
{"index": 2992, "repo": "spring-ldap-core-3.1.0", "code": "package typeconversion\n\n// Thrown by the conversion framework to indicate an error condition - typically a failed type conversion.\npublic final class ConverterException extends NamingException;\n// A simple interface to be implemented to provide type conversion functionality.\npublic interface ConverterManager;\n", "des": "Provides an interface to be implemented to create a type conversion framework."}
{"index": 2993, "repo": "spring-ldap-core-3.1.0", "code": "package impl\n\n// \npublic class ConversionServiceConverterManager extends Object implements ConverterManager;\n// \npublic static final class ConversionServiceConverterManager.NameToStringConverter extends Object implements org.springframework.core.convert.converter.Converter<Name,String>;\n// \npublic static final class ConversionServiceConverterManager.StringToNameConverter extends Object implements org.springframework.core.convert.converter.Converter<String,Name>;\n", "des": "Provides an implementation of the ConverterManager interface."}
{"index": 2994, "repo": "spring-ldap-core-3.1.0", "code": "package converters\n\n// A Converter from a String to any class which has a single argument public constructor taking a String.\npublic final class FromStringConverter extends Object implements Converter;\n// A Converter from any class to a String via the toString method.\npublic final class ToStringConverter extends Object implements Converter;\n", "des": "Provides some basic implementations of the Converter interface."}
{"index": 2995, "repo": "spring-web-6.0.11", "code": "package http\n\n// A builder for creating \"Cache-Control\" HTTP response headers.\npublic class CacheControl extends Object;\n// Representation of the Content-Disposition type and parameters as defined in RFC 6266.\npublic final class ContentDisposition extends Object;\n// A mutable builder for ContentDisposition.\npublic static interface ContentDisposition.Builder;\n// Represents an HTTP cookie as a name-value pair consistent with the content of the \"Cookie\" request header.\npublic class HttpCookie extends Object;\n", "des": "Contains a basic abstraction over client/server-side HTTP."}
{"index": 2996, "repo": "spring-web-6.0.11", "code": "package client\n\n// Abstract base for ClientHttpRequest that makes sure that headers and body are not written multiple times.\npublic abstract class AbstractClientHttpRequest extends Object implements ClientHttpRequest;\n// Abstract base class for ClientHttpRequestFactory implementations that decorate another request factory.\npublic abstract class AbstractClientHttpRequestFactoryWrapper extends Object implements ClientHttpRequestFactory;\n", "des": "Contains an abstraction over client-side HTTP."}
{"index": 2997, "repo": "spring-web-6.0.11", "code": "package observation\n\n// Documented KeyValues for HTTP client observations.\npublic enum ClientHttpObservationDocumentation extends Enum<ClientHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation;\n// \npublic static enum ClientHttpObservationDocumentation.HighCardinalityKeyNames extends Enum<ClientHttpObservationDocumentation.HighCardinalityKeyNames> implements io.micrometer.common.docs.KeyName;\n", "des": "This package provides support for client HTTP Observation."}
{"index": 2998, "repo": "spring-web-6.0.11", "code": "package reactive\n\n// Base class for ClientHttpRequest implementations.\npublic abstract class AbstractClientHttpRequest extends Object implements ClientHttpRequest;\n// Abstraction over HTTP clients driving the underlying HTTP client to connect to the origin server and provide all necessary infrastructure to send a ClientHttpRequest and receive a ClientHttpResponse.\npublic interface ClientHttpConnector;\n", "des": "Abstractions for reactive HTTP client support including ClientHttpRequest and ClientHttpResponse as well as a ClientHttpConnector."}
{"index": 2999, "repo": "spring-web-6.0.11", "code": "package support\n\n// ClientHttpRequestInterceptor to apply a given HTTP Basic Authentication username/password pair, unless a custom Authorization header has already been set.\npublic class BasicAuthenticationInterceptor extends Object implements ClientHttpRequestInterceptor;\n// Base class for RestTemplate and other HTTP accessing gateway helpers, defining common properties such as the ClientHttpRequestFactory to operate on.\npublic abstract class HttpAccessor extends Object;\n", "des": "This package provides generic HTTP support classes, to be used by higher-level classes like RestTemplate."}
{"index": 3000, "repo": "spring-web-6.0.11", "code": "package codec\n\n// Extension of CodecConfigurer for HTTP message reader and writer options relevant on the client side.\npublic interface ClientCodecConfigurer extends CodecConfigurer;\n// CodecConfigurer.DefaultCodecs extension with extra client-side options.\npublic static interface ClientCodecConfigurer.ClientDefaultCodecs extends CodecConfigurer.DefaultCodecs;\n// Defines a common interface for configuring either client or server HTTP message readers and writers.\npublic interface CodecConfigurer;\n", "des": "Provides implementations of Encoder and Decoder for web use."}
{"index": 3001, "repo": "spring-web-6.0.11", "code": "package cbor\n\n// Decode bytes into CBOR and convert to Object's with Jackson.\npublic class Jackson2CborDecoder extends AbstractJackson2Decoder;\n// Encode from an Object to bytes of CBOR objects using Jackson.\npublic class Jackson2CborEncoder extends AbstractJackson2Encoder;\n// Decode a byte stream into CBOR and convert to Objects with kotlinx.serialization.\npublic class KotlinSerializationCborDecoder extends KotlinSerializationBinaryDecoder<kotlinx.serialization.cbor.Cbor>;\n", "des": "CBOR encoder and decoder support."}
{"index": 3002, "repo": "spring-web-6.0.11", "code": "package json\n\n// Abstract base class for Jackson 2.x decoding, leveraging non-blocking parsing.\npublic abstract class AbstractJackson2Decoder extends Jackson2CodecSupport implements HttpMessageDecoder<Object>;\n// Base class providing support methods for Jackson 2.x encoding.\npublic abstract class AbstractJackson2Encoder extends Jackson2CodecSupport implements HttpMessageEncoder<Object>;\n", "des": "JSON encoder and decoder support."}
{"index": 3003, "repo": "spring-web-6.0.11", "code": "package multipart\n\n// Default HttpMessageReader for parsing \"multipart/form-data\" requests to a stream of Parts.\npublic class DefaultPartHttpMessageReader extends LoggingCodecSupport implements HttpMessageReader<Part>;\n// Specialization of Part that represents an uploaded file received in a multipart request.\npublic interface FilePart extends Part;\n// Represents an event triggered for a file upload.\npublic interface FilePartEvent extends PartEvent;\n", "des": "Multipart support."}
{"index": 3004, "repo": "spring-web-6.0.11", "code": "package protobuf\n\n// Decode a byte stream into a protocol Buffer and convert to Objects with kotlinx.serialization.\npublic class KotlinSerializationProtobufDecoder extends KotlinSerializationBinaryDecoder<kotlinx.serialization.protobuf.ProtoBuf>;\n// Decode a byte stream into a Protocol Buffer and convert to Objects with kotlinx.serialization.\npublic class KotlinSerializationProtobufEncoder extends KotlinSerializationBinaryEncoder<kotlinx.serialization.protobuf.ProtoBuf>;\n", "des": "Provides an encoder and a decoder for Google Protocol Buffers."}
{"index": 3005, "repo": "spring-web-6.0.11", "code": "package support\n\n// Default implementation of ClientCodecConfigurer.\npublic class DefaultClientCodecConfigurer extends Object implements ClientCodecConfigurer;\n// Default implementation of ServerCodecConfigurer.\npublic class DefaultServerCodecConfigurer extends Object implements ServerCodecConfigurer;\n", "des": "Provides implementations of ClientCodecConfigurer and ServerCodecConfigurer based on the converter implementations from org.springframework.http.codec.json and co."}
{"index": 3006, "repo": "spring-web-6.0.11", "code": "package xml\n\n// Decode from a bytes stream containing XML elements to a stream of Objects (POJOs).\npublic class Jaxb2XmlDecoder extends org.springframework.core.codec.AbstractDecoder<Object>;\n// Encode from single value to a byte stream containing XML elements.\npublic class Jaxb2XmlEncoder extends org.springframework.core.codec.AbstractSingleValueEncoder<Object>;\n", "des": "XML encoder and decoder support."}
{"index": 3007, "repo": "spring-web-6.0.11", "code": "package converter\n\n// Abstract base class for most GenericHttpMessageConverter implementations.\npublic abstract class AbstractGenericHttpMessageConverter<T> extends AbstractHttpMessageConverter<T> implements GenericHttpMessageConverter<T>;\n// Abstract base class for most HttpMessageConverter implementations.\npublic abstract class AbstractHttpMessageConverter<T> extends Object implements HttpMessageConverter<T>;\n", "des": "Provides an HttpMessageConverter abstraction to convert between Java objects and HTTP input/output messages."}
{"index": 3008, "repo": "spring-web-6.0.11", "code": "package cbor\n\n// Implementation of HttpMessageConverter that can read and write CBOR using kotlinx.serialization.\npublic class KotlinSerializationCborHttpMessageConverter extends KotlinSerializationBinaryHttpMessageConverter<kotlinx.serialization.cbor.Cbor>;\n// Implementation of HttpMessageConverter that can read and write the CBOR data format using the dedicated Jackson 2.x extension.\npublic class MappingJackson2CborHttpMessageConverter extends AbstractJackson2HttpMessageConverter;\n", "des": "Provides an HttpMessageConverter for the CBOR data format."}
{"index": 3009, "repo": "spring-web-6.0.11", "code": "package feed\n\n// Abstract base class for Atom and RSS Feed message converters, using the ROME tools project.\npublic abstract class AbstractWireFeedHttpMessageConverter<T extends com.rometools.rome.feed.WireFeed> extends AbstractHttpMessageConverter<T>;\n// Implementation of HttpMessageConverter that can read and write Atom feeds.\npublic class AtomFeedHttpMessageConverter extends AbstractWireFeedHttpMessageConverter<com.rometools.rome.feed.atom.Feed>;\n", "des": "Provides HttpMessageConverter implementations for handling Atom and RSS feeds."}
{"index": 3010, "repo": "spring-web-6.0.11", "code": "package json\n\n// Abstract base class for Jackson based and content type independent HttpMessageConverter implementations.\npublic abstract class AbstractJackson2HttpMessageConverter extends AbstractGenericHttpMessageConverter<Object>;\n// Common base class for plain JSON converters, e.g.\npublic abstract class AbstractJsonHttpMessageConverter extends AbstractGenericHttpMessageConverter<Object>;\n", "des": "Provides HttpMessageConverter implementations for handling JSON."}
{"index": 3011, "repo": "spring-web-6.0.11", "code": "package protobuf\n\n// Implementation of HttpMessageConverter that can read and write Protocol Buffers using kotlinx.serialization.\npublic class KotlinSerializationProtobufHttpMessageConverter extends KotlinSerializationBinaryHttpMessageConverter<kotlinx.serialization.protobuf.ProtoBuf>;\n// An HttpMessageConverter that reads and writes com.google.protobuf.Messages using Google Protocol Buffers.\npublic class ProtobufHttpMessageConverter extends AbstractHttpMessageConverter<com.google.protobuf.Message>;\n", "des": "Provides an HttpMessageConverter implementation for handling Google Protocol Buffers."}
{"index": 3012, "repo": "spring-web-6.0.11", "code": "package smile\n\n// Implementation of HttpMessageConverter that can read and write Smile data format (\"binary JSON\") using the dedicated Jackson 2.x extension.\npublic class MappingJackson2SmileHttpMessageConverter extends AbstractJackson2HttpMessageConverter;\n", "des": "Provides an HttpMessageConverter for the Smile data format (\"binary JSON\")."}
{"index": 3013, "repo": "spring-web-6.0.11", "code": "package support\n\n// Extension of FormHttpMessageConverter, adding support for XML and JSON-based parts.\npublic class AllEncompassingFormHttpMessageConverter extends FormHttpMessageConverter;\n", "des": "Provides a comprehensive HttpMessageConverter variant for form handling."}
{"index": 3014, "repo": "spring-web-6.0.11", "code": "package xml\n\n// Abstract base class for HttpMessageConverters that use JAXB2.\npublic abstract class AbstractJaxb2HttpMessageConverter<T> extends AbstractXmlHttpMessageConverter<T>;\n// Abstract base class for HttpMessageConverters that convert from/to XML.\npublic abstract class AbstractXmlHttpMessageConverter<T> extends AbstractHttpMessageConverter<T>;\n", "des": "Provides HttpMessageConverter implementations for handling XML."}
{"index": 3015, "repo": "spring-web-6.0.11", "code": "package server\n\n// Implementation of ServerHttpResponse that delegates all calls to a given target ServerHttpResponse.\npublic class DelegatingServerHttpResponse extends Object implements ServerHttpResponse;\n// Structured representation of a URI path parsed via PathContainer.parsePath(String) into a sequence of PathContainer.Separator and PathContainer.PathSegment elements.\npublic interface PathContainer;\n// A path element, either separator or path segment.\npublic static interface PathContainer.Element;\n", "des": "Contains an abstraction over server-side HTTP."}
{"index": 3016, "repo": "spring-web-6.0.11", "code": "package observation\n\n// Default ServerRequestObservationConvention.\npublic class DefaultServerRequestObservationConvention extends Object implements ServerRequestObservationConvention;\n// Documented KeyValues for the HTTP server observations for Servlet-based web applications.\npublic enum ServerHttpObservationDocumentation extends Enum<ServerHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation;\n", "des": "Instrumentation for observing HTTP server applications."}
{"index": 3017, "repo": "spring-web-6.0.11", "code": "package reactive\n\n// Abstract base class for Publisher implementations that bridge between event-listener read APIs and Reactive Streams.\npublic abstract class AbstractListenerReadPublisher<T> extends Object implements Publisher<T>;\n// Abstract base class for listener-based server responses.\npublic abstract class AbstractListenerServerHttpResponse extends AbstractServerHttpResponse;\n", "des": "Abstractions for reactive HTTP server support including a ServerHttpRequest and ServerHttpResponse along with an HttpHandler for processing."}
{"index": 3018, "repo": "spring-web-6.0.11", "code": "package observation\n\n// Default ServerRequestObservationConvention.\npublic class DefaultServerRequestObservationConvention extends Object implements ServerRequestObservationConvention;\n// Documented KeyValues for the HTTP server observations for reactive web applications.\npublic enum ServerHttpObservationDocumentation extends Enum<ServerHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation;\n", "des": "Instrumentation for observing reactive HTTP server applications."}
{"index": 3019, "repo": "spring-web-6.0.11", "code": "package web\n\n// Representation of a complete RFC 7807 error response including status, headers, and an RFC 7807 formatted ProblemDetail body.\npublic interface ErrorResponse;\n// Builder for an ErrorResponse.\npublic static interface ErrorResponse.Builder;\n", "des": "Common, generic interfaces that define minimal boundary points between Spring's web infrastructure and other framework modules."}
{"index": 3020, "repo": "spring-web-6.0.11", "code": "package accept\n\n// Base class for ContentNegotiationStrategy implementations with the steps to resolve a request to media types.\npublic abstract class AbstractMappingContentNegotiationStrategy extends MappingMediaTypeFileExtensionResolver implements ContentNegotiationStrategy;\n// Central class to determine requested media types for a request.\npublic class ContentNegotiationManager extends Object implements ContentNegotiationStrategy, MediaTypeFileExtensionResolver;\n", "des": "This package contains classes used to determine the requested the media types in a request."}
{"index": 3021, "repo": "spring-web-6.0.11", "code": "package bind\n\n// Errors wrapper that adds automatic HTML escaping to the wrapped instance, for convenient usage in HTML views.\npublic class EscapedErrors extends Object implements org.springframework.validation.Errors;\n// Exception to be thrown when validation on an argument annotated with @Valid fails.\npublic class MethodArgumentNotValidException extends org.springframework.validation.BindException implements ErrorResponse;\n", "des": "Provides web-specific data binding functionality."}
{"index": 3022, "repo": "spring-web-6.0.11", "code": "package annotation\n\n// Specialization of @Component for classes that declare @ExceptionHandler, @InitBinder, or @ModelAttribute methods to be shared across multiple @Controller classes.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Component public @interface ControllerAdvice;\n// Annotation to indicate that a method parameter is bound to an HTTP cookie.\n@Target(PARAMETER) @Retention(RUNTIME) @Documented public @interface CookieValue;\n", "des": "Annotations for binding requests to controllers and handler methods as well as for binding request parameters to method arguments."}
{"index": 3023, "repo": "spring-web-6.0.11", "code": "package support\n\n// Convenient WebBindingInitializer for declarative configuration in a Spring application context.\npublic class ConfigurableWebBindingInitializer extends Object implements WebBindingInitializer;\n// Create a WebRequestDataBinder instance and initialize it with a WebBindingInitializer.\npublic class DefaultDataBinderFactory extends Object implements WebDataBinderFactory;\n", "des": "Support classes for web data binding."}
{"index": 3024, "repo": "spring-web-6.0.11", "code": "package client\n\n// Spring's default implementation of the ResponseErrorHandler interface.\npublic class DefaultResponseErrorHandler extends Object implements ResponseErrorHandler;\n// Implementation of ResponseErrorHandler that uses HttpMessageConverters to convert HTTP error responses to RestClientExceptions.\npublic class ExtractingResponseErrorHandler extends DefaultResponseErrorHandler;\n// Exception thrown when an HTTP 4xx is received.\npublic class HttpClientErrorException extends HttpStatusCodeException;\n", "des": "Core package of the client-side web support."}
{"index": 3025, "repo": "spring-web-6.0.11", "code": "package support\n\n// Convenient superclass for application classes that need REST access.\npublic class RestGatewaySupport extends Object;\n", "des": "Classes supporting the org.springframework.web.client package."}
{"index": 3026, "repo": "spring-web-6.0.11", "code": "package context\n\n// Convenient base class for WebApplicationInitializer implementations that register a ContextLoaderListener in the servlet context.\npublic abstract class AbstractContextLoaderInitializer extends Object implements WebApplicationInitializer;\n// Interface to be implemented by configurable web application contexts.\npublic interface ConfigurableWebApplicationContext extends WebApplicationContext, org.springframework.context.ConfigurableApplicationContext;\n", "des": "Contains a variant of the application context interface for web applications, and the ContextLoaderListener that bootstraps a root web application context."}
{"index": 3027, "repo": "spring-web-6.0.11", "code": "package annotation\n\n// @ApplicationScope is a specialization of @Scope for a component whose lifecycle is bound to the current web application.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Scope(\"application\") public @interface ApplicationScope;\n// @RequestScope is a specialization of @Scope for a component whose lifecycle is bound to the current web request.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Scope(\"request\") public @interface RequestScope;\n", "des": "Provides convenience annotations for web scopes."}
{"index": 3028, "repo": "spring-web-6.0.11", "code": "package request\n\n// Abstract support class for RequestAttributes implementations, offering a request completion mechanism for request-specific destruction callbacks and for updating accessed session attributes.\npublic abstract class AbstractRequestAttributes extends Object implements RequestAttributes;\n", "des": "Support for generic request context holding, in particular for scoping of application objects per HTTP request or HTTP session."}
{"index": 3029, "repo": "spring-web-6.0.11", "code": "package async\n\n// Exception to be thrown when an async request times out.\npublic class AsyncRequestTimeoutException extends RuntimeException implements ErrorResponse;\n// Extends NativeWebRequest with methods for asynchronous request processing.\npublic interface AsyncWebRequest extends NativeWebRequest;\n", "des": "Support for asynchronous request processing."}
{"index": 3030, "repo": "spring-web-6.0.11", "code": "package support\n\n// AbstractRefreshableApplicationContext subclass which implements the ConfigurableWebApplicationContext interface for web environments.\npublic abstract class AbstractRefreshableWebApplicationContext extends org.springframework.context.support.AbstractRefreshableConfigApplicationContext implements ConfigurableWebApplicationContext, org.springframework.ui.context.ThemeSource;\n", "des": "Classes supporting the org.springframework.web.context package, such as WebApplicationContext implementations and various utility classes."}
{"index": 3031, "repo": "spring-web-6.0.11", "code": "package cors\n\n// A container for CORS configuration along with methods to check against the actual origin, HTTP methods, and headers of a given request.\npublic class CorsConfiguration extends Object;\n// Interface to be implemented by classes (usually HTTP request handlers) that provides a CorsConfiguration instance based on the provided request.\npublic interface CorsConfigurationSource;\n// A strategy that takes a request and a CorsConfiguration and updates the response.\npublic interface CorsProcessor;\n", "des": "Support for CORS (Cross-Origin Resource Sharing), based on a common CorsProcessor strategy."}
{"index": 3032, "repo": "spring-web-6.0.11", "code": "package reactive\n\n// Interface to be implemented by classes (usually HTTP request handlers) that provides a CorsConfiguration instance based on the provided reactive request.\npublic interface CorsConfigurationSource;\n// A strategy to apply CORS validation checks and updates to a ServerWebExchange, either rejecting through the response or adding CORS related headers, based on a pre-selected CorsConfiguration.\npublic interface CorsProcessor;\n", "des": "Reactive support for CORS (Cross-Origin Resource Sharing), based on a common CorsProcessor strategy."}
{"index": 3033, "repo": "spring-web-6.0.11", "code": "package filter\n\n// Base class for Filters that perform logging operations before and after a request is processed.\npublic abstract class AbstractRequestLoggingFilter extends OncePerRequestFilter;\n// Servlet Filter that allows one to specify a character encoding for requests.\npublic class CharacterEncodingFilter extends OncePerRequestFilter;\n", "des": "Provides generic filter base classes allowing for bean-style configuration."}
{"index": 3034, "repo": "spring-web-6.0.11", "code": "package reactive\n\n// Reactive WebFilter that converts posted method parameters into HTTP methods, retrievable via HttpRequest.getMethod().\npublic class HiddenHttpMethodFilter extends Object implements WebFilter;\n// WebFilter that creates observations for HTTP exchanges.\npublic class ServerHttpObservationFilter extends Object implements WebFilter;\n", "des": "WebFilter implementations for use in reactive web applications."}
{"index": 3035, "repo": "spring-web-6.0.11", "code": "package jsf\n\n// Base class for JSF NavigationHandler implementations that want to be capable of decorating an original NavigationHandler.\npublic abstract class DecoratingNavigationHandler extends NavigationHandler;\n// JSF NavigationHandler implementation that delegates to a NavigationHandler bean obtained from the Spring root WebApplicationContext.\npublic class DelegatingNavigationHandlerProxy extends NavigationHandler;\n", "des": "Support classes for integrating a JSF web layer with a Spring service layer which is hosted in a Spring root WebApplicationContext."}
{"index": 3036, "repo": "spring-web-6.0.11", "code": "package el\n\n// JSF ELResolver that delegates to the Spring root WebApplicationContext, resolving name references to Spring-defined beans.\npublic class SpringBeanFacesELResolver extends ELResolver;\n// Special JSF ELResolver that exposes the Spring WebApplicationContext instance under a variable named \"webApplicationContext\".\npublic class WebApplicationContextFacesELResolver extends ELResolver;\n", "des": "ELResolvers for integrating a JSF web layer with a Spring service layer which is hosted in a Spring root WebApplicationContext."}
{"index": 3037, "repo": "spring-web-6.0.11", "code": "package method\n\n// Encapsulates information about an @ControllerAdvice Spring-managed bean without necessarily requiring it to be instantiated.\npublic class ControllerAdviceBean extends Object implements org.springframework.core.Ordered;\n// Encapsulates information about a handler method consisting of a method and a bean.\npublic class HandlerMethod extends Object;\n", "des": "Common infrastructure for handler method processing, as used by Spring MVC's org.springframework.web.servlet.mvc.method package."}
{"index": 3038, "repo": "spring-web-6.0.11", "code": "package annotation\n\n// A base abstract class to resolve method arguments annotated with @CookieValue.\npublic abstract class AbstractCookieValueMethodArgumentResolver extends AbstractNamedValueMethodArgumentResolver;\n// Abstract base class for resolving method arguments from a named value.\npublic abstract class AbstractNamedValueMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n", "des": "Support classes for annotation-based handler method processing."}
{"index": 3039, "repo": "spring-web-6.0.11", "code": "package support\n\n// A return value handler that supports async types.\npublic interface AsyncHandlerMethodReturnValueHandler extends HandlerMethodReturnValueHandler;\n// A UriComponentsContributor containing a list of other contributors to delegate to and also encapsulating a specific ConversionService to use for formatting method argument values as Strings.\npublic class CompositeUriComponentsContributor extends Object implements UriComponentsContributor;\n", "des": "Generic support classes for handler method processing."}
{"index": 3040, "repo": "spring-web-6.0.11", "code": "package multipart\n\n// MultipartException subclass thrown when an upload exceeds the maximum upload size allowed.\npublic class MaxUploadSizeExceededException extends MultipartException;\n// Exception thrown when multipart resolution fails.\npublic class MultipartException extends org.springframework.core.NestedRuntimeException;\n// A representation of an uploaded file received in a multipart request.\npublic interface MultipartFile extends org.springframework.core.io.InputStreamSource;\n", "des": "Multipart resolution framework for handling file uploads."}
{"index": 3041, "repo": "spring-web-6.0.11", "code": "package support\n\n// Abstract base implementation of the MultipartHttpServletRequest interface.\npublic abstract class AbstractMultipartHttpServletRequest extends HttpServletRequestWrapper implements MultipartHttpServletRequest;\n// Custom PropertyEditor for converting MultipartFiles to byte arrays.\npublic class ByteArrayMultipartFileEditor extends org.springframework.beans.propertyeditors.ByteArrayPropertyEditor;\n", "des": "Support classes for the multipart resolution framework."}
{"index": 3042, "repo": "spring-web-6.0.11", "code": "package server\n\n// Exception for errors that fit response status 405 (method not allowed).\npublic class MethodNotAllowedException extends ResponseStatusException;\n// ServerWebInputException subclass that indicates a missing request value such as a request header, cookie value, query parameter, etc.\npublic class MissingRequestValueException extends ServerWebInputException;\n", "des": "Core interfaces and classes for Spring's generic, reactive web support."}
{"index": 3043, "repo": "spring-web-6.0.11", "code": "package adapter\n\n// Base class for a WebApplicationInitializer that installs a Spring Reactive Web Application on a Servlet container.\npublic abstract class AbstractReactiveWebInitializer extends Object implements WebApplicationInitializer;\n// Default implementation of ServerWebExchange.\npublic class DefaultServerWebExchange extends Object implements ServerWebExchange;\n", "des": "Implementations to adapt to the underlying org.springframework.http.client.reactive reactive HTTP adapter and HttpHandler."}
{"index": 3044, "repo": "spring-web-6.0.11", "code": "package handler\n\n// Default implementation of WebFilterChain.\npublic class DefaultWebFilterChain extends Object implements WebFilterChain;\n// WebHandler decorator that invokes one or more WebExceptionHandlers after the delegate WebHandler.\npublic class ExceptionHandlingWebHandler extends WebHandlerDecorator;\n// WebHandlerDecorator that invokes a chain of WebFilters before invoking the delegate WebHandler.\npublic class FilteringWebHandler extends WebHandlerDecorator;\n", "des": "Provides common WebHandler implementations and a WebHandlerDecorator."}
{"index": 3045, "repo": "spring-web-6.0.11", "code": "package i18n\n\n// LocaleContextResolver implementation that looks for a match between locales in the Accept-Language header and a list of configured supported locales.\npublic class AcceptHeaderLocaleContextResolver extends Object implements LocaleContextResolver;\n// LocaleContextResolver implementation that always returns a fixed locale and optionally time zone.\npublic class FixedLocaleContextResolver extends Object implements LocaleContextResolver;\n", "des": "Locale related support classes."}
{"index": 3046, "repo": "spring-web-6.0.11", "code": "package session\n\n// Cookie-based WebSessionIdResolver.\npublic class CookieWebSessionIdResolver extends Object implements WebSessionIdResolver;\n// Default implementation of WebSessionManager delegating to a WebSessionIdResolver for session id resolution and to a WebSessionStore.\npublic class DefaultWebSessionManager extends Object implements WebSessionManager;\n// Request and response header-based WebSessionIdResolver.\npublic class HeaderWebSessionIdResolver extends Object implements WebSessionIdResolver;\n", "des": "Auxiliary interfaces and implementation classes for WebSession support."}
{"index": 3047, "repo": "spring-web-6.0.11", "code": "package annotation\n\n// Shortcut for @HttpExchange for HTTP DELETE requests.\n@Target(METHOD) @Retention(RUNTIME) @Documented @HttpExchange(method=\"DELETE\") public @interface DeleteExchange;\n// Shortcut for @HttpExchange for HTTP GET requests.\n@Target(METHOD) @Retention(RUNTIME) @Documented @HttpExchange(method=\"GET\") public @interface GetExchange;\n", "des": "Annotations for declaring HTTP service request methods."}
{"index": 3048, "repo": "spring-web-6.0.11", "code": "package invoker\n\n// Base class for arguments that resolve to a named request value such as a request header, path variable, cookie, and others.\npublic abstract class AbstractNamedValueArgumentResolver extends Object implements HttpServiceArgumentResolver;\n// Info about a request value, typically extracted from a method parameter annotation.\nprotected static class AbstractNamedValueArgumentResolver.NamedValueInfo extends Object;\n", "des": "Support for creating a client proxy for an HTTP service annotated with HttpExchange methods."}
{"index": 3049, "repo": "spring-web-6.0.11", "code": "package util\n\n// HttpServletRequest wrapper that caches all content read from the input stream and reader, and allows this content to be retrieved via a byte array.\npublic class ContentCachingRequestWrapper extends HttpServletRequestWrapper;\n// HttpServletResponse wrapper that caches all content written to the output stream and writer, and allows this content to be retrieved via a byte array.\npublic class ContentCachingResponseWrapper extends HttpServletResponseWrapper;\n", "des": "Miscellaneous web utility classes, such as HTML escaping and cookie handling."}
{"index": 3050, "repo": "spring-web-6.0.11", "code": "package pattern\n\n// Representation of a parsed path pattern.\npublic class PathPattern extends Object implements Comparable<PathPattern>;\n// Holder for URI variables and path parameters (matrix variables) extracted based on the pattern for a given matched path.\npublic static class PathPattern.PathMatchInfo extends Object;\n// Holder for the result of a match on the start of a pattern.\npublic static class PathPattern.PathRemainingMatchInfo extends Object;\n", "des": "Dedicated support for matching HTTP request paths."}
{"index": 3051, "repo": "spring-ws-core-4.0.5", "code": "package ws\n\n// Sub-interface of WebServiceMessage that can contain special Fault messages.\npublic interface FaultAwareWebServiceMessage extends WebServiceMessage;\n// Exception thrown when a WebServiceMessageFactory cannot parse the XML passed on to WebServiceMessageFactory.createWebServiceMessage(java.io.InputStream).\npublic final class InvalidXmlException extends WebServiceException;\n", "des": "Provides the core functionality of the Spring Web Services framework."}
{"index": 3052, "repo": "spring-ws-core-4.0.5", "code": "package client\n\n// Exception thrown whenever an error occurs on the client-side.\npublic abstract class WebServiceClientException extends WebServiceException;\n// Thrown by SimpleFaultMessageResolver when the response message has a fault.\npublic class WebServiceFaultException extends WebServiceClientException;\n// Exception thrown whenever an I/O error occurs on the client-side.\npublic class WebServiceIOException extends WebServiceClientException;\n", "des": "Contains classes for client-side Spring-WS support, allowing for Spring-style Web service access."}
{"index": 3053, "repo": "spring-ws-core-4.0.5", "code": "package core\n\n// Defines the interface for objects than can resolve fault WebServiceMessages.\npublic interface FaultMessageResolver;\n// Simple fault resolver that simply throws a WebServiceFaultException when a fault occurs.\npublic class SimpleFaultMessageResolver extends Object implements FaultMessageResolver;\n// Callback interface for extracting a result object from a Source instance.\npublic interface SourceExtractor<T>;\n", "des": "Core package of the Spring-WS client-side support."}
{"index": 3054, "repo": "spring-ws-core-4.0.5", "code": "package support\n\n// Convenient super class for application classes that need Web service access.\npublic abstract class WebServiceGatewaySupport extends Object implements org.springframework.beans.factory.InitializingBean;\n", "des": "Convenient super class for application classes that need Web service access."}
{"index": 3055, "repo": "spring-ws-core-4.0.5", "code": "package support\n\n// Base class for WebServiceTemplate and other WS-accessing helpers.\npublic abstract class WebServiceAccessor extends org.springframework.xml.transform.TransformerObjectSupport implements org.springframework.beans.factory.InitializingBean;\n", "des": "Classes supporting the org.springframework.ws.client.core package."}
{"index": 3056, "repo": "spring-ws-core-4.0.5", "code": "package destination\n\n// Abstract base class for DestinationProvider implementations that cache destination URI.\npublic abstract class AbstractCachingDestinationProvider extends Object implements DestinationProvider;\n// Strategy interface for providing a WebServiceTemplate destination URI at runtime.\npublic interface DestinationProvider;\n// Thrown by a DestinationProvider when it cannot provide a destination.\npublic class DestinationProvisionException extends WebServiceClientException;\n", "des": "Provides the DestinationProvider interface."}
{"index": 3057, "repo": "spring-ws-core-4.0.5", "code": "package interceptor\n\n// Abstract base class for ClientInterceptor implementations that validate part of the message using a schema.\npublic abstract class AbstractValidatingInterceptor extends org.springframework.xml.transform.TransformerObjectSupport implements ClientInterceptor, org.springframework.beans.factory.InitializingBean;\n// Workflow interface that allows for customized client-side message interception.\npublic interface ClientInterceptor;\n", "des": "Provides the ClientInterceptor interface, and validating interceptors."}
{"index": 3058, "repo": "spring-ws-core-4.0.5", "code": "package config\n\n// NamespaceHandler for the 'web-services' namespace.\npublic class WebServicesNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Provides an namespace handler for the Spring Web Services namespace."}
{"index": 3059, "repo": "spring-ws-core-4.0.5", "code": "package context\n\n// Abstract base class for MessageContext instances.\npublic abstract class AbstractMessageContext extends Object implements MessageContext;\n// Default implementation of MessageContext.\npublic class DefaultMessageContext extends AbstractMessageContext;\n// Context holder for message requests.\npublic interface MessageContext;\n", "des": "Contains the MessageContext interface and implementations thereof."}
{"index": 3060, "repo": "spring-ws-core-4.0.5", "code": "package mime\n\n// Abstract implementation of the MimeMessage interface.\npublic abstract class AbstractMimeMessage extends Object implements MimeMessage;\n// Represents an attachment to a MimeMessage\npublic interface Attachment;\n// Exception thrown when a MIME attachment could not be accessed.\npublic class AttachmentException extends WebServiceMessageException;\n// Represents a Web service message with MIME attachments.\npublic interface MimeMessage extends WebServiceMessage;\n", "des": "Provides MIME functionality for use the Spring Web Services framework."}
{"index": 3061, "repo": "spring-ws-core-4.0.5", "code": "package pox\n\n// Defines the contract for Plain Old XML messages.\npublic interface PoxMessage extends WebServiceMessage;\n// Specific subclass of WebServiceMessageException for Plain Old XML messages.\npublic abstract class PoxMessageException extends WebServiceMessageException;\n", "des": "Provides the Plain Old XML (POX) functionality of the Spring Web Services framework."}
{"index": 3062, "repo": "spring-ws-core-4.0.5", "code": "package dom\n\n// Implementation of the PoxMessage interface that is based on a DOM Document.\npublic class DomPoxMessage extends Object implements PoxMessage;\n// Specific subclass of PoxMessageException for DOM Plain Old XML messages.\npublic class DomPoxMessageException extends PoxMessageException;\n", "des": "Contains an implementation of the POX interfaces that is based on DOM."}
{"index": 3063, "repo": "spring-ws-core-4.0.5", "code": "package server\n\n// Interface that must be implemented for each endpoint type to handle a message request.\npublic interface EndpointAdapter;\n// Defines the interface for objects than can resolve exceptions thrown during endpoint execution.\npublic interface EndpointExceptionResolver;\n// Workflow interface that allows for customized endpoint invocation chains.\npublic interface EndpointInterceptor;\n", "des": "Contains classes for server-side Spring-WS support."}
{"index": 3064, "repo": "spring-ws-core-4.0.5", "code": "package endpoint\n\n// \n@Deprecated public abstract class AbstractDom4jPayloadEndpoint extends org.springframework.xml.transform.TransformerObjectSupport implements PayloadEndpoint;\n// \n@Deprecated public abstract class AbstractDomPayloadEndpoint extends org.springframework.xml.transform.TransformerObjectSupport implements PayloadEndpoint;\n", "des": "Provides standard endpoint, and EndpointAdapter implementations."}
{"index": 3065, "repo": "spring-ws-core-4.0.5", "code": "package adapter\n\n// Abstract base class for EndpointAdapter implementations that support MethodEndpoints.\npublic abstract class AbstractMethodEndpointAdapter extends org.springframework.xml.transform.TransformerObjectSupport implements EndpointAdapter;\n", "des": "Provides miscellaneous EndpointAdapter implementations."}
{"index": 3066, "repo": "spring-ws-core-4.0.5", "code": "package method\n\n// Abstract base class for MethodArgumentResolver and MethodReturnValueHandler implementations based on RequestPayload and ResponsePayload annotations.\npublic abstract class AbstractPayloadMethodProcessor extends org.springframework.xml.transform.TransformerObjectSupport implements MethodArgumentResolver, MethodReturnValueHandler;\n", "des": "Provides the MethodArgumentResolver and MethodReturnValueHandler abstractions, and various implementations thereof."}
{"index": 3067, "repo": "spring-ws-core-4.0.5", "code": "package dom\n\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports dom4j elements.\npublic class Dom4jPayloadMethodProcessor extends AbstractPayloadSourceMethodProcessor;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports W3C DOM elements.\npublic class DomPayloadMethodProcessor extends AbstractPayloadSourceMethodProcessor;\n", "des": "Provides DOM-based implementations of the MethodArgumentResolver and MethodReturnValueHandler interfaces."}
{"index": 3068, "repo": "spring-ws-core-4.0.5", "code": "package jaxb\n\n// Abstract base class for MethodArgumentResolver and MethodReturnValueHandler implementations that use JAXB2.\npublic abstract class AbstractJaxb2PayloadMethodProcessor extends AbstractPayloadMethodProcessor;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports JAXBElement objects.\npublic class JaxbElementPayloadMethodProcessor extends AbstractJaxb2PayloadMethodProcessor;\n", "des": "Provides JAXB2-based implementations of the MethodArgumentResolver and MethodReturnValueHandler interfaces."}
{"index": 3069, "repo": "spring-ws-core-4.0.5", "code": "package annotation\n\n// Indicates that an annotated class is an \"Endpoint\" (e.g.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Component public @interface Endpoint;\n// Sets up a namespace to be used in an @Endpoint method, class, or package.\n@Documented @Retention(RUNTIME) @Target({PACKAGE,TYPE,METHOD}) public @interface Namespace;\n// Sets the namespaces to be used in an @Endpoint method, class, or package.\n@Documented @Retention(RUNTIME) @Target({PACKAGE,TYPE,METHOD}) public @interface Namespaces;\n", "des": "JDK 1.5+ annotations for Spring-WS endpoints."}
{"index": 3070, "repo": "spring-ws-core-4.0.5", "code": "package interceptor\n\n// Abstract base class for EndpointInterceptor implementations that validate part of the message using a schema.\npublic abstract class AbstractValidatingInterceptor extends org.springframework.xml.transform.TransformerObjectSupport implements EndpointInterceptor, org.springframework.beans.factory.InitializingBean;\n", "des": "Provides miscellaneous endpoints EndpointInterceptor implementations."}
{"index": 3071, "repo": "spring-ws-core-4.0.5", "code": "package mapping\n\n// Abstract base for EndpointMapping implementations that map classes tagged with an annotation.\npublic abstract class AbstractAnnotationMethodEndpointMapping<T> extends AbstractMethodEndpointMapping<T>;\n// Abstract base class for EndpointMapping implementations.\npublic abstract class AbstractEndpointMapping extends org.springframework.context.support.ApplicationObjectSupport implements EndpointMapping, org.springframework.core.Ordered;\n", "des": "Provides miscellaneous endpoints EndpointMapping implementations."}
{"index": 3072, "repo": "spring-ws-core-4.0.5", "code": "package jaxb\n\n// Implementation of the EndpointMapping interface that uses the JAXB2 XmlRootElement annotation to map methods to request payload root elements.\npublic class XmlRootElementEndpointMapping extends AbstractAnnotationMethodEndpointMapping<QName>;\n", "des": "Provides JAXB2-based EndpointMapping implementations."}
{"index": 3073, "repo": "spring-ws-core-4.0.5", "code": "package support\n\n// Helper class for handling @Namespace annotations.\npublic abstract class NamespaceUtils extends Object;\n// Helper class for determining the root qualified name of a Web Service payload.\npublic abstract class PayloadRootUtils extends Object;\n", "des": "Provides helper classes for EndpointAdapter, EndpointInteceptor, and EndpointMapping implementations."}
{"index": 3074, "repo": "spring-ws-core-4.0.5", "code": "package soap\n\n// Abstract implementation of the SoapMessage interface.\npublic abstract class AbstractSoapMessage extends AbstractMimeMessage implements SoapMessage;\n// Represents the Body element in a SOAP message.\npublic interface SoapBody extends SoapElement;\n// Exception thrown when a SOAP body could not be accessed.\npublic class SoapBodyException extends SoapMessageException;\n// The base interface for all elements that are contained in a SOAP message.\npublic interface SoapElement;\n", "des": "Provides the SOAP functionality of the Spring Web Services framework."}
{"index": 3075, "repo": "spring-ws-core-4.0.5", "code": "package addressing\n\n// Exception thrown in case on WS-Addressing errors.\npublic class AddressingException extends WebServiceException;\n", "des": "Provides WS-Addressing implementation classes."}
{"index": 3076, "repo": "spring-ws-core-4.0.5", "code": "package core\n\n// Represents an Endpoint Reference, as defined in the WS-Addressing specification.\npublic final class EndpointReference extends Object implements Serializable;\n// Represents a set of Message Addressing Properties, as defined in the WS-Addressing specification.\npublic final class MessageAddressingProperties extends Object implements Serializable;\n", "des": "Core package for WS-Addressing support."}
{"index": 3077, "repo": "spring-ws-core-4.0.5", "code": "package messageid\n\n// Strategy interface that encapsulates the creation and validation of WS-Addressing MessageIDs.\npublic interface MessageIdStrategy;\n// Implementation of the MessageIdStrategy interface that uses a UUID to generate a Message Id.\npublic class UuidMessageIdStrategy extends Object implements MessageIdStrategy;\n", "des": "Contains various strategies for generating WS-Addressing MessageIDs."}
{"index": 3078, "repo": "spring-ws-core-4.0.5", "code": "package server\n\n// Abstract base class for WS-Addressing Action-mapped EndpointMapping implementations.\npublic abstract class AbstractActionEndpointMapping extends AbstractAddressingEndpointMapping;\n// Abstract base class for WS-Addressing Action-mapped EndpointMapping implementations that map to MethodEndpoints.\npublic abstract class AbstractActionMethodEndpointMapping extends AbstractActionEndpointMapping;\n", "des": "Contains servers-side WS-Addressing support, in the form of EndpointMappings."}
{"index": 3079, "repo": "spring-ws-core-4.0.5", "code": "package version\n\n// Abstract base class for AddressingVersion implementations.\npublic abstract class AbstractAddressingVersion extends org.springframework.xml.transform.TransformerObjectSupport implements AddressingVersion;\n// Implements WS-Addressing 1.0 (May 2006).\npublic class Addressing10 extends AbstractAddressingVersion;\n// Implements the August 2004 edition of the WS-Addressing specification.\npublic class Addressing200408 extends AbstractAddressingVersion;\n", "des": "Contains abstractions over various versions of the WS-Addressing specification."}
{"index": 3080, "repo": "spring-ws-core-4.0.5", "code": "package client\n\n// Thrown by SoapFaultMessageResolver when the response message has a fault.\npublic class SoapFaultClientException extends WebServiceFaultException;\n", "des": "Contains classes for SOAP-specific client-side Spring-WS support."}
{"index": 3081, "repo": "spring-ws-core-4.0.5", "code": "package core\n\n// WebServiceMessageCallback implementation that sets the SOAP Action header on the message.\npublic class SoapActionCallback extends Object implements WebServiceMessageCallback;\n// Simple fault resolver that simply throws a SoapFaultClientException when a fault occurs.\npublic class SoapFaultMessageResolver extends Object implements FaultMessageResolver;\n", "des": "Contains core classes for SOAP-specific client-side Spring-WS support."}
{"index": 3082, "repo": "spring-ws-core-4.0.5", "code": "package saaj\n\n// \npublic class SaajAttachmentException extends AttachmentException;\n// \npublic class SaajSoapBodyException extends SoapBodyException;\n// \npublic class SaajSoapElementException extends SoapElementException;\n// \npublic class SaajSoapEnvelopeException extends SoapEnvelopeException;\n// \npublic class SaajSoapFaultException extends SoapFaultException;\n// \npublic class SaajSoapHeaderException extends SoapHeaderException;\n", "des": "SOAP with Attachments API for Java (SAAJ) support for Spring-WS soap message infrastructure."}
{"index": 3083, "repo": "spring-ws-core-4.0.5", "code": "package support\n\n// SAX ContentHandler that transforms callback calls to the creation of SAAJ Nodes and SOAPElements.\npublic class SaajContentHandler extends Object implements ContentHandler;\n// Collection of generic utility methods to work with SAAJ.\npublic abstract class SaajUtils extends Object;\n// SAX XMLReader that reads from a SAAJ Node.\npublic class SaajXmlReader extends org.springframework.xml.sax.AbstractXmlReader;\n", "des": "Support classes for working with the SOAP with Attachments API for Java (SAAJ)."}
{"index": 3084, "repo": "spring-ws-core-4.0.5", "code": "package server\n\n// SOAP-specific extension of the SmartEndpointInterceptor interface.\npublic interface SmartSoapEndpointInterceptor extends SmartEndpointInterceptor, SoapEndpointInterceptor;\n// SOAP-specific extension of the EndpointInterceptor interface.\npublic interface SoapEndpointInterceptor extends EndpointInterceptor;\n// SOAP-specific subclass of the EndpointInvocationChain.\npublic class SoapEndpointInvocationChain extends EndpointInvocationChain;\n", "des": "Contains classes for SOAP-specific server-side Spring-WS support."}
{"index": 3085, "repo": "spring-ws-core-4.0.5", "code": "package endpoint\n\n// \n@Deprecated public abstract class AbstractFaultCreatingValidatingMarshallingPayloadEndpoint extends AbstractValidatingMarshallingPayloadEndpoint implements org.springframework.context.MessageSourceAware;\n// Abstract base class for SOAP-based EndpointExceptionResolver implementations that depend on SoapFaultDefinition.\npublic abstract class AbstractSoapFaultDefinitionExceptionResolver extends AbstractEndpointExceptionResolver;\n", "des": "Provides EndpointAdapter, EndpointMapping, and EndpointExceptionResolver implementations for SOAP."}
{"index": 3086, "repo": "spring-ws-core-4.0.5", "code": "package annotation\n\n// Enumeration that represents the standard SOAP Fault codes for use with the JDK 1.5+ SoapFault annotation.\npublic enum FaultCode extends Enum<FaultCode>;\n// Marks an endpoint method as the handler for an incoming request.\n@Target(METHOD) @Retention(RUNTIME) @Documented @Repeatable(SoapActions.class) public @interface SoapAction;\n// Marks an endpoint method as containing multiple SoapActions.\n@Target(METHOD) @Retention(RUNTIME) @Documented public @interface SoapActions;\n", "des": "JDK 1.5+ annotations for Spring-WS SOAP endpoints."}
{"index": 3087, "repo": "spring-ws-core-4.0.5", "code": "package interceptor\n\n// Subclass of AbstractValidatingInterceptor that creates a SOAP Fault whenever the request message cannot be validated.\npublic abstract class AbstractFaultCreatingValidatingInterceptor extends AbstractValidatingInterceptor;\n// Implementation of the SmartSoapEndpointInterceptor interface that delegates to a delegate SoapEndpointInterceptor.\npublic class DelegatingSmartSoapEndpointInterceptor extends DelegatingSmartEndpointInterceptor implements SmartSoapEndpointInterceptor;\n", "des": "Provides miscellaneous endpoints EndpointInterceptor implementations for SOAP purposes."}
{"index": 3088, "repo": "spring-ws-core-4.0.5", "code": "package mapping\n\n// EndpointMapping implement that adds SOAP actors or roles to a delegate endpoint.\npublic class DelegatingSoapEndpointMapping extends Object implements org.springframework.beans.factory.InitializingBean, SoapEndpointMapping;\n", "des": "Provides miscellaneous endpoints EndpointMapping implementations for SOAP purposes."}
{"index": 3089, "repo": "spring-ws-core-4.0.5", "code": "package soap11\n\n// Subinterface of SoapBody that exposes SOAP 1.1 functionality.\npublic interface Soap11Body extends SoapBody;\n// Subinterface of SoapFault that exposes SOAP 1.1 functionality.\npublic interface Soap11Fault extends SoapFault;\n// Subinterface of SoapHeader that exposes SOAP 1.1 functionality.\npublic interface Soap11Header extends SoapHeader;\n", "des": "Contains interfaces specific to SOAP 1.1."}
{"index": 3090, "repo": "spring-ws-core-4.0.5", "code": "package soap12\n\n// Subinterface of SoapBody that exposes SOAP 1.2 functionality.\npublic interface Soap12Body extends SoapBody;\n// Subinterface of SoapFault that exposes SOAP 1.2 functionality.\npublic interface Soap12Fault extends SoapFault;\n// Subinterface of SoapHeader that exposes SOAP 1.2 functionality.\npublic interface Soap12Header extends SoapHeader;\n", "des": "Contains interfaces specific to SOAP 1.2."}
{"index": 3091, "repo": "spring-ws-core-4.0.5", "code": "package support\n\n// Contains various utility methods for handling SOAP messages.\npublic abstract class SoapUtils extends Object;\n", "des": "Classes supporting the org.springframework.ws.soap package."}
{"index": 3092, "repo": "spring-ws-core-4.0.5", "code": "package support\n\n// Helper class for for loading default implementations of an interface.\npublic class DefaultStrategiesHelper extends Object;\n// Helper class for endpoints and endpoint mappings that use marshalling.\npublic abstract class MarshallingUtils extends Object;\n// Miscellaneous utilities for web applications.\npublic abstract class WebUtils extends Object;\n", "des": "Provides general helper classes for Spring Web Services."}
{"index": 3093, "repo": "spring-ws-core-4.0.5", "code": "package transport\n\n// Abstract base class for WebServiceConnection implementations used for receiving requests.\npublic abstract class AbstractReceiverConnection extends AbstractWebServiceConnection implements HeadersAwareReceiverWebServiceConnection;\n// Abstract base class for WebServiceConnection implementations used for sending requests.\npublic abstract class AbstractSenderConnection extends AbstractWebServiceConnection implements HeadersAwareSenderWebServiceConnection;\n", "des": "Contains the TransportRequest and TransportResponse interfaces."}
{"index": 3094, "repo": "spring-ws-core-4.0.5", "code": "package context\n\n// Default implementation of the TransportContext interface.\npublic class DefaultTransportContext extends Object implements TransportContext;\n// Strategy interface for determining the current WebServiceConnection.\npublic interface TransportContext;\n// Simple holder class that associates a TransportContext instance with the current thread.\npublic abstract class TransportContextHolder extends Object;\n", "des": "Abstraction for determining the current TransportInputStream and TransportOutputStream."}
{"index": 3095, "repo": "spring-ws-core-4.0.5", "code": "package http\n\n// Abstract base class for WebServiceConnection implementations that send request over HTTP.\npublic abstract class AbstractHttpSenderConnection extends AbstractSenderConnection implements FaultAwareWebServiceConnection;\n// Abstract base class for WebServiceMessageSender implementations that use HTTP.\npublic abstract class AbstractHttpWebServiceMessageSender extends Object implements WebServiceMessageSender;\n", "des": "Package providing support for handling messages via HTTP."}
{"index": 3096, "repo": "spring-ws-core-4.0.5", "code": "package support\n\n// Adapts an Enumeration to follow the interface of Iterator.\npublic class EnumerationIterator<T> extends Object implements Iterator<T>;\n// Generic utility methods for working with Web service transports.\npublic abstract class TransportUtils extends Object;\n// Convenience base class for server-side transport objects.\npublic abstract class WebServiceMessageReceiverObjectSupport extends Object implements org.springframework.beans.factory.InitializingBean;\n", "des": "Classes supporting the org.springframework.ws.transport package."}
{"index": 3097, "repo": "spring-ws-core-4.0.5", "code": "package wsdl\n\n// Represents an abstraction for WSDL definitions.\npublic interface WsdlDefinition;\n// Base class for all WSDL definition exceptions.\npublic class WsdlDefinitionException extends WebServiceException;\n", "des": "Provides the WSDL functionality of the Spring Web Services framework."}
{"index": 3098, "repo": "spring-ws-core-4.0.5", "code": "package wsdl11\n\n// Convenient implementation of Wsdl11Definition that creates a SOAP 1.1 or 1.2 binding based on naming conventions in one or more inlined XSD schemas.\npublic class DefaultWsdl11Definition extends Object implements Wsdl11Definition, org.springframework.beans.factory.InitializingBean;\n", "des": "Contains interfaces and classes specific to WSDL 1.1."}
{"index": 3099, "repo": "spring-ws-core-4.0.5", "code": "package provider\n\n// Abstract base class for PortTypesProvider implementations.\npublic abstract class AbstractPortTypesProvider extends Object implements PortTypesProvider;\n// Strategy for adding Bindings to a Definition.\npublic interface BindingsProvider;\n// Default implementation of the BindingsProvider and ServicesProvider interfaces.\npublic class DefaultConcretePartProvider extends Object implements BindingsProvider, ServicesProvider;\n", "des": "Provides a contribution strategy for WSDL definitions."}
{"index": 3100, "repo": "jena-querybuilder-4.9.0", "code": "package querybuilder\n\n// Base class for all QueryBuilders.\npublic abstract class AbstractQueryBuilder<T extends AbstractQueryBuilder<T>> extends Object implements Cloneable, PrologClause<T>, ValuesClause<T>;\n// Builder for SPARQL Ask Queries.\npublic class AskBuilder extends AbstractQueryBuilder<AskBuilder> implements DatasetClause<AskBuilder>, WhereClause<AskBuilder>, SolutionModifierClause<AskBuilder>;\n", "des": "A utility package to simplify the building of ARQ queries in code."}
{"index": 3101, "repo": "jena-querybuilder-4.9.0", "code": "package clauses\n\n// Interface that defines the ConstructClause as per http://www.w3.org/TR/2013/REC-sparql11-query-20130321/#rConstructTemplate\npublic interface ConstructClause<T extends AbstractQueryBuilder<T>>;\n// Interface that defines the DatasetClause as per http://www.w3.org/TR/2013/REC-sparql11-query-20130321/#rDatasetClause\npublic interface DatasetClause<T extends AbstractQueryBuilder<T>>;\n", "des": "Interfaces that describe various SPARQL clauses as per http://www.w3.org/TR/2013/REC-sparql11-query-20130321."}
{"index": 3102, "repo": "jena-querybuilder-4.9.0", "code": "package handlers\n\n// Class to handle manipulation the aggregation variables in the query.\npublic class AggregationHandler extends Object implements Handler;\n// The handler for construct clauses.\npublic class ConstructHandler extends Object implements Handler;\n// Handler for a dataset.\npublic class DatasetHandler extends Object implements Handler;\n// The base interface for handlers.\npublic interface Handler;\n", "des": "Classes that implement SPARQL clauses but do not return instances of the builder."}
{"index": 3103, "repo": "jena-querybuilder-4.9.0", "code": "package rewriters\n\n// The base class for rewriters.\npublic class AbstractRewriter<T> extends Object;\n// An element visitor that does an in-place modification of the elements to fix union-of-one and similar issues.\npublic class BuildElementVisitor extends Object implements ElementVisitor;\n// A rewriter that implements an ElementVisitor\npublic class ElementRewriter extends AbstractRewriter<Element> implements ElementVisitor;\n", "des": "Classes to rewrite Query algebra, expressions and other objects to handle variable replacement for the prepared statement functionality."}
{"index": 3104, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Contract representing some process that needs to occur during after transaction completion.\nInterface AfterTransactionCompletionProcess;\n// Contract representing some process that needs to occur during before transaction completion.\nInterface BeforeTransactionCompletionProcess;\n// An operation which may be scheduled for later execution.\nInterface Executable;\n", "des": "Defines SPI hooks into the ActionQueue."}
{"index": 3105, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package annotations\n\n// Consolidation of hints available to Hibernate JPA queries.\nClass QueryHints;\n// Cache concurrency strategy.\nEnum CacheConcurrencyStrategy;\n// Enumeration for the different interaction modes between the session and the Level 2 Cache.\nEnum CacheModeType;\n// Cascade types (can override default JPA cascades).\nEnum CascadeType;\n// Defines how the association should be fetched, compared to FetchType which defines when it should be fetched\nEnum FetchMode;\n", "des": "Package containing all the Hibernate specific annotations."}
{"index": 3106, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package boot\n\n// Delayed information about an AttributeConverter.\nInterface AttributeConverterInfo;\n// Represents the ORM model as determined from all provided mapping sources.\nInterface Metadata;\n// Contract for specifying various overrides to be used in metamodel building.\nInterface MetadataBuilder;\n// The contract for building a SessionFactory given a number of options.\nInterface SessionFactoryBuilder;\n// Models the definition of caching settings for a particular region.\nClass CacheRegionDefinition;\n", "des": "This package contains the contracts that make up the Hibernate native bootstrapping API (building a SessionFactory)."}
{"index": 3107, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Describes the context for visiting the entries within an archive\nInterface ArchiveContext;\n// Contract for visiting an archive, which might be a jar, a zip, an exploded directory, etc.\nInterface ArchiveDescriptor;\n// Contract for building ArchiveDescriptor instances.\nInterface ArchiveDescriptorFactory;\n// Represent an entry in the archive.\nInterface ArchiveEntry;\n// Handler for archive entries, based on the classified type of the entry\nInterface ArchiveEntryHandler;\n", "des": "Defines the SPI for support of \"scanning\" of \"archives\"."}
{"index": 3108, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package naming\n\n// \nInterface EntityNaming;\n// Context for determining the implicit name for an ANY mapping's discriminator column.\nInterface ImplicitAnyDiscriminatorColumnNameSource;\n// Context for determining the implicit name for an ANY mapping's key column.\nInterface ImplicitAnyKeyColumnNameSource;\n// Context for determining the implicit name related to basic values.\nInterface ImplicitBasicColumnNameSource;\n", "des": "Represents a proposed new approach to allowing hooks into the process of determining the name of database objects (tables, columns, constraints, etc)."}
{"index": 3109, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package registry\n\n// Provides the most basic services needed.\nInterface BootstrapServiceRegistry;\n// Contract for an initiator of services that target the standard ServiceRegistry.\nInterface StandardServiceInitiator<R extends Service>;\n// Specialization of the ServiceRegistry contract mainly for type safety.\nInterface StandardServiceRegistry;\n// Builder for BootstrapServiceRegistry instances.\nClass BootstrapServiceRegistryBuilder;\n", "des": "Defines service registry contracts application are likely to want to utilize for configuring Hibernate behavior."}
{"index": 3110, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// A service for interacting with class loaders.\nInterface ClassLoaderService;\n// \nInterface ClassLoaderService.Work<T>;\n// Indicates a problem performing class loading.\nClass ClassLoadingException;\n", "des": "The class loading service SPI."}
{"index": 3111, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package selector\n\n// Describes the registration of a named strategy implementation.\nInterface StrategyRegistration<T>;\n// Responsible for providing the registrations of strategy selector(s).\nInterface StrategyRegistrationProvider;\n// A simple implementation of StrategyRegistration.\nClass SimpleStrategyRegistrationImpl<T>;\n", "des": "Defines a feature-set around named registration of implementations of various contracts and the ability to select those implementations."}
{"index": 3112, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// \nInterface StrategyCreator<T>;\n// Service which acts as a registry for named strategy implementations.\nInterface StrategySelector;\n// Indicates a problem performing the selection/resolution.\nClass StrategySelectionException;\n", "des": "Defines actual contract used for strategy selection : StrategySelector."}
{"index": 3113, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package xsd\n\n// Support for XSD handling related to Hibernate's `cfg.xml` and JPA's `persistence.xml`.\nClass ConfigXsdSupport;\n// When Hibernate loads an XSD we fully expect that to be resolved from our jar file via ClassLoader resource look-up.\nClass LocalXsdResolver;\n// Support for XSD handling related to Hibernate's `hbm.xml` and JPA's `orm.xml`.\nClass MappingXsdSupport;\n// Representation of a locally resolved XSD\nClass XsdDescriptor;\n", "des": "Support for XSD handling, specifically for ORM mappings (Hibernate's `hbm.xml` and JPA's `orm.xml`) and config files (Hibernate's `cfg.xml` and JPA's `persistence.xml`)"}
{"index": 3114, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Interface to be implemented by collection trackers that hold the expected size od collections, a simplified Map<String, int>.\nInterface CollectionTracker;\n// The context for performing an enhancement.\nInterface EnhancementContext;\n// Class responsible for performing enhancement.\nInterface Enhancer;\n// Contract for controlling how lazy properties get initialized.\nInterface LazyPropertyInitializer;\n// \nInterface LazyPropertyInitializer.InterceptorImplementor;\n// \nInterface UnloadedClass;\n", "des": "package defining bytecode code enhancement (instrumentation) support."}
{"index": 3115, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package interceptor\n\n// Logging related to bytecode enhancement interceptors\nInterface BytecodeInterceptorLogging;\n// \nInterface BytecodeLazyAttributeInterceptor;\n// \nInterface EnhancementHelper.InheritanceChecker;\n// Information about a particular bytecode lazy attribute grouping.\nInterface LazyFetchGroupMetadata;\n// \nInterface SessionAssociableInterceptor;\n// \nClass AbstractInterceptor;\n// \nClass AbstractLazyLoadInterceptor;\n", "des": "interceptor implementations"}
{"index": 3116, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// A proxy factory for \"basic proxy\" generation.\nInterface BasicProxyFactory;\n// Encapsulates bytecode enhancement information about a particular entity.\nInterface BytecodeEnhancementMetadata;\n// Contract for providers of bytecode services to Hibernate.\nInterface BytecodeProvider;\n// A persistence provider provides an instance of this interface to the PersistenceUnitInfo.addTransformer method.\nInterface ClassTransformer;\n", "des": "Package defining bytecode code enhancement (instrumentation) support."}
{"index": 3117, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// SPI contract for Hibernate's second-level cache engine\nInterface CacheImplementor;\n// \nInterface CacheKeysFactory;\n// Defines a context object that a RegionFactory is asked to create (RegionFactory.createTransactionContext(org.hibernate.engine.spi.SharedSessionContractImplementor)}) when a Hibernate Session is created.\nInterface CacheTransactionSynchronization;\n// Specialized Region whose data is accessed directly (not requiring key/item wrapping, e.g.\nInterface DirectAccessRegion;\n", "des": "Defines the integration aspect of Hibernate's second-level caching allowing \"caching back ends\" to be plugged in as a caching provider."}
{"index": 3118, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package support\n\n// Optional interface caching implementors can implement in their CachedDomainDataAccess impls to automatically have them destroyed when this region is destroyed\nInterface AbstractDomainDataRegion.Destructible;\n// Interface type implemented by all wrapper objects in the cache.\nInterface AbstractReadWriteAccess.Lockable;\n// Specialization of StorageAccess for domain data regions\nInterface DomainDataStorageAccess;\n", "des": "Package intended for simplifying the worked needed to implement a caching provider."}
{"index": 3119, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package reflection\n\n// \nInterface AttributeConverterDefinitionCollector;\n// A ClassLoaderAccess implementation based on lazy access to MetadataBuildingOptions\nClass ClassLoaderAccessLazyImpl;\n// \nClass PersistentAttributeFilter;\n", "des": "Defines the capability to merge mapping information from both annotations and orm.xml sources into a unified set of metadata in the Hibernate commons-annotations model."}
{"index": 3120, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package spi\n\n// Hibernate \"wraps\" a java collection in an instance of PersistentCollection.\nInterface LazyInitializable;\n// Persistent collections are treated as value objects by Hibernate.\nInterface PersistentCollection;\n", "des": "SPI definitions for persistent collections"}
{"index": 3121, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "package context\n\n// Indicates that tenant identifiers did not match in cases where CurrentTenantIdentifierResolver.validateExistingCurrentSessions() returns true and there is a mismatch found.\nClass TenantIdentifierMismatchException;\n", "des": "Defines support for \"current session\" feature."}
