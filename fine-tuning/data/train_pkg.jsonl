{"index": 0, "repo": "connect-api-3.5.0", "code": "package components\n\n// Connect requires some components implement this interface to define a version string.\nInterface Versioned;\n", "des": "Provides common interfaces used to describe pluggable components."}
{"index": 1, "repo": "connect-api-3.5.0", "code": "package connector\n\n// ConnectorContext allows Connectors to proactively interact with the Kafka Connect runtime.\nInterface ConnectorContext;\n// Tasks contain the code that actually copies data to/from another system.\nInterface Task;\n// Connectors manage integration of Kafka Connect with another system, either as an input that ingests data into Kafka or an output that passes data to an external system.\nClass Connector;\n", "des": "Provides interfaces for Connector and Task implementations."}
{"index": 2, "repo": "connect-api-3.5.0", "code": "package policy\n\n// An interface for enforcing a policy on overriding of Kafka client configs via the connector configs.\nInterface ConnectorClientConfigOverridePolicy;\n// \nClass ConnectorClientConfigRequest;\n// \nEnum ConnectorClientConfigRequest.ClientType;\n", "des": "Provides pluggable interfaces for policies controlling how users can configure connectors."}
{"index": 3, "repo": "connect-api-3.5.0", "code": "package data\n\n// Definition of an abstract data type.\nInterface Schema;\n// \nClass ConnectSchema;\n// A date representing a calendar day with no time of day or timezone.\nClass Date;\n// An arbitrary-precision signed decimal number.\nClass Decimal;\n// A field in a Struct, consisting of a field name, index, and Schema for the field value.\nClass Field;\n// A composite containing a Schema and associated value\nClass SchemaAndValue;\n", "des": "Provides classes for representing data and schemas handled by Connect."}
{"index": 4, "repo": "connect-api-3.5.0", "code": "package errors\n\n// Indicates the operation tried to create an entity that already exists.\nClass AlreadyExistsException;\n// ConnectException is the top-level exception type generated by Kafka Connect and connector implementations.\nClass ConnectException;\n// Base class for all Kafka Connect data API exceptions.\nClass DataException;\n// Indicates that a method has been invoked illegally or at an invalid time by a connector or task.\nClass IllegalWorkerStateException;\n", "des": "Provides common exception classes for Connect, used by the framework and plugins to communicate failures."}
{"index": 5, "repo": "connect-api-3.5.0", "code": "package header\n\n// A Header is a key-value pair, and multiple headers can be included with the key, value, and timestamp in each Kafka message.\nInterface Header;\n// A mutable ordered collection of Header objects.\nInterface Headers;\n// A function to transform the supplied Header.\nInterface Headers.HeaderTransform;\n// A basic Headers implementation.\nClass ConnectHeaders;\n", "des": "Provides an API for application-defined metadata attached to Connect records."}
{"index": 6, "repo": "connect-api-3.5.0", "code": "package health\n\n// Provides immutable Connect cluster information, such as the ID of the backing Kafka cluster.\nInterface ConnectClusterDetails;\n// Provides the ability to lookup connector metadata, including status and configurations, as well as immutable cluster information such as Kafka cluster ID.\nInterface ConnectClusterState;\n// Provides the current status for a connector or a task, along with an identifier for its Connect worker\nClass AbstractState;\n", "des": "Provides an API for describing the state of a running Connect cluster to ConnectRestExtension instances."}
{"index": 7, "repo": "connect-api-3.5.0", "code": "package rest\n\n// A plugin interface to allow registration of new JAX-RS resources like Filters, REST endpoints, providers, etc.\nInterface ConnectRestExtension;\n// The interface provides the ability for ConnectRestExtension implementations to access the JAX-RS Configurable and cluster state ConnectClusterState.\nInterface ConnectRestExtensionContext;\n", "des": "Provides a pluggable interface for altering the behavior of the Connect REST API."}
{"index": 8, "repo": "connect-api-3.5.0", "code": "package sink\n\n// Component that a SinkTask can use to report problematic records (and their corresponding problems) as it writes them through SinkTask.put(java.util.Collection).\nInterface ErrantRecordReporter;\n// A context to allow a SinkConnector to interact with the Kafka Connect runtime.\nInterface SinkConnectorContext;\n// Context passed to SinkTasks, allowing them to access utilities in the Kafka Connect runtime.\nInterface SinkTaskContext;\n", "des": "Provides an API for implementing sink connectors which write Kafka records to external applications."}
{"index": 9, "repo": "connect-api-3.5.0", "code": "package source\n\n// A context to allow a SourceConnector to interact with the Kafka Connect runtime.\nInterface SourceConnectorContext;\n// SourceTaskContext is provided to SourceTasks to allow them to interact with the underlying runtime.\nInterface SourceTaskContext;\n// Provided to source tasks to allow them to define their own producer transaction boundaries when exactly-once support is enabled.\nInterface TransactionContext;\n", "des": "Provides an API for implementing source connectors which read data from external applications into Kafka."}
{"index": 10, "repo": "connect-api-3.5.0", "code": "package storage\n\n// The Converter interface provides support for translating between Kafka Connect's runtime data format and byte[].\nInterface Converter;\n// The HeaderConverter interface provides support for translating between Kafka Connect's runtime data format and byte[].\nInterface HeaderConverter;\n// OffsetStorageReader provides access to the offset storage used by sources.\nInterface OffsetStorageReader;\n", "des": "Provides pluggable interfaces and some implementations for (de)serializing data to and from Kafka"}
{"index": 11, "repo": "connect-api-3.5.0", "code": "package transforms\n\n// Single message transformation for Kafka Connect record types.\nInterface Transformation<R extends ConnectRecord<R>>;\n", "des": "Provides a pluggable interface for altering data which is being moved by Connect."}
{"index": 12, "repo": "connect-api-3.5.0", "code": "package predicates\n\n// A predicate on records.\nInterface Predicate<R extends ConnectRecord<R>>;\n", "des": "Provides a pluggable interface for describing when a Transformation should be applied to a record."}
{"index": 13, "repo": "connect-api-3.5.0", "code": "package util\n\n// Utilities that connector implementations might find useful.\nClass ConnectorUtils;\n", "des": "Provides common utilities that can be used in component implementations."}
{"index": 14, "repo": "commons-collections4-4.4", "code": "package collections4\n\n// Defines a collection that counts the number of times an object appears in the collection.\nInterface Bag<E>;\n// Defines a map that allows bidirectional lookup between key and values.\nInterface BidiMap<K,V>;\n// Defines a collection that is bounded in size.\nInterface BoundedCollection<E>;\n// Defines a map that is bounded in size.\nInterface BoundedMap<K,V>;\n// Defines a functor interface implemented by classes that do something.\nInterface Closure<T>;\n", "des": "This package contains the interfaces and utilities shared across all the subpackages of this component."}
{"index": 15, "repo": "commons-collections4-4.4", "code": "package bag\n\n// Decorates another Bag to provide additional behaviour.\nClass AbstractBagDecorator<E>;\n// Abstract implementation of the Bag interface to simplify the creation of subclass implementations.\nClass AbstractMapBag<E>;\n// Mutable integer class for storing the data.\nClass AbstractMapBag.MutableInteger;\n// Decorates another SortedBag to provide additional behaviour.\nClass AbstractSortedBagDecorator<E>;\n// Decorates another Bag to comply with the Collection contract.\nClass CollectionBag<E>;\n", "des": "This package contains implementations of the Bag and SortedBag interfaces."}
{"index": 16, "repo": "commons-collections4-4.4", "code": "package bidimap\n\n// Provides a base decorator that enables additional functionality to be added to a BidiMap via decoration.\nClass AbstractBidiMapDecorator<K,V>;\n// Abstract BidiMap implemented using two maps.\nClass AbstractDualBidiMap<K,V>;\n// Inner class MapIterator.\nClass AbstractDualBidiMap.BidiMapIterator<K,V>;\n// Inner class EntrySet.\nClass AbstractDualBidiMap.EntrySet<K,V>;\n// Inner class EntrySetIterator.\nClass AbstractDualBidiMap.EntrySetIterator<K,V>;\n", "des": "This package contains implementations of the BidiMap, OrderedBidiMap and SortedBidiMap interfaces."}
{"index": 17, "repo": "commons-collections4-4.4", "code": "package collection\n\n// Pluggable strategy to handle changes to the composite.\nInterface CompositeCollection.CollectionMutator<E>;\n// Decorates another Collection to provide additional behaviour.\nClass AbstractCollectionDecorator<E>;\n// Decorates a collection of other collections to provide a single unified view.\nClass CompositeCollection<E>;\n// An IndexedCollection is a Map-like view onto a Collection.\nClass IndexedCollection<K,C>;\n", "des": "This package contains implementations of the Collection interface."}
{"index": 18, "repo": "commons-collections4-4.4", "code": "package comparators\n\n// A Comparator for Boolean objects that can sort either true or false first.\nClass BooleanComparator;\n// A Comparator that compares Comparable objects.\nClass ComparableComparator<E extends Comparable<? super E>>;\n// A ComparatorChain is a Comparator that wraps one or more Comparators in sequence.\nClass ComparatorChain<E>;\n// A Comparator which imposes a specific order on a specific set of Objects.\nClass FixedOrderComparator<T>;\n", "des": "This package contains implementations of the Comparator interface."}
{"index": 19, "repo": "commons-collections4-4.4", "code": "package functors\n\n// Defines a predicate that decorates one or more other predicates.\nInterface PredicateDecorator<T>;\n// Abstract base class for quantification predicates, e.g.\nClass AbstractQuantifierPredicate<T>;\n// Predicate implementation that returns true if all the predicates return true.\nClass AllPredicate<T>;\n// Predicate implementation that returns true if both the predicates return true.\nClass AndPredicate<T>;\n", "des": "This package contains implementations of the Closure, Predicate, Transformer and Factory interfaces."}
{"index": 20, "repo": "commons-collections4-4.4", "code": "package iterators\n\n// Provides an implementation of an empty map iterator.\nClass AbstractEmptyMapIterator<K,V>;\n// Provides basic behaviour for decorating an iterator with extra functionality.\nClass AbstractIteratorDecorator<E>;\n// Provides basic behaviour for decorating a list iterator with extra functionality.\nClass AbstractListIteratorDecorator<E>;\n// Provides basic behaviour for decorating a map iterator with extra functionality.\nClass AbstractMapIteratorDecorator<K,V>;\n", "des": "This package contains implementations of the Iterator interface."}
{"index": 21, "repo": "commons-collections4-4.4", "code": "package keyvalue\n\n// Abstract pair class to assist with creating KeyValue and Map.Entry implementations.\nClass AbstractKeyValue<K,V>;\n// Abstract Pair class to assist with creating correct Map.Entry implementations.\nClass AbstractMapEntry<K,V>;\n// Provides a base decorator that allows additional functionality to be added to a Map.Entry.\nClass AbstractMapEntryDecorator<K,V>;\n// A mutable KeyValue pair that does not implement Map.Entry.\nClass DefaultKeyValue<K,V>;\n", "des": "This package contains implementations of collection and map related key/value classes."}
{"index": 22, "repo": "commons-collections4-4.4", "code": "package list\n\n// An abstract implementation of a linked list which provides numerous points for subclasses to override.\nClass AbstractLinkedList<E>;\n// A list iterator over the linked list.\nClass AbstractLinkedList.LinkedListIterator<E>;\n// The sublist implementation for AbstractLinkedList.\nClass AbstractLinkedList.LinkedSubList<E>;\n// A list iterator over the linked sub list.\nClass AbstractLinkedList.LinkedSubListIterator<E>;\n// A node within the linked list.\nClass AbstractLinkedList.Node<E>;\n", "des": "This package contains implementations of the List interface."}
{"index": 23, "repo": "commons-collections4-4.4", "code": "package map\n\n// This interface allows definition for all of the indeterminate mutators in a CompositeMap, as well as providing a hook for callbacks on key collisions.\nInterface CompositeMap.MapMutator<K,V>;\n// A policy to determine the expiration time for key-value entries.\nInterface PassiveExpiringMap.ExpirationPolicy<K,V>;\n// An abstract implementation of a hash-based map which provides numerous points for subclasses to override.\nClass AbstractHashedMap<K,V>;\n", "des": "This package contains implementations of the Map, IterableMap, OrderedMap and SortedMap interfaces."}
{"index": 24, "repo": "commons-collections4-4.4", "code": "package multimap\n\n// Abstract implementation of the ListValuedMap interface to simplify the creation of subclass implementations.\nClass AbstractListValuedMap<K,V>;\n// Abstract implementation of the MultiValuedMap interface to simplify the creation of subclass implementations.\nClass AbstractMultiValuedMap<K,V>;\n// Decorates another MultiValuedMap to provide additional behaviour.\nClass AbstractMultiValuedMapDecorator<K,V>;\n", "des": "This package contains implementations of the MultiValuedMap interfaces."}
{"index": 25, "repo": "commons-collections4-4.4", "code": "package multiset\n\n// Abstract implementation of the MultiSet interface to simplify the creation of subclass implementations.\nClass AbstractMapMultiSet<E>;\n// Inner class EntrySetIterator.\nClass AbstractMapMultiSet.EntrySetIterator<E>;\n// Inner class MultiSetEntry.\nClass AbstractMapMultiSet.MultiSetEntry<E>;\n// Mutable integer class for storing the data.\nClass AbstractMapMultiSet.MutableInteger;\n// Inner class UniqueSetIterator.\nClass AbstractMapMultiSet.UniqueSetIterator<E>;\n", "des": "This package contains implementations of the MultiSet interface."}
{"index": 26, "repo": "commons-collections4-4.4", "code": "package properties\n\n// Subclasses create and load Properties and subclasses of Properties like SortedProperties.\nClass AbstractPropertiesFactory<T extends Properties>;\n// Creates and loads Properties.\nClass PropertiesFactory;\n// A drop-in replacement for Properties for sorting keys.\nClass SortedProperties;\n// Creates and loads SortedProperties.\nClass SortedPropertiesFactory;\n", "des": "This package contains classes to extend or customize the behavior of Properties."}
{"index": 27, "repo": "commons-collections4-4.4", "code": "package queue\n\n// Decorates another Queue to provide additional behaviour.\nClass AbstractQueueDecorator<E>;\n// CircularFifoQueue is a first-in first-out queue with a fixed size that replaces its oldest element if full.\nClass CircularFifoQueue<E>;\n// Decorates another Queue to validate that additions match a specified predicate.\nClass PredicatedQueue<E>;\n// Decorates another Queue to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedQueue<E>;\n", "des": "This package contains implementations for the Queue interface."}
{"index": 28, "repo": "commons-collections4-4.4", "code": "package sequence\n\n// This interface should be implemented by user object to walk through EditScript objects.\nInterface CommandVisitor<T>;\n// This interface is devoted to handle synchronized replacement sequences.\nInterface ReplacementsHandler<T>;\n// Command representing the deletion of one object of the first sequence.\nClass DeleteCommand<T>;\n// Abstract base class for all commands used to transform an objects sequence into another one.\nClass EditCommand<T>;\n", "des": "This package provides classes to compare two sequences of objects."}
{"index": 29, "repo": "commons-collections4-4.4", "code": "package set\n\n// Define callbacks for mutation operations.\nInterface CompositeSet.SetMutator<E>;\n// Decorates another NavigableSet to provide additional behaviour.\nClass AbstractNavigableSetDecorator<E>;\n// Serializable subclass of AbstractSetDecorator.\nClass AbstractSerializableSetDecorator<E>;\n// Decorates another Set to provide additional behaviour.\nClass AbstractSetDecorator<E>;\n// Decorates another SortedSet to provide additional behaviour.\nClass AbstractSortedSetDecorator<E>;\n", "des": "This package contains implementations of the Set, SortedSet and NavigableSet interfaces."}
{"index": 30, "repo": "commons-collections4-4.4", "code": "package splitmap\n\n// IterableGet that uses a Map<K, V> for the Get<K, V> implementation.\nClass AbstractIterableGetMapDecorator<K,V>;\n// Decorates another Map to transform objects that are added.\nClass TransformedSplitMap<J,K,U,V>;\n", "des": "The \"split map\" concept is that of an object that implements the Put and Get interfaces, with differing generic types."}
{"index": 31, "repo": "commons-collections4-4.4", "code": "package trie\n\n// This class provides some basic Trie functionality and utility methods for actual bitwise Trie implementations.\nClass AbstractBitwiseTrie<K,V>;\n// Defines the interface to analyze Trie keys on a bit level.\nClass KeyAnalyzer<K>;\n// Implementation of a PATRICIA Trie (Practical Algorithm to Retrieve Information Coded in Alphanumeric).\nClass PatriciaTrie<E>;\n// An unmodifiable Trie.\nClass UnmodifiableTrie<K,V>;\n", "des": "This package contains implementations of the Trie interface."}
{"index": 32, "repo": "commons-collections4-4.4", "code": "package analyzer\n\n// An KeyAnalyzer for Strings.\nClass StringKeyAnalyzer;\n", "des": "This package contains various KeyAnalyzer implementations."}
{"index": 33, "repo": "phoenix-core-5.1.3", "code": "package i18n\n\n// This utility class was partially copied from Salesforce's internationalization utility library (com.salesforce.i18n:i18n-util:1.0.4), which was released under the 3-clause BSD License.\nClass OracleUpper;\n// This utility class was partially copied from Salesforce's internationalization utility library (com.salesforce.i18n:i18n-util:1.0.4), which was released under the 3-clause BSD License.\nEnum LinguisticSort;\n", "des": "This package contains utility classes partially copied from Salesforce's internationalization utility library (com.salesforce.i18n:i18n-util:1.0.4), which was released under the 3-clause BSD License."}
{"index": 34, "repo": "ignite-core-2.15.0", "code": "package ignite\n\n// Check the ReadOnlyMetricRegistry with \"name=io.dataregion.\nInterface DataRegionMetrics;\n// This interface provides calculated metrics for data region.\nInterface DataRegionMetricsProvider;\n// Main entry-point for all Ignite APIs.\nInterface Ignite;\n// This interface provides a rich API for working with distributedly cached atomic long value.\nInterface IgniteAtomicLong;\n// This interface provides a rich API for working with distributed atomic reference.\nInterface IgniteAtomicReference<T>;\n", "des": "Contains entry-point Ignite & HPC APIs."}
{"index": 35, "repo": "ignite-core-2.15.0", "code": "package cluster\n\n// Interface representing a single node from baseline topology.\nInterface BaselineNode;\n// Defines a cluster group which contains all or a subset of cluster nodes.\nInterface ClusterGroup;\n// This class represents runtime information on a cluster.\nInterface ClusterMetrics;\n// Interface representing a single cluster node.\nInterface ClusterNode;\n// Cluster start node result information.\nInterface ClusterStartNodeResult;\n// Cluster states.\nEnum ClusterState;\n", "des": "Contains cluster-related classes."}
{"index": 36, "repo": "ignite-core-2.15.0", "code": "package configuration\n\n// Provides resolution between external and internal addresses.\nInterface AddressResolver;\n// Communication Failure Context.\nInterface CommunicationFailureContext;\n// Communication Failure Resolver.\nInterface CommunicationFailureResolver;\n// Interface for user-defined object interceptors.\nInterface ConnectorMessageInterceptor;\n// Platform configuration marker interface.\nInterface PlatformConfiguration;\n", "des": "Contains configuration-related classes."}
{"index": 37, "repo": "ignite-core-2.15.0", "code": "package lang\n\n// since 2.0.\nInterface IgniteAsyncSupport;\n// Defines generic closure with two parameters.\nInterface IgniteBiClosure<E1,E2,R>;\n// Closure with two in-parameters and void return type.\nInterface IgniteBiInClosure<E1,E2>;\n// Defines a predicate which accepts two parameters and returns true or false.\nInterface IgniteBiPredicate<E1,E2>;\n// Grid-aware adapter for Callable implementations.\nInterface IgniteCallable<V>;\n// Defines generic closure with one parameter.\nInterface IgniteClosure<E,R>;\n", "des": "Contains general language constructs and functional APIs for distributed computations."}
{"index": 38, "repo": "ignite-core-2.15.0", "code": "package lifecycle\n\n// All components provided in Ignite configuration can implement this interface.\nInterface LifecycleAware;\n// A bean that reacts to node lifecycle events defined in LifecycleEventType.\nInterface LifecycleBean;\n// Node lifecycle event types.\nEnum LifecycleEventType;\n", "des": "Contains lifecycle-related classes."}
{"index": 39, "repo": "ignite-core-2.15.0", "code": "package resources\n\n// Dummy class to compensate for impossibility of having default null value for annotation method.\nClass SpringResource.DEFAULT;\n// Annotates a field or a setter method for injection of grid cache name.\nAnnotation Type CacheNameResource;\n// Annotates a field or a setter method for injection of current CacheStoreSession instance.\nAnnotation Type CacheStoreSessionResource;\n", "des": "Contains resource injection annotations."}
{"index": 40, "repo": "ignite-core-2.15.0", "code": "package scheduler\n\n// Future for cron-based scheduled execution.\nInterface SchedulerFuture<R>;\n", "des": "Contains Job Scheduling functionality."}
{"index": 41, "repo": "ignite-core-2.15.0", "code": "package spi\n\n// This interface defines life-cycle of SPI implementation.\nInterface IgniteSpi;\n// Closeable iterator.\nInterface IgniteSpiCloseableIterator<T>;\n// SPI context provides common functionality for all SPI implementations.\nInterface IgniteSpiContext;\n// This interface defines basic MBean for all SPI implementations.\nInterface IgniteSpiManagementMBean;\n", "des": "Contains common classes and interfaces for SPI implementations."}
{"index": 42, "repo": "ignite-core-2.15.0", "code": "package thread\n\n// An ExecutorService that executes submitted tasks using pooled grid threads.\nClass IgniteStripedThreadPoolExecutor;\n// This class adds some necessary plumbing on top of the Thread class.\nClass IgniteThread;\n// This class provides implementation of ThreadFactory factory for creating grid threads.\nClass IgniteThreadFactory;\n// An ExecutorService that executes submitted tasks using pooled grid threads.\nClass IgniteThreadPoolExecutor;\n", "des": "Contains threads-related utility classes."}
{"index": 43, "repo": "ignite-core-2.15.0", "code": "package messaging\n\n// Convenience actor-base adapter for IgniteMessaging.localListen(Object, IgniteBiPredicate) method.\nClass MessagingListenActor<T>;\n", "des": "Contains Topic-based Messaging functionality."}
{"index": 44, "repo": "ignite-core-2.15.0", "code": "package events\n\n// Inconsistent entries mapping.\nInterface CacheConsistencyViolationEvent.EntriesInfo;\n// Inconsistent entry info.\nInterface CacheConsistencyViolationEvent.EntryInfo;\n// Grid events are used for notification about what happens within the grid.\nInterface Event;\n// Contains event type constants.\nInterface EventType;\n// Baseline changed event.\nClass BaselineChangedEvent;\n// Baseline configuration changed event.\nClass BaselineConfigurationChangedEvent;\n", "des": "Contains Event Subscription functionality together with various events emitted by Ignite."}
{"index": 45, "repo": "ignite-core-2.15.0", "code": "package compute\n\n// Defines executable unit for ComputeTask.\nInterface ComputeJob;\n// Context attached to every job executed on the grid.\nInterface ComputeJobContext;\n// Defines continuation support for grid job context.\nInterface ComputeJobContinuation;\n// Annotation for handling master node leave during job execution.\nInterface ComputeJobMasterLeaveAware;\n// Result of remote job which gets passed into ComputeTask.result(ComputeJobResult, List) method.\nInterface ComputeJobResult;\n", "des": "Contains Compute Grid functionality."}
{"index": 46, "repo": "ignite-core-2.15.0", "code": "package cache\n\n// Cache entry that extends Cache.Entry by providing additional entry related information.\nInterface CacheEntry<K,V>;\n// This filter adds Serializable interface to CacheEntryEventFilter object.\nInterface CacheEntryEventSerializableFilter<K,V>;\n// This processor adds Serializable interface to EntryProcessor object.\nInterface CacheEntryProcessor<K,V,T>;\n// Entry event order.\nInterface CacheEntryVersion;\n// Cache interceptor.\nInterface CacheInterceptor<K,V>;\n", "des": "Contains main Data Grid APIs."}
{"index": 47, "repo": "ignite-core-2.15.0", "code": "package affinity\n\n// Provides affinity information to detect which node is primary and which nodes are backups for a partitioned or replicated cache.\nInterface Affinity<K>;\n// Cache key affinity which maps keys to nodes.\nInterface AffinityFunction;\n// Affinity function context.\nInterface AffinityFunctionContext;\n// Use AffinityKeyMapped or CacheKeyConfiguration.setAffinityKeyFieldName(String) instead.\nInterface AffinityKeyMapper;\n", "des": "Contains cache node affinity implementations."}
{"index": 48, "repo": "ignite-core-2.15.0", "code": "package rendezvous\n\n// Attribute-based affinity backup filter that forces each partition's primary and backup nodes to different hardware which is not expected to fail simultaneously, e.g., in AWS, to different \"availability zones\".\nClass ClusterNodeAttributeAffinityBackupFilter;\n", "des": "Contains HRW-based cache affinity for partitioned cache."}
{"index": 49, "repo": "ignite-core-2.15.0", "code": "package eviction\n\n// Evictable cache entry passed into EvictionPolicy.\nInterface EvictableEntry<K,V>;\n// Eviction filter to specify which entries should not be evicted.\nInterface EvictionFilter<K,V>;\n// Pluggable cache eviction policy.\nInterface EvictionPolicy<K,V>;\n// Common functionality implementation for eviction policies with max size/max memory and batch eviction support.\nClass AbstractEvictionPolicy<K,V>;\n", "des": "Contains cache eviction policy implementations."}
{"index": 50, "repo": "ignite-core-2.15.0", "code": "package fifo\n\n// MBean for FIFO eviction policy.\nInterface FifoEvictionPolicyMBean;\n// Eviction policy based on First In First Out (FIFO) algorithm and supports batch eviction.\nClass FifoEvictionPolicy<K,V>;\n// Factory class for FifoEvictionPolicy.\nClass FifoEvictionPolicyFactory<K,V>;\n", "des": "Contains cache FIFO eviction policy implementations."}
{"index": 51, "repo": "ignite-core-2.15.0", "code": "package lru\n\n// MBean for LRU eviction policy.\nInterface LruEvictionPolicyMBean;\n// Eviction policy based on Least Recently Used (LRU) algorithm and supports batch eviction.\nClass LruEvictionPolicy<K,V>;\n// Factory class for LruEvictionPolicy.\nClass LruEvictionPolicyFactory<K,V>;\n", "des": "Contains cache LRU eviction policy implementations."}
{"index": 52, "repo": "ignite-core-2.15.0", "code": "package sorted\n\n// MBean for sorted eviction policy.\nInterface SortedEvictionPolicyMBean;\n// Cache eviction policy which will select the minimum cache entry for eviction.\nClass SortedEvictionPolicy<K,V>;\n// Factory class for SortedEvictionPolicy.\nClass SortedEvictionPolicyFactory<K,V>;\n", "des": "Contains cache sorted eviction policy implementation."}
{"index": 53, "repo": "ignite-core-2.15.0", "code": "package query\n\n// Interface for local listener of ContinuousQueryWithTransformer to implement.\nInterface ContinuousQueryWithTransformer.EventListener<T>;\n// SQL query result cursor.\nInterface FieldsQueryCursor<T>;\n// Basic interface for IndexQuery criterion.\nInterface IndexQueryCriterion;\n// Query result cursor.\nInterface QueryCursor<T>;\n// Query metrics aggregated by query type and its textual representation.\nInterface QueryDetailMetrics;\n", "des": "Contains APIs for creating and executing cache queries."}
{"index": 54, "repo": "ignite-core-2.15.0", "code": "package annotations\n\n// Describes group index.\nAnnotation Type QueryGroupIndex;\n// List of group indexes for type.\nAnnotation Type QueryGroupIndex.List;\n// Annotates fields for SQL queries.\nAnnotation Type QuerySqlField;\n// Describes group of index and position of field in this group.\nAnnotation Type QuerySqlField.Group;\n// Annotates public static methods in classes to be used in SQL queries as custom functions.\nAnnotation Type QuerySqlFunction;\n", "des": "Contains query-related annotations."}
{"index": 55, "repo": "ignite-core-2.15.0", "code": "package store\n\n// API for cache persistent storage for read-through and write-through behavior.\nInterface CacheStore<K,V>;\n// Session for the cache store operations.\nInterface CacheStoreSession;\n// Cache store session listener that allows to implement callbacks for session lifecycle.\nInterface CacheStoreSessionListener;\n// This adapter designed to support stores with bulk loading from stream-like source.\nClass CacheLoadOnlyStoreAdapter<K,V,I>;\n", "des": "Contains cache store interfaces."}
{"index": 56, "repo": "ignite-core-2.15.0", "code": "package jdbc\n\n// API for implementing custom hashing logic for binary objects on server side.\nInterface JdbcTypeHasher;\n// API for implementing custom mapping logic for loaded from store data.\nInterface JdbcTypesTransformer;\n// Implementation of CacheStore backed by JDBC.\nClass CacheAbstractJdbcStore<K,V>;\n// Entry mapping description.\nClass CacheAbstractJdbcStore.EntryMapping;\n// CacheStore implementation backed by JDBC.\nClass CacheJdbcBlobStore<K,V>;\n", "des": "Contains reference JDBC-based cache store implementation."}
{"index": 57, "repo": "ignite-core-2.15.0", "code": "package dialect\n\n// Represents a dialect of SQL implemented by a particular RDBMS.\nInterface JdbcDialect;\n// Basic implementation of dialect based on JDBC specification.\nClass BasicJdbcDialect;\n// A dialect compatible with the IBM DB2 database.\nClass DB2Dialect;\n// A dialect compatible with the H2 database.\nClass H2Dialect;\n// A dialect compatible with the MySQL database.\nClass MySQLDialect;\n// A dialect compatible with the Oracle database.\nClass OracleDialect;\n", "des": "Contains SQL dialects for different RDBMS."}
{"index": 58, "repo": "ignite-core-2.15.0", "code": "package transactions\n\n// Ignite cache transaction.\nInterface Transaction;\n// Transaction metrics, shared across all caches.\nInterface TransactionMetrics;\n// Transaction concurrency control.\nEnum TransactionConcurrency;\n// Defines different cache transaction isolation levels.\nEnum TransactionIsolation;\n// Cache transaction state.\nEnum TransactionState;\n// Exception thrown whenever Mvcc transaction has been finished before operation finished.\nClass TransactionAlreadyCompletedException;\n", "des": "Contains transaction-related classes."}
{"index": 59, "repo": "ignite-core-2.15.0", "code": "package services\n\n// An instance of grid-managed service.\nInterface Service;\n// Service call context.\nInterface ServiceCallContext;\n// Service call interceptor.\nInterface ServiceCallInterceptor;\n// Service execution context.\nInterface ServiceContext;\n// Service deployment descriptor.\nInterface ServiceDescriptor;\n// Service call context builder.\nClass ServiceCallContextBuilder;\n// Managed service configuration.\nClass ServiceConfiguration;\n", "des": "Contains main Managed Services APIs."}
{"index": 60, "repo": "ignite-core-2.15.0", "code": "package client\n\n// This interface provides a list of addresses of Ignite server nodes within a cluster.\nInterface ClientAddressFinder;\n// Distributed atomic long API.\nInterface ClientAtomicLong;\n// Auto closeable iterator.\nInterface ClientAutoCloseableIterator<T>;\n// Thin client cache.\nInterface ClientCache<K,V>;\n// Thin client cluster facade.\nInterface ClientCluster;\n// Thin client cluster group facade.\nInterface ClientClusterGroup;\n// Thin client compute facade.\nInterface ClientCompute;\n", "des": "Contains Ignite Thin Client API classes."}
{"index": 61, "repo": "ignite-core-2.15.0", "code": "package stream\n\n// Stream tuple extractor to convert a single message to zero, one or many tuples.\nInterface StreamMultipleTupleExtractor<T,K,V>;\n// Updates cache with batch of entries.\nInterface StreamReceiver<K,V>;\n// Stream tuple extractor to convert a message to a single Ignite key-value tuple.\nInterface StreamSingleTupleExtractor<T,K,V>;\n// Will be removed in 2.0.0.\nInterface StreamTupleExtractor<T,K,V>;\n// Convenience adapter for streamers.\nClass StreamAdapter<T,K,V>;\n", "des": "Contains Ignite Streamer classes."}
{"index": 62, "repo": "ignite-core-2.15.0", "code": "package socket\n\n// Socket message converter.\nInterface SocketMessageConverter<T>;\n// Server that receives data from TCP socket, converts it to key-value pairs using StreamTupleExtractor and streams into IgniteDataStreamer instance.\nClass SocketStreamer<T,K,V>;\n", "des": "Contains socket streamer implementation."}
{"index": 63, "repo": "ignite-core-2.15.0", "code": "package security\n\n// Security credentials provider for specifying security credentials.\nInterface SecurityCredentialsProvider;\n// Security permission set for authorized security subjects.\nInterface SecurityPermissionSet;\n// Security subject representing authenticated node with a set of permissions.\nInterface SecuritySubject;\n// Authentication context.\nClass AuthenticationContext;\n// Simple implementation of SecurityPermissionSet interface.\nClass SecurityBasicPermissionSet;\n", "des": "Contains APIs for security, authentication, and authorization."}
{"index": 64, "repo": "ignite-core-2.15.0", "code": "package ssl\n\n// SSL context factory that provides SSL context configuration with specified key and trust stores.\nClass SslContextFactory;\n// Wrapper for SSLContext that extend source context with custom SSL parameters.\nClass SSLContextWrapper;\n", "des": "Contains classes for working with SSL."}
{"index": 65, "repo": "ignite-core-2.15.0", "code": "package maintenance\n\n// Maintenance action interface enables user to execute operations related to a particular MaintenanceTask.\nInterface MaintenanceAction<T>;\n// MaintenanceRegistry is a service local to each Ignite node that allows to request performing maintenance actions on that particular node.\nInterface MaintenanceRegistry;\n// Abstraction to decouple interaction between MaintenanceRegistry and components that may require maintenance.\nInterface MaintenanceWorkflowCallback;\n", "des": "Contains public interfaces for maintenance mechanism."}
{"index": 66, "repo": "ignite-core-2.15.0", "code": "package mxbean\n\n// This interface defines JMX view on DistributedBaselineConfiguration.\nInterface BaselineAutoAdjustMXBean;\n// MXBean interface that provides access to ODBC\\JDBC\\Thin client connections.\nInterface ClientProcessorMXBean;\n// Cluster metrics MBean.\nInterface ClusterMetricsMXBean;\n// Compute MXBean interface.\nInterface ComputeMXBean;\n// An MX bean allowing to monitor and tune persistence.\nInterface DataStorageMXBean;\n// JMX bean for defragmentation manager.\nInterface DefragmentationMXBean;\n", "des": "Contains annotations for Dynamic MBeans."}
{"index": 67, "repo": "ignite-core-2.15.0", "code": "package checkpoint\n\n// Listener for notifications of checkpoints removed by CheckpointSpi.\nInterface CheckpointListener;\n// Checkpoint SPI provides an ability to save an intermediate job state.\nInterface CheckpointSpi;\n", "des": "Contains APIs for checkpoint SPI."}
{"index": 68, "repo": "ignite-core-2.15.0", "code": "package cache\n\n// Management bean that provides general administrative and configuration information about cache checkpoint SPI.\nInterface CacheCheckpointSpiMBean;\n// This class defines cache-based implementation for checkpoint SPI.\nClass CacheCheckpointSpi;\n", "des": "Contains cache-based implementation for checkpoint SPI."}
{"index": 69, "repo": "ignite-core-2.15.0", "code": "package jdbc\n\n// Management bean that provides general administrative and configuration information about jdbc checkpoint SPI.\nInterface JdbcCheckpointSpiMBean;\n// This class defines JDBC checkpoint SPI implementation.\nClass JdbcCheckpointSpi;\n", "des": "Contains JDBC implementation for checkpoint SPI."}
{"index": 70, "repo": "ignite-core-2.15.0", "code": "package noop\n\n// No-op implementation of CheckpointSpi.\nClass NoopCheckpointSpi;\n", "des": "Contains default no-op checkpoint SPI implementation."}
{"index": 71, "repo": "ignite-core-2.15.0", "code": "package sharedfs\n\n// Management bean that provides general administrative and configuration information about shared file system checkpoints.\nInterface SharedFsCheckpointSpiMBean;\n// This class defines shared file system CheckpointSpi implementation for checkpoint SPI.\nClass SharedFsCheckpointSpi;\n", "des": "Contains shared file system implementation for checkpoint SPI."}
{"index": 72, "repo": "ignite-core-2.15.0", "code": "package collision\n\n// Context for resolving collisions.\nInterface CollisionContext;\n// Listener to be set on CollisionSpi for notification of external collision events (e.g. job stealing).\nInterface CollisionExternalListener;\n// This interface defines set of operations that collision SPI implementation can perform on jobs that are either waiting or executing.\nInterface CollisionJobContext;\n", "des": "Contains APIs for collision SPI."}
{"index": 73, "repo": "ignite-core-2.15.0", "code": "package fifoqueue\n\n// Management bean that provides access to the FIFO queue collision SPI configuration.\nInterface FifoQueueCollisionSpiMBean;\n// This class provides implementation for Collision SPI based on FIFO queue.\nClass FifoQueueCollisionSpi;\n", "des": "Contains FIFO based collision SPI implementation."}
{"index": 74, "repo": "ignite-core-2.15.0", "code": "package jobstealing\n\n// Management MBean for job stealing based collision SPI.\nInterface JobStealingCollisionSpiMBean;\n// Collision SPI that supports job stealing from over-utilized nodes to under-utilized nodes.\nClass JobStealingCollisionSpi;\n// Job stealing request.\nClass JobStealingRequest;\n// This annotation disables job stealing if corresponding feature is configured.\nAnnotation Type JobStealingDisabled;\n", "des": "Contains job stealing collision SPI implementation."}
{"index": 75, "repo": "ignite-core-2.15.0", "code": "package noop\n\n// No-op implementation of CollisionSpi.\nClass NoopCollisionSpi;\n", "des": "Contains default no-op collision SPI implementation."}
{"index": 76, "repo": "ignite-core-2.15.0", "code": "package priorityqueue\n\n// Management bean that provides access to the priority queue collision SPI configuration.\nInterface PriorityQueueCollisionSpiMBean;\n// This class provides implementation for Collision SPI based on priority queue.\nClass PriorityQueueCollisionSpi;\n", "des": "Contains priority based collision SPI implementation."}
{"index": 77, "repo": "ignite-core-2.15.0", "code": "package indexing\n\n// Cache entry filter.\nInterface IndexingQueryFilter;\n// Indexing SPI allows user to index cache content.\nInterface IndexingSpi;\n// Indexing query filter for specific cache.\nClass IndexingQueryCacheFilter;\n// Indexing query filter.\nClass IndexingQueryFilterImpl;\n", "des": "Contains APIs for indexing SPI."}
{"index": 78, "repo": "ignite-core-2.15.0", "code": "package noop\n\n// Default implementation of IndexingSpi which does not index cache.\nClass NoopIndexingSpi;\n", "des": "Contains default no-op indexing SPI implementation."}
{"index": 79, "repo": "ignite-core-2.15.0", "code": "package loadbalancing\n\n// Load balancing SPI provides the next best balanced node for job execution.\nInterface LoadBalancingSpi;\n", "des": "Contains APIs for load balancing SPI."}
{"index": 80, "repo": "ignite-core-2.15.0", "code": "package adaptive\n\n// Management MBean for AdaptiveLoadBalancingSpi SPI.\nInterface AdaptiveLoadBalancingSpiMBean;\n// Pluggable implementation of node load probing.\nInterface AdaptiveLoadProbe;\n// Implementation of node load probing based on CPU load.\nClass AdaptiveCpuLoadProbe;\n// Implementation of node load probing based on active and waiting job count.\nClass AdaptiveJobCountLoadProbe;\n// Load balancing SPI that adapts to overall node performance.\nClass AdaptiveLoadBalancingSpi;\n", "des": "Contains adaptive load balancing SPI."}
{"index": 81, "repo": "ignite-core-2.15.0", "code": "package roundrobin\n\n// Management bean for RoundRobinLoadBalancingSpi SPI.\nInterface RoundRobinLoadBalancingSpiMBean;\n// This SPI iterates through nodes in round-robin fashion and pick the next sequential node.\nClass RoundRobinLoadBalancingSpi;\n", "des": "Contains default round-robin implementation for load balancing SPI."}
{"index": 82, "repo": "ignite-core-2.15.0", "code": "package weightedrandom\n\n// Management MBean for WeightedRandomLoadBalancingSpi SPI.\nInterface WeightedRandomLoadBalancingSpiMBean;\n// Load balancing SPI that picks a random node for job execution.\nClass WeightedRandomLoadBalancingSpi;\n", "des": "Contains weighted random-base implementation for load balancing SPI."}
{"index": 83, "repo": "ignite-core-2.15.0", "code": "package communication\n\n// Listener SPI notifies IO manager with.\nInterface CommunicationListener<T extends Serializable>;\n// Communication SPI is responsible for data exchange between nodes.\nInterface CommunicationSpi<T extends Serializable>;\n", "des": "Contains APIs for grid communication SPI."}
{"index": 84, "repo": "ignite-core-2.15.0", "code": "package tcp\n\n// MBean provide access to TCP-based communication SPI.\nInterface TcpCommunicationSpiMBean;\n// fix it in the ticket https://ggsystems.atlassian.net/browse/GG-29546\nClass AttributeNames;\n// Utils to analyze client-related exceptions.\nClass ClientExceptionsUtils;\n// Statistics for TcpCommunicationSpi.\nClass TcpCommunicationMetricsListener;\n// TcpCommunicationSpi is default communication SPI which uses TCP/IP protocol and Java NIO to communicate with other nodes.\nClass TcpCommunicationSpi;\n", "des": "Contains default TCP/IP-based implementation for communication SPI."}
{"index": 85, "repo": "ignite-core-2.15.0", "code": "package internal\n\n// Extended communication SPI listener to provide Channel opened events.\nInterface CommunicationListenerEx<T extends Serializable>;\n// Connection policy.\nInterface ConnectionPolicy;\n// Helper interface to ask other nodes to open connections.\nInterface ConnectionRequestor;\n// Tcp Communication Node Connection Check Future.\nInterface TcpCommunicationNodeConnectionCheckFuture;\n// \nInterface TcpConnectionIndexAwareMessage;\n// This class must be removed.\nClass ClusterStateProvider;\n", "des": "Contains connection health-checkers for TCP/IP-based implementation of communication SPI."}
{"index": 86, "repo": "ignite-core-2.15.0", "code": "package messages\n\n// Handshake message.\nClass HandshakeMessage;\n// Updated handshake message.\nClass HandshakeMessage2;\n// Message requesting to wait until node's SPI context initialize.\nClass HandshakeWaitMessage;\n// Node ID message.\nClass NodeIdMessage;\n// Recovery acknowledgment message.\nClass RecoveryLastReceivedMessage;\n", "des": "Contains implementation messages."}
{"index": 87, "repo": "ignite-core-2.15.0", "code": "package deployment\n\n// Listener for deployment events.\nInterface DeploymentListener;\n// Generic abstraction over deployed resource containing resource's name, class and corresponding class loader.\nInterface DeploymentResource;\n// Grid deployment SPI is in charge of deploying tasks and classes from different sources.\nInterface DeploymentSpi;\n// Simple adapter for DeploymentResource interface.\nClass DeploymentResourceAdapter;\n", "des": "Contains APIs for deployment SPI."}
{"index": 88, "repo": "ignite-core-2.15.0", "code": "package local\n\n// Management MBean for LocalDeploymentSpi SPI.\nInterface LocalDeploymentSpiMBean;\n// Local deployment SPI that implements only within VM deployment on local node via LocalDeploymentSpi.register(ClassLoader, Class) method.\nClass LocalDeploymentSpi;\n", "des": "Contains default local deployment SPI implementation."}
{"index": 89, "repo": "ignite-core-2.15.0", "code": "package discovery\n\n// Facade interface representing DiscoveryDataBag object with discovery data collected in the grid.\nInterface DiscoveryDataBag.GridDiscoveryData;\n// Facade interface representing DiscoveryDataBag object with discovery data from joining node.\nInterface DiscoveryDataBag.JoiningNodeDiscoveryData;\n// Provides metrics to discovery SPI.\nInterface DiscoveryMetricsProvider;\n// Grid discovery SPI allows to discover remote nodes in grid.\nInterface DiscoverySpi;\n", "des": "Contains APIs for topology manager SPI."}
{"index": 90, "repo": "ignite-core-2.15.0", "code": "package isolated\n\n// Special discovery SPI implementation to start a single-node cluster in \"isolated\" mode.\nClass IsolatedDiscoverySpi;\n// Special isolated node.\nClass IsolatedNode;\n", "des": "Contains implementation of special \"isolated\" mode for single-node cluster."}
{"index": 91, "repo": "ignite-core-2.15.0", "code": "package tcp\n\n// Management bean for TcpDiscoverySpi.\nInterface TcpDiscoverySpiMBean;\n// Discovery SPI implementation that uses TCP/IP for node discovery.\nClass TcpDiscoverySpi;\n", "des": "Contains default TCP/IP implementation for discovery SPI."}
{"index": 92, "repo": "ignite-core-2.15.0", "code": "package internal\n\n// Carries discovery data in marshalled form and allows convenient way of converting it to and from DiscoveryDataBag objects.\nClass DiscoveryDataPacket;\n// \nClass FutureTask<T>;\n// Node for TcpDiscoverySpi.\nClass TcpDiscoveryNode;\n// Convenient way to represent topology for TcpDiscoverySpi\nClass TcpDiscoveryNodesRing;\n// Statistics for TcpDiscoverySpi.\nClass TcpDiscoveryStatistics;\n// State of local node TcpDiscoverySpi.\nEnum TcpDiscoverySpiState;\n", "des": "Contains internal implementation."}
{"index": 93, "repo": "ignite-core-2.15.0", "code": "package ipfinder\n\n// IP finder interface for TcpDiscoverySpi.\nInterface TcpDiscoveryIpFinder;\n// IP finder interface implementation adapter.\nClass TcpDiscoveryIpFinderAdapter;\n", "des": "Contains IP finder interface and adapter."}
{"index": 94, "repo": "ignite-core-2.15.0", "code": "package jdbc\n\n// SQL dialect to use with TcpDiscoveryJdbcIpFinder.\nInterface JdbcIpFinderDialect;\n// Basic JDBC dialect to use along with TcpDiscoveryJdbcIpFinder.\nClass BasicJdbcIpFinderDialect;\n// Oracle JDBC dialect to use along with TcpDiscoveryJdbcIpFinder.\nClass OracleJdbcIpFinderDialect;\n// JDBC-based IP finder.\nClass TcpDiscoveryJdbcIpFinder;\n", "des": "Contains JDBC IP finder implementation."}
{"index": 95, "repo": "ignite-core-2.15.0", "code": "package multicast\n\n// Multicast-based IP finder.\nClass TcpDiscoveryMulticastIpFinder;\n", "des": "Contains multicast-based IP finder."}
{"index": 96, "repo": "ignite-core-2.15.0", "code": "package sharedfs\n\n// Shared filesystem-based IP finder.\nClass TcpDiscoverySharedFsIpFinder;\n", "des": "Contains shared filesystem-based IP finder."}
{"index": 97, "repo": "ignite-core-2.15.0", "code": "package vm\n\n// IP Finder which works only with pre-configured list of IP addresses specified via TcpDiscoveryVmIpFinder.setAddresses(Collection) method.\nClass TcpDiscoveryVmIpFinder;\n", "des": "Contains local JVM-based IP finder."}
{"index": 98, "repo": "ignite-core-2.15.0", "code": "package messages\n\n// Base class to implement discovery messages.\nClass TcpDiscoveryAbstractMessage;\n// Abstract traceable message for TCP discovery.\nClass TcpDiscoveryAbstractTraceableMessage;\n// Message telling joining node that its authentication failed on coordinator.\nClass TcpDiscoveryAuthFailedMessage;\n// Message telling joining node that it failed coordinator's validation check.\nClass TcpDiscoveryCheckFailedMessage;\n// \nClass TcpDiscoveryClientAckResponse;\n", "des": "Contains implementation messages."}
{"index": 99, "repo": "ignite-core-2.15.0", "code": "package failover\n\n// This interface defines a set of operations available to failover SPI one a given failed job.\nInterface FailoverContext;\n// Failover SPI provides developer with ability to supply custom logic for handling failed execution of a grid job.\nInterface FailoverSpi;\n", "des": "Contains APIs for failover SPI."}
{"index": 100, "repo": "ignite-core-2.15.0", "code": "package always\n\n// Management bean for AlwaysFailoverSpi.\nInterface AlwaysFailoverSpiMBean;\n// Failover SPI that always reroutes a failed job to another node.\nClass AlwaysFailoverSpi;\n", "des": "Contains default \"always\" failover SPI."}
{"index": 101, "repo": "ignite-core-2.15.0", "code": "package jobstealing\n\n// Management bean for JobStealingFailoverSpi.\nInterface JobStealingFailoverSpiMBean;\n// Job stealing failover SPI needs to always be used in conjunction with JobStealingCollisionSpi SPI.\nClass JobStealingFailoverSpi;\n", "des": "Contains job stealing failover SPI."}
{"index": 102, "repo": "ignite-core-2.15.0", "code": "package never\n\n// Management bean for NeverFailoverSpi.\nInterface NeverFailoverSpiMBean;\n// This class provides failover SPI implementation that never fails over.\nClass NeverFailoverSpi;\n", "des": "Contains \"never\" failover SPI."}
{"index": 103, "repo": "ignite-core-2.15.0", "code": "package eventstorage\n\n// This SPI provides local node events storage.\nInterface EventStorageSpi;\n// No-op implementation of EventStorageSpi.\nClass NoopEventStorageSpi;\n", "des": "Contains APIs for event storage SPI."}
{"index": 104, "repo": "ignite-core-2.15.0", "code": "package memory\n\n// Management bean for MemoryEventStorageSpi.\nInterface MemoryEventStorageSpiMBean;\n// In-memory EventStorageSpi implementation.\nClass MemoryEventStorageSpi;\n", "des": "Contains default in-memory implementation for event storage SPI."}
{"index": 105, "repo": "ignite-core-2.15.0", "code": "package failure\n\n// Provides facility to handle failures by custom user implementations, which can be configured by IgniteConfiguration.setFailureHandler(FailureHandler) method.\nInterface FailureHandler;\n// Abstract superclass for FailureHandler implementations.\nClass AbstractFailureHandler;\n// Failure context contains information about failure type and exception if applicable.\nClass FailureContext;\n// Just ignores any failure.\nClass NoOpFailureHandler;\n", "des": "Contains Failure handling public API with standard FailureHandler implementations."}
{"index": 106, "repo": "ignite-core-2.15.0", "code": "package segmentation\n\n// This is interface for segmentation (a.k.a \"split-brain\" problem) resolvers.\nInterface SegmentationResolver;\n// Policy that defines how node will react on topology segmentation.\nEnum SegmentationPolicy;\n", "des": "Contains segmentation \"split-brain\" related classes."}
{"index": 107, "repo": "ignite-core-2.15.0", "code": "package plugin\n\n// Cache plugin configuration.\nInterface CachePluginConfiguration<K,V>;\n// Cache plugin context.\nInterface CachePluginContext<C extends CachePluginConfiguration>;\n// Cache plugin provider is a point for processing of properties which provide specific CachePluginConfiguration.\nInterface CachePluginProvider<C extends CachePluginConfiguration>;\n", "des": "Contains plugins management API."}
{"index": 108, "repo": "ignite-core-2.15.0", "code": "package communication\n\n// Message factory for all communication messages registered using IgniteMessageFactory.register(short, Supplier) method call.\nInterface IgniteMessageFactory;\n// The interface of IO Messaging Pool Extension.\nInterface IoPool;\n// Base class for all communication messages.\nInterface Message;\n// Use MessageFactoryProvider instead.\nInterface MessageFactory;\n// Provider of communication message factories.\nInterface MessageFactoryProvider;\n", "des": "Contains extendable components for communication."}
{"index": 109, "repo": "ignite-core-2.15.0", "code": "package platform\n\n// Platform cache configuration handler: updates plugin configuration using data sent from platform code.\nInterface PlatformCachePluginConfigurationClosure;\n// Factory for @PlatformCachePluginConfigurationClosure with a unique id.\nInterface PlatformCachePluginConfigurationClosureFactory;\n// Platform configuration handler: updates plugin configuration using data sent from platform code.\nInterface PlatformPluginConfigurationClosure;\n", "des": "Contains platform plugins management API."}
{"index": 110, "repo": "ignite-core-2.15.0", "code": "package logger\n\n// Logger which does not output anything.\nClass NullLogger;\n", "des": "Contains logging functionality used throughout the system."}
{"index": 111, "repo": "ignite-core-2.15.0", "code": "package java\n\n// Logger to use with Java logging.\nClass JavaLogger;\n// File logging handler which skips all the messages until node ID is set.\nClass JavaLoggerFileHandler;\n// Formatter for JUL logger.\nClass JavaLoggerFormatter;\n", "des": "Contains Java logging implementation for logging."}
{"index": 112, "repo": "ignite-core-2.15.0", "code": "package startup\n\n// Basic warm-up closure which warm-ups cache operations.\nClass BasicWarmupClosure;\n", "des": "Contains Ignite runtime startup classes."}
{"index": 113, "repo": "ignite-core-2.15.0", "code": "package cmdline\n\n// About dialog.\nClass AboutDialog;\n// This class defines command-line Ignite Capture Data Change startup.\nClass CdcCommandLineStartup;\n// Generates a random number and prints it to the console.\nClass CommandLineRandomNumberGenerator;\n// This class defines command-line Ignite startup.\nClass CommandLineStartup;\n// This class is a workaround for a versatile problems with passing arguments to the Ignite Windows batch launcher scripts.\nClass CommandLineTransformer;\n", "des": "Contains default command line startup."}
{"index": 114, "repo": "ignite-core-2.15.0", "code": "package marshaller\n\n// Marshaller allows to marshal or unmarshal objects in grid.\nInterface Marshaller;\n// Marshaller context.\nInterface MarshallerContext;\n// Base class for marshallers.\nClass AbstractMarshaller;\n// Marshaller allowing for Ignition.localIgnite() calls.\nClass AbstractNodeNameAwareMarshaller;\n// Controls what classes should be excluded from marshalling by default.\nClass MarshallerExclusions;\n// Utility marshaller methods.\nClass MarshallerUtils;\n", "des": "Contains various supported marshallers."}
{"index": 115, "repo": "ignite-core-2.15.0", "code": "package jdk\n\n// Implementation of Marshaller based on JDK serialization mechanism.\nClass JdkMarshaller;\n", "des": "Contains JDK java.io based marshaller."}
{"index": 116, "repo": "ignite-core-2.15.0", "code": "package binary\n\n// Collection factory.\nInterface BinaryCollectionFactory<K>;\n// Binary object field.\nInterface BinaryField;\n// Type and field ID mapper for binary objects.\nInterface BinaryIdMapper;\n// Interface that allows to implement custom serialization logic for binary objects.\nInterface Binarylizable;\n// Map factory.\nInterface BinaryMapFactory<K,V>;\n// Maps type and field names to different names.\nInterface BinaryNameMapper;\n// Wrapper for binary object in binary format.\nInterface BinaryObject;\n", "des": "Contains Ignite Binary Objects API classes."}
{"index": 117, "repo": "ignite-core-2.15.0", "code": "package platform\n\n// Object factory used for advanced interop between platform and Java.\nInterface PlatformJavaObjectFactory<T>;\n// Interop platform type.\nEnum PlatformType;\n// Annotation for setting mapping between java interface's method and platform service's method.\nAnnotation Type PlatformServiceMethod;\n", "des": "Contains platform-related classes."}
{"index": 118, "repo": "ignite-core-2.15.0", "code": "package cpp\n\n// Platform CPP configuration.\nClass PlatformCppConfiguration;\n", "des": "Contains C++ platform-related classes."}
{"index": 119, "repo": "ignite-core-2.15.0", "code": "package dotnet\n\n// AffinityFunction implementation which can be used to configure .NET affinity function in Java Spring configuration.\nClass PlatformDotNetAffinityFunction;\n// Mirror of .Net class BinaryConfiguration.cs\nClass PlatformDotNetBinaryConfiguration;\n// Mirror of .Net class BinaryTypeConfiguration.cs\nClass PlatformDotNetBinaryTypeConfiguration;\n// Wrapper for .NET cache store implementations.\nClass PlatformDotNetCacheStoreFactory;\n", "des": "Contains .Net platform-related classes."}
{"index": 120, "repo": "ignite-core-2.15.0", "code": "package encryption\n\n// SPI provides encryption features for an Ignite.\nInterface EncryptionSpi;\n", "des": "Contains APIs for encryption SPI."}
{"index": 121, "repo": "ignite-core-2.15.0", "code": "package keystore\n\n// EncryptionKey implementation based on java security.\nClass KeystoreEncryptionKey;\n// EncryptionSPI implementation base on JDK provided cipher algorithm implementations.\nClass KeystoreEncryptionSpi;\n", "des": "Contains encryption SPI implementation based on standard jdk keystore."}
{"index": 122, "repo": "ignite-core-2.15.0", "code": "package noop\n\n// No operation EncryptionSPI implementation.\nClass NoopEncryptionSpi;\n", "des": "Contains no-op encryption SPI implementation."}
{"index": 123, "repo": "ignite-core-2.15.0", "code": "package metric\n\n// Interface for the metrics that holds boolean primitive.\nInterface BooleanMetric;\n// Interface for the metrics that holds double primitive.\nInterface DoubleMetric;\n// Histogram metric calculates counts of measurements that gets into each bounds interval.\nInterface HistogramMetric;\n// Interface for the metrics that holds int primitive.\nInterface IntMetric;\n// Interface for the metrics that holds long primitive.\nInterface LongMetric;\n// Base interface for all metrics.\nInterface Metric;\n", "des": "Contains common classes and interfaces for metric SPI implementations."}
{"index": 124, "repo": "ignite-core-2.15.0", "code": "package jmx\n\n// Overview Ignite provides this default built-in implementation of MetricExporterSpi it exports metrics as JMX beans.\nClass JmxMetricExporterSpi;\n// MBean for exporting values of metric registry.\nClass MetricRegistryMBean;\n// Base class for read only DynamicMBean implementations.\nClass ReadOnlyDynamicMBean;\n", "des": "Contains JMX based implementation of MetricExporterSpi."}
{"index": 125, "repo": "ignite-core-2.15.0", "code": "package log\n\n// This SPI implementation exports metrics to Ignite log.\nClass LogExporterSpi;\n", "des": "Contains push to log implementation of MetricExporterSpi."}
{"index": 126, "repo": "ignite-core-2.15.0", "code": "package noop\n\n// No-op implementation of metric exporter SPI.\nClass NoopMetricExporterSpi;\n", "des": "Contains no-op implementation of MetricExporterSpi."}
{"index": 127, "repo": "ignite-core-2.15.0", "code": "package systemview\n\n// Read only system view registry.\nInterface ReadOnlySystemViewRegistry;\n// Exporter of system view to the external recepient.\nInterface SystemViewExporterSpi;\n", "des": "Contains common classes and interfaces for system view SPI implementations."}
{"index": 128, "repo": "ignite-core-2.15.0", "code": "package view\n\n// System view with filtering capabilities.\nInterface FiltrableSystemView<R>;\n// Implementation provides data for some internal Ignite objects.\nInterface SystemView<R>;\n// Utility class for quick iteration over row properties.\nInterface SystemViewRowAttributeWalker<R>;\n// Attribute visitor.\nInterface SystemViewRowAttributeWalker.AttributeVisitor;\n// Attribute visitor.\nInterface SystemViewRowAttributeWalker.AttributeWithValueVisitor;\n", "des": "Contains SystemView clases that exists in Ignite."}
{"index": 129, "repo": "ignite-core-2.15.0", "code": "package tracing\n\n// Logical piece of a trace that insulates spi specific logic.\nInterface SpiSpecificSpan;\n// Allows to configure tracing, read the configuration and restore it to the defaults.\nInterface TracingConfigurationManager;\n// Tracing SPI interface.\nInterface TracingSpi<S extends SpiSpecificSpan>;\n// Noop and null-safe implementation of SpiSpecificSpan.\nClass NoopSpiSpecificSpan;\n// Noop and null-safe implementation of Tracing SPI.\nClass NoopTracingSpi;\n", "des": "Contains common classes and interfaces for tracing SPI implementations."}
{"index": 130, "repo": "ignite-core-2.15.0", "code": "package internal\n\n// Message with specified custom executor must be processed in the appropriate thread pool.\nInterface ExecutorAwareMessage;\n// Interface for all main internal Ignite components (managers and processors).\nInterface GridComponent;\n// Internal wrapper interface for custom resource injection logic.\nInterface GridInternalWrapper<T>;\n// \nInterface GridKernalContext;\n", "des": "Contains main implementation."}
{"index": 131, "repo": "ignite-core-2.15.0", "code": "package binary\n\n// \nInterface BinaryFieldEx;\n// Interface to compute hash codes for new binary objects and compare them for equality.\nInterface BinaryIdentityResolver;\n// Binary metadata handler.\nInterface BinaryMetadataHandler;\n// Extended binary object interface.\nInterface BinaryObjectEx;\n// Interface allowing for positioned read.\nInterface BinaryPositionReadable;\n// Extended reader interface.\nInterface BinaryRawReaderEx;\n// Extended writer interface.\nInterface BinaryRawWriterEx;\n", "des": "Contains binary APIs internal implementation."}
{"index": 132, "repo": "ignite-core-2.15.0", "code": "package builder\n\n// \nInterface BinaryLazyValue;\n// \nClass BinaryBuilderEnum;\n// \nClass BinaryBuilderReader;\n// \nClass BinaryModifiableLazyValue;\n// \nClass BinaryObjectBuilderImpl;\n// \nClass BinaryPlainBinaryObject;\n", "des": "Contains classes specific to binary builder API."}
{"index": 133, "repo": "ignite-core-2.15.0", "code": "package streams\n\n// Binary input stream.\nInterface BinaryInputStream;\n// Memory allocator chunk.\nInterface BinaryMemoryAllocatorChunk;\n// Binary output stream.\nInterface BinaryOutputStream;\n// Binary stream.\nInterface BinaryStream;\n// Binary abstract input stream.\nClass BinaryAbstractInputStream;\n// Base binary output stream.\nClass BinaryAbstractOutputStream;\n// Binary abstract stream.\nClass BinaryAbstractStream;\n// Input stream over ByteBuffer.\nClass BinaryByteBufferInputStream;\n", "des": "Contains binary APIs implementation for streams."}
{"index": 134, "repo": "ignite-core-2.15.0", "code": "package executor\n\n// An ExecutorService that executes each submitted task in grid through Ignite instance, normally configured using Ignite.executorService() method.\nClass GridExecutorService;\n", "des": "Contains grid executor service implementation."}
{"index": 135, "repo": "ignite-core-2.15.0", "code": "package managers\n\n// This interface defines life-cycle for kernal manager.\nInterface GridManager;\n// Convenience adapter for grid managers.\nClass GridManagerAdapter<T extends IgniteSpi>;\n// Class that registers and unregisters MBeans for kernal.\nClass IgniteMBeansManager;\n", "des": "TODO."}
{"index": 136, "repo": "ignite-core-2.15.0", "code": "package checkpoint\n\n// This class defines a checkpoint manager.\nClass GridCheckpointManager;\n// This class defines checkpoint request.\nClass GridCheckpointRequest;\n", "des": "TODO."}
{"index": 137, "repo": "ignite-core-2.15.0", "code": "package collision\n\n// Adapter for CollisionJobContext.\nClass GridCollisionJobContextAdapter;\n// This class defines a collision manager.\nClass GridCollisionManager;\n", "des": "TODO."}
{"index": 138, "repo": "ignite-core-2.15.0", "code": "package communication\n\n// Node disconnect listener interface.\nInterface GridDisconnectListener;\n// Listener for messages received from remote nodes.\nInterface GridMessageListener;\n// Class represents a handler for the set of files considered to be transferred from the remote node.\nInterface TransmissionHandler;\n// This class represents the internal grid communication (input and output) manager which is placed as a layer of indirection between the IgniteKernal and CommunicationSpi.\nClass GridIoManager;\n", "des": "TODO."}
{"index": 139, "repo": "ignite-core-2.15.0", "code": "package deployment\n\n// Deployment info.\nInterface GridDeploymentInfo;\n// Interface for all deployment stores.\nInterface GridDeploymentStore;\n// Represents single class deployment.\nClass GridDeployment;\n// Deployment info bean.\nClass GridDeploymentInfoBean;\n// Deployment manager.\nClass GridDeploymentManager;\n// Deployment metadata.\nClass GridDeploymentMetadata;\n// Deployment storage for DeploymentMode.PRIVATE and DeploymentMode.ISOLATED modes.\nClass GridDeploymentPerLoaderStore;\n", "des": "TODO."}
{"index": 140, "repo": "ignite-core-2.15.0", "code": "package gg\n\n// Custom stream protocol handler implementation.\nClass GridProtocolHandler;\n// Connection implementation for custom protocol.\nClass GridUrlConnection;\n", "des": "Grid stream protocol implementation."}
{"index": 141, "repo": "ignite-core-2.15.0", "code": "package discovery\n\n// Listener interface.\nInterface CustomEventListener<T extends DiscoveryCustomMessage>;\n// DiscoveryCustomMessage messages are handled by discovery protocol which provides some guarantees around them.\nInterface DiscoveryCustomMessage;\n// DiscoveryServerOnlyCustomMessage is the special subtype of the DiscoveryCustomMessage message that is delivered only on server nodes of the cluster.\nInterface DiscoveryServerOnlyCustomMessage;\n// \nInterface IgniteClusterNode;\n", "des": "TODO."}
{"index": 142, "repo": "ignite-core-2.15.0", "code": "package encryption\n\n// Provider for cache's encryption keys.\nInterface EncryptionCacheKeyProvider;\n// Cache group page stores scanner.\nClass CacheGroupPageScanner;\n// Change cache group encryption key request.\nClass ChangeCacheEncryptionRequest;\n// Encryption features MBean.\nClass EncryptionMXBeanImpl;\n// Generate encryption key request.\nClass GenerateEncryptionKeyRequest;\n// Generate encryption key response.\nClass GenerateEncryptionKeyResponse;\n", "des": "Encryption manager classes."}
{"index": 143, "repo": "ignite-core-2.15.0", "code": "package eventstorage\n\n// Internal listener for discovery events.\nInterface DiscoveryEventListener;\n// Listener for asynchronous local node grid events.\nInterface GridLocalEventListener;\n// Marker interface for listeners called before 'regular' listeners.\nInterface HighPriorityListener;\n// Grid event storage SPI manager.\nClass GridEventStorageManager;\n// Event storage message.\nClass GridEventStorageMessage;\n", "des": "TODO."}
{"index": 144, "repo": "ignite-core-2.15.0", "code": "package failover\n\n// GridFailoverContext implementation.\nClass GridFailoverContextImpl;\n// Grid failover spi manager.\nClass GridFailoverManager;\n", "des": "TODO."}
{"index": 145, "repo": "ignite-core-2.15.0", "code": "package indexing\n\n// Manages cache indexing.\nClass GridIndexingManager;\n// Task that rebuilds indexes.\nClass IndexesRebuildTask;\n", "des": "Indexing manager classes."}
{"index": 146, "repo": "ignite-core-2.15.0", "code": "package loadbalancer\n\n// This adapter allows for graceful exception when load balancer gets marshalled.\nClass GridLoadBalancerAdapter;\n// Load balancing manager.\nClass GridLoadBalancerManager;\n", "des": "TODO."}
{"index": 147, "repo": "ignite-core-2.15.0", "code": "package optimized\n\n// ID mapper.\nInterface OptimizedMarshallerIdMapper;\n// Optimized implementation of Marshaller.\nClass OptimizedMarshaller;\n// Optimized object output stream.\nClass OptimizedObjectOutputStream;\n// \nClass OptimizedObjectPooledStreamRegistry;\n// \nClass OptimizedObjectSharedStreamRegistry;\n// \nClass OptimizedMarshallerInaccessibleClassException;\n", "des": "Contains Optimized marshaller."}
{"index": 148, "repo": "ignite-core-2.15.0", "code": "package mxbean\n\n// Extension of standard Java MBean.\nClass IgniteStandardMXBean;\n", "des": "Contains internal mxbeans stuff."}
{"index": 149, "repo": "ignite-core-2.15.0", "code": "package processors\n\n// Interface for all processors.\nInterface GridProcessor;\n// Advanced parent adapter for all processor.\nClass GridProcessorAdapter;\n", "des": "Package with Apache Ignite internal Processors."}
{"index": 150, "repo": "ignite-core-2.15.0", "code": "package affinity\n\n// Cached affinity calculations.\nInterface AffinityAssignment;\n// Interface for historical calculated affinity assignment.\nInterface HistoryAffinityAssignment;\n// \nClass AffinityTopologyVersion;\n// \nClass GridAffinityAssignment;\n// Affinity cached function.\nClass GridAffinityAssignmentCache;\n// Cached affinity calculations V2.\nClass GridAffinityAssignmentV2;\n// Cache affinity function context implementation.\nClass GridAffinityFunctionContextImpl;\n", "des": "Data affinity processor."}
{"index": 151, "repo": "ignite-core-2.15.0", "code": "package cache\n\n// It's a marker interface for detecting GridCacheDeploymentManager$CacheClassLoader.\nInterface CacheClassLoaderMarker;\n// Splits cache configuration into two parts that can be serialized, deserialized separately.\nInterface CacheConfigurationSplitter;\n// Conflict resolver manager.\nInterface CacheConflictResolutionManager<K,V>;\n// \nInterface CacheEntryPredicate;\n// \nInterface CacheEvictionManager;\n// \nInterface CacheLockCandidates;\n// \nInterface CacheObject;\n", "des": "This package contain cache-related processors & persistence implementation."}
{"index": 152, "repo": "ignite-core-2.15.0", "code": "package binary\n\n// Interface allows any component to register for events of binary metadata updates.\nInterface BinaryMetadataUpdatedListener;\n// \nInterface CacheObjectBinaryProcessorImpl.TestBinaryContext.TestBinaryContextListener;\n// Key for binary metadata.\nClass BinaryMetadataKey;\n// Binary processor implementation.\nClass CacheObjectBinaryProcessorImpl;\n// \nClass CacheObjectBinaryProcessorImpl.TestBinaryContext;\n// IgniteBinary implementation.\nClass IgniteBinaryImpl;\n", "des": "Implementation of binary processor."}
{"index": 153, "repo": "ignite-core-2.15.0", "code": "package persistence\n\n// Cache data row.\nInterface CacheDataRow;\n// \nInterface CacheSearchRow;\n// Interface for perform checking that checkpoint lock is held by current track\nInterface CheckpointLockStateChecker;\n// \nInterface DatabaseLifecycleListener;\n// Meta store.\nInterface IndexStorage;\n// Interface for write page to PageStore.\nInterface PageStoreWriter;\n// Simple interface for data, store in some RowStore.\nInterface Storable;\n// Cache data row adapter.\nClass CacheDataRowAdapter;\n", "des": "This package contain cache with persistence implementation."}
{"index": 154, "repo": "ignite-core-2.15.0", "code": "package pagemem\n\n// Interface for storing correspondence of page ID in a cache group to long value (address in offheap segment).\nInterface LoadedPagesMap;\n// Interface describing a predicate for Key (cache group ID, page ID).\nInterface LoadedPagesMap.KeyPredicate;\n// Page memory with some persistence related additions.\nInterface PageMemoryEx;\n// Container for different memory page-related metrics.\nInterface PageMetrics;\n// \nInterface PageReadWriteManager;\n", "des": "This package contains page memory implementation for case persitence is enabled."}
{"index": 155, "repo": "ignite-core-2.15.0", "code": "package cacheobject\n\n// Cache objects processor.\nInterface IgniteCacheObjectProcessor;\n// \nClass NoOpBinary;\n// Wraps value provided by user, must be copied before stored in cache.\nClass UserCacheObjectByteArrayImpl;\n// Wraps value provided by user, must be serialized before stored in cache.\nClass UserCacheObjectImpl;\n// Wraps key provided by user, must be serialized before stored in cache.\nClass UserKeyCacheObjectImpl;\n", "des": "Cache object processor."}
{"index": 156, "repo": "ignite-core-2.15.0", "code": "package closure\n\n// Affinity mapped task.\nInterface AffinityTask;\n// \nClass GridClosureProcessor;\n// \nClass GridClosureProcessor.C1<T,R>;\n// \nClass GridClosureProcessor.C1MLA<T,R>;\n// \nClass GridClosureProcessor.C2<R>;\n// \nClass GridClosureProcessor.C2MLA<R>;\n// \nClass GridClosureProcessor.C4;\n// \nClass GridClosureProcessor.C4MLA;\n// Peer deployment aware task adapter.\nClass GridPeerDeployAwareTaskAdapter<T,R>;\n", "des": "TODO."}
{"index": 157, "repo": "ignite-core-2.15.0", "code": "package datastreamer\n\n// Marker interface for updaters which do not need to unwrap cache objects.\nInterface DataStreamerCacheUpdaters.InternalUpdater;\n// Bundled factory for cache updaters.\nClass DataStreamerCacheUpdaters;\n// \nClass DataStreamerEntry;\n// Data streamer implementation.\nClass DataStreamerImpl<K,V>;\n// Isolated receiver which only loads entry initial value.\nClass DataStreamerImpl.IsolatedUpdater;\n// \nClass DataStreamerRequest;\n// \nClass DataStreamerResponse;\n", "des": "Data streamer processor."}
{"index": 158, "repo": "ignite-core-2.15.0", "code": "package dr\n\n// Data center replication cache receiver for data streamer.\nClass IgniteDrDataStreamerCacheUpdater;\n// Data center replication type.\nEnum GridDrType;\n", "des": "Data center replication processor."}
{"index": 159, "repo": "ignite-core-2.15.0", "code": "package failure\n\n// General failure processing API\nClass FailureProcessor;\n", "des": "Failure processor."}
{"index": 160, "repo": "ignite-core-2.15.0", "code": "package job\n\n// Responsible for all grid job execution and communication.\nClass GridJobProcessor;\n// Job worker.\nClass GridJobWorker;\n// Timeout object for delayed worker interruption.\nClass JobWorkerInterruptionTimeoutObject;\n// Compute job status.\nEnum ComputeJobStatusEnum;\n", "des": "TODO."}
{"index": 161, "repo": "ignite-core-2.15.0", "code": "package jobmetrics\n\n// Check the ReadOnlyMetricRegistry with \"name=compute.jobs\" instead.\nClass GridJobMetrics;\n// Check the ReadOnlyMetricRegistry with \"name=compute.jobs\" instead.\nClass GridJobMetricsProcessor;\n// Check the ReadOnlyMetricRegistry with \"name=compute.jobs\" instead.\nClass GridJobMetricsSnapshot;\n", "des": "Job metrics."}
{"index": 162, "repo": "ignite-core-2.15.0", "code": "package port\n\n// Listener for port change events.\nInterface GridPortListener;\n// Registers and deregisters all ports used by SPI and Manager.\nClass GridPortProcessor;\n// This class defines record about port use.\nClass GridPortRecord;\n", "des": "TODO."}
{"index": 163, "repo": "ignite-core-2.15.0", "code": "package resource\n\n// The interface specifies a container of dependencies.\nInterface DependencyResolver;\n// Disables injection.\nInterface GridNoImplicitInjection;\n// Interface was introduced to avoid compile-time dependency on spring framework.\nInterface GridSpringResourceContext;\n// Resource container contains caches for classes used for injection.\nClass GridResourceIoc;\n// Simple injector which wraps ComputeJobContext resource object.\nClass GridResourceJobContextInjector;\n", "des": "TODO."}
{"index": 164, "repo": "ignite-core-2.15.0", "code": "package rest\n\n// REST protocol.\nInterface GridRestProtocol;\n// Command protocol handler.\nInterface GridRestProtocolHandler;\n// REST processor marker interface.\nInterface IgniteRestProcessor;\n// Rest processor implementation.\nClass GridRestProcessor;\n// JSON response.\nClass GridRestResponse;\n// Supported commands.\nEnum GridRestCommand;\n", "des": "REST processor."}
{"index": 165, "repo": "ignite-core-2.15.0", "code": "package message\n\n// Interface for all client messages.\nInterface GridClientMessage;\n// This class provides implementation for commit message fields and cannot be used directly.\nClass GridClientAbstractMessage;\n// Client authentication request.\nClass GridClientAuthenticationRequest;\n// Binary meta data sent from client.\nClass GridClientBinaryMetaData;\n// Cache bean.\nClass GridClientCacheBean;\n// Generic cache request.\nClass GridClientCacheRequest;\n// \nClass GridClientClusterNameRequest;\n", "des": "Defines messages that are used in binary TCP communication between Ignite clients and nodes."}
{"index": 166, "repo": "ignite-core-2.15.0", "code": "package handlers\n\n// Command handler.\nInterface GridRestCommandHandler;\n// Abstract command handler.\nClass GridRestCommandHandlerAdapter;\n", "des": "REST commands handlers."}
{"index": 167, "repo": "ignite-core-2.15.0", "code": "package auth\n\n// Authentication handler.\nClass AuthenticationCommandHandler;\n", "des": "REST authentication command."}
{"index": 168, "repo": "ignite-core-2.15.0", "code": "package cache\n\n// Command handler for API requests.\nClass GridCacheCommandHandler;\n// Grid cache metrics for rest.\nClass GridCacheRestMetrics;\n// Adds affinity node ID to cache responses.\nClass GridCacheRestResponse;\n", "des": "REST in-memory data grid commands."}
{"index": 169, "repo": "ignite-core-2.15.0", "code": "package redis\n\n// Command handler.\nInterface GridRedisCommandHandler;\n// Redis connection handler.\nClass GridRedisConnectionCommandHandler;\n// Redis command handler done via REST.\nClass GridRedisRestCommandHandler;\n", "des": "Contains Redis protocol commands."}
{"index": 170, "repo": "ignite-core-2.15.0", "code": "package top\n\n// Command handler for API requests.\nClass GridTopologyCommandHandler;\n", "des": "REST topology commands."}
{"index": 171, "repo": "ignite-core-2.15.0", "code": "package user\n\n// User actions handler.\nClass UserActionCommandHandler;\n", "des": "REST user commands."}
{"index": 172, "repo": "ignite-core-2.15.0", "code": "package version\n\n// Handler for GridRestCommand.VERSION and GridRestCommand.NAME command.\nClass GridVersionCommandHandler;\n", "des": "REST version command."}
{"index": 173, "repo": "ignite-core-2.15.0", "code": "package protocols\n\n// Abstract protocol adapter.\nClass GridRestProtocolAdapter;\n", "des": "REST protocol handlers."}
{"index": 174, "repo": "ignite-core-2.15.0", "code": "package tcp\n\n// Memcached protocol request.\nClass GridMemcachedMessage;\n// Handles memcache requests.\nClass GridTcpMemcachedNioListener;\n// Listener for nio server that handles incoming tcp rest packets.\nClass GridTcpRestNioListener;\n// Parser for extended memcache protocol.\nClass GridTcpRestParser;\n// Header.\nClass GridTcpRestParser.HeaderData;\n// Holder for parser state and temporary buffer.\nClass GridTcpRestParser.ParserState;\n// TCP binary protocol implementation.\nClass GridTcpRestProtocol;\n", "des": "Adapters for TCP-based REST protocols."}
{"index": 175, "repo": "ignite-core-2.15.0", "code": "package request\n\n// \nClass DataStructuresRequest;\n// Grid authentication request.\nClass GridRestAuthenticationRequest;\n// Grid command topology request.\nClass GridRestBaselineRequest;\n// Cache command request descriptor.\nClass GridRestCacheRequest;\n// \nClass GridRestChangeStateRequest;\n// Grid command request of cluster name.\nClass GridRestClusterNameRequest;\n// \nClass GridRestClusterStateRequest;\n// Grid command request of log file.\nClass GridRestLogRequest;\n", "des": "REST requests."}
{"index": 176, "repo": "ignite-core-2.15.0", "code": "package schedule\n\n// No-op implementation of IgniteScheduleProcessorAdapter, throws exception on usage attempt.\nClass IgniteNoopScheduleProcessor;\n// Schedules cron-based execution of grid tasks and closures.\nClass IgniteScheduleProcessorAdapter;\n", "des": "TODO."}
{"index": 177, "repo": "ignite-core-2.15.0", "code": "package segmentation\n\n// Kernal processor responsible for checking network segmentation issues.\nInterface GridSegmentationProcessor;\n", "des": "Segmentation processor."}
{"index": 178, "repo": "ignite-core-2.15.0", "code": "package session\n\n// \nClass GridTaskSessionProcessor;\n", "des": "Session processing package to guarantee reuse of same session object on the same node."}
{"index": 179, "repo": "ignite-core-2.15.0", "code": "package task\n\n// This class defines task processor.\nClass GridTaskProcessor;\n// Grid task worker.\nClass GridTaskWorker<T,R>;\n// \nClass TaskExecutionOptions;\n// Indicates that annotated task should always be loaded with local deployment, ignoring grid source node configuration.\nAnnotation Type GridInternal;\n// Indicates that annotated task is a visor task that was invoked by user.\nAnnotation Type GridVisorManagementTask;\n", "des": "TODO."}
{"index": 180, "repo": "ignite-core-2.15.0", "code": "package timeout\n\n// All objects that can timeout should implement this interface.\nInterface GridTimeoutObject;\n// Wrapper for IgniteSpiTimeoutObject.\nClass GridSpiTimeoutObject;\n// Default implementation for GridTimeoutObject.\nClass GridTimeoutObjectAdapter;\n// Detects timeout events and processes them.\nClass GridTimeoutProcessor;\n", "des": "TODO."}
{"index": 181, "repo": "ignite-core-2.15.0", "code": "package suggestions\n\n// Grid performance suggestions.\nClass GridPerformanceSuggestions;\n// Java Virtual Machine configuration suggestions.\nClass JvmConfigurationSuggestions;\n// Operation System configuration suggestions.\nClass OsConfigurationSuggestions;\n", "des": "Contains classes for configurations suggestions."}
{"index": 182, "repo": "ignite-core-2.15.0", "code": "package util\n\n// Class cache.\nInterface ClassCache;\n// Cleaner interface for java.nio.ByteBuffer.\nInterface DirectBufferCleaner;\n// Iterator over integer primitives.\nInterface GridIntIterator;\n// Makes Iterable as Serializable and is useful for making anonymous serializable iterators.\nInterface GridSerializableIterable<E>;\n// Makes Iterator as Serializable and is useful for making anonymous serializable iterators.\nInterface GridSerializableIterator<E>;\n", "des": "System-wide utility routine and helper classes."}
{"index": 183, "repo": "ignite-core-2.15.0", "code": "package future\n\n// Wraps listener and executes it in specified executor.\nClass AsyncFutureListener<V>;\n// \nClass CountDownFuture;\n// Future composed of multiple inner futures.\nClass GridCompoundFuture<T,R>;\n// Compound future with reducer which accepts and produces results of the same type.\nClass GridCompoundIdentityFuture<T>;\n// Future which waits for embedded future to complete and then asynchronously executes provided closure with embedded future result.\nClass GridEmbeddedFuture<A,B>;\n", "des": "Future related classes."}
{"index": 184, "repo": "ignite-core-2.15.0", "code": "package ipc\n\n// IPC endpoint used for point-to-point communication.\nInterface IpcEndpoint;\n// IPC server endpoint that is capable for client connections accepting.\nInterface IpcServerEndpoint;\n// endpoint factory for inter-process communication.\nClass IpcEndpointFactory;\n// Allows to re-use existing GridNioFilters on IPC (specifically shared memory IPC) communications.\nClass IpcToNioAdapter<T>;\n// IPC endpoint type.\nEnum IpcEndpointType;\n", "des": "IPC utility classes."}
{"index": 185, "repo": "ignite-core-2.15.0", "code": "package loopback\n\n// Loopback IPC endpoint based on socket.\nClass IpcClientTcpEndpoint;\n// Server loopback IPC endpoint.\nClass IpcServerTcpEndpoint;\n", "des": "Loopback IPC utility classes."}
{"index": 186, "repo": "ignite-core-2.15.0", "code": "package gridfunc\n\n// Defines a predicate which accepts a parameter and always returns false\nClass AlwaysFalsePredicate<E>;\n// Defines a predicate which accepts a parameter and always returns true\nClass AlwaysTruePredicate<E>;\n// Reducer which always returns true from IgniteReducer.collect(Object)\nClass AlwaysTrueReducer<T>;\n// Atomic integer factory.\nClass AtomicIntegerFactoryCallable;\n// Cache entry to get-value transformer closure.\nClass CacheEntryGetValueClosure;\n", "des": "Contains utilities classes for GridFunc."}
{"index": 187, "repo": "ignite-core-2.15.0", "code": "package nio\n\n// \nInterface GridCommunicationClient;\n// This interface defines the general element in transformation chain between the nio server and application.\nInterface GridNioFilter;\n// NIO future.\nInterface GridNioFuture<R>;\n// Message reader.\nInterface GridNioMessageReader;\n// Message reader factory.\nInterface GridNioMessageReaderFactory;\n// Message writer.\nInterface GridNioMessageWriter;\n// Message writer factory.\nInterface GridNioMessageWriterFactory;\n", "des": "NIO server interfaces and common utility classes for NIO."}
{"index": 188, "repo": "ignite-core-2.15.0", "code": "package ssl\n\n// \nClass BlockingSslHandler;\n// Implementation of SSL filter using SSLEngine\nClass GridNioSslFilter;\n// \nClass GridSslMeta;\n", "des": "Implementation of Secure Socket Layer filter for NIO server based on SSLEngine class."}
{"index": 189, "repo": "ignite-core-2.15.0", "code": "package scala\n\n// Documentation annotation for Scala.\nAnnotation Type impl;\n", "des": "Scala supporting classes."}
{"index": 190, "repo": "ignite-core-2.15.0", "code": "package test\n\n// Print stream that prints each thread group into a separate buffer.\nClass GridTestPrintStream;\n// Factory that allow to acquire/release Print Stream for test logging.\nClass GridTestPrintStreamFactory;\n", "des": "Contains common utility classes for JUnit integration."}
{"index": 191, "repo": "ignite-core-2.15.0", "code": "package tostring\n\n// Basic string builder over circular buffer.\nClass CircularStringBuilder;\n// Provides auto-generation framework for toString() output.\nClass GridToStringBuilder;\n// \nClass SBLimitedLength;\n// Attach this annotation to a field or a class to indicate that this field or fields of this class should not be included in toString() output.\nAnnotation Type GridToStringExclude;\n", "des": "Common utility classes for threads."}
{"index": 192, "repo": "ignite-core-2.15.0", "code": "package typedef\n\n// Defines alias for IgniteClosure by extending it.\nInterface C1<E1,R>;\n// Defines alias for IgniteBiClosure by extending it.\nInterface C2<E1,E2,R>;\n// Defines alias for GridClosure3 by extending it.\nInterface C3<E1,E2,E3,R>;\n// Defines alias for IgniteInClosure by extending it.\nInterface CI1<T>;\n// Defines alias for IgniteBiInClosure by extending it.\nInterface CI2<E1,E2>;\n// Defines alias for GridInClosure3 by extending it.\nInterface CI3<E1,E2,E3>;\n", "des": "Contains typedefs definitions for frequently used classes."}
{"index": 193, "repo": "ignite-core-2.15.0", "code": "package internal\n\n// Defines internal typedef for GridPlainCallable.\nInterface GPC<T>;\n// Defines internal typedef for GridPlainRunnable.\nInterface GPR;\n// Defines internal typedef for GridArgumentCheck.\nClass A;\n// Defines internal typedef for GridCacheUtils.\nClass CU;\n// Convenience alias for GridDebug class.\nClass D;\n// Defines internal typedef for GridLogThrottle.\nClass LT;\n// Defines internal typedef for GridToStringBuilder.\nClass S;\n// Defines internal typedef for GridStringBuilder.\nClass SB;\n", "des": "Contains internal typedefs."}
{"index": 194, "repo": "ignite-core-2.15.0", "code": "package worker\n\n// This interface defines worker listener.\nInterface GridWorkerListener;\n// Dispatcher of workers' progress which allows us to understand if worker freezes.\nInterface WorkProgressDispatcher;\n// Thread wrapper for standart cycle operations.\nClass CycleThread;\n// Extension to standard Runnable interface.\nClass GridWorker;\n// Future for locally executed closure that defines cancellation logic.\nClass GridWorkerFuture<T>;\n", "des": "Common utility classes for threads."}
{"index": 195, "repo": "ignite-core-2.15.0", "code": "package worker\n\n// MBean that provides control of system workersRegistry.\nClass WorkersControlMXBeanImpl;\n// Workers registry.\nClass WorkersRegistry;\n", "des": "System worker registry and control MBean implementation."}
{"index": 196, "repo": "ignite-core-2.15.0", "code": "package jsr166\n\n// need for java deserialization ConcurrentHashMap8 from old nodes.\nClass ConcurrentHashMap8<K,V>;\n// An unbounded concurrent deque based on linked nodes.\nClass ConcurrentLinkedDeque8<E>;\n// \nClass ConcurrentLinkedDeque8.Node<E>;\n// A hash table supporting full concurrency of retrievals and adjustable expected concurrency for updates.\nClass ConcurrentLinkedHashMap<K,V>;\n// ConcurrentHashMap list entry.\nClass ConcurrentLinkedHashMap.HashEntry<K,V>;\n", "des": "Package contains classes that from JSR166."}
{"index": 197, "repo": "ignite-core-2.15.0", "code": "package mindrot\n\n// BCrypt implements OpenBSD-style Blowfish password hashing using the scheme described in \"A Future-Adaptable Password Scheme\" by Niels Provos and David Mazieres.\nClass BCrypt;\n", "des": "Package contains class that from jbcrypt."}
{"index": 198, "repo": "nutch-2.4", "code": "package api\n\n// \nInterface ConfManager;\n// \nInterface JobManager;\n// \nClass NutchServer;\n// \nEnum JobManager.JobType;\n", "des": "REST API to run and control crawl jobs."}
{"index": 199, "repo": "nutch-2.4", "code": "package impl\n\n// \nClass JobFactory;\n// \nClass JobWorker;\n// \nClass NutchServerPoolExecutor;\n// Configuration manager which holds a map of Configuration type configurations and ids.\nClass RAMConfManager;\n// \nClass RAMJobManager;\n", "des": "Implementations of REST API interfaces."}
{"index": 200, "repo": "nutch-2.4", "code": "package extractor\n\n// \nClass JsoupDocument;\n// \nClass JsoupDocument.DocumentField;\n// \nClass JsoupDocumentReader;\n// \nClass JsoupExtractorConstants;\n", "des": "core package of jsoup-extractor containing XML configuration parser, document structure"}
{"index": 201, "repo": "nutch-2.4", "code": "package normalizer\n\n// \nInterface Normalizable;\n// \nClass SimpleStringNormalizer;\n", "des": "Normalizers for jsoup-extractor"}
{"index": 202, "repo": "nutch-2.4", "code": "package crawl\n\n// This interface defines the contract for implementations that manipulate fetch times and re-fetch intervals.\nInterface FetchSchedule;\n// This class provides common methods for implementations of FetchSchedule.\nClass AbstractFetchSchedule;\n// This class implements an adaptive re-fetch algorithm.\nClass AdaptiveFetchSchedule;\n// \nClass CrawlStatus;\n// \nClass DbUpdateMapper;\n// \nClass DbUpdateReducer;\n// \nClass DbUpdaterJob;\n", "des": "Crawl control code and tools to run the crawler."}
{"index": 203, "repo": "nutch-2.4", "code": "package fetcher\n\n// \nClass FetchEntry;\n// Multi-threaded fetcher.\nClass FetcherJob;\n// Mapper class for Fetcher.\nClass FetcherJob.FetcherMapper;\n// \nClass FetcherReducer;\n", "des": "The Nutch robot."}
{"index": 204, "repo": "nutch-2.4", "code": "package host\n\n// A caching wrapper for the host datastore.\nClass HostDb;\n// Display entries from the hostDB.\nClass HostDbReader;\n// Scans the web table and create host entries for each unique host.\nClass HostDbUpdateJob;\n// Maps each WebPage to a host key.\nClass HostDbUpdateJob.Mapper;\n// Combines all WebPages with the same host key to create a Host object, with some statistics.\nClass HostDbUpdateReducer;\n", "des": "Host database to store metadata per host."}
{"index": 205, "repo": "nutch-2.4", "code": "package indexer\n\n// Extension point for indexing.\nInterface IndexCleaningFilter;\n// Extension point for indexing.\nInterface IndexingFilter;\n// \nInterface IndexWriter;\n// \nClass CleaningJob;\n// \nClass CleaningJob.CleanMapper;\n// \nClass CleaningJob.CleanReducer;\n// Creates and caches IndexCleaningFilter implementing plugins.\nClass IndexCleaningFilters;\n// \nClass IndexerOutputFormat;\n// Creates and caches IndexingFilter implementing plugins.\nClass IndexingFilters;\n", "des": "Index content, configure and run indexing and cleaning jobs to add, update, and delete documents from an index."}
{"index": 206, "repo": "nutch-2.4", "code": "package html\n\n// Add raw HTML content of a document to the index.\nClass HtmlIndexingFilter;\n", "des": "Index raw HTML content."}
{"index": 207, "repo": "nutch-2.4", "code": "package extractor\n\n// \nClass JsoupIndexingFilter;\n", "des": "Indexing filter for jsoup-extractor plugin"}
{"index": 208, "repo": "nutch-2.4", "code": "package elastic\n\n// \nInterface ElasticConstants;\n// \nClass ElasticIndexWriter;\n", "des": "Index writer plugin for Elasticsearch."}
{"index": 209, "repo": "nutch-2.4", "code": "package hbase\n\n// \nClass HBaseIndexWriter;\n// \nClass HBaseMappingReader;\n", "des": "Index writer plugin for Apache HBase."}
{"index": 210, "repo": "nutch-2.4", "code": "package metadata\n\n// A collection of Creative Commons properties names.\nInterface CreativeCommons;\n// A collection of Dublin Core metadata names.\nInterface DublinCore;\n// A collection of Feed property names extracted by the ROME library.\nInterface Feed;\n// A collection of HTTP header names.\nInterface HttpHeaders;\n// A collection of Nutch internal metadata constants.\nInterface Nutch;\n// A multi-valued metadata container.\nClass Metadata;\n", "des": "A Multi-valued Metadata container, and set of constant fields for Nutch Metadata."}
{"index": 211, "repo": "nutch-2.4", "code": "package net\n\n// Interface used to limit which URLs enter Nutch.\nInterface URLFilter;\n// Interface used to convert URLs to normal form and optionally perform substitutions\nInterface URLNormalizer;\n// Checks one given filter or all filters.\nClass URLFilterChecker;\n// Creates and caches URLFilter implementing plugins.\nClass URLFilters;\n// Checks one given normalizer or all normalizers.\nClass URLNormalizerChecker;\n// This class uses a \"chained filter\" pattern to run defined normalizers.\nClass URLNormalizers;\n", "des": "Web-related interfaces: URL filters and normalizers."}
{"index": 212, "repo": "nutch-2.4", "code": "package protocols\n\n// A response interface.\nInterface Response;\n// class to handle HTTP dates.\nClass HttpDateFormat;\n// Use ProtocolException instead.\nClass ProtocolException;\n", "des": "Helper classes related to the Protocol interface, sea also org.apache.nutch.protocol."}
{"index": 213, "repo": "nutch-2.4", "code": "package parse\n\n// Extension point for DOM-based parsers.\nInterface ParseFilter;\n// A parser for content generated by a Protocol implementation.\nInterface Parser;\n// \nInterface ParseStatusCodes;\n// This class holds the information about HTML \"meta\" tags extracted from a page.\nClass HTMLMetaTags;\n// \nClass NutchSitemapParse;\n// \nClass NutchSitemapParser;\n// \nClass Outlink;\n// Extractor to extract Outlinks / URLs from plain text using Regular Expressions.\nClass OutlinkExtractor;\n// \nClass Parse;\n", "des": "The Parse interface and related classes."}
{"index": 214, "repo": "nutch-2.4", "code": "package extractor\n\n// \nClass JsoupHtmlParser;\n// \nClass TestJsoupHtmlParser;\n// \nClass ViewCountNormalizer;\n", "des": "Parse filter based on Jsoup"}
{"index": 215, "repo": "nutch-2.4", "code": "package plugin\n\n// \nInterface FieldPluggable;\n// Defines the capability of a class to be plugged into Nutch.\nInterface Pluggable;\n// An Extension is a kind of listener descriptor that will be installed on a concrete ExtensionPoint that acts as kind of Publisher.\nClass Extension;\n// The ExtensionPoint provide meta information of a extension point.\nClass ExtensionPoint;\n", "des": "The Nutch Plugin System."}
{"index": 216, "repo": "nutch-2.4", "code": "package protocol\n\n// A retriever of url content.\nInterface Protocol;\n// \nInterface ProtocolStatusCodes;\n// This class holds the rules which were parsed from a robots.txt file, and can test paths against those rules.\nInterface RobotRules;\n// \nClass Content;\n// Creates and caches Protocol plugins.\nClass ProtocolFactory;\n// Simple aggregate to pass from protocol plugins both content and protocol status.\nClass ProtocolOutput;\n// \nClass ProtocolStatusUtils;\n", "des": "Classes related to the Protocol interface, see also org.apache.nutch.net.protocols."}
{"index": 217, "repo": "nutch-2.4", "code": "package scoring\n\n// A contract defining behavior of scoring plugins.\nInterface ScoringFilter;\n// \nClass ScoreDatum;\n// Creates and caches ScoringFilter implementing plugins.\nClass ScoringFilters;\n// Specialized exception for errors during scoring.\nClass ScoringFilterException;\n", "des": "The ScoringFilter interface."}
{"index": 218, "repo": "nutch-2.4", "code": "package storage\n\n// Host represents a store of webpages or other data which resides on a server or other computer so that it can be accessed over the Internet\nClass Host;\n// RecordBuilder for Host instances.\nClass Host.Builder;\n// \nClass Host.Tombstone;\n// A nested container representing parse status data captured from invocation of parsers on fetch of a WebPage\nClass ParseStatus;\n// RecordBuilder for ParseStatus instances.\nClass ParseStatus.Builder;\n// \nClass ParseStatus.Tombstone;\n", "des": "Representation (web pages, host metadata) of data in abstracted storage."}
{"index": 219, "repo": "nutch-2.4", "code": "package tools\n\n// \nClass Benchmark;\n// \nClass Benchmark.BenchmarkResults;\n// Utility that converts DMOZ RDF into a flat file of URLs to be injected.\nClass DmozParser;\n// A simple tool that will spin up multiple threads to resolve urls to ip addresses.\nClass ResolveUrls;\n", "des": "Miscellaneous tools."}
{"index": 220, "repo": "nutch-2.4", "code": "package arc\n\n// A input format the reads arc files.\nClass ArcInputFormat;\n// The ArchRecordReader class provides a record reader which reads records from arc files.\nClass ArcRecordReader;\n", "des": "Tools to read the Arc file format."}
{"index": 221, "repo": "nutch-2.4", "code": "package proxy\n\n// \nClass AbstractTestbedHandler;\n// \nClass DelayHandler;\n// \nClass FakeHandler;\n// \nClass LogDebugHandler;\n// \nClass NotFoundHandler;\n// \nClass TestbedProxy;\n// Create links to hosts generated from a pool of numHosts/numPages random names.\nEnum FakeHandler.Mode;\n", "des": "Proxy to benchmark the crawler."}
{"index": 222, "repo": "nutch-2.4", "code": "package util\n\n// Utility class that handles byte arrays, conversions to/from other types, comparisons, hash code generation, manufacturing keys for HashMaps or HashSets, etc.\nClass Bytes;\n// Byte array comparator class.\nClass Bytes.ByteArrayComparator;\n// \nClass CommandRunner;\n// A collection of utility methods for working on deflated data.\nClass DeflateUtils;\n// \nClass DomUtil;\n// A simple class for detecting character encodings.\nClass EncodingDetector;\n", "des": "Miscellaneous utility classes."}
{"index": 223, "repo": "nutch-2.4", "code": "package domain\n\n// Extracts some very basic statistics about domains from the crawldb\nClass DomainStatistics;\n// \nClass DomainStatistics.DomainStatisticsCombiner;\n// \nClass DomainStatistics.DomainStatisticsMapper;\n// \nClass DomainStatistics.DomainStatisticsReducer;\n// This class represents the last part of the host name, which is operated by authoritives, not individuals.\nClass DomainSuffix;\n// Storage class for DomainSuffix objects Note: this class is singleton\nClass DomainSuffixes;\n", "des": "Classes for domain name analysis."}
{"index": 224, "repo": "nutch-2.4", "code": "package webui\n\n// \nClass NutchUiApplication;\n// \nClass NutchUiServer;\n", "des": "Provides classes and interfaces for Web UI"}
{"index": 225, "repo": "nutch-2.4", "code": "package client\n\n// \nInterface NutchClient;\n// \nClass NutchClientFactory;\n", "des": "Provides client classes and interfaces for Web UI"}
{"index": 226, "repo": "nutch-2.4", "code": "package impl\n\n// \nInterface CrawlingCycleListener;\n// This class implements crawl cycle as in crawl script\nClass CrawlingCycle;\n// \nClass NutchClientImpl;\n// \nClass RemoteCommand;\n// \nClass RemoteCommandBuilder;\n// This class executes remote job and waits for success/failure result\nClass RemoteCommandExecutor;\n// \nClass RemoteCommandsBatchFactory;\n", "des": "Contains implementation of client classes and interfaces for Web UI"}
{"index": 227, "repo": "nutch-2.4", "code": "package model\n\n// \nClass Crawl;\n// \nClass JobConfig;\n// \nClass JobInfo;\n// \nClass NutchStatus;\n// \nEnum ConnectionStatus;\n// \nEnum Crawl.CrawlStatus;\n// \nEnum JobInfo.JobType;\n// \nEnum JobInfo.State;\n", "des": "Contains model classes of client for Web UI"}
{"index": 228, "repo": "nutch-2.4", "code": "package config\n\n// \nClass CustomDaoFactory;\n// \nClass CustomTableCreator;\n// \nClass NutchGuiConfiguration;\n// \nClass SpringConfiguration;\n", "des": "Contains config classes for Web UI"}
{"index": 229, "repo": "nutch-2.4", "code": "package model\n\n// \nClass NutchConfig;\n// \nClass NutchInstance;\n// \nClass SeedList;\n// \nClass SeedUrl;\n", "des": "Contains model classes for Web UI"}
{"index": 230, "repo": "nutch-2.4", "code": "package pages\n\n// \nClass AbstractBasePage<T>;\n// \nClass DashboardPage;\n// \nClass LogOutPage;\n// \nClass SchedulingPage;\n// \nClass SearchPage;\n// \nClass StatisticsPage;\n// \nClass UrlsUploadPage;\n// \nClass UserSettingsPage;\n", "des": "Provides classes and interfaces of pages for Web UI"}
{"index": 231, "repo": "nutch-2.4", "code": "package assets\n\n// \nClass NutchUiCssReference;\n", "des": "Contains asset classes for Web UI"}
{"index": 232, "repo": "nutch-2.4", "code": "package auth\n\n// Marker interface for secured pages.\nInterface AuthenticatedWebPage;\n// Authorization strategy to check whether to allow a page or not.\nClass AuthorizationStrategy;\n// Sign in page implementation.\nClass SignInPage;\n// Checks for whether authenticate or not.\nClass SignInSession;\n// User bean for authentication.\nClass User;\n", "des": "Contains authorization classes for Web UI"}
{"index": 233, "repo": "nutch-2.4", "code": "package components\n\n// Label which renders connection status as bootstrap label\nClass ColorEnumLabel<E extends java.lang.Enum<E>>;\n// \nClass ColorEnumLabelBuilder<E extends java.lang.Enum<E>>;\n// This is iterator adapter, which wraps iterable items with CompoundPropertyModel.\nClass CpmIteratorAdapter<T>;\n", "des": "Contains component classes for Web UI"}
{"index": 234, "repo": "nutch-2.4", "code": "package crawls\n\n// \nClass CrawlPanel;\n// This page is for crawls management\nClass CrawlsPage;\n", "des": "Contains crawl page classes for Web UI"}
{"index": 235, "repo": "nutch-2.4", "code": "package instances\n\n// \nClass InstancePanel;\n// \nClass InstancesPage;\n", "des": "Contains instances pages classes for Web UI"}
{"index": 236, "repo": "nutch-2.4", "code": "package menu\n\n// \nClass VerticalMenu;\n", "des": "Contains menu page classes for Web UI"}
{"index": 237, "repo": "nutch-2.4", "code": "package seed\n\n// This page is for seed lists management\nClass SeedListsPage;\n// This page is for seed urls management\nClass SeedPage;\n", "des": "Contains seed pages' classes for Web UI"}
{"index": 238, "repo": "nutch-2.4", "code": "package settings\n\n// \nClass SettingsPage;\n", "des": "Contains settings page classes for Web UI"}
{"index": 239, "repo": "nutch-2.4", "code": "package service\n\n// \nInterface CrawlService;\n// \nInterface NutchInstanceService;\n// \nInterface NutchService;\n// \nInterface SeedListService;\n", "des": "Provides service classes and interfaces for Web UI"}
{"index": 240, "repo": "nutch-2.4", "code": "package impl\n\n// \nClass CrawlServiceImpl;\n// \nClass NutchInstanceServiceImpl;\n// \nClass NutchServiceImpl;\n// \nClass SeedListServiceImpl;\n", "des": "Contains service implementation classes for Web UI"}
{"index": 241, "repo": "nutch-2.4", "code": "package api\n\n// \nClass HttpBase;\n// This class is used for parsing robots for urls belonging to HTTP protocol.\nClass HttpRobotRulesParser;\n// \nClass BlockedException;\n// \nClass HttpException;\n", "des": "Common API used by HTTP plugins (http, httpclient)"}
{"index": 242, "repo": "nutch-2.4", "code": "package api\n\n// A generic regular expression rule.\nClass RegexRule;\n// Generic URL filter based on regular expressions.\nClass RegexURLFilterBase;\n", "des": "Generic URL filter library, abstracting away from regular expression implementations."}
{"index": 243, "repo": "nutch-2.4", "code": "package file\n\n// This class is a protocol plugin used for file: scheme.\nClass File;\n// FileResponse.java mimics file replies as http response.\nClass FileResponse;\n// Thrown for File error codes.\nClass FileError;\n// \nClass FileException;\n", "des": "Protocol plugin which supports retrieving local file resources."}
{"index": 244, "repo": "nutch-2.4", "code": "package ftp\n\n// Client.java encapsulates functionalities necessary for nutch to get dir list and retrieve file from an FTP server.\nClass Client;\n// This class is a protocol plugin used for ftp: scheme.\nClass Ftp;\n// FtpResponse.java mimics ftp replies as http response.\nClass FtpResponse;\n// This class is used for parsing robots for urls belonging to FTP protocol.\nClass FtpRobotRulesParser;\n// This is a support class for logging all ftp command/reply traffic.\nClass PrintCommandListener;\n", "des": "Protocol plugin which supports retrieving documents via the ftp protocol."}
{"index": 245, "repo": "nutch-2.4", "code": "package http\n\n// \nClass Http;\n// An HTTP response.\nClass HttpResponse;\n// \nEnum HttpResponse.Scheme;\n", "des": "Protocol plugin which supports retrieving documents via the http protocol."}
{"index": 246, "repo": "nutch-2.4", "code": "package httpclient\n\n// The base level of services required for Http Authentication\nInterface HttpAuthentication;\n// \nClass DummySSLProtocolSocketFactory;\n// \nClass DummyX509TrustManager;\n// This class is a protocol plugin that configures an HTTP client for Basic, Digest and NTLM authentication schemes for web server as well as proxy server.\nClass Http;\n// Provides the Http protocol implementation with the ability to authenticate when prompted.\nClass HttpAuthenticationFactory;\n", "des": "Protocol plugin which supports retrieving documents via the HTTP and HTTPS protocols, optionally with Basic, Digest and NTLM authentication schemes for web server as well as proxy server."}
{"index": 247, "repo": "nutch-2.4", "code": "package sftp\n\n// This class uses the Jsch package to fetch content using the Sftp protocol.\nClass Sftp;\n", "des": "Protocol plugin which supports retrieving documents via the sftp protocol."}
{"index": 248, "repo": "nutch-2.4", "code": "package automaton\n\n// RegexURLFilterBase implementation based on the dk.brics.automaton Finite-State Automata for JavaTM.\nClass AutomatonURLFilter;\n", "des": "URL filter plugin based on dk.brics.automaton Finite-State Automata for JavaTM."}
{"index": 249, "repo": "nutch-2.4", "code": "package domain\n\n// Filters URLs based on a file containing domain suffixes, domain names, and hostnames.\nClass DomainURLFilter;\n", "des": "URL filter plugin to include only URLs which match an element in a given list of domain suffixes, domain names, and/or host names."}
{"index": 250, "repo": "nutch-2.4", "code": "package prefix\n\n// Filters URLs based on a file of URL prefixes.\nClass PrefixURLFilter;\n", "des": "URL filter plugin to include only URLs which match one of a given list of URL prefixes."}
{"index": 251, "repo": "nutch-2.4", "code": "package regex\n\n// Filters URLs based on a file of regular expressions using the Java Regex implementation.\nClass RegexURLFilter;\n", "des": "URL filter plugin to include and/or exclude URLs matching Java regular expressions."}
{"index": 252, "repo": "nutch-2.4", "code": "package suffix\n\n// Filters URLs based on a file of URL suffixes.\nClass SuffixURLFilter;\n", "des": "URL filter plugin to either exclude or include only URLs which match one of the given (path) suffixes."}
{"index": 253, "repo": "nutch-2.4", "code": "package validator\n\n// Validates URLs.\nClass UrlValidator;\n", "des": "URL filter plugin that validates given urls."}
{"index": 254, "repo": "nutch-2.4", "code": "package basic\n\n// Converts URLs to a normal form: remove dot segments in path: /./ or /../ remove default ports, e.g.\nClass BasicURLNormalizer;\n", "des": "URL normalizer performing basic normalizations: remove default ports and dot segments in path."}
{"index": 255, "repo": "nutch-2.4", "code": "package pass\n\n// This URLNormalizer doesn't change urls.\nClass PassURLNormalizer;\n", "des": "URL normalizer dummy which does not change URLs."}
{"index": 256, "repo": "nutch-2.4", "code": "package regex\n\n// Allows users to do regex substitutions on all/any URLs that are encountered, which is useful for stripping session IDs from URLs.\nClass RegexURLNormalizer;\n", "des": "URL normalizer with configurable rules based on regular expressions (Pattern)."}
{"index": 257, "repo": "nutch-2.4", "code": "package link\n\n// \nClass LinkAnalysisScoringFilter;\n", "des": "Scoring filter"}
{"index": 258, "repo": "nutch-2.4", "code": "package opic\n\n// This plugin implements a variant of an Online Page Importance Computation (OPIC) score, described in this paper: Abiteboul, Serge and Preda, Mihai and Cobena, Gregory (2003), Adaptive On-Line Page Importance Computation .\nClass OPICScoringFilter;\n", "des": "Scoring filter implementing a variant of the Online Page Importance Computation (OPIC) algorithm."}
{"index": 259, "repo": "nutch-2.4", "code": "package tld\n\n// Scoring filter to boost tlds.\nClass TLDScoringFilter;\n", "des": "Top Level Domain Scoring plugin."}
{"index": 260, "repo": "nutch-2.4", "code": "package html\n\n// This class takes SAX events (in addition to some extra events that SAX doesn't handle yet) and adds the result to a document or document fragment.\nClass DOMBuilder;\n// A collection of methods for extracting content from DOM trees.\nClass DOMContentUtils;\n// \nClass DOMContentUtils.LinkParams;\n// Class for parsing META Directives from DOM trees.\nClass HTMLMetaProcessor;\n// \nClass HtmlParser;\n", "des": "An HTML document parsing plugin."}
{"index": 261, "repo": "nutch-2.4", "code": "package js\n\n// This class is a heuristic link extractor for JavaScript files and code snippets.\nClass JSParseFilter;\n", "des": "Parser and parse filter plugin to extract all (possible) links from JavaScript files and embedded JavaScript code snippets."}
{"index": 262, "repo": "nutch-2.4", "code": "package tika\n\n// A collection of methods for extracting content from DOM trees.\nClass DOMContentUtils;\n// Class for parsing META Directives from DOM trees.\nClass HTMLMetaProcessor;\n// Wrapper for Tika parsers.\nClass TikaParser;\n", "des": "Parse various document formats with help of Apache Tika."}
{"index": 263, "repo": "nutch-2.4", "code": "package metatags\n\n// Parse HTML meta tags (keywords, description) and store them in the parse metadata so that they can be indexed with the index-metadata plugin with the prefix 'metatag.'.\nClass MetaTagsParser;\n", "des": "Parse filter to extract meta tags: keywords, description, etc."}
{"index": 264, "repo": "nutch-2.4", "code": "package anchor\n\n// Indexing filter that offers an option to either index all inbound anchor text for a document or deduplicate anchors.\nClass AnchorIndexingFilter;\n", "des": "An indexing plugin for inbound anchor text."}
{"index": 265, "repo": "nutch-2.4", "code": "package basic\n\n// Adds basic searchable fields to a document.\nClass BasicIndexingFilter;\n", "des": "A basic indexing plugin, adds basic fields: url, host, title, content, etc."}
{"index": 266, "repo": "nutch-2.4", "code": "package metadata\n\n// Indexer which can be configured to extract metadata from the crawldb, parse metadata or content metadata.\nClass MetadataIndexer;\n", "des": "Indexing filter to add document metadata to the index."}
{"index": 267, "repo": "nutch-2.4", "code": "package more\n\n// Add (or reset) a few metaData properties as respective fields (if they are available), so that they can be accurately used within the search index.\nClass MoreIndexingFilter;\n", "des": "A more indexing plugin, adds \"more\" index fields: last modified date, MIME type, content length."}
{"index": 268, "repo": "nutch-2.4", "code": "package subcollection\n\n// \nClass SubcollectionIndexingFilter;\n", "des": "Indexing filter to assign documents to subcollections."}
{"index": 269, "repo": "nutch-2.4", "code": "package tld\n\n// Adds the Top level domain extensions to the index\nClass TLDIndexingFilter;\n", "des": "Top Level Domain Indexing plugin."}
{"index": 270, "repo": "nutch-2.4", "code": "package solr\n\n// \nInterface SolrConstants;\n// \nClass SolrIndexWriter;\n// \nClass SolrMappingReader;\n// \nClass SolrUtils;\n", "des": "Index writer plugin for Apache Solr."}
{"index": 271, "repo": "nutch-2.4", "code": "package lang\n\n// Adds metadata identifying language of document if found We could also run statistical analysis here but we'd miss all other formats\nClass HTMLLanguageParser;\n// An IndexingFilter that adds a lang (language) field to the document.\nClass LanguageIndexingFilter;\n", "des": "Text document language identifier."}
{"index": 272, "repo": "nutch-2.4", "code": "package collection\n\n// \nClass CollectionManager;\n// SubCollection represents a subset of index, you can define url patterns that will indicate that particular page (url) is part of SubCollection.\nClass Subcollection;\n", "des": "Subcollection is a subset of an index."}
{"index": 273, "repo": "nutch-2.4", "code": "package reltag\n\n// An IndexingFilter that adds tag field(s) to the document.\nClass RelTagIndexingFilter;\n// Adds microformat rel-tags of document if found.\nClass RelTagParser;\n", "des": "A microformats Rel-Tag Parser/Indexer/Querier plugin."}
{"index": 274, "repo": "nutch-2.4", "code": "package nutch\n\n// Adds basic searchable fields to a document.\nClass CCIndexingFilter;\n// Adds metadata identifying the Creative Commons license used, if any.\nClass CCParseFilter;\n// Walks DOM tree, looking for RDF in comments and licenses in anchors.\nClass CCParseFilter.Walker;\n", "des": "Sample plugins that parse and index Creative Commons medadata."}
{"index": 275, "repo": "pdfbox-3.0.0-beta1", "code": "package contentstream\n\n// A content stream.\nInterface PDContentStream;\n// PDFStreamEngine subclass for advanced processing of graphics.\nClass PDFGraphicsStreamEngine;\n// Processes a PDF content stream and executes certain operations.\nClass PDFStreamEngine;\n", "des": "This package contains provides classes for working with content streams."}
{"index": 276, "repo": "pdfbox-3.0.0-beta1", "code": "package operator\n\n// Do: Draws an XObject.\nClass DrawObject;\n// An Operator in a PDF content stream.\nClass Operator;\n// \nClass OperatorName;\n// Processes a PDF operator.\nClass OperatorProcessor;\n// Throw when a PDF operator is missing required operands.\nClass MissingOperandException;\n", "des": "This package contains implementations of all of the PDF operators."}
{"index": 277, "repo": "pdfbox-3.0.0-beta1", "code": "package graphics\n\n// re Appends a rectangle to the path.\nClass AppendRectangleToPath;\n// BI Begins an inline image.\nClass BeginInlineImage;\n// W* Set clipping path using even odd rule.\nClass ClipEvenOddRule;\n// W Set the clipping path using non zero winding rule.\nClass ClipNonZeroRule;\n// s: close and stroke the path.\nClass CloseAndStrokePath;\n// b* Close, fill and stroke the path with even-odd winding rule.\nClass CloseFillEvenOddAndStrokePath;\n", "des": "This package contains implementations of all of the PDF graphics operators."}
{"index": 278, "repo": "pdfbox-3.0.0-beta1", "code": "package cos\n\n// \nInterface COSUpdateInfo;\n// \nInterface ICOSParser;\n// An interface for visiting a PDF document at the type (COS) level.\nInterface ICOSVisitor;\n// An array of PDFBase objects as part of the PDF document.\nClass COSArray;\n// The base object that all objects in the PDF document will extend.\nClass COSBase;\n// This class represents a boolean value in the PDF document.\nClass COSBoolean;\n// This class represents a dictionary where name/value pairs reside.\nClass COSDictionary;\n", "des": "These are the low level objects that make up a PDF document."}
{"index": 279, "repo": "pdfbox-3.0.0-beta1", "code": "package filter\n\n// Options that may be passed to a Filter to request special handling when decoding the stream.\nClass DecodeOptions;\n// The result of a filter decode operation.\nClass DecodeResult;\n// A filter for stream data.\nClass Filter;\n// Factory for Filter classes.\nClass FilterFactory;\n// Decompress data encoded using the wavelet-based JPEG 2000 standard, reproducing the original data.\nClass JPXFilter;\n// This is the filter used for the LZWDecode filter.\nClass LZWFilter;\n", "des": "This package will hold the PDFBox implementations of the filters that are used in PDF documents."}
{"index": 280, "repo": "pdfbox-3.0.0-beta1", "code": "package pdfparser\n\n// This class is used to contain parsing logic that will be used by all parsers.\nClass BaseParser;\n// Brute force parser to be used as last resort if a malformed pdf can't be read.\nClass BruteForceParser;\n// COS-Parser which first reads startxref and xref tables in order to know valid objects and parse only these objects.\nClass COSParser;\n// \nClass FDFParser;\n", "des": "The pdfparser package contains classes to parse PDF documents and objects within the document."}
{"index": 281, "repo": "pdfbox-3.0.0-beta1", "code": "package pdfwriter\n\n// A class that will take a list of tokens and write out a stream with them.\nClass ContentStreamWriter;\n// simple output stream with some minor features for generating \"pretty\" PDF files.\nClass COSStandardOutputStream;\n// This class acts on a in-memory representation of a PDF document.\nClass COSWriter;\n", "des": "This is the persistence layer used to write the PDFBox documents to a stream."}
{"index": 282, "repo": "pdfbox-3.0.0-beta1", "code": "package pdmodel\n\n// A document-wide cache for page resources.\nInterface ResourceCache;\n// A resource cached based on SoftReference, retains resources until memory pressure causes them to be garbage collected.\nClass DefaultResourceCache;\n// Provides the ability to write to an appearance content stream.\nClass PDAppearanceContentStream;\n// This class holds all of the name trees that are available at the document level.\nClass PDDestinationNameTreeNode;\n", "des": "The PDModel package represents a high level API for creating and manipulating PDF documents."}
{"index": 283, "repo": "pdfbox-3.0.0-beta1", "code": "package common\n\n// This is an interface used to get/create the underlying COSObject.\nInterface COSObjectable;\n// This is an interface used for some elements such as the document OpenAction that can be either a Destination or an Action.\nInterface PDDestinationOrAction;\n// This is an implementation of a List that will sync its contents to a COSArray.\nClass COSArrayList<E>;\n// This is a Map that will automatically sync the contents to a COSDictionary.\nClass COSDictionaryMap<K,V>;\n", "des": "High level PD classes that are used throughout several packages are placed in the PDModel common package."}
{"index": 284, "repo": "pdfbox-3.0.0-beta1", "code": "package filespecification\n\n// This represents a file specification.\nClass PDComplexFileSpecification;\n// This represents an embedded file in a file specification.\nClass PDEmbeddedFile;\n// This represents a file specification.\nClass PDFileSpecification;\n// A file specification that is just a string.\nClass PDSimpleFileSpecification;\n", "des": "The file specification package defines classes that are used for the PDF File Specification logic."}
{"index": 285, "repo": "pdfbox-3.0.0-beta1", "code": "package function\n\n// This class represents a function in a PDF document.\nClass PDFunction;\n// This class represents a type 0 function in a PDF document.\nClass PDFunctionType0;\n// This class represents a Type 2 (exponential interpolation) function in a PDF document.\nClass PDFunctionType2;\n// This class represents a Type 3 (stitching) function in a PDF document.\nClass PDFunctionType3;\n// This class represents a Type 4 (PostScript calculator) function in a PDF document.\nClass PDFunctionType4;\n", "des": "This package contains functions that are available in the PDF specification."}
{"index": 286, "repo": "pdfbox-3.0.0-beta1", "code": "package type4\n\n// Interface for PostScript operators.\nInterface Operator;\n// This interface defines all possible syntactic elements of a Type 4 function.\nInterface Parser.SyntaxHandler;\n// Makes up the execution context, holding the available operators and the execution stack.\nClass ExecutionContext;\n// Represents an instruction sequence, a combination of values, operands and nested procedures.\nClass InstructionSequence;\n", "des": "This package contains Type 4 function support."}
{"index": 287, "repo": "pdfbox-3.0.0-beta1", "code": "package logicalstructure\n\n// An attribute object.\nClass PDAttributeObject;\n// A default attribute object.\nClass PDDefaultAttributeObject;\n// A marked-content reference.\nClass PDMarkedContentReference;\n// The MarkInfo provides additional information relevant to specialized uses of structured documents.\nClass PDMarkInfo;\n// An object reference.\nClass PDObjectReference;\n// Described in the PDF specification in the ParentTree segment of the table \"Entries in the structure tree root\".\nClass PDParentTreeValue;\n", "des": "The logical structure package provides a mechanism for incorporating structural information about a document's content into a PDF file."}
{"index": 288, "repo": "pdfbox-3.0.0-beta1", "code": "package markedcontent\n\n// A marked content.\nClass PDMarkedContent;\n// A property list is a dictionary containing private information meaningful to the conforming writer creating the marked content.\nClass PDPropertyList;\n", "des": "The marked content package provides a mechanism for modeling marked-content sequences."}
{"index": 289, "repo": "pdfbox-3.0.0-beta1", "code": "package prepress\n\n// The Box Style specifies visual characteristics for displaying box areas.\nClass PDBoxStyle;\n", "des": "This package contains classes for prepress support in PDFBox."}
{"index": 290, "repo": "pdfbox-3.0.0-beta1", "code": "package taggedpdf\n\n// An artifact marked content.\nClass PDArtifactMarkedContent;\n// An Export Format attribute object.\nClass PDExportFormatAttributeObject;\n// An object for four colours.\nClass PDFourColours;\n// A Layout attribute object.\nClass PDLayoutAttributeObject;\n// A List attribute object.\nClass PDListAttributeObject;\n// A PrintField attribute object.\nClass PDPrintFieldAttributeObject;\n// A standard attribute object.\nClass PDStandardAttributeObject;\n", "des": "The tagged PDF package provides a mechanism for incorporating \"tags\" (standard structure types and attributes) into a PDF file."}
{"index": 291, "repo": "pdfbox-3.0.0-beta1", "code": "package encryption\n\n// This class represents the access permissions to a document.\nClass AccessPermission;\n// This class represents data required to decrypt PDF documents.\nClass DecryptionMaterial;\n// This class is a specialized view of the crypt filter dictionary of a PDF document.\nClass PDCryptFilterDictionary;\n// This class is a specialized view of the encryption dictionary of a PDF document.\nClass PDEncryption;\n", "des": "The encryption package will handle the PDF document security handlers and the functionality of pluggable security handlers."}
{"index": 292, "repo": "pdfbox-3.0.0-beta1", "code": "package fdf\n\n// This represents an FDF annotation that is part of the FDF document.\nClass FDFAnnotation;\n// This represents a Caret FDF annotation.\nClass FDFAnnotationCaret;\n// This represents a Circle FDF annotation.\nClass FDFAnnotationCircle;\n// This represents a FileAttachment FDF annotation.\nClass FDFAnnotationFileAttachment;\n// This represents a FreeText FDF annotation.\nClass FDFAnnotationFreeText;\n// This represents a Highlight FDF annotation.\nClass FDFAnnotationHighlight;\n", "des": "The fdf package will handle all of the logic used for FDF objects inside of the PDF/FDF document."}
{"index": 293, "repo": "pdfbox-3.0.0-beta1", "code": "package font\n\n// Font mapper, locates non-embedded fonts.\nInterface FontMapper;\n// A font-like object.\nInterface PDFontLike;\n// A vector outline font, e.g.\nInterface PDVectorFont;\n// A CIDFontMapping is a kind of FontMapping which allows for an additional TrueTypeFont substitute to be provided if a CID font is not available.\nClass CIDFontMapping;\n// Represents a CIDSystemInfo for the FontMapper API.\nClass CIDSystemInfo;\n// An in-memory cache for system fonts.\nClass FontCache;\n", "des": "Classes to deal with font functionality in a PDF Document."}
{"index": 294, "repo": "pdfbox-3.0.0-beta1", "code": "package graphics\n\n// This class represents a font setting used for the graphics state.\nClass PDFontSetting;\n// A line dash pattern for stroking paths.\nClass PDLineDashPattern;\n// A PostScript XObject.\nClass PDPostScriptXObject;\n// An external object, or \"XObject\".\nClass PDXObject;\n", "des": "The PDModel graphics package deals with graphics states, operations, and parameters within the PDF document."}
{"index": 295, "repo": "pdfbox-3.0.0-beta1", "code": "package color\n\n// A CalGray colour space is a special case of a single-component CIE-based colour space.\nClass PDCalGray;\n// A CalRGB colour space is a CIE-based colour space with one transformation stage instead of two.\nClass PDCalRGB;\n// CIE-based colour spaces specify colours in a way that is independent of the characteristics of any particular output device.\nClass PDCIEBasedColorSpace;\n// CIE-based colour spaces that use a dictionary.\nClass PDCIEDictionaryBasedColorSpace;\n", "des": "This package deals with colors that are stored in a PDF document."}
{"index": 296, "repo": "pdfbox-3.0.0-beta1", "code": "package form\n\n// A Form XObject.\nClass PDFormXObject;\n// A transparency group.\nClass PDTransparencyGroup;\n// Transparency group attributes.\nClass PDTransparencyGroupAttributes;\n", "des": "This package deals with Form XObjects that are stored in a PDF document."}
{"index": 297, "repo": "pdfbox-3.0.0-beta1", "code": "package image\n\n// An image in a PDF document.\nInterface PDImage;\n// Factory for creating a PDImageXObject containing a CCITT Fax compressed TIFF image.\nClass CCITTFactory;\n// Factory for creating a PDImageXObject containing a JPEG compressed image.\nClass JPEGFactory;\n// Factory for creating a PDImageXObject containing a lossless compressed image.\nClass LosslessFactory;\n// An Image XObject.\nClass PDImageXObject;\n", "des": "This package deals with images that are stored in a PDF document."}
{"index": 298, "repo": "pdfbox-3.0.0-beta1", "code": "package pattern\n\n// This class wraps a pattern dictionary.\nClass PDAbstractPattern;\n// A shading pattern dictionary.\nClass PDShadingPattern;\n// A tiling pattern dictionary.\nClass PDTilingPattern;\n", "des": "This package deals with patterns which are used instead of colors."}
{"index": 299, "repo": "pdfbox-3.0.0-beta1", "code": "package shading\n\n// AWT PaintContext for axial shading.\nClass AxialShadingContext;\n// AWT Paint for axial shading.\nClass AxialShadingPaint;\n// A Shading Resource.\nClass PDShading;\n// Resources for a function based shading.\nClass PDShadingType1;\n// Resources for an axial shading.\nClass PDShadingType2;\n// Resources for a radial shading.\nClass PDShadingType3;\n// Resources for a shading type 4 (Free-Form Gouraud-Shaded Triangle Mesh).\nClass PDShadingType4;\n", "des": "This package deals with shadings which are used for filling instead of a color."}
{"index": 300, "repo": "pdfbox-3.0.0-beta1", "code": "package state\n\n// An extended graphics state dictionary.\nClass PDExtendedGraphicsState;\n// The current state of the graphics parameters when executing a content stream.\nClass PDGraphicsState;\n// Soft mask.\nClass PDSoftMask;\n// This class will hold the current state of the text parameters when executing a content stream.\nClass PDTextState;\n// Rendering intent.\nEnum RenderingIntent;\n// Text Rendering Mode.\nEnum RenderingMode;\n", "des": "This package deals with graphics states within the PDF document."}
{"index": 301, "repo": "pdfbox-3.0.0-beta1", "code": "package action\n\n// This represents an action that can be executed in a PDF document.\nClass PDAction;\n// This represents a embedded go-to action that can be executed in a PDF document.\nClass PDActionEmbeddedGoTo;\n// This class will take a dictionary and determine which type of action to create.\nClass PDActionFactory;\n// This represents a go-to action that can be executed in a PDF document.\nClass PDActionGoTo;\n// This represents a thread action that can be executed in a PDF document.\nClass PDActionHide;\n", "des": "This package represents actions that can be performed in a PDF document."}
{"index": 302, "repo": "pdfbox-3.0.0-beta1", "code": "package annotation\n\n// Simple interface allowing the use of an annotation filter visitor.\nInterface AnnotationFilter;\n// A PDF annotation.\nClass PDAnnotation;\n// \nClass PDAnnotationCaret;\n// \nClass PDAnnotationCircle;\n// This is the class that represents a file attachment.\nClass PDAnnotationFileAttachment;\n// \nClass PDAnnotationFreeText;\n// \nClass PDAnnotationHighlight;\n// \nClass PDAnnotationInk;\n// This is the class that represents a line annotation.\nClass PDAnnotationLine;\n", "des": "The annotation package contains classes that work with PDF annotation elements."}
{"index": 303, "repo": "pdfbox-3.0.0-beta1", "code": "package digitalsignature\n\n// Interface for external signature creation scenarios.\nInterface ExternalSigningSupport;\n// Providing an interface for accessing necessary functions for signing a PDF document.\nInterface SignatureInterface;\n// A filtered stream that includes the bytes that are in the (begin,length) intervals passed in the constructor.\nClass COSFilterInputStream;\n// A signature build dictionary as specified in the PDF Signature Build Dictionary Specification.\nClass PDPropBuild;\n", "des": "The digital signature library will manage signatures that are stored in the PDF document."}
{"index": 304, "repo": "pdfbox-3.0.0-beta1", "code": "package visible\n\n// That class builds visible signature template which will be added in our PDF document.\nInterface PDFTemplateBuilder;\n// Class to build PDF template.\nClass PDFTemplateCreator;\n// Structure of PDF document with visible signature.\nClass PDFTemplateStructure;\n// Implementation of PDFTemplateBuilder.\nClass PDVisibleSigBuilder;\n// Class for visible signature design properties.\nClass PDVisibleSignDesigner;\n", "des": "This is the visual signature part that help creating the visual representation for the digital signature."}
{"index": 305, "repo": "pdfbox-3.0.0-beta1", "code": "package destination\n\n// This represents a destination in a PDF document.\nClass PDDestination;\n// This represents a destination to a page by referencing it with a name.\nClass PDNamedDestination;\n// This represents a destination to a page, see subclasses for specific parameters.\nClass PDPageDestination;\n// This represents a destination to a page and the page contents will be magnified to just fit on the screen.\nClass PDPageFitDestination;\n", "des": "The destination package allows destinations into a pdf document to be specified."}
{"index": 306, "repo": "pdfbox-3.0.0-beta1", "code": "package outline\n\n// This represents an outline in a pdf document.\nClass PDDocumentOutline;\n// This represents an outline item in a pdf document.\nClass PDOutlineItem;\n// Base class for a node in the outline of a PDF document.\nClass PDOutlineNode;\n", "des": "The outline package allows for a PDF outline(bookmarks) to be created."}
{"index": 307, "repo": "pdfbox-3.0.0-beta1", "code": "package form\n\n// \nInterface ScriptingHandler;\n// A set of utility methods to help with common AcroForm form and field related functions.\nClass FieldUtils;\n// An interactive form, also known as an AcroForm.\nClass PDAcroForm;\n// A button field represents an interactive control on the screen that the user can manipulate with the mouse.\nClass PDButton;\n// A check box toggles between two states, on and off.\nClass PDCheckBox;\n", "des": "The interactive package contains classes for handling Interactive Forms, also known as \"AcroForms\"."}
{"index": 308, "repo": "pdfbox-3.0.0-beta1", "code": "package measurement\n\n// This class represents a measure dictionary.\nClass PDMeasureDictionary;\n// This class represents a number format dictionary.\nClass PDNumberFormatDictionary;\n// This class represents a rectlinear measure dictionary.\nClass PDRectlinearMeasureDictionary;\n// This class represents a viewport dictionary.\nClass PDViewportDictionary;\n", "des": "The measurement package contains classes that work with elements specifying measure properties."}
{"index": 309, "repo": "pdfbox-3.0.0-beta1", "code": "package pagenavigation\n\n// This a single thread in a PDF document.\nClass PDThread;\n// This a single bead in a thread in a PDF document.\nClass PDThreadBead;\n// Represents a page transition as defined in paragraph 12.4.4.1 of PDF 32000-1:2008\nClass PDTransition;\n// The dimension in which the specified transition effect shall occur.\nEnum PDTransitionDimension;\n", "des": "A package to allow provide access to PDF page navigation functionality."}
{"index": 310, "repo": "pdfbox-3.0.0-beta1", "code": "package viewerpreferences\n\n// This is the document viewing preferences.\nClass PDViewerPreferences;\n// Enumeration containing all valid values for boundaries.\nEnum PDViewerPreferences.BOUNDARY;\n// Enumeration containing all valid values for duplex.\nEnum PDViewerPreferences.DUPLEX;\n// Enumeration containing all valid values for NonFullScreenPageMode.\nEnum PDViewerPreferences.NON_FULL_SCREEN_PAGE_MODE;\n// Enumeration containing all valid values for printscaling.\nEnum PDViewerPreferences.PRINT_SCALING;\n", "des": "A package to allow access to document viewing preferences."}
{"index": 311, "repo": "pdfbox-3.0.0-beta1", "code": "package util\n\n// Converts dates to strings and back using the PDF date standard in section 3.8.2 of PDF Reference 1.7.\nClass DateConverter;\n// Utility functions for hex encoding.\nClass Hex;\n// This class provides an iterative (bottom-up) implementation of the MergeSort algorithm for any generic Java object which implements a Comparator.\nClass IterativeMergeSort;\n// This class will be used for matrix manipulation.\nClass Matrix;\n// This class contains methods to format numbers.\nClass NumberFormatUtil;\n", "des": "This package contains utility classes that are used by the PDFBox project."}
{"index": 312, "repo": "commons-geometry-enclosing-1.0-beta1", "code": "package enclosing\n\n// Interface for algorithms computing enclosing balls.\nInterface Encloser<P extends Point<P>>;\n// Interface for generating balls based on support points.\nInterface SupportBallGenerator<P extends Point<P>>;\n// This class represents a ball enclosing some points.\nClass EnclosingBall<P extends Point<P>>;\n// Class implementing Emo Welzl's algorithm to find the smallest enclosing ball in linear time.\nClass WelzlEncloser<P extends Point<P>>;\n", "des": "This package provides interfaces and classes related to the smallest enclosing ball problem."}
{"index": 313, "repo": "commons-geometry-enclosing-1.0-beta1", "code": "package threed\n\n// Class generating a sphere from its support points.\nClass SphereGenerator;\n// Extension of the WelzlEncloser class for Euclidean 3D space.\nClass WelzlEncloser3D;\n", "des": "This package provides classes related to the smallest enclosing ball problem in three dimensions."}
{"index": 314, "repo": "commons-geometry-enclosing-1.0-beta1", "code": "package twod\n\n// Class generating a disk from its support points.\nClass DiskGenerator;\n// Extension of the WelzlEncloser class for Euclidean 2D space.\nClass WelzlEncloser2D;\n", "des": "This package provides classes related to the smallest enclosing ball problem in two dimensions."}
{"index": 315, "repo": "kafka-clients-3.5.0", "code": "package admin\n\n// The administrative client for Kafka, which supports managing and inspecting topics, brokers, configurations and ACLs.\nInterface Admin;\n// \nClass AbortTransactionOptions;\n// The result of Admin.abortTransaction(AbortTransactionSpec, AbortTransactionOptions).\nClass AbortTransactionResult;\n// \nClass AbortTransactionSpec;\n// \nClass AbstractOptions<T extends AbstractOptions>;\n// The base class for in-built admin clients.\nClass AdminClient;\n", "des": "Provides a Kafka client for performing administrative operations (such as creating topics and configuring brokers) on a Kafka cluster."}
{"index": 316, "repo": "kafka-clients-3.5.0", "code": "package consumer\n\n// \nInterface Consumer<K,V>;\n// A plugin interface that allows you to intercept (and possibly mutate) records received by the consumer.\nInterface ConsumerInterceptor<K,V>;\n// This interface is used to define custom partition assignment for use in KafkaConsumer.\nInterface ConsumerPartitionAssignor;\n// A callback interface that the user can implement to trigger custom actions when the set of partitions assigned to the consumer changes.\nInterface ConsumerRebalanceListener;\n", "des": "Provides a Kafka client for consuming records from topics and/or partitions in a Kafka cluster."}
{"index": 317, "repo": "kafka-clients-3.5.0", "code": "package producer\n\n// A callback interface that the user can implement to allow code to execute when the request is complete.\nInterface Callback;\n// Partitioner Interface\nInterface Partitioner;\n// The interface for the KafkaProducer\nInterface Producer<K,V>;\n// A plugin interface that allows you to intercept (and possibly mutate) the records received by the producer before they are published to the Kafka cluster.\nInterface ProducerInterceptor<K,V>;\n", "des": "Provides a Kafka client for producing records to topics and/or partitions in a Kafka cluster."}
{"index": 318, "repo": "kafka-clients-3.5.0", "code": "package common\n\n// A callback interface that users can implement when they wish to get notified about changes in the Cluster metadata.\nInterface ClusterResourceListener;\n// A Mix-in style interface for classes that are instantiated by reflection and need to take configuration parameters\nInterface Configurable;\n// A function which takes objects of type A and returns objects of type B.\nInterface KafkaFuture.BaseFunction<A,B>;\n", "des": "Provides shared functionality for Kafka clients and servers."}
{"index": 319, "repo": "kafka-clients-3.5.0", "code": "package acl\n\n// Represents an access control entry.\nClass AccessControlEntry;\n// Represents a filter which matches access control entries.\nClass AccessControlEntryFilter;\n// Represents a binding between a resource pattern and an access control entry.\nClass AclBinding;\n// A filter which can match AclBinding objects.\nClass AclBindingFilter;\n// Represents an operation which an ACL grants or denies permission to perform.\nEnum AclOperation;\n", "des": "Provides classes representing Access Control Lists for authorization of clients"}
{"index": 320, "repo": "kafka-clients-3.5.0", "code": "package annotation\n\n// Annotation to inform users of how much to rely on a particular package, class or method not changing over time.\nClass InterfaceStability;\n// Compatibility may be broken at minor release (i.e.\nAnnotation Type InterfaceStability.Evolving;\n// Compatibility is maintained in major, minor and patch releases with one exception: compatibility may be broken in a major release (i.e.\nAnnotation Type InterfaceStability.Stable;\n", "des": "Provides annotations used on Kafka APIs."}
{"index": 321, "repo": "kafka-clients-3.5.0", "code": "package config\n\n// A callback passed to ConfigProvider for subscribing to changes.\nInterface ConfigChangeCallback;\n// This is used by the ConfigDef.validate(Map) to get valid values for a configuration given the current configuration values in order to perform full configuration validation and visibility modification.\nInterface ConfigDef.Recommender;\n// Validation logic the user may provide to perform single configuration validation.\nInterface ConfigDef.Validator;\n", "des": "Provides common mechanisms for defining, parsing, validating, and documenting user-configurable parameters."}
{"index": 322, "repo": "kafka-clients-3.5.0", "code": "package provider\n\n// A provider of configuration data, which may optionally support subscriptions to configuration changes.\nInterface ConfigProvider;\n// An implementation of ConfigProvider based on a directory of files.\nClass DirectoryConfigProvider;\n// An implementation of ConfigProvider based on environment variables.\nClass EnvVarConfigProvider;\n// An implementation of ConfigProvider that represents a Properties file.\nClass FileConfigProvider;\n", "des": "Provides a pluggable interface and some implementations for late-binding in configuration values."}
{"index": 323, "repo": "kafka-clients-3.5.0", "code": "package errors\n\n// Any API exception that is part of the public protocol and should be a subclass of this class and be part of this package.\nClass ApiException;\n// This exception indicates that SASL authentication has failed.\nClass AuthenticationException;\n// \nClass AuthorizationException;\n// An exception that indicates that the authorizer is not ready to receive the request yet.\nClass AuthorizerNotReadyException;\n// \nClass BrokerIdNotRegisteredException;\n// \nClass BrokerNotAvailableException;\n", "des": "Provides common exception classes."}
{"index": 324, "repo": "kafka-clients-3.5.0", "code": "package header\n\n// \nInterface Header;\n// \nInterface Headers;\n", "des": "Provides API for application-defined metadata attached to Kafka records."}
{"index": 325, "repo": "kafka-clients-3.5.0", "code": "package metrics\n\n// A compound stat is a stat where a single measurement and associated data structure feeds many metrics.\nInterface CompoundStat;\n// A gauge metric is an instantaneous reading of a particular value.\nInterface Gauge<T>;\n// A measurable quantity that can be registered as a metric\nInterface Measurable;\n// A MeasurableStat is a Stat that is also Measurable (i.e.\nInterface MeasurableStat;\n", "des": "Provides the API used by Kafka clients to emit metrics which are then exposed using the * MetricsReporter interface."}
{"index": 326, "repo": "kafka-clients-3.5.0", "code": "package stats\n\n// An algorithm for determining the bin in which a value is to be placed as well as calculating the upper end of each bin.\nInterface Histogram.BinScheme;\n// A SampledStat that maintains a simple average over its samples.\nClass Avg;\n// A non-sampled version of WindowedCount maintained over all time.\nClass CumulativeCount;\n// An non-sampled cumulative total maintained over all time.\nClass CumulativeSum;\n", "des": "Provides methods of statistically aggregating metrics upon emission."}
{"index": 327, "repo": "kafka-clients-3.5.0", "code": "package quota\n\n// Describes a configuration alteration to be made to a client quota entity.\nClass ClientQuotaAlteration;\n// \nClass ClientQuotaAlteration.Op;\n// Describes a client quota entity, which is a mapping of entity types to their names.\nClass ClientQuotaEntity;\n// Describes a client quota entity filter.\nClass ClientQuotaFilter;\n// Describes a component for applying a client quota filter.\nClass ClientQuotaFilterComponent;\n", "des": "Provides mechanisms for enforcing resource quotas."}
{"index": 328, "repo": "kafka-clients-3.5.0", "code": "package resource\n\n// Represents a cluster resource with a tuple of (type, name).\nClass Resource;\n// Represents a pattern that is used by ACLs to match zero or more Resources.\nClass ResourcePattern;\n// Represents a filter that can match ResourcePattern.\nClass ResourcePatternFilter;\n// Resource pattern type.\nEnum PatternType;\n// Represents a type of resource which an ACL can be applied to.\nEnum ResourceType;\n", "des": "Provides client handles representing logical resources in a Kafka cluster."}
{"index": 329, "repo": "kafka-clients-3.5.0", "code": "package auth\n\n// \nInterface AuthenticateCallbackHandler;\n// An object representing contextual information from the authentication session.\nInterface AuthenticationContext;\n// Pluggable principal builder interface which supports both SSL authentication through SslAuthenticationContext and SASL through SaslAuthenticationContext.\nInterface KafkaPrincipalBuilder;\n// Serializer/Deserializer interface for KafkaPrincipal for the purpose of inter-broker forwarding.\nInterface KafkaPrincipalSerde;\n", "des": "Provides pluggable interfaces for implementing Kafka authentication mechanisms."}
{"index": 330, "repo": "kafka-clients-3.5.0", "code": "package oauthbearer\n\n// The b64token value as defined in RFC 6750 Section 2.1 along with the token's specific scope and lifetime and principal name.\nInterface OAuthBearerToken;\n// A Callback for use by the SaslServer implementation when it needs to validate the SASL extensions for the OAUTHBEARER mechanism Callback handlers should use the OAuthBearerExtensionsValidatorCallback.valid(String) method to communicate valid extensions back to the SASL server.\nClass OAuthBearerExtensionsValidatorCallback;\n", "des": "Provides a LoginModule for using OAuth Bearer Token authentication with Kafka clusters."}
{"index": 331, "repo": "kafka-clients-3.5.0", "code": "package secured\n\n// See org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginCallbackHandler\nClass OAuthBearerLoginCallbackHandler;\n// See org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallbackHandler\nClass OAuthBearerValidatorCallbackHandler;\n", "des": "This package is deprecated."}
{"index": 332, "repo": "kafka-clients-3.5.0", "code": "package plain\n\n// \nClass PlainAuthenticateCallback;\n// \nClass PlainLoginModule;\n", "des": "Provides implementation to use plaintext credentials authentication for securing Kafka clusters."}
{"index": 333, "repo": "kafka-clients-3.5.0", "code": "package scram\n\n// SCRAM credential class that encapsulates the credential data persisted for each user that is accessible to the server.\nClass ScramCredential;\n// Callback used for SCRAM mechanisms.\nClass ScramCredentialCallback;\n// Optional callback used for SCRAM mechanisms if any extensions need to be set in the SASL/SCRAM exchange.\nClass ScramExtensionsCallback;\n// \nClass ScramLoginModule;\n", "des": "Provides adaptor to use the Salted Challenge Response Authentication Mechanism for securing Kafka clusters."}
{"index": 334, "repo": "kafka-clients-3.5.0", "code": "package delegation\n\n// A class representing a delegation token.\nClass DelegationToken;\n// A class representing a delegation token details.\nClass TokenInformation;\n", "des": "Provides mechanism for delegating authorization to a distinct Principal for securing Kafka clusters."}
{"index": 335, "repo": "kafka-clients-3.5.0", "code": "package serialization\n\n// An interface for converting bytes to objects.\nInterface Deserializer<T>;\n// The interface for wrapping a serializer and deserializer for the given data type.\nInterface Serde<T>;\n// An interface for converting objects to bytes.\nInterface Serializer<T>;\n// \nClass BooleanDeserializer;\n// \nClass BooleanSerializer;\n// \nClass ByteArrayDeserializer;\n// \nClass ByteArraySerializer;\n// \nClass ByteBufferDeserializer;\n", "des": "Provides interface and some implementations of serialization/deserialization routines for various objects."}
{"index": 336, "repo": "kafka-clients-3.5.0", "code": "package authorizer\n\n// Request context interface that provides data from request header as well as connection and authentication information to plugins.\nInterface AuthorizableRequestContext;\n// Pluggable authorizer interface for Kafka brokers.\nInterface Authorizer;\n// Runtime broker configuration metadata provided to authorizers during start up.\nInterface AuthorizerServerInfo;\n// \nClass AclCreateResult;\n// \nClass AclDeleteResult;\n", "des": "Provides pluggable interface for performing authorization on a Kafka server."}
{"index": 337, "repo": "kafka-clients-3.5.0", "code": "package policy\n\n// An interface for enforcing a policy on alter configs requests.\nInterface AlterConfigPolicy;\n// An interface for enforcing a policy on create topics requests.\nInterface CreateTopicPolicy;\n// Class containing the create request parameters.\nClass AlterConfigPolicy.RequestMetadata;\n// Class containing the create request parameters.\nClass CreateTopicPolicy.RequestMetadata;\n", "des": "Provides pluggable interfaces for expressing policies on topics and configs."}
{"index": 338, "repo": "kafka-clients-3.5.0", "code": "package quota\n\n// Quota callback interface for brokers that enables customization of client quota computation.\nInterface ClientQuotaCallback;\n// The metadata for an entity for which quota is configured.\nInterface ClientQuotaEntity;\n// Interface representing a quota configuration entity.\nInterface ClientQuotaEntity.ConfigEntity;\n// Entity type of a ClientQuotaEntity.ConfigEntity\nEnum ClientQuotaEntity.ConfigEntityType;\n", "des": "Provides pluggable interface for enforcing client quotas from a Kafka server."}
{"index": 339, "repo": "hadoop-hdfs-3.3.6", "code": "package hdfs\n\n// Represent one of the NameNodes configured in the cluster.\nClass DFSUtil.ConfiguredNNAddress;\n// Comparator for sorting DataNodeInfo[] based on decommissioned and entering_maintenance states.\nClass DFSUtil.ServiceComparator;\n// DtFetcher is an interface which permits the abstraction and separation of delegation token fetch implementaions across different packages and compilation units.\nClass HdfsDtFetcher;\n", "des": "A distributed implementation of FileSystem."}
{"index": 340, "repo": "hadoop-hdfs-3.3.6", "code": "package datatransfer\n\n// Implements TrustedChannelResolver to trust ips/host/subnets based on a blackList.\nClass BlackListBasedTrustedChannelResolver;\n// \nClass WhitelistBasedTrustedChannelResolver;\n", "des": "This package contains classes related to hdfs data transfer protocol."}
{"index": 341, "repo": "hadoop-hdfs-3.3.6", "code": "package protocolPB\n\n// \nClass DatanodeProtocolServerSideTranslatorPB;\n// Implementation for protobuf service that forwards requests received on NamenodeProtocolPB to the NamenodeProtocol server implementation.\nClass NamenodeProtocolServerSideTranslatorPB;\n// Utilities for converting protobuf classes to and from implementation classes and other helper utilities to help in dealing with protobuf.\nClass PBHelper;\n// This class is used on the server side.\nClass ReconfigurationProtocolServerSideTranslatorPB;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 342, "repo": "hadoop-hdfs-3.3.6", "code": "package blockaliasmap\n\n// reader options.\nInterface BlockAliasMap.Reader.Options;\n// writer options.\nInterface BlockAliasMap.Writer.Options;\n// An abstract class used to read and write block maps for provided blocks.\nClass BlockAliasMap<T extends BlockAlias>;\n// An abstract class that is used to read BlockAliases for provided blocks.\nClass BlockAliasMap.Reader<U extends BlockAlias>;\n// An abstract class used as a writer for the provided block map.\nClass BlockAliasMap.Writer<U extends BlockAlias>;\n", "des": "The AliasMap defines mapping of PROVIDED HDFS blocks to data in remote storage systems."}
{"index": 343, "repo": "hadoop-hdfs-3.3.6", "code": "package web\n\n// Data node HTTP Server Class.\nClass DatanodeHttpServer;\n// Since the DataNode HTTP server is not implemented in terms of the servlet API, it takes some extra effort to obtain an instance of the filter.\nClass DatanodeHttpServer.MapBasedFilterConfig;\n", "des": "Data node HTTP classes."}
{"index": 344, "repo": "hadoop-hdfs-3.3.6", "code": "package diskbalancer\n\n// Results returned by the RPC layer of DiskBalancer.\nEnum DiskBalancerException.Result;\n// Disk Balancer Exceptions.\nClass DiskBalancerException;\n", "des": "Disk Balancer connects to a .DataNode and attempts to spread data across all volumes evenly."}
{"index": 345, "repo": "hadoop-hdfs-3.3.6", "code": "package command\n\n// Cancels a running plan.\nClass CancelCommand;\n// Common interface for command handling.\nClass Command;\n// executes a given plan.\nClass ExecuteCommand;\n// Help Command prints out detailed help about each command.\nClass HelpCommand;\n// Class that implements Plan Command.\nClass PlanCommand;\n// Gets the current status of disk balancer command.\nClass QueryCommand;\n// Executes the report command.\nClass ReportCommand;\n", "des": "Commands for disk balancer command line tool."}
{"index": 346, "repo": "hadoop-hdfs-3.3.6", "code": "package connectors\n\n// ClusterConnector interface hides all specifics about how we communicate to the HDFS cluster.\nInterface ClusterConnector;\n// Connector factory creates appropriate connector based on the URL.\nClass ConnectorFactory;\n// A connector that understands JSON data cluster models.\nClass JsonNodeConnector;\n", "des": "Connectors package is a set of logical connectors that connect to various data sources to read the hadoop cluster information."}
{"index": 347, "repo": "hadoop-hdfs-3.3.6", "code": "package datamodel\n\n// DiskBalancerCluster represents the nodes that we are working against.\nClass DiskBalancerCluster;\n// DiskBalancerDataNode represents a DataNode that exists in the cluster.\nClass DiskBalancerDataNode;\n// DiskBalancerVolume represents a volume in the DataNode.\nClass DiskBalancerVolume;\n// DiskBalancerVolumeSet is a collection of storage devices on the data node which are of similar StorageType.\nClass DiskBalancerVolumeSet;\n", "des": "Disk Balancer Data Model is the Data Model for the cluster that Disk Balancer is working against."}
{"index": 348, "repo": "hadoop-hdfs-3.3.6", "code": "package planner\n\n// Planner interface allows different planners to be created.\nInterface Planner;\n// A step in the plan.\nInterface Step;\n// Greedy Planner is a simple planner that computes the largest possible move at any point of time given a volumeSet.\nClass GreedyPlanner;\n// Ignore fields with default values.\nClass MoveStep;\n// NodePlan is a set of volumeSetPlans.\nClass NodePlan;\n// Returns a planner based on the user defined tags.\nClass PlannerFactory;\n", "des": "Planner takes a DiskBalancerVolumeSet, threshold and computes a series of steps that lead to an even data distribution between volumes of this DiskBalancerVolumeSet."}
{"index": 349, "repo": "lucene-analyzers-kuromoji-8.11.2", "code": "package ja\n\n// Outputs the dot (graphviz) string for the viterbi lattice.\nClass GraphvizFormatter;\n// Analyzer for Japanese that uses morphological analysis.\nClass JapaneseAnalyzer;\n// Replaces term text with the BaseFormAttribute.\nClass JapaneseBaseFormFilter;\n// Factory for JapaneseBaseFormFilter.\nClass JapaneseBaseFormFilterFactory;\n// Normalizes Japanese horizontal iteration marks (odoriji) to their expanded form.\nClass JapaneseIterationMarkCharFilter;\n", "des": "Analyzer for Japanese."}
{"index": 350, "repo": "lucene-analyzers-kuromoji-8.11.2", "code": "package dict\n\n// Dictionary interface for retrieving morphological data by id.\nInterface Dictionary;\n// Base class for a binary-encoded in-memory dictionary.\nClass BinaryDictionary;\n// Character category data.\nClass CharacterDefinition;\n// n-gram connection cost data\nClass ConnectionCosts;\n// Binary dictionary implementation for a known-word dictionary model: Words are encoded into an FST mapping to a list of wordIDs.\nClass TokenInfoDictionary;\n", "des": "Kuromoji dictionary implementation."}
{"index": 351, "repo": "lucene-analyzers-kuromoji-8.11.2", "code": "package tokenattributes\n\n// Attribute for Token.getBaseForm().\nInterface BaseFormAttribute;\n// Attribute for Kuromoji inflection data.\nInterface InflectionAttribute;\n// Attribute for Token.getPartOfSpeech().\nInterface PartOfSpeechAttribute;\n// Attribute for Kuromoji reading data\nInterface ReadingAttribute;\n// Attribute for Token.getBaseForm().\nClass BaseFormAttributeImpl;\n// Attribute for Kuromoji inflection data.\nClass InflectionAttributeImpl;\n", "des": "Additional Kuromoji-specific Attributes for text analysis."}
{"index": 352, "repo": "lucene-analyzers-kuromoji-8.11.2", "code": "package util\n\n// Utility class for parsing CSV text\nClass CSVUtil;\n// Tool to build dictionaries.\nClass DictionaryBuilder;\n// Utility class for english translations of morphological data, used only for debugging.\nClass ToStringUtil;\n// Format of the dictionary.\nEnum DictionaryBuilder.DictionaryFormat;\n", "des": "Kuromoji utility classes."}
{"index": 353, "repo": "hive-exec-4.0.0-alpha-2", "code": "package exec\n\n// \nInterface BucketMatcher;\n// \nInterface DynamicValueRegistry;\n// RecordWriter.\nInterface FileSinkOperator.RecordWriter;\n// HashTableLoader is an interface used by MapJoinOperator used to load the hashtables needed to process the join.\nInterface HashTableLoader;\n// Enables an operator to be able to make changes to the JobConf.\nInterface IConfigureJobConf;\n// \nInterface NodeUtils.Function<T>;\n// ObjectCache.\nInterface ObjectCache;\n// OperatorFunc.\nInterface Operator.OperatorFunc;\n", "des": "Hive QL execution tasks, operators, functions and other handlers."}
{"index": 354, "repo": "hive-exec-4.0.0-alpha-2", "code": "package errors\n\n// Classes implementing ErrorHeuristic are able to generate a possible cause and solution for Hive jobs that have failed by examining the query, task log files, and the job configuration.\nInterface ErrorHeuristic;\n// Detects the condition where there is a error with one of the input files in the query.\nClass DataCorruptErrorHeuristic;\n// Immutable class for storing a possible error and a resolution suggestion.\nClass ErrorAndSolution;\n", "des": "Generates execution error messages using heuristics."}
{"index": 355, "repo": "hive-exec-4.0.0-alpha-2", "code": "package orc\n\n// An abstraction for testing ExternalCache in OrcInputFormat.\nInterface ExternalCache.ExternalFooterCachesByConf;\n// \nInterface ExternalCache.ExternalFooterCachesByConf.Cache;\n// Represents footer cache.\nInterface OrcInputFormat.FooterCache;\n// The interface for reading ORC files.\nInterface Reader;\n// A row-by-row iterator for ORC files.\nInterface RecordReader;\n", "des": "The Optimized Row Columnar (ORC) File Format."}
{"index": 356, "repo": "hive-exec-4.0.0-alpha-2", "code": "package vector\n\n// The interface to wrap the underlying Parquet dictionary and non dictionary encoded page reader.\nInterface ParquetDataColumnReader;\n// \nInterface VectorizedColumnReader;\n// It's column level Parquet reader which is used to read a batch of records for a column, part of the code is referred from Apache Spark and Apache Parquet.\nClass BaseVectorizedColumnReader;\n// \nClass BaseVectorizedColumnReader.NullIntIterator;\n// \nClass BaseVectorizedColumnReader.RLEIntIterator;\n", "des": "Hive Parquet Vectorized Reader related."}
{"index": 357, "repo": "hive-exec-4.0.0-alpha-2", "code": "package protobuf\n\n// Class to convert bytes writable containing a protobuf message to hive formats.\nClass ProtobufBytesWritableSerDe;\n// InputFormat to support reading ProtoWritable stored in a sequence file.\nClass ProtobufMessageInputFormat<K,V extends com.google.protobuf.MessageLite>;\n// Class to convert ProtoMessageWritable to hive formats.\nClass ProtobufMessageSerDe;\n// SerDe to convert ProtoWritable messages to Hive formats.\nClass ProtobufSerDe;\n", "des": "This package contains contributed input format."}
{"index": 358, "repo": "hive-exec-4.0.0-alpha-2", "code": "package lockmgr\n\n// Manager for locks in Hive.\nInterface HiveLockManager;\n// An interface that allows Hive to manage transactions.\nInterface HiveTxnManager;\n// An implementation of HiveLockManager for use with DbTxnManager.\nClass DbLockManager;\n// An implementation of HiveTxnManager that stores the transactions in the metastore database.\nClass DbTxnManager;\n// Heartbeater thread\nClass DbTxnManager.Heartbeater;\n// \nClass DbTxnManager.HeartbeaterThread;\n", "des": "Hive Lock Manager interfaces and some custom implmentations"}
{"index": 359, "repo": "hive-exec-4.0.0-alpha-2", "code": "package generic\n\n// Collector gets data from a source.\nInterface Collector;\n// use GenericUDAFEvaluator.AbstractAggregationBuffer instead\nInterface GenericUDAFEvaluator.AggregationBuffer;\n// A callback interface used in conjunction with GenericUDAFResolver2 interface that allows for a more extensible and flexible means of discovering the parameter types provided for UDAF invocation.\nInterface GenericUDAFParameterInfo;\n// \nInterface GenericUDAFPercentileCont.PercentileCalculator<U>;\n", "des": "Standard toolkit and framework for generic User-defined functions."}
{"index": 360, "repo": "hive-exec-4.0.0-alpha-2", "code": "package proto\n\n// Class to create proto reader and writer for a date partitioned directory structure.\nClass DatePartitionedLogger<T extends com.google.protobuf.MessageLite>;\n// \nClass ProtoMessageReader<T extends com.google.protobuf.MessageLite>;\n// \nClass ProtoMessageWritable<T extends com.google.protobuf.MessageLite>;\n// \nClass ProtoMessageWriter<T extends com.google.protobuf.MessageLite>;\n", "des": "Logger code copied from tez codebase, this should be removed when we swtich to 0.9.2 tez version and we should depend on the tez libraries for this."}
{"index": 361, "repo": "commons-geometry-euclidean-1.0", "code": "package euclidean\n\n// Interface representing affine transforms in Euclidean space.\nInterface EuclideanTransform<V extends EuclideanVector<V>>;\n// Base class for affine transform matrices in Euclidean space.\nClass AbstractAffineTransformMatrix<V extends EuclideanVector<V>,M extends AbstractAffineTransformMatrix<V,M>>;\n// Base class representing an axis-aligned bounding box with minimum and maximum bounding points.\nClass AbstractBounds<P extends EuclideanVector<P>,B extends AbstractBounds<P,B>>;\n", "des": "This is the top-level package for Euclidean geometry components."}
{"index": 362, "repo": "commons-geometry-euclidean-1.0", "code": "package internal\n\n// Abstract base class for joining unconnected path elements into connected, directional paths.\nClass AbstractPathConnector<E extends AbstractPathConnector.ConnectableElement<E>>;\n// Class used to represent connectable path elements for use with AbstractPathConnector.\nClass AbstractPathConnector.ConnectableElement<E extends AbstractPathConnector.ConnectableElement<E>>;\n// Class containing utilities and algorithms intended to be internal to the library.\nClass EuclideanUtils;\n", "des": "This package contains Euclidean geometry utilities and classes intended for internal use only."}
{"index": 363, "repo": "commons-geometry-euclidean-1.0", "code": "package oned\n\n// Class using a matrix to represent affine transformations in 1 dimensional Euclidean space.\nClass AffineTransformMatrix1D;\n// Class representing an interval in one dimension.\nClass Interval;\n// This class represents a 1D oriented hyperplane.\nClass OrientedPoint;\n// Class containing factory methods for constructing OrientedPoint instances.\nClass OrientedPoints;\n// Binary space partitioning (BSP) tree representing a region in one dimensional Euclidean space.\nClass RegionBSPTree1D;\n", "des": "This package provides basic 1D geometry components."}
{"index": 364, "repo": "commons-geometry-euclidean-1.0", "code": "package threed\n\n// Extension of the BoundarySource interface for Euclidean 3D space.\nInterface BoundarySource3D;\n// Interface representing a closed, finite convex polygon in Euclidean 3D space.\nInterface ConvexPolygon3D;\n// Interface representing a finite or infinite convex subset of points in a plane in Euclidean 3D space.\nInterface PlaneConvexSubset;\n// Interface used to represent plane convex subsets as embedded 2D subspace regions.\nInterface PlaneConvexSubset.Embedded;\n", "des": "This package provides basic 3D geometry components."}
{"index": 365, "repo": "commons-geometry-euclidean-1.0", "code": "package line\n\n// Interface for objects that support linecast operations in Euclidean 3D space.\nInterface Linecastable3D;\n// Class representing an arbitrary subset of a line in 3D Euclidean space using a RegionBSPTree1D.\nClass EmbeddedTreeLineSubset3D;\n// Class representing a line in 3D space.\nClass Line3D;\n// Class containing a transformed line instance along with a subspace (1D) transform.\nClass Line3D.SubspaceTransform;\n", "des": "This package provides classes and utilities for lines in 3D Euclidean space."}
{"index": 366, "repo": "commons-geometry-euclidean-1.0", "code": "package mesh\n\n// Interface representing a 3D mesh data structure.\nInterface Mesh<F extends Mesh.Face>;\n// Interface representing a single face in a mesh.\nInterface Mesh.Face;\n// Interface representing a mesh composed entirely of triangular faces.\nInterface TriangleMesh;\n// Interface representing a single triangular face in a mesh.\nInterface TriangleMesh.Face;\n// A simple implementation of the TriangleMesh interface.\nClass SimpleTriangleMesh;\n", "des": "This package contains types representing 3D mesh data structures."}
{"index": 367, "repo": "commons-geometry-euclidean-1.0", "code": "package rotation\n\n// Interface representing a generic rotation in 3-dimensional Euclidean space.\nInterface Rotation3D;\n// Class representing a sequence of axis-angle rotations.\nClass AxisAngleSequence;\n// Class using a unit-length quaternion to represent rotations in 3-dimensional Euclidean space.\nClass QuaternionRotation;\n// Enum defining the possible reference frames for locating axis positions during a rotation sequence.\nEnum AxisReferenceFrame;\n", "des": "This package provides components related to rotations in 3 dimensional Euclidean space."}
{"index": 368, "repo": "commons-geometry-euclidean-1.0", "code": "package shape\n\n// Class representing parallelepipeds, i.e.\nClass Parallelepiped;\n// Class designed to aid construction of Parallelepiped instances.\nClass Parallelepiped.Builder;\n// Class representing a 3 dimensional sphere in Euclidean space.\nClass Sphere;\n", "des": "This package provides utilities for constructing basic 3D shapes."}
{"index": 369, "repo": "commons-geometry-euclidean-1.0", "code": "package twod\n\n// Extension of the BoundarySource interface for Euclidean 2D space.\nInterface BoundarySource2D;\n// Interface for objects that support linecast operations in Euclidean 2D space.\nInterface Linecastable2D;\n// Class using a matrix to represent affine transformations in 2 dimensional Euclidean space.\nClass AffineTransformMatrix2D;\n// BoundarySource2D implementation that uses boundaries stored in a list.\nClass BoundaryList2D;\n", "des": "This package provides basic 2D geometry components."}
{"index": 370, "repo": "commons-geometry-euclidean-1.0", "code": "package path\n\n// Abstract class for joining collections of line subsets into connected paths.\nClass AbstractLinePathConnector;\n// Internal class used to connect line subsets together.\nClass AbstractLinePathConnector.ConnectableLineSubset;\n// Line subset connector that selects between multiple connection options based on the resulting interior angle.\nClass InteriorAngleLinePathConnector;\n", "des": "This package provides classes for working with connected sequences of line segments and other line subsets."}
{"index": 371, "repo": "commons-geometry-euclidean-1.0", "code": "package rotation\n\n// Class representing a rotation in 2 dimensional Euclidean space.\nClass Rotation2D;\n", "des": "This package provides components related to rotations in 2 dimensional Euclidean space."}
{"index": 372, "repo": "commons-geometry-euclidean-1.0", "code": "package shape\n\n// Class representing a circle in 2 dimensional Euclidean space.\nClass Circle;\n// Class representing parallelograms, i.e.\nClass Parallelogram;\n// Class designed to aid construction of Parallelogram instances.\nClass Parallelogram.Builder;\n", "des": "This package provides utilities for constructing basic 2D shapes."}
{"index": 373, "repo": "calcite-linq4j-1.34.0", "code": "package linq4j\n\n// Exposes the enumerator, which supports a simple iteration over a collection.\nInterface Enumerable<T>;\n// Supports a simple iteration over a collection.\nInterface Enumerator<T>;\n// Extension methods in Enumerable.\nInterface ExtendedEnumerable<TSource>;\n// Extension methods for OrderedEnumerable.\nInterface ExtendedOrderedEnumerable<T>;\n// Extension methods for OrderedQueryable.\nInterface ExtendedOrderedQueryable<T>;\n", "des": "Language-integrated query for Java (linq4j) main package."}
{"index": 374, "repo": "calcite-linq4j-1.34.0", "code": "package function\n\n// Function that takes one parameter and returns a BigDecimal value.\nInterface BigDecimalFunction1<T0>;\n// Function that takes one parameter and returns a native double value.\nInterface DoubleFunction1<T0>;\n// Compares values for equality.\nInterface EqualityComparer<T>;\n// Function that takes one parameter and returns a native float value.\nInterface FloatFunction1<T0>;\n// Base interface for all functions.\nInterface Function<R>;\n// Function with no parameters.\nInterface Function0<R>;\n", "des": "Contains definitions of functions and predicates."}
{"index": 375, "repo": "calcite-linq4j-1.34.0", "code": "package tree\n\n// Creates a DynamicExpression that represents a dynamic operation bound by the provided CallSiteBinder.\nInterface CallSiteBinder;\n// Fluent list.\nInterface Expressions.FluentList<T>;\n// Represents a visitor or rewriter for expression trees.\nInterface ExpressionVisitor;\n// Function that can be invoked with a variable number of arguments.\nInterface FunctionExpression.Invokable;\n// Parse tree node.\nInterface Node;\n// A place to send a value.\nInterface Primitive.Sink;\n", "des": "Object model for Java expressions."}
{"index": 376, "repo": "zookeeper-jute-3.8.2", "code": "package jute\n\n// Interface that acts as an iterator for deserializing maps.\nInterface Index;\n// Interface that all the Deserializers have to implement.\nInterface InputArchive;\n// Interface that all the serializers have to implement.\nInterface OutputArchive;\n// Interface that is implemented by generated classes.\nInterface Record;\n// \nClass BinaryInputArchive;\n// \nClass BinaryOutputArchive;\n// Front-end interface to deserializers.\nClass RecordReader;\n// Front-end for serializers.\nClass RecordWriter;\n", "des": "Hadoop record I/O contains classes and a record description language translator for simplifying serialization and deserialization of records in a language-neutral manner."}
{"index": 377, "repo": "zookeeper-jute-3.8.2", "code": "package compiler\n\n// \nClass CSharpGenerator;\n// \nClass JBoolean;\n// \nClass JBuffer;\n// \nClass JByte;\n// \nClass JDouble;\n// \nClass JField;\n// Container for the Hadoop Record DDL.\nClass JFile;\n// \nClass JFloat;\n// \nClass JInt;\n// \nClass JLong;\n// \nClass JMap;\n// \nClass JRecord;\n// \nClass JString;\n// Abstract Base class for all types supported by Hadoop Record I/O.\nClass JType;\n// \nClass JVector;\n", "des": "This package contains classes needed for code generation from the hadoop record compiler."}
{"index": 378, "repo": "zookeeper-jute-3.8.2", "code": "package generated\n\n// Token literal values and constants.\nInterface RccConstants;\n// \nClass Rcc;\n// Token Manager.\nClass RccTokenManager;\n// An implementation of interface CharStream, where the stream is assumed to contain only ASCII characters (without unicode processing).\nClass SimpleCharStream;\n// Describes the input token stream.\nClass Token;\n// This exception is thrown when parse errors are encountered.\nClass ParseException;\n// Token Manager Error.\nClass TokenMgrError;\n", "des": "This package contains code generated by JavaCC from the Hadoop record syntax file rcc.jj."}
{"index": 379, "repo": "mahout-core-14.1", "code": "package math\n\n// The basic interface including numerous convenience functions\nInterface Matrix;\n// Optional interface for optimized matrix multiplications.\nInterface MatrixTimesOps;\n// \nInterface QR;\n// Interface for an object that knows how to swap elements at two positions (a,b).\nInterface Swapper;\n// The basic interface including numerous convenience functions\nInterface Vector;\n// A holder for information about a specific item in the Vector.\nInterface Vector.Element;\n// \nInterface VectorIterable;\n", "des": "Core base classes; Operations on primitive arrays such as sorting, partitioning and permuting."}
{"index": 380, "repo": "mahout-core-14.1", "code": "package function\n\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteByteProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteCharProcedure;\n// A comparison function which imposes a total ordering on some collection of elements.\nInterface ByteComparator;\n", "des": "Core interfaces for functions, comparisons and procedures on objects and primitive data types."}
{"index": 381, "repo": "mahout-core-14.1", "code": "package math\n\n// Arithmetic functions.\nClass Arithmetic;\n// Defines some useful constants.\nClass Constants;\n// Polynomial functions.\nClass Polynomial;\n", "des": "Tools for basic and advanced mathematics: Arithmetics and Algebra, Polynomials and Chebyshev series, Bessel and Airy functions, Function Objects for generic function evaluation, etc."}
{"index": 382, "repo": "mahout-core-14.1", "code": "package engine\n\n// MersenneTwister (MT19937) is one of the strongest uniform pseudo-random number generators known so far; at the same time it is quick.\nClass MersenneTwister;\n// Abstract base class for uniform pseudo-random number generating engines.\nClass RandomEngine;\n", "des": "Engines generating strong uniformly distributed pseudo-random numbers; Needed by all JET probability distributions since they rely on uniform random numbers to generate random numbers from their own distribution."}
{"index": 383, "repo": "mahout-core-14.1", "code": "package stat\n\n// Partially deprecated until unit tests are in place.\nClass Gamma;\n// Partially deprecated until unit tests are in place.\nClass Probability;\n", "des": "Tools for basic and advanced statistics: Estimators, Gamma functions, Beta functions, Probabilities, Special integrals, etc."}
{"index": 384, "repo": "mahout-core-14.1", "code": "package list\n\n// Abstract base class for resizable lists holding byte elements; abstract.\nClass AbstractByteList;\n// Abstract base class for resizable lists holding char elements; abstract.\nClass AbstractCharList;\n// Abstract base class for resizable lists holding double elements; abstract.\nClass AbstractDoubleList;\n// Abstract base class for resizable lists holding float elements; abstract.\nClass AbstractFloatList;\n", "des": "Resizable lists holding objects or primitive data types such as int, double, etc."}
{"index": 385, "repo": "mahout-core-14.1", "code": "package map\n\n// \nClass AbstractByteByteMap;\n// \nClass AbstractByteCharMap;\n// \nClass AbstractByteDoubleMap;\n// \nClass AbstractByteFloatMap;\n// \nClass AbstractByteIntMap;\n// \nClass AbstractByteLongMap;\n// \nClass AbstractByteObjectMap<T>;\n// \nClass AbstractByteShortMap;\n// \nClass AbstractCharByteMap;\n// \nClass AbstractCharCharMap;\n// \nClass AbstractCharDoubleMap;\n// \nClass AbstractCharFloatMap;\n// \nClass AbstractCharIntMap;\n// \nClass AbstractCharLongMap;\n// \nClass AbstractCharObjectMap<T>;\n", "des": "Automatically growing and shrinking maps holding objects or primitive data types such as int, double, etc."}
{"index": 386, "repo": "commons-dbcp2-2.9.0", "code": "package dbcp2\n\n// Interface to keep API compatibility.\nInterface BasicDataSourceMXBean;\n// Abstract factory interface for creating Connections.\nInterface ConnectionFactory;\n// Defines the methods that will be made available via JMX.\nInterface DataSourceMXBean;\n// Defines the attributes and methods that will be exposed via JMX for PoolableConnection instances.\nInterface PoolableConnectionMXBean;\n// Tracks connection usage for recovering and reporting abandoned connections.\nClass AbandonedTrace;\n", "des": "Database Connection Pool API."}
{"index": 387, "repo": "commons-dbcp2-2.9.0", "code": "package cpdsadapter\n\n// An adapter for JDBC drivers that do not include an implementation of ConnectionPoolDataSource, but still include a DriverManager implementation.\nClass DriverAdapterCPDS;\n// Use PStmtKey.\nClass PStmtKeyCPDS;\n", "des": "This package contains one public class which is a ConnectionPoolDataSource (CPDS) implementation that can be used to adapt older Driver based JDBC implementations."}
{"index": 388, "repo": "commons-dbcp2-2.9.0", "code": "package datasources\n\n// The base class for SharedPoolDataSource and PerUserPoolDataSource.\nClass InstanceKeyDataSource;\n// A pooling DataSource appropriate for deployment within J2EE environment.\nClass PerUserPoolDataSource;\n// A JNDI ObjectFactory which creates SharedPoolDataSources\nClass PerUserPoolDataSourceFactory;\n// A pooling DataSource appropriate for deployment within J2EE environment.\nClass SharedPoolDataSource;\n", "des": "This package contains two DataSources: PerUserPoolDataSource and SharedPoolDataSource which provide a database connection pool."}
{"index": 389, "repo": "commons-dbcp2-2.9.0", "code": "package managed\n\n// A listener for transaction completion events.\nInterface TransactionContextListener;\n// XAConnectionFactory is an extension of ConnectionFactory used to create connections in a transaction managed environment.\nInterface XAConnectionFactory;\n// BasicManagedDataSource is an extension of BasicDataSource which creates ManagedConnections.\nClass BasicManagedDataSource;\n", "des": "This package provides support for pooling of ManagedConnections."}
{"index": 390, "repo": "hbase-mapreduce-3.0.0-alpha-4", "code": "package mapred\n\n// Scan an HBase table to sort by a specified sort column.\nInterface TableMap<K extends org.apache.hadoop.io.WritableComparable<? super K>,V>;\n// Write a table, sorting by the input key\nInterface TableReduce<K extends org.apache.hadoop.io.WritableComparable,V>;\n// Driver for hbase mapreduce jobs.\nClass Driver;\n// Extract grouping columns from input record\nClass GroupingTableMap;\n// This is used to partition the output keys into groups of keys.\nClass HRegionPartitioner<K2,V2>;\n", "des": "Provides HBase MapReduce Input/OutputFormats, a table indexing MapReduce job, and utility methods."}
{"index": 391, "repo": "hbase-mapreduce-3.0.0-alpha-4", "code": "package mapreduce\n\n// Interface to convert visibility expressions into Tags for storing along with Cells in HFiles.\nInterface VisibilityExpressionResolver;\n// A job with a a map and reduce phase to count cells in a table.\nClass CellCounter;\n// Facade to create Cells for HFileOutputFormat.\nClass CellCreator;\n// \nClass CellSerialization;\n// \nClass CellSerialization.CellDeserializer;\n// \nClass CellSerialization.CellSerializer;\n// Emits sorted Cells.\nClass CellSortReducer;\n", "des": "Provides HBase MapReduce Input/OutputFormats, a table indexing MapReduce job, and utility methods."}
{"index": 392, "repo": "amqp-client-5.18.0", "code": "package client\n\n// Strategy interface to get the potential servers to connect to.\nInterface AddressResolver;\n// \nInterface AMQP;\n// \nInterface AMQP.Access.Request;\n// \nInterface AMQP.Access.RequestOk;\n// \nInterface AMQP.Basic.Ack;\n// \nInterface AMQP.Basic.Cancel;\n// \nInterface AMQP.Basic.CancelOk;\n// \nInterface AMQP.Basic.Consume;\n// \nInterface AMQP.Basic.ConsumeOk;\n// \nInterface AMQP.Basic.Deliver;\n// \nInterface AMQP.Basic.Get;\n// \nInterface AMQP.Basic.GetEmpty;\n// \nInterface AMQP.Basic.GetOk;\n", "des": "The client API proper: classes and interfaces representing the AMQP connections, channels, and wire-protocol framing descriptors."}
{"index": 393, "repo": "amqp-client-5.18.0", "code": "package impl\n\n// \nInterface AMQChannel.RpcContinuation;\n// \nInterface AMQImpl.MethodVisitor;\n// Provider interface for establishing credentials for connecting to the broker.\nInterface CredentialsProvider;\n// Provider interface to refresh credentials when appropriate and perform an operation once the credentials have been renewed.\nInterface CredentialsRefreshService;\n// Listener called when a connection gets an IO error trying to write on the socket.\nInterface ErrorOnWriteListener;\n", "des": "Implementations of interfaces specified in the client API, and their supporting classes."}
{"index": 394, "repo": "amqp-client-5.18.0", "code": "package nio\n\n// Contract to create ByteBuffers.\nInterface ByteBufferFactory;\n// Contract to exchange frame between application threads and NIO thread.\nInterface NioQueue;\n// \nInterface WriteRequest;\n// Bridge between NioQueue and JDK's BlockingQueue.\nClass BlockingQueueNioQueue;\n// Bridge between the byte buffer and stream worlds.\nClass ByteBufferOutputStream;\n// Default ByteBufferFactory that creates heap-based ByteBuffers.\nClass DefaultByteBufferFactory;\n", "des": "NIO network connector."}
{"index": 395, "repo": "amqp-client-5.18.0", "code": "package recovery\n\n// Backoff policy for topology recovery retry attempts.\nInterface BackoffPolicy;\n// Not part of the public API.\nInterface ConsumerRecoveryListener;\n// \nInterface DefaultRetryHandler.RetryOperation<T>;\n// Not part of the public API.\nInterface QueueRecoveryListener;\n// Functional callback interface that can be used to rename a queue during topology recovery.\nInterface RecoveredQueueNameSupplier;\n", "des": "Implementation of connection and topology recovery."}
{"index": 396, "repo": "amqp-client-5.18.0", "code": "package json\n\n// Use a third-party JSON library, e.g.\nInterface JSONSerializable;\n// Use a third-party JSON library, e.g.\nClass JSONReader;\n// Utility methods for working with JSON objects in Java.\nClass JSONUtil;\n// Use a third-party JSON library, e.g.\nClass JSONWriter;\n", "des": "JSON reader/writer and utility classes."}
{"index": 397, "repo": "amqp-client-5.18.0", "code": "package jsonrpc\n\n// Abstraction to handle JSON parsing and generation.\nInterface JsonRpcMapper;\n// use JacksonJsonRpcMapper instead\nClass DefaultJsonRpcMapper;\n// JsonRpcMapper based on Jackson.\nClass JacksonJsonRpcMapper;\n// JSON-RPC is a lightweight RPC mechanism using JSON as a data language for request and reply messages.\nClass JsonRpcClient;\n// \nClass JsonRpcMapper.JsonRpcRequest;\n// \nClass JsonRpcMapper.JsonRpcResponse;\n// JSON-RPC Server class.\nClass JsonRpcServer;\n", "des": "JSON-RPC client and server classes for supporting JSON-RPC over an AMQP transport."}
{"index": 398, "repo": "amqp-client-5.18.0", "code": "package utility\n\n// This interface exists as a workaround for the annoyingness of java.lang.Cloneable.\nInterface SensibleClone<T extends SensibleClone<T>>;\n// Simple one-shot IPC mechanism.\nClass BlockingCell<T>;\n// \nClass BlockingValueOrException<V,E extends Throwable & SensibleClone<E>>;\n// A class for allocating integers from a given range that uses a BitSet representation of the free integers.\nClass IntAllocator;\n// Catch-all holder class for static helper methods.\nClass Utility;\n", "des": "Utility package of helper classes, mostly used in the implementation code."}
{"index": 399, "repo": "solr-dataimporthandler-8.11.2", "code": "package dataimport\n\n// A cache that allows a DIH entity's data to persist locally prior being joined to other data and/or indexed.\nInterface DIHCache;\n// \nInterface DIHWriter;\n// Event listener for DataImportHandler This API is experimental and subject to change\nInterface EventListener;\n// Implement this interface to stream records as and when one is found.\nInterface XPathRecordReader.Handler;\n", "des": "DataImportHandler and related code."}
{"index": 400, "repo": "solr-dataimporthandler-8.11.2", "code": "package config\n\n// \nClass ConfigNameConstants;\n// \nClass ConfigParseUtil;\n// Mapping for data-config.xml\nClass DIHConfiguration;\n// \nClass Entity;\n// \nClass EntityField;\n// \nClass EntityField.Builder;\n// \nClass Field;\n// \nClass Field.Builder;\n// \nClass PropertyWriter;\n// \nClass Script;\n", "des": "Utility classes for parsing & modeling DIH configuration."}
{"index": 401, "repo": "commons-jexl3-3.3", "code": "package jexl3\n\n// Helper interface used when creating an array literal.\nInterface JexlArithmetic.ArrayBuilder;\n// Helper interface used when creating a map literal.\nInterface JexlArithmetic.MapBuilder;\n// Helper interface used when creating a set literal.\nInterface JexlArithmetic.SetBuilder;\n// The interface that uberspects JexlArithmetic classes.\nInterface JexlArithmetic.Uberspect;\n// Manages variables which can be referenced in a JEXL expression.\nInterface JexlContext;\n", "des": "Provides a framework for evaluating JEXL expressions."}
{"index": 402, "repo": "commons-jexl3-3.3", "code": "package annotations\n\n// Indicates JEXL Introspection should not see this element.\nAnnotation Type NoJexl;\n", "des": "Provides annotation for introspection services."}
{"index": 403, "repo": "commons-jexl3-3.3", "code": "package introspection\n\n// Interface used for regular method invocation.\nInterface JexlMethod;\n// This interface describes permissions used by JEXL introspection that constrain which packages/classes/constructors/fields/methods are made visible to JEXL scripts.\nInterface JexlPermissions;\n// Interface for getting values that appear to be properties.\nInterface JexlPropertyGet;\n// Interface used for setting values that appear to be properties.\nInterface JexlPropertySet;\n", "des": "Provides high-level introspective services."}
{"index": 404, "repo": "commons-jexl3-3.3", "code": "package scripting\n\n// Implements the JEXL ScriptEngine for JSF-223.\nClass JexlScriptEngine;\n// Implements the JEXL ScriptEngineFactory for JSF-223.\nClass JexlScriptEngineFactory;\n// Test application for JexlScriptEngine (JSR-223 implementation).\nClass Main;\n", "des": "Contains the JSR-223 Scripting Engine for JEXL script."}
{"index": 405, "repo": "hbase-common-3.0.0-alpha-4", "code": "package types\n\n// DataType is the base class for all HBase data types.\nInterface DataType<T>;\n// A Map that keeps a sorted array in order to provide the concurrent map interface.\nClass CopyOnWriteArrayMap<K,V>;\n// Wraps an existing DataType implementation as a fixed-length version of itself.\nClass FixedLengthWrapper<T>;\n// A byte[] of variable-length.\nClass OrderedBlob;\n// An alternative to OrderedBlob for use by Struct fields that do not terminate the fields list.\nClass OrderedBlobVar;\n", "des": "This package provides the definition and implementation of HBase's extensible data type API."}
{"index": 406, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package social\n\n// Base interface that may be implemented by API bindings.\nInterface ApiBinding;\n// Top-level marker interface defining a ServiceProvider.\nInterface ServiceProvider<A>;\n// Strategy interface used to determine the account ID of the current user.\nInterface UserIdSource;\n// Indicates that an error occurred while consuming a provider API.\nClass ApiException;\n// Exception thrown when a duplicate status is posted.\nClass DuplicateStatusException;\n", "des": "Core Spring Social classes"}
{"index": 407, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package connect\n\n// An adapter that bridges between the uniform Connection model and a specific provider API model.\nInterface ApiAdapter<A>;\n// A link to a service provider user.\nInterface Connection<A>;\n// A ServiceLocator for ConnectionFactory instances.\nInterface ConnectionFactoryLocator;\n// Data access interface for saving and restoring Connection objects from a persistent store.\nInterface ConnectionRepository;\n", "des": "Framework for establishing connections between local users and users of ServiceProviders such as Twitter and Facebook."}
{"index": 408, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package jdbc\n\n// UsersConnectionRepository that uses the JDBC API to persist connection data to a relational database.\nClass JdbcUsersConnectionRepository;\n", "des": "JDBC-based ConnectionRepository implementation."}
{"index": 409, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package support\n\n// Base support class for Connection implementations.\nClass AbstractConnection<A>;\n// A registry for service provider connection factories.\nClass ConnectionFactoryRegistry;\n// An OAuth1-based Connection implementation.\nClass OAuth1Connection<A>;\n// Factory for creating OAuth1-based Connections.\nClass OAuth1ConnectionFactory<A>;\n// An OAuth2-based Connection implementation.\nClass OAuth2Connection<A>;\n// Factory for creating OAuth2-based Connections.\nClass OAuth2ConnectionFactory<S>;\n", "des": "ServiceProvider Connect API implementation support."}
{"index": 410, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package oauth1\n\n// A service interface for the OAuth 1 flow.\nInterface OAuth1Operations;\n// A ServiceProvider that uses the OAuth 1.0 protocol.\nInterface OAuth1ServiceProvider<A>;\n// Base class for OAuth 1-based provider API bindings.\nClass AbstractOAuth1ApiBinding;\n// Base class for ServiceProviders that use the OAuth1 protocol.\nClass AbstractOAuth1ServiceProvider<S>;\n// A OAuth 1.0 request token that has been authorized by the user.\nClass AuthorizedRequestToken;\n", "des": "OAuth1 client."}
{"index": 411, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package oauth2\n\n// A service interface for the OAuth2 flow.\nInterface OAuth2Operations;\n// A ServiceProvider that uses the OAuth 2.0 protocol.\nInterface OAuth2ServiceProvider<A>;\n// Base class for OAuth 2-based provider API bindings.\nClass AbstractOAuth2ApiBinding;\n// Base class for ServiceProviders that use the OAuth2 protocol.\nClass AbstractOAuth2ServiceProvider<S>;\n// OAuth2 access token.\nClass AccessGrant;\n", "des": "OAuth2 client."}
{"index": 412, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package support\n\n// \nClass BufferingClientHttpResponse;\n// Chooses a request factory.\nClass ClientHttpRequestFactorySelector;\n// \nClass ClientHttpRequestFactorySelector.HttpComponentsClientRequestFactoryCreator;\n// Message converter that reads form-encoded data into a flat Map<String, String>.\nClass FormMapHttpMessageConverter;\n// Extension of HttpRequestWrapper that supports adding new HttpHeaders to the wrapped HttpRequest.\nClass HttpRequestDecorator;\n// \nClass LoggingErrorHandler;\n", "des": "Internal utilities and helpers used by the Spring Social core module."}
{"index": 413, "repo": "hadoop-azure-3.3.6", "code": "package azure\n\n// Interface for executing the file operation by a thread.\nInterface AzureFileSystemThreadTask;\n// The interface that every Azure file system key provider must implement.\nInterface KeyProvider;\n// Iterface used by AzureNativeFileSysteStore to retrieve SAS Keys for the respective azure storage entity.\nInterface SASKeyGeneratorInterface;\n// Interface to implement authorization support in WASB.\nInterface WasbAuthorizerInterface;\n", "des": "A distributed implementation of FileSystem for reading and writing files on Azure Block Storage."}
{"index": 414, "repo": "hadoop-azure-3.3.6", "code": "package metrics\n\n// A metrics source for the WASB file system to track all the metrics we care about for getting a clear picture of the performance/reliability/interaction of the Hadoop cluster with Azure Storage.\nClass AzureFileSystemInstrumentation;\n// AzureFileSystemMetricsSystem\nClass AzureFileSystemMetricsSystem;\n// Internal implementation class to help calculate the current bytes uploaded/downloaded and the maximum bandwidth gauges.\nClass BandwidthGaugeUpdater;\n", "des": "Infrastructure for a Metrics2 source that provides information on Windows Azure Filesystem for Hadoop instances."}
{"index": 415, "repo": "hadoop-azure-3.3.6", "code": "package azurebfs\n\n// Azure Blob File System implementation of AbstractFileSystem.\nClass Abfs;\n// Configuration for Azure Blob FileSystem.\nClass AbfsConfiguration;\n// Instrumentation of Abfs counters.\nClass AbfsCountersImpl;\n// Azure Blob File System implementation of AbstractFileSystem.\nClass Abfss;\n// A FileSystem for reading and writing files stored on Windows Azure\nClass AzureBlobFileSystem;\n", "des": "A distributed implementation of FileSystem for reading and writing files on Azure Storage."}
{"index": 416, "repo": "hadoop-azure-3.3.6", "code": "package commit\n\n// API exclusively for committing files.\nInterface ResilientCommitByRename;\n// Extension of StoreOperationsThroughFileSystem with ABFS awareness.\nClass AbfsManifestStoreOperations;\n// A Committer for the manifest committer which performs all bindings needed to work best with abfs.\nClass AzureManifestCommitterFactory;\n", "des": "Support for manifest committer."}
{"index": 417, "repo": "hadoop-azure-3.3.6", "code": "package extensions\n\n// An optional extension for custom extensions, so as to support tighter integration.\nInterface BoundDTExtension;\n// Interface for Managing the Delegation tokens.\nInterface CustomDelegationTokenManager;\n// This interface provides an extensibility model for customizing the acquisition of Azure Active Directory Access Tokens.\nInterface CustomTokenProviderAdaptee;\n// Interface to support SAS authorization.\nInterface SASTokenProvider;\n", "des": "This package is for extension points under ABFS; There are no stability guarantees as these extension points are deep inside the ABFS implementation code."}
{"index": 418, "repo": "hadoop-azure-3.3.6", "code": "package oauth2\n\n// IdentityTransformerInterface defines the set of translation operations that any identity transformer implementation must provide.\nInterface IdentityTransformerInterface;\n// Returns an Azure Active Directory token when requested.\nClass AccessTokenProvider;\n// This class provides convenience methods to obtain AAD tokens.\nClass AzureADAuthenticator;\n// Object representing the AAD access token to use when making HTTP requests to Azure Data Lake Storage.\nClass AzureADToken;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 419, "repo": "hadoop-azure-3.3.6", "code": "package security\n\n// Delegation token Identifier for ABFS delegation tokens.\nClass AbfsDelegationTokenIdentifier;\n// Class for delegation token Manager.\nClass AbfsDelegationTokenManager;\n// A DT fetcher for Abfs.\nClass AbfsDtFetcher;\n// The DT Fetcher for abfss.\nClass AbfssDtFetcher;\n// Token Renewer for renewing ABFS delegation tokens with remote service.\nClass AbfsTokenRenewer;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 420, "repo": "hadoop-azure-3.3.6", "code": "package retryReasonCategories\n\n// Category that can capture server-response errors for 4XX status-code.\nClass ClientErrorRetryReason;\n// Category that can capture server-response errors for connection-reset exception.\nClass ConnectionResetRetryReason;\n// Category that can capture server-response errors for connection-timeout.\nClass ConnectionTimeoutRetryReason;\n// Category that can capture server-response errors for read-timeout.\nClass ReadTimeoutRetryReason;\n", "des": "A retryReasonCategory defines methods applicable on server-response errors."}
{"index": 421, "repo": "mahout-mr-0.13.0", "code": "package inmem\n\n// \nClass InMemBuilder;\n// \nClass InMemInputFormat;\n// Custom InputSplit that indicates how many trees are built by each mapper\nClass InMemInputFormat.InMemInputSplit;\n// \nClass InMemInputFormat.InMemRecordReader;\n// \nClass InMemMapper;\n", "des": "In-memory mapreduce implementation of Random Decision Forests"}
{"index": 422, "repo": "mahout-mr-0.13.0", "code": "package partial\n\n// \nClass PartialBuilder;\n// \nClass Step1Mapper;\n// \nClass TreeID;\n", "des": "Partial-data mapreduce implementation of Random Decision Forests"}
{"index": 423, "repo": "mahout-mr-0.13.0", "code": "package sgd\n\n// Provides the ability to inject a gradient into the SGD logistic regresion.\nInterface Gradient;\n// A prior is used to regularize the learning algorithm.\nInterface PriorFunction;\n// A record factor understands how to convert a line of data into fields and then into a vector.\nInterface RecordFactory;\n// Generic definition of a 1 of n logistic regression classifier that returns probabilities in response to a feature vector.\nClass AbstractOnlineLogisticRegression;\n", "des": "Implements a variety of on-line logistric regression classifiers using SGD-based algorithms."}
{"index": 424, "repo": "mahout-mr-0.13.0", "code": "package kmeans\n\n// \nClass Kluster;\n// \nClass KMeansDriver;\n// Given an Input Path containing a SequenceFile, randomly select k vectors and write them to the output file as a Kluster representing the initial centroid to use.\nClass RandomSeedGenerator;\n", "des": "This package provides an implementation of the k-means clustering algorithm."}
{"index": 425, "repo": "mahout-mr-0.13.0", "code": "package ep\n\n// \nInterface EvolutionaryProcess.Function<T>;\n// Payloads for evolutionary state must be copyable and updatable.\nInterface Payload<T>;\n// Allows evolutionary optimization where the state function can't be easily packaged for the optimizer to execute.\nClass EvolutionaryProcess<T extends Payload<U>,U>;\n// Provides coordinate tranformations so that evolution can proceed on the entire space of reals but have the output limited and squished in convenient (and safe) ways.\nClass Mapping;\n", "des": "Provides basic evolutionary optimization using recorded-step mutation."}
{"index": 426, "repo": "commons-geometry-hull-1.0-beta1", "code": "package hull\n\n// This class represents a convex hull.\nInterface ConvexHull<P extends Point<P>>;\n// Interface for convex hull generators.\nInterface ConvexHullGenerator<P extends Point<P>>;\n", "des": "This package provides interfaces and classes related to the convex hull problem."}
{"index": 427, "repo": "commons-geometry-hull-1.0-beta1", "code": "package twod\n\n// Interface for convex hull generators in the two-dimensional Euclidean space.\nInterface ConvexHullGenerator2D;\n// A simple heuristic to improve the performance of convex hull algorithms.\nClass AklToussaintHeuristic;\n// This class represents a convex hull in two-dimensional Euclidean space.\nClass ConvexHull2D;\n// Implements Andrew's monotone chain method to generate the convex hull of a finite set of points in the two-dimensional Euclidean space.\nClass MonotoneChain;\n", "des": "This package provides algorithms to generate the convex hull for a set of points in an two-dimensional Euclidean space."}
{"index": 428, "repo": "hive-serde-4.0.0-alpha-2", "code": "package typeinfo\n\n// \nClass BaseCharTypeInfo;\n// \nClass BaseCharUtils;\n// \nClass CharTypeInfo;\n// \nClass DecimalTypeInfo;\n// \nClass HiveDecimalUtils;\n// A List Type has homogeneous elements.\nClass ListTypeInfo;\n// A Map Type has homogeneous keys and homogeneous values.\nClass MapTypeInfo;\n// There are limited number of Primitive Types.\nClass PrimitiveTypeInfo;\n// StructTypeInfo represents the TypeInfo of a struct.\nClass StructTypeInfo;\n// \nClass TimestampLocalTZTypeInfo;\n", "des": "This package provides the implementation of the SerDe type system."}
{"index": 429, "repo": "kafka-streams-3.5.0", "code": "package streams\n\n// KafkaClientSupplier can be used to provide custom Kafka clients to a KafkaStreams instance.\nInterface KafkaClientSupplier;\n// Listen to KafkaStreams.State change events.\nInterface KafkaStreams.StateListener;\n// Metadata of a Kafka Streams client.\nInterface StreamsMetadata;\n// The Kafka Streams metrics interface for adding metric sensors and collecting metric values.\nInterface StreamsMetrics;\n// Metadata of a task.\nInterface TaskMetadata;\n", "des": "Provides the Kafka Streams library for building streaming data applications."}
{"index": 430, "repo": "kafka-streams-3.5.0", "code": "package errors\n\n// Interface that specifies how an exception from source node deserialization (e.g., reading from Kafka) should be handled.\nInterface DeserializationExceptionHandler;\n// Interface that specifies how an exception when attempting to produce a result to Kafka should be handled.\nInterface ProductionExceptionHandler;\n// \nInterface StreamsUncaughtExceptionHandler;\n", "des": "Provides common exception classes for Streams applications."}
{"index": 431, "repo": "kafka-streams-3.5.0", "code": "package kstream\n\n// The Aggregator interface for aggregating values of the given key.\nInterface Aggregator<K,V,VA>;\n// Branches the records in the original stream based on the predicates supplied for the branch definitions.\nInterface BranchedKStream<K,V>;\n// CogroupedKStream is an abstraction of multiple grouped record streams of KeyValue pairs.\nInterface CogroupedKStream<K,VOut>;\n// This interface controls the strategy that can be used to control how we emit results in a processor.\nInterface EmitStrategy;\n", "des": "Provides a high-level programming model (DSL) to express a (stateful) data flow computation over input streams and tables."}
{"index": 432, "repo": "kafka-streams-3.5.0", "code": "package processor\n\n// Interface for batching restoration of a StateStore It is expected that implementations of this class will not call the StateRestoreCallback.restore(byte[], byte[]) method.\nInterface BatchingStateRestoreCallback;\n// Cancellable interface returned in ProcessorContext.schedule(Duration, PunctuationType, Punctuator).\nInterface Cancellable;\n// Stores can register this callback to be notified upon successful commit.\nInterface CommitCallback;\n", "des": "Provides a low-level programming model (Processor API, aka, PAPI) to express a (stateful) data flow computation over input topics."}
{"index": 433, "repo": "kafka-streams-3.5.0", "code": "package api\n\n// A processor of key-value pair records where keys are immutable.\nInterface FixedKeyProcessor<KIn,VIn,VOut>;\n// Processor context interface for FixedKeyRecord.\nInterface FixedKeyProcessorContext<KForward,VForward>;\n// A processor supplier that can create one or more FixedKeyProcessor instances.\nInterface FixedKeyProcessorSupplier<KIn,VIn,VOut>;\n// Processor context interface.\nInterface ProcessingContext;\n// A processor of key-value pair records.\nInterface Processor<KIn,VIn,KOut,VOut>;\n", "des": "Provides a low-level programming model (Processor API, aka, PAPI) to express a (stateful) data flow computation over input topics."}
{"index": 434, "repo": "kafka-streams-3.5.0", "code": "package query\n\n// Marker interface that all interactive queries must implement (see KafkaStreams.query(StateQueryRequest)).\nInterface Query<R>;\n// Container for a single partition's result when executing a StateQueryRequest.\nInterface QueryResult<R>;\n// Interactive query for retrieving a single record based on its key.\nClass KeyQuery<K,V>;\n// A representation of a position vector with respect to a set of topic partitions.\nClass Position;\n", "des": "Provides a query API (aka Interactive Queries) over state stores, for extracting data from a stateful Kafka Streams application."}
{"index": 435, "repo": "kafka-streams-3.5.0", "code": "package state\n\n// A store supplier that can be used to create one or more KeyValueStore<Bytes, byte[]> instances of type <Bytes, byte[]>.\nInterface KeyValueBytesStoreSupplier;\n// Iterator interface of KeyValue.\nInterface KeyValueIterator<K,V>;\n// A key-value store that supports put/get/delete and range queries.\nInterface KeyValueStore<K,V>;\n// Used to enable querying of custom StateStore types via the KafkaStreams API.\nInterface QueryableStoreType<T>;\n", "des": "Provides interfaces for managing the intermediate state of a stateful streams application."}
{"index": 436, "repo": "commons-pool2-2.11.1", "code": "package pool2\n\n// A \"keyed\" pooling interface.\nInterface KeyedObjectPool<K,V>;\n// An interface defining life-cycle methods for instances to be served by a KeyedObjectPool.\nInterface KeyedPooledObjectFactory<K,V>;\n// A pooling simple interface.\nInterface ObjectPool<T>;\n// Defines the wrapper that is used to track the additional information, such as state, for the pooled objects.\nInterface PooledObject<T>;\n", "des": "Object pooling API."}
{"index": 437, "repo": "commons-pool2-2.11.1", "code": "package impl\n\n// Strategy for obtaining and printing the current call stack.\nInterface CallStack;\n// The interface that defines the information about pooled objects that will be exposed via JMX.\nInterface DefaultPooledObjectInfoMBean;\n// To provide a custom eviction policy (i.e.\nInterface EvictionPolicy<T>;\n// Defines the methods that will be made available via JMX.\nInterface GenericKeyedObjectPoolMXBean<K>;\n// Defines the methods that will be made available via JMX.\nInterface GenericObjectPoolMXBean;\n", "des": "Object pooling API implementations."}
{"index": 438, "repo": "commons-pool2-2.11.1", "code": "package proxy\n\n// Provides proxy objects using CGLib.\nClass CglibProxySource<T>;\n// Provides proxy objects using Java reflection.\nClass JdkProxySource<T>;\n// Create a new keyed object pool where the pooled objects are wrapped in proxies allowing better control of pooled objects and in particular the prevention of the continued use of an object by a client after that client returns the object to the pool.\nClass ProxiedKeyedObjectPool<K,V>;\n", "des": "Object pooling proxy implementation."}
{"index": 439, "repo": "hbase-client-3.0.0-alpha-4", "code": "package client\n\n// The administrative API for HBase.\nInterface Admin;\n// This is the low level API for asynchronous scan.\nInterface AdvancedScanResultConsumer;\n// Used to suspend or stop a scan, or get a scan cursor if available.\nInterface AdvancedScanResultConsumer.ScanController;\n// Used to resume a scan.\nInterface AdvancedScanResultConsumer.ScanResumer;\n// The asynchronous administrative API for HBase.\nInterface AsyncAdmin;\n// For creating AsyncAdmin.\nInterface AsyncAdminBuilder;\n", "des": "Provides HBase Client"}
{"index": 440, "repo": "hbase-client-3.0.0-alpha-4", "code": "package coprocessor\n\n// Defines a unit of work to be executed.\nInterface Batch.Call<T,R>;\n// Defines a generic callback to be triggered for each Batch.Call.call(Object) result.\nInterface Batch.Callback<R>;\n// A collection of interfaces and utilities used for interacting with custom RPC interfaces exposed by Coprocessors.\nClass Batch;\n// ColumnInterpreter for doing Aggregation's with BigDecimal columns.\nClass BigDecimalColumnInterpreter;\n", "des": "Provides client classes for invoking Coprocessor RPC protocols Overview Example Usage"}
{"index": 441, "repo": "hbase-client-3.0.0-alpha-4", "code": "package filter\n\n// A BigDecimal comparator which numerical compares against the specified byte array\nClass BigDecimalComparator;\n// A binary comparator which lexicographically compares against the specified byte array using Bytes.compareTo(byte[], byte[]).\nClass BinaryComparator;\n// A comparator which compares against a specified byte array, but only compares specific portion of the byte array.\nClass BinaryComponentComparator;\n", "des": "Provides row-level filters applied to HRegion scan results during calls to ResultScanner.next()."}
{"index": 442, "repo": "hbase-client-3.0.0-alpha-4", "code": "package protobuf\n\n// Protobufs utility.\nClass ProtobufMagic;\n// This class converts PB Messages to various representations, like: JSON string: ProtobufMessageConverter.toJsonElement(MessageOrBuilder) JSON object (gson): ProtobufMessageConverter.toJsonElement(MessageOrBuilder) Java objects (Boolean, Number, String, List, Map): ProtobufMessageConverter.toJavaObject(JsonElement)\nClass ProtobufMessageConverter;\n", "des": "Holds classes generated from protobuf src/main/protobuf definition files."}
{"index": 443, "repo": "lucene-analyzers-icu-8.11.2", "code": "package icu\n\n// A TokenFilter that applies search term folding to Unicode text, applying foldings from UTR#30 Character Foldings.\nClass ICUFoldingFilter;\n// Factory for ICUFoldingFilter.\nClass ICUFoldingFilterFactory;\n// Normalize token text with ICU's Normalizer2.\nClass ICUNormalizer2CharFilter;\n// Factory for ICUNormalizer2CharFilter\nClass ICUNormalizer2CharFilterFactory;\n// Normalize token text with ICU's Normalizer2\nClass ICUNormalizer2Filter;\n", "des": "Analysis components based on ICU"}
{"index": 444, "repo": "lucene-analyzers-icu-8.11.2", "code": "package segmentation\n\n// Default ICUTokenizerConfig that is generally applicable to many languages.\nClass DefaultICUTokenizerConfig;\n// Breaks text into words according to UAX #29: Unicode Text Segmentation (http://www.unicode.org/reports/tr29/)\nClass ICUTokenizer;\n// Class that allows for tailored Unicode Text Segmentation on a per-writing system basis.\nClass ICUTokenizerConfig;\n// Factory for ICUTokenizer.\nClass ICUTokenizerFactory;\n", "des": "Tokenizer that breaks text into words with the Unicode Text Segmentation algorithm."}
{"index": 445, "repo": "lucene-analyzers-icu-8.11.2", "code": "package tokenattributes\n\n// This attribute stores the UTR #24 script value for a token of text.\nInterface ScriptAttribute;\n// Implementation of ScriptAttribute that stores the script as an integer.\nClass ScriptAttributeImpl;\n", "des": "Additional ICU-specific Attributes for text analysis."}
{"index": 446, "repo": "lucene-analyzers-icu-8.11.2", "code": "package collation\n\n// Converts each token into its CollationKey, and then encodes bytes as an index term.\nClass ICUCollationAttributeFactory;\n// Indexes collation keys as a single-valued SortedDocValuesField.\nClass ICUCollationDocValuesField;\n// Configures KeywordTokenizer with ICUCollationAttributeFactory.\nClass ICUCollationKeyAnalyzer;\n", "des": "Unicode Collation support."}
{"index": 447, "repo": "lucene-analyzers-icu-8.11.2", "code": "package tokenattributes\n\n// Extension of CharTermAttributeImpl that encodes the term text as a binary Unicode collation key instead of as UTF-8 bytes.\nClass ICUCollatedTermAttributeImpl;\n", "des": "Custom AttributeImpl for indexing collation keys as index terms."}
{"index": 448, "repo": "zookeeper-3.8.2", "code": "package server\n\n// This MBean represents a client connection.\nInterface ConnectionMXBean;\n// Zookeeper data tree MBean.\nInterface DataTreeMXBean;\n// The interface defined to manage the hash based on the entries in the nodes map.\nInterface NodeHashMap;\n// RequestProcessors are chained together to process transactions.\nInterface RequestProcessor;\n// \nInterface ServerStats.Provider;\n// This is the basic interface that ZooKeeperServer uses to track sessions.\nInterface SessionTracker;\n", "des": "ZooKeeper server theory of operation"}
{"index": 449, "repo": "camel-core-3.0.0-RC1", "code": "package builder\n\n// Task or command being executed when using the advice with feature.\nInterface AdviceWithTask;\n// Type-safe endpoint DSL for building consumer endpoints.\nInterface EndpointConsumerBuilder;\n// Type-safe endpoint DSL for building producer endpoints.\nInterface EndpointProducerBuilder;\n// A builder of a Error Handler\nInterface ErrorHandlerBuilder;\n// \nInterface FlexibleAggregationStrategy.CompletionAwareMixin;\n// \nInterface FlexibleAggregationStrategy.TimeoutAwareMixin;\n", "des": "The Camel Domain Specific Language for creating Routes, Predicates, Expressions and Error Handlers."}
{"index": 450, "repo": "camel-core-3.0.0-RC1", "code": "package model\n\n// Interface to add block featuring to the XML element type.\nInterface Block;\n// To be used for configuring property placeholder options on the EIP models.\nInterface DefinitionPropertyPlaceholderConfigurer;\n// A ProcessorDefinition that requires to be configured with an Endpoint such as SendDefinition.\nInterface EndpointRequiredDefinition;\n// Enables definitions to support concurrency using ExecutorService\nInterface ExecutorServiceAwareDefinition<Type extends ProcessorDefinition<?>>;\n", "des": "The JAXB POJOs for the XML Configuration of the routing rules."}
{"index": 451, "repo": "camel-core-3.0.0-RC1", "code": "package cloud\n\n// \nClass BlacklistServiceCallServiceFilterConfiguration;\n// \nClass CachingServiceCallServiceDiscoveryConfiguration;\n// \nClass CombinedServiceCallServiceDiscoveryConfiguration;\n// \nClass CombinedServiceCallServiceFilterConfiguration;\n// \nClass ConsulServiceCallServiceDiscoveryConfiguration;\n// \nClass CustomServiceCallServiceFilterConfiguration;\n// \nClass DefaultServiceCallServiceLoadBalancerConfiguration;\n// \nClass DnsServiceCallServiceDiscoveryConfiguration;\n", "des": "The JAXB POJOs for the remote service call DSL"}
{"index": 452, "repo": "camel-core-3.0.0-RC1", "code": "package config\n\n// Configures batch-processing resequence eip.\nClass BatchResequencerConfig;\n// \nClass ResequencerConfig;\n// Configures stream-processing resequence eip.\nClass StreamResequencerConfig;\n", "des": "The JAXB POJOs for various configurations for the XML Configuration of the routing rules."}
{"index": 453, "repo": "camel-core-3.0.0-RC1", "code": "package dataformat\n\n// Any23 data format is used for parsing data to RDF.\nClass Any23DataFormat;\n// The ASN.1 data format is used for file transfer with telecommunications protocols.\nClass ASN1DataFormat;\n// The Avro data format is used for serialization and deserialization of messages using Apache Avro binary dataformat.\nClass AvroDataFormat;\n// The Barcode data format is used for creating barccode images (such as QR-Code)\nClass BarcodeDataFormat;\n", "des": "The JAXB POJOs for the Data Formats used to marshal and unmarshal objects to and from streams inside components"}
{"index": 454, "repo": "camel-core-3.0.0-RC1", "code": "package language\n\n// To use a constant value in Camel expressions or predicates.\nClass ConstantExpression;\n// To use a Camel Exchange property in expressions or predicates.\nClass ExchangePropertyExpression;\n// A useful base class for an expression\nClass ExpressionDefinition;\n// To use Groovy scripts in Camel expressions or predicates.\nClass GroovyExpression;\n// To use a Camel Message header in expressions or predicates.\nClass HeaderExpression;\n", "des": "The JAXB POJOs for the Expression and Predicate plugins for the XML Configuration."}
{"index": 455, "repo": "camel-core-3.0.0-RC1", "code": "package loadbalancer\n\n// Custom load balancer\nClass CustomLoadBalancerDefinition;\n// Failover load balancer The failover load balancer is capable of trying the next processor in case an Exchange failed with an exception during processing.\nClass FailoverLoadBalancerDefinition;\n// Random load balancer The random load balancer selects a random endpoint for each exchange.\nClass RandomLoadBalancerDefinition;\n", "des": "The JAXB POJOs for the Load Balancer EIP pattern for the XML Configuration."}
{"index": 456, "repo": "camel-core-3.0.0-RC1", "code": "package rest\n\n// Container to hold Rest.\nInterface RestContainer;\n// Rest DELETE command\nClass DeleteVerbDefinition;\n// Rest GET command\nClass GetVerbDefinition;\n// Rest HEAD command\nClass HeadVerbDefinition;\n// Rest PATCH command\nClass PatchVerbDefinition;\n// Rest POST command\nClass PostVerbDefinition;\n// Rest PUT command\nClass PutVerbDefinition;\n// To configure rest binding\nClass RestBindingDefinition;\n// To configure rest\nClass RestConfigurationDefinition;\n// \nClass RestConstants;\n", "des": "The JAXB POJOs for the REST DSL"}
{"index": 457, "repo": "camel-core-3.0.0-RC1", "code": "package transformer\n\n// Represents a CustomTransformer.\nClass CustomTransformerDefinition;\n// Represents a DataFormatTransformer which leverages DataFormat to perform transformation.\nClass DataFormatTransformerDefinition;\n// Represents an endpoint Transformer which leverages camel Endpoint to perform transformation.\nClass EndpointTransformerDefinition;\n", "des": "The JAXB POJOs for the Transformers used to transform message contents according to declared data types inside components"}
{"index": 458, "repo": "camel-core-3.0.0-RC1", "code": "package validator\n\n// Represents a CustomValidator.\nClass CustomValidatorDefinition;\n// Represents an endpoint Validator which leverages camel validator component such as Validator Component and Bean Validator Component to perform content validation.\nClass EndpointValidatorDefinition;\n// Represents a predicate Validator which leverages expression or predicates to perform content validation.\nClass PredicateValidatorDefinition;\n", "des": "The JAXB POJOs for the Transformers used to transform message contents according to declared data types inside components"}
{"index": 459, "repo": "camel-core-3.0.0-RC1", "code": "package impl\n\n// Represents the context used to configure routes and the policies to use.\nClass AbstractModelCamelContext;\n// Represents the context used to configure routes and the policies to use.\nClass DefaultCamelContext;\n// Default ExecutorServiceManager.\nClass DefaultExecutorServiceManager;\n// \nClass DefaultModel;\n// Default implementation of ModelJAXBContextFactory.\nClass DefaultModelJAXBContextFactory;\n// use JndiBeanRepository instead.\nClass JndiRegistry;\n", "des": "Default implementation classes for Camel Core"}
{"index": 460, "repo": "camel-core-3.0.0-RC1", "code": "package cluster\n\n// \nInterface ClusteredRouteFilter;\n// \nClass ClusteredRouteConfiguration;\n// \nClass ClusteredRouteController;\n// \nClass ClusteredRouteFilters;\n// \nClass ClusteredRouteFilters.BlackList;\n// \nClass ClusteredRouteFilters.IsAutoStartup;\n// \nClass ClusteredRoutePolicy;\n// \nClass ClusteredRoutePolicyFactory;\n", "des": "Base classes and implementation for Camel Cluster"}
{"index": 461, "repo": "commons-geometry-spherical-1.0", "code": "package oned\n\n// Class representing an angular interval of size greater than zero to 2pi.\nClass AngularInterval;\n// Class representing an angular interval with the additional property that the region is convex.\nClass AngularInterval.Convex;\n// Class representing an oriented point in 1-dimensional spherical space, meaning an azimuth angle and a direction (increasing or decreasing angles) along the circle.\nClass CutAngle;\n", "des": "This package provides basic geometry components on the 1-sphere."}
{"index": 462, "repo": "commons-geometry-spherical-1.0", "code": "package twod\n\n// Extension of the BoundarySource interface for spherical 2D space.\nInterface BoundarySource2S;\n// Abstract class for joining collections of great arcs into connected paths.\nClass AbstractGreatArcConnector;\n// Internal class for connecting GreatArcs into GreatArcPaths.\nClass AbstractGreatArcConnector.ConnectableGreatArc;\n// BoundarySource2S implementation that uses boundaries stored in a list.\nClass BoundaryList2S;\n", "des": "This package provides basic geometry components on the 2-sphere."}
{"index": 463, "repo": "jackson-core-2.15.2", "code": "package core\n\n// Marker interface that is to be implemented by data format - specific features.\nInterface FormatFeature;\n// Simple tag interface used to mark schema objects that are used by some JsonParser and JsonGenerator implementations to further specify structure of expected format.\nInterface FormatSchema;\n// Interface defined to contain ids accessible with JsonToken.id().\nInterface JsonTokenId;\n", "des": "Main public API classes of the core streaming JSON processor: most importantly JsonFactory used for constructing JSON parser (JsonParser) and generator (JsonGenerator) instances."}
{"index": 464, "repo": "jackson-core-2.15.2", "code": "package async\n\n// NonBlockingInputFeeder implementation used when feeding data as byte arrays.\nInterface ByteArrayFeeder;\n// NonBlockingInputFeeder implementation used when feeding data as ByteBuffer contents.\nInterface ByteBufferFeeder;\n// Interface used by non-blocking JsonParser implementations to feed input to parse.\nInterface NonBlockingInputFeeder;\n", "des": "Package that contains abstractions needed to support optional non-blocking decoding (parsing) functionality."}
{"index": 465, "repo": "jackson-core-2.15.2", "code": "package base\n\n// This base class implements part of API that a JSON generator exposes to applications, adds shared internal methods that sub-classes can use and adds some abstract methods sub-classes must implement.\nClass GeneratorBase;\n// Intermediate base class used by all Jackson JsonParser implementations.\nClass ParserBase;\n", "des": "Base classes used by concrete Parser and Generator implementations; contain functionality that is not specific to JSON or input abstraction (byte vs char)."}
{"index": 466, "repo": "jackson-core-2.15.2", "code": "package exc\n\n// Exception type for read-side problems that are not direct decoding (\"parsing\") problems (those would be reported as JsonParseExceptions), but rather result from failed attempts to convert specific Java value out of valid but incompatible input value.\nClass InputCoercionException;\n// Exception type used to indicate violations of stream constraints (for example StreamReadConstraints) when reading or writing content.\nClass StreamConstraintsException;\n", "des": "Package for some of JsonProcessingException subtypes contained by streaming API."}
{"index": 467, "repo": "jackson-core-2.15.2", "code": "package format\n\n// Interface used to expose beginning of a data file to data format detection code.\nInterface InputAccessor;\n// Simple helper class that allows data format (content type) auto-detection, given an ordered set of JsonFactory instances to use for actual low-level detection.\nClass DataFormatDetector;\n// Result object constructed by DataFormatDetector when requested to detect format of given input data.\nClass DataFormatMatcher;\n", "des": "Package that contains interfaces needed for dynamic, pluggable format (auto)detection; as well as basic utility classes for simple format detection functionality."}
{"index": 468, "repo": "jackson-core-2.15.2", "code": "package json\n\n// This class is used to determine the encoding of byte stream that is to contain JSON content.\nClass ByteSourceJsonBootstrapper;\n// Helper class used if JsonParser.Feature.STRICT_DUPLICATE_DETECTION is enabled.\nClass DupDetector;\n// Intermediate base class shared by JSON-backed generators like UTF8JsonGenerator and WriterBasedJsonGenerator.\nClass JsonGeneratorImpl;\n", "des": "JSON-specific parser and generator implementation classes that Jackson defines and uses."}
{"index": 469, "repo": "jackson-core-2.15.2", "code": "package async\n\n// Non-blocking parser implementation for JSON content that takes its input via ByteBuffer instance(s) passed.\nClass NonBlockingByteBufferJsonParser;\n// Non-blocking parser implementation for JSON content that takes its input via byte[] passed.\nClass NonBlockingJsonParser;\n// Intermediate base class for non-blocking JSON parsers.\nClass NonBlockingJsonParserBase;\n// Non-blocking parser base implementation for JSON content.\nClass NonBlockingUtf8JsonParserBase;\n", "des": "Non-blocking (\"async\") JSON parser implementation."}
{"index": 470, "repo": "jackson-core-2.15.2", "code": "package sym\n\n// Replacement for BytesToNameCanonicalizer which aims at more localized memory access due to flattening of name quad data.\nClass ByteQuadsCanonicalizer;\n// This class is a kind of specialized type-safe Map, from char array to String value.\nClass CharsToNameCanonicalizer;\n// Base class for tokenized names (key strings in objects) that have been tokenized from byte-based input sources (like InputStream.\nClass Name;\n", "des": "Internal implementation classes for efficient handling of of symbols in JSON (field names in Objects)"}
{"index": 471, "repo": "jackson-core-2.15.2", "code": "package type\n\n// Type abstraction that represents Java type that has been resolved (i.e.\nClass ResolvedType;\n// This generic abstract class is used for obtaining full generics type information by sub-classing; it must be converted to ResolvedType implementation (implemented by JavaType from \"databind\" bundle) to be used.\nClass TypeReference<T>;\n// This is a simple value class used between core streaming and higher level databinding to pass information about type ids to write.\nClass WritableTypeId;\n", "des": "Contains classes needed for type introspection, mostly used by data binding functionality."}
{"index": 472, "repo": "jackson-core-2.15.2", "code": "package util\n\n// Interface that defines objects that can produce indentation used to separate object entries and array values.\nInterface DefaultPrettyPrinter.Indenter;\n// Add-on interface used to indicate things that may be \"blueprint\" objects which can not be used as is, but are used for creating usable per-process (serialization, deserialization) instances, using Instantiatable.createInstance() method.\nInterface Instantiatable<T>;\n", "des": "Utility classes used by Jackson Core functionality."}
{"index": 473, "repo": "beam-sdks-java-core-2.49.0", "code": "package sdk\n\n// For internal use only; no backwards-compatibility guarantees.\nInterface Pipeline.PipelineVisitor;\n// Result of Pipeline.run().\nInterface PipelineResult;\n// A Pipeline manages a directed acyclic graph of PTransforms, and the PCollections that the PTransforms consume and produce.\nClass Pipeline;\n// Default no-op Pipeline.PipelineVisitor that enters all composite transforms.\nClass Pipeline.PipelineVisitor.Defaults;\n", "des": "Provides a simple, powerful model for building both batch and streaming parallel data processing Pipelines."}
{"index": 474, "repo": "beam-sdks-java-core-2.49.0", "code": "package annotations\n\n// Signifies that a publicly accessible API (public class, method or field) is intended for internal use only and not for public consumption.\nAnnotation Type Internal;\n", "des": "Defines annotations used across the SDK."}
{"index": 475, "repo": "beam-sdks-java-core-2.49.0", "code": "package coders\n\n// Coder creators have the ability to automatically have their coders registered with this SDK by creating a ServiceLoader entry and a concrete implementation of this interface.\nInterface CoderProviderRegistrar;\n// A CodingFunction<InputT, OutputT> is a serializable function from InputT to OutputT that may throw any Exception.\nInterface DelegateCoder.CodingFunction<InputT,OutputT>;\n// A Coder that has no component Coders or other configuration.\nClass AtomicCoder<T>;\n", "des": "Defines Coders to specify how data is encoded to and decoded from byte strings."}
{"index": 476, "repo": "beam-sdks-java-core-2.49.0", "code": "package expansion\n\n// A registrar which contains a mapping from URNs to available ExternalTransformBuilders.\nInterface ExternalTransformRegistrar;\n", "des": "Contains classes needed to expose transforms to other SDKs."}
{"index": 477, "repo": "beam-sdks-java-core-2.49.0", "code": "package function\n\n// A ThrowingConsumer that can be closed.\nInterface CloseableThrowingConsumer<ExceptionT extends java.lang.Exception,T>;\n// A BiConsumer which can throw Exceptions.\nInterface ThrowingBiConsumer<T1,T2>;\n// A BiFunction which can throw Exceptions.\nInterface ThrowingBiFunction<T1,T2,T3>;\n// A Consumer which can throw Exceptions.\nInterface ThrowingConsumer<ExceptionT extends java.lang.Exception,T>;\n// A Function which can throw Exceptions.\nInterface ThrowingFunction<T1,T2>;\n", "des": "Java 8 functional interface extensions."}
{"index": 478, "repo": "beam-sdks-java-core-2.49.0", "code": "package harness\n\n// A service interface for defining one-time initialization of the JVM during pipeline execution.\nInterface JvmInitializer;\n", "des": "Utilities for configuring worker environment."}
{"index": 479, "repo": "beam-sdks-java-core-2.49.0", "code": "package io\n\n// Users can achieve the same by providing this transform in a ParDo before using write in AvroIO AvroIO.write(Class).\nInterface AvroIO.RecordFormatter<ElementT>;\n// \nInterface AvroSink.DatumWriterFactory<T>;\n// \nInterface AvroSource.DatumReaderFactory<T>;\n// Factory interface for creating channels that decompress the content of an underlying channel.\nInterface CompressedSource.DecompressingChannelFactory;\n", "des": "Defines transforms for reading and writing common storage formats, including AvroIO, and TextIO."}
{"index": 480, "repo": "beam-sdks-java-core-2.49.0", "code": "package fs\n\n", "des": "Apache Beam FileSystem interfaces and their default implementations."}
{"index": 481, "repo": "beam-sdks-java-core-2.49.0", "code": "package range\n\n// A RangeTracker is a thread-safe helper object for implementing dynamic work rebalancing in position-based BoundedSource.BoundedReader subclasses.\nInterface RangeTracker<PositionT>;\n// A class representing a key consisting of an array of bytes.\nClass ByteKey;\n// A class representing a range of ByteKeys.\nClass ByteKeyRange;\n// A RangeTracker for ByteKeys in ByteKeyRanges.\nClass ByteKeyRangeTracker;\n// A restriction represented by a range of integers [from, to).\nClass OffsetRange;\n", "des": "Provides thread-safe helpers for implementing dynamic work rebalancing in position-based bounded sources."}
{"index": 482, "repo": "beam-sdks-java-core-2.49.0", "code": "package metrics\n\n// A metric that reports a single long value and can be incremented or decremented.\nInterface Counter;\n// A metric that reports information about the distribution of reported values.\nInterface Distribution;\n// A metric that reports the latest value out of reported values.\nInterface Gauge;\n// A metric that reports information about the histogram of reported values.\nInterface Histogram;\n// Marker interface for all user-facing metrics.\nInterface Metric;\n", "des": "Metrics allow exporting information about the execution of a pipeline."}
{"index": 483, "repo": "beam-sdks-java-core-2.49.0", "code": "package options\n\n// Options that allow setting the application name.\nInterface ApplicationNameOptions;\n// An interface used with the Default.InstanceFactory annotation to specify the class that will be an instance factory to produce default values for a given getter on PipelineOptions.\nInterface DefaultValueFactory<T>;\n// Options for configuring the ScheduledExecutorService used throughout the Java runtime.\nInterface ExecutorOptions;\n", "des": "Defines PipelineOptions for configuring pipeline execution."}
{"index": 484, "repo": "beam-sdks-java-core-2.49.0", "code": "package runners\n\n// For internal use only; no backwards-compatibility guarantees.\nInterface PipelineRunnerRegistrar;\n// For internal use only; no backwards-compatibility guarantees.\nInterface PTransformMatcher;\n// For internal use only; no backwards-compatibility guarantees.\nInterface PTransformOverrideFactory<InputT extends PInput,OutputT extends POutput,TransformT extends PTransform<? super InputT,OutputT>>;\n", "des": "For internal use only; no backwards compatibility guarantees."}
{"index": 485, "repo": "beam-sdks-java-core-2.49.0", "code": "package schemas\n\n// A Factory interface for schema-related objects for a specific Java type.\nInterface Factory<T>;\n// For internal use only; no backwards-compatibility guarantees.\nInterface FieldValueGetter<ObjectT,ValueT>;\n// For internal use only; no backwards-compatibility guarantees.\nInterface FieldValueSetter<ObjectT,ValueT>;\n", "des": "Defines Schema and other classes for representing schema'd data in a Pipeline."}
{"index": 486, "repo": "beam-sdks-java-core-2.49.0", "code": "package annotations\n\n// SchemaProvider for default schemas.\nClass DefaultSchema.DefaultSchemaProvider;\n// Registrar for default schemas.\nClass DefaultSchema.DefaultSchemaProviderRegistrar;\n// The DefaultSchema annotation specifies a SchemaProvider class to handle obtaining a schema and row for the specified class.\nAnnotation Type DefaultSchema;\n// When used on a POJO, Java Bean, or AutoValue class the specified case format will be used for all the generated Schema fields.\nAnnotation Type SchemaCaseFormat;\n", "des": "Defines Schema and other classes for representing schema'd data in a Pipeline."}
{"index": 487, "repo": "beam-sdks-java-core-2.49.0", "code": "package io\n\n// A Provider for generic DLQ transforms that handle deserialization failures.\nInterface GenericDlqProvider;\n// \nInterface Providers.Identifyable;\n// An abstraction to create schema capable and aware IOs.\nInterface SchemaIO;\n// Provider to create SchemaIO instances for use in Beam SQL and other SDKs.\nInterface SchemaIOProvider;\n// \nClass DeadLetteredTransform<InputT,OutputT>;\n// A generic failure of an SQL transform.\nClass Failure;\n// \nClass Failure.Builder;\n", "des": "Provides abstractions for schema-aware IOs."}
{"index": 488, "repo": "beam-sdks-java-core-2.49.0", "code": "package payloads\n\n// \nInterface PayloadSerializer;\n// \nInterface PayloadSerializerProvider;\n// Avro related classes are deprecated in module beam-sdks-java-core and will be eventually removed.\nClass AvroPayloadSerializerProvider;\n// \nClass JsonPayloadSerializerProvider;\n// \nClass PayloadSerializers;\n", "des": "Provides abstractions for schema-aware IOs."}
{"index": 489, "repo": "beam-sdks-java-core-2.49.0", "code": "package logicaltypes\n\n// A date without a time-zone.\nClass Date;\n// A datetime without a time-zone.\nClass DateTime;\n// This Schema.LogicalType represent an enumeration over a fixed set of values.\nClass EnumerationType;\n// This class represents a single enum value.\nClass EnumerationType.Value;\n// A LogicalType representing a fixed-length byte array.\nClass FixedBytes;\n// Fixed precision numeric types used to represent jdbc NUMERIC and DECIMAL types.\nClass FixedPrecisionNumeric;\n", "des": "A set of common LogicalTypes for use with schemas."}
{"index": 490, "repo": "beam-sdks-java-core-2.49.0", "code": "package parser\n\n// Parser for textual field-access selector.\nClass FieldAccessDescriptorParser;\n", "des": "Defines utilities for deailing with schemas."}
{"index": 491, "repo": "beam-sdks-java-core-2.49.0", "code": "package generated\n\n// This interface defines a complete listener for a parse tree produced by FieldSpecifierNotationParser.\nInterface FieldSpecifierNotationListener;\n// This interface defines a complete generic visitor for a parse tree produced by FieldSpecifierNotationParser.\nInterface FieldSpecifierNotationVisitor<T>;\n", "des": "Defines utilities for deailing with schemas."}
{"index": 492, "repo": "beam-sdks-java-core-2.49.0", "code": "package transforms\n\n// Interface for statically validating casts.\nInterface Cast.Validator;\n// An abstraction to create schema capable and aware transforms.\nInterface SchemaTransform;\n// Provider to create SchemaTransform instances for use in Beam SQL and other SDKs.\nInterface SchemaTransformProvider;\n// A transform to add new nullable fields to a PCollection's schema.\nClass AddFields;\n// Inner PTransform for AddFields.\nClass AddFields.Inner<T>;\n", "des": "Defines transforms that work on PCollections with schemas.."}
{"index": 493, "repo": "beam-sdks-java-core-2.49.0", "code": "package utils\n\n// \nInterface ByteBuddyUtils.TypeConversionsFactory;\n// A naming policy for schema fields.\nInterface FieldValueTypeSupplier;\n// A selector interface for extracting fields from a row.\nInterface RowSelector;\n// Utilities for managing AutoValue schemas.\nClass AutoValueUtils;\n// Avro related classes are deprecated in module beam-sdks-java-core and will be eventually removed.\nClass AvroUtils;\n// \nClass AvroUtils.AvroConvertType;\n// \nClass AvroUtils.AvroConvertValueForGetter;\n", "des": "Defines utilities for deailing with schemas."}
{"index": 494, "repo": "beam-sdks-java-core-2.49.0", "code": "package state\n\n// A ReadableState cell containing a bag of values.\nInterface BagState<T>;\n// A ReadableState cell defined by a Combine.CombineFn, accepting multiple input values, combining them as specified into accumulators, and producing a single output value.\nInterface CombiningState<InputT,AccumT,OutputT>;\n// A ReadableState cell that combines multiple input values and outputs a single value of a different type.\nInterface GroupingState<InputT,OutputT>;\n", "des": "Classes and interfaces for interacting with state."}
{"index": 495, "repo": "beam-sdks-java-core-2.49.0", "code": "package testing\n\n// Category tag for tests that use a Flatten where the input PCollectionList contains PCollections heterogeneous coders.\nInterface FlattenWithHeterogeneousCoders;\n// Category tags for tests which validate that a Beam runner can handle keys up to a given size.\nInterface LargeKeys;\n// Tests if a runner supports 100KB keys.\nInterface LargeKeys.Above100KB;\n// Tests if a runner supports 100MB keys.\nInterface LargeKeys.Above100MB;\n", "des": "Defines utilities for unit testing Apache Beam pipelines."}
{"index": 496, "repo": "beam-sdks-java-core-2.49.0", "code": "package transforms\n\n// The type of mutable accumulator values used by this AccumulatingCombineFn.\nInterface Combine.AccumulatingCombineFn.Accumulator<InputT,AccumT,OutputT>;\n// For internal use only; no backwards-compatibility guarantees.\nInterface CombineFnBase.GlobalCombineFn<InputT,AccumT,OutputT>;\n// An internal interface for signaling that a GloballyCombineFn or a PerKeyCombineFn needs to access CombineWithContext.Context.\nInterface CombineWithContext.RequiresContextInternal;\n", "des": "Defines PTransforms for transforming data in a pipeline."}
{"index": 497, "repo": "beam-sdks-java-core-2.49.0", "code": "package display\n\n// Utility to build up display data from a component and its included subcomponents.\nInterface DisplayData.Builder;\n// Marker interface for PTransforms and components to specify display data used within UIs and diagnostic tools.\nInterface HasDisplayData;\n// Static display data associated with a pipeline component.\nClass DisplayData;\n// Unique identifier for a display data item within a component.\nClass DisplayData.Identifier;\n// Items are the unit of display data.\nClass DisplayData.Item;\n", "des": "Defines HasDisplayData for annotating components which provide display data used within UIs and diagnostic tools."}
{"index": 498, "repo": "beam-sdks-java-core-2.49.0", "code": "package join\n\n// A row result of a CoGroupByKey.\nClass CoGbkResult;\n// A Coder for CoGbkResults.\nClass CoGbkResult.CoGbkResultCoder;\n// A schema for the results of a CoGroupByKey.\nClass CoGbkResultSchema;\n// A PTransform that performs a CoGroupByKey on a tuple of tables.\nClass CoGroupByKey<K>;\n// An immutable tuple of keyed PCollections with key type K.\nClass KeyedPCollectionTuple<K>;\n", "des": "Defines the CoGroupByKey transform for joining multiple PCollections."}
{"index": 499, "repo": "beam-sdks-java-core-2.49.0", "code": "package reflect\n\n// Interface for invoking the DoFn processing methods.\nInterface DoFnInvoker<InputT,OutputT>;\n// Interface for runner implementors to provide implementations of extra context information.\nInterface DoFnInvoker.ArgumentProvider<InputT,OutputT>;\n// A method delegated to an annotated method of an underlying DoFn.\nInterface DoFnSignature.DoFnMethod;\n", "des": "For internal use only; no backwards-compatibility guarantees."}
{"index": 500, "repo": "beam-sdks-java-core-2.49.0", "code": "package resourcehints\n\n// Options that are used to control configuration of the remote environment.\nInterface ResourceHintsOptions;\n// Provides a definition of a resource hint known to the SDK.\nClass ResourceHint;\n// Pipeline authors can use resource hints to provide additional information to runners about the desired aspects of the execution environment.\nClass ResourceHints;\n// \nClass ResourceHintsOptions.EmptyListDefault;\n// Register the ResourceHintsOptions.\nClass ResourceHintsOptions.Options;\n", "des": "Defines ResourceHints for configuring pipeline execution."}
{"index": 501, "repo": "beam-sdks-java-core-2.49.0", "code": "package splittabledofn\n\n// Provides the estimated end offset of the range.\nInterface GrowableOffsetRangeTracker.RangeEndEstimator;\n// Interface for restrictions for which a default implementation of DoFn.NewTracker is available, depending only on the restriction itself.\nInterface HasDefaultTracker<RestrictionT extends HasDefaultTracker<RestrictionT,TrackerT>,TrackerT extends RestrictionTracker<RestrictionT,?>>;\n", "des": "Defines utilities related to splittable DoFn."}
{"index": 502, "repo": "beam-sdks-java-core-2.49.0", "code": "package windowing\n\n// A composite Trigger that fires when all of its sub-triggers are ready.\nClass AfterAll;\n// A composite Trigger that executes its sub-triggers in order.\nClass AfterEach;\n// A composite Trigger that fires once after at least one of its sub-triggers have fired.\nClass AfterFirst;\n// A Trigger that fires at some point after a specified number of input elements have arrived.\nClass AfterPane;\n", "des": "Defines the Window transform for dividing the elements in a PCollection into windows, and the Trigger for controlling when those elements are output."}
{"index": 503, "repo": "beam-sdks-java-core-2.49.0", "code": "package util\n\n// Back-off policy when retrying an operation.\nInterface BackOff;\n// \nInterface HistogramData.BucketType;\n// An object for detecting illegal mutations.\nInterface MutationDetector;\n// Classes may implement this interface to change how names are generated for their instances.\nInterface NameUtils.NameOverride;\n// Bare-bones class for using sharded files.\nInterface ShardedFile;\n", "des": "For internal use only; no backwards compatibility guarantees."}
{"index": 504, "repo": "beam-sdks-java-core-2.49.0", "code": "package common\n\n// An Iterable that returns Reiterator iterators.\nInterface Reiterable<T>;\n// An Iterator with the ability to copy its iteration state.\nInterface Reiterator<T>;\n// An abstract class used for iterables that notify observers about size in bytes of their elements, as they are being iterated over.\nClass ElementByteSizeObservableIterable<V,InputT extends ElementByteSizeObservableIterator<V>>;\n", "des": "Defines utilities shared by multiple PipelineRunner implementations."}
{"index": 505, "repo": "beam-sdks-java-core-2.49.0", "code": "package values\n\n// A PCollectionView<T> is an immutable view of a PCollection as a value of type T that can be accessed as a side input to a ParDo transform.\nInterface PCollectionView<T>;\n// \nInterface PCollectionViews.HasDefaultValue<T>;\n// \nInterface PCollectionViews.IsSingletonView<T>;\n// \nInterface PCollectionViews.TypeDescriptorSupplier<T>;\n// The interface for things that might be input to a PTransform.\nInterface PInput;\n", "des": "Defines PCollection and other classes for representing data in a Pipeline."}
{"index": 506, "repo": "commons-vfs2-2.9.0", "code": "package vfs2\n\n// Represents the data content of a file.\nInterface FileContent;\n// Informs on the content of a file with content type and encoding.\nInterface FileContentInfo;\n// Creates FileContentInfo instances to determine the content-info for given file contents.\nInterface FileContentInfoFactory;\n// This interface is used to select files when traversing the direct children of the base.\nInterface FileFilter;\n// Listens for changes to a file.\nInterface FileListener;\n", "des": "The public VFS API."}
{"index": 507, "repo": "commons-vfs2-2.9.0", "code": "package auth\n\n// Provides always the same credentials data passed in with the constructor.\nClass StaticUserAuthenticator;\n", "des": "VFS Authentication implementation"}
{"index": 508, "repo": "commons-vfs2-2.9.0", "code": "package cache\n\n// Abstract base class for FilesCache implementations.\nClass AbstractFilesCache;\n// A simple FilesCache implementation.\nClass DefaultFilesCache;\n// This implementation caches every file using LRUMap.\nClass LRUFilesCache;\n// A FilesCache implementation.\nClass NullFilesCache;\n// This decorator refreshes the fileObject data on every call.\nClass OnCallRefreshFileObject;\n// This implementation caches every file as long as it is strongly reachable by the JVM.\nClass SoftRefFilesCache;\n", "des": "VFS File caching"}
{"index": 509, "repo": "commons-vfs2-2.9.0", "code": "package events\n\n// A change event that knows how to notify a listener.\nClass AbstractFileChangeEvent;\n// File changed event.\nClass ChangedEvent;\n// File creation event.\nClass CreateEvent;\n// File deletion event.\nClass DeleteEvent;\n", "des": "VFS Events"}
{"index": 510, "repo": "commons-vfs2-2.9.0", "code": "package filter\n\n// Defines operations for conditional file filters.\nInterface ConditionalFileFilter;\n// Filters files based on a cutoff time, can filter either newer files or files equal to or older.\nClass AgeFileFilter;\n// A filter providing conditional AND logic across a list of file filters.\nClass AndFileFilter;\n// This filter accepts Files that can be executed.\nClass CanExecuteFileFilter;\n// This filter accepts Files that can be read.\nClass CanReadFileFilter;\n", "des": "Implementations of org.apache.commons.vfs2.FileFilter."}
{"index": 511, "repo": "commons-vfs2-2.9.0", "code": "package function\n\n// A Consumer that throws FileSystemException.\nInterface VfsConsumer<T>;\n", "des": "Functional interface types in the style of java.util.function."}
{"index": 512, "repo": "commons-vfs2-2.9.0", "code": "package impl\n\n// Base class to build a fileObject decoration.\nClass DecoratedFileObject;\n// The default file content information.\nClass DefaultFileContentInfo;\n// A polling FileMonitor implementation.\nClass DefaultFileMonitor;\n// A simple file replicator and temporary file store.\nClass DefaultFileReplicator;\n// Default options usable for all file systems.\nClass DefaultFileSystemConfigBuilder;\n// The default file system manager implementation.\nClass DefaultFileSystemManager;\n", "des": "The standard VFS implementation."}
{"index": 513, "repo": "commons-vfs2-2.9.0", "code": "package operations\n\n// A FileOperation is an object that brings an extra function to a FileObject.\nInterface FileOperation;\n// FileOperationProvider is responsible for dealing with FileOperation's.\nInterface FileOperationProvider;\n// FileOperations interface provides API to work with operations.\nInterface FileOperations;\n// \nClass AbstractFileOperation;\n// \nClass AbstractFileOperationProvider;\n// \nClass DefaultFileOperations;\n", "des": "VFS Operations handling."}
{"index": 514, "repo": "commons-vfs2-2.9.0", "code": "package vcs\n\n// \nInterface VcsAdd;\n// \nInterface VcsCheckout;\n// \nInterface VcsCommit;\n// \nInterface VcsCommitListener;\n// \nInterface VcsDelete;\n// \nInterface VcsLog;\n// \nInterface VcsLogEntryHandler;\n// \nInterface VcsModifyListener;\n// Restores pristine working copy file and cancels all local modifications.\nInterface VcsRevert;\n// \nInterface VcsUpdate;\n// \nInterface VcsUpdateListener;\n// \nClass VcsLogEntry;\n// \nEnum VcsStatus;\n", "des": "VFS version control operations."}
{"index": 515, "repo": "commons-vfs2-2.9.0", "code": "package provider\n\n// Provides methods to parse a file name into a FileName.\nInterface FileNameParser;\n// A file provider.\nInterface FileProvider;\n// Responsible for making local replicas of files.\nInterface FileReplicator;\n// A file provider which handles local files.\nInterface LocalFileProvider;\n// Manages a repository of temporary local files.\nInterface TemporaryFileStore;\n// This interface is used to manage the lifecycle of all VFS components.\nInterface VfsComponent;\n", "des": "The File Provider API, and utility classes."}
{"index": 516, "repo": "commons-vfs2-2.9.0", "code": "package bzip2\n\n// the bzip2 file.\nClass Bzip2FileObject;\n// Provides access to the content of bzip2 compressed files.\nClass Bzip2FileProvider;\n// Filesytem to handle compressed files using the bzip2 method.\nClass Bzip2FileSystem;\n", "des": "The BZIP2 File Provider"}
{"index": 517, "repo": "commons-vfs2-2.9.0", "code": "package compressed\n\n// A compressed file.\nClass CompressedFileFileObject<FS extends CompressedFileFileSystem>;\n// A file system provider for compressed files.\nClass CompressedFileFileProvider;\n// A read-only file system for compressed files.\nClass CompressedFileFileSystem;\n", "des": "The compressed file provider"}
{"index": 518, "repo": "commons-vfs2-2.9.0", "code": "package ftp\n\n// What VFS expects from an FTP client to provide.\nInterface FtpClient;\n// Create a FtpClient instance.\nClass FtpClientFactory;\n// Abstract Factory, used to configure different FTPClients.\nClass FtpClientFactory.ConnectionFactory<C extends org.apache.commons.net.ftp.FTPClient,B extends FtpFileSystemConfigBuilder>;\n// Connection Factory, used to configure the FTPClient.\nClass FtpClientFactory.FtpConnectionFactory;\n", "des": "The FTP File Provider."}
{"index": 519, "repo": "commons-vfs2-2.9.0", "code": "package ftps\n\n// Create FTPSClient instances.\nClass FtpsClientFactory;\n// A provider for FTP file systems.\nClass FtpsFileProvider;\n// A FTPS file system.\nClass FtpsFileSystem;\n// The configuration builder for various FTPS configuration options.\nClass FtpsFileSystemConfigBuilder;\n// Protection level of the data channel in a FTPS communication.\nEnum FtpsDataChannelProtectionLevel;\n// Mode of the FTPS connection.\nEnum FtpsMode;\n", "des": "The FTPS File Provider."}
{"index": 520, "repo": "commons-vfs2-2.9.0", "code": "package gzip\n\n// A Gzip file.\nClass GzipFileObject;\n// Provides access to the content of Gzip files.\nClass GzipFileProvider;\n// A compressed file system using the Gzip method.\nClass GzipFileSystem;\n", "des": "The GZIP File Provider"}
{"index": 521, "repo": "commons-vfs2-2.9.0", "code": "package hdfs\n\n// Creates FileContentInfo instances for HDFS.\nClass HdfsFileContentInfoFactory;\n// A VFS representation of an HDFS file.\nClass HdfsFileObject;\n// FileProvider for HDFS files.\nClass HdfsFileProvider;\n// A VFS FileSystem that interacts with HDFS.\nClass HdfsFileSystem;\n// Configuration settings for the HdfsFileSystem.\nClass HdfsFileSystemConfigBuilder;\n// Provides random access to content in an HdfsFileObject.\nClass HdfsRandomAccessContent;\n", "des": "The HDFS File Provider"}
{"index": 522, "repo": "commons-vfs2-2.9.0", "code": "package http\n\n// Create a HttpClient instance.\nClass HttpClientFactory;\n// Creates FileContentInfo instances for HTTP.\nClass HttpFileContentInfoFactory;\n// Implementation for http.\nClass HttpFileNameParser;\n// A file object backed by Apache Commons HttpClient.\nClass HttpFileObject<FS extends HttpFileSystem>;\n// An HTTP provider that uses commons-httpclient.\nClass HttpFileProvider;\n// An HTTP file system.\nClass HttpFileSystem;\n// Configuration options for HTTP.\nClass HttpFileSystemConfigBuilder;\n", "des": "The HTTP File Provider"}
{"index": 523, "repo": "commons-vfs2-2.9.0", "code": "package http4\n\n// Creates FileContentInfoFactory instances for http4 provider.\nClass Http4FileContentInfoFactory;\n// FileNameParser implementation for http4 provider, setting default port to 80.\nClass Http4FileNameParser;\n// A file object backed by Apache HttpComponents HttpClient.\nClass Http4FileObject<FS extends Http4FileSystem>;\n// FileProvider implementation using HttpComponents HttpClient library.\nClass Http4FileProvider;\n// http4 file system.\nClass Http4FileSystem;\n", "des": "The HTTP4 File Provider"}
{"index": 524, "repo": "commons-vfs2-2.9.0", "code": "package http4s\n\n// FileNameParser implementation for http4s provider, setting default port to 443.\nClass Http4sFileNameParser;\n// http4s provider that uses HttpComponents HttpClient.\nClass Http4sFileProvider;\n", "des": "The HTTP4S File Provider"}
{"index": 525, "repo": "commons-vfs2-2.9.0", "code": "package http5\n\n// Creates FileContentInfoFactory instances for http5 provider.\nClass Http5FileContentInfoFactory;\n// FileNameParser implementation for http5 provider, setting default port to 80.\nClass Http5FileNameParser;\n// A file object backed by Apache HttpComponents HttpClient v5.\nClass Http5FileObject<FS extends Http5FileSystem>;\n// FileProvider implementation using HttpComponents HttpClient v5 library.\nClass Http5FileProvider;\n// http5 file system.\nClass Http5FileSystem;\n", "des": "The HTTP5 File Provider"}
{"index": 526, "repo": "commons-vfs2-2.9.0", "code": "package http5s\n\n// FileNameParser implementation for http5s provider, setting default port to 443.\nClass Http5sFileNameParser;\n// http5s provider that uses HttpComponents HttpClient.\nClass Http5sFileProvider;\n", "des": "The HTTP5S File Provider"}
{"index": 527, "repo": "commons-vfs2-2.9.0", "code": "package https\n\n// Implementation for https.\nClass HttpsFileNameParser;\n// An HTTPS provider that uses commons-httpclient.\nClass HttpsFileProvider;\n", "des": "The HTTPS File Provider"}
{"index": 528, "repo": "commons-vfs2-2.9.0", "code": "package jar\n\n// A file in a Jar file system.\nClass JarFileObject;\n// A file system provider for Jar files.\nClass JarFileProvider;\n// A read-only file system for Jar files.\nClass JarFileSystem;\n// A default URL connection that will work for most file systems.\nClass JarURLConnectionImpl;\n", "des": "The Jar File Provider."}
{"index": 529, "repo": "commons-vfs2-2.9.0", "code": "package local\n\n// A file system provider, which uses direct file access.\nClass DefaultLocalFileProvider;\n// A general-purpose file name parser.\nClass GenericFileNameParser;\n// A file object implementation which uses direct file access.\nClass LocalFile;\n// A local file URI.\nClass LocalFileName;\n// A name parser.\nClass LocalFileNameParser;\n// A local file system.\nClass LocalFileSystem;\n// A local file URI.\nClass WindowsFileName;\n// A parser for Windows file names.\nClass WindowsFileNameParser;\n", "des": "The Local File Provider."}
{"index": 530, "repo": "commons-vfs2-2.9.0", "code": "package ram\n\n// A RAM File contains a single RAM FileData instance, it provides methods to access the data by implementing FileObject interface.\nClass RamFileObject;\n// OutputStream to a RamFile.\nClass RamFileOutputStream;\n// RAM File Provider.\nClass RamFileProvider;\n// RAM File Random Access Content.\nClass RamFileRandomAccessContent;\n// A RAM File System.\nClass RamFileSystem;\n// Config Builder for the RAM file system.\nClass RamFileSystemConfigBuilder;\n", "des": "The RAM File Provider."}
{"index": 531, "repo": "commons-vfs2-2.9.0", "code": "package res\n\n// A resource file URI.\nClass ResourceFileName;\n// Slightly modified filename parser for resource URIs.\nClass ResourceFileNameParser;\n// The Resource provider.\nClass ResourceFileProvider;\n// The config BUILDER for various FTP configuration options.\nClass ResourceFileSystemConfigBuilder;\n", "des": "The Resource File Provider"}
{"index": 532, "repo": "commons-vfs2-2.9.0", "code": "package sftp\n\n// Provides identity to a JSch.\nInterface IdentityProvider;\n// Creates instances of JSch IdentityRepository.\nInterface IdentityRepositoryFactory;\n// Structure for an identity based on byte arrays.\nClass BytesIdentityInfo;\n// Structure for an identity based on Files.\nClass IdentityInfo;\n// Create a JSch Session instance.\nClass SftpClientFactory;\n// Implementation for SFTP.\nClass SftpFileNameParser;\n// An SFTP file.\nClass SftpFileObject;\n", "des": "The SFTP Provider."}
{"index": 533, "repo": "commons-vfs2-2.9.0", "code": "package tar\n\n// A file in a Tar file system.\nClass TarFileObject;\n// A file system provider for Tar files.\nClass TarFileProvider;\n// A read-only file system for Tar files.\nClass TarFileSystem;\n// A file system provider for Tar files.\nClass Tbz2FileProvider;\n// A file system provider for Tar files.\nClass TgzFileProvider;\n", "des": "The Tar File Provider."}
{"index": 534, "repo": "commons-vfs2-2.9.0", "code": "package temp\n\n// A provider for temporary files.\nClass TemporaryFileProvider;\n", "des": "The Temporary Filespace Provider."}
{"index": 535, "repo": "commons-vfs2-2.9.0", "code": "package url\n\n// A URL FileName.\nClass UrlFileName;\n// Implementation for any java.net.url based file system.\nClass UrlFileNameParser;\n// A FileObject implementation backed by a URL.\nClass UrlFileObject;\n// A file provider backed by Java's URL API.\nClass UrlFileProvider;\n// A File system backed by Java's URL API.\nClass UrlFileSystem;\n", "des": "The Default File Provider, which wraps java.net.URL."}
{"index": 536, "repo": "commons-vfs2-2.9.0", "code": "package zip\n\n// A file in a ZIP file system.\nClass ZipFileObject;\n// A file system provider for ZIP files.\nClass ZipFileProvider;\n// A read-only file system for ZIP and JAR files.\nClass ZipFileSystem;\n// \nClass ZipFileSystemConfigBuilder;\n", "des": "The Zip File Provider."}
{"index": 537, "repo": "commons-vfs2-2.9.0", "code": "package tasks\n\n// An abstract file synchronization task.\nClass AbstractSyncTask;\n// Information about a source file.\nClass AbstractSyncTask.SourceInfo;\n// An Ant task that copies matching files.\nClass CopyTask;\n// An Ant task that deletes matching files.\nClass DeleteTask;\n// An Ant task that creates a directory.\nClass MkdirTask;\n// An Ant task that moves matching files.\nClass MoveTask;\n// An Ant task that writes the details of a file to Ant's log.\nClass ShowFileTask;\n", "des": "The VFS Ant Tasks."}
{"index": 538, "repo": "commons-vfs2-2.9.0", "code": "package util\n\n// \nInterface Cryptor;\n// \nClass CombinedResources;\n// Factory to create an instance of a Cryptor.\nClass CryptorFactory;\n// Allows passwords to be encrypted and decrypted.\nClass DefaultCryptor;\n// This class use reflection to set a configuration value using the fileSystemConfigBuilder associated the a scheme.\nClass DelegatingFileSystemOptionsBuilder;\n// Allows passwords to be encrypted and decrypted.\nClass EncryptUtil;\n// Utility methods for FileObject.\nClass FileObjectUtils;\n", "des": "Utility classes used by the VFS."}
{"index": 539, "repo": "commons-geometry-core-1.0", "code": "package core\n\n// This interface defines mappings between a space and one of its subspaces.\nInterface Embedding<P extends Point<P>,S extends Point<S>>;\n// Interface representing a point in a mathematical space.\nInterface Point<P extends Point<P>>;\n// Interface representing a region in a space.\nInterface Region<P extends Point<P>>;\n// Interface representing a geometric element that embeds a region in a subspace.\nInterface RegionEmbedding<P extends Point<P>,S extends Point<S>>;\n", "des": "This package contains the core interfaces and classes for commons-geometry."}
{"index": 540, "repo": "commons-geometry-core-1.0", "code": "package internal\n\n// Represents a function that accepts a single double value and returns a result.\nInterface DoubleFunction1N<T>;\n// Represents a function that accepts two double values and returns a result.\nInterface DoubleFunction2N<T>;\n// Represents a function that accepts three double values and returns a result.\nInterface DoubleFunction3N<T>;\n// Utility methods for HyperplaneSubset implementations.\nClass HyperplaneSubsets;\n", "des": "This package contains utilities intended for internal use only."}
{"index": 541, "repo": "commons-geometry-core-1.0", "code": "package partitioning\n\n// Interface representing an object that can produce region boundaries as a stream of hyperplane convex subsets.\nInterface BoundarySource<C extends HyperplaneConvexSubset<? extends Point<?>>>;\n// Hyperplane that also embeds a subspace.\nInterface EmbeddingHyperplane<P extends Point<P>,S extends Point<S>>;\n// Interface representing a hyperplane, which in a space of dimension n is a subspace of dimension n - 1.\nInterface Hyperplane<P extends Point<P>>;\n", "des": "This package contains code related to partitioning of spaces by hyperplanes."}
{"index": 542, "repo": "commons-geometry-core-1.0", "code": "package bsp\n\n// Interface used to initialize newly created BSP subtrees, consisting of a single parent node and two child nodes.\nInterface AbstractBSPTree.SubtreeInitializer<N extends AbstractBSPTree.AbstractNode<?,?>>;\n// Interface for types that form the root of BSP subtrees.\nInterface BSPSubtree<P extends Point<P>,N extends BSPTree.Node<P,N>>;\n// Interface for Binary Space Partitioning (BSP) trees.\nInterface BSPTree<P extends Point<P>,N extends BSPTree.Node<P,N>>;\n", "des": "This package contains classes related to Binary Space Partitioning (BSP) trees."}
{"index": 543, "repo": "spring-mobile-device-1.1.5.RELEASE", "code": "package device\n\n// A model for the user agent or device that submitted the current request.\nInterface Device;\n// Service interface for resolving Devices that originate web requests with the application.\nInterface DeviceResolver;\n// Spring MVC HandlerMethodArgumentResolver that resolves @Controller MethodParameters of type Device to the value of the web request's current device attribute.\nClass DeviceHandlerMethodArgumentResolver;\n", "des": "Public API for device resolution."}
{"index": 544, "repo": "spring-mobile-device-1.1.5.RELEASE", "code": "package site\n\n// Service interface for site preference management.\nInterface SitePreferenceHandler;\n// A strategy for storing a user's site preference.\nInterface SitePreferenceRepository;\n// SitePreferenceRepository implementation that stores user preference in a Cookie.\nClass CookieSitePreferenceRepository;\n// A Spring MVC interceptor that, on preHandle, delegates to a SitePreferenceHandler to resolve the SitePreference of the user that originated the web request.\nClass SitePreferenceHandlerInterceptor;\n", "des": "Ability for the user to specify whether they prefer the mobile or normal site."}
{"index": 545, "repo": "spring-mobile-device-1.1.5.RELEASE", "code": "package switcher\n\n// \nInterface SiteSwitcherHandler;\n// Strategy for constructing different site URLs, such as the 'mobile' site URL.\nInterface SiteUrlFactory;\n// Abstract SiteUrlFactory implementation that differentiates each site by the HTTP request path.\nClass AbstractSitePathUrlFactory;\n// Abstract implementation of the SiteUrlFactory interface.\nClass AbstractSiteUrlFactory;\n// Path based site URL factory implementation that handles requests for the \"mobile\" site.\nClass MobileSitePathUrlFactory;\n", "des": "Mobile site switcher for Spring MVC-based web apps."}
{"index": 546, "repo": "spring-mobile-device-1.1.5.RELEASE", "code": "package util\n\n// Static helper for determining how to handle the combination of device and site preference.\nClass ResolverUtils;\n", "des": "Spring Mobile utilities"}
{"index": 547, "repo": "spring-mobile-device-1.1.5.RELEASE", "code": "package view\n\n// Abstract ViewResolver implementation, providing a device aware ViewResolver wrapper that delegates to another view resolver implementation, allowing for resolution of device specific view names without the need for a dedicated mapping to be defined for each view.\nClass AbstractDeviceDelegatingViewResolver;\n", "des": "Device aware view resolution for Spring MVC-based web apps."}
{"index": 548, "repo": "commons-rdf-rdf4j-0.5.0", "code": "package rdf4j\n\n// An Iterable which should be AutoCloseable.close()d after use.\nInterface ClosableIterable<T>;\n// Marker interface for RDF4J implementations of Commons RDF BlankNode.\nInterface RDF4JBlankNode;\n// Marker interface for RDF4J implementations of Commons RDF BlankNodeOrIRI (e.g.\nInterface RDF4JBlankNodeOrIRI;\n// Marker interface for RDF4J implementations of Dataset.\nInterface RDF4JDataset;\n// Marker interface for RDF4J implementations of Graph.\nInterface RDF4JGraph;\n", "des": "Commons RDF integration with RDF4J."}
{"index": 549, "repo": "commons-rdf-rdf4j-0.5.0", "code": "package experimental\n\n// RDF4J-based parser.\nClass RDF4JParser;\n", "des": "Experimental Commons RDF RDF4J implementations."}
{"index": 550, "repo": "hadoop-common-3.3.4", "code": "package conf\n\n// Something that may be configured with a Configuration.\nInterface Configurable;\n// Something whose Configuration can be changed at run time.\nInterface Reconfigurable;\n// Tool for redacting sensitive information when displaying config parameters.\nClass ConfigRedactor;\n// Provides access to configuration parameters.\nClass Configuration;\n// A pending addition to the global set of deprecated keys.\nClass Configuration.DeprecationDelta;\n", "des": "Configuration of system parameters."}
{"index": 551, "repo": "hadoop-common-3.3.4", "code": "package key\n\n// CryptoExtension is a type of Extension that exposes methods to generate EncryptedKeys and to decrypt the same.\nInterface KeyProviderCryptoExtension.CryptoExtension;\n// DelegationTokenExtension is a type of Extension that exposes methods needed to work with Delegation Tokens.\nInterface KeyProviderDelegationTokenExtension.DelegationTokenExtension;\n// A marker interface for the KeyProviderExtension subclass implement.\nInterface KeyProviderExtension.Extension;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 552, "repo": "hadoop-common-3.3.4", "code": "package fs\n\n// Abort data being written to a stream, so that close() does not write the data.\nInterface Abortable;\n// Interface for the result of aborts; allows subclasses to extend (IOStatistics etc) or for future enhancements if ever needed.\nInterface Abortable.AbortableResult;\n// \nInterface BatchedRemoteIterator.BatchedEntries<E>;\n// Interface filesystems MAY implement to offer a batched list.\nInterface BatchListingOperations;\n", "des": "An abstract file system API."}
{"index": 553, "repo": "hadoop-common-3.3.4", "code": "package audit\n\n// Statistic Names for Auditing.\nClass AuditStatisticNames;\n// The common audit context is a map of common context information which can be used with any audit span.\nClass CommonAuditContext;\n", "des": "Public classes for adding information to any auditing information picked up by filesystem clients."}
{"index": 554, "repo": "hadoop-common-3.3.4", "code": "package http\n\n// A Filesystem that reads from HTTP endpoint.\nClass HttpFileSystem;\n// A Filesystem that reads from HTTPS endpoint.\nClass HttpsFileSystem;\n", "des": "Filesystem implementations that allow Hadoop to read directly from HTTP / HTTPS endpoints."}
{"index": 555, "repo": "hadoop-common-3.3.4", "code": "package protocolPB\n\n// Utility methods aiding conversion of fs data structures.\nClass PBHelper;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 556, "repo": "hadoop-common-3.3.4", "code": "package sftp\n\n// SFTP FileSystem.\nClass SFTPFileSystem;\n", "des": "SFTP FileSystem package."}
{"index": 557, "repo": "hadoop-common-3.3.4", "code": "package statistics\n\n// Interface to be implemented by objects which can track duration.\nInterface DurationTracker;\n// Interface for a source of duration tracking.\nInterface DurationTrackerFactory;\n// IO Statistics.\nInterface IOStatistics;\n// Interface exported by classes which support aggregation of IOStatistics.\nInterface IOStatisticsAggregator;\n// A source of IO statistics.\nInterface IOStatisticsSource;\n", "des": "This package contains support for statistic collection and reporting."}
{"index": 558, "repo": "hadoop-common-3.3.4", "code": "package lib\n\n// Provides a servlet filter that pretends to authenticate a fake user (Dr.Who) so that the web UI is usable for a secure cluster without authentication.\nClass StaticUserWebFilter;\n// \nClass StaticUserWebFilter.StaticUserFilter;\n", "des": "This package provides user-selectable (via configuration) classes that add functionality to the web UI."}
{"index": 559, "repo": "hadoop-common-3.3.4", "code": "package io\n\n// \nInterface ByteBufferPool;\n// use java.io.Closeable\nInterface Closeable;\n// \nInterface MapFile.Reader.Option;\n// \nInterface MapFile.Writer.Option;\n// A Comparator that operates directly on byte representations of objects.\nInterface RawComparator<T>;\n// An outstanding readahead request that has been submitted to the pool.\nInterface ReadaheadPool.ReadaheadRequest;\n// A tag interface for all of the Reader options\nInterface SequenceFile.Reader.Option;\n", "des": "Generic i/o code for use when reading and writing data to the network, to databases, and to files."}
{"index": 560, "repo": "hadoop-common-3.3.4", "code": "package serializer\n\n// An experimental Serialization for Java Serializable classes.\nClass JavaSerialization;\n// A RawComparator that uses a JavaSerialization Deserializer to deserialize objects that are then compared via their Comparable interfaces.\nClass JavaSerializationComparator<T extends Serializable & Comparable<T>>;\n// A Serialization for Writables that delegates to Writable.write(java.io.DataOutput) and Writable.readFields(java.io.DataInput).\nClass WritableSerialization;\n", "des": "This package provides a mechanism for using different serialization frameworks in Hadoop."}
{"index": 561, "repo": "hadoop-common-3.3.4", "code": "package avro\n\n// Tag interface for Avro 'reflect' serializable classes.\nInterface AvroReflectSerializable;\n// \nClass AvroRecord;\n// RecordBuilder for AvroRecord instances.\nClass AvroRecord.Builder;\n// Serialization for Avro Reflect classes.\nClass AvroReflectSerialization;\n// Base class for providing serialization to Avro types.\nClass AvroSerialization<T>;\n// Serialization for Avro Specific classes.\nClass AvroSpecificSerialization;\n", "des": "This package provides Avro serialization in Hadoop."}
{"index": 562, "repo": "hadoop-common-3.3.4", "code": "package metrics2\n\n// The metrics collector interface\nInterface MetricsCollector;\n// Interface to provide immutable metainfo for metrics.\nInterface MetricsInfo;\n// The plugin interface for the metrics framework\nInterface MetricsPlugin;\n// An immutable snapshot of metrics with a timestamp\nInterface MetricsRecord;\n// The metrics sink interface.\nInterface MetricsSink;\n// The source of metrics information.\nInterface MetricsSource;\n", "des": "Metrics 2.0"}
{"index": 563, "repo": "hadoop-common-3.3.4", "code": "package annotation\n\n// \nEnum Metric.Type;\n// Annotation interface for a single metric used to annotate a field or a method in the class.\nAnnotation Type Metric;\n// Annotation interface for a group of metrics\nAnnotation Type Metrics;\n", "des": "Annotation interfaces for metrics instrumentation"}
{"index": 564, "repo": "hadoop-common-3.3.4", "code": "package filter\n\n// A glob pattern filter for metrics.\nClass GlobFilter;\n// A regex pattern filter for metrics\nClass RegexFilter;\n", "des": "Builtin metrics filters (to be used in metrics config files)"}
{"index": 565, "repo": "hadoop-common-3.3.4", "code": "package lib\n\n// Helpers to create interned metrics info.\nClass Interns;\n// An optional metrics registry class for creating and maintaining a collection of MetricsMutables, making writing metrics source easier.\nClass MetricsRegistry;\n// The mutable counter (monotonically increasing) metric interface\nClass MutableCounter;\n// A mutable int counter for implementing metrics sources\nClass MutableCounterInt;\n// A mutable long counter\nClass MutableCounterLong;\n", "des": "A collection of library classes for implementing metrics sources"}
{"index": 566, "repo": "hadoop-common-3.3.4", "code": "package sink\n\n// A metrics sink that writes to a file\nClass FileSink;\n// A metrics sink that writes to a Graphite server\nClass GraphiteSink;\n// \nClass GraphiteSink.Graphite;\n// Metrics sink for prometheus exporter.\nClass PrometheusMetricsSink;\n// This class is a metrics sink that uses FileSystem to write the metrics logs.\nClass RollingFileSystemSink;\n// A metrics sink that writes metrics to a StatsD daemon.\nClass StatsDSink;\n// Class that sends UDP packets to StatsD daemon.\nClass StatsDSink.StatsD;\n", "des": "Builtin metrics sinks"}
{"index": 567, "repo": "hadoop-common-3.3.4", "code": "package util\n\n// \nInterface QuantileEstimator;\n// This util class provides a method to register an MBean using our standard naming convention as described in the doc for {link MBeans.register(String, String, Object).\nClass MBeans;\n// A metrics cache for sinks that don't support sparse updates.\nClass MetricsCache;\n// Cached record\nClass MetricsCache.Record;\n// Helper to keep running min/max\nClass SampleStat.MinMax;\n// Helpers to handle server addresses\nClass Servers;\n", "des": "General helpers for implementing source and sinks"}
{"index": 568, "repo": "hadoop-common-3.3.4", "code": "package net\n\n// An interface that must be implemented to allow pluggable DNS-name/IP-address to RackID resolvers.\nInterface DNSToSwitchMapping;\n// This interface provides methods for the failover proxy to get IP addresses of the associated servers (NameNodes, RBF routers etc).\nInterface DomainNameResolver;\n// \nInterface InnerNode.Factory<N extends org.apache.hadoop.net.InnerNode>;\n// This is a base class for DNS to Switch mappings.\nClass AbstractDNSToSwitchMapping;\n", "des": "Network-related classes."}
{"index": 569, "repo": "hadoop-common-3.3.4", "code": "package alias\n\n// The factory to create JksProviders, which is used by the ServiceLoader.\nClass BouncyCastleFipsKeyStoreProvider.Factory;\n// A provider of credentials or password for Hadoop applications.\nClass CredentialProvider;\n// The combination of both the alias and the actual credential value.\nClass CredentialProvider.CredentialEntry;\n// A factory to create a list of CredentialProvider based on the path given in a Configuration.\nClass CredentialProviderFactory;\n", "des": "Provides the hadoop credential provider API."}
{"index": 570, "repo": "hadoop-common-3.3.4", "code": "package server\n\n// AuthenticationFilter which adds support to perform operations using end user instead of proxy user.\nClass ProxyUserAuthenticationFilter;\n// Filter initializer to initialize ProxyUserAuthenticationFilter which adds support to perform operations using end user instead of proxy user.\nClass ProxyUserAuthenticationFilterInitializer;\n", "des": "Provides the server-side framework for authentication."}
{"index": 571, "repo": "hadoop-common-3.3.4", "code": "package launcher\n\n// Callback issues on an interrupt.\nInterface IrqHandler.Interrupted;\n// An interface which services can implement to have their execution managed by the ServiceLauncher.\nInterface LaunchableService;\n// Standard launcher arguments.\nInterface LauncherArguments;\n// Common Exit codes.\nInterface LauncherExitCodes;\n// Subclass of AbstractService that provides basic implementations of the LaunchableService methods.\nClass AbstractLaunchableService;\n", "des": "This package contains classes, interfaces and exceptions to launch YARN services from the command line."}
{"index": 572, "repo": "hadoop-common-3.3.4", "code": "package util\n\n// Pass in an implementation of this interface to cleanup ByteBuffers.\nInterface CleanerUtil.BufferCleaner;\n// Get the exit code of an exception.\nInterface ExitCodeProvider;\n// The user can provide an instance of a class implementing this interface when initializing a GcTimeMonitor to receive alerts when GC time percentage exceeds the specified threshold.\nInterface GcTimeMonitor.GcTimeAlertHandler;\n// \nInterface IdentityHashStore.Visitor<K,V>;\n// \nInterface IPList;\n", "des": "Common utilities."}
{"index": 573, "repo": "hadoop-common-3.3.4", "code": "package functional\n\n// Function of arity 2 which may raise an IOException.\nInterface BiFunctionRaisingIOE<T,U,R>;\n// This is a callable which only raises an IOException.\nInterface CallableRaisingIOE<R>;\n// Version of java.util.function.Consumer which raises exceptions.\nInterface ConsumerRaisingIOE<T>;\n// Function of arity 1 which may raise an IOException.\nInterface FunctionRaisingIOE<T,R>;\n// This is a lambda-expression which may raises an IOException.\nInterface InvocationRaisingIOE;\n", "des": "Support for functional programming within the Hadoop APIs."}
{"index": 574, "repo": "commons-collections-3.2.2", "code": "package collections\n\n// Defines a collection that counts the number of times an object appears in the collection.\nInterface Bag;\n// Defines a map that allows bidirectional lookup between key and values.\nInterface BidiMap;\n// Defines a collection that is bounded in size.\nInterface BoundedCollection;\n// Defines a map that is bounded in size.\nInterface BoundedMap;\n// Defines a collection that allows objects to be removed in some well-defined order.\nInterface Buffer;\n", "des": "This package contains the interfaces and utilities shared across all the subpackages of this component."}
{"index": 575, "repo": "commons-collections-3.2.2", "code": "package bag\n\n// Decorates another Bag to provide additional behaviour.\nClass AbstractBagDecorator;\n// Abstract implementation of the Bag interface to simplify the creation of subclass implementations.\nClass AbstractMapBag;\n// Mutable integer class for storing the data.\nClass AbstractMapBag.MutableInteger;\n// Decorates another SortedBag to provide additional behaviour.\nClass AbstractSortedBagDecorator;\n// Implements Bag, using a HashMap to provide the data storage.\nClass HashBag;\n", "des": "This package contains implementations of the Bag and SortedBag interfaces."}
{"index": 576, "repo": "commons-collections-3.2.2", "code": "package bidimap\n\n// Provides a base decorator that enables additional functionality to be added to a BidiMap via decoration.\nClass AbstractBidiMapDecorator;\n// Abstract BidiMap implemented using two maps.\nClass AbstractDualBidiMap;\n// Inner class MapIterator.\nClass AbstractDualBidiMap.BidiMapIterator;\n// Inner class EntrySet.\nClass AbstractDualBidiMap.EntrySet;\n// Inner class EntrySetIterator.\nClass AbstractDualBidiMap.EntrySetIterator;\n// Inner class KeySet.\nClass AbstractDualBidiMap.KeySet;\n", "des": "This package contains implementations of the BidiMap, OrderedBidiMap and SortedBidiMap interfaces."}
{"index": 577, "repo": "commons-collections-3.2.2", "code": "package buffer\n\n// Decorates another Buffer to provide additional behaviour.\nClass AbstractBufferDecorator;\n// Decorates another Buffer to make BlockingBuffer.get() and BlockingBuffer.remove() block when the Buffer is empty.\nClass BlockingBuffer;\n// Decorates another Buffer to ensure a fixed maximum size.\nClass BoundedBuffer;\n// The BoundedFifoBuffer is a very efficient implementation of Buffer that is of a fixed size.\nClass BoundedFifoBuffer;\n", "des": "This package contains implementations of the Buffer interface."}
{"index": 578, "repo": "commons-collections-3.2.2", "code": "package collection\n\n// Pluggable strategy to handle changes to the composite.\nInterface CompositeCollection.CollectionMutator;\n// Decorates another Collection to provide additional behaviour.\nClass AbstractCollectionDecorator;\n// Serializable subclass of AbstractCollectionDecorator.\nClass AbstractSerializableCollectionDecorator;\n// Decorates a collection of other collections to provide a single unified view.\nClass CompositeCollection;\n", "des": "This package contains implementations of the Collection interface."}
{"index": 579, "repo": "commons-collections-3.2.2", "code": "package comparators\n\n// A Comparator for Boolean objects that can sort either true or false first.\nClass BooleanComparator;\n// A Comparator that compares Comparable objects.\nClass ComparableComparator;\n// A ComparatorChain is a Comparator that wraps one or more Comparators in sequence.\nClass ComparatorChain;\n// A Comparator which imposes a specific order on a specific set of Objects.\nClass FixedOrderComparator;\n", "des": "This package contains implementations of the Comparator interface."}
{"index": 580, "repo": "commons-collections-3.2.2", "code": "package functors\n\n// Defines a predicate that decorates one or more other predicates.\nInterface PredicateDecorator;\n// Predicate implementation that returns true if all the predicates return true.\nClass AllPredicate;\n// Predicate implementation that returns true if both the predicates return true.\nClass AndPredicate;\n// Predicate implementation that returns true if any of the predicates return true.\nClass AnyPredicate;\n", "des": "This package contains implementations of the Closure, Predicate, Transformer and Factory interfaces."}
{"index": 581, "repo": "commons-collections-3.2.2", "code": "package iterators\n\n// Provides basic behaviour for decorating an iterator with extra functionality.\nClass AbstractIteratorDecorator;\n// Provides basic behaviour for decorating a list iterator with extra functionality.\nClass AbstractListIteratorDecorator;\n// Provides basic behaviour for decorating a map iterator with extra functionality.\nClass AbstractMapIteratorDecorator;\n// Provides basic behaviour for decorating an ordered map iterator with extra functionality.\nClass AbstractOrderedMapIteratorDecorator;\n", "des": "This package contains implementations of the Iterator interface."}
{"index": 582, "repo": "commons-collections-3.2.2", "code": "package keyvalue\n\n// Abstract pair class to assist with creating KeyValue and Map.Entry implementations.\nClass AbstractKeyValue;\n// Abstract Pair class to assist with creating correct Map.Entry implementations.\nClass AbstractMapEntry;\n// Provides a base decorator that allows additional functionality to be added to a Map.Entry.\nClass AbstractMapEntryDecorator;\n// A mutable KeyValue pair that does not implement Map.Entry.\nClass DefaultKeyValue;\n", "des": "This package contains implementations of collection and map related key/value classes."}
{"index": 583, "repo": "commons-collections-3.2.2", "code": "package list\n\n// An abstract implementation of a linked list which provides numerous points for subclasses to override.\nClass AbstractLinkedList;\n// A list iterator over the linked list.\nClass AbstractLinkedList.LinkedListIterator;\n// The sublist implementation for AbstractLinkedList.\nClass AbstractLinkedList.LinkedSubList;\n// A list iterator over the linked sub list.\nClass AbstractLinkedList.LinkedSubListIterator;\n// A node within the linked list.\nClass AbstractLinkedList.Node;\n", "des": "This package contains implementations of the List interface."}
{"index": 584, "repo": "commons-collections-3.2.2", "code": "package map\n\n// This interface allows definition for all of the indeterminate mutators in a CompositeMap, as well as providing a hook for callbacks on key collisions.\nInterface CompositeMap.MapMutator;\n// An abstract implementation of a hash-based map which provides numerous points for subclasses to override.\nClass AbstractHashedMap;\n// EntrySet implementation.\nClass AbstractHashedMap.EntrySet;\n// EntrySet iterator.\nClass AbstractHashedMap.EntrySetIterator;\n", "des": "This package contains implementations of the Map, IterableMap, OrderedMap and SortedMap interfaces."}
{"index": 585, "repo": "commons-collections-3.2.2", "code": "package set\n\n// Define callbacks for mutation operations.\nInterface CompositeSet.SetMutator;\n// Serializable subclass of AbstractSetDecorator.\nClass AbstractSerializableSetDecorator;\n// Decorates another Set to provide additional behaviour.\nClass AbstractSetDecorator;\n// Decorates another SortedSet to provide additional behaviour.\nClass AbstractSortedSetDecorator;\n// Decorates a set of other sets to provide a single unified view.\nClass CompositeSet;\n", "des": "This package contains implementations of the Set and SortedSet interfaces."}
{"index": 586, "repo": "org.apache.karaf.main-2.4.4", "code": "package adaptor\n\n// Special startup class for the Eclipse Platform.\nClass EclipseStarter;\n// This class is used to manage the various Locations for Eclipse.\nClass LocationManager;\n", "des": "Provides API to start the platform."}
{"index": 587, "repo": "org.apache.karaf.main-2.4.4", "code": "package console\n\n// A command interpreter is a shell that can interpret command lines.\nInterface CommandInterpreter;\n// When an object wants to provide a number of commands to the console, it should register an object with this interface.\nInterface CommandProvider;\n// A console session service provides the input and output to a single console session.\nClass ConsoleSession;\n", "des": "Provides services related to the Equinox console."}
{"index": 588, "repo": "org.apache.karaf.main-2.4.4", "code": "package eventmgr\n\n// The EventDispatcher interface contains the method that is called by the Event Manager to complete the event delivery to the event listener.\nInterface EventDispatcher<K,V,E>;\n// A copy-on-write identity map.\nClass CopyOnWriteIdentityMap<K,V>;\n// As of 3.5.\nClass EventListeners<K,V>;\n// This class is the central class for the Event Manager.\nClass EventManager;\n// The ListenerQueue is used to snapshot the list of listeners at the time the event is fired.\nClass ListenerQueue<K,V,E>;\n", "des": "Provides the event manager API."}
{"index": 589, "repo": "org.apache.karaf.main-2.4.4", "code": "package log\n\n// The FramworkLog interface.\nInterface FrameworkLog;\n// A framework log entry used to log information to a FrameworkLog\nClass FrameworkLogEntry;\n", "des": "Provides the FrameworkLog service."}
{"index": 590, "repo": "org.apache.karaf.main-2.4.4", "code": "package launch\n\n// The System Bundle implementation for the Equinox Framework.\nClass Equinox;\n// The framework factory implementation for the Equinox framework.\nClass EquinoxFactory;\n", "des": "Provides the Equinox framework launch API."}
{"index": 591, "repo": "org.apache.karaf.main-2.4.4", "code": "package datalocation\n\n// A Location represents a URL which may have a default value, may be read only, may or may not have a current value and may be cascaded on to a parent location.\nInterface Location;\n", "des": "Provides the Location service."}
{"index": 592, "repo": "org.apache.karaf.main-2.4.4", "code": "package debug\n\n// Used to get debug options settings and creating a new DebugTrace instance for a bundle to use for dynamic tracing.\nInterface DebugOptions;\n// A debug options listener is notified whenever one of its plug-in option-path entries is changed.\nInterface DebugOptionsListener;\n// A DebugTrace is used to record debug trace statements, based on the current option settings in a corresponding DebugOptions class.\nInterface DebugTrace;\n", "des": "Provides the DebugOptions service."}
{"index": 593, "repo": "org.apache.karaf.main-2.4.4", "code": "package environment\n\n// Constants used with the EnvironmentInfo service.\nInterface Constants;\n// A Framework service which gives access to the command line used to start this running framework as well as information about the environment such as the current operating system, machine architecture, locale and windowing system.\nInterface EnvironmentInfo;\n", "des": "Provides the EnvironmentInfo service."}
{"index": 594, "repo": "org.apache.karaf.main-2.4.4", "code": "package localization\n\n// The interface of the service that gets ResourceBundle objects from a given bundle with a given locale.\nInterface BundleLocalization;\n// A service that is used to determine what the current locale is for a particular context or session.\nInterface LocaleProvider;\n", "des": "Provides bundle localization and local provider service APIs."}
{"index": 595, "repo": "org.apache.karaf.main-2.4.4", "code": "package resolver\n\n// This class represents a base description object for a state.\nInterface BaseDescription;\n// BundleDeltas represent the changes related to an individual bundle between two states.\nInterface BundleDelta;\n// This class represents a specific version of a bundle in the system.\nInterface BundleDescription;\n// A representation of one bundle import constraint as seen in a bundle manifest and managed by a state and resolver.\nInterface BundleSpecification;\n", "des": "Provides the Equinox resolver API."}
{"index": 596, "repo": "org.apache.karaf.main-2.4.4", "code": "package runnable\n\n// An ApplicationLauncher is used to launch ParameterizedRunnable objects using the main thread.\nInterface ApplicationLauncher;\n// A parameterized runnable that can be stopped.\nInterface ApplicationRunnable;\n// Like a Runnable, an object which captures a block of code which can be passed around and executed.\nInterface ParameterizedRunnable;\n// Service interface used to monitor the startup process.\nInterface StartupMonitor;\n", "des": "Provides API for monitoring and running code on the main thread."}
{"index": 597, "repo": "org.apache.karaf.main-2.4.4", "code": "package security\n\n// A TrustEngine is used to establish the authenticity of a Certificate chain.\nClass TrustEngine;\n", "des": "Equinox security services"}
{"index": 598, "repo": "org.apache.karaf.main-2.4.4", "code": "package signedcontent\n\n// A SignedContent object represents content which may be signed.\nInterface SignedContent;\n// A SignedContentEntry represents a content entry which may be signed.\nInterface SignedContentEntry;\n// A factory used to create SignedContent objects.\nInterface SignedContentFactory;\n// A SignerInfo object represents a single signer chain.\nInterface SignerInfo;\n// Indicates that signed content is invalid according to one of the signers.\nClass InvalidContentException;\n", "des": "Equinox Signed Content"}
{"index": 599, "repo": "org.apache.karaf.main-2.4.4", "code": "package storagemanager\n\n// Represents a managed output stream for target managed by a storage manager.\nClass ManagedOutputStream;\n// Storage managers provide a facility for tracking the state of a group of files having relationship with each others and being updated by several entities at the same time.\nClass StorageManager;\n", "des": "Provides the storage manager API."}
{"index": 600, "repo": "org.apache.karaf.main-2.4.4", "code": "package util\n\n// This class represents a single manifest element.\nClass ManifestElement;\n// Common superclass for all message bundle classes.\nClass NLS;\n// This class is used to process strings that have special semantic meaning (such as file paths) in RTL-oriented locales so that they render in a way that does not corrupt the semantic meaning of the string but also maintains compliance with the Unicode BiDi algorithm of rendering Bidirectional text.\nClass TextProcessor;\n", "des": "Provides utility classes for NLS support and bundle manifest header parsing."}
{"index": 601, "repo": "org.apache.karaf.main-2.4.4", "code": "package framework\n\n// A ServiceEvent listener that does not filter based upon package wiring.\nInterface AllServiceListener;\n// An installed bundle in the Framework.\nInterface Bundle;\n// Customizes the starting and stopping of a bundle.\nInterface BundleActivator;\n// A bundle's execution context within the Framework.\nInterface BundleContext;\n// A BundleEvent listener.\nInterface BundleListener;\n// A reference to a Bundle.\nInterface BundleReference;\n// As of 1.2.\nInterface Configurable;\n", "des": "Framework Package Version 1.7."}
{"index": 602, "repo": "org.apache.karaf.main-2.4.4", "code": "package bundle\n\n// OSGi Framework Bundle Collision Hook Service.\nInterface CollisionHook;\n// OSGi Framework Bundle Event Hook Service.\nInterface EventHook;\n// OSGi Framework Bundle Context Hook Service.\nInterface FindHook;\n", "des": "Framework Bundle Hooks Package Version 1.1."}
{"index": 603, "repo": "org.apache.karaf.main-2.4.4", "code": "package resolver\n\n// OSGi Framework Resolver Hook instances are obtained from the OSGi Framework Resolver Hook Factory service.\nInterface ResolverHook;\n// OSGi Framework Resolver Hook Factory Service.\nInterface ResolverHookFactory;\n", "des": "Framework Resolver Hooks Package Version 1.0."}
{"index": 604, "repo": "org.apache.karaf.main-2.4.4", "code": "package service\n\n// As of 1.1.\nInterface EventHook;\n// OSGi Framework Service Event Listener Hook Service.\nInterface EventListenerHook;\n// OSGi Framework Service Find Hook Service.\nInterface FindHook;\n// OSGi Framework Service Listener Hook Service.\nInterface ListenerHook;\n// Information about a Service Listener.\nInterface ListenerHook.ListenerInfo;\n", "des": "Framework Service Hooks Package Version 1.1."}
{"index": 605, "repo": "org.apache.karaf.main-2.4.4", "code": "package weaving\n\n// OSGi Framework Weaving Hook Service.\nInterface WeavingHook;\n// A class being woven.\nInterface WovenClass;\n// A weaving exception used to indicate that the class load should be failed but the weaving hook must not be blacklisted by the framework.\nClass WeavingException;\n", "des": "Framework Weaving Hooks Package Version 1.0."}
{"index": 606, "repo": "org.apache.karaf.main-2.4.4", "code": "package launch\n\n// A Framework instance.\nInterface Framework;\n// A factory for creating Framework instances.\nInterface FrameworkFactory;\n", "des": "Framework Launch Package Version 1.1."}
{"index": 607, "repo": "org.apache.karaf.main-2.4.4", "code": "package namespace\n\n// Wiring Capability and Requirement Namespaces base class.\nClass AbstractWiringNamespace;\n// Bundle Capability and Requirement Namespace.\nClass BundleNamespace;\n// Execution Environment Capability and Requirement Namespace.\nClass ExecutionEnvironmentNamespace;\n// Host Capability and Requirement Namespace.\nClass HostNamespace;\n// Identity Capability and Requirement Namespace.\nClass IdentityNamespace;\n// Package Capability and Requirement Namespace.\nClass PackageNamespace;\n", "des": "Namespace Package Version 1.0."}
{"index": 608, "repo": "org.apache.karaf.main-2.4.4", "code": "package startlevel\n\n// Query and modify the start level information for a bundle.\nInterface BundleStartLevel;\n// Query and modify the start level information for the framework.\nInterface FrameworkStartLevel;\n", "des": "Framework Start Level Package Version 1.0."}
{"index": 609, "repo": "org.apache.karaf.main-2.4.4", "code": "package wiring\n\n// A capability that has been declared from a bundle revision.\nInterface BundleCapability;\n// A requirement that has been declared from a bundle revision.\nInterface BundleRequirement;\n// Bundle Revision.\nInterface BundleRevision;\n// The bundle revisions of a bundle.\nInterface BundleRevisions;\n// A wire connecting a BundleCapability to a BundleRequirement.\nInterface BundleWire;\n// A wiring for a bundle.\nInterface BundleWiring;\n", "des": "Framework Wiring Package Version 1.1."}
{"index": 610, "repo": "org.apache.karaf.main-2.4.4", "code": "package resource\n\n// A capability that has been declared from a Resource.\nInterface Capability;\n// A requirement that has been declared from a Resource .\nInterface Requirement;\n// A resource is the representation of a uniquely identified and typed data.\nInterface Resource;\n// A wire connecting a Capability to a Requirement.\nInterface Wire;\n// A wiring for a resource.\nInterface Wiring;\n// Capability and Requirement Namespaces base class.\nClass Namespace;\n", "des": "Resource Package Version 1.0."}
{"index": 611, "repo": "org.apache.karaf.main-2.4.4", "code": "package condpermadmin\n\n// The interface implemented by a Condition.\nInterface Condition;\n// Framework service to administer Conditional Permissions.\nInterface ConditionalPermissionAdmin;\n// A list of Permissions guarded by a list of conditions with an access decision.\nInterface ConditionalPermissionInfo;\n// Update the Conditional Permission Table.\nInterface ConditionalPermissionUpdate;\n// Condition to test if the location of a bundle matches or does not match a pattern.\nClass BundleLocationCondition;\n", "des": "Conditional Permission Admin Package Version 1.1."}
{"index": 612, "repo": "org.apache.karaf.main-2.4.4", "code": "package log\n\n// Provides methods to access the information contained in an individual Log Service log entry.\nInterface LogEntry;\n// Subscribes to LogEntry objects from the LogReaderService.\nInterface LogListener;\n// Provides methods to retrieve LogEntry objects from the log.\nInterface LogReaderService;\n// Provides methods for bundles to write messages to the log.\nInterface LogService;\n", "des": "Log Service Package Version 1.3."}
{"index": 613, "repo": "org.apache.karaf.main-2.4.4", "code": "package packageadmin\n\n// The PackageAdmin service has been replaced by the org.osgi.framework.wiring package.\nInterface ExportedPackage;\n// This service has been replaced by the org.osgi.framework.wiring package.\nInterface PackageAdmin;\n// The PackageAdmin service has been replaced by the org.osgi.framework.wiring package.\nInterface RequiredBundle;\n", "des": "Package Admin Package Version 1.2."}
{"index": 614, "repo": "org.apache.karaf.main-2.4.4", "code": "package permissionadmin\n\n// The Permission Admin service allows management agents to manage the permissions of bundles.\nInterface PermissionAdmin;\n// Permission representation used by the Permission Admin service.\nClass PermissionInfo;\n", "des": "Permission Admin Package Version 1.2."}
{"index": 615, "repo": "org.apache.karaf.main-2.4.4", "code": "package startlevel\n\n// This service has been replaced by the org.osgi.framework.startlevel package.\nInterface StartLevel;\n", "des": "Start Level Package Version 1.1."}
{"index": 616, "repo": "org.apache.karaf.main-2.4.4", "code": "package url\n\n// Defines standard names for property keys associated with URLStreamHandlerService and java.net.ContentHandler services.\nInterface URLConstants;\n// Service interface with public versions of the protected java.net.URLStreamHandler methods.\nInterface URLStreamHandlerService;\n// Interface used by URLStreamHandlerService objects to call the setURL method on the proxy URLStreamHandler object.\nInterface URLStreamHandlerSetter;\n", "des": "URL Stream and Content Handlers Package Version 1.0."}
{"index": 617, "repo": "org.apache.karaf.main-2.4.4", "code": "package tracker\n\n// The BundleTrackerCustomizer interface allows a BundleTracker to customize the Bundles that are tracked.\nInterface BundleTrackerCustomizer<T>;\n// The ServiceTrackerCustomizer interface allows a ServiceTracker to customize the service objects that are tracked.\nInterface ServiceTrackerCustomizer<S,T>;\n// The BundleTracker class simplifies tracking bundles much like the ServiceTracker simplifies tracking services.\nClass BundleTracker<T>;\n", "des": "Tracker Package Version 1.5."}
{"index": 618, "repo": "freemarker-2.3.32", "code": "package cache\n\n// Cache storage abstracts away the storage aspects of a cache - associating an object with a key, retrieval and removal via the key.\nInterface CacheStorage;\n// A cache storage that has a getSize() method for returning the current number of cache entries.\nInterface CacheStorageWithGetSize;\n// An optional interface for cache storage that knows whether it can be concurrently accessible without synchronization.\nInterface ConcurrentCacheStorage;\n", "des": "Template loading and caching."}
{"index": 619, "repo": "freemarker-2.3.32", "code": "package core\n\n// Gives information about the place where a directive is called from, also lets you attach a custom data object to that place.\nInterface DirectiveCallPlace;\n// Don't implement this interface yourself; use the existing implementation(s).\nInterface ParserConfiguration;\n// Used by built-ins and other template language features that get a class based on a string.\nInterface TemplateClassResolver;\n", "des": "The seldom used or advanced parts of the fundamental FreeMarker API, compared to freemarker.template."}
{"index": 620, "repo": "freemarker-2.3.32", "code": "package debug\n\n// Represents the debugger-side mirror of a debugged Environment object in the remote VM.\nInterface DebuggedEnvironment;\n// The main debugger interface.\nInterface Debugger;\n// An interface for components that wish to receive debugging events.\nInterface DebuggerListener;\n// Represents the debugger-side mirror of a TemplateModel object, a Template object, or a Configuration object.\nInterface DebugModel;\n", "des": "Debugging API; experimental status, might change! This is to support debugging in IDE-s."}
{"index": 621, "repo": "freemarker-2.3.32", "code": "package ant\n\n// FMPP is a more complete solution.\nClass FreemarkerXmlTask;\n// Used internally, public for technical reasons only.\nClass JythonAntTask;\n// Used internally, public for technical reasons only.\nClass UnlinkedJythonOperationsImpl;\n", "des": "Ant task to transform XML files with a template; a more powerful alternative is FMPP."}
{"index": 622, "repo": "freemarker-2.3.32", "code": "package beans\n\n// Returned by MemberAccessPolicy.forClass(Class).\nInterface ClassMemberAccessPolicy;\n// Implement this to restrict what class members (methods, fields, constructors) are accessible from templates.\nInterface MemberAccessPolicy;\n// Used for customizing how the methods are visible from templates, via BeansWrapper.setMethodAppearanceFineTuner(MethodAppearanceFineTuner).\nInterface MethodAppearanceFineTuner;\n", "des": "The default object wrapper of FreeMarker uses this to expose Java Beans and POJO-s to templates."}
{"index": 623, "repo": "freemarker-2.3.32", "code": "package dom\n\n// \nInterface XPathSupport;\n// A base class for wrapping a single W3C DOM Node as a FreeMarker template model.\nClass NodeModel;\n// Will be removed (main method in a library, often classified as CWE-489 \"Leftover Debug Code\").\nClass Transform;\n", "des": "Exposes DOM XML nodes to templates as easily traversable trees; see in the Manual."}
{"index": 624, "repo": "freemarker-2.3.32", "code": "package jdom\n\n// Use NodeModel instead.\nClass NodeListModel;\n", "des": "Deprecated, use W3C DOM (freemarker.ext.dom) instead; Exposes JDOM XML nodes to templates."}
{"index": 625, "repo": "freemarker-2.3.32", "code": "package jsp\n\n// An instance of this class should be registered as a <listener> in the web.xml descriptor in order to correctly dispatch events to event listeners that are specified in TLD files.\nClass EventForwarding;\n// This feature is not supported anymore, also, it uses the deprecated default Configuration.\nClass FreemarkerTag;\n// A hash model associated with a servlet context that can load JSP tag libraries associated with that servlet context.\nClass TaglibFactory;\n", "des": "Classes for two-way FreeMarker-JSP integration."}
{"index": 626, "repo": "freemarker-2.3.32", "code": "package jython\n\n// Model for Jython dictionaries (PyDictionary and PyStringMap).\nClass JythonHashModel;\n// Generic model for arbitrary Jython objects.\nClass JythonModel;\n// Model for Jython numeric objects (PyInteger, PyLong, PyFloat).\nClass JythonNumberModel;\n// Model for Jython sequence objects (PySequence descendants).\nClass JythonSequenceModel;\n// Functions that has a different implementation depending on the Jython version used.\nClass JythonVersionAdapter;\n", "des": "Exposes Jython objects to templates."}
{"index": 627, "repo": "freemarker-2.3.32", "code": "package rhino\n\n// \nClass RhinoFunctionModel;\n// \nClass RhinoScriptableModel;\n// \nClass RhinoWrapper;\n", "des": "Exposes Rhino (ECMAScript) objects to templates."}
{"index": 628, "repo": "freemarker-2.3.32", "code": "package servlet\n\n// An extension of SimpleHash that looks up keys in the hash, then in the request, session, and servlet context scopes.\nClass AllHttpScopesHashModel;\n// FreeMarker MVC View servlet that can be used similarly to JSP views.\nClass FreemarkerServlet;\n// TemplateHashModel wrapper for a HttpServletRequest attributes.\nClass HttpRequestHashModel;\n// TemplateHashModel wrapper for a HttpServletRequest parameters.\nClass HttpRequestParametersHashModel;\n", "des": "Servlet for legacy \"Model 2\" frameworks that allows using FreeMarker templates instead of JSP as the MVC View (see in the Manual)."}
{"index": 629, "repo": "freemarker-2.3.32", "code": "package util\n\n// Interface used to create various wrapper models in the ModelCache.\nInterface ModelFactory;\n// A generic interface for template models that wrap some underlying object, and wish to provide access to that wrapped object.\nInterface WrapperTemplateModel;\n// Use IdentityHashMap instead.\nClass IdentityHashMap;\n// Internally used by various wrapper implementations to implement model caching.\nClass ModelCache;\n", "des": "Various classes used by freemarker.ext but might be useful outside it too."}
{"index": 630, "repo": "freemarker-2.3.32", "code": "package xml\n\n// Use NodeModel instead.\nClass NodeListModel;\n", "des": "Deprecated, use W3C DOM with freemarker.ext.dom instead; Exposes XML from DOM, dom4j or JDOM nodes, uniformly."}
{"index": 631, "repo": "freemarker-2.3.32", "code": "package log\n\n// Delegates logger creation to an actual logging library.\nClass Logger;\n", "des": "Logging facility; dispatches FreeMarker log messages to the chosen logger library."}
{"index": 632, "repo": "freemarker-2.3.32", "code": "package template\n\n// A TemplateModel that can be unwrapped and then it considers a provided desired (hint) class.\nInterface AdapterTemplateModel;\n// Used for the attempt_exception_reported configuration setting.\nInterface AttemptExceptionReporter;\n// Maps Java objects to the type-system of FreeMarker Template Language (see the TemplateModel interfaces).\nInterface ObjectWrapper;\n", "des": "The fundamental, most commonly used API-s of FreeMarker; start with Configuration (see also the Getting Started in the Manual.)"}
{"index": 633, "repo": "freemarker-2.3.32", "code": "package utility\n\n// Used internally by DateUtil; don't use its implementations for anything else.\nInterface DateUtil.CalendarFieldsToDateConverter;\n// Used internally by DateUtil; don't use its implementations for anything else.\nInterface DateUtil.DateToISO8601CalendarFactory;\n// Used for the trivial cases of the factory pattern.\nInterface ObjectFactory<T>;\n", "des": "Various classes used by core FreeMarker code but might be useful outside of it too."}
{"index": 634, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package server\n\n// Extends Thread and provides an implementation that is used for processing the AM heart beat request asynchronously and sending back the response using the callback method registered with the system.\nClass AMHeartbeatRequestHandler;\n// Data structure that encapsulates AllocateRequest and AsyncCallback instance.\nClass AMHeartbeatRequestHandler.AsyncAllocateRequestInfo;\n// A component that sits in between AMRMClient(Impl) and Yarn RM.\nClass AMRMClientRelayer;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 635, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package records\n\n// \nInterface MasterKey;\n// \nClass AppCollectorData;\n// Used to hold max wait time / queue length information to be passed back to the NodeManager.\nClass ContainerQueuingLimit;\n// NodeHealthStatus is a summary of the health status of the node.\nClass NodeHealthStatus;\n// NodeStatus is a summary of the status of the node.\nClass NodeStatus;\n", "des": "Server records."}
{"index": 636, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package pb\n\n// \nClass AppCollectorDataPBImpl;\n// Implementation of ContainerQueuingLimit interface.\nClass ContainerQueuingLimitPBImpl;\n// \nClass MasterKeyPBImpl;\n// \nClass NodeHealthStatusPBImpl;\n// \nClass NodeStatusPBImpl;\n// Protocol Buffer implementation of OpportunisticContainersStatus.\nClass OpportunisticContainersStatusPBImpl;\n", "des": "Server records PB implementations."}
{"index": 637, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package failover\n\n// Utility class that creates proxy for specified protocols when federation is enabled.\nClass FederationProxyProviderUtil;\n// A FailoverProxyProvider implementation that uses the FederationStateStore to determine the ResourceManager to connect to.\nClass FederationRMFailoverProxyProvider<T>;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 638, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package policies\n\n// This interface provides a general method to reinitialize a policy.\nInterface ConfigurableFederationPolicy;\n// Base abstract class for a weighted ConfigurableFederationPolicy.\nClass AbstractConfigurableFederationPolicy;\n// Context to (re)initialize a FederationAMRMProxyPolicy and FederationRouterPolicy.\nClass FederationPolicyInitializationContext;\n// Helper class used to factor out common validation steps for policies.\nClass FederationPolicyInitializationContextValidator;\n", "des": "Federation Policies."}
{"index": 639, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package amrmproxy\n\n// Implementors of this interface provide logic to split the list of ResourceRequests received by the AM among various RMs.\nInterface FederationAMRMProxyPolicy;\n// Base abstract class for FederationAMRMProxyPolicy implementations, that provides common validation for reinitialization.\nClass AbstractAMRMProxyPolicy;\n// An implementation of the FederationAMRMProxyPolicy that simply broadcasts each ResourceRequest to all the available sub-clusters.\nClass BroadcastAMRMProxyPolicy;\n", "des": "AMRMPRoxy policies."}
{"index": 640, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package dao\n\n// This is a DAO class for the configuration of parameteres for federation policies.\nClass WeightedPolicyInfo;\n", "des": "DAO objects for serializing/deserializing policy configurations."}
{"index": 641, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package exceptions\n\n// Generic policy exception.\nClass FederationPolicyException;\n// This exception is thrown when the initialization of a federation policy is not successful.\nClass FederationPolicyInitializationException;\n// This exception is thrown when policies cannot locate any active cluster.\nClass NoActiveSubclustersException;\n// This exception is thrown whenever a policy is given a SubClusterId that is unknown.\nClass UnknownSubclusterException;\n", "des": "Exceptions for policies."}
{"index": 642, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package manager\n\n// Implementors need to provide the ability to serliaze a policy and its configuration as a SubClusterPolicyConfiguration, as well as provide (re)initialization mechanics for the underlying FederationAMRMProxyPolicy and FederationRouterPolicy.\nInterface FederationPolicyManager;\n// This class provides basic implementation for common methods that multiple policies will need to implement.\nClass AbstractPolicyManager;\n", "des": "Various implementation of FederationPolicyManager."}
{"index": 643, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package router\n\n// Implements the logic for determining the routing of an application submission based on a policy.\nInterface FederationRouterPolicy;\n// Base abstract class for FederationRouterPolicy implementations, that provides common validation for reinitialization.\nClass AbstractRouterPolicy;\n// This FederationRouterPolicy pick a subcluster based on the hash of the job's queue name.\nClass HashBasedRouterPolicy;\n// This implements a simple load-balancing policy.\nClass LoadBasedRouterPolicy;\n", "des": "Router policies."}
{"index": 644, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package resolver\n\n// An utility that helps to determine the sub-cluster that a specified node or rack belongs to.\nInterface SubClusterResolver;\n// Partial implementation of SubClusterResolver, containing basic implementations of the read methods.\nClass AbstractSubClusterResolver;\n// Default simple sub-cluster and rack resolver class.\nClass DefaultSubClusterResolverImpl;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 645, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package store\n\n// FederationApplicationHomeSubClusterStore maintains the state of all Applications that have been submitted to the federated cluster.\nInterface FederationApplicationHomeSubClusterStore;\n// FederationMembershipStateStore maintains the state of all subcluster(s) as encapsulated by SubClusterInfo for all the subcluster(s) that are participating in federation.\nInterface FederationMembershipStateStore;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 646, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package exception\n\n// Exception thrown by the FederationStateStore.\nClass FederationStateStoreException;\n// Exception thrown by the FederationMembershipStateStoreInputValidator, FederationApplicationHomeSubClusterStoreInputValidator, FederationPolicyStoreInputValidator if the input is invalid.\nClass FederationStateStoreInvalidInputException;\n// Exception thrown by the FederationStateStore, if it is a retriable exception.\nClass FederationStateStoreRetriableException;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 647, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package impl\n\n// In-memory implementation of FederationStateStore.\nClass MemoryFederationStateStore;\n// SQL implementation of FederationStateStore.\nClass SQLFederationStateStore;\n// ZooKeeper implementation of FederationStateStore.\nClass ZookeeperFederationStateStore;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 648, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package metrics\n\n// Performance metrics for FederationStateStore implementations.\nClass FederationStateStoreClientMetrics;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 649, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package records\n\n// The request sent by the Router to Federation state store to map the home subcluster of a newly submitted application.\nClass AddApplicationHomeSubClusterRequest;\n// AddApplicationHomeSubClusterResponse contains the answer from the FederationApplicationHomeSubClusterStore to a request to insert a newly generated applicationId and its owner.\nClass AddApplicationHomeSubClusterResponse;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 650, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package pb\n\n// Protocol buffer based implementation of AddApplicationHomeSubClusterRequest.\nClass AddApplicationHomeSubClusterRequestPBImpl;\n// Protocol buffer based implementation of AddApplicationHomeSubClusterResponse.\nClass AddApplicationHomeSubClusterResponsePBImpl;\n// Protocol buffer based implementation of ApplicationHomeSubCluster.\nClass ApplicationHomeSubClusterPBImpl;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 651, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package utils\n\n// Utility class to validate the inputs to FederationApplicationHomeSubClusterStore, allows a fail fast mechanism for invalid user inputs.\nClass FederationApplicationHomeSubClusterStoreInputValidator;\n// Utility class to validate the inputs to FederationMembershipStateStore, allows a fail fast mechanism for invalid user inputs.\nClass FederationMembershipStateStoreInputValidator;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 652, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package utils\n\n// Encapsulates a method that has one parameter and returns a value of the type specified by the TResult parameter.\nInterface FederationStateStoreFacade.Func<T,TResult>;\n// Helper class that handles reads and writes to Yarn Registry to support UAM HA and second attempt.\nClass FederationRegistryClient;\n// The FederationStateStoreFacade is an utility wrapper that provides singleton access to the Federation state store.\nClass FederationStateStoreFacade;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 653, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package metrics\n\n// Metrics for FederationInterceptor Internals.\nClass AMRMClientRelayerMetrics;\n// Metrics for Opportunistic Scheduler.\nClass OpportunisticSchedulerMetrics;\n// Easier classification of request types for logging metrics.\nEnum AMRMClientRelayerMetrics.RequestType;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 654, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package scheduler\n\n// The DistributedOpportunisticContainerAllocator allocates containers on a given list of nodes, after modifying the container sizes to respect the limits set by the ResourceManager.\nClass DistributedOpportunisticContainerAllocator;\n// Base abstract class for Opportunistic container allocations, that provides common functions required for Opportunistic container allocation.\nClass OpportunisticContainerAllocator;\n", "des": "Utility classes used for Scheduling."}
{"index": 655, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package service\n\n// Marker interface for starting services from RM.\nInterface SystemServiceManager;\n", "des": "Package org.apache.hadoop.yarn.server.service contains service related classes."}
{"index": 656, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package security\n\n// Timeline authentication filter provides delegation token support for ATSv1 and ATSv2.\nClass TimelineAuthenticationFilter;\n// Initializes TimelineAuthenticationFilter which provides support for Kerberos HTTP SPNEGO authentication.\nClass TimelineAuthenticationFilterInitializer;\n// Abstract implementation of delegation token manager service for different versions of timeline service.\nClass TimelineDelgationTokenSecretManagerService;\n", "des": "Package org.apache.hadoop.server.timeline.security contains classes related to timeline authentication filters and abstract delegation token service for ATSv1 and ATSv2."}
{"index": 657, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package uam\n\n// A service that manages a pool of UAM managers in UnmanagedApplicationManager.\nClass UnmanagedAMPoolManager;\n// UnmanagedApplicationManager is used to register unmanaged application and negotiate for resources from resource managers.\nClass UnmanagedApplicationManager;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 658, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package timeline\n\n// Set of utility methods to be used across timeline reader and collector.\nClass TimelineServerUtils;\n", "des": "Package org.apache.hadoop.server.util.timeline contains utility classes used by ATSv1 and ATSv2 on the server side."}
{"index": 659, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package csi\n\n// CSI constants.\nClass CsiConstants;\n// Volume capability range that specified in a volume resource request, this range defines the desired min/max capacity.\nClass VolumeCapabilityRange;\n// The builder used to build a VolumeCapabilityRange instance.\nClass VolumeCapabilityRange.VolumeCapabilityBuilder;\n// Unique ID for a volume.\nClass VolumeId;\n// VolumeMetaData defines all valid info for a CSI compatible volume.\nClass VolumeMetaData;\n", "des": "This package contains common volume related classes."}
{"index": 660, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package exception\n\n// This exception is thrown when a volume is found not valid.\nClass InvalidVolumeException;\n// Base class for all volume related exceptions.\nClass VolumeException;\n// Exception throws when volume provisioning is failed.\nClass VolumeProvisioningException;\n", "des": "This package contains volume related exception classes."}
{"index": 661, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package webapp\n\n// Classes implementing this interface are used in the LogServlet for providing various application related information.\nInterface AppInfoProvider;\n// Common web service parameters which could be used in RM/NM/AHS WebService.\nInterface YarnWebServiceParams;\n// \nClass AppAttemptBlock;\n// \nClass AppBlock;\n// \nClass AppsBlock;\n// \nClass ContainerBlock;\n// \nClass ErrorsAndWarningsBlock;\n// \nClass ErrorsAndWarningsBlock.ErrorMetrics;\n// \nClass ErrorsAndWarningsBlock.MetricsBase;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 662, "repo": "commons-lang3-3.12.0", "code": "package lang3\n\n// Use FailableBiConsumer.\nInterface Functions.FailableBiConsumer<O1,O2,T extends Throwable>;\n// Use FailableBiFunction.\nInterface Functions.FailableBiFunction<O1,O2,R,T extends Throwable>;\n// Use FailableBiPredicate.\nInterface Functions.FailableBiPredicate<O1,O2,T extends Throwable>;\n// Use FailableCallable.\nInterface Functions.FailableCallable<R,T extends Throwable>;\n// Use FailableConsumer.\nInterface Functions.FailableConsumer<O,T extends Throwable>;\n", "des": "Provides highly reusable static utility methods, chiefly concerned with adding value to the java.lang classes."}
{"index": 663, "repo": "commons-lang3-3.12.0", "code": "package arch\n\n// The Processor represents a microprocessor and defines some properties like architecture and type of the microprocessor.\nClass Processor;\n// The Processor.Arch enum defines the architecture of a microprocessor.\nEnum Processor.Arch;\n// The Processor.Type enum defines types of a microprocessor.\nEnum Processor.Type;\n", "des": "Provides classes to work with the values of the os.arch system property."}
{"index": 664, "repo": "commons-lang3-3.12.0", "code": "package builder\n\n// The Builder interface is designed to designate a class as a builder object in the Builder design pattern.\nInterface Builder<T>;\n// Diffable classes can be compared with other objects for differences.\nInterface Diffable<T>;\n// Assists in implementing Comparable.compareTo(Object) methods.\nClass CompareToBuilder;\n// A Diff contains the differences between two Diffable class fields.\nClass Diff<T>;\n// Assists in implementing Diffable.diff(Object) methods.\nClass DiffBuilder<T>;\n", "des": "Assists in creating consistent equals(Object), toString(), hashCode(), and compareTo(Object) methods."}
{"index": 665, "repo": "commons-lang3-3.12.0", "code": "package compare\n\n// Utility library to provide helper methods for translating Comparable.compareTo(T) result into a boolean.\nClass ComparableUtils;\n// Provides access to the available methods\nClass ComparableUtils.ComparableCheckBuilder<A extends Comparable<A>>;\n// Compares Object's Object.toString() values.\nClass ObjectToStringComparator;\n", "des": "Provides classes to work with the Comparable and Comparator interfaces."}
{"index": 666, "repo": "commons-lang3-3.12.0", "code": "package concurrent\n\n// An interface describing a Circuit Breaker component.\nInterface CircuitBreaker<T>;\n// Definition of an interface for a wrapper around a calculation that takes a single parameter and returns a result.\nInterface Computable<I,O>;\n// Definition of an interface for the thread-safe initialization of objects.\nInterface ConcurrentInitializer<T>;\n// Base class for circuit breakers.\nClass AbstractCircuitBreaker<T>;\n", "des": "Provides support classes for multi-threaded programming."}
{"index": 667, "repo": "commons-lang3-3.12.0", "code": "package locks\n\n// Combines the monitor and visitor pattern to work with locked objects.\nClass LockingVisitors;\n// Wraps a domain object and a lock for access by lambdas.\nClass LockingVisitors.LockVisitor<O,L>;\n// This class implements a wrapper for a locked (hidden) object, and provides the means to access it.\nClass LockingVisitors.ReadWriteLockVisitor<O>;\n// This class implements a wrapper for a locked (hidden) object, and provides the means to access it.\nClass LockingVisitors.StampedLockVisitor<O>;\n", "des": "Provides support classes for multi-threaded programming."}
{"index": 668, "repo": "commons-lang3-3.12.0", "code": "package event\n\n// An EventListenerSupport object can be used to manage a list of event listeners of a particular type.\nClass EventListenerSupport<L>;\n// Provides some useful event-based utility methods.\nClass EventUtils;\n", "des": "Provides some useful event-based utilities."}
{"index": 669, "repo": "commons-lang3-3.12.0", "code": "package exception\n\n// Allows the storage and retrieval of contextual information based on label-value pairs for exceptions.\nInterface ExceptionContext;\n// Default implementation of the context storing the label-value pairs for contexted exceptions.\nClass DefaultExceptionContext;\n// Provides utilities for manipulating and examining Throwable objects.\nClass ExceptionUtils;\n// Exception thrown when a clone cannot be created.\nClass CloneFailedException;\n", "des": "Provides functionality for Exceptions."}
{"index": 670, "repo": "commons-lang3-3.12.0", "code": "package function\n\n// A functional interface like BiConsumer that declares a Throwable.\nInterface FailableBiConsumer<T,U,E extends Throwable>;\n// A functional interface like BiFunction that declares a Throwable.\nInterface FailableBiFunction<T,U,R,E extends Throwable>;\n// A functional interface like BiPredicate that declares a Throwable.\nInterface FailableBiPredicate<T,U,E extends Throwable>;\n", "des": "Provides functional interfaces to complement those in java.lang.function and utilities for working with Java 8 lambdas."}
{"index": 671, "repo": "commons-lang3-3.12.0", "code": "package math\n\n// Fraction is a Number implementation that stores fractions accurately.\nClass Fraction;\n// Provides IEEE-754r variants of NumberUtils methods.\nClass IEEE754rUtils;\n// Provides extra functionality for Java Number classes.\nClass NumberUtils;\n", "des": "Extends java.math for business mathematical classes."}
{"index": 672, "repo": "commons-lang3-3.12.0", "code": "package mutable\n\n// Provides mutable access to a value.\nInterface Mutable<T>;\n// A mutable boolean wrapper.\nClass MutableBoolean;\n// A mutable byte wrapper.\nClass MutableByte;\n// A mutable double wrapper.\nClass MutableDouble;\n// A mutable float wrapper.\nClass MutableFloat;\n// A mutable int wrapper.\nClass MutableInt;\n// A mutable long wrapper.\nClass MutableLong;\n// A mutable Object wrapper.\nClass MutableObject<T>;\n// A mutable short wrapper.\nClass MutableShort;\n", "des": "Provides typed mutable wrappers to primitive values and Object."}
{"index": 673, "repo": "commons-lang3-3.12.0", "code": "package reflect\n\n// Generalization of \"has a type.\"\nInterface Typed<T>;\n// Utility reflection methods focused on constructors, modeled after MethodUtils.\nClass ConstructorUtils;\n// Utilities for working with Fields by reflection.\nClass FieldUtils;\n// Utility methods focusing on inheritance.\nClass InheritanceUtils;\n// Utility reflection methods focused on Methods, originally from Commons BeanUtils.\nClass MethodUtils;\n", "des": "Accumulates common high-level uses of the java.lang.reflect APIs."}
{"index": 674, "repo": "commons-lang3-3.12.0", "code": "package stream\n\n// Provides utility functions, and classes for working with the java.util.stream package, or more generally, with Java 8 lambdas.\nClass Streams;\n// A Collector type for arrays.\nClass Streams.ArrayCollector<O>;\n// A reduced, and simplified version of a Stream with failable method signatures.\nClass Streams.FailableStream<O>;\n", "des": "Provides utility classes to complement those in java.util.stream."}
{"index": 675, "repo": "commons-lang3-3.12.0", "code": "package text\n\n// as of 3.6, use commons-text FormatFactory instead\nInterface FormatFactory;\n// as of 3.6, use commons-text CompositeFormat instead\nClass CompositeFormat;\n// as of 3.6, use commons-text ExtendedMessageFormat instead\nClass ExtendedMessageFormat;\n// as of 3.6, use commons-text FormattableUtils instead\nClass FormattableUtils;\n// as of 3.6, use commons-text TextStringBuilder instead\nClass StrBuilder;\n// as of 3.6, use commons-text StringLookupFactory instead\nClass StrLookup<V>;\n", "des": "Provides classes for handling and manipulating text, partly as an extension to java.text."}
{"index": 676, "repo": "commons-lang3-3.12.0", "code": "package translate\n\n// as of 3.6, use commons-text AggregateTranslator instead\nClass AggregateTranslator;\n// as of 3.6, use commons-text CharSequenceTranslator instead\nClass CharSequenceTranslator;\n// as of 3.6, use commons-text CharSequenceTranslator instead\nClass CodePointTranslator;\n// as of 3.6, use commons-text EntityArrays instead\nClass EntityArrays;\n// as of 3.6, use commons-text UnicodeEscaper instead\nClass JavaUnicodeEscaper;\n", "des": "An API for creating text translation routines from a set of smaller building blocks."}
{"index": 677, "repo": "commons-lang3-3.12.0", "code": "package time\n\n// DateParser is the \"missing\" interface for the parsing methods of DateFormat.\nInterface DateParser;\n// DatePrinter is the \"missing\" interface for the format methods of DateFormat.\nInterface DatePrinter;\n// Helps use Calendars.\nClass CalendarUtils;\n// Date and time formatting utilities and constants.\nClass DateFormatUtils;\n// A suite of utilities surrounding the use of the Calendar and Date object.\nClass DateUtils;\n// Duration formatting utilities and constants.\nClass DurationFormatUtils;\n", "des": "Provides classes and methods to work with dates and durations."}
{"index": 678, "repo": "commons-lang3-3.12.0", "code": "package tuple\n\n// An immutable pair consisting of two Object elements.\nClass ImmutablePair<L,R>;\n// An immutable triple consisting of three Object elements.\nClass ImmutableTriple<L,M,R>;\n// A mutable pair consisting of two Object elements.\nClass MutablePair<L,R>;\n// A mutable triple consisting of three Object elements.\nClass MutableTriple<L,M,R>;\n// A pair consisting of two elements.\nClass Pair<L,R>;\n// A triple consisting of three elements.\nClass Triple<L,M,R>;\n", "des": "Tuple classes, starting with a Pair class in version 3.0."}
{"index": 679, "repo": "jackson-databind-2.15.2", "code": "package databind\n\n// Add-on extension used for XML-specific configuration, needed to decouple format module functionality from pluggable introspection functionality (especially JAXB-annotation related one).\nInterface AnnotationIntrospector.XmlExtensions;\n", "des": "Basic data binding (mapping) functionality that allows for reading JSON content into Java Objects (POJOs) and JSON Trees (JsonNode), as well as writing Java Objects and trees as JSON."}
{"index": 680, "repo": "jackson-databind-2.15.2", "code": "package annotation\n\n// Simple value container for containing values read from JsonPOJOBuilder annotation instance.\nClass JsonPOJOBuilder.Value;\n// Marker class used with annotations to indicate \"no class\".\nClass NoClass;\n// \nEnum JsonSerialize.Inclusion;\n// Enumeration used with JsonSerialize.typing() property to define whether type detection is based on dynamic runtime type (DYNAMIC) or declared type (STATIC).\nEnum JsonSerialize.Typing;\n", "des": "Annotations that directly depend on classes in databinding bundle (not just Jackson core) and cannot be included in Jackson core annotations package (because it cannot have any external dependencies)."}
{"index": 681, "repo": "jackson-databind-2.15.2", "code": "package cfg\n\n// Interface that actual SerializationFeature enumerations used by MapperConfig implementations must implement.\nInterface ConfigFeature;\n// Interface that defines interaction with data type specific configuration features.\nInterface DatatypeFeature;\n// Immutable container class used to store simple configuration settings for both serialization and deserialization.\nClass BaseSettings;\n// \nClass CoercionConfig;\n// \nClass CoercionConfigs;\n", "des": "Package that contains most of configuration-related classes; exception being couple of most-commonly used configuration things (like Feature enumerations) that are at the main level (com.fasterxml.jackson.databind)."}
{"index": 682, "repo": "jackson-databind-2.15.2", "code": "package deser\n\n// Add-on interface that JsonDeserializers can implement to get a callback that can be used to create contextual (context-dependent) instances of deserializer to use for handling properties of supported type.\nInterface ContextualDeserializer;\n// Add-on interface that KeyDeserializers can implement to get a callback that can be used to create contextual instances of key deserializer to use for handling Map keys of supported type.\nInterface ContextualKeyDeserializer;\n", "des": "Contains implementation classes of deserialization part of data binding."}
{"index": 683, "repo": "jackson-databind-2.15.2", "code": "package impl\n\n// \nClass BeanAsArrayBuilderDeserializer;\n// Variant of BeanDeserializer used for handling deserialization of POJOs when serialized as JSON Arrays, instead of JSON Objects.\nClass BeanAsArrayDeserializer;\n// Helper class used for storing mapping from property name to SettableBeanProperty instances.\nClass BeanPropertyMap;\n// \nClass CreatorCandidate;\n// \nClass CreatorCandidate.Param;\n", "des": "Contains those implementation classes of deserialization part of data binding that are not considered part of public or semi-public interfaces."}
{"index": 684, "repo": "jackson-databind-2.15.2", "code": "package std\n\n// We need a custom deserializer both because ArrayBlockingQueue has no default constructor AND because it has size limit used for constructing underlying storage automatically.\nClass ArrayBlockingQueueDeserializer;\n// \nClass AtomicBooleanDeserializer;\n// \nClass AtomicIntegerDeserializer;\n// \nClass AtomicLongDeserializer;\n// \nClass AtomicReferenceDeserializer;\n// \nClass ByteBufferDeserializer;\n", "des": "Contains public standard implementations of abstraction that Jackson uses."}
{"index": 685, "repo": "jackson-databind-2.15.2", "code": "package ext\n\n// Container deserializers that handle \"core\" XML types: ones included in standard JDK 1.5.\nClass CoreXMLDeserializers;\n// Combo-deserializer that supports deserialization of somewhat optional javax.xml types QName, Duration and XMLGregorianCalendar.\nClass CoreXMLDeserializers.Std;\n// Provider for serializers of XML types that are part of full JDK 1.5, but that some alleged 1.5 platforms are missing (Android, GAE).\nClass CoreXMLSerializers;\n", "des": "Contains extended support for \"external\" packages: things that may or may not be present in runtime environment, but that are commonly enough used so that explicit support can be added."}
{"index": 686, "repo": "jackson-databind-2.15.2", "code": "package introspect\n\n// Interface used for decoupling details of how mix-in annotation definitions are accessed (via this interface), and how they are stored (defined by classes that implement the interface)\nInterface ClassIntrospector.MixInResolver;\n// Definition of a handler API to use for checking whether given base name (remainder of accessor method name after removing prefix) is acceptable based on various rules.\nInterface DefaultAccessorNamingStrategy.BaseNameValidator;\n", "des": "Functionality needed for Bean introspection, required for detecting accessors and mutators for Beans, as well as locating and handling method annotations."}
{"index": 687, "repo": "jackson-databind-2.15.2", "code": "package jdk14\n\n// Helper class to support some of JDK 14 (and later) features without Jackson itself being run on (or even built with) Java 14.\nClass JDK14Util;\n", "des": "Contains helper class(es) needed to support some of JDK14+ features without requiring running or building using JDK 14."}
{"index": 688, "repo": "jackson-databind-2.15.2", "code": "package jsonFormatVisitors\n\n// \nInterface JsonAnyFormatVisitor;\n// \nInterface JsonArrayFormatVisitor;\n// \nInterface JsonBooleanFormatVisitor;\n// Interface JsonSerializer implements to allow for visiting type hierarchy.\nInterface JsonFormatVisitable;\n// \nInterface JsonFormatVisitorWithSerializerProvider;\n// Interface for visitor callbacks, when type in question can be any of legal JSON types.\nInterface JsonFormatVisitorWrapper;\n// \nInterface JsonIntegerFormatVisitor;\n// \nInterface JsonMapFormatVisitor;\n", "des": "Classes used for exposing logical structure of POJOs as Jackson sees it, and exposed via ObjectMapper.acceptJsonFormatVisitor(Class, JsonFormatVisitorWrapper) and ObjectMapper.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType, JsonFormatVisitorWrapper) methods."}
{"index": 689, "repo": "jackson-databind-2.15.2", "code": "package jsonschema\n\n// Since 2.15, we recommend use of external JSON Schema generator module\nInterface SchemaAware;\n// Since 2.2, we recommend use of external JSON Schema generator module\nClass JsonSchema;\n// Since 2.15, we recommend use of external JSON Schema generator module\nAnnotation Type JsonSerializableSchema;\n", "des": "Classes needed for JSON schema support (currently just ability to generate schemas using serialization part of data mapping)"}
{"index": 690, "repo": "jackson-databind-2.15.2", "code": "package jsontype\n\n// Interface that defines standard API for converting types to type identifiers and vice versa.\nInterface TypeIdResolver;\n// Interface that defines builders that are configured based on annotations (like JsonTypeInfo or JAXB annotations), and produce type serializers and deserializers used for handling type information embedded in JSON to allow for safe polymorphic type handling.\nInterface TypeResolverBuilder<T extends TypeResolverBuilder<T>>;\n", "des": "Package that contains interfaces that define how to implement functionality for dynamically resolving type during deserialization."}
{"index": 691, "repo": "jackson-databind-2.15.2", "code": "package impl\n\n// Type deserializer used with JsonTypeInfo.As.WRAPPER_ARRAY inclusion mechanism.\nClass AsArrayTypeDeserializer;\n// Type serializer that will embed type information in an array, as the first element, and actual value as the second element.\nClass AsArrayTypeSerializer;\n// A TypeDeserializer capable of deducing polymorphic types based on the fields available.\nClass AsDeductionTypeDeserializer;\n// \nClass AsDeductionTypeSerializer;\n", "des": "Package that contains standard implementations for TypeResolverBuilder and TypeIdResolver."}
{"index": 692, "repo": "jackson-databind-2.15.2", "code": "package module\n\n// Simple AbstractTypeResolver implementation, which is based on static mapping from abstract super types into sub types (concrete or abstract), but retaining generic parameterization.\nClass SimpleAbstractTypeResolver;\n// Simple implementation Deserializers which allows registration of deserializers based on raw (type erased class).\nClass SimpleDeserializers;\n", "des": "Package that contains classes and interfaces to help implement custom extension Modules (which are registered using ObjectMapper.registerModule(com.fasterxml.jackson.databind.Module)."}
{"index": 693, "repo": "jackson-databind-2.15.2", "code": "package node\n\n// Interface that defines common \"creator\" functionality implemented both by JsonNodeFactory and ContainerNode (that is, JSON Object and Array nodes).\nInterface JsonNodeCreator;\n// Node class that represents Arrays mapped from JSON content.\nClass ArrayNode;\n// Abstract base class common to all standard JsonNode implementations.\nClass BaseJsonNode;\n// Numeric node that contains simple 64-bit integer values.\nClass BigIntegerNode;\n", "des": "Contains concrete JsonNode implementations Jackson uses for the Tree model."}
{"index": 694, "repo": "jackson-databind-2.15.2", "code": "package ser\n\n// Since 2.3: use PropertyFilter instead.\nInterface BeanPropertyFilter;\n// Add-on interface that JsonSerializers can implement to get a callback that can be used to create contextual instances of serializer to use for handling properties of supported type.\nInterface ContextualSerializer;\n// Interface that defines API for filter objects use (as configured using JsonFilter) for filtering bean properties to serialize.\nInterface PropertyFilter;\n", "des": "Contains implementation classes of serialization part of data binding."}
{"index": 695, "repo": "jackson-databind-2.15.2", "code": "package impl\n\n// VirtualBeanPropertyWriter implementation used for JsonAppend, to serialize properties backed-by dynamically assignable attribute values.\nClass AttributePropertyWriter;\n// Specialized POJO serializer that differs from BeanSerializer in that instead of producing a JSON Object it will output a JSON Array, omitting field names, and serializing values in specified serialization order.\nClass BeanAsArraySerializer;\n", "des": "Contains implementation classes of serialization part of data binding."}
{"index": 696, "repo": "jackson-databind-2.15.2", "code": "package type\n\n// Array types represent Java arrays, both primitive and object valued.\nClass ArrayType;\n// Key class, used as an efficient and accurate key for locating per-class values, such as JsonSerializers.\nClass ClassKey;\n// Simple helper class used to keep track of 'call stack' for classes being referenced (as well as unbound variables)\nClass ClassStack;\n// Type that represents things that act similar to Collection; but may or may not be instances of that interface.\nClass CollectionLikeType;\n", "des": "Package that contains concrete implementations of JavaType, as well as the factory (TypeFactory) for constructing instances from various input data types (like Class, Type) and programmatically (for structured types, arrays, Lists and Maps)."}
{"index": 697, "repo": "jackson-databind-2.15.2", "code": "package util\n\n// Interface that defines interface for accessing contents of a collection of annotations.\nInterface Annotations;\n// Helper interface for things that convert Objects of one type to another.\nInterface Converter<IN,OUT>;\n// An interface describing the required API for the Jackson-databind Type cache.\nInterface LookupCache<K,V>;\n// Simple tag interface mostly to allow sorting by name.\nInterface Named;\n", "des": "Utility classes for Mapper package."}
{"index": 698, "repo": "jackson-databind-2.15.2", "code": "package internal\n\n// A hash table supporting full concurrency of retrievals, adjustable expected concurrency for updates, and a maximum capacity to bound the map by.\nClass PrivateMaxEntriesMap<K,V>;\n// A builder that creates PrivateMaxEntriesMap instances.\nClass PrivateMaxEntriesMap.Builder<K,V>;\n", "des": "This package contains an implementation of a bounded ConcurrentMap data structure."}
{"index": 699, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package dsl\n\n// The main Integration DSL abstraction.\nInterface IntegrationFlow;\n// The Channels-specific Function.\nInterface IntegrationFlows.ChannelsFunction;\n// The MessageProducers-specific Function.\nInterface IntegrationFlows.MessageProducersFunction;\n// The MessageSources-specific Function.\nInterface IntegrationFlows.MessageSourcesFunction;\n// The MessagingGateways-specific Function.\nInterface IntegrationFlows.MessagingGatewaysFunction;\n", "des": "Root package of the Spring Integration Java DSL."}
{"index": 700, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package amqp\n\n// Factory class for AMQP components.\nClass Amqp;\n// \nClass AmqpAsyncOutboundGatewaySpec;\n// The base MessageProducerSpec implementation for a AmqpInboundChannelAdapter.\nClass AmqpBaseInboundChannelAdapterSpec<S extends AmqpBaseInboundChannelAdapterSpec<S>>;\n// A base MessagingGatewaySpec implementation for AmqpInboundGateway endpoint options.\nClass AmqpBaseInboundGatewaySpec<S extends AmqpBaseInboundGatewaySpec<S>>;\n", "des": "Provides AMQP Components support for Spring Integration Java DSL."}
{"index": 701, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package channel\n\n// \nClass DirectChannelSpec;\n// \nClass ExecutorChannelSpec;\n// \nClass LoadBalancingChannelSpec<S extends MessageChannelSpec<S,C>,C extends org.springframework.integration.channel.AbstractMessageChannel>;\n// \nClass MessageChannels;\n// \nClass MessageChannelSpec<S extends MessageChannelSpec<S,C>,C extends org.springframework.integration.channel.AbstractMessageChannel>;\n// \nClass PriorityChannelSpec;\n// \nClass PublishSubscribeChannelSpec<S extends PublishSubscribeChannelSpec<S>>;\n", "des": "Contains MessageChannel Builders DSL."}
{"index": 702, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package config\n\n// The Java DSL Integration infrastructure beanFactory initializer.\nClass DslIntegrationConfigurationInitializer;\n// A BeanPostProcessor to parse IntegrationFlow beans and register their components as beans in the provided BeanFactory, if necessary.\nClass IntegrationFlowBeanPostProcessor;\n", "des": "Provides config classes of the Spring Integration Java DSL."}
{"index": 703, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package context\n\n// A public API for dynamic (manual) registration of IntegrationFlow, not via standard bean registration phase.\nClass IntegrationFlowContext;\n// Instances of this classes are returned as a result of IntegrationFlowContext.registration(IntegrationFlow) invocation and provide an API for some useful IntegrationFlow options and its lifecycle.\nClass IntegrationFlowRegistration;\n", "des": "The context support classes for Spring Integration Java DSL."}
{"index": 704, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package core\n\n// The marker interface for the IntegrationComponentSpec implementation, when there is need to register as beans not only the target spec's components, but some additional components, e.g.\nInterface ComponentsRegistration;\n// A EndpointSpec for consumer endpoints.\nClass ConsumerEndpointSpec<S extends ConsumerEndpointSpec<S,H>,H extends org.springframework.messaging.MessageHandler>;\n", "des": "Provides core classes of the Spring Integration Java DSL."}
{"index": 705, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package feed\n\n// The Spring Integration Feed components Factory.\nClass Feed;\n// A MessageSourceSpec for a FeedEntryMessageSource.\nClass FeedEntryMessageSourceSpec;\n", "des": "Provides Feed Components support for Spring Integration Java DSL."}
{"index": 706, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package file\n\n// A MessageSourceSpec for a FileReadingMessageSource.\nClass FileInboundChannelAdapterSpec;\n// The Spring Integration File components Factory.\nClass Files;\n// The MessageHandlerSpec for the FileSplitter.\nClass FileSplitterSpec;\n// \nClass FileTransferringMessageHandlerSpec<F,S extends FileTransferringMessageHandlerSpec<F,S>>;\n// \nClass FileWritingMessageHandlerSpec;\n", "des": "Provides File Components support for Spring Integration Java DSL."}
{"index": 707, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package ftp\n\n// The factory for Spring Integration FTP components.\nClass Ftp;\n// A RemoteFileInboundChannelAdapterSpec for a FtpInboundFileSynchronizingMessageSource.\nClass FtpInboundChannelAdapterSpec;\n// \nClass FtpMessageHandlerSpec;\n// \nClass FtpOutboundGatewaySpec;\n", "des": "Provides FTP Components support for Spring Integration Java DSL."}
{"index": 708, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package http\n\n// \nClass BaseHttpInboundEndpointSpec<S extends BaseHttpInboundEndpointSpec<S,E>,E extends org.springframework.integration.http.inbound.HttpRequestHandlingEndpointSupport>;\n// A fluent API for the CrossOrigin.\nClass BaseHttpInboundEndpointSpec.CrossOriginSpec;\n// A fluent API for the RequestMapping.\nClass BaseHttpInboundEndpointSpec.RequestMappingSpec;\n// The HTTP components Factory.\nClass Http;\n", "des": "Provides HTTP Components support for Spring Integration Java DSL."}
{"index": 709, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package jms\n\n// Factory class for JMS components.\nClass Jms;\n// A DefaultMessageListenerContainer specific JmsListenerContainerSpec extension.\nClass JmsDefaultListenerContainerSpec;\n// A base IntegrationComponentSpec for JmsDestinationAccessors.\nClass JmsDestinationAccessorSpec<S extends JmsDestinationAccessorSpec<S,A>,A extends org.springframework.jms.support.destination.JmsDestinationAccessor>;\n", "des": "Provides JMS Components support for Spring Integration Java DSL."}
{"index": 710, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package jpa\n\n// Factory class for JPA components.\nClass Jpa;\n// The base MessageHandlerSpec for JPA Outbound endpoints.\nClass JpaBaseOutboundEndpointSpec<S extends JpaBaseOutboundEndpointSpec<S>>;\n// A MessageSourceSpec for a JpaPollingChannelAdapter.\nClass JpaInboundChannelAdapterSpec;\n// A JpaBaseOutboundEndpointSpec extension for the JpaOutboundGateway with OutboundGatewayType.RETRIEVING mode.\nClass JpaRetrievingOutboundGatewaySpec;\n", "des": "Provides JPA Components support for Spring Integration Java DSL."}
{"index": 711, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package kafka\n\n// Factory class for Apache Kafka components.\nClass Kafka;\n// A MessageProducerSpec implementation for the KafkaMessageDrivenChannelAdapter.\nClass KafkaMessageDrivenChannelAdapterSpec<K,V,S extends KafkaMessageDrivenChannelAdapterSpec<K,V,S>>;\n// A ConcurrentMessageListenerContainer configuration KafkaMessageDrivenChannelAdapterSpec extension.\nClass KafkaMessageDrivenChannelAdapterSpec.KafkaMessageDrivenChannelAdapterListenerContainerSpec<K,V>;\n", "des": "Provides Kafka Components support for Spring Integration Java DSL."}
{"index": 712, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package mail\n\n// A MessageProducerSpec for a ImapIdleChannelAdapter.\nClass ImapIdleChannelAdapterSpec;\n// A MailInboundChannelAdapterSpec for IMAP.\nClass ImapMailInboundChannelAdapterSpec;\n// The factory for Spring Integration Mail components.\nClass Mail;\n// The Mail specific MapBuilder implementation.\nClass MailHeadersBuilder;\n", "des": "Provides Mail Components support for Spring Integration Java DSL."}
{"index": 713, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package scripting\n\n// The MessageSourceSpec for Dynamic Language Scripts.\nClass ScriptMessageSourceSpec;\n// The factory for Dynamic Language Scripts (Groovy, Ruby, Python, JavaScript etc.).\nClass Scripts;\n// The MessageProcessorSpec implementation for the DslScriptExecutingMessageProcessor.\nClass ScriptSpec;\n", "des": "Provides Scripting Components support for Spring Integration Java DSL."}
{"index": 714, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package sftp\n\n// \nClass Sftp;\n// A RemoteFileInboundChannelAdapterSpec for a SftpInboundFileSynchronizingMessageSource.\nClass SftpInboundChannelAdapterSpec;\n// \nClass SftpMessageHandlerSpec;\n// \nClass SftpOutboundGatewaySpec;\n", "des": "Provides SFTP Components support for Spring Integration Java DSL."}
{"index": 715, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package support\n\n// Implementations accept a given value and perform work on the argument.\nInterface Consumer<T>;\n// Implementations of this class perform work on the given parameter and return a result of an optionally different type.\nInterface Function<T,R>;\n// A functional interface to specify MessageHandler logic with Java 8 Lambda expression: .<Integer>handle((p, h) -> p / 2)\nInterface GenericHandler<P>;\n", "des": "Provides various support classes used across Spring Integration Java DSL Components."}
{"index": 716, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package tuple\n\n// A Tuple is an immutable Collection of objects, each of which can be of an arbitrary type.\nClass Tuple;\n// A tuple that holds a single value.\nClass Tuple1<T1>;\n// A tuple that holds two values.\nClass Tuple2<T1,T2>;\n// The Tuple factory.\nClass Tuples;\n", "des": "Tuples provide a type-safe way to specify multiple parameters."}
{"index": 717, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package transaction\n\n// A TransactionInterceptor extension with HandleMessageAdvice marker.\nClass TransactionHandleMessageAdvice;\n// Provides a fluent API to build a transaction interceptor.\nClass TransactionInterceptorBuilder;\n", "des": "Provides classes supporting Transactions."}
{"index": 718, "repo": "commons-codec-1.16.0", "code": "package codec\n\n// Defines common decoding methods for byte array decoders.\nInterface BinaryDecoder;\n// Defines common encoding methods for byte array encoders.\nInterface BinaryEncoder;\n// Provides the highest level of abstraction for Decoders.\nInterface Decoder;\n// Provides the highest level of abstraction for Encoders.\nInterface Encoder;\n// Defines common decoding methods for String decoders.\nInterface StringDecoder;\n// Defines common encoding methods for String encoders.\nInterface StringEncoder;\n", "des": "Interfaces and classes used by the various implementations in the sub-packages."}
{"index": 719, "repo": "commons-codec-1.16.0", "code": "package binary\n\n// Provides Base16 encoding and decoding.\nClass Base16;\n// Provides Base16 encoding and decoding in a streaming fashion (unlimited size).\nClass Base16InputStream;\n// Provides Hex encoding and decoding in a streaming fashion (unlimited size).\nClass Base16OutputStream;\n// Provides Base32 encoding and decoding as defined by RFC 4648.\nClass Base32;\n// Provides Base32 encoding and decoding in a streaming fashion (unlimited size).\nClass Base32InputStream;\n", "des": "Base64, Base32, Binary, and Hexadecimal String encoding and decoding."}
{"index": 720, "repo": "commons-codec-1.16.0", "code": "package cli\n\n// A minimal command line to run digest over files, directories or a string.\nClass Digest;\n", "des": "Command line utility."}
{"index": 721, "repo": "commons-codec-1.16.0", "code": "package digest\n\n// Implements the Blake3 algorithm providing a hash function with extensible output (XOF), a keyed hash function (MAC, PRF), and a key derivation function (KDF).\nClass Blake3;\n// GNU libc crypt(3) compatible hash method.\nClass Crypt;\n// Operations to simplify common MessageDigest tasks.\nClass DigestUtils;\n// Simplifies common Mac tasks.\nClass HmacUtils;\n// The libc crypt() \"$1$\" and Apache \"$apr1$\" MD5-based hash algorithm.\nClass Md5Crypt;\n", "des": "Simplifies common MessageDigest tasks and includes a libc crypt(3) compatible crypt method that supports DES, MD5, SHA-256 and SHA-512 based algorithms as well as the Apache specific \"$apr1$\" variant."}
{"index": 722, "repo": "commons-codec-1.16.0", "code": "package language\n\n// Encodes a string into a Caverphone value.\nClass AbstractCaverphone;\n// 1.5 Replaced by Caverphone2, will be removed in 2.0.\nClass Caverphone;\n// Encodes a string into a Caverphone 1.0 value.\nClass Caverphone1;\n// Encodes a string into a Caverphone 2.0 value.\nClass Caverphone2;\n// Encodes a string into a Cologne Phonetic value.\nClass ColognePhonetic;\n// Encodes a string into a Daitch-Mokotoff Soundex value.\nClass DaitchMokotoffSoundex;\n", "des": "Language and phonetic encoders."}
{"index": 723, "repo": "commons-codec-1.16.0", "code": "package bm\n\n// \nInterface Rule.PhonemeExpr;\n// A minimal wrapper around the functionality of Pattern that we use, to allow for alternate implementations.\nInterface Rule.RPattern;\n// Encodes strings into their Beider-Morse phonetic encoding.\nClass BeiderMorseEncoder;\n// Language guessing utility.\nClass Lang;\n// Language codes.\nClass Languages;\n// A set of languages.\nClass Languages.LanguageSet;\n// Some languages, explicitly enumerated.\nClass Languages.SomeLanguages;\n", "des": "Implementation details of the Beider-Morse codec."}
{"index": 724, "repo": "commons-codec-1.16.0", "code": "package net\n\n// Identical to the Base64 encoding defined by RFC 1521 and allows a character set to be specified.\nClass BCodec;\n// Implements the Percent-Encoding scheme, as described in HTTP 1.1 specification.\nClass PercentCodec;\n// Similar to the Quoted-Printable content-transfer-encoding defined in RFC 1521 and designed to allow text containing mostly ASCII characters to be decipherable on an ASCII terminal without decoding.\nClass QCodec;\n", "des": "Network related encoding and decoding."}
{"index": 725, "repo": "mina-core-3.0.0-M2", "code": "package api\n\n// Connects to several end-points, communicates with the server, and fires events to org.apache.mina.service.IoHandlers.\nInterface IoClient;\n// Filter are interceptors/processors for incoming data received/sent.\nInterface IoFilter;\n// A simple extension that allows listeners to register and receive results asynchronously via registered listeners.\nInterface IoFuture<V>;\n// A listener that asynchronously receives the result of a future computation.\nInterface IoFutureListener<V>;\n", "des": "Base API for the MINA library."}
{"index": 726, "repo": "mina-core-3.0.0-M2", "code": "package executor\n\n// A IoHandler event to be submitted to an IoHandlerExecutor.\nInterface Event;\n// Implement this interface for implementing different behavior on different Event.\nInterface EventVisitor;\n// A class in charge of executing IoHandler related events.\nInterface IoHandlerExecutor;\n// A session was closed event.\nClass CloseEvent;\n// An IoSession is idle (no sent or receive events)\nClass IdleEvent;\n// An IoSession open Event\nClass OpenEvent;\n", "des": "Classes in charge of decoupling IoHandler event of the low level read/write/accept I/O threads ( SelectorLoop )."}
{"index": 727, "repo": "mina-core-3.0.0-M2", "code": "package bio\n\n// A java blocking I/O based UDP server.\nClass BioUdpServer;\n// A IoSession for BioUdpServer\nClass BioUdpSession;\n", "des": "Transport implementation base on blocking I/O Socket"}
{"index": 728, "repo": "mina-core-3.0.0-M2", "code": "package nio\n\n// To be used with NioSelectorLoop for being informed when the SelectionKey was created and registered.\nInterface RegistrationCallback;\n// Listen for selector events.\nInterface SelectorListener;\n// \nInterface SelectorLoop;\n// A pool of SelectorLoop\nInterface SelectorLoopPool;\n// Common ancestor for NIO based IoSession implmentation.\nClass AbstractNioSession;\n// A fixed size pool of SelectorLoop.\nClass FixedSelectorLoopPool;\n", "des": "Transport implementations base on NIO (New I/O), Channel"}
{"index": 729, "repo": "mina-core-3.0.0-M2", "code": "package tcp\n\n// A IoSessionConfig for socket based sessions.\nInterface TcpSessionConfig;\n// Base class for TCP based Clients\nClass AbstractTcpClient;\n// Base class for TCP based Servers\nClass AbstractTcpServer;\n// Implementation for the socket session configuration.\nClass DefaultTcpSessionConfig;\n// This class proxy the inner java.net.Socket configuration with the SocketSessionConfig of the session.\nClass ProxyTcpSessionConfig;\n", "des": "Shared plumber for TCP transport implementations."}
{"index": 730, "repo": "mina-core-3.0.0-M2", "code": "package udp\n\n// A IoSessionConfig for UDP based sessions.\nInterface UdpSessionConfig;\n// Base class for UDP based Clients\nClass AbstractUdpClient;\n// Base implementation for all the UDP servers.\nClass AbstractUdpServer;\n// Implementation for the UDP session configuration.\nClass DefaultUdpSessionConfig;\n", "des": "Shared plumber UDP transport implementations."}
{"index": 731, "repo": "spring-data-solr-4.3.15", "code": "package solr\n\n// Version util uses ClassUtils.isPresent(String, ClassLoader) to determine presence of certain classes that are unique to some libraries, which allows to en-/disable some of the features in eg.\nClass VersionUtil;\n// SolrClient threw an exception that could not be mapped.\nClass UncategorizedSolrException;\n", "des": "Root stuff used through out Spring Data for Apache Solr."}
{"index": 732, "repo": "spring-data-solr-4.3.15", "code": "package core\n\n// The QueryParser takes a spring-data-solr Query and returns a SolrQuery.\nInterface QueryParser;\n// QueryParserBase.PredicateProcessor creates a solr reable query string representation for a given Criteria.Predicate\nInterface QueryParserBase.PredicateProcessor;\n// Callback interface for data access code that works with SolrClient.\nInterface SolrCallback<T>;\n// Interface that specifies a basic set of Solr operations.\nInterface SolrOperations;\n", "des": "Provides the classes necessary for Solr support."}
{"index": 733, "repo": "spring-data-solr-4.3.15", "code": "package convert\n\n// \nInterface SolrConverter;\n// since 2.0, use SolrCustomConversions.\nClass CustomConversions;\n// Converts a Date values into a solr readable String that can be directly used within the q parameter.\nClass DateTimeConverters;\n// Implementation of SolrConverter to read/write SolrDocument/ SolrInputDocument.\nClass MappingSolrConverter;\n// Converts a Number values into a solr readable String that can be directly used within the q parameter.\nClass NumberConverters;\n// \nClass SolrConverterBase;\n", "des": "All the Converters go here."}
{"index": 734, "repo": "spring-data-solr-4.3.15", "code": "package geo\n\n// \nClass GeoConverters;\n// \nClass Point;\n// Converts a Distance to a solrReadable request parameter.\nEnum GeoConverters.DistanceToStringConverter;\n// Converts a Point to a solrReadable request parameter.\nEnum GeoConverters.Point2DToStringConverter;\n// Converts a Point to a solrReadable request parameter.\nEnum GeoConverters.Point3DToStringConverter;\n// Converts comma separated string to Point.\nEnum GeoConverters.StringToPointConverter;\n", "des": "Apache Solr geo specifics."}
{"index": 735, "repo": "spring-data-solr-4.3.15", "code": "package mapping\n\n// \nInterface SolrPersistentEntity<T>;\n// \nInterface SolrPersistentProperty;\n// Solr specific implementation of MappingContext\nClass SimpleSolrMappingContext;\n// Solr specific PersistentEntity implementation holding eg. name of solr core.\nClass SimpleSolrPersistentEntity<T>;\n// Solr specific PersistentProperty implementation processing taking Field into account\nClass SimpleSolrPersistentProperty;\n// \nClass SolrMappingEventPublisher;\n", "des": "All the mapping things!"}
{"index": 736, "repo": "spring-data-solr-4.3.15", "code": "package query\n\n// \nInterface CalculatedField;\n// A Query that combines a FacetQuery and a HighlightQuery\nInterface FacetAndHighlightQuery;\n// Query to be used for faceting.\nInterface FacetQuery;\n// Defines a Field that can be used within Criteria.\nInterface Field;\n// Filter Queries are simple solr Queries applied after executing the original query.\nInterface FilterQuery;\n// \nInterface Function;\n// The Function.Context the Function is used in.\nInterface Function.Context;\n// \nInterface HighlightQuery;\n", "des": "Query abstractions for SolrQuery."}
{"index": 737, "repo": "spring-data-solr-4.3.15", "code": "package result\n\n// \nInterface CountEntry;\n// Cursor provides a lazy loading abstraction for fetching documents.\nInterface Cursor<T>;\n// FacetAndHighlightPage holds a page for each field targeted by the facet query, each highlight returned by the highlight query as well as the page values returned by the solr query\nInterface FacetAndHighlightPage<T>;\n", "des": "Query result abstractions for Solr returned NamedList."}
{"index": 738, "repo": "spring-data-solr-4.3.15", "code": "package schema\n\n// \nInterface ContentParser;\n// \nInterface SchemaDefinition.SchemaField;\n// Operations interface for executing modification on a managed schema.\nInterface SchemaOperations;\n// SchemaOperations implementation based on SolrTemplate.\nClass DefaultSchemaOperations;\n// \nClass MappingJacksonRequestContentParser;\n// \nClass MappingJacksonResponseParser;\n// \nClass SchemaDefinition;\n// \nClass SchemaDefinition.CopyFieldDefinition;\n// \nClass SchemaDefinition.CopyFieldDefinition.Builder;\n", "des": "Everything Apache Solr schema specific."}
{"index": 739, "repo": "spring-data-solr-4.3.15", "code": "package repository\n\n// \nInterface SolrCrudRepository<T,ID extends Serializable>;\n// \nInterface SolrRepository<T,ID extends Serializable>;\n// Increase document score by boosting search criteria hit\nAnnotation Type Boost;\n// \nAnnotation Type Facet;\n// \nAnnotation Type Highlight;\n// \nAnnotation Type Pivot;\n// \nAnnotation Type Query;\n// since 4.0.\nAnnotation Type Score;\n// Definition of field selective statistical that shall be executed within the request.\nAnnotation Type SelectiveStats;\n", "des": "Solr specific repository implementation."}
{"index": 740, "repo": "spring-data-solr-4.3.15", "code": "package cdi\n\n// Uses CdiRepositoryBean to create SolrRepository instances.\nClass SolrRepositoryBean<T>;\n// \nClass SolrRepositoryExtension;\n", "des": "Cdi extension."}
{"index": 741, "repo": "spring-data-solr-4.3.15", "code": "package config\n\n// Spring Data for Apache Solr base configuration using JavaConfig.\nClass AbstractSolrConfiguration;\n// RepositoryConfigurationExtension implementation to configure Solr repository configuration support, evaluating the EnableSolrRepositories annotation or the equivalent XML element.\nClass SolrRepositoryConfigExtension;\n// Annotation to enable Solr repositories.\nAnnotation Type EnableSolrRepositories;\n", "des": "Repository configuration and extension support."}
{"index": 742, "repo": "spring-data-solr-4.3.15", "code": "package query\n\n// \nInterface SolrEntityInformation<T,ID>;\n// \nInterface SolrEntityInformationCreator;\n// \nInterface SolrParameterAccessor;\n// Base implementation of a solr specific RepositoryQuery\nClass AbstractSolrQuery;\n// Used to provide additional information on parameters used in query definition.\nClass BindableSolrParameter;\n// Solr specific implementation of a query derived from method name\nClass PartTreeSolrQuery;\n// \nClass SolrParameters;\n", "des": "Apache Solr specific repository query methods and executions."}
{"index": 743, "repo": "spring-data-solr-4.3.15", "code": "package support\n\n// Solr specific implementation of AbstractEntityInformation\nClass MappingSolrEntityInformation<T,ID>;\n// Solr specific repository implementation.\nClass SimpleSolrRepository<T,ID extends Serializable>;\n// \nClass SolrEntityInformationCreatorImpl;\n// Factory to create SolrRepository\nClass SolrRepositoryFactory;\n", "des": "Repository support classes for bootstrapping application context."}
{"index": 744, "repo": "spring-data-solr-4.3.15", "code": "package server\n\n// SolrClientFactory replaces SolrServerFactory from version 1.x and provides access to the solrj SolrClient.\nInterface SolrClientFactory;\n", "des": "SolrClient configuration and spring integration."}
{"index": 745, "repo": "spring-data-solr-4.3.15", "code": "package config\n\n// Implementation of BeanDefinitionParser that parses embedded-solr-server element.\nClass EmbeddedSolrServerBeanDefinitionParser;\n// HttpSolrClientBeanDefinitionParser replaces HttpSolrServerBeanDefinitionParser from version 1.x.\nClass HttpSolrClientBeanDefinitionParser;\n", "des": "Config support for SolrClient."}
{"index": 746, "repo": "spring-data-solr-4.3.15", "code": "package support\n\n// The EmbeddedSolrServerFactory allows hosting of an SolrServer instance in embedded mode.\nClass EmbeddedSolrServerFactory;\n// Implementation of FactoryBean for registration of an EmbeddedSolrServer as a Spring bean.\nClass EmbeddedSolrServerFactoryBean;\n// The HttpSolrClientFactory replaces HttpSolrServerFactory from version 1.x and configures an HttpSolrClient to work with the provided core.\nClass HttpSolrClientFactory;\n", "des": "Everything SolrClient and EmbeddedSolrServer related."}
{"index": 747, "repo": "ignite-indexing-2.15.0", "code": "package indexing\n\n// Query engine configuration for indexing-backed query engine.\nClass IndexingQueryEngineConfiguration;\n", "des": "Contains Ignite-indexing module classes and interfaces."}
{"index": 748, "repo": "ignite-indexing-2.15.0", "code": "package h2\n\n// Processor responsible for execution of all non-SELECT and non-DML commands.\nClass CommandProcessor;\n// Command execution result.\nClass CommandResult;\n// Concurrent pool of object based on ConcurrentLinkedDeque.\nClass ConcurrentStripedPool<E>;\n// H2 connection manager.\nClass ConnectionManager;\n// Distributed configuration of the indexing module.\nClass DistributedSqlConfiguration;\n// Contains entry processors for DML.\nClass DmlStatementsProcessor;\n", "des": "Contains default H2-based indexing SPI implementation."}
{"index": 749, "repo": "ignite-indexing-2.15.0", "code": "package dml\n\n// DML argument\nInterface DmlArgument;\n// Method to construct new instances of keys and values on SQL MERGE and INSERT, as well as to build new values during UPDATE - a function that takes a row selected from DB and then transforms it into new object.\nInterface KeyValueSupplier;\n// DML arguments factory.\nClass DmlArguments;\n// AST utils for DML\nClass DmlAstUtils;\n// Batch sender class.\nClass DmlBatchSender;\n", "des": "Contains routines for executing DML statements on top of H2."}
{"index": 750, "repo": "artemis-odb-2.3.0", "code": "package artemis\n\n// Plugin for artemis-odb.\nInterface ArtemisPlugin;\n// \nInterface ComponentTypeFactory.ComponentTypeListener;\n// This interfaces reports entities inserted or removed when matched against their EntitySubscription\nInterface EntitySubscription.SubscriptionListener;\n// Provides a blueprint for new entities, offering greatly improved insertion performance for systems.\nClass Archetype;\n// Builder for basic Archetype instances.\nClass ArchetypeBuilder;\n", "des": "Core Artemis classes."}
{"index": 751, "repo": "artemis-odb-2.3.0", "code": "package annotations\n\n// \nEnum LinkPolicy.Policy;\n// Auto-configures fields or systems pertaining to aspects.\nAnnotation Type All;\n// Auto-configures fields pertaining to aspects.\nAnnotation Type AspectDescriptor;\n// Extends the lifecycle of this component type, ensuring removed instances are retrievable until all listeners have been notified - regardless of removal method.\nAnnotation Type DelayedComponentRemoval;\n// Marks int and IntBag fields as holding entity id:s.\nAnnotation Type EntityId;\n", "des": "Annotations used by Artemis, both runtime and during compilation,"}
{"index": 752, "repo": "artemis-odb-2.3.0", "code": "package managers\n\n// If you need to group your entities together, e.g tanks going into \"units\" group or explosions into \"effects\", then use this manager.\nClass GroupManager;\n// You may sometimes want to specify to which player an entity belongs to.\nClass PlayerManager;\n// If you need to tag any entity, use this.\nClass TagManager;\n// Use this class together with PlayerManager.\nClass TeamManager;\n// \nClass UuidEntityManager;\n", "des": "Manager implementations."}
{"index": 753, "repo": "artemis-odb-2.3.0", "code": "package systems\n\n// Tracks cooldown per entity, processing entity when its timer runs out.\nClass DelayedEntityProcessingSystem;\n// Tracks cooldown per entity, processing entity when its timer runs out.\nClass DelayedIteratingSystem;\n// Entity reference iterating system.\nClass EntityProcessingSystem;\n// Process a subset of entities every x ticks.\nClass IntervalEntityProcessingSystem;\n// A system that processes entities at a interval in milliseconds.\nClass IntervalEntitySystem;\n", "des": "Entity systems."}
{"index": 754, "repo": "artemis-odb-2.3.0", "code": "package utils\n\n// \nInterface ArtemisProfiler;\n// A non-modifiable bag.\nInterface ImmutableBag<E>;\n// A non-modifiable intbag.\nInterface ImmutableIntBag<E>;\n// Collection type a bit like ArrayList but does not preserve the order of its entities, speedwise it is very good, especially suited for games.\nClass Bag<E>;\n// Performance optimized bitset implementation.\nClass BitVector;\n// \nClass ConverterUtil;\n// Non-reusable entity creation helper for rapid prototyping.\nClass EntityBuilder;\n", "des": "Helper classes."}
{"index": 755, "repo": "lucene-analyzers-common-8.11.2", "code": "package ar\n\n// Analyzer for Arabic.\nClass ArabicAnalyzer;\n// A TokenFilter that applies ArabicNormalizer to normalize the orthography.\nClass ArabicNormalizationFilter;\n// Factory for ArabicNormalizationFilter.\nClass ArabicNormalizationFilterFactory;\n// Normalizer for Arabic.\nClass ArabicNormalizer;\n// A TokenFilter that applies ArabicStemmer to stem Arabic words..\nClass ArabicStemFilter;\n// Factory for ArabicStemFilter.\nClass ArabicStemFilterFactory;\n// Stemmer for Arabic.\nClass ArabicStemmer;\n", "des": "Analyzer for Arabic."}
{"index": 756, "repo": "lucene-analyzers-common-8.11.2", "code": "package bg\n\n// Analyzer for Bulgarian.\nClass BulgarianAnalyzer;\n// A TokenFilter that applies BulgarianStemmer to stem Bulgarian words.\nClass BulgarianStemFilter;\n// Factory for BulgarianStemFilter.\nClass BulgarianStemFilterFactory;\n// Light Stemmer for Bulgarian.\nClass BulgarianStemmer;\n", "des": "Analyzer for Bulgarian."}
{"index": 757, "repo": "lucene-analyzers-common-8.11.2", "code": "package bn\n\n// Analyzer for Bengali.\nClass BengaliAnalyzer;\n// A TokenFilter that applies BengaliNormalizer to normalize the orthography.\nClass BengaliNormalizationFilter;\n// Factory for BengaliNormalizationFilter.\nClass BengaliNormalizationFilterFactory;\n// Normalizer for Bengali.\nClass BengaliNormalizer;\n// A TokenFilter that applies BengaliStemmer to stem Bengali words.\nClass BengaliStemFilter;\n// Factory for BengaliStemFilter.\nClass BengaliStemFilterFactory;\n", "des": "Analyzer for Bengali Language."}
{"index": 758, "repo": "lucene-analyzers-common-8.11.2", "code": "package boost\n\n// Characters before the delimiter are the \"token\", those after are the boost.\nClass DelimitedBoostTokenFilter;\n// Factory for DelimitedBoostTokenFilter.\nClass DelimitedBoostTokenFilterFactory;\n", "des": "Provides various convenience classes for creating boosts on Tokens."}
{"index": 759, "repo": "lucene-analyzers-common-8.11.2", "code": "package br\n\n// Analyzer for Brazilian Portuguese language.\nClass BrazilianAnalyzer;\n// A TokenFilter that applies BrazilianStemmer.\nClass BrazilianStemFilter;\n// Factory for BrazilianStemFilter.\nClass BrazilianStemFilterFactory;\n// A stemmer for Brazilian Portuguese words.\nClass BrazilianStemmer;\n", "des": "Analyzer for Brazilian Portuguese."}
{"index": 760, "repo": "lucene-analyzers-common-8.11.2", "code": "package ca\n\n// Analyzer for Catalan.\nClass CatalanAnalyzer;\n", "des": "Analyzer for Catalan."}
{"index": 761, "repo": "lucene-analyzers-common-8.11.2", "code": "package charfilter\n\n// Base utility class for implementing a CharFilter.\nClass BaseCharFilter;\n// A CharFilter that wraps another Reader and attempts to strip out HTML constructs.\nClass HTMLStripCharFilter;\n// Factory for HTMLStripCharFilter.\nClass HTMLStripCharFilterFactory;\n// Simplistic CharFilter that applies the mappings contained in a NormalizeCharMap to the character stream, and correcting the resulting changes to the offsets.\nClass MappingCharFilter;\n", "des": "Normalization of text before the tokenizer."}
{"index": 762, "repo": "lucene-analyzers-common-8.11.2", "code": "package cjk\n\n// An Analyzer that tokenizes text with StandardTokenizer, normalizes content with CJKWidthFilter, folds case with LowerCaseFilter, forms bigrams of CJK with CJKBigramFilter, and filters stopwords with StopFilter\nClass CJKAnalyzer;\n// Forms bigrams of CJK terms that are generated from StandardTokenizer or ICUTokenizer.\nClass CJKBigramFilter;\n// Factory for CJKBigramFilter.\nClass CJKBigramFilterFactory;\n", "des": "Analyzer for Chinese, Japanese, and Korean, which indexes bigrams."}
{"index": 763, "repo": "lucene-analyzers-common-8.11.2", "code": "package ckb\n\n// Analyzer for Sorani Kurdish.\nClass SoraniAnalyzer;\n// A TokenFilter that applies SoraniNormalizer to normalize the orthography.\nClass SoraniNormalizationFilter;\n// Factory for SoraniNormalizationFilter.\nClass SoraniNormalizationFilterFactory;\n// Normalizes the Unicode representation of Sorani text.\nClass SoraniNormalizer;\n// A TokenFilter that applies SoraniStemmer to stem Sorani words.\nClass SoraniStemFilter;\n// Factory for SoraniStemFilter.\nClass SoraniStemFilterFactory;\n", "des": "Analyzer for Sorani Kurdish."}
{"index": 764, "repo": "lucene-analyzers-common-8.11.2", "code": "package commongrams\n\n// Construct bigrams for frequently occurring terms while indexing.\nClass CommonGramsFilter;\n// Constructs a CommonGramsFilter.\nClass CommonGramsFilterFactory;\n// Wrap a CommonGramsFilter optimizing phrase queries by only returning single words when they are not a member of a bigram.\nClass CommonGramsQueryFilter;\n// Construct CommonGramsQueryFilter.\nClass CommonGramsQueryFilterFactory;\n", "des": "Construct n-grams for frequently occurring terms and phrases."}
{"index": 765, "repo": "lucene-analyzers-common-8.11.2", "code": "package compound\n\n// Base class for decomposition token filters.\nClass CompoundWordTokenFilterBase;\n// A TokenFilter that decomposes compound words found in many Germanic languages.\nClass DictionaryCompoundWordTokenFilter;\n// Factory for DictionaryCompoundWordTokenFilter.\nClass DictionaryCompoundWordTokenFilterFactory;\n// A TokenFilter that decomposes compound words found in many Germanic languages.\nClass HyphenationCompoundWordTokenFilter;\n", "des": "A filter that decomposes compound words you find in many Germanic languages into the word parts."}
{"index": 766, "repo": "lucene-analyzers-common-8.11.2", "code": "package hyphenation\n\n// This interface is used to connect the XML pattern file parser to the hyphenation tree.\nInterface PatternConsumer;\n// This class implements a simple byte vector with access to the underlying array.\nClass ByteVector;\n// This class implements a simple char vector with access to the underlying array.\nClass CharVector;\n// This class represents a hyphen.\nClass Hyphen;\n// This class represents a hyphenated word.\nClass Hyphenation;\n", "des": "Hyphenation code for the CompoundWordTokenFilter."}
{"index": 767, "repo": "lucene-analyzers-common-8.11.2", "code": "package core\n\n// Folds all Unicode digits in [:General_Category=Decimal_Number:] to Basic Latin digits (0-9).\nClass DecimalDigitFilter;\n// Factory for DecimalDigitFilter.\nClass DecimalDigitFilterFactory;\n// Converts an incoming graph token stream, such as one from SynonymGraphFilter, into a flat form so that all nodes form a single linear chain with no side paths.\nClass FlattenGraphFilter;\n// Factory for FlattenGraphFilter.\nClass FlattenGraphFilterFactory;\n", "des": "Basic, general-purpose analysis components."}
{"index": 768, "repo": "lucene-analyzers-common-8.11.2", "code": "package custom\n\n// A general-purpose Analyzer that can be created with a builder-style API.\nClass CustomAnalyzer;\n// Builder for CustomAnalyzer.\nClass CustomAnalyzer.Builder;\n// Factory class for a ConditionalTokenFilter\nClass CustomAnalyzer.ConditionBuilder;\n", "des": "A general-purpose Analyzer that can be created with a builder-style API."}
{"index": 769, "repo": "lucene-analyzers-common-8.11.2", "code": "package cz\n\n// Analyzer for Czech language.\nClass CzechAnalyzer;\n// A TokenFilter that applies CzechStemmer to stem Czech words.\nClass CzechStemFilter;\n// Factory for CzechStemFilter.\nClass CzechStemFilterFactory;\n// Light Stemmer for Czech.\nClass CzechStemmer;\n", "des": "Analyzer for Czech."}
{"index": 770, "repo": "lucene-analyzers-common-8.11.2", "code": "package da\n\n// Analyzer for Danish.\nClass DanishAnalyzer;\n", "des": "Analyzer for Danish."}
{"index": 771, "repo": "lucene-analyzers-common-8.11.2", "code": "package de\n\n// Analyzer for German language.\nClass GermanAnalyzer;\n// A TokenFilter that applies GermanLightStemmer to stem German words.\nClass GermanLightStemFilter;\n// Factory for GermanLightStemFilter.\nClass GermanLightStemFilterFactory;\n// Light Stemmer for German.\nClass GermanLightStemmer;\n// A TokenFilter that applies GermanMinimalStemmer to stem German words.\nClass GermanMinimalStemFilter;\n// Factory for GermanMinimalStemFilter.\nClass GermanMinimalStemFilterFactory;\n", "des": "Analyzer for German."}
{"index": 772, "repo": "lucene-analyzers-common-8.11.2", "code": "package el\n\n// Analyzer for the Greek language.\nClass GreekAnalyzer;\n// Normalizes token text to lower case, removes some Greek diacritics, and standardizes final sigma to sigma.\nClass GreekLowerCaseFilter;\n// Factory for GreekLowerCaseFilter.\nClass GreekLowerCaseFilterFactory;\n// A TokenFilter that applies GreekStemmer to stem Greek words.\nClass GreekStemFilter;\n// Factory for GreekStemFilter.\nClass GreekStemFilterFactory;\n", "des": "Analyzer for Greek."}
{"index": 773, "repo": "lucene-analyzers-common-8.11.2", "code": "package en\n\n// Abstract parent class for analysis factories that accept a stopwords file as input.\nClass AbstractWordsFileFilterFactory;\n// Analyzer for English.\nClass EnglishAnalyzer;\n// A TokenFilter that applies EnglishMinimalStemmer to stem English words.\nClass EnglishMinimalStemFilter;\n// Factory for EnglishMinimalStemFilter.\nClass EnglishMinimalStemFilterFactory;\n// Minimal plural stemmer for English.\nClass EnglishMinimalStemmer;\n", "des": "Analyzer for English."}
{"index": 774, "repo": "lucene-analyzers-common-8.11.2", "code": "package es\n\n// Analyzer for Spanish.\nClass SpanishAnalyzer;\n// A TokenFilter that applies SpanishLightStemmer to stem Spanish words.\nClass SpanishLightStemFilter;\n// Factory for SpanishLightStemFilter.\nClass SpanishLightStemFilterFactory;\n// Light Stemmer for Spanish\nClass SpanishLightStemmer;\n// A TokenFilter that applies SpanishMinimalStemmer to stem Spanish words.\nClass SpanishMinimalStemFilter;\n// Factory for SpanishMinimalStemFilter.\nClass SpanishMinimalStemFilterFactory;\n", "des": "Analyzer for Spanish."}
{"index": 775, "repo": "lucene-analyzers-common-8.11.2", "code": "package et\n\n// Analyzer for Estonian.\nClass EstonianAnalyzer;\n", "des": "Analyzer for Estonian."}
{"index": 776, "repo": "lucene-analyzers-common-8.11.2", "code": "package eu\n\n// Analyzer for Basque.\nClass BasqueAnalyzer;\n", "des": "Analyzer for Basque."}
{"index": 777, "repo": "lucene-analyzers-common-8.11.2", "code": "package fa\n\n// Analyzer for Persian.\nClass PersianAnalyzer;\n// CharFilter that replaces instances of Zero-width non-joiner with an ordinary space.\nClass PersianCharFilter;\n// Factory for PersianCharFilter.\nClass PersianCharFilterFactory;\n// A TokenFilter that applies PersianNormalizer to normalize the orthography.\nClass PersianNormalizationFilter;\n// Factory for PersianNormalizationFilter.\nClass PersianNormalizationFilterFactory;\n// Normalizer for Persian.\nClass PersianNormalizer;\n", "des": "Analyzer for Persian."}
{"index": 778, "repo": "lucene-analyzers-common-8.11.2", "code": "package fi\n\n// Analyzer for Finnish.\nClass FinnishAnalyzer;\n// A TokenFilter that applies FinnishLightStemmer to stem Finnish words.\nClass FinnishLightStemFilter;\n// Factory for FinnishLightStemFilter.\nClass FinnishLightStemFilterFactory;\n// Light Stemmer for Finnish.\nClass FinnishLightStemmer;\n", "des": "Analyzer for Finnish."}
{"index": 779, "repo": "lucene-analyzers-common-8.11.2", "code": "package fr\n\n// Analyzer for French language.\nClass FrenchAnalyzer;\n// A TokenFilter that applies FrenchLightStemmer to stem French words.\nClass FrenchLightStemFilter;\n// Factory for FrenchLightStemFilter.\nClass FrenchLightStemFilterFactory;\n// Light Stemmer for French.\nClass FrenchLightStemmer;\n// A TokenFilter that applies FrenchMinimalStemmer to stem French words.\nClass FrenchMinimalStemFilter;\n// Factory for FrenchMinimalStemFilter.\nClass FrenchMinimalStemFilterFactory;\n", "des": "Analyzer for French."}
{"index": 780, "repo": "lucene-analyzers-common-8.11.2", "code": "package ga\n\n// Analyzer for Irish.\nClass IrishAnalyzer;\n// Normalises token text to lower case, handling t-prothesis and n-eclipsis (i.e., that 'nAthair' should become 'n-athair')\nClass IrishLowerCaseFilter;\n// Factory for IrishLowerCaseFilter.\nClass IrishLowerCaseFilterFactory;\n", "des": "Analyzer for Irish."}
{"index": 781, "repo": "lucene-analyzers-common-8.11.2", "code": "package gl\n\n// Analyzer for Galician.\nClass GalicianAnalyzer;\n// A TokenFilter that applies GalicianMinimalStemmer to stem Galician words.\nClass GalicianMinimalStemFilter;\n// Factory for GalicianMinimalStemFilter.\nClass GalicianMinimalStemFilterFactory;\n// Minimal Stemmer for Galician\nClass GalicianMinimalStemmer;\n// A TokenFilter that applies GalicianStemmer to stem Galician words.\nClass GalicianStemFilter;\n// Factory for GalicianStemFilter.\nClass GalicianStemFilterFactory;\n", "des": "Analyzer for Galician."}
{"index": 782, "repo": "lucene-analyzers-common-8.11.2", "code": "package hi\n\n// Analyzer for Hindi.\nClass HindiAnalyzer;\n// A TokenFilter that applies HindiNormalizer to normalize the orthography.\nClass HindiNormalizationFilter;\n// Factory for HindiNormalizationFilter.\nClass HindiNormalizationFilterFactory;\n// Normalizer for Hindi.\nClass HindiNormalizer;\n// A TokenFilter that applies HindiStemmer to stem Hindi words.\nClass HindiStemFilter;\n// Factory for HindiStemFilter.\nClass HindiStemFilterFactory;\n// Light Stemmer for Hindi.\nClass HindiStemmer;\n", "des": "Analyzer for Hindi."}
{"index": 783, "repo": "lucene-analyzers-common-8.11.2", "code": "package hu\n\n// Analyzer for Hungarian.\nClass HungarianAnalyzer;\n// A TokenFilter that applies HungarianLightStemmer to stem Hungarian words.\nClass HungarianLightStemFilter;\n// Factory for HungarianLightStemFilter.\nClass HungarianLightStemFilterFactory;\n// Light Stemmer for Hungarian.\nClass HungarianLightStemmer;\n", "des": "Analyzer for Hungarian."}
{"index": 784, "repo": "lucene-analyzers-common-8.11.2", "code": "package hunspell\n\n// An object representing homonym dictionary entries.\nInterface DictEntries;\n// In-memory structure for the dictionary (.dic) and affix (.aff) data of a hunspell dictionary.\nClass Dictionary;\n// A spell checker based on Hunspell dictionaries.\nClass Hunspell;\n// TokenFilter that uses hunspell affix rules and words to stem tokens.\nClass HunspellStemFilter;\n// TokenFilterFactory that creates instances of HunspellStemFilter.\nClass HunspellStemFilterFactory;\n", "des": "A Java implementation of Hunspell stemming and spell-checking algorithms (Hunspell), and a stemming TokenFilter (HunspellStemFilter) based on it."}
{"index": 785, "repo": "lucene-analyzers-common-8.11.2", "code": "package hy\n\n// Analyzer for Armenian.\nClass ArmenianAnalyzer;\n", "des": "Analyzer for Armenian."}
{"index": 786, "repo": "lucene-analyzers-common-8.11.2", "code": "package id\n\n// Analyzer for Indonesian (Bahasa)\nClass IndonesianAnalyzer;\n// A TokenFilter that applies IndonesianStemmer to stem Indonesian words.\nClass IndonesianStemFilter;\n// Factory for IndonesianStemFilter.\nClass IndonesianStemFilterFactory;\n// Stemmer for Indonesian.\nClass IndonesianStemmer;\n", "des": "Analyzer for Indonesian."}
{"index": 787, "repo": "lucene-analyzers-common-8.11.2", "code": "package in\n\n// A TokenFilter that applies IndicNormalizer to normalize text in Indian Languages.\nClass IndicNormalizationFilter;\n// Factory for IndicNormalizationFilter.\nClass IndicNormalizationFilterFactory;\n// Normalizes the Unicode representation of text in Indian languages.\nClass IndicNormalizer;\n", "des": "Analyzer for Indian languages."}
{"index": 788, "repo": "lucene-analyzers-common-8.11.2", "code": "package it\n\n// Analyzer for Italian.\nClass ItalianAnalyzer;\n// A TokenFilter that applies ItalianLightStemmer to stem Italian words.\nClass ItalianLightStemFilter;\n// Factory for ItalianLightStemFilter.\nClass ItalianLightStemFilterFactory;\n// Light Stemmer for Italian.\nClass ItalianLightStemmer;\n", "des": "Analyzer for Italian."}
{"index": 789, "repo": "lucene-analyzers-common-8.11.2", "code": "package lt\n\n// Analyzer for Lithuanian.\nClass LithuanianAnalyzer;\n", "des": "Analyzer for Lithuanian."}
{"index": 790, "repo": "lucene-analyzers-common-8.11.2", "code": "package lv\n\n// Analyzer for Latvian.\nClass LatvianAnalyzer;\n// A TokenFilter that applies LatvianStemmer to stem Latvian words.\nClass LatvianStemFilter;\n// Factory for LatvianStemFilter.\nClass LatvianStemFilterFactory;\n// Light stemmer for Latvian.\nClass LatvianStemmer;\n", "des": "Analyzer for Latvian."}
{"index": 791, "repo": "lucene-analyzers-common-8.11.2", "code": "package minhash\n\n// Generate min hash tokens from an incoming stream of tokens.\nClass MinHashFilter;\n// TokenFilterFactory for MinHashFilter.\nClass MinHashFilterFactory;\n", "des": "MinHash filtering (for LSH)."}
{"index": 792, "repo": "lucene-analyzers-common-8.11.2", "code": "package miscellaneous\n\n// Attribute providing access to the term builder and UTF-16 conversion\nInterface ConcatenateGraphFilter.BytesRefBuilderTermAttribute;\n// This class converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \"Basic Latin\" Unicode block) into their ASCII equivalents, if one exists.\nClass ASCIIFoldingFilter;\n// Factory for ASCIIFoldingFilter.\nClass ASCIIFoldingFilterFactory;\n", "des": "Miscellaneous Tokenstreams."}
{"index": 793, "repo": "lucene-analyzers-common-8.11.2", "code": "package ngram\n\n// Creates new instances of EdgeNGramTokenFilter.\nClass EdgeNGramFilterFactory;\n// Tokenizes the given token into n-grams of given size(s).\nClass EdgeNGramTokenFilter;\n// Tokenizes the input from an edge into n-grams of given size(s).\nClass EdgeNGramTokenizer;\n// Creates new instances of EdgeNGramTokenizer.\nClass EdgeNGramTokenizerFactory;\n// Factory for NGramTokenFilter.\nClass NGramFilterFactory;\n// Tokenizes the input into n-grams of the given size(s).\nClass NGramTokenFilter;\n", "des": "Character n-gram tokenizers and filters."}
{"index": 794, "repo": "lucene-analyzers-common-8.11.2", "code": "package nl\n\n// Analyzer for Dutch language.\nClass DutchAnalyzer;\n", "des": "Analyzer for Dutch."}
{"index": 795, "repo": "lucene-analyzers-common-8.11.2", "code": "package no\n\n// Analyzer for Norwegian.\nClass NorwegianAnalyzer;\n// A TokenFilter that applies NorwegianLightStemmer to stem Norwegian words.\nClass NorwegianLightStemFilter;\n// Factory for NorwegianLightStemFilter.\nClass NorwegianLightStemFilterFactory;\n// Light Stemmer for Norwegian.\nClass NorwegianLightStemmer;\n// A TokenFilter that applies NorwegianMinimalStemmer to stem Norwegian words.\nClass NorwegianMinimalStemFilter;\n// Factory for NorwegianMinimalStemFilter.\nClass NorwegianMinimalStemFilterFactory;\n", "des": "Analyzer for Norwegian."}
{"index": 796, "repo": "lucene-analyzers-common-8.11.2", "code": "package path\n\n// Tokenizer for path-like hierarchies.\nClass PathHierarchyTokenizer;\n// Factory for PathHierarchyTokenizer.\nClass PathHierarchyTokenizerFactory;\n// Tokenizer for domain-like hierarchies.\nClass ReversePathHierarchyTokenizer;\n", "des": "Analysis components for path-like strings such as filenames."}
{"index": 797, "repo": "lucene-analyzers-common-8.11.2", "code": "package pattern\n\n// Factory for PatternCaptureGroupTokenFilter.\nClass PatternCaptureGroupFilterFactory;\n// CaptureGroup uses Java regexes to emit multiple tokens - one for each capture group in one or more patterns.\nClass PatternCaptureGroupTokenFilter;\n// CharFilter that uses a regular expression for the target of replace string.\nClass PatternReplaceCharFilter;\n// Factory for PatternReplaceCharFilter.\nClass PatternReplaceCharFilterFactory;\n", "des": "Set of components for pattern-based (regex) analysis."}
{"index": 798, "repo": "lucene-analyzers-common-8.11.2", "code": "package payloads\n\n// Mainly for use with the DelimitedPayloadTokenFilter, converts char buffers to BytesRef.\nInterface PayloadEncoder;\n// Base class for payload encoders.\nClass AbstractEncoder;\n// Characters before the delimiter are the \"token\", those after are the payload.\nClass DelimitedPayloadTokenFilter;\n// Factory for DelimitedPayloadTokenFilter.\nClass DelimitedPayloadTokenFilterFactory;\n// Encode a character array Float as a BytesRef.\nClass FloatEncoder;\n", "des": "Provides various convenience classes for creating payloads on Tokens."}
{"index": 799, "repo": "lucene-analyzers-common-8.11.2", "code": "package pt\n\n// Analyzer for Portuguese.\nClass PortugueseAnalyzer;\n// A TokenFilter that applies PortugueseLightStemmer to stem Portuguese words.\nClass PortugueseLightStemFilter;\n// Factory for PortugueseLightStemFilter.\nClass PortugueseLightStemFilterFactory;\n// Light Stemmer for Portuguese\nClass PortugueseLightStemmer;\n// A TokenFilter that applies PortugueseMinimalStemmer to stem Portuguese words.\nClass PortugueseMinimalStemFilter;\n", "des": "Analyzer for Portuguese."}
{"index": 800, "repo": "lucene-analyzers-common-8.11.2", "code": "package query\n\n// An Analyzer used primarily at query time to wrap another analyzer and provide a layer of protection which prevents very common words from being passed into queries.\nClass QueryAutoStopWordAnalyzer;\n", "des": "Automatically filter high-frequency stopwords."}
{"index": 801, "repo": "lucene-analyzers-common-8.11.2", "code": "package reverse\n\n// Reverse token string, for example \"country\" => \"yrtnuoc\".\nClass ReverseStringFilter;\n// Factory for ReverseStringFilter.\nClass ReverseStringFilterFactory;\n", "des": "Filter to reverse token text."}
{"index": 802, "repo": "lucene-analyzers-common-8.11.2", "code": "package ro\n\n// Analyzer for Romanian.\nClass RomanianAnalyzer;\n", "des": "Analyzer for Romanian."}
{"index": 803, "repo": "lucene-analyzers-common-8.11.2", "code": "package ru\n\n// Analyzer for Russian language.\nClass RussianAnalyzer;\n// A TokenFilter that applies RussianLightStemmer to stem Russian words.\nClass RussianLightStemFilter;\n// Factory for RussianLightStemFilter.\nClass RussianLightStemFilterFactory;\n// Light Stemmer for Russian.\nClass RussianLightStemmer;\n", "des": "Analyzer for Russian."}
{"index": 804, "repo": "lucene-analyzers-common-8.11.2", "code": "package shingle\n\n// A FixedShingleFilter constructs shingles (token n-grams) from a token stream.\nClass FixedShingleFilter;\n// Factory for FixedShingleFilter Parameters are: shingleSize - how many tokens should be combined into each shingle (default: 2) tokenSeparator - how tokens should be joined together in the shingle (default: space) fillerToken - what should be added in place of stop words (default: _ )\nClass FixedShingleFilterFactory;\n", "des": "Word n-gram filters."}
{"index": 805, "repo": "lucene-analyzers-common-8.11.2", "code": "package sinks\n\n// This TokenFilter provides the ability to set aside attribute states that have already been analyzed.\nClass TeeSinkTokenFilter;\n// TokenStream output from a tee.\nClass TeeSinkTokenFilter.SinkTokenStream;\n", "des": "TeeSinkTokenFilter."}
{"index": 806, "repo": "lucene-analyzers-common-8.11.2", "code": "package snowball\n\n// A filter that stems words using a Snowball-generated stemmer.\nClass SnowballFilter;\n// Factory for SnowballFilter, with configurable language\nClass SnowballPorterFilterFactory;\n", "des": "TokenFilter and Analyzer implementations that use Snowball stemmers."}
{"index": 807, "repo": "lucene-analyzers-common-8.11.2", "code": "package sr\n\n// Normalizes Serbian Cyrillic and Latin characters to \"bald\" Latin.\nClass SerbianNormalizationFilter;\n// Factory for SerbianNormalizationFilter.\nClass SerbianNormalizationFilterFactory;\n// Normalizes Serbian Cyrillic to Latin.\nClass SerbianNormalizationRegularFilter;\n", "des": "Analyzer for Serbian."}
{"index": 808, "repo": "lucene-analyzers-common-8.11.2", "code": "package standard\n\n// Filters ClassicTokenizer with ClassicFilter, LowerCaseFilter and StopFilter, using a list of English stop words.\nClass ClassicAnalyzer;\n// Normalizes tokens extracted with ClassicTokenizer.\nClass ClassicFilter;\n// Factory for ClassicFilter.\nClass ClassicFilterFactory;\n// A grammar-based tokenizer constructed with JFlex\nClass ClassicTokenizer;\n// Factory for ClassicTokenizer.\nClass ClassicTokenizerFactory;\n// Factory for StandardTokenizer.\nClass StandardTokenizerFactory;\n", "des": "Fast, general-purpose grammar-based tokenizers."}
{"index": 809, "repo": "lucene-analyzers-common-8.11.2", "code": "package sv\n\n// Analyzer for Swedish.\nClass SwedishAnalyzer;\n// A TokenFilter that applies SwedishLightStemmer to stem Swedish words.\nClass SwedishLightStemFilter;\n// Factory for SwedishLightStemFilter.\nClass SwedishLightStemFilterFactory;\n// Light Stemmer for Swedish.\nClass SwedishLightStemmer;\n", "des": "Analyzer for Swedish."}
{"index": 810, "repo": "lucene-analyzers-common-8.11.2", "code": "package synonym\n\n// Parser for the Solr synonyms format.\nClass SolrSynonymParser;\n// Use SynonymGraphFilter instead, but be sure to also use FlattenGraphFilter at index time (not at search time) as well.\nClass SynonymFilter;\n// Use SynonymGraphFilterFactory instead, but be sure to also use FlattenGraphFilterFactory at index time (not at search time) as well.\nClass SynonymFilterFactory;\n", "des": "Analysis components for Synonyms."}
{"index": 811, "repo": "lucene-analyzers-common-8.11.2", "code": "package te\n\n// Analyzer for Telugu.\nClass TeluguAnalyzer;\n// A TokenFilter that applies TeluguNormalizer to normalize the orthography.\nClass TeluguNormalizationFilter;\n// Factory for TeluguNormalizationFilter.\nClass TeluguNormalizationFilterFactory;\n// Normalizer for Telugu.\nClass TeluguNormalizer;\n// A TokenFilter that applies TeluguStemmer to stem Telugu words.\nClass TeluguStemFilter;\n// Factory for TeluguStemFilter.\nClass TeluguStemFilterFactory;\n// Stemmer for Telugu.\nClass TeluguStemmer;\n", "des": "Analyzer for Telugu Language."}
{"index": 812, "repo": "lucene-analyzers-common-8.11.2", "code": "package th\n\n// Analyzer for Thai language.\nClass ThaiAnalyzer;\n// Tokenizer that use BreakIterator to tokenize Thai text.\nClass ThaiTokenizer;\n// Factory for ThaiTokenizer.\nClass ThaiTokenizerFactory;\n", "des": "Analyzer for Thai."}
{"index": 813, "repo": "lucene-analyzers-common-8.11.2", "code": "package tr\n\n// Strips all characters after an apostrophe (including the apostrophe itself).\nClass ApostropheFilter;\n// Factory for ApostropheFilter.\nClass ApostropheFilterFactory;\n// Analyzer for Turkish.\nClass TurkishAnalyzer;\n// Normalizes Turkish token text to lower case.\nClass TurkishLowerCaseFilter;\n// Factory for TurkishLowerCaseFilter.\nClass TurkishLowerCaseFilterFactory;\n", "des": "Analyzer for Turkish."}
{"index": 814, "repo": "lucene-analyzers-common-8.11.2", "code": "package util\n\n// Abstraction for loading resources (streams, files, and classes).\nInterface ResourceLoader;\n// Interface for a component that needs to be initialized by an implementation of ResourceLoader.\nInterface ResourceLoaderAware;\n// Abstract parent class for analysis factories TokenizerFactory, TokenFilterFactory and CharFilterFactory.\nClass AbstractAnalysisFactory;\n// Helper class for loading named SPIs from classpath (e.g.\nClass AnalysisSPILoader<S extends AbstractAnalysisFactory>;\n", "des": "Utility functions for text analysis."}
{"index": 815, "repo": "lucene-analyzers-common-8.11.2", "code": "package wikipedia\n\n// Extension of StandardTokenizer that is aware of Wikipedia syntax.\nClass WikipediaTokenizer;\n// Factory for WikipediaTokenizer.\nClass WikipediaTokenizerFactory;\n", "des": "Tokenizer that is aware of Wikipedia syntax."}
{"index": 816, "repo": "lucene-analyzers-common-8.11.2", "code": "package collation\n\n// Converts each token into its CollationKey, and then encodes the bytes as an index term.\nClass CollationAttributeFactory;\n// Indexes collation keys as a single-valued SortedDocValuesField.\nClass CollationDocValuesField;\n// Configures KeywordTokenizer with CollationAttributeFactory.\nClass CollationKeyAnalyzer;\n", "des": "Unicode collation support."}
{"index": 817, "repo": "lucene-analyzers-common-8.11.2", "code": "package tokenattributes\n\n// Extension of CharTermAttributeImpl that encodes the term text as a binary Unicode collation key instead of as UTF-8 bytes.\nClass CollatedTermAttributeImpl;\n", "des": "Custom AttributeImpl for indexing collation keys as index terms."}
{"index": 818, "repo": "lucene-analyzers-common-8.11.2", "code": "package snowball\n\n// This is the rev 502 of the Snowball SVN trunk, now located at GitHub, but modified: made abstract and introduced abstract method stem to avoid expensive reflection in filter class.\nClass Among;\n// This is the rev 502 of the Snowball SVN trunk, now located at GitHub, but modified: made abstract and introduced abstract method stem to avoid expensive reflection in filter class.\nClass SnowballProgram;\n", "des": "Snowball stemmer API"}
{"index": 819, "repo": "lucene-analyzers-common-8.11.2", "code": "package ext\n\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass ArabicStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass ArmenianStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass BasqueStemmer;\n", "des": "Autogenerated snowball stemmer implementations."}
{"index": 820, "repo": "commons-rng-simple-1.5", "code": "package simple\n\n// Subclass of Random that delegates to a RestorableUniformRandomProvider instance but will otherwise rely on the base class for generating all the random types.\nClass JDKRandomBridge;\n// Wraps a Random instance to implement UniformRandomProvider.\nClass JDKRandomWrapper;\n// This class provides a thread-local UniformRandomProvider.\nClass ThreadLocalRandomSource;\n// This class provides the API for creating generators of random numbers.\nEnum RandomSource;\n", "des": "This package provides factory methods by which low-level classes implemented in module \"commons-rng-core\" are instantiated."}
{"index": 821, "repo": "commons-rng-simple-1.5", "code": "package internal\n\n// Seed converter to create an output array type.\nInterface Seed2ArrayConverter<IN,OUT>;\n// Seed converter.\nInterface SeedConverter<IN,OUT>;\n// Creates a int[] from a byte[].\nClass ByteArray2IntArray;\n// Creates a long[] from a byte[].\nClass ByteArray2LongArray;\n// Converts a Integer to an Long.\nClass Int2Long;\n// Creates a single value by \"xor\" of all the values in the input array.\nClass IntArray2Int;\n// Creates a long[] from an int[].\nClass IntArray2LongArray;\n", "des": "Utilities for seed conversion."}
{"index": 822, "repo": "calcite-core-1.34.0", "code": "package calcite\n\n// Runtime context allowing access to the tables in a database.\nInterface DataContext;\n// Utilities for DataContext.\nClass DataContexts;\n// Demo.\nClass Demo;\n// Variable that may be asked for in a call to DataContext.get(java.lang.String).\nEnum DataContext.Variable;\n// Annotation to be used to convert interfaces/abstract classes into Immutable POJO using Immutables package.\nAnnotation Type CalciteImmutable;\n", "des": "Main package for Calcite, the dynamic data management platform."}
{"index": 823, "repo": "calcite-core-1.34.0", "code": "package clone\n\n// Schema that contains in-memory copies of tables from a JDBC schema.\nClass CloneSchema;\n// Schema factory that creates a CloneSchema.\nClass CloneSchema.Factory;\n", "des": "Provides utility classes."}
{"index": 824, "repo": "calcite-core-1.34.0", "code": "package enumerable\n\n// Information for a call to AggImplementor.implementAdd(AggContext, AggAddContext).\nInterface AggAddContext;\n// Information on the aggregate calculation context.\nInterface AggContext;\n// Implements an aggregate function by generating expressions to initialize, add to, and get a result from, an accumulator.\nInterface AggImplementor;\n// Generates lambda functions used in EnumerableAggregate.\nInterface AggregateLambdaFactory<TSource,TOrigAccumulate,TAccumulate,TResult,TKey>;\n", "des": "Query optimizer rules for Java calling convention."}
{"index": 825, "repo": "calcite-core-1.34.0", "code": "package impl\n\n// Implementation of AggAddContext.\nClass AggAddContextImpl;\n// Implementation of AggResetContext.\nClass AggResetContextImpl;\n// Implementation of AggResultContext.\nClass AggResultContextImpl;\n// Implementation of WinAggAddContext.\nClass WinAggAddContextImpl;\n// Implementation of WinAggResetContext.\nClass WinAggResetContextImpl;\n// Implementation of WinAggResultContext.\nClass WinAggResultContextImpl;\n", "des": "Calcite-specific classes for implementation of regular and window aggregates."}
{"index": 826, "repo": "calcite-core-1.34.0", "code": "package java\n\n// Type factory that can register Java classes as record types.\nInterface JavaTypeFactory;\n// Abstract base class for implementing Table.\nClass AbstractQueryableTable;\n// Implementation of Schema that exposes the public fields and methods in a Java object.\nClass ReflectiveSchema;\n// Factory that creates a schema by instantiating an object and looking at its public fields.\nClass ReflectiveSchema.Factory;\n// Annotation that indicates that a field is an array type.\nAnnotation Type Array;\n", "des": "Query provider based on Java in-memory data structures."}
{"index": 827, "repo": "calcite-core-1.34.0", "code": "package jdbc\n\n// Relational expression that uses JDBC calling convention.\nInterface JdbcRel;\n// Do not use.\nInterface JdbcSchema.Foo;\n// Schema based upon a JDBC catalog (database).\nClass JdbcCatalogSchema;\n// Calling convention for relational operations that occur in a JDBC database.\nClass JdbcConvention;\n// State for generating a SQL statement.\nClass JdbcImplementor;\n// Implementation of QueryProvider that talks to JDBC databases.\nClass JdbcQueryProvider;\n", "des": "Query provider based on a JDBC data source."}
{"index": 828, "repo": "calcite-core-1.34.0", "code": "package config\n\n// Interface for reading connection properties within Calcite code.\nInterface CalciteConnectionConfig;\n// Implementation of CalciteConnectionConfig.\nClass CalciteConnectionConfigImpl;\n// A Calcite specific system property that is used to configure various aspects of the framework.\nClass CalciteSystemProperty<T>;\n// Properties that may be specified on the JDBC connect string.\nEnum CalciteConnectionProperty;\n// Styles of character literal.\nEnum CharLiteralStyle;\n", "des": "Configuration."}
{"index": 829, "repo": "calcite-core-1.34.0", "code": "package interpreter\n\n// Relational expression that can implement itself in Bindable convention.\nInterface BindableRel;\n// Rule configuration.\nInterface Bindables.BindableTableScanRule.Config;\n// Context while converting a tree of RelNode to a program that can be run by an Interpreter.\nInterface Compiler;\n// Relational expression that can implement itself using an interpreter.\nInterface InterpretableRel;\n// Relational expression that can be executed using an interpreter.\nInterface Node;\n", "des": "Provides an implementation of relational expressions using an interpreter."}
{"index": 830, "repo": "calcite-core-1.34.0", "code": "package jdbc\n\n// Extension to Calcite's implementation of JDBC connection allows schemas to be defined dynamically.\nInterface CalciteConnection;\n// API for a service that prepares statements for execution.\nInterface CalcitePrepare;\n// Context for preparing a statement.\nInterface CalcitePrepare.Context;\n// Callback to register Spark as the main engine.\nInterface CalcitePrepare.SparkHandler;\n// Allows Spark to declare the rules it needs.\nInterface CalcitePrepare.SparkHandler.RuleSetBuilder;\n", "des": "JDBC driver for Calcite."}
{"index": 831, "repo": "calcite-core-1.34.0", "code": "package materialize\n\n// Estimates row counts for a lattice and its attributes.\nInterface LatticeStatisticProvider;\n// Creates a LatticeStatisticProvider for a given Lattice.\nInterface LatticeStatisticProvider.Factory;\n// Creates tables that represent a materialized view.\nInterface MaterializationService.TableFactory;\n// Estimates row counts for tables and columns, and whether combinations of columns form primary/unique and foreign keys.\nInterface SqlStatisticProvider;\n", "des": "Management of materialized query results."}
{"index": 832, "repo": "calcite-core-1.34.0", "code": "package model\n\n// JSON object representing a column.\nClass JsonColumn;\n// JSON schema element that represents a custom schema.\nClass JsonCustomSchema;\n// Custom table schema element.\nClass JsonCustomTable;\n// Function schema element.\nClass JsonFunction;\n// JSON object representing a schema that maps to a JDBC database.\nClass JsonJdbcSchema;\n", "des": "Provides model files, in JSON format, defining schemas and other metadata."}
{"index": 833, "repo": "calcite-core-1.34.0", "code": "package plan\n\n// Rule configuration.\nInterface CommonRelSubExprRule.Config;\n// Provides library users a way to store data within the planner session and access it within rules.\nInterface Context;\n// Calling convention trait.\nInterface Convention;\n// The digest is the exact representation of the corresponding RelNode, at anytime, anywhere.\nInterface RelDigest;\n", "des": "Defines interfaces for constructing rule-based optimizers of relational expressions."}
{"index": 834, "repo": "calcite-core-1.34.0", "code": "package hep\n\n// HepPlanner is a heuristic implementation of the RelOptPlanner interface.\nClass HepPlanner;\n// HepProgram specifies the order in which rules should be attempted by HepPlanner.\nClass HepProgram;\n// HepProgramBuilder creates instances of HepProgram.\nClass HepProgramBuilder;\n// HepRelVertex wraps a real RelNode as a vertex in a DAG representing the entire query expression.\nClass HepRelVertex;\n// HepRuleCall implements RelOptRuleCall for a HepPlanner.\nClass HepRuleCall;\n", "des": "Provides a heuristic planner implementation for the interfaces in org.apache.calcite.plan."}
{"index": 835, "repo": "calcite-core-1.34.0", "code": "package visualizer\n\n// This is a tool to visualize the rule match process of a RelOptPlanner.\nClass RuleMatchVisualizer;\n", "des": "A visualizer showing how the rules are applied step-by-step."}
{"index": 836, "repo": "calcite-core-1.34.0", "code": "package volcano\n\n// Rule configuration.\nInterface AbstractConverter.ExpandConversionRule.Config;\n// Converts a relational expression to any given output convention.\nClass AbstractConverter;\n// Rule that converts an AbstractConverter into a chain of converters from the source relation to the target traits.\nClass AbstractConverter.ExpandConversionRule;\n// Subset of an equivalence class where all relational expressions have the same physical properties.\nClass RelSubset;\n", "des": "Optimizes relational expressions."}
{"index": 837, "repo": "calcite-core-1.34.0", "code": "package prepare\n\n// Interface by which validator and planner can read table metadata.\nInterface Prepare.CatalogReader;\n// Result of a call to Prepare.prepareSql(org.apache.calcite.sql.SqlNode, java.lang.Class, org.apache.calcite.sql.validate.SqlValidator, boolean).\nInterface Prepare.PreparedResult;\n// Definition of a table, for the purposes of the validator and planner.\nInterface Prepare.PreparingTable;\n", "des": "Preparation of queries (parsing, planning and implementation)."}
{"index": 838, "repo": "calcite-core-1.34.0", "code": "package profile\n\n// Analyzes data sets.\nInterface Profiler;\n// Statistic produced by the profiler.\nInterface Profiler.Statistic;\n// Column.\nClass Profiler.Column;\n// Value distribution, including cardinality and optionally values, of a column or set of columns.\nClass Profiler.Distribution;\n// Functional dependency.\nClass Profiler.FunctionalDependency;\n// The result of profiling, contains various statistics about the data in a table.\nClass Profiler.Profile;\n// Whole data set.\nClass Profiler.RowCount;\n", "des": "Utilities to analyze data sets."}
{"index": 839, "repo": "calcite-core-1.34.0", "code": "package rel\n\n// Physical node in a planner that is capable of doing physical trait propagation and derivation.\nInterface PhysicalNode;\n// Description of the physical ordering of a relational expression.\nInterface RelCollation;\n// Description of the physical distribution of a relational expression.\nInterface RelDistribution;\n// Context from which a relational expression can initialize itself, reading from a serialized form of the relational expression.\nInterface RelInput;\n", "des": "Defines relational expressions."}
{"index": 840, "repo": "calcite-core-1.34.0", "code": "package convert\n\n// A relational expression implements the interface Converter to indicate that it converts a physical attribute, or trait, of a relational expression from one value to another.\nInterface Converter;\n// Rule configuration.\nInterface ConverterRule.Config;\n// Rule configuration.\nInterface TraitMatchingRule.Config;\n// Abstract implementation of Converter.\nClass ConverterImpl;\n", "des": "Defines relational expressions and rules for converting between calling conventions."}
{"index": 841, "repo": "calcite-core-1.34.0", "code": "package core\n\n// Can create a LogicalAggregate of the appropriate type for this rule's calling convention.\nInterface RelFactories.AggregateFactory;\n// Can create a correlate of the appropriate type for a rule's calling convention.\nInterface RelFactories.CorrelateFactory;\n// Can create a Exchange of the appropriate type for a rule's calling convention.\nInterface RelFactories.ExchangeFactory;\n", "des": "Defines core relational expressions."}
{"index": 842, "repo": "calcite-core-1.34.0", "code": "package externalize\n\n// Options for displaying the rel node plan in dot format.\nInterface RelDotWriter.WriteOption;\n// Translates a JSON object that represents an input reference into a RexNode.\nInterface RelJson.InputTranslator;\n// Utility to dump a rel node plan in dot format.\nClass RelDotWriter;\n// Registry of Enum classes that can be serialized to JSON.\nClass RelEnumTypes;\n// Utilities for converting RelNode into JSON format.\nClass RelJson;\n", "des": "Facilities to externalize RelNodes to and from XML and JSON format."}
{"index": 843, "repo": "calcite-core-1.34.0", "code": "package hint\n\n// Hintable is a kind of RelNode that can attach RelHints.\nInterface Hintable;\n// A HintOptionChecker validates the options of a RelHint.\nInterface HintOptionChecker;\n// A HintPredicate indicates whether a RelNode can apply the specified hint.\nInterface HintPredicate;\n// A HintPredicate to combine multiple hint predicates into one.\nClass CompositeHintPredicate;\n// A collection of hint predicates.\nClass HintPredicates;\n", "des": "Defines hints interfaces and utilities for relational expressions."}
{"index": 844, "repo": "calcite-core-1.34.0", "code": "package logical\n\n// LogicalAggregate is a relational operator which eliminates duplicates and computes totals.\nClass LogicalAggregate;\n// A relational expression which computes project expressions and also filters.\nClass LogicalCalc;\n// A relational operator that performs nested-loop joins.\nClass LogicalCorrelate;\n// Sub-class of Exchange not targeted at any particular engine or calling convention.\nClass LogicalExchange;\n", "des": "Defines logical relational expressions."}
{"index": 845, "repo": "calcite-core-1.34.0", "code": "package metadata\n\n// Metadata about the predicates that hold in the rows emitted from a relational expression.\nInterface BuiltInMetadata.AllPredicates;\n// Handler API.\nInterface BuiltInMetadata.AllPredicates.Handler;\n// Metadata about which columns are sorted.\nInterface BuiltInMetadata.Collation;\n// Handler API.\nInterface BuiltInMetadata.Collation.Handler;\n// Metadata about the origins of columns.\nInterface BuiltInMetadata.ColumnOrigin;\n// Handler API.\nInterface BuiltInMetadata.ColumnOrigin.Handler;\n", "des": "Defines metadata interfaces and utilities for relational expressions."}
{"index": 846, "repo": "calcite-core-1.34.0", "code": "package janino\n\n// Contains Name and code that been generated for MetadataHandler.\nInterface RelMetadataHandlerGeneratorUtil.HandlerNameAndGeneratedCode;\n// Functions used by generated code.\nClass CacheUtil;\n// A key used in caching with descriptive to string.\nClass DescriptiveCacheKey;\n// Generates the MetadataHandler code.\nClass RelMetadataHandlerGeneratorUtil;\n", "des": "Code for generating metadata handlers."}
{"index": 847, "repo": "calcite-core-1.34.0", "code": "package mutable\n\n// Implementation of MutableRel whose only purpose is to have a child.\nClass Holder;\n// Mutable equivalent of Aggregate.\nClass MutableAggregate;\n// Mutable equivalent of Calc.\nClass MutableCalc;\n// Mutable equivalent of Collect.\nClass MutableCollect;\n// Mutable equivalent of Correlate.\nClass MutableCorrelate;\n// Mutable equivalent of Exchange.\nClass MutableExchange;\n// Mutable equivalent of Filter.\nClass MutableFilter;\n// Mutable equivalent of Intersect.\nClass MutableIntersect;\n", "des": "Defines mutable relational expressions."}
{"index": 848, "repo": "calcite-core-1.34.0", "code": "package rel2sql\n\n// Utility to convert relational expressions to SQL abstract syntax tree.\nClass RelToSqlConverter;\n// State for generating a SQL statement.\nClass SqlImplementor;\n// Context for translating a RexNode expression (within a RelNode) into a SqlNode expression (within a SQL parse tree).\nClass SqlImplementor.Context;\n// Simple implementation of SqlImplementor.Context that cannot handle sub-queries or correlations.\nClass SqlImplementor.SimpleContext;\n", "des": "Translates a relational expression to SQL parse tree."}
{"index": 849, "repo": "calcite-core-1.34.0", "code": "package rules\n\n// Rule configuration.\nInterface AbstractJoinExtractFilterRule.Config;\n// Rule configuration.\nInterface AggregateCaseToFilterRule.Config;\n// Rule configuration.\nInterface AggregateExpandDistinctAggregatesRule.Config;\n// Rule configuration.\nInterface AggregateExpandWithinDistinctRule.Config;\n// Rule configuration.\nInterface AggregateExtractProjectRule.Config;\n// Rule configuration.\nInterface AggregateFilterTransposeRule.Config;\n", "des": "Provides a core set of planner rules."}
{"index": 850, "repo": "calcite-core-1.34.0", "code": "package materialize\n\n// Rule configuration.\nInterface MaterializedViewAggregateRule.Config;\n// Rule configuration.\nInterface MaterializedViewOnlyAggregateRule.Config;\n// Rule configuration.\nInterface MaterializedViewOnlyFilterRule.Config;\n// Rule configuration.\nInterface MaterializedViewOnlyJoinRule.Config;\n// Rule configuration.\nInterface MaterializedViewProjectAggregateRule.Config;\n// Rule configuration.\nInterface MaterializedViewProjectFilterRule.Config;\n", "des": "Provides a materialized rewriting algorithm encapsulated within a planner rule."}
{"index": 851, "repo": "calcite-core-1.34.0", "code": "package stream\n\n// Rule configuration.\nInterface StreamRules.DeltaAggregateTransposeRule.DeltaAggregateTransposeRuleConfig;\n// Rule configuration.\nInterface StreamRules.DeltaFilterTransposeRule.DeltaFilterTransposeRuleConfig;\n// Rule configuration.\nInterface StreamRules.DeltaJoinTransposeRule.DeltaJoinTransposeRuleConfig;\n// Rule configuration.\nInterface StreamRules.DeltaProjectTransposeRule.DeltaProjectTransposeRuleConfig;\n", "des": "Defines relational expressions for streaming."}
{"index": 852, "repo": "calcite-core-1.34.0", "code": "package type\n\n// RelDataType represents the type of a scalar expression or entire row returned from a relational expression.\nInterface RelDataType;\n// RelDataTypeFactory is a factory for datatype descriptors.\nInterface RelDataTypeFactory;\n// \nInterface RelDataTypeFactory.FieldInfo;\n// RelDataTypeFamily represents a family of related types.\nInterface RelDataTypeFamily;\n// RelDataTypeField represents the definition of a field in a structured RelDataType.\nInterface RelDataTypeField;\n", "des": "Defines a type system for relational expressions."}
{"index": 853, "repo": "calcite-core-1.34.0", "code": "package rex\n\n// \nInterface RexAction;\n// Visitor pattern for traversing a tree of RexNode objects and passing a payload to each.\nInterface RexBiVisitor<R,P>;\n// Can reduce expressions, writing a literal for each into a list.\nInterface RexExecutor;\n// \nInterface RexPattern;\n// Converts a RexNode expression into a SqlNode expression.\nInterface RexSqlConvertlet;\n// Collection of RexSqlConvertlets.\nInterface RexSqlConvertletTable;\n", "des": "Provides a language for representing row-expressions."}
{"index": 854, "repo": "calcite-core-1.34.0", "code": "package runtime\n\n// Extension to Bindable that returns rows that are arrays of objects.\nInterface ArrayBindable;\n// Statement that can be bound to a DataContext and then executed.\nInterface Bindable<T>;\n// Compiler-checked resources for the Calcite project.\nInterface CalciteResource;\n// Given a match (a list of rows, and their states) produces a list of rows to be output.\nInterface Enumerables.Emitter<E,TResult>;\n// List that is also comparable.\nInterface FlatLists.ComparableList<T>;\n", "des": "Utilities required at runtime."}
{"index": 855, "repo": "calcite-core-1.34.0", "code": "package schema\n\n// Function that combines several values into a scalar result.\nInterface AggregateFunction;\n// Extension to Table that specifies a custom way to resolve column names.\nInterface CustomColumnResolvingTable;\n// Table whose row type can be extended to include extra fields.\nInterface ExtensibleTable;\n// Table that can be scanned, optionally applying supplied filter expressions, without creating an intermediate relational expression.\nInterface FilterableTable;\n", "des": "Schema SPI."}
{"index": 856, "repo": "calcite-core-1.34.0", "code": "package impl\n\n// Abstract implementation of Schema.\nClass AbstractSchema;\n// Schema factory that creates an AbstractSchema.\nClass AbstractSchema.Factory;\n// Abstract base class for implementing Table.\nClass AbstractTable;\n// Abstract implementation of Queryable for QueryableTable.\nClass AbstractTableQueryable<T>;\n// Implementation of AggregateFunction via user-defined class.\nClass AggregateFunctionImpl;\n// Implementation of Schema that delegates to an underlying schema.\nClass DelegatingSchema;\n", "des": "Utilities to help implement Calcite's SPIs."}
{"index": 857, "repo": "calcite-core-1.34.0", "code": "package server\n\n// Server.\nInterface CalciteServer;\n// Statement within a Calcite server.\nInterface CalciteServerStatement;\n// Executes DDL commands.\nInterface DdlExecutor;\n// Abstract implementation of DdlExecutor.\nClass DdlExecutorImpl;\n", "des": "Provides a server for hosting Calcite connections."}
{"index": 858, "repo": "calcite-core-1.34.0", "code": "package sql\n\n// Information for creating a dialect.\nInterface SqlDialect.Context;\n// Creates a SqlDialect appropriate for a given database metadata object.\nInterface SqlDialectFactory;\n// \nInterface SqlLiteral.SqlSymbol;\n// A class that describes how many operands an operator can take.\nInterface SqlOperandCountRange;\n// SqlOperatorTable defines a directory interface for enumerating and looking up SQL operators and functions.\nInterface SqlOperatorTable;\n", "des": "Provides a SQL parser and object model."}
{"index": 859, "repo": "calcite-core-1.34.0", "code": "package advise\n\n// An assistant which offers hints and corrections to a partially-formed SQL statement.\nClass SqlAdvisor;\n// Text and position info of a validator or parser exception.\nClass SqlAdvisor.ValidateErrorInfo;\n// Table function that returns completion hints for a given SQL statement.\nClass SqlAdvisorGetHintsFunction;\n// Table function that returns completion hints for a given SQL statement.\nClass SqlAdvisorGetHintsFunction2;\n", "des": "Provides hints and corrections for editing SQL statements."}
{"index": 860, "repo": "calcite-core-1.34.0", "code": "package ddl\n\n// Parse tree for SqlAttributeDefinition, which is part of a SqlCreateType.\nClass SqlAttributeDefinition;\n// Parse tree for UNIQUE, PRIMARY KEY constraints.\nClass SqlCheckConstraint;\n// Parse tree for UNIQUE, PRIMARY KEY constraints.\nClass SqlColumnDeclaration;\n// Parse tree for CREATE FOREIGN SCHEMA statement.\nClass SqlCreateForeignSchema;\n// Parse tree for CREATE FUNCTION statement.\nClass SqlCreateFunction;\n", "des": "Parse tree for SQL DDL statements."}
{"index": 861, "repo": "calcite-core-1.34.0", "code": "package dialect\n\n// Stores information about capabilities of Jethro databases.\nInterface JethroDataSqlDialect.JethroInfoCache;\n// A SqlDialect implementation for the Access database.\nClass AccessSqlDialect;\n// A SqlDialect implementation for an unknown ANSI compatible database.\nClass AnsiSqlDialect;\n// A SqlDialect implementation for Google BigQuery's \"Standard SQL\" dialect.\nClass BigQuerySqlDialect;\n", "des": "SQL unparsers for JDBC dialects."}
{"index": 862, "repo": "calcite-core-1.34.0", "code": "package fun\n\n// Use SqlLibraryOperatorTableFactory.getOperatorTable(SqlLibrary...) instead, passing SqlLibrary.ORACLE as argument.\nClass OracleSqlOperatorTable;\n// Base class for grouping functions GROUP_ID, GROUPING_ID, GROUPING.\nClass SqlAbstractGroupFunction;\n// Base class for time functions such as \"LOCALTIME\", \"LOCALTIME(n)\".\nClass SqlAbstractTimeFunction;\n// Definition of the ANY_VALUE aggregate functions, returning any one of the values which go into it.\nClass SqlAnyValueAggFunction;\n", "des": "Defines the set of standard SQL row-level functions and operators."}
{"index": 863, "repo": "calcite-core-1.34.0", "code": "package parser\n\n// Interface to define the configuration for a SQL parser.\nInterface SqlParser.Config;\n// Factory for SqlAbstractParserImpl objects.\nInterface SqlParserImplFactory;\n// Builder for SqlParserPos.\nClass Span;\n// A SqlParser parses a SQL statement.\nClass SqlParser;\n// \nClass SqlParser.ConfigBuilder;\n// SqlParserPos represents the position of a parsed token within SQL statement text.\nClass SqlParserPos;\n// Utility methods relating to parsing SQL.\nClass SqlParserUtil;\n", "des": "Provides a SQL parser."}
{"index": 864, "repo": "calcite-core-1.34.0", "code": "package pretty\n\n// Data structure to hold options for SqlPrettyWriter.setFormatOptions(SqlFormatOptions).\nClass SqlFormatOptions;\n// Pretty printer for SQL statements.\nClass SqlPrettyWriter;\n", "des": "Provides a pretty-printer for SQL statements."}
{"index": 865, "repo": "calcite-core-1.34.0", "code": "package type\n\n// Holds constants associated with SQL types introduced after the earliest version of Java supported by Farrago (this currently means anything introduced in JDK 1.6 or later).\nInterface ExtraSqlTypes;\n// An operand type checker that supports implicit type cast, see TypeCoercion.builtinFunctionCoercion(SqlCallBinding, List, List) for details.\nInterface ImplicitCastOperandTypeChecker;\n// Strategy interface to process operands of an operator call.\nInterface SqlOperandHandler;\n", "des": "SQL type system."}
{"index": 866, "repo": "calcite-core-1.34.0", "code": "package util\n\n// Argument handler.\nInterface SqlBasicVisitor.ArgHandler<R>;\n// Visitor class, follows the visitor pattern.\nInterface SqlVisitor<R>;\n// ChainedSqlOperatorTable implements the SqlOperatorTable interface by chaining together any number of underlying operator table instances.\nClass ChainedSqlOperatorTable;\n// Similar to Pair but identity is based on identity of values.\nClass IdPair<L,R>;\n", "des": "Utility classes for the SQL object model, parsing, and validation."}
{"index": 867, "repo": "calcite-core-1.34.0", "code": "package validate\n\n// An extension to the SqlValidatorScope interface which indicates that the scope is aggregating.\nInterface AggregatingScope;\n// Enumeration of valid SQL compatibility modes.\nInterface SqlConformance;\n// An interface of an object identifier that represents a SqlIdentifier.\nInterface SqlMoniker;\n// Checks whether two names are the same according to a case-sensitivity policy.\nInterface SqlNameMatcher;\n", "des": "SQL validation."}
{"index": 868, "repo": "calcite-core-1.34.0", "code": "package implicit\n\n// Default strategies to coerce differing types that participate in operations into compatible ones.\nInterface TypeCoercion;\n// Factory for TypeCoercion objects.\nInterface TypeCoercionFactory;\n// Base class for all the type coercion rules.\nClass AbstractTypeCoercion;\n// Default implementation of Calcite implicit type cast.\nClass TypeCoercionImpl;\n// Factory class for type coercion instantiation of different sql dialects.\nClass TypeCoercions;\n", "des": "SQL Implicit Type Cast"}
{"index": 869, "repo": "calcite-core-1.34.0", "code": "package sql2rel\n\n// Converts an expression for a group window function (e.g.\nInterface AuxiliaryConverter;\n// Provides context for InitializerExpressionFactory methods.\nInterface InitializerContext;\n// InitializerExpressionFactory supplies default values for INSERT, UPDATE, and NEW.\nInterface InitializerExpressionFactory;\n// Rule configuration.\nInterface RelDecorrelator.AdjustProjectForCountAggregateRule.AdjustProjectForCountAggregateRuleConfig;\n", "des": "Translates a SQL parse tree to relational expression."}
{"index": 870, "repo": "calcite-core-1.34.0", "code": "package statistic\n\n// Implementation of SqlStatisticProvider that reads and writes a cache.\nClass CachingSqlStatisticProvider;\n// Implementation of SqlStatisticProvider that generates and executes SQL queries.\nClass QuerySqlStatisticProvider;\n// Implementation of SqlStatisticProvider that looks up values in a table.\nEnum MapSqlStatisticProvider;\n", "des": "Implementations of statistics providers."}
{"index": 871, "repo": "calcite-core-1.34.0", "code": "package tools\n\n// Interface that describes how to configure planning sessions generated using the Frameworks tools.\nInterface FrameworkConfig;\n// Piece of code to be run in a context where a planner and statement are available.\nInterface Frameworks.BasePrepareAction<R>;\n// Piece of code to be run in a context where a planner is available.\nInterface Frameworks.PlannerAction<R>;\n// Configuration.\nInterface Hoist.Config;\n", "des": "Provides utility classes."}
{"index": 872, "repo": "calcite-core-1.34.0", "code": "package util\n\n// Tagging interface to allow a SqlParseException to be identified without adding a dependency on it from client-side code.\nInterface CalciteParserException;\n// Tagging interface to allow a SqlValidatorException to be identified without adding a dependency on it from client-side code.\nInterface CalciteValidatorException;\n// Compatibility layer.\nInterface Compatible;\n// A collection of terms.\nInterface Glossary;\n// Maps Java types to their corresponding getters in JDBC.\nInterface JdbcType<T>;\n", "des": "Provides utility classes."}
{"index": 873, "repo": "calcite-core-1.34.0", "code": "package format\n\n// A format element in a format string.\nInterface FormatElement;\n// Describes the format strings used by a formatting function such as FORMAT_TIMESTAMP or CAST(string AS DATE FORMAT formatString).\nInterface FormatModel;\n// Utilities for FormatModel.\nClass FormatModels;\n// Implementation of FormatElement containing the standard format elements.\nEnum FormatElementEnum;\n", "des": "Utility classes for handling format strings."}
{"index": 874, "repo": "calcite-core-1.34.0", "code": "package graph\n\n// Factory for edges that have attributes.\nInterface AttributedDirectedGraph.AttributedEdgeFactory<V,E>;\n// Directed graph.\nInterface DirectedGraph<V,E>;\n// Factory for edges.\nInterface DirectedGraph.EdgeFactory<V,E>;\n// Directed graph where edges have attributes and allows multiple edges between any two vertices provided that their attributes are different.\nClass AttributedDirectedGraph<V,E extends DefaultEdge>;\n", "des": "Graph-theoretic algorithms and data structures."}
{"index": 875, "repo": "calcite-core-1.34.0", "code": "package javac\n\n// The interface JavaCompiler represents an interface to invoke a regular Java compiler.\nInterface JavaCompiler;\n// JaninoCompiler implements the JavaCompiler interface by calling Janino.\nClass JaninoCompiler;\n// Arguments to an invocation of the Janino compiler.\nClass JaninoCompiler.JaninoCompilerArgs;\n// A JavaCompilerArgs holds the arguments for a JavaCompiler.\nClass JavaCompilerArgs;\n", "des": "Provides compilers for Java code."}
{"index": 876, "repo": "calcite-core-1.34.0", "code": "package mapping\n\n// A Mapping is a relationship between a source domain to target domain of integers.\nInterface Mapping;\n// Core interface of all mappings.\nInterface Mappings.CoreMapping;\n// Mapping where every source has a target.\nInterface Mappings.FunctionMapping;\n// Mapping suitable for sourcing columns.\nInterface Mappings.SourceMapping;\n// Mapping suitable for mapping columns to a target.\nInterface Mappings.TargetMapping;\n", "des": "Support for algebraic maps."}
{"index": 877, "repo": "calcite-core-1.34.0", "code": "package trace\n\n// Small extension to Logger with some performance improvements.\nClass CalciteLogger;\n// CalciteTimingTracer provides a mechanism for tracing the timing of a call sequence at nanosecond resolution.\nClass CalciteTimingTracer;\n// Contains all of the tracers used within org.apache.calcite class libraries.\nClass CalciteTrace;\n", "des": "Tracing services."}
{"index": 878, "repo": "mahout-math-0.13.0", "code": "package math\n\n// The basic interface including numerous convenience functions\nInterface Matrix;\n// Optional interface for optimized matrix multiplications.\nInterface MatrixTimesOps;\n// \nInterface QR;\n// Interface for an object that knows how to swap elements at two positions (a,b).\nInterface Swapper;\n// The basic interface including numerous convenience functions\nInterface Vector;\n// A holder for information about a specific item in the Vector.\nInterface Vector.Element;\n// \nInterface VectorIterable;\n", "des": "Core base classes; Operations on primitive arrays such as sorting, partitioning and permuting."}
{"index": 879, "repo": "mahout-math-0.13.0", "code": "package function\n\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteByteProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteCharProcedure;\n// A comparison function which imposes a total ordering on some collection of elements.\nInterface ByteComparator;\n", "des": "Core interfaces for functions, comparisons and procedures on objects and primitive data types."}
{"index": 880, "repo": "mahout-math-0.13.0", "code": "package math\n\n// Arithmetic functions.\nClass Arithmetic;\n// Defines some useful constants.\nClass Constants;\n// Polynomial functions.\nClass Polynomial;\n", "des": "Tools for basic and advanced mathematics: Arithmetics and Algebra, Polynomials and Chebyshev series, Bessel and Airy functions, Function Objects for generic function evaluation, etc."}
{"index": 881, "repo": "mahout-math-0.13.0", "code": "package engine\n\n// MersenneTwister (MT19937) is one of the strongest uniform pseudo-random number generators known so far; at the same time it is quick.\nClass MersenneTwister;\n// Abstract base class for uniform pseudo-random number generating engines.\nClass RandomEngine;\n", "des": "Engines generating strong uniformly distributed pseudo-random numbers; Needed by all JET probability distributions since they rely on uniform random numbers to generate random numbers from their own distribution."}
{"index": 882, "repo": "mahout-math-0.13.0", "code": "package stat\n\n// Partially deprecated until unit tests are in place.\nClass Gamma;\n// Partially deprecated until unit tests are in place.\nClass Probability;\n", "des": "Tools for basic and advanced statistics: Estimators, Gamma functions, Beta functions, Probabilities, Special integrals, etc."}
{"index": 883, "repo": "mahout-math-0.13.0", "code": "package list\n\n// Abstract base class for resizable lists holding byte elements; abstract.\nClass AbstractByteList;\n// Abstract base class for resizable lists holding char elements; abstract.\nClass AbstractCharList;\n// Abstract base class for resizable lists holding double elements; abstract.\nClass AbstractDoubleList;\n// Abstract base class for resizable lists holding float elements; abstract.\nClass AbstractFloatList;\n", "des": "Resizable lists holding objects or primitive data types such as int, double, etc."}
{"index": 884, "repo": "mahout-math-0.13.0", "code": "package map\n\n// \nClass AbstractByteByteMap;\n// \nClass AbstractByteCharMap;\n// \nClass AbstractByteDoubleMap;\n// \nClass AbstractByteFloatMap;\n// \nClass AbstractByteIntMap;\n// \nClass AbstractByteLongMap;\n// \nClass AbstractByteObjectMap<T>;\n// \nClass AbstractByteShortMap;\n// \nClass AbstractCharByteMap;\n// \nClass AbstractCharCharMap;\n// \nClass AbstractCharDoubleMap;\n// \nClass AbstractCharFloatMap;\n// \nClass AbstractCharIntMap;\n// \nClass AbstractCharLongMap;\n// \nClass AbstractCharObjectMap<T>;\n", "des": "Automatically growing and shrinking maps holding objects or primitive data types such as int, double, etc."}
{"index": 885, "repo": "cassandra-all-4.1.2", "code": "package types\n\n// Collection of (typed) CQL values that can be retrieved by index (starting at zero).\nInterface GettableByIndexData;\n// Collection of (typed) CQL values that can be retrieved by name.\nInterface GettableByNameData;\n// Collection of (typed) CQL values that can be retrieved either by index (starting at zero) or by name.\nInterface GettableData;\n// Collection of (typed) CQL values that can be set by index (starting at zero).\nInterface SettableByIndexData<T extends SettableByIndexData<T>>;\n", "des": "Contains pieces of the Java Driver that are needed to handle data types in C* User-Defined-Functions/Aggregates."}
{"index": 886, "repo": "cassandra-all-4.1.2", "code": "package streaming\n\n// This is the interface is used by the streaming code read a SSTable stream off a channel.\nInterface IStreamReader;\n// CassandraStreamReader that reads from streamed compressed SSTable\nClass CassandraCompressedStreamReader;\n// CassandraStreamWriter for compressed SSTable.\nClass CassandraCompressedStreamWriter;\n// CassandraEntireSSTableStreamReader reads SSTable off the wire and writes it to disk.\nClass CassandraEntireSSTableStreamReader;\n", "des": "File transfer"}
{"index": 887, "repo": "cassandra-all-4.1.2", "code": "package hadoop\n\n// \nClass ColumnFamilySplit;\n// \nClass ConfigHelper;\n// Utility methods to allow applications to deal with inconsistencies between MapReduce Context Objects API between Hadoop 1.x and 2.x.\nClass HadoopCompat;\n// A reporter that works with both mapred and mapreduce APIs.\nClass ReporterWrapper;\n", "des": "This package was deprecated."}
{"index": 888, "repo": "cassandra-all-4.1.2", "code": "package hints\n\n// \nInterface HintsServiceMBean;\n// Marker interface for file positions as provided by the various ChecksummedDataReader implementations.\nInterface InputPosition;\n// \nInterface SerializableHintMessage;\n// A RandomAccessReader wrapper that calculates the CRC in place.\nClass ChecksummedDataInput;\n// \nClass CompressedChecksummedDataInput;\n// \nClass CompressedHintsWriter;\n// \nClass EncryptedChecksummedDataInput;\n// \nClass EncryptedHintsWriter;\n", "des": "Hints subsystem consists of several components."}
{"index": 889, "repo": "cassandra-all-4.1.2", "code": "package async\n\n// \nClass NettyStreamingChannel;\n// \nClass NettyStreamingConnectionFactory;\n// A serialiazer for stream compressed files (see package-level documentation).\nClass StreamCompressionSerializer;\n// Responsible for sending StreamMessages to a given peer.\nClass StreamingMultiplexedChannel;\n", "des": "Non-blocking streaming with netty"}
{"index": 890, "repo": "commons-jcs3-core-3.1", "code": "package jcs3\n\n// Simple class for using JCS.\nClass JCS;\n", "des": "Contains the class JCS which provides a simple interface for clients to use JCS."}
{"index": 891, "repo": "commons-jcs3-core-3.1", "code": "package access\n\n// This class provides the common methods for all types of access to the cache.\nClass AbstractCacheAccess<K,V>;\n// This class provides an interface for all types of access to the cache.\nClass CacheAccess<K,V>;\n// Access for groups.\nClass GroupCacheAccess<K,V>;\n", "des": "Contains classes for accessing the cache."}
{"index": 892, "repo": "commons-jcs3-core-3.1", "code": "package auxiliary\n\n// Tag interface for auxiliary caches.\nInterface AuxiliaryCache<K,V>;\n// This is a nominal interface that auxiliary cache attributes should implement.\nInterface AuxiliaryCacheAttributes;\n// All auxiliary caches must have a factory that the cache configurator can use to create instances.\nInterface AuxiliaryCacheFactory;\n// This holds convenience methods used by most auxiliary caches.\nClass AbstractAuxiliaryCache<K,V>;\n", "des": "Root package for auxiliary caches."}
{"index": 893, "repo": "commons-jcs3-core-3.1", "code": "package disk\n\n// Abstract class providing a base implementation of a disk cache, which can be easily extended to implement a disk cache for a specific persistence mechanism.\nClass AbstractDiskCache<K,V>;\n// This has common attributes that any conceivable disk cache would need.\nClass AbstractDiskCacheAttributes;\n// Implementation of cache elements in purgatory.\nClass PurgatoryElement<K,V>;\n", "des": "The primary disk auxiliary."}
{"index": 894, "repo": "commons-jcs3-core-3.1", "code": "package lateral\n\n// Lateral distributor.\nClass LateralCache<K,V>;\n// This class stores attributes for all of the available lateral cache auxiliaries.\nClass LateralCacheAttributes;\n// Used to monitor and repair any failed connection for the lateral cache service.\nClass LateralCacheMonitor;\n// Used to queue up update requests to the underlying cache.\nClass LateralCacheNoWait<K,V>;\n// Used to provide access to multiple services under nowait protection.\nClass LateralCacheNoWaitFacade<K,V>;\n", "des": "Root package for the lateral cache family."}
{"index": 895, "repo": "commons-jcs3-core-3.1", "code": "package remote\n\n// Abstract base for remote caches.\nClass AbstractRemoteAuxiliaryCache<K,V>;\n// Shared listener base.\nClass AbstractRemoteCacheListener<K,V>;\n// An abstract base for the No Wait Facade.\nClass AbstractRemoteCacheNoWaitFacade<K,V>;\n// Attributes common to remote cache client and server.\nClass CommonRemoteCacheAttributes;\n// Client proxy for an RMI remote cache.\nClass RemoteCache<K,V>;\n// These objects are used to configure the remote cache client.\nClass RemoteCacheAttributes;\n", "des": "Root package for the remote auxiliary cache."}
{"index": 896, "repo": "commons-jcs3-core-3.1", "code": "package engine\n\n// An abstract base class to the different implementations\nClass AbstractCacheEventQueue<K,V>;\n// Used for Cache-to-Cache messaging purposes.\nClass CacheAdaptor<K,V>;\n// Generic element wrapper.\nClass CacheElement<K,V>;\n// Either serialized value or the value should be null;\nClass CacheElementSerialized<K,V>;\n// An event queue is used to propagate ordered cache events to one and only one target listener.\nClass CacheEventQueue<K,V>;\n", "des": "Interfaces used by the core and the auxiliary caches."}
{"index": 897, "repo": "commons-jcs3-core-3.1", "code": "package behavior\n\n// This is the top level interface for all cache like structures.\nInterface ICache<K,V>;\n// Every item is the cache is wrapped in an ICacheElement.\nInterface ICacheElement<K,V>;\n// This interface defines the behavior of the serialized element wrapper.\nInterface ICacheElementSerialized<K,V>;\n// Interface for a cache event queue.\nInterface ICacheEventQueue<K,V>;\n// Used to receive a cache event notification.\nInterface ICacheListener<K,V>;\n", "des": "Interfaces used by the core and the auxiliary caches."}
{"index": 898, "repo": "commons-jcs3-core-3.1", "code": "package control\n\n// This is the primary hub for a single cache/region.\nClass CompositeCache<K,V>;\n// This class configures JCS based on a properties object.\nClass CompositeCacheConfigurator;\n// Manages a composite cache.\nClass CompositeCacheManager;\n", "des": "The primary cache classes and the hub."}
{"index": 899, "repo": "commons-jcs3-core-3.1", "code": "package memory\n\n// This class contains methods that are common to memory caches using the double linked list, such as the LRU, MRU, FIFO, and LIFO caches.\nClass AbstractDoubleLinkedListMemoryCache<K,V>;\n// This base includes some common code for memory caches.\nClass AbstractMemoryCache<K,V>;\n", "des": "Parent package for memory type plugins."}
{"index": 900, "repo": "commons-jcs3-core-3.1", "code": "package lru\n\n// This is a test memory manager using the jdk1.4 LinkedHashMap.\nClass LHMLRUMemoryCache<K,V>;\n// A fast reference management system.\nClass LRUMemoryCache<K,V>;\n", "des": "The primary memory plugin using a 'least recently used' removal policy."}
{"index": 901, "repo": "commons-jcs3-core-3.1", "code": "package mru\n\n// The most recently used items move to the front of the list and get spooled to disk if the cache hub is configured to use a disk cache.\nClass MRUMemoryCache<K,V>;\n", "des": "A memory plugin implemented using a 'most recently used' removal policy."}
{"index": 902, "repo": "commons-jcs3-core-3.1", "code": "package soft\n\n// A JCS IMemoryCache that has SoftReference to all its values.\nClass SoftReferenceMemoryCache<K,V>;\n", "des": "A memory plugin implemented using soft references."}
{"index": 903, "repo": "commons-jcs3-core-3.1", "code": "package config\n\n// This class is based on the log4j class org.apache.log4j.helpers.OptionConverter that was made by Ceki Gülcü Simon Kitching; Avy Sharell (sharell@online.fr) Anders Kristensen Matthieu Verbert (mve@zurich.ibm.com) A convenience class to convert property values to specific types.\nClass OptionConverter;\n// This class is based on the log4j class org.apache.log4j.config.PropertySetter that was made by Anders Kristensen General purpose Object property setter.\nClass PropertySetter;\n", "des": "This package contains utility classes that are used when configuring the cache."}
{"index": 904, "repo": "commons-compress-1.23.0", "code": "package archivers\n\n// Represents an entry of an archive.\nInterface ArchiveEntry;\n// Creates Archive ArchiveInputStreams and ArchiveOutputStreams.\nInterface ArchiveStreamProvider;\n// Provides information about ArchiveEntry stream offsets.\nInterface EntryStreamOffsets;\n", "des": "Provides a unified API and factories for dealing with archives in different formats."}
{"index": 905, "repo": "commons-compress-1.23.0", "code": "package ar\n\n// Represents an archive entry in the \"ar\" format.\nClass ArArchiveEntry;\n// Implements the \"ar\" archive format as an input stream.\nClass ArArchiveInputStream;\n// Implements the \"ar\" archive format as an output stream.\nClass ArArchiveOutputStream;\n", "des": "Provides stream classes for reading and writing archives using the AR format."}
{"index": 906, "repo": "commons-compress-1.23.0", "code": "package arj\n\n// An entry in an ARJ archive.\nClass ArjArchiveEntry;\n// The known values for HostOs.\nClass ArjArchiveEntry.HostOs;\n// Implements the \"arj\" archive format as an InputStream.\nClass ArjArchiveInputStream;\n", "des": "Provides stream classes for reading archives using the ARJ format."}
{"index": 907, "repo": "commons-compress-1.23.0", "code": "package cpio\n\n// All constants needed by CPIO.\nInterface CpioConstants;\n// A cpio archive consists of a sequence of files.\nClass CpioArchiveEntry;\n// CpioArchiveInputStream is a stream for reading cpio streams.\nClass CpioArchiveInputStream;\n// CpioArchiveOutputStream is a stream for writing CPIO streams.\nClass CpioArchiveOutputStream;\n", "des": "Provides stream classes for reading and writing archives using the CPIO format."}
{"index": 908, "repo": "commons-compress-1.23.0", "code": "package dump\n\n// Various constants associated with dump archives.\nClass DumpArchiveConstants;\n// This class represents an entry in a Dump archive.\nClass DumpArchiveEntry;\n// The DumpArchiveInputStream reads a UNIX dump archive as an InputStream.\nClass DumpArchiveInputStream;\n// This class represents identifying information about a Dump archive volume.\nClass DumpArchiveSummary;\n// The type of compression.\nEnum DumpArchiveConstants.COMPRESSION_TYPE;\n", "des": "This package provides stream classes for reading archives using the Unix DUMP format."}
{"index": 909, "repo": "commons-compress-1.23.0", "code": "package examples\n\n// Callback that is informed about a closable resource that has been wrapped around a passed in stream or channel by Expander or Archiver when Expander or Archiver no longer need them.\nInterface CloseableConsumer;\n// Provides a high level API for creating archives.\nClass Archiver;\n// Provides a high level API for expanding archives.\nClass Expander;\n", "des": "Contains example code that is not guaranteed to provide a stable API across releases of Commons Compress."}
{"index": 910, "repo": "commons-compress-1.23.0", "code": "package jar\n\n// \nClass JarArchiveEntry;\n// Implements an input stream that can read entries from jar files.\nClass JarArchiveInputStream;\n// Subclass that adds a special extra field to the very first entry which allows the created archive to be used as an executable jar on Solaris.\nClass JarArchiveOutputStream;\n", "des": "Provides stream classes for reading and writing archives using the ZIP format with some extensions for the special case of JAR archives."}
{"index": 911, "repo": "commons-compress-1.23.0", "code": "package sevenz\n\n// Usage: archive-name [list]\nClass CLI;\n// An entry in a 7z archive.\nClass SevenZArchiveEntry;\n// Reads a 7z file, using SeekableByteChannel under the covers.\nClass SevenZFile;\n// Collects options for reading 7z archives.\nClass SevenZFileOptions;\n// Mutable builder for the immutable SevenZFileOptions.\nClass SevenZFileOptions.Builder;\n// Combines a SevenZMethod with configuration options for the method.\nClass SevenZMethodConfiguration;\n// Writes a 7z file.\nClass SevenZOutputFile;\n", "des": "Provides classes for reading and writing archives using the 7z format."}
{"index": 912, "repo": "commons-compress-1.23.0", "code": "package tar\n\n// This interface contains all the definitions used in the package.\nInterface TarConstants;\n// This class represents an entry in a Tar archive.\nClass TarArchiveEntry;\n// The TarInputStream reads a UNIX tar archive as an InputStream.\nClass TarArchiveInputStream;\n// The TarOutputStream writes a UNIX tar archive as an OutputStream.\nClass TarArchiveOutputStream;\n// This class represents a sparse entry in a Tar archive.\nClass TarArchiveSparseEntry;\n", "des": "Provides stream classes for reading and writing archives using the TAR format."}
{"index": 913, "repo": "commons-compress-1.23.0", "code": "package zip\n\n// An interface added to allow access to the character set associated with an NioZipEncoding, without requiring a new method to be added to ZipEncoding.\nInterface CharsetAccessor;\n// Controls details of parsing ZIP extra fields.\nInterface ExtraFieldParsingBehavior;\n// Constants from stat.h on Unix systems.\nInterface UnixStat;\n", "des": "Provides stream classes for reading and writing archives using the ZIP format."}
{"index": 914, "repo": "commons-compress-1.23.0", "code": "package changes\n\n// ChangeSet collects and performs changes to an archive.\nClass ChangeSet;\n// Performs ChangeSet operations on a stream.\nClass ChangeSetPerformer;\n// Stores the results of an performed ChangeSet operation.\nClass ChangeSetResults;\n", "des": "EXPERIMENTAL support for changesets that are applied to archives."}
{"index": 915, "repo": "commons-compress-1.23.0", "code": "package compressors\n\n// Creates Compressor CompressorInputStreams and CompressorOutputStreams.\nInterface CompressorStreamProvider;\n// \nClass CompressorInputStream;\n// \nClass CompressorOutputStream;\n// Factory to create Compressor[In|Out]putStreams from names.\nClass CompressorStreamFactory;\n// File name mapping code for the compression formats.\nClass FileNameUtil;\n// Compressor related exception\nClass CompressorException;\n", "des": "Provides a unified API and factories for dealing with compressed streams."}
{"index": 916, "repo": "commons-compress-1.23.0", "code": "package brotli\n\n// CompressorInputStream implementation to decode Brotli encoded stream.\nClass BrotliCompressorInputStream;\n// Utility code for the Brotli compression format.\nClass BrotliUtils;\n", "des": "Provides stream class for decompressing streams using the Brotli algorithm based on Google's Brotli decoder."}
{"index": 917, "repo": "commons-compress-1.23.0", "code": "package bzip2\n\n// An input stream that decompresses from the BZip2 format to be read as any other stream.\nClass BZip2CompressorInputStream;\n// An output stream that compresses into the BZip2 format into another stream.\nClass BZip2CompressorOutputStream;\n// Utility code for the BZip2 compression format.\nClass BZip2Utils;\n", "des": "Provides stream classes for compressing and decompressing streams using the BZip2 algorithm."}
{"index": 918, "repo": "commons-compress-1.23.0", "code": "package deflate\n\n// Deflate decompressor.\nClass DeflateCompressorInputStream;\n// Deflate compressor.\nClass DeflateCompressorOutputStream;\n// Parameters for the Deflate compressor.\nClass DeflateParameters;\n", "des": "Provides a stream classes that allow (de)compressing streams using the DEFLATE algorithm."}
{"index": 919, "repo": "commons-compress-1.23.0", "code": "package deflate64\n\n// Deflate64 decompressor.\nClass Deflate64CompressorInputStream;\n", "des": "Provides a stream that allows decompressing streams using the DEFLATE64(tm) algorithm."}
{"index": 920, "repo": "commons-compress-1.23.0", "code": "package gzip\n\n// Input stream that decompresses .gz files.\nClass GzipCompressorInputStream;\n// Compressed output stream using the gzip format.\nClass GzipCompressorOutputStream;\n// Parameters for the GZIP compressor.\nClass GzipParameters;\n// Utility code for the gzip compression format.\nClass GzipUtils;\n", "des": "Provides stream classes for compressing and decompressing streams using the GZip algorithm."}
{"index": 921, "repo": "commons-compress-1.23.0", "code": "package lz4\n\n// CompressorInputStream for the LZ4 block format.\nClass BlockLZ4CompressorInputStream;\n// CompressorOutputStream for the LZ4 block format.\nClass BlockLZ4CompressorOutputStream;\n// CompressorInputStream for the LZ4 frame format.\nClass FramedLZ4CompressorInputStream;\n// CompressorOutputStream for the LZ4 frame format.\nClass FramedLZ4CompressorOutputStream;\n// Parameters of the LZ4 frame format.\nClass FramedLZ4CompressorOutputStream.Parameters;\n", "des": "Provides stream classes for the LZ4 algorithm."}
{"index": 922, "repo": "commons-compress-1.23.0", "code": "package lz77support\n\n// Callback invoked while the compressor processes data.\nInterface LZ77Compressor.Callback;\n// Encapsulates code common to LZ77 decompressors.\nClass AbstractLZ77CompressorInputStream;\n// Helper class for compression algorithms that use the ideas of LZ77.\nClass LZ77Compressor;\n// Represents a back-reference.\nClass LZ77Compressor.BackReference;\n// Base class representing blocks the compressor may emit.\nClass LZ77Compressor.Block;\n", "des": "Provides utility classes for LZ77 based algorithms."}
{"index": 923, "repo": "commons-compress-1.23.0", "code": "package lzma\n\n// LZMA decompressor.\nClass LZMACompressorInputStream;\n// LZMA compressor.\nClass LZMACompressorOutputStream;\n// Utility code for the lzma compression format.\nClass LZMAUtils;\n", "des": "Provides stream classes using the \"stand-alone\" LZMA algorithm."}
{"index": 924, "repo": "commons-compress-1.23.0", "code": "package lzw\n\n// Generic LZW implementation.\nClass LZWInputStream;\n", "des": "Generic LZW implementation."}
{"index": 925, "repo": "commons-compress-1.23.0", "code": "package pack200\n\n// An input stream that decompresses from the Pack200 format to be read as any other stream.\nClass Pack200CompressorInputStream;\n// An output stream that compresses using the Pack200 format.\nClass Pack200CompressorOutputStream;\n// Utility methods for Pack200.\nClass Pack200Utils;\n// The different modes the Pack200 streams can use to wrap input and output.\nEnum Pack200Strategy;\n", "des": "Provides stream classes for compressing and decompressing streams using the Pack200 algorithm used to compress Java archives."}
{"index": 926, "repo": "commons-compress-1.23.0", "code": "package snappy\n\n// CompressorInputStream for the framing Snappy format.\nClass FramedSnappyCompressorInputStream;\n// CompressorOutputStream for the framing Snappy format.\nClass FramedSnappyCompressorOutputStream;\n// CompressorInputStream for the raw Snappy format.\nClass SnappyCompressorInputStream;\n// CompressorOutputStream for the raw Snappy format.\nClass SnappyCompressorOutputStream;\n// Dialects of the framing format that FramedSnappyCompressorInputStream can deal with.\nEnum FramedSnappyDialect;\n", "des": "Provides stream classes for the Snappy algorithm."}
{"index": 927, "repo": "commons-compress-1.23.0", "code": "package xz\n\n// XZ decompressor.\nClass XZCompressorInputStream;\n// XZ compressor.\nClass XZCompressorOutputStream;\n// Utility code for the xz compression format.\nClass XZUtils;\n", "des": "Provides stream classes for compressing and decompressing streams using the XZ algorithm."}
{"index": 928, "repo": "commons-compress-1.23.0", "code": "package z\n\n// Input stream that decompresses .Z files.\nClass ZCompressorInputStream;\n", "des": "Provides stream classes for decompressing streams using the \"compress\" algorithm used to write .Z files."}
{"index": 929, "repo": "commons-compress-1.23.0", "code": "package zstandard\n\n// CompressorInputStream implementation to decode Zstandard encoded stream.\nClass ZstdCompressorInputStream;\n// CompressorOutputStream implementation to create Zstandard encoded stream.\nClass ZstdCompressorOutputStream;\n// Utility code for the Zstandard compression format.\nClass ZstdUtils;\n", "des": "Provides stream class for (de)compressing streams using the Zstandard algorithm based on Zstandard JNI."}
{"index": 930, "repo": "commons-compress-1.23.0", "code": "package nls\n\n// This class retrieves strings from a resource bundle and returns them, formatting them with MessageFormat when required.\nClass Messages;\n", "des": "Internal package."}
{"index": 931, "repo": "commons-compress-1.23.0", "code": "package pack200\n\n// An AttributeLayoutElement is a part of an attribute layout and has one or more bands associated with it, which transmit the AttributeElement data for successive Attributes of this type.\nInterface NewAttributeBands.AttributeLayoutElement;\n// Archive is the main entry point to pack200 and represents a packed archive.\nClass Archive;\n// Attribute Definition bands define how any unknown attributes should be read by the decompressor.\nClass AttributeDefinitionBands;\n", "des": "Internal package."}
{"index": 932, "repo": "commons-compress-1.23.0", "code": "package unpack200\n\n// Interface for a class that can perform matching on flag values.\nInterface IMatcher;\n// Archive is the main entry point to unpack200.\nClass Archive;\n// Attribute definition bands are the set of bands used to define extra attributes transmitted in the archive.\nClass AttrDefinitionBands;\n// AttributeLayout defines a layout that describes how an attribute will be transmitted.\nClass AttributeLayout;\n", "des": "Internal package."}
{"index": 933, "repo": "commons-compress-1.23.0", "code": "package bytecode\n\n// AnnotationDefault class file attribute\nClass AnnotationDefaultAttribute;\n// Abstract superclass for Annotations attributes\nClass AnnotationsAttribute;\n// Class to represent the annotation structure for class file attributes\nClass AnnotationsAttribute.Annotation;\n// \nClass AnnotationsAttribute.ElementValue;\n// Abstract superclass for class file attributes\nClass Attribute;\n", "des": "Internal package."}
{"index": 934, "repo": "commons-compress-1.23.0", "code": "package forms\n\n// \nClass ByteCodeForm;\n// This class implements the form for bytecodes which have single byte operands.\nClass ByteForm;\n// This class implements the byte code form for those bytecodes which have class references (and only class references).\nClass ClassRefForm;\n// Abstract superclass of all classes that have class-specific references to constant pool information.\nClass ClassSpecificReferenceForm;\n", "des": "Internal package."}
{"index": 935, "repo": "commons-compress-1.23.0", "code": "package jar\n\n// The interface defining the API for converting a JAR file to an output stream in the Pack200 format.\nInterface Pack200.Packer;\n// The interface defining the API for converting a packed stream in the Pack200 format to a JAR file.\nInterface Pack200.Unpacker;\n// Class factory for Pack200.Packer and Pack200.Unpacker.\nClass Pack200;\n", "des": "Internal package."}
{"index": 936, "repo": "commons-compress-1.23.0", "code": "package parallel\n\n// Supplies input streams.\nInterface InputStreamSupplier;\n// Store intermediate payload in a scatter-gather scenario.\nInterface ScatterGatherBackingStore;\n// Supplies ScatterGatherBackingStore instances.\nInterface ScatterGatherBackingStoreSupplier;\n// ScatterGatherBackingStore that is backed by a path.\nClass FileBasedScatterGatherBackingStore;\n", "des": "Provides common API classes for parallel compression features."}
{"index": 937, "repo": "commons-compress-1.23.0", "code": "package utils\n\n// Used to consume bytes.\nInterface ByteUtils.ByteConsumer;\n// Used to supply bytes.\nInterface ByteUtils.ByteSupplier;\n// This interface provides statistics on the current decompression stream.\nInterface InputStreamStatistics;\n// Generic Archive utilities\nClass ArchiveUtils;\n// Reads bits from an InputStream.\nClass BitInputStream;\n// NIO backed bounded input stream for reading a predefined amount of data from.\nClass BoundedArchiveInputStream;\n", "des": "Provides utilities used internally by the compress library."}
{"index": 938, "repo": "spring-ws-3.0.10.RELEASE", "code": "package ws\n\n// Sub-interface of WebServiceMessage that can contain special Fault messages.\nInterface FaultAwareWebServiceMessage;\n// Represents a protocol-agnostic XML message.\nInterface WebServiceMessage;\n// The WebServiceMessageFactory serves as a factory for WebServiceMessages.\nInterface WebServiceMessageFactory;\n// Exception thrown when a WebServiceMessageFactory cannot parse the XML passed on to WebServiceMessageFactory.createWebServiceMessage(java.io.InputStream).\nClass InvalidXmlException;\n", "des": "Provides the core functionality of the Spring Web Services framework."}
{"index": 939, "repo": "spring-ws-3.0.10.RELEASE", "code": "package client\n\n// Exception thrown whenever an error occurs on the client-side.\nClass WebServiceClientException;\n// Thrown by SimpleFaultMessageResolver when the response message has a fault.\nClass WebServiceFaultException;\n// Exception thrown whenever an I/O error occurs on the client-side.\nClass WebServiceIOException;\n// Exception thrown whenever a transformation error occurs on the client-side.\nClass WebServiceTransformerException;\n", "des": "Contains classes for client-side Spring-WS support, allowing for Spring-style Web service access."}
{"index": 940, "repo": "spring-ws-3.0.10.RELEASE", "code": "package core\n\n// Defines the interface for objects than can resolve fault WebServiceMessages.\nInterface FaultMessageResolver;\n// Callback interface for extracting a result object from a Source instance.\nInterface SourceExtractor<T>;\n// Generic callback interface for code that operates on a WebServiceMessage.\nInterface WebServiceMessageCallback;\n// Callback interface for extracting a result object from a WebServiceMessage instance.\nInterface WebServiceMessageExtractor<T>;\n", "des": "Core package of the Spring-WS client-side support."}
{"index": 941, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Convenient super class for application classes that need Web service access.\nClass WebServiceGatewaySupport;\n", "des": "Convenient super class for application classes that need Web service access."}
{"index": 942, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Base class for WebServiceTemplate and other WS-accessing helpers.\nClass WebServiceAccessor;\n", "des": "Classes supporting the org.springframework.ws.client.core package."}
{"index": 943, "repo": "spring-ws-3.0.10.RELEASE", "code": "package destination\n\n// Strategy interface for providing a WebServiceTemplate destination URI at runtime.\nInterface DestinationProvider;\n// Abstract base class for DestinationProvider implementations that cache destination URI.\nClass AbstractCachingDestinationProvider;\n// Implementation of the DestinationProvider that resolves a destination URI from a WSDL file.\nClass Wsdl11DestinationProvider;\n// Thrown by a DestinationProvider when it cannot provide a destination.\nClass DestinationProvisionException;\n", "des": "Provides the DestinationProvider interface."}
{"index": 944, "repo": "spring-ws-3.0.10.RELEASE", "code": "package interceptor\n\n// Workflow interface that allows for customized client-side message interception.\nInterface ClientInterceptor;\n// Abstract base class for ClientInterceptor implementations that validate part of the message using a schema.\nClass AbstractValidatingInterceptor;\n// Default implementation of the ClientInterceptor interface, for simplified implementation of pre-only/post-only interceptors.\nClass ClientInterceptorAdapter;\n", "des": "Provides the ClientInterceptor interface, and validating interceptors."}
{"index": 945, "repo": "spring-ws-3.0.10.RELEASE", "code": "package config\n\n// NamespaceHandler for the 'web-services' namespace.\nClass WebServicesNamespaceHandler;\n", "des": "Provides an namespace handler for the Spring Web Services namespace."}
{"index": 946, "repo": "spring-ws-3.0.10.RELEASE", "code": "package context\n\n// Context holder for message requests.\nInterface MessageContext;\n// Abstract base class for MessageContext instances.\nClass AbstractMessageContext;\n// Default implementation of MessageContext.\nClass DefaultMessageContext;\n", "des": "Contains the MessageContext interface and implementations thereof."}
{"index": 947, "repo": "spring-ws-3.0.10.RELEASE", "code": "package mime\n\n// Represents an attachment to a MimeMessage\nInterface Attachment;\n// Represents a Web service message with MIME attachments.\nInterface MimeMessage;\n// Abstract implementation of the MimeMessage interface.\nClass AbstractMimeMessage;\n// Exception thrown when a MIME attachment could not be accessed.\nClass AttachmentException;\n", "des": "Provides MIME functionality for use the Spring Web Services framework."}
{"index": 948, "repo": "spring-ws-3.0.10.RELEASE", "code": "package pox\n\n// Defines the contract for Plain Old XML messages.\nInterface PoxMessage;\n// Specific subclass of WebServiceMessageException for Plain Old XML messages.\nClass PoxMessageException;\n", "des": "Provides the Plain Old XML (POX) functionality of the Spring Web Services framework."}
{"index": 949, "repo": "spring-ws-3.0.10.RELEASE", "code": "package dom\n\n// Implementation of the PoxMessage interface that is based on a DOM Document.\nClass DomPoxMessage;\n// Implementation of the WebServiceMessageFactory interface that creates a DomPoxMessage.\nClass DomPoxMessageFactory;\n// Specific subclass of PoxMessageException for DOM Plain Old XML messages.\nClass DomPoxMessageException;\n", "des": "Contains an implementation of the POX interfaces that is based on DOM."}
{"index": 950, "repo": "spring-ws-3.0.10.RELEASE", "code": "package server\n\n// Interface that must be implemented for each endpoint type to handle a message request.\nInterface EndpointAdapter;\n// Defines the interface for objects than can resolve exceptions thrown during endpoint execution.\nInterface EndpointExceptionResolver;\n// Workflow interface that allows for customized endpoint invocation chains.\nInterface EndpointInterceptor;\n// Defines a mapping between message requests and endpoint objects.\nInterface EndpointMapping;\n", "des": "Contains classes for server-side Spring-WS support."}
{"index": 951, "repo": "spring-ws-3.0.10.RELEASE", "code": "package endpoint\n\n// Defines the basic contract for Web Services interested in the entire message payload.\nInterface MessageEndpoint;\n// Defines the basic contract for Web Services interested in just the message payload.\nInterface PayloadEndpoint;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractDom4jPayloadEndpoint;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractDomPayloadEndpoint;\n", "des": "Provides standard endpoint, and EndpointAdapter implementations."}
{"index": 952, "repo": "spring-ws-3.0.10.RELEASE", "code": "package adapter\n\n// Abstract base class for EndpointAdapter implementations that support MethodEndpoints.\nClass AbstractMethodEndpointAdapter;\n// Default extension of AbstractMethodEndpointAdapter with support for pluggable argument resolvers and return value handlers.\nClass DefaultMethodEndpointAdapter;\n// as of Spring Web Services 2.0, in favor of DefaultMethodEndpointAdapter and MarshallingPayloadMethodProcessor.\nClass GenericMarshallingMethodEndpointAdapter;\n", "des": "Provides miscellaneous EndpointAdapter implementations."}
{"index": 953, "repo": "spring-ws-3.0.10.RELEASE", "code": "package method\n\n// Strategy interface used to resolve method parameters into arguments.\nInterface MethodArgumentResolver;\n// Strategy interface used to handle method return values.\nInterface MethodReturnValueHandler;\n// Abstract base class for MethodArgumentResolver and MethodReturnValueHandler implementations based on RequestPayload and ResponsePayload annotations.\nClass AbstractPayloadMethodProcessor;\n", "des": "Provides the MethodArgumentResolver and MethodReturnValueHandler abstractions, and various implementations thereof."}
{"index": 954, "repo": "spring-ws-3.0.10.RELEASE", "code": "package dom\n\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports dom4j elements.\nClass Dom4jPayloadMethodProcessor;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports W3C DOM elements.\nClass DomPayloadMethodProcessor;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports JDOM elements.\nClass JDomPayloadMethodProcessor;\n", "des": "Provides DOM-based implementations of the MethodArgumentResolver and MethodReturnValueHandler interfaces."}
{"index": 955, "repo": "spring-ws-3.0.10.RELEASE", "code": "package jaxb\n\n// Abstract base class for MethodArgumentResolver and MethodReturnValueHandler implementations that use JAXB2.\nClass AbstractJaxb2PayloadMethodProcessor;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports JAXBElement objects.\nClass JaxbElementPayloadMethodProcessor;\n", "des": "Provides JAXB2-based implementations of the MethodArgumentResolver and MethodReturnValueHandler interfaces."}
{"index": 956, "repo": "spring-ws-3.0.10.RELEASE", "code": "package annotation\n\n// Indicates that an annotated class is an \"Endpoint\" (e.g.\nAnnotation Type Endpoint;\n// Sets up a namespace to be used in an @Endpoint method, class, or package.\nAnnotation Type Namespace;\n// Sets the namespaces to be used in an @Endpoint method, class, or package.\nAnnotation Type Namespaces;\n// Marks an endpoint method as the handler for an incoming request.\nAnnotation Type PayloadRoot;\n// Marks an endpoint method as containing multiple PayloadRoots.\nAnnotation Type PayloadRoots;\n", "des": "JDK 1.5+ annotations for Spring-WS endpoints."}
{"index": 957, "repo": "spring-ws-3.0.10.RELEASE", "code": "package interceptor\n\n// Abstract base class for EndpointInterceptor implementations that validate part of the message using a schema.\nClass AbstractValidatingInterceptor;\n// Implementation of the SmartEndpointInterceptor interface that delegates to a delegate EndpointInterceptor.\nClass DelegatingSmartEndpointInterceptor;\n// Default implementation of the EndpointInterceptor interface, for simplified implementation of pre-only/post-only interceptors.\nClass EndpointInterceptorAdapter;\n", "des": "Provides miscellaneous endpoints EndpointInterceptor implementations."}
{"index": 958, "repo": "spring-ws-3.0.10.RELEASE", "code": "package mapping\n\n// Abstract base for EndpointMapping implementations that map classes tagged with an annotation.\nClass AbstractAnnotationMethodEndpointMapping<T>;\n// Abstract base class for EndpointMapping implementations.\nClass AbstractEndpointMapping;\n// Abstract base class for endpoint mapping that are based on a Map.\nClass AbstractMapBasedEndpointMapping;\n// Abstract base class for MethodEndpoint mappings.\nClass AbstractMethodEndpointMapping<T>;\n", "des": "Provides miscellaneous endpoints EndpointMapping implementations."}
{"index": 959, "repo": "spring-ws-3.0.10.RELEASE", "code": "package jaxb\n\n// Implementation of the EndpointMapping interface that uses the JAXB2 XmlRootElement annotation to map methods to request payload root elements.\nClass XmlRootElementEndpointMapping;\n", "des": "Provides JAXB2-based EndpointMapping implementations."}
{"index": 960, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Helper class for handling @Namespace annotations.\nClass NamespaceUtils;\n// Helper class for determining the root qualified name of a Web Service payload.\nClass PayloadRootUtils;\n", "des": "Provides helper classes for EndpointAdapter, EndpointInteceptor, and EndpointMapping implementations."}
{"index": 961, "repo": "spring-ws-3.0.10.RELEASE", "code": "package soap\n\n// Represents the Body element in a SOAP message.\nInterface SoapBody;\n// The base interface for all elements that are contained in a SOAP message.\nInterface SoapElement;\n// Represents the Envelope element in a SOAP message.\nInterface SoapEnvelope;\n// Represents the Fault element in the body of a SOAP message.\nInterface SoapFault;\n// Represents the detail element in a SOAP fault.\nInterface SoapFaultDetail;\n", "des": "Provides the SOAP functionality of the Spring Web Services framework."}
{"index": 962, "repo": "spring-ws-3.0.10.RELEASE", "code": "package addressing\n\n// Exception thrown in case on WS-Addressing errors.\nClass AddressingException;\n", "des": "Provides WS-Addressing implementation classes."}
{"index": 963, "repo": "spring-ws-3.0.10.RELEASE", "code": "package core\n\n// Represents an Endpoint Reference, as defined in the WS-Addressing specification.\nClass EndpointReference;\n// Represents a set of Message Addressing Properties, as defined in the WS-Addressing specification.\nClass MessageAddressingProperties;\n", "des": "Core package for WS-Addressing support."}
{"index": 964, "repo": "spring-ws-3.0.10.RELEASE", "code": "package messageid\n\n// Strategy interface that encapsulates the creation and validation of WS-Addressing MessageIDs.\nInterface MessageIdStrategy;\n// Implementation of the MessageIdStrategy interface that uses a UUID to generate a Message Id.\nClass UuidMessageIdStrategy;\n", "des": "Contains various strategies for generating WS-Addressing MessageIDs."}
{"index": 965, "repo": "spring-ws-3.0.10.RELEASE", "code": "package server\n\n// Abstract base class for WS-Addressing Action-mapped EndpointMapping implementations.\nClass AbstractActionEndpointMapping;\n// Abstract base class for WS-Addressing Action-mapped EndpointMapping implementations that map to MethodEndpoints.\nClass AbstractActionMethodEndpointMapping;\n// Abstract base class for EndpointMapping implementations that handle WS-Addressing.\nClass AbstractAddressingEndpointMapping;\n", "des": "Contains servers-side WS-Addressing support, in the form of EndpointMappings."}
{"index": 966, "repo": "spring-ws-3.0.10.RELEASE", "code": "package version\n\n// Defines the contract for a specific version of the WS-Addressing specification.\nInterface AddressingVersion;\n// Abstract base class for AddressingVersion implementations.\nClass AbstractAddressingVersion;\n// Implements WS-Addressing 1.0 (May 2006).\nClass Addressing10;\n// Implements the August 2004 edition of the WS-Addressing specification.\nClass Addressing200408;\n", "des": "Contains abstractions over various versions of the WS-Addressing specification."}
{"index": 967, "repo": "spring-ws-3.0.10.RELEASE", "code": "package axiom\n\n// AXIOM-specific implementation of the SoapMessage interface.\nClass AxiomSoapMessage;\n// Axiom-specific implementation of the WebServiceMessageFactory interface.\nClass AxiomSoapMessageFactory;\n// \nClass AxiomAttachmentException;\n// \nClass AxiomSoapBodyException;\n// \nClass AxiomSoapElementException;\n// \nClass AxiomSoapEnvelopeException;\n// \nClass AxiomSoapFaultException;\n// \nClass AxiomSoapHeaderException;\n// \nClass AxiomSoapMessageCreationException;\n// \nClass AxiomSoapMessageException;\n", "des": "AXis Object Model (AXIOM) support for Spring-WS' soap message infrastructure."}
{"index": 968, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Collection of generic utility methods to work with Axiom.\nClass AxiomUtils;\n", "des": "Support classes for working with the AXis Object Model (AXIOM)."}
{"index": 969, "repo": "spring-ws-3.0.10.RELEASE", "code": "package client\n\n// Thrown by SoapFaultMessageResolver when the response message has a fault.\nClass SoapFaultClientException;\n", "des": "Contains classes for SOAP-specific client-side Spring-WS support."}
{"index": 970, "repo": "spring-ws-3.0.10.RELEASE", "code": "package core\n\n// WebServiceMessageCallback implementation that sets the SOAP Action header on the message.\nClass SoapActionCallback;\n// Simple fault resolver that simply throws a SoapFaultClientException when a fault occurs.\nClass SoapFaultMessageResolver;\n", "des": "Contains core classes for SOAP-specific client-side Spring-WS support."}
{"index": 971, "repo": "spring-ws-3.0.10.RELEASE", "code": "package saaj\n\n// SAAJ-specific implementation of the SoapMessage interface.\nClass SaajSoapMessage;\n// SAAJ-specific implementation of the WebServiceMessageFactory.\nClass SaajSoapMessageFactory;\n// \nClass SaajAttachmentException;\n// \nClass SaajSoapBodyException;\n// \nClass SaajSoapElementException;\n// \nClass SaajSoapEnvelopeException;\n// \nClass SaajSoapFaultException;\n// \nClass SaajSoapHeaderException;\n// \nClass SaajSoapMessageCreationException;\n// \nClass SaajSoapMessageException;\n", "des": "SOAP with Attachments API for Java (SAAJ) support for Spring-WS soap message infrastructure."}
{"index": 972, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// SAX ContentHandler that transforms callback calls to the creation of SAAJ Nodes and SOAPElements.\nClass SaajContentHandler;\n// Collection of generic utility methods to work with SAAJ.\nClass SaajUtils;\n// SAX XMLReader that reads from a SAAJ Node.\nClass SaajXmlReader;\n", "des": "Support classes for working with the SOAP with Attachments API for Java (SAAJ)."}
{"index": 973, "repo": "spring-ws-3.0.10.RELEASE", "code": "package security\n\n// Interceptor base class for interceptors that handle WS-Security.\nClass AbstractWsSecurityInterceptor;\n// Exception indicating that something went wrong during WS-Security executions.\nClass WsSecurityException;\n// Exception indicating that a WS-Security executions should result in a SOAP Fault.\nClass WsSecurityFaultException;\n// Exception indicating that something went wrong during the securement of a message.\nClass WsSecuritySecurementException;\n", "des": "Provides WS-Security implementation classes."}
{"index": 974, "repo": "spring-ws-3.0.10.RELEASE", "code": "package callback\n\n// Abstract implementation of a CallbackHandler.\nClass AbstractCallbackHandler;\n// Represents a chain of CallbackHandlers.\nClass CallbackHandlerChain;\n// Underlying security services instantiate and pass a CleanupCallback to the handle method of a CallbackHandler to clean up security state.\nClass CleanupCallback;\n", "des": "Contains generic CallbackHandler implementations."}
{"index": 975, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Spring factory bean for an array of KeyManagers.\nClass KeyManagersFactoryBean;\n// Spring factory bean for a KeyStore.\nClass KeyStoreFactoryBean;\n// Generic utility methods for dealing with KeyStore objects.\nClass KeyStoreUtils;\n// Generic utility methods for Spring Security\nClass SpringSecurityUtils;\n// Spring factory bean for an array of TrustManagers.\nClass TrustManagersFactoryBean;\n", "des": "Contains support classes for handling WS-Security messages."}
{"index": 976, "repo": "spring-ws-3.0.10.RELEASE", "code": "package wss4j2\n\n// A WS-Security endpoint interceptor based on Apache's WSS4J.\nClass Wss4jSecurityInterceptor;\n// WSS4J-specific version of the WsSecurityFaultException.\nClass Wss4jSecurityFaultException;\n// WSS4J-specific version of the WsSecuritySecurementException.\nClass Wss4jSecuritySecurementException;\n// WSS4J-specific version of the WsSecurityValidationException.\nClass Wss4jSecurityValidationException;\n", "des": "Contains classes for using the Apache WSS4J 2.0 WS-Security implementation within Spring-WS."}
{"index": 977, "repo": "spring-ws-3.0.10.RELEASE", "code": "package callback\n\n// Abstract base class for CallbackHandler implementations that handle WSPasswordCallback callbacks.\nClass AbstractWsPasswordCallbackHandler;\n// Callback handler that uses Java Security KeyStores to handle cryptographic callbacks.\nClass KeyStoreCallbackHandler;\n// Simple callback handler that validates passwords against a in-memory Properties object.\nClass SimplePasswordValidationCallbackHandler;\n", "des": "Contains CallbackHandler implementations for WSS4J 2.0."}
{"index": 978, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Spring factory bean for a WSS4J Crypto.\nClass CryptoFactoryBean;\n", "des": "Contains support classes for working with WSS4J 2.0."}
{"index": 979, "repo": "spring-ws-3.0.10.RELEASE", "code": "package xwss\n\n// WS-Security endpoint interceptor that is based on Sun's XML and Web Services Security package (XWSS).\nClass XwsSecurityInterceptor;\n// XWSS-specific version of the WsSecurityFaultException.\nClass XwsSecurityFaultException;\n// XWSS-specific version of the WsSecuritySecurementException.\nClass XwsSecuritySecurementException;\n// XWSS-specific version of the WsSecurityValidationException.\nClass XwsSecurityValidationException;\n", "des": "Contains classes for using the XML and WebServices Security WS-Security implementation within Spring-WS."}
{"index": 980, "repo": "spring-ws-3.0.10.RELEASE", "code": "package callback\n\n// Default callback handler that handles cryptographic callback.\nClass CryptographyCallbackHandler;\n// A default implementation of a TimestampValidationCallback.TimestampValidator.\nClass DefaultTimestampValidator;\n// Callback handler that uses Java Security KeyStores to handle cryptographic callbacks.\nClass KeyStoreCallbackHandler;\n// Mock implementation of of callback handler that accepts all password and certificate validation callbacks.\nClass MockValidationCallbackHandler;\n", "des": "Contains CallbackHandler implementations for XWSS."}
{"index": 981, "repo": "spring-ws-3.0.10.RELEASE", "code": "package jaas\n\n// Abstract base class for integrating with JAAS.\nClass AbstractJaasValidationCallbackHandler;\n// Provides basic support for integrating with JAAS and certificates.\nClass JaasCertificateValidationCallbackHandler;\n// Provides basic support for integrating with JAAS and plain text passwords.\nClass JaasPlainTextPasswordValidationCallbackHandler;\n", "des": "Contains CallbackHandler implementations for XWSS that use the Java Authentication and Authorization Service (JAAS)."}
{"index": 982, "repo": "spring-ws-3.0.10.RELEASE", "code": "package server\n\n// SOAP-specific extension of the SmartEndpointInterceptor interface.\nInterface SmartSoapEndpointInterceptor;\n// SOAP-specific extension of the EndpointInterceptor interface.\nInterface SoapEndpointInterceptor;\n// SOAP-specific sub-interface of the EndpointMapping.\nInterface SoapEndpointMapping;\n// SOAP-specific subclass of the EndpointInvocationChain.\nClass SoapEndpointInvocationChain;\n// SOAP-specific subclass of the MessageDispatcher.\nClass SoapMessageDispatcher;\n", "des": "Contains classes for SOAP-specific server-side Spring-WS support."}
{"index": 983, "repo": "spring-ws-3.0.10.RELEASE", "code": "package endpoint\n\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractFaultCreatingValidatingMarshallingPayloadEndpoint;\n// Abstract base class for SOAP-based EndpointExceptionResolver implementations that depend on SoapFaultDefinition.\nClass AbstractSoapFaultDefinitionExceptionResolver;\n// Simple, SOAP-specific EndpointExceptionResolver implementation that stores the exception's message as the fault string.\nClass SimpleSoapExceptionResolver;\n", "des": "Provides EndpointAdapter, EndpointMapping, and EndpointExceptionResolver implementations for SOAP."}
{"index": 984, "repo": "spring-ws-3.0.10.RELEASE", "code": "package annotation\n\n// Enumeration that represents the standard SOAP Fault codes for use with the JDK 1.5+ SoapFault annotation.\nEnum FaultCode;\n// Marks an endpoint method as the handler for an incoming request.\nAnnotation Type SoapAction;\n// Marks an endpoint method as containing multiple SoapActions.\nAnnotation Type SoapActions;\n// Marks an exception class with the fault elements that should be returned whenever this exception is thrown.\nAnnotation Type SoapFault;\n", "des": "JDK 1.5+ annotations for Spring-WS SOAP endpoints."}
{"index": 985, "repo": "spring-ws-3.0.10.RELEASE", "code": "package interceptor\n\n// Subclass of AbstractValidatingInterceptor that creates a SOAP Fault whenever the request message cannot be validated.\nClass AbstractFaultCreatingValidatingInterceptor;\n// Implementation of the SmartSoapEndpointInterceptor interface that delegates to a delegate SoapEndpointInterceptor.\nClass DelegatingSmartSoapEndpointInterceptor;\n", "des": "Provides miscellaneous endpoints EndpointInterceptor implementations for SOAP purposes."}
{"index": 986, "repo": "spring-ws-3.0.10.RELEASE", "code": "package mapping\n\n// EndpointMapping implement that adds SOAP actors or roles to a delegate endpoint.\nClass DelegatingSoapEndpointMapping;\n// Implementation of the EndpointMapping interface that uses the SoapAction annotation to map methods to the request SOAPAction header.\nClass SoapActionAnnotationMethodEndpointMapping;\n// Implementation of the EndpointMapping interface to map from SOAPAction headers to endpoint beans.\nClass SoapActionEndpointMapping;\n", "des": "Provides miscellaneous endpoints EndpointMapping implementations for SOAP purposes."}
{"index": 987, "repo": "spring-ws-3.0.10.RELEASE", "code": "package soap11\n\n// Subinterface of SoapBody that exposes SOAP 1.1 functionality.\nInterface Soap11Body;\n// Subinterface of SoapFault that exposes SOAP 1.1 functionality.\nInterface Soap11Fault;\n// Subinterface of SoapHeader that exposes SOAP 1.1 functionality.\nInterface Soap11Header;\n", "des": "Contains interfaces specific to SOAP 1.1."}
{"index": 988, "repo": "spring-ws-3.0.10.RELEASE", "code": "package soap12\n\n// Subinterface of SoapBody that exposes SOAP 1.2 functionality.\nInterface Soap12Body;\n// Subinterface of SoapFault that exposes SOAP 1.2 functionality.\nInterface Soap12Fault;\n// Subinterface of SoapHeader that exposes SOAP 1.2 functionality.\nInterface Soap12Header;\n", "des": "Contains interfaces specific to SOAP 1.2."}
{"index": 989, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Contains various utility methods for handling SOAP messages.\nClass SoapUtils;\n", "des": "Classes supporting the org.springframework.ws.soap package."}
{"index": 990, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Helper class for for loading default implementations of an interface.\nClass DefaultStrategiesHelper;\n// Helper class for endpoints and endpoint mappings that use marshalling.\nClass MarshallingUtils;\n// Miscellaneous utilities for web applications.\nClass WebUtils;\n", "des": "Provides general helper classes for Spring Web Services."}
{"index": 991, "repo": "spring-ws-3.0.10.RELEASE", "code": "package client\n\n// Defines the contract for matching requests to expectations.\nInterface RequestMatcher;\n// Allows for setting up expectations on XPath expressions.\nInterface RequestXPathExpectations;\n// Allows for setting up responses and additional expectations.\nInterface ResponseActions;\n// Allows for creating up responses.\nInterface ResponseCreator;\n// Mock implementation of WebServiceMessageSender.\nClass MockWebServiceMessageSender;\n", "des": "Provides a testing framework for client-side Web service testing."}
{"index": 992, "repo": "spring-ws-3.0.10.RELEASE", "code": "package server\n\n// Creates request messages.\nInterface RequestCreator;\n// Allows for setting up expectation about response messages.\nInterface ResponseActions;\n// Defines the contract for matching response messages to expectations.\nInterface ResponseMatcher;\n// Allows for setting up expectations on XPath expressions.\nInterface ResponseXPathExpectations;\n// Main entry point for server-side Web service testing.\nClass MockWebServiceClient;\n// Factory methods for RequestCreator classes.\nClass RequestCreators;\n", "des": "Provides a testing framework for server-side Web service testing."}
{"index": 993, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// JUnit independent assertion class.\nClass AssertionErrors;\n// Helper class for for loading default implementations of an interface.\nClass MockStrategiesHelper;\n// Subclass of AssertionError that also contains a Source for more context.\nClass SourceAssertionError;\n", "des": "Support classes for the testing framework, used by the classes in the org.springframework.ws.test.client and org.springframework.ws.test.server packages."}
{"index": 994, "repo": "spring-ws-3.0.10.RELEASE", "code": "package creator\n\n// Defines the general contract for creating messages used in test scenarios.\nInterface WebServiceMessageCreator;\n// Abstract base class for the WebServiceMessageCreator interface.\nClass AbstractMessageCreator;\n// Implementation of WebServiceMessageCreator that creates a request based on a Source.\nClass PayloadMessageCreator;\n// Implementation of WebServiceMessageCreator that creates a request based on a SOAP envelope Source.\nClass SoapEnvelopeMessageCreator;\n", "des": "Provides the generic WebServiceMessageCreator interface, and implementations."}
{"index": 995, "repo": "spring-ws-3.0.10.RELEASE", "code": "package matcher\n\n// Defines the general contract for matching messages to expectations.\nInterface WebServiceMessageMatcher;\n// Abstract base class for SOAP-specific WebServiceMessageMatcher implementations.\nClass AbstractSoapMessageMatcher;\n// Implementation of WebServiceMessageMatcher based on XMLUnit's Diff.\nClass DiffMatcher;\n// Matches Source payloads.\nClass PayloadDiffMatcher;\n// Uses the XmlValidator to validate request payload.\nClass SchemaValidatingMatcher;\n", "des": "Provides the generic WebServiceMessageMatcher interface, and implementations."}
{"index": 996, "repo": "spring-ws-3.0.10.RELEASE", "code": "package transport\n\n// Sub-interface of WebServiceConnection that is aware of any server-side situations where an endpoint is not found.\nInterface EndpointAwareWebServiceConnection;\n// Sub-interface of WebServiceConnection that is aware of any Fault messages received.\nInterface FaultAwareWebServiceConnection;\n// Interface to define access to header information for certain WebServiceConnection implementations.\nInterface HeadersAwareReceiverWebServiceConnection;\n", "des": "Contains the TransportRequest and TransportResponse interfaces."}
{"index": 997, "repo": "spring-ws-3.0.10.RELEASE", "code": "package context\n\n// Strategy interface for determining the current WebServiceConnection.\nInterface TransportContext;\n// Default implementation of the TransportContext interface.\nClass DefaultTransportContext;\n// Simple holder class that associates a TransportContext instance with the current thread.\nClass TransportContextHolder;\n", "des": "Abstraction for determining the current TransportInputStream and TransportOutputStream."}
{"index": 998, "repo": "spring-ws-3.0.10.RELEASE", "code": "package http\n\n// Declares HTTP-specific transport constants.\nInterface HttpTransportConstants;\n// Abstract base class for WebServiceConnection implementations that send request over HTTP.\nClass AbstractHttpSenderConnection;\n// Abstract base class for WebServiceMessageSender implementations that use HTTP.\nClass AbstractHttpWebServiceMessageSender;\n// Implementation of the WebServiceConnection interface that is based on the Spring 3 ClientHttpRequest and ClientHttpResponse.\nClass ClientHttpRequestConnection;\n", "des": "Package providing support for handling messages via HTTP."}
{"index": 999, "repo": "spring-ws-3.0.10.RELEASE", "code": "package jms\n\n// Declares JMS-specific transport constants.\nInterface JmsTransportConstants;\n// Convenience base class for JMS server-side transport objects.\nClass JmsMessageReceiver;\n// WebServiceMessageSender implementation that uses JMS Messages.\nClass JmsMessageSender;\n// Implementation of WebServiceConnection that is used for server-side JMS access.\nClass JmsReceiverConnection;\n// Implementation of WebServiceConnection that is used for client-side JMS access.\nClass JmsSenderConnection;\n", "des": "Package providing support for handling messages via JMS."}
{"index": 1000, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Collection of utility methods to work with JMS transports.\nClass JmsTransportUtils;\n", "des": "Classes supporting the org.springframework.ws.transport.jms package."}
{"index": 1001, "repo": "spring-ws-3.0.10.RELEASE", "code": "package mail\n\n// Declares Mail-specific transport constants.\nInterface MailTransportConstants;\n// Server-side component for receiving email messages using JavaMail.\nClass MailMessageReceiver;\n// WebServiceMessageSender implementation that uses Mail MimeMessages.\nClass MailMessageSender;\n// Implementation of WebServiceConnection that is used for server-side Mail access.\nClass MailReceiverConnection;\n", "des": "Package providing support for handling messages via email."}
{"index": 1002, "repo": "spring-ws-3.0.10.RELEASE", "code": "package monitor\n\n// Defines the contract for objects that monitor a given folder for new messages.\nInterface MonitoringStrategy;\n// Abstract base class for the MonitoringStrategy interface.\nClass AbstractMonitoringStrategy;\n// Implementation of the MonitoringStrategy interface that uses the IMAP IDLE command for asynchronous message detection.\nClass ImapIdleMonitoringStrategy;\n// Implementation of the MonitoringStrategy interface that uses a simple polling mechanism.\nClass PollingMonitoringStrategy;\n", "des": "Provides the MonitoringStrategy interface and implementations."}
{"index": 1003, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Collection of utility methods to work with Mail transports.\nClass MailTransportUtils;\n", "des": "Classes supporting the org.springframework.ws.transport.mail package."}
{"index": 1004, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Abstract base class for asynchronous standalone, server-side transport objects.\nClass AbstractAsyncStandaloneMessageReceiver;\n// Abstract base class for standalone, server-side transport objects.\nClass AbstractStandaloneMessageReceiver;\n// Adapts an Enumeration to follow the interface of Iterator.\nClass EnumerationIterator<T>;\n// Base class for server-side transport objects which have a predefined WebServiceMessageReceiver.\nClass SimpleWebServiceMessageReceiverObjectSupport;\n", "des": "Classes supporting the org.springframework.ws.transport package."}
{"index": 1005, "repo": "spring-ws-3.0.10.RELEASE", "code": "package xmpp\n\n// Declares XMPP-specific transport constants.\nInterface XmppTransportConstants;\n// Server-side component for receiving XMPP (Jabber) messages.\nClass XmppMessageReceiver;\n// WebServiceMessageSender implementation that uses XMPP Messages.\nClass XmppMessageSender;\n// Implementation of WebServiceConnection that is used for server-side XMPP access.\nClass XmppReceiverConnection;\n// Implementation of WebServiceConnection that is used for client-side XMPP access.\nClass XmppSenderConnection;\n", "des": "Package providing support for handling messages via xmpp."}
{"index": 1006, "repo": "spring-ws-3.0.10.RELEASE", "code": "package wsdl\n\n// Represents an abstraction for WSDL definitions.\nInterface WsdlDefinition;\n// Base class for all WSDL definition exceptions.\nClass WsdlDefinitionException;\n", "des": "Provides the WSDL functionality of the Spring Web Services framework."}
{"index": 1007, "repo": "spring-ws-3.0.10.RELEASE", "code": "package wsdl11\n\n// Models a WSDL 1.1-specific WsdlDefinition.\nInterface Wsdl11Definition;\n// Convenient implementation of Wsdl11Definition that creates a SOAP 1.1 or 1.2 binding based on naming conventions in one or more inlined XSD schemas.\nClass DefaultWsdl11Definition;\n// Implementation of the Wsdl11Definition that uses a provider-based mechanism to populate a WSDL4J Definition.\nClass ProviderBasedWsdl4jDefinition;\n// The default Wsdl11Definition implementation.\nClass SimpleWsdl11Definition;\n", "des": "Contains interfaces and classes specific to WSDL 1.1."}
{"index": 1008, "repo": "spring-ws-3.0.10.RELEASE", "code": "package provider\n\n// Strategy for adding Bindings to a Definition.\nInterface BindingsProvider;\n// Strategy for adding Imports to a Definition.\nInterface ImportsProvider;\n// Strategy for adding Messages to a Definition.\nInterface MessagesProvider;\n// Strategy for adding PortTypes to a Definition.\nInterface PortTypesProvider;\n// Strategy for adding Services to a Definition.\nInterface ServicesProvider;\n// Strategy for adding Types to a Definition.\nInterface TypesProvider;\n", "des": "Provides a contribution strategy for WSDL definitions."}
{"index": 1009, "repo": "spring-ws-3.0.10.RELEASE", "code": "package xml\n\n// \nClass DocumentBuilderFactoryUtils;\n// Helper class used to find the current version of JAXP.\nClass JaxpVersion;\n// \nClass XMLInputFactoryUtils;\n// Root of the hierarchy of XML exception.\nClass XmlException;\n", "des": "Provides classes for XML handling: version detection and a base XML exception class."}
{"index": 1010, "repo": "spring-ws-3.0.10.RELEASE", "code": "package dom\n\n// SAX ContentHandler that transforms callback calls to DOM Nodes.\nClass DomContentHandler;\n", "des": "Provides classes that help with DOM: the Document Object Model."}
{"index": 1011, "repo": "spring-ws-3.0.10.RELEASE", "code": "package namespace\n\n// PropertyEditor for javax.xml.namespace.QName, to populate a property of type QName from a String value.\nClass QNameEditor;\n// Helper class for using QName.\nClass QNameUtils;\n// Simple javax.xml.namespace.NamespaceContext implementation.\nClass SimpleNamespaceContext;\n", "des": "Provides classes that help with XML Namespace processing."}
{"index": 1012, "repo": "spring-ws-3.0.10.RELEASE", "code": "package sax\n\n// Abstract base class for SAX XMLReader implementations.\nClass AbstractXmlReader;\n// Convenient utility methods for dealing with SAX.\nClass SaxUtils;\n", "des": "Provides classes that help with SAX: the Simple API for XML."}
{"index": 1013, "repo": "spring-ws-3.0.10.RELEASE", "code": "package transform\n\n// Callback interface invoked on each sort of Result.\nInterface TraxUtils.ResultCallback;\n// Callback interface invoked on each sort of Source.\nInterface TraxUtils.SourceCallback;\n// Convenient subclass of SAXSource that reads from a Spring Resource.\nClass ResourceSource;\n// Convenient subclass of StreamResult that writes to a StringWriter.\nClass StringResult;\n// Convenient subclass of StreamSource that reads from a StringReader.\nClass StringSource;\n// \nClass TransformerFactoryUtils;\n", "des": "Provides classes that help with XML transformations."}
{"index": 1014, "repo": "spring-ws-3.0.10.RELEASE", "code": "package validation\n\n// Subinterface of ErrorHandler that allows the registered errors to be retrieved.\nInterface ValidationErrorHandler;\n// Simple processor that validates a given Source.\nInterface XmlValidator;\n// \nClass SchemaFactoryUtils;\n// Convenient utility methods for loading of Schema objects, performing standard handling of input streams.\nClass SchemaLoaderUtils;\n// \nClass XMLReaderFactoryUtils;\n", "des": "Provides classes for XML validation in JAXP 1.0 and JAXP 1.3."}
{"index": 1015, "repo": "spring-ws-3.0.10.RELEASE", "code": "package xpath\n\n// An interface used by XPathOperations implementations for processing Node objects on a per-node basis.\nInterface NodeCallbackHandler;\n// An interface used by XPathOperations implementations for mapping Node objects on a per-node basis.\nInterface NodeMapper<T>;\n// Defines the contract for a precompiled XPath expression.\nInterface XPathExpression;\n// Interface that specifies a basic set of XPath operations, implemented by various XPathTemplates.\nInterface XPathOperations;\n", "des": "Provides XPathTemplate implementations, and various classes for XPath evaluation using JAXP 1.3, and Jaxen."}
{"index": 1016, "repo": "spring-ws-3.0.10.RELEASE", "code": "package xsd\n\n// Represents an abstraction for XSD schemas.\nInterface XsdSchema;\n// Represents an abstraction for a collection of XSD schemas.\nInterface XsdSchemaCollection;\n// The default XsdSchema implementation.\nClass SimpleXsdSchema;\n// Base class for all WSDL definition exceptions.\nClass XsdSchemaException;\n", "des": "Provides an abstraction over XSD XML schemas."}
{"index": 1017, "repo": "spring-ws-3.0.10.RELEASE", "code": "package commons\n\n// Implementation of the XsdSchema interface that uses Apache WS-Commons XML Schema.\nClass CommonsXsdSchema;\n// Implementation of the XsdSchemaCollection that uses Apache WS-Commons XML Schema.\nClass CommonsXsdSchemaCollection;\n// Commons XmlSchema version of the XsdSchemaException.\nClass CommonsXsdSchemaException;\n", "des": "Contains a implementation of the XsdSchema interfaces that uses Apache WS-Commons XML Schema."}
{"index": 1018, "repo": "hive-common-4.0.0-alpha-2", "code": "package datetime\n\n// Formatter using SQL:2016 datetime patterns.\nClass HiveSqlDateTimeFormatter;\n// Token representation.\nClass HiveSqlDateTimeFormatter.Token;\n// Represents broad categories of tokens.\nEnum HiveSqlDateTimeFormatter.TokenType;\n", "des": "Deals with formatting and parsing of datetime objects."}
{"index": 1019, "repo": "commons-email-1.5", "code": "package mail\n\n// Creates a DataSource based on an URL.\nInterface DataSourceResolver;\n// since 1.4, use ByteArrayDataSource instead\nClass ByteArrayDataSource;\n// This is a very simple authentication object that can be used for any transport needing basic userName and password type authentication.\nClass DefaultAuthenticator;\n// The base class for all email messages.\nClass Email;\n// This class models an email attachment.\nClass EmailAttachment;\n// Constants used by Email classes.\nClass EmailConstants;\n", "des": "Commons-Email aims to provide a API for sending email."}
{"index": 1020, "repo": "commons-email-1.5", "code": "package resolver\n\n// Base class for various resolvers.\nClass DataSourceBaseResolver;\n// Creates a DataSource based on an class path.\nClass DataSourceClassPathResolver;\n// A composite data source resolver.\nClass DataSourceCompositeResolver;\n// Creates a DataSource based on an URL.\nClass DataSourceFileResolver;\n// Creates a DataSource based on an URL.\nClass DataSourceUrlResolver;\n", "des": "Contains implementation classes to resolve data sources from the following locations: class path file system URL"}
{"index": 1021, "repo": "commons-email-1.5", "code": "package util\n\n// Converts email addresses containing International Domain Names into an ASCII representation suitable for sending an email.\nClass IDNEmailAddressConverter;\n// Parses a MimeMessage and stores the individual parts such a plain text, HTML text and attachments.\nClass MimeMessageParser;\n// Static helper methods.\nClass MimeMessageUtils;\n", "des": "This package provides some utility classes."}
{"index": 1022, "repo": "hadoop-aws-3.3.6", "code": "package s3a\n\n// Callback for retry and notification operations.\nInterface Invoker.Retried;\n// Callbacks for input stream IO.\nInterface S3AInputStream.InputStreamCallbacks;\n// An interface for use in lambda-expressions working with directory tree listings.\nInterface S3AUtils.CallOnLocatedFileStatus;\n// An interface for use in lambda-expressions working with directory tree listings.\nInterface S3AUtils.LocatedFileStatusMap<T>;\n", "des": "S3A Filesystem."}
{"index": 1023, "repo": "hadoop-aws-3.3.6", "code": "package api\n\n// Factory for S3 objects.\nInterface RequestFactory;\n// An operation is unsupported.\nClass UnsupportedRequestException;\n", "des": "Where the interfaces for classes implemented in o.a.h.fs.s3a.impl should go."}
{"index": 1024, "repo": "hadoop-aws-3.3.6", "code": "package audit\n\n// Interface for Audit Managers auditing operations through the AWS libraries.\nInterface AuditManagerS3A;\n// An Audit Span with S3A integration, specifically callbacks from the AWS client SDK.\nInterface AuditSpanS3A;\n// Callbacks for audit spans.\nInterface AWSAuditEventCallbacks;\n// Interfaces for audit services to implement.\nInterface OperationAuditor;\n// Support for integrating auditing within the S3A code.\nClass AuditIntegration;\n", "des": "Support for auditing and ultimately tracing operations."}
{"index": 1025, "repo": "hadoop-aws-3.3.6", "code": "package impl\n\n// Activation callbacks.\nInterface NoopSpan.SpanActivationCallbacks;\n// Base class for the audit spans implementations..\nClass AbstractAuditSpanImpl;\n// This is a long-lived service which is created in S3A FS initialize (make it fast!) which provides context for tracking operations made to S3.\nClass AbstractOperationAuditor;\n// Thread management for the active audit.\nClass ActiveAuditManagerS3A;\n", "des": "The internal implementations of auditing support."}
{"index": 1026, "repo": "hadoop-aws-3.3.6", "code": "package auth\n\n// Interface which can be implemented to allow initialization of any custom signers which may be used by the S3AFileSystem.\nInterface AwsSignerInitializer;\n// This class will be replaced by one that implements AWS SDK V2's AwsCredentialProvider as part of upgrading S3A to SDK V2.\nClass AbstractAWSCredentialProvider;\n// This class will be replaced by one that implements AWS SDK V2's AwsCredentialProvider as part of upgrading S3A to SDK V2.\nClass AbstractSessionCredentialsProvider;\n", "des": "Authentication and permissions support."}
{"index": 1027, "repo": "hadoop-aws-3.3.6", "code": "package delegation\n\n// Interface for providers of AWS policy for accessing data.\nInterface AWSPolicyProvider;\n// All operations used for delegation which aren't in the store context.\nInterface DelegationOperations;\n// Interface for S3A Delegation Token access.\nInterface DelegationTokenProvider;\n// An AbstractDelegationTokenBinding implementation is a class which handles the binding of its underlying authentication mechanism to the Hadoop Delegation token mechanism.\nClass AbstractDelegationTokenBinding;\n", "des": "Extensible delegation token support for the S3A connector."}
{"index": 1028, "repo": "hadoop-aws-3.3.6", "code": "package commit\n\n// Abstract base class for S3A committers; allows for any commonality between different architectures.\nClass AbstractS3ACommitter;\n// State of the active commit operation.\nClass AbstractS3ACommitter.ActiveCommit;\n// Dynamically create the output committer based on subclass type and settings.\nClass AbstractS3ACommitterFactory;\n// Constants for working with committers.\nClass CommitConstants;\n// Statistic names for committers.\nClass CommitterStatisticNames;\n", "des": "Support for committing the output of analytics jobs directly to S3."}
{"index": 1029, "repo": "hadoop-aws-3.3.6", "code": "package files\n\n// Persistent format for multiple pending commits.\nClass PendingSet;\n// Class for single/multiple commit data structures.\nClass PersistentCommitData<T extends PersistentCommitData>;\n// This is the serialization format for uploads yet to be committed.\nClass SinglePendingCommit;\n// Summary data saved into a _SUCCESS marker file.\nClass SuccessData;\n", "des": "Persistent data formats for the committers."}
{"index": 1030, "repo": "hadoop-aws-3.3.6", "code": "package impl\n\n// Class to track/update context information to set in threads.\nClass AuditContextUpdater;\n// Commit context.\nClass CommitContext;\n// The implementation of the various actions a committer needs.\nClass CommitOperations;\n// A holder for a possible IOException; the call CommitOperations.MaybeIOE.maybeRethrow() will throw any exception passed into the constructor, and be a no-op if none was.\nClass CommitOperations.MaybeIOE;\n", "des": "Internal classes which make use of mapreduce code."}
{"index": 1031, "repo": "hadoop-aws-3.3.6", "code": "package magic\n\n// Put tracker for Magic commits.\nClass MagicCommitTracker;\n// This is a dedicated committer which requires the \"magic\" directory feature of the S3A Filesystem to be enabled; it then uses paths for task and job attempts in magic paths, so as to ensure that the final output goes direct to the destination directory.\nClass MagicS3GuardCommitter;\n// Factory for the Magic committer.\nClass MagicS3GuardCommitterFactory;\n", "des": "This is the \"Magic\" committer and support."}
{"index": 1032, "repo": "hadoop-aws-3.3.6", "code": "package staging\n\n// This commits to a directory.\nClass DirectoryStagingCommitter;\n// Factory for the Directory committer.\nClass DirectoryStagingCommitterFactory;\n// Partitioned committer.\nClass PartitionedStagingCommitter;\n// Factory for the PartitionedStagingCommitter.\nClass PartitionedStagingCommitterFactory;\n// Path operations for the staging committers.\nClass Paths;\n", "des": "The staging committers."}
{"index": 1033, "repo": "hadoop-aws-3.3.6", "code": "package impl\n\n// An interface to implement for providing accessors to S3AFileSystem-level API calls.\nInterface ContextAccessors;\n// Define the contract for CopyFromLocalOperation to interact with any external resources.\nInterface CopyFromLocalOperation.CopyFromLocalOperationCallbacks;\n// Callbacks for creating the file.\nInterface CreateFileBuilder.CreateFileBuilderCallbacks;\n// Interface for Directory Marker policies to implement.\nInterface DirectoryPolicy;\n", "des": "Implementation classes private to the S3A store."}
{"index": 1034, "repo": "hadoop-aws-3.3.6", "code": "package prefetch\n\n// Provides read access to S3 file one block at a time.\nClass S3ABlockManager;\n// Provides access to S3 file one block at a time.\nClass S3ACachingBlockManager;\n// Provides an InputStream that allows reading from an S3 file.\nClass S3ACachingInputStream;\n// Provides an InputStream that allows reading from an S3 file.\nClass S3AInMemoryInputStream;\n// Enhanced InputStream for reading from S3.\nClass S3APrefetchingInputStream;\n", "des": "High performance s3 input stream which reads in blocks and can cache blocks in the local filesystem."}
{"index": 1035, "repo": "hadoop-aws-3.3.6", "code": "package s3guard\n\n// Logic for integrating MetadataStore with S3A.\nClass S3Guard;\n// CLI to manage S3Guard Metadata Store.\nClass S3GuardTool;\n// Get info about a bucket and its S3Guard integration status.\nClass S3GuardTool.BucketInfo;\n", "des": "This package contained S3Guard support; now the feature has been removed, its contents are limited to the public command line and some methods still used by directory marker code."}
{"index": 1036, "repo": "hadoop-aws-3.3.6", "code": "package select\n\n// Constants for internal use in the org.apache.hadoop.fs.s3a module itself.\nClass InternalSelectConstants;\n// Class to do the S3 select binding and build a select request from the supplied arguments/configuration.\nClass SelectBinding;\n// Options related to S3 Select.\nClass SelectConstants;\n// An input stream for S3 Select return values.\nClass SelectInputStream;\n// This is a CLI tool for the select operation, which is available through the S3Guard command.\nClass SelectTool;\n", "des": "Support for S3 Select."}
{"index": 1037, "repo": "hadoop-aws-3.3.6", "code": "package statistics\n\n// Block output stream statistics.\nInterface BlockOutputStreamStatistics;\n// Interface for change tracking statistics.\nInterface ChangeTrackerStatistics;\n// Statistics for S3A committers.\nInterface CommitterStatistics;\n// This is the foundational API for collecting S3A statistics.\nInterface CountersAndGauges;\n// Instrumentation exported to for S3A Delegation Token support.\nInterface DelegationTokenStatistics;\n// Interface for PUT tracking.\nInterface PutTrackerStatistics;\n", "des": "Statistics collection for the S3A connector: interfaces."}
{"index": 1038, "repo": "hadoop-aws-3.3.6", "code": "package impl\n\n// This is the interface which an integration source must implement for the integration.\nInterface BondedS3AStatisticsContext.S3AFSStatisticsSource;\n// Base class for implementing IOStatistics sources in the S3 module.\nClass AbstractS3AStatisticsSource;\n// Collect statistics from the AWS SDK and forward to an instance of StatisticsFromAwsSdk and thence into the S3A statistics.\nClass AwsStatisticsCollector;\n", "des": "Statistics collection for the S3A connector: implementation."}
{"index": 1039, "repo": "hadoop-aws-3.3.6", "code": "package tools\n\n// Operations which must be offered by the store for MarkerTool.\nInterface MarkerToolOperations;\n// Audit an S3 bucket for directory markers.\nClass MarkerTool;\n// Result of a call of MarkerTool.purgeMarkers(DirMarkerTracker, int); included in MarkerTool.ScanResult so must share visibility.\nClass MarkerTool.MarkerPurgeSummary;\n// Arguments for the scan.\nClass MarkerTool.ScanArgs;\n// Builder of the scan arguments.\nClass MarkerTool.ScanArgsBuilder;\n", "des": "S3A Command line tools independent of S3Guard."}
{"index": 1040, "repo": "hadoop-aws-3.3.6", "code": "package s3native\n\n// Replaced by the S3A client.\nClass NativeS3FileSystem;\n// Class to aid logging in to S3 endpoints.\nClass S3xLoginHelper;\n// Simple tuple of login details.\nClass S3xLoginHelper.Login;\n", "des": "A distributed implementation of FileSystem for reading and writing files on Amazon S3."}
{"index": 1041, "repo": "commons-io-2.13.0", "code": "package io\n\n// Byte Order Mark (BOM) representation.\nClass ByteOrderMark;\n// Converts Strings to ByteOrder instances.\nClass ByteOrderParser;\n// Charsets required of every implementation of the Java platform.\nClass Charsets;\n// Use IOUtils.\nClass CopyUtils;\n// Apache Commons IO no longer uses this class.\nClass DirectoryWalker<T>;\n// Helps with different endian systems.\nClass EndianUtils;\n// Use FileCleaningTracker\nClass FileCleaner;\n", "des": "Provides classes for working with streams, readers, writers and files."}
{"index": 1042, "repo": "commons-io-2.13.0", "code": "package build\n\n// Abstracts the origin of data for builders like a File, Path, Reader, Writer, InputStream, OutputStream, and URI.\nClass AbstractOrigin<T,B extends AbstractOrigin<T,B>>;\n// A byte[] origin.\nClass AbstractOrigin.ByteArrayOrigin;\n// A CharSequence origin.\nClass AbstractOrigin.CharSequenceOrigin;\n// A File origin.\nClass AbstractOrigin.FileOrigin;\n// An InputStream origin.\nClass AbstractOrigin.InputStreamOrigin;\n// An OutputStream origin.\nClass AbstractOrigin.OutputStreamOrigin;\n", "des": "Provides classes to implement IO builders."}
{"index": 1043, "repo": "commons-io-2.13.0", "code": "package charset\n\n// Works with CharsetDecoder.\nClass CharsetDecoders;\n// Works with CharsetEncoder.\nClass CharsetEncoders;\n", "des": "Provides classes to work with code from java.nio.charset."}
{"index": 1044, "repo": "commons-io-2.13.0", "code": "package comparator\n\n// Compare two files using a set of delegate file Comparator.\nClass CompositeFileComparator;\n// Compares two files using the default File.compareTo(File) method.\nClass DefaultFileComparator;\n// Compare two files using the File.isDirectory() method.\nClass DirectoryFileComparator;\n// Compare the file name extensions for order (see FilenameUtils.getExtension(String)).\nClass ExtensionFileComparator;\n", "des": "Provides various Comparator implementations for Files."}
{"index": 1045, "repo": "commons-io-2.13.0", "code": "package file\n\n// Counts using a number.\nInterface Counters.Counter;\n// Counts files, directories, and sizes, as a visit proceeds.\nInterface Counters.PathCounters;\n// An object that configures how to delete a file.\nInterface DeleteOption;\n// A filter for Paths.\nInterface PathFilter;\n// A FileVisitor typed to a Path.\nInterface PathVisitor;\n// Accumulates normalized paths during visitation.\nClass AccumulatorPathVisitor;\n// Deletes files but not directories as a visit proceeds.\nClass CleaningPathVisitor;\n", "des": "Provides extensions in the realm of java.nio.file."}
{"index": 1046, "repo": "commons-io-2.13.0", "code": "package attribute\n\n// Helps use FileTime and interoperate Date and NTFS times.\nClass FileTimes;\n", "des": "Provides help using java.nio.file.attribute types."}
{"index": 1047, "repo": "commons-io-2.13.0", "code": "package spi\n\n// Helps to work with FileSystemProvider.\nClass FileSystemProviders;\n", "des": "Provides extensions in the realm of java.nio.file.spi."}
{"index": 1048, "repo": "commons-io-2.13.0", "code": "package filefilter\n\n// Defines operations for conditional file filters.\nInterface ConditionalFileFilter;\n// An interface which brings the FileFilter, FilenameFilter, and PathFilter interfaces together.\nInterface IOFileFilter;\n// Abstracts the implementation of the FileFilter (IO), FilenameFilter (IO), PathFilter (NIO) interfaces via our own IOFileFilter interface.\nClass AbstractFileFilter;\n", "des": "Provides the an interface IOFileFilter that combines both FileFilter and FilenameFilter."}
{"index": 1049, "repo": "commons-io-2.13.0", "code": "package function\n\n// Like BaseStream but throws IOException.\nInterface IOBaseStream<T,S extends IOBaseStream<T,S,B>,B extends BaseStream<T,B>>;\n// Like BiConsumer but throws IOException.\nInterface IOBiConsumer<T,U>;\n// Like BiFunction but throws IOException.\nInterface IOBiFunction<T,U,R>;\n// Like BinaryOperator but throws IOException.\nInterface IOBinaryOperator<T>;\n// Like Comparator but throws IOException.\nInterface IOComparator<T>;\n// Like Consumer but throws IOException.\nInterface IOConsumer<T>;\n", "des": "Provides IO-only related functional interfaces for lambda expressions and method references."}
{"index": 1050, "repo": "commons-io-2.13.0", "code": "package input\n\n// Bridges access to a resource for random access, normally a file.\nInterface Tailer.RandomAccessResourceBridge;\n// A tailable resource like a file.\nInterface Tailer.Tailable;\n// Listener for events from a Tailer.\nInterface TailerListener;\n// A filter reader that filters out characters where subclasses decide which characters to filter out.\nClass AbstractCharacterFilterReader;\n", "des": "Provides implementations of input classes, such as InputStream and Reader."}
{"index": 1051, "repo": "commons-io-2.13.0", "code": "package buffer\n\n// Implements a buffered input stream, which is internally based on a CircularByteBuffer.\nClass CircularBufferInputStream;\n// A buffer, which doesn't need reallocation of byte arrays, because it reuses a single byte array.\nClass CircularByteBuffer;\n// Implements a buffered input stream, which allows to peek into the buffers first bytes.\nClass PeekableInputStream;\n", "des": "Provides implementations of buffered input classes, such as CircularBufferInputStream and PeekableInputStream."}
{"index": 1052, "repo": "commons-io-2.13.0", "code": "package monitor\n\n// Receives events of file system modifications.\nInterface FileAlterationListener;\n// Convenience FileAlterationListener implementation that does nothing.\nClass FileAlterationListenerAdaptor;\n// A runnable that spawns a monitoring thread triggering any registered FileAlterationObserver at a specified interval.\nClass FileAlterationMonitor;\n", "des": "Provides a component for monitoring file system events (directory and file create, update and delete events)."}
{"index": 1053, "repo": "commons-io-2.13.0", "code": "package output\n\n// Constructor for an InputStream subclass.\nInterface AbstractByteArrayOutputStream.InputStreamConstructor<T extends InputStream>;\n// An Appendable that throws UncheckedIOException instead of IOException.\nInterface UncheckedAppendable;\n// This is the base class for implementing an output stream in which the data is written into a byte array.\nClass AbstractByteArrayOutputStream;\n", "des": "Provides implementations of output classes, such as OutputStream and Writer."}
{"index": 1054, "repo": "commons-io-2.13.0", "code": "package serialization\n\n// An object that matches a Class name to a condition.\nInterface ClassNameMatcher;\n// An ObjectInputStream that's restricted to deserialize a limited set of classes.\nClass ValidatingObjectInputStream;\n", "des": "Provides a framework for controlling the deserialization of classes."}
{"index": 1055, "repo": "commons-rdf-api-0.5.0", "code": "package api\n\n// A RDF-1.1 Blank Node, as defined by RDF-1.1 Concepts and Abstract Syntax, a W3C Recommendation published on 25 February 2014. Note: Blank nodes are disjoint from IRIs and literals.\nInterface BlankNode;\n// This interface represents the RDFTerms that may be used in the subject position of an RDF-1.1 Triple as well as the graph name position of a Quad.\nInterface BlankNodeOrIRI;\n", "des": "Commons RDF, a common library of RDF 1.1 concepts."}
{"index": 1056, "repo": "commons-rdf-api-0.5.0", "code": "package experimental\n\n// Parse an RDF source into a target (e.g.\nInterface RDFParser;\n// The result of RDFParser.parse() indicating parsing completed.\nInterface RDFParser.ParseResult;\n", "des": "Experimental Commons RDF features."}
{"index": 1057, "repo": "avro-1.11.2", "code": "package avro\n\n// Factory interface and SPI for logical types.\nInterface LogicalTypes.LogicalTypeFactory;\n// An interface for validating the compatibility of a single schema against another.\nInterface SchemaValidationStrategy;\n// A SchemaValidator has one method, which validates that a Schema is compatible with the other schemas provided.\nInterface SchemaValidator;\n// Conversion between generic and logical type instances.\nClass Conversion<T>;\n// \nClass Conversions;\n// \nClass Conversions.DecimalConversion;\n", "des": "Avro kernel classes."}
{"index": 1058, "repo": "avro-1.11.2", "code": "package data\n\n// Interface for error builders\nInterface ErrorBuilder<T>;\n// Interface for record builders\nInterface RecordBuilder<T>;\n// Utilities for reading and writing arbitrary Json data in Avro format.\nClass Json;\n// DatumReader for arbitrary Json data using the object model described in JsonProperties.\nClass Json.ObjectReader;\n// DatumWriter for arbitrary Json data using the object model described in JsonProperties.\nClass Json.ObjectWriter;\n", "des": "Interfaces and base classes shared by generic, specific and reflect."}
{"index": 1059, "repo": "avro-1.11.2", "code": "package file\n\n// Interface for reading data from a file.\nInterface FileReader<D>;\n// An InputStream that supports seek and tell.\nInterface SeekableInput;\n// \nInterface Syncable;\n// Implements bzip2 compression and decompression.\nClass BZip2Codec;\n// Interface for Avro-supported compression codecs for data files.\nClass Codec;\n// Encapsulates the ability to specify and configure a compression codec.\nClass CodecFactory;\n// Constants used in data files.\nClass DataFileConstants;\n", "des": "A container file for Avro data."}
{"index": 1060, "repo": "avro-1.11.2", "code": "package generic\n\n// Array that permits reuse of contained elements.\nInterface GenericArray<T>;\n// Contains data of other types.\nInterface GenericContainer;\n// \nInterface GenericData.InstanceSupplier;\n// An enum symbol.\nInterface GenericEnumSymbol<E extends GenericEnumSymbol<E>>;\n// Fixed-size data.\nInterface GenericFixed;\n// A generic instance of a record schema.\nInterface GenericRecord;\n// A record implementation that permits field access by integer index.\nInterface IndexedRecord;\n", "des": "A generic representation for Avro data."}
{"index": 1061, "repo": "avro-1.11.2", "code": "package io\n\n// Read data of a schema.\nInterface DatumReader<D>;\n// Write data of a schema.\nInterface DatumWriter<D>;\n// \nInterface FastReaderBuilder.ExecutionStep;\n// \nInterface FastReaderBuilder.FieldReader;\n// \nInterface FastReaderBuilder.ReusingFieldReader;\n// Utilities for binary-encoded data.\nClass BinaryData;\n// An Decoder for binary-format data.\nClass BinaryDecoder;\n// An abstract Encoder for Avro's binary encoding.\nClass BinaryEncoder;\n", "des": "Utilities for Encoding and Decoding Avro data."}
{"index": 1062, "repo": "avro-1.11.2", "code": "package parsing\n\n// The parser knows how to handle the terminal and non-terminal symbols.\nInterface Parser.ActionHandler;\n// The clients implement this interface to skip symbols and actions.\nInterface SkipParser.SkipHandler;\n// The class that generates a grammar suitable to parse Avro data in JSON format.\nClass JsonGrammarGenerator;\n// Parser is the class that maintains the stack for parsing.\nClass Parser;\n", "des": "Implementation of Avro schemas as LL(1) grammars."}
{"index": 1063, "repo": "avro-1.11.2", "code": "package path\n\n// root interface for all pieces of an AvroPath expression\nInterface PathElement;\n// a predicate is a filter that restricts items selected by a LocationStep\nInterface PathPredicate;\n// interface for exceptions that can trace the AvroPath of an error\nInterface PathTracingException<T extends Throwable>;\n// filters items by their context position\nInterface PositionalPathPredicate;\n// Returns items by their position (numeric index) in an array\nClass ArrayPositionPredicate;\n", "des": "Interfaces and base classes for AvroPath."}
{"index": 1064, "repo": "avro-1.11.2", "code": "package reflect\n\n// Expert: a custom encoder and decoder that writes an object directly to avro.\nClass CustomEncoding<T>;\n// This encoder/decoder writes a java.util.Date object as a long to avro and reads a Date object from long.\nClass DateAsLongEncoding;\n// Use org.apache.avro.util.MapEntry\nClass MapEntry<K,V>;\n// Utilities to use existing Java classes and interfaces via reflection.\nClass ReflectData;\n// ReflectData implementation that permits null field values.\nClass ReflectData.AllowNull;\n", "des": "Use Java reflection to generate schemas and protocols for existing classes."}
{"index": 1065, "repo": "avro-1.11.2", "code": "package specific\n\n// Tag interface that indicates that a class has a one-argument constructor that accepts a Schema.\nInterface SpecificData.SchemaConstructable;\n// Implemented by generated record classes.\nInterface SpecificRecord;\n// Utilities for generated Java classes and interfaces.\nClass SpecificData;\n// DatumReader for generated Java classes.\nClass SpecificDatumReader<T>;\n// DatumWriter for generated Java classes.\nClass SpecificDatumWriter<T>;\n", "des": "Generate specific Java classes for schemas and protocols."}
{"index": 1066, "repo": "avro-1.11.2", "code": "package util\n\n// Utility to present ByteBuffer data as an InputStream.\nClass ByteBufferInputStream;\n// Utility to collect data written to an OutputStream in ByteBuffers.\nClass ByteBufferOutputStream;\n// \nClass ClassUtils;\n// An implementation of Map.Entry with well-defined member names.\nClass MapEntry<K,V>;\n// \nClass MapUtil;\n// Utility to make data written to an ByteArrayOutputStream directly available as a ByteBuffer.\nClass NonCopyingByteArrayOutputStream;\n", "des": "Common utility classes."}
{"index": 1067, "repo": "accumulo-client-mapreduce-2.0.0-alpha-1", "code": "package impl\n\n// \nClass ConfiguratorBase;\n// \nClass DistributedCacheHelper;\n// \nClass FileOutputConfigurator;\n// \nClass InputConfigurator;\n// \nClass MapReduceClientOnDefaultTable;\n// \nClass MapReduceClientOnRequiredTable;\n// Adds some MR awareness to the ClientOpts\nClass MapReduceClientOpts;\n// \nClass OutputConfigurator;\n// \nEnum ConfiguratorBase.ClientOpts;\n// Specifies that connection info was configured\nEnum ConfiguratorBase.ConnectorInfo;\n", "des": "This package exists to store common helpers for configuring MapReduce jobs in a single location."}
{"index": 1068, "repo": "hadoop-yarn-common-3.3.6", "code": "package pb\n\n// PlacementConstraintFromProtoConverter generates an PlacementConstraint.AbstractConstraint given a YarnProtos.PlacementConstraintProto.\nClass PlacementConstraintFromProtoConverter;\n// PlacementConstraintToProtoConverter generates a YarnProtos.PlacementConstraintProto given a PlacementConstraint.AbstractConstraint.\nClass PlacementConstraintToProtoConverter;\n", "des": "API related to protobuf objects that are not backed by PBImpl classes."}
{"index": 1069, "repo": "hadoop-yarn-common-3.3.6", "code": "package resource\n\n// This class contains inner classes that define transformation on a PlacementConstraint expression.\nClass PlacementConstraintTransformations;\n// The default implementation of the PlacementConstraint.Visitor that does a traversal of the constraint tree, performing no action for the lead constraints.\nClass PlacementConstraintTransformations.AbstractTransformer;\n", "des": "API related to resources."}
{"index": 1070, "repo": "hadoop-yarn-common-3.3.6", "code": "package api\n\n// Client for managing applications.\nClass AppAdminClient;\n// A client library that can be used to post some information in terms of a number of conceptual entities.\nClass TimelineClient;\n// A client library that can be used to get Timeline Entities associated with application, application attempt or containers.\nClass TimelineReaderClient;\n// A client library that can be used to post some information in terms of a number of conceptual entities.\nClass TimelineV2Client;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1071, "repo": "hadoop-yarn-common-3.3.6", "code": "package impl\n\n// A simple writer class for storing Timeline data into Leveldb store.\nClass DirectTimelineWriter;\n// A simple writer class for storing Timeline data in any storage that implements a basic FileSystem interface.\nClass FileSystemTimelineWriter;\n// \nClass TimelineClientImpl;\n// Utility Connector class which is used by timeline clients to securely get connected to the timeline server.\nClass TimelineConnector;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1072, "repo": "hadoop-yarn-common-3.3.6", "code": "package metrics\n\n// \nInterface EventTypeMetrics<T extends Enum<T>>;\n// This is base class for allocated and available metrics for custom resources.\nClass CustomResourceMetrics;\n// Class that holds metrics values for custom resources in a map keyed with the name of the custom resource.\nClass CustomResourceMetricValue;\n// \nClass DisableEventTypeMetrics;\n// \nClass GenericEventTypeMetrics<T extends Enum<T>>;\n", "des": "Provides common metrics (available, allocated) for custom resources."}
{"index": 1073, "repo": "hadoop-yarn-common-3.3.6", "code": "package metrics\n\n// \nClass AppAttemptMetricsConstants;\n// \nClass ApplicationMetricsConstants;\n// \nClass ContainerMetricsConstants;\n", "des": "Yarn Common Metrics package."}
{"index": 1074, "repo": "hadoop-yarn-common-3.3.6", "code": "package dao\n\n// This class stores the Scheduler Configuration.\nClass ConfInfo;\n// This class stores the Configuration Property.\nClass ConfInfo.ConfItem;\n// Information for adding or updating a queue to scheduler configuration for this queue.\nClass QueueConfigInfo;\n// Information for making scheduler configuration changes (supports adding, removing, or updating a queue, as well as global scheduler conf changes).\nClass SchedConfUpdateInfo;\n", "des": "Data structures for scheduler configuration mutation info."}
{"index": 1075, "repo": "hadoop-yarn-common-3.3.6", "code": "package hamlet\n\n// \nInterface HamletSpec._;\n// \nInterface HamletSpec._Anchor;\n// %block -(FORM|FIELDSET)\nInterface HamletSpec._Block;\n// \nInterface HamletSpec._Body;\n// \nInterface HamletSpec._Cell;\n// \nInterface HamletSpec._Child;\n// \nInterface HamletSpec._Content;\n// \nInterface HamletSpec._Dl;\n// \nInterface HamletSpec._FieldSet;\n// Part of %pre.exclusion\nInterface HamletSpec._FontSize;\n// %fontstyle -(%pre.exclusion)\nInterface HamletSpec._FontStyle;\n// \nInterface HamletSpec._Form;\n", "des": "Deprecated."}
{"index": 1076, "repo": "hadoop-yarn-common-3.3.6", "code": "package hamlet2\n\n// \nInterface HamletSpec.__;\n// \nInterface HamletSpec._Anchor;\n// %block -(FORM|FIELDSET)\nInterface HamletSpec._Block;\n// \nInterface HamletSpec._Body;\n// \nInterface HamletSpec._Cell;\n// \nInterface HamletSpec._Child;\n// \nInterface HamletSpec._Content;\n// \nInterface HamletSpec._Dl;\n// \nInterface HamletSpec._FieldSet;\n// Part of %pre.exclusion\nInterface HamletSpec._FontSize;\n// %fontstyle -(%pre.exclusion)\nInterface HamletSpec._FontStyle;\n// \nInterface HamletSpec._Form;\n", "des": "This package is the replacement for org.apache.hadoop.yarn.webapp.hamlet."}
{"index": 1077, "repo": "graal-sdk-1.0.0-rc7", "code": "package collections\n\n// Memory efficient map data structure.\nInterface EconomicMap<K,V>;\n// Memory efficient set data structure.\nInterface EconomicSet<E>;\n// Cursor to iterate over a mutable map.\nInterface MapCursor<K,V>;\n// Unmodifiable memory efficient map data structure.\nInterface UnmodifiableEconomicMap<K,V>;\n// Unmodifiable memory efficient set data structure.\nInterface UnmodifiableEconomicSet<E>;\n// Cursor to iterate over a map without changing its contents.\nInterface UnmodifiableMapCursor<K,V>;\n", "des": "The Graal-SDK collections package contains memory efficient data structures."}
{"index": 1078, "repo": "graal-sdk-1.0.0-rc7", "code": "package nativeimage\n\n// Features allow clients to intercept the native image generation and run custom initialization code at various stages.\nInterface Feature;\n// Access methods available for Feature.afterAnalysis(org.graalvm.nativeimage.Feature.AfterAnalysisAccess).\nInterface Feature.AfterAnalysisAccess;\n// Access methods available for Feature.afterCompilation(org.graalvm.nativeimage.Feature.AfterCompilationAccess).\nInterface Feature.AfterCompilationAccess;\n", "des": "The Graal-SDK native-image API allows to customize the native image generation, i.e., the ahead-of-time compilation of Java code to standalone executables."}
{"index": 1079, "repo": "graal-sdk-1.0.0-rc7", "code": "package c\n\n// Describes a C context.\nInterface CContext.Directives;\n// Defines the context for most other annotations of the C interface: the C header files that need to be imported, the C macros that need to be defined to properly configure these headers, and additional flags that should be passed to the C compiler when analyzing the definitions.\nAnnotation Type CContext;\n", "des": "This package and its sub-packages provide a fast and lightweight interface between Java code and C code."}
{"index": 1080, "repo": "graal-sdk-1.0.0-rc7", "code": "package constant\n\n// Allows access to the value of a CConstant during image generation.\nClass CConstant.ValueAccess;\n// Denotes a method as a C constant value.\nAnnotation Type CConstant;\n// Annotation to import a C enumeration to Java.\nAnnotation Type CEnum;\n// Provides additional properties for a field (i.e., an enumeration value) of Java enumeration annotated with CEnum.\nAnnotation Type CEnumConstant;\n", "des": "This package provides parts of the Java / C interface that are related to C constants."}
{"index": 1081, "repo": "graal-sdk-1.0.0-rc7", "code": "package function\n\n// Base interface for all function pointers.\nInterface CFunctionPointer;\n// Pointer to executable code.\nInterface CodePointer;\n// A pointer which is relocated when the native image is loaded at runtime.\nInterface RelocatedPointer;\n// Special placeholder value for CEntryPoint.exceptionHandler() to print the caught exception and treat it as a fatal error.\nClass CEntryPoint.FatalExceptionHandler;\n// Utility methods that provide access to the current isolate.\nClass CEntryPointContext;\n", "des": "This package provides parts of the Java / C interface that are related to C functions."}
{"index": 1082, "repo": "graal-sdk-1.0.0-rc7", "code": "package struct\n\n// Contains static methods that provide access to the size of dereferenced SystemJava pointer types (i.e.\nClass SizeOf;\n// Allows a method annotated with CField to have a value type that is narrower (smaller number of bits) than the C type.\nAnnotation Type AllowNarrowingCast;\n// Allows a method annotated with CField to have a value type that is wider (larger number of bits) than the C type.\nAnnotation Type AllowWideningCast;\n", "des": "This package provides parts of the Java / C interface that are related to C structures."}
{"index": 1083, "repo": "graal-sdk-1.0.0-rc7", "code": "package type\n\n// A pointer to a 8-bit C primitive value.\nInterface CCharPointer;\n// A pointer to a pointer to a 8-bit C primitive value.\nInterface CCharPointerPointer;\n// A pointer to a C primitive 'double' value.\nInterface CDoublePointer;\n// A pointer to a C primitive 'float' value.\nInterface CFloatPointer;\n// A pointer to a 32-bit C primitive value.\nInterface CIntPointer;\n// A pointer to a pointer to a 32-bit C primitive value.\nInterface CIntPointerPointer;\n", "des": "This package provides parts of the Java / C interface that are related to standard C pointer types, as well as utility functions to convert between Java types and C types."}
{"index": 1084, "repo": "graal-sdk-1.0.0-rc7", "code": "package options\n\n// An interface to a set of OptionDescriptors.\nInterface OptionDescriptors;\n// Represents a set of option values based on an OptionDescriptor.\nInterface OptionValues;\n// Represents metadata for a single option.\nClass OptionDescriptor;\n// Represents the option key for an option specification.\nClass OptionKey<T>;\n// Represents a type of an option that allows to convert string values to Java values.\nClass OptionType<T>;\n// Categorizes options according to user relevance.\nEnum OptionCategory;\n", "des": "The Graal-SDK options package contains reusable collection classes for options."}
{"index": 1085, "repo": "graal-sdk-1.0.0-rc7", "code": "package polyglot\n\n// A polyglot context for Graal guest languages that allows to evaluate code.\nClass Context;\n// An execution engine for Graal guest languages that allows to inspect the the installed guest languages, instruments and their available options.\nClass Engine;\n// A handle for an instrument installed in an engine.\nClass Instrument;\n// A handle for a Graal language installed in an engine.\nClass Language;\n", "des": "The Graal-SDK polyglot API allows to embed Graal languages in Java applications."}
{"index": 1086, "repo": "graal-sdk-1.0.0-rc7", "code": "package io\n\n// A ByteSequence is a readable sequence of byte values.\nInterface ByteSequence;\n// Service-provider for Truffle files.\nInterface FileSystem;\n", "des": "Input/Output support for the Graal-SDK polyglot API."}
{"index": 1087, "repo": "graal-sdk-1.0.0-rc7", "code": "package management\n\n// An execution event object passed to an execution listener consumer.\nClass ExecutionEvent;\n// Execution listeners allow to instrument the execution of guest languages.\nClass ExecutionListener;\n", "des": "The management package provides tools that monitor and instrument the behavior of guest language programs."}
{"index": 1088, "repo": "graal-sdk-1.0.0-rc7", "code": "package proxy\n\n// Proxy interfaces allow to mimic guest language objects, arrays, executables, primitives and native objects in Graal languages.\nInterface Proxy;\n// Interface to be implemented to mimic guest language arrays.\nInterface ProxyArray;\n// Interface to be implemented to mimic guest language objects that are executable.\nInterface ProxyExecutable;\n// Interface to be implemented to mimic guest language objects that are instantiable.\nInterface ProxyInstantiable;\n", "des": "The Graal SDK proxy interfaces allow to mimic guest language objects, arrays, executables, primitives and native objects in Graal languages."}
{"index": 1089, "repo": "graal-sdk-1.0.0-rc7", "code": "package word\n\n// A machine-word-sized value that can be compared for equality.\nInterface ComparableWord;\n// Lowest-level memory access of native C memory.\nInterface Pointer;\n// Marker interface for all word types that have the semantic of a pointer (but not necessarily all the memory access methods defined in Pointer).\nInterface PointerBase;\n// Represents a signed word-sized value.\nInterface SignedWord;\n// Represents an unsigned word-sized value.\nInterface UnsignedWord;\n", "des": "This package provides a low-level mechanism to use machine-word-sized values in Java."}
{"index": 1090, "repo": "lucene-analyzers-smartcn-8.11.2", "code": "package smart\n\n// Manages analysis data configuration for SmartChineseAnalyzer\nClass AnalyzerProfile;\n// Internal SmartChineseAnalyzer character type constants.\nClass CharType;\n// Tokenizer for Chinese or mixed Chinese-English text.\nClass HMMChineseTokenizer;\n// Factory for HMMChineseTokenizer\nClass HMMChineseTokenizerFactory;\n// SmartChineseAnalyzer is an analyzer for Chinese or mixed Chinese-English text.\nClass SmartChineseAnalyzer;\n// SmartChineseAnalyzer utility constants and methods\nClass Utility;\n", "des": "Analyzer for Simplified Chinese, which indexes words."}
{"index": 1091, "repo": "lucene-analyzers-smartcn-8.11.2", "code": "package hhmm\n\n// Finds the optimal segmentation of a sentence into Chinese words\nClass HHMMSegmenter;\n// SmartChineseAnalyzer internal token\nClass SegToken;\n// Filters a SegToken by converting full-width latin to half-width, then lowercasing latin.\nClass SegTokenFilter;\n", "des": "SmartChineseAnalyzer Hidden Markov Model package."}
{"index": 1092, "repo": "hbase-server-3.0.0-alpha-4", "code": "package constraint\n\n// Apply a Constraint (in traditional database terminology) to a Table.\nInterface Constraint;\n// Base class to use when actually implementing a Constraint.\nClass BaseConstraint;\n// Processes multiple Constraints on a given table.\nClass ConstraintProcessor;\n// Utilities for adding/removing constraints from a table.\nClass Constraints;\n// Exception that a user defined constraint throws on failure of a Put.\nClass ConstraintException;\n", "des": "Restrict the domain of a data attribute, often times to fulfill business rules/requirements."}
{"index": 1093, "repo": "hbase-server-3.0.0-alpha-4", "code": "package coprocessor\n\n// Coprocessors implement this interface to observe and mediate bulk load operations.\nInterface BulkLoadObserver;\n// Implementations defined function to get an observer of type O from a coprocessor of type C.\nInterface CoprocessorHost.ObserverGetter<C,O>;\n// Since 2.0.\nInterface CoprocessorService;\n// Coprocessors implement this interface to observe and mediate endpoint invocations on a region.\nInterface EndpointObserver;\n", "des": "Table of Contents"}
{"index": 1094, "repo": "hbase-server-3.0.0-alpha-4", "code": "package hfile\n\n// Block cache interface.\nInterface BlockCache;\n// Allows for defining different compression rate predicates on its implementing classes.\nInterface BlockCompressedSizePredicator;\n// \nInterface BlockIndexChunk;\n// Cacheable is an interface that allows for an object to be cached.\nInterface Cacheable;\n// Interface for a deserializer.\nInterface CacheableDeserializer<T extends Cacheable>;\n// \nInterface CachedBlock;\n", "des": "Provides implementations of HFile and HFile BlockCache."}
{"index": 1095, "repo": "hbase-server-3.0.0-alpha-4", "code": "package bucket\n\n// A class implementing IOEngine interface supports data services for BucketCache.\nInterface IOEngine;\n// This class is used to allocate a block with specified size and free the block when evicting.\nClass BucketAllocator;\n// \nClass BucketAllocator.Bucket;\n// BucketCache uses BucketAllocator to allocate/free blocks, and uses BucketCache#ramCache and BucketCache#backingMap in order to determine if a given element is in the cache.\nClass BucketCache;\n// \nClass BucketCachePersister;\n", "des": "Provides BucketCache, an implementation of BlockCache."}
{"index": 1096, "repo": "hbase-server-3.0.0-alpha-4", "code": "package ipc\n\n// An interface for calling out of RPC for error conditions.\nInterface HBaseRPCErrorHandler;\n// Function to figure priority of incoming request.\nInterface PriorityFunction;\n// Interface for balancing requests across IPC queues\nInterface QueueBalancer;\n// Interface of all necessary to carry out a RPC method invocation on the server.\nInterface RpcCall;\n// Denotes a callback action that has to be executed at the end of an Rpc Call.\nInterface RpcCallback;\n", "des": "Tools to help define network clients and servers."}
{"index": 1097, "repo": "hbase-server-3.0.0-alpha-4", "code": "package gson\n\n// Provides a singleton Gson instance configured just the way we like it.\nClass GsonFactory;\n// Used to register with (shaded) Jersey the presence of Entity serialization using (shaded) Gson.\nClass GsonSerializationFeature;\n", "des": "This package should be in the hbase-http module as a.a.h.h.http.gson."}
{"index": 1098, "repo": "hbase-server-3.0.0-alpha-4", "code": "package normalizer\n\n// A NormalizationPlan describes some modification to region split points as identified by an instance of RegionNormalizer.\nInterface NormalizationPlan;\n// Factory to create instance of RegionNormalizer as configured.\nClass RegionNormalizerFactory;\n// This class encapsulates the details of the RegionNormalizer subsystem.\nClass RegionNormalizerManager;\n// Store region normalizer state.\nClass RegionNormalizerStateStore;\n// \nEnum NormalizationPlan.PlanType;\n", "des": "The Region Normalizer subsystem is responsible for coaxing all the regions in a table toward a \"normal\" size, according to their storefile size."}
{"index": 1099, "repo": "hbase-server-3.0.0-alpha-4", "code": "package replication\n\n// ReplicationEndpoint is a plugin which implements replication to other HBase clusters, or other systems.\nInterface ReplicationEndpoint;\n// A filter for WAL entry cells before being sent over to replication.\nInterface WALCellFilter;\n// A Filter for WAL entries before being sent over to replication.\nInterface WALEntryFilter;\n// A Base implementation for ReplicationEndpoints.\nClass BaseReplicationEndpoint;\n// \nClass BulkLoadCellFilter;\n", "des": "Multi Cluster Replication"}
{"index": 1100, "repo": "fontbox-3.0.0-beta1", "code": "package afm\n\n// This class is used to parse AFM(Adobe Font Metrics) documents.\nClass AFMParser;\n// This class represents a single character metric.\nClass CharMetric;\n// This class represents composite character data.\nClass Composite;\n// This class represents a part of composite character data.\nClass CompositePart;\n// This is the outermost AFM type.\nClass FontMetrics;\n// This represents some kern pair data.\nClass KernPair;\n", "des": "This package holds classes used to parse AFM(Adobe Font Metrics) files."}
{"index": 1101, "repo": "fontbox-3.0.0-beta1", "code": "package cff\n\n// A CFF charset.\nInterface CFFCharset;\n// Source from which bytes may be read in the future.\nInterface CFFParser.ByteSource;\n// This interface defines some functionality to read a CFF font.\nInterface DataInput;\n// \nInterface FDSelect;\n// A Type 0 CIDFont represented in a CFF file.\nClass CFFCIDFont;\n// A CFF Type 1-equivalent Encoding.\nClass CFFEncoding;\n// This is specialized CFFCharset.\nClass CFFExpertCharset;\n// This is specialized CFFEncoding.\nClass CFFExpertEncoding;\n", "des": "This package holds classes used to parse CFF/Type2-Fonts (aka Type1C-Fonts)."}
{"index": 1102, "repo": "fontbox-3.0.0-beta1", "code": "package cmap\n\n// This class represents a CMap file.\nClass CMap;\n// Parses a CMap stream.\nClass CMapParser;\n// This represents a single entry in the codespace range.\nClass CodespaceRange;\n", "des": "This package holds classes that are necessary to parse cmap files."}
{"index": 1103, "repo": "fontbox-3.0.0-beta1", "code": "package encoding\n\n// A font's built-in encoding.\nClass BuiltInEncoding;\n// A PostScript Encoding vector.\nClass Encoding;\n// This is the MacRomanEncoding.\nClass MacRomanEncoding;\n// Adobe Standard Encoding\nClass StandardEncoding;\n", "des": "This package contains the implementations for all of the encodings that are used in PDF documents."}
{"index": 1104, "repo": "fontbox-3.0.0-beta1", "code": "package pfb\n\n// Parser for a pfb-file.\nClass PfbParser;\n", "des": "Classes that are used to parse pfb files."}
{"index": 1105, "repo": "fontbox-3.0.0-beta1", "code": "package ttf\n\n// An interface that abstracts the cid <-> codepoint lookup functionality of cmap.\nInterface CmapLookup;\n// Specifies access to glyph description classes, simple and composite.\nInterface GlyphDescription;\n// Implement the callback method to call TrueTypeCollection.processAllFonts(TrueTypeFontProcessor).\nInterface TrueTypeCollection.TrueTypeFontProcessor;\n// PostScript font program (compact font format).\nClass CFFTable;\n// A \"cmap\" subtable.\nClass CmapSubtable;\n", "des": "This package contains classes to parse a TTF file."}
{"index": 1106, "repo": "fontbox-3.0.0-beta1", "code": "package gsub\n\n// This class splits an array of GlyphIds with a prospective match.\nInterface GlyphArraySplitter;\n// This class is responsible for replacing GlyphIDs with new ones according to the GSUB tables.\nInterface GsubWorker;\n// Takes in the given text having compound-glyphs to substitute, and splits it into chunks consisting of parts that should be substituted and the ones that can be processed normally.\nClass CompoundCharacterTokenizer;\n", "des": "This package contains utility classes which extract meanigful data from the highly obfuscated GSUB table structures."}
{"index": 1107, "repo": "fontbox-3.0.0-beta1", "code": "package model\n\n// Model for data from the GSUB tables\nInterface GsubData;\n// Models a FeatureRecord\nInterface ScriptFeature;\n// A Map based simple implementation of the GsubData\nClass MapBackedGsubData;\n// A Map based simple implementation of the ScriptFeature\nClass MapBackedScriptFeature;\n// Enumerates the languages supported for GSUB operation.\nEnum Language;\n", "des": "This package contains a more logical model for the various font tables like GSUB."}
{"index": 1108, "repo": "fontbox-3.0.0-beta1", "code": "package common\n\n// This class models the Coverage Table in the Open Type layout common tables.\nClass CoverageTable;\n// This class models the Coverage format 1 in the Open Type layout common tables.\nClass CoverageTableFormat1;\n// This class models the Coverage format 2 in the Open Type layout common tables.\nClass CoverageTableFormat2;\n// This class models the Feature List table in the Open Type layout common tables.\nClass FeatureListTable;\n", "des": "This package contains the highly obfuscated Layout Common Table Formats system of tables from the Open Type Font specs."}
{"index": 1109, "repo": "fontbox-3.0.0-beta1", "code": "package gsub\n\n// This class is a part of the GSUB — Glyph Substitution Table system of tables in the Open Type Font specs.\nClass LigatureSetTable;\n// This class is a part of the GSUB — Glyph Substitution Table system of tables in the Open Type Font specs.\nClass LigatureTable;\n// This class is a part of the GSUB — Glyph Substitution Table system of tables in the Open Type Font specs.\nClass LookupTypeLigatureSubstitutionSubstFormat1;\n// \nClass LookupTypeMultipleSubstitutionFormat1;\n", "des": "This package contains the highly obfuscated GSUB, aka, Glyph Substitution Table system of tables from the Open Type Font specs."}
{"index": 1110, "repo": "fontbox-3.0.0-beta1", "code": "package type1\n\n// Something which can read Type 1 CharStrings, namely Type 1 and CFF fonts.\nInterface Type1CharStringReader;\n// Represents an Adobe Type 1 (.pfb) font.\nClass Type1Font;\n// Thrown when a font is damaged and cannot be read.\nClass DamagedFontException;\n", "des": "This package holds classes used to parse Type1-Fonts."}
{"index": 1111, "repo": "fontbox-3.0.0-beta1", "code": "package util\n\n// This is an implementation of a bounding box.\nClass BoundingBox;\n", "des": "This package contains utility classes used by various font types."}
{"index": 1112, "repo": "fontbox-3.0.0-beta1", "code": "package autodetect\n\n// Implementers provide find method for searching native operating system for available fonts.\nInterface FontDirFinder;\n// Helps to autodetect/locate available operating system fonts.\nClass FontFileFinder;\n// Mac font directory finder.\nClass MacFontDirFinder;\n// Native font finder base class.\nClass NativeFontDirFinder;\n// Font finder for OS/400 systems.\nClass OS400FontDirFinder;\n// Unix font directory finder.\nClass UnixFontDirFinder;\n", "des": "This package contains utility classes to manage local fonts."}
{"index": 1113, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package deviceplugin\n\n// A must interface for vendor plugin to implement.\nInterface DevicePlugin;\n// An optional interface to implement if custom device scheduling is needed.\nInterface DevicePluginScheduler;\n// Represent one \"device\" resource.\nClass Device;\n// Builder for Device.\nClass Device.Builder;\n// Contains plugin register request info.\nClass DeviceRegisterRequest;\n// Builder class for construct DeviceRegisterRequest.\nClass DeviceRegisterRequest.Builder;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1114, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package pb\n\n// Utilities for converting from PB representations.\nClass NMProtoUtils;\n// \nClass ResourceLocalizationSpecPBImpl;\n", "des": "Package containing classes for working with Protobuf."}
{"index": 1115, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package collectormanager\n\n// Service that handles collector information.\nClass NMCollectorService;\n", "des": "Package org.apache.hadoop.yarn.server.nodemanager.collectormanager contains classes for handling timeline collector information."}
{"index": 1116, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package recovery\n\n// Encapsulates the recovery info needed to recover a DeletionTask from the NM state store.\nClass DeletionTaskRecoveryInfo;\n", "des": "Package containing classes for recovering DeletionTasks."}
{"index": 1117, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package task\n\n// DeletionTasks are supplied to the DeletionService for deletion.\nClass DeletionTask;\n// DeletionTask handling the removal of Docker containers.\nClass DockerContainerDeletionTask;\n// DeletionTask handling the removal of files (and directories).\nClass FileDeletionTask;\n// Available types of DeletionTasks.\nEnum DeletionTaskType;\n", "des": "Package containing DeletionTasks for use with the DeletionService."}
{"index": 1118, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package launcher\n\n// Pluggable ContainersLauncher interface for processing ContainersLauncherEvents.\nInterface AbstractContainersLauncher;\n// Cleanup the container.\nClass ContainerCleanup;\n// \nClass ContainerLaunch;\n// \nClass ContainerLaunch.ShellScriptBuilder;\n// Relaunch container.\nClass ContainerRelaunch;\n// The launcher for the containers.\nClass ContainersLauncher;\n// \nClass ContainersLauncherEvent;\n", "des": "This package contains classes related to NM container launch."}
{"index": 1119, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package numa\n\n// NumaNodeResource class holds the NUMA node topology with the total and used resources.\nClass NumaNodeResource;\n// NumaResourceAllocation contains Memory nodes and CPU nodes assigned to a container.\nClass NumaResourceAllocation;\n// NUMA Resources Allocator reads the NUMA topology and assigns NUMA nodes to the containers.\nClass NumaResourceAllocator;\n// ResourceHandler implementation for allocating NUMA Resources to each container.\nClass NumaResourceHandlerImpl;\n", "des": "Package org.apache.hadoop.yarn.server.nodemanager.containermanager.linux."}
{"index": 1120, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package docker\n\n// \nClass DockerClient;\n// \nClass DockerCommand;\n// Utility class for executing common docker operations.\nClass DockerCommandExecutor;\n// Encapsulates the docker exec command and its command line arguments.\nClass DockerExecCommand;\n// Encapsulates the docker images command and its command line arguments.\nClass DockerImagesCommand;\n// Encapsulates the docker inspect command and its command line arguments.\nClass DockerInspectCommand;\n", "des": "Package containing classes related to Docker commands and common operations used within the @{link DockerLinuxContainerRuntime}."}
{"index": 1121, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package runc\n\n// This class is a plugin interface for the RuncContainerRuntime to convert image tags into OCI Image Manifests.\nInterface RuncImageTagToManifestPlugin;\n// This class is a plugin interface for the RuncContainerRuntime that maps OCI Image Manifests into associated config and layers.\nInterface RuncManifestToResourcesPlugin;\n", "des": "Package containing classes related to runC commands and common operations used within the @{link RuncContainerRuntime}."}
{"index": 1122, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package records\n\n// Set of configuration properties that can be injected into the service components via envs, files and custom pluggable helper docker containers.\nClass AuxServiceConfiguration;\n// A config file that needs to be created and made available as a volume in an service component container.\nClass AuxServiceFile;\n// An Service resource has the following attributes.\nClass AuxServiceRecord;\n// A list of Services.\nClass AuxServiceRecords;\n// Config Type.\nEnum AuxServiceFile.TypeEnum;\n", "des": "Package used for auxiliary services manifest records."}
{"index": 1123, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package resourceplugin\n\n// Interface to make different resource plugins (e.g.\nInterface DockerCommandPlugin;\n// ResourcePlugin is an interface for node manager to easier support discovery/manage/isolation for new resource types.\nInterface ResourcePlugin;\n// Plugins to handle resources on a node.\nClass NodeResourceUpdaterPlugin;\n// Manages ResourcePlugin configured on this NodeManager.\nClass ResourcePluginManager;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1124, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package nec\n\n// A device framework plugin which supports NEC Vector Engine.\nClass NECVEPlugin;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1125, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package nvidia\n\n// Nvidia GPU plugin supporting both Nvidia container runtime v2 for Docker and non-Docker container.\nClass NvidiaGPUPluginForRuntimeV2;\n// Different type of link.\nEnum NvidiaGPUPluginForRuntimeV2.DeviceLinkType;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1126, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package deviceframework\n\n// Device wrapper class used for NM REST API.\nClass AssignedDevice;\n// Schedule device resource based on requirements and do book keeping It holds all device type resource and can do scheduling as a default scheduler.\nClass DeviceMappingManager;\n// The DevicePluginAdapter will adapt existing hooks.\nClass DevicePluginAdapter;\n// Bridge DevicePlugin and the hooks related to lunch Docker container.\nClass DeviceResourceDockerRuntimePluginImpl;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1127, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package fpga\n\n// FPGA plugin interface for vendor to implement.\nInterface AbstractFpgaVendorPlugin;\n// A class that represents an FPGA card.\nClass FpgaDevice;\n// \nClass FpgaDiscoverer;\n// \nClass FpgaNodeResourceUpdateHandler;\n// \nClass FpgaResourcePlugin;\n// Intel FPGA for OpenCL plugin.\nClass IntelFpgaOpenclPlugin;\n// Helper class to run aocl diagnose & determine major/minor numbers.\nClass IntelFpgaOpenclPlugin.InnerShellExecutor;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1128, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package discovery\n\n// Interface for an FPGA device discovery strategy.\nInterface FPGADiscoveryStrategy;\n// FPGA device discovery strategy which invokes the \"aocl\" SDK command to retrieve the list of available FPGA cards.\nClass AoclOutputBasedDiscoveryStrategy;\n// Parses a string which specifies FPGA devices.\nClass DeviceSpecParser;\n// FPGA device discovery strategy which invokes an external script.\nClass ScriptBasedFPGADiscoveryStrategy;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1129, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package gpu\n\n// In addition to GpuDevice, this include container id and more runtime information related to who is using the GPU device if possible\nClass AssignedGpuDevice;\n// This class is used to represent GPU device while allocation.\nClass GpuDevice;\n// \nClass GpuDiscoverer;\n// Factory to create GpuDocker Command Plugin instance\nClass GpuDockerCommandPluginFactory;\n// \nClass GpuNodeResourceUpdateHandler;\n// \nClass GpuResourcePlugin;\n", "des": "Package for GPU support classes."}
{"index": 1130, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package scheduler\n\n// This interface abstracts out how a container contributes to Resource Utilization of the node.\nInterface ResourceUtilizationTracker;\n// An implementation of the ResourceUtilizationTracker that equates resource utilization with the total resource allocated to the container.\nClass AllocationBasedResourceUtilizationTracker;\n// The ContainerScheduler manages a collection of runnable containers.\nClass ContainerScheduler;\n", "des": "Container Scheduler"}
{"index": 1131, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package csi\n\n// Publish/un-publish CSI volumes on node manager.\nClass ContainerVolumePublisher;\n", "des": "CSI volumes."}
{"index": 1132, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package nodelabels\n\n// Interface which will be responsible for fetching node descriptors, a node descriptor could be a NodeLabel or a NodeAttribute.\nInterface NodeDescriptorsProvider<T>;\n// Provides base implementation of NodeDescriptorsProvider with Timer and expects subclass to provide TimerTask which can fetch node descriptors.\nClass AbstractNodeDescriptorsProvider<T>;\n// Configuration based node attributes provider.\nClass ConfigurationNodeAttributesProvider;\n", "des": "Package to encapsulate classes used to handle node labels and node attributes in NM."}
{"index": 1133, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package timelineservice\n\n// Event posted to NMTimelinePublisher which in turn publishes it to timelineservice v2.\nClass NMTimelineEvent;\n// Metrics publisher service that publishes data to the timeline service v.2.\nClass NMTimelinePublisher;\n// Type of NMTimelineEvent.\nEnum NMTimelineEventType;\n", "des": "Package org.apache.hadoop.yarn.server.nodemanager.timelineservice contains classes related to publishing container events and other NM lifecycle events to ATSv2."}
{"index": 1134, "repo": "hadoop-yarn-api-3.3.6", "code": "package ams\n\n// This is a marker interface for a context object that is injected into the ApplicationMasterService processor.\nInterface ApplicationMasterServiceContext;\n// Interface to abstract out the the actual processing logic of the Application Master Service.\nInterface ApplicationMasterServiceProcessor;\n// Utility methods to be used by ApplicationMasterServiceProcessor.\nClass ApplicationMasterServiceUtils;\n", "des": "Public api for Application Master Service interceptors."}
{"index": 1135, "repo": "hadoop-yarn-api-3.3.6", "code": "package impl\n\n// LightWeightResource extends Resource to handle base resources such as memory and CPU.\nClass LightWeightResource;\n", "des": "Package org.apache.hadoop.yarn.api.records.impl contains classes which define basic resources."}
{"index": 1136, "repo": "hadoop-yarn-api-3.3.6", "code": "package timeline\n\n// \nClass TimelineAbout;\n// The response of delegation token related request\nClass TimelineDelegationTokenResponse;\n// This class contains the information about a timeline domain, which is used to a user to host a number of timeline entities, isolating them from others'.\nClass TimelineDomain;\n// The class that hosts a list of timeline domains.\nClass TimelineDomains;\n// The class that hosts a list of timeline entities.\nClass TimelineEntities;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1137, "repo": "hadoop-yarn-api-3.3.6", "code": "package timelineservice\n\n// This entity represents an application attempt.\nClass ApplicationAttemptEntity;\n// This entity represents an application.\nClass ApplicationEntity;\n// This entity represents a YARN cluster.\nClass ClusterEntity;\n// This entity represents a container belonging to an application attempt.\nClass ContainerEntity;\n// Entity that represents a record for flow activity.\nClass FlowActivityEntity;\n// This entity represents a flow run.\nClass FlowRunEntity;\n", "des": "Package org.apache.hadoop.yarn.api.records.timelineservice contains classes which define the data model for ATSv2."}
{"index": 1138, "repo": "hadoop-yarn-api-3.3.6", "code": "package resource\n\n// Interface used to enable the elements of the constraint tree to be visited.\nInterface PlacementConstraint.Visitable;\n// Visitor API for a constraint tree.\nInterface PlacementConstraint.Visitor<T>;\n// PlacementConstraint represents a placement constraint for a resource allocation.\nClass PlacementConstraint;\n// Abstract class that acts as the superclass of all placement constraint classes.\nClass PlacementConstraint.AbstractConstraint;\n", "des": "API related to resources."}
{"index": 1139, "repo": "hadoop-yarn-api-3.3.6", "code": "package constraint\n\n// Tokenizer interface that used to parse an expression.\nInterface PlacementConstraintParser.ConstraintTokenizer;\n// Placement constraint expression parser.\nClass PlacementConstraintParser;\n// A basic tokenizer that splits an expression by a given delimiter.\nClass PlacementConstraintParser.BaseStringTokenizer;\n// Constraint parser used to parse a given target expression, such as \"cardinality, NODE, foo, 0, 1\".\nClass PlacementConstraintParser.CardinalityConstraintParser;\n", "des": "Package org.apache.hadoop.yarn.util.constraint contains classes which is used as utility class for placement constraints."}
{"index": 1140, "repo": "hadoop-yarn-api-3.3.6", "code": "package csi\n\n// Utility class for CSI in the API level.\nClass CsiConfigUtils;\n", "des": "Package that includes some CSI utility classes."}
{"index": 1141, "repo": "hadoop-yarn-api-3.3.6", "code": "package resource\n\n// Helper class to read the resource-types to be supported by the system.\nClass ResourceUtils;\n", "des": "Package org.apache.hadoop.yarn.util.resource contains classes which is used as utility class for resource profile computations."}
{"index": 1142, "repo": "commons-math3-3.6.1", "code": "package math3\n\n// Interface representing a field.\nInterface Field<T>;\n// Interface representing field elements.\nInterface FieldElement<T>;\n// Interface representing a real field.\nInterface RealFieldElement<T>;\n", "des": "Common classes used throughout the commons-math library."}
{"index": 1143, "repo": "commons-math3-3.6.1", "code": "package analysis\n\n// An interface representing a bivariate real function.\nInterface BivariateFunction;\n// as of 3.1 replaced by MultivariateDifferentiableFunction\nInterface DifferentiableMultivariateFunction;\n// as of 3.1 replaced by MultivariateDifferentiableVectorFunction\nInterface DifferentiableMultivariateVectorFunction;\n// as of 3.1 replaced by UnivariateDifferentiableFunction\nInterface DifferentiableUnivariateFunction;\n", "des": "Parent package for common numerical analysis procedures, including root finding, function interpolation and integration."}
{"index": 1144, "repo": "commons-math3-3.6.1", "code": "package differentiation\n\n// Extension of MultivariateFunction representing a multivariate differentiable real function.\nInterface MultivariateDifferentiableFunction;\n// Extension of MultivariateVectorFunction representing a multivariate differentiable vectorial function.\nInterface MultivariateDifferentiableVectorFunction;\n// Interface for univariate functions derivatives.\nInterface UnivariateDifferentiableFunction;\n", "des": "This package holds the main interfaces and basic building block classes dealing with differentiation."}
{"index": 1145, "repo": "commons-math3-3.6.1", "code": "package function\n\n// Absolute value function.\nClass Abs;\n// Arc-cosine function.\nClass Acos;\n// Hyperbolic arc-cosine function.\nClass Acosh;\n// Add the two operands.\nClass Add;\n// Arc-sine function.\nClass Asin;\n// Hyperbolic arc-sine function.\nClass Asinh;\n// Arc-tangent function.\nClass Atan;\n// Arc-tangent function.\nClass Atan2;\n// Hyperbolic arc-tangent function.\nClass Atanh;\n// Cube root function.\nClass Cbrt;\n// ceil function.\nClass Ceil;\n// Constant function.\nClass Constant;\n", "des": "The function package contains function objects that wrap the methods contained in Math, as well as common mathematical functions such as the gaussian and sinc functions."}
{"index": 1146, "repo": "commons-math3-3.6.1", "code": "package integration\n\n// Interface for univariate real integration algorithms.\nInterface UnivariateIntegrator;\n// Provide a default implementation for several generic functions.\nClass BaseAbstractUnivariateIntegrator;\n// This algorithm divides the integration interval into equally-sized sub-interval and on each of them performs a Legendre-Gauss quadrature.\nClass IterativeLegendreGaussIntegrator;\n// As of 3.1 (to be removed in 4.0).\nClass LegendreGaussIntegrator;\n", "des": "Numerical integration (quadrature) algorithms for univariate real functions."}
{"index": 1147, "repo": "commons-math3-3.6.1", "code": "package gauss\n\n// Base class for rules that determines the integration nodes and their weights.\nClass BaseRuleFactory<T extends Number>;\n// Class that implements the Gaussian rule for integrating a weighted function.\nClass GaussIntegrator;\n// Class that provides different ways to compute the nodes and weights to be used by the Gaussian integration rule.\nClass GaussIntegratorFactory;\n// Factory that creates a Gauss-type quadrature rule using Hermite polynomials of the first kind.\nClass HermiteRuleFactory;\n", "des": "Gauss family of quadrature schemes."}
{"index": 1148, "repo": "commons-math3-3.6.1", "code": "package interpolation\n\n// Interface representing a bivariate real interpolating function where the sample points must be specified on a regular grid.\nInterface BivariateGridInterpolator;\n// Interface representing a univariate real interpolating function.\nInterface MultivariateInterpolator;\n// Interface representing a trivariate real interpolating function where the sample points must be specified on a regular grid.\nInterface TrivariateGridInterpolator;\n", "des": "Univariate real functions interpolation algorithms."}
{"index": 1149, "repo": "commons-math3-3.6.1", "code": "package polynomials\n\n// Immutable representation of a real polynomial function with real coefficients.\nClass PolynomialFunction;\n// Dedicated parametric polynomial class.\nClass PolynomialFunction.Parametric;\n// Implements the representation of a real polynomial function in Lagrange Form.\nClass PolynomialFunctionLagrangeForm;\n// Implements the representation of a real polynomial function in Newton Form.\nClass PolynomialFunctionNewtonForm;\n", "des": "Univariate real polynomials implementations, seen as differentiable univariate real functions."}
{"index": 1150, "repo": "commons-math3-3.6.1", "code": "package solvers\n\n// Interface for (univariate real) rootfinding algorithms.\nInterface BaseUnivariateSolver<FUNC extends UnivariateFunction>;\n// Interface for (univariate real) root-finding algorithms that maintain a bracketed solution.\nInterface BracketedRealFieldUnivariateSolver<T extends RealFieldElement<T>>;\n// Interface for (univariate real) root-finding algorithms that maintain a bracketed solution.\nInterface BracketedUnivariateSolver<FUNC extends UnivariateFunction>;\n", "des": "Root finding algorithms, for univariate real functions."}
{"index": 1151, "repo": "commons-math3-3.6.1", "code": "package complex\n\n// Representation of a Complex number, i.e.\nClass Complex;\n// Representation of the complex numbers field.\nClass ComplexField;\n// Formats a Complex number in cartesian format \"Re(c) + Im(c)i\".\nClass ComplexFormat;\n// Static implementations of common Complex utilities functions.\nClass ComplexUtils;\n// This class implements quaternions (Hamilton's hypercomplex numbers).\nClass Quaternion;\n// A helper class for the computation and caching of the n-th roots of unity.\nClass RootsOfUnity;\n", "des": "Complex number type and implementations of complex transcendental functions."}
{"index": 1152, "repo": "commons-math3-3.6.1", "code": "package dfp\n\n// as of 3.6, replaced with RealFieldUnivariateFunction\nInterface UnivariateDfpFunction;\n// as of 3.6 replaced with FieldBracketingNthOrderBrentSolver\nClass BracketingNthOrderBrentSolverDFP;\n// Decimal floating point library for Java\nClass Dfp;\n// Subclass of Dfp which hides the radix-10000 artifacts of the superclass.\nClass DfpDec;\n// Field for Decimal floating point instances.\nClass DfpField;\n// Mathematical routines for use with Dfp.\nClass DfpMath;\n", "des": "Decimal floating point library for Java"}
{"index": 1153, "repo": "commons-math3-3.6.1", "code": "package distribution\n\n// Interface for distributions on the integers.\nInterface IntegerDistribution;\n// Base interface for multivariate distributions on the reals.\nInterface MultivariateRealDistribution;\n// Base interface for distributions on the reals.\nInterface RealDistribution;\n// Base class for integer-valued discrete distributions.\nClass AbstractIntegerDistribution;\n// Base class for multivariate probability distributions.\nClass AbstractMultivariateRealDistribution;\n", "des": "Implementations of common discrete and continuous distributions."}
{"index": 1154, "repo": "commons-math3-3.6.1", "code": "package fitting\n\n// Expectation-Maximization algorithm for fitting the parameters of multivariate normal mixture model distributions.\nClass MultivariateNormalMixtureExpectationMaximization;\n", "des": "Fitting of parameters against distributions."}
{"index": 1155, "repo": "commons-math3-3.6.1", "code": "package exception\n\n// Error thrown when a numerical computation can not be performed because the numerical result failed to converge to a finite value.\nClass ConvergenceException;\n// Exception to be thrown when two dimensions differ.\nClass DimensionMismatchException;\n// Exception to be thrown when there is insufficient data to perform a computation.\nClass InsufficientDataException;\n// Base class for arithmetic exceptions.\nClass MathArithmeticException;\n", "des": "Specialized exceptions for algorithms errors."}
{"index": 1156, "repo": "commons-math3-3.6.1", "code": "package util\n\n// Interface for accessing the context data structure stored in Commons Math exceptions.\nInterface ExceptionContextProvider;\n// Interface for localizable strings.\nInterface Localizable;\n// Utility class for transforming the list of arguments passed to constructors of exceptions.\nClass ArgUtils;\n// Dummy implementation of the Localizable interface, without localization.\nClass DummyLocalizable;\n", "des": "Classes supporting exception localization."}
{"index": 1157, "repo": "commons-math3-3.6.1", "code": "package filter\n\n// Defines the measurement model for the use with a KalmanFilter.\nInterface MeasurementModel;\n// Defines the process dynamics model for the use with a KalmanFilter.\nInterface ProcessModel;\n// Default implementation of a MeasurementModel for the use with a KalmanFilter.\nClass DefaultMeasurementModel;\n// Default implementation of a ProcessModel for the use with a KalmanFilter.\nClass DefaultProcessModel;\n", "des": "Implementations of common discrete-time linear filters."}
{"index": 1158, "repo": "commons-math3-3.6.1", "code": "package fitting\n\n// Base class that contains common code for fitting parametric univariate real functions y = f(pi;x), where x is the independent variable and the pi are the parameters.\nClass AbstractCurveFitter;\n// Vector function for computing function theoretical values.\nClass AbstractCurveFitter.TheoreticalValuesFunction;\n// As of 3.3.\nClass CurveFitter<T extends ParametricUnivariateFunction>;\n// Fits points to a Gaussian function.\nClass GaussianCurveFitter;\n", "des": "Classes to perform curve fitting."}
{"index": 1159, "repo": "commons-math3-3.6.1", "code": "package leastsquares\n\n// An algorithm that can be applied to a non-linear least squares problem.\nInterface LeastSquaresOptimizer;\n// The optimum found by the optimizer.\nInterface LeastSquaresOptimizer.Optimum;\n// The data necessary to define a non-linear least squares problem.\nInterface LeastSquaresProblem;\n// An evaluation of a LeastSquaresProblem at a particular point.\nInterface LeastSquaresProblem.Evaluation;\n", "des": "This package provides algorithms that minimize the residuals between observations and model values."}
{"index": 1160, "repo": "commons-math3-3.6.1", "code": "package fraction\n\n// Common part shared by both FractionFormat and BigFractionFormat.\nClass AbstractFormat;\n// Representation of a rational number without any overflow.\nClass BigFraction;\n// Representation of the fractional numbers without any overflow field.\nClass BigFractionField;\n// Formats a BigFraction number in proper format or improper format.\nClass BigFractionFormat;\n// Representation of a rational number.\nClass Fraction;\n// Representation of the fractional numbers field.\nClass FractionField;\n", "des": "Fraction number type and fraction number formatting."}
{"index": 1161, "repo": "commons-math3-3.6.1", "code": "package genetics\n\n// Policy used to create a pair of new chromosomes by performing a crossover operation on a source pair of chromosomes.\nInterface CrossoverPolicy;\n// Fitness of a chromosome.\nInterface Fitness;\n// Algorithm used to mutate a chromosome.\nInterface MutationPolicy;\n// Interface indicating that the chromosome represents a permutation of objects.\nInterface PermutationChromosome<T>;\n// A collection of chromosomes that facilitates generational evolution.\nInterface Population;\n", "des": "This package provides Genetic Algorithms components and implementations."}
{"index": 1162, "repo": "commons-math3-3.6.1", "code": "package geometry\n\n// This interface represents a generic geometrical point.\nInterface Point<S extends Space>;\n// This interface represents a generic space, with affine and vectorial counterparts.\nInterface Space;\n// This interface represents a generic vector in a vectorial space or a point in an affine space.\nInterface Vector<S extends Space>;\n// Formats a vector in components list format \"{x; y; ...}\".\nClass VectorFormat<S extends Space>;\n", "des": "This package is the top level package for geometry."}
{"index": 1163, "repo": "commons-math3-3.6.1", "code": "package enclosing\n\n// Interface for algorithms computing enclosing balls.\nInterface Encloser<S extends Space,P extends Point<S>>;\n// Interface for generating balls based on support points.\nInterface SupportBallGenerator<S extends Space,P extends Point<S>>;\n// This class represents a ball enclosing some points.\nClass EnclosingBall<S extends Space,P extends Point<S>>;\n", "des": "This package provides interfaces and classes related to the smallest enclosing ball problem."}
{"index": 1164, "repo": "commons-math3-3.6.1", "code": "package oned\n\n// This class implements a one-dimensional space.\nClass Euclidean1D;\n// This class represents a 1D interval.\nClass Interval;\n// This class represents a 1D region: a set of intervals.\nClass IntervalsSet;\n// This class represents a 1D oriented hyperplane.\nClass OrientedPoint;\n// This class represents sub-hyperplane for OrientedPoint.\nClass SubOrientedPoint;\n// This class represents a 1D vector.\nClass Vector1D;\n// Formats a 1D vector in components list format \"{x}\".\nClass Vector1DFormat;\n", "des": "This package provides basic 1D geometry components."}
{"index": 1165, "repo": "commons-math3-3.6.1", "code": "package threed\n\n// This class implements a three-dimensional space.\nClass Euclidean3D;\n// This class is a re-implementation of Rotation using RealFieldElement.\nClass FieldRotation<T extends RealFieldElement<T>>;\n// This class is a re-implementation of Vector3D using RealFieldElement.\nClass FieldVector3D<T extends RealFieldElement<T>>;\n// The class represent lines in a three dimensional space.\nClass Line;\n// Extractor for polyhedrons sets outlines.\nClass OutlineExtractor;\n", "des": "This package provides basic 3D geometry components."}
{"index": 1166, "repo": "commons-math3-3.6.1", "code": "package twod\n\n// Class generating an enclosing ball from its support points.\nClass DiskGenerator;\n// This class implements a two-dimensional space.\nClass Euclidean2D;\n// This class represents an oriented line in the 2D plane.\nClass Line;\n// This class represents a 2D region: a set of polygons.\nClass PolygonsSet;\n// Simple container for a two-points segment.\nClass Segment;\n// This class represents a sub-hyperplane for Line.\nClass SubLine;\n// This class represents a 2D vector.\nClass Vector2D;\n", "des": "This package provides basic 2D geometry components."}
{"index": 1167, "repo": "commons-math3-3.6.1", "code": "package hull\n\n// Interface for convex hull generators in the two-dimensional euclidean space.\nInterface ConvexHullGenerator2D;\n// A simple heuristic to improve the performance of convex hull algorithms.\nClass AklToussaintHeuristic;\n// This class represents a convex hull in an two-dimensional euclidean space.\nClass ConvexHull2D;\n// Implements Andrew's monotone chain method to generate the convex hull of a finite set of points in the two-dimensional euclidean space.\nClass MonotoneChain;\n", "des": "This package provides algorithms to generate the convex hull for a set of points in an two-dimensional euclidean space."}
{"index": 1168, "repo": "commons-math3-3.6.1", "code": "package hull\n\n// This class represents a convex hull.\nInterface ConvexHull<S extends Space,P extends Point<S>>;\n// Interface for convex hull generators.\nInterface ConvexHullGenerator<S extends Space,P extends Point<S>>;\n", "des": "This package provides interfaces and classes related to the convex hull problem."}
{"index": 1169, "repo": "commons-math3-3.6.1", "code": "package partitioning\n\n// This interface gather the merging operations between a BSP tree leaf and another BSP tree.\nInterface BSPTree.LeafMerger<S extends Space>;\n// This interface handles the corner cases when an internal node cut sub-hyperplane vanishes.\nInterface BSPTree.VanishingCutHandler<S extends Space>;\n// This interface is used to visit BSP tree nodes.\nInterface BSPTreeVisitor<S extends Space>;\n", "des": "This package provides classes to implement Binary Space Partition trees."}
{"index": 1170, "repo": "commons-math3-3.6.1", "code": "package utilities\n\n// as of 3.4, this class is not used anymore and considered to be out of scope of Apache Commons Math\nClass AVLTree<T extends Comparable<T>>;\n// as of 3.4, this class is not used anymore and considered to be out of scope of Apache Commons Math\nClass OrderedTuple;\n", "des": "This package provides multidimensional ordering features for partitioning."}
{"index": 1171, "repo": "commons-math3-3.6.1", "code": "package oned\n\n// This class represents an arc on a circle.\nClass Arc;\n// This class represents a region of a circle: a set of arcs.\nClass ArcsSet;\n// Class holding the results of the split method.\nClass ArcsSet.Split;\n// This class represents a 1D oriented hyperplane on the circle.\nClass LimitAngle;\n// This class represents a point on the 1-sphere.\nClass S1Point;\n// This class implements a one-dimensional sphere (i.e.\nClass Sphere1D;\n", "des": "This package provides basic geometry components on the 1-sphere."}
{"index": 1172, "repo": "commons-math3-3.6.1", "code": "package twod\n\n// This class represents an oriented great circle on the 2-sphere.\nClass Circle;\n// Spherical polygons boundary edge.\nClass Edge;\n// This class represents a point on the 2-sphere.\nClass S2Point;\n// This class implements a two-dimensional sphere (i.e.\nClass Sphere2D;\n// This class represents a region on the 2-sphere: a set of spherical polygons.\nClass SphericalPolygonsSet;\n// This class represents a sub-hyperplane for Circle.\nClass SubCircle;\n", "des": "This package provides basic geometry components on the 2-sphere."}
{"index": 1173, "repo": "commons-math3-3.6.1", "code": "package linear\n\n// Interface defining very basic matrix operations.\nInterface AnyMatrix;\n// Interface handling decomposition algorithms that can solve A × X = B.\nInterface DecompositionSolver;\n// Interface handling decomposition algorithms that can solve A × X = B.\nInterface FieldDecompositionSolver<T extends FieldElement<T>>;\n// Interface defining field-valued matrix with basic algebraic operations.\nInterface FieldMatrix<T extends FieldElement<T>>;\n", "des": "Linear algebra support."}
{"index": 1174, "repo": "commons-math3-3.6.1", "code": "package clustering\n\n// Interface for n-dimensional points that can be clustered together.\nInterface Clusterable;\n// A Cluster used by centroid-based clustering algorithms.\nClass CentroidCluster<T extends Clusterable>;\n// Cluster holding a set of Clusterable points.\nClass Cluster<T extends Clusterable>;\n// Base class for clustering algorithms.\nClass Clusterer<T extends Clusterable>;\n", "des": "Clustering algorithms."}
{"index": 1175, "repo": "commons-math3-3.6.1", "code": "package evaluation\n\n// Base class for cluster evaluation methods.\nClass ClusterEvaluator<T extends Clusterable>;\n// Computes the sum of intra-cluster distance variances according to the formula:\nClass SumOfClusterVariances<T extends Clusterable>;\n", "des": "Cluster evaluation methods."}
{"index": 1176, "repo": "commons-math3-3.6.1", "code": "package distance\n\n// Interface for distance measures of n-dimensional vectors.\nInterface DistanceMeasure;\n// Calculates the Canberra distance between two points.\nClass CanberraDistance;\n// Calculates the L∞ (max of abs) distance between two points.\nClass ChebyshevDistance;\n// Calculates the Earh Mover's distance (also known as Wasserstein metric) between two distributions.\nClass EarthMoversDistance;\n// Calculates the L2 (Euclidean) distance between two points.\nClass EuclideanDistance;\n", "des": "Common distance measures."}
{"index": 1177, "repo": "commons-math3-3.6.1", "code": "package neuralnet\n\n// Defines how to assign the first value of a neuron's feature.\nInterface FeatureInitializer;\n// Describes how to update the network in response to a training sample.\nInterface UpdateAction;\n// Creates functions that will select the initial values of a neuron's features.\nClass FeatureInitializerFactory;\n// Utilities for network maps.\nClass MapUtils;\n// Neural network, composed of Neuron instances and the links between them.\nClass Network;\n", "des": "Neural networks."}
{"index": 1178, "repo": "commons-math3-3.6.1", "code": "package oned\n\n// Neural network with the topology of a one-dimensional line.\nClass NeuronString;\n", "des": "One-dimensional neural networks."}
{"index": 1179, "repo": "commons-math3-3.6.1", "code": "package sofm\n\n// Provides the learning rate as a function of the number of calls already performed during the learning task.\nInterface LearningFactorFunction;\n// Provides the network neighbourhood's size as a function of the number of calls already performed during the learning task.\nInterface NeighbourhoodSizeFunction;\n// Trainer for Kohonen's Self-Organizing Map.\nClass KohonenTrainingTask;\n// Update formula for Kohonen's Self-Organizing Map.\nClass KohonenUpdateAction;\n", "des": "Self Organizing Feature Map."}
{"index": 1180, "repo": "commons-math3-3.6.1", "code": "package util\n\n// Exponential decay function: a e-x / b, where x is the (integer) independent variable.\nClass ExponentialDecayFunction;\n// Decay function whose shape is similar to a sigmoid.\nClass QuasiSigmoidDecayFunction;\n", "des": "Miscellaneous utilities."}
{"index": 1181, "repo": "commons-math3-3.6.1", "code": "package twod\n\n// Neural network with the topology of a two-dimensional surface.\nClass NeuronSquareMesh2D;\n// Horizontal (along row) direction.\nEnum NeuronSquareMesh2D.HorizontalDirection;\n// Vertical (along column) direction.\nEnum NeuronSquareMesh2D.VerticalDirection;\n", "des": "Two-dimensional neural networks."}
{"index": 1182, "repo": "commons-math3-3.6.1", "code": "package util\n\n// Interface for algorithms that compute some metrics of the projection of data on a 2D-map.\nInterface MapDataVisualization;\n// Interface for algorithms that compute some property of a 2D-map.\nInterface MapVisualization;\n// Computes the hit histogram.\nClass HitHistogram;\n// Helper class to find the grid coordinates of a neuron.\nClass LocationFinder;\n// Container holding a (row, column) pair.\nClass LocationFinder.Location;\n// Computes the quantization error histogram.\nClass QuantizationError;\n", "des": "Utilities to visualize two-dimensional neural networks."}
{"index": 1183, "repo": "commons-math3-3.6.1", "code": "package ode\n\n// This interface allows users to add secondary differential equations to a primary set of differential equations.\nInterface FieldSecondaryEquations<T extends RealFieldElement<T>>;\n// This interface represents a first order differential equations set.\nInterface FirstOrderDifferentialEquations;\n// This interface represents a first order differential equations set.\nInterface FirstOrderFieldDifferentialEquations<T extends RealFieldElement<T>>;\n", "des": "This package provides classes to solve Ordinary Differential Equations problems."}
{"index": 1184, "repo": "commons-math3-3.6.1", "code": "package events\n\n// This interface represents a handler for discrete events triggered during ODE integration.\nInterface EventHandler;\n// This interface represents a handler for discrete events triggered during ODE integration.\nInterface FieldEventHandler<T extends RealFieldElement<T>>;\n// Wrapper used to detect only increasing or decreasing events.\nClass EventFilter;\n// This class handles the state for one event handler during integration steps.\nClass EventState;\n", "des": "This package provides classes to handle discrete events occurring during Ordinary Differential Equations integration."}
{"index": 1185, "repo": "commons-math3-3.6.1", "code": "package nonstiff\n\n// This interface represents an integrator based on Butcher arrays.\nInterface FieldButcherArrayProvider<T extends RealFieldElement<T>>;\n// This class implements explicit Adams-Bashforth integrators for Ordinary Differential Equations.\nClass AdamsBashforthFieldIntegrator<T extends RealFieldElement<T>>;\n// This class implements explicit Adams-Bashforth integrators for Ordinary Differential Equations.\nClass AdamsBashforthIntegrator;\n", "des": "This package provides classes to solve non-stiff Ordinary Differential Equations problems."}
{"index": 1186, "repo": "commons-math3-3.6.1", "code": "package sampling\n\n// This interface represents a handler that should be called after each successful fixed step.\nInterface FieldFixedStepHandler<T extends RealFieldElement<T>>;\n// This interface represents a handler that should be called after each successful step.\nInterface FieldStepHandler<T extends RealFieldElement<T>>;\n// This interface represents an interpolator over the last step during an ODE integration.\nInterface FieldStepInterpolator<T extends RealFieldElement<T>>;\n", "des": "This package provides classes to handle sampling steps during Ordinary Differential Equations integration."}
{"index": 1187, "repo": "commons-math3-3.6.1", "code": "package optim\n\n// This interface specifies how to check if an optimization algorithm has converged.\nInterface ConvergenceChecker<PAIR>;\n// Marker interface.\nInterface OptimizationData;\n// Common settings for all optimization problems.\nInterface OptimizationProblem<PAIR>;\n// Base class for all convergence checker implementations.\nClass AbstractConvergenceChecker<PAIR>;\n// Base class for implementing optimization problems.\nClass AbstractOptimizationProblem<PAIR>;\n", "des": "Generally, optimizers are algorithms that will either minimize or maximize a scalar function, called the objective function."}
{"index": 1188, "repo": "commons-math3-3.6.1", "code": "package linear\n\n// A linear constraint for a linear optimization problem.\nClass LinearConstraint;\n// Class that represents a set of linear constraints.\nClass LinearConstraintSet;\n// An objective function for a linear optimization problem.\nClass LinearObjectiveFunction;\n// Base class for implementing linear optimizers.\nClass LinearOptimizer;\n// A constraint for a linear optimization problem indicating whether all variables must be restricted to non-negative values.\nClass NonNegativeConstraint;\n", "des": "Optimization algorithms for linear constrained problems."}
{"index": 1189, "repo": "commons-math3-3.6.1", "code": "package scalar\n\n// Base class for implementing optimizers for multivariate scalar differentiable functions.\nClass GradientMultivariateOptimizer;\n// This class converts vectorial objective functions to scalar objective functions when the goal is to minimize them.\nClass LeastSquaresConverter;\n// Class for finding the minimum of the objective function along a given direction.\nClass LineSearch;\n// Multi-start optimizer.\nClass MultiStartMultivariateOptimizer;\n", "des": "Algorithms for optimizing a scalar function."}
{"index": 1190, "repo": "commons-math3-3.6.1", "code": "package gradient\n\n// This interface represents a preconditioner for differentiable scalar objective function optimizers.\nInterface Preconditioner;\n// Non-linear conjugate gradient optimizer.\nClass NonLinearConjugateGradientOptimizer;\n// As of v3.3, this class is not used anymore.\nClass NonLinearConjugateGradientOptimizer.BracketingStep;\n// Default identity preconditioner.\nClass NonLinearConjugateGradientOptimizer.IdentityPreconditioner;\n", "des": "This package provides optimization algorithms that require derivatives."}
{"index": 1191, "repo": "commons-math3-3.6.1", "code": "package noderiv\n\n// This class implements the simplex concept.\nClass AbstractSimplex;\n// Powell's BOBYQA algorithm.\nClass BOBYQAOptimizer;\n// An implementation of the active Covariance Matrix Adaptation Evolution Strategy (CMA-ES) for non-linear, non-convex, non-smooth, global function minimization.\nClass CMAESOptimizer;\n// Population size.\nClass CMAESOptimizer.PopulationSize;\n// Input sigma values.\nClass CMAESOptimizer.Sigma;\n", "des": "This package provides optimization algorithms that do not require derivatives."}
{"index": 1192, "repo": "commons-math3-3.6.1", "code": "package vector\n\n// All classes and interfaces in this package are deprecated.\nClass JacobianMultivariateVectorOptimizer;\n// All classes and interfaces in this package are deprecated.\nClass ModelFunction;\n// All classes and interfaces in this package are deprecated.\nClass ModelFunctionJacobian;\n// \nClass MultiStartMultivariateVectorOptimizer;\n// \nClass MultivariateVectorOptimizer;\n// All classes and interfaces in this package are deprecated.\nClass Target;\n", "des": "Algorithms for optimizing a vector function."}
{"index": 1193, "repo": "commons-math3-3.6.1", "code": "package jacobian\n\n// All classes and interfaces in this package are deprecated.\nClass AbstractLeastSquaresOptimizer;\n// All classes and interfaces in this package are deprecated.\nClass GaussNewtonOptimizer;\n// All classes and interfaces in this package are deprecated.\nClass LevenbergMarquardtOptimizer;\n", "des": "This package provides optimization algorithms that require derivatives."}
{"index": 1194, "repo": "commons-math3-3.6.1", "code": "package univariate\n\n// Provide an interval that brackets a local optimum of a function.\nClass BracketFinder;\n// For a function defined on some interval (lo, hi), this class finds an approximation x to the point at which the function attains its minimum.\nClass BrentOptimizer;\n// Special implementation of the UnivariateOptimizer interface adding multi-start features to an existing optimizer.\nClass MultiStartUnivariateOptimizer;\n// Search interval and (optional) start value.\nClass SearchInterval;\n", "des": "One-dimensional optimization algorithms."}
{"index": 1195, "repo": "commons-math3-3.6.1", "code": "package optimization\n\n// As of 3.1 (to be removed in 4.0).\nInterface BaseMultivariateOptimizer<FUNC extends MultivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nInterface BaseMultivariateSimpleBoundsOptimizer<FUNC extends MultivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nInterface BaseMultivariateVectorOptimizer<FUNC extends MultivariateVectorFunction>;\n// As of 3.1 (to be removed in 4.0).\nInterface BaseOptimizer<PAIR>;\n", "des": "All classes and sub-packages of this package are deprecated."}
{"index": 1196, "repo": "commons-math3-3.6.1", "code": "package direct\n\n// As of 3.1 (to be removed in 4.0).\nClass AbstractSimplex;\n// As of 3.1 (to be removed in 4.0).\nClass BaseAbstractMultivariateOptimizer<FUNC extends MultivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nClass BaseAbstractMultivariateSimpleBoundsOptimizer<FUNC extends MultivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nClass BaseAbstractMultivariateVectorOptimizer<FUNC extends MultivariateVectorFunction>;\n// As of 3.1 (to be removed in 4.0).\nClass BOBYQAOptimizer;\n", "des": "This package provides optimization algorithms that don't require derivatives."}
{"index": 1197, "repo": "commons-math3-3.6.1", "code": "package fitting\n\n// As of 3.1 (to be removed in 4.0).\nClass CurveFitter<T extends ParametricUnivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nClass GaussianFitter;\n// Guesses the parameters norm, mean, and sigma of a Gaussian.Parametric based on the specified observed points.\nClass GaussianFitter.ParameterGuesser;\n// As of 3.1 (to be removed in 4.0).\nClass HarmonicFitter;\n// This class guesses harmonic coefficients from a sample.\nClass HarmonicFitter.ParameterGuesser;\n", "des": "This package provides classes to perform curve fitting."}
{"index": 1198, "repo": "commons-math3-3.6.1", "code": "package general\n\n// As of 3.1 (to be removed in 4.0).\nInterface Preconditioner;\n// As of 3.1 (to be removed in 4.0).\nClass AbstractDifferentiableOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass AbstractLeastSquaresOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass AbstractScalarDifferentiableOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass GaussNewtonOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass LevenbergMarquardtOptimizer;\n", "des": "This package provides optimization algorithms that require derivatives."}
{"index": 1199, "repo": "commons-math3-3.6.1", "code": "package linear\n\n// As of 3.1 (to be removed in 4.0).\nInterface LinearOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass AbstractLinearOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass LinearConstraint;\n// As of 3.1 (to be removed in 4.0).\nClass LinearObjectiveFunction;\n// As of 3.1 (to be removed in 4.0).\nClass SimplexSolver;\n// As of 3.1 (to be removed in 4.0).\nEnum Relationship;\n// As of 3.1 (to be removed in 4.0).\nClass NoFeasibleSolutionException;\n", "des": "This package provides optimization algorithms for linear constrained problems."}
{"index": 1200, "repo": "commons-math3-3.6.1", "code": "package univariate\n\n// As of 3.1 (to be removed in 4.0).\nInterface BaseUnivariateOptimizer<FUNC extends UnivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nInterface UnivariateOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass BaseAbstractUnivariateOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass BracketFinder;\n// As of 3.1 (to be removed in 4.0).\nClass BrentOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass SimpleUnivariateValueChecker;\n", "des": "Univariate real functions minimum finding algorithms."}
{"index": 1201, "repo": "commons-math3-3.6.1", "code": "package primes\n\n// Methods related to prime numbers in the range of int: primality test prime number generation factorization\nClass Primes;\n", "des": "Methods related to prime numbers like primality test, factor decomposition."}
{"index": 1202, "repo": "commons-math3-3.6.1", "code": "package random\n\n// This interface represent a normalized random generator for scalars.\nInterface NormalizedRandomGenerator;\n// to be removed in 4.0.\nInterface RandomData;\n// Interface extracted from java.util.Random.\nInterface RandomGenerator;\n// This interface represents a random generator for whole vectors.\nInterface RandomVectorGenerator;\n// Abstract class implementing the RandomGenerator interface.\nClass AbstractRandomGenerator;\n", "des": "Random number and random data generators."}
{"index": 1203, "repo": "commons-math3-3.6.1", "code": "package special\n\n// This class provides computation methods related to Bessel functions of the first kind.\nClass BesselJ;\n// Encapsulates the results returned by BesselJ.rjBesl(double, double, int).\nClass BesselJ.BesselJResult;\n// This is a utility class that provides computation methods related to the Beta family of functions.\nClass Beta;\n// This is a utility class that provides computation methods related to the error functions.\nClass Erf;\n", "des": "Implementations of special functions such as Beta and Gamma."}
{"index": 1204, "repo": "commons-math3-3.6.1", "code": "package stat\n\n// Maintains a frequency distribution.\nClass Frequency;\n// StatUtils provides static methods for computing statistics based on data stored in double[] arrays.\nClass StatUtils;\n", "des": "Data storage, manipulation and summary routines."}
{"index": 1205, "repo": "commons-math3-3.6.1", "code": "package clustering\n\n// As of 3.2 (to be removed in 4.0), use Clusterable instead\nInterface Clusterable<T>;\n// As of 3.2 (to be removed in 4.0), use Cluster instead\nClass Cluster<T extends Clusterable<T>>;\n// As of 3.2 (to be removed in 4.0), use DBSCANClusterer instead\nClass DBSCANClusterer<T extends Clusterable<T>>;\n// As of 3.2 (to be removed in 4.0), use DoublePoint instead\nClass EuclideanDoublePoint;\n// As of 3.2 (to be removed in 4.0), use DoublePoint instead\nClass EuclideanIntegerPoint;\n", "des": "All classes and sub-packages of this package are deprecated."}
{"index": 1206, "repo": "commons-math3-3.6.1", "code": "package correlation\n\n// Computes covariances for pairs of arrays or columns of a matrix.\nClass Covariance;\n// Implementation of Kendall's Tau-b rank correlation.\nClass KendallsCorrelation;\n// Computes Pearson's product-moment correlation coefficients for pairs of arrays or columns of a matrix.\nClass PearsonsCorrelation;\n// Spearman's rank correlation.\nClass SpearmansCorrelation;\n// Covariance implementation that does not require input data to be stored in memory.\nClass StorelessCovariance;\n", "des": "Correlations/Covariance computations."}
{"index": 1207, "repo": "commons-math3-3.6.1", "code": "package descriptive\n\n// Reporting interface for basic multivariate statistics.\nInterface StatisticalMultivariateSummary;\n// Reporting interface for basic univariate statistics.\nInterface StatisticalSummary;\n// Extends the definition of UnivariateStatistic with StorelessUnivariateStatistic.increment(double) and StorelessUnivariateStatistic.incrementAll(double[]) methods for adding values and updating internal state.\nInterface StorelessUnivariateStatistic;\n", "des": "Generic univariate summary statistic objects."}
{"index": 1208, "repo": "commons-math3-3.6.1", "code": "package moment\n\n// Returns the geometric mean of the available values.\nClass GeometricMean;\n// Computes the Kurtosis of the available values.\nClass Kurtosis;\n// Computes the arithmetic mean of a set of values.\nClass Mean;\n// Computes a statistic related to the Second Central Moment.\nClass SecondMoment;\n// Computes the semivariance of a set of values with respect to a given cutoff value.\nClass SemiVariance;\n// Computes the skewness of the available values.\nClass Skewness;\n", "des": "Summary statistics based on moments."}
{"index": 1209, "repo": "commons-math3-3.6.1", "code": "package rank\n\n// An interface that encapsulates abstractions of the P-square algorithm markers as is explained in the original works.\nInterface PSquarePercentile.PSquareMarkers;\n// Returns the maximum of the available values.\nClass Max;\n// Returns the median of the available values.\nClass Median;\n// Returns the minimum of the available values.\nClass Min;\n// Provides percentile computation.\nClass Percentile;\n", "des": "Summary statistics based on ranks."}
{"index": 1210, "repo": "commons-math3-3.6.1", "code": "package summary\n\n// Returns the product of the available values.\nClass Product;\n// Returns the sum of the available values.\nClass Sum;\n// Returns the sum of the natural logs for this collection of values.\nClass SumOfLogs;\n// Returns the sum of the squares of the available values.\nClass SumOfSquares;\n", "des": "Other summary statistics."}
{"index": 1211, "repo": "commons-math3-3.6.1", "code": "package inference\n\n// Implements binomial test statistics.\nClass BinomialTest;\n// Implements Chi-Square test statistics.\nClass ChiSquareTest;\n// Implements G Test statistics.\nClass GTest;\n// Implementation of the Kolmogorov-Smirnov (K-S) test for equality of continuous distributions.\nClass KolmogorovSmirnovTest;\n// An implementation of the Mann-Whitney U test (also called Wilcoxon rank-sum test).\nClass MannWhitneyUTest;\n// Implements one-way ANOVA (analysis of variance) statistics.\nClass OneWayAnova;\n", "des": "Classes providing hypothesis testing."}
{"index": 1212, "repo": "commons-math3-3.6.1", "code": "package interval\n\n// Interface to generate confidence intervals for a binomial proportion.\nInterface BinomialConfidenceInterval;\n// Implements the Agresti-Coull method for creating a binomial proportion confidence interval.\nClass AgrestiCoullInterval;\n// Implements the Clopper-Pearson method for creating a binomial proportion confidence interval.\nClass ClopperPearsonInterval;\n// Represents an interval estimate of a population parameter.\nClass ConfidenceInterval;\n", "des": "Classes providing binomial proportion confidence interval construction."}
{"index": 1213, "repo": "commons-math3-3.6.1", "code": "package ranking\n\n// Interface representing a rank transformation.\nInterface RankingAlgorithm;\n// Ranking based on the natural ordering on doubles.\nClass NaturalRanking;\n// Strategies for handling NaN values in rank transformations.\nEnum NaNStrategy;\n// Strategies for handling tied values in rank transformations.\nEnum TiesStrategy;\n", "des": "Classes providing rank transformations."}
{"index": 1214, "repo": "commons-math3-3.6.1", "code": "package regression\n\n// The multiple linear regression can be represented in matrix-notation.\nInterface MultipleLinearRegression;\n// An interface for regression models allowing for dynamic updating of the data.\nInterface UpdatingMultipleLinearRegression;\n// Abstract base class for implementations of MultipleLinearRegression.\nClass AbstractMultipleLinearRegression;\n// The GLS implementation of multiple linear regression.\nClass GLSMultipleLinearRegression;\n", "des": "Statistical routines involving multivariate data."}
{"index": 1215, "repo": "commons-math3-3.6.1", "code": "package transform\n\n// Interface for one-dimensional data sets transformations producing real results.\nInterface RealTransformer;\n// Implements the Fast Cosine Transform for transformation of one-dimensional real data sets.\nClass FastCosineTransformer;\n// Implements the Fast Fourier Transform for transformation of one-dimensional real or complex data sets.\nClass FastFourierTransformer;\n// Implements the Fast Hadamard Transform (FHT).\nClass FastHadamardTransformer;\n", "des": "Implementations of transform methods, including Fast Fourier transforms."}
{"index": 1216, "repo": "commons-math3-3.6.1", "code": "package util\n\n// Provides a standard interface for double arrays.\nInterface DoubleArray;\n// Defines a method to be called at counter exhaustion.\nInterface Incrementor.MaxCountExceededCallback;\n// Defines a method to be called at counter exhaustion.\nInterface IntegerSequence.Incrementor.MaxCountExceededCallback;\n// The listener interface for receiving events occurring in an iterative algorithm.\nInterface IterationListener;\n", "des": "Convenience routines and common data structures used throughout the commons-math library."}
{"index": 1217, "repo": "commons-text-1.10.0", "code": "package text\n\n// The Builder interface is designed to designate a class as a builder object in the Builder design pattern.\nInterface Builder<T>;\n// A predicate for selecting code points.\nInterface CharacterPredicate;\n// Format factory.\nInterface FormatFactory;\n// TextRandomProvider implementations are used by RandomStringGenerator as a source of randomness.\nInterface TextRandomProvider;\n", "des": "Basic classes for text handling."}
{"index": 1218, "repo": "commons-text-1.10.0", "code": "package diff\n\n// This interface should be implemented by user object to walk through EditScript objects.\nInterface CommandVisitor<T>;\n// This interface is devoted to handle synchronized replacement sequences.\nInterface ReplacementsHandler<T>;\n// Command representing the deletion of one object of the first sequence.\nClass DeleteCommand<T>;\n// Abstract base class for all commands used to transform an objects sequence into another one.\nClass EditCommand<T>;\n", "des": "Provides algorithms for diff between strings."}
{"index": 1219, "repo": "commons-text-1.10.0", "code": "package io\n\n// A Reader that performs string substitution on a source Reader using a StringSubstitutor.\nClass StringSubstitutorReader;\n", "des": "StringSubstitutorReader is a Reader that performs string substitution on a source Reader using a StringSubstitutor."}
{"index": 1220, "repo": "commons-text-1.10.0", "code": "package lookup\n\n// Lookups a String key for a String value.\nInterface BiStringLookup<U>;\n// Lookups a String key for a String value.\nInterface StringLookup;\n// Create instances of string lookups or access singleton string lookups implemented in this package.\nClass StringLookupFactory;\n// An enumeration defining StringLookup objects available through StringLookupFactory.\nEnum DefaultStringLookup;\n", "des": "Provides algorithms for looking up strings for use with a StringSubstitutor."}
{"index": 1221, "repo": "commons-text-1.10.0", "code": "package matcher\n\n// Determines if a character array portion matches.\nInterface StringMatcher;\n// Provides access to matchers defined in this package.\nClass StringMatcherFactory;\n", "des": "Provides algorithms for matching up strings for use with a StringSubstitutor."}
{"index": 1222, "repo": "commons-text-1.10.0", "code": "package numbers\n\n// Builds configured format functions for standard double format types.\nClass DoubleFormat.Builder;\n// Enum containing standard double format types with methods to produce configured formatter instances.\nEnum DoubleFormat;\n", "des": "Provides algorithms for converting numbers to strings."}
{"index": 1223, "repo": "commons-text-1.10.0", "code": "package similarity\n\n// Interface for Edit Distances.\nInterface EditDistance<R>;\n// Interface for the concept of a string similarity score.\nInterface SimilarityScore<R>;\n// Measures the cosine distance between two character sequences.\nClass CosineDistance;\n// Measures the Cosine similarity of two vectors of an inner product space and compares the angle between them.\nClass CosineSimilarity;\n// This stores a EditDistance implementation and a CharSequence \"left\" string.\nClass EditDistanceFrom<R>;\n", "des": "Provides algorithms for string similarity."}
{"index": 1224, "repo": "commons-text-1.10.0", "code": "package translate\n\n// Executes a sequence of translators one after the other.\nClass AggregateTranslator;\n// An API for translating text.\nClass CharSequenceTranslator;\n// Helper subclass to CharSequenceTranslator to allow for translations that will replace up to one character at a time.\nClass CodePointTranslator;\n// This class holds inner classes for escaping/unescaping Comma Separated Values.\nClass CsvTranslators;\n// Translator for escaping Comma Separated Values.\nClass CsvTranslators.CsvEscaper;\n", "des": "An API for creating text translation routines from a set of smaller building blocks."}
{"index": 1225, "repo": "spring-plugin-core-3.0.0", "code": "package core\n\n// PluginRegistry implementation that be made aware of a certain ordering of Plugins.\npublic class OrderAwarePluginRegistry<T extends Plugin<S>,S> extends SimplePluginRegistry<T,S>;\n// Central interface for plugins for the system.\npublic interface Plugin<S>;\n// Registry for Plugins.\npublic interface PluginRegistry<T extends Plugin<S>,S> extends Iterable<T>;\n", "des": "This package contains the core plugin API."}
{"index": 1226, "repo": "spring-plugin-core-3.0.0", "code": "package config\n\n// Enables exposure of PluginRegistry instances for the configured Plugin types\n@Target(TYPE) @Retention(RUNTIME) @Inherited @Documented @Import(PluginRegistriesBeanDefinitionRegistrar.class) public @interface EnablePluginRegistries;\n// Bean definition parser to register <list /> elements from the plugin namespace.\npublic class PluginListDefinitionParser extends org.springframework.beans.factory.xml.AbstractBeanDefinitionParser;\n", "des": "This package contains configuration support classes to ease registry configuration with Spring namespaces."}
{"index": 1227, "repo": "spring-plugin-core-3.0.0", "code": "package support\n\n// Abstract base class to implement types that need access to all beans of a given type from the ApplicationContext.\npublic abstract class AbstractTypeAwareSupport<T> extends Object implements org.springframework.context.ApplicationContextAware, org.springframework.context.ApplicationListener<org.springframework.context.event.ContextRefreshedEvent>, org.springframework.beans.factory.InitializingBean;\n", "des": "This package contains support classes to create bean lists or plugin registry instances out of beans implementing a certain interface."}
{"index": 1228, "repo": "spring-hateoas-2.1.2", "code": "package hateoas\n\n// Hold the AffordanceModels for all supported media types.\npublic final class Affordance extends Object implements Iterable<AffordanceModel>;\n// Collection of attributes needed to render any form of hypermedia.\npublic abstract class AffordanceModel extends Object;\n// Payload metadata for incoming requests.\npublic static interface AffordanceModel.InputPayloadMetadata extends AffordanceModel.PayloadMetadata;\n// A named component.\npublic static interface AffordanceModel.Named;\n", "des": "Value objects to ease creating Links and link driven representations for REST webservices."}
{"index": 1229, "repo": "spring-hateoas-2.1.2", "code": "package client\n\n// Container for customizations to a single traverson \"hop\"\npublic final class Hop extends Object;\n// LinkDiscoverer that uses JsonPath to find links inside a representation.\npublic class JsonPathLinkDiscoverer extends Object implements LinkDiscoverer;\n// Interface to allow discovering links by relation type from some source.\npublic interface LinkDiscoverer extends org.springframework.plugin.core.Plugin<MediaType>;\n", "des": "Client side support."}
{"index": 1230, "repo": "spring-hateoas-2.1.2", "code": "package config\n\n// Activates hypermedia support in the ApplicationContext.\n@Retention(RUNTIME) @Target(TYPE) @Documented @Import({org.springframework.hateoas.config.HypermediaConfigurationImportSelector.class,HateoasConfiguration.class,org.springframework.hateoas.config.WebStackImportSelector.class}) public @interface EnableHypermediaSupport;\n// Hypermedia representation types supported.\npublic static enum EnableHypermediaSupport.HypermediaType extends Enum<EnableHypermediaSupport.HypermediaType>;\n", "des": "Spring container configuration support."}
{"index": 1231, "repo": "spring-hateoas-2.1.2", "code": "package mediatype\n\n// SPI for media type implementations to create a specific AffordanceModel for a ConfiguredAffordance.\npublic interface AffordanceModelFactory;\n// Operations commons to all builder APIs.\npublic interface AffordanceOperations;\n// Primary API to construct Affordance instances.\npublic class Affordances extends Object implements AffordanceOperations;\n// An affordance in creation.\npublic interface ConfigurableAffordance extends AffordanceOperations;\n", "des": "Spring container configuration support."}
{"index": 1232, "repo": "spring-hateoas-2.1.2", "code": "package alps\n\n// An ALPS document.\npublic final class Alps extends Object;\n// \npublic static class Alps.AlpsBuilder extends Object;\n// LinkDiscoverer implementation to find ALPS-based links.\npublic class AlpsLinkDiscoverer extends JsonPathLinkDiscoverer;\n// A value object for an ALPS descriptor.\npublic final class Descriptor extends Object;\n// \npublic static class Descriptor.DescriptorBuilder extends Object;\n// A value object for an ALPS doc element.\npublic final class Doc extends Object;\n", "des": "Value objects to build ALPS metadata."}
{"index": 1233, "repo": "spring-hateoas-2.1.2", "code": "package collectionjson\n\n// LinkDiscoverer implementation based on JSON Collection link structure.\npublic class CollectionJsonLinkDiscoverer extends JsonPathLinkDiscoverer;\n// Jackson 2 module implementation to render CollectionModel, EntityModel, and RepresentationModel instances in Collection+JSON compatible JSON.\npublic class Jackson2CollectionJsonModule extends com.fasterxml.jackson.databind.module.SimpleModule;\n", "des": "Value objects to build Collection+JSON representations."}
{"index": 1234, "repo": "spring-hateoas-2.1.2", "code": "package hal\n\n// Custom mixin to to render collection content as _embedded.\npublic abstract class CollectionModelMixin<T> extends CollectionModel<T>;\n// API to provide HAL curie information for links.\npublic interface CurieProvider;\n// Default implementation of CurieProvider rendering a single configurable UriTemplate based curie.\npublic class DefaultCurieProvider extends Object implements CurieProvider;\n", "des": "HAL-specific extensions, SPIs and Jackson customizations."}
{"index": 1235, "repo": "spring-hateoas-2.1.2", "code": "package forms\n\n// HAL-FORMS specific configuration extension of HalConfiguration.\npublic class HalFormsConfiguration extends Object;\n// HAL-FORMS based JsonPathLinkDiscoverer.\npublic class HalFormsLinkDiscoverer extends HalLinkDiscoverer;\n// Representation of HAL-FORMS options attribute.\npublic interface HalFormsOptions;\n// \npublic abstract static class HalFormsOptions.AbstractHalFormsOptions<T extends HalFormsOptions.AbstractHalFormsOptions<T>> extends Object implements HalFormsOptions;\n", "des": "HAL-FORMS extension media type."}
{"index": 1236, "repo": "spring-hateoas-2.1.2", "code": "package html\n\n// The types of HTML <input … /> elements.\npublic class HtmlInputType extends Object;\n", "des": "Support for HTML media type."}
{"index": 1237, "repo": "spring-hateoas-2.1.2", "code": "package problem\n\n// Encapsulation of an RFC-7807 Problem code.\npublic class Problem extends Object;\n// \npublic static final class Problem.ExtendedProblem<T> extends Problem;\n", "des": "Value objects to build Problem representations."}
{"index": 1238, "repo": "spring-hateoas-2.1.2", "code": "package uber\n\n// Jackson SimpleModule for UBER+JSON serializers and deserializers.\npublic class Jackson2UberModule extends com.fasterxml.jackson.databind.module.SimpleModule;\n// Find links by rel in an UBER+JSON representation.\npublic class UberLinkDiscoverer extends Object implements LinkDiscoverer;\n", "des": "UBER media type objects."}
{"index": 1239, "repo": "spring-hateoas-2.1.2", "code": "package vnderrors\n\n// \n@Deprecated public class VndErrors extends CollectionModel<VndErrors.VndError>;\n// \n@Deprecated public static class VndErrors.VndError extends RepresentationModel<VndErrors.VndError>;\n", "des": "Vnd.Error media type."}
{"index": 1240, "repo": "spring-hateoas-2.1.2", "code": "package server\n\n// Accessor to links pointing to controllers backing an entity type.\npublic interface EntityLinks extends org.springframework.plugin.core.Plugin<Class<?>>;\n// Annotation to demarcate controllers that expose URI templates of a structure according to ControllerEntityLinks.\n@Inherited @Documented @Retention(RUNTIME) @Target(TYPE) public @interface ExposesResourceFor;\n// Builder to ease building Link instances.\npublic interface LinkBuilder;\n", "des": "Server-side components for hypermedia handling."}
{"index": 1241, "repo": "spring-hateoas-2.1.2", "code": "package core\n\n// Implementation base class to delegate the higher level methods of EntityLinks by delegating to the more fine grained ones to reduce the implementation effort for actual implementation classes.\npublic abstract class AbstractEntityLinks extends Object implements EntityLinks;\n// Simply helper to reference a dedicated attribute of an Annotation.\npublic class AnnotationAttribute extends Object;\n", "des": "Implementations of core API interfaces."}
{"index": 1242, "repo": "spring-hateoas-2.1.2", "code": "package mvc\n\n// Simples LinkBuilder implementation possible.\npublic class BasicLinkBuilder extends LinkBuilderSupport<BasicLinkBuilder>;\n// LinkRelationProvider inspecting ExposesResourceFor annotations on controller classes.\npublic class ControllerLinkRelationProvider extends Object implements LinkRelationProvider;\n// Simple Jackson serializers and deserializers.\npublic class JacksonSerializers extends Object;\n", "des": "Spring MVC helper classes to build Links and assemble RepresentationModel types."}
{"index": 1243, "repo": "spring-hateoas-2.1.2", "code": "package reactive\n\n// Reactive variant of RepresentationModelAssembler combined with SimpleRepresentationModelAssembler.\npublic interface ReactiveRepresentationModelAssembler<T,D extends RepresentationModel<?>>;\n// Reactive variant of RepresentationModelAssembler combined with SimpleRepresentationModelAssembler.\npublic interface SimpleReactiveRepresentationModelAssembler<T> extends ReactiveRepresentationModelAssembler<T,EntityModel<T>>;\n", "des": "Spring WebFlux components to build Links and assemble RepresentationModel types."}
{"index": 1244, "repo": "spring-hateoas-2.1.2", "code": "package support\n\n// \npublic class ClassUtils extends Object;\n// Utility to glean what web stack is currently available.\npublic enum WebStack extends Enum<WebStack>;\n", "des": "Support utilities for hypermedia handling."}
{"index": 1245, "repo": "spring-integration-smb-6.1.2", "code": "package config\n\n// Parser for the SMB 'inbound-channel-adapter' element.\npublic class SmbInboundChannelAdapterParser extends org.springframework.integration.file.config.AbstractRemoteFileInboundChannelAdapterParser;\n// Provides namespace support for using SMB.\npublic class SmbNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n", "des": "SMB-specific file list filter classes."}
{"index": 1246, "repo": "spring-integration-smb-6.1.2", "code": "package dsl\n\n// The factory for SMB components.\npublic final class Smb extends Object;\n// A RemoteFileInboundChannelAdapterSpec for an SmbInboundFileSynchronizingMessageSource.\npublic class SmbInboundChannelAdapterSpec extends org.springframework.integration.file.dsl.RemoteFileInboundChannelAdapterSpec<jcifs.smb.SmbFile,SmbInboundChannelAdapterSpec,SmbInboundFileSynchronizingMessageSource>;\n", "des": "Provides SMB Components for the Java DSL."}
{"index": 1247, "repo": "spring-integration-smb-6.1.2", "code": "package filters\n\n// Implementation of AbstractPersistentAcceptOnceFileListFilter for SMB.\npublic class SmbPersistentAcceptOnceFileListFilter extends org.springframework.integration.file.filters.AbstractPersistentAcceptOnceFileListFilter<jcifs.smb.SmbFile>;\n// Implementation of AbstractRegexPatternFileListFilter for SMB.\npublic class SmbRegexPatternFileListFilter extends org.springframework.integration.file.filters.AbstractRegexPatternFileListFilter<jcifs.smb.SmbFile>;\n", "des": "SMB Namespace support classes."}
{"index": 1248, "repo": "spring-integration-smb-6.1.2", "code": "package inbound\n\n// An implementation of AbstractInboundFileSynchronizer for SMB.\npublic class SmbInboundFileSynchronizer extends org.springframework.integration.file.remote.synchronizer.AbstractInboundFileSynchronizer<jcifs.smb.SmbFile>;\n// A MessageSource implementation for SMB.\npublic class SmbInboundFileSynchronizingMessageSource extends org.springframework.integration.file.remote.synchronizer.AbstractInboundFileSynchronizingMessageSource<jcifs.smb.SmbFile>;\n", "des": "Inbound Channel Adapters implementations for SMB protocol."}
{"index": 1249, "repo": "spring-integration-smb-6.1.2", "code": "package outbound\n\n// The SMB specific FileTransferringMessageHandler extension.\npublic class SmbMessageHandler extends org.springframework.integration.file.remote.handler.FileTransferringMessageHandler<jcifs.smb.SmbFile>;\n// Outbound Gateway for performing remote file operations via SMB.\npublic class SmbOutboundGateway extends org.springframework.integration.file.remote.gateway.AbstractRemoteFileOutboundGateway<jcifs.smb.SmbFile>;\n", "des": "Outbound Channel Adapter implementations for SMB protocol."}
{"index": 1250, "repo": "spring-integration-smb-6.1.2", "code": "package session\n\n// Data holder class for a SMB share configuration.\npublic class SmbConfig extends Object;\n// An AbstractFileInfo implementation for SMB protocol.\npublic class SmbFileInfo extends org.springframework.integration.file.remote.AbstractFileInfo<jcifs.smb.SmbFile>;\n// The SMB-specific RemoteFileTemplate implementation.\npublic class SmbRemoteFileTemplate extends org.springframework.integration.file.remote.RemoteFileTemplate<jcifs.smb.SmbFile>;\n", "des": "SMB Remote Session abstraction support classes."}
{"index": 1251, "repo": "spring-core-6.0.11", "code": "package aot\n\n// Utility for determining if AOT-processed optimizations must be used rather than the regular runtime.\npublic abstract class AotDetector extends Object;\n", "des": "Core package for Spring AOT infrastructure."}
{"index": 1252, "repo": "spring-core-6.0.11", "code": "package generate\n\n// Determine the access control of a Member or type signature.\npublic final class AccessControl extends Object;\n// Access visibility types as determined by the modifiers on a Member or ResolvableType.\npublic static enum AccessControl.Visibility extends Enum<AccessControl.Visibility>;\n// Generate unique class names based on a target ClassName and a feature name.\npublic final class ClassNameGenerator extends Object;\n", "des": "Support classes for components that contribute generated code equivalent to a runtime behavior."}
{"index": 1253, "repo": "spring-core-6.0.11", "code": "package hint\n\n// Base TypeReference implementation that ensures consistent behaviour for equals(), hashCode(), and toString() based on the canonical name.\npublic abstract class AbstractTypeReference extends Object implements TypeReference;\n// Register the necessary reflection hints so that the specified type can be bound at runtime.\npublic class BindingReflectionHintsRegistrar extends Object;\n// Contract for runtime hints that only apply if the described condition is met.\npublic interface ConditionalHint;\n", "des": "Support for registering the need for reflection, resources, java serialization and proxies at runtime."}
{"index": 1254, "repo": "spring-core-6.0.11", "code": "package annotation\n\n// Indicate that the annotated element requires reflection.\n@Target({ANNOTATION_TYPE,TYPE,CONSTRUCTOR,FIELD,METHOD}) @Retention(RUNTIME) @Documented public @interface Reflective;\n// Process an AnnotatedElement and register the necessary reflection hints for it.\npublic interface ReflectiveProcessor;\n// Process @Reflective annotated elements.\npublic class ReflectiveRuntimeHintsRegistrar extends Object;\n", "des": "Annotation support for runtime hints."}
{"index": 1255, "repo": "spring-core-6.0.11", "code": "package predicate\n\n// Generator of ProxyHints predicates, testing whether the given hints match the expected behavior for proxies.\npublic class ProxyHintsPredicates extends Object;\n// Generator of ReflectionHints predicates, testing whether the given hints match the expected behavior for reflection.\npublic class ReflectionHintsPredicates extends Object;\n// \npublic static class ReflectionHintsPredicates.ConstructorHintPredicate extends ReflectionHintsPredicates.ExecutableHintPredicate<Constructor<?>>;\n", "des": "Predicate support for runtime hints."}
{"index": 1256, "repo": "spring-core-6.0.11", "code": "package support\n\n// Utilities for core hint inference on Spring-managed classes, specifically for proxy types such as interface-based JDK proxies and CGLIB-generated subclasses which need proxy/reflection hints.\npublic abstract class ClassHintUtils extends Object;\n// Register the necessary resource hints for loading files from the classpath.\npublic class FilePatternResourceHintsRegistrar extends Object;\n", "des": "Convenience classes for using runtime hints."}
{"index": 1257, "repo": "spring-core-6.0.11", "code": "package nativex\n\n// A NativeConfigurationWriter implementation that writes the configuration to disk.\npublic class FileNativeConfigurationWriter extends NativeConfigurationWriter;\n// Write RuntimeHints as GraalVM native configuration.\npublic abstract class NativeConfigurationWriter extends Object;\n", "des": "Support for generating GraalVM native configuration from runtime hints."}
{"index": 1258, "repo": "spring-core-6.0.11", "code": "package asm\n\n// A visitor to visit a Java annotation.\npublic abstract class AnnotationVisitor extends Object;\n// A non standard class, field, method or Code attribute, as defined in the Java Virtual Machine Specification (JVMS).\npublic class Attribute extends Object;\n// A dynamically extensible vector of bytes.\npublic class ByteVector extends Object;\n", "des": "Spring's repackaging of ASM 9.x (with Spring-specific patches; for internal use only)."}
{"index": 1259, "repo": "spring-core-6.0.11", "code": "package cglib\n\n// Empty class used to ensure that the org.springframework.cglib package is processed during javadoc generation.\npublic final class SpringCglibInfo extends Object;\n", "des": "Spring's repackaging of CGLIB 3.3 (with Spring-specific patches; for internal use only)."}
{"index": 1260, "repo": "spring-core-6.0.11", "code": "package beans\n\n// \npublic abstract class BeanCopier extends Object;\n// \npublic static class BeanCopier.Generator extends AbstractClassGenerator;\n// \npublic class BeanGenerator extends AbstractClassGenerator;\n// A Map-based view of a JavaBean.\npublic abstract class BeanMap extends Object implements Map;\n// \npublic static class BeanMap.Generator extends AbstractClassGenerator;\n// \npublic abstract class BulkBean extends Object;\n// \npublic static class BulkBean.Generator extends AbstractClassGenerator;\n", "des": "Spring's repackaging of the CGLIB beans package (for internal use only)."}
{"index": 1261, "repo": "spring-core-6.0.11", "code": "package core\n\n// Abstract class for all code-generating CGLIB utilities.\npublic abstract class AbstractClassGenerator<T> extends Object implements ClassGenerator;\n// \nprotected static class AbstractClassGenerator.ClassLoaderData extends Object;\n// \nprotected static class AbstractClassGenerator.Source extends Object;\n// \npublic class Block extends Object;\n// \npublic class ClassEmitter extends ClassTransformer;\n// \npublic class ClassesKey extends Object;\n// \npublic interface ClassGenerator;\n", "des": "Spring's repackaging of the CGLIB core package (for internal use only)."}
{"index": 1262, "repo": "spring-core-6.0.11", "code": "package internal\n\n// \npublic class CustomizerRegistry extends Object;\n// \npublic interface Function<K,V>;\n// \npublic class LoadingCache<K,KK,V> extends Object;\n", "des": "Spring's repackaging of the CGLIB core internal package (for internal use only)."}
{"index": 1263, "repo": "spring-core-6.0.11", "code": "package proxy\n\n// All callback interfaces used by Enhancer extend this interface.\npublic interface Callback;\n// Map methods of subclasses generated by Enhancer to a particular callback.\npublic interface CallbackFilter;\n// \npublic abstract class CallbackHelper extends Object implements CallbackFilter;\n// Dispatching Enhancer callback.\npublic interface Dispatcher extends Callback;\n// Generates dynamic subclasses to enable method interception.\npublic class Enhancer extends AbstractClassGenerator;\n", "des": "Spring's repackaging of the CGLIB proxy package (for internal use only)."}
{"index": 1264, "repo": "spring-core-6.0.11", "code": "package reflect\n\n// \npublic abstract class ConstructorDelegate extends Object;\n// \npublic static class ConstructorDelegate.Generator extends AbstractClassGenerator;\n// \npublic abstract class FastClass extends Object;\n// \npublic static class FastClass.Generator extends AbstractClassGenerator;\n// \npublic class FastConstructor extends FastMember;\n// \npublic abstract class FastMember extends Object;\n// \npublic class FastMethod extends FastMember;\n", "des": "Spring's repackaging of the CGLIB reflect package (for internal use only)."}
{"index": 1265, "repo": "spring-core-6.0.11", "code": "package transform\n\n// \npublic abstract class AbstractClassFilterTransformer extends AbstractClassTransformer;\n// \npublic abstract class AbstractClassLoader extends ClassLoader;\n// \npublic abstract class AbstractClassTransformer extends ClassTransformer;\n// \npublic class AnnotationVisitorTee extends AnnotationVisitor;\n// \npublic abstract class ClassEmitterTransformer extends ClassEmitter;\n// \npublic interface ClassFilter;\n// \npublic class ClassFilterTransformer extends AbstractClassFilterTransformer;\n", "des": "Spring's repackaging of the CGLIB transform package (for internal use only)."}
{"index": 1266, "repo": "spring-core-6.0.11", "code": "package impl\n\n// \npublic class AbstractInterceptFieldCallback extends Object implements InterceptFieldCallback;\n// \npublic class AccessFieldTransformer extends ClassEmitterTransformer;\n// \npublic static interface AccessFieldTransformer.Callback;\n// \npublic class AddDelegateTransformer extends ClassEmitterTransformer;\n// \npublic class AddInitTransformer extends ClassEmitterTransformer;\n// \npublic class AddPropertyTransformer extends ClassEmitterTransformer;\n", "des": "Spring's repackaging of the CGLIB transform impl package (for internal use only)."}
{"index": 1267, "repo": "spring-core-6.0.11", "code": "package util\n\n// For the efficient sorting of multiple arrays in parallel.\npublic abstract class ParallelSorter extends Object;\n// \npublic static class ParallelSorter.Generator extends AbstractClassGenerator;\n// This class implements a simple String → int mapping for a fixed set of keys.\npublic abstract class StringSwitcher extends Object;\n// \npublic static class StringSwitcher.Generator extends AbstractClassGenerator;\n", "des": "Spring's repackaging of the CGLIB util package (for internal use only)."}
{"index": 1268, "repo": "spring-core-6.0.11", "code": "package core\n\n// Common interface for managing aliases.\npublic interface AliasRegistry;\n// Interface defining a generic contract for attaching and accessing metadata to/from arbitrary objects.\npublic interface AttributeAccessor;\n// Support class for AttributeAccessors, providing a base implementation of all methods.\npublic abstract class AttributeAccessorSupport extends Object implements AttributeAccessor, Serializable;\n", "des": "Provides basic classes for exception handling and version detection, and other core helpers that are not specific to any part of the framework."}
{"index": 1269, "repo": "spring-core-6.0.11", "code": "package annotation\n\n// @AliasFor is an annotation that is used to declare aliases for annotation attributes.\n@Retention(RUNTIME) @Target(METHOD) @Documented public @interface AliasFor;\n// General utility methods for finding annotations, meta-annotations, and repeatable annotations on AnnotatedElements.\npublic abstract class AnnotatedElementUtils extends Object;\n", "des": "Core support package for annotations, meta-annotations, and merged annotations with attribute overrides."}
{"index": 1270, "repo": "spring-core-6.0.11", "code": "package codec\n\n// Abstract base class for Decoder implementations that can decode a DataBuffer directly to the target element type.\npublic abstract class AbstractDataBufferDecoder<T> extends AbstractDecoder<T>;\n// Abstract base class for Decoder implementations.\npublic abstract class AbstractDecoder<T> extends Object implements Decoder<T>;\n// Abstract base class for Encoder implementations.\npublic abstract class AbstractEncoder<T> extends Object implements Encoder<T>;\n", "des": "Encoder and Decoder abstractions to convert between a reactive stream of bytes and Java objects."}
{"index": 1271, "repo": "spring-core-6.0.11", "code": "package convert\n\n// Base class for exceptions thrown by the conversion system.\npublic abstract class ConversionException extends NestedRuntimeException;\n// Exception to be thrown when an actual type conversion attempt fails.\npublic class ConversionFailedException extends ConversionException;\n// A service interface for type conversion.\npublic interface ConversionService;\n", "des": "Type conversion system API."}
{"index": 1272, "repo": "spring-core-6.0.11", "code": "package converter\n\n// Allows a Converter, GenericConverter or ConverterFactory to conditionally execute based on attributes of the source and target TypeDescriptor.\npublic interface ConditionalConverter;\n// A GenericConverter that may conditionally execute based on attributes of the source and target TypeDescriptor.\npublic interface ConditionalGenericConverter extends GenericConverter, ConditionalConverter;\n", "des": "SPI to implement Converters for the type conversion system."}
{"index": 1273, "repo": "spring-core-6.0.11", "code": "package support\n\n// Configuration interface to be implemented by most if not all ConversionService types.\npublic interface ConfigurableConversionService extends ConversionService, ConverterRegistry;\n// A factory for common ConversionService configurations.\npublic final class ConversionServiceFactory extends Object;\n// Adapter that exposes a PropertyEditor for any given ConversionService and specific target type.\npublic class ConvertingPropertyEditorAdapter extends PropertyEditorSupport;\n", "des": "Default implementation of the type conversion system."}
{"index": 1274, "repo": "spring-core-6.0.11", "code": "package env\n\n// Abstract base class for Environment implementations.\npublic abstract class AbstractEnvironment extends Object implements ConfigurableEnvironment;\n// Abstract base class for resolving properties against any underlying source.\npublic abstract class AbstractPropertyResolver extends Object implements ConfigurablePropertyResolver;\n", "des": "Spring's environment abstraction consisting of bean definition profile and hierarchical property source support."}
{"index": 1275, "repo": "spring-core-6.0.11", "code": "package io\n\n// Abstract base class for resources which resolve URLs into File references, such as UrlResource or ClassPathResource.\npublic abstract class AbstractFileResolvingResource extends AbstractResource;\n// Convenience base class for Resource implementations, pre-implementing typical behavior.\npublic abstract class AbstractResource extends Object implements Resource;\n// Resource implementation for a given byte array.\npublic class ByteArrayResource extends AbstractResource;\n", "des": "Generic abstraction for (file-based) resources, used throughout the framework."}
{"index": 1276, "repo": "spring-core-6.0.11", "code": "package buffer\n\n// Extension of DataBuffer that allows for buffers that can be used in a try-with-resources statement.\npublic interface CloseableDataBuffer extends DataBuffer, AutoCloseable;\n// Basic abstraction over byte buffers.\npublic interface DataBuffer;\n// A dedicated iterator type that ensures the lifecycle of iterated ByteBuffer elements.\npublic static interface DataBuffer.ByteBufferIterator extends Iterator<ByteBuffer>, Closeable;\n", "des": "Generic abstraction for working with byte buffer implementations."}
{"index": 1277, "repo": "spring-core-6.0.11", "code": "package support\n\n// The default implementation for PropertySourceFactory, wrapping every resource in a ResourcePropertySource.\npublic class DefaultPropertySourceFactory extends Object implements PropertySourceFactory;\n// Holder that combines a Resource descriptor with a specific encoding or Charset to be used for reading from the resource.\npublic class EncodedResource extends Object implements InputStreamSource;\n", "des": "Support classes for Spring's resource abstraction."}
{"index": 1278, "repo": "spring-core-6.0.11", "code": "package log\n\n// A convenient accessor for Commons Logging, providing not only CharSequence based log methods but also Supplier based variants for use with Java 8 lambda expressions.\npublic class LogAccessor extends Object;\n// Factory for common Log delegates with Spring's logging conventions.\npublic final class LogDelegateFactory extends Object;\n// Utility methods for formatting and logging messages.\npublic abstract class LogFormatUtils extends Object;\n", "des": "Useful delegates for Spring's logging conventions."}
{"index": 1279, "repo": "spring-core-6.0.11", "code": "package metrics\n\n// Instruments the application startup phase using steps.\npublic interface ApplicationStartup;\n// Step recording metrics about a particular phase or action happening during the ApplicationStartup.\npublic interface StartupStep;\n// Simple key/value association for storing step metadata.\npublic static interface StartupStep.Tag;\n// Immutable collection of StartupStep.Tag.\npublic static interface StartupStep.Tags extends Iterable<StartupStep.Tag>;\n", "des": "Support package for recording metrics during application startup."}
{"index": 1280, "repo": "spring-core-6.0.11", "code": "package jfr\n\n// ApplicationStartup implementation for the Java Flight Recorder.\npublic class FlightRecorderApplicationStartup extends Object implements ApplicationStartup;\n", "des": "Support package for recording startup metrics using Java Flight Recorder."}
{"index": 1281, "repo": "spring-core-6.0.11", "code": "package serializer\n\n// A default Deserializer implementation that reads an input stream using Java serialization.\npublic class DefaultDeserializer extends Object implements Deserializer<Object>;\n// A Serializer implementation that writes an object to an output stream using Java serialization.\npublic class DefaultSerializer extends Object implements Serializer<Object>;\n// A strategy interface for converting from data in an InputStream to an Object.\n@FunctionalInterface public interface Deserializer<T>;\n", "des": "Root package for Spring's serializer interfaces and implementations."}
{"index": 1282, "repo": "spring-core-6.0.11", "code": "package support\n\n// A Converter that delegates to a Deserializer to convert data in a byte array to an object.\npublic class DeserializingConverter extends Object implements Converter<byte[],Object>;\n// A convenient delegate with pre-arranged configuration state for common serialization needs.\npublic class SerializationDelegate extends Object implements Serializer<Object>, Deserializer<Object>;\n", "des": "Support classes for Spring's serializer abstraction."}
{"index": 1283, "repo": "spring-core-6.0.11", "code": "package style\n\n// Spring's default toString() styler.\npublic class DefaultToStringStyler extends Object implements ToStringStyler;\n// Converts objects to String form, generally for debugging purposes, using Spring's toString styling conventions.\npublic class DefaultValueStyler extends Object implements ValueStyler;\n", "des": "Support for styling values as Strings, with ToStringCreator as central class."}
{"index": 1284, "repo": "spring-core-6.0.11", "code": "package task\n\n// \n@Deprecated(since=\"6.0\") public interface AsyncListenableTaskExecutor extends AsyncTaskExecutor;\n// Extended interface for asynchronous TaskExecutor implementations, offering support for Callable.\npublic interface AsyncTaskExecutor extends TaskExecutor;\n// TaskExecutor implementation that fires up a new Thread for each task, executing it asynchronously.\npublic class SimpleAsyncTaskExecutor extends CustomizableThreadCreator implements AsyncListenableTaskExecutor, Serializable;\n", "des": "This package defines Spring's core TaskExecutor abstraction, and provides SyncTaskExecutor and SimpleAsyncTaskExecutor implementations."}
{"index": 1285, "repo": "spring-core-6.0.11", "code": "package support\n\n// \n@Deprecated(since=\"6.0.5\", forRemoval=true) public class ConcurrentExecutorAdapter extends Object implements Executor;\n// Adapter that takes a Spring TaskExecutor and exposes a full java.util.concurrent.ExecutorService for it.\npublic class ExecutorServiceAdapter extends AbstractExecutorService;\n// Adapter that takes a JDK java.util.concurrent.Executor and exposes a Spring TaskExecutor for it.\npublic class TaskExecutorAdapter extends Object implements AsyncListenableTaskExecutor;\n", "des": "Support classes for Spring's TaskExecutor abstraction."}
{"index": 1286, "repo": "spring-core-6.0.11", "code": "package type\n\n// Defines access to the annotations of a specific type (class or method), in a form that does not necessarily require the class-loading.\npublic interface AnnotatedTypeMetadata;\n// Interface that defines abstract access to the annotations of a specific class, in a form that does not require that class to be loaded yet.\npublic interface AnnotationMetadata extends ClassMetadata, AnnotatedTypeMetadata;\n", "des": "Core support package for type introspection."}
{"index": 1287, "repo": "spring-core-6.0.11", "code": "package classreading\n\n// Caching implementation of the MetadataReaderFactory interface, caching a MetadataReader instance per Spring Resource handle (i.e.\npublic class CachingMetadataReaderFactory extends SimpleMetadataReaderFactory;\n// Simple facade for accessing class metadata, as read by an ASM ClassReader.\npublic interface MetadataReader;\n// Factory interface for MetadataReader instances.\npublic interface MetadataReaderFactory;\n", "des": "Support classes for reading annotation and class-level metadata."}
{"index": 1288, "repo": "spring-core-6.0.11", "code": "package filter\n\n// Type filter that exposes a ClassMetadata object to subclasses, for class testing purposes.\npublic abstract class AbstractClassTestingTypeFilter extends Object implements TypeFilter;\n// Type filter that is aware of traversing over hierarchy.\npublic abstract class AbstractTypeHierarchyTraversingFilter extends Object implements TypeFilter;\n", "des": "Core support package for type filtering (e.g."}
{"index": 1289, "repo": "spring-core-6.0.11", "code": "package lang\n\n// A common Spring annotation to declare that annotated elements cannot be null.\n@Target({METHOD,PARAMETER,FIELD}) @Retention(RUNTIME) @Documented @Nonnull @TypeQualifierNickname public @interface NonNull;\n// A common Spring annotation to declare that parameters and return values are to be considered as non-nullable by default for a given package.\n@Target(PACKAGE) @Retention(RUNTIME) @Documented @Nonnull @TypeQualifierDefault({METHOD,PARAMETER}) public @interface NonNullApi;\n", "des": "Common annotations with language-level semantics: nullability as well as JDK API indications."}
{"index": 1290, "repo": "spring-core-6.0.11", "code": "package objenesis\n\n// Spring-specific variant of ObjenesisStd / ObjenesisBase, providing a cache based on Class keys instead of class names, and allowing for selective use of the cache.\npublic class SpringObjenesis extends Object implements org.springframework.objenesis.Objenesis;\n", "des": "Spring's repackaging of Objenesis 3.2 (with SpringObjenesis entry point; for internal use only)."}
{"index": 1291, "repo": "spring-core-6.0.11", "code": "package util\n\n// An IdGenerator that uses SecureRandom for the initial seed and Random thereafter, instead of calling UUID.randomUUID() every time as JdkIdGenerator does.\npublic class AlternativeJdkIdGenerator extends Object implements IdGenerator;\n// PathMatcher implementation for Ant-style path patterns.\npublic class AntPathMatcher extends Object implements PathMatcher;\n", "des": "Miscellaneous utility classes, such as utilities for working with strings, classes, collections, reflection, etc."}
{"index": 1292, "repo": "spring-core-6.0.11", "code": "package backoff\n\n// Provide a BackOffExecution that indicates the rate at which an operation should be retried.\n@FunctionalInterface public interface BackOff;\n// Represent a particular back-off execution.\n@FunctionalInterface public interface BackOffExecution;\n// Implementation of BackOff that increases the back off period for each retry attempt.\npublic class ExponentialBackOff extends Object implements BackOff;\n", "des": "A generic back-off abstraction."}
{"index": 1293, "repo": "spring-core-6.0.11", "code": "package comparator\n\n// A Comparator for Boolean objects that can sort either true or false first.\npublic class BooleanComparator extends Object implements Comparator<Boolean>, Serializable;\n// Comparator that adapts Comparables to the Comparator interface.\npublic class ComparableComparator<T extends Comparable<T>> extends Object implements Comparator<T>;\n// Convenient entry point with generically typed factory methods for common Spring Comparator variants.\npublic abstract class Comparators extends Object;\n", "des": "Useful generic java.util.Comparator implementations, such as an invertible comparator and a compound comparator."}
{"index": 1294, "repo": "spring-core-6.0.11", "code": "package concurrent\n\n// \n@Deprecated(since=\"6.0\") public class CompletableToListenableFutureAdapter<T> extends Object implements ListenableFuture<T>;\n// \n@Deprecated(since=\"6.0\") @FunctionalInterface public interface FailureCallback;\n// \n@Deprecated(since=\"6.0\") public abstract class FutureAdapter<T,S> extends Object implements Future<T>;\n// Convenience utilities for working with Future and implementations.\npublic abstract class FutureUtils extends Object;\n", "des": "Useful generic java.util.concurrent.Future extensions."}
{"index": 1295, "repo": "spring-core-6.0.11", "code": "package function\n\n// A Supplier decorator that caches a singleton result and makes it available from SingletonSupplier.get() (nullable) and SingletonSupplier.obtain() (null-safe).\npublic class SingletonSupplier<T> extends Object implements Supplier<T>;\n// Convenience utilities for Supplier handling.\npublic abstract class SupplierUtils extends Object;\n// A BiFunction that allows invocation of code that throws a checked exception.\npublic interface ThrowingBiFunction<T,U,R> extends BiFunction<T,U,R>;\n", "des": "Useful generic java.util.function helper classes."}
{"index": 1296, "repo": "spring-core-6.0.11", "code": "package unit\n\n// A data size, such as '12MB'.\npublic final class DataSize extends Object implements Comparable<DataSize>, Serializable;\n// A standard set of DataSize units.\npublic enum DataUnit extends Enum<DataUnit>;\n", "des": "Useful unit data types."}
{"index": 1297, "repo": "spring-core-6.0.11", "code": "package xml\n\n// Convenience methods for working with the DOM API, in particular for working with DOM Nodes and DOM Elements.\npublic abstract class DomUtils extends Object;\n// Simple javax.xml.namespace.NamespaceContext implementation.\npublic class SimpleNamespaceContext extends Object implements NamespaceContext;\n", "des": "Miscellaneous utility classes for XML parsing and transformation, such as error handlers that log warnings via Commons Logging."}
{"index": 1298, "repo": "groovy-all-4.0.13", "code": "package ui\n\n// Base class for console\npublic abstract class ConsoleSupport extends Object;\n// Component which provides a styled editor for the console.\npublic class ConsoleTextEditor extends JScrollPane;\n// Intercepts System.out/System.err.\npublic class SystemOutputInterceptor extends FilterOutputStream;\n", "des": "An interactive command line terminal along with a Swing console for evaluating Groovy scripts and inspecting objects, AST and bytecode information."}
{"index": 1299, "repo": "groovy-all-4.0.13", "code": "package text\n\n// \npublic final class FindReplaceUtility extends Object;\n// \npublic class GroovyFilter extends StructuredSyntaxDocumentFilter;\n// Represents highlighter to highlight matched parentheses, brackets and curly braces when caret touching them\npublic class MatchingHighlighter extends Object implements CaretListener;\n// The document filter based on Parrot's lexer is for highlighting the content of text editor\npublic class SmartDocumentFilter extends DocumentFilter;\n", "des": "Text processing helpers for the interactive command line terminal."}
{"index": 1300, "repo": "groovy-all-4.0.13", "code": "package inspect\n\n// The Inspector provides a unified access to an object's information that can be determined by introspection.\npublic class Inspector extends Object;\n// \npublic static class Inspector.MemberComparator extends Object implements Comparator<Object>, Serializable;\n// \npublic static class Inspector.MemberComparatorWithValue extends Object implements Comparator<Object>, Serializable;\n", "des": "Classes for inspecting object properties through introspection."}
{"index": 1301, "repo": "groovy-all-4.0.13", "code": "package io\n\n// A buffered writer only for OutputStreamWriter that is aware of the encoding of the OutputStreamWriter.\npublic class EncodingAwareBufferedWriter extends BufferedWriter;\n// Represents particular files of interest.\npublic enum FileType extends Enum<FileType>;\n", "des": "Classes for Groovier Input/Output."}
{"index": 1302, "repo": "groovy-all-4.0.13", "code": "package jmx\n\n// A GroovyObject facade for an underlying MBean which acts like a normal groovy object but which is actually implemented via an underlying JMX MBean.\npublic class GroovyMBean extends GroovyObjectSupport;\n", "des": "Classes for working with the Java Management Extensions (JMX) technology."}
{"index": 1303, "repo": "groovy-all-4.0.13", "code": "package builder\n\n// Runtime exception used by JmxBuilder.\npublic class JmxBuilderException extends RuntimeException;\n// The JmxBuilderModelMBean is the MBean class that proxies exported POGO/POJO inside the MBeanServer.\npublic class JmxBuilderModelMBean extends RequiredModelMBean implements NotificationListener;\n", "des": "Classes for the JMX Builder."}
{"index": 1304, "repo": "groovy-all-4.0.13", "code": "package plugin\n\n// Integration code for running JUnit5 tests in Groovy.\npublic class JUnit5Runner extends Object implements GroovyRunner;\n", "des": "Classes to support running JUnit5 tests as scripts."}
{"index": 1305, "repo": "groovy-all-4.0.13", "code": "package lang\n\n// An interface for MetaClass instances that \"adapt\" other MetaClass instances such as a proxy or delegating MetaClass.\npublic interface AdaptingMetaClass extends MetaClass;\n// Interceptor that registers the timestamp of each method call before and after invocation.\npublic class BenchmarkInterceptor extends Object implements Interceptor;\n", "des": "Core Groovy language classes for implementing data structures, closures, metadata and so forth."}
{"index": 1306, "repo": "groovy-all-4.0.13", "code": "package interceptor\n\n// The ProxyMetaClass for the MockInterceptor.\npublic class MockProxyMetaClass extends ProxyMetaClass;\n", "des": "The groovy.mock.interceptor is an all-groovy mock testing library."}
{"index": 1307, "repo": "groovy-all-4.0.13", "code": "package security\n\n// Permission required to explicitly specify a codebase for a groovy script whose codebase cannot be determined.\npublic final class GroovyCodeSourcePermission extends BasicPermission;\n", "des": "Security-related classes"}
{"index": 1308, "repo": "groovy-all-4.0.13", "code": "package servlet\n\n// A base class dealing with common HTTP servlet API housekeeping aspects.\npublic abstract class AbstractHttpServlet extends HttpServlet implements ResourceConnector;\n// This servlet will run Groovy scripts as Groovlets.\npublic class GroovyServlet extends AbstractHttpServlet;\n// Servlet-specific binding extension to lazy load the writer or the output stream from the response.\npublic class ServletBinding extends Binding;\n// Servlet support.\npublic class ServletCategory extends Object;\n", "des": "Support for Groovlets which are Servlets written as a simple Groovy script."}
{"index": 1309, "repo": "groovy-all-4.0.13", "code": "package sql\n\n// Class which delegates to a PreparedStatement but keeps track of a batch count size.\npublic class BatchingPreparedStatementWrapper extends BatchingStatementWrapper;\n// Class which delegates to a Statement but keeps track of a batch count size.\npublic class BatchingStatementWrapper extends GroovyObjectSupport implements AutoCloseable;\n", "des": "Groovy helper classes for working with SQL data as Groovy objects"}
{"index": 1310, "repo": "groovy-all-4.0.13", "code": "package binding\n\n// \npublic class AbstractButtonProperties extends Object;\n// \npublic abstract class AbstractSyntheticBinding extends AbstractFullBinding;\n// \npublic class JComboBoxProperties extends Object;\n// \npublic class JComponentProperties extends Object;\n// \npublic class JScrollBarProperties extends Object;\n// \npublic class JSliderProperties extends Object;\n// \npublic class JSpinnerProperties extends Object;\n// \npublic class JTableProperties extends Object;\n", "des": "Binding classes for SwingBuilder"}
{"index": 1311, "repo": "groovy-all-4.0.13", "code": "package impl\n\n// \npublic class ClosureRenderer extends Object implements ListCellRenderer, TableCellRenderer, TreeCellRenderer;\n// A default action implementation\npublic class DefaultAction extends AbstractAction;\n// A ListModel implementation that's backed by a live List.\npublic class ListWrapperListModel<E> extends AbstractListModel;\n// Represents a HTML style table layout\npublic class TableLayout extends JPanel;\n// Represents a cell in a table layout.\npublic class TableLayoutCell extends Object;\n", "des": "Implementation classes for SwingBuilder"}
{"index": 1312, "repo": "groovy-all-4.0.13", "code": "package model\n\n// Represents a value model using a closure to extract the value from some source model and an optional write closure for updating the value.\npublic class ClosureModel extends Object implements ValueModel, NestedValueModel;\n// Represents a column using a ValueModel to extract the value.\npublic class DefaultTableColumn extends TableColumn;\n// A default table model made up of PropertyModels on a Value model.\npublic class DefaultTableModel extends AbstractTableModel;\n", "des": "An MVC model package for working with user interfaces and data structures and arbitrary Java and Groovy objects"}
{"index": 1313, "repo": "groovy-all-4.0.13", "code": "package text\n\n// Processes template source files substituting variables and expressions into placeholders in a template source text to produce the desired output using a streaming approach.\npublic class GStringTemplateEngine extends TemplateEngine;\n// Processes template source files substituting variables and expressions into placeholders in a template source text to produce the desired output.\npublic class SimpleTemplateEngine extends TemplateEngine;\n", "des": "Contains the text processing utilities including templating APIs and default implementations."}
{"index": 1314, "repo": "groovy-all-4.0.13", "code": "package markup\n\n// All templates compiled through MarkupTemplateEngine extend this abstract class, which provides a number of utility methods to generate markup.\npublic abstract class BaseTemplate extends Object implements Writable;\n// A writer which delegates to another writer and supports an additional indenting level.\npublic class DelegatingIndentWriter extends Writer;\n", "des": "Contains a template engine facilitating generation of XML-like markup with optional type checking."}
{"index": 1315, "repo": "groovy-all-4.0.13", "code": "package time\n\n// Base class for date and time durations.\npublic abstract class BaseDuration extends Object implements Comparable<BaseDuration>;\n// \npublic abstract static class BaseDuration.From extends Object;\n// DatumDependentDuration represents durations whose length in milliseconds cannot be determined without knowing the datum point.\npublic class DatumDependentDuration extends BaseDuration;\n", "des": "Classes for easily manipulating Dates and times."}
{"index": 1316, "repo": "groovy-all-4.0.13", "code": "package util\n\n// \npublic abstract class AbstractFactory extends Object implements Factory;\n// An iterator that allows examining the next element without consuming it.\npublic interface BufferedIterator<T> extends Iterator<T>;\n// Base class for creating arbitrary nested trees of objects or events.\npublic abstract class BuilderSupport extends GroovyObjectSupport;\n// Utility class to guess the encoding of a given text file.\npublic class CharsetToolkit extends Object;\n", "des": "Various Groovy utilities for working with nodes, builders, logging, and other things."}
{"index": 1317, "repo": "groovy-all-4.0.13", "code": "package xml\n\n// A helper class for creating a W3C DOM tree\npublic class DOMBuilder extends BuilderSupport;\n// Support class for creating XML Factories\npublic class FactorySupport extends Object;\n// A helper class for creating XML or HTML markup.\npublic class MarkupBuilder extends BuilderSupport;\n// \npublic static enum MarkupBuilder.CharFilter extends Enum<MarkupBuilder.CharFilter>;\n", "des": "Groovy markup builder classes for working with SAX and W3C DOM and Groovy markup."}
{"index": 1318, "repo": "groovy-all-4.0.13", "code": "package dom\n\n// Category class which adds GPath style operations to Java's DOM classes.\npublic class DOMCategory extends Object;\n", "des": "Groovy XML Dom processing classes."}
{"index": 1319, "repo": "groovy-all-4.0.13", "code": "package slurpersupport\n\n// Lazy evaluated representation of a node attribute.\npublic class Attribute extends GPathResult;\n// Lazy evaluated representation of a node's attributes.\npublic class Attributes extends NodeChildren;\n// Lazy evaluated representation of a node's attributes filtered by a Closure.\npublic class FilteredAttributes extends Attributes;\n// Lazy evaluated representation of child nodes filtered by a Closure.\npublic class FilteredNodeChildren extends NodeChildren;\n", "des": "Helper classes for XmlSlurper."}
{"index": 1320, "repo": "groovy-all-4.0.13", "code": "package streamingmarkupsupport\n\n// \npublic class BaseMarkupBuilder extends Builder;\n// \npublic abstract class Builder extends GroovyObjectSupport;\n// \nprotected abstract static class Builder.Built extends GroovyObjectSupport;\n// \npublic class StreamingMarkupWriter extends Writer;\n", "des": "XmlBuilder related classes to support streaming XML."}
{"index": 1321, "repo": "groovy-all-4.0.13", "code": "package yaml\n\n// A builder for creating YAML payloads.\npublic class YamlBuilder extends GroovyObjectSupport implements Writable;\n// Represents runtime exception occurred when parsing or building YAML\npublic class YamlRuntimeException extends GroovyRuntimeException;\n// Represents a YAML parser\npublic class YamlSlurper extends Object;\n", "des": "Classes for building and parsing YAML."}
{"index": 1322, "repo": "groovy-all-4.0.13", "code": "package binding\n\n// \npublic abstract class AbstractFullBinding extends Object implements FullBinding;\n// An aggregation of multiple bindings\npublic class AggregateBinding extends Object implements BindingUpdatable;\n// This class returns half bound FullBindings on the source half to the model object for every property reference (and I do mean every, valid or not, queried before or not).\npublic class BindingProxy extends GroovyObjectSupport implements BindingUpdatable;\n// \npublic interface BindingUpdatable;\n", "des": "Classes related to property binding."}
{"index": 1323, "repo": "groovy-all-4.0.13", "code": "package concurrentlinkedhashmap\n\n// A hash table supporting full concurrency of retrievals, adjustable expected concurrency for updates, and a maximum capacity to bound the map by.\n@ThreadSafe public final class ConcurrentLinkedHashMap<K,V> extends AbstractMap<K,V> implements ConcurrentMap<K,V>, Serializable;\n// A builder that creates ConcurrentLinkedHashMap instances.\npublic static final class ConcurrentLinkedHashMap.Builder<K,V> extends Object;\n", "des": "This package contains an implementation of a bounded ConcurrentMap data structure."}
{"index": 1324, "repo": "groovy-all-4.0.13", "code": "package util\n\n// A converter for converting YAML to JSON, vice versa\npublic final class YamlConverter extends Object;\n", "des": "Utility classes for YAML processing."}
{"index": 1325, "repo": "groovy-all-4.0.13", "code": "package groovy\n\n// This class represents an error that is thrown when a bug is recognized inside the runtime.\npublic class GroovyBugError extends AssertionError;\n// \npublic class GroovyException extends Exception implements GroovyExceptionInterface;\n// An interface for use by all Groovy compiler exceptions.\npublic interface GroovyExceptionInterface;\n", "des": "Groovy Language for the JVM"}
{"index": 1326, "repo": "groovy-all-4.0.13", "code": "package ant\n\n// \npublic class AntProjectPropertiesDelegate extends Hashtable<String,Object>;\n// Support for compilation related tasks.\npublic abstract class CompileTaskSupport extends org.apache.tools.ant.taskdefs.MatchingTask;\n// FileIterator is an iterator over a number of files from a collection of FileSet instances.\npublic class FileIterator extends Object implements Iterator<File>;\n", "des": "Ant tasks for working with Groovy - such as groovyc for compiling Groovy source code to Java bytecode"}
{"index": 1327, "repo": "groovy-all-4.0.13", "code": "package ast\n\n// Base class for any AST node which is capable of being annotated\npublic class AnnotatedNode extends ASTNode implements GroovydocHolder<AnnotatedNode>;\n// Represents an annotation which can be attached to interfaces, classes, methods, fields, parameters, and other places.\npublic class AnnotationNode extends ASTNode;\n// Base class for any AST node.\npublic class ASTNode extends Object implements NodeMetaDataHandler;\n", "des": "Groovy AST nodes for the syntax of the language"}
{"index": 1328, "repo": "groovy-all-4.0.13", "code": "package expr\n\n// Represents an annotation \"constant\" that may appear in annotation attributes (mainly used as a marker).\npublic class AnnotationConstantExpression extends ConstantExpression;\n// Represents one or more arguments being passed into a method\npublic class ArgumentListExpression extends TupleExpression;\n// Represents an array object construction.\npublic class ArrayExpression extends Expression;\n", "des": "AST nodes for Groovy expressions"}
{"index": 1329, "repo": "groovy-all-4.0.13", "code": "package stmt\n\n// Represents an assert statement.\npublic class AssertStatement extends Statement;\n// A list of statements and a scope.\npublic class BlockStatement extends Statement;\n// Represents a break statement in a switch or loop statement\npublic class BreakStatement extends Statement;\n// Represents a case statement in a switch statement\npublic class CaseStatement extends Statement;\n// Represents a catch (Exception var) { } statement\npublic class CatchStatement extends Statement;\n", "des": "AST nodes for Groovy statements"}
{"index": 1330, "repo": "groovy-all-4.0.13", "code": "package classgen\n\n// An Annotation visitor responsible for: reading annotation metadata (@Retention, @Target, attribute types) verify that an AnnotationNode conforms to annotation meta enhancing an AnnotationNode AST to reflect real annotation meta\npublic class AnnotationVisitor extends Object;\n// Generates Java class versions of Groovy classes using ASM.\npublic class AsmClassGenerator extends ClassGenerator;\n", "des": "Generates Java classes for Groovy classes using ASM."}
{"index": 1331, "repo": "groovy-all-4.0.13", "code": "package asm\n\n// \npublic class AssertionWriter extends Object;\n// Binary write operations specialised for Booleans\npublic class BinaryBooleanExpressionHelper extends BinaryIntExpressionHelper;\n// \npublic class BinaryDoubleExpressionHelper extends BinaryLongExpressionHelper;\n// \npublic class BinaryExpressionHelper extends Object;\n", "des": "Helper classes for ASMClassGenerator."}
{"index": 1332, "repo": "groovy-all-4.0.13", "code": "package control\n\n// Resolves constants in annotation definitions.\npublic class AnnotationConstantsVisitor extends ClassCodeVisitorSupport;\n// Stores state information about global AST transformations applied to a compilation unit.\npublic class ASTTransformationsContext extends Object;\n// \npublic interface BytecodeProcessor;\n// This class is used as a pluggable way to resolve class names.\npublic class ClassNodeResolver extends Object;\n", "des": "Compiler control classes."}
{"index": 1333, "repo": "groovy-all-4.0.13", "code": "package io\n\n// For ReaderSources that can choose a parent class, a base that provides common functionality.\npublic abstract class AbstractReaderSource extends Object implements ReaderSource;\n// A ReaderSource for source files.\npublic class FileReaderSource extends AbstractReaderSource;\n// A ReaderSource for source strings.\npublic class InputStreamReaderSource extends AbstractReaderSource;\n// A Writer that eats its input.\npublic class NullWriter extends Writer;\n", "des": "Internal classes for Groovier Input/Output."}
{"index": 1334, "repo": "groovy-all-4.0.13", "code": "package messages\n\n// A class for error messages produced by the parser system.\npublic class ExceptionMessage extends Message;\n// A base class for compilation messages.\npublic class LocatedMessage extends SimpleMessage;\n// A base class for compilation messages.\npublic abstract class Message extends Object;\n// A base class for compilation messages.\npublic class SimpleMessage extends Message;\n// A class for error messages produced by the parser system.\npublic class SyntaxErrorMessage extends Message;\n", "des": "Error message classes."}
{"index": 1335, "repo": "groovy-all-4.0.13", "code": "package groovydoc\n\n// \npublic interface GroovyAnnotationRef;\n// \npublic interface GroovyClassDoc extends GroovyType, GroovyProgramElementDoc;\n// \npublic interface GroovyConstructorDoc extends GroovyExecutableMemberDoc;\n// \npublic interface GroovyDoc extends Comparable<GroovyDoc>;\n// \npublic interface GroovyDocErrorReporter;\n// \npublic interface GroovyExecutableMemberDoc extends GroovyMemberDoc;\n// \npublic interface GroovyFieldDoc extends GroovyMemberDoc;\n", "des": "GroovyDoc internal classes."}
{"index": 1336, "repo": "groovy-all-4.0.13", "code": "package reflection\n\n// \npublic class CacheAccessControlException extends GroovyRuntimeException;\n// \npublic class CachedClass extends Object;\n// \npublic static class CachedClass.CachedMethodComparatorByName extends Object implements Comparator<CachedMethod>;\n// \npublic static class CachedClass.CachedMethodComparatorWithString extends Object implements Comparator;\n// \npublic class CachedConstructor extends ParameterTypes;\n// \npublic class CachedField extends MetaProperty;\n", "des": "Internal classes for assisting with reflection."}
{"index": 1337, "repo": "groovy-all-4.0.13", "code": "package runtime\n\n// \npublic abstract class AbstractComparator<T> extends Object implements Comparator<T>;\n// Utilities for handling array types\npublic class ArrayTypeUtils extends Object;\n// This is a generated class used internally during the writing of bytecode within the CallSiteWriter logic.\npublic class ArrayUtil extends Object;\n// This class contains methods special to optimizations used directly from bytecode in Groovy 1.8\npublic class BytecodeInterface8 extends Object;\n", "des": "Runtime classes for Groovy - whether the dynamic interpreter is being used, the compiler or the bytecode generator."}
{"index": 1338, "repo": "groovy-all-4.0.13", "code": "package metaclass\n\n// A metaclass for closures generated by the Groovy compiler.\npublic final class ClosureMetaClass extends MetaClassImpl;\n// A MetaMethod that accepts a closure in the constructor which is invoked when the MetaMethod is called.\npublic class ClosureMetaMethod extends MetaMethod implements ClosureInvokingMethod;\n", "des": "Internal classes related to Groovy's metaclass implementation."}
{"index": 1339, "repo": "groovy-all-4.0.13", "code": "package typehandling\n\n// BigDecimal NumberMath operations\npublic final class BigDecimalMath extends NumberMath;\n// BigInteger NumberMath operations\npublic final class BigIntegerMath extends NumberMath;\n// Class providing various type conversions, coercions and boxing/unboxing operations.\npublic class DefaultTypeTransformation extends Object;\n// FloatingPoint (Double and Float) NumberMath operations\npublic final class FloatingPointMath extends NumberMath;\n", "des": "Classes used to execute special actions based on the type."}
{"index": 1340, "repo": "groovy-all-4.0.13", "code": "package wrappers\n\n// \npublic class BooleanWrapper extends PojoWrapper;\n// \npublic class ByteWrapper extends PojoWrapper;\n// \npublic class CharWrapper extends PojoWrapper;\n// \npublic class DoubleWrapper extends PojoWrapper;\n// \npublic class FloatWrapper extends PojoWrapper;\n// \npublic class GroovyObjectWrapper extends Wrapper;\n// \npublic class IntWrapper extends PojoWrapper;\n// \npublic class LongWrapper extends PojoWrapper;\n// \npublic class PojoWrapper extends Wrapper;\n", "des": "Groovy wrapper classes for primitive types."}
{"index": 1341, "repo": "groovy-all-4.0.13", "code": "package syntax\n\n// A common base class of AST helper methods which can be shared across the classic and new parsers\npublic class ASTHelper extends Object;\n// An abstract base class for nodes in the concrete syntax tree that is the result of parsing.\npublic abstract class CSTNode extends Object;\n// Helper class for processing Groovy numeric literals.\npublic class Numbers extends Object;\n// \npublic class ParserException extends TokenException;\n", "des": "Lexer, parser and trees."}
{"index": 1342, "repo": "groovy-all-4.0.13", "code": "package tools\n\n// A convenience front end for getting standard compilations done.\npublic class Compiler extends Object;\n// \npublic class DgmConverter extends Object;\n// Provides services for reporting compilation errors to the user.\npublic class ErrorReporter extends Object;\n// Command-line compiler (aka.\npublic class FileSystemCompiler extends Object;\n// \npublic static class FileSystemCompiler.CompilationOptions extends Object;\n", "des": "Compiler entry points and miscellaneous development tools."}
{"index": 1343, "repo": "groovy-all-4.0.13", "code": "package groovydoc\n\n// \npublic class ArrayClassDocWrapper extends Object implements GroovyClassDoc;\n// \npublic class ClasspathResourceManager extends Object implements ResourceManager;\n// Represents a class not in the codebase being processed.\npublic class ExternalGroovyClassDoc extends Object implements GroovyClassDoc;\n// \npublic class FileOutputTool extends Object implements OutputTool;\n// \npublic class FileSystemResourceManager extends Object implements ResourceManager;\n", "des": "GroovyDoc tool."}
{"index": 1344, "repo": "groovy-all-4.0.13", "code": "package javac\n\n// Compilation Unit capable of compiling Java source files.\npublic class JavaAwareCompilationUnit extends CompilationUnit;\n// \npublic class JavaAwareResolveVisitor extends ResolveVisitor;\n// \npublic class JavacCompilerFactory extends Object implements JavaCompilerFactory;\n// \npublic class JavacJavaCompiler extends Object implements JavaCompiler;\n// \npublic interface JavaCompiler;\n// \npublic interface JavaCompilerFactory;\n", "des": "Classes related to the joint compiler."}
{"index": 1345, "repo": "groovy-all-4.0.13", "code": "package vmplugin\n\n// Interface to access VM version based actions.\npublic interface VMPlugin;\n// Factory class to get functionality based on the VM version.\npublic class VMPluginFactory extends Object;\n", "des": "JVM version specific classes."}
{"index": 1346, "repo": "spring-integration-kafka-6.1.2", "code": "package channel\n\n// Abstract MessageChannel backed by an Apache Kafka topic.\npublic abstract class AbstractKafkaChannel extends org.springframework.integration.channel.AbstractMessageChannel;\n// Pollable channel backed by an Apache Kafka topic.\npublic class PollableKafkaChannel extends AbstractKafkaChannel implements org.springframework.messaging.PollableChannel, org.springframework.integration.channel.ExecutorChannelInterceptorAware;\n", "des": "Provides classes related to message channel implementations for Apache Kafka."}
{"index": 1347, "repo": "spring-integration-kafka-6.1.2", "code": "package xml\n\n// Parser for a channel backed by an Apache Kafka topic.\npublic class KafkaChannelParser extends org.springframework.integration.config.xml.AbstractChannelParser;\n// Parser for the inbound channel adapter.\npublic class KafkaInboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n// Inbound gateway parser.\npublic class KafkaInboundGatewayParser extends org.springframework.integration.config.xml.AbstractInboundGatewayParser;\n", "des": "Provides parser classes to provide Xml namespace support for the Apache Kafka components."}
{"index": 1348, "repo": "spring-integration-kafka-6.1.2", "code": "package dsl\n\n// Spec for a message channel backed by an Apache Kafka topic.\npublic abstract class AbstractKafkaChannelSpec<S extends AbstractKafkaChannelSpec<S,C>,C extends AbstractKafkaChannel> extends org.springframework.integration.dsl.MessageChannelSpec<S,C>;\n// Factory class for Apache Kafka components.\npublic final class Kafka extends Object;\n", "des": "Provides Spring Integration Java DSL Components support for Apache Kafka."}
{"index": 1349, "repo": "spring-integration-kafka-6.1.2", "code": "package inbound\n\n// An extension of ErrorMessagePublisher that can be used in a CommonErrorHandler for recovering Kafka delivery failures.\npublic class KafkaErrorSendingMessageRecoverer extends org.springframework.integration.core.ErrorMessagePublisher implements org.springframework.kafka.listener.ConsumerRecordRecoverer;\n", "des": "Provides Spring Integration inbound components for Apache Kafka."}
{"index": 1350, "repo": "spring-integration-kafka-6.1.2", "code": "package outbound\n\n// A Message Handler for Apache Kafka; when supplied with a ReplyingKafkaTemplate it is used as the handler in an outbound gateway.\npublic class KafkaProducerMessageHandler<K,V> extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler implements org.springframework.integration.support.management.ManageableLifecycle;\n", "des": "Provides Spring Integration outbound components for Apache Kafka."}
{"index": 1351, "repo": "spring-integration-kafka-6.1.2", "code": "package support\n\n// Headers specifically for Spring Integration components.\npublic final class KafkaIntegrationHeaders extends Object;\n// An exception that is the payload of an ErrorMessage when a send fails.\npublic class KafkaSendFailureException extends org.springframework.messaging.MessagingException;\n", "des": "Provides support classes."}
{"index": 1352, "repo": "spring-integration-stream-6.1.2", "code": "package stream\n\n// A pollable source for receiving bytes from an InputStream.\npublic class ByteStreamReadingMessageSource extends org.springframework.integration.endpoint.AbstractMessageSource<byte[]>;\n// A MessageHandler that writes a byte array to an OutputStream.\npublic class ByteStreamWritingMessageHandler extends org.springframework.integration.handler.AbstractMessageHandler;\n", "des": "Base package for stream support."}
{"index": 1353, "repo": "spring-integration-stream-6.1.2", "code": "package config\n\n// Parser for the <stdin-channel-adapter> element.\npublic class ConsoleInboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n// Parser for the \"stdout-\" and \"stderr-channel-adapter\" elements.\npublic class ConsoleOutboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractOutboundChannelAdapterParser;\n", "des": "Provides classes for configuration - parsers, namespace handlers."}
{"index": 1354, "repo": "spring-tx-6.0.11", "code": "package dao\n\n// Exception thrown on failure to acquire a lock during an update, for example during a \"select for update\" statement.\npublic class CannotAcquireLockException extends PessimisticLockingFailureException;\n// \n@Deprecated(since=\"6.0.3\") public class CannotSerializeTransactionException extends PessimisticLockingFailureException;\n// \n@Deprecated(since=\"6.0.3\") public class CleanupFailureDataAccessException extends NonTransientDataAccessException;\n", "des": "Exception hierarchy enabling sophisticated error handling independent of the data access approach in use."}
{"index": 1355, "repo": "spring-tx-6.0.11", "code": "package annotation\n\n// Spring AOP exception translation aspect for use at Repository or DAO layer level.\npublic class PersistenceExceptionTranslationAdvisor extends org.springframework.aop.support.AbstractPointcutAdvisor;\n", "des": "Annotation support for DAOs."}
{"index": 1356, "repo": "spring-tx-6.0.11", "code": "package support\n\n// Implementation of PersistenceExceptionTranslator that supports chaining, allowing the addition of PersistenceExceptionTranslator instances in order.\npublic class ChainedPersistenceExceptionTranslator extends Object implements PersistenceExceptionTranslator;\n// Generic base class for DAOs, defining template methods for DAO initialization.\npublic abstract class DaoSupport extends Object implements org.springframework.beans.factory.InitializingBean;\n", "des": "Support classes for DAO implementations, providing miscellaneous utility methods."}
{"index": 1357, "repo": "spring-tx-6.0.11", "code": "package endpoint\n\n// Abstract base implementation of the JCA 1.7 MessageEndpointFactory interface, providing transaction management capabilities as well as ClassLoader exposure for endpoint invocations.\npublic abstract class AbstractMessageEndpointFactory extends Object implements MessageEndpointFactory, org.springframework.beans.factory.BeanNameAware;\n", "des": "This package provides a facility for generic JCA message endpoint management."}
{"index": 1358, "repo": "spring-tx-6.0.11", "code": "package support\n\n// FactoryBean that creates a local JCA connection factory in \"non-managed\" mode (as defined by the Java Connector Architecture specification).\npublic class LocalConnectionFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<Object>, org.springframework.beans.factory.InitializingBean;\n", "des": "Provides generic support classes for JCA usage within Spring, mainly for local setup of a JCA ResourceAdapter and/or ConnectionFactory."}
{"index": 1359, "repo": "spring-tx-6.0.11", "code": "package transaction\n\n// Exception thrown when a transaction can't be created using an underlying transaction API such as JTA.\npublic class CannotCreateTransactionException extends TransactionException;\n// Exception that represents a transaction failure caused by a heuristic decision on the side of the transaction coordinator.\npublic class HeuristicCompletionException extends TransactionException;\n", "des": "Spring's core transaction management APIs (independent of any specific transaction management system); an exception hierarchy for Spring's transaction infrastructure; and transaction manager, definition, and status interfaces."}
{"index": 1360, "repo": "spring-tx-6.0.11", "code": "package annotation\n\n// Abstract base @Configuration class providing common structure for enabling Spring's annotation-driven transaction management capability.\n@Configuration public abstract class AbstractTransactionManagementConfiguration extends Object implements org.springframework.context.annotation.ImportAware;\n", "des": "Spring's support for annotation-based transaction demarcation."}
{"index": 1361, "repo": "spring-tx-6.0.11", "code": "package config\n\n// Parser for the <tx:jta-transaction-manager/> XML configuration element.\npublic class JtaTransactionManagerBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;\n// \n@Deprecated(since=\"6.0\") public class JtaTransactionManagerFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<JtaTransactionManager>, org.springframework.beans.factory.InitializingBean;\n", "des": "Support package for declarative transaction configuration, with XML schema being the primary configuration format."}
{"index": 1362, "repo": "spring-tx-6.0.11", "code": "package event\n\n// An ApplicationListener that is invoked according to a TransactionPhase.\npublic interface TransactionalApplicationListener<E extends org.springframework.context.ApplicationEvent> extends org.springframework.context.ApplicationListener<E>, org.springframework.core.Ordered;\n", "des": "Spring's support for listening to transaction events."}
{"index": 1363, "repo": "spring-tx-6.0.11", "code": "package interceptor\n\n// Abstract implementation of TransactionAttributeSource that caches attributes for methods and implements a fallback policy: 1.\npublic abstract class AbstractFallbackTransactionAttributeSource extends Object implements TransactionAttributeSource, org.springframework.context.EmbeddedValueResolverAware;\n", "des": "AOP-based solution for declarative transaction demarcation."}
{"index": 1364, "repo": "spring-tx-6.0.11", "code": "package jta\n\n// Adapter for a JTA Synchronization, invoking the afterCommit / afterCompletion callbacks of Spring TransactionSynchronization objects callbacks after the outer JTA transaction has completed.\npublic class JtaAfterCompletionSynchronization extends Object implements Synchronization;\n", "des": "Transaction SPI implementation for JTA."}
{"index": 1365, "repo": "spring-tx-6.0.11", "code": "package reactive\n\n// Abstract base class that implements Spring's standard reactive transaction workflow, serving as basis for concrete platform transaction managers.\npublic abstract class AbstractReactiveTransactionManager extends Object implements ReactiveTransactionManager, Serializable;\n// Holder for suspended resources.\nprotected static final class AbstractReactiveTransactionManager.SuspendedResourcesHolder extends Object;\n", "des": "Support classes for reactive transaction management."}
{"index": 1366, "repo": "spring-tx-6.0.11", "code": "package support\n\n// Abstract base class that implements Spring's standard transaction workflow, serving as basis for concrete platform transaction managers like JtaTransactionManager.\npublic abstract class AbstractPlatformTransactionManager extends Object implements PlatformTransactionManager, Serializable;\n// Holder for suspended resources.\nprotected static final class AbstractPlatformTransactionManager.SuspendedResourcesHolder extends Object;\n", "des": "Support classes for the org.springframework.transaction package."}
{"index": 1367, "repo": "wicket-devutils-10.0.0-M1", "code": "package inspector\n\n// A Wicket panel that shows interesting information about a given Wicket session.\npublic final class ApplicationView extends DevUtilsPanel;\n// Enhanced PageView which displays all Components and Behaviors of a Page in a TableTree representation.\npublic final class EnhancedPageView extends org.apache.wicket.markup.html.panel.GenericPanel<org.apache.wicket.Page>;\n", "des": "Classes that make debugging Wicket HTML applications easier."}
{"index": 1368, "repo": "log4j-over-slf4j-2.0.7", "code": "package log4j\n\n// Implement this interface for your own strategies for outputting log statements.\npublic interface Appender;\n// \npublic class AppenderSkeleton extends Object implements OptionHandler;\n// A minimal (nop) implementation of BasicConfigurator.\npublic class BasicConfigurator extends Object;\n// This class is a minimal implementation of the original org.apache.log4j.Category class (as found in log4j 1.2) by delegation of all calls to a Logger instance.\npublic class Category extends Object;\n", "des": "An rather minimal but sufficient implementation redirecting all calls to a log4j logger to a logback logger."}
{"index": 1369, "repo": "spring-boot-actuator-3.1.1", "code": "package amqp\n\n// Simple implementation of a HealthIndicator returning status information for the RabbitMQ messaging system.\npublic class RabbitHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for AMQP and RabbitMQ."}
{"index": 1370, "repo": "spring-boot-actuator-3.1.1", "code": "package audit\n\n// A value object representing an audit event: at a particular time, a particular user or agent carried out an action of a particular type.\npublic class AuditEvent extends Object implements Serializable;\n// Repository for AuditEvents.\npublic interface AuditEventRepository;\n// @Endpoint to expose audit events.\n@Endpoint(id=\"auditevents\") public class AuditEventsEndpoint extends Object;\n", "des": "Core actuator auditing classes."}
{"index": 1371, "repo": "spring-boot-actuator-3.1.1", "code": "package listener\n\n// Abstract ApplicationListener to handle AuditApplicationEvents.\npublic abstract class AbstractAuditListener extends Object implements org.springframework.context.ApplicationListener<AuditApplicationEvent>;\n// Spring ApplicationEvent to encapsulate AuditEvents.\npublic class AuditApplicationEvent extends org.springframework.context.ApplicationEvent;\n// The default AbstractAuditListener implementation.\npublic class AuditListener extends AbstractAuditListener;\n", "des": "Actuator auditing listeners."}
{"index": 1372, "repo": "spring-boot-actuator-3.1.1", "code": "package availability\n\n// A HealthIndicator that checks a specific AvailabilityState of the application.\npublic class AvailabilityStateHealthIndicator extends AbstractHealthIndicator;\n// Callback used to add status mappings.\npublic static interface AvailabilityStateHealthIndicator.StatusMappings<S extends org.springframework.boot.availability.AvailabilityState>;\n", "des": "Actuator support for application availability concerns."}
{"index": 1373, "repo": "spring-boot-actuator-3.1.1", "code": "package beans\n\n// @Endpoint to expose details of an application's beans, grouped by application context.\n@Endpoint(id=\"beans\") public class BeansEndpoint extends Object;\n// Description of a bean.\npublic static final class BeansEndpoint.BeanDescriptor extends Object;\n// Description of an application's beans.\npublic static final class BeansEndpoint.BeansDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support relating to Spring Beans."}
{"index": 1374, "repo": "spring-boot-actuator-3.1.1", "code": "package cache\n\n// @Endpoint to expose available caches.\n@Endpoint(id=\"caches\") public class CachesEndpoint extends Object;\n// Description of a Cache.\npublic static class CachesEndpoint.CacheDescriptor extends Object implements OperationResponseBody;\n// Description of a Cache entry.\npublic static final class CachesEndpoint.CacheEntryDescriptor extends CachesEndpoint.CacheDescriptor;\n// Description of a CacheManager.\npublic static final class CachesEndpoint.CacheManagerDescriptor extends Object;\n", "des": "Actuator support for caches."}
{"index": 1375, "repo": "spring-boot-actuator-3.1.1", "code": "package cassandra\n\n// Simple implementation of a HealthIndicator returning status information for Cassandra data stores.\npublic class CassandraDriverHealthIndicator extends AbstractHealthIndicator;\n// Simple implementation of a ReactiveHealthIndicator returning status information for Cassandra data stores.\npublic class CassandraDriverReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Cassandra."}
{"index": 1376, "repo": "spring-boot-actuator-3.1.1", "code": "package context\n\n// @Endpoint to shutdown the ApplicationContext.\n@Endpoint(id=\"shutdown\", enableByDefault=false) public class ShutdownEndpoint extends Object implements org.springframework.context.ApplicationContextAware;\n// Description of the shutdown.\npublic static class ShutdownEndpoint.ShutdownDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support relating to Spring Context."}
{"index": 1377, "repo": "spring-boot-actuator-3.1.1", "code": "package properties\n\n// @Endpoint to expose application properties from @ConfigurationProperties annotated beans.\n@Endpoint(id=\"configprops\") public class ConfigurationPropertiesReportEndpoint extends Object implements org.springframework.context.ApplicationContextAware;\n// Description of a @ConfigurationProperties bean.\npublic static final class ConfigurationPropertiesReportEndpoint.ConfigurationPropertiesBeanDescriptor extends Object;\n", "des": "Actuator support relating to external configuration properties."}
{"index": 1378, "repo": "spring-boot-actuator-3.1.1", "code": "package couchbase\n\n// HealthIndicator for Couchbase.\npublic class CouchbaseHealthIndicator extends AbstractHealthIndicator;\n// A ReactiveHealthIndicator for Couchbase.\npublic class CouchbaseReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Couchbase."}
{"index": 1379, "repo": "spring-boot-actuator-3.1.1", "code": "package elasticsearch\n\n// HealthIndicator for an Elasticsearch cluster using a ReactiveElasticsearchClient.\npublic class ElasticsearchReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Elasticsearch dependent on Spring Data."}
{"index": 1380, "repo": "spring-boot-actuator-3.1.1", "code": "package mongo\n\n// Simple implementation of a HealthIndicator returning status information for Mongo data stores.\npublic class MongoHealthIndicator extends AbstractHealthIndicator;\n// A ReactiveHealthIndicator for Mongo.\npublic class MongoReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Mongo dependent on Spring Data."}
{"index": 1381, "repo": "spring-boot-actuator-3.1.1", "code": "package redis\n\n// Simple implementation of a HealthIndicator returning status information for Redis data stores.\npublic class RedisHealthIndicator extends AbstractHealthIndicator;\n// A ReactiveHealthIndicator for Redis.\npublic class RedisReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Redis dependent on Spring Data."}
{"index": 1382, "repo": "spring-boot-actuator-3.1.1", "code": "package elasticsearch\n\n// HealthIndicator for an Elasticsearch cluster using a RestClient.\npublic class ElasticsearchRestClientHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for Elasticsearch."}
{"index": 1383, "repo": "spring-boot-actuator-3.1.1", "code": "package endpoint\n\n// Abstract base class for ExposableEndpoint implementations.\npublic abstract class AbstractExposableEndpoint<O extends Operation> extends Object implements ExposableEndpoint<O>;\n// API versions supported for the actuator API.\npublic enum ApiVersion extends Enum<ApiVersion> implements Producible<ApiVersion>;\n// Strategy class that can be used to filter endpoints.\n@FunctionalInterface public interface EndpointFilter<E extends ExposableEndpoint<?>>;\n", "des": "Endpoint support."}
{"index": 1384, "repo": "spring-boot-actuator-3.1.1", "code": "package annotation\n\n// Abstract base class for endpoints discovered by a EndpointDiscoverer.\npublic abstract class AbstractDiscoveredEndpoint<O extends Operation> extends AbstractExposableEndpoint<O> implements DiscoveredEndpoint<O>;\n// Abstract base class for endpoints operations discovered by a EndpointDiscoverer.\npublic abstract class AbstractDiscoveredOperation extends Object implements Operation;\n", "des": "Annotation support for actuator endpoints."}
{"index": 1385, "repo": "spring-boot-actuator-3.1.1", "code": "package invoke\n\n// RuntimeException thrown when an endpoint invocation does not contain required parameters.\npublic final class MissingParametersException extends InvalidEndpointRequestException;\n// Interface to perform an operation invocation.\n@FunctionalInterface public interface OperationInvoker;\n// Allows additional functionality to be applied to an OperationInvoker.\n@FunctionalInterface public interface OperationInvokerAdvisor;\n// A single operation parameter.\npublic interface OperationParameter;\n", "des": "Interfaces and classes relating to invoking operation methods."}
{"index": 1386, "repo": "spring-boot-actuator-3.1.1", "code": "package convert\n\n// ParameterValueMapper backed by a ConversionService.\npublic class ConversionServiceParameterValueMapper extends Object implements ParameterValueMapper;\n// A String to OffsetDateTime Converter that uses ISO offset parsing.\npublic class IsoOffsetDateTimeConverter extends Object implements org.springframework.core.convert.converter.Converter<String,OffsetDateTime>;\n", "des": "Converter support for actuator endpoints."}
{"index": 1387, "repo": "spring-boot-actuator-3.1.1", "code": "package reflect\n\n// Information describing an operation method on an endpoint method.\npublic class OperationMethod extends Object;\n// An OperationInvoker that invokes an operation using reflection.\npublic class ReflectiveOperationInvoker extends Object implements OperationInvoker;\n", "des": "Endpoint reflection support."}
{"index": 1388, "repo": "spring-boot-actuator-3.1.1", "code": "package cache\n\n// An OperationInvoker that caches the response of an operation with a configurable time to live.\npublic class CachingOperationInvoker extends Object implements OperationInvoker;\n// OperationInvokerAdvisor to optionally provide result caching support.\npublic class CachingOperationInvokerAdvisor extends Object implements OperationInvokerAdvisor;\n", "des": "Caching support for actuator endpoints."}
{"index": 1389, "repo": "spring-boot-actuator-3.1.1", "code": "package jackson\n\n// Interface used to supply the ObjectMapper that should be used when serializing OperationResponseBody endpoint results.\npublic interface EndpointObjectMapper;\n", "des": "Jackson support classes for actuator endpoints."}
{"index": 1390, "repo": "spring-boot-actuator-3.1.1", "code": "package jmx\n\n// Adapter to expose a JMX endpoint as a DynamicMBean.\npublic class EndpointMBean extends Object implements DynamicMBean;\n// A factory to create an ObjectName for an EndpointMBean.\n@FunctionalInterface public interface EndpointObjectNameFactory;\n// Information describing an endpoint that can be exposed over JMX.\npublic interface ExposableJmxEndpoint extends ExposableEndpoint<JmxOperation>;\n", "des": "JMX support for actuator endpoints."}
{"index": 1391, "repo": "spring-boot-actuator-3.1.1", "code": "package annotation\n\n// Identifies a type as being a JMX-specific extension of an @Endpoint.\n@Target(TYPE) @Retention(RUNTIME) @Documented @EndpointExtension(filter=org.springframework.boot.actuate.endpoint.jmx.annotation.JmxEndpointFilter.class) public @interface EndpointJmxExtension;\n", "des": "Annotation support for actuator JMX endpoints."}
{"index": 1392, "repo": "spring-boot-actuator-3.1.1", "code": "package web\n\n// A resolver for links to web endpoints.\npublic class EndpointLinksResolver extends Object;\n// A value object for the base mapping for endpoints.\npublic class EndpointMapping extends Object;\n// Media types that are, by default, produced and consumed by an endpoint.\npublic class EndpointMediaTypes extends Object;\n// Contains details of a servlet that is exposed as an actuator endpoint.\npublic final class EndpointServlet extends Object;\n", "des": "Web support for actuator endpoints."}
{"index": 1393, "repo": "spring-boot-actuator-3.1.1", "code": "package annotation\n\n// Identifies a type as being an endpoint that is only exposed over Spring MVC or Spring WebFlux.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Endpoint @FilteredEndpoint(org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointFilter.class) public @interface ControllerEndpoint;\n", "des": "Annotation support for actuator web endpoints."}
{"index": 1394, "repo": "spring-boot-actuator-3.1.1", "code": "package jersey\n\n// A factory for creating Jersey Resources for web endpoint operations.\npublic class JerseyEndpointResourceFactory extends Object;\n// A factory for creating Jersey Resources for health groups with additional path.\npublic class JerseyHealthEndpointAdditionalPathResourceFactory extends JerseyEndpointResourceFactory;\n", "des": "Jersey support for actuator endpoints."}
{"index": 1395, "repo": "spring-boot-actuator-3.1.1", "code": "package reactive\n\n// A custom HandlerMapping that makes web endpoints available over HTTP using Spring WebFlux.\n@ImportRuntimeHints(org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping.AbstractWebFluxEndpointHandlerMappingRuntimeHints.class) public abstract class AbstractWebFluxEndpointHandlerMapping extends org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping;\n", "des": "Spring WebFlux support for actuator endpoints."}
{"index": 1396, "repo": "spring-boot-actuator-3.1.1", "code": "package servlet\n\n// A custom HandlerMapping that makes web endpoints available over HTTP using Spring MVC.\n@ImportRuntimeHints(org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.AbstractWebMvcEndpointHandlerMappingRuntimeHints.class) public abstract class AbstractWebMvcEndpointHandlerMapping extends org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping implements org.springframework.beans.factory.InitializingBean;\n", "des": "Spring MVC support for actuator endpoints."}
{"index": 1397, "repo": "spring-boot-actuator-3.1.1", "code": "package env\n\n// @Endpoint to expose environment information.\n@Endpoint(id=\"env\") public class EnvironmentEndpoint extends Object;\n// Description of an Environment.\npublic static final class EnvironmentEndpoint.EnvironmentDescriptor extends Object implements OperationResponseBody;\n// Description of an entry of the Environment.\npublic static final class EnvironmentEndpoint.EnvironmentEntryDescriptor extends Object;\n", "des": "Actuator support for Spring Framework's Environment."}
{"index": 1398, "repo": "spring-boot-actuator-3.1.1", "code": "package flyway\n\n// @Endpoint to expose flyway info.\n@Endpoint(id=\"flyway\") public class FlywayEndpoint extends Object;\n// Description of an application context's Flyway beans.\npublic static final class FlywayEndpoint.ContextFlywayBeansDescriptor extends Object;\n// Description of an application's Flyway beans.\npublic static final class FlywayEndpoint.FlywayBeansDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support for Flyway."}
{"index": 1399, "repo": "spring-boot-actuator-3.1.1", "code": "package hazelcast\n\n// HealthIndicator for Hazelcast.\npublic class HazelcastHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for Hazelcast."}
{"index": 1400, "repo": "spring-boot-actuator-3.1.1", "code": "package health\n\n// Base HealthIndicator implementations that encapsulates creation of Health instance and error handling.\npublic abstract class AbstractHealthIndicator extends Object implements HealthIndicator;\n// Base ReactiveHealthIndicator implementations that encapsulates creation of Health instance and error handling.\npublic abstract class AbstractReactiveHealthIndicator extends Object implements ReactiveHealthIndicator;\n", "des": "Actuator health indicator and endpoints."}
{"index": 1401, "repo": "spring-boot-actuator-3.1.1", "code": "package influx\n\n// HealthIndicator for InfluxDB.\npublic class InfluxDbHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for InfluxDB."}
{"index": 1402, "repo": "spring-boot-actuator-3.1.1", "code": "package info\n\n// An InfoContributor that exposes BuildProperties.\n@ImportRuntimeHints(org.springframework.boot.actuate.info.BuildInfoContributor.BuildInfoContributorRuntimeHints.class) public class BuildInfoContributor extends InfoPropertiesInfoContributor<org.springframework.boot.info.BuildProperties>;\n// An InfoContributor that provides all environment entries prefixed with info.\npublic class EnvironmentInfoContributor extends Object implements InfoContributor;\n", "des": "Classes for application info."}
{"index": 1403, "repo": "spring-boot-actuator-3.1.1", "code": "package integration\n\n// @Endpoint to expose the Spring Integration graph.\n@Endpoint(id=\"integrationgraph\") public class IntegrationGraphEndpoint extends Object;\n// Description of a Graph.\npublic static class IntegrationGraphEndpoint.GraphDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support for Spring Integration."}
{"index": 1404, "repo": "spring-boot-actuator-3.1.1", "code": "package jdbc\n\n// HealthIndicator that tests the status of a DataSource and optionally runs a test query.\npublic class DataSourceHealthIndicator extends AbstractHealthIndicator implements org.springframework.beans.factory.InitializingBean;\n", "des": "Actuator support for JDBC."}
{"index": 1405, "repo": "spring-boot-actuator-3.1.1", "code": "package jms\n\n// HealthIndicator for a JMS ConnectionFactory.\npublic class JmsHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for JMS."}
{"index": 1406, "repo": "spring-boot-actuator-3.1.1", "code": "package ldap\n\n// HealthIndicator for configured LDAP server(s).\npublic class LdapHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for LDAP."}
{"index": 1407, "repo": "spring-boot-actuator-3.1.1", "code": "package liquibase\n\n// @Endpoint to expose liquibase info.\n@Endpoint(id=\"liquibase\") public class LiquibaseEndpoint extends Object;\n// Description of a Liquibase change set.\npublic static class LiquibaseEndpoint.ChangeSetDescriptor extends Object;\n// Description of a context expression in a LiquibaseEndpoint.ChangeSetDescriptor.\npublic static class LiquibaseEndpoint.ContextExpressionDescriptor extends Object;\n", "des": "Actuator support for Liquibase."}
{"index": 1408, "repo": "spring-boot-actuator-3.1.1", "code": "package logging\n\n// Web @Endpoint that provides access to an application's log file.\n@WebEndpoint(id=\"logfile\") public class LogFileWebEndpoint extends Object;\n// @Endpoint to expose a collection of LoggerConfigurations.\n@Endpoint(id=\"loggers\") @RegisterReflectionForBinding({GroupLoggerLevelsDescriptor.class,SingleLoggerLevelsDescriptor.class}) public class LoggersEndpoint extends Object;\n", "des": "Actuator support for logging."}
{"index": 1409, "repo": "spring-boot-actuator-3.1.1", "code": "package mail\n\n// HealthIndicator for configured smtp server(s).\npublic class MailHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for JavaMail."}
{"index": 1410, "repo": "spring-boot-actuator-3.1.1", "code": "package management\n\n// Web @Endpoint to expose heap dumps.\n@WebEndpoint(id=\"heapdump\") public class HeapDumpWebEndpoint extends Object;\n// Strategy interface used to dump the heap to a file.\n@FunctionalInterface protected static interface HeapDumpWebEndpoint.HeapDumper;\n// Exception to be thrown if the HeapDumpWebEndpoint.HeapDumper cannot be created.\nprotected static class HeapDumpWebEndpoint.HeapDumperUnavailableException extends RuntimeException;\n", "des": "Actuator support for JVM management."}
{"index": 1411, "repo": "spring-boot-actuator-3.1.1", "code": "package metrics\n\n// Strategy that can be used to apply Timers automatically instead of using @Timed.\n@FunctionalInterface public interface AutoTimer;\n// An @Endpoint for exposing the metrics held by a MeterRegistry.\n@Endpoint(id=\"metrics\") public class MetricsEndpoint extends Object;\n// A set of tags for further dimensional drill-down and their potential values.\npublic static final class MetricsEndpoint.AvailableTag extends Object;\n", "des": "Core actuator support for metrics."}
{"index": 1412, "repo": "spring-boot-actuator-3.1.1", "code": "package amqp\n\n// A MeterBinder for RabbitMQ Java Client metrics.\npublic class RabbitMetrics extends Object implements io.micrometer.core.instrument.binder.MeterBinder;\n", "des": "Actuator support for RabbitMQ Java Client metrics."}
{"index": 1413, "repo": "spring-boot-actuator-3.1.1", "code": "package annotation\n\n// Utility used to obtain @Timed annotations from bean methods.\npublic final class TimedAnnotations extends Object;\n", "des": "Support classes for handler method metrics."}
{"index": 1414, "repo": "spring-boot-actuator-3.1.1", "code": "package cache\n\n// CacheMeterBinderProvider implementation for cache2k.\npublic class Cache2kCacheMeterBinderProvider extends Object implements CacheMeterBinderProvider<org.cache2k.extra.spring.SpringCache2kCache>;\n// Provide a MeterBinder based on a Cache.\n@FunctionalInterface public interface CacheMeterBinderProvider<C extends org.springframework.cache.Cache>;\n// Register supported Cache to a MeterRegistry.\npublic class CacheMetricsRegistrar extends Object;\n", "des": "Actuator support for cache metrics."}
{"index": 1415, "repo": "spring-boot-actuator-3.1.1", "code": "package data\n\n// Default RepositoryTagsProvider implementation.\npublic class DefaultRepositoryTagsProvider extends Object implements RepositoryTagsProvider;\n// Intercepts Spring Data Repository invocations and records metrics about execution time and results.\npublic class MetricsRepositoryMethodInvocationListener extends Object implements org.springframework.data.repository.core.support.RepositoryMethodInvocationListener;\n", "des": "Actuator support for Spring Data Repository metrics."}
{"index": 1416, "repo": "spring-boot-actuator-3.1.1", "code": "package prometheus\n\n// Class that can be used to manage the pushing of metrics to a Prometheus PushGateway.\npublic class PrometheusPushGatewayManager extends Object;\n// The operation that should be performed on shutdown.\npublic static enum PrometheusPushGatewayManager.ShutdownOperation extends Enum<PrometheusPushGatewayManager.ShutdownOperation>;\n", "des": "Actuator support for exporting metrics to Prometheus."}
{"index": 1417, "repo": "spring-boot-actuator-3.1.1", "code": "package http\n\n// The outcome of an HTTP request.\npublic enum Outcome extends Enum<Outcome>;\n", "des": "Support classes for HTTP-related metrics."}
{"index": 1418, "repo": "spring-boot-actuator-3.1.1", "code": "package jdbc\n\n// A MeterBinder for a DataSource.\npublic class DataSourcePoolMetrics extends Object implements io.micrometer.core.instrument.binder.MeterBinder;\n", "des": "Actuator support for JDBC metrics."}
{"index": 1419, "repo": "spring-boot-actuator-3.1.1", "code": "package r2dbc\n\n// A MeterBinder for a ConnectionPool.\npublic class ConnectionPoolMetrics extends Object implements io.micrometer.core.instrument.binder.MeterBinder;\n", "des": "Actuator support for R2DBC metrics."}
{"index": 1420, "repo": "spring-boot-actuator-3.1.1", "code": "package startup\n\n// Binds application startup metrics in response to ApplicationStartedEvent and ApplicationReadyEvent.\npublic class StartupTimeMetricsListener extends Object implements org.springframework.context.event.SmartApplicationListener;\n", "des": "Actuator support for startup metrics."}
{"index": 1421, "repo": "spring-boot-actuator-3.1.1", "code": "package system\n\n// A MeterBinder that binds one or more DiskSpaceMetrics.\npublic class DiskSpaceMetricsBinder extends Object implements io.micrometer.core.instrument.binder.MeterBinder;\n", "des": "Actuator support for system metrics."}
{"index": 1422, "repo": "spring-boot-actuator-3.1.1", "code": "package client\n\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public class DefaultRestTemplateExchangeTagsProvider extends Object implements RestTemplateExchangeTagsProvider;\n// RestTemplateCustomizer that configures the RestTemplate to record request observations.\npublic class ObservationRestTemplateCustomizer extends Object implements org.springframework.boot.web.client.RestTemplateCustomizer;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public final class RestTemplateExchangeTags extends Object;\n", "des": "Actuator support for web client metrics."}
{"index": 1423, "repo": "spring-boot-actuator-3.1.1", "code": "package jetty\n\n// Base class for binding Jetty metrics in response to an ApplicationStartedEvent.\npublic abstract class AbstractJettyMetricsBinder extends Object implements org.springframework.context.ApplicationListener<org.springframework.boot.context.event.ApplicationStartedEvent>;\n// AbstractJettyMetricsBinder for JettyConnectionMetrics.\npublic class JettyConnectionMetricsBinder extends AbstractJettyMetricsBinder;\n", "des": "Actuator support for Jetty metrics."}
{"index": 1424, "repo": "spring-boot-actuator-3.1.1", "code": "package client\n\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public class DefaultWebClientExchangeTagsProvider extends Object implements WebClientExchangeTagsProvider;\n// WebClientCustomizer that configures the WebClient to record request observations.\npublic class ObservationWebClientCustomizer extends Object implements org.springframework.boot.web.reactive.function.client.WebClientCustomizer;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public final class WebClientExchangeTags extends Object;\n", "des": "Actuator support for WebClient metrics."}
{"index": 1425, "repo": "spring-boot-actuator-3.1.1", "code": "package server\n\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public class DefaultWebFluxTagsProvider extends Object implements WebFluxTagsProvider;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public final class WebFluxTags extends Object;\n// \n@FunctionalInterface @Deprecated(since=\"3.0.0\", forRemoval=true) public interface WebFluxTagsContributor;\n// \n@FunctionalInterface @Deprecated(since=\"3.0.0\", forRemoval=true) public interface WebFluxTagsProvider;\n", "des": "Actuator support for WebFlux metrics."}
{"index": 1426, "repo": "spring-boot-actuator-3.1.1", "code": "package servlet\n\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public class DefaultWebMvcTagsProvider extends Object implements WebMvcTagsProvider;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public final class WebMvcTags extends Object;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public interface WebMvcTagsContributor;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public interface WebMvcTagsProvider;\n", "des": "Actuator support for Spring MVC metrics."}
{"index": 1427, "repo": "spring-boot-actuator-3.1.1", "code": "package tomcat\n\n// Binds TomcatMetrics in response to the ApplicationStartedEvent.\npublic class TomcatMetricsBinder extends Object implements org.springframework.context.ApplicationListener<org.springframework.boot.context.event.ApplicationStartedEvent>, org.springframework.beans.factory.DisposableBean;\n", "des": "Actuator support for Tomcat metrics."}
{"index": 1428, "repo": "spring-boot-actuator-3.1.1", "code": "package neo4j\n\n// HealthIndicator that tests the status of a Neo4j by executing a Cypher statement and extracting server and database information.\npublic class Neo4jHealthIndicator extends AbstractHealthIndicator;\n// ReactiveHealthIndicator that tests the status of a Neo4j by executing a Cypher statement and extracting server and database information.\npublic final class Neo4jReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Neo4j."}
{"index": 1429, "repo": "spring-boot-actuator-3.1.1", "code": "package quartz\n\n// Endpoint to expose Quartz Scheduler jobs and triggers.\n@Endpoint(id=\"quartz\") public class QuartzEndpoint extends Object;\n// Description of a CalendarIntervalTrigger.\npublic static final class QuartzEndpoint.CalendarIntervalTriggerDescriptor extends QuartzEndpoint.TriggerDescriptor;\n// Description of a CronTrigger.\npublic static final class QuartzEndpoint.CronTriggerDescriptor extends QuartzEndpoint.TriggerDescriptor;\n", "des": "Actuator support for Quartz Scheduler."}
{"index": 1430, "repo": "spring-boot-actuator-3.1.1", "code": "package r2dbc\n\n// A HealthIndicator to validate a R2DBC ConnectionFactory.\npublic class ConnectionFactoryHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for R2DBC."}
{"index": 1431, "repo": "spring-boot-actuator-3.1.1", "code": "package scheduling\n\n// @Endpoint to expose information about an application's scheduled tasks.\n@Endpoint(id=\"scheduledtasks\") @ImportRuntimeHints(org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint.ScheduledTasksEndpointRuntimeHints.class) public class ScheduledTasksEndpoint extends Object;\n// Description of a CronTask or a TriggerTask with a CronTrigger.\npublic static final class ScheduledTasksEndpoint.CronTaskDescriptor extends ScheduledTasksEndpoint.TaskDescriptor;\n", "des": "Actuator scheduling support."}
{"index": 1432, "repo": "spring-boot-actuator-3.1.1", "code": "package security\n\n// Abstract ApplicationListener to expose Spring Security authentication events as AuditEvents.\npublic abstract class AbstractAuthenticationAuditListener extends Object implements org.springframework.context.ApplicationListener<org.springframework.security.authentication.event.AbstractAuthenticationEvent>, org.springframework.context.ApplicationEventPublisherAware;\n", "des": "Actuator support for security."}
{"index": 1433, "repo": "spring-boot-actuator-3.1.1", "code": "package session\n\n// @Endpoint to expose a user's Sessions.\n@Endpoint(id=\"sessions\") public class SessionsEndpoint extends Object;\n// Description of user's session.\npublic static final class SessionsEndpoint.SessionDescriptor extends Object implements OperationResponseBody;\n// Description of user's sessions.\npublic static final class SessionsEndpoint.SessionsDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support for Spring Session."}
{"index": 1434, "repo": "spring-boot-actuator-3.1.1", "code": "package startup\n\n// @Endpoint to expose the timeline of the application startup.\n@Endpoint(id=\"startup\") @ImportRuntimeHints(org.springframework.boot.actuate.startup.StartupEndpoint.StartupEndpointRuntimeHints.class) public class StartupEndpoint extends Object;\n// Description of an application startup.\npublic static final class StartupEndpoint.StartupDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support for ApplicationStartup."}
{"index": 1435, "repo": "spring-boot-actuator-3.1.1", "code": "package system\n\n// A HealthIndicator that checks available disk space and reports a status of Status.DOWN when it drops below a configurable threshold.\npublic class DiskSpaceHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for system-related concerns."}
{"index": 1436, "repo": "spring-boot-actuator-3.1.1", "code": "package exchanges\n\n// An HTTP request and response exchange.\npublic final class HttpExchange extends Object;\n// Principal associated with an HTTP request-response exchange.\npublic static final class HttpExchange.Principal extends Object;\n// The request that started the exchange.\npublic static final class HttpExchange.Request extends Object;\n// The response that finished the exchange.\npublic static final class HttpExchange.Response extends Object;\n", "des": "Actuator HTTP exchanges support."}
{"index": 1437, "repo": "spring-boot-actuator-3.1.1", "code": "package reactive\n\n// A WebFilter for recording HTTP exchanges.\npublic class HttpExchangesWebFilter extends Object implements org.springframework.web.server.WebFilter, org.springframework.core.Ordered;\n", "des": "Actuator HTTP exchanges support for reactive servers."}
{"index": 1438, "repo": "spring-boot-actuator-3.1.1", "code": "package servlet\n\n// Servlet Filter for recording HTTP exchanges.\npublic class HttpExchangesFilter extends org.springframework.web.filter.OncePerRequestFilter implements org.springframework.core.Ordered;\n", "des": "Actuator HTTP exchanges support for servlet servers."}
{"index": 1439, "repo": "spring-boot-actuator-3.1.1", "code": "package mappings\n\n// A description of a HandlerMethod.\npublic class HandlerMethodDescription extends Object;\n// A MappingDescriptionProvider provides a List of mapping descriptions through implementation-specific introspection of an application context.\npublic interface MappingDescriptionProvider;\n// @Endpoint to expose HTTP request mappings.\n@Endpoint(id=\"mappings\") public class MappingsEndpoint extends Object;\n", "des": "Actuator web request mappings support."}
{"index": 1440, "repo": "spring-boot-actuator-3.1.1", "code": "package reactive\n\n// A description of a mapping known to a DispatcherServlet.\npublic class DispatcherHandlerMappingDescription extends Object;\n// Details of a DispatcherHandler mapping.\npublic class DispatcherHandlerMappingDetails extends Object;\n", "des": "Actuator reactive request mappings support."}
{"index": 1441, "repo": "spring-boot-actuator-3.1.1", "code": "package servlet\n\n// A description of a mapping known to a DispatcherServlet.\npublic class DispatcherServletMappingDescription extends Object;\n// Details of a DispatcherServlet mapping.\npublic class DispatcherServletMappingDetails extends Object;\n", "des": "Actuator servlet request mappings support."}
{"index": 1442, "repo": "spring-data-redis-3.1.2", "code": "package redis\n\n// ClusterRedirectException indicates that a requested slot is not served by the targeted server but can be obtained on another one.\npublic class ClusterRedirectException extends DataRetrievalFailureException;\n// DataAccessResourceFailureException indicating the current local snapshot of cluster state does no longer represent the actual remote state.\npublic class ClusterStateFailureException extends DataAccessResourceFailureException;\n", "des": "Root package for integrating Redis with Spring concepts."}
{"index": 1443, "repo": "spring-data-redis-3.1.2", "code": "package cache\n\n// A collection of predefined BatchStrategy implementations using KEYS or SCAN command.\npublic abstract class BatchStrategies extends Object;\n// A BatchStrategy to be used with RedisCacheWriter.\npublic interface BatchStrategy;\n// CacheKeyPrefix is a callback hook for creating custom prefixes prepended to the actual key stored in Redis.\n@FunctionalInterface public interface CacheKeyPrefix;\n// Cache statistics for a RedisCache.\npublic interface CacheStatistics;\n", "des": "Package providing a Redis implementation for Spring cache abstraction."}
{"index": 1444, "repo": "spring-data-redis-3.1.2", "code": "package connection\n\n// \npublic abstract class AbstractRedisConnection extends Object implements RedisConnection;\n// The actual BITFIELD command representation holding several BitFieldSubCommands.BitFieldSubCommands to execute.\npublic class BitFieldSubCommands extends Object implements Iterable<BitFieldSubCommands.BitFieldSubCommand>;\n// \npublic abstract static class BitFieldSubCommands.AbstractBitFieldSubCommand extends Object implements BitFieldSubCommands.BitFieldSubCommand;\n", "des": "Connection package providing low-level abstractions for interacting with the various Redis 'drivers'/libraries."}
{"index": 1445, "repo": "spring-data-redis-3.1.2", "code": "package convert\n\n// Common type converters.\npublic abstract class Converters extends Object;\n// Converts a List of values of one type to a List of values of another type\npublic class ListConverter<S,T> extends Object implements Converter<List<S>,List<T>>;\n// Converts Longs to Booleans\npublic class LongToBooleanConverter extends Object implements Converter<Long,Boolean>;\n", "des": "Redis specific converters used for sending data and parsing responses."}
{"index": 1446, "repo": "spring-data-redis-3.1.2", "code": "package jedis\n\n// Redis client configuration for jedis.\npublic interface JedisClientConfiguration;\n", "des": "Connection package for Jedis library."}
{"index": 1447, "repo": "spring-data-redis-3.1.2", "code": "package lettuce\n\n// Redis client configuration for lettuce.\npublic interface LettuceClientConfiguration;\n// \npublic static class LettuceClientConfiguration.LettuceClientConfigurationBuilder extends Object;\n// Builder for SSL-related LettuceClientConfiguration.\npublic static class LettuceClientConfiguration.LettuceSslClientConfigurationBuilder extends Object;\n", "des": "Connection package for Lettuce Redis client."}
{"index": 1448, "repo": "spring-data-redis-3.1.2", "code": "package observability\n\n// Micrometer Observation.Context holding Lettuce contextual details.\npublic class LettuceObservationContext extends io.micrometer.observation.transport.SenderContext<Object>;\n// Tracing adapter using Micrometer's Observation.\npublic class MicrometerTracingAdapter extends Object implements io.lettuce.core.tracing.Tracing;\n// A Redis-based Observation.\npublic enum RedisObservation extends Enum<RedisObservation> implements io.micrometer.observation.docs.ObservationDocumentation;\n", "des": "Integration of Micrometer Tracing for Lettuce Observability."}
{"index": 1449, "repo": "spring-data-redis-3.1.2", "code": "package stream\n\n// A Record within the stream backed by a collection of binary field/value pairs.\npublic interface ByteBufferRecord extends MapRecord<ByteBuffer,ByteBuffer,ByteBuffer>;\n// A Record within the stream backed by a collection of binary field/value pairs.\npublic interface ByteRecord extends MapRecord<byte[],byte[],byte[]>;\n// Value object representing a Stream consumer within a consumer group.\npublic class Consumer extends Object;\n", "des": "Data structures and interfaces to interact with Redis Streams."}
{"index": 1450, "repo": "spring-data-redis-3.1.2", "code": "package util\n\n// Base implementation for a subscription handling the channel/pattern registration so subclasses only have to deal with the actual registration/unregistration.\npublic abstract class AbstractSubscription extends Object implements Subscription;\n// \npublic class ByteArraySet extends Object implements Set<ByteArrayWrapper>;\n", "des": "Internal utility package for encoding/decoding Strings to byte[] (using Base64) library."}
{"index": 1451, "repo": "spring-data-redis-3.1.2", "code": "package core\n\n// GeoOperations bound to a certain key.\npublic interface BoundGeoOperations<K,M> extends BoundKeyOperations<K>;\n// Hash operations bound to a certain key.\npublic interface BoundHashOperations<H,HK,HV> extends BoundKeyOperations<H>;\n// Operations over a Redis key.\npublic interface BoundKeyOperations<K>;\n// List operations bound to a certain key.\npublic interface BoundListOperations<K,V> extends BoundKeyOperations<K>;\n", "des": "Core package for integrating Redis with Spring concepts."}
{"index": 1452, "repo": "spring-data-redis-3.1.2", "code": "package convert\n\n// Bucket is the data bag for Redis hash structures to be used with RedisData.\npublic class Bucket extends Object;\n// Value object representing a path within a Bucket.\npublic static class Bucket.BucketPropertyPath extends Object;\n// Composite IndexResolver implementation that iterates over a given collection of delegate IndexResolver instances.\npublic class CompositeIndexResolver extends Object implements IndexResolver;\n", "des": "Converters for Redis repository support utilizing mapping metadata."}
{"index": 1453, "repo": "spring-data-redis-3.1.2", "code": "package index\n\n// IndexDefinitionProvider that allows registering new IndexDefinition via IndexDefinitionRegistry.\npublic interface ConfigurableIndexDefinitionProvider extends IndexDefinitionProvider, IndexDefinitionRegistry;\n// \npublic class GeoIndexDefinition extends RedisIndexDefinition implements PathBasedRedisIndexDefinition;\n// Mark properties value to be included in a secondary index.\n@Documented @Retention(RUNTIME) @Target({FIELD,ANNOTATION_TYPE}) public @interface GeoIndexed;\n", "des": "Abstractions for Redis secondary indexes."}
{"index": 1454, "repo": "spring-data-redis-3.1.2", "code": "package mapping\n\n// RedisPersistentEntity implementation.\npublic class BasicRedisPersistentEntity<T> extends org.springframework.data.keyvalue.core.mapping.BasicKeyValuePersistentEntity<T,RedisPersistentProperty> implements RedisPersistentEntity<T>;\n// Redis specific MappingContext.\npublic class RedisMappingContext extends org.springframework.data.keyvalue.core.mapping.context.KeyValueMappingContext<RedisPersistentEntity<?>,RedisPersistentProperty>;\n", "des": "Redis specific repository support mapping meta information."}
{"index": 1455, "repo": "spring-data-redis-3.1.2", "code": "package query\n\n// Utilities for SortQuery implementations.\npublic abstract class QueryUtils extends Object;\n// Internal interface part of the Sort DSL.\npublic interface SortCriterion<K>;\n// High-level abstraction over a Redis SORT (generified equivalent of SortParameters).\npublic interface SortQuery<K>;\n// Simple builder class for constructing SortQuery.\npublic class SortQueryBuilder<K> extends Object;\n", "des": "Query package for Redis template."}
{"index": 1456, "repo": "spring-data-redis-3.1.2", "code": "package script\n\n// Default implementation of ReactiveScriptExecutor.\npublic class DefaultReactiveScriptExecutor<K> extends Object implements ReactiveScriptExecutor<K>;\n// Default implementation of RedisScript.\npublic class DefaultRedisScript<T> extends Object implements RedisScript<T>, InitializingBean;\n// Default implementation of ScriptExecutor.\npublic class DefaultScriptExecutor<K> extends Object implements ScriptExecutor<K>;\n", "des": "Lua script execution abstraction."}
{"index": 1457, "repo": "spring-data-redis-3.1.2", "code": "package types\n\n// Expiration holds a value with its associated TimeUnit.\npublic class Expiration extends Object;\n// RedisClientInfo provides general and statistical information about client connections.\npublic class RedisClientInfo extends Object;\n// \npublic static enum RedisClientInfo.INFO extends Enum<RedisClientInfo.INFO>;\n// \npublic static class RedisClientInfo.RedisClientInfoBuilder extends Object;\n", "des": "Redis domain specific types."}
{"index": 1458, "repo": "spring-data-redis-3.1.2", "code": "package hash\n\n// HashMapper based on Apache Commons BeanUtils project.\npublic class BeanUtilsHashMapper<T> extends Object implements HashMapper<T,String,String>;\n// Delegating hash mapper used for flattening objects into Strings.\npublic class DecoratingStringHashMapper<T> extends Object implements HashMapper<T,String,String>;\n// Core mapping contract between Java types and Redis hashes/maps.\npublic interface HashMapper<T,K,V>;\n", "des": "Dedicated support package for Redis hashes."}
{"index": 1459, "repo": "spring-data-redis-3.1.2", "code": "package listener\n\n// Channel topic implementation (maps to a Redis channel).\npublic class ChannelTopic extends Object implements Topic;\n// MessageListener publishing RedisKeyExpiredEvents via ApplicationEventPublisher by listening to Redis keyspace notifications for key expirations.\npublic class KeyExpirationEventMessageListener extends KeyspaceEventMessageListener implements ApplicationEventPublisherAware;\n", "des": "Base package for Redis message listener / pubsub container facility"}
{"index": 1460, "repo": "spring-data-redis-3.1.2", "code": "package adapter\n\n// Message listener adapter that delegates the handling of messages to target listener methods via reflection, with flexible message type conversion.\npublic class MessageListenerAdapter extends Object implements InitializingBean, MessageListener;\n// Exception thrown when the execution of a listener method failed.\npublic class RedisListenerExecutionFailedException extends InvalidDataAccessApiUsageException;\n", "des": "Message listener adapter package."}
{"index": 1461, "repo": "spring-data-redis-3.1.2", "code": "package cdi\n\n// Base class for Bean wrappers.\npublic abstract class CdiBean<T> extends Object implements jakarta.enterprise.inject.spi.Bean<T>, jakarta.enterprise.inject.spi.PassivationCapable;\n// CdiBean to create RedisKeyValueAdapter instances.\npublic class RedisKeyValueAdapterBean extends CdiBean<RedisKeyValueAdapter>;\n// CdiBean to create RedisKeyValueTemplate instances.\npublic class RedisKeyValueTemplateBean extends CdiBean<org.springframework.data.keyvalue.core.KeyValueOperations>;\n", "des": "CDI support for Redis specific repository implementation."}
{"index": 1462, "repo": "spring-data-redis-3.1.2", "code": "package configuration\n\n// Annotation to activate Redis repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(RedisRepositoriesRegistrar.class) @QueryCreatorType(RedisQueryCreator.class) public @interface EnableRedisRepositories;\n// Redis specific ImportBeanDefinitionRegistrar.\npublic class RedisRepositoriesRegistrar extends RepositoryBeanDefinitionRegistrarSupport;\n", "des": "Redis repository specific configuration and bean registration."}
{"index": 1463, "repo": "spring-data-redis-3.1.2", "code": "package core\n\n// RedisEntityInformation implementation using a RedisPersistentEntity instance to lookup the necessary information.\npublic class MappingRedisEntityInformation<T,ID> extends PersistentEntityInformation<T,ID> implements RedisEntityInformation<T,ID>;\n// \npublic interface RedisEntityInformation<T,ID> extends EntityInformation<T,ID>;\n", "des": "Core domain entities for repository support."}
{"index": 1464, "repo": "spring-data-redis-3.1.2", "code": "package query\n\n// Mapper for Query-by-Example examples to an actual query.\npublic class ExampleQueryMapper extends Object;\n// Simple set of operations required to run queries against Redis.\npublic class RedisOperationChain extends Object;\n// \npublic static class RedisOperationChain.NearPath extends RedisOperationChain.PathAndValue;\n// \npublic static class RedisOperationChain.PathAndValue extends Object;\n", "des": "Redis specific query execution engine."}
{"index": 1465, "repo": "spring-data-redis-3.1.2", "code": "package support\n\n// Repository fragment implementing Redis Query-by-Example operations.\npublic class QueryByExampleRedisExecutor<T> extends Object implements QueryByExampleExecutor<T>, BeanFactoryAware, BeanClassLoaderAware;\n// RepositoryFactorySupport specific of handing Redis KeyValueRepository.\npublic class RedisRepositoryFactory extends org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory;\n", "des": "Spring context specific factory support."}
{"index": 1466, "repo": "spring-data-redis-3.1.2", "code": "package serializer\n\n// Generic Jackson 2-based RedisSerializer that maps objects to JSON using dynamic typing.\npublic class GenericJackson2JsonRedisSerializer extends Object implements RedisSerializer<Object>;\n// Generic String to byte[] (and back) serializer.\npublic class GenericToStringSerializer<T> extends Object implements RedisSerializer<T>, BeanFactoryAware;\n", "des": "Serialization/Deserialization package for converting Object to (and from) binary data."}
{"index": 1467, "repo": "spring-data-redis-3.1.2", "code": "package atomic\n\n// Atomic double backed by Redis.\npublic class RedisAtomicDouble extends Number implements Serializable, BoundKeyOperations<String>;\n// Atomic integer backed by Redis.\npublic class RedisAtomicInteger extends Number implements Serializable, BoundKeyOperations<String>;\n// Atomic long backed by Redis.\npublic class RedisAtomicLong extends Number implements Serializable, BoundKeyOperations<String>;\n", "des": "Small toolkit mirroring the java.util.atomic package in Redis."}
{"index": 1468, "repo": "spring-data-redis-3.1.2", "code": "package collections\n\n// Base implementation for RedisCollection.\npublic abstract class AbstractRedisCollection<E> extends AbstractCollection<E> implements RedisCollection<E>;\n// Utility class used mainly for type conversion by the default collection implementations.\npublic abstract class CollectionUtils extends Object;\n// Default implementation for RedisList.\npublic class DefaultRedisList<E> extends AbstractRedisCollection<E> implements RedisList<E>;\n", "des": "Package providing implementations for most of the java.util collections on top of Redis."}
{"index": 1469, "repo": "spring-data-redis-3.1.2", "code": "package util\n\n// Some handy methods for dealing with byte arrays.\npublic final class ByteUtils extends Object;\n// Abstract utility class for common assertions used in Spring Data Redis.\npublic abstract class RedisAssertions extends Object;\n", "des": "Commonly used stuff for data manipulation throughout different driver specific implementations."}
{"index": 1470, "repo": "spring-boot-configuration-processor-3.1.1", "code": "package configurationprocessor\n\n", "des": "Annotation processor to create @ConfigurationProperties meta-data files."}
{"index": 1471, "repo": "spring-boot-configuration-processor-3.1.1", "code": "package fieldvalues\n\n// Parser which can be used to obtain the field values from an TypeElement.\n@FunctionalInterface public interface FieldValuesParser;\n", "des": "Abstraction for field value parsing."}
{"index": 1472, "repo": "spring-boot-configuration-processor-3.1.1", "code": "package javac\n\n// FieldValuesParser implementation for the standard Java compiler.\npublic class JavaCompilerFieldValuesParser extends Object implements FieldValuesParser;\n", "des": "Field value parsing for the standard Java compiler."}
{"index": 1473, "repo": "spring-boot-configuration-processor-3.1.1", "code": "package metadata\n\n// Configuration meta-data.\npublic class ConfigurationMetadata extends Object;\n// Thrown to indicate that some meta-data is invalid.\npublic class InvalidConfigurationMetadataException extends RuntimeException;\n// Describe an item deprecation.\npublic class ItemDeprecation extends Object;\n// Provide hints on an ItemMetadata.\npublic class ItemHint extends Object implements Comparable<ItemHint>;\n// A hint for a value.\npublic static class ItemHint.ValueHint extends Object;\n", "des": "The configuration properties meta-data model and JSON writing support."}
{"index": 1474, "repo": "spring-shell-core-3.1.2", "code": "package shell\n\n// Indicates whether or not a command is currently available.\npublic class Availability extends Object;\n// Interface resolving Availability.\n@FunctionalInterface public interface AvailabilityProvider extends Supplier<Availability>;\n// A ReflectiveProcessor implementation that registers methods of a return type Availability from a target which is a class.\npublic final class AvailabilityReflectiveProcessor extends Object implements org.springframework.aot.hint.annotation.ReflectiveProcessor;\n", "des": "Contains core classes for Spring Shell, irrespective of the way commands are actually implemented."}
{"index": 1475, "repo": "spring-shell-core-3.1.2", "code": "package jline\n\n// Shameful copy-paste of JLine's DefaultParser which creates CompletingParsedLine.\npublic class ExtendedDefaultParser extends Object implements org.jline.reader.Parser;\n// An InputProvider that reads input from file-like sources.\npublic class FileInputProvider extends Object implements InputProvider, Closeable;\n// A ShellRunner that bootstraps the shell in interactive mode.\n@Order(0) public class InteractiveShellRunner extends Object implements ShellRunner;\n", "des": "Contains classes that leverage the JLine library to hook into the Spring Shell REPL."}
{"index": 1476, "repo": "spring-shell-core-3.1.2", "code": "package result\n\n// A ResultHandler that knows how to render JLine's AttributedCharSequence.\npublic class AttributedCharSequenceResultHandler extends TerminalAwareResultHandler<org.jline.utils.AttributedCharSequence>;\n// Provider for a message used within CommandNotFoundResultHandler.\n@FunctionalInterface public interface CommandNotFoundMessageProvider extends Function<CommandNotFoundMessageProvider.ProviderContext,String>;\n", "des": "Contains strategies for dealing with results of commands."}
{"index": 1477, "repo": "tribuo-core-4.3.1", "code": "package tribuo\n\n// Same as a CategoricalInfo, but with an additional int id field.\npublic class CategoricalIDInfo extends CategoricalInfo implements VariableIDInfo;\n// Stores information about Categorical features.\npublic class CategoricalInfo extends SkeletalVariableInfo;\n// It's a DataSource that's also Configurable.\npublic interface ConfigurableDataSource<T extends Output<T>> extends DataSource<T>, com.oracle.labs.mlrg.olcut.config.Configurable;\n", "des": "Provides the core interfaces and classes for using Tribuo."}
{"index": 1478, "repo": "tribuo-core-4.3.1", "code": "package dataset\n\n// DatasetView provides an immutable view on another Dataset that only exposes selected examples.\npublic final class DatasetView<T extends Output<T>> extends ImmutableDataset<T>;\n// Provenance for the DatasetView.\npublic static final class DatasetView.DatasetViewProvenance extends DatasetProvenance;\n", "des": "Provides utility datasets which subsample or otherwise transform the wrapped dataset."}
{"index": 1479, "repo": "tribuo-core-4.3.1", "code": "package datasource\n\n// Aggregates multiple ConfigurableDataSources, uses AggregateDataSource.IterationOrder to control the iteration order.\npublic class AggregateConfigurableDataSource<T extends Output<T>> extends Object implements ConfigurableDataSource<T>;\n", "des": "Simple data sources for ingesting or aggregating data."}
{"index": 1480, "repo": "tribuo-core-4.3.1", "code": "package ensemble\n\n// A Trainer that wraps another trainer and produces a bagged ensemble.\npublic class BaggingTrainer<T extends Output<T>> extends Object implements Trainer<T>;\n", "des": "Provides an interface for model prediction combinations, two base classes for ensemble models, a base class for ensemble excuses, and a Bagging implementation."}
{"index": 1481, "repo": "tribuo-core-4.3.1", "code": "package evaluation\n\n// Base class for evaluators.\npublic abstract class AbstractEvaluator<T extends Output<T>,C extends MetricContext<T>,E extends Evaluation<T>,M extends EvaluationMetric<T,C>> extends Object implements Evaluator<T,E>;\n// A class that does k-fold cross-validation.\npublic class CrossValidation<T extends Output<T>,E extends Evaluation<T>> extends Object;\n// Descriptive statistics calculated across a list of doubles.\npublic final class DescriptiveStats extends Object;\n", "des": "Evaluation base classes, along with code for train/test splits and cross validation."}
{"index": 1482, "repo": "tribuo-core-4.3.1", "code": "package metrics\n\n// A metric that can be calculated for the specified output type.\npublic interface EvaluationMetric<T extends Output<T>,C extends MetricContext<T>>;\n// Specifies what form of average to use for a EvaluationMetric.\npublic static enum EvaluationMetric.Average extends Enum<EvaluationMetric.Average>;\n// The context for a metric or set of metrics.\npublic abstract class MetricContext<T extends Output<T>> extends Object;\n", "des": "This package contains the infrastructure classes for building evaluation metrics."}
{"index": 1483, "repo": "tribuo-core-4.3.1", "code": "package hash\n\n// Hashes names using String.hashCode().\npublic final class HashCodeHasher extends Hasher;\n// Provenance for the HashCodeHasher.\npublic static final class HashCodeHasher.HashCodeHasherProvenance extends Object implements com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance;\n", "des": "Provides the base interface and implementations of the Model hashing which obscures the feature names stored in a model."}
{"index": 1484, "repo": "tribuo-core-4.3.1", "code": "package impl\n\n// An Example backed by two arrays, one of String and one of double.\npublic class ArrayExample<T extends Output<T>> extends Example<T>;\n// An Example backed by a single array of feature names.\npublic final class BinaryFeaturesExample<T extends Output<T>> extends Example<T>;\n// Serialization carrier for common fields in Dataset.\npublic final class DatasetDataCarrier<T extends Output<T>> extends Object;\n", "des": "Provides implementations of base classes and interfaces from org.tribuo."}
{"index": 1485, "repo": "tribuo-core-4.3.1", "code": "package protos\n\n// Interface for serializing an implementing object to the specified protobuf.\npublic interface ProtoSerializable<T extends com.google.protobuf.Message>;\n// Mark a class as being ProtoSerializable and specify the class type used to serialize the \"serialized_data\".\n@Retention(RUNTIME) @Target(TYPE) public @interface ProtoSerializableClass;\n", "des": "Classes which control the serialization of Tribuo objects to and from protocol buffers."}
{"index": 1486, "repo": "tribuo-core-4.3.1", "code": "package provenance\n\n// A tag interface for configurable data source provenance.\npublic interface ConfiguredDataSourceProvenance extends DataSourceProvenance, com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance;\n// Tag interface for data sources provenances.\npublic interface DataProvenance extends com.oracle.labs.mlrg.olcut.provenance.ObjectProvenance;\n", "des": "Provides Tribuo specific infrastructure for the Provenance system which tracks models and datasets."}
{"index": 1487, "repo": "tribuo-core-4.3.1", "code": "package impl\n\n// An empty DatasetProvenance, should not be used except by the provenance removal system.\npublic final class EmptyDatasetProvenance extends DatasetProvenance;\n// An empty DataSourceProvenance, should not be used except by the provenance removal system.\npublic final class EmptyDataSourceProvenance extends Object implements DataSourceProvenance;\n", "des": "Provides internal implementations for empty provenance classes and TrainerProvenance."}
{"index": 1488, "repo": "tribuo-core-4.3.1", "code": "package sequence\n\n// Base class for sequence evaluators.\npublic abstract class AbstractSequenceEvaluator<T extends Output<T>,C extends MetricContext<T>,E extends SequenceEvaluation<T>,M extends EvaluationMetric<T,C>> extends Object implements SequenceEvaluator<T,E>;\n// A SequenceTrainer that hashes all the feature names on the way in.\npublic final class HashingSequenceTrainer<T extends Output<T>> extends Object implements SequenceTrainer<T>;\n", "des": "Provides core classes for working with sequences of Examples."}
{"index": 1489, "repo": "tribuo-core-4.3.1", "code": "package transform\n\n// An interface representing a class of transformations which can be applied to a feature.\npublic interface Transformation extends com.oracle.labs.mlrg.olcut.config.Configurable, com.oracle.labs.mlrg.olcut.provenance.Provenancable<TransformationProvenance>;\n", "des": "Provides infrastructure for applying transformations to a Dataset."}
{"index": 1490, "repo": "tribuo-core-4.3.1", "code": "package transformations\n\n// A Transformation which bins values.\npublic final class BinningTransformation extends Object implements Transformation;\n// Provenance for BinningTransformation.\npublic static final class BinningTransformation.BinningTransformationProvenance extends Object implements TransformationProvenance;\n// The implementation of a Transformer which splits the input into n bins.\npublic static final class BinningTransformation.BinningTransformer extends Object implements Transformer;\n", "des": "Provides implementations of standard transformations like binning, scaling, taking logs and exponents."}
{"index": 1491, "repo": "tribuo-core-4.3.1", "code": "package util\n\n// Utilities for nice HTML output that can be put in wikis and such.\npublic final class HTMLOutput extends Object;\n// A Pair of a primitive int and a primitive double.\npublic final class IntDoublePair extends Object;\n// An accumulator for online calculation of the mean and variance of a stream of doubles.\npublic final class MeanVarianceAccumulator extends Object implements Serializable;\n// An interface which can merge double values.\n@FunctionalInterface public interface Merger;\n", "des": "Provides utilities which don't have other Tribuo dependencies."}
{"index": 1492, "repo": "wicket-extensions-10.0.0-M1", "code": "package breadcrumb\n\n// A component that renders bread crumbs.\npublic class BreadCrumbBar extends org.apache.wicket.markup.html.panel.Panel implements IBreadCrumbModel;\n// A link that when clicked will set the the active bread crumb participant to the one that is returned by BreadCrumbLink.getParticipant(String).\npublic abstract class BreadCrumbLink extends org.apache.wicket.markup.html.link.Link<Void>;\n", "des": "Package for working with bread crumb components."}
{"index": 1493, "repo": "wicket-extensions-10.0.0-M1", "code": "package panel\n\n// A panel that participates with a bread crumb model.\npublic abstract class BreadCrumbPanel extends org.apache.wicket.markup.html.panel.Panel implements IBreadCrumbParticipant;\n// Simple factory that creates instances of a bread crumb panel based on the class it is constructed with.\npublic final class BreadCrumbPanelFactory extends Object implements IBreadCrumbPanelFactory;\n// Bread crumb link specifically for bread crumb panels.\npublic class BreadCrumbPanelLink extends BreadCrumbLink;\n", "des": "This package contains a panel based implementation of bread crumb participants."}
{"index": 1494, "repo": "wicket-extensions-10.0.0-M1", "code": "package basic\n\n// This implementation adds link render strategies for email addresses and urls.\npublic class DefaultLinkParser extends LinkParser;\n// ILinkParser parses an input text and performs modifications according to its render strategies.\n@FunctionalInterface public interface ILinkParser;\n// An implementation of ILinkRenderStrategy transforms a link target (e.g.\n@FunctionalInterface public interface ILinkRenderStrategy;\n", "des": "Basic extensions."}
{"index": 1495, "repo": "wicket-extensions-10.0.0-M1", "code": "package resource\n\n// Image resource that dynamically scales the given original resource to a thumbnail.\npublic class ThumbnailImageResource extends org.apache.wicket.request.resource.DynamicImageResource;\n", "des": "Image resource extensions."}
{"index": 1496, "repo": "wicket-extensions-10.0.0-M1", "code": "package export\n\n// An abstract helper implementation of IDataExporter.\npublic abstract class AbstractDataExporter extends Object implements IDataExporter;\n// A helper implementation of IExportableColumn.\npublic abstract class AbstractExportableColumn<T,S> extends AbstractColumn<T,S> implements IExportableColumn<T,S>;\n// An IDataExporter that exports data to a CSV file.\npublic class CSVDataExporter extends AbstractDataExporter;\n", "des": "Package for exporting data tables."}
{"index": 1497, "repo": "wicket-extensions-10.0.0-M1", "code": "package tabs\n\n// Convenience class that takes care of common ITab functionality\npublic abstract class AbstractTab extends Object implements ITab;\n// Interface used to represent a single tab in a TabbedPanel\npublic interface ITab extends org.apache.wicket.util.io.IClusterable;\n// A simple decorator that will cache the panel returned from the first call to getPanel()\npublic class PanelCachingTab extends Object implements ITab;\n", "des": "Package for working with tab panels."}
{"index": 1498, "repo": "wicket-extensions-10.0.0-M1", "code": "package model\n\n// Model adapter that makes working with models for checkboxes easier.\npublic abstract class AbstractCheckBoxModel extends Object implements org.apache.wicket.model.IModel<Boolean>;\n", "des": "Convenience models."}
{"index": 1499, "repo": "wicket-extensions-10.0.0-M1", "code": "package encoding\n\n// This class maintains a set of mappers defining mappings between locales and the corresponding charsets.\npublic final class CharSetMap extends Object;\n// Utility class.\npublic class CharSetUtil extends Object;\n", "des": "Encoding extensions."}
{"index": 1500, "repo": "wicket-extensions-10.0.0-M1", "code": "package wizard\n\n// Abstract wizard model that provides an implementation for handling wizard model listeners and provides base implementations of many methods.\npublic abstract class AbstractWizardModel extends Object implements IWizardModel;\n// A bar of buttons for wizards utilizing AjaxFormSubmitBehavior.\npublic class AjaxWizardButtonBar extends WizardButtonBar;\n// Models a cancel button in the wizard.\npublic class CancelButton extends WizardButton;\n", "des": "Package for working with Wizard components."}
{"index": 1501, "repo": "spring-context-6.0.11", "code": "package cache\n\n// Interface that defines common cache operations.\npublic interface Cache;\n// Wrapper exception to be thrown from Cache.get(Object, Callable) in case of the value loader callback failing with an exception.\npublic static class Cache.ValueRetrievalException extends RuntimeException;\n// A (wrapper) object representing a cache value.\n@FunctionalInterface public static interface Cache.ValueWrapper;\n// Spring's central cache manager SPI.\npublic interface CacheManager;\n", "des": "Spring's generic cache abstraction."}
{"index": 1502, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Abstract base @Configuration class providing common structure for enabling Spring's annotation-driven cache management capability.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractCachingConfiguration extends Object implements ImportAware;\n// \nprotected static class AbstractCachingConfiguration.CachingConfigurerSupplier extends Object;\n", "des": "Annotations and supporting classes for declarative cache management."}
{"index": 1503, "repo": "spring-context-6.0.11", "code": "package concurrent\n\n// Simple Cache implementation based on the core JDK java.util.concurrent package.\npublic class ConcurrentMapCache extends AbstractValueAdaptingCache;\n// FactoryBean for easy configuration of a ConcurrentMapCache when used within a Spring container.\npublic class ConcurrentMapCacheFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<ConcurrentMapCache>, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Implementation package for java.util.concurrent based caches."}
{"index": 1504, "repo": "spring-context-6.0.11", "code": "package config\n\n// Configuration constants for internal sharing across subpackages.\npublic abstract class CacheManagementConfigUtils extends Object;\n// NamespaceHandler allowing for the configuration of declarative cache management using either XML or using annotations.\npublic class CacheNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Support package for declarative caching configuration, with XML schema being the primary configuration format."}
{"index": 1505, "repo": "spring-context-6.0.11", "code": "package interceptor\n\n// A base component for invoking Cache operations and using a configurable CacheErrorHandler when an exception occurs.\npublic abstract class AbstractCacheInvoker extends Object;\n// A base CacheResolver implementation that requires the concrete implementation to provide the collection of cache name(s) based on the invocation context.\npublic abstract class AbstractCacheResolver extends Object implements CacheResolver, org.springframework.beans.factory.InitializingBean;\n", "des": "AOP-based solution for declarative caching demarcation."}
{"index": 1506, "repo": "spring-context-6.0.11", "code": "package support\n\n// Abstract base class implementing the common CacheManager methods.\npublic abstract class AbstractCacheManager extends Object implements CacheManager, org.springframework.beans.factory.InitializingBean;\n// Common base class for Cache implementations that need to adapt null values (and potentially other such special values) before passing them on to the underlying store.\npublic abstract class AbstractValueAdaptingCache extends Object implements Cache;\n", "des": "Support classes for the org.springframework.cache package."}
{"index": 1507, "repo": "spring-context-6.0.11", "code": "package context\n\n// Central interface to provide configuration for an application.\npublic interface ApplicationContext extends org.springframework.core.env.EnvironmentCapable, org.springframework.beans.factory.ListableBeanFactory, org.springframework.beans.factory.HierarchicalBeanFactory, MessageSource, ApplicationEventPublisher, org.springframework.core.io.support.ResourcePatternResolver;\n", "des": "This package builds on the beans package to add support for message sources and for the Observer design pattern, and the ability for application objects to obtain resources using a consistent API."}
{"index": 1508, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Enumeration used to determine whether JDK proxy-based or AspectJ weaving-based advice should be applied.\npublic enum AdviceMode extends Enum<AdviceMode>;\n// Convenient base class for ImportSelector implementations that select imports based on an AdviceMode value from an annotation (such as the @Enable* annotations).\npublic abstract class AdviceModeImportSelector<A extends Annotation> extends Object implements ImportSelector;\n", "des": "Annotation support for the Application Context, including JSR-250 \"common\" annotations, component-scanning, and Java-based metadata for creating Spring-managed objects."}
{"index": 1509, "repo": "spring-context-6.0.11", "code": "package aot\n\n// Abstract base class for filesystem-based ahead-of-time (AOT) processing.\npublic abstract class AbstractAotProcessor<T> extends Object;\n// Common settings for AOT processors.\npublic static final class AbstractAotProcessor.Settings extends Object;\n// Fluent builder API for AbstractAotProcessor.Settings.\npublic static final class AbstractAotProcessor.Settings.Builder extends Object;\n", "des": "AOT support for application contexts."}
{"index": 1510, "repo": "spring-context-6.0.11", "code": "package config\n\n// NamespaceHandler for the 'context' namespace.\npublic class ContextNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Support package for advanced application context configuration, with XML schema being the primary configuration format."}
{"index": 1511, "repo": "spring-context-6.0.11", "code": "package event\n\n// Abstract implementation of the ApplicationEventMulticaster interface, providing the basic listener registration facility.\npublic abstract class AbstractApplicationEventMulticaster extends Object implements ApplicationEventMulticaster, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware;\n// Base class for events raised for an ApplicationContext.\npublic abstract class ApplicationContextEvent extends ApplicationEvent;\n", "des": "Support classes for application events, like standard context events."}
{"index": 1512, "repo": "spring-context-6.0.11", "code": "package expression\n\n// Represent an AnnotatedElement on a particular Class and is suitable as a key.\npublic final class AnnotatedElementKey extends Object implements Comparable<AnnotatedElementKey>;\n// EL property accessor that knows how to traverse the beans and contextual objects of a Spring BeanExpressionContext.\npublic class BeanExpressionContextAccessor extends Object implements org.springframework.expression.PropertyAccessor;\n", "des": "Expression parsing support within a Spring application context."}
{"index": 1513, "repo": "spring-context-6.0.11", "code": "package i18n\n\n// Strategy interface for determining the current Locale.\npublic interface LocaleContext;\n// Simple holder class that associates a LocaleContext instance with the current thread.\npublic final class LocaleContextHolder extends Object;\n// Simple implementation of the LocaleContext interface, always returning a specified Locale.\npublic class SimpleLocaleContext extends Object implements LocaleContext;\n", "des": "Abstraction for determining the current Locale, plus global holder that exposes a thread-bound Locale."}
{"index": 1514, "repo": "spring-context-6.0.11", "code": "package index\n\n// Provide access to the candidates that are defined in META-INF/spring.components.\npublic class CandidateComponentsIndex extends Object;\n// Candidate components index loading mechanism for internal use within the framework.\npublic final class CandidateComponentsIndexLoader extends Object;\n", "des": "Support package for reading and managing the components index."}
{"index": 1515, "repo": "spring-context-6.0.11", "code": "package support\n\n// Abstract implementation of the ApplicationContext interface.\npublic abstract class AbstractApplicationContext extends org.springframework.core.io.DefaultResourceLoader implements ConfigurableApplicationContext;\n", "des": "Classes supporting the org.springframework.context package, such as abstract base classes for ApplicationContext implementations and a MessageSource implementation."}
{"index": 1516, "repo": "spring-context-6.0.11", "code": "package weaving\n\n// Post-processor that registers AspectJ's ClassPreProcessorAgentAdapter with the Spring application context's default LoadTimeWeaver.\npublic class AspectJWeavingEnabler extends Object implements org.springframework.beans.factory.config.BeanFactoryPostProcessor, org.springframework.beans.factory.BeanClassLoaderAware, LoadTimeWeaverAware, org.springframework.core.Ordered;\n", "des": "Load-time weaving support for a Spring application context, building on Spring's LoadTimeWeaver abstraction."}
{"index": 1517, "repo": "spring-context-6.0.11", "code": "package config\n\n// NamespaceHandler for the 'jee' namespace.\npublic class JeeNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Support package for EJB/Jakarta EE-related configuration, with XML schema being the primary configuration format."}
{"index": 1518, "repo": "spring-context-6.0.11", "code": "package format\n\n// A factory that creates formatters to format values of fields annotated with a particular Annotation.\npublic interface AnnotationFormatterFactory<A extends Annotation>;\n// Formats objects of type T.\npublic interface Formatter<T> extends Printer<T>, Parser<T>;\n// Registers Converters and Formatters with a FormattingConversionService through the FormatterRegistry SPI.\npublic interface FormatterRegistrar;\n", "des": "An API for defining Formatters to format field model values for display in a UI."}
{"index": 1519, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Declares that a field or method parameter should be formatted as a date or time.\n@Documented @Retention(RUNTIME) @Target({METHOD,FIELD,PARAMETER,ANNOTATION_TYPE}) public @interface DateTimeFormat;\n// Common ISO date time format patterns.\npublic static enum DateTimeFormat.ISO extends Enum<DateTimeFormat.ISO>;\n", "des": "Annotations for declaratively configuring field formatting rules."}
{"index": 1520, "repo": "spring-context-6.0.11", "code": "package datetime\n\n// A formatter for Date types.\npublic class DateFormatter extends Object implements Formatter<Date>;\n// Configures basic date formatting for use with Spring, primarily for DateTimeFormat declarations.\npublic class DateFormatterRegistrar extends Object implements FormatterRegistrar;\n", "des": "Formatters for java.util.Date properties."}
{"index": 1521, "repo": "spring-context-6.0.11", "code": "package standard\n\n// A context that holds user-specific java.time (JSR-310) settings such as the user's Chronology (calendar system) and time zone.\npublic class DateTimeContext extends Object;\n// A holder for a thread-local user DateTimeContext.\npublic final class DateTimeContextHolder extends Object;\n// Factory that creates a JSR-310 DateTimeFormatter.\npublic class DateTimeFormatterFactory extends Object;\n", "des": "Integration with the JSR-310 java.time package in JDK 8."}
{"index": 1522, "repo": "spring-context-6.0.11", "code": "package number\n\n// Abstract formatter for Numbers, providing a AbstractNumberFormatter.getNumberFormat(java.util.Locale) template method.\npublic abstract class AbstractNumberFormatter extends Object implements Formatter<Number>;\n// A BigDecimal formatter for number values in currency style.\npublic class CurrencyStyleFormatter extends AbstractNumberFormatter;\n", "des": "Formatters for java.lang.Number properties."}
{"index": 1523, "repo": "spring-context-6.0.11", "code": "package money\n\n// Formatter for JSR-354 CurrencyUnit values, from and to currency code Strings.\npublic class CurrencyUnitFormatter extends Object implements Formatter<javax.money.CurrencyUnit>;\n// Formats MonetaryAmount fields annotated with Spring's common NumberFormat annotation.\npublic class Jsr354NumberFormatAnnotationFormatterFactory extends EmbeddedValueResolutionSupport implements AnnotationFormatterFactory<NumberFormat>;\n", "des": "Integration with the JSR-354 javax.money package."}
{"index": 1524, "repo": "spring-context-6.0.11", "code": "package support\n\n// A specialization of FormattingConversionService configured by default with converters and formatters appropriate for most applications.\npublic class DefaultFormattingConversionService extends FormattingConversionService;\n// Adapter that bridges between Formatter and PropertyEditor.\npublic class FormatterPropertyEditorAdapter extends PropertyEditorSupport;\n", "des": "Support classes for the formatting package, providing common implementations as well as adapters."}
{"index": 1525, "repo": "spring-context-6.0.11", "code": "package classloading\n\n// LoadTimeWeaver relying on VM Instrumentation.\npublic class InstrumentationLoadTimeWeaver extends Object implements LoadTimeWeaver;\n// Defines the contract for adding one or more ClassFileTransformers to a ClassLoader.\npublic interface LoadTimeWeaver;\n// LoadTimeWeaver which uses reflection to delegate to an underlying ClassLoader with well-known transformation hooks.\npublic class ReflectiveLoadTimeWeaver extends Object implements LoadTimeWeaver;\n", "des": "Support package for load time weaving based on class loaders, as required by JPA providers (but not JPA-specific)."}
{"index": 1526, "repo": "spring-context-6.0.11", "code": "package glassfish\n\n// LoadTimeWeaver implementation for GlassFish's org.glassfish.api.deployment.InstrumentableClassLoader InstrumentableClassLoader.\npublic class GlassFishLoadTimeWeaver extends Object implements LoadTimeWeaver;\n", "des": "Support for class instrumentation on GlassFish."}
{"index": 1527, "repo": "spring-context-6.0.11", "code": "package jboss\n\n// LoadTimeWeaver implementation for JBoss's instrumentable ClassLoader.\npublic class JBossLoadTimeWeaver extends Object implements LoadTimeWeaver;\n", "des": "Support for class instrumentation on JBoss AS 6 and 7."}
{"index": 1528, "repo": "spring-context-6.0.11", "code": "package tomcat\n\n// LoadTimeWeaver implementation for Tomcat's new org.apache.tomcat.InstrumentableClassLoader.\npublic class TomcatLoadTimeWeaver extends Object implements LoadTimeWeaver;\n", "des": "Support for class instrumentation on Tomcat."}
{"index": 1529, "repo": "spring-context-6.0.11", "code": "package jmx\n\n// General base exception to be thrown on JMX errors.\npublic class JmxException extends org.springframework.core.NestedRuntimeException;\n// Exception thrown when we cannot locate an instance of an MBeanServer, or when more than one instance is found.\npublic class MBeanServerNotFoundException extends JmxException;\n", "des": "This package contains Spring's JMX support, which includes registration of Spring-managed beans as JMX MBeans as well as access to remote JMX MBeans."}
{"index": 1530, "repo": "spring-context-6.0.11", "code": "package access\n\n// Thrown when trying to invoke an operation on a proxy that is not exposed by the proxied MBean resource's management interface.\npublic class InvalidInvocationException extends JMRuntimeException;\n// Thrown when an invocation on an MBean resource failed with an exception (either a reflection exception or an exception thrown by the target method itself).\npublic class InvocationFailureException extends JmxException;\n", "des": "Provides support for accessing remote MBean resources."}
{"index": 1531, "repo": "spring-context-6.0.11", "code": "package export\n\n", "des": "This package provides declarative creation and registration of Spring-managed beans as JMX MBeans."}
{"index": 1532, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Implementation of the JmxAttributeSource interface that reads annotations and exposes the corresponding attributes.\npublic class AnnotationJmxAttributeSource extends Object implements JmxAttributeSource, org.springframework.beans.factory.BeanFactoryAware;\n", "des": "Annotations for MBean exposure."}
{"index": 1533, "repo": "spring-context-6.0.11", "code": "package assembler\n\n// Base class for MBeanInfoAssemblers that support configurable JMX notification behavior.\npublic abstract class AbstractConfigurableMBeanInfoAssembler extends AbstractReflectiveMBeanInfoAssembler;\n// Abstract implementation of the MBeanInfoAssembler interface that encapsulates the creation of a ModelMBeanInfo instance but delegates the creation of metadata to subclasses.\npublic abstract class AbstractMBeanInfoAssembler extends Object implements MBeanInfoAssembler;\n", "des": "Provides a strategy for MBeanInfo assembly."}
{"index": 1534, "repo": "spring-context-6.0.11", "code": "package metadata\n\n// Base class for all JMX metadata classes.\npublic abstract class AbstractJmxAttribute extends Object;\n// Thrown by the JmxAttributeSource when it encounters incorrect metadata on a managed resource or one of its methods.\npublic class InvalidMetadataException extends JmxException;\n// Interface used by the MetadataMBeanInfoAssembler to read source-level metadata from a managed resource's class.\npublic interface JmxAttributeSource;\n", "des": "Provides generic JMX metadata classes and basic support for reading JMX metadata in a provider-agnostic manner."}
{"index": 1535, "repo": "spring-context-6.0.11", "code": "package naming\n\n// An implementation of the ObjectNamingStrategy interface that creates a name based on the identity of a given instance.\npublic class IdentityNamingStrategy extends Object implements ObjectNamingStrategy;\n// ObjectNamingStrategy implementation that builds ObjectName instances from the key used in the \"beans\" map passed to MBeanExporter.\npublic class KeyNamingStrategy extends Object implements ObjectNamingStrategy, org.springframework.beans.factory.InitializingBean;\n", "des": "Provides a strategy for ObjectName creation."}
{"index": 1536, "repo": "spring-context-6.0.11", "code": "package notification\n\n// NotificationPublisher implementation that uses the infrastructure provided by the ModelMBean interface to track javax.management.NotificationListeners and send Notifications to those listeners.\npublic class ModelMBeanNotificationPublisher extends Object implements NotificationPublisher;\n", "des": "Provides supporting infrastructure to allow Spring-created MBeans to send JMX notifications."}
{"index": 1537, "repo": "spring-context-6.0.11", "code": "package support\n\n// FactoryBean that creates a JSR-160 JMXConnectorServer, optionally registers it with the MBeanServer, and then starts it.\npublic class ConnectorServerFactoryBean extends MBeanRegistrationSupport implements org.springframework.beans.factory.FactoryBean<JMXConnectorServer>, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// Collection of generic utility methods to support Spring JMX.\npublic abstract class JmxUtils extends Object;\n", "des": "Contains support classes for connecting to local and remote MBeanServers and for exposing an MBeanServer to remote clients."}
{"index": 1538, "repo": "spring-context-6.0.11", "code": "package jndi\n\n// Convenient superclass for JNDI accessors, providing \"jndiTemplate\" and \"jndiEnvironment\" bean properties.\npublic class JndiAccessor extends Object;\n// Callback interface to be implemented by classes that need to perform an operation (such as a lookup) in a JNDI context.\n@FunctionalInterface public interface JndiCallback<T>;\n// JndiLocatorSupport subclass with public lookup methods, for convenient use as a delegate.\npublic class JndiLocatorDelegate extends JndiLocatorSupport;\n", "des": "The classes in this package make JNDI easier to use, facilitating the accessing of configuration stored in JNDI, and provide useful superclasses for JNDI access classes."}
{"index": 1539, "repo": "spring-context-6.0.11", "code": "package support\n\n// Simple JNDI-based implementation of Spring's BeanFactory interface.\npublic class SimpleJndiBeanFactory extends JndiLocatorSupport implements org.springframework.beans.factory.BeanFactory;\n", "des": "Support classes for JNDI usage, including a JNDI-based BeanFactory implementation."}
{"index": 1540, "repo": "spring-context-6.0.11", "code": "package scheduling\n\n// Extension of the Runnable interface, adding special callbacks for long-running operations.\npublic interface SchedulingAwareRunnable extends Runnable;\n// General exception to be thrown on scheduling failures, such as the scheduler already having shut down.\npublic class SchedulingException extends org.springframework.core.NestedRuntimeException;\n", "des": "General exceptions for Spring's scheduling support, independent of any specific scheduling system."}
{"index": 1541, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Abstract base Configuration class providing common structure for enabling Spring's asynchronous method execution capability.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractAsyncConfiguration extends Object implements ImportAware;\n", "des": "Annotation support for asynchronous method execution."}
{"index": 1542, "repo": "spring-context-6.0.11", "code": "package concurrent\n\n// Adapter that takes a java.util.concurrent.Executor and exposes a Spring TaskExecutor for it.\npublic class ConcurrentTaskExecutor extends Object implements org.springframework.core.task.AsyncListenableTaskExecutor, SchedulingTaskExecutor;\n// Delegate that wraps a given Runnable/Callable with a JSR-236 ManagedTask, exposing a long-running hint based on SchedulingAwareRunnable and a given identity name.\nprotected static class ConcurrentTaskExecutor.ManagedTaskBuilder extends Object;\n", "des": "Scheduling convenience classes for the java.util.concurrent and jakarta.enterprise.concurrent packages, allowing to set up a ThreadPoolExecutor or ScheduledThreadPoolExecutor as a bean in a Spring context."}
{"index": 1543, "repo": "spring-context-6.0.11", "code": "package config\n\n// Parser for the 'annotation-driven' element of the 'task' namespace.\npublic class AnnotationDrivenBeanDefinitionParser extends Object implements org.springframework.beans.factory.xml.BeanDefinitionParser;\n", "des": "Support package for declarative scheduling configuration, with XML schema being the primary configuration format."}
{"index": 1544, "repo": "spring-context-6.0.11", "code": "package support\n\n// Representation of a crontab expression that can calculate the next time it matches.\npublic final class CronExpression extends Object;\n// \n@Deprecated(since=\"5.3\", forRemoval=true) public class CronSequenceGenerator extends Object;\n// Trigger implementation for cron expressions.\npublic class CronTrigger extends Object implements Trigger;\n", "des": "Generic support classes for scheduling."}
{"index": 1545, "repo": "spring-context-6.0.11", "code": "package scripting\n\n// Exception to be thrown on script compilation failure.\npublic class ScriptCompilationException extends org.springframework.core.NestedRuntimeException;\n// Spring's strategy interface for evaluating a script.\npublic interface ScriptEvaluator;\n// Script definition interface, encapsulating the configuration of a specific script as well as a factory method for creating the actual scripted Java Object.\npublic interface ScriptFactory;\n", "des": "Core interfaces for Spring's scripting support."}
{"index": 1546, "repo": "spring-context-6.0.11", "code": "package bsh\n\n// BeanShell-based implementation of Spring's ScriptEvaluator strategy interface.\npublic class BshScriptEvaluator extends Object implements ScriptEvaluator, org.springframework.beans.factory.BeanClassLoaderAware;\n// ScriptFactory implementation for a BeanShell script.\npublic class BshScriptFactory extends Object implements ScriptFactory, org.springframework.beans.factory.BeanClassLoaderAware;\n", "des": "Package providing integration of BeanShell (and BeanShell2) into Spring's scripting infrastructure."}
{"index": 1547, "repo": "spring-context-6.0.11", "code": "package config\n\n// NamespaceHandler that supports the wiring of objects backed by dynamic languages such as Groovy, JRuby and BeanShell.\npublic class LangNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n// Utilities for use with LangNamespaceHandler.\npublic abstract class LangNamespaceUtils extends Object;\n", "des": "Support package for Spring's dynamic language machinery, with XML schema being the primary configuration format."}
{"index": 1548, "repo": "spring-context-6.0.11", "code": "package groovy\n\n// Strategy used by GroovyScriptFactory to allow the customization of a created GroovyObject.\n@FunctionalInterface public interface GroovyObjectCustomizer;\n// Groovy-based implementation of Spring's ScriptEvaluator strategy interface.\npublic class GroovyScriptEvaluator extends Object implements ScriptEvaluator, org.springframework.beans.factory.BeanClassLoaderAware;\n", "des": "Package providing integration of Groovy into Spring's scripting infrastructure."}
{"index": 1549, "repo": "spring-context-6.0.11", "code": "package support\n\n// Subclass of BeanFactoryRefreshableTargetSource that determines whether a refresh is required through the given ScriptFactory.\npublic class RefreshableScriptTargetSource extends org.springframework.aop.target.dynamic.BeanFactoryRefreshableTargetSource;\n// ScriptSource implementation based on Spring's Resource abstraction.\npublic class ResourceScriptSource extends Object implements ScriptSource;\n", "des": "Support classes for Spring's scripting package."}
{"index": 1550, "repo": "spring-context-6.0.11", "code": "package stereotype\n\n// Indicates that an annotated class is a \"component\".\n@Target(TYPE) @Retention(RUNTIME) @Documented @Indexed public @interface Component;\n// Indicates that an annotated class is a \"Controller\" (e.g.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Component public @interface Controller;\n// Indicate that the annotated element represents a stereotype for the index.\n@Target(TYPE) @Retention(RUNTIME) @Documented public @interface Indexed;\n", "des": "Annotations denoting the roles of types or methods in the overall architecture (at a conceptual, rather than implementation, level)."}
{"index": 1551, "repo": "spring-context-6.0.11", "code": "package ui\n\n// Implementation of the Model interface based on a ConcurrentHashMap for use in concurrent scenarios.\npublic class ConcurrentModel extends ConcurrentHashMap<String,Object> implements Model;\n// Subclass of ModelMap that implements the Model interface.\npublic class ExtendedModelMap extends ModelMap implements Model;\n// Interface that defines a holder for model attributes.\npublic interface Model;\n", "des": "Generic support for UI layer concepts."}
{"index": 1552, "repo": "spring-context-6.0.11", "code": "package context\n\n// \n@Deprecated(since=\"6.0\") public interface HierarchicalThemeSource extends ThemeSource;\n// \n@Deprecated(since=\"6.0\") public interface Theme;\n// \n@Deprecated(since=\"6.0\") public interface ThemeSource;\n", "des": "Contains classes defining the application context subinterface for UI applications."}
{"index": 1553, "repo": "spring-context-6.0.11", "code": "package support\n\n// \n@Deprecated(since=\"6.0\") public class DelegatingThemeSource extends Object implements HierarchicalThemeSource;\n// \n@Deprecated(since=\"6.0\") public class ResourceBundleThemeSource extends Object implements HierarchicalThemeSource, org.springframework.beans.factory.BeanClassLoaderAware;\n// \n@Deprecated(since=\"6.0\") public class SimpleTheme extends Object implements Theme;\n// \n@Deprecated(since=\"6.0\") public abstract class UiApplicationContextUtils extends Object;\n", "des": "Classes supporting the org.springframework.ui.context package."}
{"index": 1554, "repo": "spring-context-6.0.11", "code": "package validation\n\n// Abstract implementation of the BindingResult interface and its super-interface Errors.\npublic abstract class AbstractBindingResult extends AbstractErrors implements BindingResult, Serializable;\n// Abstract implementation of the Errors interface.\npublic abstract class AbstractErrors extends Object implements Errors, Serializable;\n", "des": "Provides data binding and validation functionality, for usage in business and/or UI layers."}
{"index": 1555, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Variant of JSR-303's Valid, supporting the specification of validation groups.\n@Target({TYPE,METHOD,PARAMETER}) @Retention(RUNTIME) @Documented public @interface Validated;\n// Utility class for handling validation annotations.\npublic abstract class ValidationAnnotationUtils extends Object;\n", "des": "Support classes for annotation-based constraint evaluation, e.g."}
{"index": 1556, "repo": "spring-context-6.0.11", "code": "package beanvalidation\n\n// Simple BeanPostProcessor that checks JSR-303 constraint annotations in Spring-managed beans, throwing an initialization exception in case of constraint violations right before calling the bean's init method (if any).\npublic class BeanValidationPostProcessor extends Object implements org.springframework.beans.factory.config.BeanPostProcessor, org.springframework.beans.factory.InitializingBean;\n", "des": "Support classes for integrating a JSR-303 Bean Validation provider (such as Hibernate Validator) into a Spring ApplicationContext and in particular with Spring's data binding and validation APIs."}
{"index": 1557, "repo": "spring-context-6.0.11", "code": "package support\n\n// Subclass of ConcurrentModel that automatically removes the BindingResult object when its corresponding target attribute is replaced through regular Map operations.\npublic class BindingAwareConcurrentModel extends ConcurrentModel;\n// Subclass of ExtendedModelMap that automatically removes a BindingResult object if the corresponding target attribute gets replaced through regular Map operations.\npublic class BindingAwareModelMap extends ExtendedModelMap;\n", "des": "Support classes for handling validation results."}
{"index": 1558, "repo": "spring-restdocs-core-3.0.0", "code": "package restdocs\n\n// A JUnit TestRule used to automatically manage the RestDocumentationContext.\npublic class JUnitRestDocumentation extends Object implements RestDocumentationContextProvider, org.junit.rules.TestRule;\n// ManualRestDocumentation is used to manually manage the RestDocumentationContext.\npublic final class ManualRestDocumentation extends Object implements RestDocumentationContextProvider;\n", "des": "Core Spring REST Docs classes."}
{"index": 1559, "repo": "spring-restdocs-core-3.0.0", "code": "package cli\n\n// Static factory methods for documenting a RESTful API as if it were being driven using a command-line utility such as curl or HTTPie.\npublic abstract class CliDocumentation extends Object;\n// Formatter for CLI commands such as those included in CurlRequestSnippet and HttpieRequestSnippet.\npublic interface CommandFormatter;\n// A Snippet that documents the curl command for a request.\npublic class CurlRequestSnippet extends TemplatedSnippet;\n", "des": "Documenting CLI commands required to make a request to a RESTful API."}
{"index": 1560, "repo": "spring-restdocs-core-3.0.0", "code": "package config\n\n// Abstract configurer that declares methods that are internal to the documentation configuration implementation.\npublic abstract class AbstractConfigurer extends Object;\n// Base class for NestedConfigurer implementations.\npublic abstract class AbstractNestedConfigurer<PARENT> extends AbstractConfigurer;\n", "des": "Classes for configuring Spring REST Docs."}
{"index": 1561, "repo": "spring-restdocs-core-3.0.0", "code": "package constraints\n\n// A constraint.\npublic class Constraint extends Object;\n// Resolves a description for a Constraint.\npublic interface ConstraintDescriptionResolver;\n// Provides access to descriptions of a class's constraints.\npublic class ConstraintDescriptions extends Object;\n// An abstraction for resolving a class's constraints.\npublic interface ConstraintResolver;\n", "des": "Documenting a RESTful API's constraints."}
{"index": 1562, "repo": "spring-restdocs-core-3.0.0", "code": "package cookies\n\n// Abstract TemplatedSnippet subclass that provides a base for snippets that document a RESTful resource's request or response cookies.\npublic abstract class AbstractCookiesSnippet extends TemplatedSnippet;\n// A description of a cookie found in a request or response.\npublic class CookieDescriptor extends IgnorableDescriptor<CookieDescriptor>;\n// Static factory methods for documenting a RESTful API's request and response cookies.\npublic abstract class CookieDocumentation extends Object;\n", "des": "Documenting the cookies of a RESTful API's requests and responses."}
{"index": 1563, "repo": "spring-restdocs-core-3.0.0", "code": "package generate\n\n// An exception that can be thrown when a failure occurs during REST documentation generation.\npublic class RestDocumentationGenerationException extends RuntimeException;\n// A RestDocumentationGenerator is used to generate documentation snippets from the request and response of an operation performed on a service.\npublic final class RestDocumentationGenerator<REQ,RESP> extends Object;\n", "des": "Classes that drive the generation of the documentation snippets."}
{"index": 1564, "repo": "spring-restdocs-core-3.0.0", "code": "package headers\n\n// Abstract TemplatedSnippet subclass that provides a base for snippets that document a RESTful resource's request or response headers.\npublic abstract class AbstractHeadersSnippet extends TemplatedSnippet;\n// A description of a header found in a request or response.\npublic class HeaderDescriptor extends AbstractDescriptor<HeaderDescriptor>;\n// Static factory methods for documenting a RESTful API's request and response headers.\npublic abstract class HeaderDocumentation extends Object;\n", "des": "Documenting the headers of a RESTful API's requests and responses."}
{"index": 1565, "repo": "spring-restdocs-core-3.0.0", "code": "package http\n\n// Static factory methods for documenting a RESTful API's HTTP requests.\npublic abstract class HttpDocumentation extends Object;\n// A Snippet that documents an HTTP request.\npublic class HttpRequestSnippet extends TemplatedSnippet;\n// A Snippet that documents an HTTP response.\npublic class HttpResponseSnippet extends TemplatedSnippet;\n", "des": "Documenting the HTTP request sent to a RESTful API and the HTTP response that is returned."}
{"index": 1566, "repo": "spring-restdocs-core-3.0.0", "code": "package hypermedia\n\n// Static factory methods for documenting a RESTful API that utilizes Hypermedia.\npublic abstract class HypermediaDocumentation extends Object;\n// Representation of a link used in a Hypermedia-based API.\npublic class Link extends Object;\n// A description of a link found in a hypermedia API.\npublic class LinkDescriptor extends IgnorableDescriptor<LinkDescriptor>;\n// A LinkExtractor is used to extract links from a JSON response.\npublic interface LinkExtractor;\n", "des": "Documenting a RESTful API that uses hypermedia."}
{"index": 1567, "repo": "spring-restdocs-core-3.0.0", "code": "package operation\n\n// An exception that can be thrown by RequestConverter and ResponseConverter implementations to indicate that a failure has occurred during conversion.\npublic class ConversionException extends RuntimeException;\n// A request's form parameters, derived from its form URL encoded body content.\npublic final class FormParameters extends LinkedMultiValueMap<String,String>;\n// Describes an operation performed on a RESTful service.\npublic interface Operation;\n", "des": "Operation API that describes a request that was sent and the response that was received when calling a RESTful API."}
{"index": 1568, "repo": "spring-restdocs-core-3.0.0", "code": "package preprocess\n\n// A ContentModifier modifies the content of an OperationRequest or OperationResponse during the preprocessing that is performed prior to documentation generation.\npublic interface ContentModifier;\n// An OperationPreprocessor that applies a ContentModifier to the content of the request or response.\npublic class ContentModifyingOperationPreprocessor extends Object implements OperationPreprocessor;\n", "des": "Support for preprocessing an operation prior to it being documented."}
{"index": 1569, "repo": "spring-restdocs-core-3.0.0", "code": "package payload\n\n// Abstract TemplatedSnippet subclass that provides a base for snippets that document a RESTful resource's request or response body.\npublic abstract class AbstractBodySnippet extends TemplatedSnippet;\n// Abstract TemplatedSnippet subclass that provides a base for snippets that document a RESTful resource's request or response fields.\npublic abstract class AbstractFieldsSnippet extends TemplatedSnippet;\n", "des": "Documenting the payload of a RESTful API's requests and responses."}
{"index": 1570, "repo": "spring-restdocs-core-3.0.0", "code": "package request\n\n// Abstract TemplatedSnippet subclass that provides a base for snippets that document parameters from a request sent to a RESTful resource.\npublic abstract class AbstractParametersSnippet extends TemplatedSnippet;\n// A Snippet that documents the form parameters supported by a RESTful resource.\npublic class FormParametersSnippet extends AbstractParametersSnippet;\n", "des": "Documenting query and path parameters of requests sent to a RESTful API."}
{"index": 1571, "repo": "spring-restdocs-core-3.0.0", "code": "package snippet\n\n// Base class for descriptors.\npublic abstract class AbstractDescriptor<T extends AbstractDescriptor<T>> extends Object;\n// A fluent API for building a map of attributes.\npublic abstract class Attributes extends Object;\n// An attribute (key-value pair).\npublic static final class Attributes.Attribute extends Object;\n// A simple builder for an attribute (key-value pair).\npublic static final class Attributes.AttributeBuilder extends Object;\n", "des": "Snippet generation."}
{"index": 1572, "repo": "spring-restdocs-core-3.0.0", "code": "package templates\n\n// Standard implementation of TemplateResourceResolver.\npublic class StandardTemplateResourceResolver extends Object implements TemplateResourceResolver;\n// A compiled Template that can be rendered to a String.\npublic interface Template;\n// A TemplateEngine is used to render documentation snippets.\npublic interface TemplateEngine;\n// A TemplateFormat provides information about a particular template format, such as Asciidoctor or Markdown.\npublic interface TemplateFormat;\n", "des": "Template API used to render documentation snippets."}
{"index": 1573, "repo": "spring-restdocs-core-3.0.0", "code": "package mustache\n\n// A Mustache.Lambda that escapes | characters so that the do not break the table's formatting.\npublic final class AsciidoctorTableCellContentLambda extends Object implements org.springframework.restdocs.mustache.Mustache.Lambda;\n// An adapter that exposes a compiled Mustache template as a Template.\npublic class MustacheTemplate extends Object implements Template;\n", "des": "JMustache-based implementation of the template API."}
{"index": 1574, "repo": "spring-cloud-task-core-3.0.3", "code": "package configuration\n\n// Default implementation of the TaskConfigurer interface.\npublic class DefaultTaskConfigurer extends Object implements TaskConfigurer;\n// Enables the TaskLifecycleListener so that the features of Spring Cloud Task will be applied.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(TaskLifecycleConfiguration.class) public @interface EnableTask;\n", "des": "Interfaces for configuring Spring Cloud Task and a default implementations."}
{"index": 1575, "repo": "spring-cloud-task-core-3.0.3", "code": "package dao\n\n// Stores Task Execution Information to a JDBC DataSource.\npublic class JdbcTaskExecutionDao extends Object implements TaskExecutionDao;\n// Stores Task Execution Information to a in-memory map.\npublic class MapTaskExecutionDao extends Object implements TaskExecutionDao;\n// Data Access Object for task executions.\npublic interface TaskExecutionDao;\n", "des": "Interface DAO and default implementations for storing and retrieving data for tasks from a repository."}
{"index": 1576, "repo": "spring-cloud-task-core-3.0.3", "code": "package support\n\n// Enum representing a database type, such as DB2 or oracle.\npublic enum DatabaseType extends Enum<DatabaseType>;\n// TaskExplorer for that gathers task information from a task repository.\npublic class SimpleTaskExplorer extends Object implements TaskExplorer;\n// Simple implementation of the TaskNameResolver interface.\npublic class SimpleTaskNameResolver extends Object implements TaskNameResolver, org.springframework.context.ApplicationContextAware;\n", "des": "Classes used for setting up and supporting a task repositories."}
{"index": 1577, "repo": "spring-security-oauth2-client-6.1.2", "code": "package client\n\n// An implementation of an OAuth2AuthorizedClientProvider for the authorization_code grant.\npublic final class AuthorizationCodeOAuth2AuthorizedClientProvider extends Object implements OAuth2AuthorizedClientProvider;\n// An implementation of a ReactiveOAuth2AuthorizedClientProvider for the authorization_code grant.\npublic final class AuthorizationCodeReactiveOAuth2AuthorizedClientProvider extends Object implements ReactiveOAuth2AuthorizedClientProvider;\n", "des": "Core classes and interfaces providing support for OAuth 2.0 Client."}
{"index": 1578, "repo": "spring-security-oauth2-client-6.1.2", "code": "package authentication\n\n// An implementation of an AbstractAuthenticationToken that represents an OAuth 2.0 Authentication.\npublic class OAuth2AuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken;\n// An implementation of an AuthenticationProvider for the OAuth 2.0 Authorization Code Grant.\npublic class OAuth2AuthorizationCodeAuthenticationProvider extends Object implements org.springframework.security.authentication.AuthenticationProvider;\n", "des": "Support classes and interfaces for authenticating and authorizing a client with an OAuth 2.0 Authorization Server using a specific authorization grant flow."}
{"index": 1579, "repo": "spring-security-oauth2-client-6.1.2", "code": "package endpoint\n\n// Base implementation of an OAuth 2.0 Authorization Grant request that holds an authorization grant credential and is used when initiating a request to the Authorization Server's Token Endpoint.\npublic abstract class AbstractOAuth2AuthorizationGrantRequest extends Object;\n", "des": "Classes and interfaces providing support to the client for initiating requests to the Authorization Server's Protocol Endpoints."}
{"index": 1580, "repo": "spring-security-oauth2-client-6.1.2", "code": "package authentication\n\n// An implementation of an AuthenticationProvider for the OpenID Connect Core 1.0 Authorization Code Grant Flow.\npublic class OidcAuthorizationCodeAuthenticationProvider extends Object implements org.springframework.security.authentication.AuthenticationProvider;\n", "des": "Support classes and interfaces for authenticating and authorizing a client with an OpenID Connect 1.0 Provider using a specific authorization grant flow."}
{"index": 1581, "repo": "spring-security-oauth2-client-6.1.2", "code": "package userinfo\n\n// An implementation of an ReactiveOAuth2UserService that supports OpenID Connect 1.0 Provider's.\npublic class OidcReactiveOAuth2UserService extends Object implements ReactiveOAuth2UserService<OidcUserRequest,org.springframework.security.oauth2.core.oidc.user.OidcUser>;\n// Represents a request the OidcUserService uses when initiating a request to the UserInfo Endpoint.\npublic class OidcUserRequest extends OAuth2UserRequest;\n", "des": "Classes and interfaces providing support to the client for initiating requests to the OpenID Connect 1.0 Provider's UserInfo Endpoint."}
{"index": 1582, "repo": "spring-security-oauth2-client-6.1.2", "code": "package registration\n\n// A representation of a client registration with an OAuth 2.0 or OpenID Connect 1.0 Provider.\npublic final class ClientRegistration extends Object implements Serializable;\n// A builder for ClientRegistration.\npublic static final class ClientRegistration.Builder extends Object implements Serializable;\n// A repository for OAuth 2.0 / OpenID Connect 1.0 ClientRegistration(s).\npublic interface ClientRegistrationRepository;\n", "des": "Classes and interfaces that provide support for ClientRegistration."}
{"index": 1583, "repo": "spring-security-oauth2-client-6.1.2", "code": "package userinfo\n\n// An implementation of an OAuth2UserService that supports standard OAuth 2.0 Provider's.\npublic class DefaultOAuth2UserService extends Object implements OAuth2UserService<OAuth2UserRequest,org.springframework.security.oauth2.core.user.OAuth2User>;\n", "des": "Classes and interfaces providing support to the client for initiating requests to the OAuth 2.0 Authorization Server's UserInfo Endpoint."}
{"index": 1584, "repo": "spring-security-oauth2-client-6.1.2", "code": "package web\n\n// An implementation of an OAuth2AuthorizedClientRepository that delegates to the provided OAuth2AuthorizedClientService if the current Principal is authenticated, otherwise, to the default (or provided) OAuth2AuthorizedClientRepository if the current request is unauthenticated (or anonymous).\npublic final class AuthenticatedPrincipalOAuth2AuthorizedClientRepository extends Object implements OAuth2AuthorizedClientRepository;\n", "des": "OAuth 2.0 Client Filter's and supporting classes and interfaces."}
{"index": 1585, "repo": "spring-websocket-6.0.11", "code": "package socket\n\n// A message that can be handled or sent on a WebSocket connection.\npublic abstract class AbstractWebSocketMessage<T> extends Object implements WebSocketMessage<T>;\n// A binary WebSocket message.\npublic final class BinaryMessage extends AbstractWebSocketMessage<ByteBuffer>;\n// Represents a WebSocket close status code and reason.\npublic final class CloseStatus extends Object implements Serializable;\n", "des": "Common abstractions and Spring configuration support for WebSocket applications."}
{"index": 1586, "repo": "spring-websocket-6.0.11", "code": "package adapter\n\n// An abstract base class for implementations of WebSocketSession.\npublic abstract class AbstractWebSocketSession<T> extends Object implements NativeWebSocketSession;\n// A WebSocketSession that exposes the underlying, native WebSocketSession through a getter.\npublic interface NativeWebSocketSession extends WebSocketSession;\n", "des": "Classes adapting Spring's WebSocket API to and from WebSocket providers."}
{"index": 1587, "repo": "spring-websocket-6.0.11", "code": "package jetty\n\n// Adapts WebSocketHandler to the Jetty 9 WebSocket API.\n@WebSocket public class JettyWebSocketHandlerAdapter extends Object;\n// A WebSocketSession for use with the Jetty 9.4 WebSocket API.\npublic class JettyWebSocketSession extends AbstractWebSocketSession<org.eclipse.jetty.websocket.api.Session>;\n// Adapter class to convert a WebSocketExtension to a Jetty ExtensionConfig.\npublic class WebSocketToJettyExtensionConfigAdapter extends org.eclipse.jetty.websocket.common.JettyExtensionConfig;\n", "des": "Adapter classes for the Jetty WebSocket API."}
{"index": 1588, "repo": "spring-websocket-6.0.11", "code": "package standard\n\n// Base class that can be used to implement a standard Encoder and/or Decoder.\npublic abstract class ConvertingEncoderDecoderSupport<T,M> extends Object;\n// A binary jakarta.websocket.Encoder that delegates to Spring's conversion service.\npublic abstract static class ConvertingEncoderDecoderSupport.BinaryDecoder<T> extends ConvertingEncoderDecoderSupport<T,ByteBuffer> implements Decoder.Binary<T>;\n", "des": "Adapter classes for the standard Jakarta WebSocket API."}
{"index": 1589, "repo": "spring-websocket-6.0.11", "code": "package client\n\n// Abstract base class for WebSocketClient implementations.\npublic abstract class AbstractWebSocketClient extends Object implements WebSocketClient;\n// Base class for a connection manager that automates the process of connecting to a WebSocket server with the Spring ApplicationContext lifecycle.\npublic abstract class ConnectionManagerSupport extends Object implements org.springframework.context.SmartLifecycle;\n// Contract for initiating a WebSocket request.\npublic interface WebSocketClient;\n", "des": "Client-side abstractions for WebSocket applications."}
{"index": 1590, "repo": "spring-websocket-6.0.11", "code": "package jetty\n\n// \n@Deprecated(since=\"6.0.3\", forRemoval=true) public class JettyWebSocketClient extends AbstractWebSocketClient implements org.springframework.context.Lifecycle;\n", "des": "Client-side support for the Jetty WebSocket API."}
{"index": 1591, "repo": "spring-websocket-6.0.11", "code": "package standard\n\n// WebSocket connection manager that connects to the server via WebSocketContainer and handles the session with an @ClientEndpoint endpoint.\npublic class AnnotatedEndpointConnectionManager extends ConnectionManagerSupport implements org.springframework.beans.factory.BeanFactoryAware;\n", "des": "Client-side classes for use with standard Jakarta WebSocket endpoints."}
{"index": 1592, "repo": "spring-websocket-6.0.11", "code": "package config\n\n// A central class for aggregating information about internal state and counters from key infrastructure components of the setup that comes with @EnableWebSocketMessageBroker for Java config and <websocket:message-broker> for XML.\npublic class WebSocketMessageBrokerStats extends Object;\n// NamespaceHandler for Spring WebSocket configuration namespace.\npublic class WebSocketNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Configuration support for WebSocket request handling."}
{"index": 1593, "repo": "spring-websocket-6.0.11", "code": "package annotation\n\n// Base class for WebSocketHandlerRegistrations that gathers all the configuration options but allows subclasses to put together the actual HTTP request mappings.\npublic abstract class AbstractWebSocketHandlerRegistration<M> extends Object implements WebSocketHandlerRegistration;\n", "des": "Support for annotation-based WebSocket setup in configuration classes."}
{"index": 1594, "repo": "spring-websocket-6.0.11", "code": "package handler\n\n// A convenient base class for WebSocketHandler implementation with empty methods.\npublic abstract class AbstractWebSocketHandler extends Object implements WebSocketHandler;\n// Instantiates a target handler through a Spring BeanFactory and also provides an equivalent destroy method.\npublic class BeanCreatingHandlerProvider<T> extends Object implements org.springframework.beans.factory.BeanFactoryAware;\n", "des": "Convenient WebSocketHandler implementations and decorators."}
{"index": 1595, "repo": "spring-websocket-6.0.11", "code": "package messaging\n\n// A base class for events for a message received from a WebSocket client and parsed into a higher-level sub-protocol (e.g.\npublic abstract class AbstractSubProtocolEvent extends org.springframework.context.ApplicationEvent;\n", "des": "WebSocket integration for Spring's messaging module."}
{"index": 1596, "repo": "spring-websocket-6.0.11", "code": "package server\n\n// Thrown when handshake processing failed to complete due to an internal, unrecoverable error.\npublic class HandshakeFailureException extends org.springframework.core.NestedRuntimeException;\n// Contract for processing a WebSocket handshake request.\npublic interface HandshakeHandler;\n// Interceptor for WebSocket handshake requests.\npublic interface HandshakeInterceptor;\n", "des": "Server-side abstractions for WebSocket interactions."}
{"index": 1597, "repo": "spring-websocket-6.0.11", "code": "package jetty\n\n// A RequestUpgradeStrategy for Jetty 11.\npublic class JettyRequestUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n", "des": "Server-side support for the Jetty 9+ WebSocket API."}
{"index": 1598, "repo": "spring-websocket-6.0.11", "code": "package standard\n\n// A base class for RequestUpgradeStrategy implementations that build on the standard WebSocket API for Java (JSR-356).\npublic abstract class AbstractStandardUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n// A base class for RequestUpgradeStrategy implementations on top of JSR-356 based servers which include Tyrus as their WebSocket engine.\npublic abstract class AbstractTyrusRequestUpgradeStrategy extends AbstractStandardUpgradeStrategy;\n", "des": "Server-side classes for use with standard JSR-356 WebSocket endpoints."}
{"index": 1599, "repo": "spring-websocket-6.0.11", "code": "package support\n\n// A base class for HandshakeHandler implementations, independent of the Servlet API.\npublic abstract class AbstractHandshakeHandler extends Object implements HandshakeHandler, org.springframework.context.Lifecycle;\n// A default HandshakeHandler implementation, extending AbstractHandshakeHandler with Servlet-specific initialization support.\npublic class DefaultHandshakeHandler extends AbstractHandshakeHandler implements org.springframework.web.context.ServletContextAware;\n", "des": "Server-side support classes including container-specific strategies for upgrading a request."}
{"index": 1600, "repo": "spring-websocket-6.0.11", "code": "package sockjs\n\n// Base class for exceptions raised while processing SockJS HTTP requests.\npublic class SockJsException extends org.springframework.core.NestedRuntimeException;\n// An exception thrown when a message frame was successfully received over an HTTP POST and parsed but one or more of the messages it contained could not be delivered to the WebSocketHandler either because the handler failed or because the connection got closed.\npublic class SockJsMessageDeliveryException extends SockJsException;\n", "des": "Top-level SockJS types."}
{"index": 1601, "repo": "spring-websocket-6.0.11", "code": "package client\n\n// Base class for SockJS client implementations of WebSocketSession.\npublic abstract class AbstractClientSockJsSession extends Object implements WebSocketSession;\n// Abstract base class for XHR transport implementations to extend.\npublic abstract class AbstractXhrTransport extends Object implements XhrTransport;\n", "des": "SockJS client implementation of WebSocketClient."}
{"index": 1602, "repo": "spring-websocket-6.0.11", "code": "package frame\n\n// A base class for SockJS message codec that provides an implementation of AbstractSockJsMessageCodec.encode(String[]).\npublic abstract class AbstractSockJsMessageCodec extends Object implements SockJsMessageCodec;\n// A default implementation of SockJsFrameFormat that relies on String.format(String, Object...)..\npublic class DefaultSockJsFrameFormat extends Object implements SockJsFrameFormat;\n", "des": "Support classes for creating SockJS frames including the encoding and decoding of SockJS message frames."}
{"index": 1603, "repo": "spring-websocket-6.0.11", "code": "package support\n\n// An abstract base class for SockJsService implementations that provides SockJS path resolution and handling of static SockJS requests (e.g.\npublic abstract class AbstractSockJsService extends Object implements SockJsService, org.springframework.web.cors.CorsConfigurationSource;\n", "des": "Support classes for SockJS including an AbstractSockJsService implementation."}
{"index": 1604, "repo": "spring-websocket-6.0.11", "code": "package transport\n\n// Provides transport handling code with access to the SockJsService configuration options they need to have access to.\npublic interface SockJsServiceConfig;\n// SockJS extension of Spring's standard WebSocketSession.\npublic interface SockJsSession extends WebSocketSession;\n// A factory for creating a SockJS session.\npublic interface SockJsSessionFactory;\n// Handle a SockJS session URL, i.e.\npublic interface TransportHandler;\n", "des": "Server-side support for SockJS transports including TransportHandler implementations for processing incoming requests, their session counterparts for sending messages over the various transports, and DefaultSockJsService."}
{"index": 1605, "repo": "spring-websocket-6.0.11", "code": "package handler\n\n// Base class for HTTP transport handlers that receive messages via HTTP POST.\npublic abstract class AbstractHttpReceivingTransportHandler extends AbstractTransportHandler;\n// Base class for HTTP transport handlers that push messages to connected clients.\npublic abstract class AbstractHttpSendingTransportHandler extends AbstractTransportHandler implements SockJsSessionFactory;\n", "des": "TransportHandler implementation classes as well as a concrete SockJsService."}
{"index": 1606, "repo": "spring-websocket-6.0.11", "code": "package session\n\n// An abstract base class for use with HTTP transport SockJS sessions.\npublic abstract class AbstractHttpSockJsSession extends AbstractSockJsSession;\n// An abstract base class for SockJS sessions implementing SockJsSession.\npublic abstract class AbstractSockJsSession extends Object implements SockJsSession;\n// A SockJS session for use with polling HTTP transports.\npublic class PollingSockJsSession extends AbstractHttpSockJsSession;\n", "des": "SockJS specific implementations of WebSocketSession."}
{"index": 1607, "repo": "spring-data-neo4j-7.1.2", "code": "package config\n\n// Base class for imperative SDN configuration using JavaConfig.\n@Configuration @API(status=STABLE, since=\"6.0\") public abstract class AbstractNeo4jConfig extends Object;\n// Base class for reactive SDN configuration using JavaConfig.\n@Configuration @API(status=STABLE, since=\"6.0\") public abstract class AbstractReactiveNeo4jConfig extends Object;\n", "des": "This package contains configuration related support classes that can be used for application specific, annotated configuration classes."}
{"index": 1608, "repo": "spring-data-neo4j-7.1.2", "code": "package core\n\n// A value holder indicating a database selection based on an optional name.\n@API(status=STABLE, since=\"6.0\") public final class DatabaseSelection extends Object;\n// A provider interface that knows in which database repositories or either the reactive or imperative template should work.\n@API(status=STABLE, since=\"6.0\") @FunctionalInterface public interface DatabaseSelectionProvider;\n", "des": "This package contains the core infrastructure for creating an imperative or reactive client that can execute queries."}
{"index": 1609, "repo": "spring-data-neo4j-7.1.2", "code": "package convert\n\n// This annotation can be used to define either custom conversions for single attributes by specifying a custom Neo4jPersistentPropertyConverter and if needed, a custom factory to create that converter or the annotation can be used to build custom meta-annotated annotations like @org.springframework.data.neo4j.core.support.DateLong.\n@Retention(RUNTIME) @Target({ANNOTATION_TYPE,FIELD}) @Inherited @Documented @API(status=STABLE, since=\"6.0\") public @interface ConvertWith;\n", "des": "Provides a set of simples types that SDN supports."}
{"index": 1610, "repo": "spring-data-neo4j-7.1.2", "code": "package mapping\n\n// Warning Internal API, might change without further notice, even in patch releases.\n@API(status=INTERNAL, since=\"6.3\") public final class AssociationHandlerSupport extends Object;\n// A pool of constants used in our Cypher generation.\n@API(status=EXPERIMENTAL, since=\"6.0\") public final class Constants extends Object;\n", "des": "The main mapping framework."}
{"index": 1611, "repo": "spring-data-neo4j-7.1.2", "code": "package callback\n\n// A callback that can be used to modify an instance of a Neo4jPersistentEntity after it has been converted: That is, when a Neo4j record has been fully processed and the entity and all its associations have been processed.\n@FunctionalInterface @API(status=STABLE, since=\"6.3.0\") public interface AfterConvertCallback<T> extends EntityCallback<T>;\n", "des": "This package contains the callback API."}
{"index": 1612, "repo": "spring-data-neo4j-7.1.2", "code": "package schema\n\n// This annotation indicates a persistent property that is composed of multiple properties on a node or relationship.\n@Retention(RUNTIME) @Target(FIELD) @Inherited @ConvertWith(converterFactory=org.springframework.data.neo4j.core.schema.CompositePropertyConverterFactory.class) @API(status=STABLE, since=\"6.0\") public @interface CompositeProperty;\n", "des": "This package contains the schema that is defined by a set of classes, representing nodes and relationships and their properties."}
{"index": 1613, "repo": "spring-data-neo4j-7.1.2", "code": "package support\n\n// Indicates SDN to store dates as long in the database.\n@Retention(RUNTIME) @Target(FIELD) @Inherited @ConvertWith(converter=org.springframework.data.neo4j.core.support.DateLongConverter.class) @API(status=STABLE, since=\"6.0\") public @interface DateLong;\n", "des": "This package provides a couple of support classes that might be helpful in your domain, for example a predicate indicating that some transaction may be retried and additional converters and id generators."}
{"index": 1614, "repo": "spring-data-neo4j-7.1.2", "code": "package transaction\n\n// Responsible for storing, updating and retrieving the bookmarks of Neo4j's transaction.\n@API(status=STABLE, since=\"6.1.1\") public sealed interface Neo4jBookmarkManager;\n// This event will be published after a Neo4j transaction manager physically committed a transaction without errors and received a new set of bookmarks from the cluster.\n@API(status=STABLE, since=\"6.1.1\") public final class Neo4jBookmarksUpdatedEvent extends ApplicationEvent;\n", "des": "Contains the core infrastructure for translating unmanaged Neo4j transaction into Spring managed transactions."}
{"index": 1615, "repo": "spring-data-neo4j-7.1.2", "code": "package repository\n\n// Neo4j specific Repository interface.\n@NoRepositoryBean public interface Neo4jRepository<T,ID> extends PagingAndSortingRepository<T,ID>, QueryByExampleExecutor<T>, CrudRepository<T,ID>;\n// Throw when a query doesn't return a required result.\n@API(status=STABLE, since=\"6.0\") public class NoResultException extends EmptyResultDataAccessException;\n", "des": "This package provides the Neo4j imperative and reactive repository API."}
{"index": 1616, "repo": "spring-data-neo4j-7.1.2", "code": "package config\n\n// Annotation to activate Neo4j repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(org.springframework.data.neo4j.repository.config.Neo4jRepositoriesRegistrar.class) public @interface EnableNeo4jRepositories;\n", "des": "Configuration infrastructure for Neo4j specific repositories, especially dedicated annotations to enable imperative and reactive Spring Data Neo4j repositories."}
{"index": 1617, "repo": "spring-data-neo4j-7.1.2", "code": "package query\n\n// This is a utility class that computes the bounding box of a polygon as a rectangle defined by the lower left and upper right point.\npublic final class BoundingBox extends Object;\n// Bridging between Spring Data domain Objects and Cypher constructs.\n@API(status=INTERNAL, since=\"6.0\") public final class CypherAdapterUtils extends Object;\n// \n@API(status=INTERNAL, since=\"6.1\") public final class CypherdslConditionExecutorImpl<T> extends Object implements CypherdslConditionExecutor<T>;\n", "des": "A set of annotations for providing custom queries to repositories."}
{"index": 1618, "repo": "spring-data-neo4j-7.1.2", "code": "package support\n\n// An interface that can be added to any repository so that queries can be enriched by conditions of the Cypher-DSL.\n@API(status=STABLE, since=\"6.1\") public interface CypherdslConditionExecutor<T>;\n", "des": "This package provides a couple of public support classes for building custom imperative and reactive Spring Data Neo4j repository base classes."}
{"index": 1619, "repo": "spring-data-neo4j-7.1.2", "code": "package types\n\n// \n@API(status=STABLE, since=\"6.0\") public final class CartesianPoint2d extends Object;\n// \n@API(status=STABLE, since=\"6.0\") public final class CartesianPoint3d extends Object;\n// \npublic final class Coordinate extends Object;\n// \n@API(status=STABLE, since=\"6.0\") public final class GeographicPoint2d extends Object;\n// \n@API(status=STABLE, since=\"6.0\") public final class GeographicPoint3d extends Object;\n", "des": "Additional types provided by SDN."}
{"index": 1620, "repo": "spring-kafka-3.0.9", "code": "package kafka\n\n// The Spring for Apache Kafka specific NestedRuntimeException implementation.\npublic class KafkaException extends org.springframework.core.NestedRuntimeException;\n// The log level for KafkaException.\npublic static enum KafkaException.Level extends Enum<KafkaException.Level>;\n", "des": "Base package for kafka"}
{"index": 1621, "repo": "spring-kafka-3.0.9", "code": "package annotation\n\n// Annotation to determine the method the should process the DLT topic message.\n@Target(METHOD) @Retention(RUNTIME) @Documented public @interface DltHandler;\n// Enable Kafka listener annotated endpoints that are created under the covers by a AbstractListenerContainerFactory.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(KafkaListenerConfigurationSelector.class) public @interface EnableKafka;\n", "des": "Package for kafka annotations"}
{"index": 1622, "repo": "spring-kafka-3.0.9", "code": "package aot\n\n// Detect and register Avro types for Apache Kafka listeners.\npublic class KafkaAvroBeanRegistrationAotProcessor extends Object implements org.springframework.beans.factory.aot.BeanRegistrationAotProcessor;\n// RuntimeHintsRegistrar for Spring for Apache Kafka.\npublic class KafkaRuntimeHints extends Object implements org.springframework.aot.hint.RuntimeHintsRegistrar;\n", "des": "Provides classes to support Spring AOT."}
{"index": 1623, "repo": "spring-kafka-3.0.9", "code": "package config\n\n// Base KafkaListenerContainerFactory for Spring's base container implementation.\npublic abstract class AbstractKafkaListenerContainerFactory<C extends AbstractMessageListenerContainer<K,V>,K,V> extends Object implements KafkaListenerContainerFactory<C>, org.springframework.context.ApplicationEventPublisherAware, org.springframework.beans.factory.InitializingBean, org.springframework.context.ApplicationContextAware;\n", "des": "Package for kafka configuration"}
{"index": 1624, "repo": "spring-kafka-3.0.9", "code": "package core\n\n// A Supplier for bootstrap servers that can toggle between 2 lists of servers.\npublic class ABSwitchCluster extends Object implements Supplier<String>;\n// Specifies time of KafkaStreams.cleanUp() execution.\npublic class CleanupConfig extends Object;\n// The strategy to produce a Consumer instance(s).\npublic interface ConsumerFactory<K,V>;\n// Called whenever a consumer is added or removed.\npublic static interface ConsumerFactory.Listener<K,V>;\n", "des": "Package for kafka core components"}
{"index": 1625, "repo": "spring-kafka-3.0.9", "code": "package reactive\n\n// Reactive kafka consumer operations implementation.\npublic class ReactiveKafkaConsumerTemplate<K,V> extends Object;\n// Reactive kafka producer operations implementation.\npublic class ReactiveKafkaProducerTemplate<K,V> extends Object implements AutoCloseable, org.springframework.beans.factory.DisposableBean;\n", "des": "Reactive component for consumer and producer."}
{"index": 1626, "repo": "spring-kafka-3.0.9", "code": "package event\n\n// An event published when a consumer fails to start.\npublic class ConsumerFailedToStartEvent extends KafkaEvent;\n// An event published when a consumer partition is paused.\npublic class ConsumerPartitionPausedEvent extends KafkaEvent;\n// An event published when a consumer partition is resumed.\npublic class ConsumerPartitionResumedEvent extends KafkaEvent;\n// An event published when a consumer is paused.\npublic class ConsumerPausedEvent extends KafkaEvent;\n", "des": "Application Events."}
{"index": 1627, "repo": "spring-kafka-3.0.9", "code": "package listener\n\n// Manages the ConsumerSeekAware.ConsumerSeekCallback s for the listener.\npublic abstract class AbstractConsumerSeekAware extends Object implements ConsumerSeekAware;\n// Base class for KafkaBackOffManagerFactory implementations.\npublic abstract class AbstractKafkaBackOffManagerFactory extends Object implements KafkaBackOffManagerFactory, org.springframework.context.ApplicationContextAware;\n", "des": "Package for kafka listeners"}
{"index": 1628, "repo": "spring-kafka-3.0.9", "code": "package adapter\n\n// Top level class for all listener adapters.\npublic abstract class AbstractDelegatingMessageListenerAdapter<T> extends Object implements ConsumerSeekAware, DelegatingMessageListener<T>;\n// An abstract message listener adapter that implements record filter logic via a RecordFilterStrategy.\npublic abstract class AbstractFilteringMessageListener<K,V,T> extends AbstractDelegatingMessageListenerAdapter<T>;\n", "des": "Provides classes for adapting listeners."}
{"index": 1629, "repo": "spring-kafka-3.0.9", "code": "package mock\n\n// Support the use of MockConsumer in tests.\npublic class MockConsumerFactory<K,V> extends Object implements ConsumerFactory<K,V>;\n// Support the use of MockProducer in tests.\npublic class MockProducerFactory<K,V> extends Object implements ProducerFactory<K,V>;\n", "des": "Provides classes to support the use of MockConsumer and MockProducer."}
{"index": 1630, "repo": "spring-kafka-3.0.9", "code": "package requestreply\n\n// A replying template that aggregates multiple replies with the same correlation id.\npublic class AggregatingReplyingKafkaTemplate<K,V,R> extends ReplyingKafkaTemplate<K,V,Collection<org.apache.kafka.clients.consumer.ConsumerRecord<K,R>>> implements BatchConsumerAwareMessageListener<K,Collection<org.apache.kafka.clients.consumer.ConsumerRecord<K,R>>>;\n// Wrapper for byte[] that can be used as a hash key.\npublic final class CorrelationKey extends Object;\n", "des": "Provides classes for request/reply semantics."}
{"index": 1631, "repo": "spring-kafka-3.0.9", "code": "package retrytopic\n\n// Generates the backoff values from the provided maxAttempts value and BackOffPolicy.\npublic class BackOffValuesGenerator extends Object;\n// Creates and configures the DeadLetterPublishingRecoverer that will be used to forward the messages using the DestinationTopicResolver.\npublic class DeadLetterPublishingRecovererFactory extends Object;\n", "des": "Package for retryable topic handling."}
{"index": 1632, "repo": "spring-kafka-3.0.9", "code": "package jaas\n\n// Contains properties for setting up an AppConfigurationEntry that can be used for the Kafka client.\npublic class KafkaJaasLoginModuleInitializer extends Object implements org.springframework.beans.factory.SmartInitializingSingleton, org.springframework.beans.factory.DisposableBean;\n// Control flag values for login configuration.\npublic static enum KafkaJaasLoginModuleInitializer.ControlFlag extends Enum<KafkaJaasLoginModuleInitializer.ControlFlag>;\n", "des": "Provides classes related to jaas."}
{"index": 1633, "repo": "spring-kafka-3.0.9", "code": "package streams\n\n// \n@Deprecated public class HeaderEnricher<K,V> extends Object implements org.apache.kafka.streams.kstream.Transformer<K,V,org.apache.kafka.streams.KeyValue<K,V>>;\n// Container object for SpEL evaluation.\npublic static final class HeaderEnricher.Container<K,V> extends Object;\n// Manipulate the headers.\npublic class HeaderEnricherProcessor<K,V> extends org.apache.kafka.streams.processor.api.ContextualProcessor<K,V,K,V>;\n", "des": "Package for classes related to Kafka Streams."}
{"index": 1634, "repo": "spring-kafka-3.0.9", "code": "package messaging\n\n// A function that receives a spring-messaging Message and returns a Message.\n@FunctionalInterface public interface MessagingFunction;\n// A Transformer implementation that invokes a MessagingFunction converting to/from spring-messaging Message.\npublic class MessagingProcessor<Kin,Vin,Kout,Vout> extends org.apache.kafka.streams.processor.api.ContextualProcessor<Kin,Vin,Kout,Vout>;\n", "des": "Package for classes related to spring-messaging with Kafka Streams."}
{"index": 1635, "repo": "spring-kafka-3.0.9", "code": "package support\n\n// Base for Kafka header mappers.\npublic abstract class AbstractKafkaHeaderMapper extends Object implements KafkaHeaderMapper;\n// A matcher for headers.\nprotected static interface AbstractKafkaHeaderMapper.HeaderMatcher;\n// A matcher that never matches a set of headers.\nprotected static class AbstractKafkaHeaderMapper.NeverMatchHeaderMatcher extends Object implements AbstractKafkaHeaderMapper.HeaderMatcher;\n", "des": "Package for kafka support"}
{"index": 1636, "repo": "spring-kafka-3.0.9", "code": "package converter\n\n// A Kafka-specific Message converter strategy.\npublic interface BatchMessageConverter extends MessageConverter;\n// A Messaging MessageConverter implementation used with a batch message listener; the consumer record values are extracted into a collection in the message payload.\npublic class BatchMessagingMessageConverter extends Object implements BatchMessageConverter;\n", "des": "Package for kafka converters"}
{"index": 1637, "repo": "spring-kafka-3.0.9", "code": "package mapping\n\n// Abstract type mapper.\npublic abstract class AbstractJavaTypeMapper extends Object implements org.springframework.beans.factory.BeanClassLoaderAware;\n// Strategy for setting metadata on messages such that one can create the class that needs to be instantiated when receiving a message.\npublic interface ClassMapper;\n// Jackson 2 type mapper.\npublic class DefaultJackson2JavaTypeMapper extends AbstractJavaTypeMapper implements Jackson2JavaTypeMapper;\n", "des": "Provides classes related to type mapping."}
{"index": 1638, "repo": "spring-kafka-3.0.9", "code": "package micrometer\n\n// Spring for Apache Kafka Observation for listeners.\npublic enum KafkaListenerObservation extends Enum<KafkaListenerObservation> implements io.micrometer.observation.docs.ObservationDocumentation;\n// Default KafkaListenerObservationConvention for Kafka listener key values.\npublic static class KafkaListenerObservation.DefaultKafkaListenerObservationConvention extends Object implements KafkaListenerObservationConvention;\n", "des": "Provides classes to support Micrometer."}
{"index": 1639, "repo": "spring-kafka-3.0.9", "code": "package transaction\n\n// \n@Deprecated public class ChainedKafkaTransactionManager<K,V> extends org.springframework.data.transaction.ChainedTransactionManager implements KafkaAwareTransactionManager<K,V>;\n// A transaction manager that can provide a ProducerFactory.\npublic interface KafkaAwareTransactionManager<K,V> extends org.springframework.transaction.PlatformTransactionManager;\n", "des": "Provides classes related to transactions."}
{"index": 1640, "repo": "jena-core-4.9.0", "code": "package datatypes\n\n// Base level implementation of datatype from which real implementations can inherit.\npublic class BaseDatatype extends Object implements RDFDatatype;\n// Pair object used to encode both lexical form and datatype for a typed literal with unknown datatype.\npublic static class BaseDatatype.TypedValue extends Object;\n// Exception thrown when a lexical form does not match the stated datatype.\npublic class DatatypeFormatException extends JenaException;\n", "des": "Provides the core interfaces through which datatypes are described to Jena."}
{"index": 1641, "repo": "jena-core-4.9.0", "code": "package xsd\n\n// Base class for representation of XSD duration, time, date/time and related datatype instances.\npublic class AbstractDateTime extends Object implements Comparable<AbstractDateTime>;\n// Exception thrown when attempting to access a field of an XSDDateTime object that is not legal for the current date/time type.\npublic class IllegalDateTimeFieldException extends JenaException;\n// Implement base64binary type.\npublic class XSDbase64Binary extends XSDbinary;\n", "des": "Provides datatype definitions for the XML Schema datatypes support by Jena."}
{"index": 1642, "repo": "jena-core-4.9.0", "code": "package impl\n\n// rdf:html.\npublic class RDFhtml extends BaseDatatype implements RDFDatatype;\n// rdf:json.\npublic class RDFjson extends BaseDatatype implements RDFDatatype;\n// rdf:langString.\npublic class RDFLangString extends BaseDatatype implements RDFDatatype;\n// Builtin data type to represent XMLLiteral (i.e.\npublic class XMLLiteralType extends BaseDatatype implements RDFDatatype;\n// Base class for all date/time/duration type representations.\npublic class XSDAbstractDateTimeType extends XSDDatatype;\n", "des": "Provides implementations of the XSD datatype."}
{"index": 1643, "repo": "jena-core-4.9.0", "code": "package enhanced\n\n// Exception to throw when adding a view to a Polymorphic discovers that the view to add is already on a ring.\npublic class AlreadyLinkedViewException extends JenaException;\n// The personalities that are provided for the existing Jena classes.\npublic class BuiltinPersonalities extends Object;\n// EnhGraph wraps a plain graph and contains enhanced nodes that wrap the plain nodes of the plain graph.\npublic class EnhGraph extends Object;\n", "des": "This package defines the enhanced node and graph classes; an enhanced node is one embedded in a particular enhanced graph."}
{"index": 1644, "repo": "jena-core-4.9.0", "code": "package graph\n\n// System identifier for a blank node.\npublic class BlankNodeId extends Object;\n// Interface for expressing capabilities.\npublic interface Capabilities;\n// \n@Deprecated public class Factory extends Object;\n// HasNode - interface for objects that front a Node in some context.\npublic interface FrontsNode;\n// FrontsTriple (see also FrontsNode) is an interface for things that can be seen as wrappers round triples.\npublic interface FrontsTriple;\n", "des": "This package defines the Graph and Node family of classes, which form the underlying datatypes of the Jena system."}
{"index": 1645, "repo": "jena-core-4.9.0", "code": "package compose\n\n// Base class for graphs that are composed of multiple sub-graphs.\npublic abstract class CompositionBase extends GraphBase;\n// Graph operation for wrapping a base graph and leaving it unchanged while recording all the attempted updates for later access.\npublic class Delta extends CompositionBase implements Graph;\n// Class representing the dynamic set difference L - R of two graphs.\npublic class Difference extends Dyadic implements Graph;\n", "des": "This package defines simple composite graphs - union, intersection, difference, and update-tracking."}
{"index": 1646, "repo": "jena-core-4.9.0", "code": "package impl\n\n// \npublic class AdhocDatatype extends BaseDatatype;\n// A default implementation of capabilities, in which everything is allowed, size is accurate, and graphs may be completely empty.\npublic class AllCapabilities extends Object implements Capabilities;\n// This base class provides convenience functions for the three \"usual\" graph makers and a place to hold the reification style for the graphs it constructs.\npublic abstract class BaseGraphMaker extends Object implements GraphMaker;\n", "des": "This package provides basic implementations of Graph interfaces such as EventManager and Capabilities."}
{"index": 1647, "repo": "jena-core-4.9.0", "code": "package irix\n\n// Characters and character classes\npublic class Chars3986 extends Object;\n// Exception thrown due to IRI problems.\npublic class IRIException extends JenaException;\n// Provider: an implementation of a factory for IRIs.\npublic interface IRIProvider;\n// Non-resolving provider that accepts anything string for <...>.\npublic class IRIProviderAny extends Object implements IRIProvider;\n// IRIProvider implemented using java.net.URI.\npublic class IRIProviderJDK extends Object implements IRIProvider;\n", "des": "Support for RFC3986 IRIs."}
{"index": 1648, "repo": "jena-core-4.9.0", "code": "package mem\n\n// An ArrayBunch implements TripleBunch with a linear search of a short-ish array of Triples.\npublic class ArrayBunch extends Object implements TripleBunch;\n// A pruned (and slightly stewed) version of Map, containing just those operations required by NodeToTriplesMaps.\npublic interface BunchMap;\n// A class that encapsulates a filter on fields on a triple.\npublic class FieldFilter extends Object;\n// \n@Deprecated public class GraphMem extends GraphMemBase;\n", "des": "Various memory-based implementations of interfaces, specifically GraphMem for memory-based Graphs."}
{"index": 1649, "repo": "jena-core-4.9.0", "code": "package ontology\n\n// Interface defining an individual in which all members of a collection are declared pair-wise disjoint.\npublic interface AllDifferent extends OntResource;\n// A property restriction that requires the named property to have have any range instances to be members of a given class.\npublic interface AllValuesFromRestriction extends Restriction;\n", "des": "Provides a set of abstractions and convenience classes for accessing and manipluating ontologies represented in RDF."}
{"index": 1650, "repo": "jena-core-4.9.0", "code": "package impl\n\n// Abstract base class to provide shared implementation for ontology language profiles.\npublic abstract class AbstractProfile extends Object implements Profile;\n// Implementation of the abstraction of axioms that denote the single name assumption.\npublic class AllDifferentImpl extends OntResourceImpl implements AllDifferent;\n// Implementation of the allValuesFrom restriction abstraction.\npublic class AllValuesFromRestrictionImpl extends RestrictionImpl implements AllValuesFromRestriction;\n", "des": "Provides default implementations for the abstractions defined in the org.apache.jena.ontology package."}
{"index": 1651, "repo": "jena-core-4.9.0", "code": "package listeners\n\n// Class that merely notes that a change has occurred.\npublic class ChangedListener extends Object implements ModelChangedListener;\n// A listener that ignores everything you tell it; intended as a base class or an identity element.\npublic class NullListener extends Object implements ModelChangedListener;\n", "des": "A package defining some useful implementations of ModelChangedListener, for listening to (a) all triples added or removed, exploding composite objects, (b) all objects added or removed, as themselves, (c) notification of additions/removals, but no details, and (d) accepting but ignoring all changes, as a base-class to be extended."}
{"index": 1652, "repo": "jena-core-4.9.0", "code": "package model\n\n// An RDF Alternative container.\npublic interface Alt extends Container;\n// Exception thrown if an Alt has no default statement.\npublic class AltHasNoDefaultException extends JenaException;\n// System id for an anonymous node.\npublic class AnonId extends Object;\n// An RDF Bag container.\npublic interface Bag extends Container;\n// An RDF Container.\npublic interface Container extends Resource;\n", "des": "A package for creating and manipulating RDF graphs."}
{"index": 1653, "repo": "jena-core-4.9.0", "code": "package impl\n\n// An implementation of Alt.\npublic class AltImpl extends ContainerImpl implements Alt;\n// An implementation of Bag\npublic class BagImpl extends ContainerImpl implements Bag;\n// An internal class not normally of interest to application developers.\npublic class ContainerImpl extends ResourceImpl implements Container;\n// An internal class, not normally of interest to application developers.\npublic class ContNodeIteratorFactoryImpl extends Object implements NodeIteratorFactory;\n", "des": "This package contains implementations of the interfaces defined in the .model package, eg ModelCom for Model, ResourceImpl for Resource, and so on."}
{"index": 1654, "repo": "jena-core-4.9.0", "code": "package xmlinput\n\n// A string literal property value from an RDF/XML file.\npublic interface ALiteral extends ANode;\n// A URI or blank node reported to a StatementHandler.\npublic interface AResource;\n// \n@Deprecated public class ARP extends Object implements ARPConfig;\n// Used to set event handlers and options on ARP, SAX2Model, and SAX2RDF instances.\npublic interface ARPConfig;\n// Error numbers used by ARP.\npublic interface ARPErrorNumbers;\n", "des": "A parser for RDF/XML."}
{"index": 1655, "repo": "jena-core-4.9.0", "code": "package xmlinput0\n\n// A string literal property value from an RDF/XML file.\npublic interface ALiteral extends ANode;\n// A URI or blank node reported to a StatementHandler.\npublic interface AResource;\n// Another RDF Parser.\npublic class ARP0 extends Object implements ARPConfig;\n// Used to set event handlers and options on ARP0, SAX2Model, and SAX2RDF instances.\npublic interface ARPConfig;\n// Error numbers used by ARP.\npublic interface ARPErrorNumbers;\n", "des": "A parser for RDF/XML."}
{"index": 1656, "repo": "jena-core-4.9.0", "code": "package xmloutput\n\n// This interface only adds documentation to RDFWriterI.\npublic interface RDFXMLWriterI extends RDFWriterI;\n", "des": "Writing RDF/XML."}
{"index": 1657, "repo": "jena-core-4.9.0", "code": "package reasoner\n\n// A base level implementation of the InfGraph interface.\npublic abstract class BaseInfGraph extends GraphBase implements InfGraph;\n// An InfCapabilities notes that size may not be accurate.\npublic static class BaseInfGraph.InfCapabilities extends AllCapabilities;\n// An InfCapabilities notes that size may not be accurate.\npublic static class BaseInfGraph.InfFindSafeCapabilities extends BaseInfGraph.InfCapabilities;\n", "des": "The Jena2 reasoner subsystem is designed to allow a range of inference engines to be plugged into Jena."}
{"index": 1658, "repo": "jena-core-4.9.0", "code": "package rulesys\n\n// This interface collects together those operations that the backchaining engine needs to invoke in the parent InfGraph.\npublic interface BackwardRuleInfGraphI extends SilentAddI, InfGraph;\n// An inference graph interface that runs a set of forward chaining rules to conclusion on each added triple and stores the entire result set.\npublic class BasicForwardRuleInfGraph extends BaseInfGraph implements ForwardRuleInfGraphI;\n", "des": "Provides a selection of simple rule engines for Jena inference models."}
{"index": 1659, "repo": "jena-core-4.9.0", "code": "package builtins\n\n// Bind the second argument to 1+ the first argument.\npublic class AddOne extends BaseBuiltin;\n// Assert the n^2 differtFrom pairs from a distinctMembers list\npublic class AssertDisjointPairs extends BaseBuiltin;\n// Dummy implementation of the Builtin interface that specific implementations can inherit from.\npublic abstract class BaseBuiltin extends Object implements Builtin;\n// Predicate used to check if a variable has been bound.\npublic class Bound extends BaseBuiltin;\n", "des": "Implementations of the Builtin class which provides primitive operations to the rule engines."}
{"index": 1660, "repo": "jena-core-4.9.0", "code": "package impl\n\n// Implementation of RuleContext for use in the backward chaining interpreter.\npublic class BBRuleContext extends Object implements RuleContext;\n// An implementation of the generic RuleContext interface used by the basic forward (BF) rule engine.\npublic class BFRuleContext extends Object implements RuleContext;\n// Provides a trail of possible variable bindings for a forward rule.\npublic class BindingStack extends Object implements BindingEnvironment;\n", "des": "Internal implementation objects used by the rule system interpreters and compilers."}
{"index": 1661, "repo": "jena-core-4.9.0", "code": "package transitiveReasoner\n\n// Uses two transitive graph caches to store a subclass and a subproperty lattice and use them within a larger inference graph.\npublic class TransitiveEngine extends Object;\n// Datastructure used to represent a closed transitive reflexive relation.\npublic class TransitiveGraphCache extends Object implements Finder;\n// Implementation of InfGraph used by the TransitiveReasoner.\npublic class TransitiveInfGraph extends BaseInfGraph;\n", "des": "This package contains a reasoner which supports transitive-reflexive closure of subPropertyOf and subClassOf relations."}
{"index": 1662, "repo": "jena-core-4.9.0", "code": "package shared\n\n// Superclass of exceptions thrown when permissions do not allow an operation on a graph.\npublic class AccessDeniedException extends OperationDeniedException;\n// Exception to throw for a denied add operation\npublic class AddDeniedException extends AccessDeniedException;\n// Exception to throw when an attempt is made to create a named object (eg persistent model) when an object of that name already exists.\npublic class AlreadyExistsException extends JenaException;\n", "des": "This package defines some classes common to the Jena API and SPI levels, in particular the JenaException class from which all Jena-specific exceptions hang, and the interface PrefixMapping for translation to and from QNames."}
{"index": 1663, "repo": "jena-core-4.9.0", "code": "package impl\n\n// This class holds global, static, configuration parameters that affect the behaviour of the Jena API.\npublic class JenaParameters extends Object;\n// An implementation of PrefixMapping.\npublic class PrefixMappingImpl extends Object implements PrefixMapping;\n", "des": "This package provides \"standard\" implementations for the interfaces defined by .shared, notably an implementation of PrefixMapping."}
{"index": 1664, "repo": "jena-core-4.9.0", "code": "package util\n\n// This class provides a number of static methods which interact with java.nio.charset.Charset to analyze and transform the strings identifying character encodings.\npublic abstract class CharEncoding extends Object;\n// CollectionFactory - a central place for allocating sets and maps, mostly so that it's easy to plug in new implementations (eg trove).\npublic class CollectionFactory extends Object;\n// \npublic interface FileManager;\n", "des": "Miscellaneous collection of utility classes."}
{"index": 1665, "repo": "jena-core-4.9.0", "code": "package iterator\n\n// An iterator which should be closed after use.\npublic interface ClosableIterator<T> extends IteratorCloseable<T>;\n// An ExtendedIterator is a ClosableIterator on which other operations are defined for convenience in iterator composition: composition, filtering in, filtering out, and element mapping. NOTE that the result of these operations consumes the base iterator(s); they do not make independent copies.\npublic interface ExtendedIterator<T> extends ClosableIterator<T>;\n", "des": "A package for defining useful iterators and iterator operations, including concatenation, mapping, filtering, empty and singleton iterators, iterator wrappers, and the ExtendedIterator class used in many places in Jena."}
{"index": 1666, "repo": "jena-core-4.9.0", "code": "package vocabulary\n\n// The standard Activity Stream vocabulary.\npublic class AS extends Object;\n// \npublic class DC extends DC_11;\n// Dublin Core version 1.0 vocabulary.\npublic class DC_10 extends Object;\n// Vocabulary definitions from file:vocabularies/dublin-core_11.xml\npublic class DC_11 extends Object;\n// Constants for the W3C Data Catalog Vocabulary.\npublic class DCAT extends Object;\n// Vocabulary definitions from vocabularies/dublin-core_terms.xml\npublic class DCTerms extends Object;\n", "des": "A package containing constant classes with predefined constant objects for classes and properties defined in well known vocabularies."}
{"index": 1667, "repo": "spring-boot-cli-3.1.1", "code": "package cli\n\n// Default implementation of CommandFactory.\npublic class DefaultCommandFactory extends Object implements CommandFactory;\n// Spring Command Line Interface.\npublic final class SpringCli extends Object;\n", "des": "Main entry point of the Spring Boot CLI."}
{"index": 1668, "repo": "spring-boot-cli-3.1.1", "code": "package command\n\n// Abstract Command implementation.\npublic abstract class AbstractCommand extends Object implements Command;\n// A single command that can be run from the CLI.\npublic interface Command;\n// Runtime exception wrapper that defines additional CommandException.Options that are understood by the CommandRunner.\npublic class CommandException extends RuntimeException;\n", "des": "Command infrastructure for the CLI."}
{"index": 1669, "repo": "spring-boot-cli-3.1.1", "code": "package core\n\n// Internal Command used for 'help' requests.\npublic class HelpCommand extends AbstractCommand;\n// Internal Command to provide hints for shell auto-completion.\npublic class HintCommand extends AbstractCommand;\n// Command to display the 'version' number.\npublic class VersionCommand extends AbstractCommand;\n", "des": "Core CLI commands."}
{"index": 1670, "repo": "spring-boot-cli-3.1.1", "code": "package encodepassword\n\n// Command to encode passwords for use with Spring Security.\npublic class EncodePasswordCommand extends OptionParsingCommand;\n", "des": "CLI command for password encoding."}
{"index": 1671, "repo": "spring-boot-cli-3.1.1", "code": "package init\n\n// Command that initializes a project using Spring initializr.\npublic class InitCommand extends OptionParsingCommand;\n// Exception with a message that can be reported to the user.\npublic class ReportableException extends RuntimeException;\n", "des": "CLI command for initializing a new application using Spring Initializr."}
{"index": 1672, "repo": "spring-boot-cli-3.1.1", "code": "package options\n\n// Delegate used by OptionParsingCommand to parse options and run the command.\npublic class OptionHandler extends Object;\n// Help for a specific option.\npublic interface OptionHelp;\n", "des": "Support classes for handling command line options."}
{"index": 1673, "repo": "spring-boot-cli-3.1.1", "code": "package shell\n\n// JLine Completer for Spring Boot Commands.\npublic class CommandCompleter extends jline.console.completer.StringsCompleter;\n// Command to change the Shell prompt.\npublic class PromptCommand extends AbstractCommand;\n// A shell for Spring Boot.\npublic class Shell extends Object;\n// Command to start a nested REPL shell.\npublic class ShellCommand extends AbstractCommand;\n// Exception used to stop the Shell.\npublic class ShellExitException extends CommandException;\n", "des": "Classes for running a nested shell in the CLI."}
{"index": 1674, "repo": "spring-boot-cli-3.1.1", "code": "package status\n\n// Encapsulation of the outcome of a command.\npublic final class ExitStatus extends Object;\n", "des": "CLI command status."}
{"index": 1675, "repo": "spring-boot-cli-3.1.1", "code": "package util\n\n// Simple logger used by the CLI.\npublic abstract class Log extends Object;\n", "des": "Utility classes for the CLI."}
{"index": 1676, "repo": "spring-oxm-6.0.11", "code": "package oxm\n\n// Subinterface of Marshaller that has support for generics.\npublic interface GenericMarshaller extends Marshaller;\n// Subinterface of Unmarshaller that has support for generics.\npublic interface GenericUnmarshaller extends Unmarshaller;\n// Defines the contract for Object XML Mapping Marshallers.\npublic interface Marshaller;\n// Base class for exception thrown when a marshalling or unmarshalling error occurs.\npublic abstract class MarshallingException extends XmlMappingException;\n", "des": "Root package for Spring's O/X Mapping integration classes."}
{"index": 1677, "repo": "spring-oxm-6.0.11", "code": "package config\n\n// NamespaceHandler for the 'oxm' namespace.\npublic class OxmNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Provides an namespace handler for the Spring Object/XML namespace."}
{"index": 1678, "repo": "spring-oxm-6.0.11", "code": "package jaxb\n\n// Implementation of the GenericMarshaller interface for JAXB 2.2.\npublic class Jaxb2Marshaller extends Object implements MimeMarshaller, MimeUnmarshaller, GenericMarshaller, GenericUnmarshaller, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Package providing integration of JAXB with Spring's O/X Mapping support."}
{"index": 1679, "repo": "spring-oxm-6.0.11", "code": "package mime\n\n// Represents a container for MIME attachments Concrete implementations might adapt a SOAPMessage or an email message.\npublic interface MimeContainer;\n// Subinterface of Marshaller that can use MIME attachments to optimize storage of binary data.\npublic interface MimeMarshaller extends Marshaller;\n// Subinterface of Unmarshaller that can use MIME attachments to optimize storage of binary data.\npublic interface MimeUnmarshaller extends Unmarshaller;\n", "des": "Contains (un)marshallers optimized to store binary data in MIME attachments."}
{"index": 1680, "repo": "spring-oxm-6.0.11", "code": "package support\n\n// Abstract implementation of the Marshaller and Unmarshaller interface.\npublic abstract class AbstractMarshaller extends Object implements Marshaller, Unmarshaller;\n// Source implementation that uses a Marshaller.Can be constructed with a Marshaller and an object to be marshalled.\npublic class MarshallingSource extends SAXSource;\n// Convenient utility methods for dealing with SAX.\npublic abstract class SaxResourceUtils extends Object;\n", "des": "Provides generic support classes for using Spring's O/X Mapping integration within various scenario's."}
{"index": 1681, "repo": "spring-oxm-6.0.11", "code": "package xstream\n\n// XStream Converter that supports all classes, but throws exceptions for (un)marshalling.\npublic class CatchAllConverter extends Object implements com.thoughtworks.xstream.converters.Converter;\n// Implementation of the Marshaller interface for XStream.\npublic class XStreamMarshaller extends AbstractMarshaller implements org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Package providing integration of XStream with Spring's O/X Mapping support."}
{"index": 1682, "repo": "spring-integration-mqtt-6.1.2", "code": "package xml\n\n// The MqttAdapter Message Driven Channel adapter parser.\npublic class MqttMessageDrivenChannelAdapterParser extends org.springframework.integration.config.xml.AbstractChannelAdapterParser;\n// The namespace handler for the MqttAdapter namespace.\npublic class MqttNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n", "des": "Provides parser classes to provide Xml namespace support for the MqttAdapter components."}
{"index": 1683, "repo": "spring-integration-mqtt-6.1.2", "code": "package core\n\n// Abstract class for MQTT client managers which can be a base for any common v3/v5 client manager implementation.\npublic abstract class AbstractMqttClientManager<T,C> extends Object implements ClientManager<T,C>, org.springframework.context.ApplicationEventPublisherAware;\n", "des": "Provides core classes of the MqttAdapter module."}
{"index": 1684, "repo": "spring-integration-mqtt-6.1.2", "code": "package event\n\n// The MqttIntegrationEvent to notify about lost connection to the server.\npublic class MqttConnectionFailedEvent extends MqttIntegrationEvent;\n// Base class for Mqtt Events.\npublic abstract class MqttIntegrationEvent extends org.springframework.integration.events.IntegrationEvent;\n// An event emitted (when using aysnc) when the client indicates the message was delivered.\npublic class MqttMessageDeliveredEvent extends MqttMessageDeliveryEvent;\n", "des": "ApplicationEvents generated by the mqtt module."}
{"index": 1685, "repo": "spring-integration-mqtt-6.1.2", "code": "package inbound\n\n// Abstract class for MQTT Message-Driven Channel Adapters.\n@ManagedResource @IntegrationManagedResource public abstract class AbstractMqttMessageDrivenChannelAdapter<T,C> extends org.springframework.integration.endpoint.MessageProducerSupport implements org.springframework.context.ApplicationEventPublisherAware, ClientManager.ConnectCallback;\n", "des": "Provides inbound Spring Integration MqttAdapter components."}
{"index": 1686, "repo": "spring-integration-mqtt-6.1.2", "code": "package outbound\n\n// Abstract class for MQTT outbound channel adapters.\npublic abstract class AbstractMqttMessageHandler<T,C> extends org.springframework.integration.handler.AbstractMessageHandler implements org.springframework.integration.support.management.ManageableLifecycle, org.springframework.context.ApplicationEventPublisherAware;\n", "des": "Provides Spring Integration components for doing outbound operations."}
{"index": 1687, "repo": "spring-integration-mqtt-6.1.2", "code": "package support\n\n// Default implementation for mapping to/from Messages.\npublic class DefaultPahoMessageConverter extends Object implements MqttMessageConverter, org.springframework.beans.factory.BeanFactoryAware;\n// Helper for typed access to incoming MQTT message headers.\npublic final class MqttHeaderAccessor extends Object;\n", "des": "Provides various support classes used across Spring Integration MqttAdapter Components."}
{"index": 1688, "repo": "spring-data-couchbase-5.1.2", "code": "package config\n\n// Base class for Spring Data Couchbase configuration using JavaConfig.\n@Configuration public abstract class AbstractCouchbaseConfiguration extends Object;\n// Contains default bean names for Couchbase beans.\npublic class BeanNames extends Object;\n", "des": "This package contains all classes needed for specific configuration of Spring Data Couchbase."}
{"index": 1689, "repo": "spring-data-couchbase-5.1.2", "code": "package core\n\n// Base shared by Reactive and non-Reactive TemplateSupport\n@Internal public abstract class AbstractTemplateSupport extends Object;\n// Defines the callback which will be wrapped and executed on a bucket.\npublic interface CollectionCallback<T>;\n// A Couchbase specific integrity violation exception, thrown as a result of failing db operations.\npublic class CouchbaseDataIntegrityViolationException extends DataIntegrityViolationException;\n", "des": "This package contains the specific implementations and core classes for Spring Data Couchbase internals."}
{"index": 1690, "repo": "spring-data-couchbase-5.1.2", "code": "package convert\n\n// An abstract CouchbaseConverter that provides the basics for the MappingCouchbaseConverter.\npublic abstract class AbstractCouchbaseConverter extends Object implements CouchbaseConverter, InitializingBean;\n// Reading Converter factory for Enums.\n@ReadingConverter public class BooleanToEnumConverterFactory extends Object implements ConverterFactory<Boolean,Enum>;\n", "des": "This package contains classes used for entity-to-JSON conversions, type mapping and writing."}
{"index": 1691, "repo": "spring-data-couchbase-5.1.2", "code": "package translation\n\n// A Jackson JSON Translator that implements the TranslationService contract.\npublic class JacksonTranslationService extends Object implements TranslationService, InitializingBean;\n// Defines a translation service to encode/decode responses into the CouchbaseStorable format.\npublic interface TranslationService;\n", "des": "This package contains a service interface to translate entities to a Couchbase storable format, and its implementations."}
{"index": 1692, "repo": "spring-data-couchbase-5.1.2", "code": "package mapping\n\n// The representation of a persistent entity.\npublic class BasicCouchbasePersistentEntity<T> extends BasicPersistentEntity<T,CouchbasePersistentProperty> implements CouchbasePersistentEntity<T>, EnvironmentAware;\n// Implements annotated property representations of a given Field instance.\npublic class BasicCouchbasePersistentProperty extends AnnotationBasedPersistentProperty<CouchbasePersistentProperty> implements CouchbasePersistentProperty;\n", "des": "This package contains interfaces and annotations relative to object-json mapping and the notion of a Couchbase Storable."}
{"index": 1693, "repo": "spring-data-couchbase-5.1.2", "code": "package event\n\n// Base class to implement domain class specific ApplicationListeners.\npublic class AbstractCouchbaseEventListener<E> extends Object implements ApplicationListener<CouchbaseMappingEvent<?>>;\n// Callback being invoked after a domain object is materialized from a CouchbaseDocument when reading results.\n@FunctionalInterface public interface AfterConvertCallback<T> extends EntityCallback<T>;\n// \npublic class AfterDeleteEvent<E> extends CouchbaseMappingEvent<E>;\n", "des": "This package contains various events that are emitted during the lifecycle of a Spring Data entity."}
{"index": 1694, "repo": "spring-data-couchbase-5.1.2", "code": "package query\n\n// \npublic class AnalyticsQuery extends Object;\n// Enumeration of different consistency configurations to be used by the queries generated by the framework.\npublic enum Consistency extends Enum<Consistency>;\n// \n@Documented @Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Deprecated public @interface Dimensional;\n// Setting for specify when to fetch the associated entities\npublic enum FetchType extends Enum<FetchType>;\n", "des": "This package contains annotations and classes relative to querying with Couchbase (whether through views or N1QL) and the associated indexes."}
{"index": 1695, "repo": "spring-data-couchbase-5.1.2", "code": "package repository\n\n// Collection Annotation\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE,TYPE}) @Documented public @interface Collection;\n// Couchbase specific Repository interface.\n@NoRepositoryBean public interface CouchbaseRepository<T,ID> extends PagingAndSortingRepository<T,ID>, CrudRepository<T,ID>;\n", "des": "This package contains the Couchbase interfaces to support the Spring Data repository abstraction."}
{"index": 1696, "repo": "spring-data-couchbase-5.1.2", "code": "package config\n\n// \npublic class CouchbaseRepositoriesRegistrar extends RepositoryBeanDefinitionRegistrarSupport;\n// \npublic class CouchbaseRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport;\n// Annotation to activate Couchbase repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(CouchbaseRepositoriesRegistrar.class) public @interface EnableCouchbaseRepositories;\n", "des": "This package contains the support classes to configure repositories in the context of Couchbase."}
{"index": 1697, "repo": "spring-data-couchbase-5.1.2", "code": "package query\n\n// RepositoryQuery implementation for Couchbase.\npublic abstract class AbstractCouchbaseQuery extends AbstractCouchbaseQueryBase<CouchbaseOperations> implements RepositoryQuery;\n// RepositoryQuery implementation for Couchbase.\npublic abstract class AbstractCouchbaseQueryBase<CouchbaseOperationsType> extends Object implements RepositoryQuery;\n// Abstract base for all Couchbase RepositoryQuery.\npublic abstract class AbstractN1qlBasedQuery extends Object implements RepositoryQuery;\n", "des": "This package contains classes related to query derivation and concrete ways of querying couchbase."}
{"index": 1698, "repo": "spring-data-couchbase-5.1.2", "code": "package support\n\n// A default PointInShapeEvaluator implementation based on the JDK's java.awt.geom classes.\npublic class AwtPointInShapeEvaluator extends PointInShapeEvaluator;\n// Utility class to deal with geo/dimensional indexed data and queries.\npublic class GeoUtils extends Object;\n// Utils for creating part tree expressions\npublic class N1qlQueryCreatorUtils extends Object;\n", "des": "This package contains support classes for query derivation and other ways of querying couchbase (helper classes)."}
{"index": 1699, "repo": "spring-data-couchbase-5.1.2", "code": "package support\n\n// BasicQuery for Querydsl\npublic class BasicQuery extends Query;\n// Annotation processor to create Querydsl query types for QueryDsl annotated classes.\n@SupportedAnnotationTypes({\"com.querydsl.core.annotations.*\",\"org.springframework.data.couchbase.core.mapping.*\"}) @SupportedSourceVersion(RELEASE_6) public class CouchbaseAnnotationProcessor extends com.querydsl.apt.AbstractQuerydslProcessor;\n", "des": "This package contains the Couchbase implementations to support the Spring Data repository abstraction."}
{"index": 1700, "repo": "drill-common-1.21.1", "code": "package common\n\n// A class similar to Pointer<>, but with features unique to holding AutoCloseable pointers.\npublic final class AutoCloseablePointer<T extends AutoCloseable> extends Object implements AutoCloseable;\n// Utilities for AutoCloseable classes.\npublic class AutoCloseables extends Object;\n// \npublic static interface AutoCloseables.Closeable extends AutoCloseable;\n// \npublic class CatastrophicFailure extends Object;\n", "des": "Logical (execution-engine-independent) element definitions."}
{"index": 1701, "repo": "drill-common-1.21.1", "code": "package config\n\n// \npublic interface ConfigConstants;\n// Interface that defines implementation to get all the config files names for default, module specific, distribution specific and override files.\npublic interface ConfigFileInfo;\n// \npublic interface ConfigProvider;\n// \npublic class DrillConfig extends Object;\n// \npublic class DrillExecConfigFileInfo extends Object implements ConfigFileInfo;\n// \npublic final class DrillProperties extends Properties;\n", "des": "Internal configuration state definitions."}
{"index": 1702, "repo": "drill-common-1.21.1", "code": "package exceptions\n\n// Represents an additional level of error context detail that adds to that provided by some outer context.\npublic class ChildErrorContext extends Object implements CustomErrorContext;\n// Generic mechanism to pass error context throughout the row set mechanism and scan framework.\npublic interface CustomErrorContext;\n// \npublic class DrillConfigurationException extends DrillException;\n// \npublic class DrillError extends Error;\n// \npublic class DrillException extends Exception;\n", "des": "Various exceptions used in logical, physical and execution contexts."}
{"index": 1703, "repo": "drill-common-1.21.1", "code": "package types\n\n// Enum that contains two boolean types: TRUE and FALSE.\npublic enum BooleanType extends Enum<BooleanType>;\n// \npublic class Types extends Object;\n", "des": "Logical data types."}
{"index": 1704, "repo": "drill-common-1.21.1", "code": "package util\n\n// \npublic class ConstructorChecker extends Object;\n// \npublic class DataInputInputStream extends InputStream;\n// \npublic class DataOutputOutputStream extends OutputStream;\n// Extends regular Instant.parse(java.lang.CharSequence) with more formats.\npublic class DrillDateTimeFormatter extends Object;\n// Utility class which contain methods for conversion Drill ProtoBuf Error and Throwable\npublic class DrillExceptionUtil extends Object;\n// \npublic class DrillFileUtils extends Object;\n", "des": "Utilities useful across packages."}
{"index": 1705, "repo": "spring-integration-jmx-6.1.2", "code": "package jmx\n\n// A MessageSource implementation that retrieves the current value of a JMX attribute each time AbstractMessageSource.receive() is invoked.\npublic class AttributePollingMessageSource extends org.springframework.integration.endpoint.AbstractMessageSource<Object>;\n// \npublic class DefaultMBeanAttributeFilter extends Object implements MBeanAttributeFilter;\n// \npublic class DefaultMBeanObjectConverter extends Object implements MBeanObjectConverter;\n", "des": "Base package for JMX support."}
{"index": 1706, "repo": "spring-integration-jmx-6.1.2", "code": "package config\n\n// \npublic class AttributePollingChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n// Enables default exporting for Spring Integration components in an existing application, as well as well all @ManagedResource annotated beans.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(IntegrationMBeanExportConfiguration.class) public @interface EnableIntegrationMBeanExport;\n", "des": "Provides classes for configuration - parsers, namespace handlers."}
{"index": 1707, "repo": "spring-integration-jmx-6.1.2", "code": "package monitor\n\n// The AnnotationJmxAttributeSource extension to resolve ManagedResources via IntegrationManagedResource on classes.\npublic class IntegrationJmxAttributeSource extends org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;\n", "des": "Provides classes related to Spring Integration managed resources."}
{"index": 1708, "repo": "spring-boot-test-3.1.1", "code": "package context\n\n// Utility class to find a class annotated with a particular annotation in a hierarchy.\npublic final class AnnotatedClassFinder extends Object;\n", "des": "Classes and annotations related to configuring Spring's ApplicationContext for tests."}
{"index": 1709, "repo": "spring-boot-test-3.1.1", "code": "package assertj\n\n// AssertJ assertions that can be applied to an ApplicationContext.\npublic class ApplicationContextAssert<C extends org.springframework.context.ApplicationContext> extends org.assertj.core.api.AbstractAssert<ApplicationContextAssert<C>,C>;\n// The scope of an assertion.\npublic static enum ApplicationContextAssert.Scope extends Enum<ApplicationContextAssert.Scope>;\n", "des": "AssertJ support for ApplicationContexts."}
{"index": 1710, "repo": "spring-boot-test-3.1.1", "code": "package runner\n\n// Utility design to run an ApplicationContext and provide AssertJ style assertions.\npublic abstract class AbstractApplicationContextRunner<SELF extends AbstractApplicationContextRunner<SELF,C,A>,C extends org.springframework.context.ConfigurableApplicationContext,A extends ApplicationContextAssertProvider<C>> extends Object;\n// A Bean registration to be applied when the context loaded.\nprotected static final class AbstractApplicationContextRunner.BeanRegistration<T> extends Object;\n", "des": "Test utilities to run application contexts for testing."}
{"index": 1711, "repo": "spring-boot-test-3.1.1", "code": "package json\n\n// Base class for AssertJ based JSON marshal testers.\npublic abstract class AbstractJsonMarshalTester<T> extends Object;\n// Utility class used to support field initialization.\nprotected abstract static class AbstractJsonMarshalTester.FieldInitializer<M> extends Object;\n// AssertJ based JSON tester that works with basic JSON strings.\npublic class BasicJsonTester extends Object;\n// AssertJ based JSON tester backed by Gson.\npublic class GsonTester<T> extends AbstractJsonMarshalTester<T>;\n", "des": "Support for testing JSON."}
{"index": 1712, "repo": "spring-boot-test-3.1.1", "code": "package mockito\n\n// Annotation that can be used to add mocks to a Spring ApplicationContext.\n@Target({TYPE,FIELD}) @Retention(RUNTIME) @Documented @Repeatable(MockBeans.class) public @interface MockBean;\n// Container annotation that aggregates several @MockBean annotations.\n@Retention(RUNTIME) @Target(TYPE) @Documented public @interface MockBeans;\n", "des": "Mockito integration for Spring Boot tests."}
{"index": 1713, "repo": "spring-boot-test-3.1.1", "code": "package web\n\n// MockServletContext implementation for Spring Boot.\npublic class SpringBootMockServletContext extends org.springframework.mock.web.MockServletContext;\n", "des": "Mock web classes specific to Spring Boot."}
{"index": 1714, "repo": "spring-boot-test-3.1.1", "code": "package server\n\n// Annotation at the field or method/constructor parameter level that injects the RSocket port that was allocated at runtime.\n@Target({FIELD,METHOD,PARAMETER,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Value(\"${local.rsocket.server.port}\") public @interface LocalRSocketServerPort;\n", "des": "RSocket server test utilities and support classes."}
{"index": 1715, "repo": "spring-boot-test-3.1.1", "code": "package system\n\n// Provides access to System.out and System.err output that has been captured by the OutputCaptureExtension or OutputCaptureRule.\npublic interface CapturedOutput extends CharSequence;\n", "des": "Classes for System-related testing."}
{"index": 1716, "repo": "spring-boot-test-3.1.1", "code": "package util\n\n// Application context related test utilities.\npublic abstract class ApplicationContextTestUtils extends Object;\n// Test utilities for adding properties.\npublic final class TestPropertyValues extends Object;\n// A single name value pair.\npublic static final class TestPropertyValues.Pair extends Object;\n// The type of property source.\npublic static enum TestPropertyValues.Type extends Enum<TestPropertyValues.Type>;\n", "des": "General purpose test utilities."}
{"index": 1717, "repo": "spring-boot-test-3.1.1", "code": "package client\n\n// UriTemplateHandler will automatically prefix relative URIs with localhost:${local.server.port}.\npublic class LocalHostUriTemplateHandler extends org.springframework.boot.web.client.RootUriTemplateHandler;\n// RestTemplateCustomizer that can be applied to a RestTemplateBuilder instances to add MockRestServiceServer support.\npublic class MockServerRestTemplateCustomizer extends Object implements org.springframework.boot.web.client.RestTemplateCustomizer;\n", "des": "Web client test utilities."}
{"index": 1718, "repo": "spring-boot-test-3.1.1", "code": "package htmlunit\n\n// WebClient will automatically prefix relative URLs with localhost:${local.server.port}.\npublic class LocalHostWebClient extends com.gargoylesoftware.htmlunit.WebClient;\n", "des": "HtmlUnit support classes."}
{"index": 1719, "repo": "spring-boot-test-3.1.1", "code": "package webdriver\n\n// LocalHostWebConnectionHtmlUnitDriver will automatically prefix relative URLs with localhost:${local.server.port}.\npublic class LocalHostWebConnectionHtmlUnitDriver extends org.springframework.test.web.servlet.htmlunit.webdriver.WebConnectionHtmlUnitDriver;\n", "des": "Selenium support classes."}
{"index": 1720, "repo": "spring-boot-test-3.1.1", "code": "package server\n\n// A customizer for a WebTestClient.Builder.\n@FunctionalInterface public interface WebTestClientBuilderCustomizer;\n", "des": "Spring Boot support for testing Spring WebFlux server endpoints via WebTestClient."}
{"index": 1721, "repo": "spring-boot-test-3.1.1", "code": "package server\n\n// Annotation at the field or method/constructor parameter level that injects the HTTP management port that was allocated at runtime.\n@Target({FIELD,METHOD,PARAMETER,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Value(\"${local.management.port}\") public @interface LocalManagementPort;\n", "des": "Web server test utilities and support classes."}
{"index": 1722, "repo": "spring-jdbc-6.0.11", "code": "package jdbc\n\n// Exception thrown when SQL specified is invalid.\npublic class BadSqlGrammarException extends org.springframework.dao.InvalidDataAccessResourceUsageException;\n// Fatal exception thrown when we can't connect to an RDBMS using JDBC.\npublic class CannotGetJdbcConnectionException extends org.springframework.dao.DataAccessResourceFailureException;\n", "des": "The classes in this package make JDBC easier to use and reduce the likelihood of common errors."}
{"index": 1723, "repo": "spring-jdbc-6.0.11", "code": "package config\n\n// NamespaceHandler for JDBC configuration namespace.\npublic class JdbcNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n// FactoryBean implementation that takes a list of location Strings and creates a sorted array of Resource instances.\npublic class SortedResourcesFactoryBean extends org.springframework.beans.factory.config.AbstractFactoryBean<org.springframework.core.io.Resource[]> implements org.springframework.context.ResourceLoaderAware;\n", "des": "Defines the Spring JDBC configuration namespace."}
{"index": 1724, "repo": "spring-jdbc-6.0.11", "code": "package core\n\n// Simple adapter for PreparedStatementSetter that applies a given array of arguments.\npublic class ArgumentPreparedStatementSetter extends Object implements PreparedStatementSetter, ParameterDisposer;\n// Simple adapter for PreparedStatementSetter that applies given arrays of arguments and JDBC argument types.\npublic class ArgumentTypePreparedStatementSetter extends Object implements PreparedStatementSetter, ParameterDisposer;\n", "des": "Provides the core JDBC framework, based on JdbcTemplate and its associated callback interfaces and helper objects."}
{"index": 1725, "repo": "spring-jdbc-6.0.11", "code": "package metadata\n\n// Class to manage context meta-data used for the configuration and execution of a stored procedure call.\npublic class CallMetaDataContext extends Object;\n// Interface specifying the API to be implemented by a class providing call meta-data.\npublic interface CallMetaDataProvider;\n// Factory used to create a CallMetaDataProvider implementation based on the type of database being used.\npublic final class CallMetaDataProviderFactory extends Object;\n", "des": "Context metadata abstraction for the configuration and execution of table inserts and stored procedure calls."}
{"index": 1726, "repo": "spring-jdbc-6.0.11", "code": "package namedparam\n\n// Abstract base class for SqlParameterSource implementations.\npublic abstract class AbstractSqlParameterSource extends Object implements SqlParameterSource;\n// SqlParameterSource implementation that obtains parameter values from bean properties of a given JavaBean object.\npublic class BeanPropertySqlParameterSource extends AbstractSqlParameterSource;\n", "des": "JdbcTemplate variant with named parameter support."}
{"index": 1727, "repo": "spring-jdbc-6.0.11", "code": "package simple\n\n// Abstract class to provide base functionality for easy stored procedure calls based on configuration options and database meta-data.\npublic abstract class AbstractJdbcCall extends Object;\n// Abstract class to provide base functionality for easy inserts based on configuration options and database meta-data.\npublic abstract class AbstractJdbcInsert extends Object;\n", "des": "Simplification layer for table inserts and stored procedure calls."}
{"index": 1728, "repo": "spring-jdbc-6.0.11", "code": "package support\n\n// Abstract implementation of the InterruptibleBatchPreparedStatementSetter interface, combining the check for available values and setting of those into a single callback method AbstractInterruptibleBatchPreparedStatementSetter.setValuesIfAvailable(java.sql.PreparedStatement, int).\npublic abstract class AbstractInterruptibleBatchPreparedStatementSetter extends Object implements InterruptibleBatchPreparedStatementSetter;\n", "des": "Classes supporting the org.springframework.jdbc.core package."}
{"index": 1729, "repo": "spring-jdbc-6.0.11", "code": "package datasource\n\n// Abstract base class for Spring's DataSource implementations, taking care of the padding.\npublic abstract class AbstractDataSource extends Object implements DataSource;\n// Abstract base class for JDBC DataSource implementations that operate on a JDBC Driver.\npublic abstract class AbstractDriverBasedDataSource extends AbstractDataSource;\n// Simple interface to be implemented by handles for a JDBC Connection.\n@FunctionalInterface public interface ConnectionHandle;\n", "des": "Provides a utility class for easy DataSource access, a PlatformTransactionManager for a single DataSource, and various simple DataSource implementations."}
{"index": 1730, "repo": "spring-jdbc-6.0.11", "code": "package embedded\n\n// ConnectionProperties serves as a simple data container that allows essential JDBC connection properties to be configured consistently, independent of the actual DataSource implementation.\npublic interface ConnectionProperties;\n// DataSourceFactory encapsulates the creation of a particular DataSource implementation such as a non-pooling SimpleDriverDataSource or a HikariCP pool setup in the shape of a HikariDataSource.\npublic interface DataSourceFactory;\n", "des": "Provides extensible support for creating embedded database instances."}
{"index": 1731, "repo": "spring-jdbc-6.0.11", "code": "package init\n\n// Thrown by ScriptUtils if an SQL script cannot be read.\npublic class CannotReadScriptException extends ScriptException;\n// Composite DatabasePopulator that delegates to a list of given DatabasePopulator implementations, executing all scripts.\npublic class CompositeDatabasePopulator extends Object implements DatabasePopulator;\n// Strategy used to populate, initialize, or clean up a database.\n@FunctionalInterface public interface DatabasePopulator;\n", "des": "Provides extensible support for initializing databases through scripts."}
{"index": 1732, "repo": "spring-jdbc-6.0.11", "code": "package lookup\n\n// Abstract DataSource implementation that routes AbstractRoutingDataSource.getConnection() calls to one of various target DataSources based on a lookup key.\npublic abstract class AbstractRoutingDataSource extends AbstractDataSource implements org.springframework.beans.factory.InitializingBean;\n", "des": "Provides a strategy for looking up JDBC DataSources by name."}
{"index": 1733, "repo": "spring-jdbc-6.0.11", "code": "package object\n\n// SqlUpdate subclass that performs batch update operations.\npublic class BatchSqlUpdate extends SqlUpdate;\n// A concrete variant of SqlQuery which can be configured with a RowMapper.\npublic class GenericSqlQuery<T> extends SqlQuery<T>;\n// Concrete implementation making it possible to define the RDBMS stored procedures in an application context without writing a custom Java implementation class.\npublic class GenericStoredProcedure extends StoredProcedure;\n", "des": "The classes in this package represent RDBMS queries, updates, and stored procedures as threadsafe, reusable objects."}
{"index": 1734, "repo": "spring-jdbc-6.0.11", "code": "package support\n\n// Base class for SQLExceptionTranslator implementations that allow for fallback to some other SQLExceptionTranslator.\npublic abstract class AbstractFallbackSQLExceptionTranslator extends Object implements SQLExceptionTranslator;\n// JavaBean for holding custom JDBC error codes translation for a particular database.\npublic class CustomSQLErrorCodesTranslation extends Object;\n", "des": "Support classes for the JDBC framework, used by the classes in the jdbc.core and jdbc.object packages."}
{"index": 1735, "repo": "spring-jdbc-6.0.11", "code": "package incrementer\n\n// Abstract base class for DataFieldMaxValueIncrementer implementations that use a column in a custom sequence table.\npublic abstract class AbstractColumnMaxValueIncrementer extends AbstractDataFieldMaxValueIncrementer;\n", "des": "Provides a support framework for incrementing database table values via sequences, with implementations for various databases."}
{"index": 1736, "repo": "spring-jdbc-6.0.11", "code": "package lob\n\n// Abstract base class for LobHandler implementations.\npublic abstract class AbstractLobHandler extends Object implements LobHandler;\n// Default implementation of the LobHandler interface.\npublic class DefaultLobHandler extends AbstractLobHandler;\n// Interface that abstracts potentially database-specific creation of large binary fields and large text fields.\npublic interface LobCreator extends Closeable;\n", "des": "Provides a strategy interface for Large OBject handling, as well as a customizable default implementation."}
{"index": 1737, "repo": "spring-jdbc-6.0.11", "code": "package rowset\n\n// The default implementation of Spring's SqlRowSet interface, wrapping a ResultSet, catching any SQLExceptions and translating them to a corresponding Spring InvalidResultSetAccessException.\npublic class ResultSetWrappingSqlRowSet extends Object implements SqlRowSet;\n", "des": "Provides a convenient holder for disconnected result sets."}
{"index": 1738, "repo": "spring-jdbc-6.0.11", "code": "package xml\n\n// Default implementation of the SqlXmlHandler interface.\npublic class Jdbc4SqlXmlHandler extends Object implements SqlXmlHandler;\n// Exception thrown when the underlying implementation does not support the requested feature of the API.\npublic class SqlXmlFeatureNotImplementedException extends org.springframework.dao.InvalidDataAccessApiUsageException;\n// Abstraction for handling XML fields in specific databases.\npublic interface SqlXmlHandler;\n", "des": "Abstraction for handling fields of SQLXML data type."}
{"index": 1739, "repo": "spring-batch-integration-5.0.2", "code": "package async\n\n// An ItemProcessor that delegates to a nested processor and in the background.\npublic class AsyncItemProcessor<I,O> extends Object implements org.springframework.batch.item.ItemProcessor<I,Future<O>>, org.springframework.beans.factory.InitializingBean;\n// \npublic class AsyncItemWriter<T> extends Object implements org.springframework.batch.item.ItemStreamWriter<Future<T>>, org.springframework.beans.factory.InitializingBean;\n", "des": "Components for executing item processing asynchronously and writing the results when processing is complete."}
{"index": 1740, "repo": "spring-batch-integration-5.0.2", "code": "package chunk\n\n// Exception indicating that a failure or early completion condition was detected in a remote worker.\npublic class AsynchronousFailureException extends org.springframework.batch.item.ItemWriterException;\n// Interface for a remote worker in the Remote Chunking pattern.\npublic interface ChunkHandler<T>;\n", "des": "Components for remote chunking."}
{"index": 1741, "repo": "spring-batch-integration-5.0.2", "code": "package annotation\n\n// Base configuration class for Spring Batch Integration factory beans.\n@Configuration(proxyBeanMethods=false) public class BatchIntegrationConfiguration extends Object implements org.springframework.beans.factory.InitializingBean;\n", "des": "APIs for the configuration of Spring Integration components through annotations."}
{"index": 1742, "repo": "spring-batch-integration-5.0.2", "code": "package xml\n\n// The namespace handler for the Spring Batch Integration namespace.\npublic class BatchIntegrationNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n// The parser for the Job-Launching Gateway, which will instantiate a JobLaunchingGatewayParser.\npublic class JobLaunchingGatewayParser extends org.springframework.integration.config.xml.AbstractConsumerEndpointParser;\n", "des": "APIs for the configuration of Spring Integration components through XML."}
{"index": 1743, "repo": "spring-batch-integration-5.0.2", "code": "package launch\n\n// The JobLaunchingGateway is used to launch Batch Jobs.\npublic class JobLaunchingGateway extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n// Message handler which uses strategies to convert a Message into a job and a set of job parameters\npublic class JobLaunchingMessageHandler extends Object implements JobLaunchRequestHandler;\n", "des": "Message based job launching components."}
{"index": 1744, "repo": "spring-batch-integration-5.0.2", "code": "package partition\n\n// A StepLocator implementation that just looks in its enclosing bean factory for components of type Step.\npublic class BeanFactoryStepLocator extends Object implements StepLocator, org.springframework.beans.factory.BeanFactoryAware;\n", "des": "Remote partitioning components."}
{"index": 1745, "repo": "spring-batch-integration-5.0.2", "code": "package step\n\n// \n@Deprecated(since=\"5.0\", forRemoval=true) public class DelegateStep extends AbstractStep;\n", "des": "Support classes related to steps when used with Spring Integration."}
{"index": 1746, "repo": "spring-data-mongodb-4.1.2", "code": "package mongodb\n\n// A MongoExpression using the ParameterBindingDocumentCodec for parsing a raw (json) expression.\npublic class BindableMongoExpression extends Object implements MongoExpression;\n// Is thrown when errors occur during bulk operations.\npublic class BulkOperationException extends DataAccessException;\n", "des": "Spring Data's MongoDB abstraction."}
{"index": 1747, "repo": "spring-data-mongodb-4.1.2", "code": "package config\n\n// Base class for Spring Data MongoDB configuration using JavaConfig with MongoClient.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractMongoClientConfiguration extends MongoConfigurationSupport;\n// Base class for reactive Spring Data MongoDB configuration using JavaConfig.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractReactiveMongoConfiguration extends MongoConfigurationSupport;\n", "des": "Spring XML namespace configuration for MongoDB specific repositories."}
{"index": 1748, "repo": "spring-data-mongodb-4.1.2", "code": "package core\n\n// Bulk operations for insert/update/remove actions on a collection.\npublic interface BulkOperations;\n// Mode for bulk operation.\npublic static enum BulkOperations.BulkMode extends Enum<BulkOperations.BulkMode>;\n// Message implementation specific to MongoDB Change Streams.\npublic class ChangeStreamEvent<T> extends Object;\n// Options applicable to MongoDB Change Streams.\npublic class ChangeStreamOptions extends Object;\n", "des": "MongoDB core support."}
{"index": 1749, "repo": "spring-data-mongodb-4.1.2", "code": "package aggregation\n\n// Gateway to accumulator aggregation operations.\npublic class AccumulatorOperators extends Object;\n// \npublic static class AccumulatorOperators.AccumulatorOperatorFactory extends Object;\n// AggregationExpression for $avg.\npublic static class AccumulatorOperators.Avg extends Object;\n// AggregationExpression for $covariancePop.\npublic static class AccumulatorOperators.CovariancePop extends Object;\n", "des": "Support for the MongoDB aggregation framework."}
{"index": 1750, "repo": "spring-data-mongodb-4.1.2", "code": "package annotation\n\n// Collation allows to define the rules used for language-specific string comparison.\n@Inherited @Retention(RUNTIME) @Target({TYPE,METHOD}) public @interface Collation;\n", "des": "Core Spring Data MongoDB annotations not limited to a special use case (like Query,...)."}
{"index": 1751, "repo": "spring-data-mongodb-4.1.2", "code": "package convert\n\n// Base class for MongoConverter implementations.\npublic abstract class AbstractMongoConverter extends Object implements MongoConverter, InitializingBean;\n// \npublic interface DbRefProxyHandler;\n// Used to resolve associations annotated with DBRef.\npublic interface DbRefResolver extends ReferenceResolver;\n// Callback interface to be used in conjunction with DbRefResolver.\npublic interface DbRefResolverCallback;\n", "des": "Spring Data MongoDB specific converter infrastructure."}
{"index": 1752, "repo": "spring-data-mongodb-4.1.2", "code": "package encryption\n\n// A specialized MongoValueConverter for encryptiong and decrypting properties.\npublic interface EncryptingConverter<S,T> extends MongoValueConverter<S,T>;\n// Default implementation of EncryptingConverter.\npublic class MongoEncryptionConverter extends Object implements EncryptingConverter<Object,Object>;\n", "des": "Converters integrating with explicit encryption mechanism of Client-Side Field Level Encryption."}
{"index": 1753, "repo": "spring-data-mongodb-4.1.2", "code": "package encryption\n\n// Component responsible for encrypting and decrypting values.\npublic interface Encryption<S,T>;\n// Context to encapsulate encryption for a specific MongoPersistentProperty.\npublic interface EncryptionContext;\n// The EncryptionKey represents a Data Encryption Key reference that can be either direct via the key id or its Key Alternative Name.\npublic interface EncryptionKey;\n// The key reference type.\npublic static enum EncryptionKey.Type extends Enum<EncryptionKey.Type>;\n", "des": "Infrastructure for explicit encryption mechanism of Client-Side Field Level Encryption."}
{"index": 1754, "repo": "spring-data-mongodb-4.1.2", "code": "package geo\n\n// Interface definition for structures defined in GeoJSON format.\npublic interface GeoJson<T extends Iterable<?>>;\n// Defines a GeoJsonGeometryCollection that consists of a List of GeoJson objects.\npublic class GeoJsonGeometryCollection extends Object implements GeoJson<Iterable<GeoJson<?>>>;\n// GeoJsonLineString is defined as list of at least 2 Points.\npublic class GeoJsonLineString extends GeoJsonMultiPoint;\n", "des": "Support for MongoDB geo-spatial queries."}
{"index": 1755, "repo": "spring-data-mongodb-4.1.2", "code": "package index\n\n// Mark a class to use compound indexes.\n@Target(TYPE) @Documented @Repeatable(CompoundIndexes.class) @Retention(RUNTIME) public @interface CompoundIndex;\n// Index definition to span multiple keys.\npublic class CompoundIndexDefinition extends Index;\n// Container annotation that allows to collect multiple CompoundIndex annotations.\n@Target(TYPE) @Documented @Retention(RUNTIME) public @interface CompoundIndexes;\n", "des": "Support for MongoDB document indexing."}
{"index": 1756, "repo": "spring-data-mongodb-4.1.2", "code": "package mapping\n\n// MongoDB specific MongoPersistentEntity implementation that adds Mongo specific meta-data such as the collection name and the like.\npublic class BasicMongoPersistentEntity<T> extends BasicPersistentEntity<T,MongoPersistentProperty> implements MongoPersistentEntity<T>;\n// MongoDB specific PersistentProperty implementation.\npublic class BasicMongoPersistentProperty extends AnnotationBasedPersistentProperty<MongoPersistentProperty> implements MongoPersistentProperty;\n", "des": "Infrastructure for the MongoDB document-to-object mapping subsystem."}
{"index": 1757, "repo": "spring-data-mongodb-4.1.2", "code": "package event\n\n// Base class for delete events.\npublic abstract class AbstractDeleteEvent<T> extends MongoMappingEvent<org.bson.Document>;\n// Base class to implement domain class specific ApplicationListeners.\npublic abstract class AbstractMongoEventListener<E> extends Object implements ApplicationListener<MongoMappingEvent<?>>;\n", "des": "Mapping event callback infrastructure for the MongoDB document-to-object mapping subsystem."}
{"index": 1758, "repo": "spring-data-mongodb-4.1.2", "code": "package mapreduce\n\n// \n@Deprecated public class MapReduceCounts extends Object;\n// \n@Deprecated public class MapReduceOptions extends Object;\n// \n@Deprecated public class MapReduceResults<T> extends Object implements Iterable<T>;\n// \n@Deprecated public class MapReduceTiming extends Object;\n", "des": "Support for MongoDB map-reduce operations."}
{"index": 1759, "repo": "spring-data-mongodb-4.1.2", "code": "package messaging\n\n// Cancelable allows stopping long running tasks and freeing underlying resources.\npublic interface Cancelable;\n// SubscriptionRequest implementation to be used for listening to Change Streams via a MessageListenerContainer using the synchronous MongoDB Java driver.\npublic class ChangeStreamRequest<T> extends Object implements SubscriptionRequest<com.mongodb.client.model.changestream.ChangeStreamDocument<org.bson.Document>,T,ChangeStreamRequest.ChangeStreamRequestOptions>;\n", "des": "MongoDB specific messaging support for listening to eg."}
{"index": 1760, "repo": "spring-data-mongodb-4.1.2", "code": "package query\n\n// Custom Query implementation to setup a basic query from some arbitrary JSON query string.\npublic class BasicQuery extends Query;\n// \npublic class BasicUpdate extends Update;\n// Central abstraction for MongoDB collation support.\npublic class Collation extends Object;\n// \npublic static class Collation.Alternate extends Object;\n// \npublic static class Collation.AlternateWithMaxVariable extends Collation.Alternate;\n// \npublic static class Collation.CaseFirst extends Object;\n", "des": "MongoDB specific query and update support."}
{"index": 1761, "repo": "spring-data-mongodb-4.1.2", "code": "package schema\n\n// JsonSchemaProperty implementation.\npublic class IdentifiableJsonSchemaProperty<T extends JsonSchemaObject> extends Object implements JsonSchemaProperty;\n// Convenience JsonSchemaProperty implementation for a type : 'array' property.\npublic static class IdentifiableJsonSchemaProperty.ArrayJsonSchemaProperty extends IdentifiableJsonSchemaProperty<TypedJsonSchemaObject.ArrayJsonSchemaObject>;\n", "des": "MongoDB-specific JSON schema implementation classes."}
{"index": 1762, "repo": "spring-data-mongodb-4.1.2", "code": "package script\n\n// \n@Deprecated public class ExecutableMongoScript extends Object;\n// \n@Deprecated public class NamedMongoScript extends Object;\n", "des": "Abstraction classes javascript function execution within MongoDB Server."}
{"index": 1763, "repo": "spring-data-mongodb-4.1.2", "code": "package spel\n\n// A value object for nodes in an expression.\npublic class ExpressionNode extends Object implements Iterable<ExpressionNode>;\n// The context for an ExpressionNode transformation.\npublic class ExpressionTransformationContextSupport<T extends ExpressionNode> extends Object;\n// SPI interface to implement components that can transform an ExpressionTransformationContextSupport into an object.\npublic interface ExpressionTransformer<T extends ExpressionTransformationContextSupport<?>>;\n", "des": "Support classes to transform SpEL expressions into MongoDB expressions."}
{"index": 1764, "repo": "spring-data-mongodb-4.1.2", "code": "package validation\n\n// Provides a validator object to be used for collection validation via CollectionOptions.ValidationOptions.\npublic interface Validator;\n", "des": "MongoDB schema validation specifics."}
{"index": 1765, "repo": "spring-data-mongodb-4.1.2", "code": "package gridfs\n\n// GridFs-specific helper class to define Criterias.\npublic class GridFsCriteria extends Criteria;\n// A common interface when dealing with GridFs items using Spring Data.\npublic interface GridFsObject<ID,CONTENT>;\n// Additional, context relevant information.\npublic static class GridFsObject.Options extends Object;\n// Collection of operations to store and read files from MongoDB GridFS.\npublic interface GridFsOperations extends ResourcePatternResolver;\n", "des": "Support for MongoDB GridFS feature."}
{"index": 1766, "repo": "spring-data-mongodb-4.1.2", "code": "package monitor\n\n// Base class to encapsulate common configuration settings when connecting to a database\npublic abstract class AbstractMonitor extends Object;\n// JMX Metrics for assertions\n@ManagedResource(description=\"Assertion Metrics\") public class AssertMetrics extends AbstractMonitor;\n// JMX Metrics for Background Flushing\n@ManagedResource(description=\"Background Flushing Metrics\") public class BackgroundFlushingMetrics extends AbstractMonitor;\n", "des": "MongoDB specific JMX monitoring support."}
{"index": 1767, "repo": "spring-data-mongodb-4.1.2", "code": "package observability\n\n// Factory to create a ContextProvider to propagate the request context across tasks.\npublic class ContextProviderFactory extends Object;\n// ObservationConvention for MongoHandlerContext.\npublic interface MongoHandlerObservationConvention extends io.micrometer.observation.ObservationConvention<org.springframework.data.mongodb.observability.MongoHandlerContext>;\n", "des": "Infrastructure to provide driver observability using Micrometer."}
{"index": 1768, "repo": "spring-data-mongodb-4.1.2", "code": "package repository\n\n// The Aggregation annotation can be used to annotate a Repository query method so that it runs the Aggregation.pipeline() on invocation.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented public @interface Aggregation;\n// Annotation to declare finder count queries directly on repository methods.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @Query(count=true) public @interface CountQuery;\n", "des": "MongoDB specific repository implementation."}
{"index": 1769, "repo": "spring-data-mongodb-4.1.2", "code": "package aot\n\n// \npublic class AotMongoRepositoryPostProcessor extends RepositoryRegistrationAotProcessor;\n", "des": "Ahead-Of-Time processors for MongoDB repositories."}
{"index": 1770, "repo": "spring-data-mongodb-4.1.2", "code": "package cdi\n\n// CdiRepositoryBean to create Mongo repository instances.\npublic class MongoRepositoryBean<T> extends CdiRepositoryBean<T>;\n// CDI extension to export Mongo repositories.\npublic class MongoRepositoryExtension extends CdiRepositoryExtensionSupport;\n", "des": "CDI support for MongoDB specific repository implementation."}
{"index": 1771, "repo": "spring-data-mongodb-4.1.2", "code": "package config\n\n// Annotation to activate MongoDB repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(org.springframework.data.mongodb.repository.config.MongoRepositoriesRegistrar.class) public @interface EnableMongoRepositories;\n", "des": "Support infrastructure for the configuration of MongoDB specific repositories."}
{"index": 1772, "repo": "spring-data-mongodb-4.1.2", "code": "package query\n\n// Base class for RepositoryQuery implementations for Mongo.\npublic abstract class AbstractMongoQuery extends Object implements RepositoryQuery;\n// Base class for reactive RepositoryQuery implementations for MongoDB.\npublic abstract class AbstractReactiveMongoQuery extends Object implements RepositoryQuery;\n// Custom ParameterAccessor that uses a MongoWriter to serialize parameters into Mongo format.\npublic class ConvertingParameterAccessor extends Object implements MongoParameterAccessor;\n", "des": "Query derivation mechanism for MongoDB specific repositories."}
{"index": 1773, "repo": "spring-data-mongodb-4.1.2", "code": "package support\n\n// MongoEntityInformation implementation using a MongoPersistentEntity instance to lookup the necessary information.\npublic class MappingMongoEntityInformation<T,ID> extends PersistentEntityInformation<T,ID> implements MongoEntityInformation<T,ID>;\n", "des": "Support infrastructure for query derivation of MongoDB specific repositories."}
{"index": 1774, "repo": "spring-data-mongodb-4.1.2", "code": "package util\n\n// Internal API for operations on Bson elements that can be either Document or DBObject.\npublic class BsonUtils extends Object;\n// \npublic class DBObjectUtils extends Object;\n// Value object representing a dot path.\npublic class DotPath extends Object;\n// MongoClientVersion holds information about the used mongo-java client and is used to distinguish between different versions.\npublic class MongoClientVersion extends Object;\n", "des": "MongoDB driver-specific utility classes for Bson and DBObject interaction."}
{"index": 1775, "repo": "spring-data-mongodb-4.1.2", "code": "package json\n\n// Reusable context for binding parameters to a placeholder or a SpEL expression within a JSON structure.\npublic class ParameterBindingContext extends Object;\n// A Codec implementation that allows binding parameters to placeholders or SpEL expressions when decoding a JSON String.\npublic class ParameterBindingDocumentCodec extends Object implements org.bson.codecs.CollectibleCodec<org.bson.Document>;\n", "des": "MongoDB driver-specific utility classes for Json conversion."}
{"index": 1776, "repo": "slf4j-api-2.0.7", "code": "package slf4j\n\n// ILoggerFactory instances manufacture Logger instances by name.\npublic interface ILoggerFactory;\n// Implementations of this interface are used to manufacture Marker instances.\npublic interface IMarkerFactory;\n// The org.slf4j.Logger interface is the main user entry point of SLF4J API.\npublic interface Logger;\n", "des": "Core logging interfaces."}
{"index": 1777, "repo": "slf4j-api-2.0.7", "code": "package helpers\n\n// An abstract implementation which delegates actual logging work to the AbstractLogger.handleNormalizedLoggingCall(Level, Marker, String, Object[], Throwable) method.\npublic abstract class AbstractLogger extends Object implements Logger, Serializable;\n// A simple implementation of the Marker interface.\npublic class BasicMarker extends Object implements Marker;\n", "des": "Helper classes."}
{"index": 1778, "repo": "slf4j-api-2.0.7", "code": "package spi\n\n// Additional interface to LoggingEventBuilder and LoggingEvent.\npublic interface CallerBoundaryAware;\n// Default implementation of LoggingEventBuilder\npublic class DefaultLoggingEventBuilder extends Object implements LoggingEventBuilder, CallerBoundaryAware;\n// An optional interface helping integration with logging systems capable of extracting location information.\npublic interface LocationAwareLogger extends Logger;\n// \npublic interface LoggerFactoryBinder;\n", "des": "Classes and interfaces which are internal to SLF4J."}
{"index": 1779, "repo": "spring-integration-file-6.1.2", "code": "package file\n\n// Default directory scanner and base class for other directory scanners.\npublic class DefaultDirectoryScanner extends Object implements DirectoryScanner;\n// Default implementation of the filename generator strategy.\npublic class DefaultFileNameGenerator extends org.springframework.integration.util.AbstractExpressionEvaluator implements FileNameGenerator;\n// Strategy for scanning directories.\npublic interface DirectoryScanner;\n", "des": "Base package for File support."}
{"index": 1780, "repo": "spring-integration-file-6.1.2", "code": "package aggregator\n\n// An AbstractAggregatingMessageGroupProcessor implementation for file content collecting previously splitted by the FileSplitter with the markers option turned on.\npublic class FileAggregatingMessageGroupProcessor extends org.springframework.integration.aggregator.AbstractAggregatingMessageGroupProcessor;\n", "des": "Provides support classes for file-based aggregation logic."}
{"index": 1781, "repo": "spring-integration-file-6.1.2", "code": "package config\n\n// Base class for File payload transformer parsers.\npublic abstract class AbstractFilePayloadTransformerParser extends org.springframework.integration.config.xml.AbstractTransformerParser;\n// Abstract base class for parsing remote file inbound channel adapters.\npublic abstract class AbstractRemoteFileInboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n", "des": "Provides classes for configuration - parsers, namespace handlers, factory beans."}
{"index": 1782, "repo": "spring-integration-file-6.1.2", "code": "package dsl\n\n// A MessageSourceSpec for a FileReadingMessageSource.\npublic class FileInboundChannelAdapterSpec extends org.springframework.integration.dsl.MessageSourceSpec<FileInboundChannelAdapterSpec,FileReadingMessageSource> implements org.springframework.integration.dsl.ComponentsRegistration;\n// The Spring Integration File components Factory.\npublic abstract class Files extends Object;\n", "des": "Provides File Components support for Spring Integration Java DSL."}
{"index": 1783, "repo": "spring-integration-file-6.1.2", "code": "package event\n\n// \npublic abstract class FileIntegrationEvent extends org.springframework.integration.events.IntegrationEvent;\n", "des": "ApplicationEvents generated by the file module."}
{"index": 1784, "repo": "spring-integration-file-6.1.2", "code": "package filters\n\n// A file list filter that can be configured to always accept (pass) directories.\npublic abstract class AbstractDirectoryAwareFileListFilter<F> extends AbstractFileListFilter<F>;\n// A convenience base class for any FileListFilter whose criteria can be evaluated against each File in isolation.\npublic abstract class AbstractFileListFilter<F> extends Object implements FileListFilter<F>;\n", "des": "Provides classes supporting file filtering."}
{"index": 1785, "repo": "spring-integration-file-6.1.2", "code": "package locking\n\n// Convenience base class for implementing FileLockers that check a lock before accepting a file.\npublic abstract class AbstractFileLockerFilter extends AbstractFileListFilter<File> implements FileLocker;\n// File locking strategy that uses java.nio.\npublic class NioFileLocker extends AbstractFileLockerFilter;\n", "des": "Provides classes supporting file locking."}
{"index": 1786, "repo": "spring-integration-file-6.1.2", "code": "package remote\n\n// Abstract implementation of FileInfo; provides a setter for the remote directory and a generic toString implementation.\npublic abstract class AbstractFileInfo<F> extends Object implements FileInfo<F>, Comparable<FileInfo<F>>;\n", "des": "Base package for supporting remote files."}
{"index": 1787, "repo": "spring-integration-file-6.1.2", "code": "package aop\n\n// A smart poller advice that rotates across multiple remote servers/directories.\npublic class RotatingServerAdvice extends Object implements org.springframework.integration.aop.MessageSourceMutator;\n// A strategy for rotating advices to allow reconfiguring the message source before and/or after a poll.\npublic interface RotationPolicy;\n// A key for a thread-local store and its related directory pair.\npublic static class RotationPolicy.KeyDirectory extends Object;\n", "des": "Provides classes related to AOP."}
{"index": 1788, "repo": "spring-integration-file-6.1.2", "code": "package gateway\n\n// Base class for Outbound Gateways that perform remote file operations.\npublic abstract class AbstractRemoteFileOutboundGateway<F> extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n// Enumeration of commands supported by the gateways.\npublic static enum AbstractRemoteFileOutboundGateway.Command extends Enum<AbstractRemoteFileOutboundGateway.Command>;\n", "des": "Provides classes supporting remote file gateways."}
{"index": 1789, "repo": "spring-integration-file-6.1.2", "code": "package handler\n\n// A MessageHandler implementation that transfers files to a remote server.\npublic class FileTransferringMessageHandler<F> extends org.springframework.integration.handler.AbstractMessageHandler;\n", "des": "Provides classes supporting remote file message handlers."}
{"index": 1790, "repo": "spring-integration-file-6.1.2", "code": "package server\n\n// Base class for file server events.\npublic abstract class FileServerEvent extends org.springframework.integration.events.IntegrationEvent;\n", "des": "Provides classes related to file servers."}
{"index": 1791, "repo": "spring-integration-file-6.1.2", "code": "package session\n\n// A SessionFactory implementation that caches Sessions for reuse without requiring reconnection each time the Session is retrieved from the factory.\npublic class CachingSessionFactory<F> extends Object implements SessionFactory<F>, org.springframework.beans.factory.DisposableBean;\n", "des": "Provides classes supporting remote file sessions."}
{"index": 1792, "repo": "spring-integration-file-6.1.2", "code": "package synchronizer\n\n// Base class charged with knowing how to connect to a remote file system, scan it for new files and then download the files.\npublic abstract class AbstractInboundFileSynchronizer<F> extends Object implements InboundFileSynchronizer, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean, Closeable;\n", "des": "Provides classes supporting the synchronization of remote and local file directories."}
{"index": 1793, "repo": "spring-integration-file-6.1.2", "code": "package splitter\n\n// The AbstractMessageSplitter implementation to split the File Message payload to lines.\npublic class FileSplitter extends org.springframework.integration.splitter.AbstractMessageSplitter;\n// \npublic static class FileSplitter.FileMarker extends Object implements Serializable;\n// \npublic static enum FileSplitter.FileMarker.Mark extends Enum<FileSplitter.FileMarker.Mark>;\n", "des": "Provides implementations of AbstractMessageSplitter."}
{"index": 1794, "repo": "spring-integration-file-6.1.2", "code": "package support\n\n// When writing file, this enumeration indicates what action shall be taken in case the destination file already exists.\npublic enum FileExistsMode extends Enum<FileExistsMode>;\n// Utilities for operations on Files.\npublic final class FileUtils extends Object;\n", "des": "Provides various support classes used across Spring Integration File Components."}
{"index": 1795, "repo": "spring-integration-file-6.1.2", "code": "package tail\n\n// File tailer that delegates to the Apache Commons Tailer.\npublic class ApacheCommonsFileTailingMessageProducer extends FileTailingMessageProducerSupport implements org.apache.commons.io.input.TailerListener;\n// Base class for file tailing inbound adapters.\npublic abstract class FileTailingMessageProducerSupport extends org.springframework.integration.endpoint.MessageProducerSupport implements org.springframework.context.ApplicationEventPublisherAware;\n", "des": "Classes used for tailing file system files."}
{"index": 1796, "repo": "spring-integration-file-6.1.2", "code": "package transformer\n\n// Base class for transformers that convert a File payload.\npublic abstract class AbstractFilePayloadTransformer<T> extends Object implements org.springframework.integration.transformer.Transformer, org.springframework.beans.factory.BeanFactoryAware;\n// A payload transformer that copies a File's contents to a byte array.\npublic class FileToByteArrayTransformer extends AbstractFilePayloadTransformer<byte[]>;\n", "des": "Provides classes supporting the transformation of file contents to messages."}
{"index": 1797, "repo": "spring-aop-6.0.11", "code": "package aop\n\n// Tag interface for Advice.\npublic interface Advice;\n// Superclass for all AOP infrastructure exceptions.\npublic class AspectException extends RuntimeException;\n", "des": "The core AOP Alliance advice marker."}
{"index": 1798, "repo": "spring-aop-6.0.11", "code": "package intercept\n\n// Intercepts the construction of a new object.\npublic interface ConstructorInterceptor extends Interceptor;\n// Description of an invocation to a constructor, given to an interceptor upon constructor-call.\npublic interface ConstructorInvocation extends Invocation;\n// This interface represents a generic interceptor.\npublic interface Interceptor extends Advice;\n// This interface represents an invocation in the program.\npublic interface Invocation extends Joinpoint;\n", "des": "The AOP Alliance reflective interception abstraction."}
{"index": 1799, "repo": "spring-aop-6.0.11", "code": "package aop\n\n// Base interface holding AOP advice (action to take at a joinpoint) and a filter determining the applicability of the advice (such as a pointcut).\npublic interface Advisor;\n// Common marker interface for after advice, such as AfterReturningAdvice and ThrowsAdvice.\npublic interface AfterAdvice extends Advice;\n// After returning advice is invoked only on normal method return, not if an exception is thrown.\npublic interface AfterReturningAdvice extends AfterAdvice;\n", "des": "Core Spring AOP interfaces, built on AOP Alliance AOP interoperability interfaces."}
{"index": 1800, "repo": "spring-aop-6.0.11", "code": "package aspectj\n\n// Base class for AOP Alliance Advice classes wrapping an AspectJ aspect or an AspectJ-annotated advice method.\npublic abstract class AbstractAspectJAdvice extends Object implements Advice, AspectJPrecedenceInformation, Serializable;\n// Interface implemented to provide an instance of an AspectJ aspect.\npublic interface AspectInstanceFactory extends org.springframework.core.Ordered;\n", "des": "AspectJ integration package."}
{"index": 1801, "repo": "spring-aop-6.0.11", "code": "package annotation\n\n// Abstract base class for factories that can create Spring AOP Advisors given AspectJ classes from classes honoring the AspectJ 5 annotation syntax.\npublic abstract class AbstractAspectJAdvisorFactory extends Object implements AspectJAdvisorFactory;\n// Class modeling an AspectJ annotation, exposing its type enumeration and pointcut String.\nprotected static class AbstractAspectJAdvisorFactory.AspectJAnnotation extends Object;\n", "des": "Classes enabling AspectJ 5 @Annotated classes to be used in Spring AOP."}
{"index": 1802, "repo": "spring-aop-6.0.11", "code": "package autoproxy\n\n// AbstractAdvisorAutoProxyCreator subclass that exposes AspectJ's invocation context and understands AspectJ's rules for advice precedence when multiple pieces of advice come from the same aspect.\npublic class AspectJAwareAdvisorAutoProxyCreator extends AbstractAdvisorAutoProxyCreator;\n", "des": "Base classes enabling auto-proxying based on AspectJ."}
{"index": 1803, "repo": "spring-aop-6.0.11", "code": "package config\n\n// Base implementation for BeanDefinitionDecorators wishing to add an interceptor to the resulting bean.\npublic abstract class AbstractInterceptorDrivenBeanDefinitionDecorator extends Object implements org.springframework.beans.factory.xml.BeanDefinitionDecorator;\n// ParseState entry representing an advice element.\npublic class AdviceEntry extends Object implements org.springframework.beans.factory.parsing.ParseState.Entry;\n", "des": "Support package for declarative AOP configuration, with XML schema being the primary configuration format."}
{"index": 1804, "repo": "spring-aop-6.0.11", "code": "package framework\n\n// Base class for BeanPostProcessor implementations that apply a Spring AOP Advisor to specific beans.\npublic abstract class AbstractAdvisingBeanPostProcessor extends ProxyProcessorSupport implements org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor;\n", "des": "Package containing Spring's basic AOP infrastructure, compliant with the AOP Alliance interfaces."}
{"index": 1805, "repo": "spring-aop-6.0.11", "code": "package adapter\n\n// Interface allowing extension to the Spring AOP framework to allow handling of new Advisors and Advice types.\npublic interface AdvisorAdapter;\n// BeanPostProcessor that registers AdvisorAdapter beans in the BeanFactory with an AdvisorAdapterRegistry (by default the GlobalAdvisorAdapterRegistry).\npublic class AdvisorAdapterRegistrationManager extends Object implements org.springframework.beans.factory.config.BeanPostProcessor;\n", "des": "SPI package allowing Spring AOP framework to handle arbitrary advice types."}
{"index": 1806, "repo": "spring-aop-6.0.11", "code": "package autoproxy\n\n// Generic auto proxy creator that builds AOP proxies for specific beans based on detected Advisors for each bean.\npublic abstract class AbstractAdvisorAutoProxyCreator extends AbstractAutoProxyCreator;\n", "des": "Bean post-processors for use in ApplicationContexts to simplify AOP usage by automatically creating AOP proxies without the need to use a ProxyFactoryBean."}
{"index": 1807, "repo": "spring-aop-6.0.11", "code": "package target\n\n// Convenient superclass for TargetSourceCreator implementations that require creating multiple instances of a prototype bean.\npublic abstract class AbstractBeanFactoryBasedTargetSourceCreator extends Object implements TargetSourceCreator, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.DisposableBean;\n", "des": "Various TargetSourceCreator implementations for use with Spring's AOP auto-proxying support."}
{"index": 1808, "repo": "spring-aop-6.0.11", "code": "package interceptor\n\n// Base class for monitoring interceptors, such as performance monitors.\npublic abstract class AbstractMonitoringInterceptor extends AbstractTraceInterceptor;\n// Base MethodInterceptor implementation for tracing.\npublic abstract class AbstractTraceInterceptor extends Object implements MethodInterceptor, Serializable;\n", "des": "Provides miscellaneous interceptor implementations."}
{"index": 1809, "repo": "spring-aop-6.0.11", "code": "package scope\n\n// Default implementation of the ScopedObject interface.\npublic class DefaultScopedObject extends Object implements ScopedObject, Serializable;\n// An AOP introduction interface for scoped objects.\npublic interface ScopedObject extends RawTargetAccess;\n", "des": "Support for AOP-based scoping of target objects, with configurable backend."}
{"index": 1810, "repo": "spring-aop-6.0.11", "code": "package support\n\n// Abstract BeanFactory-based PointcutAdvisor that allows for any Advice to be configured as reference to an Advice bean in a BeanFactory.\npublic abstract class AbstractBeanFactoryPointcutAdvisor extends AbstractPointcutAdvisor implements org.springframework.beans.factory.BeanFactoryAware;\n// Abstract superclass for expression pointcuts, offering location and expression properties.\npublic abstract class AbstractExpressionPointcut extends Object implements ExpressionPointcut, Serializable;\n", "des": "Convenience classes for using Spring's AOP API."}
{"index": 1811, "repo": "spring-aop-6.0.11", "code": "package annotation\n\n// Simple ClassFilter that looks for a specific annotation being present on a class.\npublic class AnnotationClassFilter extends Object implements ClassFilter;\n// Simple Pointcut that looks for a specific annotation being present on a class or method.\npublic class AnnotationMatchingPointcut extends Object implements Pointcut;\n", "des": "Annotation support for AOP pointcuts."}
{"index": 1812, "repo": "spring-aop-6.0.11", "code": "package target\n\n// Base class for TargetSource implementations that are based on a Spring BeanFactory, delegating to Spring-managed bean instances.\npublic abstract class AbstractBeanFactoryBasedTargetSource extends Object implements TargetSource, org.springframework.beans.factory.BeanFactoryAware, Serializable;\n// TargetSource implementation that will lazily create a user-managed object.\npublic abstract class AbstractLazyCreationTargetSource extends Object implements TargetSource;\n", "des": "Various TargetSource implementations for use with Spring AOP."}
{"index": 1813, "repo": "spring-aop-6.0.11", "code": "package dynamic\n\n// Abstract TargetSource implementation that wraps a refreshable target object.\npublic abstract class AbstractRefreshableTargetSource extends Object implements TargetSource, Refreshable;\n// Refreshable TargetSource that fetches fresh target beans from a BeanFactory.\npublic class BeanFactoryRefreshableTargetSource extends AbstractRefreshableTargetSource;\n", "des": "Support for dynamic, refreshable TargetSource implementations for use with Spring AOP."}
{"index": 1814, "repo": "spring-integration-mail-6.1.2", "code": "package mail\n\n// Base class for MailReceiver implementations.\npublic abstract class AbstractMailReceiver extends org.springframework.integration.context.IntegrationObjectSupport implements MailReceiver, org.springframework.beans.factory.DisposableBean;\n", "des": "Base package for Mail support."}
{"index": 1815, "repo": "spring-integration-mail-6.1.2", "code": "package config\n\n// Parser for the <imap-idle-channel-adapter> element in the 'mail' namespace.\npublic class ImapIdleChannelAdapterParser extends org.springframework.integration.config.xml.AbstractChannelAdapterParser;\n// \npublic class MailHeaderEnricherParser extends org.springframework.integration.config.xml.HeaderEnricherParserSupport;\n", "des": "Provides classes for configuration - parsers, namespace handlers."}
{"index": 1816, "repo": "spring-integration-mail-6.1.2", "code": "package dsl\n\n// A MessageProducerSpec for a ImapIdleChannelAdapter.\npublic class ImapIdleChannelAdapterSpec extends org.springframework.integration.dsl.MessageProducerSpec<ImapIdleChannelAdapterSpec,ImapIdleChannelAdapter> implements org.springframework.integration.dsl.ComponentsRegistration;\n// A MailInboundChannelAdapterSpec for IMAP.\npublic class ImapMailInboundChannelAdapterSpec extends MailInboundChannelAdapterSpec<ImapMailInboundChannelAdapterSpec,ImapMailReceiver>;\n", "des": "Provides Mail Components for the Java DSL."}
{"index": 1817, "repo": "spring-integration-mail-6.1.2", "code": "package event\n\n// \npublic abstract class MailIntegrationEvent extends org.springframework.integration.events.IntegrationEvent;\n", "des": "Events generated by the mail module"}
{"index": 1818, "repo": "spring-integration-mail-6.1.2", "code": "package support\n\n// Maps an inbound MimeMessage to a Map.\npublic class DefaultMailHeaderMapper extends Object implements org.springframework.integration.mapping.HeaderMapper<jakarta.mail.internet.MimeMessage>;\n// Utilities for handling mail messages.\npublic final class MailUtils extends Object;\n", "des": "Provides classes to support email."}
{"index": 1819, "repo": "spring-integration-mail-6.1.2", "code": "package transformer\n\n// Base class for Transformers that convert from a JavaMail Message to a Spring Integration Message.\npublic abstract class AbstractMailMessageTransformer<T> extends Object implements org.springframework.integration.transformer.Transformer, org.springframework.beans.factory.BeanFactoryAware;\n// Transforms a Message payload of type Message to a String.\npublic class MailToStringTransformer extends AbstractMailMessageTransformer<String>;\n", "des": "Provides classes related to transforming mail messages."}
{"index": 1820, "repo": "pulsar-client-original-3.0.0", "code": "package impl\n\n// Batch message container framework.\npublic abstract class AbstractBatchMessageContainer extends Object implements BatchMessageContainerBase;\n// Acknowledgments grouping tracker.\npublic interface AcknowledgmentsGroupingTracker extends AutoCloseable;\n// \npublic class AuthenticationUtil extends Object;\n// \npublic class AutoClusterFailover extends Object implements ServiceUrlProvider;\n", "des": "Pulsar Client implementation."}
{"index": 1821, "repo": "pulsar-client-original-3.0.0", "code": "package auth\n\n// \npublic class AuthenticationBasic extends Object implements Authentication, EncodedAuthenticationParameterSupport;\n// \npublic class AuthenticationDataBasic extends Object implements AuthenticationDataProvider;\n// \npublic class AuthenticationDataKeyStoreTls extends Object implements AuthenticationDataProvider;\n// \npublic class AuthenticationDataNull extends Object implements AuthenticationDataProvider;\n", "des": "Pulsar Client authentication."}
{"index": 1822, "repo": "pulsar-client-original-3.0.0", "code": "package customroute\n\n// \npublic class PartialRoundRobinMessageRouterImpl extends Object implements MessageRouter;\n", "des": "Pulsar Client customized routing mode."}
{"index": 1823, "repo": "pulsar-client-original-3.0.0", "code": "package schema\n\n// \npublic abstract class AbstractSchema<T> extends Object implements Schema<T>;\n// minimal abstract StructSchema.\npublic abstract class AbstractStructSchema<T> extends AbstractSchema<T>;\n// Auto detect schema, returns only GenericRecord instances.\npublic class AutoConsumeSchema extends Object implements Schema<GenericRecord>;\n// Auto detect schema.\npublic class AutoProduceBytesSchema<T> extends Object implements Schema<byte[]>;\n", "des": "Pulsar Client schema."}
{"index": 1824, "repo": "pulsar-client-original-3.0.0", "code": "package reader\n\n// The abstract class of multi version avro base reader.\npublic abstract class AbstractMultiVersionAvroBaseReader<T> extends AbstractMultiVersionReader<T>;\n// The multi version reader abstract class, implement it will handle the multi version schema.\npublic abstract class AbstractMultiVersionReader<T> extends Object implements SchemaReader<T>;\n// \npublic class AvroReader<T> extends Object implements SchemaReader<T>;\n", "des": "Pulsar Client schema reader."}
{"index": 1825, "repo": "pulsar-client-original-3.0.0", "code": "package transaction\n\n// Interface of transaction buffer handler.\npublic interface TransactionBufferHandler;\n// The default implementation of transaction builder to build transactions.\npublic class TransactionBuilderImpl extends Object implements TransactionBuilder;\n// Transaction coordinator client based topic assigned.\npublic class TransactionCoordinatorClientImpl extends Object implements TransactionCoordinatorClient;\n", "des": "Transaction client implementation."}
{"index": 1826, "repo": "pulsar-client-original-3.0.0", "code": "package util\n\n// \npublic class ConsumerName extends Object;\n// \npublic class ExecutorProvider extends Object;\n// \npublic static class ExecutorProvider.ExtendedThreadFactory extends io.netty.util.concurrent.DefaultThreadFactory;\n// \npublic class MathUtils extends Object;\n// \npublic class MessageIdUtils extends Object;\n// \npublic class NoOpLock extends Object implements Lock;\n// \npublic class ObjectCache<T> extends Object implements Supplier<T>;\n// \npublic class RetryMessageUtil extends Object;\n", "des": "Pulsar Client Utils."}
{"index": 1827, "repo": "spring-test-6.0.11", "code": "package env\n\n// Simple ConfigurableEnvironment implementation exposing MockEnvironment.setProperty(String, String) and MockEnvironment.withProperty(String, String) methods for testing purposes.\npublic class MockEnvironment extends org.springframework.core.env.AbstractEnvironment;\n// Simple PropertySource implementation for use in testing.\npublic class MockPropertySource extends org.springframework.core.env.PropertiesPropertySource;\n", "des": "This package contains mock implementations of the Environment and PropertySource abstractions."}
{"index": 1828, "repo": "spring-test-6.0.11", "code": "package http\n\n// Mock implementation of HttpInputMessage.\npublic class MockHttpInputMessage extends Object implements org.springframework.http.HttpInputMessage;\n// Mock implementation of HttpOutputMessage.\npublic class MockHttpOutputMessage extends Object implements org.springframework.http.HttpOutputMessage;\n", "des": "Mock implementations of client/server-side HTTP abstractions."}
{"index": 1829, "repo": "spring-test-6.0.11", "code": "package client\n\n// Mock implementation of ClientHttpRequest.\npublic class MockClientHttpRequest extends MockHttpOutputMessage implements org.springframework.http.client.ClientHttpRequest;\n// Mock implementation of ClientHttpResponse.\npublic class MockClientHttpResponse extends MockHttpInputMessage implements org.springframework.http.client.ClientHttpResponse;\n", "des": "Mock implementations of client-side HTTP abstractions."}
{"index": 1830, "repo": "spring-test-6.0.11", "code": "package reactive\n\n// Mock implementation of ClientHttpRequest.\npublic class MockClientHttpRequest extends org.springframework.http.client.reactive.AbstractClientHttpRequest;\n// Mock implementation of ClientHttpResponse.\npublic class MockClientHttpResponse extends Object implements org.springframework.http.client.reactive.ClientHttpResponse;\n", "des": "Mock implementations of reactive HTTP client contracts."}
{"index": 1831, "repo": "spring-test-6.0.11", "code": "package reactive\n\n// Mock extension of AbstractServerHttpRequest for use in tests without an actual server.\npublic final class MockServerHttpRequest extends org.springframework.http.server.reactive.AbstractServerHttpRequest;\n// Request builder exposing properties not related to the body.\npublic static interface MockServerHttpRequest.BaseBuilder<B extends MockServerHttpRequest.BaseBuilder<B>>;\n", "des": "Mock implementations of reactive HTTP server contracts."}
{"index": 1832, "repo": "spring-test-6.0.11", "code": "package web\n\n// Delegating implementation of ServletInputStream.\npublic class DelegatingServletInputStream extends ServletInputStream;\n// Delegating implementation of ServletOutputStream.\npublic class DelegatingServletOutputStream extends ServletOutputStream;\n// Mock implementation of the AsyncContext interface.\npublic class MockAsyncContext extends Object implements AsyncContext;\n// Mock implementation of the BodyContent class.\npublic class MockBodyContent extends BodyContent;\n", "des": "A comprehensive set of Servlet API 6.0 mock objects, targeted at usage with Spring's Web MVC framework."}
{"index": 1833, "repo": "spring-test-6.0.11", "code": "package server\n\n// Mock implementation of ServerRequest.\npublic final class MockServerRequest extends Object implements org.springframework.web.reactive.function.server.ServerRequest;\n// Builder for MockServerRequest.\npublic static interface MockServerRequest.Builder;\n", "des": "Mock objects for the functional web framework."}
{"index": 1834, "repo": "spring-test-6.0.11", "code": "package server\n\n// Extension of DefaultServerWebExchange for use in tests, along with MockServerHttpRequest and MockServerHttpResponse.\npublic final class MockServerWebExchange extends org.springframework.web.server.adapter.DefaultServerWebExchange;\n// Builder for a MockServerWebExchange.\npublic static class MockServerWebExchange.Builder extends Object;\n", "des": "Mock implementations of Spring's reactive server web API abstractions."}
{"index": 1835, "repo": "spring-test-6.0.11", "code": "package annotation\n\n// @Commit is a test annotation that is used to indicate that a test-managed transaction should be committed after the test method has completed.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Inherited @Rollback(false) public @interface Commit;\n", "des": "Support classes for annotation-driven tests."}
{"index": 1836, "repo": "spring-test-6.0.11", "code": "package context\n\n// ActiveProfiles is a class-level annotation that is used to declare which active bean definition profiles should be used when loading an ApplicationContext for test classes.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited public @interface ActiveProfiles;\n// Strategy interface for programmatically resolving which active bean definition profiles should be used when loading an ApplicationContext for a test class.\n@FunctionalInterface public interface ActiveProfilesResolver;\n", "des": "This package contains the Spring TestContext Framework which provides annotation-driven unit and integration testing support that is agnostic of the actual testing framework in use."}
{"index": 1837, "repo": "spring-test-6.0.11", "code": "package aot\n\n// Strategy interface for loading an ApplicationContext for build-time AOT processing as well as run-time AOT execution for an integration test managed by the Spring TestContext Framework.\npublic interface AotContextLoader extends SmartContextLoader;\n// Holder for metadata specific to ahead-of-time (AOT) support in the Spring TestContext Framework.\npublic interface AotTestAttributes;\n", "des": "Ahead-of-time (AOT) support for the Spring TestContext Framework."}
{"index": 1838, "repo": "spring-test-6.0.11", "code": "package cache\n\n// ContextCache defines the SPI for caching Spring ApplicationContexts within the Spring TestContext Framework.\npublic interface ContextCache;\n// Collection of utilities for working with ContextCaches.\npublic abstract class ContextCacheUtils extends Object;\n// Default implementation of the CacheAwareContextLoaderDelegate interface.\npublic class DefaultCacheAwareContextLoaderDelegate extends Object implements CacheAwareContextLoaderDelegate;\n", "des": "Support for context caching within the Spring TestContext Framework."}
{"index": 1839, "repo": "spring-test-6.0.11", "code": "package event\n\n// TestContextEvent published by the EventPublishingTestExecutionListener when TestExecutionListener.afterTestClass(TestContext) is invoked.\npublic class AfterTestClassEvent extends TestContextEvent;\n// TestContextEvent published by the EventPublishingTestExecutionListener when TestExecutionListener.afterTestExecution(TestContext) is invoked.\npublic class AfterTestExecutionEvent extends TestContextEvent;\n", "des": "Test event support classes for the Spring TestContext Framework."}
{"index": 1840, "repo": "spring-test-6.0.11", "code": "package annotation\n\n// @EventListener annotation used to consume an AfterTestClassEvent published by the EventPublishingTestExecutionListener.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @EventListener(AfterTestClassEvent.class) public @interface AfterTestClass;\n", "des": "Test execution event annotations for the Spring TestContext Framework."}
{"index": 1841, "repo": "spring-test-6.0.11", "code": "package jdbc\n\n// @Sql is used to annotate a test class or test method to configure SQL Sql.scripts() and Sql.statements() to be executed against a given database during integration tests.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Inherited @Repeatable(SqlGroup.class) public @interface Sql;\n// Enumeration of phases that dictate when SQL scripts are executed.\npublic static enum Sql.ExecutionPhase extends Enum<Sql.ExecutionPhase>;\n", "des": "JDBC support classes for the Spring TestContext Framework, including support for declarative SQL script execution via @Sql."}
{"index": 1842, "repo": "spring-test-6.0.11", "code": "package jupiter\n\n// @DisabledIf is used to signal that the annotated test class or test method is disabled and should not be executed if the supplied DisabledIf.expression() evaluates to true.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @ExtendWith(DisabledIfCondition.class) public @interface DisabledIf;\n", "des": "Core support for integrating the Spring TestContext Framework with the JUnit Jupiter extension model in JUnit 5."}
{"index": 1843, "repo": "spring-test-6.0.11", "code": "package web\n\n// @SpringJUnitWebConfig is a composed annotation that combines @ExtendWith(SpringExtension.class) from JUnit Jupiter with @ContextConfiguration and @WebAppConfiguration from the Spring TestContext Framework.\n@ExtendWith(SpringExtension.class) @ContextConfiguration @WebAppConfiguration @Documented @Inherited @Retention(RUNTIME) @Target(TYPE) public @interface SpringJUnitWebConfig;\n", "des": "Web support for integrating the Spring TestContext Framework with the JUnit Jupiter extension model in JUnit 5."}
{"index": 1844, "repo": "spring-test-6.0.11", "code": "package junit4\n\n// Abstract base test class which integrates the Spring TestContext Framework with explicit ApplicationContext testing support in a JUnit 4 environment.\npublic abstract class AbstractJUnit4SpringContextTests extends Object implements org.springframework.context.ApplicationContextAware;\n", "des": "Support classes for integrating the Spring TestContext Framework with JUnit 4.12 or higher."}
{"index": 1845, "repo": "spring-test-6.0.11", "code": "package rules\n\n// SpringClassRule is a custom JUnit TestRule that supports class-level features of the Spring TestContext Framework in standard JUnit tests by means of the TestContextManager and associated support classes and annotations.\npublic class SpringClassRule extends Object implements TestRule;\n", "des": "Custom JUnit 4 Rules used in the Spring TestContext Framework."}
{"index": 1846, "repo": "spring-test-6.0.11", "code": "package statements\n\n// ProfileValueChecker is a custom JUnit Statement that checks whether a test class or test method is enabled in the current environment via Spring's @IfProfileValue annotation.\npublic class ProfileValueChecker extends Statement;\n", "des": "Custom JUnit 4 Statements used in the Spring TestContext Framework."}
{"index": 1847, "repo": "spring-test-6.0.11", "code": "package support\n\n// Abstract application context loader that provides a basis for all concrete implementations of the ContextLoader SPI.\npublic abstract class AbstractContextLoader extends Object implements SmartContextLoader;\n", "des": "Support classes for the Spring TestContext Framework."}
{"index": 1848, "repo": "spring-test-6.0.11", "code": "package testng\n\n// Abstract base test class which integrates the Spring TestContext Framework with explicit ApplicationContext testing support in a TestNG environment.\npublic abstract class AbstractTestNGSpringContextTests extends Object implements org.testng.IHookable, org.springframework.context.ApplicationContextAware;\n", "des": "Support classes for integrating the Spring TestContext Framework with TestNG."}
{"index": 1849, "repo": "spring-test-6.0.11", "code": "package transaction\n\n// Test annotation which indicates that the annotated void method should be executed after a transaction is ended for a test method configured to run within a transaction via Spring's @Transactional annotation.\n@Target({METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented public @interface AfterTransaction;\n", "des": "Transactional support classes for the Spring TestContext Framework."}
{"index": 1850, "repo": "spring-test-6.0.11", "code": "package util\n\n// Utility methods for working with resources within the Spring TestContext Framework.\npublic abstract class TestContextResourceUtils extends Object;\n// Collection of utilities for working with SpringFactoriesLoader within the Spring TestContext Framework.\npublic abstract class TestContextSpringFactoriesUtils extends Object;\n", "des": "Common utilities used within the Spring TestContext Framework."}
{"index": 1851, "repo": "spring-test-6.0.11", "code": "package web\n\n// Abstract, generic extension of AbstractContextLoader that loads a GenericWebApplicationContext.\npublic abstract class AbstractGenericWebContextLoader extends AbstractContextLoader implements AotContextLoader;\n// Concrete implementation of AbstractGenericWebContextLoader that loads bean definitions from annotated classes.\npublic class AnnotationConfigWebContextLoader extends AbstractGenericWebContextLoader;\n", "des": "Web support classes for the Spring TestContext Framework."}
{"index": 1852, "repo": "spring-test-6.0.11", "code": "package jdbc\n\n// JdbcTestUtils is a collection of JDBC related utility functions intended to simplify standard database testing scenarios.\npublic abstract class JdbcTestUtils extends Object;\n", "des": "Support classes for tests based on JDBC."}
{"index": 1853, "repo": "spring-test-6.0.11", "code": "package util\n\n// AopTestUtils is a collection of AOP-related utility methods for use in unit and integration testing scenarios.\npublic abstract class AopTestUtils extends Object;\n// Test assertions that are independent of any third-party assertion library.\npublic abstract class AssertionErrors extends Object;\n", "des": "General utility classes for use in unit and integration tests."}
{"index": 1854, "repo": "spring-test-6.0.11", "code": "package web\n\n// A collection of assertions intended to simplify testing scenarios dealing with Spring Web MVC ModelAndView objects.\npublic abstract class ModelAndViewAssert extends Object;\n", "des": "Helper classes for unit tests based on Spring's web support."}
{"index": 1855, "repo": "spring-test-6.0.11", "code": "package client\n\n// Base class for RequestExpectationManager implementations responsible for storing expectations and actual requests, and checking for unsatisfied expectations at the end.\npublic abstract class AbstractRequestExpectationManager extends Object implements RequestExpectationManager;\n// Helper class to manage a group of remaining expectations.\nprotected static class AbstractRequestExpectationManager.RequestExpectationGroup extends Object;\n", "des": "Contains client-side REST testing support."}
{"index": 1856, "repo": "spring-test-6.0.11", "code": "package match\n\n// Factory for request content RequestMatcher's.\npublic class ContentRequestMatchers extends Object;\n// Factory for assertions on the request content using JsonPath expressions.\npublic class JsonPathRequestMatchers extends Object;\n// Static factory methods for RequestMatcher classes.\npublic abstract class MockRestRequestMatchers extends Object;\n// Factory methods for request content RequestMatcher implementations that use an XPath expression.\npublic class XpathRequestMatchers extends Object;\n", "des": "Contains built-in RequestMatcher implementations."}
{"index": 1857, "repo": "spring-test-6.0.11", "code": "package response\n\n// A ResponseCreator with builder-style methods for adding response details.\npublic class DefaultResponseCreator extends Object implements ResponseCreator;\n// ResponseCreator that obtains the response by executing the request through a ClientHttpRequestFactory.\npublic class ExecutingResponseCreator extends Object implements ResponseCreator;\n// Static factory methods to obtain a ResponseCreator with a fixed response.\npublic abstract class MockRestResponseCreators extends Object;\n", "des": "Contains built-in ResponseCreator implementations."}
{"index": 1858, "repo": "spring-test-6.0.11", "code": "package server\n\n// Assertions on cookies of the response.\npublic class CookieAssertions extends Object;\n// ExchangeResult sub-class that exposes the response body fully extracted to a representation of type <T>.\npublic class EntityExchangeResult<T> extends ExchangeResult;\n// Container for request and response details for exchanges performed through WebTestClient.\npublic class ExchangeResult extends Object;\n", "des": "Support for testing Spring WebFlux server endpoints via WebTestClient."}
{"index": 1859, "repo": "spring-test-6.0.11", "code": "package servlet\n\n// Strategy interface for customizing DispatcherServlet instances that are managed by MockMvc.\n@FunctionalInterface public interface DispatcherServletCustomizer;\n// Main entry point for server-side Spring MVC test support.\npublic final class MockMvc extends Object;\n// Builds a MockMvc instance.\npublic interface MockMvcBuilder;\n// Base class for MockMvc builder implementations, providing the capability to create a MockMvc instance.\npublic abstract class MockMvcBuilderSupport extends Object;\n", "des": "Contains server-side support for testing Spring MVC applications."}
{"index": 1860, "repo": "spring-test-6.0.11", "code": "package client\n\n// Connector that handles requests by invoking a MockMvc rather than making actual requests over HTTP.\npublic class MockMvcHttpConnector extends Object implements org.springframework.http.client.reactive.ClientHttpConnector;\n// The main class for testing Spring MVC applications via WebTestClient with MockMvc for server request handling.\npublic interface MockMvcWebTestClient;\n", "des": "Support for testing Spring MVC applications via WebTestClient with MockMvc for server request handling."}
{"index": 1861, "repo": "spring-test-6.0.11", "code": "package htmlunit\n\n// Implementation of WebConnection that allows delegating to various WebConnection implementations.\npublic final class DelegatingWebConnection extends Object implements com.gargoylesoftware.htmlunit.WebConnection;\n// The delegate web connection.\npublic static final class DelegatingWebConnection.DelegateWebConnection extends Object;\n", "des": "Server-side support for testing Spring MVC applications with MockMvc and HtmlUnit."}
{"index": 1862, "repo": "spring-test-6.0.11", "code": "package webdriver\n\n// MockMvcHtmlUnitDriverBuilder simplifies the building of an HtmlUnitDriver that delegates to MockMvc and optionally delegates to an actual connection for specific requests.\npublic class MockMvcHtmlUnitDriverBuilder extends MockMvcWebConnectionBuilderSupport<MockMvcHtmlUnitDriverBuilder>;\n// WebConnectionHtmlUnitDriver enables configuration of the WebConnection for an HtmlUnitDriver instance.\npublic class WebConnectionHtmlUnitDriver extends org.openqa.selenium.htmlunit.HtmlUnitDriver;\n", "des": "Server-side support for testing Spring MVC applications with MockMvc and the Selenium HtmlUnitDriver."}
{"index": 1863, "repo": "spring-test-6.0.11", "code": "package request\n\n// An extension of SmartRequestBuilder that can be configured with RequestPostProcessors.\npublic interface ConfigurableSmartRequestBuilder<B extends ConfigurableSmartRequestBuilder<B>> extends SmartRequestBuilder;\n// Default builder for MockHttpServletRequest required as input to perform requests in MockMvc.\npublic class MockHttpServletRequestBuilder extends Object implements ConfigurableSmartRequestBuilder<MockHttpServletRequestBuilder>, org.springframework.beans.Mergeable;\n", "des": "Contains built-in RequestBuilder implementations."}
{"index": 1864, "repo": "spring-test-6.0.11", "code": "package result\n\n// Factory for response content assertions.\npublic class ContentResultMatchers extends Object;\n// Factory for response cookie assertions.\npublic class CookieResultMatchers extends Object;\n// Factory for \"output\" flash attribute assertions.\npublic class FlashAttributeResultMatchers extends Object;\n// Factory for assertions on the selected handler or handler method.\npublic class HandlerResultMatchers extends Object;\n", "des": "Contains built-in ResultMatcher and ResultHandler implementations."}
{"index": 1865, "repo": "spring-test-6.0.11", "code": "package setup\n\n// Abstract implementation of MockMvcBuilder with common methods for configuring filters, default request properties, global expectations and global result actions.\npublic abstract class AbstractMockMvcBuilder<B extends AbstractMockMvcBuilder<B>> extends MockMvcBuilderSupport implements ConfigurableMockMvcBuilder<B>;\n// Defines common methods for building a MockMvc.\npublic interface ConfigurableMockMvcBuilder<B extends ConfigurableMockMvcBuilder<B>> extends MockMvcBuilder;\n", "des": "Contains built-in MockMvcBuilder implementations."}
{"index": 1866, "repo": "spring-security-cas-6.1.2", "code": "package cas\n\n// Sets the appropriate parameters for CAS's implementation of SAML (which is not guaranteed to be actually SAML compliant).\npublic final class SamlServiceProperties extends ServiceProperties;\n// Stores properties related to this CAS service.\npublic class ServiceProperties extends Object implements org.springframework.beans.factory.InitializingBean;\n", "des": "Spring Security support for Apereo's Central Authentication Service (CAS)."}
{"index": 1867, "repo": "spring-security-cas-6.1.2", "code": "package authentication\n\n// Temporary authentication object needed to load the user details service.\npublic final class CasAssertionAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken;\n", "des": "An AuthenticationProvider that can process CAS service tickets and proxy tickets."}
{"index": 1868, "repo": "spring-security-cas-6.1.2", "code": "package web\n\n// Used by the ExceptionTranslationFilter to commence authentication via the JA-SIG Central Authentication Service (CAS).\npublic class CasAuthenticationEntryPoint extends Object implements org.springframework.security.web.AuthenticationEntryPoint, org.springframework.beans.factory.InitializingBean;\n", "des": "Authenticates standard web browser users via CAS."}
{"index": 1869, "repo": "spring-security-cas-6.1.2", "code": "package authentication\n\n// In order for the CasAuthenticationProvider to provide the correct service url to authenticate the ticket, the returned value of Authentication.getDetails() should implement this interface when tickets can be sent to any URL rather than only ServiceProperties.getService().\npublic interface ServiceAuthenticationDetails extends Serializable;\n", "des": "Authentication processing mechanisms which respond to the submission of authentication credentials using CAS."}
{"index": 1870, "repo": "shiro-core-2.0.0-alpha-2", "code": "package shiro\n\n// Accesses the currently accessible Subject for the calling code depending on runtime environment.\npublic abstract class SecurityUtils extends Object;\n// Exception thrown when attempting to acquire the application's SecurityManager instance, but Shiro's lookup heuristics cannot find one.\npublic class UnavailableSecurityManagerException extends org.apache.shiro.lang.ShiroException;\n", "des": "This package primarily exists as a root classpath distinction, but it does contain two core classes widely used by applications, SecurityUtils and ShiroException."}
{"index": 1871, "repo": "shiro-core-2.0.0-alpha-2", "code": "package aop\n\n// Base support class for implementations that reads and processes JSR-175 annotations.\npublic abstract class AnnotationHandler extends Object;\n// MethodInterceptor that inspects a specific annotation on the method invocation before continuing its execution.\npublic abstract class AnnotationMethodInterceptor extends MethodInterceptorSupport;\n// Defines an AOP-framework-independent way of determining if an Annotation exists on a Method.\npublic interface AnnotationResolver;\n", "des": "Components used to support the framework's AOP/interception support classes."}
{"index": 1872, "repo": "shiro-core-2.0.0-alpha-2", "code": "package authc\n\n// Superclass for almost all Authenticator implementations that performs the common work around authentication attempts.\npublic abstract class AbstractAuthenticator extends Object implements Authenticator, LogoutAware;\n// An Account is a convenience interface that extends both AuthenticationInfo and AuthorizationInfo and represents authentication and authorization for a single account in a single Realm.\npublic interface Account extends AuthenticationInfo, AuthorizationInfo;\n", "des": "Core interfaces and exceptions concerning Authentication (the act of logging-in)."}
{"index": 1873, "repo": "shiro-core-2.0.0-alpha-2", "code": "package credential\n\n// A credentials matcher that always returns true when matching credentials no matter what arguments are passed in.\npublic class AllowAllCredentialsMatcher extends Object implements CredentialsMatcher;\n// Interface implemented by classes that can determine if an AuthenticationToken's provided credentials matches a corresponding account's credentials stored in the system.\npublic interface CredentialsMatcher;\n", "des": "Support for validating credentials (such as passwords or X509 certificates) during authentication via the CredentialsMatcher interface and its supporting implementations."}
{"index": 1874, "repo": "shiro-core-2.0.0-alpha-2", "code": "package pam\n\n// Abstract base implementation for Shiro's concrete AuthenticationStrategy implementations.\npublic abstract class AbstractAuthenticationStrategy extends Object implements AuthenticationStrategy;\n// AuthenticationStrategy implementation that requires all configured realms to successfully process the submitted AuthenticationToken during the log-in attempt.\npublic class AllSuccessfulStrategy extends AbstractAuthenticationStrategy;\n", "des": "Support for PAM, or Pluggable Authentication Modules, which is the capability to authenticate a user against multiple configurable (pluggable) modules (Shiro calls these Realms)."}
{"index": 1875, "repo": "shiro-core-2.0.0-alpha-2", "code": "package authz\n\n// Exception thrown if there is a problem during authorization (access control check).\npublic class AuthorizationException extends org.apache.shiro.lang.ShiroException;\n// AuthorizationInfo represents a single Subject's stored authorization data (roles, permissions, etc.) used during authorization (access control) checks only.\npublic interface AuthorizationInfo extends Serializable;\n", "des": "Core interfaces and exceptions supporting Authorization (access control)."}
{"index": 1876, "repo": "shiro-core-2.0.0-alpha-2", "code": "package annotation\n\n// An enum for specifying a logical operation that can be used for interpreting authorization annotations\npublic enum Logical extends Enum<Logical>;\n// Requires the current Subject to have been authenticated during their current session for the annotated class/instance/method to be accessed or invoked.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented public @interface RequiresAuthentication;\n", "des": "Annotations used to restrict which classes, instances, or methods may be accessed or invoked depending on the caller's access abilities or authentication state."}
{"index": 1877, "repo": "shiro-core-2.0.0-alpha-2", "code": "package aop\n\n// An AnnotationsAuthorizingMethodInterceptor is a MethodInterceptor that asserts a given method is authorized to execute based on one or more configured AuthorizingAnnotationMethodInterceptors.\npublic abstract class AnnotationsAuthorizingMethodInterceptor extends AuthorizingMethodInterceptor;\n// Handles RequiresAuthentication annotations and ensures the calling subject is authenticated before allowing access.\npublic class AuthenticatedAnnotationHandler extends AuthorizingAnnotationHandler;\n", "des": "Contains AOP implementation support classes specifically used for authorization operations, particularly supporting AOP Method Interceptors and JSR-175 metadata Annotations."}
{"index": 1878, "repo": "shiro-core-2.0.0-alpha-2", "code": "package permission\n\n// An all AllPermission instance is one that always implies any other permission; that is, its implies method always returns true.\npublic class AllPermission extends Object implements Permission, Serializable;\n// Provides a base Permission class from which type-safe/domain-specific subclasses may extend.\npublic class DomainPermission extends WildcardPermission;\n", "des": "Support and default implementations for Shiro's Permission interface."}
{"index": 1879, "repo": "shiro-core-2.0.0-alpha-2", "code": "package concurrent\n\n// Executor implementation that will automatically first associate any argument Runnable instances with the currently available Subject and then dispatch the Subject-enabled runnable to an underlying delegate Executor instance.\npublic class SubjectAwareExecutor extends Object implements Executor;\n", "des": "Executor, ExecutorService, and ScheduledExecutorService implementations for transparent Subject association with threads in an asynchronous execution environment."}
{"index": 1880, "repo": "shiro-core-2.0.0-alpha-2", "code": "package dao\n\n// Generic exception representing a problem when attempting to access data.\npublic abstract class DataAccessException extends org.apache.shiro.lang.ShiroException;\n// Root exception indicating invalid or incorrect usage of a data access resource.\npublic class InvalidResourceUsageException extends DataAccessException;\n", "des": "Package containing various components useful when building Data Access Objects (DAOs), including a generic Data Access Exception hierarchy."}
{"index": 1881, "repo": "shiro-core-2.0.0-alpha-2", "code": "package env\n\n// Basic usage:\npublic class BasicIniEnvironment extends DefaultEnvironment;\n// Simple/default Environment implementation that stores Shiro objects as key-value pairs in a Map instance.\npublic class DefaultEnvironment extends Object implements NamedObjectEnvironment, org.apache.shiro.lang.util.Destroyable;\n// An Environment instance encapsulates all of the objects that Shiro requires to function.\npublic interface Environment;\n", "des": "Concepts used to represent Shiro's aggregate state in an application."}
{"index": 1882, "repo": "shiro-core-2.0.0-alpha-2", "code": "package jndi\n\n// Callback interface to be implemented by classes that need to perform an operation (such as a lookup) in a JNDI context.\npublic interface JndiCallback;\n// Convenient superclass for JNDI accessors, providing \"jndiTemplate\" and \"jndiEnvironment\" bean properties.\npublic class JndiLocator extends Object;\n// A factory implementation intended to be used to look up objects in jndi.\npublic class JndiObjectFactory<T> extends JndiLocator implements org.apache.shiro.lang.util.Factory<T>;\n", "des": "Enables accessing objects located in JNDI that might be useful when configuring a Shiro-enabled application."}
{"index": 1883, "repo": "shiro-core-2.0.0-alpha-2", "code": "package mgt\n\n// Abstract implementation of the RememberMeManager interface that handles serialization and encryption of the remembered user identity.\npublic abstract class AbstractRememberMeManager extends Object implements RememberMeManager;\n// Shiro support of a SecurityManager class hierarchy that delegates all authentication operations to a wrapped Authenticator instance.\npublic abstract class AuthenticatingSecurityManager extends RealmSecurityManager;\n", "des": "Provides the master SecurityManager interface and a default implementation hierarchy for managing all aspects of Shiro's functionality in an application."}
{"index": 1884, "repo": "shiro-core-2.0.0-alpha-2", "code": "package realm\n\n// A top-level abstract implementation of the Realm interface that only implements authentication support (log-in) operations and leaves authorization (access control) behavior to subclasses.\npublic abstract class AuthenticatingRealm extends CachingRealm implements org.apache.shiro.lang.util.Initializable;\n", "des": "Components and sub-packages used in supporting the core Realm interface."}
{"index": 1885, "repo": "shiro-core-2.0.0-alpha-2", "code": "package activedirectory\n\n// A Realm that authenticates with an active directory LDAP server to determine the roles for a particular user.\npublic class ActiveDirectoryRealm extends AbstractLdapRealm;\n", "des": "Realms that acquire security data from a Microsoft Active Directory."}
{"index": 1886, "repo": "shiro-core-2.0.0-alpha-2", "code": "package jdbc\n\n// Realm that allows authentication and authorization via JDBC calls.\npublic class JdbcRealm extends AuthorizingRealm;\n// Password hash salt configuration.\npublic static enum JdbcRealm.SaltStyle extends Enum<JdbcRealm.SaltStyle>;\n", "des": "Realms that acquire security data from an RDBMS (Relational Database Management System) using the JDBC API."}
{"index": 1887, "repo": "shiro-core-2.0.0-alpha-2", "code": "package jndi\n\n// Looks up one or more Realm instances from JNDI using specified jndiNames.\npublic class JndiRealmFactory extends JndiLocator implements RealmFactory;\n", "des": "Support for acquiring Realms from JNDI, particularly useful for configuring Shiro in JEE or EJB environments."}
{"index": 1888, "repo": "shiro-core-2.0.0-alpha-2", "code": "package ldap\n\n// A Realm that authenticates with an LDAP server to build the Subject for a user.\npublic abstract class AbstractLdapRealm extends AuthorizingRealm;\n// An LDAP Realm implementation utilizing Sun's/Oracle's JNDI API as an LDAP API.\npublic class DefaultLdapRealm extends AuthorizingRealm;\n", "des": "Realms that acquire security data from an LDAP (Lightweight Directory Access Protocol) server utilizing LDAP/Naming APIs."}
{"index": 1889, "repo": "shiro-core-2.0.0-alpha-2", "code": "package text\n\n// A Realm implementation that creates SimpleAccount instances based on Ini configuration.\npublic class IniRealm extends TextConfigurationRealm;\n// A TextConfigurationRealm that defers all logic to the parent class, but just enables Properties based configuration in addition to the parent class's String configuration.\npublic class PropertiesRealm extends TextConfigurationRealm implements org.apache.shiro.lang.util.Destroyable, Runnable;\n", "des": "Realms that acquire security data from text-based data sources such as Files or text streams."}
{"index": 1890, "repo": "shiro-core-2.0.0-alpha-2", "code": "package session\n\n// A special case of a StoppedSessionException.\npublic class ExpiredSessionException extends StoppedSessionException;\n// Exception thrown when attempting to interact with the system under an established session when that session is considered invalid.\npublic class InvalidSessionException extends SessionException;\n", "des": "Components related to managing sessions, the time-based data contexts in which a Subject interacts with an application."}
{"index": 1891, "repo": "shiro-core-2.0.0-alpha-2", "code": "package mgt\n\n// Abstract implementation supporting the NativeSessionManager interface, supporting SessionListeners and application of the globalSessionTimeout.\npublic abstract class AbstractNativeSessionManager extends AbstractSessionManager implements NativeSessionManager, org.apache.shiro.event.EventBusAware;\n", "des": "SessionManager components supporting enterprise session management."}
{"index": 1892, "repo": "shiro-core-2.0.0-alpha-2", "code": "package eis\n\n// An abstract SessionDAO implementation that performs some sanity checks on session creation and reading and allows for pluggable Session ID generation strategies if desired.\npublic abstract class AbstractSessionDAO extends Object implements SessionDAO;\n", "des": "EIS (Enterprise Information System)-tier components that can perform CRUD operations for sessions using any EIS API."}
{"index": 1893, "repo": "shiro-core-2.0.0-alpha-2", "code": "package subject\n\n// Exception wrapping any potential checked exception thrown when a Subject executes a Callable.\npublic class ExecutionException extends org.apache.shiro.lang.ShiroException;\n// A PrincipalCollection that allows modification.\npublic interface MutablePrincipalCollection extends PrincipalCollection;\n// A collection of all principals associated with a corresponding Subject.\npublic interface PrincipalCollection extends Iterable, Serializable;\n", "des": "Components supporting the Subject interface, the most important concept in Shiro's API."}
{"index": 1894, "repo": "shiro-core-2.0.0-alpha-2", "code": "package support\n\n// Default implementation of the SubjectContext interface.\npublic class DefaultSubjectContext extends MapContext implements SubjectContext;\n// Implementation of the Subject interface that delegates method calls to an underlying SecurityManager instance for security checks.\npublic class DelegatingSubject extends Object implements Subject;\n", "des": "Concrete support implementations of most of the org.apache.shiro.subject interfaces."}
{"index": 1895, "repo": "shiro-core-2.0.0-alpha-2", "code": "package util\n\n// TODO - Class JavaDoc\npublic abstract class AbstractFactory<T> extends Object implements org.apache.shiro.lang.util.Factory<T>;\n// PathMatcher implementation for Ant-style path patterns.\npublic class AntPathMatcher extends Object implements PatternMatcher;\n// Static helper class for use dealing with Collections.\npublic class CollectionUtils extends Object;\n// \n@Deprecated public abstract class JavaEnvironment extends Object;\n", "des": "Your run-of-the-mill 'util' package for components and logic widely used across the framework that can't find their home into a proper OO hierarchy (or, most likely for things used across many hierarchies)."}
{"index": 1896, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package autoconfigure\n\n// Abstract base class for a BeanFactoryPostProcessor that can be used to dynamically declare that all beans of a specific type should depend on specific other beans identified by name or type.\npublic abstract class AbstractDependsOnBeanFactoryPostProcessor extends Object implements org.springframework.beans.factory.config.BeanFactoryPostProcessor, org.springframework.core.Ordered;\n", "des": "Spring Boot's auto-configuration capabilities."}
{"index": 1897, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package admin\n\n// Register a JMX component that allows to administer the current application.\n@AutoConfiguration(after=JmxAutoConfiguration.class) @ConditionalOnProperty(prefix=\"spring.application.admin\", value=\"enabled\", havingValue=\"true\", matchIfMissing=false) public class SpringApplicationAdminJmxAutoConfiguration extends Object;\n", "des": "Auto-configuration for admin-related features."}
{"index": 1898, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package amqp\n\n// Configures Rabbit ConnectionFactory with sensible defaults.\npublic abstract class AbstractConnectionFactoryConfigurer<T extends org.springframework.amqp.rabbit.connection.AbstractConnectionFactory> extends Object;\n// Configure RabbitListenerContainerFactory with sensible defaults.\npublic abstract class AbstractRabbitListenerContainerFactoryConfigurer<T extends org.springframework.amqp.rabbit.config.AbstractRabbitListenerContainerFactory<?>> extends Object;\n", "des": "Auto-configuration for RabbitMQ."}
{"index": 1899, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package aop\n\n// Auto-configuration for Spring's AOP support.\n@AutoConfiguration @ConditionalOnProperty(prefix=\"spring.aop\", name=\"auto\", havingValue=\"true\", matchIfMissing=true) public class AopAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring AOP."}
{"index": 1900, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package availability\n\n// EnableAutoConfiguration for ApplicationAvailabilityBean.\n@AutoConfiguration public class ApplicationAvailabilityAutoConfiguration extends Object;\n", "des": "Auto-configuration for application availability features."}
{"index": 1901, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package batch\n\n", "des": "Auto-configuration for Spring Batch."}
{"index": 1902, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package cache\n\n// Callback interface that can be implemented by beans wishing to customize the default setup for caches added to the manager through addCaches and for dynamically created caches.\npublic interface Cache2kBuilderCustomizer;\n", "des": "Auto-configuration for the cache abstraction."}
{"index": 1903, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package cassandra\n\n// Auto-configuration for Cassandra.\n@AutoConfiguration @ConditionalOnClass(com.datastax.oss.driver.api.core.CqlSession.class) @EnableConfigurationProperties(CassandraProperties.class) public class CassandraAutoConfiguration extends Object;\n// Details required to establish a connection to a Cassandra service.\npublic interface CassandraConnectionDetails extends ConnectionDetails;\n", "des": "Auto-configuration for Cassandra."}
{"index": 1904, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package codec\n\n// properties for reactive codecs.\n@ConfigurationProperties(prefix=\"spring.codec\") public class CodecProperties extends Object;\n", "des": "Auto-configuration for reactive codecs."}
{"index": 1905, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package condition\n\n// Abstract base class for nested conditions.\npublic abstract class AbstractNestedCondition extends SpringBootCondition implements org.springframework.context.annotation.ConfigurationCondition;\n// \nprotected static class AbstractNestedCondition.MemberMatchOutcomes extends Object;\n// Condition that will match when all nested class conditions match.\npublic abstract class AllNestedConditions extends AbstractNestedCondition;\n", "des": "@Condition annotations and supporting classes."}
{"index": 1906, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package context\n\n// Auto-configuration for @ConfigurationProperties beans.\n@AutoConfiguration @EnableConfigurationProperties public class ConfigurationPropertiesAutoConfiguration extends Object;\n// Auto-configuration relating to the application context's lifecycle.\n@AutoConfiguration @EnableConfigurationProperties(LifecycleProperties.class) public class LifecycleAutoConfiguration extends Object;\n", "des": "Auto-configuration for the Spring context."}
{"index": 1907, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package couchbase\n\n// Callback interface that can be implemented by beans wishing to customize the ClusterEnvironment through a ClusterEnvironment.Builder whilst retaining default auto-configuration.\n@FunctionalInterface public interface ClusterEnvironmentBuilderCustomizer;\n", "des": "Auto-configuration for Couchbase."}
{"index": 1908, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package dao\n\n// Auto-configuration for Spring's persistence exception translation.\n@AutoConfiguration @ConditionalOnClass(org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor.class) public class PersistenceExceptionTranslationAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring DAO."}
{"index": 1909, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package data\n\n// Base ImportBeanDefinitionRegistrar used to auto-configure Spring Data Repositories.\npublic abstract class AbstractRepositoryConfigurationSourceSupport extends Object implements org.springframework.context.annotation.ImportBeanDefinitionRegistrar, org.springframework.beans.factory.BeanFactoryAware, org.springframework.context.ResourceLoaderAware, org.springframework.context.EnvironmentAware;\n", "des": "Auto-configuration base classes for Spring Data."}
{"index": 1910, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package cassandra\n\n// Auto-configuration for Spring Data's Cassandra support.\n@AutoConfiguration(after=CassandraAutoConfiguration.class) @ConditionalOnClass({com.datastax.oss.driver.api.core.CqlSession.class,org.springframework.data.cassandra.core.CassandraAdminOperations.class}) @ConditionalOnBean(com.datastax.oss.driver.api.core.CqlSession.class) public class CassandraDataAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Data Cassandra."}
{"index": 1911, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package couchbase\n\n", "des": "Auto-configuration for Spring Data Couchbase."}
{"index": 1912, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package elasticsearch\n\n", "des": "Auto-configuration for Spring Data Elasticsearch."}
{"index": 1913, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jdbc\n\n", "des": "Auto-configuration for Spring Data JDBC."}
{"index": 1914, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jpa\n\n", "des": "Auto-configuration for Spring Data JPA."}
{"index": 1915, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package ldap\n\n", "des": "Auto-configuration for Spring Data LDAP."}
{"index": 1916, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package mongo\n\n", "des": "Auto-configuration for Spring Data Mongo."}
{"index": 1917, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package neo4j\n\n", "des": "Auto-configuration for Spring Data Neo4j."}
{"index": 1918, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package r2dbc\n\n// Auto-configuration for DatabaseClient.\n@AutoConfiguration(after=R2dbcAutoConfiguration.class) @ConditionalOnClass({org.springframework.r2dbc.core.DatabaseClient.class,org.springframework.data.r2dbc.core.R2dbcEntityTemplate.class}) @ConditionalOnSingleCandidate(org.springframework.r2dbc.core.DatabaseClient.class) public class R2dbcDataAutoConfiguration extends Object;\n", "des": "Auto-Configuration for Spring Data R2DBC."}
{"index": 1919, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package redis\n\n// Callback interface that can be implemented by beans wishing to customize the ClientResources through a ClientResources.Builder whilst retaining default auto-configuration.\npublic interface ClientResourcesBuilderCustomizer;\n", "des": "Auto-configuration for Spring Data Redis."}
{"index": 1920, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package rest\n\n", "des": "Auto-configuration for Spring Data REST."}
{"index": 1921, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package web\n\n", "des": "Auto-configuration for Spring Data's Web Support."}
{"index": 1922, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package domain\n\n// Configures the base packages used by auto-configuration when scanning for entity classes.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(org.springframework.boot.autoconfigure.domain.EntityScanPackages.Registrar.class) public @interface EntityScan;\n// An entity scanner that searches the classpath from an @EntityScan specified packages.\npublic class EntityScanner extends Object;\n", "des": "General purpose domain annotations and classes."}
{"index": 1923, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package elasticsearch\n\n", "des": "Auto-configuration for Elasticsearch client."}
{"index": 1924, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package flyway\n\n", "des": "Auto-configuration for Flyway."}
{"index": 1925, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package freemarker\n\n", "des": "Auto-configuration for FreeMarker."}
{"index": 1926, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package graphql\n\n// @Conditional that only matches when a GraphQL schema is defined for the application, through schema files or infrastructure beans.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.autoconfigure.graphql.DefaultGraphQlSchemaCondition.class) public @interface ConditionalOnGraphQlSchema;\n", "des": "Auto-configuration for Spring GraphQL."}
{"index": 1927, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package data\n\n", "des": "Auto-configuration classes for data integrations with GraphQL."}
{"index": 1928, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n", "des": "Auto-configuration classes for WebFlux support in Spring GraphQL."}
{"index": 1929, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package rsocket\n\n", "des": "Auto-configuration classes for RSocket integration with GraphQL."}
{"index": 1930, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package security\n\n", "des": "Auto-configuration classes for Security support in Spring GraphQL."}
{"index": 1931, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n", "des": "Auto-configuration classes for MVC support in Spring GraphQL."}
{"index": 1932, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package template\n\n// Auto-configuration support for Groovy templates in MVC.\n@AutoConfiguration(after=WebMvcAutoConfiguration.class) @ConditionalOnClass(groovy.text.markup.MarkupTemplateEngine.class) @EnableConfigurationProperties(GroovyTemplateProperties.class) @ImportRuntimeHints(org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateRuntimeHints.class) public class GroovyTemplateAutoConfiguration extends Object;\n", "des": "Auto-configuration for Groovy templates."}
{"index": 1933, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package gson\n\n// Auto-configuration for Gson.\n@AutoConfiguration @ConditionalOnClass(com.google.gson.Gson.class) @EnableConfigurationProperties(GsonProperties.class) public class GsonAutoConfiguration extends Object;\n// Callback interface that can be implemented by beans wishing to further customize the Gson through GsonBuilder retaining its default auto-configuration.\n@FunctionalInterface public interface GsonBuilderCustomizer;\n", "des": "Auto-configuration for GSON."}
{"index": 1934, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package h2\n\n// Auto-configuration for H2's web console.\n@AutoConfiguration(after=DataSourceAutoConfiguration.class) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnClass(org.h2.server.web.JakartaWebServlet.class) @ConditionalOnProperty(prefix=\"spring.h2.console\", name=\"enabled\", havingValue=\"true\") @EnableConfigurationProperties(H2ConsoleProperties.class) public class H2ConsoleAutoConfiguration extends Object;\n", "des": "Auto-configuration for H2's Console."}
{"index": 1935, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package hateoas\n\n// properties for Spring HATEOAS.\n@ConfigurationProperties(prefix=\"spring.hateoas\") public class HateoasProperties extends Object;\n", "des": "Auto-configuration for Spring HATEOAS."}
{"index": 1936, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package hazelcast\n\n// Auto-configuration for Hazelcast IMDG.\n@AutoConfiguration @ConditionalOnClass(com.hazelcast.core.HazelcastInstance.class) @EnableConfigurationProperties(HazelcastProperties.class) @Import({org.springframework.boot.autoconfigure.hazelcast.HazelcastClientConfiguration.class,org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration.class}) public class HazelcastAutoConfiguration extends Object;\n", "des": "Auto-configuration for Hazelcast."}
{"index": 1937, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package http\n\n// Bean used to manage the HttpMessageConverters used in a Spring Boot application.\npublic class HttpMessageConverters extends Object implements Iterable<org.springframework.http.converter.HttpMessageConverter<?>>;\n", "des": "Auto-configuration for HTTP concerns."}
{"index": 1938, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package codec\n\n// Auto-configuration for Encoders and Decoders.\n@AutoConfiguration(after=JacksonAutoConfiguration.class) @ConditionalOnClass({org.springframework.http.codec.CodecConfigurer.class,org.springframework.web.reactive.function.client.WebClient.class}) @EnableConfigurationProperties(CodecProperties.class) public class CodecsAutoConfiguration extends Object;\n", "des": "Auto-configuration for HTTP codecs."}
{"index": 1939, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package influx\n\n// Auto-configuration for InfluxDB.\n@AutoConfiguration @ConditionalOnClass(org.influxdb.InfluxDB.class) @EnableConfigurationProperties(InfluxDbProperties.class) @ConditionalOnProperty(\"spring.influx.url\") public class InfluxDbAutoConfiguration extends Object;\n// Callback interface that can be implemented by beans wishing to further customize InfluxDB whilst retaining default auto-configuration.\n@FunctionalInterface public interface InfluxDbCustomizer;\n", "des": "Auto-configuration for InfluxDB."}
{"index": 1940, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package info\n\n// Auto-configuration for various project information.\n@AutoConfiguration @EnableConfigurationProperties(ProjectInfoProperties.class) public class ProjectInfoAutoConfiguration extends Object;\n// Configuration properties for project information.\n@ConfigurationProperties(prefix=\"spring.info\") public class ProjectInfoProperties extends Object;\n// Build specific info properties.\npublic static class ProjectInfoProperties.Build extends Object;\n", "des": "Auto-configuration for project information."}
{"index": 1941, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package integration\n\n// Auto-configuration for Spring Integration.\n@AutoConfiguration(after={DataSourceAutoConfiguration.class,JmxAutoConfiguration.class,TaskSchedulingAutoConfiguration.class}) @ConditionalOnClass(org.springframework.integration.config.EnableIntegration.class) @EnableConfigurationProperties({IntegrationProperties.class,JmxProperties.class}) public class IntegrationAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Integration."}
{"index": 1942, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jackson\n\n// Callback interface that can be implemented by beans wishing to further customize the ObjectMapper through Jackson2ObjectMapperBuilder retaining its default auto-configuration.\n@FunctionalInterface public interface Jackson2ObjectMapperBuilderCustomizer;\n// Auto configuration for Jackson.\n@AutoConfiguration @ConditionalOnClass(com.fasterxml.jackson.databind.ObjectMapper.class) public class JacksonAutoConfiguration extends Object;\n", "des": "Auto-configuration for Jackson."}
{"index": 1943, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jdbc\n\n// Auto-configuration for DataSource.\n@AutoConfiguration(before=SqlInitializationAutoConfiguration.class) @ConditionalOnClass({javax.sql.DataSource.class,org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType.class}) @ConditionalOnMissingBean(type=\"io.r2dbc.spi.ConnectionFactory\") @EnableConfigurationProperties(DataSourceProperties.class) @Import(DataSourcePoolMetadataProvidersConfiguration.class) public class DataSourceAutoConfiguration extends Object;\n", "des": "Auto-configuration for JDBC."}
{"index": 1944, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package metadata\n\n// Register the DataSourcePoolMetadataProvider instances for the supported data sources.\n@Configuration(proxyBeanMethods=false) public class DataSourcePoolMetadataProvidersConfiguration extends Object;\n", "des": "Auto-configuration for JDBC Metadata."}
{"index": 1945, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jersey\n\n", "des": "Auto-configuration for Jersey."}
{"index": 1946, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jms\n\n// Configure DefaultJmsListenerContainerFactory with sensible defaults.\npublic final class DefaultJmsListenerContainerFactoryConfigurer extends Object;\n", "des": "Auto-configuration for JMS."}
{"index": 1947, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package activemq\n\n", "des": "Auto-configuration for ActiveMQ."}
{"index": 1948, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package artemis\n\n", "des": "Auto-configuration for Artemis."}
{"index": 1949, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jmx\n\n// Auto-configuration to enable/disable Spring's @EnableMBeanExport mechanism based on configuration properties.\n@AutoConfiguration @EnableConfigurationProperties(JmxProperties.class) @ConditionalOnClass(org.springframework.jmx.export.MBeanExporter.class) @ConditionalOnProperty(prefix=\"spring.jmx\", name=\"enabled\", havingValue=\"true\") public class JmxAutoConfiguration extends Object;\n", "des": "Auto-configuration for JMX."}
{"index": 1950, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jooq\n\n// Callback interface that can be implemented by beans wishing to customize the DefaultConfiguration whilst retaining default auto-configuration.\n@FunctionalInterface public interface DefaultConfigurationCustomizer;\n// Auto-configuration for JOOQ.\n@AutoConfiguration(after={DataSourceAutoConfiguration.class,TransactionAutoConfiguration.class}) @ConditionalOnClass(org.jooq.DSLContext.class) @ConditionalOnBean(javax.sql.DataSource.class) public class JooqAutoConfiguration extends Object;\n", "des": "Auto-configuration for JOOQ."}
{"index": 1951, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jsonb\n\n// Auto-configuration for JSON-B.\n@AutoConfiguration @ConditionalOnClass(jakarta.json.bind.Jsonb.class) @ConditionalOnResource(resources={\"classpath:META-INF/services/jakarta.json.bind.spi.JsonbProvider\",\"classpath:META-INF/services/jakarta.json.spi.JsonProvider\"}) public class JsonbAutoConfiguration extends Object;\n", "des": "Auto-configuration for JSON-B."}
{"index": 1952, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package kafka\n\n// Configure ConcurrentKafkaListenerContainerFactory with sensible defaults.\npublic class ConcurrentKafkaListenerContainerFactoryConfigurer extends Object;\n// Callback interface for customizing DefaultKafkaConsumerFactory beans.\n@FunctionalInterface public interface DefaultKafkaConsumerFactoryCustomizer;\n// Callback interface for customizing DefaultKafkaProducerFactory beans.\n@FunctionalInterface public interface DefaultKafkaProducerFactoryCustomizer;\n", "des": "Auto-configuration for Apache Kafka."}
{"index": 1953, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package ldap\n\n// Auto-configuration for LDAP.\n@AutoConfiguration @ConditionalOnClass(org.springframework.ldap.core.ContextSource.class) @EnableConfigurationProperties(LdapProperties.class) public class LdapAutoConfiguration extends Object;\n// Configuration properties for LDAP.\n@ConfigurationProperties(prefix=\"spring.ldap\") public class LdapProperties extends Object;\n// settings.\npublic static class LdapProperties.Template extends Object;\n", "des": "Auto-configuration for LDAP."}
{"index": 1954, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package embedded\n\n", "des": "Auto-configuration for embedded LDAP."}
{"index": 1955, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package liquibase\n\n// A custom SpringLiquibase extension that closes the underlying DataSource once the database has been migrated.\npublic class DataSourceClosingSpringLiquibase extends liquibase.integration.spring.SpringLiquibase implements org.springframework.beans.factory.DisposableBean;\n", "des": "Auto-configuration for Liquibase."}
{"index": 1956, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package logging\n\n// ApplicationContextInitializer that writes the ConditionEvaluationReport to the log.\npublic class ConditionEvaluationReportLoggingListener extends Object implements org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>;\n// A condition evaluation report message that can logged or printed.\npublic class ConditionEvaluationReportMessage extends Object;\n", "des": "Auto-configuration for logging."}
{"index": 1957, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package mail\n\n// Configuration properties for email support.\n@ConfigurationProperties(prefix=\"spring.mail\") public class MailProperties extends Object;\n", "des": "Auto-configuration for email support."}
{"index": 1958, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package mongo\n\n// Auto-configuration for Mongo.\n@AutoConfiguration @ConditionalOnClass(com.mongodb.client.MongoClient.class) @EnableConfigurationProperties(MongoProperties.class) @ConditionalOnMissingBean(type=\"org.springframework.data.mongodb.MongoDatabaseFactory\") public class MongoAutoConfiguration extends Object;\n// A factory for a blocking MongoClient.\npublic class MongoClientFactory extends MongoClientFactorySupport<com.mongodb.client.MongoClient>;\n", "des": "Auto-configuration for MongoDB."}
{"index": 1959, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package mustache\n\n// Auto-configuration for Mustache.\n@AutoConfiguration @ConditionalOnClass(com.samskivert.mustache.Mustache.class) @EnableConfigurationProperties(MustacheProperties.class) @Import({org.springframework.boot.autoconfigure.mustache.MustacheServletWebConfiguration.class,org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration.class}) public class MustacheAutoConfiguration extends Object;\n", "des": "Auto-configuration for Mustache."}
{"index": 1960, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package neo4j\n\n// Callback interface that can be implemented by beans wishing to customize the Config through a Config.ConfigBuilder whilst retaining default auto-configuration.\n@FunctionalInterface public interface ConfigBuilderCustomizer;\n// Auto-configuration for Neo4j.\n@AutoConfiguration @ConditionalOnClass(org.neo4j.driver.Driver.class) @EnableConfigurationProperties(Neo4jProperties.class) public class Neo4jAutoConfiguration extends Object;\n", "des": "Auto-configuration for Neo4j."}
{"index": 1961, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package netty\n\n// Auto-configuration for Netty.\n@AutoConfiguration @ConditionalOnClass(io.netty.util.NettyRuntime.class) @EnableConfigurationProperties(NettyProperties.class) public class NettyAutoConfiguration extends Object;\n// @ConfigurationProperties for the Netty engine.\n@ConfigurationProperties(prefix=\"spring.netty\") public class NettyProperties extends Object;\n// \npublic static enum NettyProperties.LeakDetection extends Enum<NettyProperties.LeakDetection>;\n", "des": "Auto-configuration for the Netty library."}
{"index": 1962, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jpa\n\n// Callback interface that can be used to customize the auto-configured EntityManagerFactoryBuilder.\n@FunctionalInterface public interface EntityManagerFactoryBuilderCustomizer;\n// BeanFactoryPostProcessor that can be used to dynamically declare that all EntityManagerFactory beans should \"depend on\" one or more specific beans.\npublic class EntityManagerFactoryDependsOnPostProcessor extends AbstractDependsOnBeanFactoryPostProcessor;\n", "des": "Auto-configuration for JPA and Spring ORM."}
{"index": 1963, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package quartz\n\n// Define the supported Quartz JobStore.\npublic enum JobStoreType extends Enum<JobStoreType>;\n", "des": "Auto-configuration for Quartz Scheduler."}
{"index": 1964, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package r2dbc\n\n// Callback interface that can be implemented by beans wishing to customize the ConnectionFactoryOptions through a ConnectionFactoryOptions.Builder whilst retaining default auto-configuration.\n@FunctionalInterface public interface ConnectionFactoryOptionsBuilderCustomizer;\n", "des": "Auto-Configuration for R2DBC."}
{"index": 1965, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package netty\n\n// Configurations for Reactor Netty.\npublic final class ReactorNettyConfigurations extends Object;\n// \n@Configuration(proxyBeanMethods=false) @EnableConfigurationProperties(ReactorNettyProperties.class) public static class ReactorNettyConfigurations.ReactorResourceFactoryConfiguration extends Object;\n// Configuration properties for Reactor Netty.\n@ConfigurationProperties(prefix=\"spring.reactor.netty\") public class ReactorNettyProperties extends Object;\n", "des": "Auto-configuration for Reactor Netty."}
{"index": 1966, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package rsocket\n\n// Callback interface that can be used to customize a RSocketMessageHandler.\n@FunctionalInterface public interface RSocketMessageHandlerCustomizer;\n", "des": "Auto-configuration for RSocket."}
{"index": 1967, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package security\n\n// @Conditional that only matches when web security is available and the user has not defined their own configuration.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition.class) public @interface ConditionalOnDefaultWebSecurity;\n", "des": "Auto-configuration for Spring Security."}
{"index": 1968, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package client\n\n// Condition that matches if any spring.security.oauth2.client.registration properties are defined.\npublic class ClientsConfiguredCondition extends SpringBootCondition;\n// OAuth 2.0 client properties.\n@ConfigurationProperties(prefix=\"spring.security.oauth2.client\") public class OAuth2ClientProperties extends Object implements org.springframework.beans.factory.InitializingBean;\n// \npublic static class OAuth2ClientProperties.Provider extends Object;\n", "des": "Support for Spring Security's OAuth 2 client."}
{"index": 1969, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n", "des": "Auto-configuration for Spring Security's Reactive OAuth 2 client."}
{"index": 1970, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n", "des": "Auto-configuration for Spring Security's OAuth 2 client."}
{"index": 1971, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package resource\n\n// Condition for creating JwtDecoder by oidc issuer location.\npublic class IssuerUriCondition extends SpringBootCondition;\n// Condition for creating a jwt decoder using a public key value.\npublic class KeyValueCondition extends SpringBootCondition;\n// OAuth 2.0 resource server properties.\n@ConfigurationProperties(prefix=\"spring.security.oauth2.resourceserver\") public class OAuth2ResourceServerProperties extends Object;\n", "des": "Support for Spring Security's OAuth2 resource server."}
{"index": 1972, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n// Callback interface for the customization of the NimbusReactiveJwtDecoder.JwkSetUriReactiveJwtDecoderBuilder used to create the auto-configured ReactiveJwtDecoder for a JWK set URI that has been configured directly or obtained through an issuer URI.\n@FunctionalInterface public interface JwkSetUriReactiveJwtDecoderBuilderCustomizer;\n", "des": "Auto-configuration for Spring Security's Reactive OAuth2 resource server."}
{"index": 1973, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n// Callback interface for the customization of the NimbusJwtDecoder.JwkSetUriJwtDecoderBuilder used to create the auto-configured JwtDecoder for a JWK set URI that has been configured directly or obtained through an issuer URI.\n@FunctionalInterface public interface JwkSetUriJwtDecoderBuilderCustomizer;\n", "des": "Auto-configuration for Spring Security's OAuth2 resource server."}
{"index": 1974, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n", "des": "Auto-configuration for Spring Security's OAuth2 authorization server."}
{"index": 1975, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n// Factory that can be used to create a ServerWebExchangeMatcher for commonly used paths.\npublic final class PathRequest extends Object;\n", "des": "Auto-configuration for reactive Spring Security."}
{"index": 1976, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package rsocket\n\n// Auto-configuration for Spring Security for an RSocket server.\n@AutoConfiguration @EnableRSocketSecurity @ConditionalOnClass(org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor.class) public class RSocketSecurityAutoConfiguration extends Object;\n", "des": "Auto-configuration for RSocket support in Spring Security."}
{"index": 1977, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package saml2\n\n", "des": "Auto-configuration for Spring Security's SAML 2.0."}
{"index": 1978, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n// RequestMatcherProvider that provides an AntPathRequestMatcher.\npublic class AntPathRequestMatcherProvider extends Object implements RequestMatcherProvider;\n// Factory that can be used to create a RequestMatcher for commonly used paths.\npublic final class PathRequest extends Object;\n", "des": "Auto-configuration for Servlet-based Spring Security."}
{"index": 1979, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package sendgrid\n\n// Auto-configuration for SendGrid.\n@AutoConfiguration @ConditionalOnClass(com.sendgrid.SendGrid.class) @ConditionalOnProperty(prefix=\"spring.sendgrid\", value=\"api-key\") @EnableConfigurationProperties(SendGridProperties.class) public class SendGridAutoConfiguration extends Object;\n// @ConfigurationProperties for SendGrid.\n@ConfigurationProperties(prefix=\"spring.sendgrid\") public class SendGridProperties extends Object;\n// \npublic static class SendGridProperties.Proxy extends Object;\n", "des": "Auto-configuration for SendGrid."}
{"index": 1980, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package connection\n\n// Base interface for types that provide the details required to establish a connection to a remote service.\npublic interface ConnectionDetails;\n// A registry of ConnectionDetailsFactory instances.\npublic class ConnectionDetailsFactories extends Object;\n// A factory to create ConnectionDetails from a given source.\npublic interface ConnectionDetailsFactory<S,D extends ConnectionDetails>;\n", "des": "Support for service connections that affect auto-configuration."}
{"index": 1981, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package session\n\n// Callback interface that can be implemented by beans wishing to customize the DefaultCookieSerializer configuration.\n@FunctionalInterface public interface DefaultCookieSerializerCustomizer;\n// Configuration properties for Hazelcast backed Spring Session.\n@ConfigurationProperties(prefix=\"spring.session.hazelcast\") public class HazelcastSessionProperties extends Object;\n", "des": "Auto-configuration for Spring Session."}
{"index": 1982, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package init\n\n// Condition that checks if the database initialization of a particular component should be considered.\npublic class OnDatabaseInitializationCondition extends SpringBootCondition;\n// DataSourceScriptDatabaseInitializer for the primary SQL database.\n@ImportRuntimeHints(org.springframework.boot.autoconfigure.sql.init.SqlInitializationScriptsRuntimeHints.class) public class SqlDataSourceScriptDatabaseInitializer extends org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer;\n", "des": "Auto-configuration for basic script-based initialization of an SQL database."}
{"index": 1983, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package ssl\n\n// SslBundleProperties for Java keystores.\npublic class JksSslBundleProperties extends SslBundleProperties;\n// Store properties.\npublic static class JksSslBundleProperties.Store extends Object;\n// SslBundleProperties for PEM-encoded certificates and private keys.\npublic class PemSslBundleProperties extends SslBundleProperties;\n// Store properties.\npublic static class PemSslBundleProperties.Store extends Object;\n", "des": "Auto-configuration for SSL bundles."}
{"index": 1984, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package task\n\n// Auto-configuration for TaskExecutor.\n@ConditionalOnClass(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.class) @AutoConfiguration @EnableConfigurationProperties(TaskExecutionProperties.class) public class TaskExecutionAutoConfiguration extends Object;\n// Configuration properties for task execution.\n@ConfigurationProperties(\"spring.task.execution\") public class TaskExecutionProperties extends Object;\n// \npublic static class TaskExecutionProperties.Pool extends Object;\n", "des": "Auto-configuration for task execution and scheduling."}
{"index": 1985, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package template\n\n// Base class for @ConfigurationProperties of a AbstractTemplateViewResolver.\npublic abstract class AbstractTemplateViewResolverProperties extends AbstractViewResolverProperties;\n// Base class for @ConfigurationProperties of a ViewResolver.\npublic abstract class AbstractViewResolverProperties extends Object;\n", "des": "Base classes for template Auto-configuration."}
{"index": 1986, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package thymeleaf\n\n", "des": "Auto-configuration for Thymeleaf."}
{"index": 1987, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package transaction\n\n// Callback interface that can be implemented by beans wishing to customize PlatformTransactionManagers whilst retaining default auto-configuration.\n@FunctionalInterface public interface PlatformTransactionManagerCustomizer<T extends org.springframework.transaction.PlatformTransactionManager>;\n", "des": "Auto-configuration for transaction support."}
{"index": 1988, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jta\n\n", "des": "Auto-configuration for JTA."}
{"index": 1989, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package validation\n\n// Auto-configuration to configure the validation infrastructure.\n@AutoConfiguration @ConditionalOnClass(jakarta.validation.executable.ExecutableValidator.class) @ConditionalOnResource(resources=\"classpath:META-INF/services/jakarta.validation.spi.ValidationProvider\") @Import(org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor.class) public class ValidationAutoConfiguration extends Object;\n", "des": "Auto-configuration for (JSR-303) Validation."}
{"index": 1990, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package web\n\n// @Conditional that checks whether the Spring resource handling chain is enabled.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition.class) public @interface ConditionalOnEnabledResourceChain;\n// Configuration properties for web error handling.\npublic class ErrorProperties extends Object;\n", "des": "Auto-configuration for common web concerns."}
{"index": 1991, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package client\n\n// Auto-configuration for RestTemplate.\n@AutoConfiguration(after=HttpMessageConvertersAutoConfiguration.class) @ConditionalOnClass(org.springframework.web.client.RestTemplate.class) @Conditional(org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.class) public class RestTemplateAutoConfiguration extends Object;\n", "des": "Auto-configuration for web clients."}
{"index": 1992, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package embedded\n\n// Auto-configuration for embedded servlet and reactive web servers customizations.\n@AutoConfiguration @ConditionalOnNotWarDeployment @ConditionalOnWebApplication @EnableConfigurationProperties(ServerProperties.class) public class EmbeddedWebServerFactoryCustomizerAutoConfiguration extends Object;\n", "des": "Configuration for embedded reactive and servlet web servers."}
{"index": 1993, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package format\n\n// Formatters for dates, times, and date-times.\npublic class DateTimeFormatters extends Object;\n// FormattingConversionService dedicated to web applications for formatting and converting values to/from the web.\npublic class WebConversionService extends org.springframework.format.support.DefaultFormattingConversionService;\n", "des": "Support classes for web-specific formatting."}
{"index": 1994, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n// Auto-configuration for HttpHandler.\n@AutoConfiguration(after=WebFluxAutoConfiguration.class) @ConditionalOnClass({org.springframework.web.reactive.DispatcherHandler.class,org.springframework.http.server.reactive.HttpHandler.class}) @ConditionalOnWebApplication(type=REACTIVE) @ConditionalOnMissingBean(org.springframework.http.server.reactive.HttpHandler.class) @AutoConfigureOrder(-2147483638) public class HttpHandlerAutoConfiguration extends Object;\n", "des": "Auto-configuration for reactive web servers and Spring WebFlux."}
{"index": 1995, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package error\n\n// Abstract base class for ErrorWebExceptionHandler implementations.\npublic abstract class AbstractErrorWebExceptionHandler extends Object implements org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler, org.springframework.beans.factory.InitializingBean;\n// Basic global WebExceptionHandler, rendering ErrorAttributes.\npublic class DefaultErrorWebExceptionHandler extends AbstractErrorWebExceptionHandler;\n", "des": "Auto-configuration for Spring WebFlux error handling."}
{"index": 1996, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package client\n\n", "des": "Auto-configuration for Spring Framework's functional web client."}
{"index": 1997, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n// @Conditional that only matches when no Filter beans of the specified type are contained in the BeanFactory.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @ConditionalOnMissingBean(parameterizedContainer=org.springframework.boot.web.servlet.FilterRegistrationBean.class) public @interface ConditionalOnMissingFilterBean;\n", "des": "Auto-configuration for servlet web servers and Spring MVC."}
{"index": 1998, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package error\n\n// Abstract base class for error @Controller implementations.\npublic abstract class AbstractErrorController extends Object implements org.springframework.boot.web.servlet.error.ErrorController;\n// Basic global error @Controller, rendering ErrorAttributes.\n@Controller @RequestMapping(\"${server.error.path:${error.path:/error}}\") public class BasicErrorController extends AbstractErrorController;\n", "des": "Auto-configuration for Spring MVC error handling."}
{"index": 1999, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package webservices\n\n// Auto-configuration for Spring Web Services.\n@AutoConfiguration(after=ServletWebServerFactoryAutoConfiguration.class) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnClass(org.springframework.ws.transport.http.MessageDispatcherServlet.class) @ConditionalOnMissingBean(org.springframework.ws.config.annotation.WsConfigurationSupport.class) @EnableConfigurationProperties(WebServicesProperties.class) public class WebServicesAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Web Services."}
{"index": 2000, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package client\n\n// Auto-configuration for WebServiceTemplate.\n@AutoConfiguration @ConditionalOnClass({org.springframework.ws.client.core.WebServiceTemplate.class,org.springframework.oxm.Unmarshaller.class,org.springframework.oxm.Marshaller.class}) public class WebServiceTemplateAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Web Services Clients."}
{"index": 2001, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n// WebSocket customizer for JettyReactiveWebServerFactory.\npublic class JettyWebSocketReactiveWebServerCustomizer extends Object implements org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.embedded.jetty.JettyReactiveWebServerFactory>, org.springframework.core.Ordered;\n", "des": "Auto-configuration for WebSocket support in reactive web servers."}
{"index": 2002, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n// WebSocket customizer for JettyServletWebServerFactory.\npublic class JettyWebSocketServletWebServerCustomizer extends Object implements org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory>, org.springframework.core.Ordered;\n", "des": "Auto-configuration for WebSocket support in servlet web servers."}
{"index": 2003, "repo": "spring-integration-ws-6.1.2", "code": "package ws\n\n// \npublic abstract class AbstractWebServiceInboundGateway extends org.springframework.integration.gateway.MessagingGatewaySupport implements org.springframework.ws.server.endpoint.MessageEndpoint, org.springframework.integration.context.OrderlyShutdownCapable;\n// Base class for outbound Web Service-invoking Messaging Gateways.\npublic abstract class AbstractWebServiceOutboundGateway extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n", "des": "Provides several inbound and outbound Web Service components."}
{"index": 2004, "repo": "spring-integration-ws-6.1.2", "code": "package config\n\n// \npublic class WebServiceHeaderEnricherParser extends org.springframework.integration.config.xml.HeaderEnricherParserSupport;\n// \npublic class WebServiceInboundGatewayParser extends org.springframework.integration.config.xml.AbstractInboundGatewayParser;\n// Parser for the <outbound-gateway/> element in the 'ws' namespace.\npublic class WebServiceOutboundGatewayParser extends org.springframework.integration.config.xml.AbstractOutboundGatewayParser;\n", "des": "Contains parser classes for the Web Services namespace support."}
{"index": 2005, "repo": "spring-integration-ws-6.1.2", "code": "package dsl\n\n// Base MessagingGatewaySpec for web services.\npublic abstract class BaseWsInboundGatewaySpec<S extends BaseWsInboundGatewaySpec<S,E>,E extends AbstractWebServiceInboundGateway> extends org.springframework.integration.dsl.MessagingGatewaySpec<S,E>;\n", "des": "Contains classes for DSL support."}
{"index": 2006, "repo": "spring-boot-devtools-3.1.1", "code": "package devtools\n\n// Application that can be used to establish a link to remotely running Spring Boot code.\npublic final class RemoteSpringApplication extends Object;\n", "des": "Spring Boot developer tools."}
{"index": 2007, "repo": "spring-boot-devtools-3.1.1", "code": "package autoconfigure\n\n", "des": "Auto-configuration for spring-boot-devtools."}
{"index": 2008, "repo": "spring-boot-devtools-3.1.1", "code": "package classpath\n\n// ApplicationEvent containing details of a classpath change.\npublic class ClassPathChangedEvent extends org.springframework.context.ApplicationEvent;\n// Provides access to entries on the classpath that refer to directories.\npublic class ClassPathDirectories extends Object implements Iterable<File>;\n", "des": "Support for classpath monitoring."}
{"index": 2009, "repo": "spring-boot-devtools-3.1.1", "code": "package env\n\n// EnvironmentPostProcessor to add devtools properties from the user's home directory.\npublic class DevToolsHomePropertiesPostProcessor extends Object implements org.springframework.boot.env.EnvironmentPostProcessor;\n// EnvironmentPostProcessor to add properties that make sense when working at development time.\n@Order(2147483647) public class DevToolsPropertyDefaultsPostProcessor extends Object implements org.springframework.boot.env.EnvironmentPostProcessor;\n", "des": "DevTools classes relating to Spring Framework's Environment."}
{"index": 2010, "repo": "spring-boot-devtools-3.1.1", "code": "package filewatch\n\n// A single file that has changed.\npublic final class ChangedFile extends Object;\n// Change types.\npublic static enum ChangedFile.Type extends Enum<ChangedFile.Type>;\n// A collections of files from a specific source directory that have changed.\npublic final class ChangedFiles extends Object implements Iterable<ChangedFile>;\n// Callback interface when file changes are detected.\n@FunctionalInterface public interface FileChangeListener;\n", "des": "Class to watch the local filesystem for changes."}
{"index": 2011, "repo": "spring-boot-devtools-3.1.1", "code": "package livereload\n\n// A livereload server.\npublic class LiveReloadServer extends Object;\n", "des": "Support for the livereload protocol."}
{"index": 2012, "repo": "spring-boot-devtools-3.1.1", "code": "package logger\n\n// Devtools deferred logging support.\npublic final class DevToolsLogFactory extends Object;\n", "des": "Devtools specific logging concerns."}
{"index": 2013, "repo": "spring-boot-devtools-3.1.1", "code": "package client\n\n// Listens and pushes any classpath updates to a remote endpoint.\npublic class ClassPathChangeUploader extends Object implements org.springframework.context.ApplicationListener<ClassPathChangedEvent>;\n// ClientHttpRequestInterceptor to populate arbitrary HTTP headers with a value.\npublic class HttpHeaderInterceptor extends Object implements org.springframework.http.client.ClientHttpRequestInterceptor;\n", "des": "Client support for a remotely running Spring Boot application."}
{"index": 2014, "repo": "spring-boot-devtools-3.1.1", "code": "package server\n\n// Provides access control for a Dispatcher.\n@FunctionalInterface public interface AccessManager;\n// Dispatcher used to route incoming remote server requests to a Handler.\npublic class Dispatcher extends Object;\n// Servlet filter providing integration with the remote server Dispatcher.\npublic class DispatcherFilter extends Object implements jakarta.servlet.Filter;\n// A single handler that is able to process an incoming remote server request.\n@FunctionalInterface public interface Handler;\n", "des": "Server support for a remotely running Spring Boot application."}
{"index": 2015, "repo": "spring-boot-devtools-3.1.1", "code": "package restart\n\n// Utility to determine if a Java agent based reloader (e.g.\npublic abstract class AgentReloader extends Object;\n// @Conditional that only matches when the RestartInitializer has been applied with non null URLs.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.devtools.restart.OnInitializedRestarterCondition.class) public @interface ConditionalOnInitializedRestarter;\n", "des": "Application restart support."}
{"index": 2016, "repo": "spring-boot-devtools-3.1.1", "code": "package classloader\n\n// A single file that may be served from a ClassLoader.\npublic class ClassLoaderFile extends Object implements Serializable;\n// The kinds of class load files.\npublic static enum ClassLoaderFile.Kind extends Enum<ClassLoaderFile.Kind>;\n// A container for files that may be served from a ClassLoader.\n@FunctionalInterface public interface ClassLoaderFileRepository;\n", "des": "Classloaders used for reload support."}
{"index": 2017, "repo": "spring-boot-devtools-3.1.1", "code": "package server\n\n// Default implementation of SourceDirectoryUrlFilter that attempts to match URLs using common naming conventions.\npublic class DefaultSourceDirectoryUrlFilter extends Object implements SourceDirectoryUrlFilter;\n// An HTTP server that can be used to upload updated ClassLoaderFiles and trigger restarts.\npublic class HttpRestartServer extends Object;\n// Adapts HttpRestartServer to a Handler.\npublic class HttpRestartServerHandler extends Object implements Handler;\n", "des": "Remote restart server."}
{"index": 2018, "repo": "spring-boot-devtools-3.1.1", "code": "package settings\n\n// DevTools settings loaded from /META-INF/spring-devtools.properties files.\npublic class DevToolsSettings extends Object;\n", "des": "Classes for loading DevTools settings."}
{"index": 2019, "repo": "spring-boot-devtools-3.1.1", "code": "package system\n\n// Utility to deduce if DevTools should be enabled in the current context.\npublic final class DevToolsEnablementDeducer extends Object;\n", "des": "Devtools system support classes."}
{"index": 2020, "repo": "spring-boot-devtools-3.1.1", "code": "package client\n\n// TunnelConnection implementation that uses HTTP to transfer data.\npublic class HttpTunnelConnection extends Object implements TunnelConnection;\n// The client side component of a socket tunnel.\npublic class TunnelClient extends Object implements org.springframework.beans.factory.SmartInitializingSingleton;\n// Listener that can be used to receive TunnelClient events.\npublic interface TunnelClientListener;\n", "des": "Client side TCP tunnel support."}
{"index": 2021, "repo": "spring-boot-devtools-3.1.1", "code": "package payload\n\n// Encapsulates a payload data sent over a HTTP tunnel.\npublic class HttpTunnelPayload extends Object;\n// Utility class that forwards HttpTunnelPayload instances to a destination channel, respecting sequence order.\npublic class HttpTunnelPayloadForwarder extends Object;\n", "des": "Classes to deal with payloads sent over an HTTP tunnel."}
{"index": 2022, "repo": "spring-boot-devtools-3.1.1", "code": "package server\n\n// A server that can be used to tunnel TCP traffic over HTTP.\npublic class HttpTunnelServer extends Object;\n// Encapsulates an HTTP request/response pair.\nprotected static class HttpTunnelServer.HttpConnection extends Object;\n// Adapts a HttpTunnelServer to a Handler.\npublic class HttpTunnelServerHandler extends Object implements Handler;\n", "des": "Server side TCP tunnel support."}
{"index": 2023, "repo": "spring-messaging-6.0.11", "code": "package messaging\n\n// A generic message representation with headers and body.\npublic interface Message<T>;\n// Defines methods for sending messages.\n@FunctionalInterface public interface MessageChannel;\n// Exception that indicates an error occurred during message delivery.\npublic class MessageDeliveryException extends MessagingException;\n// Simple contract for handling a Message.\n@FunctionalInterface public interface MessageHandler;\n", "des": "Support for working with messaging APIs and protocols."}
{"index": 2024, "repo": "spring-messaging-6.0.11", "code": "package converter\n\n// Common base class for plain JSON converters, e.g.\npublic abstract class AbstractJsonMessageConverter extends AbstractMessageConverter;\n", "des": "Provides support for message conversion."}
{"index": 2025, "repo": "spring-messaging-6.0.11", "code": "package core\n\n// An extension of AbstractMessagingTemplate that adds operations for sending messages to a resolvable destination name.\npublic abstract class AbstractDestinationResolvingMessagingTemplate<D> extends AbstractMessagingTemplate<D> implements DestinationResolvingMessageSendingOperations<D>, DestinationResolvingMessageReceivingOperations<D>, DestinationResolvingMessageRequestReplyOperations<D>;\n", "des": "Defines interfaces and implementation classes for messaging templates."}
{"index": 2026, "repo": "spring-messaging-6.0.11", "code": "package handler\n\n// Base class for MessageCondition's that pre-declares abstract methods AbstractMessageCondition.getContent() and AbstractMessageCondition.getToStringInfix() in order to provide implementations of AbstractMessageCondition.equals(Object), AbstractMessageCondition.hashCode(), and AbstractMessageCondition.toString().\npublic abstract class AbstractMessageCondition<T extends AbstractMessageCondition<T>> extends Object implements MessageCondition<T>;\n", "des": "Basic abstractions for working with message handler methods."}
{"index": 2027, "repo": "spring-messaging-6.0.11", "code": "package annotation\n\n// Annotation that indicates a method parameter should be bound to a template variable in a destination template string.\n@Target(PARAMETER) @Retention(RUNTIME) @Documented public @interface DestinationVariable;\n// Annotation which indicates that a method parameter should be bound to a message header.\n@Target(PARAMETER) @Retention(RUNTIME) @Documented public @interface Header;\n", "des": "Annotations and support classes for handling messages."}
{"index": 2028, "repo": "spring-messaging-6.0.11", "code": "package reactive\n\n// Abstract base class to resolve method arguments from a named value, e.g.\npublic abstract class AbstractNamedValueMethodArgumentResolver extends Object implements SyncHandlerMethodArgumentResolver;\n// Represents a named value declaration.\nprotected static class AbstractNamedValueMethodArgumentResolver.NamedValueInfo extends Object;\n", "des": "Support classes for working with annotated message-handling methods with non-blocking, reactive contracts."}
{"index": 2029, "repo": "spring-messaging-6.0.11", "code": "package support\n\n// Abstract base class to resolve method arguments from a named value, e.g.\npublic abstract class AbstractNamedValueMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n// Represents a named value declaration.\nprotected static class AbstractNamedValueMethodArgumentResolver.NamedValueInfo extends Object;\n", "des": "Support classes for working with annotated message-handling methods."}
{"index": 2030, "repo": "spring-messaging-6.0.11", "code": "package invocation\n\n// Convenient base class for AsyncHandlerMethodReturnValueHandler implementations that support only asynchronous (Future-like) return values and merely serve as adapters of such types to Spring's ListenableFuture.\npublic abstract class AbstractAsyncReturnValueHandler extends Object implements AsyncHandlerMethodReturnValueHandler;\n", "des": "Common infrastructure for invoking message handler methods."}
{"index": 2031, "repo": "spring-messaging-6.0.11", "code": "package reactive\n\n// Base class for a return value handler that encodes return values to Flux<DataBuffer> through the configured Encoders.\npublic abstract class AbstractEncoderMethodReturnValueHandler extends Object implements HandlerMethodReturnValueHandler;\n", "des": "Common infrastructure for invoking message handler methods with non-blocking, and reactive contracts."}
{"index": 2032, "repo": "spring-messaging-6.0.11", "code": "package rsocket\n\n// Default MetadataExtractor implementation that relies on Decoders to deserialize the content of metadata entries.\npublic class DefaultMetadataExtractor extends Object implements MetadataExtractor, MetadataExtractorRegistry;\n// Strategy to extract a map of value(s) from Payload metadata, which could be composite metadata with multiple entries.\npublic interface MetadataExtractor;\n// Stores registrations of extractors for metadata entries.\npublic interface MetadataExtractorRegistry;\n", "des": "Support for the RSocket protocol."}
{"index": 2033, "repo": "spring-messaging-6.0.11", "code": "package annotation\n\n// Annotation to map the initial ConnectionSetupPayload and subsequent metadata pushes onto a handler method.\n@Target(METHOD) @Retention(RUNTIME) @Documented public @interface ConnectMapping;\n", "des": "Annotations and support classes for handling RSocket streams."}
{"index": 2034, "repo": "spring-messaging-6.0.11", "code": "package support\n\n// A condition to assist with mapping onto handler methods based on the RSocket frame type.\npublic class RSocketFrameTypeMessageCondition extends AbstractMessageCondition<RSocketFrameTypeMessageCondition>;\n// Extension of MessageMappingMessageHandler for handling RSocket requests with @ConnectMapping and @MessageMapping methods.\npublic class RSocketMessageHandler extends MessageMappingMessageHandler;\n", "des": "Support classes for working with annotated RSocket stream handling methods."}
{"index": 2035, "repo": "spring-messaging-6.0.11", "code": "package service\n\n// RSocketServiceArgumentResolver for a @DestinationVariable annotated argument.\npublic class DestinationVariableArgumentResolver extends Object implements RSocketServiceArgumentResolver;\n// RSocketServiceArgumentResolver for metadata entries.\npublic class MetadataArgumentResolver extends Object implements RSocketServiceArgumentResolver;\n", "des": "Annotations to declare an RSocket service contract with request methods along with a proxy factory backed by an RSocketRequester."}
{"index": 2036, "repo": "spring-messaging-6.0.11", "code": "package simp\n\n// A wrapper class for access to attributes associated with a SiMP session (e.g.\npublic class SimpAttributes extends Object;\n// Holder class to expose SiMP attributes associated with a session (e.g.\npublic abstract class SimpAttributesContextHolder extends Object;\n", "des": "Generic support for Simple Messaging Protocols including protocols such as STOMP."}
{"index": 2037, "repo": "spring-messaging-6.0.11", "code": "package annotation\n\n// Indicates the return value of a message-handling method should be sent as a Message to the specified destination(s) further prepended with \"/user/{username}\" where the user name is extracted from the headers of the input message being handled.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented public @interface SendToUser;\n", "des": "Annotations and for handling messages from SImple Messaging Protocols such as STOMP."}
{"index": 2038, "repo": "spring-messaging-6.0.11", "code": "package support\n\n// MessagingException thrown when a session is missing.\npublic class MissingSessionUserException extends MessagingException;\n// Resolver for arguments of type Principal, including Optional<Principal>.\npublic class PrincipalMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n", "des": "Support classes for handling messages from simple messaging protocols (like STOMP)."}
{"index": 2039, "repo": "spring-messaging-6.0.11", "code": "package broker\n\n// Abstract base class for a MessageHandler that broker messages to registered subscribers.\npublic abstract class AbstractBrokerMessageHandler extends Object implements MessageHandler, org.springframework.context.ApplicationEventPublisherAware, org.springframework.context.SmartLifecycle;\n", "des": "Provides a \"simple\" message broker implementation along with an abstract base class and other supporting types such as a registry for subscriptions."}
{"index": 2040, "repo": "spring-messaging-6.0.11", "code": "package config\n\n// Base class for message broker registration classes.\npublic abstract class AbstractBrokerRegistration extends Object;\n// Provides essential configuration for handling messages with simple messaging protocols such as STOMP.\npublic abstract class AbstractMessageBrokerConfiguration extends Object implements org.springframework.context.ApplicationContextAware;\n// A registration class for customizing the configuration for a MessageChannel.\npublic class ChannelRegistration extends Object;\n", "des": "Configuration support for WebSocket messaging using higher level messaging protocols."}
{"index": 2041, "repo": "spring-messaging-6.0.11", "code": "package stomp\n\n// An extension of StompDecoder that buffers content remaining in the input ByteBuffer after the parent class has read all (complete) STOMP frames from it.\npublic class BufferingStompDecoder extends Object;\n// A StompSession that implements TcpConnectionHandler in order to send and receive messages.\npublic interface ConnectionHandlingStompSession extends StompSession, StompTcpConnectionHandler<byte[]>;\n", "des": "Generic support for simple messaging protocols (like STOMP)."}
{"index": 2042, "repo": "spring-messaging-6.0.11", "code": "package user\n\n// A default implementation of UserDestinationResolver that relies on a SimpUserRegistry to find active sessions for a user.\npublic class DefaultUserDestinationResolver extends Object implements UserDestinationResolver;\n// A Principal can also implement this contract when getName() isn't globally unique and therefore not suited for use with \"user\" destinations.\npublic interface DestinationUserNameProvider;\n", "des": "Support for handling messages to \"user\" destinations (i.e."}
{"index": 2043, "repo": "spring-messaging-6.0.11", "code": "package support\n\n// A base HeaderMapper implementation.\npublic abstract class AbstractHeaderMapper<T> extends Object implements HeaderMapper<T>;\n// Abstract base class for MessageChannel implementations.\npublic abstract class AbstractMessageChannel extends Object implements MessageChannel, InterceptableChannel, org.springframework.beans.factory.BeanNameAware;\n", "des": "Provides implementations of Message along with a MessageBuilder and MessageHeaderAccessor for building and working with messages and message headers, as well as various MessageChannel implementations and channel interceptor support."}
{"index": 2044, "repo": "spring-messaging-6.0.11", "code": "package tcp\n\n// A simple strategy for making reconnect attempts at a fixed interval.\npublic class FixedIntervalReconnectStrategy extends Object implements ReconnectStrategy;\n// A contract to determine the frequency of reconnect attempts after connection failure.\n@FunctionalInterface public interface ReconnectStrategy;\n// A contract for sending messages and managing a TCP connection.\npublic interface TcpConnection<P> extends Closeable;\n", "des": "Contains abstractions and implementation classes for establishing TCP connections via TcpOperations, handling messages via TcpConnectionHandler, as well as sending messages via TcpConnection."}
{"index": 2045, "repo": "spring-messaging-6.0.11", "code": "package reactor\n\n// Convenient base class for ReactorNettyCodec implementations that need to work with NIO ByteBuffers.\npublic abstract class AbstractNioBufferReactorNettyCodec<P> extends Object implements ReactorNettyCodec<P>;\n// Reactor Netty based implementation of TcpOperations.\npublic class ReactorNetty2TcpClient<P> extends Object implements TcpOperations<P>;\n// Reactor Netty based implementation of TcpConnection.\npublic class ReactorNetty2TcpConnection<P> extends Object implements TcpConnection<P>;\n", "des": "Contains support for TCP messaging based on Reactor."}
{"index": 2046, "repo": "spring-boot-loader-3.1.1", "code": "package loader\n\n// Base class for executable archive Launchers.\npublic abstract class ExecutableArchiveLauncher extends Launcher;\n// Launcher for JAR based archives.\npublic class JarLauncher extends ExecutableArchiveLauncher;\n// ClassLoader used by the Launcher.\npublic class LaunchedURLClassLoader extends URLClassLoader;\n// Base class for launchers that can start an application with a fully configured classpath backed by one or more Archives.\npublic abstract class Launcher extends Object;\n", "des": "System that allows self-contained JAR/WAR archives to be launched using java -jar."}
{"index": 2047, "repo": "spring-boot-loader-3.1.1", "code": "package archive\n\n// An archive that can be launched by the Launcher.\npublic interface Archive extends Iterable<Archive.Entry>, AutoCloseable;\n// Represents a single entry in the archive.\npublic static interface Archive.Entry;\n// Strategy interface to filter Entries.\n@FunctionalInterface public static interface Archive.EntryFilter;\n// Archive implementation backed by an exploded archive directory.\npublic class ExplodedArchive extends Object implements Archive;\n", "des": "Abstraction over logical Archives be they backed by a JAR file or unpacked into a directory."}
{"index": 2048, "repo": "spring-boot-loader-3.1.1", "code": "package data\n\n// Interface that provides read-only random access to some underlying data.\npublic interface RandomAccessData;\n// RandomAccessData implementation backed by a RandomAccessFile.\npublic class RandomAccessDataFile extends Object implements RandomAccessData;\n", "des": "Classes and interfaces to allow random access to a block of data."}
{"index": 2049, "repo": "spring-boot-loader-3.1.1", "code": "package jar\n\n// URLStreamHandler for Spring Boot loader JarFiles.\npublic class Handler extends URLStreamHandler;\n// Extended variant of JarFile that behaves in the same way but offers the following additional functionality.\npublic class JarFile extends JarFile implements Iterable<JarEntry>;\n", "des": "Support for loading and manipulating JAR/WAR files."}
{"index": 2050, "repo": "spring-boot-loader-3.1.1", "code": "package jarmode\n\n// Interface registered in spring.factories to provides extended 'jarmode' support.\npublic interface JarMode;\n// Delegate class used to launch the fat jar in a specific mode.\npublic final class JarModeLauncher extends Object;\n", "des": "Support for launching the JAR using jarmode."}
{"index": 2051, "repo": "spring-boot-loader-3.1.1", "code": "package util\n\n// Helper class for resolving placeholders in texts.\npublic abstract class SystemPropertyUtils extends Object;\n", "des": "Utilities used by Spring Boot's JAR loading."}
{"index": 2052, "repo": "spring-ws-security-4.0.5", "code": "package security\n\n// Interceptor base class for interceptors that handle WS-Security.\npublic abstract class AbstractWsSecurityInterceptor extends Object implements org.springframework.ws.soap.server.SoapEndpointInterceptor, org.springframework.ws.client.support.interceptor.ClientInterceptor;\n// Exception indicating that something went wrong during WS-Security executions.\npublic abstract class WsSecurityException extends org.springframework.ws.WebServiceException;\n", "des": "Provides WS-Security implementation classes."}
{"index": 2053, "repo": "spring-ws-security-4.0.5", "code": "package callback\n\n// Abstract implementation of a CallbackHandler.\npublic abstract class AbstractCallbackHandler extends Object implements CallbackHandler;\n// Represents a chain of CallbackHandlers.\npublic class CallbackHandlerChain extends AbstractCallbackHandler;\n// Underlying security services instantiate and pass a CleanupCallback to the handle method of a CallbackHandler to clean up security state.\npublic class CleanupCallback extends Object implements Callback, Serializable;\n", "des": "Contains generic CallbackHandler implementations."}
{"index": 2054, "repo": "spring-ws-security-4.0.5", "code": "package support\n\n// Spring factory bean for an array of KeyManagers.\npublic class KeyManagersFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<KeyManager[]>, org.springframework.beans.factory.InitializingBean;\n// Spring factory bean for a KeyStore.\npublic class KeyStoreFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<KeyStore>, org.springframework.beans.factory.InitializingBean;\n", "des": "Contains support classes for handling WS-Security messages."}
{"index": 2055, "repo": "spring-ws-security-4.0.5", "code": "package wss4j2\n\n// WSS4J-specific version of the WsSecurityFaultException.\npublic class Wss4jSecurityFaultException extends WsSecurityFaultException;\n// A WS-Security endpoint interceptor based on Apache's WSS4J.\npublic class Wss4jSecurityInterceptor extends AbstractWsSecurityInterceptor implements org.springframework.beans.factory.InitializingBean;\n// WSS4J-specific version of the WsSecuritySecurementException.\npublic class Wss4jSecuritySecurementException extends WsSecuritySecurementException;\n", "des": "Contains classes for using the Apache WSS4J 2.0 WS-Security implementation within Spring-WS."}
{"index": 2056, "repo": "spring-ws-security-4.0.5", "code": "package callback\n\n// Abstract base class for CallbackHandler implementations that handle WSPasswordCallback callbacks.\npublic abstract class AbstractWsPasswordCallbackHandler extends AbstractCallbackHandler;\n// Callback handler that uses Java Security KeyStores to handle cryptographic callbacks.\npublic class KeyStoreCallbackHandler extends AbstractWsPasswordCallbackHandler implements org.springframework.beans.factory.InitializingBean;\n", "des": "Contains CallbackHandler implementations for WSS4J 2.0."}
{"index": 2057, "repo": "spring-ws-security-4.0.5", "code": "package support\n\n// Spring factory bean for a WSS4J Crypto.\npublic class CryptoFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<org.apache.wss4j.common.crypto.Crypto>, org.springframework.beans.factory.InitializingBean;\n", "des": "Contains support classes for working with WSS4J 2.0."}
{"index": 2058, "repo": "slf4j-ext-2.0.7", "code": "package agent\n\n// All recognized options in the string passed to the java agent.\npublic class AgentOptions extends Object;\n// Entry point for slf4j-ext when used as a Java agent.\npublic class AgentPremain extends Object;\n", "des": "\"-javaagent\" routines for SLF4J."}
{"index": 2059, "repo": "slf4j-ext-2.0.7", "code": "package cal10n\n\n// A logger specialized in localized logging.\npublic class LocLogger extends LoggerWrapper implements Logger;\n// This class is essentially a wrapper around an LoggerFactory producing LocLogger instances.\npublic class LocLoggerFactory extends Object;\n", "des": "SLF4J API extensions"}
{"index": 2060, "repo": "slf4j-ext-2.0.7", "code": "package ext\n\n// A helper class wrapping an Logger instance preserving location information if the wrapped instance supports it.\npublic class LoggerWrapper extends Object implements Logger;\n// A utility that provides standard mechanisms for logging certain kinds of activities.\npublic class XLogger extends LoggerWrapper implements Logger;\n// \npublic static enum XLogger.Level extends Enum<XLogger.Level>;\n", "des": "Localized logging using the CAL10N API."}
{"index": 2061, "repo": "slf4j-ext-2.0.7", "code": "package instrumentation\n\n// Helper methods for Javassist functionality.\npublic class JavassistHelper extends Object;\n// LogTransformer does the work of analyzing each class, and if appropriate add log statements to each method to allow logging entry/exit.\npublic class LogTransformer extends Object implements ClassFileTransformer;\n", "des": "Java instrumentation routines for SLF4J."}
{"index": 2062, "repo": "slf4j-ext-2.0.7", "code": "package profiler\n\n// An enum of supported time units.\npublic enum DurationUnit extends Enum<DurationUnit>;\n// A poor man's profiler to measure the time elapsed performing some lengthy task.\npublic class Profiler extends Object implements TimeInstrument;\n// A minimalist registry of profilers.\npublic class ProfilerRegistry extends Object;\n// \npublic class SpacePadder extends Object;\n", "des": "Poor man's profiler API"}
{"index": 2063, "repo": "spring-webmvc-6.0.11", "code": "package servlet\n\n// Extends HandlerInterceptor with a callback method invoked after the start of asynchronous request handling.\npublic interface AsyncHandlerInterceptor extends HandlerInterceptor;\n// Central dispatcher for HTTP request handlers/controllers, e.g.\npublic class DispatcherServlet extends FrameworkServlet;\n// A FlashMap provides a way for one request to store attributes intended for use in another.\npublic final class FlashMap extends HashMap<String,Object> implements Comparable<FlashMap>;\n", "des": "Provides servlets that integrate with the application context infrastructure, and the core interfaces and classes for the Spring web MVC framework."}
{"index": 2064, "repo": "spring-webmvc-6.0.11", "code": "package config\n\n// BeanDefinitionParser that parses a cors element in order to set the CORS configuration in the various {AbstractHandlerMapping} beans created by AnnotationDrivenBeanDefinitionParser, ResourcesBeanDefinitionParser and ViewControllerBeanDefinitionParser.\npublic class CorsBeanDefinitionParser extends Object implements org.springframework.beans.factory.xml.BeanDefinitionParser;\n", "des": "Defines the XML configuration namespace for Spring MVC."}
{"index": 2065, "repo": "spring-webmvc-6.0.11", "code": "package annotation\n\n// Helps with configuring options for asynchronous request processing.\npublic class AsyncSupportConfigurer extends Object;\n// Creates a ContentNegotiationManager and configures it with one or more ContentNegotiationStrategy instances.\npublic class ContentNegotiationConfigurer extends Object;\n// Assists with the creation of a CorsConfiguration instance for a given URL path pattern.\npublic class CorsRegistration extends Object;\n", "des": "Annotation-based setup for Spring MVC."}
{"index": 2066, "repo": "spring-webmvc-6.0.11", "code": "package function\n\n// Asynchronous subtype of ServerResponse that exposes the future response.\npublic interface AsyncServerResponse extends ServerResponse;\n// Entity-specific subtype of ServerResponse that exposes entity data.\npublic interface EntityResponse<T> extends ServerResponse;\n// Defines a builder for EntityResponse.\npublic static interface EntityResponse.Builder<T>;\n", "des": "Provides the types that make up Spring's functional web framework for Servlet environments."}
{"index": 2067, "repo": "spring-webmvc-6.0.11", "code": "package support\n\n// HandlerAdapter implementation that supports HandlerFunctions.\npublic class HandlerFunctionAdapter extends Object implements HandlerAdapter, org.springframework.core.Ordered;\n// HandlerMapping implementation that supports RouterFunctions.\npublic class RouterFunctionMapping extends AbstractHandlerMapping implements org.springframework.beans.factory.InitializingBean;\n", "des": "Classes supporting the org.springframework.web.servlet.function package."}
{"index": 2068, "repo": "spring-webmvc-6.0.11", "code": "package handler\n\n// Abstract implementation of the HandlerMapping interface, detecting URL mappings for handler beans through introspection of all defined beans in the application context.\npublic abstract class AbstractDetectingUrlHandlerMapping extends AbstractUrlHandlerMapping;\n// Abstract base class for HandlerExceptionResolver implementations.\npublic abstract class AbstractHandlerExceptionResolver extends Object implements HandlerExceptionResolver, org.springframework.core.Ordered;\n", "des": "Provides standard HandlerMapping implementations, including abstract base classes for custom implementations."}
{"index": 2069, "repo": "spring-webmvc-6.0.11", "code": "package i18n\n\n// Abstract base class for LocaleContextResolver implementations.\npublic abstract class AbstractLocaleContextResolver extends AbstractLocaleResolver implements LocaleContextResolver;\n// Abstract base class for LocaleResolver implementations.\npublic abstract class AbstractLocaleResolver extends Object implements LocaleResolver;\n", "des": "Locale support classes for Spring's web MVC framework."}
{"index": 2070, "repo": "spring-webmvc-6.0.11", "code": "package mvc\n\n// Convenient superclass for controller implementations, using the Template Method design pattern.\npublic abstract class AbstractController extends WebContentGenerator implements Controller;\n// Abstract base class for Controllers that return a view name based on the request URL.\npublic abstract class AbstractUrlViewController extends AbstractController;\n", "des": "Standard controller implementations for the Servlet MVC framework that comes with Spring."}
{"index": 2071, "repo": "spring-webmvc-6.0.11", "code": "package annotation\n\n// SPI for resolving custom return values from a specific handler method.\npublic interface ModelAndViewResolver;\n// A HandlerExceptionResolver that uses the @ResponseStatus annotation to map exceptions to HTTP status codes.\npublic class ResponseStatusExceptionResolver extends AbstractHandlerExceptionResolver implements org.springframework.context.MessageSourceAware;\n", "des": "Support package for annotation-based Servlet MVC controllers."}
{"index": 2072, "repo": "spring-webmvc-6.0.11", "code": "package condition\n\n// A base class for RequestCondition types providing implementations of AbstractRequestCondition.equals(Object), AbstractRequestCondition.hashCode(), and AbstractRequestCondition.toString().\npublic abstract class AbstractRequestCondition<T extends AbstractRequestCondition<T>> extends Object implements RequestCondition<T>;\n", "des": "Common MVC logic for matching incoming requests based on conditions."}
{"index": 2073, "repo": "spring-webmvc-6.0.11", "code": "package method\n\n// Abstract base class for HandlerAdapter implementations that support handlers of type HandlerMethod.\npublic abstract class AbstractHandlerMethodAdapter extends WebContentGenerator implements HandlerAdapter, org.springframework.core.Ordered;\n// Request mapping information.\npublic final class RequestMappingInfo extends Object implements RequestCondition<RequestMappingInfo>;\n// Defines a builder for creating a RequestMappingInfo.\npublic static interface RequestMappingInfo.Builder;\n", "des": "Servlet-based infrastructure for handler method processing, building on the org.springframework.web.method package."}
{"index": 2074, "repo": "spring-webmvc-6.0.11", "code": "package annotation\n\n// A convenient base class for ResponseBodyAdvice implementations that customize the response before JSON serialization with AbstractJackson2HttpMessageConverter's concrete subclasses.\npublic abstract class AbstractMappingJacksonResponseBodyAdvice extends Object implements ResponseBodyAdvice<Object>;\n", "des": "MVC infrastructure for annotation-based handler method processing, building on the org.springframework.web.method.annotation package."}
{"index": 2075, "repo": "spring-webmvc-6.0.11", "code": "package support\n\n// The default implementation of the HandlerExceptionResolver interface, resolving standard Spring MVC exceptions and translating them to corresponding HTTP status codes.\npublic class DefaultHandlerExceptionResolver extends AbstractHandlerExceptionResolver;\n// A specialization of the Model interface that controllers can use to select attributes for a redirect scenario.\npublic interface RedirectAttributes extends org.springframework.ui.Model;\n", "des": "Support package for MVC controllers."}
{"index": 2076, "repo": "spring-webmvc-6.0.11", "code": "package resource\n\n// Base class for ResourceResolver implementations.\npublic abstract class AbstractResourceResolver extends Object implements ResourceResolver;\n// Abstract base class for VersionStrategy implementations.\npublic abstract class AbstractVersionStrategy extends Object implements VersionStrategy;\n// File name-based VersionPathStrategy, e.g.\nprotected static class AbstractVersionStrategy.FileNameVersionPathStrategy extends Object implements VersionPathStrategy;\n", "des": "Support classes for serving static resources."}
{"index": 2077, "repo": "spring-webmvc-6.0.11", "code": "package support\n\n// WebApplicationInitializer to register a DispatcherServlet and use Java-based Spring configuration.\npublic abstract class AbstractAnnotationConfigDispatcherServletInitializer extends AbstractDispatcherServletInitializer;\n// Base class for WebApplicationInitializer implementations that register a DispatcherServlet in the servlet context.\npublic abstract class AbstractDispatcherServletInitializer extends org.springframework.web.context.AbstractContextLoaderInitializer;\n", "des": "Support classes for Spring's web MVC framework."}
{"index": 2078, "repo": "spring-webmvc-6.0.11", "code": "package tags\n\n// Allows implementing tag to utilize nested spring:argument tags.\npublic interface ArgumentAware;\n// The <argument> tag is based on the JSTL fmt:param tag.\npublic class ArgumentTag extends BodyTagSupport;\n// This <hasBindErrors> tag provides an Errors instance in case of bind errors.\npublic class BindErrorsTag extends HtmlEscapingAwareTag;\n", "des": "This package contains Spring's JSP standard tag library for JSP 2.0+."}
{"index": 2079, "repo": "spring-webmvc-6.0.11", "code": "package form\n\n// Abstract base class to provide common methods for implementing databinding-aware JSP tags for rendering an HTML 'input' element with a 'type' of 'checkbox' or 'radio'.\npublic abstract class AbstractCheckedElementTag extends AbstractHtmlInputElementTag;\n// Base tag for all data-binding aware JSP form tags.\npublic abstract class AbstractDataBoundFormElementTag extends AbstractFormTag implements EditorAwareTag;\n", "des": "Spring's form tag library for JSP views in Spring's Web MVC framework."}
{"index": 2080, "repo": "spring-webmvc-6.0.11", "code": "package theme\n\n// \n@Deprecated(since=\"6.0\") public abstract class AbstractThemeResolver extends Object implements ThemeResolver;\n// \n@Deprecated(since=\"6.0\") public class CookieThemeResolver extends org.springframework.web.util.CookieGenerator implements ThemeResolver;\n// \n@Deprecated(since=\"6.0\") public class FixedThemeResolver extends AbstractThemeResolver;\n// \n@Deprecated(since=\"6.0\") public class SessionThemeResolver extends AbstractThemeResolver;\n", "des": "Theme support classes for Spring's web MVC framework."}
{"index": 2081, "repo": "spring-webmvc-6.0.11", "code": "package view\n\n// Convenient base class for ViewResolver implementations.\npublic abstract class AbstractCachingViewResolver extends org.springframework.web.context.support.WebApplicationObjectSupport implements ViewResolver;\n// Filter that determines if view should be cached.\n@FunctionalInterface public static interface AbstractCachingViewResolver.CacheFilter;\n", "des": "Provides standard View and ViewResolver implementations, including abstract base classes for custom implementations."}
{"index": 2082, "repo": "spring-webmvc-6.0.11", "code": "package document\n\n// Abstract superclass for PDF views that operate on an existing document with an AcroForm.\npublic abstract class AbstractPdfStamperView extends AbstractUrlBasedView;\n// Abstract superclass for PDF views.\npublic abstract class AbstractPdfView extends AbstractView;\n// Convenient superclass for Excel document views in traditional XLS format.\npublic abstract class AbstractXlsView extends AbstractView;\n", "des": "Support classes for document generation, providing View implementations for PDF and Excel."}
{"index": 2083, "repo": "spring-webmvc-6.0.11", "code": "package feed\n\n// Abstract superclass for Atom Feed views, using the ROME package.\npublic abstract class AbstractAtomFeedView extends AbstractFeedView<com.rometools.rome.feed.atom.Feed>;\n// Abstract base class for Atom and RSS Feed views, using the ROME package.\npublic abstract class AbstractFeedView<T extends com.rometools.rome.feed.WireFeed> extends AbstractView;\n", "des": "Support classes for feed generation, providing View implementations for Atom and RSS."}
{"index": 2084, "repo": "spring-webmvc-6.0.11", "code": "package freemarker\n\n// Interface to be implemented by objects that configure and manage a FreeMarker Configuration object in a web environment.\npublic interface FreeMarkerConfig;\n", "des": "Support classes for the integration of FreeMarker as Spring web view technology."}
{"index": 2085, "repo": "spring-webmvc-6.0.11", "code": "package groovy\n\n// Interface to be implemented by objects that configure and manage a Groovy MarkupTemplateEngine for automatic lookup in a web environment.\npublic interface GroovyMarkupConfig;\n", "des": "Support classes for the integration of Groovy Templates as Spring web view technology."}
{"index": 2086, "repo": "spring-webmvc-6.0.11", "code": "package json\n\n// Abstract base class for Jackson based and content type independent AbstractView implementations.\npublic abstract class AbstractJackson2View extends AbstractView;\n// Spring MVC View that renders JSON content by serializing the model for the current request using Jackson 2's ObjectMapper.\npublic class MappingJackson2JsonView extends AbstractJackson2View;\n", "des": "Support classes for providing a View implementation based on JSON serialization."}
{"index": 2087, "repo": "spring-webmvc-6.0.11", "code": "package script\n\n// Context passed to ScriptTemplateView render function in order to make the application context, the locale, the template loader and the url available on scripting side.\npublic class RenderingContext extends Object;\n// Interface to be implemented by objects that configure and manage a JSR-223 ScriptEngine for automatic lookup in a web environment.\npublic interface ScriptTemplateConfig;\n", "des": "Support classes for views based on the JSR-223 script engine abstraction (as included in Java 6+), e.g."}
{"index": 2088, "repo": "spring-webmvc-6.0.11", "code": "package xml\n\n// Spring MVC View that renders XML content by serializing the model for the current request using Jackson 2's XmlMapper.\npublic class MappingJackson2XmlView extends AbstractJackson2View;\n// Spring-MVC View that allows for response context to be rendered as the result of marshalling by a Marshaller.\npublic class MarshallingView extends AbstractView;\n", "des": "Support classes for providing a View implementation based on XML Marshalling."}
{"index": 2089, "repo": "spring-webmvc-6.0.11", "code": "package xslt\n\n// XSLT-driven View that allows for response context to be rendered as the result of an XSLT transformation.\npublic class XsltView extends AbstractUrlBasedView;\n// ViewResolver implementation that resolves instances of XsltView by translating the supplied view name into the URL of the XSLT stylesheet.\npublic class XsltViewResolver extends UrlBasedViewResolver;\n", "des": "Support classes for XSLT, providing a View implementation for XSLT stylesheets."}
{"index": 2090, "repo": "spring-webflux-6.0.11", "code": "package reactive\n\n// Context to assist with binding request data onto Objects and provide access to a shared Model with controller-specific attributes.\npublic class BindingContext extends Object;\n// Central dispatcher for HTTP request handlers/controllers.\npublic class DispatcherHandler extends Object implements org.springframework.web.server.WebHandler, org.springframework.web.cors.reactive.PreFlightRequestHandler, org.springframework.context.ApplicationContextAware;\n", "des": "Top-level package for the spring-webflux module that contains DispatcherHandler, the main entry point for WebFlux server endpoint processing including key contracts used to map requests to handlers, invoke them, and process the result."}
{"index": 2091, "repo": "spring-webflux-6.0.11", "code": "package accept\n\n// Resolver that always resolves to a fixed list of media types.\npublic class FixedContentTypeResolver extends Object implements RequestedContentTypeResolver;\n// Resolver that looks at the 'Accept' header of the request.\npublic class HeaderContentTypeResolver extends Object implements RequestedContentTypeResolver;\n", "des": "RequestedContentTypeResolver strategy and implementations to resolve the requested content type for a given request."}
{"index": 2092, "repo": "spring-webflux-6.0.11", "code": "package config\n\n// Assists with the creation of a CorsConfiguration instance for a given URL path pattern.\npublic class CorsRegistration extends Object;\n// Assists with the registration of global, URL pattern based CorsConfiguration mappings.\npublic class CorsRegistry extends Object;\n", "des": "Spring WebFlux configuration infrastructure."}
{"index": 2093, "repo": "spring-webflux-6.0.11", "code": "package function\n\n// A function that can extract data from a ReactiveHttpInputMessage body.\n@FunctionalInterface public interface BodyExtractor<T,M extends org.springframework.http.ReactiveHttpInputMessage>;\n// Defines the context used during the extraction.\npublic static interface BodyExtractor.Context;\n// Static factory methods for BodyExtractor implementations.\npublic abstract class BodyExtractors extends Object;\n", "des": "Provides a foundation for both the reactive client and server subpackages."}
{"index": 2094, "repo": "spring-webflux-6.0.11", "code": "package client\n\n// Documented KeyValues for the HTTP client observations.\npublic enum ClientHttpObservationDocumentation extends Enum<ClientHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation;\n// \npublic static enum ClientHttpObservationDocumentation.HighCardinalityKeyNames extends Enum<ClientHttpObservationDocumentation.HighCardinalityKeyNames> implements io.micrometer.common.docs.KeyName;\n", "des": "Provides a reactive WebClient that builds on top of the org.springframework.http.client.reactive reactive HTTP adapter layer."}
{"index": 2095, "repo": "spring-webflux-6.0.11", "code": "package support\n\n// Implementation of the ClientResponse interface that can be subclassed to adapt the request in a exchange filter function.\npublic class ClientResponseWrapper extends Object implements ClientResponse;\n// Implementation of the Headers interface that can be subclassed to adapt the headers in a exchange filter function.\npublic static class ClientResponseWrapper.HeadersWrapper extends Object implements ClientResponse.Headers;\n", "des": "Classes supporting the org.springframework.web.reactive.function.client package."}
{"index": 2096, "repo": "spring-webflux-6.0.11", "code": "package server\n\n// Entity-specific subtype of ServerResponse that exposes entity data.\npublic interface EntityResponse<T> extends ServerResponse;\n// Defines a builder for EntityResponse.\npublic static interface EntityResponse.Builder<T>;\n// Represents a function that filters a handler function.\n@FunctionalInterface public interface HandlerFilterFunction<T extends ServerResponse,R extends ServerResponse>;\n", "des": "Provides the types that make up Spring's functional web framework for Reactive environments."}
{"index": 2097, "repo": "spring-webflux-6.0.11", "code": "package support\n\n// HandlerAdapter implementation that supports HandlerFunctions.\npublic class HandlerFunctionAdapter extends Object implements HandlerAdapter;\n// HandlerMapping implementation that supports RouterFunctions.\npublic class RouterFunctionMapping extends AbstractHandlerMapping implements org.springframework.beans.factory.InitializingBean;\n", "des": "Classes supporting the org.springframework.web.reactive.function.server package."}
{"index": 2098, "repo": "spring-webflux-6.0.11", "code": "package handler\n\n// Abstract base class for HandlerMapping implementations.\npublic abstract class AbstractHandlerMapping extends org.springframework.context.support.ApplicationObjectSupport implements HandlerMapping, org.springframework.core.Ordered, org.springframework.beans.factory.BeanNameAware;\n// Abstract base class for URL-mapped HandlerMapping implementations.\npublic abstract class AbstractUrlHandlerMapping extends AbstractHandlerMapping;\n", "des": "Provides HandlerMapping implementations including abstract base classes."}
{"index": 2099, "repo": "spring-webflux-6.0.11", "code": "package resource\n\n// Abstract base class for filename suffix based VersionStrategy implementations, e.g.\npublic abstract class AbstractFileNameVersionStrategy extends Object implements VersionStrategy;\n// Abstract base class for VersionStrategy implementations that insert a prefix into the URL path, e.g.\npublic abstract class AbstractPrefixVersionStrategy extends Object implements VersionStrategy;\n", "des": "Support classes for serving static resources."}
{"index": 2100, "repo": "spring-webflux-6.0.11", "code": "package result\n\n// Base class for HandlerResultHandler with support for content negotiation and access to a ReactiveAdapter registry.\npublic abstract class HandlerResultHandlerSupport extends Object implements org.springframework.core.Ordered;\n// HandlerAdapter that allows using the plain WebHandler contract with the generic DispatcherHandler.\npublic class SimpleHandlerAdapter extends Object implements HandlerAdapter;\n", "des": "Support for various programming model styles including the invocation of different types of handlers, e.g."}
{"index": 2101, "repo": "spring-webflux-6.0.11", "code": "package condition\n\n// A base class for RequestCondition types providing implementations of AbstractRequestCondition.equals(Object), AbstractRequestCondition.hashCode(), and AbstractRequestCondition.toString().\npublic abstract class AbstractRequestCondition<T extends AbstractRequestCondition<T>> extends Object implements RequestCondition<T>;\n", "des": "RequestCondition and implementations for matching requests based on different criteria."}
{"index": 2102, "repo": "spring-webflux-6.0.11", "code": "package method\n\n// Abstract base class for HandlerMapping implementations that define a mapping between a request and a HandlerMethod.\npublic abstract class AbstractHandlerMethodMapping<T> extends AbstractHandlerMapping implements org.springframework.beans.factory.InitializingBean;\n// Strategy to resolve the argument value for a method parameter in the context of the current HTTP request.\npublic interface HandlerMethodArgumentResolver;\n", "des": "Infrastructure for handler method processing."}
{"index": 2103, "repo": "spring-webflux-6.0.11", "code": "package annotation\n\n// Abstract base class for argument resolvers that resolve method arguments by reading the request body with an HttpMessageReader.\npublic abstract class AbstractMessageReaderArgumentResolver extends HandlerMethodArgumentResolverSupport;\n// Abstract base class for result handlers that handle return values by writing to the response with HttpMessageWriter.\npublic abstract class AbstractMessageWriterResultHandler extends HandlerResultHandlerSupport;\n", "des": "Infrastructure for annotation-based handler method processing."}
{"index": 2104, "repo": "spring-webflux-6.0.11", "code": "package view\n\n// Abstract base class for URL-based views.\npublic abstract class AbstractUrlBasedView extends AbstractView implements org.springframework.beans.factory.InitializingBean;\n// Base class for View implementations.\npublic abstract class AbstractView extends Object implements View, org.springframework.beans.factory.BeanNameAware, org.springframework.context.ApplicationContextAware;\n// Simple adapter to expose the bind status of a field or object.\npublic class BindStatus extends Object;\n", "des": "Support for result handling through view resolution."}
{"index": 2105, "repo": "spring-webflux-6.0.11", "code": "package freemarker\n\n// Interface to be implemented by objects that configure and manage a FreeMarker Configuration object in a web environment.\npublic interface FreeMarkerConfig;\n", "des": "Support classes for the integration of FreeMarker as Spring web view technology."}
{"index": 2106, "repo": "spring-webflux-6.0.11", "code": "package script\n\n// Context passed to ScriptTemplateView render function in order to make the application context, the locale, the template loader and the url available on scripting side.\npublic class RenderingContext extends Object;\n// Interface to be implemented by objects that configure and manage a JSR-223 ScriptEngine for automatic lookup in a web environment.\npublic interface ScriptTemplateConfig;\n", "des": "Support classes for views based on the JSR-223 script engine abstraction (as included in Java 6+), e.g."}
{"index": 2107, "repo": "spring-webflux-6.0.11", "code": "package socket\n\n// Representation of WebSocket \"close\" status codes and reasons.\npublic final class CloseStatus extends Object;\n// Simple container of information related to the handshake request that started the WebSocketSession session.\npublic class HandshakeInfo extends Object;\n// Handler for a WebSocket session.\npublic interface WebSocketHandler;\n// Representation of a WebSocket message.\npublic class WebSocketMessage extends Object;\n", "des": "Abstractions and support classes for reactive WebSocket interactions."}
{"index": 2108, "repo": "spring-webflux-6.0.11", "code": "package adapter\n\n// Base class for WebSocketSession implementations that bridge between event-listener WebSocket APIs (e.g.\npublic abstract class AbstractListenerWebSocketSession<T> extends AbstractWebSocketSession<T> implements Subscriber<Void>;\n// Convenient base class for WebSocketSession implementations that holds common fields and exposes accessors.\npublic abstract class AbstractWebSocketSession<T> extends Object implements WebSocketSession;\n", "des": "Classes adapting Spring's Reactive WebSocket API to and from WebSocket runtimes."}
{"index": 2109, "repo": "spring-webflux-6.0.11", "code": "package client\n\n// \n@Deprecated(since=\"6.0.3\", forRemoval=true) public class JettyWebSocketClient extends Object implements WebSocketClient, org.springframework.context.Lifecycle;\n// WebSocketClient implementation for use with Reactor Netty for Netty 5.\npublic class ReactorNetty2WebSocketClient extends Object implements WebSocketClient;\n// WebSocketClient implementation for use with Reactor Netty.\npublic class ReactorNettyWebSocketClient extends Object implements WebSocketClient;\n", "des": "Client support for WebSocket interactions."}
{"index": 2110, "repo": "spring-webflux-6.0.11", "code": "package server\n\n// A strategy for upgrading an HTTP request to a WebSocket session depending on the underlying network runtime.\npublic interface RequestUpgradeStrategy;\n// A service to delegate WebSocket-related HTTP requests to.\npublic interface WebSocketService;\n", "des": "Server support for WebSocket interactions."}
{"index": 2111, "repo": "spring-webflux-6.0.11", "code": "package support\n\n// WebSocketService implementation that handles a WebSocket HTTP handshake request by delegating to a RequestUpgradeStrategy which is either auto-detected (no-arg constructor) from the classpath but can also be explicitly configured.\npublic class HandshakeWebSocketService extends Object implements WebSocketService, org.springframework.context.Lifecycle;\n", "des": "Server-side support classes for WebSocket requests."}
{"index": 2112, "repo": "spring-webflux-6.0.11", "code": "package upgrade\n\n// A WebSocket RequestUpgradeStrategy for Jetty 11.\npublic class JettyRequestUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n// A WebSocket RequestUpgradeStrategy for Reactor Netty for Netty 5.\npublic class ReactorNetty2RequestUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n// A WebSocket RequestUpgradeStrategy for Reactor Netty.\npublic class ReactorNettyRequestUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n", "des": "Holds implementations of RequestUpgradeStrategy."}
{"index": 2113, "repo": "spring-retry-2.0.2", "code": "package retry\n\n// \npublic class ExhaustedRetryException extends RetryException;\n// Callback for stateful retry after all tries are exhausted.\npublic interface RecoveryCallback<T>;\n// Callback interface for an operation that can be retried using a RetryOperations.\npublic interface RetryCallback<T,E extends Throwable>;\n// Low-level access to ongoing retry operation.\npublic interface RetryContext extends org.springframework.core.AttributeAccessor;\n", "des": "Infrastructure implementations of retry concerns."}
{"index": 2114, "repo": "spring-retry-2.0.2", "code": "package backoff\n\n// \npublic interface BackOffContext extends Serializable;\n// Exception class signifiying that an attempt to back off using a BackOffPolicy was interrupted, most likely by an InterruptedException during a call to Thread.sleep(long).\npublic class BackOffInterruptedException extends RetryException;\n// Strategy interface to control back off between attempts in a single retry operation.\npublic interface BackOffPolicy;\n", "des": "Infrastructure implementations of retry backoff concerns."}
{"index": 2115, "repo": "spring-retry-2.0.2", "code": "package context\n\n// \npublic class RetryContextSupport extends org.springframework.core.AttributeAccessorSupport implements RetryContext;\n", "des": "Infrastructure implementations of retry context concerns."}
{"index": 2116, "repo": "spring-retry-2.0.2", "code": "package interceptor\n\n// \npublic class FixedKeyGenerator extends Object implements MethodArgumentsKeyGenerator;\n// Interface that allows method parameters to be identified and tagged by a unique key.\npublic interface MethodArgumentsKeyGenerator;\n// Strategy interface for recovery action when processing of an item fails.\npublic interface MethodInvocationRecoverer<T>;\n", "des": "Infrastructure implementations of retry aop concerns."}
{"index": 2117, "repo": "spring-retry-2.0.2", "code": "package listener\n\n// Empty method implementation of RetryListener with focus on the AOP reflective method invocations providing convenience retry listener type-safe (with a `MethodInvocationRetryCallback` callback parameter) specific methods.\npublic class MethodInvocationRetryListenerSupport extends Object implements RetryListener;\n// \n@Deprecated(since=\"2.0.1\", forRemoval=true) public class RetryListenerSupport extends Object implements RetryListener;\n", "des": "Infrastructure implementations of retry interceptor concerns."}
{"index": 2118, "repo": "spring-retry-2.0.2", "code": "package policy\n\n// A RetryPolicy that always permits a retry.\npublic class AlwaysRetryPolicy extends NeverRetryPolicy;\n// A policy, that is based on BinaryExceptionClassifier.\npublic class BinaryExceptionClassifierRetryPolicy extends Object implements RetryPolicy;\n// \npublic class CircuitBreakerRetryPolicy extends Object implements RetryPolicy;\n", "des": "Infrastructure implementations of retry policy concerns."}
{"index": 2119, "repo": "spring-retry-2.0.2", "code": "package support\n\n// A root object containing the method arguments to use in expression evaluation.\npublic class Args extends Object;\n// \npublic class DefaultRetryState extends Object implements RetryState;\n// The results of a simulation.\npublic class RetrySimulation extends Object;\n// \npublic static class RetrySimulation.SleepSequence extends Object;\n// A RetrySimulator is a tool for exercising retry + backoff operations.\npublic class RetrySimulator extends Object;\n", "des": "Infrastructure implementations of retry support concerns."}
{"index": 2120, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package dsl\n\n// Entry point to Spring Boot's Gradle DSL.\npublic class SpringBootExtension extends Object;\n", "des": "Spring Boot Gradle DSL."}
{"index": 2121, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package plugin\n\n// Task for resolving the name of the application's main class.\n@DisableCachingByDefault(because=\"Not worth caching\") public class ResolveMainClassName extends DefaultTask;\n// Gradle plugin for Spring Boot AOT.\npublic class SpringBootAotPlugin extends Object implements Plugin<Project>;\n// Gradle plugin for Spring Boot.\npublic class SpringBootPlugin extends Object implements Plugin<Project>;\n", "des": "Central classes for the Spring Boot Gradle plugin."}
{"index": 2122, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package aot\n\n// Specialization of JavaExec to be used as a base class for tasks that perform ahead-of-time processing.\n@DisableCachingByDefault(because=\"Cacheability can only be determined by a concrete implementation\") public abstract class AbstractAot extends JavaExec;\n// Custom JavaExec task for ahead-of-time processing of a Spring Boot application.\n@CacheableTask public abstract class ProcessAot extends AbstractAot;\n", "des": "Support for ahead-of-time processing of an application built with Gradle."}
{"index": 2123, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package buildinfo\n\n// Task for generating a build-info.properties file from a Project.\n@DisableCachingByDefault(because=\"Not worth caching\") public abstract class BuildInfo extends DefaultTask;\n// The properties that are written into the build-info.properties file.\npublic abstract class BuildInfoProperties extends Object implements Serializable;\n", "des": "Support for producing build info for consumption by Spring Boot's actuator."}
{"index": 2124, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package bundling\n\n// A Spring Boot \"fat\" archive task.\npublic interface BootArchive extends Task;\n// A Task for bundling an application into an OCI image using a buildpack.\n@DisableCachingByDefault public abstract class BootBuildImage extends DefaultTask;\n// A custom Jar task that produces a Spring Boot executable jar.\n@DisableCachingByDefault(because=\"Not worth caching\") public abstract class BootJar extends Jar implements BootArchive;\n", "des": "Support for creating executable jars and wars."}
{"index": 2125, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package run\n\n// Custom JavaExec task for running a Spring Boot application.\n@DisableCachingByDefault(because=\"Application should always run\") public abstract class BootRun extends JavaExec;\n", "des": "Support for running Spring Boot applications."}
{"index": 2126, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package util\n\n// Extracts version information for a Class.\npublic final class VersionExtractor extends Object;\n", "des": "Shared utility classes."}
{"index": 2127, "repo": "spring-context-support-6.0.11", "code": "package caffeine\n\n// Spring Cache adapter implementation on top of a Caffeine Cache instance.\npublic class CaffeineCache extends org.springframework.cache.support.AbstractValueAdaptingCache;\n// CacheManager implementation that lazily builds CaffeineCache instances for each CaffeineCacheManager.getCache(java.lang.String) request.\npublic class CaffeineCacheManager extends Object implements org.springframework.cache.CacheManager;\n", "des": "Support classes for the open source cache in Caffeine library, allowing to set up Caffeine caches within Spring's cache abstraction."}
{"index": 2128, "repo": "spring-context-support-6.0.11", "code": "package jcache\n\n// Cache implementation on top of a javax.cache.Cache instance.\npublic class JCacheCache extends org.springframework.cache.support.AbstractValueAdaptingCache;\n// CacheManager implementation backed by a JCache javax.cache.CacheManager.\npublic class JCacheCacheManager extends AbstractTransactionSupportingCacheManager;\n", "des": "Implementation package for JSR-107 (javax.cache aka \"JCache\") based caches."}
{"index": 2129, "repo": "spring-context-support-6.0.11", "code": "package config\n\n// Abstract JSR-107 specific @Configuration class providing common structure for enabling JSR-107 annotation-driven cache management capability.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractJCacheConfiguration extends org.springframework.cache.annotation.AbstractCachingConfiguration;\n// Extension of CachingConfigurer for the JSR-107 implementation.\npublic interface JCacheConfigurer extends org.springframework.cache.annotation.CachingConfigurer;\n", "des": "Support package for declarative JSR-107 caching configuration."}
{"index": 2130, "repo": "spring-context-support-6.0.11", "code": "package interceptor\n\n// Abstract implementation of JCacheOperationSource that caches attributes for methods and implements a fallback policy: 1.\npublic abstract class AbstractFallbackJCacheOperationSource extends Object implements JCacheOperationSource;\n// Implementation of the JCacheOperationSource interface that reads the JSR-107 CacheResult, CachePut, CacheRemove and CacheRemoveAll annotations.\npublic abstract class AnnotationJCacheOperationSource extends AbstractFallbackJCacheOperationSource;\n", "des": "AOP-based solution for declarative caching demarcation using JSR-107 annotations."}
{"index": 2131, "repo": "spring-context-support-6.0.11", "code": "package transaction\n\n// Base class for CacheManager implementations that want to support built-in awareness of Spring-managed transactions.\npublic abstract class AbstractTransactionSupportingCacheManager extends org.springframework.cache.support.AbstractCacheManager;\n", "des": "Transaction-aware decorators for the org.springframework.cache package."}
{"index": 2132, "repo": "spring-context-support-6.0.11", "code": "package mail\n\n// Exception thrown on failed authentication.\npublic class MailAuthenticationException extends MailException;\n// Base class for all mail exceptions.\npublic abstract class MailException extends org.springframework.core.NestedRuntimeException;\n", "des": "Spring's generic mail infrastructure."}
{"index": 2133, "repo": "spring-context-support-6.0.11", "code": "package javamail\n\n// Spring-configurable FileTypeMap implementation that will read MIME type to file extension mappings from a standard JavaMail MIME type mapping file, using a standard MimetypesFileTypeMap underneath.\npublic class ConfigurableMimeFileTypeMap extends FileTypeMap implements org.springframework.beans.factory.InitializingBean;\n// Editor for java.mail.internet.InternetAddress, to directly populate an InternetAddress property.\npublic class InternetAddressEditor extends PropertyEditorSupport;\n", "des": "JavaMail support for Spring's mail infrastructure."}
{"index": 2134, "repo": "spring-context-support-6.0.11", "code": "package quartz\n\n// JobFactory implementation that supports Runnable objects as well as standard Quartz Job instances.\npublic class AdaptableJobFactory extends Object implements JobFactory;\n", "des": "Support classes for the open source scheduler Quartz, allowing to set up Quartz Schedulers, JobDetails and Triggers as beans in a Spring context."}
{"index": 2135, "repo": "spring-context-support-6.0.11", "code": "package freemarker\n\n// Factory that configures a FreeMarker Configuration.\npublic class FreeMarkerConfigurationFactory extends Object;\n// Factory bean that creates a FreeMarker Configuration and provides it as bean reference.\npublic class FreeMarkerConfigurationFactoryBean extends FreeMarkerConfigurationFactory implements org.springframework.beans.factory.FactoryBean<freemarker.template.Configuration>, org.springframework.beans.factory.InitializingBean, org.springframework.context.ResourceLoaderAware;\n", "des": "Support classes for setting up FreeMarker within a Spring application context."}
{"index": 2136, "repo": "wicket-core-10.0.0-M1", "code": "package wicket\n\n// Base class for all Wicket applications.\npublic abstract class Application extends Object implements ISessionStore.UnboundListener, IEventSink, IMetadataContext<Object,Application>;\n// ListenerCollection for IApplicationListeners\npublic class ApplicationListenerCollection extends org.apache.wicket.util.listener.ListenerCollection<IApplicationListener> implements IApplicationListener;\n", "des": "The core Wicket package."}
{"index": 2137, "repo": "wicket-core-10.0.0-M1", "code": "package authorization\n\n// A class for constructing singleton constants that represent a given component action that needs to be authorized.\npublic class Action extends org.apache.wicket.util.lang.EnumeratedType;\n// Base class for exceptions thrown as a result of authorization failure.\npublic abstract class AuthorizationException extends WicketRuntimeException;\n", "des": "Contains classes that allow the user to specify authorization constraints via IAuthorizationStrategy."}
{"index": 2138, "repo": "wicket-core-10.0.0-M1", "code": "package lang\n\n// This class parses expressions to lookup or set a value on the object that is given.\npublic final class PropertyResolver extends Object;\n// \npublic abstract static class PropertyResolver.AbstractGetAndSet extends Object implements PropertyResolver.IGetAndSet;\n", "des": "Java utilities."}
{"index": 2139, "repo": "wicket-core-10.0.0-M1", "code": "package locator\n\n// A ResourceNameIterator that doesn't find any resources.\npublic final class EmptyResourceNameIterator extends ResourceNameIterator;\n// Iterate over a set of extensions.\npublic class ExtensionResourceNameIterator extends Object implements Iterator<String>;\n// Contains the logic to locate a resource based on a path, style (see Session), variation, locale and extension strings.\npublic interface IResourceNameIterator extends Iterator<String>;\n", "des": "Locators for finding/ loading resources."}
{"index": 2140, "repo": "wicket-core-10.0.0-M1", "code": "package string\n\n// A helper class for rendering components and pages.\npublic class ComponentRenderer extends Object;\n// \npublic class ComponentStrings extends Object;\n// Utility methods for CSS.\npublic final class CssUtils extends Object;\n// Strips comments and whitespace from javascript\npublic class JavaScriptStripper extends Object;\n// Provide some helpers to write javascript related tags to the response object.\npublic class JavaScriptUtils extends Object;\n", "des": "String utilities."}
{"index": 2141, "repo": "wicket-core-10.0.0-M1", "code": "package feedback\n\n// Filter for accepting feedback messages for a particular component.\npublic class ComponentFeedbackMessageFilter extends Object implements IFeedbackMessageFilter;\n// Filter for child-of relationship\npublic class ContainerFeedbackMessageFilter extends Object implements IFeedbackMessageFilter;\n// The default message filter used to cleanup feedback messages.\npublic class DefaultCleanupFeedbackMessageFilter extends Object implements IFeedbackMessageFilter;\n", "des": "Classes related to showing user feedback, generally as the result of form submission and/or validation."}
{"index": 2142, "repo": "wicket-core-10.0.0-M1", "code": "package markup\n\n// A base implementation of IMarkupFragment.\npublic abstract class AbstractMarkupFragment extends Object implements IMarkupFragment;\n// This is a base MarkupParser specifically for (X)HTML.\npublic abstract class AbstractMarkupParser extends Object;\n// A subclass of MarkupElement which represents a \"significant\" markup tag, such as a component open tag.\npublic class ComponentTag extends MarkupElement;\n", "des": "Base package for markup."}
{"index": 2143, "repo": "wicket-core-10.0.0-M1", "code": "package html\n\n// To be used for the crossOrigin attribute\npublic enum CrossOrigin extends Enum<CrossOrigin>;\n// This is simply a helper implementation of IHeaderResponse that really delegates all of its method calls to the IHeaderResponse that is passed into the constructor.\npublic abstract class DecoratingHeaderResponse extends Object implements IHeaderResponse;\n", "des": "Base package of HTML markup."}
{"index": 2144, "repo": "wicket-core-10.0.0-M1", "code": "package basic\n\n// <wicket:enclosure> is nice and prevents that users have to add boilerplate to their application.\npublic class EnclosureContainer extends WebMarkupContainer;\n// A Label component that is used to render an enum value.\npublic class EnumLabel<T extends Enum<T>> extends WebComponent implements IGenericComponent<T,EnumLabel<T>>;\n// A Label component replaces its body with the String version of its model object returned by getModelObjectAsString().\npublic class Label extends WebComponent;\n", "des": "Basic HTML components."}
{"index": 2145, "repo": "wicket-core-10.0.0-M1", "code": "package border\n\n// This is a simple Container component which can be used to build Border like components.\npublic class Body extends WebMarkupContainer;\n// A border component has associated markup which is drawn and determines placement of markup and/or components nested within the border component.\npublic abstract class Border extends WebMarkupContainer implements IComponentResolver, IQueueRegion;\n", "des": "Border components."}
{"index": 2146, "repo": "wicket-core-10.0.0-M1", "code": "package form\n\n// Base class for all Javascript-based \"select-all\" checkboxes.\npublic abstract class AbstractCheckSelector extends LabeledWebMarkupContainer implements IHeaderContributor;\n// Abstract base class for all choice (html select) options.\npublic abstract class AbstractChoice<T,E> extends FormComponent<T>;\n// An enumeration of possible positions of the label for a choice\npublic static enum AbstractChoice.LabelPosition extends Enum<AbstractChoice.LabelPosition>;\n", "des": "HTML Forms and form components."}
{"index": 2147, "repo": "wicket-core-10.0.0-M1", "code": "package upload\n\n// Description of file properties as in browser client side.\npublic class FileDescription extends Object implements Serializable;\n// OnChangeAjaxBehavior that streams back to server properties of the selected file(s) (at client side), before uploading it (them).\npublic abstract class FilesSelectedBehavior extends OnChangeAjaxBehavior;\n// Model for file uploads.\npublic class FileUpload extends Object;\n", "des": "Support for upload forms (using multipart requests)."}
{"index": 2148, "repo": "wicket-core-10.0.0-M1", "code": "package validation\n\n// Base class for IFormValidators.\npublic abstract class AbstractFormValidator extends Behavior implements IFormValidator;\n// Validates that the input of two form components is identical.\npublic class EqualInputValidator extends AbstractFormValidator;\n// Validates that the input of two form components is identical.\npublic class EqualPasswordInputValidator extends EqualInputValidator;\n", "des": "Support for form validation."}
{"index": 2149, "repo": "wicket-core-10.0.0-M1", "code": "package image\n\n// Provides a context-relative image.\npublic class ContextImage extends WebComponent;\n// A behavior that converts the provider url fragment to a context-relative url.\npublic class ContextPathGenerator extends Behavior;\n// A component to display external images.\npublic class ExternalImage extends WebComponent;\n// A component which displays external images within a picture tag.\npublic class ExternalSource extends ExternalImage;\n", "des": "Image components."}
{"index": 2150, "repo": "wicket-core-10.0.0-M1", "code": "package resource\n\n// An ImageResource subclass for dynamic images that come from database BLOB fields.\npublic abstract class BlobImageResource extends DynamicImageResource;\n// A DynamicImageResource subclass that holds a BufferedImage generated by code elsewhere.\npublic class BufferedDynamicImageResource extends DynamicImageResource;\n// Automatically generates a basic button image.\npublic class DefaultButtonImageResource extends RenderedDynamicImageResource;\n", "des": "Resource support for image components."}
{"index": 2151, "repo": "wicket-core-10.0.0-M1", "code": "package include\n\n// Component that includes/ renders the import result of an URL, much like JSP include.\npublic class Include extends WebComponent implements IGenericComponent<String,Include>;\n", "des": "Components for including content from non-Wicket sources."}
{"index": 2152, "repo": "wicket-core-10.0.0-M1", "code": "package link\n\n// Base class that that contains functionality for rendering disabled links.\npublic abstract class AbstractLink extends WebMarkupContainer;\n// Renders a stable link which can be cached in a web browser and used at a later time.\npublic class BookmarkablePageLink<T> extends Link<T>;\n// A client-side image map implementation which allows you to \"attach\" the map to any existing Image component.\npublic class ClientSideImageMap extends Panel;\n", "des": "Link components."}
{"index": 2153, "repo": "wicket-core-10.0.0-M1", "code": "package list\n\n// A very simple Item.\npublic class AbstractItem extends WebMarkupContainer;\n// Container that holds components in a ListView.\npublic class ListItem<T> extends LoopItem implements IGenericComponent<T,ListItem<T>>;\n// Model for list items.\npublic class ListItemModel<T> extends Object implements IModel<T>;\n// A ListView is a repeater that makes it easy to display/work with Lists.\npublic abstract class ListView<T> extends AbstractRepeater;\n", "des": "List components for tabular data and such."}
{"index": 2154, "repo": "wicket-core-10.0.0-M1", "code": "package pages\n\n// A parent page for all pages that are used to show an error to the user.\npublic abstract class AbstractErrorPage extends WebPage;\n// Page expired error page.\npublic class AccessDeniedPage extends AbstractErrorPage;\n// Form for posting JavaScript properties.\npublic class BrowserInfoForm extends GenericPanel<ClientProperties>;\n", "des": "Default special purpose pages for error and feedback support."}
{"index": 2155, "repo": "wicket-core-10.0.0-M1", "code": "package panel\n\n// Implements boilerplate as needed by many markup sourcing strategies.\npublic abstract class AbstractMarkupSourcingStrategy extends Object implements IMarkupSourcingStrategy;\n// Boilerplate for a markup sourcing strategy which retrieves the markup from associated markup files.\npublic abstract class AssociatedMarkupSourcingStrategy extends AbstractMarkupSourcingStrategy;\n", "des": "Panel components."}
{"index": 2156, "repo": "wicket-core-10.0.0-M1", "code": "package parser\n\n// Base class for markup filters\npublic abstract class AbstractMarkupFilter extends Object implements IMarkupFilter;\n// Wicket uses a streaming XML parser to read the markup.\npublic interface IMarkupFilter;\n// The interface of a streaming XML parser as required by Wicket.\npublic interface IXmlPullParser;\n// The last element found\npublic static enum IXmlPullParser.HttpTagType extends Enum<IXmlPullParser.HttpTagType>;\n", "des": "The default parsing engine of Wicket."}
{"index": 2157, "repo": "wicket-core-10.0.0-M1", "code": "package filter\n\n// This is a markup inline filter.\npublic final class EnclosureHandler extends AbstractMarkupFilter implements IComponentResolver;\n// Handler that sets unique tag id for every inline script and style element in <wicket:head>, unless the element already has one.\npublic class HeadForceTagIdHandler extends AbstractMarkupFilter;\n// This is a markup inline filter.\npublic final class HtmlHandler extends AbstractMarkupFilter;\n", "des": "Default parsing extensions."}
{"index": 2158, "repo": "wicket-core-10.0.0-M1", "code": "package resolver\n\n// The AutoLinkResolver is responsible to handle automatic link resolution.\npublic final class AutoLinkResolver extends Object implements IComponentResolver;\n// Abstract implementation that has a helper method for creating a resource reference.\npublic abstract static class AutoLinkResolver.AbstractAutolinkResolverDelegate extends Object implements AutoLinkResolver.IAutolinkResolverDelegate;\n", "des": "Resolvers implement the IComponentResolver interface and must be registered with the application."}
{"index": 2159, "repo": "wicket-core-10.0.0-M1", "code": "package transformer\n\n// This abstract container provides the means to post-process the markup generated by its child components (excluding the containers tag)\npublic abstract class AbstractOutputTransformerContainer extends MarkupContainer implements ITransformer;\n// A Behavior which can be added to any component.\npublic abstract class AbstractTransformerBehavior extends Behavior implements ITransformer;\n", "des": "Transformers are able to post-process (transform) the output generated by a Component."}
{"index": 2160, "repo": "wicket-core-10.0.0-M1", "code": "package model\n\n// Serves as a base class for different kinds of property models.\npublic abstract class AbstractPropertyModel<T> extends ChainingModel<T> implements IObjectClassAwareModel<T>, IPropertyReflectionAwareModel<T>;\n// This model and its subclasses support chaining of IModels.\npublic class ChainingModel<T> extends Object implements IModel<T>;\n", "des": "Core model support for Wicket components."}
{"index": 2161, "repo": "wicket-core-10.0.0-M1", "code": "package http\n\n// Base class that collects request and session information for request logging to enable rich information about the events that transpired during a single request.\npublic abstract class AbstractRequestLogger extends Object implements IRequestLogger;\n// This listener adds Enclosures to AjaxTarget, where the child controller of the said Enclosure is already added.\npublic class AjaxEnclosureListener extends Object implements AjaxRequestTarget.IListener;\n", "des": "HTTP implementation."}
{"index": 2162, "repo": "wicket-core-10.0.0-M1", "code": "package request\n\n// Default client info object for web applications.\npublic class WebClientInfo extends ClientInfo;\n", "des": "This package contains http (web) protocol dependent implementations of request processing strategies."}
{"index": 2163, "repo": "wicket-core-10.0.0-M1", "code": "package servlet\n\n// A factory of HttpServletRequest wrappers.\npublic abstract class AbstractRequestWrapperFactory extends Object;\n// Represents additional error attributes present in a ServletRequest when the servlet container is handling an error or a forward to an error page mapped by error-page element in web.xml.\npublic class ErrorAttributes extends Object;\n", "des": "Java Servlet specific implementation of Wicket http classes."}
{"index": 2164, "repo": "wicket-core-10.0.0-M1", "code": "package resource\n\n// Thrown when a circular dependency is detected between resources.\npublic final class CircularDependencyException extends WicketRuntimeException;\n// Used to apply several ICssCompressor to the CSS compression. Usage:\npublic class CompositeCssCompressor extends Object implements IScopeAwareTextResourceProcessor, ICssCompressor;\n", "des": "Locale aware resouce loaders."}
{"index": 2165, "repo": "wicket-core-10.0.0-M1", "code": "package response\n\n// Response used to capture output as a byte array\npublic class ByteArrayResponse extends org.apache.wicket.request.Response;\n// Response implementation that discards all output.\npublic class NullResponse extends org.apache.wicket.request.Response;\n// Response object that writes to an AppendingStringBuffer.\npublic class StringResponse extends org.apache.wicket.request.Response;\n", "des": "Several response implementations."}
{"index": 2166, "repo": "wicket-core-10.0.0-M1", "code": "package cookies\n\n// This class provides default values that are used by CookieUtils class when it creates cookies.\npublic class CookieDefaults extends Object implements org.apache.wicket.util.io.IClusterable;\n// \npublic static enum CookieDefaults.SameSite extends Enum<CookieDefaults.SameSite>;\n// Helper class to simplify Cookie handling.\npublic class CookieUtils extends Object;\n", "des": "Persistence support for forms."}
{"index": 2167, "repo": "wicket-core-10.0.0-M1", "code": "package template\n\n// Decorates a TextTemplate with CSS tags.\npublic final class CssTemplate extends TextTemplateDecorator;\n// Decorates a TextTemplate with JavaScript tags.\npublic final class JavaScriptTemplate extends TextTemplateDecorator;\n// A String resource that can be appended to.\npublic class PackageTextTemplate extends TextTemplate;\n", "des": "Resource extensions that make working with header contributions easier and more maintainable."}
{"index": 2168, "repo": "wicket-core-10.0.0-M1", "code": "package tester\n\n// A helper class to ease unit testing of Wicket applications without the need for a servlet container.\npublic class BaseWicketTester extends Object;\n// A page that is used as the automatically created page for BaseWicketTester.startComponentInPage(Class) and the other variations.\npublic static class BaseWicketTester.StartComponentInPage extends WebPage;\n// This is a utility class.\npublic final class DiffUtil extends Object;\n", "des": "A package with utility classes to ease unit testing of Wicket applications without the need for a servlet container."}
{"index": 2169, "repo": "wicket-core-10.0.0-M1", "code": "package validation\n\n// A compound IValidator.\npublic class CompoundValidator<T> extends Behavior implements IValidator<T>;\n// Interface representing a message source that stores messages by key and can perform variable substitution.\npublic interface IErrorMessageSource;\n// Marker interface for validators that will accept a null value.\npublic interface INullAcceptingValidator<T> extends IValidator<T>;\n// Interface representing any object that can be validated.\npublic interface IValidatable<T>;\n", "des": "This package provides interfaces for Wicket's validation support."}
{"index": 2170, "repo": "wicket-core-10.0.0-M1", "code": "package validator\n\n// Base class for validators that check if a given value falls within [min,max] range.\npublic abstract class AbstractRangeValidator<R extends Comparable<? super R> & Serializable,V extends Serializable> extends Behavior implements IValidator<V>;\n// Validator mode\npublic static enum AbstractRangeValidator.Mode extends Enum<AbstractRangeValidator.Mode>;\n// Checks if a credit card number is valid.\npublic class CreditCardValidator extends Object implements IValidator<String>;\n", "des": "This package provides an implementation of Wicket's validation support."}
{"index": 2171, "repo": "wicket-spring-10.0.0-M1", "code": "package annot\n\n// IFieldValueFactory that uses LazyInitProxyFactory to create proxies for Spring dependencies based on the SpringBean annotation applied to a field.\npublic class AnnotProxyFieldValueFactory extends Object implements org.apache.wicket.injection.IFieldValueFactory;\n// Annotation used to tag a field as a placeholder for a spring bean.\n@Retention(RUNTIME) @Target(FIELD) @Documented public @interface SpringBean;\n", "des": "This package contains all the classes to make your wicket components and other pojos @SpringBean annotation aware."}
{"index": 2172, "repo": "spring-security-web-6.1.2", "code": "package web\n\n// Used by ExceptionTranslationFilter to commence an authentication scheme.\npublic interface AuthenticationEntryPoint;\n// Simple implementation of RedirectStrategy which is the default used throughout the framework.\npublic class DefaultRedirectStrategy extends Object implements RedirectStrategy;\n// Standard implementation of SecurityFilterChain.\npublic final class DefaultSecurityFilterChain extends Object implements SecurityFilterChain;\n", "des": "Spring Security's web security module."}
{"index": 2173, "repo": "spring-security-web-6.1.2", "code": "package access\n\n// Used by ExceptionTranslationFilter to handle an AccessDeniedException.\npublic interface AccessDeniedHandler;\n// Base implementation of AccessDeniedHandler.\npublic class AccessDeniedHandlerImpl extends Object implements AccessDeniedHandler;\n", "des": "Access-control related classes and packages."}
{"index": 2174, "repo": "spring-security-web-6.1.2", "code": "package channel\n\n// \npublic abstract class AbstractRetryEntryPoint extends Object implements ChannelEntryPoint;\n// Decides whether a web channel provides sufficient security.\npublic interface ChannelDecisionManager;\n// Implementation of ChannelDecisionManager.\npublic class ChannelDecisionManagerImpl extends Object implements ChannelDecisionManager, org.springframework.beans.factory.InitializingBean;\n// May be used by a ChannelProcessor to launch a web channel.\npublic interface ChannelEntryPoint;\n", "des": "Classes that ensure web requests are received over required transport channels."}
{"index": 2175, "repo": "spring-security-web-6.1.2", "code": "package expression\n\n// A SecurityExpressionHandler that uses a RequestAuthorizationContext to create a WebSecurityExpressionRoot.\npublic class DefaultHttpSecurityExpressionHandler extends org.springframework.security.access.expression.AbstractSecurityExpressionHandler<RequestAuthorizationContext> implements org.springframework.security.access.expression.SecurityExpressionHandler<RequestAuthorizationContext>;\n", "des": "Implementation of web security expressions."}
{"index": 2176, "repo": "spring-security-web-6.1.2", "code": "package intercept\n\n// An authorization filter that restricts access to the URL using AuthorizationManager.\npublic class AuthorizationFilter extends org.springframework.web.filter.GenericFilterBean;\n// Default implementation of FilterInvocationDefinitionSource.\npublic class DefaultFilterInvocationSecurityMetadataSource extends Object implements FilterInvocationSecurityMetadataSource;\n", "des": "Enforcement of security for HTTP requests, typically by the URL requested."}
{"index": 2177, "repo": "spring-security-web-6.1.2", "code": "package authentication\n\n// Abstract processor of browser-based HTTP-based authentication requests.\npublic abstract class AbstractAuthenticationProcessingFilter extends org.springframework.web.filter.GenericFilterBean implements org.springframework.context.ApplicationEventPublisherAware, org.springframework.context.MessageSourceAware;\n", "des": "Authentication processing mechanisms, which respond to the submission of authentication credentials using various protocols (eg BASIC, CAS, form login etc)."}
{"index": 2178, "repo": "spring-security-web-6.1.2", "code": "package logout\n\n// Performs a logout through all the LogoutHandler implementations.\npublic final class CompositeLogoutHandler extends Object implements LogoutHandler;\n// A logout handler which clears either - A defined list of cookie names, using the context path as the cookie path OR - A given list of Cookies\npublic final class CookieClearingLogoutHandler extends Object implements LogoutHandler;\n", "des": "Logout functionality based around a filter which handles a specific logout URL."}
{"index": 2179, "repo": "spring-security-web-6.1.2", "code": "package preauth\n\n// Base class for processing filters that handle pre-authenticated authentication requests, where it is assumed that the principal has already been authenticated by an external system.\npublic abstract class AbstractPreAuthenticatedProcessingFilter extends org.springframework.web.filter.GenericFilterBean implements org.springframework.context.ApplicationEventPublisherAware;\n", "des": "Support for \"pre-authenticated\" scenarios, where Spring Security assumes the incoming request has already been authenticated by some externally configured system."}
{"index": 2180, "repo": "spring-security-web-6.1.2", "code": "package j2ee\n\n", "des": "Pre-authentication support for container-authenticated requests."}
{"index": 2181, "repo": "spring-security-web-6.1.2", "code": "package websphere\n\n// This AbstractPreAuthenticatedProcessingFilter implementation is based on WebSphere authentication.\npublic class WebSpherePreAuthenticatedProcessingFilter extends AbstractPreAuthenticatedProcessingFilter;\n", "des": "Websphere-specific pre-authentication classes."}
{"index": 2182, "repo": "spring-security-web-6.1.2", "code": "package x509\n\n// Obtains the principal from a certificate using a regular expression match against the Subject (as returned by a call to X509Certificate.getSubjectDN()).\npublic class SubjectDnX509PrincipalExtractor extends Object implements X509PrincipalExtractor, org.springframework.context.MessageSourceAware;\n// \npublic class X509AuthenticationFilter extends AbstractPreAuthenticatedProcessingFilter;\n", "des": "X.509 client certificate authentication support."}
{"index": 2183, "repo": "spring-security-web-6.1.2", "code": "package rememberme\n\n// Base class for RememberMeServices implementations.\npublic abstract class AbstractRememberMeServices extends Object implements RememberMeServices, org.springframework.beans.factory.InitializingBean, LogoutHandler, org.springframework.context.MessageSourceAware;\n// \npublic class CookieTheftException extends RememberMeAuthenticationException;\n", "des": "Support for remembering a user between different web sessions."}
{"index": 2184, "repo": "spring-security-web-6.1.2", "code": "package session\n\n// A base class for performing session fixation protection.\npublic abstract class AbstractSessionFixationProtectionStrategy extends Object implements SessionAuthenticationStrategy, org.springframework.context.ApplicationEventPublisherAware;\n// \nprotected static final class AbstractSessionFixationProtectionStrategy.NullEventPublisher extends Object implements org.springframework.context.ApplicationEventPublisher;\n", "des": "Strategy interface and implementations for handling session-related behaviour for a newly authenticated user."}
{"index": 2185, "repo": "spring-security-web-6.1.2", "code": "package switchuser\n\n// Application event which indicates that a user context switch.\npublic class AuthenticationSwitchUserEvent extends org.springframework.security.authentication.event.AbstractAuthenticationEvent;\n// Allows subclasses to modify the GrantedAuthority list that will be assigned to the principal when they assume the identity of a different principal.\npublic interface SwitchUserAuthorityChanger;\n", "des": "Provides HTTP-based \"switch user\" (su) capabilities."}
{"index": 2186, "repo": "spring-security-web-6.1.2", "code": "package ui\n\n// For internal use with namespace configuration in the case where a user doesn't configure a login page.\npublic class DefaultLoginPageGeneratingFilter extends org.springframework.web.filter.GenericFilterBean;\n// Generates a default log out page.\npublic class DefaultLogoutPageGeneratingFilter extends org.springframework.web.filter.OncePerRequestFilter;\n", "des": "Authentication user-interface rendering code."}
{"index": 2187, "repo": "spring-security-web-6.1.2", "code": "package www\n\n// Converts from a HttpServletRequest to UsernamePasswordAuthenticationToken that can be authenticated.\npublic class BasicAuthenticationConverter extends Object implements AuthenticationConverter;\n// Used by the ExceptionTranslationFilter to commence authentication via the BasicAuthenticationFilter.\npublic class BasicAuthenticationEntryPoint extends Object implements AuthenticationEntryPoint, org.springframework.beans.factory.InitializingBean;\n", "des": "WWW-Authenticate based authentication mechanism implementations: Basic and Digest authentication."}
{"index": 2188, "repo": "spring-security-web-6.1.2", "code": "package context\n\n// Registers the DelegatingFilterProxy to use the springSecurityFilterChain before any other registered Filter.\npublic abstract class AbstractSecurityWebApplicationInitializer extends Object implements org.springframework.web.WebApplicationInitializer;\n// \npublic final class DelegatingSecurityContextRepository extends Object implements SecurityContextRepository;\n// \n@Deprecated public final class HttpRequestResponseHolder extends Object;\n", "des": "Classes which are responsible for maintaining the security context between HTTP requests."}
{"index": 2189, "repo": "spring-security-web-6.1.2", "code": "package jaasapi\n\n// A Filter which attempts to obtain a JAAS Subject and continue the FilterChain running as that Subject.\npublic class JaasApiIntegrationFilter extends org.springframework.web.filter.GenericFilterBean;\n", "des": "Makes a JAAS Subject available as the current Subject."}
{"index": 2190, "repo": "spring-security-web-6.1.2", "code": "package jackson2\n\n// Jackson module for spring-security-web.\npublic class WebJackson2Module extends com.fasterxml.jackson.databind.module.SimpleModule;\n// Jackson module for spring-security-web related to servlet.\npublic class WebServletJackson2Module extends com.fasterxml.jackson.databind.module.SimpleModule;\n", "des": "Mix-in classes to provide Jackson serialization support."}
{"index": 2191, "repo": "spring-security-web-6.1.2", "code": "package savedrequest\n\n// An Implementation of RequestCache which saves the original request URI in a cookie.\npublic class CookieRequestCache extends Object implements RequestCache;\n// Represents central information from a HttpServletRequest.\npublic class DefaultSavedRequest extends Object implements SavedRequest;\n// \npublic static class DefaultSavedRequest.Builder extends Object;\n", "des": "Classes related to the caching of an HttpServletRequest which requires authentication."}
{"index": 2192, "repo": "spring-security-web-6.1.2", "code": "package servletapi\n\n// A Filter which populates the ServletRequest with a request wrapper which implements the servlet API security methods.\npublic class SecurityContextHolderAwareRequestFilter extends org.springframework.web.filter.GenericFilterBean;\n", "des": "Populates a Servlet request with a new Spring Security compliant HttpServletRequestWrapper."}
{"index": 2193, "repo": "spring-security-web-6.1.2", "code": "package session\n\n// Filter required by concurrent session handling package.\npublic class ConcurrentSessionFilter extends org.springframework.web.filter.GenericFilterBean;\n// Disables encoding URLs using the HttpServletResponse to prevent including the session id in URLs which is not considered URL because the session id can be leaked in things like HTTP access logs.\npublic class DisableEncodeUrlFilter extends org.springframework.web.filter.OncePerRequestFilter;\n", "des": "Session management filters, HttpSession events and publisher classes."}
{"index": 2194, "repo": "spring-security-web-6.1.2", "code": "package util\n\n// Base class for response wrappers which encapsulate the logic for handling an event when the HttpServletResponse is committed.\npublic abstract class OnCommittedResponseWrapper extends jakarta.servlet.http.HttpServletResponseWrapper;\n// Internal class for building redirect URLs.\npublic class RedirectUrlBuilder extends Object;\n// Internal utility for escaping characters in HTML strings.\npublic abstract class TextEscapeUtils extends Object;\n", "des": "Web utility classes."}
{"index": 2195, "repo": "spring-data-commons-3.1.2", "code": "package annotation\n\n// Annotation to define how Spring Data shall access values of persistent properties.\n@Documented @Target({ANNOTATION_TYPE,TYPE,FIELD,METHOD}) @Retention(RUNTIME) public @interface AccessType;\n// \npublic static enum AccessType.Type extends Enum<AccessType.Type>;\n// Declares a field as the one representing the principal that created the entity containing the field.\n@Retention(RUNTIME) @Target({FIELD,METHOD,ANNOTATION_TYPE}) public @interface CreatedBy;\n", "des": "Core annotations being used by Spring Data."}
{"index": 2196, "repo": "spring-data-commons-3.1.2", "code": "package aot\n\n// The context in which the AOT processing happens.\npublic interface AotContext;\n// Interface defining introspection methods for bean definitions.\npublic static interface AotContext.IntrospectedBeanDefinition;\n// Type-based introspector to resolve Class from a type name and to introspect the bean factory for presence of beans.\npublic static interface AotContext.TypeIntrospector;\n", "des": "Support for registering the need for reflection, resources, java serialization and proxies at runtime for Ahead of Time compilation."}
{"index": 2197, "repo": "spring-data-commons-3.1.2", "code": "package auditing\n\n// Interface to abstract the ways setting the auditing information can be implemented.\npublic interface AuditableBeanWrapper<T>;\n// A factory to lookup AuditableBeanWrappers.\npublic interface AuditableBeanWrapperFactory;\n// Auditing handler to mark entity objects created and modified.\npublic class AuditingHandler extends AuditingHandlerSupport implements InitializingBean;\n// Support class to implement auditing handlers.\npublic abstract class AuditingHandlerSupport extends Object;\n", "des": "General support for entity auditing."}
{"index": 2198, "repo": "spring-data-commons-3.1.2", "code": "package config\n\n// Default implementation for AuditingConfiguration.\npublic class AnnotationAuditingConfiguration extends Object implements AuditingConfiguration;\n// A ImportBeanDefinitionRegistrar that serves as a base class for store specific implementations for configuring audit support.\npublic abstract class AuditingBeanDefinitionRegistrarSupport extends Object implements ImportBeanDefinitionRegistrar;\n// Configuration information for auditing.\npublic interface AuditingConfiguration;\n", "des": "Types to abstract authentication concepts."}
{"index": 2199, "repo": "spring-data-commons-3.1.2", "code": "package config\n\n// Helper to create BeanComponentDefinition more easily.\npublic class BeanComponentDefinitionBuilder extends Object;\n// Helper class to centralize common functionality that needs to be used in various places of the configuration implementation.\npublic interface ConfigurationUtils;\n// Utility methods for BeanDefinitionParser implementations.\npublic abstract class ParsingUtils extends Object;\n", "des": "Basic support for creating custom Spring namespaces and JavaConfig."}
{"index": 2200, "repo": "spring-data-commons-3.1.2", "code": "package convert\n\n// TypeInformationMapper implementation that can be either set up using a MappingContext or manually set up Map of String aliases to types.\npublic class ConfigurableTypeInformationMapper extends Object implements TypeInformationMapper;\n// API to easily set up GenericConverter instances using Java 8 lambdas, mostly in bidirectional fashion for easy registration as custom type converters of the Spring Data mapping subsystem.\npublic interface ConverterBuilder;\n", "des": "General purpose conversion framework to read objects from a data store abstraction and write it back."}
{"index": 2201, "repo": "spring-data-commons-3.1.2", "code": "package crossstore\n\n// Interface representing the set of changes in an entity.\npublic interface ChangeSet;\n// Interface introduced to objects exposing ChangeSet information\npublic interface ChangeSetBacked;\n// \npublic class ChangeSetBackedTransactionSynchronization extends Object implements TransactionSynchronization;\n// Interface to be implemented by classes that can synchronize between data stores and ChangeSets.\npublic interface ChangeSetPersister<K>;\n", "des": "Support for cross-store persistence."}
{"index": 2202, "repo": "spring-data-commons-3.1.2", "code": "package domain\n\n// Convenience base class for aggregate roots that exposes a AbstractAggregateRoot.registerEvent(Object) to capture domain events and expose them via AbstractAggregateRoot.domainEvents().\npublic class AbstractAggregateRoot<A extends AbstractAggregateRoot<A>> extends Object;\n// Abstract Java Bean implementation of Pageable.\npublic abstract class AbstractPageRequest extends Object implements Pageable, Serializable;\n", "des": "Central domain abstractions especially to be used in combination with the Repository abstraction."}
{"index": 2203, "repo": "spring-data-commons-3.1.2", "code": "package jaxb\n\n// XmlAdapter to convert Sort.Order instances into SpringDataJaxb.OrderDtos and vice versa.\npublic class OrderAdapter extends jakarta.xml.bind.annotation.adapters.XmlAdapter<SpringDataJaxb.OrderDto,Sort.Order>;\n// XmlAdapter to convert Page instances into SpringDataJaxb.PageDto instances and vice versa.\npublic class PageAdapter extends jakarta.xml.bind.annotation.adapters.XmlAdapter<SpringDataJaxb.PageDto,Page<Object>>;\n", "des": "Central domain abstractions especially to be used in combination with the Repository abstraction."}
{"index": 2204, "repo": "spring-data-commons-3.1.2", "code": "package geo\n\n// Represents a geospatial box value\npublic class Box extends Object implements Shape;\n// Represents a geospatial circle value\npublic class Circle extends Object implements Shape;\n// Value object to create custom Metrics on the fly.\npublic class CustomMetric extends Object implements Metric;\n// Value object to represent distances in a given metric.\npublic final class Distance extends Object implements Serializable, Comparable<Distance>;\n", "des": "Value types representing geo-spatial concepts."}
{"index": 2205, "repo": "spring-data-commons-3.1.2", "code": "package format\n\n// Converter to create Distance instances from String representations.\npublic enum DistanceFormatter extends Enum<DistanceFormatter> implements Converter<String,Distance>, Formatter<Distance>;\n// Converter to parse two comma-separated doubles into a Point.\npublic enum PointFormatter extends Enum<PointFormatter> implements Converter<String,Point>, Formatter<Point>;\n", "des": "Formatters for geo-spatial types."}
{"index": 2206, "repo": "spring-data-commons-3.1.2", "code": "package history\n\n// A RevisionMetadata implementation that inspects the given object for fields with the configured annotations and returns the field's values on calls to AnnotationRevisionMetadata.getRevisionInstant(), AnnotationRevisionMetadata.getRevisionInstant() and AnnotationRevisionMetadata.getRevisionNumber().\npublic class AnnotationRevisionMetadata<N extends Number & Comparable<N>> extends Object implements RevisionMetadata<N>;\n", "des": "Basic interfaces and value objects for histography API."}
{"index": 2207, "repo": "spring-data-commons-3.1.2", "code": "package mapping\n\n// Access options when using PersistentPropertyPathAccessor to get and set properties.\npublic class AccessOptions extends Object;\n// Access options for getting values for property paths.\npublic static class AccessOptions.GetOptions extends Object;\n// How to handle null values during a PersistentPropertyPath traversal.\npublic static enum AccessOptions.GetOptions.GetNulls extends Enum<AccessOptions.GetOptions.GetNulls>;\n", "des": "Base package for the mapping subsystem."}
{"index": 2208, "repo": "spring-data-commons-3.1.2", "code": "package callback\n\n// Marker interface for entity callbacks to be implemented in specific callback subtypes.\n@Reflective(PublicMethodReflectiveProcessor.class) public interface EntityCallback<T>;\n// Interface to be implemented by objects that can manage a number of EntityCallback objects and invoke these with a specific entity.\npublic interface EntityCallbacks;\n", "des": "Mapping callback API and implementation base classes."}
{"index": 2209, "repo": "spring-data-commons-3.1.2", "code": "package context\n\n// Base class to build mapping metadata and thus create instances of PersistentEntity and PersistentProperty.\npublic abstract class AbstractMappingContext<E extends MutablePersistentEntity<?,P>,P extends PersistentProperty<P>> extends Object implements MappingContext<E,P>, ApplicationEventPublisherAware, ApplicationContextAware, InitializingBean;\n", "des": "Mapping context API and implementation base classes."}
{"index": 2210, "repo": "spring-data-commons-3.1.2", "code": "package model\n\n// Simple implementation of PersistentProperty.\npublic abstract class AbstractPersistentProperty<P extends PersistentProperty<P>> extends Object implements PersistentProperty<P>;\n// Special PersistentProperty that takes annotations at a property into account.\npublic abstract class AnnotationBasedPersistentProperty<P extends PersistentProperty<P>> extends AbstractPersistentProperty<P>;\n", "des": "Core implementation of the mapping subsystem's model."}
{"index": 2211, "repo": "spring-data-commons-3.1.2", "code": "package projection\n\n// Helper value to abstract an accessor.\npublic final class Accessor extends Object;\n// Method interceptor to invoke default methods on the repository proxy.\npublic class DefaultMethodInvokingMethodInterceptor extends Object implements MethodInterceptor;\n// Descriptor for a top-level mapped type representing a view onto a domain type structure.\npublic class EntityProjection<M,D> extends Object implements Streamable<EntityProjection.PropertyProjection<?,?>>;\n", "des": "Projection subsystem."}
{"index": 2212, "repo": "spring-data-commons-3.1.2", "code": "package querydsl\n\n// Strategy interface to abstract the ways to translate an plain domain class into a EntityPath.\npublic interface EntityPathResolver;\n// Interface to allow execution of QueryDsl Predicate instances.\npublic interface ListQuerydslPredicateExecutor<T> extends QuerydslPredicateExecutor<T>;\n// Basic Java Bean implementation of Pageable with support for QueryDSL.\npublic class QPageRequest extends AbstractPageRequest;\n", "des": "Querydsl integration support classes."}
{"index": 2213, "repo": "spring-data-commons-3.1.2", "code": "package binding\n\n// MultiValueBinding creates a Predicate out of given Path and collection value.\n@FunctionalInterface public interface MultiValueBinding<T extends com.querydsl.core.types.Path<? extends S>,S>;\n// OptionalValueBinding creates a Predicate out of given Path and value.\n@FunctionalInterface public interface OptionalValueBinding<T extends com.querydsl.core.types.Path<? extends S>,S>;\n", "des": "Base classes to implement CDI support for repositories."}
{"index": 2214, "repo": "spring-data-commons-3.1.2", "code": "package repository\n\n// Interface for generic CRUD operations on a repository for a specific type.\n@NoRepositoryBean public interface CrudRepository<T,ID> extends Repository<T,ID>;\n// Interface for generic CRUD operations on a repository for a specific type.\n@NoRepositoryBean public interface ListCrudRepository<T,ID> extends CrudRepository<T,ID>;\n", "des": "Central interfaces for repository abstraction."}
{"index": 2215, "repo": "spring-data-commons-3.1.2", "code": "package cdi\n\n// Base class for Bean wrappers.\npublic abstract class CdiRepositoryBean<T> extends Object implements jakarta.enterprise.inject.spi.Bean<T>, jakarta.enterprise.inject.spi.PassivationCapable;\n// Interface containing the configurable options for the Spring Data repository subsystem using CDI.\npublic interface CdiRepositoryConfiguration;\n// Context for CDI repositories.\npublic class CdiRepositoryContext extends Object;\n", "des": "Base classes to implement CDI support for repositories."}
{"index": 2216, "repo": "spring-data-commons-3.1.2", "code": "package config\n\n// Annotation based RepositoryConfigurationSource.\npublic class AnnotationRepositoryConfigurationSource extends RepositoryConfigurationSourceSupport;\n// AotContext specific to Spring Data Repository infrastructure.\npublic interface AotRepositoryContext extends AotContext;\n// Enumeration to define in which way repositories are bootstrapped.\npublic enum BootstrapMode extends Enum<BootstrapMode>;\n", "des": "Support classes for repository namespace and JavaConfig integration."}
{"index": 2217, "repo": "spring-data-commons-3.1.2", "code": "package core\n\n// Meta-information about the CRUD methods of a repository.\npublic interface CrudMethods;\n// Extension of EntityMetadata to add functionality to query information of entity instances.\npublic interface EntityInformation<T,ID> extends EntityMetadata<T>;\n// Metadata for entity types.\npublic interface EntityMetadata<T>;\n// Abstraction of a map of NamedQueries that can be looked up by their names.\npublic interface NamedQueries;\n", "des": "Core abstractions for repository implementation."}
{"index": 2218, "repo": "spring-data-commons-3.1.2", "code": "package support\n\n// Base class for implementations of EntityInformation.\npublic abstract class AbstractEntityInformation<T,ID> extends Object implements EntityInformation<T,ID>;\n// Base class for RepositoryMetadata implementations.\npublic abstract class AbstractRepositoryMetadata extends Object implements RepositoryMetadata;\n", "des": "Base classes to implement repositories for various data stores."}
{"index": 2219, "repo": "spring-data-commons-3.1.2", "code": "package history\n\n// A repository which can access entities held in a variety of Revisions.\n@NoRepositoryBean public interface RevisionRepository<T,ID,N extends Number & Comparable<N>> extends Repository<T,ID>;\n", "des": "API for repositories using historiography."}
{"index": 2220, "repo": "spring-data-commons-3.1.2", "code": "package support\n\n// Information about a revision entity which is the class carrying revision information for an entity.\npublic interface RevisionEntityInformation;\n", "des": "Value objects to implement core repository interfaces for historiography."}
{"index": 2221, "repo": "spring-data-commons-3.1.2", "code": "package init\n\n// Base class for FactoryBeans creating ResourceReaderRepositoryPopulators.\npublic abstract class AbstractRepositoryPopulatorFactoryBean extends AbstractFactoryBean<ResourceReaderRepositoryPopulator> implements ApplicationListener<ContextRefreshedEvent>, ApplicationContextAware;\n// FactoryBean to set up a ResourceReaderRepositoryPopulator with a Jackson2ResourceReader.\npublic class Jackson2RepositoryPopulatorFactoryBean extends AbstractRepositoryPopulatorFactoryBean;\n", "des": "Support for repository initialization using XML and JSON."}
{"index": 2222, "repo": "spring-data-commons-3.1.2", "code": "package query\n\n// Default implementation of Parameters.\npublic final class DefaultParameters extends Parameters<DefaultParameters,Parameter>;\n// An QueryMethodEvaluationContextProvider that assembles an EvaluationContext from a list of EvaluationContextExtension instances.\npublic class ExtensionAwareQueryMethodEvaluationContextProvider extends Object implements QueryMethodEvaluationContextProvider;\n", "des": "Support classes to work with query methods."}
{"index": 2223, "repo": "spring-data-commons-3.1.2", "code": "package parser\n\n// Base class for query creators that create criteria based queries from a PartTree.\npublic abstract class AbstractQueryCreator<T,S> extends Object;\n// A single part of a method name that has to be transformed into a query part.\npublic class Part extends Object;\n// The various types of ignore case that are supported.\npublic static enum Part.IgnoreCaseType extends Enum<Part.IgnoreCaseType>;\n// The type of a method name part.\npublic static enum Part.Type extends Enum<Part.Type>;\n", "des": "Support classes for parsing queries from method names."}
{"index": 2224, "repo": "spring-data-commons-3.1.2", "code": "package reactive\n\n// Interface for generic CRUD operations on a repository for a specific type.\n@NoRepositoryBean public interface ReactiveCrudRepository<T,ID> extends Repository<T,ID>;\n// Repository fragment to provide methods to retrieve entities using the sorting abstraction.\n@NoRepositoryBean public interface ReactiveSortingRepository<T,ID> extends Repository<T,ID>;\n", "des": "Support for reactive repositories."}
{"index": 2225, "repo": "spring-data-commons-3.1.2", "code": "package support\n\n// Default implementation of RepositoryInvokerFactory to inspect the requested repository type and create a matching RepositoryInvoker that suits the repository best.\npublic class DefaultRepositoryInvokerFactory extends Object implements RepositoryInvokerFactory;\n", "des": "Support classes for integration of the repository programming model with 3rd party frameworks."}
{"index": 2226, "repo": "spring-data-commons-3.1.2", "code": "package util\n\n// Utility class to work with classes.\npublic abstract class ClassUtils extends Object;\n// Converters to potentially wrap the execution of a repository method into a variety of wrapper types potentially being available on the classpath.\npublic abstract class QueryExecutionConverters extends Object;\n// \npublic static interface QueryExecutionConverters.ExecutionAdapter;\n// \npublic static interface QueryExecutionConverters.ThrowingSupplier;\n", "des": "Utility classes for repository implementations."}
{"index": 2227, "repo": "spring-data-commons-3.1.2", "code": "package spi\n\n// SPI to allow adding a set of properties and function definitions accessible via the root of an EvaluationContext provided by an ExtensionAwareQueryMethodEvaluationContextProvider.\npublic interface EvaluationContextExtension extends ExtensionIdAware;\n// Marker interface for Spring Data EvaluationContext extensions.\npublic interface ExtensionIdAware;\n// Value object to represent a function.\npublic class Function extends Object;\n", "des": "Service provider interfaces to extend the query execution mechanism."}
{"index": 2228, "repo": "spring-data-commons-3.1.2", "code": "package support\n\n// Accessor for the ExampleMatcher to use in modules that support query by example (QBE) querying.\npublic class ExampleMatcherAccessor extends Object;\n// Strategy interface to determine whether a given entity is to be considered new.\npublic interface IsNewStrategy;\n// Support for query execution using Pageable.\npublic abstract class PageableExecutionUtils extends Object;\n", "des": "Core support classes."}
{"index": 2229, "repo": "spring-data-commons-3.1.2", "code": "package transaction\n\n// \n@Deprecated public class ChainedTransactionManager extends Object implements PlatformTransactionManager;\n", "des": "Contains advanced support for transactions, e.g. a best-effort delegating transaction manager."}
{"index": 2230, "repo": "spring-data-commons-3.1.2", "code": "package type\n\n// \n@Deprecated public interface MethodsMetadata extends ClassMetadata;\n", "des": "Core support package for type introspection."}
{"index": 2231, "repo": "spring-data-commons-3.1.2", "code": "package classreading\n\n// \n@Deprecated public interface MethodsMetadataReader extends MetadataReader;\n// \n@Deprecated public class MethodsMetadataReaderFactory extends SimpleMetadataReaderFactory;\n", "des": "Support classes for reading annotation and class-level metadata."}
{"index": 2232, "repo": "spring-data-commons-3.1.2", "code": "package util\n\n// Scanner to find types with annotations on the classpath.\npublic class AnnotatedTypeScanner extends Object implements ResourceLoaderAware, EnvironmentAware;\n// A ReflectionUtils.FieldCallback that will inspect each field for a given annotation.\npublic class AnnotationDetectionFieldCallback extends Object implements ReflectionUtils.FieldCallback;\n", "des": "Core utility APIs such as a type information framework to resolve generic types."}
{"index": 2233, "repo": "spring-data-commons-3.1.2", "code": "package web\n\n// Extension of PageableHandlerMethodArgumentResolver that also supports enhancing URIs using Spring HATEOAS support.\npublic class HateoasPageableHandlerMethodArgumentResolver extends PageableHandlerMethodArgumentResolver implements org.springframework.hateoas.server.mvc.UriComponentsContributor;\n", "des": "Integration with Spring MVC."}
{"index": 2234, "repo": "spring-data-commons-3.1.2", "code": "package config\n\n// Annotation to automatically register the following beans for usage with Spring MVC.\n@Retention(RUNTIME) @Target({TYPE,ANNOTATION_TYPE}) @Inherited @Import({SpringDataWebConfigurationImportSelector.class,QuerydslActivator.class}) public @interface EnableSpringDataWebSupport;\n", "des": "Spring Data web configuration."}
{"index": 2235, "repo": "spring-data-commons-3.1.2", "code": "package querydsl\n\n// HandlerMethodArgumentResolver to allow injection of Predicate into Spring MVC controller methods.\npublic class QuerydslPredicateArgumentResolver extends QuerydslPredicateArgumentResolverSupport implements HandlerMethodArgumentResolver;\n// HandlerMethodArgumentResolver to allow injection of Predicate into Spring MVC controller methods.\npublic abstract class QuerydslPredicateArgumentResolverSupport extends Object;\n", "des": "Querydsl-specific web support."}
{"index": 2236, "repo": "spring-security-acl-6.1.2", "code": "package acls\n\n// Given a domain object instance passed as a method argument, ensures the principal has appropriate permission as indicated by the AclService.\npublic class AclEntryVoter extends org.springframework.security.access.vote.AbstractAclVoter;\n// Batch loads ACLs for collections of objects to allow optimised filtering.\npublic class AclPermissionCacheOptimizer extends Object implements org.springframework.security.access.PermissionCacheOptimizer;\n", "des": "The Spring Security ACL package which implements instance-based security for domain objects."}
{"index": 2237, "repo": "spring-security-acl-6.1.2", "code": "package afterinvocation\n\n// Abstract AfterInvocationProvider which provides commonly-used ACL-related services.\npublic abstract class AbstractAclProvider extends Object implements org.springframework.security.access.AfterInvocationProvider;\n", "des": "After-invocation providers for collection and array filtering."}
{"index": 2238, "repo": "spring-security-acl-6.1.2", "code": "package domain\n\n// Provides an abstract superclass for Permission implementations.\npublic abstract class AbstractPermission extends Object implements Permission;\n// An immutable default implementation of AccessControlEntry.\npublic class AccessControlEntryImpl extends Object implements AccessControlEntry, AuditableAccessControlEntry;\n// Strategy used by AclImpl to determine whether a principal is permitted to call adminstrative methods on the AclImpl.\npublic interface AclAuthorizationStrategy;\n", "des": "Basic implementation of access control lists (ACLs) interfaces."}
{"index": 2239, "repo": "spring-security-acl-6.1.2", "code": "package jdbc\n\n// Performs lookups in a manner that is compatible with ANSI SQL.\npublic class BasicLookupStrategy extends Object implements LookupStrategy;\n// Simple JDBC-based implementation of AclService.\npublic class JdbcAclService extends Object implements AclService;\n// Provides a base JDBC implementation of MutableAclService.\npublic class JdbcMutableAclService extends JdbcAclService implements MutableAclService;\n// Performs lookups for AclService.\npublic interface LookupStrategy;\n", "des": "JDBC-based persistence of ACL information"}
{"index": 2240, "repo": "spring-security-acl-6.1.2", "code": "package model\n\n// Represents an individual permission assignment within an Acl.\npublic interface AccessControlEntry extends Serializable;\n// Represents an access control list (ACL) for a domain object.\npublic interface Acl extends Serializable;\n// A caching layer for JdbcAclService.\npublic interface AclCache;\n// Abstract base class for Acl data operations.\npublic abstract class AclDataAccessException extends RuntimeException;\n// Provides retrieval of Acl instances.\npublic interface AclService;\n", "des": "Interfaces and shared classes to manage access control lists (ACLs) for domain object instances."}
{"index": 2241, "repo": "spring-data-keyvalue-3.1.2", "code": "package annotation\n\n// Marker interface for methods with Persistent annotations indicating the presence of a dedicated keyspace the entity should reside in.\n@Documented @Retention(RUNTIME) @Target({METHOD,TYPE}) public @interface KeySpace;\n", "des": "Key-Value annotations for declarative keyspace configuration."}
{"index": 2242, "repo": "spring-data-keyvalue-3.1.2", "code": "package core\n\n// Base implementation of KeyValueAdapter holds QueryEngine to delegate find and count execution to.\npublic abstract class AbstractKeyValueAdapter extends Object implements KeyValueAdapter;\n// Resolves the criteria object from given KeyValueQuery.\npublic interface CriteriaAccessor<T>;\n// Forwards CloseableIterator invocations to the configured Iterator delegate.\npublic class ForwardingCloseableIterator<T> extends Object implements CloseableIterator<T>;\n", "des": "Core key/value implementation."}
{"index": 2243, "repo": "spring-data-keyvalue-3.1.2", "code": "package event\n\n// KeyValueEvent gets published for operations executed by eg.\npublic class KeyValueEvent<T> extends ApplicationEvent;\n// KeyValueEvent after removing an object by with a given key.\npublic static class KeyValueEvent.AfterDeleteEvent<T> extends KeyValueEvent<T>;\n// KeyValueEvent after removing all elements in a given keyspace.\npublic static class KeyValueEvent.AfterDropKeySpaceEvent<T> extends KeyValueEvent<T>;\n", "des": "Support classes for key-value events, like standard persistence lifecycle events."}
{"index": 2244, "repo": "spring-data-keyvalue-3.1.2", "code": "package mapping\n\n// AnnotationBasedKeySpaceResolver looks up Persistent and checks for presence of either meta or direct usage of KeySpace.\npublic enum AnnotationBasedKeySpaceResolver extends Enum<AnnotationBasedKeySpaceResolver> implements KeySpaceResolver;\n", "des": "Infrastructure for the Key-Value mapping subsystem and keyspace resolution."}
{"index": 2245, "repo": "spring-data-keyvalue-3.1.2", "code": "package context\n\n// Default implementation of a MappingContext using KeyValuePersistentEntity and KeyValuePersistentProperty as primary abstractions.\npublic class KeyValueMappingContext<E extends KeyValuePersistentEntity<?,P>,P extends KeyValuePersistentProperty<P>> extends AbstractMappingContext<E,P>;\n", "des": "Infrastructure for the Key-Value mapping context."}
{"index": 2246, "repo": "spring-data-keyvalue-3.1.2", "code": "package query\n\n// \npublic class KeyValueQuery<T> extends Object;\n", "des": "Key/value specific query and abstractions."}
{"index": 2247, "repo": "spring-data-keyvalue-3.1.2", "code": "package repository\n\n// \npublic interface KeyValueRepository<T,ID> extends ListCrudRepository<T,ID>, ListPagingAndSortingRepository<T,ID>;\n", "des": "Key/value specific repository implementation."}
{"index": 2248, "repo": "spring-data-keyvalue-3.1.2", "code": "package config\n\n// RepositoryConfigurationExtension for KeyValueRepository.\npublic abstract class KeyValueRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport;\n// Annotation to customize the query creator type to be used for a specific store.\n@Documented @Retention(RUNTIME) @Target(ANNOTATION_TYPE) public @interface QueryCreatorType;\n", "des": "Support infrastructure for the configuration of key/value specific repositories."}
{"index": 2249, "repo": "spring-data-keyvalue-3.1.2", "code": "package query\n\n// KeyValuePartTreeQuery implementation deriving queries from PartTree using a predefined AbstractQueryCreator that caches the once created query.\npublic class CachingKeyValuePartTreeQuery extends KeyValuePartTreeQuery;\n// RepositoryQuery implementation deriving queries from PartTree using a predefined AbstractQueryCreator.\npublic class KeyValuePartTreeQuery extends Object implements RepositoryQuery;\n", "des": "Query derivation mechanism for key/value specific repositories providing a generic SpEL based implementation."}
{"index": 2250, "repo": "spring-data-keyvalue-3.1.2", "code": "package support\n\n// RepositoryFactorySupport specific of handing KeyValueRepository.\npublic class KeyValueRepositoryFactory extends RepositoryFactorySupport;\n// FactoryBean to create KeyValueRepository.\npublic class KeyValueRepositoryFactoryBean<T extends Repository<S,ID>,S,ID> extends RepositoryFactoryBeanSupport<T,S,ID>;\n// QuerydslPredicateExecutor capable of applying Predicates using CollQuery.\npublic class QuerydslKeyValuePredicateExecutor<T> extends Object implements ListQuerydslPredicateExecutor<T>;\n", "des": "Support infrastructure for query derivation of key/value specific repositories."}
{"index": 2251, "repo": "spring-data-keyvalue-3.1.2", "code": "package map\n\n// KeyValueAdapter implementation for Map.\npublic class MapKeyValueAdapter extends AbstractKeyValueAdapter;\n", "des": "Repository implementation backed by generic Map instances."}
{"index": 2252, "repo": "spring-data-keyvalue-3.1.2", "code": "package config\n\n// Annotation to activate Map repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(MapRepositoriesRegistrar.class) @QueryCreatorType(value=SpelQueryCreator.class, repositoryQueryType=CachingKeyValuePartTreeQuery.class) public @interface EnableMapRepositories;\n// Map specific RepositoryBeanDefinitionRegistrarSupport implementation.\npublic class MapRepositoriesRegistrar extends RepositoryBeanDefinitionRegistrarSupport;\n", "des": "Support infrastructure for the configuration of Map repositories."}
{"index": 2253, "repo": "spring-batch-test-5.0.2", "code": "package test\n\n// \n@Deprecated(since=\"5.0\", forRemoval=true) public abstract class AssertFile extends Object;\n// \n@Deprecated(since=\"5.0\", forRemoval=true) public class DataSourceInitializer extends Object implements org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// Convenience class for accessing ExecutionContext values from job and step executions.\npublic class ExecutionContextTestUtils extends Object;\n", "des": "Utility classes for batch job/step testing."}
{"index": 2254, "repo": "spring-batch-test-5.0.2", "code": "package context\n\n// BeanPostProcessor implementation that injects a job bean into JobLauncherTestUtils if there is a unique job bean.\npublic class BatchTestContextBeanPostProcessor extends Object implements org.springframework.beans.factory.config.BeanPostProcessor;\n", "des": "APIs for the configuration of Spring Batch test support."}
{"index": 2255, "repo": "spring-vault-core-3.0.4", "code": "package vault\n\n// The Spring Vault specific NestedRuntimeException implementation.\npublic class VaultException extends NestedRuntimeException;\n", "des": "Spring support for Hashicorp Vault."}
{"index": 2256, "repo": "spring-vault-core-3.0.4", "code": "package annotation\n\n// Annotation providing a convenient and declarative mechanism for adding a VaultPropertySource to Spring's Environment.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Repeatable(VaultPropertySources.class) @Import(org.springframework.vault.annotation.VaultPropertySourceRegistrar.class) public @interface VaultPropertySource;\n// \npublic static enum VaultPropertySource.Renewal extends Enum<VaultPropertySource.Renewal>;\n", "des": "Annotation support for the Spring Vault."}
{"index": 2257, "repo": "spring-vault-core-3.0.4", "code": "package authentication\n\n// \n@Deprecated(since=\"2.2\", forRemoval=true) public class AppIdAuthentication extends Object implements ClientAuthentication, AuthenticationStepsFactory;\n// \n@Deprecated(since=\"2.2\", forRemoval=true) public class AppIdAuthenticationOptions extends Object;\n// Builder for AppIdAuthenticationOptions.\npublic static class AppIdAuthenticationOptions.AppIdAuthenticationOptionsBuilder extends Object;\n", "des": "Support for authentication and session management."}
{"index": 2258, "repo": "spring-vault-core-3.0.4", "code": "package event\n\n// Event published after logging into Vault.\npublic class AfterLoginEvent extends AuthenticationEvent;\n// Event published after renewing a login token.\npublic class AfterLoginTokenRenewedEvent extends AuthenticationEvent;\n// Event published after revoking a login token.\npublic class AfterLoginTokenRevocationEvent extends AuthenticationEvent;\n// Generic event class for authentication error events.\npublic class AuthenticationErrorEvent extends ApplicationEvent;\n", "des": "Support classes for authentication application events."}
{"index": 2259, "repo": "spring-vault-core-3.0.4", "code": "package client\n\n// Factory for ClientHttpConnector that supports ReactorClientHttpConnector and JettyClientHttpConnector.\npublic class ClientHttpConnectorFactory extends Object;\n// Utility methods to create ClientHttpRequestFactory using Apache Http Components.\npublic static class ClientHttpConnectorFactory.HttpComponents extends Object;\n// ClientHttpRequestFactory using the JDK's HttpClient.\npublic static class ClientHttpConnectorFactory.JdkHttpClient extends Object;\n", "des": "Spring Vault Client abstraction."}
{"index": 2260, "repo": "spring-vault-core-3.0.4", "code": "package config\n\n// Base class for Spring Vault configuration using JavaConfig for a reactive infrastructure.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractReactiveVaultConfiguration extends AbstractVaultConfiguration;\n// Base class for Spring Vault configuration using JavaConfig.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractVaultConfiguration extends Object implements ApplicationContextAware;\n", "des": "Spring configuration for Vault."}
{"index": 2261, "repo": "spring-vault-core-3.0.4", "code": "package core\n\n// Interface that specifies a basic set of Vault operations executed on a reactive infrastructure, implemented by ReactiveVaultTemplate.\npublic interface ReactiveVaultOperations;\n// This class encapsulates main Vault interaction.\npublic class ReactiveVaultTemplate extends Object implements ReactiveVaultOperations;\n// A callback for executing arbitrary operations on RestOperations.\n@FunctionalInterface public interface RestOperationsCallback<T>;\n", "des": "Vault core support."}
{"index": 2262, "repo": "spring-vault-core-3.0.4", "code": "package env\n\n// PropertySource that requests renewable secrets from SecretLeaseContainer.\npublic class LeaseAwareVaultPropertySource extends EnumerablePropertySource<VaultOperations>;\n// PropertySource that reads keys and values from a VaultTemplate and path.\npublic class VaultPropertySource extends EnumerablePropertySource<VaultOperations>;\n// Exception throws when a VaultPropertySource could not load its properties.\npublic class VaultPropertySourceNotFoundException extends VaultException;\n", "des": "Spring Vault's environment abstraction consisting property source support."}
{"index": 2263, "repo": "spring-vault-core-3.0.4", "code": "package lease\n\n// Version-specific endpoint implementations that use either legacy or sys/leases endpoints.\npublic enum LeaseEndpoints extends Enum<LeaseEndpoints>;\n// Event-based container to request secrets from Vault and renew the associated Lease.\npublic class SecretLeaseContainer extends SecretLeaseEventPublisher implements InitializingBean, DisposableBean;\n// Publisher for SecretLeaseEvents.\npublic class SecretLeaseEventPublisher extends Object implements InitializingBean;\n", "des": "The core package implementing lease renewal and secret rotation."}
{"index": 2264, "repo": "spring-vault-core-3.0.4", "code": "package domain\n\n// A lease abstracting the lease Id, duration and its renewability.\npublic class Lease extends Object;\n// Represents a requested secret from a specific Vault path associated with a lease RequestedSecret.Mode.\npublic class RequestedSecret extends Object;\n// \npublic static enum RequestedSecret.Mode extends Enum<RequestedSecret.Mode>;\n", "des": "Lease domain classes."}
{"index": 2265, "repo": "spring-vault-core-3.0.4", "code": "package event\n\n// Event published after renewing a Lease for a RequestedSecret.\npublic class AfterSecretLeaseRenewedEvent extends SecretLeaseEvent;\n// Event published after revoking a Lease for a RequestedSecret.\npublic class AfterSecretLeaseRevocationEvent extends SecretLeaseEvent;\n// Event published before revoking a Lease for a RequestedSecret.\npublic class BeforeSecretLeaseRevocationEvent extends SecretLeaseEvent;\n", "des": "Support classes for lease application events."}
{"index": 2266, "repo": "spring-vault-core-3.0.4", "code": "package util\n\n// Key-Value utility to retrieve secrets from a versioned key-value backend.\npublic class KeyValueDelegate extends Object;\n// \npublic static class KeyValueDelegate.MountInfo extends Object;\n// Strategy interface to transform properties to a new key-value Map in a functional style.\n@FunctionalInterface public interface PropertyTransformer;\n", "des": "Property transformer classes for Spring Vault core support."}
{"index": 2267, "repo": "spring-vault-core-3.0.4", "code": "package configuration\n\n// Annotation to activate Vault repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(VaultRepositoriesRegistrar.class) @QueryCreatorType(value=VaultQueryCreator.class, repositoryQueryType=VaultPartTreeQuery.class) public @interface EnableVaultRepositories;\n// Vault specific ImportBeanDefinitionRegistrar.\npublic class VaultRepositoriesRegistrar extends RepositoryBeanDefinitionRegistrarSupport;\n", "des": "Support infrastructure for the configuration of Vault specific repositories."}
{"index": 2268, "repo": "spring-vault-core-3.0.4", "code": "package convert\n\n// Base class for VaultConverter implementations.\npublic abstract class AbstractVaultConverter extends Object implements VaultConverter, InitializingBean;\n// Default implementation of VaultTypeMapper allowing configuration of the key to lookup and store type information in SecretDocument.\npublic class DefaultVaultTypeMapper extends DefaultTypeMapper<Map<String,Object>> implements VaultTypeMapper;\n", "des": "Spring Vault specific converter infrastructure."}
{"index": 2269, "repo": "spring-vault-core-3.0.4", "code": "package core\n\n// VaultEntityInformation implementation using a VaultPersistentEntity instance to lookup the necessary information.\npublic class MappingVaultEntityInformation<T,ID> extends PersistentEntityInformation<T,ID> implements VaultEntityInformation<T,ID>;\n// Vault-specific EntityInformation.\npublic interface VaultEntityInformation<T,ID> extends EntityInformation<T,ID>;\n// Vault-specific KeyValueAdapter.\npublic class VaultKeyValueAdapter extends AbstractKeyValueAdapter;\n", "des": "Spring Vault core repository implementation."}
{"index": 2270, "repo": "spring-vault-core-3.0.4", "code": "package mapping\n\n// VaultPersistentEntity implementation.\npublic class BasicVaultPersistentEntity<T> extends BasicKeyValuePersistentEntity<T,VaultPersistentProperty> implements VaultPersistentEntity<T>;\n// Secret marks objects as aggregate roots to be stored in Vault.\n@Documented @Inherited @Retention(RUNTIME) @Target(TYPE) @KeySpace public @interface Secret;\n", "des": "Infrastructure for the Vault JSON-to-object mapping subsystem."}
{"index": 2271, "repo": "spring-vault-core-3.0.4", "code": "package query\n\n// Vault-specific KeyValuePartTreeQuery.\npublic class VaultPartTreeQuery extends KeyValuePartTreeQuery;\n// Vault query consisting of a single Predicate.\npublic class VaultQuery extends Object;\n// Query creator for Vault queries.\npublic class VaultQueryCreator extends AbstractQueryCreator<KeyValueQuery<VaultQuery>,VaultQuery>;\n", "des": "Query derivation mechanism for Vault specific repositories."}
{"index": 2272, "repo": "spring-vault-core-3.0.4", "code": "package support\n\n// RepositoryFactorySupport specific of handing Vault KeyValueRepository.\npublic class VaultRepositoryFactory extends KeyValueRepositoryFactory;\n// Adapter for Springs FactoryBean interface to allow easy setup of VaultRepositoryFactory via Spring configuration.\npublic class VaultRepositoryFactoryBean<T extends Repository<S,ID>,S,ID extends Serializable> extends KeyValueRepositoryFactoryBean<T,S,ID>;\n// \npublic class VaultRevisionMetadata extends Object implements RevisionMetadata<Integer>;\n", "des": "Support infrastructure for query derivation of Vault specific repositories."}
{"index": 2273, "repo": "spring-vault-core-3.0.4", "code": "package security\n\n// Vault-based BytesEncryptor using Vault's transit backend.\npublic class VaultBytesEncryptor extends Object implements BytesEncryptor;\n// Random byte generator using Vault's transit backend to generate high-quality random bytes of the configured length.\npublic class VaultBytesKeyGenerator extends Object implements BytesKeyGenerator;\n", "des": "Integration with Spring Security."}
{"index": 2274, "repo": "spring-vault-core-3.0.4", "code": "package support\n\n// Supporting class for computation results allowing introspection of the result value.\npublic abstract class AbstractResult<V> extends Object;\n// Value object representing a certificate consisting of the certificate and the issuer certificate.\npublic class Certificate extends Object;\n// Value object representing a certificate bundle consisting of a private key, the certificate and the issuer certificate.\npublic class CertificateBundle extends Certificate;\n", "des": "Classes supporting the Vault packages, such as value objects."}
{"index": 2275, "repo": "spring-data-elasticsearch-5.1.2", "code": "package elc\n\n// Class to combine an Elasticsearch Aggregate with its name.\npublic class Aggregation extends Object;\n// Extension of the ElasticsearchClient class that implements AutoCloseable.\npublic class AutoCloseableElasticsearchClient extends co.elastic.clients.elasticsearch.ElasticsearchClient implements AutoCloseable;\n", "des": "This package contains classes that use the new Elasticsearch client library (co.elastic.clients:elasticsearch-java) to access Elasticsearch."}
{"index": 2276, "repo": "spring-data-elasticsearch-5.1.2", "code": "package erhlc\n\n// \n@Deprecated public abstract class AbstractElasticsearchConfiguration extends ElasticsearchConfigurationSupport;\n// \n@Deprecated public abstract class AbstractReactiveElasticsearchConfiguration extends ElasticsearchConfigurationSupport;\n// \n@Deprecated public class DefaultReactiveClusterOperations extends Object implements ReactiveClusterOperations;\n", "des": "This package contains classes that use the old Elasticsearch 7 libraries to access Elasticsearch either directly by using the RestHighLevelClient or indirectly by using code copied from Elasticsearch libraries (reactive implementation)."}
{"index": 2277, "repo": "spring-data-elasticsearch-5.1.2", "code": "package cluster\n\n// Information about the cluster health.\npublic class ClusterHealth extends Object;\n// \npublic static final class ClusterHealth.ClusterHealthBuilder extends Object;\n// Elasticsearch operations on cluster level.\npublic interface ClusterOperations;\n// Reactive Elasticsearch operations on cluster level.\npublic interface ReactiveClusterOperations;\n", "des": "Interfaces and classes related to Elasticsearch cluster information and management."}
{"index": 2278, "repo": "spring-data-elasticsearch-5.1.2", "code": "package document\n\n// A representation of a Elasticsearch document as extended Map.\npublic interface Document extends StringObjectMap<Document>;\n// class that holds explanations returned from an Elasticsearch search.\npublic class Explanation extends Object;\n// meta data returned for nested inner hits.\npublic class NestedMetaData extends Object;\n// Extension to Document exposing search response related data.\npublic interface SearchDocument extends Document;\n", "des": "Classes related to the Document structure of Elasticsearch documents and search responses."}
{"index": 2279, "repo": "spring-data-elasticsearch-5.1.2", "code": "package event\n\n// Callback being invoked after a domain object is materialized from a Document when reading results.\n@FunctionalInterface public interface AfterConvertCallback<T> extends EntityCallback<T>;\n// Callback being invoked after a Document is read from Elasticsearch and before it is converted into a domain object.\n@FunctionalInterface public interface AfterLoadCallback<T> extends EntityCallback<Document>;\n", "des": "classes and interfaces related to Spring Data Elasticsearch events and callbacks."}
{"index": 2280, "repo": "spring-data-elasticsearch-5.1.2", "code": "package index\n\n// A single action to be contained in AliasActions.\npublic abstract class AliasAction extends Object;\n// AliasAction to add an alias.\npublic static class AliasAction.Add extends AliasAction;\n// AliasAction to remove an alias.\npublic static class AliasAction.Remove extends AliasAction;\n// AliasAction to remove an index.\npublic static class AliasAction.RemoveIndex extends AliasAction;\n// Value class capturing the arguments for an AliasAction.\npublic class AliasActionParameters extends Object;\n", "des": "Classes related to Elasticsearch index management."}
{"index": 2281, "repo": "spring-data-elasticsearch-5.1.2", "code": "package highlight\n\n// \npublic class Highlight extends Object;\n// \npublic abstract class HighlightCommonParameters extends Object;\n// \npublic abstract static class HighlightCommonParameters.HighlightCommonParametersBuilder<SELF extends HighlightCommonParameters.HighlightCommonParametersBuilder<SELF>> extends Object;\n// \npublic class HighlightField extends Object;\n// \npublic class HighlightFieldParameters extends HighlightCommonParameters;\n", "des": "classes to define highlight settings parameters of a query"}
{"index": 2282, "repo": "spring-data-elasticsearch-5.1.2", "code": "package routing\n\n// Default implementation of the RoutingResolver interface.\npublic class DefaultRoutingResolver extends Object implements RoutingResolver;\n// \npublic interface RoutingResolver;\n", "des": "classes/interfaces for specification and implementation of Elasticsearch routing."}
{"index": 2283, "repo": "spring-data-elasticsearch-5.1.2", "code": "package script\n\n// This interfaces defines the operations to access the Elasticsearch script API.\npublic interface ReactiveScriptOperations;\n// \npublic record Script(String id, String language, String source) extends Record;\n// \npublic static final class Script.ScriptBuilder extends Object;\n// This interfaces defines the operations to access the Elasticsearch script API.\npublic interface ScriptOperations;\n", "des": "Classes and interfaces to access to script API of Elasticsearch (https://www.elastic.co/guide/en/elasticsearch/reference/8.5/script-apis.html)."}
{"index": 2284, "repo": "spring-data-elasticsearch-5.1.2", "code": "package repository\n\n// \n@NoRepositoryBean public interface ElasticsearchRepository<T,ID> extends PagingAndSortingRepository<T,ID>, CrudRepository<T,ID>;\n// Elasticsearch specific Repository interface with reactive support.\n@NoRepositoryBean public interface ReactiveElasticsearchRepository<T,ID> extends ReactiveSortingRepository<T,ID>, ReactiveCrudRepository<T,ID>;\n", "des": "infrastructure to define the Elasticsearch mapping for an index."}
{"index": 2285, "repo": "jcl-over-slf4j-2.0.7", "code": "package logging\n\n// A simple logging interface abstracting logging APIs.\npublic interface Log;\n// An exception that is thrown only if a suitable LogFactory or Log instance cannot be created by the corresponding factory methods.\npublic class LogConfigurationException extends RuntimeException;\n// Factory for creating Log instances, which always delegates to an instance of SLF4JLogFactory.\npublic abstract class LogFactory extends Object;\n", "des": "Jakarta Commons Logging implemented over SLF4J."}
{"index": 2286, "repo": "jcl-over-slf4j-2.0.7", "code": "package impl\n\n// Trivial implementation of Log that throws away all messages.\npublic class NoOpLog extends Object implements Log, Serializable;\n// Simple implementation of Log that sends all enabled log messages, for all defined loggers, to System.err.\npublic class SimpleLog extends Object implements Log, Serializable;\n", "des": "SLF4J based implementation of commons-logging wrapper APIs."}
{"index": 2287, "repo": "spring-boot-3.1.1", "code": "package boot\n\n// Provides access to the arguments that were used to run a SpringApplication.\npublic interface ApplicationArguments;\n// Strategy interface for creating the ConfigurableApplicationContext used by a SpringApplication.\n@FunctionalInterface public interface ApplicationContextFactory;\n// Interface used to indicate that a bean should run when it is contained within a SpringApplication.\n@FunctionalInterface public interface ApplicationRunner;\n", "des": "Core Spring Boot classes."}
{"index": 2288, "repo": "spring-boot-3.1.1", "code": "package admin\n\n// An MBean contract to control and monitor a running SpringApplication over JMX.\npublic interface SpringApplicationAdminMXBean;\n", "des": "Administration support for Spring Boot applications."}
{"index": 2289, "repo": "spring-boot-3.1.1", "code": "package ansi\n\n// AnsiElement implementation for ANSI 8-bit foreground or background color codes.\npublic final class Ansi8BitColor extends Object implements AnsiElement;\n// Ansi background colors.\npublic enum AnsiBackground extends Enum<AnsiBackground> implements AnsiElement;\n// Ansi colors.\npublic enum AnsiColor extends Enum<AnsiColor> implements AnsiElement;\n// An ANSI encodable element.\npublic interface AnsiElement;\n", "des": "Support classes to provide ANSI color output."}
{"index": 2290, "repo": "spring-boot-3.1.1", "code": "package availability\n\n// Provides availability state information for the application.\npublic interface ApplicationAvailability;\n// Bean that provides an ApplicationAvailability implementation by listening for change events.\npublic class ApplicationAvailabilityBean extends Object implements ApplicationAvailability, org.springframework.context.ApplicationListener<AvailabilityChangeEvent<?>>;\n", "des": "Support for describing the availability of Spring Boot applications."}
{"index": 2291, "repo": "spring-boot-3.1.1", "code": "package builder\n\n// ApplicationContextInitializer for setting the parent context.\npublic class ParentContextApplicationContextInitializer extends Object implements org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>, org.springframework.core.Ordered;\n", "des": "Fluent 'builder' style API to construct a SpringApplication."}
{"index": 2292, "repo": "spring-boot-3.1.1", "code": "package cloud\n\n// An EnvironmentPostProcessor that knows where to find VCAP (a.k.a.\npublic class CloudFoundryVcapEnvironmentPostProcessor extends Object implements EnvironmentPostProcessor, org.springframework.core.Ordered;\n// Simple detection for well known cloud platforms.\npublic enum CloudPlatform extends Enum<CloudPlatform>;\n", "des": "Low level support for Cloud deployments."}
{"index": 2293, "repo": "spring-boot-3.1.1", "code": "package context\n\n// An ApplicationListener that saves application PID into file.\npublic class ApplicationPidFileWriter extends Object implements org.springframework.context.ApplicationListener<SpringApplicationEvent>, org.springframework.core.Ordered;\n", "des": "Classes related to Spring's ApplicationContext."}
{"index": 2294, "repo": "spring-boot-3.1.1", "code": "package annotation\n\n// A set of @Configuration classes that can be registered in ApplicationContext.\npublic abstract class Configurations extends Object;\n// Interface that can be implemented by ImportSelector and ImportBeanDefinitionRegistrar implementations when they can determine imports early.\n@FunctionalInterface public interface DeterminableImports;\n// Contains @Configuration import candidates, usually auto-configurations.\npublic final class ImportCandidates extends Object implements Iterable<String>;\n", "des": "Classes related to Spring's ApplicationContext annotations."}
{"index": 2295, "repo": "spring-boot-3.1.1", "code": "package config\n\n// An ApplicationListener that configures AnsiOutput depending on the value of the property spring.output.ansi.enabled.\npublic class AnsiOutputApplicationListener extends Object implements org.springframework.context.ApplicationListener<ApplicationEnvironmentPreparedEvent>, org.springframework.core.Ordered;\n// Configuration data that has been loaded from a ConfigDataResource and may ultimately contribute property sources to Spring's Environment.\npublic final class ConfigData extends Object;\n", "des": "External configuration support allowing 'application.properties' to be loaded and used within a Spring Boot application."}
{"index": 2296, "repo": "spring-boot-3.1.1", "code": "package event\n\n// Event published when a SpringApplication is starting up and the ApplicationContext is prepared and ApplicationContextInitializers have been called but before any bean definitions are loaded.\npublic class ApplicationContextInitializedEvent extends SpringApplicationEvent;\n// Event published when a SpringApplication is starting up and the Environment is first available for inspection and modification.\npublic class ApplicationEnvironmentPreparedEvent extends SpringApplicationEvent;\n", "des": "ApplicationEvents triggered by Spring Boot."}
{"index": 2297, "repo": "spring-boot-3.1.1", "code": "package logging\n\n// An ApplicationListener that configures the LoggingSystem.\npublic class LoggingApplicationListener extends Object implements org.springframework.context.event.GenericApplicationListener;\n", "des": "Logging integration with Spring's Application Context."}
{"index": 2298, "repo": "spring-boot-3.1.1", "code": "package buffering\n\n// ApplicationStartup implementation that buffers steps and records their timestamp as well as their processing time.\npublic class BufferingApplicationStartup extends Object implements org.springframework.core.metrics.ApplicationStartup;\n// Represent the timeline of steps recorded by BufferingApplicationStartup.\npublic class StartupTimeline extends Object;\n// Event on the current StartupTimeline.\npublic static class StartupTimeline.TimelineEvent extends Object;\n", "des": "ApplicationStartup implementation for buffering steps and measuring their processing time."}
{"index": 2299, "repo": "spring-boot-3.1.1", "code": "package properties\n\n// Bean to record and provide bound @ConfigurationProperties.\npublic class BoundConfigurationProperties extends Object;\n// Annotation for externalized configuration.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Indexed public @interface ConfigurationProperties;\n// Provides access to @ConfigurationProperties bean details, regardless of if the annotation was used directly or on a @Bean factory method.\npublic final class ConfigurationPropertiesBean extends Object;\n", "des": "Support for external configuration properties."}
{"index": 2300, "repo": "spring-boot-3.1.1", "code": "package bind\n\n// Abstract base class for BindHandler implementations.\npublic abstract class AbstractBindHandler extends Object implements BindHandler;\n// Source that can be bound by a Binder.\npublic final class Bindable<T> extends Object;\n// Restrictions that can be applied when binding values.\npublic static enum Bindable.BindRestriction extends Enum<Bindable.BindRestriction>;\n", "des": "Support for @ConfigurationProperties binding."}
{"index": 2301, "repo": "spring-boot-3.1.1", "code": "package handler\n\n// BindHandler that can be used to ignore binding errors.\npublic class IgnoreErrorsBindHandler extends AbstractBindHandler;\n// BindHandler that can be used to ignore top-level ConverterNotFoundExceptions.\npublic class IgnoreTopLevelConverterNotFoundBindHandler extends AbstractBindHandler;\n// BindHandler to enforce that all configuration properties under the root name have been bound.\npublic class NoUnboundElementsBindHandler extends AbstractBindHandler;\n", "des": "General BindHandler implementations."}
{"index": 2302, "repo": "spring-boot-3.1.1", "code": "package validation\n\n// Error thrown when validation fails during a bind operation.\npublic class BindValidationException extends RuntimeException;\n// BindHandler to apply Validators to bound results.\npublic class ValidationBindHandler extends AbstractBindHandler;\n// A collection of ObjectErrors caused by bind validation failures.\npublic class ValidationErrors extends Object implements Iterable<org.springframework.validation.ObjectError>;\n", "des": "Binding validation support."}
{"index": 2303, "repo": "spring-boot-3.1.1", "code": "package source\n\n// A single configuration property obtained from a ConfigurationPropertySource consisting of a name, value and optional origin.\npublic final class ConfigurationProperty extends Object implements OriginProvider, Comparable<ConfigurationProperty>;\n// Interface that can be used to control configuration property source caches.\npublic interface ConfigurationPropertyCaching;\n", "des": "Sources for external configuration properties."}
{"index": 2304, "repo": "spring-boot-3.1.1", "code": "package convert\n\n// A specialization of FormattingConversionService configured by default with converters and formatters appropriate for most Spring Boot applications.\npublic class ApplicationConversionService extends org.springframework.format.support.FormattingConversionService;\n// Annotation that can be used to change the default unit used when converting a DataSize.\n@Target({FIELD,PARAMETER}) @Retention(RUNTIME) @Documented public @interface DataSizeUnit;\n", "des": "Support for type conversion."}
{"index": 2305, "repo": "spring-boot-3.1.1", "code": "package diagnostics\n\n// Abstract base class for most FailureAnalyzer implementations.\npublic abstract class AbstractFailureAnalyzer<T extends Throwable> extends Object implements FailureAnalyzer;\n// The result of analyzing a failure.\npublic class FailureAnalysis extends Object;\n// Reports a FailureAnalysis to the user.\n@FunctionalInterface public interface FailureAnalysisReporter;\n", "des": "Support for failure analysis and reporting."}
{"index": 2306, "repo": "spring-boot-3.1.1", "code": "package analyzer\n\n// Abstract base class for a FailureAnalyzer that handles some kind of injection failure.\npublic abstract class AbstractInjectionFailureAnalyzer<T extends Throwable> extends AbstractFailureAnalyzer<T>;\n// An AbstractFailureAnalyzer that performs analysis of failures caused by a BeanNotOfRequiredTypeException.\npublic class BeanNotOfRequiredTypeFailureAnalyzer extends AbstractFailureAnalyzer<org.springframework.beans.factory.BeanNotOfRequiredTypeException>;\n", "des": "Internal FailureAnalyzer implementations."}
{"index": 2307, "repo": "spring-boot-3.1.1", "code": "package env\n\n// PropertySource backed by a directory tree that contains files for each value.\npublic class ConfigTreePropertySource extends org.springframework.core.env.EnumerablePropertySource<Path> implements OriginLookup<String>;\n// Property source options.\npublic static enum ConfigTreePropertySource.Option extends Enum<ConfigTreePropertySource.Option>;\n", "des": "Spring Environment support."}
{"index": 2308, "repo": "spring-boot-3.1.1", "code": "package info\n\n// Provide build-related information such as group and artifact.\n@ImportRuntimeHints(org.springframework.boot.info.BuildProperties.BuildPropertiesRuntimeHints.class) public class BuildProperties extends InfoProperties;\n// Provide git-related information such as commit id and time.\n@ImportRuntimeHints(org.springframework.boot.info.GitProperties.GitPropertiesRuntimeHints.class) public class GitProperties extends InfoProperties;\n", "des": "Support for providing information about an application."}
{"index": 2309, "repo": "spring-boot-3.1.1", "code": "package jackson\n\n// @Component that provides JsonSerializer, JsonDeserializer or KeyDeserializer implementations to be registered with Jackson when JsonComponentModule is in use.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Component public @interface JsonComponent;\n// The various scopes under which a serializer/deserializer can be registered.\npublic static enum JsonComponent.Scope extends Enum<JsonComponent.Scope>;\n", "des": "Custom enhancements and support for the Jackson project."}
{"index": 2310, "repo": "spring-boot-3.1.1", "code": "package jdbc\n\n// Enumeration of common database drivers.\npublic enum DatabaseDriver extends Enum<DatabaseDriver>;\n// Convenience class for building a DataSource.\npublic final class DataSourceBuilder<T extends DataSource> extends Object;\n// Unwraps a DataSource that may have been proxied or wrapped in a custom Wrapper such as DelegatingDataSource.\npublic final class DataSourceUnwrapper extends Object;\n", "des": "Support for Java Database Connectivity (JDBC)."}
{"index": 2311, "repo": "spring-boot-3.1.1", "code": "package init\n\n// InitializingBean that performs DataSource initialization using schema (DDL) and data (DML) scripts.\npublic class DataSourceScriptDatabaseInitializer extends AbstractScriptDatabaseInitializer;\n// Utility class that can resolve placeholder text with the actual DatabaseDriver platform.\npublic class PlatformPlaceholderDatabaseDriverResolver extends Object;\n", "des": "Support for initialization of an SQL database using a JDBC DataSource."}
{"index": 2312, "repo": "spring-boot-3.1.1", "code": "package metadata\n\n// A base DataSourcePoolMetadata implementation.\npublic abstract class AbstractDataSourcePoolMetadata<T extends DataSource> extends Object implements DataSourcePoolMetadata;\n// DataSourcePoolMetadata for an Apache Commons DBCP2 DataSource.\npublic class CommonsDbcp2DataSourcePoolMetadata extends AbstractDataSourcePoolMetadata<org.apache.commons.dbcp2.BasicDataSource>;\n", "des": "Support for accessing JDBC DataSource metadata."}
{"index": 2313, "repo": "spring-boot-3.1.1", "code": "package jms\n\n// Strategy interface used to wrap a JMS XAConnectionFactory enrolling it with a JTA TransactionManager.\n@FunctionalInterface public interface XAConnectionFactoryWrapper;\n", "des": "Support for Java Message Service (JMS)."}
{"index": 2314, "repo": "spring-boot-3.1.1", "code": "package json\n\n// Base class for parsers wrapped or implemented in this package.\npublic abstract class AbstractJsonParser extends Object implements JsonParser;\n// Really basic JSON parser for when you have nothing else available.\npublic class BasicJsonParser extends AbstractJsonParser;\n// Thin wrapper to adapt Gson to a JsonParser.\npublic class GsonJsonParser extends AbstractJsonParser;\n// Thin wrapper to adapt Jackson 2 ObjectMapper to JsonParser.\npublic class JacksonJsonParser extends AbstractJsonParser;\n", "des": "Support for parsing JSON."}
{"index": 2315, "repo": "spring-boot-3.1.1", "code": "package logging\n\n// Abstract base class for LoggingSystem implementations.\npublic abstract class AbstractLoggingSystem extends LoggingSystem;\n// Maintains a mapping between native levels and LogLevel.\nprotected static class AbstractLoggingSystem.LogLevels<T> extends Object;\n// Deferred Log that can be used to store messages that shouldn't be written until the logging system is fully initialized.\npublic class DeferredLog extends Object implements org.apache.commons.logging.Log;\n", "des": "Support and abstractions across several logging libraries."}
{"index": 2316, "repo": "spring-boot-3.1.1", "code": "package java\n\n// LoggingSystem for java.util.logging.\npublic class JavaLoggingSystem extends AbstractLoggingSystem;\n// LoggingSystemFactory that returns JavaLoggingSystem if possible.\n@Order(2147483647) public static class JavaLoggingSystem.Factory extends Object implements LoggingSystemFactory;\n// Simple 'Java Logging' Formatter.\npublic class SimpleFormatter extends Formatter;\n", "des": "Support for 'Java Util Logging'."}
{"index": 2317, "repo": "spring-boot-3.1.1", "code": "package log4j2\n\n// Log4j2 LogEventPatternConverter colors output using the AnsiOutput class.\n@Plugin(name=\"color\", category=\"Converter\") public final class ColorConverter extends org.apache.logging.log4j.core.pattern.LogEventPatternConverter;\n", "des": "Support for the Log4j 2 logging library."}
{"index": 2318, "repo": "spring-boot-3.1.1", "code": "package logback\n\n// Logback CompositeConverter colors output using the AnsiOutput class.\npublic class ColorConverter extends ch.qos.logback.core.pattern.CompositeConverter<ch.qos.logback.classic.spi.ILoggingEvent>;\n// ExtendedThrowableProxyConverter that adds some additional whitespace around the stack trace.\npublic class ExtendedWhitespaceThrowableProxyConverter extends ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter;\n", "des": "Support for the Logback logging library."}
{"index": 2319, "repo": "spring-boot-3.1.1", "code": "package origin\n\n// Interface that uniquely represents the origin of an item.\npublic interface Origin;\n// An interface that may be implemented by an object that can lookup Origin information from a given key.\n@FunctionalInterface public interface OriginLookup<K>;\n// Interface to provide access to the origin of an item.\n@FunctionalInterface public interface OriginProvider;\n", "des": "Support for item origin tracking."}
{"index": 2320, "repo": "spring-boot-3.1.1", "code": "package jpa\n\n// Convenient builder for JPA EntityManagerFactory instances.\npublic class EntityManagerFactoryBuilder extends Object;\n", "des": "JPA Support classes."}
{"index": 2321, "repo": "spring-boot-3.1.1", "code": "package hibernate\n\n// Hibernate ImplicitNamingStrategy that follows Spring recommended naming conventions.\npublic class SpringImplicitNamingStrategy extends org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl;\n", "des": "Hibernate Support classes."}
{"index": 2322, "repo": "spring-boot-3.1.1", "code": "package r2dbc\n\n// Builder for ConnectionFactory.\npublic final class ConnectionFactoryBuilder extends Object;\n// Connection details for embedded databases compatible with R2DBC.\npublic enum EmbeddedDatabaseConnection extends Enum<EmbeddedDatabaseConnection>;\n", "des": "Support for R2DBC connectivity."}
{"index": 2323, "repo": "spring-boot-3.1.1", "code": "package init\n\n// An InitializingBean that initializes a database represented by an R2DBC ConnectionFactory.\npublic class R2dbcScriptDatabaseInitializer extends AbstractScriptDatabaseInitializer;\n", "des": "Support for initialization of an SQL database using an R2DBC ConnectionFactory."}
{"index": 2324, "repo": "spring-boot-3.1.1", "code": "package reactor\n\n// EnvironmentPostProcessor to enable the Reactor Debug Agent if available.\npublic class DebugAgentEnvironmentPostProcessor extends Object implements EnvironmentPostProcessor, org.springframework.core.Ordered;\n", "des": "Support classes for Reactor integration."}
{"index": 2325, "repo": "spring-boot-3.1.1", "code": "package context\n\n// ApplicationContextInitializer that sets Environment properties for the ports that RSocketServer servers are actually listening on.\npublic class RSocketPortInfoApplicationContextInitializer extends Object implements org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>;\n", "des": "RSocket integrations with Spring Framework's ApplicationContext."}
{"index": 2326, "repo": "spring-boot-3.1.1", "code": "package messaging\n\n// Callback interface that can be used to customize codecs configuration for an RSocket client and/or server with RSocketStrategies.\n@FunctionalInterface public interface RSocketStrategiesCustomizer;\n", "des": "Support for RSocket-based messaging."}
{"index": 2327, "repo": "spring-boot-3.1.1", "code": "package netty\n\n// RSocketServer that is based on a Reactor Netty server.\npublic class NettyRSocketServer extends Object implements RSocketServer;\n// RSocketServerFactory that can be used to create RSocketServers backed by Netty.\npublic class NettyRSocketServerFactory extends Object implements RSocketServerFactory, ConfigurableRSocketServerFactory;\n", "des": "Reactor Netty based RSocket server implementation."}
{"index": 2328, "repo": "spring-boot-3.1.1", "code": "package server\n\n// A configurable RSocketServerFactory.\npublic interface ConfigurableRSocketServerFactory;\n// Simple interface that represents a fully configured RSocket server.\npublic interface RSocketServer;\n// Choice of transport protocol for the RSocket server.\npublic static enum RSocketServer.Transport extends Enum<RSocketServer.Transport>;\n// Callback interface that can be used to customize a RSocketServer.\n@FunctionalInterface public interface RSocketServerCustomizer;\n", "des": "Support for RSocket servers."}
{"index": 2329, "repo": "spring-boot-3.1.1", "code": "package reactive\n\n// ApplicationContext backed ServerWebExchangeMatcher.\npublic abstract class ApplicationContextServerWebExchangeMatcher<C> extends Object implements org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher;\n", "des": "Classes and utilities for reactive Spring Security."}
{"index": 2330, "repo": "spring-boot-3.1.1", "code": "package servlet\n\n// ApplicationContext backed RequestMatcher.\npublic abstract class ApplicationContextRequestMatcher<C> extends Object implements org.springframework.security.web.util.matcher.RequestMatcher;\n", "des": "Classes and utilities for Servlet-based Spring Security."}
{"index": 2331, "repo": "spring-boot-3.1.1", "code": "package init\n\n// Base class for an InitializingBean that performs SQL database initialization using schema (DDL) and data (DML) scripts.\npublic abstract class AbstractScriptDatabaseInitializer extends Object implements org.springframework.context.ResourceLoaderAware, org.springframework.beans.factory.InitializingBean;\n// Scripts to be used to initialize the database.\npublic static class AbstractScriptDatabaseInitializer.Scripts extends Object implements Iterable<org.springframework.core.io.Resource>;\n", "des": "Support for initialization of an SQL database."}
{"index": 2332, "repo": "spring-boot-3.1.1", "code": "package dependency\n\n// Base class for DatabaseInitializerDetectors that detect database initializer beans by type.\npublic abstract class AbstractBeansOfTypeDatabaseInitializerDetector extends Object implements DatabaseInitializerDetector;\n", "des": "Infrastructure for establishing database initialization bean dependencies."}
{"index": 2333, "repo": "spring-boot-3.1.1", "code": "package ssl\n\n// Default SslBundleRegistry implementation.\npublic class DefaultSslBundleRegistry extends Object implements SslBundleRegistry, SslBundles;\n// Exception indicating that an SslBundle was referenced with a name that does not match any registered bundle.\npublic class NoSuchSslBundleException extends RuntimeException;\n// A bundle of trust material that can be used to establish an SSL connection.\npublic interface SslBundle;\n", "des": "Management of trust material that can be used to establish an SSL connection."}
{"index": 2334, "repo": "spring-boot-3.1.1", "code": "package jks\n\n// SslStoreBundle backed by a Java keystore.\npublic class JksSslStoreBundle extends Object implements SslStoreBundle;\n// Details for an individual trust or key store in a JksSslStoreBundle.\npublic record JksSslStoreDetails(String type, String provider, String location, String password) extends Record;\n", "des": "SSL trust material provider for Java KeyStores."}
{"index": 2335, "repo": "spring-boot-3.1.1", "code": "package pem\n\n// SslStoreBundle backed by PEM-encoded certificates and private keys.\npublic class PemSslStoreBundle extends Object implements SslStoreBundle;\n// Details for an individual trust or key store in a PemSslStoreBundle.\npublic record PemSslStoreDetails(String type, String certificate, String privateKey, String privateKeyPassword) extends Record;\n", "des": "SSL trust material provider for PEM-encoded certificates."}
{"index": 2336, "repo": "spring-boot-3.1.1", "code": "package system\n\n// Provides access to the application home directory.\npublic class ApplicationHome extends Object;\n// An application process ID.\npublic class ApplicationPid extends Object;\n// Provides access to an application specific temporary directory.\npublic class ApplicationTemp extends Object;\n// Known Java versions.\npublic enum JavaVersion extends Enum<JavaVersion>;\n// Access to system properties.\npublic final class SystemProperties extends Object;\n", "des": "General system support classes."}
{"index": 2337, "repo": "spring-boot-3.1.1", "code": "package task\n\n// Builder that can be used to configure and create a TaskExecutor.\npublic class TaskExecutorBuilder extends Object;\n// Callback interface that can be used to customize a ThreadPoolTaskExecutor.\n@FunctionalInterface public interface TaskExecutorCustomizer;\n// Builder that can be used to configure and create a TaskScheduler.\npublic class TaskSchedulerBuilder extends Object;\n", "des": "Utilities and classes related to task execution and scheduling."}
{"index": 2338, "repo": "spring-boot-3.1.1", "code": "package classreading\n\n// Caching implementation of the MetadataReaderFactory interface backed by a ConcurrentReferenceHashMap, caching MetadataReader per Spring Resource handle (i.e.\npublic class ConcurrentReferenceCachingMetadataReaderFactory extends org.springframework.core.type.classreading.SimpleMetadataReaderFactory;\n", "des": "Support classes for reading annotation and class-level metadata."}
{"index": 2339, "repo": "spring-boot-3.1.1", "code": "package util\n\n// Simple factory used to instantiate objects by injecting available parameters.\npublic class Instantiator<T> extends Object;\n// Callback used to register available parameters.\npublic static interface Instantiator.AvailableParameters;\n// Strategy for handling a failure that occurs when instantiating a type.\npublic static interface Instantiator.FailureHandler;\n// Utility that can be used to invoke lambdas in a safe way.\npublic final class LambdaSafe extends Object;\n", "des": "Contains miscellaneous utility classes."}
{"index": 2340, "repo": "spring-boot-3.1.1", "code": "package validation\n\n// ObjectFactory that can be used to create a MessageInterpolator.\npublic class MessageInterpolatorFactory extends Object implements org.springframework.beans.factory.ObjectFactory<jakarta.validation.MessageInterpolator>;\n", "des": "Utilities and classes related to validation."}
{"index": 2341, "repo": "spring-boot-3.1.1", "code": "package beanvalidation\n\n// Custom MethodValidationPostProcessor that applies exclusion filters.\npublic class FilteredMethodValidationPostProcessor extends org.springframework.validation.beanvalidation.MethodValidationPostProcessor;\n// A filter for excluding types from method validation.\npublic interface MethodValidationExcludeFilter;\n", "des": "Utilities and classes related to bean validation."}
