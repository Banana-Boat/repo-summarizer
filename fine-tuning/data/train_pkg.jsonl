{"index": 0, "repo": "connect-api-3.5.0", "code": "package components\n\n// Connect requires some components implement this interface to define a version string.\nInterface Versioned;\n", "des": "Provides common interfaces used to describe pluggable components."}
{"index": 1, "repo": "connect-api-3.5.0", "code": "package connector\n\n// ConnectorContext allows Connectors to proactively interact with the Kafka Connect runtime.\nInterface ConnectorContext;\n// Tasks contain the code that actually copies data to/from another system.\nInterface Task;\n// Connectors manage integration of Kafka Connect with another system, either as an input that ingests data into Kafka or an output that passes data to an external system.\nClass Connector;\n// Base class for records containing data to be copied to/from Kafka.\nClass ConnectRecord<R extends ConnectRecord<R>>;\n", "des": "Provides interfaces for Connector and Task implementations."}
{"index": 2, "repo": "connect-api-3.5.0", "code": "package policy\n\n// An interface for enforcing a policy on overriding of Kafka client configs via the connector configs.\nInterface ConnectorClientConfigOverridePolicy;\n// \nClass ConnectorClientConfigRequest;\n// \nEnum ConnectorClientConfigRequest.ClientType;\n", "des": "Provides pluggable interfaces for policies controlling how users can configure connectors."}
{"index": 3, "repo": "connect-api-3.5.0", "code": "package data\n\n// Definition of an abstract data type.\nInterface Schema;\n// \nClass ConnectSchema;\n// A date representing a calendar day with no time of day or timezone.\nClass Date;\n// An arbitrary-precision signed decimal number.\nClass Decimal;\n// A field in a Struct, consisting of a field name, index, and Schema for the field value.\nClass Field;\n// A composite containing a Schema and associated value\nClass SchemaAndValue;\n// SchemaBuilder provides a fluent API for constructing Schema objects.\nClass SchemaBuilder;\n// SchemaProjector is a utility to project a value between compatible schemas and throw exceptions when non compatible schemas are provided.\nClass SchemaProjector;\n// A structured record containing a set of named fields with values, each field using an independent Schema.\nClass Struct;\n// A time representing a specific point in a day, not tied to any specific date.\nClass Time;\n// A timestamp representing an absolute time, without timezone information.\nClass Timestamp;\n// Utility for converting from one Connect value to a different form.\nClass Values;\n// The type of a schema.\nEnum Schema.Type;\n", "des": "Provides classes for representing data and schemas handled by Connect."}
{"index": 4, "repo": "connect-api-3.5.0", "code": "package errors\n\n// Indicates the operation tried to create an entity that already exists.\nClass AlreadyExistsException;\n// ConnectException is the top-level exception type generated by Kafka Connect and connector implementations.\nClass ConnectException;\n// Base class for all Kafka Connect data API exceptions.\nClass DataException;\n// Indicates that a method has been invoked illegally or at an invalid time by a connector or task.\nClass IllegalWorkerStateException;\n// Indicates that an operation attempted to modify or delete a connector or task that is not present on the worker.\nClass NotFoundException;\n// An exception that indicates the operation can be reattempted.\nClass RetriableException;\n// Indicates an error while building a schema via SchemaBuilder\nClass SchemaBuilderException;\n// Indicates an error while projecting a schema via SchemaProjector\nClass SchemaProjectorException;\n", "des": "Provides common exception classes for Connect, used by the framework and plugins to communicate failures."}
{"index": 5, "repo": "connect-api-3.5.0", "code": "package header\n\n// A Header is a key-value pair, and multiple headers can be included with the key, value, and timestamp in each Kafka message.\nInterface Header;\n// A mutable ordered collection of Header objects.\nInterface Headers;\n// A function to transform the supplied Header.\nInterface Headers.HeaderTransform;\n// A basic Headers implementation.\nClass ConnectHeaders;\n", "des": "Provides an API for application-defined metadata attached to Connect records."}
{"index": 6, "repo": "connect-api-3.5.0", "code": "package health\n\n// Provides immutable Connect cluster information, such as the ID of the backing Kafka cluster.\nInterface ConnectClusterDetails;\n// Provides the ability to lookup connector metadata, including status and configurations, as well as immutable cluster information such as Kafka cluster ID.\nInterface ConnectClusterState;\n// Provides the current status for a connector or a task, along with an identifier for its Connect worker\nClass AbstractState;\n// Provides basic health information about the connector and its tasks.\nClass ConnectorHealth;\n// Describes the status, worker ID, and any errors associated with a connector.\nClass ConnectorState;\n// Describes the state, IDs, and any errors of a connector task.\nClass TaskState;\n// Enum definition that identifies the type of the connector.\nEnum ConnectorType;\n", "des": "Provides an API for describing the state of a running Connect cluster to ConnectRestExtension instances."}
{"index": 7, "repo": "connect-api-3.5.0", "code": "package rest\n\n// A plugin interface to allow registration of new JAX-RS resources like Filters, REST endpoints, providers, etc.\nInterface ConnectRestExtension;\n// The interface provides the ability for ConnectRestExtension implementations to access the JAX-RS Configurable and cluster state ConnectClusterState.\nInterface ConnectRestExtensionContext;\n", "des": "Provides a pluggable interface for altering the behavior of the Connect REST API."}
{"index": 8, "repo": "connect-api-3.5.0", "code": "package sink\n\n// Component that a SinkTask can use to report problematic records (and their corresponding problems) as it writes them through SinkTask.put(java.util.Collection).\nInterface ErrantRecordReporter;\n// A context to allow a SinkConnector to interact with the Kafka Connect runtime.\nInterface SinkConnectorContext;\n// Context passed to SinkTasks, allowing them to access utilities in the Kafka Connect runtime.\nInterface SinkTaskContext;\n// SinkConnectors implement the Connector interface to send Kafka data to another system.\nClass SinkConnector;\n// SinkRecord is a ConnectRecord that has been read from Kafka and includes the kafkaOffset of the record in the Kafka topic-partition in addition to the standard fields.\nClass SinkRecord;\n// SinkTask is a Task that takes records loaded from Kafka and sends them to another system.\nClass SinkTask;\n", "des": "Provides an API for implementing sink connectors which write Kafka records to external applications."}
{"index": 9, "repo": "connect-api-3.5.0", "code": "package source\n\n// A context to allow a SourceConnector to interact with the Kafka Connect runtime.\nInterface SourceConnectorContext;\n// SourceTaskContext is provided to SourceTasks to allow them to interact with the underlying runtime.\nInterface SourceTaskContext;\n// Provided to source tasks to allow them to define their own producer transaction boundaries when exactly-once support is enabled.\nInterface TransactionContext;\n// SourceConnectors implement the connector interface to pull data from another system and send it to Kafka.\nClass SourceConnector;\n// SourceRecords are generated by SourceTasks and passed to Kafka Connect for storage in Kafka.\nClass SourceRecord;\n// SourceTask is a Task that pulls records from another system for storage in Kafka.\nClass SourceTask;\n// An enum to represent the level of support for connector-defined transaction boundaries.\nEnum ConnectorTransactionBoundaries;\n// An enum to represent the level of support for exactly-once semantics from a source connector.\nEnum ExactlyOnceSupport;\n// Represents the permitted values for the SourceTask.TRANSACTION_BOUNDARY_CONFIG property.\nEnum SourceTask.TransactionBoundary;\n", "des": "Provides an API for implementing source connectors which read data from external applications into Kafka."}
{"index": 10, "repo": "connect-api-3.5.0", "code": "package storage\n\n// The Converter interface provides support for translating between Kafka Connect's runtime data format and byte[].\nInterface Converter;\n// The HeaderConverter interface provides support for translating between Kafka Connect's runtime data format and byte[].\nInterface HeaderConverter;\n// OffsetStorageReader provides access to the offset storage used by sources.\nInterface OffsetStorageReader;\n// Abstract class that defines the configuration options for Converter and HeaderConverter instances.\nClass ConverterConfig;\n// A HeaderConverter that serializes header values as strings and that deserializes header values to the most appropriate numeric, boolean, array, or map representation.\nClass SimpleHeaderConverter;\n// Converter and HeaderConverter implementation that only supports serializing to strings.\nClass StringConverter;\n// Configuration options for StringConverter instances.\nClass StringConverterConfig;\n// The type of Converter and HeaderConverter.\nEnum ConverterType;\n", "des": "Provides pluggable interfaces and some implementations for (de)serializing data to and from Kafka"}
{"index": 11, "repo": "connect-api-3.5.0", "code": "package transforms\n\n// Single message transformation for Kafka Connect record types.\nInterface Transformation<R extends ConnectRecord<R>>;\n", "des": "Provides a pluggable interface for altering data which is being moved by Connect."}
{"index": 12, "repo": "connect-api-3.5.0", "code": "package predicates\n\n// A predicate on records.\nInterface Predicate<R extends ConnectRecord<R>>;\n", "des": "Provides a pluggable interface for describing when a Transformation should be applied to a record."}
{"index": 13, "repo": "connect-api-3.5.0", "code": "package util\n\n// Utilities that connector implementations might find useful.\nClass ConnectorUtils;\n", "des": "Provides common utilities that can be used in component implementations."}
{"index": 14, "repo": "commons-collections4-4.4", "code": "package collections4\n\n// Defines a collection that counts the number of times an object appears in the collection.\nInterface Bag<E>;\n// Defines a map that allows bidirectional lookup between key and values.\nInterface BidiMap<K,V>;\n// Defines a collection that is bounded in size.\nInterface BoundedCollection<E>;\n// Defines a map that is bounded in size.\nInterface BoundedMap<K,V>;\n// Defines a functor interface implemented by classes that do something.\nInterface Closure<T>;\n// An equation function, which determines equality between objects of type T.\nInterface Equator<T>;\n// Defines a functor interface implemented by classes that create objects.\nInterface Factory<T>;\n// The \"read\" subset of the Map interface.\nInterface Get<K,V>;\n// The \"read\" subset of the Map interface.\nInterface IterableGet<K,V>;\n// Defines a map that can be iterated directly without needing to create an entry set.\nInterface IterableMap<K,V>;\n// SortedMap + OrderedMap.\nInterface IterableSortedMap<K,V>;\n// Defines a simple key value pair.\nInterface KeyValue<K,V>;\n// Defines a map that holds a list of values against each key.\nInterface ListValuedMap<K,V>;\n// Defines an iterator that operates over a Map.\nInterface MapIterator<K,V>;\n// since 4.1, use MultiValuedMap instead\nInterface MultiMap<K,V>;\n// Defines a collection that counts the number of times an object appears in the collection.\nInterface MultiSet<E>;\n// An unmodifiable entry for an element and its occurrence as contained in a MultiSet.\nInterface MultiSet.Entry<E>;\n// Defines a map that holds a collection of values against each key.\nInterface MultiValuedMap<K,V>;\n// Defines a map that allows bidirectional lookup between key and values and retains and provides access to an ordering.\nInterface OrderedBidiMap<K,V>;\n// Defines an iterator that operates over an ordered container.\nInterface OrderedIterator<E>;\n", "des": "This package contains the interfaces and utilities shared across all the subpackages of this component."}
{"index": 15, "repo": "commons-collections4-4.4", "code": "package bag\n\n// Decorates another Bag to provide additional behaviour.\nClass AbstractBagDecorator<E>;\n// Abstract implementation of the Bag interface to simplify the creation of subclass implementations.\nClass AbstractMapBag<E>;\n// Mutable integer class for storing the data.\nClass AbstractMapBag.MutableInteger;\n// Decorates another SortedBag to provide additional behaviour.\nClass AbstractSortedBagDecorator<E>;\n// Decorates another Bag to comply with the Collection contract.\nClass CollectionBag<E>;\n// Decorates another SortedBag to comply with the Collection contract.\nClass CollectionSortedBag<E>;\n// Implements Bag, using a HashMap to provide the data storage.\nClass HashBag<E>;\n// Decorates another Bag to validate that additions match a specified predicate.\nClass PredicatedBag<E>;\n// Decorates another SortedBag to validate that additions match a specified predicate.\nClass PredicatedSortedBag<E>;\n// Decorates another Bag to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedBag<E>;\n// Decorates another SortedBag to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedSortedBag<E>;\n// Decorates another Bag to transform objects that are added.\nClass TransformedBag<E>;\n// Decorates another SortedBag to transform objects that are added.\nClass TransformedSortedBag<E>;\n// Implements SortedBag, using a TreeMap to provide the data storage.\nClass TreeBag<E>;\n// Decorates another Bag to ensure it can't be altered.\nClass UnmodifiableBag<E>;\n// Decorates another SortedBag to ensure it can't be altered.\nClass UnmodifiableSortedBag<E>;\n", "des": "This package contains implementations of the Bag and SortedBag interfaces."}
{"index": 16, "repo": "commons-collections4-4.4", "code": "package bidimap\n\n// Provides a base decorator that enables additional functionality to be added to a BidiMap via decoration.\nClass AbstractBidiMapDecorator<K,V>;\n// Abstract BidiMap implemented using two maps.\nClass AbstractDualBidiMap<K,V>;\n// Inner class MapIterator.\nClass AbstractDualBidiMap.BidiMapIterator<K,V>;\n// Inner class EntrySet.\nClass AbstractDualBidiMap.EntrySet<K,V>;\n// Inner class EntrySetIterator.\nClass AbstractDualBidiMap.EntrySetIterator<K,V>;\n// Inner class KeySet.\nClass AbstractDualBidiMap.KeySet<K>;\n// Inner class KeySetIterator.\nClass AbstractDualBidiMap.KeySetIterator<K>;\n// Inner class MapEntry.\nClass AbstractDualBidiMap.MapEntry<K,V>;\n// Inner class Values.\nClass AbstractDualBidiMap.Values<V>;\n// Inner class ValuesIterator.\nClass AbstractDualBidiMap.ValuesIterator<V>;\n// Inner class View.\nClass AbstractDualBidiMap.View<K,V,E>;\n// Provides a base decorator that enables additional functionality to be added to an OrderedBidiMap via decoration.\nClass AbstractOrderedBidiMapDecorator<K,V>;\n// Provides a base decorator that enables additional functionality to be added to a SortedBidiMap via decoration.\nClass AbstractSortedBidiMapDecorator<K,V>;\n// Implementation of BidiMap that uses two HashMap instances.\nClass DualHashBidiMap<K,V>;\n// Implementation of BidiMap that uses two LinkedHashMap instances.\nClass DualLinkedHashBidiMap<K,V>;\n// Implementation of BidiMap that uses two TreeMap instances.\nClass DualTreeBidiMap<K,V>;\n// Inner class MapIterator.\nClass DualTreeBidiMap.BidiOrderedMapIterator<K,V>;\n// Internal sorted map view.\nClass DualTreeBidiMap.ViewMap<K,V>;\n", "des": "This package contains implementations of the BidiMap, OrderedBidiMap and SortedBidiMap interfaces."}
{"index": 17, "repo": "commons-collections4-4.4", "code": "package collection\n\n// Pluggable strategy to handle changes to the composite.\nInterface CompositeCollection.CollectionMutator<E>;\n// Decorates another Collection to provide additional behaviour.\nClass AbstractCollectionDecorator<E>;\n// Decorates a collection of other collections to provide a single unified view.\nClass CompositeCollection<E>;\n// An IndexedCollection is a Map-like view onto a Collection.\nClass IndexedCollection<K,C>;\n// Decorates another Collection to validate that additions match a specified predicate.\nClass PredicatedCollection<E>;\n// Builder for creating predicated collections.\nClass PredicatedCollection.Builder<E>;\n// Decorates another Collection to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedCollection<E>;\n// Decorates another Collection to transform objects that are added.\nClass TransformedCollection<E>;\n// UnmodifiableBoundedCollection decorates another BoundedCollection to ensure it can't be altered.\nClass UnmodifiableBoundedCollection<E>;\n// Decorates another Collection to ensure it can't be altered.\nClass UnmodifiableCollection<E>;\n", "des": "This package contains implementations of the Collection interface."}
{"index": 18, "repo": "commons-collections4-4.4", "code": "package comparators\n\n// A Comparator for Boolean objects that can sort either true or false first.\nClass BooleanComparator;\n// A Comparator that compares Comparable objects.\nClass ComparableComparator<E extends Comparable<? super E>>;\n// A ComparatorChain is a Comparator that wraps one or more Comparators in sequence.\nClass ComparatorChain<E>;\n// A Comparator which imposes a specific order on a specific set of Objects.\nClass FixedOrderComparator<T>;\n// A Comparator that will compare nulls to be either lower or higher than other objects.\nClass NullComparator<E>;\n// Reverses the order of another comparator by reversing the arguments to its compare method.\nClass ReverseComparator<E>;\n// Decorates another Comparator with transformation behavior.\nClass TransformingComparator<I,O>;\n// Unknown object behavior enum.\nEnum FixedOrderComparator.UnknownObjectBehavior;\n", "des": "This package contains implementations of the Comparator interface."}
{"index": 19, "repo": "commons-collections4-4.4", "code": "package functors\n\n// Defines a predicate that decorates one or more other predicates.\nInterface PredicateDecorator<T>;\n// Abstract base class for quantification predicates, e.g.\nClass AbstractQuantifierPredicate<T>;\n// Predicate implementation that returns true if all the predicates return true.\nClass AllPredicate<T>;\n// Predicate implementation that returns true if both the predicates return true.\nClass AndPredicate<T>;\n// Predicate implementation that returns true if any of the predicates return true.\nClass AnyPredicate<T>;\n// Closure that catches any checked exception and re-throws it as a FunctorException runtime exception.\nClass CatchAndRethrowClosure<E>;\n// Closure implementation that chains the specified closures together.\nClass ChainedClosure<E>;\n// Transformer implementation that chains the specified transformers together.\nClass ChainedTransformer<T>;\n// Transformer implementation that returns a clone of the input object.\nClass CloneTransformer<T>;\n// Transformer implementation that calls a Closure using the input object and then returns the input.\nClass ClosureTransformer<T>;\n// Predicate that compares the input object with the one stored in the predicate using a comparator.\nClass ComparatorPredicate<T>;\n// Factory implementation that returns the same constant each time.\nClass ConstantFactory<T>;\n// Transformer implementation that returns the same constant each time.\nClass ConstantTransformer<I,O>;\n// Default Equator implementation.\nClass DefaultEquator<T>;\n// Predicate implementation that returns true if the input is the same object as the one stored in this predicate by equals.\nClass EqualPredicate<T>;\n// Closure implementation that always throws an exception.\nClass ExceptionClosure<E>;\n// Factory implementation that always throws an exception.\nClass ExceptionFactory<T>;\n// Predicate implementation that always throws an exception.\nClass ExceptionPredicate<T>;\n// Transformer implementation that always throws an exception.\nClass ExceptionTransformer<I,O>;\n// Transformer implementation that calls a Factory and returns the result.\nClass FactoryTransformer<I,O>;\n// Predicate implementation that always returns false.\nClass FalsePredicate<T>;\n// Closure implementation that calls another closure n times, like a for loop.\nClass ForClosure<E>;\n", "des": "This package contains implementations of the Closure, Predicate, Transformer and Factory interfaces."}
{"index": 20, "repo": "commons-collections4-4.4", "code": "package iterators\n\n// Provides an implementation of an empty map iterator.\nClass AbstractEmptyMapIterator<K,V>;\n// Provides basic behaviour for decorating an iterator with extra functionality.\nClass AbstractIteratorDecorator<E>;\n// Provides basic behaviour for decorating a list iterator with extra functionality.\nClass AbstractListIteratorDecorator<E>;\n// Provides basic behaviour for decorating a map iterator with extra functionality.\nClass AbstractMapIteratorDecorator<K,V>;\n// Provides basic behaviour for decorating an ordered map iterator with extra functionality.\nClass AbstractOrderedMapIteratorDecorator<K,V>;\n// Provides basic behaviour for decorating an iterator with extra functionality without committing the generic type of the Iterator implementation.\nClass AbstractUntypedIteratorDecorator<I,O>;\n// Implements an Iterator over any array.\nClass ArrayIterator<E>;\n// Implements a ListIterator over an array.\nClass ArrayListIterator<E>;\n// Decorates another iterator to return elements in a specific range.\nClass BoundedIterator<E>;\n// Provides an ordered iteration over the elements contained in a collection of ordered Iterators.\nClass CollatingIterator<E>;\n// Provides an implementation of an empty iterator.\nClass EmptyIterator<E>;\n// Provides an implementation of an empty list iterator.\nClass EmptyListIterator<E>;\n// Provides an implementation of an empty map iterator.\nClass EmptyMapIterator<K,V>;\n// Provides an implementation of an empty ordered iterator.\nClass EmptyOrderedIterator<E>;\n// Provides an implementation of an empty ordered map iterator.\nClass EmptyOrderedMapIterator<K,V>;\n// Implements a MapIterator using a Map entrySet.\nClass EntrySetMapIterator<K,V>;\n// Adapter to make Enumeration instances appear to be Iterator instances.\nClass EnumerationIterator<E>;\n// Decorates another Iterator using a predicate to filter elements.\nClass FilterIterator<E>;\n// Decorates another ListIterator using a predicate to filter elements.\nClass FilterListIterator<E>;\n// An IteratorChain is an Iterator that wraps a number of Iterators.\nClass IteratorChain<E>;\n// Adapter to make an Iterator instance appear to be an Enumeration instance.\nClass IteratorEnumeration<E>;\n", "des": "This package contains implementations of the Iterator interface."}
{"index": 21, "repo": "commons-collections4-4.4", "code": "package keyvalue\n\n// Abstract pair class to assist with creating KeyValue and Map.Entry implementations.\nClass AbstractKeyValue<K,V>;\n// Abstract Pair class to assist with creating correct Map.Entry implementations.\nClass AbstractMapEntry<K,V>;\n// Provides a base decorator that allows additional functionality to be added to a Map.Entry.\nClass AbstractMapEntryDecorator<K,V>;\n// A mutable KeyValue pair that does not implement Map.Entry.\nClass DefaultKeyValue<K,V>;\n// A restricted implementation of Map.Entry that prevents the Map.Entry contract from being broken.\nClass DefaultMapEntry<K,V>;\n// A MultiKey allows multiple map keys to be merged together.\nClass MultiKey<K>;\n// A Map.Entry tied to a map underneath.\nClass TiedMapEntry<K,V>;\n// A Map.Entry that throws UnsupportedOperationException when setValue is called.\nClass UnmodifiableMapEntry<K,V>;\n", "des": "This package contains implementations of collection and map related key/value classes."}
{"index": 22, "repo": "commons-collections4-4.4", "code": "package list\n\n// An abstract implementation of a linked list which provides numerous points for subclasses to override.\nClass AbstractLinkedList<E>;\n// A list iterator over the linked list.\nClass AbstractLinkedList.LinkedListIterator<E>;\n// The sublist implementation for AbstractLinkedList.\nClass AbstractLinkedList.LinkedSubList<E>;\n// A list iterator over the linked sub list.\nClass AbstractLinkedList.LinkedSubListIterator<E>;\n// A node within the linked list.\nClass AbstractLinkedList.Node<E>;\n// Decorates another List to provide additional behaviour.\nClass AbstractListDecorator<E>;\n// Serializable subclass of AbstractListDecorator.\nClass AbstractSerializableListDecorator<E>;\n// A List implementation with a ListIterator that allows concurrent modifications to the underlying list.\nClass CursorableLinkedList<E>;\n// An extended ListIterator that allows concurrent changes to the underlying list.\nClass CursorableLinkedList.Cursor<E>;\n// A cursor for the sublist based on LinkedSubListIterator.\nClass CursorableLinkedList.SubCursor<E>;\n// Decorates another List to fix the size preventing add/remove.\nClass FixedSizeList<E>;\n// Decorates another List to make it seamlessly grow when indices larger than the list size are used on add and set, avoiding most IndexOutOfBoundsExceptions.\nClass GrowthList<E>;\n// Decorates another List to create objects in the list on demand.\nClass LazyList<E>;\n// A List implementation that stores a cache of internal Node objects in an effort to reduce wasteful object creation.\nClass NodeCachingLinkedList<E>;\n// Decorates another List to validate that all additions match a specified predicate.\nClass PredicatedList<E>;\n// Decorates a List to ensure that no duplicates are present much like a Set.\nClass SetUniqueList<E>;\n// Decorates another List to transform objects that are added.\nClass TransformedList<E>;\n// A List implementation that is optimised for fast insertions and removals at any index in the list.\nClass TreeList<E>;\n// Decorates another List to ensure it can't be altered.\nClass UnmodifiableList<E>;\n", "des": "This package contains implementations of the List interface."}
{"index": 23, "repo": "commons-collections4-4.4", "code": "package map\n\n// This interface allows definition for all of the indeterminate mutators in a CompositeMap, as well as providing a hook for callbacks on key collisions.\nInterface CompositeMap.MapMutator<K,V>;\n// A policy to determine the expiration time for key-value entries.\nInterface PassiveExpiringMap.ExpirationPolicy<K,V>;\n// An abstract implementation of a hash-based map which provides numerous points for subclasses to override.\nClass AbstractHashedMap<K,V>;\n// EntrySet implementation.\nClass AbstractHashedMap.EntrySet<K,V>;\n// EntrySet iterator.\nClass AbstractHashedMap.EntrySetIterator<K,V>;\n// HashEntry used to store the data.\nClass AbstractHashedMap.HashEntry<K,V>;\n// Base Iterator\nClass AbstractHashedMap.HashIterator<K,V>;\n// MapIterator implementation.\nClass AbstractHashedMap.HashMapIterator<K,V>;\n// KeySet implementation.\nClass AbstractHashedMap.KeySet<K>;\n// KeySet iterator.\nClass AbstractHashedMap.KeySetIterator<K>;\n// Values implementation.\nClass AbstractHashedMap.Values<V>;\n// Values iterator.\nClass AbstractHashedMap.ValuesIterator<V>;\n// Provide a basic IterableMap implementation.\nClass AbstractIterableMap<K,V>;\n// An abstract implementation of a hash-based map that links entries to create an ordered map and which provides numerous points for subclasses to override.\nClass AbstractLinkedMap<K,V>;\n// EntrySet iterator.\nClass AbstractLinkedMap.EntrySetIterator<K,V>;\n// KeySet iterator.\nClass AbstractLinkedMap.KeySetIterator<K>;\n// LinkEntry that stores the data.\nClass AbstractLinkedMap.LinkEntry<K,V>;\n// Base Iterator that iterates in link order.\nClass AbstractLinkedMap.LinkIterator<K,V>;\n// MapIterator implementation.\nClass AbstractLinkedMap.LinkMapIterator<K,V>;\n// Values iterator.\nClass AbstractLinkedMap.ValuesIterator<V>;\n", "des": "This package contains implementations of the Map, IterableMap, OrderedMap and SortedMap interfaces."}
{"index": 24, "repo": "commons-collections4-4.4", "code": "package multimap\n\n// Abstract implementation of the ListValuedMap interface to simplify the creation of subclass implementations.\nClass AbstractListValuedMap<K,V>;\n// Abstract implementation of the MultiValuedMap interface to simplify the creation of subclass implementations.\nClass AbstractMultiValuedMap<K,V>;\n// Decorates another MultiValuedMap to provide additional behaviour.\nClass AbstractMultiValuedMapDecorator<K,V>;\n// Abstract implementation of the SetValuedMap interface to simplify the creation of subclass implementations.\nClass AbstractSetValuedMap<K,V>;\n// Implements a ListValuedMap, using a HashMap to provide data storage and ArrayLists as value collections.\nClass ArrayListValuedHashMap<K,V>;\n// Implements a SetValuedMap, using a HashMap to provide data storage and HashSets as value collections.\nClass HashSetValuedHashMap<K,V>;\n// Decorates another MultiValuedMap to transform objects that are added.\nClass TransformedMultiValuedMap<K,V>;\n// Decorates another MultiValuedMap to ensure it can't be altered.\nClass UnmodifiableMultiValuedMap<K,V>;\n", "des": "This package contains implementations of the MultiValuedMap interfaces."}
{"index": 25, "repo": "commons-collections4-4.4", "code": "package multiset\n\n// Abstract implementation of the MultiSet interface to simplify the creation of subclass implementations.\nClass AbstractMapMultiSet<E>;\n// Inner class EntrySetIterator.\nClass AbstractMapMultiSet.EntrySetIterator<E>;\n// Inner class MultiSetEntry.\nClass AbstractMapMultiSet.MultiSetEntry<E>;\n// Mutable integer class for storing the data.\nClass AbstractMapMultiSet.MutableInteger;\n// Inner class UniqueSetIterator.\nClass AbstractMapMultiSet.UniqueSetIterator<E>;\n// Abstract implementation of the MultiSet interface to simplify the creation of subclass implementations.\nClass AbstractMultiSet<E>;\n// Inner class AbstractEntry.\nClass AbstractMultiSet.AbstractEntry<E>;\n// Inner class EntrySet.\nClass AbstractMultiSet.EntrySet<E>;\n// Inner class UniqueSet.\nClass AbstractMultiSet.UniqueSet<E>;\n// Decorates another MultSet to provide additional behaviour.\nClass AbstractMultiSetDecorator<E>;\n// Implements MultiSet, using a HashMap to provide the data storage.\nClass HashMultiSet<E>;\n// Decorates another MultiSet to validate that additions match a specified predicate.\nClass PredicatedMultiSet<E>;\n// Decorates another MultiSet to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedMultiSet<E>;\n// Decorates another MultiSet to ensure it can't be altered.\nClass UnmodifiableMultiSet<E>;\n", "des": "This package contains implementations of the MultiSet interface."}
{"index": 26, "repo": "commons-collections4-4.4", "code": "package properties\n\n// Subclasses create and load Properties and subclasses of Properties like SortedProperties.\nClass AbstractPropertiesFactory<T extends Properties>;\n// Creates and loads Properties.\nClass PropertiesFactory;\n// A drop-in replacement for Properties for sorting keys.\nClass SortedProperties;\n// Creates and loads SortedProperties.\nClass SortedPropertiesFactory;\n", "des": "This package contains classes to extend or customize the behavior of Properties."}
{"index": 27, "repo": "commons-collections4-4.4", "code": "package queue\n\n// Decorates another Queue to provide additional behaviour.\nClass AbstractQueueDecorator<E>;\n// CircularFifoQueue is a first-in first-out queue with a fixed size that replaces its oldest element if full.\nClass CircularFifoQueue<E>;\n// Decorates another Queue to validate that additions match a specified predicate.\nClass PredicatedQueue<E>;\n// Decorates another Queue to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedQueue<E>;\n// Decorates another Queue to transform objects that are added.\nClass TransformedQueue<E>;\n// Decorates another Queue to ensure it can't be altered.\nClass UnmodifiableQueue<E>;\n", "des": "This package contains implementations for the Queue interface."}
{"index": 28, "repo": "commons-collections4-4.4", "code": "package sequence\n\n// This interface should be implemented by user object to walk through EditScript objects.\nInterface CommandVisitor<T>;\n// This interface is devoted to handle synchronized replacement sequences.\nInterface ReplacementsHandler<T>;\n// Command representing the deletion of one object of the first sequence.\nClass DeleteCommand<T>;\n// Abstract base class for all commands used to transform an objects sequence into another one.\nClass EditCommand<T>;\n// This class gathers all the commands needed to transform one objects sequence into another objects sequence.\nClass EditScript<T>;\n// Command representing the insertion of one object of the second sequence.\nClass InsertCommand<T>;\n// Command representing the keeping of one object present in both sequences.\nClass KeepCommand<T>;\n// This class handles sequences of replacements resulting from a comparison.\nClass ReplacementsFinder<T>;\n// This class allows to compare two objects sequences.\nClass SequencesComparator<T>;\n", "des": "This package provides classes to compare two sequences of objects."}
{"index": 29, "repo": "commons-collections4-4.4", "code": "package set\n\n// Define callbacks for mutation operations.\nInterface CompositeSet.SetMutator<E>;\n// Decorates another NavigableSet to provide additional behaviour.\nClass AbstractNavigableSetDecorator<E>;\n// Serializable subclass of AbstractSetDecorator.\nClass AbstractSerializableSetDecorator<E>;\n// Decorates another Set to provide additional behaviour.\nClass AbstractSetDecorator<E>;\n// Decorates another SortedSet to provide additional behaviour.\nClass AbstractSortedSetDecorator<E>;\n// Decorates a set of other sets to provide a single unified view.\nClass CompositeSet<E>;\n// Decorates another Set to ensure that the order of addition is retained and used by the iterator.\nClass ListOrderedSet<E>;\n// Decorates a Map to obtain Set behaviour.\nClass MapBackedSet<E,V>;\n// Decorates another NavigableSet to validate that all additions match a specified predicate.\nClass PredicatedNavigableSet<E>;\n// Decorates another Set to validate that all additions match a specified predicate.\nClass PredicatedSet<E>;\n// Decorates another SortedSet to validate that all additions match a specified predicate.\nClass PredicatedSortedSet<E>;\n// Decorates another NavigableSet to transform objects that are added.\nClass TransformedNavigableSet<E>;\n// Decorates another Set to transform objects that are added.\nClass TransformedSet<E>;\n// Decorates another SortedSet to transform objects that are added.\nClass TransformedSortedSet<E>;\n// Decorates another NavigableSet to ensure it can't be altered.\nClass UnmodifiableNavigableSet<E>;\n// Decorates another Set to ensure it can't be altered.\nClass UnmodifiableSet<E>;\n// Decorates another SortedSet to ensure it can't be altered.\nClass UnmodifiableSortedSet<E>;\n", "des": "This package contains implementations of the Set, SortedSet and NavigableSet interfaces."}
{"index": 30, "repo": "commons-collections4-4.4", "code": "package splitmap\n\n// IterableGet that uses a Map<K, V> for the Get<K, V> implementation.\nClass AbstractIterableGetMapDecorator<K,V>;\n// Decorates another Map to transform objects that are added.\nClass TransformedSplitMap<J,K,U,V>;\n", "des": "The \"split map\" concept is that of an object that implements the Put and Get interfaces, with differing generic types."}
{"index": 31, "repo": "commons-collections4-4.4", "code": "package trie\n\n// This class provides some basic Trie functionality and utility methods for actual bitwise Trie implementations.\nClass AbstractBitwiseTrie<K,V>;\n// Defines the interface to analyze Trie keys on a bit level.\nClass KeyAnalyzer<K>;\n// Implementation of a PATRICIA Trie (Practical Algorithm to Retrieve Information Coded in Alphanumeric).\nClass PatriciaTrie<E>;\n// An unmodifiable Trie.\nClass UnmodifiableTrie<K,V>;\n", "des": "This package contains implementations of the Trie interface."}
{"index": 32, "repo": "commons-collections4-4.4", "code": "package analyzer\n\n// An KeyAnalyzer for Strings.\nClass StringKeyAnalyzer;\n", "des": "This package contains various KeyAnalyzer implementations."}
{"index": 33, "repo": "phoenix-core-5.1.3", "code": "package i18n\n\n// This utility class was partially copied from Salesforce's internationalization utility library (com.salesforce.i18n:i18n-util:1.0.4), which was released under the 3-clause BSD License.\nClass OracleUpper;\n// This utility class was partially copied from Salesforce's internationalization utility library (com.salesforce.i18n:i18n-util:1.0.4), which was released under the 3-clause BSD License.\nEnum LinguisticSort;\n// This utility class was partially copied from Salesforce's internationalization utility library (com.salesforce.i18n:i18n-util:1.0.4), which was released under the 3-clause BSD License.\nEnum LocaleUtils;\n// This utility class was partially copied from Salesforce's internationalization utility library (com.salesforce.i18n:i18n-util:1.0.4), which was released under the 3-clause BSD License.\nEnum OracleUpperTable;\n", "des": "This package contains utility classes partially copied from Salesforce's internationalization utility library (com.salesforce.i18n:i18n-util:1.0.4), which was released under the 3-clause BSD License."}
{"index": 34, "repo": "ignite-core-2.15.0", "code": "package ignite\n\n// Check the ReadOnlyMetricRegistry with \"name=io.dataregion.\nInterface DataRegionMetrics;\n// This interface provides calculated metrics for data region.\nInterface DataRegionMetricsProvider;\n// Main entry-point for all Ignite APIs.\nInterface Ignite;\n// This interface provides a rich API for working with distributedly cached atomic long value.\nInterface IgniteAtomicLong;\n// This interface provides a rich API for working with distributed atomic reference.\nInterface IgniteAtomicReference<T>;\n// This interface provides a rich API for working with distributed atomic sequence.\nInterface IgniteAtomicSequence;\n// This interface provides a rich API for working with distributed atomic stamped value.\nInterface IgniteAtomicStamped<T,S>;\n// Defines binary objects functionality.\nInterface IgniteBinary;\n// Main entry point for all Data Grid APIs.\nInterface IgniteCache<K,V>;\n// Represents whole cluster (all available nodes) and also provides a handle on IgniteCluster.nodeLocalMap() which provides map-like functionality linked to current grid node.\nInterface IgniteCluster;\n// Defines compute grid functionality for executing tasks and closures over nodes in the ClusterGroup.\nInterface IgniteCompute;\n// This interface provides a rich API for working with condition objects associated with distributed reentrant locks.\nInterface IgniteCondition;\n// This interface provides a rich API for working with distributed count down latch.\nInterface IgniteCountDownLatch;\n// Data streamer is responsible for streaming external data into cache.\nInterface IgniteDataStreamer<K,V>;\n// Defines encryption features.\nInterface IgniteEncryption;\n// Provides functionality for local and remote event notifications on nodes defined by IgniteEvents.clusterGroup().\nInterface IgniteEvents;\n// This interface provides a rich API for working with distributed reentrant locks.\nInterface IgniteLock;\n// This interface defines basic logging functionality used throughout the system.\nInterface IgniteLogger;\n// Provides functionality for topic-based message exchange among nodes defined by IgniteMessaging.clusterGroup().\nInterface IgniteMessaging;\n// This interface provides a rich API for working with distributed queues based on In-Memory Data Grid.\nInterface IgniteQueue<T>;\n", "des": "Contains entry-point Ignite & HPC APIs."}
{"index": 35, "repo": "ignite-core-2.15.0", "code": "package cluster\n\n// Interface representing a single node from baseline topology.\nInterface BaselineNode;\n// Defines a cluster group which contains all or a subset of cluster nodes.\nInterface ClusterGroup;\n// This class represents runtime information on a cluster.\nInterface ClusterMetrics;\n// Interface representing a single cluster node.\nInterface ClusterNode;\n// Cluster start node result information.\nInterface ClusterStartNodeResult;\n// Cluster states.\nEnum ClusterState;\n// This exception defines illegal call on empty cluster group.\nClass ClusterGroupEmptyException;\n// This exception is used to indicate error with the cluster topology (e.g., crashed node, etc.).\nClass ClusterTopologyException;\n", "des": "Contains cluster-related classes."}
{"index": 36, "repo": "ignite-core-2.15.0", "code": "package configuration\n\n// Provides resolution between external and internal addresses.\nInterface AddressResolver;\n// Communication Failure Context.\nInterface CommunicationFailureContext;\n// Communication Failure Resolver.\nInterface CommunicationFailureResolver;\n// Interface for user-defined object interceptors.\nInterface ConnectorMessageInterceptor;\n// Platform configuration marker interface.\nInterface PlatformConfiguration;\n// Interface for the configuration of the query engine.\nInterface QueryEngineConfiguration;\n// Topology validator is used to verify that cluster topology is valid for further cache operations.\nInterface TopologyValidator;\n// Warm-up configuration marker interface.\nInterface WarmUpConfiguration;\n// Configuration for atomic data structures.\nClass AtomicConfiguration;\n// Basic implementation of AddressResolver.\nClass BasicAddressResolver;\n// Configuration object for Ignite Binary Objects.\nClass BinaryConfiguration;\n// This class defines grid cache configuration.\nClass CacheConfiguration<K,V>;\n// Filter that accepts all nodes.\nClass CacheConfiguration.IgniteAllNodesPredicate;\n// TcpIgniteClient configuration.\nClass ClientConfiguration;\n// Client connector configuration.\nClass ClientConnectorConfiguration;\n// Thin client transactions configuration.\nClass ClientTransactionConfiguration;\n// Configuration for Ignite collections.\nClass CollectionConfiguration;\n// REST access configuration.\nClass ConnectorConfiguration;\n// This class allows defining custom data regions' configurations with various parameters for Apache Ignite page memory (see DataStorageConfiguration.\nClass DataRegionConfiguration;\n// A durable memory configuration for an Apache Ignite node.\nClass DataStorageConfiguration;\n// Default Communication Failure Resolver.\nClass DefaultCommunicationFailureResolver;\n// Encryption configuration.\nClass EncryptionConfiguration;\n// Custom thread pool configuration for compute tasks.\nClass ExecutorConfiguration;\n// This class defines grid runtime configuration.\nClass IgniteConfiguration;\n// Factory implementation that use reflection to create instance of given class.\nClass IgniteReflectionFactory<T>;\n// \"Load All\" warm-up configuration that loads data into persistent data region until it reaches DataRegionConfiguration.getMaxSize() with index priority.\nClass LoadAllWarmUpConfiguration;\n// Use DataStorageConfiguration instead.\nClass MemoryConfiguration;\n// Use DataRegionConfiguration instead.\nClass MemoryPolicyConfiguration;\n// Client (near) cache configuration.\nClass NearCacheConfiguration<K,V>;\n", "des": "Contains configuration-related classes."}
{"index": 37, "repo": "ignite-core-2.15.0", "code": "package lang\n\n// since 2.0.\nInterface IgniteAsyncSupport;\n// Defines generic closure with two parameters.\nInterface IgniteBiClosure<E1,E2,R>;\n// Closure with two in-parameters and void return type.\nInterface IgniteBiInClosure<E1,E2>;\n// Defines a predicate which accepts two parameters and returns true or false.\nInterface IgniteBiPredicate<E1,E2>;\n// Grid-aware adapter for Callable implementations.\nInterface IgniteCallable<V>;\n// Defines generic closure with one parameter.\nInterface IgniteClosure<E,R>;\n// Future with simplified exception handling, functional programming support and ability to listen for future completion via functional callback.\nInterface IgniteFuture<V>;\n// Closure with one in-parameter and void return type.\nInterface IgniteInClosure<E>;\n// Closure that does not take any parameters and returns a value.\nInterface IgniteOutClosure<T>;\n// Defines a predicate which accepts a parameter and returns true or false.\nInterface IgnitePredicate<E>;\n// Defines a producer which can throw IgniteCheckedException.\nInterface IgniteProducer<T>;\n// Defines generic reducer that collects multiple values and reduces them into one.\nInterface IgniteReducer<E,R>;\n// Grid-aware adapter for Runnable implementations.\nInterface IgniteRunnable;\n// Convenience class representing mutable tuple of two values.\nClass IgniteBiTuple<V1,V2>;\n// Represents node version.\nClass IgniteProductVersion;\n// This is a faster performing version of UUID.\nClass IgniteUuid;\n// Future computation cannot be retrieved because it was cancelled.\nClass IgniteFutureCancelledException;\n// Future computation completion is timed out.\nClass IgniteFutureTimeoutException;\n// If callback has this annotation then it will be executing in another thread.\nAnnotation Type IgniteAsyncCallback;\n// since 2.0.\nAnnotation Type IgniteAsyncSupported;\n", "des": "Contains general language constructs and functional APIs for distributed computations."}
{"index": 38, "repo": "ignite-core-2.15.0", "code": "package lifecycle\n\n// All components provided in Ignite configuration can implement this interface.\nInterface LifecycleAware;\n// A bean that reacts to node lifecycle events defined in LifecycleEventType.\nInterface LifecycleBean;\n// Node lifecycle event types.\nEnum LifecycleEventType;\n", "des": "Contains lifecycle-related classes."}
{"index": 39, "repo": "ignite-core-2.15.0", "code": "package resources\n\n// Dummy class to compensate for impossibility of having default null value for annotation method.\nClass SpringResource.DEFAULT;\n// Annotates a field or a setter method for injection of grid cache name.\nAnnotation Type CacheNameResource;\n// Annotates a field or a setter method for injection of current CacheStoreSession instance.\nAnnotation Type CacheStoreSessionResource;\n// Annotates a field or a setter method for injection of current Ignite instance.\nAnnotation Type IgniteInstanceResource;\n// Annotates a field or a setter method for injection of ComputeJobContext instance.\nAnnotation Type JobContextResource;\n// Annotates a field or a setter method for injection of ComputeLoadBalancer.\nAnnotation Type LoadBalancerResource;\n// Annotates a field or a setter method for injection of IgniteLogger.\nAnnotation Type LoggerResource;\n// Annotates a field or a setter method for injecting a service context into a service instance.\nAnnotation Type ServiceContextResource;\n// Annotates a field or a setter method for injection of Ignite service(s) by specified service name.\nAnnotation Type ServiceResource;\n// Annotates a field or a setter method for injection of Spring ApplicationContext resource.\nAnnotation Type SpringApplicationContextResource;\n// Annotates a field or a setter method for injection of resource from Spring ApplicationContext.\nAnnotation Type SpringResource;\n// Annotates a field or a setter method for injection of ComputeTaskContinuousMapper resource.\nAnnotation Type TaskContinuousMapperResource;\n// Annotates a field or a setter method for injection of ComputeTaskSession resource.\nAnnotation Type TaskSessionResource;\n", "des": "Contains resource injection annotations."}
{"index": 40, "repo": "ignite-core-2.15.0", "code": "package scheduler\n\n// Future for cron-based scheduled execution.\nInterface SchedulerFuture<R>;\n", "des": "Contains Job Scheduling functionality."}
{"index": 41, "repo": "ignite-core-2.15.0", "code": "package spi\n\n// This interface defines life-cycle of SPI implementation.\nInterface IgniteSpi;\n// Closeable iterator.\nInterface IgniteSpiCloseableIterator<T>;\n// SPI context provides common functionality for all SPI implementations.\nInterface IgniteSpiContext;\n// This interface defines basic MBean for all SPI implementations.\nInterface IgniteSpiManagementMBean;\n// Provides possibility to schedule delayed execution, see IgniteSpiContext.addTimeoutObject(IgniteSpiTimeoutObject).\nInterface IgniteSpiTimeoutObject;\n// Strategy to calculate next timeout and check if total timeout reached.\nInterface TimeoutStrategy;\n// Strategy which incorporates retriable network operation, handling of totalTimeout logic.\nClass ExponentialBackoffTimeoutStrategy;\n// Result of joining node validation.\nClass IgniteNodeValidationResult;\n// This class provides convenient adapter for SPI implementations.\nClass IgniteSpiAdapter;\n// This class provides convenient adapter for MBean implementations.\nClass IgniteSpiMBeanAdapter;\n// Object that incorporates logic that determines a timeout value for the next network related operation and checks whether a failure detection timeout is reached or not.\nClass IgniteSpiOperationTimeoutHelper;\n// This class provides convenient adapter for threads used by SPIs.\nClass IgniteSpiThread;\n// This class provides implementation of ThreadFactory factory for creating grid SPI threads.\nClass IgniteSpiThreadFactory;\n// Protocols supported by port processor.\nEnum IgnitePortProtocol;\n// Exception thrown by SPI implementations.\nClass IgniteSpiException;\n// Grid SPI exception which may contain more than one failure.\nClass IgniteSpiMultiException;\n// Kind of exception that is used when failure detection timeout is enabled for TcpDiscoverySpi or TcpCommunicationSpi.\nClass IgniteSpiOperationTimeoutException;\n// Grid SPI exception for version check failure.\nClass IgniteSpiVersionCheckException;\n// Annotates SPI configuration setters on whether or not it is optional.\nAnnotation Type IgniteSpiConfiguration;\n// SPIs that have this annotation present will be checked for consistency within grid.\nAnnotation Type IgniteSpiConsistencyChecked;\n// Annotates whether or not multiple instances of this SPI can be started in the same VM.\nAnnotation Type IgniteSpiMultipleInstancesSupport;\n", "des": "Contains common classes and interfaces for SPI implementations."}
{"index": 42, "repo": "ignite-core-2.15.0", "code": "package thread\n\n// An ExecutorService that executes submitted tasks using pooled grid threads.\nClass IgniteStripedThreadPoolExecutor;\n// This class adds some necessary plumbing on top of the Thread class.\nClass IgniteThread;\n// This class provides implementation of ThreadFactory factory for creating grid threads.\nClass IgniteThreadFactory;\n// An ExecutorService that executes submitted tasks using pooled grid threads.\nClass IgniteThreadPoolExecutor;\n// OOM exception handler for system threads.\nClass OomExceptionHandler;\n// \nClass SameThreadExecutor;\n", "des": "Contains threads-related utility classes."}
{"index": 43, "repo": "ignite-core-2.15.0", "code": "package messaging\n\n// Convenience actor-base adapter for IgniteMessaging.localListen(Object, IgniteBiPredicate) method.\nClass MessagingListenActor<T>;\n", "des": "Contains Topic-based Messaging functionality."}
{"index": 44, "repo": "ignite-core-2.15.0", "code": "package events\n\n// Inconsistent entries mapping.\nInterface CacheConsistencyViolationEvent.EntriesInfo;\n// Inconsistent entry info.\nInterface CacheConsistencyViolationEvent.EntryInfo;\n// Grid events are used for notification about what happens within the grid.\nInterface Event;\n// Contains event type constants.\nInterface EventType;\n// Baseline changed event.\nClass BaselineChangedEvent;\n// Baseline configuration changed event.\nClass BaselineConfigurationChangedEvent;\n// This is an experimental API.\nClass CacheConsistencyViolationEvent;\n// In-memory database (cache) event.\nClass CacheEvent;\n// \nClass CacheObjectTransformedEvent;\n// Cache query execution event.\nClass CacheQueryExecutedEvent<K,V>;\n// Cache query read event.\nClass CacheQueryReadEvent<K,V>;\n// In-memory database (cache) rebalancing event.\nClass CacheRebalancingEvent;\n// Grid checkpoint event.\nClass CheckpointEvent;\n// Use ClusterStateChangeEvent instead.\nClass ClusterActivationEvent;\n// Cluster state change event.\nClass ClusterStateChangeEvent;\n// Cluster state change started event.\nClass ClusterStateChangeStartedEvent;\n// Event type indicating that cluster tag has been updated.\nClass ClusterTagUpdatedEvent;\n// Grid deployment event.\nClass DeploymentEvent;\n// Grid discovery event.\nClass DiscoveryEvent;\n// Base adapter for the events.\nClass EventAdapter;\n// Grid job event.\nClass JobEvent;\n// This event is triggered if any of GridComponents fail to validate the joining node while join message processing.\nClass NodeValidationFailedEvent;\n// Event type indicating that page replacement started in one of the configured data regions.\nClass PageReplacementStartedEvent;\n// Event indicating the cluster snapshot operation result state with the given name.\nClass SnapshotEvent;\n// Query execution event.\nClass SqlQueryExecutionEvent;\n// Grid task event.\nClass TaskEvent;\n// Event indicates transaction state change.\nClass TransactionStateChangedEvent;\n// Event indicates the completion of WAL segment file transition to archive.\nClass WalSegmentArchivedEvent;\n// Event indicates the completion of WAL segment compaction.\nClass WalSegmentCompactedEvent;\n", "des": "Contains Event Subscription functionality together with various events emitted by Ignite."}
{"index": 45, "repo": "ignite-core-2.15.0", "code": "package compute\n\n// Defines executable unit for ComputeTask.\nInterface ComputeJob;\n// Context attached to every job executed on the grid.\nInterface ComputeJobContext;\n// Defines continuation support for grid job context.\nInterface ComputeJobContinuation;\n// Annotation for handling master node leave during job execution.\nInterface ComputeJobMasterLeaveAware;\n// Result of remote job which gets passed into ComputeTask.result(ComputeJobResult, List) method.\nInterface ComputeJobResult;\n// Job sibling interface defines a job from the same split.\nInterface ComputeJobSibling;\n// Load balancer is used for finding the best balanced node according to load balancing policy.\nInterface ComputeLoadBalancer;\n// Grid task interface defines a task that can be executed on the grid.\nInterface ComputeTask<T,R>;\n// Defines a mapper that can be used for asynchronous job sending.\nInterface ComputeTaskContinuousMapper;\n// This class defines a handler for asynchronous task execution.\nInterface ComputeTaskFuture<R>;\n// Defines a distributed session for particular task execution.\nInterface ComputeTaskSession;\n// This interface defines listener for task session attributes.\nInterface ComputeTaskSessionAttributeListener;\n// Convenience adapter for ComputeJob implementations.\nClass ComputeJobAdapter;\n// Convenience adapter for ComputeJob implementations.\nClass ComputeJobContinuationAdapter;\n// Convenience adapter for ComputeTask interface.\nClass ComputeTaskAdapter<T,R>;\n// This class defines simplified adapter for ComputeTask.\nClass ComputeTaskSplitAdapter<T,R>;\n// This enumeration provides different types of actions following the last received job result.\nEnum ComputeJobResultPolicy;\n// Defines life-time scopes for checkpoint operations.\nEnum ComputeTaskSessionScope;\n// This exception defines execution rejection.\nClass ComputeExecutionRejectedException;\n// This runtime exception can be thrown from ComputeJob.execute() method to force job failover to another node within task topology.\nClass ComputeJobFailoverException;\n// This exception indicates that grid task was cancelled.\nClass ComputeTaskCancelledException;\n// This exception indicates that task execution timed out.\nClass ComputeTaskTimeoutException;\n// This exception is thrown when user's code throws undeclared runtime exception.\nClass ComputeUserUndeclaredException;\n// This annotation allows to call a method right after the job has been successfully sent for execution.\nAnnotation Type ComputeJobAfterSend;\n", "des": "Contains Compute Grid functionality."}
{"index": 46, "repo": "ignite-core-2.15.0", "code": "package cache\n\n// Cache entry that extends Cache.Entry by providing additional entry related information.\nInterface CacheEntry<K,V>;\n// This filter adds Serializable interface to CacheEntryEventFilter object.\nInterface CacheEntryEventSerializableFilter<K,V>;\n// This processor adds Serializable interface to EntryProcessor object.\nInterface CacheEntryProcessor<K,V,T>;\n// Entry event order.\nInterface CacheEntryVersion;\n// Cache interceptor.\nInterface CacheInterceptor<K,V>;\n// Cache metrics used to obtain statistics on cache itself.\nInterface CacheMetrics;\n// Cache interceptor convenience adapter.\nClass CacheInterceptorAdapter<K,V>;\n// A cache interceptor map entry.\nClass CacheInterceptorEntry<K,V>;\n// Configuration defining various aspects of cache keys without explicit usage of annotations on user classes.\nClass CacheKeyConfiguration;\n// Implementation of JSR-107 CacheManager.\nClass CacheManager;\n// Implementation of JSR-107 CachingProvider.\nClass CachingProvider;\n// Query entity is a description of cache entry (composed of key and value) in a way of how it must be indexed and can be queried.\nClass QueryEntity;\n// Query entity patch which contain SchemaAbstractOperation operations for changing query entity.\nClass QueryEntityPatch;\n// Contains list of fields to be indexed.\nClass QueryIndex;\n// Cache atomicity mode controls whether cache should maintain fully transactional semantics or more light-weight atomic behavior.\nEnum CacheAtomicityMode;\n// Enumeration of all supported caching modes.\nEnum CacheMode;\n// Enumeration of all supported cache peek modes.\nEnum CachePeekMode;\n// Cache rebalance mode.\nEnum CacheRebalanceMode;\n// Mode indicating how Ignite should wait for write replies from other nodes.\nEnum CacheWriteSynchronizationMode;\n// Partition loss policy.\nEnum PartitionLossPolicy;\n// Index type.\nEnum QueryIndexType;\n// Read repair strategies.\nEnum ReadRepairStrategy;\n// Exception thrown when cache must be created but it already exists.\nClass CacheExistsException;\n// Exception thrown from non-transactional cache in case when update succeeded only partially.\nClass CachePartialUpdateException;\n// Exception thrown when all data nodes left the grid.\nClass CacheServerNotFoundException;\n", "des": "Contains main Data Grid APIs."}
{"index": 47, "repo": "ignite-core-2.15.0", "code": "package affinity\n\n// Provides affinity information to detect which node is primary and which nodes are backups for a partitioned or replicated cache.\nInterface Affinity<K>;\n// Cache key affinity which maps keys to nodes.\nInterface AffinityFunction;\n// Affinity function context.\nInterface AffinityFunctionContext;\n// Use AffinityKeyMapped or CacheKeyConfiguration.setAffinityKeyFieldName(String) instead.\nInterface AffinityKeyMapper;\n// Optional wrapper for cache keys to provide support for custom affinity mapping.\nClass AffinityKey<K>;\n// Guaranteed unique affinity-based key.\nClass AffinityUuid;\n// Annotation marker which identifies affinity function that must be calculated on one centralized node instead of independently on each node.\nAnnotation Type AffinityCentralizedFunction;\n// Optional annotation to specify custom key-to-node affinity.\nAnnotation Type AffinityKeyMapped;\n", "des": "Contains cache node affinity implementations."}
{"index": 48, "repo": "ignite-core-2.15.0", "code": "package rendezvous\n\n// Attribute-based affinity backup filter that forces each partition's primary and backup nodes to different hardware which is not expected to fail simultaneously, e.g., in AWS, to different \"availability zones\".\nClass ClusterNodeAttributeAffinityBackupFilter;\n// This class can be used as a RendezvousAffinityFunction.affinityBackupFilter to create cache templates in Spring that force each partition's primary and backup to be co-located on nodes with the same attribute value.\nClass ClusterNodeAttributeColocatedBackupFilter;\n// Affinity function for partitioned cache based on Highest Random Weight algorithm.\nClass RendezvousAffinityFunction;\n", "des": "Contains HRW-based cache affinity for partitioned cache."}
{"index": 49, "repo": "ignite-core-2.15.0", "code": "package eviction\n\n// Evictable cache entry passed into EvictionPolicy.\nInterface EvictableEntry<K,V>;\n// Eviction filter to specify which entries should not be evicted.\nInterface EvictionFilter<K,V>;\n// Pluggable cache eviction policy.\nInterface EvictionPolicy<K,V>;\n// Common functionality implementation for eviction policies with max size/max memory and batch eviction support.\nClass AbstractEvictionPolicy<K,V>;\n// Common functionality implementation for eviction policies factories.\nClass AbstractEvictionPolicyFactory<T>;\n", "des": "Contains cache eviction policy implementations."}
{"index": 50, "repo": "ignite-core-2.15.0", "code": "package fifo\n\n// MBean for FIFO eviction policy.\nInterface FifoEvictionPolicyMBean;\n// Eviction policy based on First In First Out (FIFO) algorithm and supports batch eviction.\nClass FifoEvictionPolicy<K,V>;\n// Factory class for FifoEvictionPolicy.\nClass FifoEvictionPolicyFactory<K,V>;\n", "des": "Contains cache FIFO eviction policy implementations."}
{"index": 51, "repo": "ignite-core-2.15.0", "code": "package lru\n\n// MBean for LRU eviction policy.\nInterface LruEvictionPolicyMBean;\n// Eviction policy based on Least Recently Used (LRU) algorithm and supports batch eviction.\nClass LruEvictionPolicy<K,V>;\n// Factory class for LruEvictionPolicy.\nClass LruEvictionPolicyFactory<K,V>;\n", "des": "Contains cache LRU eviction policy implementations."}
{"index": 52, "repo": "ignite-core-2.15.0", "code": "package sorted\n\n// MBean for sorted eviction policy.\nInterface SortedEvictionPolicyMBean;\n// Cache eviction policy which will select the minimum cache entry for eviction.\nClass SortedEvictionPolicy<K,V>;\n// Factory class for SortedEvictionPolicy.\nClass SortedEvictionPolicyFactory<K,V>;\n", "des": "Contains cache sorted eviction policy implementation."}
{"index": 53, "repo": "ignite-core-2.15.0", "code": "package query\n\n// Interface for local listener of ContinuousQueryWithTransformer to implement.\nInterface ContinuousQueryWithTransformer.EventListener<T>;\n// SQL query result cursor.\nInterface FieldsQueryCursor<T>;\n// Basic interface for IndexQuery criterion.\nInterface IndexQueryCriterion;\n// Query result cursor.\nInterface QueryCursor<T>;\n// Query metrics aggregated by query type and its textual representation.\nInterface QueryDetailMetrics;\n// Cache query metrics used to obtain statistics on query.\nInterface QueryMetrics;\n// Base class for continuous query.\nClass AbstractContinuousQuery<K,V>;\n// A special FieldsQueryCursor subclass that is used as a sentinel to transfer data from bulk load (COPY) command to the JDBC or other client-facing driver: the bulk load batch processor and parameters to send to the client.\nClass BulkLoadContextCursor;\n// A Cache continuous query entry event.\nClass CacheQueryEntryEvent<K,V>;\n// API for configuring continuous cache queries.\nClass ContinuousQuery<K,V>;\n// API for configuring continuous cache queries with transformer.\nClass ContinuousQueryWithTransformer<K,V,T>;\n// Index queries work over distributed indexes and retrieve cache entries that match the specified criteria.\nClass IndexQuery<K,V>;\n// Factory of IndexQueryCriterion for IndexQuery.\nClass IndexQueryCriteriaBuilder;\n// Main API for configuring and executing cache queries.\nClass Query<R>;\n// Scan query over cache entries.\nClass ScanQuery<K,V>;\n// Query to be used by IndexingSpi implementations.\nClass SpiQuery<K,V>;\n// SQL Fields query.\nClass SqlFieldsQuery;\n// Since 2.8, please use SqlFieldsQuery instead.\nClass SqlQuery<K,V>;\n// Full Text Queries Ignite supports full text queries based on Apache Lucene engine.\nClass TextQuery<K,V>;\n// The exception is thrown if a query was cancelled or timed out while executing.\nClass QueryCancelledException;\n// The exception is thrown if a query was cancelled or timed out while executing.\nClass QueryRetryException;\n", "des": "Contains APIs for creating and executing cache queries."}
{"index": 54, "repo": "ignite-core-2.15.0", "code": "package annotations\n\n// Describes group index.\nAnnotation Type QueryGroupIndex;\n// List of group indexes for type.\nAnnotation Type QueryGroupIndex.List;\n// Annotates fields for SQL queries.\nAnnotation Type QuerySqlField;\n// Describes group of index and position of field in this group.\nAnnotation Type QuerySqlField.Group;\n// Annotates public static methods in classes to be used in SQL queries as custom functions.\nAnnotation Type QuerySqlFunction;\n// Annotation for fields to be indexed for full text search using Lucene.\nAnnotation Type QueryTextField;\n", "des": "Contains query-related annotations."}
{"index": 55, "repo": "ignite-core-2.15.0", "code": "package store\n\n// API for cache persistent storage for read-through and write-through behavior.\nInterface CacheStore<K,V>;\n// Session for the cache store operations.\nInterface CacheStoreSession;\n// Cache store session listener that allows to implement callbacks for session lifecycle.\nInterface CacheStoreSessionListener;\n// This adapter designed to support stores with bulk loading from stream-like source.\nClass CacheLoadOnlyStoreAdapter<K,V,I>;\n// Cache storage convenience adapter.\nClass CacheStoreAdapter<K,V>;\n", "des": "Contains cache store interfaces."}
{"index": 56, "repo": "ignite-core-2.15.0", "code": "package jdbc\n\n// API for implementing custom hashing logic for binary objects on server side.\nInterface JdbcTypeHasher;\n// API for implementing custom mapping logic for loaded from store data.\nInterface JdbcTypesTransformer;\n// Implementation of CacheStore backed by JDBC.\nClass CacheAbstractJdbcStore<K,V>;\n// Entry mapping description.\nClass CacheAbstractJdbcStore.EntryMapping;\n// CacheStore implementation backed by JDBC.\nClass CacheJdbcBlobStore<K,V>;\n// Factory implementation for CacheJdbcBlobStore.\nClass CacheJdbcBlobStoreFactory<K,V>;\n// Implementation of CacheStore backed by JDBC and POJO via reflection.\nClass CacheJdbcPojoStore<K,V>;\n// Factory implementation for CacheJdbcPojoStore.\nClass CacheJdbcPojoStoreFactory<K,V>;\n// Cache store session listener based on JDBC connection.\nClass CacheJdbcStoreSessionListener;\n// Description for type that could be stored into database by store.\nClass JdbcType;\n// Default implementation of JdbcTypeHasher.\nClass JdbcTypeDefaultHasher;\n// Description of how field declared in database and in cache.\nClass JdbcTypeField;\n// Default implementation of JdbcTypesTransformer.\nClass JdbcTypesDefaultTransformer;\n// Type kind.\nEnum CacheAbstractJdbcStore.TypeKind;\n", "des": "Contains reference JDBC-based cache store implementation."}
{"index": 57, "repo": "ignite-core-2.15.0", "code": "package dialect\n\n// Represents a dialect of SQL implemented by a particular RDBMS.\nInterface JdbcDialect;\n// Basic implementation of dialect based on JDBC specification.\nClass BasicJdbcDialect;\n// A dialect compatible with the IBM DB2 database.\nClass DB2Dialect;\n// A dialect compatible with the H2 database.\nClass H2Dialect;\n// A dialect compatible with the MySQL database.\nClass MySQLDialect;\n// A dialect compatible with the Oracle database.\nClass OracleDialect;\n// A dialect compatible with the Microsoft SQL Server database.\nClass SQLServerDialect;\n", "des": "Contains SQL dialects for different RDBMS."}
{"index": 58, "repo": "ignite-core-2.15.0", "code": "package transactions\n\n// Ignite cache transaction.\nInterface Transaction;\n// Transaction metrics, shared across all caches.\nInterface TransactionMetrics;\n// Transaction concurrency control.\nEnum TransactionConcurrency;\n// Defines different cache transaction isolation levels.\nEnum TransactionIsolation;\n// Cache transaction state.\nEnum TransactionState;\n// Exception thrown whenever Mvcc transaction has been finished before operation finished.\nClass TransactionAlreadyCompletedException;\n// Transaction deadlock exception.\nClass TransactionDeadlockException;\n// Exception thrown whenever transaction tries to inserts entry with same mvcc version more than once.\nClass TransactionDuplicateKeyException;\n// Base class for all transaction related exceptions.\nClass TransactionException;\n// Exception thrown whenever grid transaction enters an unknown state.\nClass TransactionHeuristicException;\n// Exception thrown whenever transaction spans over MVCC and non-MVCC caches.\nClass TransactionMixedModeException;\n// Exception thrown whenever grid transactions fail optimistically.\nClass TransactionOptimisticException;\n// Exception thrown whenever grid transactions has been automatically rolled back.\nClass TransactionRollbackException;\n// Exception thrown whenever transaction can't be serialized due to write conflict.\nClass TransactionSerializationException;\n// Exception thrown whenever transactions time out.\nClass TransactionTimeoutException;\n// Exception thrown whenever transaction concurrency level is not supported.\nClass TransactionUnsupportedConcurrencyException;\n", "des": "Contains transaction-related classes."}
{"index": 59, "repo": "ignite-core-2.15.0", "code": "package services\n\n// An instance of grid-managed service.\nInterface Service;\n// Service call context.\nInterface ServiceCallContext;\n// Service call interceptor.\nInterface ServiceCallInterceptor;\n// Service execution context.\nInterface ServiceContext;\n// Service deployment descriptor.\nInterface ServiceDescriptor;\n// Service call context builder.\nClass ServiceCallContextBuilder;\n// Managed service configuration.\nClass ServiceConfiguration;\n// Exception indicating service deployment failure.\nClass ServiceDeploymentException;\n", "des": "Contains main Managed Services APIs."}
{"index": 60, "repo": "ignite-core-2.15.0", "code": "package client\n\n// This interface provides a list of addresses of Ignite server nodes within a cluster.\nInterface ClientAddressFinder;\n// Distributed atomic long API.\nInterface ClientAtomicLong;\n// Auto closeable iterator.\nInterface ClientAutoCloseableIterator<T>;\n// Thin client cache.\nInterface ClientCache<K,V>;\n// Thin client cluster facade.\nInterface ClientCluster;\n// Thin client cluster group facade.\nInterface ClientClusterGroup;\n// Thin client compute facade.\nInterface ClientCompute;\n// Client disconnected event listener.\nInterface ClientDisconnectListener;\n// Distributed Set.\nInterface ClientIgniteSet<T>;\n// This function calculates the cache key to a partition mapping for each cache key.\nInterface ClientPartitionAwarenessMapper;\n// This factory is used on the client side and only when the partition awareness thin client feature is enabled.\nInterface ClientPartitionAwarenessMapperFactory;\n// Client retry policy determines whether client operations that have failed due to a connection issue should be retried.\nInterface ClientRetryPolicy;\n// Retry policy context.\nInterface ClientRetryPolicyContext;\n// Descriptor of Service.\nInterface ClientServiceDescriptor;\n// Thin client services facade.\nInterface ClientServices;\n// Thin client transaction.\nInterface ClientTransaction;\n// Thin client transactions facade.\nInterface ClientTransactions;\n// Ignite thin client.\nInterface IgniteClient;\n// Thin client async operations future.\nInterface IgniteClientFuture<T>;\n// Configuration for atomic data structures.\nClass ClientAtomicConfiguration;\n// Cache configuration.\nClass ClientCacheConfiguration;\n// Configuration for Ignite collections.\nClass ClientCollectionConfiguration;\n// Retry policy that always returns true.\nClass ClientRetryAllPolicy;\n// Retry policy that always returns false.\nClass ClientRetryNonePolicy;\n// Retry policy that returns true for all read-only operations that do not modify data.\nClass ClientRetryReadPolicy;\n// Client operation type.\nEnum ClientOperationType;\n// SSL/TLS modes.\nEnum SslMode;\n// SSL Protocol.\nEnum SslProtocol;\n// Indicates user name or password is invalid.\nClass ClientAuthenticationException;\n// Indicates user has no permission to perform operation.\nClass ClientAuthorizationException;\n", "des": "Contains Ignite Thin Client API classes."}
{"index": 61, "repo": "ignite-core-2.15.0", "code": "package stream\n\n// Stream tuple extractor to convert a single message to zero, one or many tuples.\nInterface StreamMultipleTupleExtractor<T,K,V>;\n// Updates cache with batch of entries.\nInterface StreamReceiver<K,V>;\n// Stream tuple extractor to convert a message to a single Ignite key-value tuple.\nInterface StreamSingleTupleExtractor<T,K,V>;\n// Will be removed in 2.0.0.\nInterface StreamTupleExtractor<T,K,V>;\n// Convenience adapter for streamers.\nClass StreamAdapter<T,K,V>;\n// Convenience adapter to transform update existing values in streaming cache based on the previously cached value.\nClass StreamTransformer<K,V>;\n// Convenience adapter to visit every key-value tuple in the stream.\nClass StreamVisitor<K,V>;\n", "des": "Contains Ignite Streamer classes."}
{"index": 62, "repo": "ignite-core-2.15.0", "code": "package socket\n\n// Socket message converter.\nInterface SocketMessageConverter<T>;\n// Server that receives data from TCP socket, converts it to key-value pairs using StreamTupleExtractor and streams into IgniteDataStreamer instance.\nClass SocketStreamer<T,K,V>;\n", "des": "Contains socket streamer implementation."}
{"index": 63, "repo": "ignite-core-2.15.0", "code": "package security\n\n// Security credentials provider for specifying security credentials.\nInterface SecurityCredentialsProvider;\n// Security permission set for authorized security subjects.\nInterface SecurityPermissionSet;\n// Security subject representing authenticated node with a set of permissions.\nInterface SecuritySubject;\n// Authentication context.\nClass AuthenticationContext;\n// Simple implementation of SecurityPermissionSet interface.\nClass SecurityBasicPermissionSet;\n// Security credentials used for node authentication.\nClass SecurityCredentials;\n// Basic implementation for SecurityCredentialsProvider.\nClass SecurityCredentialsBasicProvider;\n// Provides a convenient way to create a permission set.\nClass SecurityPermissionSetBuilder;\n// Supported security permissions within grid.\nEnum SecurityPermission;\n// Supported security subject types.\nEnum SecuritySubjectType;\n// Common security exception for the grid.\nClass SecurityException;\n", "des": "Contains APIs for security, authentication, and authorization."}
{"index": 64, "repo": "ignite-core-2.15.0", "code": "package ssl\n\n// SSL context factory that provides SSL context configuration with specified key and trust stores.\nClass SslContextFactory;\n// Wrapper for SSLContext that extend source context with custom SSL parameters.\nClass SSLContextWrapper;\n", "des": "Contains classes for working with SSL."}
{"index": 65, "repo": "ignite-core-2.15.0", "code": "package maintenance\n\n// Maintenance action interface enables user to execute operations related to a particular MaintenanceTask.\nInterface MaintenanceAction<T>;\n// MaintenanceRegistry is a service local to each Ignite node that allows to request performing maintenance actions on that particular node.\nInterface MaintenanceRegistry;\n// Abstraction to decouple interaction between MaintenanceRegistry and components that may require maintenance.\nInterface MaintenanceWorkflowCallback;\n// Represents request to handle maintenance situation.\nClass MaintenanceTask;\n", "des": "Contains public interfaces for maintenance mechanism."}
{"index": 66, "repo": "ignite-core-2.15.0", "code": "package mxbean\n\n// This interface defines JMX view on DistributedBaselineConfiguration.\nInterface BaselineAutoAdjustMXBean;\n// MXBean interface that provides access to ODBC\\JDBC\\Thin client connections.\nInterface ClientProcessorMXBean;\n// Cluster metrics MBean.\nInterface ClusterMetricsMXBean;\n// Compute MXBean interface.\nInterface ComputeMXBean;\n// An MX bean allowing to monitor and tune persistence.\nInterface DataStorageMXBean;\n// JMX bean for defragmentation manager.\nInterface DefragmentationMXBean;\n// Encryption features MBean.\nInterface EncryptionMXBean;\n// MBean that controls critical failure handling.\nInterface FailureHandlingMxBean;\n// MX Bean allows to access information about cluster ID and tag and change tag.\nInterface IgniteClusterMXBean;\n// MBean-aware interface.\nInterface IgniteMBeanAware;\n// This interface defines JMX view on kernal.\nInterface IgniteMXBean;\n// This interface defines JMX view on Ignition.\nInterface IgnitionMXBean;\n// Metrics MXBean interface.\nInterface MetricsMxBean;\n// MBean that provides access to performance statistics management.\nInterface PerformanceStatisticsMBean;\n// Query MXBean interface.\nInterface QueryMXBean;\n// Service MXBean interface.\nInterface ServiceMXBean;\n// Snapshot features MBean.\nInterface SnapshotMXBean;\n// Check the JmxMetricExporterSpi with \"name=\\\"tx\\\"\" instead.\nInterface TransactionMetricsMxBean;\n// Transactions MXBean interface.\nInterface TransactionsMXBean;\n// Warm-up MXBean interface.\nInterface WarmUpMXBean;\n// MBean that provides ability to terminate worker that registered in the workers registry.\nInterface WorkersControlMXBean;\n// Provides description for MBean classes and methods.\nAnnotation Type MXBeanDescription;\n// Provides name and description for MBean method parameter.\nAnnotation Type MXBeanParameter;\n// Use MXBeanParameter instead.\nAnnotation Type MXBeanParametersDescriptions;\n// Use MXBeanParameter instead.\nAnnotation Type MXBeanParametersNames;\n", "des": "Contains annotations for Dynamic MBeans."}
{"index": 67, "repo": "ignite-core-2.15.0", "code": "package checkpoint\n\n// Listener for notifications of checkpoints removed by CheckpointSpi.\nInterface CheckpointListener;\n// Checkpoint SPI provides an ability to save an intermediate job state.\nInterface CheckpointSpi;\n", "des": "Contains APIs for checkpoint SPI."}
{"index": 68, "repo": "ignite-core-2.15.0", "code": "package cache\n\n// Management bean that provides general administrative and configuration information about cache checkpoint SPI.\nInterface CacheCheckpointSpiMBean;\n// This class defines cache-based implementation for checkpoint SPI.\nClass CacheCheckpointSpi;\n", "des": "Contains cache-based implementation for checkpoint SPI."}
{"index": 69, "repo": "ignite-core-2.15.0", "code": "package jdbc\n\n// Management bean that provides general administrative and configuration information about jdbc checkpoint SPI.\nInterface JdbcCheckpointSpiMBean;\n// This class defines JDBC checkpoint SPI implementation.\nClass JdbcCheckpointSpi;\n", "des": "Contains JDBC implementation for checkpoint SPI."}
{"index": 70, "repo": "ignite-core-2.15.0", "code": "package noop\n\n// No-op implementation of CheckpointSpi.\nClass NoopCheckpointSpi;\n", "des": "Contains default no-op checkpoint SPI implementation."}
{"index": 71, "repo": "ignite-core-2.15.0", "code": "package sharedfs\n\n// Management bean that provides general administrative and configuration information about shared file system checkpoints.\nInterface SharedFsCheckpointSpiMBean;\n// This class defines shared file system CheckpointSpi implementation for checkpoint SPI.\nClass SharedFsCheckpointSpi;\n", "des": "Contains shared file system implementation for checkpoint SPI."}
{"index": 72, "repo": "ignite-core-2.15.0", "code": "package collision\n\n// Context for resolving collisions.\nInterface CollisionContext;\n// Listener to be set on CollisionSpi for notification of external collision events (e.g. job stealing).\nInterface CollisionExternalListener;\n// This interface defines set of operations that collision SPI implementation can perform on jobs that are either waiting or executing.\nInterface CollisionJobContext;\n// Collision SPI allows to regulate how grid jobs get executed when they arrive on a destination node for execution.\nInterface CollisionSpi;\n", "des": "Contains APIs for collision SPI."}
{"index": 73, "repo": "ignite-core-2.15.0", "code": "package fifoqueue\n\n// Management bean that provides access to the FIFO queue collision SPI configuration.\nInterface FifoQueueCollisionSpiMBean;\n// This class provides implementation for Collision SPI based on FIFO queue.\nClass FifoQueueCollisionSpi;\n", "des": "Contains FIFO based collision SPI implementation."}
{"index": 74, "repo": "ignite-core-2.15.0", "code": "package jobstealing\n\n// Management MBean for job stealing based collision SPI.\nInterface JobStealingCollisionSpiMBean;\n// Collision SPI that supports job stealing from over-utilized nodes to under-utilized nodes.\nClass JobStealingCollisionSpi;\n// Job stealing request.\nClass JobStealingRequest;\n// This annotation disables job stealing if corresponding feature is configured.\nAnnotation Type JobStealingDisabled;\n", "des": "Contains job stealing collision SPI implementation."}
{"index": 75, "repo": "ignite-core-2.15.0", "code": "package noop\n\n// No-op implementation of CollisionSpi.\nClass NoopCollisionSpi;\n", "des": "Contains default no-op collision SPI implementation."}
{"index": 76, "repo": "ignite-core-2.15.0", "code": "package priorityqueue\n\n// Management bean that provides access to the priority queue collision SPI configuration.\nInterface PriorityQueueCollisionSpiMBean;\n// This class provides implementation for Collision SPI based on priority queue.\nClass PriorityQueueCollisionSpi;\n", "des": "Contains priority based collision SPI implementation."}
{"index": 77, "repo": "ignite-core-2.15.0", "code": "package indexing\n\n// Cache entry filter.\nInterface IndexingQueryFilter;\n// Indexing SPI allows user to index cache content.\nInterface IndexingSpi;\n// Indexing query filter for specific cache.\nClass IndexingQueryCacheFilter;\n// Indexing query filter.\nClass IndexingQueryFilterImpl;\n", "des": "Contains APIs for indexing SPI."}
{"index": 78, "repo": "ignite-core-2.15.0", "code": "package noop\n\n// Default implementation of IndexingSpi which does not index cache.\nClass NoopIndexingSpi;\n", "des": "Contains default no-op indexing SPI implementation."}
{"index": 79, "repo": "ignite-core-2.15.0", "code": "package loadbalancing\n\n// Load balancing SPI provides the next best balanced node for job execution.\nInterface LoadBalancingSpi;\n", "des": "Contains APIs for load balancing SPI."}
{"index": 80, "repo": "ignite-core-2.15.0", "code": "package adaptive\n\n// Management MBean for AdaptiveLoadBalancingSpi SPI.\nInterface AdaptiveLoadBalancingSpiMBean;\n// Pluggable implementation of node load probing.\nInterface AdaptiveLoadProbe;\n// Implementation of node load probing based on CPU load.\nClass AdaptiveCpuLoadProbe;\n// Implementation of node load probing based on active and waiting job count.\nClass AdaptiveJobCountLoadProbe;\n// Load balancing SPI that adapts to overall node performance.\nClass AdaptiveLoadBalancingSpi;\n// Implementation of node load probing based on total job processing time.\nClass AdaptiveProcessingTimeLoadProbe;\n", "des": "Contains adaptive load balancing SPI."}
{"index": 81, "repo": "ignite-core-2.15.0", "code": "package roundrobin\n\n// Management bean for RoundRobinLoadBalancingSpi SPI.\nInterface RoundRobinLoadBalancingSpiMBean;\n// This SPI iterates through nodes in round-robin fashion and pick the next sequential node.\nClass RoundRobinLoadBalancingSpi;\n", "des": "Contains default round-robin implementation for load balancing SPI."}
{"index": 82, "repo": "ignite-core-2.15.0", "code": "package weightedrandom\n\n// Management MBean for WeightedRandomLoadBalancingSpi SPI.\nInterface WeightedRandomLoadBalancingSpiMBean;\n// Load balancing SPI that picks a random node for job execution.\nClass WeightedRandomLoadBalancingSpi;\n", "des": "Contains weighted random-base implementation for load balancing SPI."}
{"index": 83, "repo": "ignite-core-2.15.0", "code": "package communication\n\n// Listener SPI notifies IO manager with.\nInterface CommunicationListener<T extends Serializable>;\n// Communication SPI is responsible for data exchange between nodes.\nInterface CommunicationSpi<T extends Serializable>;\n", "des": "Contains APIs for grid communication SPI."}
{"index": 84, "repo": "ignite-core-2.15.0", "code": "package tcp\n\n// MBean provide access to TCP-based communication SPI.\nInterface TcpCommunicationSpiMBean;\n// fix it in the ticket https://ggsystems.atlassian.net/browse/GG-29546\nClass AttributeNames;\n// Utils to analyze client-related exceptions.\nClass ClientExceptionsUtils;\n// Statistics for TcpCommunicationSpi.\nClass TcpCommunicationMetricsListener;\n// TcpCommunicationSpi is default communication SPI which uses TCP/IP protocol and Java NIO to communicate with other nodes.\nClass TcpCommunicationSpi;\n", "des": "Contains default TCP/IP-based implementation for communication SPI."}
{"index": 85, "repo": "ignite-core-2.15.0", "code": "package internal\n\n// Extended communication SPI listener to provide Channel opened events.\nInterface CommunicationListenerEx<T extends Serializable>;\n// Connection policy.\nInterface ConnectionPolicy;\n// Helper interface to ask other nodes to open connections.\nInterface ConnectionRequestor;\n// Tcp Communication Node Connection Check Future.\nInterface TcpCommunicationNodeConnectionCheckFuture;\n// \nInterface TcpConnectionIndexAwareMessage;\n// This class must be removed.\nClass ClusterStateProvider;\n// Listener on discovery events.\nClass CommunicationDiscoveryEventListener;\n// Common communication spi logic.\nClass CommunicationTcpUtils;\n// Works with connections states.\nClass CommunicationWorker;\n// Connect future which uses as a marker of type connection releted with TCP.\nClass ConnectFuture;\n// Lock and error control work flow.\nClass ConnectGateway;\n// Registry of client connections.\nClass ConnectionClientPool;\n// Connection Key.\nClass ConnectionKey;\n// Marker future implementation, just like ConnectFuture, but meaning that we're waiting for the inverse connection.\nClass ConnectionRequestFuture;\n// Class marker that say that connection must be interacted.\nClass DisconnectedSessionInfo;\n// First connection policy.\nClass FirstConnectionPolicy;\n// Should be removed.\nClass GridNioServerWrapper;\n// Callback that is intended to be executed after timeout on handshake.\nClass HandshakeTimeoutObject;\n// This class implement NioListener which process handshake stage, and transmit messages to session.\nClass InboundConnectionHandler;\n// Round robin connection policy.\nClass RoundRobinConnectionPolicy;\n// Only may implement it TcpCommunicationSpi.\nClass TcpCommunicationConfigInitializer;\n// Class of configuration for TcpCommunicationSpi segregation.\nClass TcpCommunicationConfiguration;\n// Tcp Communication Connection Check Future.\nClass TcpCommunicationConnectionCheckFuture;\n// MBean implementation for TcpCommunicationSpi.\nClass TcpCommunicationSpiMBeanImpl;\n// Message is part of communication via discovery protocol.\nClass TcpConnectionRequestDiscoveryMessage;\n// Executor for synchronously establishing a connection with a node.\nClass TcpHandshakeExecutor;\n// Inverse connection response message sent by client node as a response to inverse connection request received by discovery.\nClass TcpInverseConnectionResponseMessage;\n// Internal exception class for proper timeout handling.\nClass HandshakeException;\n", "des": "Contains connection health-checkers for TCP/IP-based implementation of communication SPI."}
{"index": 86, "repo": "ignite-core-2.15.0", "code": "package messages\n\n// Handshake message.\nClass HandshakeMessage;\n// Updated handshake message.\nClass HandshakeMessage2;\n// Message requesting to wait until node's SPI context initialize.\nClass HandshakeWaitMessage;\n// Node ID message.\nClass NodeIdMessage;\n// Recovery acknowledgment message.\nClass RecoveryLastReceivedMessage;\n", "des": "Contains implementation messages."}
{"index": 87, "repo": "ignite-core-2.15.0", "code": "package deployment\n\n// Listener for deployment events.\nInterface DeploymentListener;\n// Generic abstraction over deployed resource containing resource's name, class and corresponding class loader.\nInterface DeploymentResource;\n// Grid deployment SPI is in charge of deploying tasks and classes from different sources.\nInterface DeploymentSpi;\n// Simple adapter for DeploymentResource interface.\nClass DeploymentResourceAdapter;\n// This annotation is for all implementations of DeploymentSpi that may be ignored if peer class loading is disabled.\nAnnotation Type IgnoreIfPeerClassLoadingDisabled;\n", "des": "Contains APIs for deployment SPI."}
{"index": 88, "repo": "ignite-core-2.15.0", "code": "package local\n\n// Management MBean for LocalDeploymentSpi SPI.\nInterface LocalDeploymentSpiMBean;\n// Local deployment SPI that implements only within VM deployment on local node via LocalDeploymentSpi.register(ClassLoader, Class) method.\nClass LocalDeploymentSpi;\n", "des": "Contains default local deployment SPI implementation."}
{"index": 89, "repo": "ignite-core-2.15.0", "code": "package discovery\n\n// Facade interface representing DiscoveryDataBag object with discovery data collected in the grid.\nInterface DiscoveryDataBag.GridDiscoveryData;\n// Facade interface representing DiscoveryDataBag object with discovery data from joining node.\nInterface DiscoveryDataBag.JoiningNodeDiscoveryData;\n// Provides metrics to discovery SPI.\nInterface DiscoveryMetricsProvider;\n// Grid discovery SPI allows to discover remote nodes in grid.\nInterface DiscoverySpi;\n// Message to send across ring.\nInterface DiscoverySpiCustomMessage;\n// Handler for initial data exchange between Ignite nodes.\nInterface DiscoverySpiDataExchange;\n// Listener for grid node discovery events.\nInterface DiscoverySpiListener;\n// Generic MBean interface to monitor DiscoverySpi subsystem.\nInterface DiscoverySpiMBean;\n// Node authenticator.\nInterface DiscoverySpiNodeAuthenticator;\n// Marker interface for discovery thread on cluster server node.\nInterface IgniteDiscoveryThread;\n// Provides interface for GridComponent to collect and exchange discovery data both on joining node and on cluster nodes.\nClass DiscoveryDataBag;\n// Discovery notification object.\nClass DiscoveryNotification;\n// This annotation is for all implementations of DiscoverySpi that support topology snapshots history.\nAnnotation Type DiscoverySpiHistorySupport;\n// This annotation is for all implementations of DiscoverySpi that support topology mutable DiscoverySpiCustomMessages.\nAnnotation Type DiscoverySpiMutableCustomMessageSupport;\n// This annotation is for all implementations of DiscoverySpi that support proper node ordering.\nAnnotation Type DiscoverySpiOrderSupport;\n", "des": "Contains APIs for topology manager SPI."}
{"index": 90, "repo": "ignite-core-2.15.0", "code": "package isolated\n\n// Special discovery SPI implementation to start a single-node cluster in \"isolated\" mode.\nClass IsolatedDiscoverySpi;\n// Special isolated node.\nClass IsolatedNode;\n", "des": "Contains implementation of special \"isolated\" mode for single-node cluster."}
{"index": 91, "repo": "ignite-core-2.15.0", "code": "package tcp\n\n// Management bean for TcpDiscoverySpi.\nInterface TcpDiscoverySpiMBean;\n// Discovery SPI implementation that uses TCP/IP for node discovery.\nClass TcpDiscoverySpi;\n", "des": "Contains default TCP/IP implementation for discovery SPI."}
{"index": 92, "repo": "ignite-core-2.15.0", "code": "package internal\n\n// Carries discovery data in marshalled form and allows convenient way of converting it to and from DiscoveryDataBag objects.\nClass DiscoveryDataPacket;\n// \nClass FutureTask<T>;\n// Node for TcpDiscoverySpi.\nClass TcpDiscoveryNode;\n// Convenient way to represent topology for TcpDiscoverySpi\nClass TcpDiscoveryNodesRing;\n// Statistics for TcpDiscoverySpi.\nClass TcpDiscoveryStatistics;\n// State of local node TcpDiscoverySpi.\nEnum TcpDiscoverySpiState;\n", "des": "Contains internal implementation."}
{"index": 93, "repo": "ignite-core-2.15.0", "code": "package ipfinder\n\n// IP finder interface for TcpDiscoverySpi.\nInterface TcpDiscoveryIpFinder;\n// IP finder interface implementation adapter.\nClass TcpDiscoveryIpFinderAdapter;\n", "des": "Contains IP finder interface and adapter."}
{"index": 94, "repo": "ignite-core-2.15.0", "code": "package jdbc\n\n// SQL dialect to use with TcpDiscoveryJdbcIpFinder.\nInterface JdbcIpFinderDialect;\n// Basic JDBC dialect to use along with TcpDiscoveryJdbcIpFinder.\nClass BasicJdbcIpFinderDialect;\n// Oracle JDBC dialect to use along with TcpDiscoveryJdbcIpFinder.\nClass OracleJdbcIpFinderDialect;\n// JDBC-based IP finder.\nClass TcpDiscoveryJdbcIpFinder;\n", "des": "Contains JDBC IP finder implementation."}
{"index": 95, "repo": "ignite-core-2.15.0", "code": "package multicast\n\n// Multicast-based IP finder.\nClass TcpDiscoveryMulticastIpFinder;\n", "des": "Contains multicast-based IP finder."}
{"index": 96, "repo": "ignite-core-2.15.0", "code": "package sharedfs\n\n// Shared filesystem-based IP finder.\nClass TcpDiscoverySharedFsIpFinder;\n", "des": "Contains shared filesystem-based IP finder."}
{"index": 97, "repo": "ignite-core-2.15.0", "code": "package vm\n\n// IP Finder which works only with pre-configured list of IP addresses specified via TcpDiscoveryVmIpFinder.setAddresses(Collection) method.\nClass TcpDiscoveryVmIpFinder;\n", "des": "Contains local JVM-based IP finder."}
{"index": 98, "repo": "ignite-core-2.15.0", "code": "package messages\n\n// Base class to implement discovery messages.\nClass TcpDiscoveryAbstractMessage;\n// Abstract traceable message for TCP discovery.\nClass TcpDiscoveryAbstractTraceableMessage;\n// Message telling joining node that its authentication failed on coordinator.\nClass TcpDiscoveryAuthFailedMessage;\n// Message telling joining node that it failed coordinator's validation check.\nClass TcpDiscoveryCheckFailedMessage;\n// \nClass TcpDiscoveryClientAckResponse;\n// Metrics update message.\nClass TcpDiscoveryClientMetricsUpdateMessage;\n// Ping request.\nClass TcpDiscoveryClientPingRequest;\n// Ping request.\nClass TcpDiscoveryClientPingResponse;\n// Message telling that client node is reconnecting to topology.\nClass TcpDiscoveryClientReconnectMessage;\n// Message used to check whether a node is still connected to the topology.\nClass TcpDiscoveryConnectionCheckMessage;\n// Wrapped for custom message.\nClass TcpDiscoveryCustomEventMessage;\n// Message sent by coordinator when some operation handling is over.\nClass TcpDiscoveryDiscardMessage;\n// \nClass TcpDiscoveryDummyWakeupMessage;\n// Message telling joining node that new topology already contain different node with same ID.\nClass TcpDiscoveryDuplicateIdMessage;\n// Handshake request.\nClass TcpDiscoveryHandshakeRequest;\n// Handshake response.\nClass TcpDiscoveryHandshakeResponse;\n// Initial message sent by a node that wants to enter topology.\nClass TcpDiscoveryJoinRequestMessage;\n// Message telling joining node that it has loopback problem (misconfiguration).\nClass TcpDiscoveryLoopbackProblemMessage;\n// Metrics update message.\nClass TcpDiscoveryMetricsUpdateMessage;\n// \nClass TcpDiscoveryMetricsUpdateMessage.MetricsSet;\n// Message telling nodes that new node should be added to topology.\nClass TcpDiscoveryNodeAddedMessage;\n// Sent by coordinator across the ring to finish node add process.\nClass TcpDiscoveryNodeAddFinishedMessage;\n// Sent by node that has detected node failure to coordinator across the ring, then sent by coordinator across the ring.\nClass TcpDiscoveryNodeFailedMessage;\n// Sent by node that is stopping to coordinator across the ring, then sent by coordinator across the ring.\nClass TcpDiscoveryNodeLeftMessage;\n// Ping request.\nClass TcpDiscoveryPingRequest;\n// Ping response.\nClass TcpDiscoveryPingResponse;\n// \nClass TcpDiscoveryRingLatencyCheckMessage;\n", "des": "Contains implementation messages."}
{"index": 99, "repo": "ignite-core-2.15.0", "code": "package failover\n\n// This interface defines a set of operations available to failover SPI one a given failed job.\nInterface FailoverContext;\n// Failover SPI provides developer with ability to supply custom logic for handling failed execution of a grid job.\nInterface FailoverSpi;\n", "des": "Contains APIs for failover SPI."}
{"index": 100, "repo": "ignite-core-2.15.0", "code": "package always\n\n// Management bean for AlwaysFailoverSpi.\nInterface AlwaysFailoverSpiMBean;\n// Failover SPI that always reroutes a failed job to another node.\nClass AlwaysFailoverSpi;\n", "des": "Contains default \"always\" failover SPI."}
{"index": 101, "repo": "ignite-core-2.15.0", "code": "package jobstealing\n\n// Management bean for JobStealingFailoverSpi.\nInterface JobStealingFailoverSpiMBean;\n// Job stealing failover SPI needs to always be used in conjunction with JobStealingCollisionSpi SPI.\nClass JobStealingFailoverSpi;\n", "des": "Contains job stealing failover SPI."}
{"index": 102, "repo": "ignite-core-2.15.0", "code": "package never\n\n// Management bean for NeverFailoverSpi.\nInterface NeverFailoverSpiMBean;\n// This class provides failover SPI implementation that never fails over.\nClass NeverFailoverSpi;\n", "des": "Contains \"never\" failover SPI."}
{"index": 103, "repo": "ignite-core-2.15.0", "code": "package eventstorage\n\n// This SPI provides local node events storage.\nInterface EventStorageSpi;\n// No-op implementation of EventStorageSpi.\nClass NoopEventStorageSpi;\n", "des": "Contains APIs for event storage SPI."}
{"index": 104, "repo": "ignite-core-2.15.0", "code": "package memory\n\n// Management bean for MemoryEventStorageSpi.\nInterface MemoryEventStorageSpiMBean;\n// In-memory EventStorageSpi implementation.\nClass MemoryEventStorageSpi;\n", "des": "Contains default in-memory implementation for event storage SPI."}
{"index": 105, "repo": "ignite-core-2.15.0", "code": "package failure\n\n// Provides facility to handle failures by custom user implementations, which can be configured by IgniteConfiguration.setFailureHandler(FailureHandler) method.\nInterface FailureHandler;\n// Abstract superclass for FailureHandler implementations.\nClass AbstractFailureHandler;\n// Failure context contains information about failure type and exception if applicable.\nClass FailureContext;\n// Just ignores any failure.\nClass NoOpFailureHandler;\n// This handler could be used only with ignite.\nClass RestartProcessFailureHandler;\n// Handler will stop node in case of critical error using IgnitionEx.stop(nodeName, true, true) call.\nClass StopNodeFailureHandler;\n// Handler will try to stop node if tryStop value is true.\nClass StopNodeOrHaltFailureHandler;\n// Types of failures.\nEnum FailureType;\n", "des": "Contains Failure handling public API with standard FailureHandler implementations."}
{"index": 106, "repo": "ignite-core-2.15.0", "code": "package segmentation\n\n// This is interface for segmentation (a.k.a \"split-brain\" problem) resolvers.\nInterface SegmentationResolver;\n// Policy that defines how node will react on topology segmentation.\nEnum SegmentationPolicy;\n", "des": "Contains segmentation \"split-brain\" related classes."}
{"index": 107, "repo": "ignite-core-2.15.0", "code": "package plugin\n\n// Cache plugin configuration.\nInterface CachePluginConfiguration<K,V>;\n// Cache plugin context.\nInterface CachePluginContext<C extends CachePluginConfiguration>;\n// Cache plugin provider is a point for processing of properties which provide specific CachePluginConfiguration.\nInterface CachePluginProvider<C extends CachePluginConfiguration>;\n// The CacheTopologyValidatorProvider is used to pass an implementation of TopologyValidators for a specific cache through Ignite plugin extensions mechanism.\nInterface CacheTopologyValidatorProvider;\n// Marker interface for extensions.\nInterface Extension;\n// Context that allows to register extensions.\nInterface ExtensionRegistry;\n// Marker interface for all Ignite plugins.\nInterface IgnitePlugin;\n// Plugin configuration.\nInterface PluginConfiguration;\n// Plugin context.\nInterface PluginContext;\n// Pluggable Ignite component.\nInterface PluginProvider<C extends PluginConfiguration>;\n// Exception thrown if plugin is not found.\nClass PluginNotFoundException;\n// Plugin validation exception.\nClass PluginValidationException;\n", "des": "Contains plugins management API."}
{"index": 108, "repo": "ignite-core-2.15.0", "code": "package communication\n\n// Message factory for all communication messages registered using IgniteMessageFactory.register(short, Supplier) method call.\nInterface IgniteMessageFactory;\n// The interface of IO Messaging Pool Extension.\nInterface IoPool;\n// Base class for all communication messages.\nInterface Message;\n// Use MessageFactoryProvider instead.\nInterface MessageFactory;\n// Provider of communication message factories.\nInterface MessageFactoryProvider;\n// Provides a custom format for communication messages.\nInterface MessageFormatter;\n// Communication message reader.\nInterface MessageReader;\n// Communication message writer.\nInterface MessageWriter;\n// Enum representing possible types of collection items.\nEnum MessageCollectionItemType;\n", "des": "Contains extendable components for communication."}
{"index": 109, "repo": "ignite-core-2.15.0", "code": "package platform\n\n// Platform cache configuration handler: updates plugin configuration using data sent from platform code.\nInterface PlatformCachePluginConfigurationClosure;\n// Factory for @PlatformCachePluginConfigurationClosure with a unique id.\nInterface PlatformCachePluginConfigurationClosureFactory;\n// Platform configuration handler: updates plugin configuration using data sent from platform code.\nInterface PlatformPluginConfigurationClosure;\n// Factory for @PlatformPluginConfigurationClosure with a unique id.\nInterface PlatformPluginConfigurationClosureFactory;\n", "des": "Contains platform plugins management API."}
{"index": 110, "repo": "ignite-core-2.15.0", "code": "package logger\n\n// Logger which does not output anything.\nClass NullLogger;\n", "des": "Contains logging functionality used throughout the system."}
{"index": 111, "repo": "ignite-core-2.15.0", "code": "package java\n\n// Logger to use with Java logging.\nClass JavaLogger;\n// File logging handler which skips all the messages until node ID is set.\nClass JavaLoggerFileHandler;\n// Formatter for JUL logger.\nClass JavaLoggerFormatter;\n", "des": "Contains Java logging implementation for logging."}
{"index": 112, "repo": "ignite-core-2.15.0", "code": "package startup\n\n// Basic warm-up closure which warm-ups cache operations.\nClass BasicWarmupClosure;\n", "des": "Contains Ignite runtime startup classes."}
{"index": 113, "repo": "ignite-core-2.15.0", "code": "package cmdline\n\n// About dialog.\nClass AboutDialog;\n// This class defines command-line Ignite Capture Data Change startup.\nClass CdcCommandLineStartup;\n// Generates a random number and prints it to the console.\nClass CommandLineRandomNumberGenerator;\n// This class defines command-line Ignite startup.\nClass CommandLineStartup;\n// This class is a workaround for a versatile problems with passing arguments to the Ignite Windows batch launcher scripts.\nClass CommandLineTransformer;\n", "des": "Contains default command line startup."}
{"index": 114, "repo": "ignite-core-2.15.0", "code": "package marshaller\n\n// Marshaller allows to marshal or unmarshal objects in grid.\nInterface Marshaller;\n// Marshaller context.\nInterface MarshallerContext;\n// Base class for marshallers.\nClass AbstractMarshaller;\n// Marshaller allowing for Ignition.localIgnite() calls.\nClass AbstractNodeNameAwareMarshaller;\n// Controls what classes should be excluded from marshalling by default.\nClass MarshallerExclusions;\n// Utility marshaller methods.\nClass MarshallerUtils;\n", "des": "Contains various supported marshallers."}
{"index": 115, "repo": "ignite-core-2.15.0", "code": "package jdk\n\n// Implementation of Marshaller based on JDK serialization mechanism.\nClass JdkMarshaller;\n", "des": "Contains JDK java.io based marshaller."}
{"index": 116, "repo": "ignite-core-2.15.0", "code": "package binary\n\n// Collection factory.\nInterface BinaryCollectionFactory<K>;\n// Binary object field.\nInterface BinaryField;\n// Type and field ID mapper for binary objects.\nInterface BinaryIdMapper;\n// Interface that allows to implement custom serialization logic for binary objects.\nInterface Binarylizable;\n// Map factory.\nInterface BinaryMapFactory<K,V>;\n// Maps type and field names to different names.\nInterface BinaryNameMapper;\n// Wrapper for binary object in binary format.\nInterface BinaryObject;\n// Binary object builder.\nInterface BinaryObjectBuilder;\n// Raw reader for binary objects.\nInterface BinaryRawReader;\n// Raw writer for binary object.\nInterface BinaryRawWriter;\n// Reader for binary objects used in Binarylizable implementations.\nInterface BinaryReader;\n// Interface that allows to implement custom serialization logic for binary objects.\nInterface BinarySerializer;\n// Binary type meta data.\nInterface BinaryType;\n// Writer for binary object used in Binarylizable implementations.\nInterface BinaryWriter;\n// Base binary ID mapper implementation.\nClass BinaryBasicIdMapper;\n// Base binary name mapper implementation.\nClass BinaryBasicNameMapper;\n// Binary serializer which writes object fields using reflection.\nClass BinaryReflectiveSerializer;\n// Defines configuration properties for a specific binary type.\nClass BinaryTypeConfiguration;\n// Exception indicating that class needed for deserialization of binary object does not exist.\nClass BinaryInvalidTypeException;\n// Exception indicating binary object serialization error.\nClass BinaryObjectException;\n", "des": "Contains Ignite Binary Objects API classes."}
{"index": 117, "repo": "ignite-core-2.15.0", "code": "package platform\n\n// Object factory used for advanced interop between platform and Java.\nInterface PlatformJavaObjectFactory<T>;\n// Interop platform type.\nEnum PlatformType;\n// Annotation for setting mapping between java interface's method and platform service's method.\nAnnotation Type PlatformServiceMethod;\n", "des": "Contains platform-related classes."}
{"index": 118, "repo": "ignite-core-2.15.0", "code": "package cpp\n\n// Platform CPP configuration.\nClass PlatformCppConfiguration;\n", "des": "Contains C++ platform-related classes."}
{"index": 119, "repo": "ignite-core-2.15.0", "code": "package dotnet\n\n// AffinityFunction implementation which can be used to configure .NET affinity function in Java Spring configuration.\nClass PlatformDotNetAffinityFunction;\n// Mirror of .Net class BinaryConfiguration.cs\nClass PlatformDotNetBinaryConfiguration;\n// Mirror of .Net class BinaryTypeConfiguration.cs\nClass PlatformDotNetBinaryTypeConfiguration;\n// Wrapper for .NET cache store implementations.\nClass PlatformDotNetCacheStoreFactory;\n// Cache store factory that wraps native factory object.\nClass PlatformDotNetCacheStoreFactoryNative;\n// Mirror of .Net class IgniteConfiguration.cs\nClass PlatformDotNetConfiguration;\n// Lifecycle bean implementation which can be used to configure .Net lifecycle beans in Java Spring configuration.\nClass PlatformDotNetLifecycleBean;\n", "des": "Contains .Net platform-related classes."}
{"index": 120, "repo": "ignite-core-2.15.0", "code": "package encryption\n\n// SPI provides encryption features for an Ignite.\nInterface EncryptionSpi;\n", "des": "Contains APIs for encryption SPI."}
{"index": 121, "repo": "ignite-core-2.15.0", "code": "package keystore\n\n// EncryptionKey implementation based on java security.\nClass KeystoreEncryptionKey;\n// EncryptionSPI implementation base on JDK provided cipher algorithm implementations.\nClass KeystoreEncryptionSpi;\n", "des": "Contains encryption SPI implementation based on standard jdk keystore."}
{"index": 122, "repo": "ignite-core-2.15.0", "code": "package noop\n\n// No operation EncryptionSPI implementation.\nClass NoopEncryptionSpi;\n", "des": "Contains no-op encryption SPI implementation."}
{"index": 123, "repo": "ignite-core-2.15.0", "code": "package metric\n\n// Interface for the metrics that holds boolean primitive.\nInterface BooleanMetric;\n// Interface for the metrics that holds double primitive.\nInterface DoubleMetric;\n// Histogram metric calculates counts of measurements that gets into each bounds interval.\nInterface HistogramMetric;\n// Interface for the metrics that holds int primitive.\nInterface IntMetric;\n// Interface for the metrics that holds long primitive.\nInterface LongMetric;\n// Base interface for all metrics.\nInterface Metric;\n// Exporter of metric information to the external recipient.\nInterface MetricExporterSpi;\n// Interface for the metrics that holds typed value.\nInterface ObjectMetric<T>;\n// Read only metric manager.\nInterface ReadOnlyMetricManager;\n// Read only metric registry.\nInterface ReadOnlyMetricRegistry;\n", "des": "Contains common classes and interfaces for metric SPI implementations."}
{"index": 124, "repo": "ignite-core-2.15.0", "code": "package jmx\n\n// Overview Ignite provides this default built-in implementation of MetricExporterSpi it exports metrics as JMX beans.\nClass JmxMetricExporterSpi;\n// MBean for exporting values of metric registry.\nClass MetricRegistryMBean;\n// Base class for read only DynamicMBean implementations.\nClass ReadOnlyDynamicMBean;\n", "des": "Contains JMX based implementation of MetricExporterSpi."}
{"index": 125, "repo": "ignite-core-2.15.0", "code": "package log\n\n// This SPI implementation exports metrics to Ignite log.\nClass LogExporterSpi;\n", "des": "Contains push to log implementation of MetricExporterSpi."}
{"index": 126, "repo": "ignite-core-2.15.0", "code": "package noop\n\n// No-op implementation of metric exporter SPI.\nClass NoopMetricExporterSpi;\n", "des": "Contains no-op implementation of MetricExporterSpi."}
{"index": 127, "repo": "ignite-core-2.15.0", "code": "package systemview\n\n// Read only system view registry.\nInterface ReadOnlySystemViewRegistry;\n// Exporter of system view to the external recepient.\nInterface SystemViewExporterSpi;\n", "des": "Contains common classes and interfaces for system view SPI implementations."}
{"index": 128, "repo": "ignite-core-2.15.0", "code": "package view\n\n// System view with filtering capabilities.\nInterface FiltrableSystemView<R>;\n// Implementation provides data for some internal Ignite objects.\nInterface SystemView<R>;\n// Utility class for quick iteration over row properties.\nInterface SystemViewRowAttributeWalker<R>;\n// Attribute visitor.\nInterface SystemViewRowAttributeWalker.AttributeVisitor;\n// Attribute visitor.\nInterface SystemViewRowAttributeWalker.AttributeWithValueVisitor;\n// Baseline node attribute representation for a SystemView.\nClass BaselineNodeAttributeView;\n// Baseline topology node representation for a SystemView.\nClass BaselineNodeView;\n// BinaryMetadata representation for the SystemView.\nClass BinaryMetadataView;\n// Cache group IO statistics representation for a SystemView.\nClass CacheGroupIoView;\n// Cache group representation for the SystemView.\nClass CacheGroupView;\n// Pages-list representation for a SystemView.\nClass CachePagesListView;\n// Cache representation for a SystemView.\nClass CacheView;\n// Client connection system view row.\nClass ClientConnectionView;\n// Cluster node representation for a SystemView.\nClass ClusterNodeView;\n// Compute job representation for a SystemView.\nClass ComputeJobView;\n// Compute task representation for a SystemView.\nClass ComputeTaskView;\n// Configuration value representation for a SystemView.\nClass ConfigurationView;\n// Continuous query representation for a SystemView.\nClass ContinuousQueryView;\n// Metastorage key representation for a SystemView.\nClass MetastorageView;\n// Metrics representation for a SystemView.\nClass MetricsView;\n// Node attribute representation for a SystemView.\nClass NodeAttributeView;\n// Node metrics representation for a SystemView.\nClass NodeMetricsView;\n// Pages-list representation for a SystemView.\nClass PagesListView;\n// Pages timestamp histogramm representation for a SystemView.\nClass PagesTimestampHistogramView;\n// Partition state representation for a SystemView.\nClass PartitionStateView;\n// Scan query iterator representation for a SystemView.\nClass ScanQueryView;\n// Service representation for a SystemView.\nClass ServiceView;\n// Snapshot representation for a SystemView.\nClass SnapshotView;\n// SQL query history representation for a SystemView.\nClass SqlQueryHistoryView;\n", "des": "Contains SystemView clases that exists in Ignite."}
{"index": 129, "repo": "ignite-core-2.15.0", "code": "package tracing\n\n// Logical piece of a trace that insulates spi specific logic.\nInterface SpiSpecificSpan;\n// Allows to configure tracing, read the configuration and restore it to the defaults.\nInterface TracingConfigurationManager;\n// Tracing SPI interface.\nInterface TracingSpi<S extends SpiSpecificSpan>;\n// Noop and null-safe implementation of SpiSpecificSpan.\nClass NoopSpiSpecificSpan;\n// Noop and null-safe implementation of Tracing SPI.\nClass NoopTracingSpi;\n// Specifies to which traces, specific configuration will be applied.\nClass TracingConfigurationCoordinates;\n// TracingConfigurationCoordinates builder.\nClass TracingConfigurationCoordinates.Builder;\n// Set of tracing configuration parameters like sampling rate or included scopes.\nClass TracingConfigurationParameters;\n// TracingConfigurationParameters builder.\nClass TracingConfigurationParameters.Builder;\n// Tracing span scope.\nEnum Scope;\n// Various statuses for Spans execution.\nEnum SpanStatus;\n", "des": "Contains common classes and interfaces for tracing SPI implementations."}
{"index": 130, "repo": "ignite-core-2.15.0", "code": "package internal\n\n// Message with specified custom executor must be processed in the appropriate thread pool.\nInterface ExecutorAwareMessage;\n// Interface for all main internal Ignite components (managers and processors).\nInterface GridComponent;\n// Internal wrapper interface for custom resource injection logic.\nInterface GridInternalWrapper<T>;\n// \nInterface GridKernalContext;\n// This interface guards access to implementations of public methods that access kernal functionality from the following main API interfaces: ClusterGroup Note that this kernal gateway should not be used to guard against method from the following non-rich interfaces since their implementations are already managed by their respective implementing classes: Ignite ClusterNode Kernal gateway is also responsible for notifying various futures about the change in kernal state so that issued futures could properly interrupt themselves when kernal becomes unavailable while future is held externally by the user.\nInterface GridKernalGateway;\n// Interception listener is notified about method apply.\nInterface GridProxyListener;\n// Internal task session interface.\nInterface GridTaskSessionInternal;\n// \nInterface IgniteDiagnosticAware;\n// Extended Grid interface which provides some additional methods required for kernal and Visor.\nInterface IgniteEx;\n// Extension for standard Future interface.\nInterface IgniteInternalFuture<R>;\n// Extended interface that provides additional internal methods for managing services.\nInterface IgniteServicesEx;\n// Extended interface to work with system transactions.\nInterface IgniteTransactionsEx;\n// Marker interface of invalid environment exception.\nInterface InvalidEnvironmentException;\n// Represents the base interface for all Platform Compute Jobs that wrap and execute user code.\nInterface PlatformSecurityAwareJob;\n// The base feature class.\nInterface ThinProtocolFeature;\n// Adapter for IgniteAsyncSupport.\nClass AsyncSupportAdapter<T extends IgniteAsyncSupport>;\n// Task that checks whether last checkpoint is applicable for providing history for all groups and partitions that are passed as parameters.\nClass CheckCpHistTask;\n// Set of classes represented as prefix tree.\nClass ClassSet;\n// Local node metrics MBean.\nClass ClusterLocalNodeMetricsMXBeanImpl;\n// Cluster metrics MBean.\nClass ClusterMetricsMXBeanImpl;\n// Implementation for ClusterMetrics interface.\nClass ClusterMetricsSnapshot;\n// ComputeMXBean implementation.\nClass ComputeMXBeanImpl;\n", "des": "Contains main implementation."}
{"index": 131, "repo": "ignite-core-2.15.0", "code": "package binary\n\n// \nInterface BinaryFieldEx;\n// Interface to compute hash codes for new binary objects and compare them for equality.\nInterface BinaryIdentityResolver;\n// Binary metadata handler.\nInterface BinaryMetadataHandler;\n// Extended binary object interface.\nInterface BinaryObjectEx;\n// Interface allowing for positioned read.\nInterface BinaryPositionReadable;\n// Extended reader interface.\nInterface BinaryRawReaderEx;\n// Extended writer interface.\nInterface BinaryRawWriterEx;\n// Holder for handles.\nInterface BinaryReaderHandlesHolder;\n// Interface to perform write replace.\nInterface BinaryWriteReplacer;\n// Abstract identity resolver with common routines.\nClass BinaryAbstractIdentityResolver;\n// Binary object representing array.\nClass BinaryArray;\n// Identity resolver implementation which compares raw array content of the binary object.\nClass BinaryArrayIdentityResolver;\n// Simple caching metadata handler.\nClass BinaryCachingMetadataHandler;\n// Binary class descriptor.\nClass BinaryClassDescriptor;\n// Binary context.\nClass BinaryContext;\n// Binary context holder.\nClass BinaryContextHolder;\n// Ignite distinguishes between array of objects and array of enums.\nClass BinaryEnumArray;\n// Cache for enum constants.\nClass BinaryEnumCache;\n// Binary enum object.\nClass BinaryEnumObjectImpl;\n// Field accessor to speedup access.\nClass BinaryFieldAccessor;\n// Implementation of binary field descriptor.\nClass BinaryFieldImpl;\n// Binary field metadata.\nClass BinaryFieldMetadata;\n// Internal binary mapper.\nClass BinaryInternalMapper;\n// Implementation of Marshaller that lets to serialize and deserialize all objects in the binary format.\nClass BinaryMarshaller;\n// Binary metadata which is passed over a wire.\nClass BinaryMetadata;\n// Write replacer based on method invocation.\nClass BinaryMethodWriteReplacer;\n// No-op metadata handler.\nClass BinaryNoopMetadataHandler;\n// Internal binary object interface.\nClass BinaryObjectExImpl;\n// Binary object implementation.\nClass BinaryObjectImpl;\n// Binary object implementation over offheap memory\nClass BinaryObjectOffheapImpl;\n// Primitives writer.\nClass BinaryPrimitives;\n// Binary reader implementation.\nClass BinaryReaderExImpl;\n// Reader handles.\nClass BinaryReaderHandles;\n// Simple holder for handles.\nClass BinaryReaderHandlesHolderImpl;\n// Schema describing binary object content.\nClass BinarySchema;\n", "des": "Contains binary APIs internal implementation."}
{"index": 132, "repo": "ignite-core-2.15.0", "code": "package builder\n\n// \nInterface BinaryLazyValue;\n// \nClass BinaryBuilderEnum;\n// \nClass BinaryBuilderReader;\n// \nClass BinaryModifiableLazyValue;\n// \nClass BinaryObjectBuilderImpl;\n// \nClass BinaryPlainBinaryObject;\n", "des": "Contains classes specific to binary builder API."}
{"index": 133, "repo": "ignite-core-2.15.0", "code": "package streams\n\n// Binary input stream.\nInterface BinaryInputStream;\n// Memory allocator chunk.\nInterface BinaryMemoryAllocatorChunk;\n// Binary output stream.\nInterface BinaryOutputStream;\n// Binary stream.\nInterface BinaryStream;\n// Binary abstract input stream.\nClass BinaryAbstractInputStream;\n// Base binary output stream.\nClass BinaryAbstractOutputStream;\n// Binary abstract stream.\nClass BinaryAbstractStream;\n// Input stream over ByteBuffer.\nClass BinaryByteBufferInputStream;\n// Binary heap input stream.\nClass BinaryHeapInputStream;\n// Binary heap output stream.\nClass BinaryHeapOutputStream;\n// On-heap memory allocator.\nClass BinaryMemoryAllocator;\n// Binary off-heap input stream.\nClass BinaryOffheapInputStream;\n// Binary offheap output stream.\nClass BinaryOffheapOutputStream;\n", "des": "Contains binary APIs implementation for streams."}
{"index": 134, "repo": "ignite-core-2.15.0", "code": "package executor\n\n// An ExecutorService that executes each submitted task in grid through Ignite instance, normally configured using Ignite.executorService() method.\nClass GridExecutorService;\n", "des": "Contains grid executor service implementation."}
{"index": 135, "repo": "ignite-core-2.15.0", "code": "package managers\n\n// This interface defines life-cycle for kernal manager.\nInterface GridManager;\n// Convenience adapter for grid managers.\nClass GridManagerAdapter<T extends IgniteSpi>;\n// Class that registers and unregisters MBeans for kernal.\nClass IgniteMBeansManager;\n", "des": "TODO."}
{"index": 136, "repo": "ignite-core-2.15.0", "code": "package checkpoint\n\n// This class defines a checkpoint manager.\nClass GridCheckpointManager;\n// This class defines checkpoint request.\nClass GridCheckpointRequest;\n", "des": "TODO."}
{"index": 137, "repo": "ignite-core-2.15.0", "code": "package collision\n\n// Adapter for CollisionJobContext.\nClass GridCollisionJobContextAdapter;\n// This class defines a collision manager.\nClass GridCollisionManager;\n", "des": "TODO."}
{"index": 138, "repo": "ignite-core-2.15.0", "code": "package communication\n\n// Node disconnect listener interface.\nInterface GridDisconnectListener;\n// Listener for messages received from remote nodes.\nInterface GridMessageListener;\n// Class represents a handler for the set of files considered to be transferred from the remote node.\nInterface TransmissionHandler;\n// This class represents the internal grid communication (input and output) manager which is placed as a layer of indirection between the IgniteKernal and CommunicationSpi.\nClass GridIoManager;\n// Wrapper for all grid messages.\nClass GridIoMessage;\n// Message factory implementation.\nClass GridIoMessageFactory;\n// This enumeration defines different types of communication message processing by the communication manager.\nClass GridIoPolicy;\n// \nClass GridIoSecurityAwareMessage;\n// User message wrapper.\nClass GridIoUserMessage;\n// \nClass IgniteIoTestMessage;\n// Message factory implementation which is responsible for instantiation of all communication messages.\nClass IgniteMessageFactoryImpl;\n// Wrapper of Runnable which incject tracing to execution.\nClass TraceRunnable;\n// Class represents a file meta information to send to the remote node.\nClass TransmissionMeta;\n// Class represents ways of data handling for a file ready to be sent through an opened transmission sender session.\nEnum TransmissionPolicy;\n// Exception is used to cancel a file transmission operation on the receiver.\nClass TransmissionCancelledException;\n", "des": "TODO."}
{"index": 139, "repo": "ignite-core-2.15.0", "code": "package deployment\n\n// Deployment info.\nInterface GridDeploymentInfo;\n// Interface for all deployment stores.\nInterface GridDeploymentStore;\n// Represents single class deployment.\nClass GridDeployment;\n// Deployment info bean.\nClass GridDeploymentInfoBean;\n// Deployment manager.\nClass GridDeploymentManager;\n// Deployment metadata.\nClass GridDeploymentMetadata;\n// Deployment storage for DeploymentMode.PRIVATE and DeploymentMode.ISOLATED modes.\nClass GridDeploymentPerLoaderStore;\n// Deployment storage for DeploymentMode.SHARED and DeploymentMode.CONTINUOUS modes.\nClass GridDeploymentPerVersionStore;\n// Deployment request.\nClass GridDeploymentRequest;\n// Grid deployment response containing requested resource bytes.\nClass GridDeploymentResponse;\n// \nClass P2PClassLoadingIssues;\n// A specialication of ClassNotFoundException thrown when a class cannot be loaded during P2P class-loading.\nClass P2PClassNotFoundException;\n", "des": "TODO."}
{"index": 140, "repo": "ignite-core-2.15.0", "code": "package gg\n\n// Custom stream protocol handler implementation.\nClass GridProtocolHandler;\n// Connection implementation for custom protocol.\nClass GridUrlConnection;\n", "des": "Grid stream protocol implementation."}
{"index": 141, "repo": "ignite-core-2.15.0", "code": "package discovery\n\n// Listener interface.\nInterface CustomEventListener<T extends DiscoveryCustomMessage>;\n// DiscoveryCustomMessage messages are handled by discovery protocol which provides some guarantees around them.\nInterface DiscoveryCustomMessage;\n// DiscoveryServerOnlyCustomMessage is the special subtype of the DiscoveryCustomMessage message that is delivered only on server nodes of the cluster.\nInterface DiscoveryServerOnlyCustomMessage;\n// \nInterface IgniteClusterNode;\n// \nInterface IgniteDiscoverySpi;\n// For TESTING only.\nInterface IgniteDiscoverySpiInternalListener;\n// Cluster metrics proxy.\nClass ClusterMetricsImpl;\n// Class is needed for map UUID to consistent id and vice versa.\nClass ConsistentIdMapper;\n// \nClass CustomMessageWrapper;\n// \nClass DiscoCache;\n// Information about local join event.\nClass DiscoveryLocalJoinData;\n// \nClass DiscoveryMessageResultsCollector<M,R>;\n// \nClass DiscoveryMessageResultsCollector.NodeMessage<M>;\n// Discovery SPI manager.\nClass GridDiscoveryManager;\n// Topology snapshot managed by discovery manager.\nClass GridDiscoveryTopologySnapshot;\n// Extends CustomMessageWrapper with ID of security subject that initiated the current message.\nClass SecurityAwareCustomMessageWrapper;\n// Exception which can be used to access a message which failed to be deserialized completely using Java serialization.\nClass IncompleteDeserializationException;\n", "des": "TODO."}
{"index": 142, "repo": "ignite-core-2.15.0", "code": "package encryption\n\n// Provider for cache's encryption keys.\nInterface EncryptionCacheKeyProvider;\n// Cache group page stores scanner.\nClass CacheGroupPageScanner;\n// Change cache group encryption key request.\nClass ChangeCacheEncryptionRequest;\n// Encryption features MBean.\nClass EncryptionMXBeanImpl;\n// Generate encryption key request.\nClass GenerateEncryptionKeyRequest;\n// Generate encryption key response.\nClass GenerateEncryptionKeyResponse;\n// Manages cache keys and EncryptionSpi instances.\nClass GridEncryptionManager;\n// \nClass GridEncryptionManager.EmptyResult;\n// Key change future.\nClass GridEncryptionManager.KeyChangeFuture;\n// \nClass GridEncryptionManager.NodeEncryptionKeys;\n// Cache group encryption key with identifier.\nClass GroupKey;\n// Cache group encryption key with identifier.\nClass GroupKeyEncrypted;\n// \nClass ReencryptStateUtils;\n", "des": "Encryption manager classes."}
{"index": 143, "repo": "ignite-core-2.15.0", "code": "package eventstorage\n\n// Internal listener for discovery events.\nInterface DiscoveryEventListener;\n// Listener for asynchronous local node grid events.\nInterface GridLocalEventListener;\n// Marker interface for listeners called before 'regular' listeners.\nInterface HighPriorityListener;\n// Grid event storage SPI manager.\nClass GridEventStorageManager;\n// Event storage message.\nClass GridEventStorageMessage;\n", "des": "TODO."}
{"index": 144, "repo": "ignite-core-2.15.0", "code": "package failover\n\n// GridFailoverContext implementation.\nClass GridFailoverContextImpl;\n// Grid failover spi manager.\nClass GridFailoverManager;\n", "des": "TODO."}
{"index": 145, "repo": "ignite-core-2.15.0", "code": "package indexing\n\n// Manages cache indexing.\nClass GridIndexingManager;\n// Task that rebuilds indexes.\nClass IndexesRebuildTask;\n", "des": "Indexing manager classes."}
{"index": 146, "repo": "ignite-core-2.15.0", "code": "package loadbalancer\n\n// This adapter allows for graceful exception when load balancer gets marshalled.\nClass GridLoadBalancerAdapter;\n// Load balancing manager.\nClass GridLoadBalancerManager;\n", "des": "TODO."}
{"index": 147, "repo": "ignite-core-2.15.0", "code": "package optimized\n\n// ID mapper.\nInterface OptimizedMarshallerIdMapper;\n// Optimized implementation of Marshaller.\nClass OptimizedMarshaller;\n// Optimized object output stream.\nClass OptimizedObjectOutputStream;\n// \nClass OptimizedObjectPooledStreamRegistry;\n// \nClass OptimizedObjectSharedStreamRegistry;\n// \nClass OptimizedMarshallerInaccessibleClassException;\n", "des": "Contains Optimized marshaller."}
{"index": 148, "repo": "ignite-core-2.15.0", "code": "package mxbean\n\n// Extension of standard Java MBean.\nClass IgniteStandardMXBean;\n", "des": "Contains internal mxbeans stuff."}
{"index": 149, "repo": "ignite-core-2.15.0", "code": "package processors\n\n// Interface for all processors.\nInterface GridProcessor;\n// Advanced parent adapter for all processor.\nClass GridProcessorAdapter;\n", "des": "Package with Apache Ignite internal Processors."}
{"index": 150, "repo": "ignite-core-2.15.0", "code": "package affinity\n\n// Cached affinity calculations.\nInterface AffinityAssignment;\n// Interface for historical calculated affinity assignment.\nInterface HistoryAffinityAssignment;\n// \nClass AffinityTopologyVersion;\n// \nClass GridAffinityAssignment;\n// Affinity cached function.\nClass GridAffinityAssignmentCache;\n// Cached affinity calculations V2.\nClass GridAffinityAssignmentV2;\n// Cache affinity function context implementation.\nClass GridAffinityFunctionContextImpl;\n// Data affinity processor.\nClass GridAffinityProcessor;\n// Heap-space optimized version of calculated affinity assignment.\nClass HistoryAffinityAssignmentImpl;\n// Shallow copy that contains reference to delegate HistoryAffinityAssignment.\nClass HistoryAffinityAssignmentShallowCopy;\n// \nClass IdealAffinityAssignment;\n", "des": "Data affinity processor."}
{"index": 151, "repo": "ignite-core-2.15.0", "code": "package cache\n\n// It's a marker interface for detecting GridCacheDeploymentManager$CacheClassLoader.\nInterface CacheClassLoaderMarker;\n// Splits cache configuration into two parts that can be serialized, deserialized separately.\nInterface CacheConfigurationSplitter;\n// Conflict resolver manager.\nInterface CacheConflictResolutionManager<K,V>;\n// \nInterface CacheEntryPredicate;\n// \nInterface CacheEvictionManager;\n// \nInterface CacheLockCandidates;\n// \nInterface CacheObject;\n// Context to get value of cache object.\nInterface CacheObjectValueContext;\n// Cache partition exchange worker task marker interface.\nInterface CachePartitionExchangeWorkerTask;\n// \nInterface CacheWeakQueryIteratorsHolder.WeakReferenceCloseableIterator<T>;\n// Update future for atomic cache.\nInterface GridCacheAtomicFuture<R>;\n// Concurrent cache map.\nInterface GridCacheConcurrentMap;\n// Deployable cache message.\nInterface GridCacheDeployable;\n// Internal API for cache entry ('Ex' stands for extended).\nInterface GridCacheEntryEx;\n// This interface should be implemented by all distributed futures.\nInterface GridCacheFuture<R>;\n// Marker interface using in cache implementations.\nInterface GridCacheInternal;\n// Lock and Unlock callbacks.\nInterface GridCacheLockCallback;\n// Interface for cache managers.\nInterface GridCacheManager<K,V>;\n// Factory for cache entries.\nInterface GridCacheMapEntryFactory;\n// Cache preloader that is responsible for loading cache entries either from remote nodes (for distributed cache) or anywhere else at cache startup.\nInterface GridCachePreloader;\n// Cache manager shared across all caches.\nInterface GridCacheSharedManager<K,V>;\n// \nInterface GridCacheUtils.BackupPostProcessingClosure;\n// Distributed future aware of lock version.\nInterface GridCacheVersionedFuture<T>;\n// Wrapper for ExpiryPolicy used to track information about cache entries whose time to live was modified after access.\nInterface IgniteCacheExpiryPolicy;\n// \nInterface IgniteCacheOffheapManager;\n// \nInterface IgniteCacheOffheapManager.CacheDataStore;\n// \nInterface IgniteCacheOffheapManager.OffheapInvokeClosure;\n// Cache proxy.\nInterface IgniteCacheProxy<K,V>;\n", "des": "This package contain cache-related processors & persistence implementation."}
{"index": 152, "repo": "ignite-core-2.15.0", "code": "package binary\n\n// Interface allows any component to register for events of binary metadata updates.\nInterface BinaryMetadataUpdatedListener;\n// \nInterface CacheObjectBinaryProcessorImpl.TestBinaryContext.TestBinaryContextListener;\n// Key for binary metadata.\nClass BinaryMetadataKey;\n// Binary processor implementation.\nClass CacheObjectBinaryProcessorImpl;\n// \nClass CacheObjectBinaryProcessorImpl.TestBinaryContext;\n// IgniteBinary implementation.\nClass IgniteBinaryImpl;\n// Acknowledge message for MetadataRemoveProposedMessage: see its javadoc for detailed description of protocol.\nClass MetadataRemoveAcceptedMessage;\n// MetadataRemoveProposedMessage and MetadataRemoveAcceptedMessage messages make a basis for discovery-based protocol for manage metadata describing objects in binary format stored in Ignite caches.\nClass MetadataRemoveProposedMessage;\n// As DiscoveryCustomMessage messages are delivered to client nodes asynchronously it is possible that server nodes are allowed to send to clients some BinaryObjects clients don't have metadata for.\nClass MetadataRequestMessage;\n// Carries latest version of metadata to client as a response for MetadataRequestMessage.\nClass MetadataResponseMessage;\n// Acknowledge message for MetadataUpdateProposedMessage: see its javadoc for detailed description of protocol.\nClass MetadataUpdateAcceptedMessage;\n// MetadataUpdateProposedMessage and MetadataUpdateAcceptedMessage messages make a basis for discovery-based protocol for exchanging metadata describing objects in binary format stored in Ignite caches.\nClass MetadataUpdateProposedMessage;\n", "des": "Implementation of binary processor."}
{"index": 153, "repo": "ignite-core-2.15.0", "code": "package persistence\n\n// Cache data row.\nInterface CacheDataRow;\n// \nInterface CacheSearchRow;\n// Interface for perform checking that checkpoint lock is held by current track\nInterface CheckpointLockStateChecker;\n// \nInterface DatabaseLifecycleListener;\n// Meta store.\nInterface IndexStorage;\n// Interface for write page to PageStore.\nInterface PageStoreWriter;\n// Simple interface for data, store in some RowStore.\nInterface Storable;\n// Cache data row adapter.\nClass CacheDataRowAdapter;\n// Wrapper over StripedExecutor, that groups submitted tasks by cache group and partition.\nClass CacheStripedExecutor;\n// \nClass CheckCorruptedCacheStoresCleanAction;\n// \nClass CleanCacheStoresMaintenanceAction;\n// \nClass CorruptedPdsMaintenanceCallback;\n// Data region provides access to objects configured with DataRegionConfiguration configuration.\nClass DataRegion;\n// \nClass DataRegionMetricsImpl;\n// \nClass DataRegionMetricsSnapshot;\n// Data row implementation that can optionally hide the cache identifier and can set null as value.\nClass DataRowCacheAware;\n// \nClass DataStorageMetricsImpl;\n// TransactionsMXBean implementation.\nClass DataStorageMXBeanImpl;\n// Base class for all the data structures based on PageMemory.\nClass DataStructure;\n// Abstract file lock holder.\nClass FileLockHolder;\n// \nClass GridCacheDatabaseSharedManager;\n// Node file lock holder.\nClass GridCacheDatabaseSharedManager.NodeFileLockHolder;\n// Used when persistence enabled.\nClass GridCacheOffheapManager;\n// \nClass GridCacheOffheapManager.GridCacheDataStore;\n// \nClass IgniteCacheDatabaseSharedManager;\n// Metadata storage.\nClass IndexStorageImpl;\n// \nClass IndexStorageImpl.IndexItem;\n// \nClass IndexStorageImpl.MetaStoreInnerIO;\n// \nClass IndexStorageImpl.MetaStoreLeafIO;\n// \nClass RecoveryDebug;\n// \nClass RootPage;\n// Data store for H2 rows.\nClass RowStore;\n// \nEnum CacheDataRowAdapter.RowData;\n// Possible checkpoint states.\nEnum CheckpointState;\n// Abstract exception when DataStructure are corrupted.\nClass CorruptedDataStructureException;\n", "des": "This package contain cache with persistence implementation."}
{"index": 154, "repo": "ignite-core-2.15.0", "code": "package pagemem\n\n// Interface for storing correspondence of page ID in a cache group to long value (address in offheap segment).\nInterface LoadedPagesMap;\n// Interface describing a predicate for Key (cache group ID, page ID).\nInterface LoadedPagesMap.KeyPredicate;\n// Page memory with some persistence related additions.\nInterface PageMemoryEx;\n// Container for different memory page-related metrics.\nInterface PageMetrics;\n// \nInterface PageReadWriteManager;\n// Page replacement policy factory.\nInterface PageReplacementPolicyFactory;\n// Throttling policy, encapsulates logic of delaying write operations.\nInterface PagesWriteThrottlePolicy;\n// Tracks various checkpoint phases and stats.\nClass CheckpointMetricsTracker;\n// Clock page replacement algorithm implementation.\nClass ClockPageReplacementFlags;\n// CLOCK page replacement policy implementation.\nClass ClockPageReplacementPolicy;\n// ClockPageReplacementPolicy factory.\nClass ClockPageReplacementPolicyFactory;\n// Not thread safe and stateful class for page replacement of one page with write() delay.\nClass DelayedDirtyPageStoreWrite;\n// Delayed page writes tracker.\nClass DelayedPageReplacementTracker;\n// \nClass FullPageIdTable;\n// Page header structure is described by the following diagram.\nClass PageMemoryImpl;\n// \nClass PageMetricsImpl;\n// Builder for PageMetricsImpl instances.\nClass PageMetricsImpl.Builder;\n// \nClass PagePool;\n// \nClass PageReadWriteManagerImpl;\n// Abstract page replacement policy.\nClass PageReplacementPolicy;\n// Throttles threads that generate dirty pages during ongoing checkpoint.\nClass PagesWriteSpeedBasedThrottle;\n// Throttles threads that generate dirty pages during ongoing checkpoint.\nClass PagesWriteThrottle;\n// Random-LRU page replacement policy implementation.\nClass RandomLruPageReplacementPolicy;\n// RandomLruPageReplacementPolicy factory.\nClass RandomLruPageReplacementPolicyFactory;\n// Replacement removal candidate.\nClass ReplaceCandidate;\n// Loaded pages mapping to relative pointer based on Robin Hood hashing: backward shift deletion algorithm.\nClass RobinHoodBackwardShiftHashMap;\n// Pages Segmented-LRU (SLRU) list implementation.\nClass SegmentedLruPageList;\n// Segmented-LRU page replacement policy implementation.\nClass SegmentedLruPageReplacementPolicy;\n", "des": "This package contains page memory implementation for case persitence is enabled."}
{"index": 155, "repo": "ignite-core-2.15.0", "code": "package cacheobject\n\n// Cache objects processor.\nInterface IgniteCacheObjectProcessor;\n// \nClass NoOpBinary;\n// Wraps value provided by user, must be copied before stored in cache.\nClass UserCacheObjectByteArrayImpl;\n// Wraps value provided by user, must be serialized before stored in cache.\nClass UserCacheObjectImpl;\n// Wraps key provided by user, must be serialized before stored in cache.\nClass UserKeyCacheObjectImpl;\n", "des": "Cache object processor."}
{"index": 156, "repo": "ignite-core-2.15.0", "code": "package closure\n\n// Affinity mapped task.\nInterface AffinityTask;\n// \nClass GridClosureProcessor;\n// \nClass GridClosureProcessor.C1<T,R>;\n// \nClass GridClosureProcessor.C1MLA<T,R>;\n// \nClass GridClosureProcessor.C2<R>;\n// \nClass GridClosureProcessor.C2MLA<R>;\n// \nClass GridClosureProcessor.C4;\n// \nClass GridClosureProcessor.C4MLA;\n// Peer deployment aware task adapter.\nClass GridPeerDeployAwareTaskAdapter<T,R>;\n", "des": "TODO."}
{"index": 157, "repo": "ignite-core-2.15.0", "code": "package datastreamer\n\n// Marker interface for updaters which do not need to unwrap cache objects.\nInterface DataStreamerCacheUpdaters.InternalUpdater;\n// Bundled factory for cache updaters.\nClass DataStreamerCacheUpdaters;\n// \nClass DataStreamerEntry;\n// Data streamer implementation.\nClass DataStreamerImpl<K,V>;\n// Isolated receiver which only loads entry initial value.\nClass DataStreamerImpl.IsolatedUpdater;\n// \nClass DataStreamerRequest;\n// \nClass DataStreamerResponse;\n// Data stream processor.\nClass DataStreamProcessor<K,V>;\n", "des": "Data streamer processor."}
{"index": 158, "repo": "ignite-core-2.15.0", "code": "package dr\n\n// Data center replication cache receiver for data streamer.\nClass IgniteDrDataStreamerCacheUpdater;\n// Data center replication type.\nEnum GridDrType;\n", "des": "Data center replication processor."}
{"index": 159, "repo": "ignite-core-2.15.0", "code": "package failure\n\n// General failure processing API\nClass FailureProcessor;\n", "des": "Failure processor."}
{"index": 160, "repo": "ignite-core-2.15.0", "code": "package job\n\n// Responsible for all grid job execution and communication.\nClass GridJobProcessor;\n// Job worker.\nClass GridJobWorker;\n// Timeout object for delayed worker interruption.\nClass JobWorkerInterruptionTimeoutObject;\n// Compute job status.\nEnum ComputeJobStatusEnum;\n", "des": "TODO."}
{"index": 161, "repo": "ignite-core-2.15.0", "code": "package jobmetrics\n\n// Check the ReadOnlyMetricRegistry with \"name=compute.jobs\" instead.\nClass GridJobMetrics;\n// Check the ReadOnlyMetricRegistry with \"name=compute.jobs\" instead.\nClass GridJobMetricsProcessor;\n// Check the ReadOnlyMetricRegistry with \"name=compute.jobs\" instead.\nClass GridJobMetricsSnapshot;\n", "des": "Job metrics."}
{"index": 162, "repo": "ignite-core-2.15.0", "code": "package port\n\n// Listener for port change events.\nInterface GridPortListener;\n// Registers and deregisters all ports used by SPI and Manager.\nClass GridPortProcessor;\n// This class defines record about port use.\nClass GridPortRecord;\n", "des": "TODO."}
{"index": 163, "repo": "ignite-core-2.15.0", "code": "package resource\n\n// The interface specifies a container of dependencies.\nInterface DependencyResolver;\n// Disables injection.\nInterface GridNoImplicitInjection;\n// Interface was introduced to avoid compile-time dependency on spring framework.\nInterface GridSpringResourceContext;\n// Resource container contains caches for classes used for injection.\nClass GridResourceIoc;\n// Simple injector which wraps ComputeJobContext resource object.\nClass GridResourceJobContextInjector;\n// \nClass GridResourceLoggerInjector;\n// Processor for all Ignite and task/job resources.\nClass GridResourceProcessor;\n// Ignite instance injector.\nClass GridResourceProxiedIgniteInjector;\n// Grid service injector.\nClass GridResourceServiceInjector;\n// Noop implementation of dependency resolver.\nClass NoopDependencyResolver;\n// \nEnum GridResourceIoc.AnnotationSet;\n", "des": "TODO."}
{"index": 164, "repo": "ignite-core-2.15.0", "code": "package rest\n\n// REST protocol.\nInterface GridRestProtocol;\n// Command protocol handler.\nInterface GridRestProtocolHandler;\n// REST processor marker interface.\nInterface IgniteRestProcessor;\n// Rest processor implementation.\nClass GridRestProcessor;\n// JSON response.\nClass GridRestResponse;\n// Supported commands.\nEnum GridRestCommand;\n", "des": "REST processor."}
{"index": 165, "repo": "ignite-core-2.15.0", "code": "package message\n\n// Interface for all client messages.\nInterface GridClientMessage;\n// This class provides implementation for commit message fields and cannot be used directly.\nClass GridClientAbstractMessage;\n// Client authentication request.\nClass GridClientAuthenticationRequest;\n// Binary meta data sent from client.\nClass GridClientBinaryMetaData;\n// Cache bean.\nClass GridClientCacheBean;\n// Generic cache request.\nClass GridClientCacheRequest;\n// \nClass GridClientClusterNameRequest;\n// Use GridClientClusterStateRequestV2\nClass GridClientClusterStateRequest;\n// Enhanced version of GridClientClusterStateRequest.\nClass GridClientClusterStateRequestV2;\n// A client handshake request, containing version info and a marshaller ID.\nClass GridClientHandshakeRequest;\n// A client handshake response, containing result code.\nClass GridClientHandshakeResponse;\n// Node bean.\nClass GridClientNodeBean;\n// Node metrics bean.\nClass GridClientNodeMetricsBean;\n// Request to manage and obtain information about node before its start.\nClass GridClientNodeStateBeforeStartRequest;\n// Fictive ping packet.\nClass GridClientPingPacket;\n// Bean representing client operation result.\nClass GridClientResponse;\n// Use GridClientClusterStateRequest instead.\nClass GridClientStateRequest;\n// Task command request.\nClass GridClientTaskRequest;\n// Task result.\nClass GridClientTaskResultBean;\n// Topology command request.\nClass GridClientTopologyRequest;\n// \nClass GridClientWarmUpRequest;\n// Container for routed message information.\nClass GridRouterRequest;\n// \nClass GridRouterResponse;\n// Available cache operations.\nEnum GridClientCacheRequest.GridCacheOperation;\n", "des": "Defines messages that are used in binary TCP communication between Ignite clients and nodes."}
{"index": 166, "repo": "ignite-core-2.15.0", "code": "package handlers\n\n// Command handler.\nInterface GridRestCommandHandler;\n// Abstract command handler.\nClass GridRestCommandHandlerAdapter;\n", "des": "REST commands handlers."}
{"index": 167, "repo": "ignite-core-2.15.0", "code": "package auth\n\n// Authentication handler.\nClass AuthenticationCommandHandler;\n", "des": "REST authentication command."}
{"index": 168, "repo": "ignite-core-2.15.0", "code": "package cache\n\n// Command handler for API requests.\nClass GridCacheCommandHandler;\n// Grid cache metrics for rest.\nClass GridCacheRestMetrics;\n// Adds affinity node ID to cache responses.\nClass GridCacheRestResponse;\n", "des": "REST in-memory data grid commands."}
{"index": 169, "repo": "ignite-core-2.15.0", "code": "package redis\n\n// Command handler.\nInterface GridRedisCommandHandler;\n// Redis connection handler.\nClass GridRedisConnectionCommandHandler;\n// Redis command handler done via REST.\nClass GridRedisRestCommandHandler;\n", "des": "Contains Redis protocol commands."}
{"index": 170, "repo": "ignite-core-2.15.0", "code": "package top\n\n// Command handler for API requests.\nClass GridTopologyCommandHandler;\n", "des": "REST topology commands."}
{"index": 171, "repo": "ignite-core-2.15.0", "code": "package user\n\n// User actions handler.\nClass UserActionCommandHandler;\n", "des": "REST user commands."}
{"index": 172, "repo": "ignite-core-2.15.0", "code": "package version\n\n// Handler for GridRestCommand.VERSION and GridRestCommand.NAME command.\nClass GridVersionCommandHandler;\n", "des": "REST version command."}
{"index": 173, "repo": "ignite-core-2.15.0", "code": "package protocols\n\n// Abstract protocol adapter.\nClass GridRestProtocolAdapter;\n", "des": "REST protocol handlers."}
{"index": 174, "repo": "ignite-core-2.15.0", "code": "package tcp\n\n// Memcached protocol request.\nClass GridMemcachedMessage;\n// Handles memcache requests.\nClass GridTcpMemcachedNioListener;\n// Listener for nio server that handles incoming tcp rest packets.\nClass GridTcpRestNioListener;\n// Parser for extended memcache protocol.\nClass GridTcpRestParser;\n// Header.\nClass GridTcpRestParser.HeaderData;\n// Holder for parser state and temporary buffer.\nClass GridTcpRestParser.ParserState;\n// TCP binary protocol implementation.\nClass GridTcpRestProtocol;\n// Type of message being parsed.\nEnum GridClientPacketType;\n", "des": "Adapters for TCP-based REST protocols."}
{"index": 175, "repo": "ignite-core-2.15.0", "code": "package request\n\n// \nClass DataStructuresRequest;\n// Grid authentication request.\nClass GridRestAuthenticationRequest;\n// Grid command topology request.\nClass GridRestBaselineRequest;\n// Cache command request descriptor.\nClass GridRestCacheRequest;\n// \nClass GridRestChangeStateRequest;\n// Grid command request of cluster name.\nClass GridRestClusterNameRequest;\n// \nClass GridRestClusterStateRequest;\n// Grid command request of log file.\nClass GridRestLogRequest;\n// Request to manage and obtain information about node before its start.\nClass GridRestNodeStateBeforeStartRequest;\n// Grid command request.\nClass GridRestRequest;\n// Grid task command request.\nClass GridRestTaskRequest;\n// Grid command topology request.\nClass GridRestTopologyRequest;\n// Grid warm-up request.\nClass GridRestWarmUpRequest;\n// Sql query request.\nClass RestQueryRequest;\n// User request.\nClass RestUserActionRequest;\n// Supported query types.\nEnum RestQueryRequest.QueryType;\n", "des": "REST requests."}
{"index": 176, "repo": "ignite-core-2.15.0", "code": "package schedule\n\n// No-op implementation of IgniteScheduleProcessorAdapter, throws exception on usage attempt.\nClass IgniteNoopScheduleProcessor;\n// Schedules cron-based execution of grid tasks and closures.\nClass IgniteScheduleProcessorAdapter;\n", "des": "TODO."}
{"index": 177, "repo": "ignite-core-2.15.0", "code": "package segmentation\n\n// Kernal processor responsible for checking network segmentation issues.\nInterface GridSegmentationProcessor;\n", "des": "Segmentation processor."}
{"index": 178, "repo": "ignite-core-2.15.0", "code": "package session\n\n// \nClass GridTaskSessionProcessor;\n", "des": "Session processing package to guarantee reuse of same session object on the same node."}
{"index": 179, "repo": "ignite-core-2.15.0", "code": "package task\n\n// This class defines task processor.\nClass GridTaskProcessor;\n// Grid task worker.\nClass GridTaskWorker<T,R>;\n// \nClass TaskExecutionOptions;\n// Indicates that annotated task should always be loaded with local deployment, ignoring grid source node configuration.\nAnnotation Type GridInternal;\n// Indicates that annotated task is a visor task that was invoked by user.\nAnnotation Type GridVisorManagementTask;\n", "des": "TODO."}
{"index": 180, "repo": "ignite-core-2.15.0", "code": "package timeout\n\n// All objects that can timeout should implement this interface.\nInterface GridTimeoutObject;\n// Wrapper for IgniteSpiTimeoutObject.\nClass GridSpiTimeoutObject;\n// Default implementation for GridTimeoutObject.\nClass GridTimeoutObjectAdapter;\n// Detects timeout events and processes them.\nClass GridTimeoutProcessor;\n", "des": "TODO."}
{"index": 181, "repo": "ignite-core-2.15.0", "code": "package suggestions\n\n// Grid performance suggestions.\nClass GridPerformanceSuggestions;\n// Java Virtual Machine configuration suggestions.\nClass JvmConfigurationSuggestions;\n// Operation System configuration suggestions.\nClass OsConfigurationSuggestions;\n", "des": "Contains classes for configurations suggestions."}
{"index": 182, "repo": "ignite-core-2.15.0", "code": "package util\n\n// Class cache.\nInterface ClassCache;\n// Cleaner interface for java.nio.ByteBuffer.\nInterface DirectBufferCleaner;\n// Iterator over integer primitives.\nInterface GridIntIterator;\n// Makes Iterable as Serializable and is useful for making anonymous serializable iterators.\nInterface GridSerializableIterable<E>;\n// Makes Iterator as Serializable and is useful for making anonymous serializable iterators.\nInterface GridSerializableIterator<E>;\n// Interface for ignite internal tree.\nInterface IgniteTree<L,T>;\n// \nInterface IgniteTree.InvokeClosure<T>;\n// Explicit class for Supplier<Enumeration<NetworkInterface>>.\nInterface IgniteUtils.InterfaceSupplier;\n// The simplified version of Google Guava smooth rate limiter.\nClass BasicRateLimiter;\n// Internal utility class that contains not peer-deployable predicates for use in internal logic.\nClass F0;\n// Class extracted for fields from GridUnsafe to be absolutely independent with current and future static block initialization effects.\nClass FeatureChecker;\n// Caches class loaders for classes.\nClass GridAnnotationsCache;\n// This class encapsulates argument check (null and range) for public facing APIs.\nClass GridArgumentCheck;\n// Utility methods to work with arrays.\nClass GridArrays;\n// Executes initialization operation once.\nClass GridAtomicInitializer<T>;\n// Extended version of AtomicInteger.\nClass GridAtomicInteger;\n// Extended version of AtomicLong.\nClass GridAtomicLong;\n// Concurrent map with an upper bound.\nClass GridBoundedConcurrentLinkedHashMap<K,V>;\n// Concurrent set with an upper bound.\nClass GridBoundedConcurrentLinkedHashSet<E>;\n// Concurrent ordered map that automatically manages its maximum size.\nClass GridBoundedConcurrentOrderedMap<K,V>;\n// Concurrent ordered set that automatically manages its maximum size.\nClass GridBoundedConcurrentOrderedSet<E>;\n// Generic map with an upper bound.\nClass GridBoundedLinkedHashMap<K,V>;\n// Hash table and linked list implementation of the Set interface, with predictable iteration order.\nClass GridBoundedLinkedHashSet<E>;\n// Bounded variant of PriorityQueue.\nClass GridBoundedPriorityQueue<E>;\n", "des": "System-wide utility routine and helper classes."}
{"index": 183, "repo": "ignite-core-2.15.0", "code": "package future\n\n// Wraps listener and executes it in specified executor.\nClass AsyncFutureListener<V>;\n// \nClass CountDownFuture;\n// Future composed of multiple inner futures.\nClass GridCompoundFuture<T,R>;\n// Compound future with reducer which accepts and produces results of the same type.\nClass GridCompoundIdentityFuture<T>;\n// Future which waits for embedded future to complete and then asynchronously executes provided closure with embedded future result.\nClass GridEmbeddedFuture<A,B>;\n// Future that is completed at creation time.\nClass GridFinishedFuture<T>;\n// Future adapter.\nClass GridFutureAdapter<R>;\n// \nClass IgniteFinishedFutureImpl<V>;\n// Implementation of public API future.\nClass IgniteFutureImpl<V>;\n// Util task that will execute ComputeTask on a given node.\nClass IgniteRemoteMapTask<T,R>;\n", "des": "Future related classes."}
{"index": 184, "repo": "ignite-core-2.15.0", "code": "package ipc\n\n// IPC endpoint used for point-to-point communication.\nInterface IpcEndpoint;\n// IPC server endpoint that is capable for client connections accepting.\nInterface IpcServerEndpoint;\n// endpoint factory for inter-process communication.\nClass IpcEndpointFactory;\n// Allows to re-use existing GridNioFilters on IPC (specifically shared memory IPC) communications.\nClass IpcToNioAdapter<T>;\n// IPC endpoint type.\nEnum IpcEndpointType;\n// Represents exception occurred during IPC endpoint binding.\nClass IpcEndpointBindException;\n", "des": "IPC utility classes."}
{"index": 185, "repo": "ignite-core-2.15.0", "code": "package loopback\n\n// Loopback IPC endpoint based on socket.\nClass IpcClientTcpEndpoint;\n// Server loopback IPC endpoint.\nClass IpcServerTcpEndpoint;\n", "des": "Loopback IPC utility classes."}
{"index": 186, "repo": "ignite-core-2.15.0", "code": "package gridfunc\n\n// Defines a predicate which accepts a parameter and always returns false\nClass AlwaysFalsePredicate<E>;\n// Defines a predicate which accepts a parameter and always returns true\nClass AlwaysTruePredicate<E>;\n// Reducer which always returns true from IgniteReducer.collect(Object)\nClass AlwaysTrueReducer<T>;\n// Atomic integer factory.\nClass AtomicIntegerFactoryCallable;\n// Cache entry to get-value transformer closure.\nClass CacheEntryGetValueClosure;\n// Cache entry has-peek-value predicate.\nClass CacheEntryHasPeekPredicate;\n// Grid node to node ID transformer closure.\nClass ClusterNodeGetIdClosure;\n// Concurrent hash set factory.\nClass ConcurrentHashSetFactoryCallable;\n// Concurrent hash map factory.\nClass ConcurrentMapFactoryCallable;\n// Grid node predicate evaluating on the given node IDs.\nClass ContainsNodeIdsPredicate<T extends ClusterNode>;\n// Predicate which returns true if it receives an element that is contained in the passed in collection.\nClass ContainsPredicate<T>;\n// Predicate evaluates to true for given value.\nClass EntryByKeyEvaluationPredicate<K,V>;\n// Creates grid node predicate evaluating on the given node ID.\nClass EqualsClusterNodeIdPredicate<T extends ClusterNode>;\n// UUID equals predicate.\nClass EqualsUuidPredicate;\n// Wrapper which iterable over the elements of the inner collections.\nClass FlatCollectionWrapper<T>;\n// Iterator over the elements of given iterators.\nClass FlatIterator<T>;\n// ClusterNode has equal id predicate.\nClass HasEqualIdPredicate<T extends ClusterNode>;\n// ClusterNode node has NOT equal id predicate.\nClass HasNotEqualIdPredicate<T extends ClusterNode>;\n// Identity closure.\nClass IdentityClosure;\n// Reducer that calculates sum of integer elements.\nClass IntSumReducer;\n// Predicate that evaluates to true if each of its component preds evaluates to true.\nClass IsAllPredicate<T>;\n// Negated predicate.\nClass IsNotAllPredicate<T>;\n// Defines a predicate which checks a parameter on null.\nClass IsNotNullPredicate<E>;\n// Reducer that calculates sum of long integer elements.\nClass LongSumReducer;\n// Hash map factory.\nClass MapFactoryCallable;\n", "des": "Contains utilities classes for GridFunc."}
{"index": 187, "repo": "ignite-core-2.15.0", "code": "package nio\n\n// \nInterface GridCommunicationClient;\n// This interface defines the general element in transformation chain between the nio server and application.\nInterface GridNioFilter;\n// NIO future.\nInterface GridNioFuture<R>;\n// Message reader.\nInterface GridNioMessageReader;\n// Message reader factory.\nInterface GridNioMessageReaderFactory;\n// Message writer.\nInterface GridNioMessageWriter;\n// Message writer factory.\nInterface GridNioMessageWriterFactory;\n// This interface declares a basic contract on message parsing and encoding to the underlying network layer.\nInterface GridNioParser;\n// Listener passed in to the GridNioServer that will be notified on client events.\nInterface GridNioServerListener<T>;\n// This interface represents established or closed connection between nio server and remote client.\nInterface GridNioSession;\n// \nInterface SessionWriteRequest;\n// Implements basic lifecycle for communication clients.\nClass GridAbstractCommunicationClient;\n// This class implements stream parser based on GridNioServerBuffer.\nClass GridBufferedParser;\n// Verifies that first bytes received in accepted (incoming) NIO session are equal to IgniteUtils.IGNITE_HEADER.\nClass GridConnectionBytesVerifyFilter;\n// This class implements stream parser based on GridNioDelimitedBuffer.\nClass GridDelimitedParser;\n// Parser for direct messages.\nClass GridDirectParser;\n// Enables multithreaded notification of session opened, message received and session closed events.\nClass GridNioAsyncNotifyFilter;\n// Utility class that allows to ignore back-pressure control for threads that are processing messages.\nClass GridNioBackPressureControl;\n// Filter that transforms byte buffers to user-defined objects and vice-versa with specified GridNioParser.\nClass GridNioCodecFilter;\n// Buffer with message delimiter support.\nClass GridNioDelimitedBuffer;\n// Future that delegates to some other future.\nClass GridNioEmbeddedFuture<R>;\n// Class that defines the piece for application-to-network and vice-versa data conversions (protocol transformations, encryption, etc.)\nClass GridNioFilterAdapter;\n// Filter chain implementation for nio server filters.\nClass GridNioFilterChain<T>;\n", "des": "NIO server interfaces and common utility classes for NIO."}
{"index": 188, "repo": "ignite-core-2.15.0", "code": "package ssl\n\n// \nClass BlockingSslHandler;\n// Implementation of SSL filter using SSLEngine\nClass GridNioSslFilter;\n// \nClass GridSslMeta;\n", "des": "Implementation of Secure Socket Layer filter for NIO server based on SSLEngine class."}
{"index": 189, "repo": "ignite-core-2.15.0", "code": "package scala\n\n// Documentation annotation for Scala.\nAnnotation Type impl;\n", "des": "Scala supporting classes."}
{"index": 190, "repo": "ignite-core-2.15.0", "code": "package test\n\n// Print stream that prints each thread group into a separate buffer.\nClass GridTestPrintStream;\n// Factory that allow to acquire/release Print Stream for test logging.\nClass GridTestPrintStreamFactory;\n", "des": "Contains common utility classes for JUnit integration."}
{"index": 191, "repo": "ignite-core-2.15.0", "code": "package tostring\n\n// Basic string builder over circular buffer.\nClass CircularStringBuilder;\n// Provides auto-generation framework for toString() output.\nClass GridToStringBuilder;\n// \nClass SBLimitedLength;\n// Attach this annotation to a field or a class to indicate that this field or fields of this class should not be included in toString() output.\nAnnotation Type GridToStringExclude;\n// Attach this annotation to a field or a class to indicate that this field or fields of this class should be included in toString() output.\nAnnotation Type GridToStringInclude;\n// Attach this annotation to a field to provide its order in toString() output.\nAnnotation Type GridToStringOrder;\n", "des": "Common utility classes for threads."}
{"index": 192, "repo": "ignite-core-2.15.0", "code": "package typedef\n\n// Defines alias for IgniteClosure by extending it.\nInterface C1<E1,R>;\n// Defines alias for IgniteBiClosure by extending it.\nInterface C2<E1,E2,R>;\n// Defines alias for GridClosure3 by extending it.\nInterface C3<E1,E2,E3,R>;\n// Defines alias for IgniteInClosure by extending it.\nInterface CI1<T>;\n// Defines alias for IgniteBiInClosure by extending it.\nInterface CI2<E1,E2>;\n// Defines alias for GridInClosure3 by extending it.\nInterface CI3<E1,E2,E3>;\n// Defines alias for IgniteOutClosure by extending it.\nInterface CO<T>;\n// Defines alias for IgnitePredicate by extending it.\nInterface P1<E1>;\n// Defines alias for IgniteBiPredicate by extending it.\nInterface P2<T1,T2>;\n// Defines alias for GridPredicate3 by extending it.\nInterface P3<T1,T2,T3>;\n// Defines alias for GridAbsPredicate by extending it.\nInterface PA;\n// Defines alias for GridPredicate<Entry<K, V>> by extending IgnitePredicate.\nInterface PCE<K,V>;\n// Defines alias for GridPredicate<GridEvent> by extending IgnitePredicate.\nInterface PE;\n// Defines alias for GridPredicate2<K, V> by extending IgnitePredicate.\nInterface PKV<K,V>;\n// Defines alias for GridPredicate<ClusterNode> by extending IgnitePredicate.\nInterface PN;\n// Defines alias for IgniteReducer by extending it.\nInterface R1<E1,R>;\n// Defines alias for IgniteReducer2 by extending it.\nInterface R2<E1,E2,R>;\n// Defines alias for IgniteReducer3 by extending it.\nInterface R3<E1,E2,E3,R>;\n// Defines alias for GridAbsClosure by extending it.\nClass CA;\n", "des": "Contains typedefs definitions for frequently used classes."}
{"index": 193, "repo": "ignite-core-2.15.0", "code": "package internal\n\n// Defines internal typedef for GridPlainCallable.\nInterface GPC<T>;\n// Defines internal typedef for GridPlainRunnable.\nInterface GPR;\n// Defines internal typedef for GridArgumentCheck.\nClass A;\n// Defines internal typedef for GridCacheUtils.\nClass CU;\n// Convenience alias for GridDebug class.\nClass D;\n// Defines internal typedef for GridLogThrottle.\nClass LT;\n// Defines internal typedef for GridToStringBuilder.\nClass S;\n// Defines internal typedef for GridStringBuilder.\nClass SB;\n// Defines internal typedef for IgniteUtils.\nClass U;\n", "des": "Contains internal typedefs."}
{"index": 194, "repo": "ignite-core-2.15.0", "code": "package worker\n\n// This interface defines worker listener.\nInterface GridWorkerListener;\n// Dispatcher of workers' progress which allows us to understand if worker freezes.\nInterface WorkProgressDispatcher;\n// Thread wrapper for standart cycle operations.\nClass CycleThread;\n// Extension to standard Runnable interface.\nClass GridWorker;\n// Future for locally executed closure that defines cancellation logic.\nClass GridWorkerFuture<T>;\n// Convenience adapter for GridWorkerListener.\nClass GridWorkerListenerAdapter;\n// Pool of runnable workers.\nClass GridWorkerPool;\n", "des": "Common utility classes for threads."}
{"index": 195, "repo": "ignite-core-2.15.0", "code": "package worker\n\n// MBean that provides control of system workersRegistry.\nClass WorkersControlMXBeanImpl;\n// Workers registry.\nClass WorkersRegistry;\n", "des": "System worker registry and control MBean implementation."}
{"index": 196, "repo": "ignite-core-2.15.0", "code": "package jsr166\n\n// need for java deserialization ConcurrentHashMap8 from old nodes.\nClass ConcurrentHashMap8<K,V>;\n// An unbounded concurrent deque based on linked nodes.\nClass ConcurrentLinkedDeque8<E>;\n// \nClass ConcurrentLinkedDeque8.Node<E>;\n// A hash table supporting full concurrency of retrievals and adjustable expected concurrency for updates.\nClass ConcurrentLinkedHashMap<K,V>;\n// ConcurrentHashMap list entry.\nClass ConcurrentLinkedHashMap.HashEntry<K,V>;\n// Defines queue policy for this hash map.\nEnum ConcurrentLinkedHashMap.QueuePolicy;\n", "des": "Package contains classes that from JSR166."}
{"index": 197, "repo": "ignite-core-2.15.0", "code": "package mindrot\n\n// BCrypt implements OpenBSD-style Blowfish password hashing using the scheme described in \"A Future-Adaptable Password Scheme\" by Niels Provos and David Mazieres.\nClass BCrypt;\n", "des": "Package contains class that from jbcrypt."}
{"index": 198, "repo": "nutch-2.4", "code": "package api\n\n// \nInterface ConfManager;\n// \nInterface JobManager;\n// \nClass NutchServer;\n// \nEnum JobManager.JobType;\n", "des": "REST API to run and control crawl jobs."}
{"index": 199, "repo": "nutch-2.4", "code": "package impl\n\n// \nClass JobFactory;\n// \nClass JobWorker;\n// \nClass NutchServerPoolExecutor;\n// Configuration manager which holds a map of Configuration type configurations and ids.\nClass RAMConfManager;\n// \nClass RAMJobManager;\n", "des": "Implementations of REST API interfaces."}
{"index": 200, "repo": "nutch-2.4", "code": "package extractor\n\n// \nClass JsoupDocument;\n// \nClass JsoupDocument.DocumentField;\n// \nClass JsoupDocumentReader;\n// \nClass JsoupExtractorConstants;\n", "des": "core package of jsoup-extractor containing XML configuration parser, document structure"}
{"index": 201, "repo": "nutch-2.4", "code": "package normalizer\n\n// \nInterface Normalizable;\n// \nClass SimpleStringNormalizer;\n", "des": "Normalizers for jsoup-extractor"}
{"index": 202, "repo": "nutch-2.4", "code": "package crawl\n\n// This interface defines the contract for implementations that manipulate fetch times and re-fetch intervals.\nInterface FetchSchedule;\n// This class provides common methods for implementations of FetchSchedule.\nClass AbstractFetchSchedule;\n// This class implements an adaptive re-fetch algorithm.\nClass AdaptiveFetchSchedule;\n// \nClass CrawlStatus;\n// \nClass DbUpdateMapper;\n// \nClass DbUpdateReducer;\n// \nClass DbUpdaterJob;\n// This class implements the default re-fetch schedule.\nClass DefaultFetchSchedule;\n// Creates and caches a FetchSchedule implementation.\nClass FetchScheduleFactory;\n// \nClass GeneratorJob;\n// \nClass GeneratorJob.SelectorEntry;\n// \nClass GeneratorJob.SelectorEntryComparator;\n// \nClass GeneratorMapper;\n// Reduce class for generate The #reduce() method write a random integer to all generated URLs.\nClass GeneratorReducer;\n// This class takes a flat file of URLs and adds them to the of pages to be crawled.\nClass InjectorJob;\n// \nClass InjectorJob.UrlMapper;\n// Default implementation of a page signature.\nClass MD5Signature;\n// \nClass NutchWritable;\n// \nClass Signature;\n// \nClass SignatureComparator;\n// Factory class, which instantiates a Signature implementation according to the current Configuration configuration.\nClass SignatureFactory;\n// Default implementation of a page signature.\nClass TextMD5Signature;\n// An implementation of a page signature.\nClass TextProfileSignature;\n// Partition urls by host, domain name or IP depending on the value of the parameter 'partition.url.mode' which can be 'byHost', 'byDomain' or 'byIP'\nClass URLPartitioner;\n// \nClass URLPartitioner.FetchEntryPartitioner;\n// \nClass URLPartitioner.SelectorEntryPartitioner;\n// \nClass URLWebPage;\n// A writable comparable container for an url with score.\nClass UrlWithScore;\n// A partitioner by {url}.\nClass UrlWithScore.UrlOnlyPartitioner;\n// Compares by {url,score}.\nClass UrlWithScore.UrlScoreComparator;\n// Compares by {url}.\nClass UrlWithScore.UrlScoreComparator.UrlOnlyComparator;\n", "des": "Crawl control code and tools to run the crawler."}
{"index": 203, "repo": "nutch-2.4", "code": "package fetcher\n\n// \nClass FetchEntry;\n// Multi-threaded fetcher.\nClass FetcherJob;\n// Mapper class for Fetcher.\nClass FetcherJob.FetcherMapper;\n// \nClass FetcherReducer;\n", "des": "The Nutch robot."}
{"index": 204, "repo": "nutch-2.4", "code": "package host\n\n// A caching wrapper for the host datastore.\nClass HostDb;\n// Display entries from the hostDB.\nClass HostDbReader;\n// Scans the web table and create host entries for each unique host.\nClass HostDbUpdateJob;\n// Maps each WebPage to a host key.\nClass HostDbUpdateJob.Mapper;\n// Combines all WebPages with the same host key to create a Host object, with some statistics.\nClass HostDbUpdateReducer;\n// Creates or updates an existing host table from a text file. The files contain one host name per line, optionally followed by custom metadata separated by tabs with the metadata key is separated from the corresponding value by '='.\nClass HostInjectorJob;\n// \nClass HostInjectorJob.UrlMapper;\n", "des": "Host database to store metadata per host."}
{"index": 205, "repo": "nutch-2.4", "code": "package indexer\n\n// Extension point for indexing.\nInterface IndexCleaningFilter;\n// Extension point for indexing.\nInterface IndexingFilter;\n// \nInterface IndexWriter;\n// \nClass CleaningJob;\n// \nClass CleaningJob.CleanMapper;\n// \nClass CleaningJob.CleanReducer;\n// Creates and caches IndexCleaningFilter implementing plugins.\nClass IndexCleaningFilters;\n// \nClass IndexerOutputFormat;\n// Creates and caches IndexingFilter implementing plugins.\nClass IndexingFilters;\n// Reads and parses a URL and run the indexers on it.\nClass IndexingFiltersChecker;\n// \nClass IndexingJob;\n// \nClass IndexingJob.IndexerMapper;\n// Utility to create an indexed document from a webpage.\nClass IndexUtil;\n// Creates and caches IndexWriter implementing plugins.\nClass IndexWriters;\n// A NutchDocument is the unit of indexing.\nClass NutchDocument;\n// \nClass IndexingException;\n", "des": "Index content, configure and run indexing and cleaning jobs to add, update, and delete documents from an index."}
{"index": 206, "repo": "nutch-2.4", "code": "package html\n\n// Add raw HTML content of a document to the index.\nClass HtmlIndexingFilter;\n", "des": "Index raw HTML content."}
{"index": 207, "repo": "nutch-2.4", "code": "package extractor\n\n// \nClass JsoupIndexingFilter;\n", "des": "Indexing filter for jsoup-extractor plugin"}
{"index": 208, "repo": "nutch-2.4", "code": "package elastic\n\n// \nInterface ElasticConstants;\n// \nClass ElasticIndexWriter;\n", "des": "Index writer plugin for Elasticsearch."}
{"index": 209, "repo": "nutch-2.4", "code": "package hbase\n\n// \nClass HBaseIndexWriter;\n// \nClass HBaseMappingReader;\n", "des": "Index writer plugin for Apache HBase."}
{"index": 210, "repo": "nutch-2.4", "code": "package metadata\n\n// A collection of Creative Commons properties names.\nInterface CreativeCommons;\n// A collection of Dublin Core metadata names.\nInterface DublinCore;\n// A collection of Feed property names extracted by the ROME library.\nInterface Feed;\n// A collection of HTTP header names.\nInterface HttpHeaders;\n// A collection of Nutch internal metadata constants.\nInterface Nutch;\n// A multi-valued metadata container.\nClass Metadata;\n// This is a simple decorator that adds metadata to any Writable-s that can be serialized by NutchWritable.\nClass MetaWrapper;\n// A decorator to Metadata that adds spellchecking capabilities to property names.\nClass SpellCheckedMetadata;\n", "des": "A Multi-valued Metadata container, and set of constant fields for Nutch Metadata."}
{"index": 211, "repo": "nutch-2.4", "code": "package net\n\n// Interface used to limit which URLs enter Nutch.\nInterface URLFilter;\n// Interface used to convert URLs to normal form and optionally perform substitutions\nInterface URLNormalizer;\n// Checks one given filter or all filters.\nClass URLFilterChecker;\n// Creates and caches URLFilter implementing plugins.\nClass URLFilters;\n// Checks one given normalizer or all normalizers.\nClass URLNormalizerChecker;\n// This class uses a \"chained filter\" pattern to run defined normalizers.\nClass URLNormalizers;\n// \nClass URLFilterException;\n", "des": "Web-related interfaces: URL filters and normalizers."}
{"index": 212, "repo": "nutch-2.4", "code": "package protocols\n\n// A response interface.\nInterface Response;\n// class to handle HTTP dates.\nClass HttpDateFormat;\n// Use ProtocolException instead.\nClass ProtocolException;\n", "des": "Helper classes related to the Protocol interface, sea also org.apache.nutch.protocol."}
{"index": 213, "repo": "nutch-2.4", "code": "package parse\n\n// Extension point for DOM-based parsers.\nInterface ParseFilter;\n// A parser for content generated by a Protocol implementation.\nInterface Parser;\n// \nInterface ParseStatusCodes;\n// This class holds the information about HTML \"meta\" tags extracted from a page.\nClass HTMLMetaTags;\n// \nClass NutchSitemapParse;\n// \nClass NutchSitemapParser;\n// \nClass Outlink;\n// Extractor to extract Outlinks / URLs from plain text using Regular Expressions.\nClass OutlinkExtractor;\n// \nClass Parse;\n// Creates and caches ParseFilter implementing plugins.\nClass ParseFilters;\n// This class represents a natural ordering for which parsing plugin should get called for a particular mimeType.\nClass ParsePluginList;\n// A reader to load the information stored in the $NUTCH_HOME/conf/parse-plugins.xml file.\nClass ParsePluginsReader;\n// Parser checker, useful for testing parser.\nClass ParserChecker;\n// Creates and caches Parser plugins.\nClass ParserFactory;\n// \nClass ParserJob;\n// \nClass ParserJob.ParserMapper;\n// \nClass ParseStatusUtils;\n// A Utility class containing methods to simply perform parsing utilities such as iterating through a preferred list of Parsers to obtain Parse objects.\nClass ParseUtil;\n// \nEnum ParseUtil.ChangeFrequency;\n// \nClass ParseException;\n// \nClass ParserNotFound;\n", "des": "The Parse interface and related classes."}
{"index": 214, "repo": "nutch-2.4", "code": "package extractor\n\n// \nClass JsoupHtmlParser;\n// \nClass TestJsoupHtmlParser;\n// \nClass ViewCountNormalizer;\n", "des": "Parse filter based on Jsoup"}
{"index": 215, "repo": "nutch-2.4", "code": "package plugin\n\n// \nInterface FieldPluggable;\n// Defines the capability of a class to be plugged into Nutch.\nInterface Pluggable;\n// An Extension is a kind of listener descriptor that will be installed on a concrete ExtensionPoint that acts as kind of Publisher.\nClass Extension;\n// The ExtensionPoint provide meta information of a extension point.\nClass ExtensionPoint;\n// A nutch-plugin is an container for a set of custom logic that provide extensions to the nutch core functionality or another plugin that provides an API for extending.\nClass Plugin;\n// The PluginClassLoader is a child-first classloader that only contains classes of the runtime libraries setuped in the plugin manifest file and exported libraries of plugins that are required plugins.\nClass PluginClassLoader;\n// The PluginDescriptor provide access to all meta information of a nutch-plugin, as well to the internationalizable resources and the plugin own classloader.\nClass PluginDescriptor;\n// The PluginManifestParser parser just parse the manifest file in all plugin directories.\nClass PluginManifestParser;\n// The plugin repositority is a registry of all plugins.\nClass PluginRepository;\n// CircularDependencyException will be thrown if a circular dependency is detected.\nClass CircularDependencyException;\n// MissingDependencyException will be thrown if a plugin dependency cannot be found.\nClass MissingDependencyException;\n// PluginRuntimeException will be thrown until a exception in the plugin managemnt occurs.\nClass PluginRuntimeException;\n", "des": "The Nutch Plugin System."}
{"index": 216, "repo": "nutch-2.4", "code": "package protocol\n\n// A retriever of url content.\nInterface Protocol;\n// \nInterface ProtocolStatusCodes;\n// This class holds the rules which were parsed from a robots.txt file, and can test paths against those rules.\nInterface RobotRules;\n// \nClass Content;\n// Creates and caches Protocol plugins.\nClass ProtocolFactory;\n// Simple aggregate to pass from protocol plugins both content and protocol status.\nClass ProtocolOutput;\n// \nClass ProtocolStatusUtils;\n// This class uses crawler-commons for handling the parsing of robots.txt files.\nClass RobotRulesParser;\n// \nClass ProtocolException;\n// \nClass ProtocolNotFound;\n", "des": "Classes related to the Protocol interface, see also org.apache.nutch.net.protocols."}
{"index": 217, "repo": "nutch-2.4", "code": "package scoring\n\n// A contract defining behavior of scoring plugins.\nInterface ScoringFilter;\n// \nClass ScoreDatum;\n// Creates and caches ScoringFilter implementing plugins.\nClass ScoringFilters;\n// Specialized exception for errors during scoring.\nClass ScoringFilterException;\n", "des": "The ScoringFilter interface."}
{"index": 218, "repo": "nutch-2.4", "code": "package storage\n\n// Host represents a store of webpages or other data which resides on a server or other computer so that it can be accessed over the Internet\nClass Host;\n// RecordBuilder for Host instances.\nClass Host.Builder;\n// \nClass Host.Tombstone;\n// A nested container representing parse status data captured from invocation of parsers on fetch of a WebPage\nClass ParseStatus;\n// RecordBuilder for ParseStatus instances.\nClass ParseStatus.Builder;\n// \nClass ParseStatus.Tombstone;\n// A nested container representing data captured from web server responses.\nClass ProtocolStatus;\n// RecordBuilder for ProtocolStatus instances.\nClass ProtocolStatus.Builder;\n// \nClass ProtocolStatus.Tombstone;\n// Entry point to Gora store/mapreduce functionality.\nClass StorageUtils;\n// WebPage is the primary data structure in Nutch representing crawl data for a given WebPage at some point in time\nClass WebPage;\n// RecordBuilder for WebPage instances.\nClass WebPage.Builder;\n// \nClass WebPage.Tombstone;\n// \nClass WebTableCreator;\n// Enum containing all data bean's fields.\nEnum Host.Field;\n// \nEnum Mark;\n// Enum containing all data bean's fields.\nEnum ParseStatus.Field;\n// Enum containing all data bean's fields.\nEnum ProtocolStatus.Field;\n// Enum containing all data bean's fields.\nEnum WebPage.Field;\n", "des": "Representation (web pages, host metadata) of data in abstracted storage."}
{"index": 219, "repo": "nutch-2.4", "code": "package tools\n\n// \nClass Benchmark;\n// \nClass Benchmark.BenchmarkResults;\n// Utility that converts DMOZ RDF into a flat file of URLs to be injected.\nClass DmozParser;\n// A simple tool that will spin up multiple threads to resolve urls to ip addresses.\nClass ResolveUrls;\n", "des": "Miscellaneous tools."}
{"index": 220, "repo": "nutch-2.4", "code": "package arc\n\n// A input format the reads arc files.\nClass ArcInputFormat;\n// The ArchRecordReader class provides a record reader which reads records from arc files.\nClass ArcRecordReader;\n", "des": "Tools to read the Arc file format."}
{"index": 221, "repo": "nutch-2.4", "code": "package proxy\n\n// \nClass AbstractTestbedHandler;\n// \nClass DelayHandler;\n// \nClass FakeHandler;\n// \nClass LogDebugHandler;\n// \nClass NotFoundHandler;\n// \nClass TestbedProxy;\n// Create links to hosts generated from a pool of numHosts/numPages random names.\nEnum FakeHandler.Mode;\n", "des": "Proxy to benchmark the crawler."}
{"index": 222, "repo": "nutch-2.4", "code": "package util\n\n// Utility class that handles byte arrays, conversions to/from other types, comparisons, hash code generation, manufacturing keys for HashMaps or HashSets, etc.\nClass Bytes;\n// Byte array comparator class.\nClass Bytes.ByteArrayComparator;\n// \nClass CommandRunner;\n// A collection of utility methods for working on deflated data.\nClass DeflateUtils;\n// \nClass DomUtil;\n// A simple class for detecting character encodings.\nClass EncodingDetector;\n// Utility methods for common filesystem operations.\nClass FSUtils;\n// A generic Writable wrapper that can inject Configuration to Configurables\nClass GenericWritableConfigurable;\n// A collection of utility methods for working on GZIPed data.\nClass GZIPUtils;\n// \nClass HadoopFSUtil;\n// \nClass Histogram<E>;\n// \nClass IdentityPageReducer;\n// Utility methods for handling application-level locking.\nClass LockUtil;\n// \nClass MimeUtil;\n// A utility class that allows the walking of any DOM tree using a stack instead of recursion.\nClass NodeWalker;\n// Utility to create Hadoop Configurations that include Nutch-specific resources.\nClass NutchConfiguration;\n// A Job for Nutch jobs.\nClass NutchJob;\n// A JobConf for Nutch jobs.\nClass NutchJobConf;\n// \nClass NutchTool;\n// \nClass ObjectCache;\n// \nClass Pair<F,S>;\n// A class for efficiently matching Strings against a set of prefixes.\nClass PrefixStringMatcher;\n// A collection of String processing utility methods.\nClass StringUtil;\n// A class for efficiently matching Strings against a set of suffixes.\nClass SuffixStringMatcher;\n// \nClass TableUtil;\n// \nClass TimingUtil;\n// \nClass ToolUtil;\n// TrieStringMatcher is a base class for simple tree-based string matching.\nClass TrieStringMatcher;\n// Utility class for URL analysis\nClass URLUtil;\n// \nClass WebPageWritable;\n", "des": "Miscellaneous utility classes."}
{"index": 223, "repo": "nutch-2.4", "code": "package domain\n\n// Extracts some very basic statistics about domains from the crawldb\nClass DomainStatistics;\n// \nClass DomainStatistics.DomainStatisticsCombiner;\n// \nClass DomainStatistics.DomainStatisticsMapper;\n// \nClass DomainStatistics.DomainStatisticsReducer;\n// This class represents the last part of the host name, which is operated by authoritives, not individuals.\nClass DomainSuffix;\n// Storage class for DomainSuffix objects Note: this class is singleton\nClass DomainSuffixes;\n// (From wikipedia) A top-level domain (TLD) is the last part of an Internet domain name; that is, the letters which follow the final dot of any domain name.\nClass TopLevelDomain;\n// \nEnum DomainStatistics.MyCounter;\n// Enumeration of the status of the tld.\nEnum DomainSuffix.Status;\n// \nEnum TopLevelDomain.Type;\n", "des": "Classes for domain name analysis."}
{"index": 224, "repo": "nutch-2.4", "code": "package webui\n\n// \nClass NutchUiApplication;\n// \nClass NutchUiServer;\n", "des": "Provides classes and interfaces for Web UI"}
{"index": 225, "repo": "nutch-2.4", "code": "package client\n\n// \nInterface NutchClient;\n// \nClass NutchClientFactory;\n", "des": "Provides client classes and interfaces for Web UI"}
{"index": 226, "repo": "nutch-2.4", "code": "package impl\n\n// \nInterface CrawlingCycleListener;\n// This class implements crawl cycle as in crawl script\nClass CrawlingCycle;\n// \nClass NutchClientImpl;\n// \nClass RemoteCommand;\n// \nClass RemoteCommandBuilder;\n// This class executes remote job and waits for success/failure result\nClass RemoteCommandExecutor;\n// \nClass RemoteCommandsBatchFactory;\n", "des": "Contains implementation of client classes and interfaces for Web UI"}
{"index": 227, "repo": "nutch-2.4", "code": "package model\n\n// \nClass Crawl;\n// \nClass JobConfig;\n// \nClass JobInfo;\n// \nClass NutchStatus;\n// \nEnum ConnectionStatus;\n// \nEnum Crawl.CrawlStatus;\n// \nEnum JobInfo.JobType;\n// \nEnum JobInfo.State;\n", "des": "Contains model classes of client for Web UI"}
{"index": 228, "repo": "nutch-2.4", "code": "package config\n\n// \nClass CustomDaoFactory;\n// \nClass CustomTableCreator;\n// \nClass NutchGuiConfiguration;\n// \nClass SpringConfiguration;\n", "des": "Contains config classes for Web UI"}
{"index": 229, "repo": "nutch-2.4", "code": "package model\n\n// \nClass NutchConfig;\n// \nClass NutchInstance;\n// \nClass SeedList;\n// \nClass SeedUrl;\n", "des": "Contains model classes for Web UI"}
{"index": 230, "repo": "nutch-2.4", "code": "package pages\n\n// \nClass AbstractBasePage<T>;\n// \nClass DashboardPage;\n// \nClass LogOutPage;\n// \nClass SchedulingPage;\n// \nClass SearchPage;\n// \nClass StatisticsPage;\n// \nClass UrlsUploadPage;\n// \nClass UserSettingsPage;\n", "des": "Provides classes and interfaces of pages for Web UI"}
{"index": 231, "repo": "nutch-2.4", "code": "package assets\n\n// \nClass NutchUiCssReference;\n", "des": "Contains asset classes for Web UI"}
{"index": 232, "repo": "nutch-2.4", "code": "package auth\n\n// Marker interface for secured pages.\nInterface AuthenticatedWebPage;\n// Authorization strategy to check whether to allow a page or not.\nClass AuthorizationStrategy;\n// Sign in page implementation.\nClass SignInPage;\n// Checks for whether authenticate or not.\nClass SignInSession;\n// User bean for authentication.\nClass User;\n", "des": "Contains authorization classes for Web UI"}
{"index": 233, "repo": "nutch-2.4", "code": "package components\n\n// Label which renders connection status as bootstrap label\nClass ColorEnumLabel<E extends java.lang.Enum<E>>;\n// \nClass ColorEnumLabelBuilder<E extends java.lang.Enum<E>>;\n// This is iterator adapter, which wraps iterable items with CompoundPropertyModel.\nClass CpmIteratorAdapter<T>;\n", "des": "Contains component classes for Web UI"}
{"index": 234, "repo": "nutch-2.4", "code": "package crawls\n\n// \nClass CrawlPanel;\n// This page is for crawls management\nClass CrawlsPage;\n", "des": "Contains crawl page classes for Web UI"}
{"index": 235, "repo": "nutch-2.4", "code": "package instances\n\n// \nClass InstancePanel;\n// \nClass InstancesPage;\n", "des": "Contains instances pages classes for Web UI"}
{"index": 236, "repo": "nutch-2.4", "code": "package menu\n\n// \nClass VerticalMenu;\n", "des": "Contains menu page classes for Web UI"}
{"index": 237, "repo": "nutch-2.4", "code": "package seed\n\n// This page is for seed lists management\nClass SeedListsPage;\n// This page is for seed urls management\nClass SeedPage;\n", "des": "Contains seed pages' classes for Web UI"}
{"index": 238, "repo": "nutch-2.4", "code": "package settings\n\n// \nClass SettingsPage;\n", "des": "Contains settings page classes for Web UI"}
{"index": 239, "repo": "nutch-2.4", "code": "package service\n\n// \nInterface CrawlService;\n// \nInterface NutchInstanceService;\n// \nInterface NutchService;\n// \nInterface SeedListService;\n", "des": "Provides service classes and interfaces for Web UI"}
{"index": 240, "repo": "nutch-2.4", "code": "package impl\n\n// \nClass CrawlServiceImpl;\n// \nClass NutchInstanceServiceImpl;\n// \nClass NutchServiceImpl;\n// \nClass SeedListServiceImpl;\n", "des": "Contains service implementation classes for Web UI"}
{"index": 241, "repo": "nutch-2.4", "code": "package api\n\n// \nClass HttpBase;\n// This class is used for parsing robots for urls belonging to HTTP protocol.\nClass HttpRobotRulesParser;\n// \nClass BlockedException;\n// \nClass HttpException;\n", "des": "Common API used by HTTP plugins (http, httpclient)"}
{"index": 242, "repo": "nutch-2.4", "code": "package api\n\n// A generic regular expression rule.\nClass RegexRule;\n// Generic URL filter based on regular expressions.\nClass RegexURLFilterBase;\n", "des": "Generic URL filter library, abstracting away from regular expression implementations."}
{"index": 243, "repo": "nutch-2.4", "code": "package file\n\n// This class is a protocol plugin used for file: scheme.\nClass File;\n// FileResponse.java mimics file replies as http response.\nClass FileResponse;\n// Thrown for File error codes.\nClass FileError;\n// \nClass FileException;\n", "des": "Protocol plugin which supports retrieving local file resources."}
{"index": 244, "repo": "nutch-2.4", "code": "package ftp\n\n// Client.java encapsulates functionalities necessary for nutch to get dir list and retrieve file from an FTP server.\nClass Client;\n// This class is a protocol plugin used for ftp: scheme.\nClass Ftp;\n// FtpResponse.java mimics ftp replies as http response.\nClass FtpResponse;\n// This class is used for parsing robots for urls belonging to FTP protocol.\nClass FtpRobotRulesParser;\n// This is a support class for logging all ftp command/reply traffic.\nClass PrintCommandListener;\n// Thrown for Ftp error codes.\nClass FtpError;\n// Superclass for important exceptions thrown during FTP talk, that must be handled with care.\nClass FtpException;\n// Exception indicating bad reply of SYST command.\nClass FtpExceptionBadSystResponse;\n// Exception indicating failure of opening data connection.\nClass FtpExceptionCanNotHaveDataConnection;\n// Exception indicating control channel is closed by server end, due to forced closure of data channel at client (our) end.\nClass FtpExceptionControlClosedByForcedDataClose;\n// Exception indicating unrecognizable reply from server after forced closure of data channel by client (our) side.\nClass FtpExceptionUnknownForcedDataClose;\n", "des": "Protocol plugin which supports retrieving documents via the ftp protocol."}
{"index": 245, "repo": "nutch-2.4", "code": "package http\n\n// \nClass Http;\n// An HTTP response.\nClass HttpResponse;\n// \nEnum HttpResponse.Scheme;\n", "des": "Protocol plugin which supports retrieving documents via the http protocol."}
{"index": 246, "repo": "nutch-2.4", "code": "package httpclient\n\n// The base level of services required for Http Authentication\nInterface HttpAuthentication;\n// \nClass DummySSLProtocolSocketFactory;\n// \nClass DummyX509TrustManager;\n// This class is a protocol plugin that configures an HTTP client for Basic, Digest and NTLM authentication schemes for web server as well as proxy server.\nClass Http;\n// Provides the Http protocol implementation with the ability to authenticate when prompted.\nClass HttpAuthenticationFactory;\n// Implementation of RFC 2617 Basic Authentication.\nClass HttpBasicAuthentication;\n// An HTTP response.\nClass HttpResponse;\n// Can be used to identify problems during creation of Authentication objects.\nClass HttpAuthenticationException;\n", "des": "Protocol plugin which supports retrieving documents via the HTTP and HTTPS protocols, optionally with Basic, Digest and NTLM authentication schemes for web server as well as proxy server."}
{"index": 247, "repo": "nutch-2.4", "code": "package sftp\n\n// This class uses the Jsch package to fetch content using the Sftp protocol.\nClass Sftp;\n", "des": "Protocol plugin which supports retrieving documents via the sftp protocol."}
{"index": 248, "repo": "nutch-2.4", "code": "package automaton\n\n// RegexURLFilterBase implementation based on the dk.brics.automaton Finite-State Automata for JavaTM.\nClass AutomatonURLFilter;\n", "des": "URL filter plugin based on dk.brics.automaton Finite-State Automata for JavaTM."}
{"index": 249, "repo": "nutch-2.4", "code": "package domain\n\n// Filters URLs based on a file containing domain suffixes, domain names, and hostnames.\nClass DomainURLFilter;\n", "des": "URL filter plugin to include only URLs which match an element in a given list of domain suffixes, domain names, and/or host names."}
{"index": 250, "repo": "nutch-2.4", "code": "package prefix\n\n// Filters URLs based on a file of URL prefixes.\nClass PrefixURLFilter;\n", "des": "URL filter plugin to include only URLs which match one of a given list of URL prefixes."}
{"index": 251, "repo": "nutch-2.4", "code": "package regex\n\n// Filters URLs based on a file of regular expressions using the Java Regex implementation.\nClass RegexURLFilter;\n", "des": "URL filter plugin to include and/or exclude URLs matching Java regular expressions."}
{"index": 252, "repo": "nutch-2.4", "code": "package suffix\n\n// Filters URLs based on a file of URL suffixes.\nClass SuffixURLFilter;\n", "des": "URL filter plugin to either exclude or include only URLs which match one of the given (path) suffixes."}
{"index": 253, "repo": "nutch-2.4", "code": "package validator\n\n// Validates URLs.\nClass UrlValidator;\n", "des": "URL filter plugin that validates given urls."}
{"index": 254, "repo": "nutch-2.4", "code": "package basic\n\n// Converts URLs to a normal form: remove dot segments in path: /./ or /../ remove default ports, e.g.\nClass BasicURLNormalizer;\n", "des": "URL normalizer performing basic normalizations: remove default ports and dot segments in path."}
{"index": 255, "repo": "nutch-2.4", "code": "package pass\n\n// This URLNormalizer doesn't change urls.\nClass PassURLNormalizer;\n", "des": "URL normalizer dummy which does not change URLs."}
{"index": 256, "repo": "nutch-2.4", "code": "package regex\n\n// Allows users to do regex substitutions on all/any URLs that are encountered, which is useful for stripping session IDs from URLs.\nClass RegexURLNormalizer;\n", "des": "URL normalizer with configurable rules based on regular expressions (Pattern)."}
{"index": 257, "repo": "nutch-2.4", "code": "package link\n\n// \nClass LinkAnalysisScoringFilter;\n", "des": "Scoring filter"}
{"index": 258, "repo": "nutch-2.4", "code": "package opic\n\n// This plugin implements a variant of an Online Page Importance Computation (OPIC) score, described in this paper: Abiteboul, Serge and Preda, Mihai and Cobena, Gregory (2003), Adaptive On-Line Page Importance Computation .\nClass OPICScoringFilter;\n", "des": "Scoring filter implementing a variant of the Online Page Importance Computation (OPIC) algorithm."}
{"index": 259, "repo": "nutch-2.4", "code": "package tld\n\n// Scoring filter to boost tlds.\nClass TLDScoringFilter;\n", "des": "Top Level Domain Scoring plugin."}
{"index": 260, "repo": "nutch-2.4", "code": "package html\n\n// This class takes SAX events (in addition to some extra events that SAX doesn't handle yet) and adds the result to a document or document fragment.\nClass DOMBuilder;\n// A collection of methods for extracting content from DOM trees.\nClass DOMContentUtils;\n// \nClass DOMContentUtils.LinkParams;\n// Class for parsing META Directives from DOM trees.\nClass HTMLMetaProcessor;\n// \nClass HtmlParser;\n// Class used to verify whether the specified ch conforms to the XML 1.0 definition of whitespace.\nClass XMLCharacterRecognizer;\n", "des": "An HTML document parsing plugin."}
{"index": 261, "repo": "nutch-2.4", "code": "package js\n\n// This class is a heuristic link extractor for JavaScript files and code snippets.\nClass JSParseFilter;\n", "des": "Parser and parse filter plugin to extract all (possible) links from JavaScript files and embedded JavaScript code snippets."}
{"index": 262, "repo": "nutch-2.4", "code": "package tika\n\n// A collection of methods for extracting content from DOM trees.\nClass DOMContentUtils;\n// Class for parsing META Directives from DOM trees.\nClass HTMLMetaProcessor;\n// Wrapper for Tika parsers.\nClass TikaParser;\n", "des": "Parse various document formats with help of Apache Tika."}
{"index": 263, "repo": "nutch-2.4", "code": "package metatags\n\n// Parse HTML meta tags (keywords, description) and store them in the parse metadata so that they can be indexed with the index-metadata plugin with the prefix 'metatag.'.\nClass MetaTagsParser;\n", "des": "Parse filter to extract meta tags: keywords, description, etc."}
{"index": 264, "repo": "nutch-2.4", "code": "package anchor\n\n// Indexing filter that offers an option to either index all inbound anchor text for a document or deduplicate anchors.\nClass AnchorIndexingFilter;\n", "des": "An indexing plugin for inbound anchor text."}
{"index": 265, "repo": "nutch-2.4", "code": "package basic\n\n// Adds basic searchable fields to a document.\nClass BasicIndexingFilter;\n", "des": "A basic indexing plugin, adds basic fields: url, host, title, content, etc."}
{"index": 266, "repo": "nutch-2.4", "code": "package metadata\n\n// Indexer which can be configured to extract metadata from the crawldb, parse metadata or content metadata.\nClass MetadataIndexer;\n", "des": "Indexing filter to add document metadata to the index."}
{"index": 267, "repo": "nutch-2.4", "code": "package more\n\n// Add (or reset) a few metaData properties as respective fields (if they are available), so that they can be accurately used within the search index.\nClass MoreIndexingFilter;\n", "des": "A more indexing plugin, adds \"more\" index fields: last modified date, MIME type, content length."}
{"index": 268, "repo": "nutch-2.4", "code": "package subcollection\n\n// \nClass SubcollectionIndexingFilter;\n", "des": "Indexing filter to assign documents to subcollections."}
{"index": 269, "repo": "nutch-2.4", "code": "package tld\n\n// Adds the Top level domain extensions to the index\nClass TLDIndexingFilter;\n", "des": "Top Level Domain Indexing plugin."}
{"index": 270, "repo": "nutch-2.4", "code": "package solr\n\n// \nInterface SolrConstants;\n// \nClass SolrIndexWriter;\n// \nClass SolrMappingReader;\n// \nClass SolrUtils;\n", "des": "Index writer plugin for Apache Solr."}
{"index": 271, "repo": "nutch-2.4", "code": "package lang\n\n// Adds metadata identifying language of document if found We could also run statistical analysis here but we'd miss all other formats\nClass HTMLLanguageParser;\n// An IndexingFilter that adds a lang (language) field to the document.\nClass LanguageIndexingFilter;\n", "des": "Text document language identifier."}
{"index": 272, "repo": "nutch-2.4", "code": "package collection\n\n// \nClass CollectionManager;\n// SubCollection represents a subset of index, you can define url patterns that will indicate that particular page (url) is part of SubCollection.\nClass Subcollection;\n", "des": "Subcollection is a subset of an index."}
{"index": 273, "repo": "nutch-2.4", "code": "package reltag\n\n// An IndexingFilter that adds tag field(s) to the document.\nClass RelTagIndexingFilter;\n// Adds microformat rel-tags of document if found.\nClass RelTagParser;\n", "des": "A microformats Rel-Tag Parser/Indexer/Querier plugin."}
{"index": 274, "repo": "nutch-2.4", "code": "package nutch\n\n// Adds basic searchable fields to a document.\nClass CCIndexingFilter;\n// Adds metadata identifying the Creative Commons license used, if any.\nClass CCParseFilter;\n// Walks DOM tree, looking for RDF in comments and licenses in anchors.\nClass CCParseFilter.Walker;\n", "des": "Sample plugins that parse and index Creative Commons medadata."}
{"index": 275, "repo": "pdfbox-3.0.0-beta1", "code": "package contentstream\n\n// A content stream.\nInterface PDContentStream;\n// PDFStreamEngine subclass for advanced processing of graphics.\nClass PDFGraphicsStreamEngine;\n// Processes a PDF content stream and executes certain operations.\nClass PDFStreamEngine;\n", "des": "This package contains provides classes for working with content streams."}
{"index": 276, "repo": "pdfbox-3.0.0-beta1", "code": "package operator\n\n// Do: Draws an XObject.\nClass DrawObject;\n// An Operator in a PDF content stream.\nClass Operator;\n// \nClass OperatorName;\n// Processes a PDF operator.\nClass OperatorProcessor;\n// Throw when a PDF operator is missing required operands.\nClass MissingOperandException;\n", "des": "This package contains implementations of all of the PDF operators."}
{"index": 277, "repo": "pdfbox-3.0.0-beta1", "code": "package graphics\n\n// re Appends a rectangle to the path.\nClass AppendRectangleToPath;\n// BI Begins an inline image.\nClass BeginInlineImage;\n// W* Set clipping path using even odd rule.\nClass ClipEvenOddRule;\n// W Set the clipping path using non zero winding rule.\nClass ClipNonZeroRule;\n// s: close and stroke the path.\nClass CloseAndStrokePath;\n// b* Close, fill and stroke the path with even-odd winding rule.\nClass CloseFillEvenOddAndStrokePath;\n// b Close, fill and stroke the path with non-zero winding rule.\nClass CloseFillNonZeroAndStrokePath;\n// h Close the path.\nClass ClosePath;\n// c Append curved segment to path.\nClass CurveTo;\n// y Append curved segment to path with final point replicated.\nClass CurveToReplicateFinalPoint;\n// v Append curved segment to path with the initial point replicated.\nClass CurveToReplicateInitialPoint;\n// Do: Draws an XObject.\nClass DrawObject;\n// n End the path.\nClass EndPath;\n// B* Fill and then stroke the path, using the even-odd rule to determine the region to fill.\nClass FillEvenOddAndStrokePath;\n// f* Fill path using even odd rule.\nClass FillEvenOddRule;\n// B Fill and then stroke the path, using the nonzero winding number rule to determine the region to fill.\nClass FillNonZeroAndStrokePath;\n// f Fill path using non zero winding rule.\nClass FillNonZeroRule;\n// Base class for graphics operators.\nClass GraphicsOperatorProcessor;\n// F Fill path using non zero winding rule.\nClass LegacyFillNonZeroRule;\n// l Append straight line segment to path.\nClass LineTo;\n// m Begins a new subpath.\nClass MoveTo;\n// sh Fills the clipping area with the given shading pattern.\nClass ShadingFill;\n// S Stroke the path.\nClass StrokePath;\n", "des": "This package contains implementations of all of the PDF graphics operators."}
{"index": 278, "repo": "pdfbox-3.0.0-beta1", "code": "package cos\n\n// \nInterface COSUpdateInfo;\n// \nInterface ICOSParser;\n// An interface for visiting a PDF document at the type (COS) level.\nInterface ICOSVisitor;\n// An array of PDFBase objects as part of the PDF document.\nClass COSArray;\n// The base object that all objects in the PDF document will extend.\nClass COSBase;\n// This class represents a boolean value in the PDF document.\nClass COSBoolean;\n// This class represents a dictionary where name/value pairs reside.\nClass COSDictionary;\n// This is the in-memory representation of the PDF document.\nClass COSDocument;\n// An instance of COSDocumentState collects all known states a COSDocument may have and shall allow their evaluation.\nClass COSDocumentState;\n// This class represents a floating point number in a PDF document.\nClass COSFloat;\n// A COSIncrement starts at a given COSUpdateInfo to collect updates, that have been made to a COSDocument and therefore should be added to it´s next increment.\nClass COSIncrement;\n// An InputStream which reads from an encoded COS stream.\nClass COSInputStream;\n// This class represents an integer number in a PDF document.\nClass COSInteger;\n// A PDF Name object.\nClass COSName;\n// This class represents a null PDF object.\nClass COSNull;\n// This class represents an abstract number in a PDF document.\nClass COSNumber;\n// This class represents a PDF object.\nClass COSObject;\n// Object representing the physical reference to an indirect pdf object.\nClass COSObjectKey;\n// An OutputStream which writes to an encoded COS stream.\nClass COSOutputStream;\n// This class represents a stream object in a PDF document.\nClass COSStream;\n// A string object, which may be a text string, a PDFDocEncoded string, ASCII string, or byte string.\nClass COSString;\n// A COSUpdateState instance manages update states for a COSUpdateInfo.\nClass COSUpdateState;\n", "des": "These are the low level objects that make up a PDF document."}
{"index": 279, "repo": "pdfbox-3.0.0-beta1", "code": "package filter\n\n// Options that may be passed to a Filter to request special handling when decoding the stream.\nClass DecodeOptions;\n// The result of a filter decode operation.\nClass DecodeResult;\n// A filter for stream data.\nClass Filter;\n// Factory for Filter classes.\nClass FilterFactory;\n// Decompress data encoded using the wavelet-based JPEG 2000 standard, reproducing the original data.\nClass JPXFilter;\n// This is the filter used for the LZWDecode filter.\nClass LZWFilter;\n// Helper class to contain predictor decoding used by Flate and LZW filter.\nClass Predictor;\n// Thrown when a required JAI ImageReader is missing.\nClass MissingImageReaderException;\n", "des": "This package will hold the PDFBox implementations of the filters that are used in PDF documents."}
{"index": 280, "repo": "pdfbox-3.0.0-beta1", "code": "package pdfparser\n\n// This class is used to contain parsing logic that will be used by all parsers.\nClass BaseParser;\n// Brute force parser to be used as last resort if a malformed pdf can't be read.\nClass BruteForceParser;\n// COS-Parser which first reads startxref and xref tables in order to know valid objects and parse only these objects.\nClass COSParser;\n// \nClass FDFParser;\n// This will parse a PDF 1.5 object stream and extract the object with given object number from the stream.\nClass PDFObjectStreamParser;\n// \nClass PDFParser;\n// This will parse a PDF byte stream and extract operands and such.\nClass PDFStreamParser;\n// \nClass PDFXRefStream;\n// This will parse a PDF 1.5 (or better) Xref stream and extract the xref information from the stream.\nClass PDFXrefStreamParser;\n// This class will collect all XRef/trailer objects and creates correct xref/trailer information after all objects are read using startxref and 'Prev' information (unused XRef/trailer objects are discarded).\nClass XrefTrailerResolver;\n// The XRefType of a trailer.\nEnum XrefTrailerResolver.XRefType;\n", "des": "The pdfparser package contains classes to parse PDF documents and objects within the document."}
{"index": 281, "repo": "pdfbox-3.0.0-beta1", "code": "package pdfwriter\n\n// A class that will take a list of tokens and write out a stream with them.\nClass ContentStreamWriter;\n// simple output stream with some minor features for generating \"pretty\" PDF files.\nClass COSStandardOutputStream;\n// This class acts on a in-memory representation of a PDF document.\nClass COSWriter;\n", "des": "This is the persistence layer used to write the PDFBox documents to a stream."}
{"index": 282, "repo": "pdfbox-3.0.0-beta1", "code": "package pdmodel\n\n// A document-wide cache for page resources.\nInterface ResourceCache;\n// A resource cached based on SoftReference, retains resources until memory pressure causes them to be garbage collected.\nClass DefaultResourceCache;\n// Provides the ability to write to an appearance content stream.\nClass PDAppearanceContentStream;\n// This class holds all of the name trees that are available at the document level.\nClass PDDestinationNameTreeNode;\n// This is the in-memory representation of the PDF document.\nClass PDDocument;\n// The Document Catalog of a PDF.\nClass PDDocumentCatalog;\n// This is the document metadata.\nClass PDDocumentInformation;\n// This encapsulates the \"dictionary of names and corresponding destinations\" for the /Dests entry in the document catalog.\nClass PDDocumentNameDestinationDictionary;\n// This class holds all of the name trees that are available at the document level.\nClass PDDocumentNameDictionary;\n// This class holds all of the name trees that are available at the document level.\nClass PDEmbeddedFilesNameTreeNode;\n// \nClass PDFormContentStream;\n// This class holds all of the name trees that are available at the document level.\nClass PDJavascriptNameTreeNode;\n// A page in a PDF document.\nClass PDPage;\n// Provides the ability to write to a page content stream.\nClass PDPageContentStream;\n// The page tree, which defines the ordering of pages in the document in an efficient manner.\nClass PDPageTree;\n// \nClass PDPatternContentStream;\n// A set of resources available at the page/pages/stream level.\nClass PDResources;\n// todo: JavaDoc\nClass PDStructureElementNameTreeNode;\n// A name object specifying the page layout shall be used when the document is opened.\nEnum PageLayout;\n// A name object specifying how the document shall be displayed when opened.\nEnum PageMode;\n// This is to choose what to do with the stream: overwrite, append or prepend.\nEnum PDPageContentStream.AppendMode;\n// Thrown when a named resource is missing.\nClass MissingResourceException;\n", "des": "The PDModel package represents a high level API for creating and manipulating PDF documents."}
{"index": 283, "repo": "pdfbox-3.0.0-beta1", "code": "package common\n\n// This is an interface used to get/create the underlying COSObject.\nInterface COSObjectable;\n// This is an interface used for some elements such as the document OpenAction that can be either a Destination or an Action.\nInterface PDDestinationOrAction;\n// This is an implementation of a List that will sync its contents to a COSArray.\nClass COSArrayList<E>;\n// This is a Map that will automatically sync the contents to a COSDictionary.\nClass COSDictionaryMap<K,V>;\n// A wrapper for a COS dictionary.\nClass PDDictionaryWrapper;\n// Immutable class for constant sizes.\nClass PDImmutableRectangle;\n// This class represents metadata for various objects in a PDF document.\nClass PDMetadata;\n// This class represents a node in a name tree.\nClass PDNameTreeNode<T extends COSObjectable>;\n// This class represents a PDF Number tree.\nClass PDNumberTreeNode;\n// A PDStream represents a stream in a PDF document.\nClass PDObjectStream;\n// Contains information for a page label range.\nClass PDPageLabelRange;\n// Represents the page label dictionary of a document.\nClass PDPageLabels;\n// This class will be used to signify a range.\nClass PDRange;\n// A rectangle in a PDF document.\nClass PDRectangle;\n// A PDStream represents a stream in a PDF document.\nClass PDStream;\n// A wrapper for a COS dictionary including Type information.\nClass PDTypedDictionaryWrapper;\n", "des": "High level PD classes that are used throughout several packages are placed in the PDModel common package."}
{"index": 284, "repo": "pdfbox-3.0.0-beta1", "code": "package filespecification\n\n// This represents a file specification.\nClass PDComplexFileSpecification;\n// This represents an embedded file in a file specification.\nClass PDEmbeddedFile;\n// This represents a file specification.\nClass PDFileSpecification;\n// A file specification that is just a string.\nClass PDSimpleFileSpecification;\n", "des": "The file specification package defines classes that are used for the PDF File Specification logic."}
{"index": 285, "repo": "pdfbox-3.0.0-beta1", "code": "package function\n\n// This class represents a function in a PDF document.\nClass PDFunction;\n// This class represents a type 0 function in a PDF document.\nClass PDFunctionType0;\n// This class represents a Type 2 (exponential interpolation) function in a PDF document.\nClass PDFunctionType2;\n// This class represents a Type 3 (stitching) function in a PDF document.\nClass PDFunctionType3;\n// This class represents a Type 4 (PostScript calculator) function in a PDF document.\nClass PDFunctionType4;\n// The identity function.\nClass PDFunctionTypeIdentity;\n", "des": "This package contains functions that are available in the PDF specification."}
{"index": 286, "repo": "pdfbox-3.0.0-beta1", "code": "package type4\n\n// Interface for PostScript operators.\nInterface Operator;\n// This interface defines all possible syntactic elements of a Type 4 function.\nInterface Parser.SyntaxHandler;\n// Makes up the execution context, holding the available operators and the execution stack.\nClass ExecutionContext;\n// Represents an instruction sequence, a combination of values, operands and nested procedures.\nClass InstructionSequence;\n// Basic parser for Type 4 functions which is used to build up instruction sequences.\nClass InstructionSequenceBuilder;\n// This class provides all the supported operators.\nClass Operators;\n// Parser for PDF Type 4 functions.\nClass Parser;\n// Abstract base class for a Parser.SyntaxHandler.\nClass Parser.AbstractSyntaxHandler;\n", "des": "This package contains Type 4 function support."}
{"index": 287, "repo": "pdfbox-3.0.0-beta1", "code": "package logicalstructure\n\n// An attribute object.\nClass PDAttributeObject;\n// A default attribute object.\nClass PDDefaultAttributeObject;\n// A marked-content reference.\nClass PDMarkedContentReference;\n// The MarkInfo provides additional information relevant to specialized uses of structured documents.\nClass PDMarkInfo;\n// An object reference.\nClass PDObjectReference;\n// Described in the PDF specification in the ParentTree segment of the table \"Entries in the structure tree root\".\nClass PDParentTreeValue;\n// A structure element.\nClass PDStructureElement;\n// A node in the structure tree.\nClass PDStructureNode;\n// A root of a structure tree.\nClass PDStructureTreeRoot;\n// A User attribute object.\nClass PDUserAttributeObject;\n// A user property.\nClass PDUserProperty;\n// \nClass Revisions<T>;\n", "des": "The logical structure package provides a mechanism for incorporating structural information about a document's content into a PDF file."}
{"index": 288, "repo": "pdfbox-3.0.0-beta1", "code": "package markedcontent\n\n// A marked content.\nClass PDMarkedContent;\n// A property list is a dictionary containing private information meaningful to the conforming writer creating the marked content.\nClass PDPropertyList;\n", "des": "The marked content package provides a mechanism for modeling marked-content sequences."}
{"index": 289, "repo": "pdfbox-3.0.0-beta1", "code": "package prepress\n\n// The Box Style specifies visual characteristics for displaying box areas.\nClass PDBoxStyle;\n", "des": "This package contains classes for prepress support in PDFBox."}
{"index": 290, "repo": "pdfbox-3.0.0-beta1", "code": "package taggedpdf\n\n// An artifact marked content.\nClass PDArtifactMarkedContent;\n// An Export Format attribute object.\nClass PDExportFormatAttributeObject;\n// An object for four colours.\nClass PDFourColours;\n// A Layout attribute object.\nClass PDLayoutAttributeObject;\n// A List attribute object.\nClass PDListAttributeObject;\n// A PrintField attribute object.\nClass PDPrintFieldAttributeObject;\n// A standard attribute object.\nClass PDStandardAttributeObject;\n// A Table attribute object.\nClass PDTableAttributeObject;\n// The standard structure types.\nClass StandardStructureTypes;\n", "des": "The tagged PDF package provides a mechanism for incorporating \"tags\" (standard structure types and attributes) into a PDF file."}
{"index": 291, "repo": "pdfbox-3.0.0-beta1", "code": "package encryption\n\n// This class represents the access permissions to a document.\nClass AccessPermission;\n// This class represents data required to decrypt PDF documents.\nClass DecryptionMaterial;\n// This class is a specialized view of the crypt filter dictionary of a PDF document.\nClass PDCryptFilterDictionary;\n// This class is a specialized view of the encryption dictionary of a PDF document.\nClass PDEncryption;\n// This class represents the protection policy to apply to a document.\nClass ProtectionPolicy;\n// This class holds necessary information to decrypt a PDF document protected by the public key security handler.\nClass PublicKeyDecryptionMaterial;\n// The protection policy to use to protect a document with the public key security handler.\nClass PublicKeyProtectionPolicy;\n// Represents a recipient in the public key protection policy.\nClass PublicKeyRecipient;\n// This class implements the public key security handler described in the PDF specification.\nClass PublicKeySecurityHandler;\n// A security handler as described in the PDF specifications.\nClass SecurityHandler<T_POLICY extends ProtectionPolicy>;\n// Manages security handlers for the application.\nClass SecurityHandlerFactory;\n// Singleton which provides a security provider.\nClass SecurityProvider;\n// Represents the necessary information to decrypt a document protected by the standard security handler (password protection).\nClass StandardDecryptionMaterial;\n// The protection policy to add to a document for password-based protection.\nClass StandardProtectionPolicy;\n// The standard security handler.\nClass StandardSecurityHandler;\n// Indicates that an invalid password was supplied.\nClass InvalidPasswordException;\n", "des": "The encryption package will handle the PDF document security handlers and the functionality of pluggable security handlers."}
{"index": 292, "repo": "pdfbox-3.0.0-beta1", "code": "package fdf\n\n// This represents an FDF annotation that is part of the FDF document.\nClass FDFAnnotation;\n// This represents a Caret FDF annotation.\nClass FDFAnnotationCaret;\n// This represents a Circle FDF annotation.\nClass FDFAnnotationCircle;\n// This represents a FileAttachment FDF annotation.\nClass FDFAnnotationFileAttachment;\n// This represents a FreeText FDF annotation.\nClass FDFAnnotationFreeText;\n// This represents a Highlight FDF annotation.\nClass FDFAnnotationHighlight;\n// This represents a Ink FDF annotation.\nClass FDFAnnotationInk;\n// This represents a Line FDF annotation.\nClass FDFAnnotationLine;\n// This represents a Polygon FDF annotation.\nClass FDFAnnotationLink;\n// This represents a Polygon FDF annotation.\nClass FDFAnnotationPolygon;\n// This represents a Polyline FDF annotation.\nClass FDFAnnotationPolyline;\n// This represents a Sound FDF annotation.\nClass FDFAnnotationSound;\n// This represents a Square FDF annotation.\nClass FDFAnnotationSquare;\n// This represents a Squiggly FDF annotation.\nClass FDFAnnotationSquiggly;\n// This represents a Stamp FDF annotation.\nClass FDFAnnotationStamp;\n// This represents a StrikeOut FDF annotation.\nClass FDFAnnotationStrikeOut;\n// This represents a Text FDF annotation.\nClass FDFAnnotationText;\n// This abstract class is used as a superclass for the different FDF annotations with text markup attributes.\nClass FDFAnnotationTextMarkup;\n// This represents a Underline FDF annotation.\nClass FDFAnnotationUnderline;\n// This represents an FDF catalog that is part of the FDF document.\nClass FDFCatalog;\n// This represents an FDF dictionary that is part of the FDF document.\nClass FDFDictionary;\n// This is the in-memory representation of the FDF document.\nClass FDFDocument;\n// This represents an FDF field that is part of the FDF document.\nClass FDFField;\n// This represents an Icon fit dictionary for an FDF field.\nClass FDFIconFit;\n// This represents an FDF JavaScript dictionary that is part of the FDF document.\nClass FDFJavaScript;\n", "des": "The fdf package will handle all of the logic used for FDF objects inside of the PDF/FDF document."}
{"index": 293, "repo": "pdfbox-3.0.0-beta1", "code": "package font\n\n// Font mapper, locates non-embedded fonts.\nInterface FontMapper;\n// A font-like object.\nInterface PDFontLike;\n// A vector outline font, e.g.\nInterface PDVectorFont;\n// A CIDFontMapping is a kind of FontMapping which allows for an additional TrueTypeFont substitute to be provided if a CID font is not available.\nClass CIDFontMapping;\n// Represents a CIDSystemInfo for the FontMapper API.\nClass CIDSystemInfo;\n// An in-memory cache for system fonts.\nClass FontCache;\n// Information about a font on the system.\nClass FontInfo;\n// FontMapper factory class.\nClass FontMappers;\n// A font mapping from a PDF font to a FontBox font.\nClass FontMapping<T extends org.apache.fontbox.FontBoxFont>;\n// External font service provider interface.\nClass FontProvider;\n// A CIDFont.\nClass PDCIDFont;\n// Type 0 CIDFont (CFF).\nClass PDCIDFontType0;\n// Type 2 CIDFont (TrueType).\nClass PDCIDFontType2;\n// Represents a CIDSystemInfo.\nClass PDCIDSystemInfo;\n// This is the base class for all PDF fonts.\nClass PDFont;\n// A font descriptor.\nClass PDFontDescriptor;\n// Creates the appropriate font subtype based on information in the dictionary.\nClass PDFontFactory;\n// Type 1 Multiple Master Font.\nClass PDMMType1Font;\n// Represents the \"Panose\" entry of a FontDescriptor's Style dictionary.\nClass PDPanose;\n// Represents a 10-byte PANOSE classification.\nClass PDPanoseClassification;\n// A simple font.\nClass PDSimpleFont;\n// TrueType font.\nClass PDTrueTypeFont;\n// A Composite (Type 0) font.\nClass PDType0Font;\n// Type 1-equivalent CFF font.\nClass PDType1CFont;\n// A PostScript Type 1 Font.\nClass PDType1Font;\n// A Type 3 character procedure.\nClass PDType3CharProc;\n// A PostScript Type 3 Font.\nClass PDType3Font;\n", "des": "Classes to deal with font functionality in a PDF Document."}
{"index": 294, "repo": "pdfbox-3.0.0-beta1", "code": "package graphics\n\n// This class represents a font setting used for the graphics state.\nClass PDFontSetting;\n// A line dash pattern for stroking paths.\nClass PDLineDashPattern;\n// A PostScript XObject.\nClass PDPostScriptXObject;\n// An external object, or \"XObject\".\nClass PDXObject;\n", "des": "The PDModel graphics package deals with graphics states, operations, and parameters within the PDF document."}
{"index": 295, "repo": "pdfbox-3.0.0-beta1", "code": "package color\n\n// A CalGray colour space is a special case of a single-component CIE-based colour space.\nClass PDCalGray;\n// A CalRGB colour space is a CIE-based colour space with one transformation stage instead of two.\nClass PDCalRGB;\n// CIE-based colour spaces specify colours in a way that is independent of the characteristics of any particular output device.\nClass PDCIEBasedColorSpace;\n// CIE-based colour spaces that use a dictionary.\nClass PDCIEDictionaryBasedColorSpace;\n// A color value, consisting of one or more color components, or for pattern color spaces, a name and optional color components.\nClass PDColor;\n// A color space specifies how the colours of graphics objects will be painted on the page.\nClass PDColorSpace;\n// Allows colors to be specified according to the subtractive CMYK (cyan, magenta, yellow, black) model typical of printers and other paper-based output devices.\nClass PDDeviceCMYK;\n// Device colour spaces directly specify colours or shades of gray produced by an output device.\nClass PDDeviceColorSpace;\n// A color space with black, white, and intermediate shades of gray.\nClass PDDeviceGray;\n// DeviceN colour spaces may contain an arbitrary number of colour components.\nClass PDDeviceN;\n// Contains additional information about the components of colour space.\nClass PDDeviceNAttributes;\n// A DeviceN Process Dictionary\nClass PDDeviceNProcess;\n// Colours in the DeviceRGB colour space are specified according to the additive RGB (red-green-blue) colour model.\nClass PDDeviceRGB;\n// A gamma array, or collection of three floating point parameters used for color operations.\nClass PDGamma;\n// ICCBased color spaces are based on a cross-platform color profile as defined by the International Color Consortium (ICC).\nClass PDICCBased;\n// An Indexed colour space specifies that an area is to be painted using a colour table of arbitrary colours from another color space.\nClass PDIndexed;\n// A color space embedded in a JPX file.\nClass PDJPXColorSpace;\n// A Lab colour space is a CIE-based ABC colour space with two transformation stages.\nClass PDLab;\n", "des": "This package deals with colors that are stored in a PDF document."}
{"index": 296, "repo": "pdfbox-3.0.0-beta1", "code": "package form\n\n// A Form XObject.\nClass PDFormXObject;\n// A transparency group.\nClass PDTransparencyGroup;\n// Transparency group attributes.\nClass PDTransparencyGroupAttributes;\n", "des": "This package deals with Form XObjects that are stored in a PDF document."}
{"index": 297, "repo": "pdfbox-3.0.0-beta1", "code": "package image\n\n// An image in a PDF document.\nInterface PDImage;\n// Factory for creating a PDImageXObject containing a CCITT Fax compressed TIFF image.\nClass CCITTFactory;\n// Factory for creating a PDImageXObject containing a JPEG compressed image.\nClass JPEGFactory;\n// Factory for creating a PDImageXObject containing a lossless compressed image.\nClass LosslessFactory;\n// An Image XObject.\nClass PDImageXObject;\n// An inline image object which uses a special syntax to express the data for a small image directly within the content stream.\nClass PDInlineImage;\n", "des": "This package deals with images that are stored in a PDF document."}
{"index": 298, "repo": "pdfbox-3.0.0-beta1", "code": "package pattern\n\n// This class wraps a pattern dictionary.\nClass PDAbstractPattern;\n// A shading pattern dictionary.\nClass PDShadingPattern;\n// A tiling pattern dictionary.\nClass PDTilingPattern;\n", "des": "This package deals with patterns which are used instead of colors."}
{"index": 299, "repo": "pdfbox-3.0.0-beta1", "code": "package shading\n\n// AWT PaintContext for axial shading.\nClass AxialShadingContext;\n// AWT Paint for axial shading.\nClass AxialShadingPaint;\n// A Shading Resource.\nClass PDShading;\n// Resources for a function based shading.\nClass PDShadingType1;\n// Resources for an axial shading.\nClass PDShadingType2;\n// Resources for a radial shading.\nClass PDShadingType3;\n// Resources for a shading type 4 (Free-Form Gouraud-Shaded Triangle Mesh).\nClass PDShadingType4;\n// Resources for a shading type 5 (Lattice-Form Gouraud-Shade Triangle Mesh).\nClass PDShadingType5;\n// Resources for a shading type 6 (Coons Patch Mesh).\nClass PDShadingType6;\n// Resources for a shading type 7 (Tensor-Product Patch Mesh).\nClass PDShadingType7;\n// AWT PaintContext for radial shading.\nClass RadialShadingContext;\n// AWT Paint for radial shading.\nClass RadialShadingPaint;\n// A base class to handle what is common to all shading types.\nClass ShadingContext;\n// This is base class for all PDShading-Paints to allow other low level libraries access to the shading source data.\nClass ShadingPaint<T extends PDShading>;\n", "des": "This package deals with shadings which are used for filling instead of a color."}
{"index": 300, "repo": "pdfbox-3.0.0-beta1", "code": "package state\n\n// An extended graphics state dictionary.\nClass PDExtendedGraphicsState;\n// The current state of the graphics parameters when executing a content stream.\nClass PDGraphicsState;\n// Soft mask.\nClass PDSoftMask;\n// This class will hold the current state of the text parameters when executing a content stream.\nClass PDTextState;\n// Rendering intent.\nEnum RenderingIntent;\n// Text Rendering Mode.\nEnum RenderingMode;\n", "des": "This package deals with graphics states within the PDF document."}
{"index": 301, "repo": "pdfbox-3.0.0-beta1", "code": "package action\n\n// This represents an action that can be executed in a PDF document.\nClass PDAction;\n// This represents a embedded go-to action that can be executed in a PDF document.\nClass PDActionEmbeddedGoTo;\n// This class will take a dictionary and determine which type of action to create.\nClass PDActionFactory;\n// This represents a go-to action that can be executed in a PDF document.\nClass PDActionGoTo;\n// This represents a thread action that can be executed in a PDF document.\nClass PDActionHide;\n// \nClass PDActionImportData;\n// This represents a JavaScript action.\nClass PDActionJavaScript;\n// This represents a launch action that can be executed in a PDF document.\nClass PDActionLaunch;\n// \nClass PDActionMovie;\n// This represents a named action in a PDF document.\nClass PDActionNamed;\n// This represents a remote go-to action that can be executed in a PDF document.\nClass PDActionRemoteGoTo;\n// \nClass PDActionResetForm;\n// This represents a Sound action that can be executed in a PDF document.\nClass PDActionSound;\n// This represents a Submit-Form action that can be executed in a PDF document.\nClass PDActionSubmitForm;\n// This represents a thread action that can be executed in a PDF document.\nClass PDActionThread;\n// This represents a URI action that can be executed in a PDF document.\nClass PDActionURI;\n// This represents a dictionary of actions that occur due to events.\nClass PDAdditionalActions;\n// This class represents an annotation's dictionary of actions that occur due to events.\nClass PDAnnotationAdditionalActions;\n// This class represents a document catalog's dictionary of actions that occur due to events.\nClass PDDocumentCatalogAdditionalActions;\n// This class represents a form field's dictionary of actions that occur due to events.\nClass PDFormFieldAdditionalActions;\n// This class represents a page object's dictionary of actions that occur due to events.\nClass PDPageAdditionalActions;\n// A target dictionary specifying path information to the target document.\nClass PDTargetDirectory;\n// This is the implementation of an URI dictionary.\nClass PDURIDictionary;\n// Launch parameters for the windows OS.\nClass PDWindowsLaunchParams;\n", "des": "This package represents actions that can be performed in a PDF document."}
{"index": 302, "repo": "pdfbox-3.0.0-beta1", "code": "package annotation\n\n// Simple interface allowing the use of an annotation filter visitor.\nInterface AnnotationFilter;\n// A PDF annotation.\nClass PDAnnotation;\n// \nClass PDAnnotationCaret;\n// \nClass PDAnnotationCircle;\n// This is the class that represents a file attachment.\nClass PDAnnotationFileAttachment;\n// \nClass PDAnnotationFreeText;\n// \nClass PDAnnotationHighlight;\n// \nClass PDAnnotationInk;\n// This is the class that represents a line annotation.\nClass PDAnnotationLine;\n// This is the class that represents a link annotation.\nClass PDAnnotationLink;\n// This class represents the additional fields of a Markup type Annotation.\nClass PDAnnotationMarkup;\n// \nClass PDAnnotationPolygon;\n// \nClass PDAnnotationPolyline;\n// This is the class that represents a popup annotation.\nClass PDAnnotationPopup;\n// This is the class that represents a rubber stamp annotation.\nClass PDAnnotationRubberStamp;\n// \nClass PDAnnotationSound;\n// \nClass PDAnnotationSquare;\n// This is the class that represents a rectangular or elliptical annotation introduced in PDF 1.3 specification .\nClass PDAnnotationSquareCircle;\n// \nClass PDAnnotationSquiggly;\n// \nClass PDAnnotationStrikeout;\n// This is the class that represents a text annotation.\nClass PDAnnotationText;\n// This is the abstract class that represents a text markup annotation introduced in the PDF 1.3 specification, except Squiggly lines in 1.4.\nClass PDAnnotationTextMarkup;\n// \nClass PDAnnotationUnderline;\n// This is the class that represents an arbitrary Unknown Annotation type.\nClass PDAnnotationUnknown;\n// This is the class that represents a widget annotation.\nClass PDAnnotationWidget;\n// This class represents an appearance characteristics dictionary.\nClass PDAppearanceCharacteristicsDictionary;\n// An appearance dictionary specifying how the annotation shall be presented visually on the page.\nClass PDAppearanceDictionary;\n// An entry in an appearance dictionary.\nClass PDAppearanceEntry;\n// An appearance stream is a form XObject, a self-contained content stream that shall be rendered inside the annotation rectangle.\nClass PDAppearanceStream;\n", "des": "The annotation package contains classes that work with PDF annotation elements."}
{"index": 303, "repo": "pdfbox-3.0.0-beta1", "code": "package digitalsignature\n\n// Interface for external signature creation scenarios.\nInterface ExternalSigningSupport;\n// Providing an interface for accessing necessary functions for signing a PDF document.\nInterface SignatureInterface;\n// A filtered stream that includes the bytes that are in the (begin,length) intervals passed in the constructor.\nClass COSFilterInputStream;\n// A signature build dictionary as specified in the PDF Signature Build Dictionary Specification.\nClass PDPropBuild;\n// The general property dictionaries from the build property dictionary.\nClass PDPropBuildDataDict;\n// This represents a pdf signature seed value dictionary.\nClass PDSeedValue;\n// This class represents a certificate seed value dictionary that is in the seed value which puts constraints on certificates when signing documents.\nClass PDSeedValueCertificate;\n// This MDP dictionary is a part of the seed value dictionary and define if a author signature or a certification signature should be use.\nClass PDSeedValueMDP;\n// If exist, it describe where the signature handler can request a RFC3161 timestamp and if it is a must have for the signature.\nClass PDSeedValueTimeStamp;\n// This represents a digital signature that can be attached to a document.\nClass PDSignature;\n// This contains the visual signature as a COSDocument, its preferred size and the page.\nClass SignatureOptions;\n// Class to be used when creating PDF signatures externally.\nClass SigningSupport;\n", "des": "The digital signature library will manage signatures that are stored in the PDF document."}
{"index": 304, "repo": "pdfbox-3.0.0-beta1", "code": "package visible\n\n// That class builds visible signature template which will be added in our PDF document.\nInterface PDFTemplateBuilder;\n// Class to build PDF template.\nClass PDFTemplateCreator;\n// Structure of PDF document with visible signature.\nClass PDFTemplateStructure;\n// Implementation of PDFTemplateBuilder.\nClass PDVisibleSigBuilder;\n// Class for visible signature design properties.\nClass PDVisibleSignDesigner;\n// This builder class is in order to create visible signature properties.\nClass PDVisibleSigProperties;\n", "des": "This is the visual signature part that help creating the visual representation for the digital signature."}
{"index": 305, "repo": "pdfbox-3.0.0-beta1", "code": "package destination\n\n// This represents a destination in a PDF document.\nClass PDDestination;\n// This represents a destination to a page by referencing it with a name.\nClass PDNamedDestination;\n// This represents a destination to a page, see subclasses for specific parameters.\nClass PDPageDestination;\n// This represents a destination to a page and the page contents will be magnified to just fit on the screen.\nClass PDPageFitDestination;\n// This represents a destination to a page at a x location and the height is magnified to just fit on the screen.\nClass PDPageFitHeightDestination;\n// This represents a destination to a page at a y location and the width is magnified to just fit on the screen.\nClass PDPageFitRectangleDestination;\n// This represents a destination to a page at a y location and the width is magnified to just fit on the screen.\nClass PDPageFitWidthDestination;\n// This represents a destination to a page at an x,y coordinate with a zoom setting.\nClass PDPageXYZDestination;\n", "des": "The destination package allows destinations into a pdf document to be specified."}
{"index": 306, "repo": "pdfbox-3.0.0-beta1", "code": "package outline\n\n// This represents an outline in a pdf document.\nClass PDDocumentOutline;\n// This represents an outline item in a pdf document.\nClass PDOutlineItem;\n// Base class for a node in the outline of a PDF document.\nClass PDOutlineNode;\n", "des": "The outline package allows for a PDF outline(bookmarks) to be created."}
{"index": 307, "repo": "pdfbox-3.0.0-beta1", "code": "package form\n\n// \nInterface ScriptingHandler;\n// A set of utility methods to help with common AcroForm form and field related functions.\nClass FieldUtils;\n// An interactive form, also known as an AcroForm.\nClass PDAcroForm;\n// A button field represents an interactive control on the screen that the user can manipulate with the mouse.\nClass PDButton;\n// A check box toggles between two states, on and off.\nClass PDCheckBox;\n// A choice field contains several text items, one or more of which shall be selected as the field value.\nClass PDChoice;\n// A combo box consisting of a drop-down list.\nClass PDComboBox;\n// A field in an interactive form.\nClass PDField;\n// A PDField factory.\nClass PDFieldFactory;\n// The field tree.\nClass PDFieldTree;\n// A scrollable list box.\nClass PDListBox;\n// A non terminal field in an interactive form.\nClass PDNonTerminalField;\n// A pushbutton is a purely interactive control that responds immediately to user input without retaining a permanent value.\nClass PDPushButton;\n// Radio button fields contain a set of related buttons that can each be on or off.\nClass PDRadioButton;\n// A signature field is a form field that contains a digital signature.\nClass PDSignatureField;\n// A field in an interactive form.\nClass PDTerminalField;\n// A text field is a box or space for text fill-in data typically entered from a keyboard.\nClass PDTextField;\n// Base class for fields which use \"Variable Text\".\nClass PDVariableText;\n// An XML Forms Architecture (XFA) resource.\nClass PDXFAResource;\n", "des": "The interactive package contains classes for handling Interactive Forms, also known as \"AcroForms\"."}
{"index": 308, "repo": "pdfbox-3.0.0-beta1", "code": "package measurement\n\n// This class represents a measure dictionary.\nClass PDMeasureDictionary;\n// This class represents a number format dictionary.\nClass PDNumberFormatDictionary;\n// This class represents a rectlinear measure dictionary.\nClass PDRectlinearMeasureDictionary;\n// This class represents a viewport dictionary.\nClass PDViewportDictionary;\n", "des": "The measurement package contains classes that work with elements specifying measure properties."}
{"index": 309, "repo": "pdfbox-3.0.0-beta1", "code": "package pagenavigation\n\n// This a single thread in a PDF document.\nClass PDThread;\n// This a single bead in a thread in a PDF document.\nClass PDThreadBead;\n// Represents a page transition as defined in paragraph 12.4.4.1 of PDF 32000-1:2008\nClass PDTransition;\n// The dimension in which the specified transition effect shall occur.\nEnum PDTransitionDimension;\n// The direction in which the specified transition effect shall moves, expressed in degrees counterclockwise starting from a left-to-right direction.\nEnum PDTransitionDirection;\n// The direction of motion for the specified transition effect.\nEnum PDTransitionMotion;\n// The transition style that shall be used when moving to the page from another during a presentation.\nEnum PDTransitionStyle;\n", "des": "A package to allow provide access to PDF page navigation functionality."}
{"index": 310, "repo": "pdfbox-3.0.0-beta1", "code": "package viewerpreferences\n\n// This is the document viewing preferences.\nClass PDViewerPreferences;\n// Enumeration containing all valid values for boundaries.\nEnum PDViewerPreferences.BOUNDARY;\n// Enumeration containing all valid values for duplex.\nEnum PDViewerPreferences.DUPLEX;\n// Enumeration containing all valid values for NonFullScreenPageMode.\nEnum PDViewerPreferences.NON_FULL_SCREEN_PAGE_MODE;\n// Enumeration containing all valid values for printscaling.\nEnum PDViewerPreferences.PRINT_SCALING;\n// Enumeration containing all valid values for ReadingDirection.\nEnum PDViewerPreferences.READING_DIRECTION;\n", "des": "A package to allow access to document viewing preferences."}
{"index": 311, "repo": "pdfbox-3.0.0-beta1", "code": "package util\n\n// Converts dates to strings and back using the PDF date standard in section 3.8.2 of PDF Reference 1.7.\nClass DateConverter;\n// Utility functions for hex encoding.\nClass Hex;\n// This class provides an iterative (bottom-up) implementation of the MergeSort algorithm for any generic Java object which implements a Comparator.\nClass IterativeMergeSort;\n// This class will be used for matrix manipulation.\nClass Matrix;\n// This class contains methods to format numbers.\nClass NumberFormatUtil;\n// Map implementation with a smallest possible memory usage.\nClass SmallMap<K,V>;\n// A 2D vector.\nClass Vector;\n// Exposes PDFBox version.\nClass Version;\n// This class with handle some simple XML operations.\nClass XMLUtil;\n", "des": "This package contains utility classes that are used by the PDFBox project."}
{"index": 312, "repo": "commons-geometry-enclosing-1.0-beta1", "code": "package enclosing\n\n// Interface for algorithms computing enclosing balls.\nInterface Encloser<P extends Point<P>>;\n// Interface for generating balls based on support points.\nInterface SupportBallGenerator<P extends Point<P>>;\n// This class represents a ball enclosing some points.\nClass EnclosingBall<P extends Point<P>>;\n// Class implementing Emo Welzl's algorithm to find the smallest enclosing ball in linear time.\nClass WelzlEncloser<P extends Point<P>>;\n", "des": "This package provides interfaces and classes related to the smallest enclosing ball problem."}
{"index": 313, "repo": "commons-geometry-enclosing-1.0-beta1", "code": "package threed\n\n// Class generating a sphere from its support points.\nClass SphereGenerator;\n// Extension of the WelzlEncloser class for Euclidean 3D space.\nClass WelzlEncloser3D;\n", "des": "This package provides classes related to the smallest enclosing ball problem in three dimensions."}
{"index": 314, "repo": "commons-geometry-enclosing-1.0-beta1", "code": "package twod\n\n// Class generating a disk from its support points.\nClass DiskGenerator;\n// Extension of the WelzlEncloser class for Euclidean 2D space.\nClass WelzlEncloser2D;\n", "des": "This package provides classes related to the smallest enclosing ball problem in two dimensions."}
{"index": 315, "repo": "kafka-clients-3.5.0", "code": "package admin\n\n// The administrative client for Kafka, which supports managing and inspecting topics, brokers, configurations and ACLs.\nInterface Admin;\n// \nClass AbortTransactionOptions;\n// The result of Admin.abortTransaction(AbortTransactionSpec, AbortTransactionOptions).\nClass AbortTransactionResult;\n// \nClass AbortTransactionSpec;\n// \nClass AbstractOptions<T extends AbstractOptions>;\n// The base class for in-built admin clients.\nClass AdminClient;\n// The AdminClient configuration class, which also contains constants for configuration entry names.\nClass AdminClientConfig;\n// Options for Admin.alterClientQuotas(Collection, AlterClientQuotasOptions).\nClass AlterClientQuotasOptions;\n// The result of the Admin.alterClientQuotas(Collection, AlterClientQuotasOptions) call.\nClass AlterClientQuotasResult;\n// A class representing a alter configuration entry containing name, value and operation type.\nClass AlterConfigOp;\n// Options for Admin.incrementalAlterConfigs(Map) and Admin.alterConfigs(Map).\nClass AlterConfigsOptions;\n// The result of the Admin.alterConfigs(Map) call.\nClass AlterConfigsResult;\n// Options for the Admin.alterConsumerGroupOffsets(String, Map, AlterConsumerGroupOffsetsOptions) call.\nClass AlterConsumerGroupOffsetsOptions;\n// The result of the Admin.alterConsumerGroupOffsets(String, Map) call.\nClass AlterConsumerGroupOffsetsResult;\n// Options for Admin.alterPartitionReassignments(Map, AlterPartitionReassignmentsOptions) The API of this class is evolving.\nClass AlterPartitionReassignmentsOptions;\n// The result of Admin.alterPartitionReassignments(Map, AlterPartitionReassignmentsOptions).\nClass AlterPartitionReassignmentsResult;\n// Options for Admin.alterReplicaLogDirs(Map, AlterReplicaLogDirsOptions).\nClass AlterReplicaLogDirsOptions;\n// The result of Admin.alterReplicaLogDirs(Map, AlterReplicaLogDirsOptions).\nClass AlterReplicaLogDirsResult;\n// Options for Admin.alterUserScramCredentials(List, AlterUserScramCredentialsOptions) The API of this class is evolving.\nClass AlterUserScramCredentialsOptions;\n", "des": "Provides a Kafka client for performing administrative operations (such as creating topics and configuring brokers) on a Kafka cluster."}
{"index": 316, "repo": "kafka-clients-3.5.0", "code": "package consumer\n\n// \nInterface Consumer<K,V>;\n// A plugin interface that allows you to intercept (and possibly mutate) records received by the consumer.\nInterface ConsumerInterceptor<K,V>;\n// This interface is used to define custom partition assignment for use in KafkaConsumer.\nInterface ConsumerPartitionAssignor;\n// A callback interface that the user can implement to trigger custom actions when the set of partitions assigned to the consumer changes.\nInterface ConsumerRebalanceListener;\n// A callback interface that the user can implement to trigger custom actions when a commit request completes.\nInterface OffsetCommitCallback;\n// The consumer configuration keys\nClass ConsumerConfig;\n// A metadata struct containing the consumer group information.\nClass ConsumerGroupMetadata;\n// \nClass ConsumerPartitionAssignor.Assignment;\n// \nClass ConsumerPartitionAssignor.GroupAssignment;\n// \nClass ConsumerPartitionAssignor.GroupSubscription;\n// \nClass ConsumerPartitionAssignor.Subscription;\n// A key/value pair to be received from Kafka.\nClass ConsumerRecord<K,V>;\n// A container that holds the list ConsumerRecord per partition for a particular topic.\nClass ConsumerRecords<K,V>;\n// A cooperative version of the AbstractStickyAssignor.\nClass CooperativeStickyAssignor;\n// A client that consumes records from a Kafka cluster.\nClass KafkaConsumer<K,V>;\n// A mock of the Consumer interface you can use for testing code that uses Kafka.\nClass MockConsumer<K,V>;\n// The Kafka offset commit API allows users to provide additional metadata (in the form of a string) when an offset is committed.\nClass OffsetAndMetadata;\n// A container class for offset and timestamp.\nClass OffsetAndTimestamp;\n// The range assignor works on a per-topic basis.\nClass RangeAssignor;\n// The round robin assignor lays out all the available partitions and all the available consumers.\nClass RoundRobinAssignor;\n// The sticky assignor serves two purposes.\nClass StickyAssignor;\n// The rebalance protocol defines partition assignment and revocation semantics.\nEnum ConsumerPartitionAssignor.RebalanceProtocol;\n// \nEnum OffsetResetStrategy;\n// This exception is raised when an offset commit with KafkaConsumer.commitSync() fails with an unrecoverable error.\nClass CommitFailedException;\n", "des": "Provides a Kafka client for consuming records from topics and/or partitions in a Kafka cluster."}
{"index": 317, "repo": "kafka-clients-3.5.0", "code": "package producer\n\n// A callback interface that the user can implement to allow code to execute when the request is complete.\nInterface Callback;\n// Partitioner Interface\nInterface Partitioner;\n// The interface for the KafkaProducer\nInterface Producer<K,V>;\n// A plugin interface that allows you to intercept (and possibly mutate) the records received by the producer before they are published to the Kafka cluster.\nInterface ProducerInterceptor<K,V>;\n// A Kafka client that publishes records to the Kafka cluster.\nClass KafkaProducer<K,V>;\n// A mock of the producer interface you can use for testing code that uses Kafka.\nClass MockProducer<K,V>;\n// Configuration for the Kafka Producer.\nClass ProducerConfig;\n// A key/value pair to be sent to Kafka.\nClass ProducerRecord<K,V>;\n// The metadata for a record that has been acknowledged by the server\nClass RecordMetadata;\n// The \"Round-Robin\" partitioner This partitioning strategy can be used when user wants to distribute the writes to all partitions equally.\nClass RoundRobinPartitioner;\n// Since 3.3.0, in order to use default partitioning logic remove the partitioner.class configuration setting and set partitioner.ignore.keys=true.\nClass UniformStickyPartitioner;\n// This exception is thrown if the producer cannot allocate memory for a record within max.block.ms due to the buffer being too full.\nClass BufferExhaustedException;\n", "des": "Provides a Kafka client for producing records to topics and/or partitions in a Kafka cluster."}
{"index": 318, "repo": "kafka-clients-3.5.0", "code": "package common\n\n// A callback interface that users can implement when they wish to get notified about changes in the Cluster metadata.\nInterface ClusterResourceListener;\n// A Mix-in style interface for classes that are instantiated by reflection and need to take configuration parameters\nInterface Configurable;\n// A function which takes objects of type A and returns objects of type B.\nInterface KafkaFuture.BaseFunction<A,B>;\n// A consumer of two different types of object.\nInterface KafkaFuture.BiConsumer<A,B>;\n// This interface allows to define Formatters that can be used to parse and format records read by a Consumer instance for display.\nInterface MessageFormatter;\n// A metric tracked for monitoring purposes.\nInterface Metric;\n// Interface for reconfigurable classes that support dynamic configuration.\nInterface Reconfigurable;\n// An immutable representation of a subset of the nodes, topics, and partitions in the Kafka cluster.\nClass Cluster;\n// The ClusterResource class encapsulates metadata for a Kafka cluster.\nClass ClusterResource;\n// Represents a broker endpoint.\nClass Endpoint;\n// A flexible future which supports call chaining and other asynchronous programming patterns.\nClass KafkaFuture<T>;\n// Since Kafka 3.0.\nClass KafkaFuture.Function<A,B>;\n// The MetricName class encapsulates a metric's name, logical group and its related attributes.\nClass MetricName;\n// A template for a MetricName.\nClass MetricNameTemplate;\n// Information about a Kafka node\nClass Node;\n// This is used to describe per-partition state in the MetadataResponse.\nClass PartitionInfo;\n// A class used to represent a collection of topics.\nClass TopicCollection;\n// A class used to represent a collection of topics defined by their topic ID.\nClass TopicCollection.TopicIdCollection;\n// A class used to represent a collection of topics defined by their topic name.\nClass TopicCollection.TopicNameCollection;\n// This represents universally unique identifier with topic id for a topic partition.\nClass TopicIdPartition;\n// A topic name and partition number\nClass TopicPartition;\n// A class containing leadership, replicas and ISR information for a topic partition.\nClass TopicPartitionInfo;\n// The topic name, partition number and the brokerId of the replica\nClass TopicPartitionReplica;\n", "des": "Provides shared functionality for Kafka clients and servers."}
{"index": 319, "repo": "kafka-clients-3.5.0", "code": "package acl\n\n// Represents an access control entry.\nClass AccessControlEntry;\n// Represents a filter which matches access control entries.\nClass AccessControlEntryFilter;\n// Represents a binding between a resource pattern and an access control entry.\nClass AclBinding;\n// A filter which can match AclBinding objects.\nClass AclBindingFilter;\n// Represents an operation which an ACL grants or denies permission to perform.\nEnum AclOperation;\n// Represents whether an ACL grants or denies permissions.\nEnum AclPermissionType;\n", "des": "Provides classes representing Access Control Lists for authorization of clients"}
{"index": 320, "repo": "kafka-clients-3.5.0", "code": "package annotation\n\n// Annotation to inform users of how much to rely on a particular package, class or method not changing over time.\nClass InterfaceStability;\n// Compatibility may be broken at minor release (i.e.\nAnnotation Type InterfaceStability.Evolving;\n// Compatibility is maintained in major, minor and patch releases with one exception: compatibility may be broken in a major release (i.e.\nAnnotation Type InterfaceStability.Stable;\n// No guarantee is provided as to reliability or stability across any level of release granularity.\nAnnotation Type InterfaceStability.Unstable;\n", "des": "Provides annotations used on Kafka APIs."}
{"index": 321, "repo": "kafka-clients-3.5.0", "code": "package config\n\n// A callback passed to ConfigProvider for subscribing to changes.\nInterface ConfigChangeCallback;\n// This is used by the ConfigDef.validate(Map) to get valid values for a configuration given the current configuration values in order to perform full configuration validation and visibility modification.\nInterface ConfigDef.Recommender;\n// Validation logic the user may provide to perform single configuration validation.\nInterface ConfigDef.Validator;\n// A convenient base class for configurations to extend.\nClass AbstractConfig;\n// \nClass Config;\n// Configuration data from a ConfigProvider.\nClass ConfigData;\n// This class is used for specifying the set of expected configurations.\nClass ConfigDef;\n// \nClass ConfigDef.CaseInsensitiveValidString;\n// \nClass ConfigDef.CompositeValidator;\n// \nClass ConfigDef.ConfigKey;\n// \nClass ConfigDef.LambdaValidator;\n// \nClass ConfigDef.ListSize;\n// \nClass ConfigDef.NonEmptyString;\n// \nClass ConfigDef.NonEmptyStringWithoutControlChars;\n// \nClass ConfigDef.NonNullValidator;\n// Validation logic for numeric ranges\nClass ConfigDef.Range;\n// \nClass ConfigDef.ValidList;\n// \nClass ConfigDef.ValidString;\n// A class representing resources that have configs.\nClass ConfigResource;\n// This class wraps a set of ConfigProvider instances and uses them to perform transformations.\nClass ConfigTransformer;\n// The result of a transformation from ConfigTransformer.\nClass ConfigTransformerResult;\n// \nClass ConfigValue;\n// This class holds definitions for log level configurations related to Kafka's application logging.\nClass LogLevelConfig;\n// \nClass SaslConfigs;\n// Contains the common security config for SSL and SASL\nClass SecurityConfig;\n// \nClass SslConfigs;\n// Keys that can be used to configure a topic.\nClass TopicConfig;\n// The importance level for a configuration\nEnum ConfigDef.Importance;\n// The config types\nEnum ConfigDef.Type;\n// The width of a configuration value\nEnum ConfigDef.Width;\n// Type of resource.\nEnum ConfigResource.Type;\n// Describes whether the server should require or request client authentication.\nEnum SslClientAuth;\n// Thrown if the user supplies an invalid configuration\nClass ConfigException;\n", "des": "Provides common mechanisms for defining, parsing, validating, and documenting user-configurable parameters."}
{"index": 322, "repo": "kafka-clients-3.5.0", "code": "package provider\n\n// A provider of configuration data, which may optionally support subscriptions to configuration changes.\nInterface ConfigProvider;\n// An implementation of ConfigProvider based on a directory of files.\nClass DirectoryConfigProvider;\n// An implementation of ConfigProvider based on environment variables.\nClass EnvVarConfigProvider;\n// An implementation of ConfigProvider that represents a Properties file.\nClass FileConfigProvider;\n", "des": "Provides a pluggable interface and some implementations for late-binding in configuration values."}
{"index": 323, "repo": "kafka-clients-3.5.0", "code": "package errors\n\n// Any API exception that is part of the public protocol and should be a subclass of this class and be part of this package.\nClass ApiException;\n// This exception indicates that SASL authentication has failed.\nClass AuthenticationException;\n// \nClass AuthorizationException;\n// An exception that indicates that the authorizer is not ready to receive the request yet.\nClass AuthorizerNotReadyException;\n// \nClass BrokerIdNotRegisteredException;\n// \nClass BrokerNotAvailableException;\n// \nClass ClusterAuthorizationException;\n// \nClass ConcurrentTransactionsException;\n// \nClass ControllerMovedException;\n// In the context of the group coordinator, the broker returns this error code for any coordinator request if it is still loading the group metadata (e.g.\nClass CoordinatorLoadInProgressException;\n// In the context of the group coordinator, the broker returns this error code for metadata or offset commit requests if the group metadata topic has not been created yet.\nClass CoordinatorNotAvailableException;\n// This exception indicates a record has failed its internal CRC check, this generally indicates network or disk corruption.\nClass CorruptRecordException;\n// \nClass DelegationTokenAuthorizationException;\n// \nClass DelegationTokenDisabledException;\n// \nClass DelegationTokenExpiredException;\n// \nClass DelegationTokenNotFoundException;\n// \nClass DelegationTokenOwnerMismatchException;\n// Server disconnected before a request could be completed.\nClass DisconnectException;\n// \nClass DuplicateBrokerRegistrationException;\n// Exception thrown due to a request that illegally refers to the same resource twice (for example, trying to both create and delete the same SCRAM credential for a particular user in a single request).\nClass DuplicateResourceException;\n// \nClass DuplicateSequenceException;\n// \nClass ElectionNotNeededException;\n// \nClass EligibleLeadersNotAvailableException;\n// \nClass FeatureUpdateFailedException;\n// \nClass FencedInstanceIdException;\n// The request contained a leader epoch which is smaller than that on the broker that received the request.\nClass FencedLeaderEpochException;\n// \nClass FencedMemberEpochException;\n// \nClass FetchSessionIdNotFoundException;\n// \nClass FetchSessionTopicIdException;\n// \nClass GroupAuthorizationException;\n// \nClass GroupIdNotFoundException;\n", "des": "Provides common exception classes."}
{"index": 324, "repo": "kafka-clients-3.5.0", "code": "package header\n\n// \nInterface Header;\n// \nInterface Headers;\n", "des": "Provides API for application-defined metadata attached to Kafka records."}
{"index": 325, "repo": "kafka-clients-3.5.0", "code": "package metrics\n\n// A compound stat is a stat where a single measurement and associated data structure feeds many metrics.\nInterface CompoundStat;\n// A gauge metric is an instantaneous reading of a particular value.\nInterface Gauge<T>;\n// A measurable quantity that can be registered as a metric\nInterface Measurable;\n// A MeasurableStat is a Stat that is also Measurable (i.e.\nInterface MeasurableStat;\n// MetricsContext encapsulates additional contextLabels about metrics exposed via a MetricsReporter\nInterface MetricsContext;\n// A plugin interface to allow things to listen as new metrics are created so they can be reported.\nInterface MetricsReporter;\n// Super-interface for Measurable or Gauge that provides metric values.\nInterface MetricValueProvider<T>;\n// A Stat is a quantity such as average, max, etc that is computed off the stream of updates to a sensor\nInterface Stat;\n// \nClass CompoundStat.NamedMeasurable;\n// Register metrics in JMX as dynamic mbeans based on the metric names\nClass JmxReporter;\n// \nClass KafkaMetric;\n// A implementation of MetricsContext, it encapsulates required metrics context properties for Kafka services and clients\nClass KafkaMetricsContext;\n// Configuration values for metrics\nClass MetricConfig;\n// A registry of sensors and metrics.\nClass Metrics;\n// An upper or lower bound for metrics\nClass Quota;\n// A sensor applies a continuous sequence of numerical values to a set of associated metrics.\nClass Sensor;\n// \nEnum Sensor.RecordingLevel;\n// Thrown when a sensor records a value that causes a metric to go outside the bounds configured as its quota\nClass QuotaViolationException;\n", "des": "Provides the API used by Kafka clients to emit metrics which are then exposed using the * MetricsReporter interface."}
{"index": 326, "repo": "kafka-clients-3.5.0", "code": "package stats\n\n// An algorithm for determining the bin in which a value is to be placed as well as calculating the upper end of each bin.\nInterface Histogram.BinScheme;\n// A SampledStat that maintains a simple average over its samples.\nClass Avg;\n// A non-sampled version of WindowedCount maintained over all time.\nClass CumulativeCount;\n// An non-sampled cumulative total maintained over all time.\nClass CumulativeSum;\n// A CompoundStat that represents a normalized distribution with a Frequency metric for each bucketed value.\nClass Frequencies;\n// Definition of a frequency metric used in a Frequencies compound statistic.\nClass Frequency;\n// \nClass Histogram;\n// A scheme for calculating the bins where the width of each bin is a constant determined by the range of values and the number of bins.\nClass Histogram.ConstantBinScheme;\n// A scheme for calculating the bins where the width of each bin is one more than the previous bin, and therefore the bin widths are increasing at a linear rate.\nClass Histogram.LinearBinScheme;\n// A SampledStat that gives the max over its samples.\nClass Max;\n// A compound stat that includes a rate metric and a cumulative total metric.\nClass Meter;\n// A SampledStat that gives the min over its samples.\nClass Min;\n// \nClass Percentile;\n// A compound stat that reports one or more percentiles\nClass Percentiles;\n// The rate of the given quantity.\nClass Rate;\n// A SampledStat records a single scalar value measured over one or more samples.\nClass SampledStat;\n// A simple rate the rate is incrementally calculated based on the elapsed time between the earliest reading and now.\nClass SimpleRate;\n// The TokenBucket is a MeasurableStat implementing a token bucket algorithm that is usable within a Sensor.\nClass TokenBucket;\n// An instantaneous value.\nClass Value;\n// A SampledStat that maintains a simple count of what it has seen.\nClass WindowedCount;\n// A SampledStat that maintains the sum of what it has seen.\nClass WindowedSum;\n// \nEnum Percentiles.BucketSizing;\n", "des": "Provides methods of statistically aggregating metrics upon emission."}
{"index": 327, "repo": "kafka-clients-3.5.0", "code": "package quota\n\n// Describes a configuration alteration to be made to a client quota entity.\nClass ClientQuotaAlteration;\n// \nClass ClientQuotaAlteration.Op;\n// Describes a client quota entity, which is a mapping of entity types to their names.\nClass ClientQuotaEntity;\n// Describes a client quota entity filter.\nClass ClientQuotaFilter;\n// Describes a component for applying a client quota filter.\nClass ClientQuotaFilterComponent;\n", "des": "Provides mechanisms for enforcing resource quotas."}
{"index": 328, "repo": "kafka-clients-3.5.0", "code": "package resource\n\n// Represents a cluster resource with a tuple of (type, name).\nClass Resource;\n// Represents a pattern that is used by ACLs to match zero or more Resources.\nClass ResourcePattern;\n// Represents a filter that can match ResourcePattern.\nClass ResourcePatternFilter;\n// Resource pattern type.\nEnum PatternType;\n// Represents a type of resource which an ACL can be applied to.\nEnum ResourceType;\n", "des": "Provides client handles representing logical resources in a Kafka cluster."}
{"index": 329, "repo": "kafka-clients-3.5.0", "code": "package auth\n\n// \nInterface AuthenticateCallbackHandler;\n// An object representing contextual information from the authentication session.\nInterface AuthenticationContext;\n// Pluggable principal builder interface which supports both SSL authentication through SslAuthenticationContext and SASL through SaslAuthenticationContext.\nInterface KafkaPrincipalBuilder;\n// Serializer/Deserializer interface for KafkaPrincipal for the purpose of inter-broker forwarding.\nInterface KafkaPrincipalSerde;\n// Login interface for authentication.\nInterface Login;\n// An interface for generating security providers.\nInterface SecurityProviderCreator;\n// Plugin interface for allowing creation of SSLEngine object in a custom way.\nInterface SslEngineFactory;\n// Principals in Kafka are defined by a type and a name.\nClass KafkaPrincipal;\n// \nClass PlaintextAuthenticationContext;\n// \nClass SaslAuthenticationContext;\n// A simple immutable value object class holding customizable SASL extensions.\nClass SaslExtensions;\n// Optional callback used for SASL mechanisms if any extensions need to be set in the SASL exchange.\nClass SaslExtensionsCallback;\n// \nClass SslAuthenticationContext;\n// \nEnum SecurityProtocol;\n", "des": "Provides pluggable interfaces for implementing Kafka authentication mechanisms."}
{"index": 330, "repo": "kafka-clients-3.5.0", "code": "package oauthbearer\n\n// The b64token value as defined in RFC 6750 Section 2.1 along with the token's specific scope and lifetime and principal name.\nInterface OAuthBearerToken;\n// A Callback for use by the SaslServer implementation when it needs to validate the SASL extensions for the OAUTHBEARER mechanism Callback handlers should use the OAuthBearerExtensionsValidatorCallback.valid(String) method to communicate valid extensions back to the SASL server.\nClass OAuthBearerExtensionsValidatorCallback;\n// OAuthBearerLoginCallbackHandler is an AuthenticateCallbackHandler that accepts OAuthBearerTokenCallback and SaslExtensionsCallback callbacks to perform the steps to request a JWT from an OAuth/OIDC provider using the clientcredentials.\nClass OAuthBearerLoginCallbackHandler;\n// The LoginModule for the SASL/OAUTHBEARER mechanism.\nClass OAuthBearerLoginModule;\n// A Callback for use by the SaslClient and Login implementations when they require an OAuth 2 bearer token.\nClass OAuthBearerTokenCallback;\n// A Callback for use by the SaslServer implementation when it needs to provide an OAuth 2 bearer token compact serialization for validation.\nClass OAuthBearerValidatorCallback;\n// OAuthBearerValidatorCallbackHandler is an AuthenticateCallbackHandler that accepts OAuthBearerValidatorCallback and OAuthBearerExtensionsValidatorCallback callbacks to implement OAuth/OIDC validation.\nClass OAuthBearerValidatorCallbackHandler;\n", "des": "Provides a LoginModule for using OAuth Bearer Token authentication with Kafka clusters."}
{"index": 331, "repo": "kafka-clients-3.5.0", "code": "package secured\n\n// See org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginCallbackHandler\nClass OAuthBearerLoginCallbackHandler;\n// See org.apache.kafka.common.security.oauthbearer.OAuthBearerValidatorCallbackHandler\nClass OAuthBearerValidatorCallbackHandler;\n", "des": "This package is deprecated."}
{"index": 332, "repo": "kafka-clients-3.5.0", "code": "package plain\n\n// \nClass PlainAuthenticateCallback;\n// \nClass PlainLoginModule;\n", "des": "Provides implementation to use plaintext credentials authentication for securing Kafka clusters."}
{"index": 333, "repo": "kafka-clients-3.5.0", "code": "package scram\n\n// SCRAM credential class that encapsulates the credential data persisted for each user that is accessible to the server.\nClass ScramCredential;\n// Callback used for SCRAM mechanisms.\nClass ScramCredentialCallback;\n// Optional callback used for SCRAM mechanisms if any extensions need to be set in the SASL/SCRAM exchange.\nClass ScramExtensionsCallback;\n// \nClass ScramLoginModule;\n", "des": "Provides adaptor to use the Salted Challenge Response Authentication Mechanism for securing Kafka clusters."}
{"index": 334, "repo": "kafka-clients-3.5.0", "code": "package delegation\n\n// A class representing a delegation token.\nClass DelegationToken;\n// A class representing a delegation token details.\nClass TokenInformation;\n", "des": "Provides mechanism for delegating authorization to a distinct Principal for securing Kafka clusters."}
{"index": 335, "repo": "kafka-clients-3.5.0", "code": "package serialization\n\n// An interface for converting bytes to objects.\nInterface Deserializer<T>;\n// The interface for wrapping a serializer and deserializer for the given data type.\nInterface Serde<T>;\n// An interface for converting objects to bytes.\nInterface Serializer<T>;\n// \nClass BooleanDeserializer;\n// \nClass BooleanSerializer;\n// \nClass ByteArrayDeserializer;\n// \nClass ByteArraySerializer;\n// \nClass ByteBufferDeserializer;\n// Do not need to flip before call serialize(String, ByteBuffer).\nClass ByteBufferSerializer;\n// \nClass BytesDeserializer;\n// \nClass BytesSerializer;\n// \nClass DoubleDeserializer;\n// \nClass DoubleSerializer;\n// \nClass FloatDeserializer;\n// \nClass FloatSerializer;\n// \nClass IntegerDeserializer;\n// \nClass IntegerSerializer;\n// \nClass ListDeserializer<Inner>;\n// \nClass ListSerializer<Inner>;\n// \nClass LongDeserializer;\n// \nClass LongSerializer;\n// Factory for creating serializers / deserializers.\nClass Serdes;\n// \nClass Serdes.BooleanSerde;\n// \nClass Serdes.ByteArraySerde;\n// \nClass Serdes.ByteBufferSerde;\n// \nClass Serdes.BytesSerde;\n// \nClass Serdes.DoubleSerde;\n// \nClass Serdes.FloatSerde;\n// \nClass Serdes.IntegerSerde;\n// \nClass Serdes.ListSerde<Inner>;\n// \nClass Serdes.LongSerde;\n// \nClass Serdes.ShortSerde;\n// \nClass Serdes.StringSerde;\n// \nClass Serdes.UUIDSerde;\n// \nClass Serdes.VoidSerde;\n// \nClass Serdes.WrapperSerde<T>;\n// \nClass ShortDeserializer;\n// \nClass ShortSerializer;\n// String encoding defaults to UTF8 and can be customized by setting the property key.deserializer.encoding, value.deserializer.encoding or deserializer.encoding.\nClass StringDeserializer;\n// String encoding defaults to UTF8 and can be customized by setting the property key.serializer.encoding, value.serializer.encoding or serializer.encoding.\nClass StringSerializer;\n", "des": "Provides interface and some implementations of serialization/deserialization routines for various objects."}
{"index": 336, "repo": "kafka-clients-3.5.0", "code": "package authorizer\n\n// Request context interface that provides data from request header as well as connection and authentication information to plugins.\nInterface AuthorizableRequestContext;\n// Pluggable authorizer interface for Kafka brokers.\nInterface Authorizer;\n// Runtime broker configuration metadata provided to authorizers during start up.\nInterface AuthorizerServerInfo;\n// \nClass AclCreateResult;\n// \nClass AclDeleteResult;\n// Delete result for each ACL binding that matched a delete filter.\nClass AclDeleteResult.AclBindingDeleteResult;\n// \nClass Action;\n// \nEnum AuthorizationResult;\n", "des": "Provides pluggable interface for performing authorization on a Kafka server."}
{"index": 337, "repo": "kafka-clients-3.5.0", "code": "package policy\n\n// An interface for enforcing a policy on alter configs requests.\nInterface AlterConfigPolicy;\n// An interface for enforcing a policy on create topics requests.\nInterface CreateTopicPolicy;\n// Class containing the create request parameters.\nClass AlterConfigPolicy.RequestMetadata;\n// Class containing the create request parameters.\nClass CreateTopicPolicy.RequestMetadata;\n", "des": "Provides pluggable interfaces for expressing policies on topics and configs."}
{"index": 338, "repo": "kafka-clients-3.5.0", "code": "package quota\n\n// Quota callback interface for brokers that enables customization of client quota computation.\nInterface ClientQuotaCallback;\n// The metadata for an entity for which quota is configured.\nInterface ClientQuotaEntity;\n// Interface representing a quota configuration entity.\nInterface ClientQuotaEntity.ConfigEntity;\n// Entity type of a ClientQuotaEntity.ConfigEntity\nEnum ClientQuotaEntity.ConfigEntityType;\n// Types of quotas that may be configured on brokers for client requests.\nEnum ClientQuotaType;\n", "des": "Provides pluggable interface for enforcing client quotas from a Kafka server."}
{"index": 339, "repo": "hadoop-hdfs-3.3.6", "code": "package hdfs\n\n// Represent one of the NameNodes configured in the cluster.\nClass DFSUtil.ConfiguredNNAddress;\n// Comparator for sorting DataNodeInfo[] based on decommissioned and entering_maintenance states.\nClass DFSUtil.ServiceComparator;\n// DtFetcher is an interface which permits the abstraction and separation of delegation token fetch implementaions across different packages and compilation units.\nClass HdfsDtFetcher;\n// DtFetcher for SWebHdfsFileSystem using the base class HdfsDtFetcher impl.\nClass SWebHdfsDtFetcher;\n// DtFetcher for WebHdfsFileSystem using the base class HdfsDtFetcher impl.\nClass WebHdfsDtFetcher;\n", "des": "A distributed implementation of FileSystem."}
{"index": 340, "repo": "hadoop-hdfs-3.3.6", "code": "package datatransfer\n\n// Implements TrustedChannelResolver to trust ips/host/subnets based on a blackList.\nClass BlackListBasedTrustedChannelResolver;\n// \nClass WhitelistBasedTrustedChannelResolver;\n", "des": "This package contains classes related to hdfs data transfer protocol."}
{"index": 341, "repo": "hadoop-hdfs-3.3.6", "code": "package protocolPB\n\n// \nClass DatanodeProtocolServerSideTranslatorPB;\n// Implementation for protobuf service that forwards requests received on NamenodeProtocolPB to the NamenodeProtocol server implementation.\nClass NamenodeProtocolServerSideTranslatorPB;\n// Utilities for converting protobuf classes to and from implementation classes and other helper utilities to help in dealing with protobuf.\nClass PBHelper;\n// This class is used on the server side.\nClass ReconfigurationProtocolServerSideTranslatorPB;\n// This is a server side utility class that handles common logic to to parameter reconfiguration.\nClass ReconfigurationProtocolServerSideUtils;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 342, "repo": "hadoop-hdfs-3.3.6", "code": "package blockaliasmap\n\n// reader options.\nInterface BlockAliasMap.Reader.Options;\n// writer options.\nInterface BlockAliasMap.Writer.Options;\n// An abstract class used to read and write block maps for provided blocks.\nClass BlockAliasMap<T extends BlockAlias>;\n// An abstract class that is used to read BlockAliases for provided blocks.\nClass BlockAliasMap.Reader<U extends BlockAlias>;\n// An abstract class used as a writer for the provided block map.\nClass BlockAliasMap.Writer<U extends BlockAlias>;\n", "des": "The AliasMap defines mapping of PROVIDED HDFS blocks to data in remote storage systems."}
{"index": 343, "repo": "hadoop-hdfs-3.3.6", "code": "package web\n\n// Data node HTTP Server Class.\nClass DatanodeHttpServer;\n// Since the DataNode HTTP server is not implemented in terms of the servlet API, it takes some extra effort to obtain an instance of the filter.\nClass DatanodeHttpServer.MapBasedFilterConfig;\n", "des": "Data node HTTP classes."}
{"index": 344, "repo": "hadoop-hdfs-3.3.6", "code": "package diskbalancer\n\n// Results returned by the RPC layer of DiskBalancer.\nEnum DiskBalancerException.Result;\n// Disk Balancer Exceptions.\nClass DiskBalancerException;\n", "des": "Disk Balancer connects to a .DataNode and attempts to spread data across all volumes evenly."}
{"index": 345, "repo": "hadoop-hdfs-3.3.6", "code": "package command\n\n// Cancels a running plan.\nClass CancelCommand;\n// Common interface for command handling.\nClass Command;\n// executes a given plan.\nClass ExecuteCommand;\n// Help Command prints out detailed help about each command.\nClass HelpCommand;\n// Class that implements Plan Command.\nClass PlanCommand;\n// Gets the current status of disk balancer command.\nClass QueryCommand;\n// Executes the report command.\nClass ReportCommand;\n", "des": "Commands for disk balancer command line tool."}
{"index": 346, "repo": "hadoop-hdfs-3.3.6", "code": "package connectors\n\n// ClusterConnector interface hides all specifics about how we communicate to the HDFS cluster.\nInterface ClusterConnector;\n// Connector factory creates appropriate connector based on the URL.\nClass ConnectorFactory;\n// A connector that understands JSON data cluster models.\nClass JsonNodeConnector;\n", "des": "Connectors package is a set of logical connectors that connect to various data sources to read the hadoop cluster information."}
{"index": 347, "repo": "hadoop-hdfs-3.3.6", "code": "package datamodel\n\n// DiskBalancerCluster represents the nodes that we are working against.\nClass DiskBalancerCluster;\n// DiskBalancerDataNode represents a DataNode that exists in the cluster.\nClass DiskBalancerDataNode;\n// DiskBalancerVolume represents a volume in the DataNode.\nClass DiskBalancerVolume;\n// DiskBalancerVolumeSet is a collection of storage devices on the data node which are of similar StorageType.\nClass DiskBalancerVolumeSet;\n", "des": "Disk Balancer Data Model is the Data Model for the cluster that Disk Balancer is working against."}
{"index": 348, "repo": "hadoop-hdfs-3.3.6", "code": "package planner\n\n// Planner interface allows different planners to be created.\nInterface Planner;\n// A step in the plan.\nInterface Step;\n// Greedy Planner is a simple planner that computes the largest possible move at any point of time given a volumeSet.\nClass GreedyPlanner;\n// Ignore fields with default values.\nClass MoveStep;\n// NodePlan is a set of volumeSetPlans.\nClass NodePlan;\n// Returns a planner based on the user defined tags.\nClass PlannerFactory;\n", "des": "Planner takes a DiskBalancerVolumeSet, threshold and computes a series of steps that lead to an even data distribution between volumes of this DiskBalancerVolumeSet."}
{"index": 349, "repo": "lucene-analyzers-kuromoji-8.11.2", "code": "package ja\n\n// Outputs the dot (graphviz) string for the viterbi lattice.\nClass GraphvizFormatter;\n// Analyzer for Japanese that uses morphological analysis.\nClass JapaneseAnalyzer;\n// Replaces term text with the BaseFormAttribute.\nClass JapaneseBaseFormFilter;\n// Factory for JapaneseBaseFormFilter.\nClass JapaneseBaseFormFilterFactory;\n// Normalizes Japanese horizontal iteration marks (odoriji) to their expanded form.\nClass JapaneseIterationMarkCharFilter;\n// Factory for JapaneseIterationMarkCharFilter.\nClass JapaneseIterationMarkCharFilterFactory;\n// A TokenFilter that normalizes common katakana spelling variations ending in a long sound character by removing this character (U+30FC).\nClass JapaneseKatakanaStemFilter;\n// Factory for JapaneseKatakanaStemFilter.\nClass JapaneseKatakanaStemFilterFactory;\n// A TokenFilter that normalizes Japanese numbers (kansūji) to regular Arabic decimal numbers in half-width characters.\nClass JapaneseNumberFilter;\n// Buffer that holds a Japanese number string and a position index used as a parsed-to marker\nClass JapaneseNumberFilter.NumberBuffer;\n// Factory for JapaneseNumberFilter.\nClass JapaneseNumberFilterFactory;\n// Removes tokens that match a set of part-of-speech tags.\nClass JapanesePartOfSpeechStopFilter;\n// Factory for JapanesePartOfSpeechStopFilter.\nClass JapanesePartOfSpeechStopFilterFactory;\n// A TokenFilter that replaces the term attribute with the reading of a token in either katakana or romaji form.\nClass JapaneseReadingFormFilter;\n// Factory for JapaneseReadingFormFilter.\nClass JapaneseReadingFormFilterFactory;\n// Tokenizer for Japanese that uses morphological analysis.\nClass JapaneseTokenizer;\n// Factory for JapaneseTokenizer.\nClass JapaneseTokenizerFactory;\n// Analyzed token with morphological data from its dictionary.\nClass Token;\n// Tokenization mode: this determines how the tokenizer handles compound and unknown words.\nEnum JapaneseTokenizer.Mode;\n", "des": "Analyzer for Japanese."}
{"index": 350, "repo": "lucene-analyzers-kuromoji-8.11.2", "code": "package dict\n\n// Dictionary interface for retrieving morphological data by id.\nInterface Dictionary;\n// Base class for a binary-encoded in-memory dictionary.\nClass BinaryDictionary;\n// Character category data.\nClass CharacterDefinition;\n// n-gram connection cost data\nClass ConnectionCosts;\n// Binary dictionary implementation for a known-word dictionary model: Words are encoded into an FST mapping to a list of wordIDs.\nClass TokenInfoDictionary;\n// Thin wrapper around an FST with root-arc caching for Japanese.\nClass TokenInfoFST;\n// Dictionary for unknown-word handling.\nClass UnknownDictionary;\n// Class for building a User Dictionary.\nClass UserDictionary;\n// Used to specify where (dictionary) resources get loaded from.\nEnum BinaryDictionary.ResourceScheme;\n", "des": "Kuromoji dictionary implementation."}
{"index": 351, "repo": "lucene-analyzers-kuromoji-8.11.2", "code": "package tokenattributes\n\n// Attribute for Token.getBaseForm().\nInterface BaseFormAttribute;\n// Attribute for Kuromoji inflection data.\nInterface InflectionAttribute;\n// Attribute for Token.getPartOfSpeech().\nInterface PartOfSpeechAttribute;\n// Attribute for Kuromoji reading data\nInterface ReadingAttribute;\n// Attribute for Token.getBaseForm().\nClass BaseFormAttributeImpl;\n// Attribute for Kuromoji inflection data.\nClass InflectionAttributeImpl;\n// Attribute for Token.getPartOfSpeech().\nClass PartOfSpeechAttributeImpl;\n// Attribute for Kuromoji reading data\nClass ReadingAttributeImpl;\n", "des": "Additional Kuromoji-specific Attributes for text analysis."}
{"index": 352, "repo": "lucene-analyzers-kuromoji-8.11.2", "code": "package util\n\n// Utility class for parsing CSV text\nClass CSVUtil;\n// Tool to build dictionaries.\nClass DictionaryBuilder;\n// Utility class for english translations of morphological data, used only for debugging.\nClass ToStringUtil;\n// Format of the dictionary.\nEnum DictionaryBuilder.DictionaryFormat;\n", "des": "Kuromoji utility classes."}
{"index": 353, "repo": "hive-exec-4.0.0-alpha-2", "code": "package exec\n\n// \nInterface BucketMatcher;\n// \nInterface DynamicValueRegistry;\n// RecordWriter.\nInterface FileSinkOperator.RecordWriter;\n// HashTableLoader is an interface used by MapJoinOperator used to load the hashtables needed to process the join.\nInterface HashTableLoader;\n// Enables an operator to be able to make changes to the JobConf.\nInterface IConfigureJobConf;\n// \nInterface NodeUtils.Function<T>;\n// ObjectCache.\nInterface ObjectCache;\n// OperatorFunc.\nInterface Operator.OperatorFunc;\n// \nInterface PTFPartition.PTFPartitionIterator<T>;\n// RecordReader.\nInterface RecordReader;\n// RecordWriter.\nInterface RecordWriter;\n// For interaction between operator and top-n hash.\nInterface TopNHash.BinaryCollector;\n// \nInterface Utilities.SupplierWithCheckedException<T,X extends Exception>;\n// Fast file merge operator for ORC and RCfile.\nClass AbstractFileMergeOperator<T extends FileMergeDesc>;\n// \nClass AbstractMapJoinOperator<T extends MapJoinDesc>;\n// Abstract Map operator.\nClass AbstractMapOperator;\n// Helper class to create UDFClassLoader when running under a security manager.\nClass AddToClassPathAction;\n// AppMasterEventOperator sends any rows it receives to the Tez AM.\nClass AppMasterEventOperator;\n// ArchiveUtils.\nClass ArchiveUtils;\n// HarPathHelper helps to create har:/ URIs for locations inside of archive.\nClass ArchiveUtils.HarPathHelper;\n// PartSpecInfo keeps fields and values extracted from partial partition info which is prefix of the full info.\nClass ArchiveUtils.PartSpecInfo;\n// AutoProgressor periodically sends updates to the job tracker so that it doesn't consider this task attempt dead if there is a long period of inactivity.\nClass AutoProgressor;\n// Read from a binary stream and treat each 1000 bytes (configurable via hive.binary.record.max.length) as a record.\nClass BinaryRecordReader;\n// Cache for storing boundaries found within a partition - used for PTF functions.\nClass BoundaryCache;\n// \nClass ByteWritable;\n// A Comparator optimized for BytesWritable.\nClass ByteWritable.Comparator;\n// Buffers rows emitted by other operators.\nClass CollectOperator;\n", "des": "Hive QL execution tasks, operators, functions and other handlers."}
{"index": 354, "repo": "hive-exec-4.0.0-alpha-2", "code": "package errors\n\n// Classes implementing ErrorHeuristic are able to generate a possible cause and solution for Hive jobs that have failed by examining the query, task log files, and the job configuration.\nInterface ErrorHeuristic;\n// Detects the condition where there is a error with one of the input files in the query.\nClass DataCorruptErrorHeuristic;\n// Immutable class for storing a possible error and a resolution suggestion.\nClass ErrorAndSolution;\n// Detects out-of-memory errors when hash tables in map-based aggregation group by queries take up too much memory.\nClass MapAggrMemErrorHeuristic;\n// Simple heuristic where the query and the lines of the task log file are run through regular expressions to see if they resemble a known error condition.\nClass RegexErrorHeuristic;\n// Detects when a query has failed because a user's script that was specified in transform returns a non-zero error code.\nClass ScriptErrorHeuristic;\n// TaskLogProcessor reads the logs from failed task attempts and tries to figure out what the cause of the error was using various heuristics.\nClass TaskLogProcessor;\n// Error class, thrown when arguments's constraints violate.\nClass DataConstraintViolationError;\n", "des": "Generates execution error messages using heuristics."}
{"index": 355, "repo": "hive-exec-4.0.0-alpha-2", "code": "package orc\n\n// An abstraction for testing ExternalCache in OrcInputFormat.\nInterface ExternalCache.ExternalFooterCachesByConf;\n// \nInterface ExternalCache.ExternalFooterCachesByConf.Cache;\n// Represents footer cache.\nInterface OrcInputFormat.FooterCache;\n// The interface for reading ORC files.\nInterface Reader;\n// A row-by-row iterator for ORC files.\nInterface RecordReader;\n// An interface that can determine which rows have been deleted from a given vectorized row batch.\nInterface VectorizedOrcAcidRowBatchReader.DeleteEventRegistry;\n// The HIVE interface for writing ORC files.\nInterface Writer;\n// Metastore-based footer cache storing serialized footers.\nClass ExternalCache;\n// Utility to check and fix the ACID key index of an ORC file if it has been written incorrectly due to HIVE-18817.\nClass FixAcidKeyIndex;\n// An implementation of external cache and factory based on metastore.\nClass MetastoreExternalCachesByConf;\n// \nClass MetastoreExternalCachesByConf.HBaseCache;\n// Contains factory methods to read or write ORC files.\nClass OrcFile;\n// \nClass OrcFile.ReaderOptions;\n// Options for creating ORC file writers.\nClass OrcFile.WriterOptions;\n// File format proxy for ORC.\nClass OrcFileFormatProxy;\n// Key for OrcFileMergeMapper task.\nClass OrcFileKeyWrapper;\n// \nClass OrcFileStripeMergeInputFormat;\n// \nClass OrcFileStripeMergeRecordReader;\n// Value for OrcFileMergeMapper.\nClass OrcFileValueWrapper;\n// A MapReduce/Hive input format for ORC files.\nClass OrcInputFormat;\n// \nClass OrcInputFormat.ContextFactory;\n// \nClass OrcInputFormat.FooterCacheKey;\n// Return a RecordReader that is compatible with the Hive 0.12 reader with NullWritable for the key instead of RecordIdentifier.\nClass OrcInputFormat.NullKeyRecordReader;\n// An InputFormat for ORC files.\nClass OrcNewInputFormat;\n// An OutputFormat that writes ORC files.\nClass OrcNewOutputFormat;\n", "des": "The Optimized Row Columnar (ORC) File Format."}
{"index": 356, "repo": "hive-exec-4.0.0-alpha-2", "code": "package vector\n\n// The interface to wrap the underlying Parquet dictionary and non dictionary encoded page reader.\nInterface ParquetDataColumnReader;\n// \nInterface VectorizedColumnReader;\n// It's column level Parquet reader which is used to read a batch of records for a column, part of the code is referred from Apache Spark and Apache Parquet.\nClass BaseVectorizedColumnReader;\n// \nClass BaseVectorizedColumnReader.NullIntIterator;\n// \nClass BaseVectorizedColumnReader.RLEIntIterator;\n// \nClass BaseVectorizedColumnReader.ValuesReaderIntIterator;\n// Parquet file has self-describing schema which may differ from the user required schema (e.g.\nClass ParquetDataColumnReaderFactory;\n// The default data column reader for existing Parquet page reader which works for both dictionary or non dictionary types, Mirror from dictionary encoding path.\nClass ParquetDataColumnReaderFactory.DefaultParquetDataColumnReader;\n// The reader who reads from the underlying boolean value value.\nClass ParquetDataColumnReaderFactory.TypesFromBooleanPageReader;\n// The reader who reads from the underlying decimal value value.\nClass ParquetDataColumnReaderFactory.TypesFromDecimalPageReader;\n// The reader who reads from the underlying double value value.\nClass ParquetDataColumnReaderFactory.TypesFromDoublePageReader;\n// The reader who reads from the underlying float value value.\nClass ParquetDataColumnReaderFactory.TypesFromFloatPageReader;\n// The reader who reads from the underlying decimal value which is stored in an INT32 physical type.\nClass ParquetDataColumnReaderFactory.TypesFromInt32DecimalPageReader;\n// The reader who reads from the underlying int32 value value.\nClass ParquetDataColumnReaderFactory.TypesFromInt32PageReader;\n// The reader who reads from the underlying decimal value which is stored in an INT64 physical type.\nClass ParquetDataColumnReaderFactory.TypesFromInt64DecimalPageReader;\n// The reader who reads from the underlying int64 value value.\nClass ParquetDataColumnReaderFactory.TypesFromInt64PageReader;\n// The reader who reads from the underlying Timestamp value value.\nClass ParquetDataColumnReaderFactory.TypesFromInt96PageReader;\n", "des": "Hive Parquet Vectorized Reader related."}
{"index": 357, "repo": "hive-exec-4.0.0-alpha-2", "code": "package protobuf\n\n// Class to convert bytes writable containing a protobuf message to hive formats.\nClass ProtobufBytesWritableSerDe;\n// InputFormat to support reading ProtoWritable stored in a sequence file.\nClass ProtobufMessageInputFormat<K,V extends com.google.protobuf.MessageLite>;\n// Class to convert ProtoMessageWritable to hive formats.\nClass ProtobufMessageSerDe;\n// SerDe to convert ProtoWritable messages to Hive formats.\nClass ProtobufSerDe;\n", "des": "This package contains contributed input format."}
{"index": 358, "repo": "hive-exec-4.0.0-alpha-2", "code": "package lockmgr\n\n// Manager for locks in Hive.\nInterface HiveLockManager;\n// An interface that allows Hive to manage transactions.\nInterface HiveTxnManager;\n// An implementation of HiveLockManager for use with DbTxnManager.\nClass DbLockManager;\n// An implementation of HiveTxnManager that stores the transactions in the metastore database.\nClass DbTxnManager;\n// Heartbeater thread\nClass DbTxnManager.Heartbeater;\n// \nClass DbTxnManager.HeartbeaterThread;\n// shared lock manager for dedicated hive server.\nClass EmbeddedLockManager;\n// \nClass HiveLock;\n// \nClass HiveLockManagerCtx;\n// \nClass HiveLockObj;\n// \nClass HiveLockObject;\n// \nClass HiveLockObject.HiveLockObjectData;\n// A factory to get an instance of HiveTxnManager.\nClass TxnManagerFactory;\n// \nEnum HiveLockMode;\n// Exception from lock manager.\nClass LockException;\n", "des": "Hive Lock Manager interfaces and some custom implmentations"}
{"index": 359, "repo": "hive-exec-4.0.0-alpha-2", "code": "package generic\n\n// Collector gets data from a source.\nInterface Collector;\n// use GenericUDAFEvaluator.AbstractAggregationBuffer instead\nInterface GenericUDAFEvaluator.AggregationBuffer;\n// A callback interface used in conjunction with GenericUDAFResolver2 interface that allows for a more extensible and flexible means of discovering the parameter types provided for UDAF invocation.\nInterface GenericUDAFParameterInfo;\n// \nInterface GenericUDAFPercentileCont.PercentileCalculator<U>;\n// Use GenericUDAFResolver2 instead.\nInterface GenericUDAFResolver;\n// \nInterface GenericUDAFResolver2;\n// A Deferred Object allows us to do lazy-evaluation and short-circuiting.\nInterface GenericUDF.DeferredObject;\n// \nInterface GenericUDFBridge.UdfWhitelistChecker;\n// A GenericUDAF mode that provides it results as a List to the WindowingTableFunction (so it is a WindowFunctionInfo.isPivotResult() return true) may support this interface.\nInterface ISupportStreamingModeForWindowing;\n// \nClass AbstractGenericUDAFResolver;\n// common class for reflective UDFs\nClass AbstractGenericUDFReflect;\n// \nClass BaseMaskUDF;\n// \nClass GenericUDAFApproximateDistinct;\n// \nClass GenericUDAFApproximateDistinct.CountApproximateDistinctEvaluator;\n// \nClass GenericUDAFApproximateDistinct.HyperLogLogEvaluator;\n// GenericUDAFAverage.\nClass GenericUDAFAverage;\n// \nClass GenericUDAFAverage.AbstractGenericUDAFAverageEvaluator<TYPE>;\n// \nClass GenericUDAFAverage.GenericUDAFAverageEvaluatorDecimal;\n// \nClass GenericUDAFAverage.GenericUDAFAverageEvaluatorDouble;\n// \nClass GenericUDAFBinarySetFunctions;\n// \nClass GenericUDAFBinarySetFunctions.RegrAvgX;\n// \nClass GenericUDAFBinarySetFunctions.RegrAvgY;\n// \nClass GenericUDAFBinarySetFunctions.RegrCount;\n// \nClass GenericUDAFBinarySetFunctions.RegrIntercept;\n// \nClass GenericUDAFBinarySetFunctions.RegrR2;\n// \nClass GenericUDAFBinarySetFunctions.RegrSlope;\n", "des": "Standard toolkit and framework for generic User-defined functions."}
{"index": 360, "repo": "hive-exec-4.0.0-alpha-2", "code": "package proto\n\n// Class to create proto reader and writer for a date partitioned directory structure.\nClass DatePartitionedLogger<T extends com.google.protobuf.MessageLite>;\n// \nClass ProtoMessageReader<T extends com.google.protobuf.MessageLite>;\n// \nClass ProtoMessageWritable<T extends com.google.protobuf.MessageLite>;\n// \nClass ProtoMessageWriter<T extends com.google.protobuf.MessageLite>;\n", "des": "Logger code copied from tez codebase, this should be removed when we swtich to 0.9.2 tez version and we should depend on the tez libraries for this."}
{"index": 361, "repo": "commons-geometry-euclidean-1.0", "code": "package euclidean\n\n// Interface representing affine transforms in Euclidean space.\nInterface EuclideanTransform<V extends EuclideanVector<V>>;\n// Base class for affine transform matrices in Euclidean space.\nClass AbstractAffineTransformMatrix<V extends EuclideanVector<V>,M extends AbstractAffineTransformMatrix<V,M>>;\n// Base class representing an axis-aligned bounding box with minimum and maximum bounding points.\nClass AbstractBounds<P extends EuclideanVector<P>,B extends AbstractBounds<P,B>>;\n// Base class for intersections discovered during linecast operations.\nClass AbstractLinecastPoint<P extends EuclideanVector<P>,U extends P,L extends Embedding<P,Vector1D>>;\n// Abstract base class representing an n-sphere, which is a generalization of the ordinary 3 dimensional sphere to arbitrary dimensions.\nClass AbstractNSphere<V extends EuclideanVector<V>>;\n// Abstract base class for Euclidean vectors and points.\nClass EuclideanVector<V extends EuclideanVector<V>>;\n// Class representing a sum of Euclidean vectors.\nClass EuclideanVectorSum<V extends EuclideanVector<V>>;\n// Abstract base class for Euclidean vectors with two or more dimensions.\nClass MultiDimensionalEuclideanVector<V extends MultiDimensionalEuclideanVector<V>>;\n", "des": "This is the top-level package for Euclidean geometry components."}
{"index": 362, "repo": "commons-geometry-euclidean-1.0", "code": "package internal\n\n// Abstract base class for joining unconnected path elements into connected, directional paths.\nClass AbstractPathConnector<E extends AbstractPathConnector.ConnectableElement<E>>;\n// Class used to represent connectable path elements for use with AbstractPathConnector.\nClass AbstractPathConnector.ConnectableElement<E extends AbstractPathConnector.ConnectableElement<E>>;\n// Class containing utilities and algorithms intended to be internal to the library.\nClass EuclideanUtils;\n// This class consists exclusively of static matrix utility methods.\nClass Matrices;\n// This class consists exclusively of static vector utility methods.\nClass Vectors;\n", "des": "This package contains Euclidean geometry utilities and classes intended for internal use only."}
{"index": 363, "repo": "commons-geometry-euclidean-1.0", "code": "package oned\n\n// Class using a matrix to represent affine transformations in 1 dimensional Euclidean space.\nClass AffineTransformMatrix1D;\n// Class representing an interval in one dimension.\nClass Interval;\n// This class represents a 1D oriented hyperplane.\nClass OrientedPoint;\n// Class containing factory methods for constructing OrientedPoint instances.\nClass OrientedPoints;\n// Binary space partitioning (BSP) tree representing a region in one dimensional Euclidean space.\nClass RegionBSPTree1D;\n// BSP tree node for one dimensional Euclidean space.\nClass RegionBSPTree1D.RegionNode1D;\n// This class represents vectors and points in one-dimensional Euclidean space.\nClass Vector1D;\n// Class used to create high-accuracy sums of vectors.\nClass Vector1D.Sum;\n// Represent unit vectors.\nClass Vector1D.Unit;\n", "des": "This package provides basic 1D geometry components."}
{"index": 364, "repo": "commons-geometry-euclidean-1.0", "code": "package threed\n\n// Extension of the BoundarySource interface for Euclidean 3D space.\nInterface BoundarySource3D;\n// Interface representing a closed, finite convex polygon in Euclidean 3D space.\nInterface ConvexPolygon3D;\n// Interface representing a finite or infinite convex subset of points in a plane in Euclidean 3D space.\nInterface PlaneConvexSubset;\n// Interface used to represent plane convex subsets as embedded 2D subspace regions.\nInterface PlaneConvexSubset.Embedded;\n// Interface representing a subset of points in a plane in Euclidean 3D space.\nInterface PlaneSubset;\n// Interface used to represent plane subsets as embedded 2D subspace regions.\nInterface PlaneSubset.Embedded;\n// Interface representing a triangle in Euclidean 3D space.\nInterface Triangle3D;\n// Class using a matrix to represent affine transformations in 3 dimensional Euclidean space.\nClass AffineTransformMatrix3D;\n// BoundarySource3D implementation that uses boundaries stored in a list.\nClass BoundaryList3D;\n// Class containing minimum and maximum points defining a 3D axis-aligned bounding box.\nClass Bounds3D;\n// Class used to construct Bounds3D instances.\nClass Bounds3D.Builder;\n// Class representing a finite or infinite convex volume in Euclidean 3D space.\nClass ConvexVolume;\n// Class representing an arbitrary subset of a plane using a RegionBSPTree2D.\nClass EmbeddedTreePlaneSubset;\n// Extension of the Plane class that supports embedding of 2D subspaces in the plane.\nClass EmbeddingPlane;\n// Class containing a transformed plane instance along with a subspace (2D) transform.\nClass EmbeddingPlane.SubspaceTransform;\n// Class representing a plane in 3 dimensional Euclidean space.\nClass Plane;\n// Class containing factory methods for constructing Plane and PlaneSubset instances.\nClass Planes;\n// Binary space partitioning (BSP) tree representing a region in three dimensional Euclidean space.\nClass RegionBSPTree3D;\n// Class used to build regions in Euclidean 3D space by inserting boundaries into a BSP tree containing \"partitions\", i.e.\nClass RegionBSPTree3D.PartitionedRegionBuilder3D;\n", "des": "This package provides basic 3D geometry components."}
{"index": 365, "repo": "commons-geometry-euclidean-1.0", "code": "package line\n\n// Interface for objects that support linecast operations in Euclidean 3D space.\nInterface Linecastable3D;\n// Class representing an arbitrary subset of a line in 3D Euclidean space using a RegionBSPTree1D.\nClass EmbeddedTreeLineSubset3D;\n// Class representing a line in 3D space.\nClass Line3D;\n// Class containing a transformed line instance along with a subspace (1D) transform.\nClass Line3D.SubspaceTransform;\n// Class representing intersections resulting from linecast operations in Euclidean 3D space.\nClass LinecastPoint3D;\n// Class representing a convex subset of a line in 3D Euclidean space.\nClass LineConvexSubset3D;\n// Class containing factory methods for constructing Line3D and LineSubset3D instances.\nClass Lines3D;\n// Class representing a subset of a line in 3D Euclidean space.\nClass LineSubset3D;\n// Class representing a ray in 3D Euclidean space.\nClass Ray3D;\n// Class representing a portion of a line in 3D Euclidean space that starts at infinity and continues in the direction of the line up to a single end point.\nClass ReverseRay3D;\n// Class representing a line segment in 3D Euclidean space.\nClass Segment3D;\n", "des": "This package provides classes and utilities for lines in 3D Euclidean space."}
{"index": 366, "repo": "commons-geometry-euclidean-1.0", "code": "package mesh\n\n// Interface representing a 3D mesh data structure.\nInterface Mesh<F extends Mesh.Face>;\n// Interface representing a single face in a mesh.\nInterface Mesh.Face;\n// Interface representing a mesh composed entirely of triangular faces.\nInterface TriangleMesh;\n// Interface representing a single triangular face in a mesh.\nInterface TriangleMesh.Face;\n// A simple implementation of the TriangleMesh interface.\nClass SimpleTriangleMesh;\n// Builder class for creating mesh instances.\nClass SimpleTriangleMesh.Builder;\n", "des": "This package contains types representing 3D mesh data structures."}
{"index": 367, "repo": "commons-geometry-euclidean-1.0", "code": "package rotation\n\n// Interface representing a generic rotation in 3-dimensional Euclidean space.\nInterface Rotation3D;\n// Class representing a sequence of axis-angle rotations.\nClass AxisAngleSequence;\n// Class using a unit-length quaternion to represent rotations in 3-dimensional Euclidean space.\nClass QuaternionRotation;\n// Enum defining the possible reference frames for locating axis positions during a rotation sequence.\nEnum AxisReferenceFrame;\n// Enum containing rotation axis sequences for use in defining 3 dimensional rotations.\nEnum AxisSequence;\n// Defines different types of rotation axis sequences.\nEnum AxisSequenceType;\n", "des": "This package provides components related to rotations in 3 dimensional Euclidean space."}
{"index": 368, "repo": "commons-geometry-euclidean-1.0", "code": "package shape\n\n// Class representing parallelepipeds, i.e.\nClass Parallelepiped;\n// Class designed to aid construction of Parallelepiped instances.\nClass Parallelepiped.Builder;\n// Class representing a 3 dimensional sphere in Euclidean space.\nClass Sphere;\n", "des": "This package provides utilities for constructing basic 3D shapes."}
{"index": 369, "repo": "commons-geometry-euclidean-1.0", "code": "package twod\n\n// Extension of the BoundarySource interface for Euclidean 2D space.\nInterface BoundarySource2D;\n// Interface for objects that support linecast operations in Euclidean 2D space.\nInterface Linecastable2D;\n// Class using a matrix to represent affine transformations in 2 dimensional Euclidean space.\nClass AffineTransformMatrix2D;\n// BoundarySource2D implementation that uses boundaries stored in a list.\nClass BoundaryList2D;\n// Class containing minimum and maximum points defining a 2D axis-aligned bounding box.\nClass Bounds2D;\n// Class used to construct Bounds2D instances.\nClass Bounds2D.Builder;\n// Class representing a finite or infinite convex area in Euclidean 2D space.\nClass ConvexArea;\n// Class representing an arbitrary subset of a line using a RegionBSPTree1D.\nClass EmbeddedTreeLineSubset;\n// This class represents an oriented line in the 2D plane.\nClass Line;\n// Class containing a transformed line instance along with a subspace (1D) transform.\nClass Line.SubspaceTransform;\n// Class representing intersections resulting from linecast operations in Euclidean 2D space.\nClass LinecastPoint2D;\n// Class representing a convex subset of a line in 2D Euclidean space.\nClass LineConvexSubset;\n// Class containing factory methods for constructing Line and LineSubset instances.\nClass Lines;\n// Class representing a subset of points on a line in 2D Euclidean space.\nClass LineSubset;\n// Class representing polar coordinates in 2 dimensional Euclidean space.\nClass PolarCoordinates;\n// Class representing a ray in 2D Euclidean space.\nClass Ray;\n// Binary space partitioning (BSP) tree representing a region in two dimensional Euclidean space.\nClass RegionBSPTree2D;\n// Class used to build regions in Euclidean 2D space by inserting boundaries into a BSP tree containing \"partitions\", i.e.\nClass RegionBSPTree2D.PartitionedRegionBuilder2D;\n// BSP tree node for two dimensional Euclidean space.\nClass RegionBSPTree2D.RegionNode2D;\n// Class representing a portion of a line in 2D Euclidean space that starts at infinity and continues in the direction of the line up to a single end point.\nClass ReverseRay;\n", "des": "This package provides basic 2D geometry components."}
{"index": 370, "repo": "commons-geometry-euclidean-1.0", "code": "package path\n\n// Abstract class for joining collections of line subsets into connected paths.\nClass AbstractLinePathConnector;\n// Internal class used to connect line subsets together.\nClass AbstractLinePathConnector.ConnectableLineSubset;\n// Line subset connector that selects between multiple connection options based on the resulting interior angle.\nClass InteriorAngleLinePathConnector;\n// Implementation of InteriorAngleLinePathConnector that chooses line subset connections that produce the largest interior angles.\nClass InteriorAngleLinePathConnector.Maximize;\n// Implementation of InteriorAngleLinePathConnector that chooses line subset connections that produce the smallest interior angles.\nClass InteriorAngleLinePathConnector.Minimize;\n// Class representing a connected path of line convex subsets.\nClass LinePath;\n// Class used to build line paths.\nClass LinePath.Builder;\n", "des": "This package provides classes for working with connected sequences of line segments and other line subsets."}
{"index": 371, "repo": "commons-geometry-euclidean-1.0", "code": "package rotation\n\n// Class representing a rotation in 2 dimensional Euclidean space.\nClass Rotation2D;\n", "des": "This package provides components related to rotations in 2 dimensional Euclidean space."}
{"index": 372, "repo": "commons-geometry-euclidean-1.0", "code": "package shape\n\n// Class representing a circle in 2 dimensional Euclidean space.\nClass Circle;\n// Class representing parallelograms, i.e.\nClass Parallelogram;\n// Class designed to aid construction of Parallelogram instances.\nClass Parallelogram.Builder;\n", "des": "This package provides utilities for constructing basic 2D shapes."}
{"index": 373, "repo": "calcite-linq4j-1.34.0", "code": "package linq4j\n\n// Exposes the enumerator, which supports a simple iteration over a collection.\nInterface Enumerable<T>;\n// Supports a simple iteration over a collection.\nInterface Enumerator<T>;\n// Extension methods in Enumerable.\nInterface ExtendedEnumerable<TSource>;\n// Extension methods for OrderedEnumerable.\nInterface ExtendedOrderedEnumerable<T>;\n// Extension methods for OrderedQueryable.\nInterface ExtendedOrderedQueryable<T>;\n// Represents a collection of objects that have a common key.\nInterface Grouping<K,V>;\n// Represents a collection of keys each mapped to one or more values.\nInterface Lookup<K,V>;\n// Represents the result of applying a sorting operation to an Enumerable.\nInterface OrderedEnumerable<T>;\n// Represents the result of applying a sorting operation to a Queryable.\nInterface OrderedQueryable<T>;\n// Provides functionality to evaluate queries against a specific data source wherein the type of the data is known.\nInterface Queryable<T>;\n// Replayable.\nInterface QueryableDefaults.Replayable<T>;\n// Factory for building Queryable objects.\nInterface QueryableFactory<T>;\n// Defines methods to create and execute queries that are described by a Queryable object.\nInterface QueryProvider;\n// Exposes the enumerator, which supports a simple iteration over a collection, without the extension methods.\nInterface RawEnumerable<T>;\n// Core methods that define a Queryable.\nInterface RawQueryable<T>;\n// Abstract implementation of the Enumerable interface that implements the extension methods.\nClass AbstractEnumerable<T>;\n// Abstract implementation of the Enumerable interface that implements the extension methods.\nClass AbstractEnumerable2<T>;\n// Abstract implementation of the Queryable interface that implements the extension methods.\nClass AbstractQueryable<T>;\n// Skeleton implementation of Queryable.\nClass BaseQueryable<TSource>;\n// Enumerator over the cartesian product of enumerators.\nClass CartesianProductEnumerator<T,E>;\n// Implementation of the Enumerable interface that implements the extension methods by calling into the Extensions class.\nClass DefaultEnumerable<T>;\n", "des": "Language-integrated query for Java (linq4j) main package."}
{"index": 374, "repo": "calcite-linq4j-1.34.0", "code": "package function\n\n// Function that takes one parameter and returns a BigDecimal value.\nInterface BigDecimalFunction1<T0>;\n// Function that takes one parameter and returns a native double value.\nInterface DoubleFunction1<T0>;\n// Compares values for equality.\nInterface EqualityComparer<T>;\n// Function that takes one parameter and returns a native float value.\nInterface FloatFunction1<T0>;\n// Base interface for all functions.\nInterface Function<R>;\n// Function with no parameters.\nInterface Function0<R>;\n// Function with one parameter.\nInterface Function1<T0,R>;\n// Function with two parameters.\nInterface Function2<T0,T1,R>;\n// Function that takes one parameter and returns a native int value.\nInterface IntegerFunction1<T0>;\n// Function that takes one parameter and returns a native long value.\nInterface LongFunction1<T0>;\n// Function that takes one parameter and returns a BigDecimal value that may be null.\nInterface NullableBigDecimalFunction1<T0>;\n// Function that takes one parameter and returns a Double value that may be null.\nInterface NullableDoubleFunction1<T0>;\n// Function that takes one parameter and returns a Float value that may be null.\nInterface NullableFloatFunction1<T0>;\n// Function that takes one parameter and returns an Integer value that may be null.\nInterface NullableIntegerFunction1<T0>;\n// Function that takes one parameter and returns a Long value that may be null.\nInterface NullableLongFunction1<T0>;\n// Function with one parameter returning a native boolean value.\nInterface Predicate1<T0>;\n// Function with two parameters returning a native boolean value.\nInterface Predicate2<T0,T1>;\n// Utilities relating to functions.\nClass Functions;\n// Specifies that function is deterministic (i.e.\nAnnotation Type Deterministic;\n// Annotation that indicates that a class, interface, field or method is experimental, not part of the public API, and subject to change or removal.\nAnnotation Type Experimental;\n// Annotation applied to a user-defined function that gives extra metadata about that function.\nAnnotation Type Hints;\n// Specifies that function is NOT deterministic (i.e.\nAnnotation Type NonDeterministic;\n", "des": "Contains definitions of functions and predicates."}
{"index": 375, "repo": "calcite-linq4j-1.34.0", "code": "package tree\n\n// Creates a DynamicExpression that represents a dynamic operation bound by the provided CallSiteBinder.\nInterface CallSiteBinder;\n// Fluent list.\nInterface Expressions.FluentList<T>;\n// Represents a visitor or rewriter for expression trees.\nInterface ExpressionVisitor;\n// Function that can be invoked with a variable number of arguments.\nInterface FunctionExpression.Invokable;\n// Parse tree node.\nInterface Node;\n// A place to send a value.\nInterface Primitive.Sink;\n// A place from which to read a value.\nInterface Primitive.Source;\n// Contains the parts of the Field class needed for code generation, but might be implemented differently.\nInterface PseudoField;\n// Factory for creating table expressions that may be used in generated code for accessing table data.\nInterface TableExpressionFactory;\n// Field that belongs to a record.\nInterface Types.RecordField;\n// Base class for record-like types that do not mapped to (currently loaded) Java Class objects.\nInterface Types.RecordType;\n// Node visitor.\nInterface Visitor<R>;\n// Abstract implementation of Node.\nClass AbstractNode;\n// Length field of a RecordType.\nClass ArrayLengthRecordField;\n// Represents an expression that has a binary operator.\nClass BinaryExpression;\n// Builder for BlockStatement.\nClass BlockBuilder;\n// Helper methods concerning BlockStatements.\nClass Blocks;\n// Represents a block that contains a sequence of expressions where variables can be defined.\nClass BlockStatement;\n// Represents a catch statement in a try block.\nClass CatchBlock;\n// Declaration of a class.\nClass ClassDeclaration;\n// Entry point for optimizers that factor out deterministic expressions to final static fields.\nClass ClassDeclarationFinder;\n// Represents an expression that has a conditional operator.\nClass ConditionalExpression;\n// Represents an expression that has a conditional operator.\nClass ConditionalStatement;\n// Represents an expression that has a constant value.\nClass ConstantExpression;\n// Represents a constant null of unknown type Java allows type inference for such nulls, thus \"null\" cannot always be replaced to (Object)null and vise versa.\nClass ConstantUntypedNull;\n// Declaration of a constructor.\nClass ConstructorDeclaration;\n", "des": "Object model for Java expressions."}
{"index": 376, "repo": "zookeeper-jute-3.8.2", "code": "package jute\n\n// Interface that acts as an iterator for deserializing maps.\nInterface Index;\n// Interface that all the Deserializers have to implement.\nInterface InputArchive;\n// Interface that all the serializers have to implement.\nInterface OutputArchive;\n// Interface that is implemented by generated classes.\nInterface Record;\n// \nClass BinaryInputArchive;\n// \nClass BinaryOutputArchive;\n// Front-end interface to deserializers.\nClass RecordReader;\n// Front-end for serializers.\nClass RecordWriter;\n// \nClass ToStringOutputArchive;\n// Various utility functions for Hadoop record I/O runtime.\nClass Utils;\n", "des": "Hadoop record I/O contains classes and a record description language translator for simplifying serialization and deserialization of records in a language-neutral manner."}
{"index": 377, "repo": "zookeeper-jute-3.8.2", "code": "package compiler\n\n// \nClass CSharpGenerator;\n// \nClass JBoolean;\n// \nClass JBuffer;\n// \nClass JByte;\n// \nClass JDouble;\n// \nClass JField;\n// Container for the Hadoop Record DDL.\nClass JFile;\n// \nClass JFloat;\n// \nClass JInt;\n// \nClass JLong;\n// \nClass JMap;\n// \nClass JRecord;\n// \nClass JString;\n// Abstract Base class for all types supported by Hadoop Record I/O.\nClass JType;\n// \nClass JVector;\n", "des": "This package contains classes needed for code generation from the hadoop record compiler."}
{"index": 378, "repo": "zookeeper-jute-3.8.2", "code": "package generated\n\n// Token literal values and constants.\nInterface RccConstants;\n// \nClass Rcc;\n// Token Manager.\nClass RccTokenManager;\n// An implementation of interface CharStream, where the stream is assumed to contain only ASCII characters (without unicode processing).\nClass SimpleCharStream;\n// Describes the input token stream.\nClass Token;\n// This exception is thrown when parse errors are encountered.\nClass ParseException;\n// Token Manager Error.\nClass TokenMgrError;\n", "des": "This package contains code generated by JavaCC from the Hadoop record syntax file rcc.jj."}
{"index": 379, "repo": "mahout-core-14.1", "code": "package math\n\n// The basic interface including numerous convenience functions\nInterface Matrix;\n// Optional interface for optimized matrix multiplications.\nInterface MatrixTimesOps;\n// \nInterface QR;\n// Interface for an object that knows how to swap elements at two positions (a,b).\nInterface Swapper;\n// The basic interface including numerous convenience functions\nInterface Vector;\n// A holder for information about a specific item in the Vector.\nInterface Vector.Element;\n// \nInterface VectorIterable;\n// A few universal implementations of convenience functions for a JVM-backed matrix.\nClass AbstractMatrix;\n// \nClass AbstractMatrix.TransposeViewVector;\n// Implementations of generic capabilities like sum of elements and dot products\nClass AbstractVector;\n// \nClass Algebra;\n// Array manipulations; complements java.util.Arrays.\nClass Arrays;\n// \nClass BinarySearch;\n// A centroid is a weighted vector.\nClass Centroid;\n// Cholesky decomposition shamelessly ported from JAMA.\nClass CholeskyDecomposition;\n// Implements a vector with all the same values.\nClass ConstantVector;\n// A delegating vector provides an easy way to decorate vectors with weights or id's and such while keeping all of the Vector functionality.\nClass DelegatingVector;\n// Matrix of doubles implemented using a 2-d array\nClass DenseMatrix;\n// Economy packaging for a dense symmetric in-core matrix.\nClass DenseSymmetricMatrix;\n// Implements vector as an array of doubles\nClass DenseVector;\n// \nClass DiagonalMatrix;\n// Provides a way to get data from a file and treat it as if it were a matrix, but avoids putting all that data onto the Java heap.\nClass FileBasedMatrix;\n// Provides a way to get data from a file and treat it as if it were a matrix, but avoids putting all that data onto the Java heap.\nClass FileBasedSparseBinaryMatrix;\n// \nClass FileBasedSparseBinaryMatrix.BinaryReadOnlyElement;\n// \nClass Matrices;\n// \nClass MatrixSlice;\n// Provides a virtual vector that is really a row or column or diagonal of a matrix.\nClass MatrixVectorView;\n// Implements subset view of a Matrix\nClass MatrixView;\n", "des": "Core base classes; Operations on primitive arrays such as sorting, partitioning and permuting."}
{"index": 380, "repo": "mahout-core-14.1", "code": "package function\n\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteByteProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteCharProcedure;\n// A comparison function which imposes a total ordering on some collection of elements.\nInterface ByteComparator;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteDoubleProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteFloatProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteIntProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteLongProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteObjectProcedure<T>;\n// Interface that represents a procedure object: a procedure that takes a single argument and does not return a value.\nInterface ByteProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteShortProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharByteProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharCharProcedure;\n// A comparison function which imposes a total ordering on some collection of elements.\nInterface CharComparator;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharDoubleProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharFloatProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharIntProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharLongProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharObjectProcedure<T>;\n", "des": "Core interfaces for functions, comparisons and procedures on objects and primitive data types."}
{"index": 381, "repo": "mahout-core-14.1", "code": "package math\n\n// Arithmetic functions.\nClass Arithmetic;\n// Defines some useful constants.\nClass Constants;\n// Polynomial functions.\nClass Polynomial;\n", "des": "Tools for basic and advanced mathematics: Arithmetics and Algebra, Polynomials and Chebyshev series, Bessel and Airy functions, Function Objects for generic function evaluation, etc."}
{"index": 382, "repo": "mahout-core-14.1", "code": "package engine\n\n// MersenneTwister (MT19937) is one of the strongest uniform pseudo-random number generators known so far; at the same time it is quick.\nClass MersenneTwister;\n// Abstract base class for uniform pseudo-random number generating engines.\nClass RandomEngine;\n", "des": "Engines generating strong uniformly distributed pseudo-random numbers; Needed by all JET probability distributions since they rely on uniform random numbers to generate random numbers from their own distribution."}
{"index": 383, "repo": "mahout-core-14.1", "code": "package stat\n\n// Partially deprecated until unit tests are in place.\nClass Gamma;\n// Partially deprecated until unit tests are in place.\nClass Probability;\n", "des": "Tools for basic and advanced statistics: Estimators, Gamma functions, Beta functions, Probabilities, Special integrals, etc."}
{"index": 384, "repo": "mahout-core-14.1", "code": "package list\n\n// Abstract base class for resizable lists holding byte elements; abstract.\nClass AbstractByteList;\n// Abstract base class for resizable lists holding char elements; abstract.\nClass AbstractCharList;\n// Abstract base class for resizable lists holding double elements; abstract.\nClass AbstractDoubleList;\n// Abstract base class for resizable lists holding float elements; abstract.\nClass AbstractFloatList;\n// Abstract base class for resizable lists holding int elements; abstract.\nClass AbstractIntList;\n// Abstract base class for resizable lists holding objects or primitive data types such as int, float, etc.\nClass AbstractList;\n// Abstract base class for resizable lists holding long elements; abstract.\nClass AbstractLongList;\n// Abstract base class for resizable lists holding objects or primitive data types such as int, float, etc.First see the package summary and javadoc tree view to get the broad picture.\nClass AbstractObjectList<T>;\n// Abstract base class for resizable lists holding short elements; abstract.\nClass AbstractShortList;\n// Resizable list holding byte elements; implemented with arrays.\nClass ByteArrayList;\n// Resizable list holding char elements; implemented with arrays.\nClass CharArrayList;\n// Resizable list holding double elements; implemented with arrays.\nClass DoubleArrayList;\n// Resizable list holding float elements; implemented with arrays.\nClass FloatArrayList;\n// Resizable list holding int elements; implemented with arrays.\nClass IntArrayList;\n// Resizable list holding long elements; implemented with arrays.\nClass LongArrayList;\n// Resizable list holding ${valueType} elements; implemented with arrays.\nClass ObjectArrayList<T>;\n// Resizable list holding short elements; implemented with arrays.\nClass ShortArrayList;\n// Resizable list holding long elements; implemented with arrays; not efficient; just to demonstrate which methods you must override to implement a fully functional list.\nClass SimpleLongArrayList;\n", "des": "Resizable lists holding objects or primitive data types such as int, double, etc."}
{"index": 385, "repo": "mahout-core-14.1", "code": "package map\n\n// \nClass AbstractByteByteMap;\n// \nClass AbstractByteCharMap;\n// \nClass AbstractByteDoubleMap;\n// \nClass AbstractByteFloatMap;\n// \nClass AbstractByteIntMap;\n// \nClass AbstractByteLongMap;\n// \nClass AbstractByteObjectMap<T>;\n// \nClass AbstractByteShortMap;\n// \nClass AbstractCharByteMap;\n// \nClass AbstractCharCharMap;\n// \nClass AbstractCharDoubleMap;\n// \nClass AbstractCharFloatMap;\n// \nClass AbstractCharIntMap;\n// \nClass AbstractCharLongMap;\n// \nClass AbstractCharObjectMap<T>;\n// \nClass AbstractCharShortMap;\n// \nClass AbstractDoubleByteMap;\n// \nClass AbstractDoubleCharMap;\n// \nClass AbstractDoubleDoubleMap;\n// \nClass AbstractDoubleFloatMap;\n// \nClass AbstractDoubleIntMap;\n// \nClass AbstractDoubleLongMap;\n// \nClass AbstractDoubleObjectMap<T>;\n// \nClass AbstractDoubleShortMap;\n// \nClass AbstractFloatByteMap;\n// \nClass AbstractFloatCharMap;\n// \nClass AbstractFloatDoubleMap;\n// \nClass AbstractFloatFloatMap;\n// \nClass AbstractFloatIntMap;\n// \nClass AbstractFloatLongMap;\n// \nClass AbstractFloatObjectMap<T>;\n// \nClass AbstractFloatShortMap;\n// \nClass AbstractIntByteMap;\n// \nClass AbstractIntCharMap;\n// \nClass AbstractIntDoubleMap;\n// \nClass AbstractIntFloatMap;\n// \nClass AbstractIntIntMap;\n// \nClass AbstractIntLongMap;\n// \nClass AbstractIntObjectMap<T>;\n// \nClass AbstractIntShortMap;\n// \nClass AbstractLongByteMap;\n// \nClass AbstractLongCharMap;\n// \nClass AbstractLongDoubleMap;\n// \nClass AbstractLongFloatMap;\n// \nClass AbstractLongIntMap;\n// \nClass AbstractLongLongMap;\n// \nClass AbstractLongObjectMap<T>;\n// \nClass AbstractLongShortMap;\n", "des": "Automatically growing and shrinking maps holding objects or primitive data types such as int, double, etc."}
{"index": 386, "repo": "commons-dbcp2-2.9.0", "code": "package dbcp2\n\n// Interface to keep API compatibility.\nInterface BasicDataSourceMXBean;\n// Abstract factory interface for creating Connections.\nInterface ConnectionFactory;\n// Defines the methods that will be made available via JMX.\nInterface DataSourceMXBean;\n// Defines the attributes and methods that will be exposed via JMX for PoolableConnection instances.\nInterface PoolableConnectionMXBean;\n// Tracks connection usage for recovering and reporting abandoned connections.\nClass AbandonedTrace;\n// Basic implementation of javax.sql.DataSource that is configured via JavaBeans properties.\nClass BasicDataSource;\n// JNDI object factory that creates an instance of BasicDataSource that has been configured based on the RefAddr values of the specified Reference, which must match the names and data types of the BasicDataSource bean properties with the following exceptions:\nClass BasicDataSourceFactory;\n// Constants.\nClass Constants;\n// A DataSource-based implementation of ConnectionFactory.\nClass DataSourceConnectionFactory;\n// A base delegating implementation of CallableStatement.\nClass DelegatingCallableStatement;\n// A base delegating implementation of Connection.\nClass DelegatingConnection<C extends Connection>;\n// A base delegating implementation of DatabaseMetaData.\nClass DelegatingDatabaseMetaData;\n// A base delegating implementation of PreparedStatement.\nClass DelegatingPreparedStatement;\n// A base delegating implementation of ResultSet.\nClass DelegatingResultSet;\n// A base delegating implementation of Statement.\nClass DelegatingStatement;\n// A Driver-based implementation of ConnectionFactory.\nClass DriverConnectionFactory;\n// A DriverManager-based implementation of ConnectionFactory.\nClass DriverManagerConnectionFactory;\n// Defines bridge methods to JDBC 4.1 (Java 7) methods to allow call sites to operate safely (without AbstractMethodError) when using a JDBC driver written for JDBC 4.0 (Java 6).\nClass Jdbc41Bridge;\n// A DelegatingCallableStatement that cooperates with PoolingConnection to implement a pool of CallableStatements.\nClass PoolableCallableStatement;\n// A delegating connection that, rather than closing the underlying connection, returns itself to an ObjectPool when closed.\nClass PoolableConnection;\n// A PooledObjectFactory that creates PoolableConnections.\nClass PoolableConnectionFactory;\n// A DelegatingPreparedStatement that cooperates with PoolingConnection to implement a pool of PreparedStatements.\nClass PoolablePreparedStatement<K>;\n", "des": "Database Connection Pool API."}
{"index": 387, "repo": "commons-dbcp2-2.9.0", "code": "package cpdsadapter\n\n// An adapter for JDBC drivers that do not include an implementation of ConnectionPoolDataSource, but still include a DriverManager implementation.\nClass DriverAdapterCPDS;\n// Use PStmtKey.\nClass PStmtKeyCPDS;\n", "des": "This package contains one public class which is a ConnectionPoolDataSource (CPDS) implementation that can be used to adapt older Driver based JDBC implementations."}
{"index": 388, "repo": "commons-dbcp2-2.9.0", "code": "package datasources\n\n// The base class for SharedPoolDataSource and PerUserPoolDataSource.\nClass InstanceKeyDataSource;\n// A pooling DataSource appropriate for deployment within J2EE environment.\nClass PerUserPoolDataSource;\n// A JNDI ObjectFactory which creates SharedPoolDataSources\nClass PerUserPoolDataSourceFactory;\n// A pooling DataSource appropriate for deployment within J2EE environment.\nClass SharedPoolDataSource;\n// A JNDI ObjectFactory which creates SharedPoolDataSources\nClass SharedPoolDataSourceFactory;\n", "des": "This package contains two DataSources: PerUserPoolDataSource and SharedPoolDataSource which provide a database connection pool."}
{"index": 389, "repo": "commons-dbcp2-2.9.0", "code": "package managed\n\n// A listener for transaction completion events.\nInterface TransactionContextListener;\n// XAConnectionFactory is an extension of ConnectionFactory used to create connections in a transaction managed environment.\nInterface XAConnectionFactory;\n// BasicManagedDataSource is an extension of BasicDataSource which creates ManagedConnections.\nClass BasicManagedDataSource;\n// An implementation of XAConnectionFactory which uses a real XADataSource to obtain connections and XAResources.\nClass DataSourceXAConnectionFactory;\n// An implementation of XAConnectionFactory which manages non-XA connections in XA transactions.\nClass LocalXAConnectionFactory;\n// LocalXAResource is a fake XAResource for non-XA connections.\nClass LocalXAConnectionFactory.LocalXAResource;\n// ManagedConnection is responsible for managing a database connection in a transactional environment (typically called \"Container Managed\").\nClass ManagedConnection<C extends Connection>;\n// The ManagedDataSource is a PoolingDataSource that creates ManagedConnections.\nClass ManagedDataSource<C extends Connection>;\n// PoolableConnection that unregisters from TransactionRegistry on Connection real destroy.\nClass PoolableManagedConnection;\n// A PoolableConnectionFactory that creates PoolableManagedConnections.\nClass PoolableManagedConnectionFactory;\n// TransactionContext represents the association between a single XAConnectionFactory and a Transaction.\nClass TransactionContext;\n// TransactionRegistry tracks Connections and XAResources in a transacted environment for a single XAConnectionFactory.\nClass TransactionRegistry;\n", "des": "This package provides support for pooling of ManagedConnections."}
{"index": 390, "repo": "hbase-mapreduce-3.0.0-alpha-4", "code": "package mapred\n\n// Scan an HBase table to sort by a specified sort column.\nInterface TableMap<K extends org.apache.hadoop.io.WritableComparable<? super K>,V>;\n// Write a table, sorting by the input key\nInterface TableReduce<K extends org.apache.hadoop.io.WritableComparable,V>;\n// Driver for hbase mapreduce jobs.\nClass Driver;\n// Extract grouping columns from input record\nClass GroupingTableMap;\n// This is used to partition the output keys into groups of keys.\nClass HRegionPartitioner<K2,V2>;\n// Pass the given key and record as-is to reduce\nClass IdentityTableMap;\n// Write to table each key, record pair\nClass IdentityTableReduce;\n// MultiTableSnapshotInputFormat generalizes TableSnapshotInputFormat allowing a MapReduce job to run over one or more table snapshots, with one or more scans configured for each.\nClass MultiTableSnapshotInputFormat;\n// A job with a map to count rows.\nClass RowCounter;\n// Convert HBase tabular data into a format that is consumable by Map/Reduce.\nClass TableInputFormat;\n// A Base for TableInputFormats.\nClass TableInputFormatBase;\n// Utility for TableMap and TableReduce\nClass TableMapReduceUtil;\n// Convert Map/Reduce output and write it to an HBase table\nClass TableOutputFormat;\n// Convert Reduce output (key, value) to (HStoreKey, KeyedDataArrayWritable) and write to an HBase table.\nClass TableOutputFormat.TableRecordWriter;\n// Iterate over an HBase table data, return (Text, RowResult) pairs\nClass TableRecordReader;\n// Iterate over an HBase table data, return (Text, RowResult) pairs\nClass TableRecordReaderImpl;\n// TableSnapshotInputFormat allows a MapReduce job to run over a table snapshot.\nClass TableSnapshotInputFormat;\n// \nClass TableSnapshotInputFormat.TableSnapshotRegionSplit;\n// A table split corresponds to a key range [low, high)\nClass TableSplit;\n", "des": "Provides HBase MapReduce Input/OutputFormats, a table indexing MapReduce job, and utility methods."}
{"index": 391, "repo": "hbase-mapreduce-3.0.0-alpha-4", "code": "package mapreduce\n\n// Interface to convert visibility expressions into Tags for storing along with Cells in HFiles.\nInterface VisibilityExpressionResolver;\n// A job with a a map and reduce phase to count cells in a table.\nClass CellCounter;\n// Facade to create Cells for HFileOutputFormat.\nClass CellCreator;\n// \nClass CellSerialization;\n// \nClass CellSerialization.CellDeserializer;\n// \nClass CellSerialization.CellSerializer;\n// Emits sorted Cells.\nClass CellSortReducer;\n// Tool used to copy a table to another one which can be on a different setup.\nClass CopyTable;\n// This implementation creates tags by expanding expression using label ordinal.\nClass DefaultVisibilityExpressionResolver;\n// Driver for hbase mapreduce jobs.\nClass Driver;\n// Export an HBase table.\nClass Export;\n// Some helper methods are used by Export and org.apache.hadoop.hbase.coprocessor.Export (in hbase-endpooint).\nClass ExportUtils;\n// Similar to CellSerialization, but includes the sequenceId from an ExtendedCell.\nClass ExtendedCellSerialization;\n// \nClass ExtendedCellSerialization.ExtendedCellDeserializer;\n// \nClass ExtendedCellSerialization.ExtendedCellSerializer;\n// Extract grouping columns from input record.\nClass GroupingTableMapper;\n// \nClass HashTable;\n// \nClass HashTable.HashMapper;\n// \nClass HashTable.TableHash;\n// Simple MR input format for HFiles.\nClass HFileInputFormat;\n// Writes HFiles.\nClass HFileOutputFormat2;\n// This is used to partition the output keys into groups of keys.\nClass HRegionPartitioner<KEY,VALUE>;\n// Pass the given key and record as-is to the reduce phase.\nClass IdentityTableMapper;\n// Convenience class that simply writes all values (which must be Put or Delete instances) passed to it out to the configured HBase table.\nClass IdentityTableReducer;\n// Import data written by Export.\nClass Import;\n// A mapper that just writes out KeyValues.\nClass Import.CellImporter;\n// \nClass Import.CellReducer;\n// \nClass Import.CellSortImporter;\n// \nClass Import.CellWritableComparable;\n// \nClass Import.CellWritableComparable.CellWritableComparator;\n", "des": "Provides HBase MapReduce Input/OutputFormats, a table indexing MapReduce job, and utility methods."}
{"index": 392, "repo": "amqp-client-5.18.0", "code": "package client\n\n// Strategy interface to get the potential servers to connect to.\nInterface AddressResolver;\n// \nInterface AMQP;\n// \nInterface AMQP.Access.Request;\n// \nInterface AMQP.Access.RequestOk;\n// \nInterface AMQP.Basic.Ack;\n// \nInterface AMQP.Basic.Cancel;\n// \nInterface AMQP.Basic.CancelOk;\n// \nInterface AMQP.Basic.Consume;\n// \nInterface AMQP.Basic.ConsumeOk;\n// \nInterface AMQP.Basic.Deliver;\n// \nInterface AMQP.Basic.Get;\n// \nInterface AMQP.Basic.GetEmpty;\n// \nInterface AMQP.Basic.GetOk;\n// \nInterface AMQP.Basic.Nack;\n// \nInterface AMQP.Basic.Publish;\n// \nInterface AMQP.Basic.Qos;\n// \nInterface AMQP.Basic.QosOk;\n// \nInterface AMQP.Basic.Recover;\n// \nInterface AMQP.Basic.RecoverAsync;\n// \nInterface AMQP.Basic.RecoverOk;\n// \nInterface AMQP.Basic.Reject;\n// \nInterface AMQP.Basic.Return;\n// \nInterface AMQP.Channel.Close;\n// \nInterface AMQP.Channel.CloseOk;\n// \nInterface AMQP.Channel.Flow;\n// \nInterface AMQP.Channel.FlowOk;\n// \nInterface AMQP.Channel.Open;\n// \nInterface AMQP.Channel.OpenOk;\n// \nInterface AMQP.Confirm.Select;\n// \nInterface AMQP.Confirm.SelectOk;\n// \nInterface AMQP.Connection.Blocked;\n// \nInterface AMQP.Connection.Close;\n// \nInterface AMQP.Connection.CloseOk;\n// \nInterface AMQP.Connection.Open;\n// \nInterface AMQP.Connection.OpenOk;\n// \nInterface AMQP.Connection.Secure;\n// \nInterface AMQP.Connection.SecureOk;\n// \nInterface AMQP.Connection.Start;\n// \nInterface AMQP.Connection.StartOk;\n// \nInterface AMQP.Connection.Tune;\n// \nInterface AMQP.Connection.TuneOk;\n// \nInterface AMQP.Connection.Unblocked;\n// \nInterface AMQP.Connection.UpdateSecret;\n", "des": "The client API proper: classes and interfaces representing the AMQP connections, channels, and wire-protocol framing descriptors."}
{"index": 393, "repo": "amqp-client-5.18.0", "code": "package impl\n\n// \nInterface AMQChannel.RpcContinuation;\n// \nInterface AMQImpl.MethodVisitor;\n// Provider interface for establishing credentials for connecting to the broker.\nInterface CredentialsProvider;\n// Provider interface to refresh credentials when appropriate and perform an operation once the credentials have been renewed.\nInterface CredentialsRefreshService;\n// Listener called when a connection gets an IO error trying to write on the socket.\nInterface ErrorOnWriteListener;\n// Interface to a frame handler.\nInterface FrameHandler;\n// \nInterface FrameHandlerFactory;\n// \nInterface NetworkConnection;\n// \nInterface RpcWrapper;\n// \nClass AbstractFrameHandlerFactory;\n// Base class for MetricsCollector.\nClass AbstractMetricsCollector;\n// \nClass AMQBasicProperties;\n// Base class modelling an AMQ channel.\nClass AMQChannel;\n// \nClass AMQChannel.BlockingRpcContinuation<T>;\n// \nClass AMQChannel.SimpleBlockingRpcContinuation;\n// AMQP 0-9-1-specific implementation of Command which accumulates method, header and body from a series of frames, unless these are supplied at construction time.\nClass AMQCommand;\n// Concrete class representing and managing an AMQP connection to a broker.\nClass AMQConnection;\n// Implementation of ContentHeader - specialized by autogenerated code in AMQP.java.\nClass AMQContentHeader;\n// \nClass AMQImpl;\n// \nClass AMQImpl.Access;\n// \nClass AMQImpl.Access.Request;\n// \nClass AMQImpl.Access.RequestOk;\n// \nClass AMQImpl.Basic;\n// \nClass AMQImpl.Basic.Ack;\n// \nClass AMQImpl.Basic.Cancel;\n// \nClass AMQImpl.Basic.CancelOk;\n// \nClass AMQImpl.Basic.Consume;\n// \nClass AMQImpl.Basic.ConsumeOk;\n// \nClass AMQImpl.Basic.Deliver;\n// \nClass AMQImpl.Basic.Get;\n// \nClass AMQImpl.Basic.GetEmpty;\n// \nClass AMQImpl.Basic.GetOk;\n// \nClass AMQImpl.Basic.Nack;\n// \nClass AMQImpl.Basic.Publish;\n// \nClass AMQImpl.Basic.Qos;\n", "des": "Implementations of interfaces specified in the client API, and their supporting classes."}
{"index": 394, "repo": "amqp-client-5.18.0", "code": "package nio\n\n// Contract to create ByteBuffers.\nInterface ByteBufferFactory;\n// Contract to exchange frame between application threads and NIO thread.\nInterface NioQueue;\n// \nInterface WriteRequest;\n// Bridge between NioQueue and JDK's BlockingQueue.\nClass BlockingQueueNioQueue;\n// Bridge between the byte buffer and stream worlds.\nClass ByteBufferOutputStream;\n// Default ByteBufferFactory that creates heap-based ByteBuffers.\nClass DefaultByteBufferFactory;\n// Class to create AMQP frames from a ReadableByteChannel.\nClass FrameBuilder;\n// \nClass FrameWriteRequest;\n// \nClass HeaderWriteRequest;\n// Context when creating resources for a NIO-based connection.\nClass NioContext;\n// \nClass NioHelper;\n// Logic of the NIO loop.\nClass NioLoop;\n// \nClass NioLoopContext;\n// Parameters used to configure the NIO mode of a ConnectionFactory.\nClass NioParams;\n// \nClass SelectorHolder;\n// \nClass SocketChannelFrameHandler;\n// \nClass SocketChannelFrameHandlerFactory;\n// \nClass SocketChannelFrameHandlerState;\n// \nClass SocketChannelRegistration;\n// Bridge between the byte buffer and stream worlds.\nClass SslEngineByteBufferOutputStream;\n// Sub-class of FrameBuilder that unwraps crypted data from the network.\nClass SslEngineFrameBuilder;\n// \nClass SslEngineHelper;\n", "des": "NIO network connector."}
{"index": 395, "repo": "amqp-client-5.18.0", "code": "package recovery\n\n// Backoff policy for topology recovery retry attempts.\nInterface BackoffPolicy;\n// Not part of the public API.\nInterface ConsumerRecoveryListener;\n// \nInterface DefaultRetryHandler.RetryOperation<T>;\n// Not part of the public API.\nInterface QueueRecoveryListener;\n// Functional callback interface that can be used to rename a queue during topology recovery.\nInterface RecoveredQueueNameSupplier;\n// Used internally to indicate when connection recovery can begin.\nInterface RecoveryCanBeginListener;\n// Contract to retry failed operations during topology recovery.\nInterface RetryHandler;\n// Filter to know whether entities should be recovered or not.\nInterface TopologyRecoveryFilter;\n// Channel implementation that is automatically recovered during connection recovery.\nClass AutorecoveringChannel;\n// Connection implementation that performs automatic recovery when connection shutdown is not initiated by the application (e.g.\nClass AutorecoveringConnection;\n// Composable topology recovery retry handler.\nClass DefaultRetryHandler;\n// \nClass RecordedBinding;\n// \nClass RecordedConsumer;\n// \nClass RecordedEntity;\n// \nClass RecordedExchange;\n// \nClass RecordedExchangeBinding;\n// \nClass RecordedNamedEntity;\n// \nClass RecordedQueue;\n// \nClass RecordedQueueBinding;\n// AMQConnection modification that uses RecoveryAwareChannelN\nClass RecoveryAwareAMQConnection;\n// \nClass RecoveryAwareAMQConnectionFactory;\n// \nClass RecoveryAwareChannelManager;\n// ChannelN modification that keeps track of delivery tags and avoids sending\nClass RecoveryAwareChannelN;\n// The context of a topology recovery retry operation.\nClass RetryContext;\n// The retry of a retried topology recovery operation.\nClass RetryResult;\n// Builder to ease creation of DefaultRetryHandler instances.\nClass TopologyRecoveryRetryHandlerBuilder;\n// Useful ready-to-use conditions and operations for DefaultRetryHandler.\nClass TopologyRecoveryRetryLogic;\n", "des": "Implementation of connection and topology recovery."}
{"index": 396, "repo": "amqp-client-5.18.0", "code": "package json\n\n// Use a third-party JSON library, e.g.\nInterface JSONSerializable;\n// Use a third-party JSON library, e.g.\nClass JSONReader;\n// Utility methods for working with JSON objects in Java.\nClass JSONUtil;\n// Use a third-party JSON library, e.g.\nClass JSONWriter;\n", "des": "JSON reader/writer and utility classes."}
{"index": 397, "repo": "amqp-client-5.18.0", "code": "package jsonrpc\n\n// Abstraction to handle JSON parsing and generation.\nInterface JsonRpcMapper;\n// use JacksonJsonRpcMapper instead\nClass DefaultJsonRpcMapper;\n// JsonRpcMapper based on Jackson.\nClass JacksonJsonRpcMapper;\n// JSON-RPC is a lightweight RPC mechanism using JSON as a data language for request and reply messages.\nClass JsonRpcClient;\n// \nClass JsonRpcMapper.JsonRpcRequest;\n// \nClass JsonRpcMapper.JsonRpcResponse;\n// JSON-RPC Server class.\nClass JsonRpcServer;\n// Description of a single JSON-RPC procedure parameter.\nClass ParameterDescription;\n// Description of a single JSON-RPC procedure.\nClass ProcedureDescription;\n// Description of a JSON-RPC service.\nClass ServiceDescription;\n// Thrown when a JSON-RPC service indicates an error occurred during a call.\nClass JsonRpcException;\n// \nClass JsonRpcMappingException;\n", "des": "JSON-RPC client and server classes for supporting JSON-RPC over an AMQP transport."}
{"index": 398, "repo": "amqp-client-5.18.0", "code": "package utility\n\n// This interface exists as a workaround for the annoyingness of java.lang.Cloneable.\nInterface SensibleClone<T extends SensibleClone<T>>;\n// Simple one-shot IPC mechanism.\nClass BlockingCell<T>;\n// \nClass BlockingValueOrException<V,E extends Throwable & SensibleClone<E>>;\n// A class for allocating integers from a given range that uses a BitSet representation of the free integers.\nClass IntAllocator;\n// Catch-all holder class for static helper methods.\nClass Utility;\n// \nClass ValueOrException<V,E extends Throwable & SensibleClone<E>>;\n", "des": "Utility package of helper classes, mostly used in the implementation code."}
{"index": 399, "repo": "solr-dataimporthandler-8.11.2", "code": "package dataimport\n\n// A cache that allows a DIH entity's data to persist locally prior being joined to other data and/or indexed.\nInterface DIHCache;\n// \nInterface DIHWriter;\n// Event listener for DataImportHandler This API is experimental and subject to change\nInterface EventListener;\n// Implement this interface to stream records as and when one is found.\nInterface XPathRecordReader.Handler;\n// A data source implementation which can be used to read binary stream from content streams.\nClass BinContentStreamDataSource;\n// A DataSource which reads from local files\nClass BinFileDataSource;\n// A data source implementation which can be used to read binary streams using HTTP.\nClass BinURLDataSource;\n// \nClass CachePropertyUtil;\n// Transformer instance which converts a Clob to a String.\nClass ClobTransformer;\n// \nClass ConfigParseUtil;\n// A DataSource implementation which reads from the ContentStream of a POST request\nClass ContentStreamDataSource;\n// This abstract class gives access to all available objects.\nClass Context;\n// An implementation for the Context\nClass ContextImpl;\n// Stores all configuration information for pulling and indexing data.\nClass DataImporter;\n// since 8.6; see Deprecations\nClass DataImportHandler;\n// Provides data from a source with a given query.\nClass DataSource<T>;\n// Formats values using a given date format.\nClass DateFormatEvaluator;\n// Transformer instance which creates Date instances out of Strings.\nClass DateFormatTransformer;\n// \nClass DebugInfo;\n// \nClass DIHCacheSupport;\n// Implementations write out properties about the last data import for use by the next import.\nClass DIHProperties;\n// \nClass DIHWriterBase;\n// DocBuilder is responsible for creating Solr documents out of the given configuration.\nClass DocBuilder;\n// \nClass DocBuilder.Statistics;\n// An instance of entity processor serves an entity.\nClass EntityProcessor;\n// Base class for all implementations of EntityProcessor\nClass EntityProcessorBase;\n// A Wrapper over EntityProcessor instance which performs transforms and handles multi-row outputs correctly.\nClass EntityProcessorWrapper;\n// Pluggable functions for resolving variables\nClass Evaluator;\n// \nClass Evaluator.VariableWrapper;\n", "des": "DataImportHandler and related code."}
{"index": 400, "repo": "solr-dataimporthandler-8.11.2", "code": "package config\n\n// \nClass ConfigNameConstants;\n// \nClass ConfigParseUtil;\n// Mapping for data-config.xml\nClass DIHConfiguration;\n// \nClass Entity;\n// \nClass EntityField;\n// \nClass EntityField.Builder;\n// \nClass Field;\n// \nClass Field.Builder;\n// \nClass PropertyWriter;\n// \nClass Script;\n", "des": "Utility classes for parsing & modeling DIH configuration."}
{"index": 401, "repo": "commons-jexl3-3.3", "code": "package jexl3\n\n// Helper interface used when creating an array literal.\nInterface JexlArithmetic.ArrayBuilder;\n// Helper interface used when creating a map literal.\nInterface JexlArithmetic.MapBuilder;\n// Helper interface used when creating a set literal.\nInterface JexlArithmetic.SetBuilder;\n// The interface that uberspects JexlArithmetic classes.\nInterface JexlArithmetic.Uberspect;\n// Manages variables which can be referenced in a JEXL expression.\nInterface JexlContext;\n// A marker interface of the JexlContext that processes annotations.\nInterface JexlContext.AnnotationProcessor;\n// A marker interface of the JexlContext sharing a cancelling flag.\nInterface JexlContext.CancellationHandle;\n// A marker interface that solves a simple class name into a fully-qualified one.\nInterface JexlContext.ClassNameResolver;\n// A marker interface of the JexlContext that processes module definitions.\nInterface JexlContext.ModuleProcessor;\n// A marker interface of the JexlContext, NamespaceFunctor allows creating an instance to delegate namespace methods calls to.\nInterface JexlContext.NamespaceFunctor;\n// A marker interface of the JexlContext that declares how to resolve a namespace from its name; it is used by the interpreter during evaluation.\nInterface JexlContext.NamespaceResolver;\n// A marker interface of the JexlContext that exposes runtime evaluation options.\nInterface JexlContext.OptionsHandle;\n// A marker interface of the JexlContext that processes pragmas.\nInterface JexlContext.PragmaProcessor;\n// A marker interface of the JexlContext that indicates the interpreter to put this context in the JexlEngine thread local context instance during evaluation.\nInterface JexlContext.ThreadLocal;\n// 3.2\nInterface JexlEngine.Options;\n// Represents a single JEXL expression.\nInterface JexlExpression;\n// Describes errors more precisely.\nInterface JexlInfo.Detail;\n// A JEXL Script.\nInterface JexlScript;\n", "des": "Provides a framework for evaluating JEXL expressions."}
{"index": 402, "repo": "commons-jexl3-3.3", "code": "package annotations\n\n// Indicates JEXL Introspection should not see this element.\nAnnotation Type NoJexl;\n", "des": "Provides annotation for introspection services."}
{"index": 403, "repo": "commons-jexl3-3.3", "code": "package introspection\n\n// Interface used for regular method invocation.\nInterface JexlMethod;\n// This interface describes permissions used by JEXL introspection that constrain which packages/classes/constructors/fields/methods are made visible to JEXL scripts.\nInterface JexlPermissions;\n// Interface for getting values that appear to be properties.\nInterface JexlPropertyGet;\n// Interface used for setting values that appear to be properties.\nInterface JexlPropertySet;\n// 'Federated' introspection/reflection interface to allow JEXL introspection behavior to be customized.\nInterface JexlUberspect;\n// Abstracts getting property setter and getter.\nInterface JexlUberspect.PropertyResolver;\n// Determines property resolution strategy.\nInterface JexlUberspect.ResolverStrategy;\n// A permission delegation that augments the RESTRICTED permission with an explicit set of classes.\nClass JexlPermissions.ClassPermissions;\n// A base for permission delegation allowing functional refinement.\nClass JexlPermissions.Delegate;\n// A sandbox describes permissions on a class by explicitly allowing or forbidding access to methods and properties through \"allowlists\" and \"blocklists\".\nClass JexlSandbox;\n// since 3.2, use BlockSet\nClass JexlSandbox.BlackSet;\n// A base set of names.\nClass JexlSandbox.Names;\n// Contains the allow or block lists for properties and methods for a given class.\nClass JexlSandbox.Permissions;\n// since 3.2, use AllowSet\nClass JexlSandbox.WhiteSet;\n// The various builtin property resolvers.\nEnum JexlUberspect.JexlResolver;\n", "des": "Provides high-level introspective services."}
{"index": 404, "repo": "commons-jexl3-3.3", "code": "package scripting\n\n// Implements the JEXL ScriptEngine for JSF-223.\nClass JexlScriptEngine;\n// Implements the JEXL ScriptEngineFactory for JSF-223.\nClass JexlScriptEngineFactory;\n// Test application for JexlScriptEngine (JSR-223 implementation).\nClass Main;\n", "des": "Contains the JSR-223 Scripting Engine for JEXL script."}
{"index": 405, "repo": "hbase-common-3.0.0-alpha-4", "code": "package types\n\n// DataType is the base class for all HBase data types.\nInterface DataType<T>;\n// A Map that keeps a sorted array in order to provide the concurrent map interface.\nClass CopyOnWriteArrayMap<K,V>;\n// Wraps an existing DataType implementation as a fixed-length version of itself.\nClass FixedLengthWrapper<T>;\n// A byte[] of variable-length.\nClass OrderedBlob;\n// An alternative to OrderedBlob for use by Struct fields that do not terminate the fields list.\nClass OrderedBlobVar;\n// Base class for data types backed by the OrderedBytes encoding implementations.\nClass OrderedBytesBase<T>;\n// A float of 32-bits using a fixed-length encoding.\nClass OrderedFloat32;\n// A double of 64-bits using a fixed-length encoding.\nClass OrderedFloat64;\n// A short of 16-bits using a fixed-length encoding.\nClass OrderedInt16;\n// An int of 32-bits using a fixed-length encoding.\nClass OrderedInt32;\n// A long of 64-bits using a fixed-length encoding.\nClass OrderedInt64;\n// A byte of 8-bits using a fixed-length encoding.\nClass OrderedInt8;\n// An Number of arbitrary precision and variable-length encoding.\nClass OrderedNumeric;\n// A String of variable-length.\nClass OrderedString;\n// An DataType for interacting with values encoded using Bytes.putByte(byte[], int, byte).\nClass RawByte;\n// An DataType for interacting with variable-length values encoded using Bytes.putBytes(byte[], int, byte[], int, int).\nClass RawBytes;\n// An DataType that encodes fixed-length values encoded using Bytes.putBytes( byte[], int, byte[], int, int).\nClass RawBytesFixedLength;\n// An DataType that encodes variable-length values encoded using Bytes.putBytes(byte[], int, byte[], int, int).\nClass RawBytesTerminated;\n// An DataType for interacting with values encoded using Bytes.putDouble(byte[], int, double).\nClass RawDouble;\n// An DataType for interacting with values encoded using Bytes.putFloat(byte[], int, float).\nClass RawFloat;\n", "des": "This package provides the definition and implementation of HBase's extensible data type API."}
{"index": 406, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package social\n\n// Base interface that may be implemented by API bindings.\nInterface ApiBinding;\n// Top-level marker interface defining a ServiceProvider.\nInterface ServiceProvider<A>;\n// Strategy interface used to determine the account ID of the current user.\nInterface UserIdSource;\n// Indicates that an error occurred while consuming a provider API.\nClass ApiException;\n// Exception thrown when a duplicate status is posted.\nClass DuplicateStatusException;\n// Exception indicating that the authorization presented to the server has expired.\nClass ExpiredAuthorizationException;\n// Exception thrown when attempting an operation that requires a permission not granted to the caller.\nClass InsufficientPermissionException;\n// Exception indicating an internal error occurred on the server.\nClass InternalServerErrorException;\n// Exception indicating that the authorization used during an operation invocation is invalid.\nClass InvalidAuthorizationException;\n// Exception indicating that an operation requiring authorization was attempted without providing authorization.\nClass MissingAuthorizationException;\n// Indicates the client is not authorized to invoke the API.\nClass NotAuthorizedException;\n// Indicates an operation was attempted that is not permitted.\nClass OperationNotPermittedException;\n// Exception thrown when API calls are being rate-limited.\nClass RateLimitExceededException;\n// Exception indicating that the authorization used during an operation invocation is rejected by the server.\nClass RejectedAuthorizationException;\n// Indicates that the requested provider API resource could not be found.\nClass ResourceNotFoundException;\n// Exception indicating that the authorization used during an operation invocation has been revoked.\nClass RevokedAuthorizationException;\n// Exception indicating that the server is down or being upgraded.\nClass ServerDownException;\n// Exception thrown when a server error occurs.\nClass ServerException;\n// Exception indicating that the server is experiencing high load.\nClass ServerOverloadedException;\n// Exception class indicating a problem occurred performing an operation against a service provider.\nClass SocialException;\n// Indicates that an otherwise uncategorized error occurred while consuming a provider API.\nClass UncategorizedApiException;\n", "des": "Core Spring Social classes"}
{"index": 407, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package connect\n\n// An adapter that bridges between the uniform Connection model and a specific provider API model.\nInterface ApiAdapter<A>;\n// A link to a service provider user.\nInterface Connection<A>;\n// A ServiceLocator for ConnectionFactory instances.\nInterface ConnectionFactoryLocator;\n// Data access interface for saving and restoring Connection objects from a persistent store.\nInterface ConnectionRepository;\n// A command that signs up a new user in the event no user id could be mapped from a Connection.\nInterface ConnectionSignUp;\n// A configuration interface used to set values on a Connection from a specific service provider API instance.\nInterface ConnectionValues;\n// A data access interface for managing a global store of users connections to service providers.\nInterface UsersConnectionRepository;\n// A data transfer object that allows the internal state of a Connection to be persisted and transferred between layers of an application.\nClass ConnectionData;\n// Base abstraction for factories that construct service provider Connection instances.\nClass ConnectionFactory<A>;\n// The unique business key for a Connection instance.\nClass ConnectionKey;\n// A normalized model representing a service provider user profile.\nClass UserProfile;\n// Builder for constructing a UserProfile instance returned by ApiAdapter.fetchUserProfile(Object) Makes it easy to construct a profile instance where some of the individual fields may be null.\nClass UserProfileBuilder;\n// Base exception class for ConnectionRepository failures.\nClass ConnectionRepositoryException;\n// Thrown by a ConnectionRepository when attempting to add a Connection and a connection already exists with the given key.\nClass DuplicateConnectionException;\n// Thrown by a ConnectionRepository when attempting to fetch a Connection and no such connection exists with the provided key.\nClass NoSuchConnectionException;\n// Thrown by a ConnectionRepository when attempting to fetch a \"primary\" connection and the user is not connected to the provider in question.\nClass NotConnectedException;\n", "des": "Framework for establishing connections between local users and users of ServiceProviders such as Twitter and Facebook."}
{"index": 408, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package jdbc\n\n// UsersConnectionRepository that uses the JDBC API to persist connection data to a relational database.\nClass JdbcUsersConnectionRepository;\n", "des": "JDBC-based ConnectionRepository implementation."}
{"index": 409, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package support\n\n// Base support class for Connection implementations.\nClass AbstractConnection<A>;\n// A registry for service provider connection factories.\nClass ConnectionFactoryRegistry;\n// An OAuth1-based Connection implementation.\nClass OAuth1Connection<A>;\n// Factory for creating OAuth1-based Connections.\nClass OAuth1ConnectionFactory<A>;\n// An OAuth2-based Connection implementation.\nClass OAuth2Connection<A>;\n// Factory for creating OAuth2-based Connections.\nClass OAuth2ConnectionFactory<S>;\n", "des": "ServiceProvider Connect API implementation support."}
{"index": 410, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package oauth1\n\n// A service interface for the OAuth 1 flow.\nInterface OAuth1Operations;\n// A ServiceProvider that uses the OAuth 1.0 protocol.\nInterface OAuth1ServiceProvider<A>;\n// Base class for OAuth 1-based provider API bindings.\nClass AbstractOAuth1ApiBinding;\n// Base class for ServiceProviders that use the OAuth1 protocol.\nClass AbstractOAuth1ServiceProvider<S>;\n// A OAuth 1.0 request token that has been authorized by the user.\nClass AuthorizedRequestToken;\n// Generic implementation of an OAuth1ConnectionFactory that carries no intrinsic knowledge of the API it will be creating connections against.\nClass GenericOAuth1ConnectionFactory;\n// Generic implementation of OAuth1ServiceProvider that carries no intrinsic knowledge of the API it will be creating connections against.\nClass GenericOAuth1ServiceProvider;\n// Parameters for building an OAuth1 authorize URL.\nClass OAuth1Parameters;\n// OAuth10Operations implementation that uses REST-template to make the OAuth calls.\nClass OAuth1Template;\n// Holds an OAuth token and secret.\nClass OAuthToken;\n// Various versions ofthe OAuth1 Core specification.\nEnum OAuth1Version;\n", "des": "OAuth1 client."}
{"index": 411, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package oauth2\n\n// A service interface for the OAuth2 flow.\nInterface OAuth2Operations;\n// A ServiceProvider that uses the OAuth 2.0 protocol.\nInterface OAuth2ServiceProvider<A>;\n// Base class for OAuth 2-based provider API bindings.\nClass AbstractOAuth2ApiBinding;\n// Base class for ServiceProviders that use the OAuth2 protocol.\nClass AbstractOAuth2ServiceProvider<S>;\n// OAuth2 access token.\nClass AccessGrant;\n// Generic implementation of an OAuth2ConnectionFactory that carries no intrinsic knowledge of the API it will be creating connections against.\nClass GenericOAuth2ConnectionFactory;\n// Generic implementation of OAuth2ServiceProvider that carries no intrinsic knowledge of the API it will be creating connections against.\nClass GenericOAuth2ServiceProvider;\n// Parameters for building an OAuth2 authorize URL.\nClass OAuth2Parameters;\n// OAuth2Operations implementation that uses REST-template to make the OAuth calls.\nClass OAuth2Template;\n// OAuth2 supports two types of authorization flow, typically referred to as \"Client-side\" and \"Server-side\".\nEnum GrantType;\n// Enum encapsulating the differences between the various versions of the OAuth2 specification.\nEnum OAuth2Version;\n// Strategy enumeration where each value carries an interceptor defining how an access token is carried on API requests.\nEnum TokenStrategy;\n", "des": "OAuth2 client."}
{"index": 412, "repo": "spring-social-core-1.1.6.RELEASE", "code": "package support\n\n// \nClass BufferingClientHttpResponse;\n// Chooses a request factory.\nClass ClientHttpRequestFactorySelector;\n// \nClass ClientHttpRequestFactorySelector.HttpComponentsClientRequestFactoryCreator;\n// Message converter that reads form-encoded data into a flat Map<String, String>.\nClass FormMapHttpMessageConverter;\n// Extension of HttpRequestWrapper that supports adding new HttpHeaders to the wrapped HttpRequest.\nClass HttpRequestDecorator;\n// \nClass LoggingErrorHandler;\n// Generally useful base class for creating MultiValueMaps that store HTTP query parameters.\nClass ParameterMap;\n// Builds up a URI from individual URI components.\nClass URIBuilder;\n// Exception thrown when URIBuilder can't build the specified URI.\nClass URIBuilderException;\n", "des": "Internal utilities and helpers used by the Spring Social core module."}
{"index": 413, "repo": "hadoop-azure-3.3.6", "code": "package azure\n\n// Interface for executing the file operation by a thread.\nInterface AzureFileSystemThreadTask;\n// The interface that every Azure file system key provider must implement.\nInterface KeyProvider;\n// Iterface used by AzureNativeFileSysteStore to retrieve SAS Keys for the respective azure storage entity.\nInterface SASKeyGeneratorInterface;\n// Interface to implement authorization support in WASB.\nInterface WasbAuthorizerInterface;\n// A simple generic stack implementation using linked lists.\nClass AzureLinkedStack<E>;\n// Core implementation of Windows Azure Filesystem for Hadoop.\nClass AzureNativeFileSystemStore;\n// Stream object that implements append for Block Blobs in WASB.\nClass BlockBlobAppendStream;\n// Class that provides caching for Authorize and getSasUri calls\nClass CachingAuthorizer<K,V>;\n// Local SAS Key Generation implementation.\nClass LocalSASKeyGeneratorImpl;\n// A FileSystem for reading and writing files stored on Windows Azure.\nClass NativeAzureFileSystem;\n// A description of a folder rename operation, including the source and destination keys, and descriptions of the files in the source folder.\nClass NativeAzureFileSystem.FolderRenamePending;\n// A FileSystem for reading and writing files stored on Windows Azure.\nClass NativeAzureFileSystem.Secure;\n// Class implementing a RemoteSASKeyGenerator.\nClass RemoteSASKeyGeneratorImpl;\n// Class implementing WasbAuthorizerInterface using a remote service that implements the authorization operation.\nClass RemoteWasbAuthorizerImpl;\n// Abstract base class for the SAS Key Generator implementation\nClass SASKeyGeneratorImpl;\n// An implementation of the StorageInterface for SAS Key mode.\nClass SecureStorageInterfaceImpl;\n// Helper class the has constants and helper methods used in WASB when integrating with a remote http cred service which uses Kerberos and delegation tokens.\nClass SecureWasbRemoteCallHelper;\n// An Azure blob lease that automatically renews itself indefinitely using a background thread.\nClass SelfRenewingLease;\n// Introduces delays in our Azure traffic to prevent overrunning the server-side throttling limits.\nClass SelfThrottlingIntercept;\n// Manages the lifetime of binding on the operation contexts to intercept send request events to Azure storage and allow concurrent OOB I/Os.\nClass SendRequestIntercept;\n", "des": "A distributed implementation of FileSystem for reading and writing files on Azure Block Storage."}
{"index": 414, "repo": "hadoop-azure-3.3.6", "code": "package metrics\n\n// A metrics source for the WASB file system to track all the metrics we care about for getting a clear picture of the performance/reliability/interaction of the Hadoop cluster with Azure Storage.\nClass AzureFileSystemInstrumentation;\n// AzureFileSystemMetricsSystem\nClass AzureFileSystemMetricsSystem;\n// Internal implementation class to help calculate the current bytes uploaded/downloaded and the maximum bandwidth gauges.\nClass BandwidthGaugeUpdater;\n// An event listener to the ResponseReceived event from Azure Storage that will update error metrics appropriately when it gets that event.\nClass ErrorMetricUpdater;\n// An event listener to the ResponseReceived event from Azure Storage that will update metrics appropriately when it gets that event.\nClass ResponseReceivedMetricUpdater;\n", "des": "Infrastructure for a Metrics2 source that provides information on Windows Azure Filesystem for Hadoop instances."}
{"index": 415, "repo": "hadoop-azure-3.3.6", "code": "package azurebfs\n\n// Azure Blob File System implementation of AbstractFileSystem.\nClass Abfs;\n// Configuration for Azure Blob FileSystem.\nClass AbfsConfiguration;\n// Instrumentation of Abfs counters.\nClass AbfsCountersImpl;\n// Azure Blob File System implementation of AbstractFileSystem.\nClass Abfss;\n// A FileSystem for reading and writing files stored on Windows Azure\nClass AzureBlobFileSystem;\n// Provides the bridging logic between Hadoop's abstract filesystem and Azure Storage.\nClass AzureBlobFileSystemStore;\n// A builder class for AzureBlobFileSystemStore.\nClass AzureBlobFileSystemStore.AzureBlobFileSystemStoreBuilder;\n// A secure FileSystem for reading and writing files stored on Windows Azure\nClass SecureAzureBlobFileSystem;\n// Statistic which are collected in Abfs.\nEnum AbfsStatistic;\n", "des": "A distributed implementation of FileSystem for reading and writing files on Azure Storage."}
{"index": 416, "repo": "hadoop-azure-3.3.6", "code": "package commit\n\n// API exclusively for committing files.\nInterface ResilientCommitByRename;\n// Extension of StoreOperationsThroughFileSystem with ABFS awareness.\nClass AbfsManifestStoreOperations;\n// A Committer for the manifest committer which performs all bindings needed to work best with abfs.\nClass AzureManifestCommitterFactory;\n", "des": "Support for manifest committer."}
{"index": 417, "repo": "hadoop-azure-3.3.6", "code": "package extensions\n\n// An optional extension for custom extensions, so as to support tighter integration.\nInterface BoundDTExtension;\n// Interface for Managing the Delegation tokens.\nInterface CustomDelegationTokenManager;\n// This interface provides an extensibility model for customizing the acquisition of Azure Active Directory Access Tokens.\nInterface CustomTokenProviderAdaptee;\n// Interface to support SAS authorization.\nInterface SASTokenProvider;\n// Classes to help with use of extensions, expecially those implementing @BoundDTExtension.\nClass ExtensionHelper;\n", "des": "This package is for extension points under ABFS; There are no stability guarantees as these extension points are deep inside the ABFS implementation code."}
{"index": 418, "repo": "hadoop-azure-3.3.6", "code": "package oauth2\n\n// IdentityTransformerInterface defines the set of translation operations that any identity transformer implementation must provide.\nInterface IdentityTransformerInterface;\n// Returns an Azure Active Directory token when requested.\nClass AccessTokenProvider;\n// This class provides convenience methods to obtain AAD tokens.\nClass AzureADAuthenticator;\n// Object representing the AAD access token to use when making HTTP requests to Azure Data Lake Storage.\nClass AzureADToken;\n// Provides tokens based on client credentials.\nClass ClientCredsTokenProvider;\n// Provides tokens based on custom implementation, following the Adapter Design Pattern.\nClass CustomTokenProviderAdapter;\n// Perform transformation for Azure Active Directory identities used in owner, group and acls.\nClass IdentityTransformer;\n// A subclass of IdentityTransformer that translates the AAD to Local identity using IdentityHandler.\nClass LocalIdentityTransformer;\n// Provides tokens based on Azure VM's Managed Service Identity.\nClass MsiTokenProvider;\n// Utilities class http query parameters.\nClass QueryParams;\n// Provides tokens based on refresh token.\nClass RefreshTokenBasedTokenProvider;\n// Provides tokens based on username and password.\nClass UserPasswordTokenProvider;\n// This exception class contains the http error code, requestId and error message, it is thrown when AzureADAuthenticator failed to get the Azure Active Directory token.\nClass AzureADAuthenticator.HttpException;\n// An unexpected HTTP response was raised, such as text coming back from what should be an OAuth endpoint.\nClass AzureADAuthenticator.UnexpectedResponseException;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 419, "repo": "hadoop-azure-3.3.6", "code": "package security\n\n// Delegation token Identifier for ABFS delegation tokens.\nClass AbfsDelegationTokenIdentifier;\n// Class for delegation token Manager.\nClass AbfsDelegationTokenManager;\n// A DT fetcher for Abfs.\nClass AbfsDtFetcher;\n// The DT Fetcher for abfss.\nClass AbfssDtFetcher;\n// Token Renewer for renewing ABFS delegation tokens with remote service.\nClass AbfsTokenRenewer;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 420, "repo": "hadoop-azure-3.3.6", "code": "package retryReasonCategories\n\n// Category that can capture server-response errors for 4XX status-code.\nClass ClientErrorRetryReason;\n// Category that can capture server-response errors for connection-reset exception.\nClass ConnectionResetRetryReason;\n// Category that can capture server-response errors for connection-timeout.\nClass ConnectionTimeoutRetryReason;\n// Category that can capture server-response errors for read-timeout.\nClass ReadTimeoutRetryReason;\n// Provides methods to define if given exception can be categorised to certain category.\nClass RetryReasonCategory;\n// Category that can capture server-response errors for 5XX status-code.\nClass ServerErrorRetryReason;\n// Category that can capture server-response errors for UnknownHostException.\nClass UnknownHostRetryReason;\n// Category that can capture server-response errors for IOException.\nClass UnknownIOExceptionRetryReason;\n// Category that can capture server-response errors for SocketException.\nClass UnknownSocketExceptionRetryReason;\n", "des": "A retryReasonCategory defines methods applicable on server-response errors."}
{"index": 421, "repo": "mahout-mr-0.13.0", "code": "package inmem\n\n// \nClass InMemBuilder;\n// \nClass InMemInputFormat;\n// Custom InputSplit that indicates how many trees are built by each mapper\nClass InMemInputFormat.InMemInputSplit;\n// \nClass InMemInputFormat.InMemRecordReader;\n// \nClass InMemMapper;\n", "des": "In-memory mapreduce implementation of Random Decision Forests"}
{"index": 422, "repo": "mahout-mr-0.13.0", "code": "package partial\n\n// \nClass PartialBuilder;\n// \nClass Step1Mapper;\n// \nClass TreeID;\n", "des": "Partial-data mapreduce implementation of Random Decision Forests"}
{"index": 423, "repo": "mahout-mr-0.13.0", "code": "package sgd\n\n// Provides the ability to inject a gradient into the SGD logistic regresion.\nInterface Gradient;\n// A prior is used to regularize the learning algorithm.\nInterface PriorFunction;\n// A record factor understands how to convert a line of data into fields and then into a vector.\nInterface RecordFactory;\n// Generic definition of a 1 of n logistic regression classifier that returns probabilities in response to a feature vector.\nClass AbstractOnlineLogisticRegression;\n// This is a meta-learner that maintains a pool of ordinary OnlineLogisticRegression learners.\nClass AdaptiveLogisticRegression;\n// \nClass AdaptiveLogisticRegression.TrainingExample;\n// Provides a shim between the EP optimization stuff and the CrossFoldLearner.\nClass AdaptiveLogisticRegression.Wrapper;\n// Does cross-fold validation of log-likelihood and AUC on several online logistic regression models.\nClass CrossFoldLearner;\n// Converts CSV data lines to vectors.\nClass CsvRecordFactory;\n// Implements the basic logistic training law.\nClass DefaultGradient;\n// Implements a linear combination of L1 and L2 priors.\nClass ElasticBandPrior;\n// Online gradient machine learner that tries to minimize the label ranking hinge loss.\nClass GradientMachine;\n// Implements the Laplacian or bi-exponential prior.\nClass L1;\n// Implements the Gaussian prior.\nClass L2;\n// Provides a stochastic mixture of ranking updates and normal logistic updates.\nClass MixedGradient;\n// Uses sample data to reverse engineer a feature-hashed model.\nClass ModelDissector;\n// \nClass ModelDissector.Weight;\n// Provides the ability to store SGD model-related objects as binary files.\nClass ModelSerializer;\n// Extends the basic on-line logistic regression learner with a specific set of learning rate annealing schedules.\nClass OnlineLogisticRegression;\n// Online passive aggressive learner that tries to minimize the label ranking hinge loss.\nClass PassiveAggressive;\n// Utilities that write a class name and then serialize using writables.\nClass PolymorphicWritable;\n", "des": "Implements a variety of on-line logistric regression classifiers using SGD-based algorithms."}
{"index": 424, "repo": "mahout-mr-0.13.0", "code": "package kmeans\n\n// \nClass Kluster;\n// \nClass KMeansDriver;\n// Given an Input Path containing a SequenceFile, randomly select k vectors and write them to the output file as a Kluster representing the initial centroid to use.\nClass RandomSeedGenerator;\n", "des": "This package provides an implementation of the k-means clustering algorithm."}
{"index": 425, "repo": "mahout-mr-0.13.0", "code": "package ep\n\n// \nInterface EvolutionaryProcess.Function<T>;\n// Payloads for evolutionary state must be copyable and updatable.\nInterface Payload<T>;\n// Allows evolutionary optimization where the state function can't be easily packaged for the optimizer to execute.\nClass EvolutionaryProcess<T extends Payload<U>,U>;\n// Provides coordinate tranformations so that evolution can proceed on the entire space of reals but have the output limited and squished in convenient (and safe) ways.\nClass Mapping;\n// \nClass Mapping.Exponential;\n// \nClass Mapping.Identity;\n// \nClass Mapping.LogLimit;\n// \nClass Mapping.SoftLimit;\n// Records evolutionary state and provides a mutation operation for recorded-step meta-mutation.\nClass State<T extends Payload<U>,U>;\n", "des": "Provides basic evolutionary optimization using recorded-step mutation."}
{"index": 426, "repo": "commons-geometry-hull-1.0-beta1", "code": "package hull\n\n// This class represents a convex hull.\nInterface ConvexHull<P extends Point<P>>;\n// Interface for convex hull generators.\nInterface ConvexHullGenerator<P extends Point<P>>;\n", "des": "This package provides interfaces and classes related to the convex hull problem."}
{"index": 427, "repo": "commons-geometry-hull-1.0-beta1", "code": "package twod\n\n// Interface for convex hull generators in the two-dimensional Euclidean space.\nInterface ConvexHullGenerator2D;\n// A simple heuristic to improve the performance of convex hull algorithms.\nClass AklToussaintHeuristic;\n// This class represents a convex hull in two-dimensional Euclidean space.\nClass ConvexHull2D;\n// Implements Andrew's monotone chain method to generate the convex hull of a finite set of points in the two-dimensional Euclidean space.\nClass MonotoneChain;\n", "des": "This package provides algorithms to generate the convex hull for a set of points in an two-dimensional Euclidean space."}
{"index": 428, "repo": "hive-serde-4.0.0-alpha-2", "code": "package typeinfo\n\n// \nClass BaseCharTypeInfo;\n// \nClass BaseCharUtils;\n// \nClass CharTypeInfo;\n// \nClass DecimalTypeInfo;\n// \nClass HiveDecimalUtils;\n// A List Type has homogeneous elements.\nClass ListTypeInfo;\n// A Map Type has homogeneous keys and homogeneous values.\nClass MapTypeInfo;\n// There are limited number of Primitive Types.\nClass PrimitiveTypeInfo;\n// StructTypeInfo represents the TypeInfo of a struct.\nClass StructTypeInfo;\n// \nClass TimestampLocalTZTypeInfo;\n// Stores information about a type.\nClass TypeInfo;\n// TypeInfoFactory can be used to create the TypeInfo object for any types.\nClass TypeInfoFactory;\n// TypeInfoUtils.\nClass TypeInfoUtils;\n// \nClass TypeInfoUtils.PrimitiveParts;\n// UnionTypeInfo represents the TypeInfo of an union.\nClass UnionTypeInfo;\n// \nClass VarcharTypeInfo;\n", "des": "This package provides the implementation of the SerDe type system."}
{"index": 429, "repo": "kafka-streams-3.5.0", "code": "package streams\n\n// KafkaClientSupplier can be used to provide custom Kafka clients to a KafkaStreams instance.\nInterface KafkaClientSupplier;\n// Listen to KafkaStreams.State change events.\nInterface KafkaStreams.StateListener;\n// Metadata of a Kafka Streams client.\nInterface StreamsMetadata;\n// The Kafka Streams metrics interface for adding metric sensors and collecting metric values.\nInterface StreamsMetrics;\n// Metadata of a task.\nInterface TaskMetadata;\n// Metadata of a stream thread.\nInterface ThreadMetadata;\n// A meta representation of a topology.\nInterface TopologyDescription;\n// Represents a global store.\nInterface TopologyDescription.GlobalStore;\n// A node of a topology.\nInterface TopologyDescription.Node;\n// A processor node of a topology.\nInterface TopologyDescription.Processor;\n// A sink node of a topology.\nInterface TopologyDescription.Sink;\n// A source node of a topology.\nInterface TopologyDescription.Source;\n// A connected sub-graph of a Topology.\nInterface TopologyDescription.Subtopology;\n// A Kafka client that allows for performing continuous computation on input coming from one or more input topics and sends output to zero, one, or more output topics.\nClass KafkaStreams;\n// Class that handles options passed in case of KafkaStreams instance scale down\nClass KafkaStreams.CloseOptions;\n// Represents all the metadata related to a key, where a particular key resides in a KafkaStreams application.\nClass KeyQueryMetadata;\n// A key-value pair defined for a single Kafka Streams record.\nClass KeyValue<K,V>;\n// Encapsulates information about lag, at a store partition replica (active or standby).\nClass LagInfo;\n// StoreQueryParameters allows you to pass a variety of parameters when fetching a store for interactive query.\nClass StoreQueryParameters<T>;\n// StreamsBuilder provide the high-level Kafka Streams DSL to specify a Kafka Streams topology.\nClass StreamsBuilder;\n// Configuration for a KafkaStreams instance.\nClass StreamsConfig;\n// \nClass StreamsConfig.InternalConfig;\n// A logical representation of a ProcessorTopology.\nClass Topology;\n// Streams configs that apply at the topology level.\nClass TopologyConfig;\n// \nClass TopologyConfig.TaskConfig;\n// Kafka Streams states are the possible state that a Kafka Streams instance can be in.\nEnum KafkaStreams.State;\n", "des": "Provides the Kafka Streams library for building streaming data applications."}
{"index": 430, "repo": "kafka-streams-3.5.0", "code": "package errors\n\n// Interface that specifies how an exception from source node deserialization (e.g., reading from Kafka) should be handled.\nInterface DeserializationExceptionHandler;\n// Interface that specifies how an exception when attempting to produce a result to Kafka should be handled.\nInterface ProductionExceptionHandler;\n// \nInterface StreamsUncaughtExceptionHandler;\n// ProductionExceptionHandler that always instructs streams to fail when an exception happens while attempting to produce result records.\nClass DefaultProductionExceptionHandler;\n// Deserialization handler that logs a deserialization exception and then signals the processing pipeline to continue processing more records.\nClass LogAndContinueExceptionHandler;\n// Deserialization handler that logs a deserialization exception and then signals the processing pipeline to stop processing more records and fail.\nClass LogAndFailExceptionHandler;\n// Enumeration that describes the response from the exception handler.\nEnum DeserializationExceptionHandler.DeserializationHandlerResponse;\n// \nEnum ProductionExceptionHandler.ProductionExceptionHandlerResponse;\n// Enumeration that describes the response from the exception handler.\nEnum StreamsUncaughtExceptionHandler.StreamThreadExceptionResponse;\n// Indicates that none of the specified brokers could be found.\nClass BrokerNotFoundException;\n// Indicates that there was a problem when trying to access a StateStore.\nClass InvalidStateStoreException;\n// Indicates that the specific state store being queried via StoreQueryParameters used a partitioning that is not assigned to this instance.\nClass InvalidStateStorePartitionException;\n// Indicates that the state store directory lock could not be acquired because another thread holds the lock.\nClass LockException;\n// \nClass MissingSourceTopicException;\n// Indicates a processor state operation (e.g.\nClass ProcessorStateException;\n// Indicates that the state store being queried is closed although the Kafka Streams state is RUNNING or REBALANCING.\nClass StateStoreMigratedException;\n// Indicates that the state store being queried is already closed.\nClass StateStoreNotAvailableException;\n// StreamsException is the top-level exception type generated by Kafka Streams, and indicates errors have occurred during a StreamThread's processing.\nClass StreamsException;\n// Indicates that Kafka Streams is in state CREATED and thus state stores cannot be queries yet.\nClass StreamsNotStartedException;\n// Indicates that Kafka Streams is in state REBALANCING and thus cannot be queried by default.\nClass StreamsRebalancingException;\n", "des": "Provides common exception classes for Streams applications."}
{"index": 431, "repo": "kafka-streams-3.5.0", "code": "package kstream\n\n// The Aggregator interface for aggregating values of the given key.\nInterface Aggregator<K,V,VA>;\n// Branches the records in the original stream based on the predicates supplied for the branch definitions.\nInterface BranchedKStream<K,V>;\n// CogroupedKStream is an abstraction of multiple grouped record streams of KeyValue pairs.\nInterface CogroupedKStream<K,VOut>;\n// This interface controls the strategy that can be used to control how we emit results in a processor.\nInterface EmitStrategy;\n// The ForeachAction interface for performing an action on a key-value pair.\nInterface ForeachAction<K,V>;\n// GlobalKTable is an abstraction of a changelog stream from a primary-keyed table.\nInterface GlobalKTable<K,V>;\n// The Initializer interface for creating an initial value in aggregations.\nInterface Initializer<VA>;\n// The KeyValueMapper interface for mapping a key-value pair to a new value of arbitrary type.\nInterface KeyValueMapper<K,V,VR>;\n// KGroupedStream is an abstraction of a grouped record stream of KeyValue pairs.\nInterface KGroupedStream<K,V>;\n// KGroupedTable is an abstraction of a re-grouped changelog stream from a primary-keyed table, usually on a different grouping key than the original primary key.\nInterface KGroupedTable<K,V>;\n// KStream is an abstraction of a record stream of KeyValue pairs, i.e., each record is an independent entity/event in the real world.\nInterface KStream<K,V>;\n// KTable is an abstraction of a changelog stream from a primary-keyed table.\nInterface KTable<K,V>;\n// The interface for merging aggregate values for SessionWindows with the given key.\nInterface Merger<K,V>;\n// The Predicate interface represents a predicate (boolean-valued function) of a KeyValue pair.\nInterface Predicate<K,V>;\n// The Reducer interface for combining two values of the same type into a new value.\nInterface Reducer<V>;\n", "des": "Provides a high-level programming model (DSL) to express a (stateful) data flow computation over input streams and tables."}
{"index": 432, "repo": "kafka-streams-3.5.0", "code": "package processor\n\n// Interface for batching restoration of a StateStore It is expected that implementations of this class will not call the StateRestoreCallback.restore(byte[], byte[]) method.\nInterface BatchingStateRestoreCallback;\n// Cancellable interface returned in ProcessorContext.schedule(Duration, PunctuationType, Punctuator).\nInterface Cancellable;\n// Stores can register this callback to be notified upon successful commit.\nInterface CommitCallback;\n// Provides a set of StoreBuilders that will be automatically added to the topology and connected to the associated processor.\nInterface ConnectedStoreProvider;\n// Since 3.0.\nInterface Processor<K,V>;\n// Processor context interface.\nInterface ProcessorContext;\n// Since 3.0.\nInterface ProcessorSupplier<K,V>;\n// A functional interface used as an argument to ProcessorContext.schedule(Duration, PunctuationType, Punctuator).\nInterface Punctuator;\n// The context associated with the current record being processed by a Processor\nInterface RecordContext;\n// Restoration logic for log-backed state stores upon restart, it takes one record at a time from the logs to apply to the restoring state.\nInterface StateRestoreCallback;\n// Class for listening to various states of the restoration process of a StateStore.\nInterface StateRestoreListener;\n// A storage engine for managing state maintained by a stream processor.\nInterface StateStore;\n// State store context interface.\nInterface StateStoreContext;\n// Determine how records are distributed among the partitions in a Kafka topic.\nInterface StreamPartitioner<K,V>;\n// An interface that allows the Kafka Streams framework to extract a timestamp from an instance of ConsumerRecord.\nInterface TimestampExtractor;\n// An interface that allows to dynamically determine the name of the Kafka topic to send at the sink node of the topology.\nInterface TopicNameExtractor<K,V>;\n// Since 3.0.\nClass AbstractProcessor<K,V>;\n// Retrieves embedded metadata timestamps from Kafka messages.\nClass FailOnInvalidTimestamp;\n// Retrieves embedded metadata timestamps from Kafka messages.\nClass LogAndSkipOnInvalidTimestamp;\n// The task ID representation composed as subtopology (aka topicGroupId) plus the assigned partition ID.\nClass TaskId;\n// since 3.0, use TaskMetadata instead.\nClass TaskMetadata;\n", "des": "Provides a low-level programming model (Processor API, aka, PAPI) to express a (stateful) data flow computation over input topics."}
{"index": 433, "repo": "kafka-streams-3.5.0", "code": "package api\n\n// A processor of key-value pair records where keys are immutable.\nInterface FixedKeyProcessor<KIn,VIn,VOut>;\n// Processor context interface for FixedKeyRecord.\nInterface FixedKeyProcessorContext<KForward,VForward>;\n// A processor supplier that can create one or more FixedKeyProcessor instances.\nInterface FixedKeyProcessorSupplier<KIn,VIn,VOut>;\n// Processor context interface.\nInterface ProcessingContext;\n// A processor of key-value pair records.\nInterface Processor<KIn,VIn,KOut,VOut>;\n// Processor context interface for Record.\nInterface ProcessorContext<KForward,VForward>;\n// A processor supplier that can create one or more Processor instances.\nInterface ProcessorSupplier<KIn,VIn,KOut,VOut>;\n// \nInterface RecordMetadata;\n// An abstract implementation of FixedKeyProcessor that manages the FixedKeyProcessorContext instance and provides default no-op implementation of FixedKeyProcessor.close().\nClass ContextualFixedKeyProcessor<KIn,VIn,VOut>;\n// An abstract implementation of Processor that manages the ProcessorContext instance and provides default no-op implementation of Processor.close().\nClass ContextualProcessor<KIn,VIn,KOut,VOut>;\n// A data class representing an incoming record with fixed key for processing in a FixedKeyProcessor or a record to forward to downstream processors via FixedKeyProcessorContext.\nClass FixedKeyRecord<K,V>;\n// \nClass InternalFixedKeyRecordFactory;\n// A data class representing an incoming record for processing in a Processor or a record to forward to downstream processors via ProcessorContext.\nClass Record<K,V>;\n", "des": "Provides a low-level programming model (Processor API, aka, PAPI) to express a (stateful) data flow computation over input topics."}
{"index": 434, "repo": "kafka-streams-3.5.0", "code": "package query\n\n// Marker interface that all interactive queries must implement (see KafkaStreams.query(StateQueryRequest)).\nInterface Query<R>;\n// Container for a single partition's result when executing a StateQueryRequest.\nInterface QueryResult<R>;\n// Interactive query for retrieving a single record based on its key.\nClass KeyQuery<K,V>;\n// A representation of a position vector with respect to a set of topic partitions.\nClass Position;\n// A class bounding the processing state Position during queries.\nClass PositionBound;\n// Runtime configuration parameters\nClass QueryConfig;\n// Interactive query for issuing range queries and scans over KeyValue stores.\nClass RangeQuery<K,V>;\n// The request object for Interactive Queries.\nClass StateQueryRequest<R>;\n// A progressive builder interface for creating StoreQueryRequests.\nClass StateQueryRequest.InStore;\n// The response object for interactive queries.\nClass StateQueryResult<R>;\n// \nClass WindowKeyQuery<K,V>;\n// \nClass WindowRangeQuery<K,V>;\n// This enumeration type captures the various top-level reasons that a particular partition of a store would fail to execute a query.\nEnum FailureReason;\n", "des": "Provides a query API (aka Interactive Queries) over state stores, for extracting data from a stateful Kafka Streams application."}
{"index": 435, "repo": "kafka-streams-3.5.0", "code": "package state\n\n// A store supplier that can be used to create one or more KeyValueStore<Bytes, byte[]> instances of type <Bytes, byte[]>.\nInterface KeyValueBytesStoreSupplier;\n// Iterator interface of KeyValue.\nInterface KeyValueIterator<K,V>;\n// A key-value store that supports put/get/delete and range queries.\nInterface KeyValueStore<K,V>;\n// Used to enable querying of custom StateStore types via the KafkaStreams API.\nInterface QueryableStoreType<T>;\n// A key-value store that only supports read operations.\nInterface ReadOnlyKeyValueStore<K,V>;\n// A session store that only supports read operations.\nInterface ReadOnlySessionStore<K,AGG>;\n// A window store that only supports read operations.\nInterface ReadOnlyWindowStore<K,V>;\n// An interface to that allows developers to customize the RocksDB settings for a given Store.\nInterface RocksDBConfigSetter;\n// A store supplier that can be used to create one or more SessionStore<Byte, byte[]> instances.\nInterface SessionBytesStoreSupplier;\n// Interface for storing the aggregated values of sessions.\nInterface SessionStore<K,AGG>;\n// Build a StateStore wrapped with optional caching and logging.\nInterface StoreBuilder<T extends StateStore>;\n// A state store supplier which can create one or more StateStore instances.\nInterface StoreSupplier<T extends StateStore>;\n// \nInterface TimestampedBytesStore;\n// A key-(value/timestamp) store that supports put/get/delete and range queries.\nInterface TimestampedKeyValueStore<K,V>;\n// Interface for storing the aggregated values of fixed-size time windows.\nInterface TimestampedWindowStore<K,V>;\n// A representation of a versioned key-value store as a KeyValueStore of type <Bytes, byte[]>.\nInterface VersionedBytesStore;\n// A store supplier that can be used to create one or more versioned key-value stores, specifically, VersionedBytesStore instances.\nInterface VersionedBytesStoreSupplier;\n// A key-value store that stores multiple record versions per key, and supports timestamp-based retrieval operations to return the latest record (per key) as of a specified timestamp.\nInterface VersionedKeyValueStore<K,V>;\n", "des": "Provides interfaces for managing the intermediate state of a stateful streams application."}
{"index": 436, "repo": "commons-pool2-2.11.1", "code": "package pool2\n\n// A \"keyed\" pooling interface.\nInterface KeyedObjectPool<K,V>;\n// An interface defining life-cycle methods for instances to be served by a KeyedObjectPool.\nInterface KeyedPooledObjectFactory<K,V>;\n// A pooling simple interface.\nInterface ObjectPool<T>;\n// Defines the wrapper that is used to track the additional information, such as state, for the pooled objects.\nInterface PooledObject<T>;\n// An interface defining life-cycle methods for instances to be served by an ObjectPool.\nInterface PooledObjectFactory<T>;\n// Pools that unavoidably swallow exceptions may be configured with an instance of this listener so the user may receive notification of when this happens.\nInterface SwallowedExceptionListener;\n// Allows pooled objects to make information available about when and how they were used available to the object pool.\nInterface TrackedUse;\n// This interface may be implemented by an object pool to enable clients (primarily those clients that wrap pools to provide pools with extended features) to provide additional information to the pool relating to object using allowing more informed decisions and reporting to be made regarding abandoned objects.\nInterface UsageTracking<T>;\n// A base implementation of KeyedPooledObjectFactory.\nClass BaseKeyedPooledObjectFactory<K,V>;\n// A base class for common functionality.\nClass BaseObject;\n// A simple base implementation of ObjectPool.\nClass BaseObjectPool<T>;\n// A base implementation of PoolableObjectFactory.\nClass BasePooledObjectFactory<T>;\n// This class consists exclusively of static methods that operate on or return ObjectPool or KeyedObjectPool related interfaces.\nClass PoolUtils;\n// Destroy context provided to object factories via destroyObject and invalidateObject methods.\nEnum DestroyMode;\n// Provides all possible states of a PooledObject.\nEnum PooledObjectState;\n", "des": "Object pooling API."}
{"index": 437, "repo": "commons-pool2-2.11.1", "code": "package impl\n\n// Strategy for obtaining and printing the current call stack.\nInterface CallStack;\n// The interface that defines the information about pooled objects that will be exposed via JMX.\nInterface DefaultPooledObjectInfoMBean;\n// To provide a custom eviction policy (i.e.\nInterface EvictionPolicy<T>;\n// Defines the methods that will be made available via JMX.\nInterface GenericKeyedObjectPoolMXBean<K>;\n// Defines the methods that will be made available via JMX.\nInterface GenericObjectPoolMXBean;\n// Configuration settings for abandoned object removal.\nClass AbandonedConfig;\n// Base class that provides common functionality for GenericObjectPool and GenericKeyedObjectPool.\nClass BaseGenericObjectPool<T>;\n// Provides the implementation for the common attributes shared by the sub-classes.\nClass BaseObjectPoolConfig<T>;\n// Utility methods for CallStack.\nClass CallStackUtils;\n// Provides the default implementation of EvictionPolicy used by the pools.\nClass DefaultEvictionPolicy<T>;\n// This wrapper is used to track the additional information, such as state, for the pooled objects.\nClass DefaultPooledObject<T>;\n// Implementation of object that is used to provide information on pooled objects via JMX.\nClass DefaultPooledObjectInfo;\n// This class is used by pool implementations to pass configuration information to EvictionPolicy instances.\nClass EvictionConfig;\n// A configurable KeyedObjectPool implementation.\nClass GenericKeyedObjectPool<K,T>;\n// A simple \"struct\" encapsulating the configuration for a GenericKeyedObjectPool.\nClass GenericKeyedObjectPoolConfig<T>;\n// A configurable ObjectPool implementation.\nClass GenericObjectPool<T>;\n// A simple \"struct\" encapsulating the configuration for a GenericObjectPool.\nClass GenericObjectPoolConfig<T>;\n// CallStack strategy using no-op implementations of all functionality.\nClass NoOpCallStack;\n// Extension of DefaultPooledObject to wrap pooled soft references.\nClass PooledSoftReference<T>;\n// A CallStack strategy using a SecurityManager.\nClass SecurityManagerCallStack;\n// A SoftReference based ObjectPool.\nClass SoftReferenceObjectPool<T>;\n// CallStack strategy that uses the stack trace from a Throwable.\nClass ThrowableCallStack;\n", "des": "Object pooling API implementations."}
{"index": 438, "repo": "commons-pool2-2.11.1", "code": "package proxy\n\n// Provides proxy objects using CGLib.\nClass CglibProxySource<T>;\n// Provides proxy objects using Java reflection.\nClass JdkProxySource<T>;\n// Create a new keyed object pool where the pooled objects are wrapped in proxies allowing better control of pooled objects and in particular the prevention of the continued use of an object by a client after that client returns the object to the pool.\nClass ProxiedKeyedObjectPool<K,V>;\n// Create a new object pool where the pooled objects are wrapped in proxies allowing better control of pooled objects and in particular the prevention of the continued use of an object by a client after that client returns the object to the pool.\nClass ProxiedObjectPool<T>;\n", "des": "Object pooling proxy implementation."}
{"index": 439, "repo": "hbase-client-3.0.0-alpha-4", "code": "package client\n\n// The administrative API for HBase.\nInterface Admin;\n// This is the low level API for asynchronous scan.\nInterface AdvancedScanResultConsumer;\n// Used to suspend or stop a scan, or get a scan cursor if available.\nInterface AdvancedScanResultConsumer.ScanController;\n// Used to resume a scan.\nInterface AdvancedScanResultConsumer.ScanResumer;\n// The asynchronous administrative API for HBase.\nInterface AsyncAdmin;\n// For creating AsyncAdmin.\nInterface AsyncAdminBuilder;\n// \nInterface AsyncAdminRequestRetryingCaller.Callable<T>;\n// Used to communicate with a single HBase table in batches.\nInterface AsyncBufferedMutator;\n// For creating AsyncBufferedMutator.\nInterface AsyncBufferedMutatorBuilder;\n// The asynchronous version of Connection.\nInterface AsyncConnection;\n// \nInterface AsyncMasterRequestRpcRetryingCaller.Callable<T>;\n// \nInterface AsyncServerRequestRpcRetryingCaller.Callable<T>;\n// The interface for asynchronous version of Table.\nInterface AsyncTable<C extends ScanResultConsumerBase>;\n// Since 3.0.0, will be removed in 4.0.0.\nInterface AsyncTable.CheckAndMutateBuilder;\n// Since 3.0.0, will be removed in 4.0.0.\nInterface AsyncTable.CheckAndMutateWithFilterBuilder;\n// The callback when we want to execute a coprocessor call on a range of regions.\nInterface AsyncTable.CoprocessorCallback<R>;\n// Helper class for sending coprocessorService request that executes a coprocessor call on regions which are covered by a range.\nInterface AsyncTable.CoprocessorServiceBuilder<S,R>;\n// For creating AsyncTable.\nInterface AsyncTableBuilder<C extends ScanResultConsumerBase>;\n// The asynchronous version of RegionLocator.\nInterface AsyncTableRegionLocator;\n// \nInterface Attributes;\n// Used to communicate with a single HBase table similar to Table but meant for batched, asynchronous puts.\nInterface BufferedMutator;\n// Listens for asynchronous exceptions on a BufferedMutator.\nInterface BufferedMutator.ExceptionListener;\n// An ColumnFamilyDescriptor contains information about a column family such as the number of versions, compression settings, etc.\nInterface ColumnFamilyDescriptor;\n", "des": "Provides HBase Client"}
{"index": 440, "repo": "hbase-client-3.0.0-alpha-4", "code": "package coprocessor\n\n// Defines a unit of work to be executed.\nInterface Batch.Call<T,R>;\n// Defines a generic callback to be triggered for each Batch.Call.call(Object) result.\nInterface Batch.Callback<R>;\n// A collection of interfaces and utilities used for interacting with custom RPC interfaces exposed by Coprocessors.\nClass Batch;\n// ColumnInterpreter for doing Aggregation's with BigDecimal columns.\nClass BigDecimalColumnInterpreter;\n// a concrete column interpreter implementation.\nClass DoubleColumnInterpreter;\n// a concrete column interpreter implementation.\nClass LongColumnInterpreter;\n", "des": "Provides client classes for invoking Coprocessor RPC protocols Overview Example Usage"}
{"index": 441, "repo": "hbase-client-3.0.0-alpha-4", "code": "package filter\n\n// A BigDecimal comparator which numerical compares against the specified byte array\nClass BigDecimalComparator;\n// A binary comparator which lexicographically compares against the specified byte array using Bytes.compareTo(byte[], byte[]).\nClass BinaryComparator;\n// A comparator which compares against a specified byte array, but only compares specific portion of the byte array.\nClass BinaryComponentComparator;\n// A comparator which compares against a specified byte array, but only compares up to the length of this byte array.\nClass BinaryPrefixComparator;\n// A bit comparator which performs the specified bitwise operation on each of the bytes with the specified byte array.\nClass BitComparator;\n// Simple filter that returns first N columns on row only.\nClass ColumnCountGetFilter;\n// A filter, based on the ColumnCountGetFilter, takes two arguments: limit and offset.\nClass ColumnPaginationFilter;\n// This filter is used for selecting only those keys with columns that matches a particular prefix.\nClass ColumnPrefixFilter;\n// This filter is used for selecting only those keys with columns that are between minColumn to maxColumn.\nClass ColumnRangeFilter;\n// Different from SingleColumnValueFilter which returns an entire row when specified condition is matched, ColumnValueFilter return the matched cell only.\nClass ColumnValueFilter;\n// This is a generic filter to be used to filter by comparison.\nClass CompareFilter;\n// A filter for adding inter-column timestamp matching Only cells with a correspondingly timestamped entry in the target column will be retained Not compatible with Scan.setBatch as operations need full rows for correct filtering\nClass DependentColumnFilter;\n// This filter is used to filter based on the column family.\nClass FamilyFilter;\n// Interface for row and column filters directly applied within the regionserver.\nClass Filter;\n// Abstract base class to help you implement new Filters.\nClass FilterBase;\n// Implementation of Filter that represents an ordered List of Filters which will be evaluated with a specified boolean operator FilterList.Operator.MUST_PASS_ALL (AND) or FilterList.Operator.MUST_PASS_ONE (OR).\nClass FilterList;\n// Base class for FilterList.\nClass FilterListBase;\n// FilterListWithAND represents an ordered list of filters which will be evaluated with an AND operator.\nClass FilterListWithAND;\n", "des": "Provides row-level filters applied to HRegion scan results during calls to ResultScanner.next()."}
{"index": 442, "repo": "hbase-client-3.0.0-alpha-4", "code": "package protobuf\n\n// Protobufs utility.\nClass ProtobufMagic;\n// This class converts PB Messages to various representations, like: JSON string: ProtobufMessageConverter.toJsonElement(MessageOrBuilder) JSON object (gson): ProtobufMessageConverter.toJsonElement(MessageOrBuilder) Java objects (Boolean, Number, String, List, Map): ProtobufMessageConverter.toJavaObject(JsonElement)\nClass ProtobufMessageConverter;\n", "des": "Holds classes generated from protobuf src/main/protobuf definition files."}
{"index": 443, "repo": "lucene-analyzers-icu-8.11.2", "code": "package icu\n\n// A TokenFilter that applies search term folding to Unicode text, applying foldings from UTR#30 Character Foldings.\nClass ICUFoldingFilter;\n// Factory for ICUFoldingFilter.\nClass ICUFoldingFilterFactory;\n// Normalize token text with ICU's Normalizer2.\nClass ICUNormalizer2CharFilter;\n// Factory for ICUNormalizer2CharFilter\nClass ICUNormalizer2CharFilterFactory;\n// Normalize token text with ICU's Normalizer2\nClass ICUNormalizer2Filter;\n// Factory for ICUNormalizer2Filter\nClass ICUNormalizer2FilterFactory;\n// A TokenFilter that transforms text with ICU.\nClass ICUTransformFilter;\n// Factory for ICUTransformFilter.\nClass ICUTransformFilterFactory;\n", "des": "Analysis components based on ICU"}
{"index": 444, "repo": "lucene-analyzers-icu-8.11.2", "code": "package segmentation\n\n// Default ICUTokenizerConfig that is generally applicable to many languages.\nClass DefaultICUTokenizerConfig;\n// Breaks text into words according to UAX #29: Unicode Text Segmentation (http://www.unicode.org/reports/tr29/)\nClass ICUTokenizer;\n// Class that allows for tailored Unicode Text Segmentation on a per-writing system basis.\nClass ICUTokenizerConfig;\n// Factory for ICUTokenizer.\nClass ICUTokenizerFactory;\n", "des": "Tokenizer that breaks text into words with the Unicode Text Segmentation algorithm."}
{"index": 445, "repo": "lucene-analyzers-icu-8.11.2", "code": "package tokenattributes\n\n// This attribute stores the UTR #24 script value for a token of text.\nInterface ScriptAttribute;\n// Implementation of ScriptAttribute that stores the script as an integer.\nClass ScriptAttributeImpl;\n", "des": "Additional ICU-specific Attributes for text analysis."}
{"index": 446, "repo": "lucene-analyzers-icu-8.11.2", "code": "package collation\n\n// Converts each token into its CollationKey, and then encodes bytes as an index term.\nClass ICUCollationAttributeFactory;\n// Indexes collation keys as a single-valued SortedDocValuesField.\nClass ICUCollationDocValuesField;\n// Configures KeywordTokenizer with ICUCollationAttributeFactory.\nClass ICUCollationKeyAnalyzer;\n", "des": "Unicode Collation support."}
{"index": 447, "repo": "lucene-analyzers-icu-8.11.2", "code": "package tokenattributes\n\n// Extension of CharTermAttributeImpl that encodes the term text as a binary Unicode collation key instead of as UTF-8 bytes.\nClass ICUCollatedTermAttributeImpl;\n", "des": "Custom AttributeImpl for indexing collation keys as index terms."}
{"index": 448, "repo": "zookeeper-3.8.2", "code": "package server\n\n// This MBean represents a client connection.\nInterface ConnectionMXBean;\n// Zookeeper data tree MBean.\nInterface DataTreeMXBean;\n// The interface defined to manage the hash based on the entries in the nodes map.\nInterface NodeHashMap;\n// RequestProcessors are chained together to process transactions.\nInterface RequestProcessor;\n// \nInterface ServerStats.Provider;\n// This is the basic interface that ZooKeeperServer uses to track sessions.\nInterface SessionTracker;\n// \nInterface SessionTracker.Session;\n// \nInterface SessionTracker.SessionExpirer;\n// Listener for the critical resource events.\nInterface ZooKeeperServerListener;\n// ZooKeeper server MBean.\nInterface ZooKeeperServerMXBean;\n// Contains helper methods to enforce authentication\nClass AuthenticationHelper;\n// Implements a token-bucket based rate limiting mechanism with optional probabilistic dropping inspired by the BLUE queue management algorithm [1].\nClass BlueThrottle;\n// \nClass ByteBufferInputStream;\n// \nClass ByteBufferOutputStream;\n// Implementation of connection MBean interface.\nClass ConnectionBean;\n// Manages cleanup of container ZNodes.\nClass ContainerManager;\n// This class manages the cleanup of snapshots and corresponding transaction logs by scheduling the auto purge task with the specified 'autopurge.purgeInterval'.\nClass DatadirCleanupManager;\n// This class contains the data for a node in the data tree.\nClass DataNode;\n// This class maintains the tree data structure.\nClass DataTree;\n// \nClass DataTree.ProcessTxnResult;\n// This class implements the data tree MBean.\nClass DataTreeBean;\n// Defines how to calculate the digest for a given node.\nClass DigestCalculator;\n// A empty watcher implementation used in bench and unit test.\nClass DumbWatcher;\n// ExpiryQueue tracks elements in time sorted fixed duration buckets.\nClass ExpiryQueue<E>;\n// This Request processor actually applies any transaction associated with a request and services any queries.\nClass FinalRequestProcessor;\n// \nClass NettyServerCnxn;\n// \nClass NettyServerCnxnFactory;\n// This class handles communication with clients using NIO.\nClass NIOServerCnxn;\n", "des": "ZooKeeper server theory of operation"}
{"index": 449, "repo": "camel-core-3.0.0-RC1", "code": "package builder\n\n// Task or command being executed when using the advice with feature.\nInterface AdviceWithTask;\n// Type-safe endpoint DSL for building consumer endpoints.\nInterface EndpointConsumerBuilder;\n// Type-safe endpoint DSL for building producer endpoints.\nInterface EndpointProducerBuilder;\n// A builder of a Error Handler\nInterface ErrorHandlerBuilder;\n// \nInterface FlexibleAggregationStrategy.CompletionAwareMixin;\n// \nInterface FlexibleAggregationStrategy.TimeoutAwareMixin;\n// A builder when using the advice with feature.\nClass AdviceWithBuilder<T extends ProcessorDefinition<?>>;\n// A RouteBuilder which has extended capabilities when using the advice with feature.\nClass AdviceWithRouteBuilder;\n// AdviceWithTask tasks which are used by the AdviceWithRouteBuilder.\nClass AdviceWithTasks;\n// Toolbox class to create commonly used Aggregation Strategies in a fluent manner.\nClass AggregationStrategies;\n// \nClass AggregationStrategyClause<T>;\n// A helper class for including portions of the expression and predicate Java DSL Implementation of this builder should favor build expressions using the definition classes from the org.apache.camel.model.language package, to build the routes using the same types as it would happen when using XML DSL.\nClass Builder;\n// Base class for implementation inheritance for different clauses in the Java DSL\nClass BuilderSupport;\n// An expression for constructing the different possible DataFormat options.\nClass DataFormatClause<T extends ProcessorDefinition<?>>;\n// A builder of a Dead Letter Channel\nClass DeadLetterChannelBuilder;\n// The default error handler builder.\nClass DefaultErrorHandlerBuilder;\n// \nClass EnrichClause<T extends ProcessorDefinition<?>>;\n// Represents a proxy to an error handler builder which is resolved by named reference\nClass ErrorHandlerBuilderRef;\n// Base class for builders of error handling.\nClass ErrorHandlerBuilderSupport;\n// Builder to create Exchange and add headers and set body on the Exchange Message.\nClass ExchangeBuilder;\n// A helper class for working with expressions.\nClass ExpressionBuilder;\n// Represents an expression clause within the DSL which when the expression is complete the clause continues to another part of the DSL\nClass ExpressionClause<T>;\n// A support class for building expression clauses.\nClass ExpressionClauseSupport<T>;\n", "des": "The Camel Domain Specific Language for creating Routes, Predicates, Expressions and Error Handlers."}
{"index": 450, "repo": "camel-core-3.0.0-RC1", "code": "package model\n\n// Interface to add block featuring to the XML element type.\nInterface Block;\n// To be used for configuring property placeholder options on the EIP models.\nInterface DefinitionPropertyPlaceholderConfigurer;\n// A ProcessorDefinition that requires to be configured with an Endpoint such as SendDefinition.\nInterface EndpointRequiredDefinition;\n// Enables definitions to support concurrency using ExecutorService\nInterface ExecutorServiceAwareDefinition<Type extends ProcessorDefinition<?>>;\n// Model interface\nInterface Model;\n// Model level interface for the CamelContext\nInterface ModelCamelContext;\n// Models can support being configured with any other attributes to shadow existing options to be used for property placeholders.\nInterface OtherAttributesAware;\n// Marker interface to mark a ProcessorDefinition that supports outputs\nInterface OutputNode;\n// Container to hold Route.\nInterface RouteContainer;\n// Temporary model used internally by advice-with\nClass AdviceWithDefinition;\n// Aggregates many messages into a single message\nClass AggregateDefinition;\n// Calls a java bean\nClass BeanDefinition;\n// Catches exceptions as part of a try, catch, finally block\nClass CatchDefinition;\n// Routes messages based on a series of predicates\nClass ChoiceDefinition;\n// The Claim Check EIP allows you to replace message content with a claim check (a unique key), which can be used to retrieve the message content at a later time.\nClass ClaimCheckDefinition;\n// Various constants.\nClass Constants;\n// Scans for Java RouteBuilder instances in the context Registry.\nClass ContextScanDefinition;\n// Converts the message body to another type\nClass ConvertBodyDefinition;\n// Represents a Camel data format\nClass DataFormatDefinition;\n// Delays processing for a specified length of time\nClass DelayDefinition;\n// To provide comments about the node.\nClass DescriptionDefinition;\n// Routes messages based on dynamic rules\nClass DynamicRouterDefinition<Type extends ProcessorDefinition<Type>>;\n// Enriches a message with data from a secondary resource\nClass EnrichDefinition;\n// A base ExpressionNode which does not support any outputs.\nClass ExpressionNode;\n// Helper for ExpressionNode\nClass ExpressionNodeHelper;\n// Represents an expression sub element\nClass ExpressionSubElementDefinition;\n// Filter out messages based using a predicate\nClass FilterDefinition;\n// Path traversed when a try, catch, finally block exits\nClass FinallyDefinition;\n", "des": "The JAXB POJOs for the XML Configuration of the routing rules."}
{"index": 451, "repo": "camel-core-3.0.0-RC1", "code": "package cloud\n\n// \nClass BlacklistServiceCallServiceFilterConfiguration;\n// \nClass CachingServiceCallServiceDiscoveryConfiguration;\n// \nClass CombinedServiceCallServiceDiscoveryConfiguration;\n// \nClass CombinedServiceCallServiceFilterConfiguration;\n// \nClass ConsulServiceCallServiceDiscoveryConfiguration;\n// \nClass CustomServiceCallServiceFilterConfiguration;\n// \nClass DefaultServiceCallServiceLoadBalancerConfiguration;\n// \nClass DnsServiceCallServiceDiscoveryConfiguration;\n// \nClass EtcdServiceCallServiceDiscoveryConfiguration;\n// \nClass HealthyServiceCallServiceFilterConfiguration;\n// \nClass KubernetesServiceCallServiceDiscoveryConfiguration;\n// \nClass PassThroughServiceCallServiceFilterConfiguration;\n// \nClass RibbonServiceCallServiceLoadBalancerConfiguration;\n// Remote service call configuration\nClass ServiceCallConfigurationDefinition;\n// To call remote services\nClass ServiceCallDefinition;\n// \nClass ServiceCallDefinitionConstants;\n// \nClass ServiceCallExpressionConfiguration;\n// \nClass ServiceCallServiceChooserConfiguration;\n// \nClass ServiceCallServiceDiscoveryConfiguration;\n// \nClass ServiceCallServiceFilterConfiguration;\n// \nClass ServiceCallServiceLoadBalancerConfiguration;\n// \nClass StaticServiceCallServiceDiscoveryConfiguration;\n// \nClass ZooKeeperServiceCallServiceDiscoveryConfiguration;\n", "des": "The JAXB POJOs for the remote service call DSL"}
{"index": 452, "repo": "camel-core-3.0.0-RC1", "code": "package config\n\n// Configures batch-processing resequence eip.\nClass BatchResequencerConfig;\n// \nClass ResequencerConfig;\n// Configures stream-processing resequence eip.\nClass StreamResequencerConfig;\n", "des": "The JAXB POJOs for various configurations for the XML Configuration of the routing rules."}
{"index": 453, "repo": "camel-core-3.0.0-RC1", "code": "package dataformat\n\n// Any23 data format is used for parsing data to RDF.\nClass Any23DataFormat;\n// The ASN.1 data format is used for file transfer with telecommunications protocols.\nClass ASN1DataFormat;\n// The Avro data format is used for serialization and deserialization of messages using Apache Avro binary dataformat.\nClass AvroDataFormat;\n// The Barcode data format is used for creating barccode images (such as QR-Code)\nClass BarcodeDataFormat;\n// The Base64 data format is used for base64 encoding and decoding.\nClass Base64DataFormat;\n// The BeanIO data format is used for working with flat payloads (such as CSV, delimited, or fixed length formats).\nClass BeanioDataFormat;\n// The Bindy data format is used for working with flat payloads (such as CSV, delimited, fixed length formats, or FIX messages).\nClass BindyDataFormat;\n// CBOR data format is used for unmarshal a CBOR payload to POJO or to marshal POJO back to CBOR payload.\nClass CBORDataFormat;\n// Crypto data format is used for encrypting and decrypting of messages using Java Cryptographic Extension.\nClass CryptoDataFormat;\n// The CSV data format is used for handling CSV payloads.\nClass CsvDataFormat;\n// To use a custom data format implementation that does not come out of the box from Apache Camel.\nClass CustomDataFormat;\n// To configure data formats\nClass DataFormatsDefinition;\n// \nClass FhirDataformat;\n// The FHIR JSon data format is used to marshall/unmarshall to/from FHIR objects to/from JSON.\nClass FhirJsonDataFormat;\n// The FHIR XML data format is used to marshall/unmarshall from/to FHIR objects to/from XML.\nClass FhirXmlDataFormat;\n// The Flatpack data format is used for working with flat payloads (such as CSV, delimited, or fixed length formats).\nClass FlatpackDataFormat;\n// The Grok data format is used for unmarshalling unstructured data to objects using Logstash based Grok patterns.\nClass GrokDataFormat;\n// The GZip data format is a message compression and de-compression format (which works with the popular gzip/gunzip tools).\nClass GzipDataFormat;\n", "des": "The JAXB POJOs for the Data Formats used to marshal and unmarshal objects to and from streams inside components"}
{"index": 454, "repo": "camel-core-3.0.0-RC1", "code": "package language\n\n// To use a constant value in Camel expressions or predicates.\nClass ConstantExpression;\n// To use a Camel Exchange property in expressions or predicates.\nClass ExchangePropertyExpression;\n// A useful base class for an expression\nClass ExpressionDefinition;\n// To use Groovy scripts in Camel expressions or predicates.\nClass GroovyExpression;\n// To use a Camel Message header in expressions or predicates.\nClass HeaderExpression;\n// To use HL7 terser scripts in Camel expressions or predicates.\nClass Hl7TerserExpression;\n// To use JsonPath in Camel expressions or predicates.\nClass JsonPathExpression;\n// To use the specified language in Camel expressions or predicates.\nClass LanguageExpression;\n// To use a Java bean (aka method call) in Camel expressions or predicates.\nClass MethodCallExpression;\n// To use MVEL scripts in Camel expressions or predicates.\nClass MvelExpression;\n// A useful base class for any expression which may be namespace or XML content aware such as XPathExpression or XQueryExpression\nClass NamespaceAwareExpression;\n// To use OGNL scripts in Camel expressions or predicates.\nClass OgnlExpression;\n// Reference to an existing Camel expression or predicate, which is looked up from the Camel registry.\nClass RefExpression;\n// To use Camels built-in Simple language in Camel expressions or predicates.\nClass SimpleExpression;\n// To use Spring Expression Language (SpEL) in Camel expressions or predicates.\nClass SpELExpression;\n// To use Camel message body or header with a tokenizer in Camel expressions or predicates.\nClass TokenizerExpression;\n// To use Camel message body or header with a XML tokenizer in Camel expressions or predicates.\nClass XMLTokenizerExpression;\n// To use XPath (XML) in Camel expressions or predicates.\nClass XPathExpression;\n// To use XQuery (XML) in Camel expressions or predicates.\nClass XQueryExpression;\n", "des": "The JAXB POJOs for the Expression and Predicate plugins for the XML Configuration."}
{"index": 455, "repo": "camel-core-3.0.0-RC1", "code": "package loadbalancer\n\n// Custom load balancer\nClass CustomLoadBalancerDefinition;\n// Failover load balancer The failover load balancer is capable of trying the next processor in case an Exchange failed with an exception during processing.\nClass FailoverLoadBalancerDefinition;\n// Random load balancer The random load balancer selects a random endpoint for each exchange.\nClass RandomLoadBalancerDefinition;\n// Round robin load balancer The round robin load balancer will use the next endpoint for each message.\nClass RoundRobinLoadBalancerDefinition;\n// Sticky load balancer Sticky load balancing using an Expression to calculate a correlation key to perform the sticky load balancing; rather like jsessionid in the web or JMSXGroupID in JMS.\nClass StickyLoadBalancerDefinition;\n// Topic load balancer The topic load balancer sends to all destinations (rather like JMS Topics)\nClass TopicLoadBalancerDefinition;\n// Weighted load balancer The weighted load balancing policy allows you to specify a processing load distribution ratio for each server with respect to others.\nClass WeightedLoadBalancerDefinition;\n", "des": "The JAXB POJOs for the Load Balancer EIP pattern for the XML Configuration."}
{"index": 456, "repo": "camel-core-3.0.0-RC1", "code": "package rest\n\n// Container to hold Rest.\nInterface RestContainer;\n// Rest DELETE command\nClass DeleteVerbDefinition;\n// Rest GET command\nClass GetVerbDefinition;\n// Rest HEAD command\nClass HeadVerbDefinition;\n// Rest PATCH command\nClass PatchVerbDefinition;\n// Rest POST command\nClass PostVerbDefinition;\n// Rest PUT command\nClass PutVerbDefinition;\n// To configure rest binding\nClass RestBindingDefinition;\n// To configure rest\nClass RestConfigurationDefinition;\n// \nClass RestConstants;\n// Defines a rest service using the rest-dsl\nClass RestDefinition;\n// To specify the rest operation parameters using Swagger.\nClass RestOperationParamDefinition;\n// To specify the rest operation response headers using Swagger.\nClass RestOperationResponseHeaderDefinition;\n// To specify the rest operation response messages using Swagger.\nClass RestOperationResponseMsgDefinition;\n// A key value pair\nClass RestPropertyDefinition;\n// A series of rest services defined using the rest-dsl\nClass RestsDefinition;\n// To configure rest security definitions.\nClass RestSecuritiesDefinition;\n// Rest security basic auth definition\nClass RestSecurityApiKey;\n// Rest security basic auth definition\nClass RestSecurityBasicAuth;\n// To specify the rest security definitions using Swagger.\nClass RestSecurityDefinition;\n// Rest security OAuth2 definition\nClass RestSecurityOAuth2;\n// Rest security definition\nClass SecurityDefinition;\n// Rest command\nClass VerbDefinition;\n// \nEnum CollectionFormat;\n// \nEnum RestBindingMode;\n// To configure the rest hostname resolver\nEnum RestHostNameResolver;\n// Rest parameter types\nEnum RestParamType;\n", "des": "The JAXB POJOs for the REST DSL"}
{"index": 457, "repo": "camel-core-3.0.0-RC1", "code": "package transformer\n\n// Represents a CustomTransformer.\nClass CustomTransformerDefinition;\n// Represents a DataFormatTransformer which leverages DataFormat to perform transformation.\nClass DataFormatTransformerDefinition;\n// Represents an endpoint Transformer which leverages camel Endpoint to perform transformation.\nClass EndpointTransformerDefinition;\n// Represents a Transformer which declaratively transforms message content according to the input type declared by InputTypeDefinition and/or output type declared by OutputTypeDefinition.\nClass TransformerDefinition;\n// To configure transformers.\nClass TransformersDefinition;\n", "des": "The JAXB POJOs for the Transformers used to transform message contents according to declared data types inside components"}
{"index": 458, "repo": "camel-core-3.0.0-RC1", "code": "package validator\n\n// Represents a CustomValidator.\nClass CustomValidatorDefinition;\n// Represents an endpoint Validator which leverages camel validator component such as Validator Component and Bean Validator Component to perform content validation.\nClass EndpointValidatorDefinition;\n// Represents a predicate Validator which leverages expression or predicates to perform content validation.\nClass PredicateValidatorDefinition;\n// Represents a Validator which declaratively validates message content according to the input type declared by InputTypeDefinition and/or output type declared by OutputTypeDefinition.\nClass ValidatorDefinition;\n// To configure validators.\nClass ValidatorsDefinition;\n", "des": "The JAXB POJOs for the Transformers used to transform message contents according to declared data types inside components"}
{"index": 459, "repo": "camel-core-3.0.0-RC1", "code": "package impl\n\n// Represents the context used to configure routes and the policies to use.\nClass AbstractModelCamelContext;\n// Represents the context used to configure routes and the policies to use.\nClass DefaultCamelContext;\n// Default ExecutorServiceManager.\nClass DefaultExecutorServiceManager;\n// \nClass DefaultModel;\n// Default implementation of ModelJAXBContextFactory.\nClass DefaultModelJAXBContextFactory;\n// use JndiBeanRepository instead.\nClass JndiRegistry;\n// Factory for generating route ids based on uris.\nClass RouteIdFactory;\n// Represents the runtime objects for a given RouteDefinition so that it can be stopped independently of other routes\nClass RouteService;\n", "des": "Default implementation classes for Camel Core"}
{"index": 460, "repo": "camel-core-3.0.0-RC1", "code": "package cluster\n\n// \nInterface ClusteredRouteFilter;\n// \nClass ClusteredRouteConfiguration;\n// \nClass ClusteredRouteController;\n// \nClass ClusteredRouteFilters;\n// \nClass ClusteredRouteFilters.BlackList;\n// \nClass ClusteredRouteFilters.IsAutoStartup;\n// \nClass ClusteredRoutePolicy;\n// \nClass ClusteredRoutePolicyFactory;\n", "des": "Base classes and implementation for Camel Cluster"}
{"index": 461, "repo": "commons-geometry-spherical-1.0", "code": "package oned\n\n// Class representing an angular interval of size greater than zero to 2pi.\nClass AngularInterval;\n// Class representing an angular interval with the additional property that the region is convex.\nClass AngularInterval.Convex;\n// Class representing an oriented point in 1-dimensional spherical space, meaning an azimuth angle and a direction (increasing or decreasing angles) along the circle.\nClass CutAngle;\n// Class containing factory methods for constructing CutAngle instances.\nClass CutAngles;\n// This class represents a point on the 1-sphere, or in other words, an azimuth angle on a circle.\nClass Point1S;\n// BSP tree representing regions in 1D spherical space.\nClass RegionBSPTree1S;\n// BSP tree node for one dimensional spherical space.\nClass RegionBSPTree1S.RegionNode1S;\n// Implementation of the Transform interface for spherical 1D points.\nClass Transform1S;\n", "des": "This package provides basic geometry components on the 1-sphere."}
{"index": 462, "repo": "commons-geometry-spherical-1.0", "code": "package twod\n\n// Extension of the BoundarySource interface for spherical 2D space.\nInterface BoundarySource2S;\n// Abstract class for joining collections of great arcs into connected paths.\nClass AbstractGreatArcConnector;\n// Internal class for connecting GreatArcs into GreatArcPaths.\nClass AbstractGreatArcConnector.ConnectableGreatArc;\n// BoundarySource2S implementation that uses boundaries stored in a list.\nClass BoundaryList2S;\n// Class representing a convex area in 2D spherical space.\nClass ConvexArea2S;\n// Class representing an arbitrary subset of the points on a great circle using a RegionBSPTree1S.\nClass EmbeddedTreeGreatCircleSubset;\n// Class representing a single, convex angular interval in a GreatCircle.\nClass GreatArc;\n// Class representing a connected sequence of GreatArc instances.\nClass GreatArcPath;\n// Class used to build arc paths.\nClass GreatArcPath.Builder;\n// Class representing a great circle on the 2-sphere.\nClass GreatCircle;\n// Class containing factory methods for constructing GreatCircle and GreatCircleSubset instances.\nClass GreatCircles;\n// Class representing a subset of the points in a great circle.\nClass GreatCircleSubset;\n// Great arc connector that selects between multiple connection options based on the resulting interior angle.\nClass InteriorAngleGreatArcConnector;\n// Implementation of InteriorAngleGreatArcConnector that chooses arc connections that produce the largest interior angles.\nClass InteriorAngleGreatArcConnector.Maximize;\n// Implementation of InteriorAngleGreatArcConnector that chooses arc connections that produce the smallest interior angles.\nClass InteriorAngleGreatArcConnector.Minimize;\n// This class represents a point on the 2-sphere.\nClass Point2S;\n// BSP tree representing regions in 2D spherical space.\nClass RegionBSPTree2S;\n// BSP tree node for two dimensional spherical space.\nClass RegionBSPTree2S.RegionNode2S;\n// Implementation of the Transform interface for spherical 2D points.\nClass Transform2S;\n", "des": "This package provides basic geometry components on the 2-sphere."}
{"index": 463, "repo": "jackson-core-2.15.2", "code": "package core\n\n// Marker interface that is to be implemented by data format - specific features.\nInterface FormatFeature;\n// Simple tag interface used to mark schema objects that are used by some JsonParser and JsonGenerator implementations to further specify structure of expected format.\nInterface FormatSchema;\n// Interface defined to contain ids accessible with JsonToken.id().\nInterface JsonTokenId;\n// Interface for objects that implement pretty printer functionality, such as indentation.\nInterface PrettyPrinter;\n// Interface that defines how Jackson package can interact with efficient pre-serialized or lazily-serialized and reused String representations.\nInterface SerializableString;\n// Marker interface used to denote JSON Tree nodes, as far as the core package knows them (which is very little): mostly needed to allow ObjectCodec to have some level of interoperability.\nInterface TreeNode;\n// Interface that those Jackson components that are explicitly versioned will implement.\nInterface Versioned;\n// Class used to define specific details of which variant of Base64 encoding/decoding is to be used.\nClass Base64Variant;\n// Container for commonly used Base64 variants: Base64Variants.MIME Base64Variants.MIME_NO_LINEFEEDS Base64Variants.PEM Base64Variants.MODIFIED_FOR_URL See entries for full description of differences.\nClass Base64Variants;\n// The main factory class of Jackson package, used to configure and construct reader (aka parser, JsonParser) and writer (aka generator, JsonGenerator) instances.\nClass JsonFactory;\n// TSFBuilder implementation for constructing vanilla JsonFactory instances for reading/writing JSON encoded content.\nClass JsonFactoryBuilder;\n// Base class that defines public API for writing JSON content.\nClass JsonGenerator;\n// Object that encapsulates Location information used for reporting parsing (or potentially generation) errors, as well as current location within input streams.\nClass JsonLocation;\n// Base class that defines public API for reading JSON content.\nClass JsonParser;\n// Convenience CharacterEscapes implementation that escapes Unicode characters `0x2028` and `0x2029` (in addition to characters escaped otherwise), which are apparently considered linefeeds as per newer Javascript specifications, and consequently problematic when using JSONP (see https://en.wikipedia.org/wiki/JSONP).\nClass JsonpCharacterEscapes;\n// Implementation of JSON Pointer specification.\nClass JsonPointer;\n", "des": "Main public API classes of the core streaming JSON processor: most importantly JsonFactory used for constructing JSON parser (JsonParser) and generator (JsonGenerator) instances."}
{"index": 464, "repo": "jackson-core-2.15.2", "code": "package async\n\n// NonBlockingInputFeeder implementation used when feeding data as byte arrays.\nInterface ByteArrayFeeder;\n// NonBlockingInputFeeder implementation used when feeding data as ByteBuffer contents.\nInterface ByteBufferFeeder;\n// Interface used by non-blocking JsonParser implementations to feed input to parse.\nInterface NonBlockingInputFeeder;\n", "des": "Package that contains abstractions needed to support optional non-blocking decoding (parsing) functionality."}
{"index": 465, "repo": "jackson-core-2.15.2", "code": "package base\n\n// This base class implements part of API that a JSON generator exposes to applications, adds shared internal methods that sub-classes can use and adds some abstract methods sub-classes must implement.\nClass GeneratorBase;\n// Intermediate base class used by all Jackson JsonParser implementations.\nClass ParserBase;\n// Intermediate base class used by all Jackson JsonParser implementations, but does not add any additional fields that depend on particular method of obtaining input.\nClass ParserMinimalBase;\n", "des": "Base classes used by concrete Parser and Generator implementations; contain functionality that is not specific to JSON or input abstraction (byte vs char)."}
{"index": 466, "repo": "jackson-core-2.15.2", "code": "package exc\n\n// Exception type for read-side problems that are not direct decoding (\"parsing\") problems (those would be reported as JsonParseExceptions), but rather result from failed attempts to convert specific Java value out of valid but incompatible input value.\nClass InputCoercionException;\n// Exception type used to indicate violations of stream constraints (for example StreamReadConstraints) when reading or writing content.\nClass StreamConstraintsException;\n// Intermediate base class for all read-side streaming processing problems, including parsing and input value coercion problems.\nClass StreamReadException;\n// Intermediate base class for all read-side streaming processing problems, including parsing and input value coercion problems.\nClass StreamWriteException;\n", "des": "Package for some of JsonProcessingException subtypes contained by streaming API."}
{"index": 467, "repo": "jackson-core-2.15.2", "code": "package format\n\n// Interface used to expose beginning of a data file to data format detection code.\nInterface InputAccessor;\n// Simple helper class that allows data format (content type) auto-detection, given an ordered set of JsonFactory instances to use for actual low-level detection.\nClass DataFormatDetector;\n// Result object constructed by DataFormatDetector when requested to detect format of given input data.\nClass DataFormatMatcher;\n// Basic implementation that reads data from given InputStream and buffers it as necessary.\nClass InputAccessor.Std;\n// Enumeration used to indicate strength of match between data format and piece of data (typically beginning of a data file).\nEnum MatchStrength;\n", "des": "Package that contains interfaces needed for dynamic, pluggable format (auto)detection; as well as basic utility classes for simple format detection functionality."}
{"index": 468, "repo": "jackson-core-2.15.2", "code": "package json\n\n// This class is used to determine the encoding of byte stream that is to contain JSON content.\nClass ByteSourceJsonBootstrapper;\n// Helper class used if JsonParser.Feature.STRICT_DUPLICATE_DETECTION is enabled.\nClass DupDetector;\n// Intermediate base class shared by JSON-backed generators like UTF8JsonGenerator and WriterBasedJsonGenerator.\nClass JsonGeneratorImpl;\n// Extension of JsonStreamContext, which implements core methods needed, and also exposes more complete API to parser implementation classes.\nClass JsonReadContext;\n// Extension of JsonStreamContext, which implements core methods needed, and also exposes more complete API to generator implementation classes.\nClass JsonWriteContext;\n// Automatically generated from PackageVersion.java.in during packageVersion-generate execution of maven-replacer-plugin in pom.xml.\nClass PackageVersion;\n// This is a concrete implementation of JsonParser, which is based on a Reader to handle low-level character conversion tasks.\nClass ReaderBasedJsonParser;\n// This is a concrete implementation of JsonParser, which is based on a DataInput as the input source.\nClass UTF8DataInputJsonParser;\n// \nClass UTF8JsonGenerator;\n// This is a concrete implementation of JsonParser, which is based on a InputStream as the input source.\nClass UTF8StreamJsonParser;\n// JsonGenerator that outputs JSON content using a Writer which handles character encoding.\nClass WriterBasedJsonGenerator;\n// Token reader (parser) features specific to JSON backend.\nEnum JsonReadFeature;\n// Token writer features specific to JSON backend.\nEnum JsonWriteFeature;\n", "des": "JSON-specific parser and generator implementation classes that Jackson defines and uses."}
{"index": 469, "repo": "jackson-core-2.15.2", "code": "package async\n\n// Non-blocking parser implementation for JSON content that takes its input via ByteBuffer instance(s) passed.\nClass NonBlockingByteBufferJsonParser;\n// Non-blocking parser implementation for JSON content that takes its input via byte[] passed.\nClass NonBlockingJsonParser;\n// Intermediate base class for non-blocking JSON parsers.\nClass NonBlockingJsonParserBase;\n// Non-blocking parser base implementation for JSON content.\nClass NonBlockingUtf8JsonParserBase;\n", "des": "Non-blocking (\"async\") JSON parser implementation."}
{"index": 470, "repo": "jackson-core-2.15.2", "code": "package sym\n\n// Replacement for BytesToNameCanonicalizer which aims at more localized memory access due to flattening of name quad data.\nClass ByteQuadsCanonicalizer;\n// This class is a kind of specialized type-safe Map, from char array to String value.\nClass CharsToNameCanonicalizer;\n// Base class for tokenized names (key strings in objects) that have been tokenized from byte-based input sources (like InputStream.\nClass Name;\n// Specialized implementation of PName: can be used for short Strings that consists of at most 4 bytes.\nClass Name1;\n// Specialized implementation of PName: can be used for short Strings that consists of 5 to 8 bytes.\nClass Name2;\n// Specialized implementation of PName: can be used for short Strings that consists of 9 to 12 bytes.\nClass Name3;\n// Generic implementation of PName used for \"long\" names, where long means that its byte (UTF-8) representation is 13 bytes or more.\nClass NameN;\n", "des": "Internal implementation classes for efficient handling of of symbols in JSON (field names in Objects)"}
{"index": 471, "repo": "jackson-core-2.15.2", "code": "package type\n\n// Type abstraction that represents Java type that has been resolved (i.e.\nClass ResolvedType;\n// This generic abstract class is used for obtaining full generics type information by sub-classing; it must be converted to ResolvedType implementation (implemented by JavaType from \"databind\" bundle) to be used.\nClass TypeReference<T>;\n// This is a simple value class used between core streaming and higher level databinding to pass information about type ids to write.\nClass WritableTypeId;\n// Enumeration of values that matches enum `As` from annotation `JsonTypeInfo`: separate definition to avoid dependency between streaming core and annotations packages; also allows more flexibility in case new values needed at this level of internal API.\nEnum WritableTypeId.Inclusion;\n", "des": "Contains classes needed for type introspection, mostly used by data binding functionality."}
{"index": 472, "repo": "jackson-core-2.15.2", "code": "package util\n\n// Interface that defines objects that can produce indentation used to separate object entries and array values.\nInterface DefaultPrettyPrinter.Indenter;\n// Add-on interface used to indicate things that may be \"blueprint\" objects which can not be used as is, but are used for creating usable per-process (serialization, deserialization) instances, using Instantiatable.createInstance() method.\nInterface Instantiatable<T>;\n// Basic API implemented by Enums used for simple Jackson \"features\": on/off settings and capabilities exposed as something that can be internally represented as bit sets.\nInterface JacksonFeature;\n// This is a small utility class, whose main functionality is to allow simple reuse of raw byte/char buffers.\nClass BufferRecycler;\n// Helper entity used to control access to simple buffer recyling scheme used for some encoding, decoding tasks.\nClass BufferRecyclers;\n// Helper class that is similar to ByteArrayOutputStream in usage, but more geared to Jackson use cases internally.\nClass ByteArrayBuilder;\n// Default linefeed-based indenter, used by DefaultPrettyPrinter (unless overridden).\nClass DefaultIndenter;\n// Default PrettyPrinter implementation that uses 2-space indentation with platform-default linefeeds.\nClass DefaultPrettyPrinter;\n// This is a very simple indenter that only adds a single space for indentation.\nClass DefaultPrettyPrinter.FixedSpaceIndenter;\n// Dummy implementation that adds no indentation whatsoever\nClass DefaultPrettyPrinter.NopIndenter;\n// Singleton class that adds a simple first-level cache in front of regular String.intern() functionality.\nClass InternCache;\n// Container similar to EnumSet meant for storing sets of JacksonFeatures (usually Enums): main difference being that these sets are immutable.\nClass JacksonFeatureSet<F extends JacksonFeature>;\n// \nClass JsonGeneratorDelegate;\n// Helper class that implements delegation pattern for JsonParser, to allow for simple overridability of basic parsing functionality.\nClass JsonParserDelegate;\n// Helper class that can be used to sequence multiple physical JsonParsers to create a single logical sequence of tokens, as a single JsonParser.\nClass JsonParserSequence;\n", "des": "Utility classes used by Jackson Core functionality."}
{"index": 473, "repo": "beam-sdks-java-core-2.49.0", "code": "package sdk\n\n// For internal use only; no backwards-compatibility guarantees.\nInterface Pipeline.PipelineVisitor;\n// Result of Pipeline.run().\nInterface PipelineResult;\n// A Pipeline manages a directed acyclic graph of PTransforms, and the PCollections that the PTransforms consume and produce.\nClass Pipeline;\n// Default no-op Pipeline.PipelineVisitor that enters all composite transforms.\nClass Pipeline.PipelineVisitor.Defaults;\n// A PipelineRunner runs a Pipeline.\nClass PipelineRunner<ResultT extends PipelineResult>;\n// Control enum for indicating whether or not a traversal should process the contents of a composite transform or not.\nEnum Pipeline.PipelineVisitor.CompositeBehavior;\n// Possible job states, for both completed and ongoing jobs.\nEnum PipelineResult.State;\n// Thrown during execution of a Pipeline, whenever user code within that Pipeline throws an exception.\nClass Pipeline.PipelineExecutionException;\n", "des": "Provides a simple, powerful model for building both batch and streaming parallel data processing Pipelines."}
{"index": 474, "repo": "beam-sdks-java-core-2.49.0", "code": "package annotations\n\n// Signifies that a publicly accessible API (public class, method or field) is intended for internal use only and not for public consumption.\nAnnotation Type Internal;\n", "des": "Defines annotations used across the SDK."}
{"index": 475, "repo": "beam-sdks-java-core-2.49.0", "code": "package coders\n\n// Coder creators have the ability to automatically have their coders registered with this SDK by creating a ServiceLoader entry and a concrete implementation of this interface.\nInterface CoderProviderRegistrar;\n// A CodingFunction<InputT, OutputT> is a serializable function from InputT to OutputT that may throw any Exception.\nInterface DelegateCoder.CodingFunction<InputT,OutputT>;\n// A Coder that has no component Coders or other configuration.\nClass AtomicCoder<T>;\n// Avro related classes are deprecated in module beam-sdks-java-core and will be eventually removed.\nClass AvroCoder<T>;\n// Conversion for DateTime.\nClass AvroCoder.JodaTimestampConversion;\n// Avro related classes are deprecated in module beam-sdks-java-core and will be eventually removed.\nClass AvroGenericCoder;\n// A BigDecimalCoder encodes a BigDecimal as an integer scale encoded with VarIntCoder and a BigInteger encoded using BigIntegerCoder.\nClass BigDecimalCoder;\n// A BigEndianIntegerCoder encodes Integers in 4 bytes, big-endian.\nClass BigEndianIntegerCoder;\n// A BigEndianLongCoder encodes Longs in 8 bytes, big-endian.\nClass BigEndianLongCoder;\n// A BigEndianShortCoder encodes Shorts in 2 bytes, big-endian.\nClass BigEndianShortCoder;\n// A BigIntegerCoder encodes a BigInteger as a byte array containing the big endian two's-complement representation, encoded via ByteArrayCoder.\nClass BigIntegerCoder;\n// Coder for BitSet.\nClass BitSetCoder;\n// A Coder for Boolean.\nClass BooleanCoder;\n// A Coder for byte[].\nClass ByteArrayCoder;\n// A ByteCoder encodes Byte values in 1 byte using Java serialization.\nClass ByteCoder;\n// A Coder<T> defines how to encode and decode values of type T into byte streams.\nClass Coder<T>;\n// To implement a coder, do not use any Coder.Context.\nClass Coder.Context;\n// A CoderProvider provides Coders.\nClass CoderProvider;\n// Static utility methods for creating and working with CoderProviders.\nClass CoderProviders;\n", "des": "Defines Coders to specify how data is encoded to and decoded from byte strings."}
{"index": 476, "repo": "beam-sdks-java-core-2.49.0", "code": "package expansion\n\n// A registrar which contains a mapping from URNs to available ExternalTransformBuilders.\nInterface ExternalTransformRegistrar;\n", "des": "Contains classes needed to expose transforms to other SDKs."}
{"index": 477, "repo": "beam-sdks-java-core-2.49.0", "code": "package function\n\n// A ThrowingConsumer that can be closed.\nInterface CloseableThrowingConsumer<ExceptionT extends java.lang.Exception,T>;\n// A BiConsumer which can throw Exceptions.\nInterface ThrowingBiConsumer<T1,T2>;\n// A BiFunction which can throw Exceptions.\nInterface ThrowingBiFunction<T1,T2,T3>;\n// A Consumer which can throw Exceptions.\nInterface ThrowingConsumer<ExceptionT extends java.lang.Exception,T>;\n// A Function which can throw Exceptions.\nInterface ThrowingFunction<T1,T2>;\n// A Runnable which can throw Exceptions.\nInterface ThrowingRunnable;\n", "des": "Java 8 functional interface extensions."}
{"index": 478, "repo": "beam-sdks-java-core-2.49.0", "code": "package harness\n\n// A service interface for defining one-time initialization of the JVM during pipeline execution.\nInterface JvmInitializer;\n", "des": "Utilities for configuring worker environment."}
{"index": 479, "repo": "beam-sdks-java-core-2.49.0", "code": "package io\n\n// Users can achieve the same by providing this transform in a ParDo before using write in AvroIO AvroIO.write(Class).\nInterface AvroIO.RecordFormatter<ElementT>;\n// \nInterface AvroSink.DatumWriterFactory<T>;\n// \nInterface AvroSource.DatumReaderFactory<T>;\n// Factory interface for creating channels that decompress the content of an underlying channel.\nInterface CompressedSource.DecompressingChannelFactory;\n// Provides hints about how to generate output files, such as a suggested filename suffix (e.g.\nInterface FileBasedSink.OutputFileHints;\n// Implementations create instances of WritableByteChannel used by FileBasedSink and related classes to allow decorating, or otherwise transforming, the raw data that would normally be written directly to the WritableByteChannel passed into FileBasedSink.WritableByteChannelFactory.create(WritableByteChannel).\nInterface FileBasedSink.WritableByteChannelFactory;\n// Specifies how to write elements to individual files in FileIO.write() and FileIO.writeDynamic().\nInterface FileIO.Sink<ElementT>;\n// A policy for generating names for shard files.\nInterface FileIO.Write.FileNaming;\n// A registrar that creates FileSystem instances from PipelineOptions.\nInterface FileSystemRegistrar;\n// Function for assigning ShardedKeys to input elements for sharded WriteFiles.\nInterface ShardingFunction<UserT,DestinationT>;\n// Sampling Strategy shows us when should we stop reading further files.\nInterface TextRowCountEstimator.SamplingStrategy;\n// A marker representing the progress and state of an UnboundedSource.UnboundedReader.\nInterface UnboundedSource.CheckpointMark;\n// Avro related classes are deprecated in module beam-sdks-java-core and will be eventually removed.\nClass AvroIO;\n// Implementation of AvroIO.parseGenericRecords(org.apache.beam.sdk.transforms.SerializableFunction<org.apache.avro.generic.GenericRecord, T>).\nClass AvroIO.Parse<T>;\n// See AvroIO.parseAllGenericRecords(SerializableFunction) for details.\nClass AvroIO.ParseAll<T>;\n", "des": "Defines transforms for reading and writing common storage formats, including AvroIO, and TextIO."}
{"index": 480, "repo": "beam-sdks-java-core-2.49.0", "code": "package fs\n\n// An object that configures FileSystems.copy(java.util.List<org.apache.beam.sdk.io.fs.ResourceId>, java.util.List<org.apache.beam.sdk.io.fs.ResourceId>, org.apache.beam.sdk.io.fs.MoveOptions...), FileSystems.rename(java.util.List<org.apache.beam.sdk.io.fs.ResourceId>, java.util.List<org.apache.beam.sdk.io.fs.ResourceId>, org.apache.beam.sdk.io.fs.MoveOptions...), and FileSystems.delete(java.util.Collection<org.apache.beam.sdk.io.fs.ResourceId>, org.apache.beam.sdk.io.fs.MoveOptions...).\nInterface MoveOptions;\n// An object that configures ResourceId.resolve(java.lang.String, org.apache.beam.sdk.io.fs.ResolveOptions).\nInterface ResolveOptions;\n// An identifier which represents a file-like resource.\nInterface ResourceId;\n// An abstract class that contains common configuration options for creating resources.\nClass CreateOptions;\n// An abstract builder for CreateOptions.\nClass CreateOptions.Builder<BuilderT extends CreateOptions.Builder<BuilderT>>;\n// A standard configuration options with builder.\nClass CreateOptions.StandardCreateOptions;\n// Builder for CreateOptions.StandardCreateOptions.\nClass CreateOptions.StandardCreateOptions.Builder;\n// The result of FileSystem.match(java.util.List<java.lang.String>).\nClass MatchResult;\n// MatchResult.Metadata of a matched file.\nClass MatchResult.Metadata;\n// Builder class for MatchResult.Metadata.\nClass MatchResult.Metadata.Builder;\n// A Coder for MatchResult.Metadata.\nClass MetadataCoder;\n// A Coder for MatchResult.Metadata that includes MatchResult.Metadata.lastModifiedMillis().\nClass MetadataCoderV2;\n// A Coder for ResourceId.\nClass ResourceIdCoder;\n// A utility to test ResourceId implementations.\nClass ResourceIdTester;\n// Options for allowing or disallowing filepatterns that match no resources in FileSystems.match(java.util.List<java.lang.String>).\nEnum EmptyMatchTreatment;\n", "des": "Apache Beam FileSystem interfaces and their default implementations."}
{"index": 481, "repo": "beam-sdks-java-core-2.49.0", "code": "package range\n\n// A RangeTracker is a thread-safe helper object for implementing dynamic work rebalancing in position-based BoundedSource.BoundedReader subclasses.\nInterface RangeTracker<PositionT>;\n// A class representing a key consisting of an array of bytes.\nClass ByteKey;\n// A class representing a range of ByteKeys.\nClass ByteKeyRange;\n// A RangeTracker for ByteKeys in ByteKeyRanges.\nClass ByteKeyRangeTracker;\n// A restriction represented by a range of integers [from, to).\nClass OffsetRange;\n// A coder for OffsetRanges.\nClass OffsetRange.Coder;\n// A RangeTracker for non-negative positions of type long.\nClass OffsetRangeTracker;\n", "des": "Provides thread-safe helpers for implementing dynamic work rebalancing in position-based bounded sources."}
{"index": 482, "repo": "beam-sdks-java-core-2.49.0", "code": "package metrics\n\n// A metric that reports a single long value and can be incremented or decremented.\nInterface Counter;\n// A metric that reports information about the distribution of reported values.\nInterface Distribution;\n// A metric that reports the latest value out of reported values.\nInterface Gauge;\n// A metric that reports information about the histogram of reported values.\nInterface Histogram;\n// Marker interface for all user-facing metrics.\nInterface Metric;\n// Holds the metrics for a single step.\nInterface MetricsContainer;\n// Set the MetricsContainer for the associated MetricsEnvironment.\nInterface MetricsEnvironment.MetricsEnvironmentState;\n// Extension of PipelineOptions that defines MetricsSink specific options.\nInterface MetricsOptions;\n// Interface for all metric sinks.\nInterface MetricsSink;\n// Implementation of Counter that delegates to the instance for the current context.\nClass DelegatingCounter;\n// Implementation of Distribution that delegates to the instance for the current context.\nClass DelegatingDistribution;\n// Implementation of Histogram that delegates to the instance for the current context.\nClass DelegatingHistogram;\n// The result of a Distribution metric.\nClass DistributionResult;\n// The result of a Gauge metric.\nClass GaugeResult;\n// Empty GaugeResult, representing no values reported.\nClass GaugeResult.EmptyGaugeResult;\n// Implements matching for metrics filters.\nClass MetricFiltering;\n// Metrics are keyed by the step name they are associated with and the name of the metric.\nClass MetricKey;\n// The name of a metric consists of a MetricName.getNamespace() and a MetricName.getName().\nClass MetricName;\n// The name of a metric.\nClass MetricNameFilter;\n// The results of a query for metrics.\nClass MetricQueryResults;\n// The results of a single current metric.\nClass MetricResult<T>;\n// Methods for interacting with the metrics of a pipeline that has been executed.\nClass MetricResults;\n// The Metrics is a utility class for producing various kinds of metrics for reporting properties of an executing pipeline.\nClass Metrics;\n// Manages and provides the metrics container associated with each thread.\nClass MetricsEnvironment;\n// \nClass MetricsEnvironment.MetricsContainerHolder;\n// Simple POJO representing a filter for querying metrics.\nClass MetricsFilter;\n// Builder for creating a MetricsFilter.\nClass MetricsFilter.Builder;\n", "des": "Metrics allow exporting information about the execution of a pipeline."}
{"index": 483, "repo": "beam-sdks-java-core-2.49.0", "code": "package options\n\n// Options that allow setting the application name.\nInterface ApplicationNameOptions;\n// An interface used with the Default.InstanceFactory annotation to specify the class that will be an instance factory to produce default values for a given getter on PipelineOptions.\nInterface DefaultValueFactory<T>;\n// Options for configuring the ScheduledExecutorService used throughout the Java runtime.\nInterface ExecutorOptions;\n// Apache Beam provides a number of experimental features that can be enabled with this flag.\nInterface ExperimentalOptions;\n// File staging related options.\nInterface FileStagingOptions;\n// Pipeline options to tune DockerEnvironment.\nInterface ManualDockerEnvironmentOptions;\n// PipelineOptions are used to configure Pipelines.\nInterface PipelineOptions;\n// PipelineOptions creators have the ability to automatically have their PipelineOptions registered with this SDK by creating a ServiceLoader entry and a concrete implementation of this interface.\nInterface PipelineOptionsRegistrar;\n// Pipeline options common to all portable runners.\nInterface PortablePipelineOptions;\n// Options that are used to control configuration of the remote environment.\nInterface RemoteEnvironmentOptions;\n// Options that are used to control configuration of the SDK harness.\nInterface SdkHarnessOptions;\n// Specifies the maximum amount of memory to use within the current SDK harness instance.\nInterface SdkHarnessOptions.MaxCacheMemoryUsageMb;\n// Options used to configure streaming.\nInterface StreamingOptions;\n// A ValueProvider abstracts the notion of fetching a value that may or may not be currently available.\nInterface ValueProvider<T>;\n// A PipelineOptionsRegistrar containing the PipelineOptions subclasses available by default.\nClass DefaultPipelineOptionsRegistrar;\n// Returns the default ScheduledExecutorService to use within the Apache Beam SDK.\nClass ExecutorOptions.ScheduledExecutorServiceFactory;\n// Register the ManualDockerEnvironmentOptions.\nClass ManualDockerEnvironmentOptions.Options;\n// DefaultValueFactory which supplies an ID that is guaranteed to be unique within the given process.\nClass PipelineOptions.AtomicLongFactory;\n// A DefaultValueFactory that obtains the class of the DirectRunner if it exists on the classpath, and throws an exception otherwise.\nClass PipelineOptions.DirectRunner;\n", "des": "Defines PipelineOptions for configuring pipeline execution."}
{"index": 484, "repo": "beam-sdks-java-core-2.49.0", "code": "package runners\n\n// For internal use only; no backwards-compatibility guarantees.\nInterface PipelineRunnerRegistrar;\n// For internal use only; no backwards-compatibility guarantees.\nInterface PTransformMatcher;\n// For internal use only; no backwards-compatibility guarantees.\nInterface PTransformOverrideFactory<InputT extends PInput,OutputT extends POutput,TransformT extends PTransform<? super InputT,OutputT>>;\n// For internal use only; no backwards-compatibility guarantees.\nClass AppliedPTransform<InputT extends PInput,OutputT extends POutput,TransformT extends PTransform<? super InputT,OutputT>>;\n// For internal use only; no backwards-compatibility guarantees.\nClass PTransformOverride;\n// A PTransform that replaces an AppliedPTransform, and the input required to do so.\nClass PTransformOverrideFactory.PTransformReplacement<InputT extends PInput,OutputT extends POutput>;\n// A mapping between original TaggedPValue outputs and their replacements.\nClass PTransformOverrideFactory.ReplacementOutput;\n// For internal use only; no backwards-compatibility guarantees.\nClass TransformHierarchy;\n", "des": "For internal use only; no backwards compatibility guarantees."}
{"index": 485, "repo": "beam-sdks-java-core-2.49.0", "code": "package schemas\n\n// A Factory interface for schema-related objects for a specific Java type.\nInterface Factory<T>;\n// For internal use only; no backwards-compatibility guarantees.\nInterface FieldValueGetter<ObjectT,ValueT>;\n// For internal use only; no backwards-compatibility guarantees.\nInterface FieldValueSetter<ObjectT,ValueT>;\n// A ProjectionConsumer is a Schema-aware operation (such as a DoFn or PTransform) that has a FieldAccessDescriptor describing which fields the operation accesses.\nInterface ProjectionConsumer;\n// A factory for operations that execute a projection on a Schema-aware PCollection.\nInterface ProjectionProducer<T>;\n// A LogicalType allows users to define a custom schema type.\nInterface Schema.LogicalType<InputT,BaseT>;\n// Concrete implementations of this class allow creation of schema service objects that vend a Schema for a specific type.\nInterface SchemaProvider;\n// SchemaProvider creators have the ability to automatically have their schemaProvider registered with this SDK by creating a ServiceLoader entry and a concrete implementation of this interface.\nInterface SchemaProviderRegistrar;\n// A creator interface for user types that have schemas.\nInterface SchemaUserTypeCreator;\n// A SchemaProvider for AutoValue classes.\nClass AutoValueSchema;\n// FieldValueTypeSupplier that's based on AutoValue getters.\nClass AutoValueSchema.AbstractGetterTypeSupplier;\n// Avro related classes are deprecated in module beam-sdks-java-core and will be eventually removed.\nClass AvroRecordSchema;\n// A wrapper around a Factory that assumes the schema parameter never changes.\nClass CachingFactory<CreatedT>;\n// Used inside of a DoFn to describe which fields in a schema type need to be accessed for processing.\nClass FieldAccessDescriptor;\n// Description of a single field.\nClass FieldAccessDescriptor.FieldDescriptor;\n// Builder class.\nClass FieldAccessDescriptor.FieldDescriptor.Builder;\n// OneOf union for a collection selector.\nClass FieldAccessDescriptor.FieldDescriptor.Qualifier;\n// Utilities for converting between Schema field types and TypeDescriptors that define Java objects which can represent these field types.\nClass FieldTypeDescriptors;\n// Represents type information for a Java type that will be used to infer a Schema type.\nClass FieldValueTypeInformation;\n// \nClass FieldValueTypeInformation.Builder;\n", "des": "Defines Schema and other classes for representing schema'd data in a Pipeline."}
{"index": 486, "repo": "beam-sdks-java-core-2.49.0", "code": "package annotations\n\n// SchemaProvider for default schemas.\nClass DefaultSchema.DefaultSchemaProvider;\n// Registrar for default schemas.\nClass DefaultSchema.DefaultSchemaProviderRegistrar;\n// The DefaultSchema annotation specifies a SchemaProvider class to handle obtaining a schema and row for the specified class.\nAnnotation Type DefaultSchema;\n// When used on a POJO, Java Bean, or AutoValue class the specified case format will be used for all the generated Schema fields.\nAnnotation Type SchemaCaseFormat;\n// Can be put on a constructor or a static method, in which case that constructor or method will be used to created instance of the class by Beam's schema code.\nAnnotation Type SchemaCreate;\n// When used on a POJO field, a Java Bean getter, or an AutoValue getter, the specified description is used for the generated schema field.\nAnnotation Type SchemaFieldDescription;\n// When used on a POJO field, a Java Bean getter, or an AutoValue getter, the specified name is used for the generated schema field.\nAnnotation Type SchemaFieldName;\n// When used on a POJO field, a Java Bean getter, or an AutoValue getter, the generated field will have the specified index.\nAnnotation Type SchemaFieldNumber;\n// When used on a POJO field or a JavaBean getter, that field or getter is ignored from the inferred schema.\nAnnotation Type SchemaIgnore;\n", "des": "Defines Schema and other classes for representing schema'd data in a Pipeline."}
{"index": 487, "repo": "beam-sdks-java-core-2.49.0", "code": "package io\n\n// A Provider for generic DLQ transforms that handle deserialization failures.\nInterface GenericDlqProvider;\n// \nInterface Providers.Identifyable;\n// An abstraction to create schema capable and aware IOs.\nInterface SchemaIO;\n// Provider to create SchemaIO instances for use in Beam SQL and other SDKs.\nInterface SchemaIOProvider;\n// \nClass DeadLetteredTransform<InputT,OutputT>;\n// A generic failure of an SQL transform.\nClass Failure;\n// \nClass Failure.Builder;\n// Helper to generate a DLQ transform to write PCollection to an external system.\nClass GenericDlq;\n// Helpers for implementing the \"Provider\" pattern.\nClass Providers;\n// Exception thrown when the configuration for a SchemaIO is invalid.\nClass InvalidConfigurationException;\n// Exception thrown when the configuration for a SchemaIO is invalid.\nClass InvalidLocationException;\n// Exception thrown when the schema for a SchemaIO is invalid.\nClass InvalidSchemaException;\n", "des": "Provides abstractions for schema-aware IOs."}
{"index": 488, "repo": "beam-sdks-java-core-2.49.0", "code": "package payloads\n\n// \nInterface PayloadSerializer;\n// \nInterface PayloadSerializerProvider;\n// Avro related classes are deprecated in module beam-sdks-java-core and will be eventually removed.\nClass AvroPayloadSerializerProvider;\n// \nClass JsonPayloadSerializerProvider;\n// \nClass PayloadSerializers;\n", "des": "Provides abstractions for schema-aware IOs."}
{"index": 489, "repo": "beam-sdks-java-core-2.49.0", "code": "package logicaltypes\n\n// A date without a time-zone.\nClass Date;\n// A datetime without a time-zone.\nClass DateTime;\n// This Schema.LogicalType represent an enumeration over a fixed set of values.\nClass EnumerationType;\n// This class represents a single enum value.\nClass EnumerationType.Value;\n// A LogicalType representing a fixed-length byte array.\nClass FixedBytes;\n// Fixed precision numeric types used to represent jdbc NUMERIC and DECIMAL types.\nClass FixedPrecisionNumeric;\n// A LogicalType representing a fixed-length string.\nClass FixedString;\n// A timestamp represented as microseconds since the epoch.\nClass MicrosInstant;\n// A duration represented in nanoseconds.\nClass NanosDuration;\n// A timestamp represented as nanoseconds since the epoch.\nClass NanosInstant;\n// A logical type representing a union of fields.\nClass OneOfType;\n// Represents a single OneOf value.\nClass OneOfType.Value;\n// A base class for LogicalTypes that use the same Java type as the underlying base type.\nClass PassThroughLogicalType<T>;\n// A logical type for PythonCallableSource objects.\nClass PythonCallable;\n// A schema represented as a serialized proto bytes.\nClass SchemaLogicalType;\n// Beam Schema.LogicalTypes corresponding to SQL data types.\nClass SqlTypes;\n// A time without a time-zone.\nClass Time;\n// A base class for logical types that are not understood by the Java SDK.\nClass UnknownLogicalType<T>;\n// Base class for types representing UUID as two long values.\nClass UuidLogicalType;\n// A LogicalType representing a variable-length byte array with specified maximum length.\nClass VariableBytes;\n// A LogicalType representing a variable-length string with specified maximum length.\nClass VariableString;\n", "des": "A set of common LogicalTypes for use with schemas."}
{"index": 490, "repo": "beam-sdks-java-core-2.49.0", "code": "package parser\n\n// Parser for textual field-access selector.\nClass FieldAccessDescriptorParser;\n", "des": "Defines utilities for deailing with schemas."}
{"index": 491, "repo": "beam-sdks-java-core-2.49.0", "code": "package generated\n\n// This interface defines a complete listener for a parse tree produced by FieldSpecifierNotationParser.\nInterface FieldSpecifierNotationListener;\n// This interface defines a complete generic visitor for a parse tree produced by FieldSpecifierNotationParser.\nInterface FieldSpecifierNotationVisitor<T>;\n// This class provides an empty implementation of FieldSpecifierNotationListener, which can be extended to create a listener which only needs to handle a subset of the available methods.\nClass FieldSpecifierNotationBaseListener;\n// This class provides an empty implementation of FieldSpecifierNotationVisitor, which can be extended to create a visitor which only needs to handle a subset of the available methods.\nClass FieldSpecifierNotationBaseVisitor<T>;\n// \nClass FieldSpecifierNotationLexer;\n// \nClass FieldSpecifierNotationParser;\n// \nClass FieldSpecifierNotationParser.ArrayQualifierContext;\n// \nClass FieldSpecifierNotationParser.ArrayQualifierListContext;\n// \nClass FieldSpecifierNotationParser.DotExpressionComponentContext;\n// \nClass FieldSpecifierNotationParser.DotExpressionContext;\n// \nClass FieldSpecifierNotationParser.FieldSpecifierContext;\n// \nClass FieldSpecifierNotationParser.MapQualifierContext;\n// \nClass FieldSpecifierNotationParser.MapQualifierListContext;\n// \nClass FieldSpecifierNotationParser.QualifiedComponentContext;\n// \nClass FieldSpecifierNotationParser.QualifierListContext;\n// \nClass FieldSpecifierNotationParser.QualifyComponentContext;\n// \nClass FieldSpecifierNotationParser.SimpleIdentifierContext;\n// \nClass FieldSpecifierNotationParser.WildcardContext;\n", "des": "Defines utilities for deailing with schemas."}
{"index": 492, "repo": "beam-sdks-java-core-2.49.0", "code": "package transforms\n\n// Interface for statically validating casts.\nInterface Cast.Validator;\n// An abstraction to create schema capable and aware transforms.\nInterface SchemaTransform;\n// Provider to create SchemaTransform instances for use in Beam SQL and other SDKs.\nInterface SchemaTransformProvider;\n// A transform to add new nullable fields to a PCollection's schema.\nClass AddFields;\n// Inner PTransform for AddFields.\nClass AddFields.Inner<T>;\n// Set of utilities for casting rows between schemas.\nClass Cast<T>;\n// Describes compatibility errors during casting.\nClass Cast.CompatibilityError;\n// Narrowing changes type without guarantee to preserve data.\nClass Cast.Narrowing;\n// Widening changes to type that can represent any possible value of the original type.\nClass Cast.Widening;\n// A transform that performs equijoins across multiple schema PCollections.\nClass CoGroup;\n// Defines the set of fields to extract for the join key, as well as other per-input join options.\nClass CoGroup.By;\n// A PTransform that calculates the cross-product join.\nClass CoGroup.ExpandCrossProduct;\n// The implementing PTransform.\nClass CoGroup.Impl;\n// \nClass CoGroup.Result;\n// A set of utilities for converting between different objects supporting schemas.\nClass Convert;\n// A transform to drop fields from a schema.\nClass DropFields;\n// Implementation class for DropFields.\nClass DropFields.Inner<T>;\n// A PTransform for filtering a collection of schema types.\nClass Filter;\n// Implementation of the filter.\nClass Filter.Inner<T>;\n// A generic grouping transform for schema PCollections.\nClass Group;\n// a PTransform that does a combine using an aggregation built up by calls to aggregateField and aggregateFields.\nClass Group.AggregateCombiner<InputT>;\n// a PTransform that groups schema elements based on the given fields.\nClass Group.ByFields<InputT>;\n// a PTransform that does a per-key combine using an aggregation built up by calls to aggregateField and aggregateFields.\nClass Group.CombineFieldsByFields<InputT>;\n", "des": "Defines transforms that work on PCollections with schemas.."}
{"index": 493, "repo": "beam-sdks-java-core-2.49.0", "code": "package utils\n\n// \nInterface ByteBuddyUtils.TypeConversionsFactory;\n// A naming policy for schema fields.\nInterface FieldValueTypeSupplier;\n// A selector interface for extracting fields from a row.\nInterface RowSelector;\n// Utilities for managing AutoValue schemas.\nClass AutoValueUtils;\n// Avro related classes are deprecated in module beam-sdks-java-core and will be eventually removed.\nClass AvroUtils;\n// \nClass AvroUtils.AvroConvertType;\n// \nClass AvroUtils.AvroConvertValueForGetter;\n// \nClass AvroUtils.AvroConvertValueForSetter;\n// Wrapper for fixed byte fields.\nClass AvroUtils.FixedBytesField;\n// Unwrap an AVRO schema into the base type an whether it is nullable.\nClass AvroUtils.TypeWithNullability;\n// \nClass ByteBuddyUtils;\n// Give a Java type, returns the Java type expected for use with Row.\nClass ByteBuddyUtils.ConvertType;\n// Takes a StackManipulation that returns a value.\nClass ByteBuddyUtils.ConvertValueForGetter;\n// Row is going to call the setter with its internal Java type, however the user object being set might have a different type internally.\nClass ByteBuddyUtils.ConvertValueForSetter;\n// \nClass ByteBuddyUtils.DefaultTypeConversionsFactory;\n// A naming strategy for ByteBuddy classes.\nClass ByteBuddyUtils.InjectPackageStrategy;\n// \nClass ByteBuddyUtils.TransformingMap<K1,V1,K2,V2>;\n// \nClass ByteBuddyUtils.TypeConversion<T>;\n// Helper functions for converting between equivalent schema types.\nClass ConvertHelpers;\n// Return value after converting a schema.\nClass ConvertHelpers.ConvertedSchemaInformation<T>;\n// A set of utilities to generate getter and setter classes for JavaBean objects.\nClass JavaBeanUtils;\n// Utils to convert JSON records to Beam Row.\nClass JsonUtils;\n// A set of utilities to generate getter and setter classes for POJOs.\nClass POJOUtils;\n// A set of reflection helper methods.\nClass ReflectUtils;\n// Represents a class and a schema.\nClass ReflectUtils.ClassWithSchema;\n", "des": "Defines utilities for deailing with schemas."}
{"index": 494, "repo": "beam-sdks-java-core-2.49.0", "code": "package state\n\n// A ReadableState cell containing a bag of values.\nInterface BagState<T>;\n// A ReadableState cell defined by a Combine.CombineFn, accepting multiple input values, combining them as specified into accumulators, and producing a single output value.\nInterface CombiningState<InputT,AccumT,OutputT>;\n// A ReadableState cell that combines multiple input values and outputs a single value of a different type.\nInterface GroupingState<InputT,OutputT>;\n// A ReadableState cell mapping keys to values.\nInterface MapState<K,V>;\n// A ReadableState cell mapping keys to bags of values.\nInterface MultimapState<K,V>;\n// A ReadableState cell containing a list of values sorted by timestamp.\nInterface OrderedListState<T>;\n// A State that can be read via ReadableState.read().\nInterface ReadableState<T>;\n// A ReadableState cell containing a set of elements.\nInterface SetState<T>;\n// A state cell, supporting a State.clear() operation.\nInterface State;\n// For internal use only; no backwards-compatibility guarantees.\nInterface StateBinder;\n// For internal use only; no backwards-compatibility guarantees.\nInterface StateContext<W extends BoundedWindow>;\n// A specification of a persistent state cell.\nInterface StateSpec<StateT extends State>;\n// Cases for doing a \"switch\" on the type of StateSpec.\nInterface StateSpec.Cases<ResultT>;\n// A timer for a specified time domain that can be set to register the desire for further processing at particular time in its specified time domain.\nInterface Timer;\n// \nInterface TimerMap;\n// Interface for interacting with time.\nInterface Timers;\n// A specification for a Timer.\nInterface TimerSpec;\n// A ReadableState cell containing a single value.\nInterface ValueState<T>;\n// For internal use only; no backwards-compatibility guarantees.\nInterface WatermarkHoldState;\n// For internal use only; no backwards-compatibility guarantees.\nClass ReadableStates;\n// For internal use only; no backwards-compatibility guarantees.\nClass StateContexts;\n// \nClass StateKeySpec;\n", "des": "Classes and interfaces for interacting with state."}
{"index": 495, "repo": "beam-sdks-java-core-2.49.0", "code": "package testing\n\n// Category tag for tests that use a Flatten where the input PCollectionList contains PCollections heterogeneous coders.\nInterface FlattenWithHeterogeneousCoders;\n// Category tags for tests which validate that a Beam runner can handle keys up to a given size.\nInterface LargeKeys;\n// Tests if a runner supports 100KB keys.\nInterface LargeKeys.Above100KB;\n// Tests if a runner supports 100MB keys.\nInterface LargeKeys.Above100MB;\n// Tests if a runner supports 10KB keys.\nInterface LargeKeys.Above10KB;\n// Tests if a runner supports 10MB keys.\nInterface LargeKeys.Above10MB;\n// Tests if a runner supports 1MB keys.\nInterface LargeKeys.Above1MB;\n// Category tag for validation tests which utilize TestPipeline for execution and expect to be executed by a PipelineRunner.\nInterface NeedsRunner;\n// Builder interface for assertions applicable to iterables and PCollection contents.\nInterface PAssert.IterableAssert<T>;\n// Builder interface for assertions applicable to a single value.\nInterface PAssert.SingletonAssert<T>;\n// A Matcher that is also Serializable.\nInterface SerializableMatcher<T>;\n// Supplies values of type T, and is serializable.\nInterface SerializableMatchers.SerializableSupplier<T>;\n// tests which use unbounded PCollections should be in the category UsesUnboundedPCollections.\nInterface StreamingIT;\n// Implementation detail of TestPipeline.newProvider(T), do not use.\nInterface TestPipeline.TestValueProviderOptions;\n// TestPipelineOptions is a set of options for test pipelines.\nInterface TestPipelineOptions;\n// An event in a TestStream.\nInterface TestStream.Event<T>;\n// Category tag for validation tests which utilize splittable ParDo with a DoFn.BoundedPerElement DoFn.\nInterface UsesBoundedSplittableParDo;\n// Category tag for validation tests which use DoFn.BundleFinalizer.\nInterface UsesBundleFinalizer;\n// Category tag for validation tests which utilize Metrics.\nInterface UsesCommittedMetrics;\n// Category tag for validation tests which utilize custom window merging.\nInterface UsesCustomWindowMerging;\n", "des": "Defines utilities for unit testing Apache Beam pipelines."}
{"index": 496, "repo": "beam-sdks-java-core-2.49.0", "code": "package transforms\n\n// The type of mutable accumulator values used by this AccumulatingCombineFn.\nInterface Combine.AccumulatingCombineFn.Accumulator<InputT,AccumT,OutputT>;\n// For internal use only; no backwards-compatibility guarantees.\nInterface CombineFnBase.GlobalCombineFn<InputT,AccumT,OutputT>;\n// An internal interface for signaling that a GloballyCombineFn or a PerKeyCombineFn needs to access CombineWithContext.Context.\nInterface CombineWithContext.RequiresContextInternal;\n// A function from an input to an output that may additionally access Contextful.Fn.Context when computing the result.\nInterface Contextful.Fn<InputT,OutputT>;\n// A parameter that is accessible during @StartBundle, @ProcessElement and @FinishBundle that allows the caller to register a callback that will be invoked after the bundle has been successfully completed and the runner has commit the output.\nInterface DoFn.BundleFinalizer;\n// An instance of a function that will be invoked after bundle finalization.\nInterface DoFn.BundleFinalizer.Callback;\n// Receives tagged output for a multi-output function.\nInterface DoFn.MultiOutputReceiver;\n// Receives values of the given type.\nInterface DoFn.OutputReceiver<T>;\n// An interface for building a transform from an externally provided configuration.\nInterface ExternalTransformBuilder<ConfigT,InputT extends PInput,OutputT extends POutput>;\n// For internal use only; no backwards-compatibility guarantees.\nInterface Materialization<T>;\n// Represents the PrimitiveViewT supplied to the ViewFn when it declares to use the iterable materialization.\nInterface Materializations.IterableView<V>;\n// Represents the PrimitiveViewT supplied to the ViewFn when it declares to use the multimap materialization.\nInterface Materializations.MultimapView<K,V>;\n// A function object that chooses an output partition for an element.\nInterface Partition.PartitionFn<T>;\n// A function object that chooses an output partition for an element.\nInterface Partition.PartitionWithSideInputsFn<T>;\n// A function that computes an output value of type OutputT from an input value of type InputT and is Serializable.\nInterface ProcessFunction<InputT,OutputT>;\n", "des": "Defines PTransforms for transforming data in a pipeline."}
{"index": 497, "repo": "beam-sdks-java-core-2.49.0", "code": "package display\n\n// Utility to build up display data from a component and its included subcomponents.\nInterface DisplayData.Builder;\n// Marker interface for PTransforms and components to specify display data used within UIs and diagnostic tools.\nInterface HasDisplayData;\n// Static display data associated with a pipeline component.\nClass DisplayData;\n// Unique identifier for a display data item within a component.\nClass DisplayData.Identifier;\n// Items are the unit of display data.\nClass DisplayData.Item;\n// Specifies an DisplayData.Item to register as display data.\nClass DisplayData.ItemSpec<T>;\n// Structured path of registered display data within a component hierarchy.\nClass DisplayData.Path;\n// Display data type.\nEnum DisplayData.Type;\n", "des": "Defines HasDisplayData for annotating components which provide display data used within UIs and diagnostic tools."}
{"index": 498, "repo": "beam-sdks-java-core-2.49.0", "code": "package join\n\n// A row result of a CoGroupByKey.\nClass CoGbkResult;\n// A Coder for CoGbkResults.\nClass CoGbkResult.CoGbkResultCoder;\n// A schema for the results of a CoGroupByKey.\nClass CoGbkResultSchema;\n// A PTransform that performs a CoGroupByKey on a tuple of tables.\nClass CoGroupByKey<K>;\n// An immutable tuple of keyed PCollections with key type K.\nClass KeyedPCollectionTuple<K>;\n// A utility class to help ensure coherence of tag and input PCollection types.\nClass KeyedPCollectionTuple.TaggedKeyedPCollection<K,V>;\n// This corresponds to an integer union tag and value.\nClass RawUnionValue;\n// A UnionCoder encodes RawUnionValues.\nClass UnionCoder;\n", "des": "Defines the CoGroupByKey transform for joining multiple PCollections."}
{"index": 499, "repo": "beam-sdks-java-core-2.49.0", "code": "package reflect\n\n// Interface for invoking the DoFn processing methods.\nInterface DoFnInvoker<InputT,OutputT>;\n// Interface for runner implementors to provide implementations of extra context information.\nInterface DoFnInvoker.ArgumentProvider<InputT,OutputT>;\n// A method delegated to an annotated method of an underlying DoFn.\nInterface DoFnSignature.DoFnMethod;\n// A method delegated to an annotated method of an underlying DoFn that accepts a dynamic list of parameters.\nInterface DoFnSignature.MethodWithExtraParameters;\n// An interface for destructuring a DoFnSignature.Parameter.\nInterface DoFnSignature.Parameter.Cases<ResultT>;\n// Interface for invoking the DoFn.OnTimer method for a particular timer.\nInterface OnTimerInvoker<InputT,OutputT>;\n// This DoFnInvoker.ArgumentProvider throws UnsupportedOperationException for all parameters.\nClass DoFnInvoker.BaseArgumentProvider<InputT,OutputT>;\n// An DoFnInvoker.ArgumentProvider that forwards all calls to the supplied delegate.\nClass DoFnInvoker.DelegatingArgumentProvider<InputT,OutputT>;\n// A fake DoFnInvoker.ArgumentProvider used during testing.\nClass DoFnInvoker.FakeArgumentProvider<InputT,OutputT>;\n// Static utilities for working with DoFnInvoker.\nClass DoFnInvokers;\n// Describes the signature of a DoFn, in particular, which features it uses, which extra context it requires, types of the input and output elements, etc.\nClass DoFnSignature;\n// Describes a DoFn.StartBundle or DoFn.FinishBundle method.\nClass DoFnSignature.BundleMethod;\n// Decscribes a field access declaration.\nClass DoFnSignature.FieldAccessDeclaration;\n// Describes a DoFn.GetInitialRestriction method.\nClass DoFnSignature.GetInitialRestrictionMethod;\n// Describes a DoFn.GetInitialWatermarkEstimatorState method.\nClass DoFnSignature.GetInitialWatermarkEstimatorStateMethod;\n// Describes a DoFn.GetRestrictionCoder method.\nClass DoFnSignature.GetRestrictionCoderMethod;\n// Describes a DoFn.GetSize method.\nClass DoFnSignature.GetSizeMethod;\n// Describes a DoFn.GetRestrictionCoder method.\nClass DoFnSignature.GetWatermarkEstimatorStateCoderMethod;\n", "des": "For internal use only; no backwards-compatibility guarantees."}
{"index": 500, "repo": "beam-sdks-java-core-2.49.0", "code": "package resourcehints\n\n// Options that are used to control configuration of the remote environment.\nInterface ResourceHintsOptions;\n// Provides a definition of a resource hint known to the SDK.\nClass ResourceHint;\n// Pipeline authors can use resource hints to provide additional information to runners about the desired aspects of the execution environment.\nClass ResourceHints;\n// \nClass ResourceHintsOptions.EmptyListDefault;\n// Register the ResourceHintsOptions.\nClass ResourceHintsOptions.Options;\n", "des": "Defines ResourceHints for configuring pipeline execution."}
{"index": 501, "repo": "beam-sdks-java-core-2.49.0", "code": "package splittabledofn\n\n// Provides the estimated end offset of the range.\nInterface GrowableOffsetRangeTracker.RangeEndEstimator;\n// Interface for restrictions for which a default implementation of DoFn.NewTracker is available, depending only on the restriction itself.\nInterface HasDefaultTracker<RestrictionT extends HasDefaultTracker<RestrictionT,TrackerT>,TrackerT extends RestrictionTracker<RestrictionT,?>>;\n// Interface for watermark estimator state for which a default implementation of DoFn.NewWatermarkEstimator is available, depending only on the watermark estimator state itself.\nInterface HasDefaultWatermarkEstimator<WatermarkEstimatorStateT,WatermarkEstimatorT extends WatermarkEstimator<WatermarkEstimatorStateT>>;\n// A WatermarkEstimator which is controlled manually from within a DoFn.\nInterface ManualWatermarkEstimator<WatermarkEstimatorStateT>;\n// All RestrictionTrackers SHOULD implement this interface to improve auto-scaling and splitting performance.\nInterface RestrictionTracker.HasProgress;\n// A WatermarkEstimator that observes the timestamps of all records output from a DoFn.\nInterface TimestampObservingWatermarkEstimator<WatermarkEstimatorStateT>;\n// A WatermarkEstimator which is used for estimating output watermarks of a splittable DoFn.\nInterface WatermarkEstimator<WatermarkEstimatorStateT>;\n// A RestrictionTracker for claiming ByteKeys in a ByteKeyRange in a monotonically increasing fashion.\nClass ByteKeyRangeTracker;\n// An OffsetRangeTracker for tracking a growable offset range.\nClass GrowableOffsetRangeTracker;\n// A RestrictionTracker for claiming offsets in an OffsetRange in a monotonically increasing fashion.\nClass OffsetRangeTracker;\n// Manages access to the restriction and keeps track of its claimed part for a splittable DoFn.\nClass RestrictionTracker<RestrictionT,PositionT>;\n// A representation for the amount of known completed and remaining work.\nClass RestrictionTracker.Progress;\n// A representation of the truncate result.\nClass RestrictionTracker.TruncateResult<RestrictionT>;\n// A representation of a split result.\nClass SplitResult<RestrictionT>;\n// A set of WatermarkEstimators that users can use to advance the output watermark for their associated splittable DoFns.\nClass WatermarkEstimators;\n", "des": "Defines utilities related to splittable DoFn."}
{"index": 502, "repo": "beam-sdks-java-core-2.49.0", "code": "package windowing\n\n// A composite Trigger that fires when all of its sub-triggers are ready.\nClass AfterAll;\n// A composite Trigger that executes its sub-triggers in order.\nClass AfterEach;\n// A composite Trigger that fires once after at least one of its sub-triggers have fired.\nClass AfterFirst;\n// A Trigger that fires at some point after a specified number of input elements have arrived.\nClass AfterPane;\n// A Trigger trigger that fires at a specified point in processing time, relative to when input first arrives.\nClass AfterProcessingTime;\n// FOR INTERNAL USE ONLY.\nClass AfterSynchronizedProcessingTime;\n// AfterWatermark triggers fire based on progress of the system watermark.\nClass AfterWatermark;\n// \nClass AfterWatermark.AfterWatermarkEarlyAndLate;\n// A watermark trigger targeted relative to the end of the window.\nClass AfterWatermark.FromEndOfWindow;\n// A BoundedWindow represents window information assigned to data elements.\nClass BoundedWindow;\n// A collection of WindowFns that windows values into calendar-based windows such as spans of days, months, or years.\nClass CalendarWindows;\n// A WindowFn that windows elements into periods measured by days.\nClass CalendarWindows.DaysWindows;\n// A WindowFn that windows elements into periods measured by months.\nClass CalendarWindows.MonthsWindows;\n// A WindowFn that windows elements into periods measured by years.\nClass CalendarWindows.YearsWindows;\n// A trigger that is equivalent to Repeatedly.forever(AfterWatermark.pastEndOfWindow()).\nClass DefaultTrigger;\n// A WindowFn that windows values into fixed-size timestamp-based windows.\nClass FixedWindows;\n// The default window into which all data is placed (via GlobalWindows).\nClass GlobalWindow;\n// GlobalWindow.Coder for encoding and decoding GlobalWindows.\nClass GlobalWindow.Coder;\n// A WindowFn that assigns all data to the same window.\nClass GlobalWindows;\n// An implementation of BoundedWindow that represents an interval from IntervalWindow.start (inclusive) to IntervalWindow.end (exclusive).\nClass IntervalWindow;\n// Encodes an IntervalWindow as a pair of its upper bound and duration.\nClass IntervalWindow.IntervalWindowCoder;\n", "des": "Defines the Window transform for dividing the elements in a PCollection into windows, and the Trigger for controlling when those elements are output."}
{"index": 503, "repo": "beam-sdks-java-core-2.49.0", "code": "package util\n\n// Back-off policy when retrying an operation.\nInterface BackOff;\n// \nInterface HistogramData.BucketType;\n// An object for detecting illegal mutations.\nInterface MutationDetector;\n// Classes may implement this interface to change how names are generated for their instances.\nInterface NameUtils.NameOverride;\n// Bare-bones class for using sharded files.\nInterface ShardedFile;\n// Sleeper interface to use for requesting the current thread to sleep as specified in Thread.sleep(long).\nInterface Sleeper;\n// Like Runnable but allowed to throw any exception.\nInterface ThrowingRunnable;\n// Like Supplier but allowed to throw any exception.\nInterface ThrowingSupplier<T>;\n// Interface representing an object that has a weight, in unspecified units.\nInterface Weighted;\n// A WindowedValue which holds exactly single window per value.\nInterface WindowedValue.SingleWindowedValue;\n// Represents the API surface of a package prefix.\nClass ApiSurface;\n// A CombineFnBase.GlobalCombineFn with a fixed accumulator coder.\nClass AppliedCombineFn<K,InputT,AccumT,OutputT>;\n// Utilities for BackOff.\nClass BackOffUtils;\n// use BitSetCoder instead\nClass BitSetCoder;\n// Keep track of the minimum/maximum/sum of a set of timestamped long values.\nClass BucketingFunction;\n// Provides an efficient encoding for Iterables containing small values by buffering up to bufferSize bytes of data before prefixing the count.\nClass BufferedElementCountingOutputStream;\n// Utilities for working with Byte Buddy.\nClass ByteBuddyUtils;\n// An OutputStream that produces ByteStrings.\nClass ByteStringOutputStream;\n// Utilities for working with Coders.\nClass CoderUtils;\n// Factory that produces Combine.Context based on different inputs.\nClass CombineContextFactory;\n// Static utility methods that create combine function instances.\nClass CombineFnUtil;\n// Wrapper class holding the necessary information to serialize a DoFn.\nClass DoFnInfo<InputT,OutputT>;\n// The data that the Java SDK harness needs to execute a DoFn.\nClass DoFnWithExecutionInformation;\n// A Serializable ThreadLocal which discards any \"stored\" objects.\nClass EmptyOnDeserializationThreadLocal<T>;\n", "des": "For internal use only; no backwards compatibility guarantees."}
{"index": 504, "repo": "beam-sdks-java-core-2.49.0", "code": "package common\n\n// An Iterable that returns Reiterator iterators.\nInterface Reiterable<T>;\n// An Iterator with the ability to copy its iteration state.\nInterface Reiterator<T>;\n// An abstract class used for iterables that notify observers about size in bytes of their elements, as they are being iterated over.\nClass ElementByteSizeObservableIterable<V,InputT extends ElementByteSizeObservableIterator<V>>;\n// An abstract class used for iterators that notify observers about size in bytes of their elements, as they are being iterated over.\nClass ElementByteSizeObservableIterator<V>;\n// An observer that gets notified when additional bytes are read and/or used.\nClass ElementByteSizeObserver;\n// Utilities for working with with Classes and Methods.\nClass ReflectHelpers;\n// A Comparator that uses the object's class' canonical name to compare them.\nClass ReflectHelpers.ObjectsClassComparator;\n", "des": "Defines utilities shared by multiple PipelineRunner implementations."}
{"index": 505, "repo": "beam-sdks-java-core-2.49.0", "code": "package values\n\n// A PCollectionView<T> is an immutable view of a PCollection as a value of type T that can be accessed as a side input to a ParDo transform.\nInterface PCollectionView<T>;\n// \nInterface PCollectionViews.HasDefaultValue<T>;\n// \nInterface PCollectionViews.IsSingletonView<T>;\n// \nInterface PCollectionViews.TypeDescriptorSupplier<T>;\n// The interface for things that might be input to a PTransform.\nInterface PInput;\n// The interface for things that might be output from a PTransform.\nInterface POutput;\n// For internal use.\nInterface PValue;\n// A helper interface for use with TypeDescriptors.extractFromTypeParameters(Object, Class, TypeVariableExtractor).\nInterface TypeDescriptors.TypeVariableExtractor<InputT,OutputT>;\n// A wrapper around a Throwable for use with coders.\nClass EncodableThrowable;\n// An immutable tuple of value, timestamp, window, and pane.\nClass FailsafeValueInSingleWindow<T,ErrorT>;\n// A coder for FailsafeValueInSingleWindow.\nClass FailsafeValueInSingleWindow.Coder<T,ErrorT>;\n// An immutable key/value pair.\nClass KV<K,V>;\n// A Comparator that orders KVs by the natural ordering of their keys.\nClass KV.OrderByKey<K extends java.lang.Comparable<? super K>,V>;\n// A Comparator that orders KVs by the natural ordering of their values.\nClass KV.OrderByValue<K,V extends java.lang.Comparable<? super V>>;\n// PBegin is the \"input\" to a root PTransform, such as Read or Create.\nClass PBegin;\n// A PCollection<T> is an immutable collection of values of type T.\nClass PCollection<T>;\n// A PCollectionList<T> is an immutable list of homogeneously typed PCollection<T>s.\nClass PCollectionList<T>;\n// A PCollectionRowTuple is an immutable tuple of PCollections, \"keyed\" by a string tag.\nClass PCollectionRowTuple;\n", "des": "Defines PCollection and other classes for representing data in a Pipeline."}
{"index": 506, "repo": "commons-vfs2-2.9.0", "code": "package vfs2\n\n// Represents the data content of a file.\nInterface FileContent;\n// Informs on the content of a file with content type and encoding.\nInterface FileContentInfo;\n// Creates FileContentInfo instances to determine the content-info for given file contents.\nInterface FileContentInfoFactory;\n// This interface is used to select files when traversing the direct children of the base.\nInterface FileFilter;\n// Listens for changes to a file.\nInterface FileListener;\n// FileMonitor interface.\nInterface FileMonitor;\n// Represents a file name.\nInterface FileName;\n// Represents a file, and is used to access the content and structure of the file.\nInterface FileObject;\n// The fileCache interface.\nInterface FilesCache;\n// Information about a file, that is used to select files during the traversal of a hierarchy.\nInterface FileSelectInfo;\n// This interface is used to select files when traversing a file hierarchy.\nInterface FileSelector;\n// A file system, made up of a hierarchy of files.\nInterface FileSystem;\n// A FileSystemManager manages a set of file systems.\nInterface FileSystemManager;\n// Provides random access over content.\nInterface RandomAccessContent;\n// The user authenticator is used to query credentials from the user.\nInterface UserAuthenticator;\n// A FileSelector that selects everything.\nClass AllFileSelector;\n// An event fired when a file is changed.\nClass FileChangeEvent;\n// A FileSelector that selects all files in a particular depth range.\nClass FileDepthSelector;\n// A FileSelector that selects based on file extensions.\nClass FileExtensionSelector;\n// A FileSelector that selects all children of the given fileObject.\nClass FileFilterSelector;\n// Abstract class which has the right to fill FileSystemOptions.\nClass FileSystemConfigBuilder;\n// Configures file systems individually with these options.\nClass FileSystemOptions;\n// A FileSelector that selects files of a particular type.\nClass FileTypeSelector;\n// Use FileObjectUtils.\nClass FileUtil;\n// Inverts file inclusion of a delegate FileSelector, folder traversal is delegated.\nClass InvertIncludeFileSelector;\n// A FileSelector that selects based on regular expressions.\nClass PatternFileSelector;\n// Several standard file selectors.\nClass Selectors;\n// Contains various authentication data.\nClass UserAuthenticationData;\n", "des": "The public VFS API."}
{"index": 507, "repo": "commons-vfs2-2.9.0", "code": "package auth\n\n// Provides always the same credentials data passed in with the constructor.\nClass StaticUserAuthenticator;\n", "des": "VFS Authentication implementation"}
{"index": 508, "repo": "commons-vfs2-2.9.0", "code": "package cache\n\n// Abstract base class for FilesCache implementations.\nClass AbstractFilesCache;\n// A simple FilesCache implementation.\nClass DefaultFilesCache;\n// This implementation caches every file using LRUMap.\nClass LRUFilesCache;\n// A FilesCache implementation.\nClass NullFilesCache;\n// This decorator refreshes the fileObject data on every call.\nClass OnCallRefreshFileObject;\n// This implementation caches every file as long as it is strongly reachable by the JVM.\nClass SoftRefFilesCache;\n// This implementation caches every file as long as it is strongly reachable by the java vm.\nClass WeakRefFilesCache;\n", "des": "VFS File caching"}
{"index": 509, "repo": "commons-vfs2-2.9.0", "code": "package events\n\n// A change event that knows how to notify a listener.\nClass AbstractFileChangeEvent;\n// File changed event.\nClass ChangedEvent;\n// File creation event.\nClass CreateEvent;\n// File deletion event.\nClass DeleteEvent;\n", "des": "VFS Events"}
{"index": 510, "repo": "commons-vfs2-2.9.0", "code": "package filter\n\n// Defines operations for conditional file filters.\nInterface ConditionalFileFilter;\n// Filters files based on a cutoff time, can filter either newer files or files equal to or older.\nClass AgeFileFilter;\n// A filter providing conditional AND logic across a list of file filters.\nClass AndFileFilter;\n// This filter accepts Files that can be executed.\nClass CanExecuteFileFilter;\n// This filter accepts Files that can be read.\nClass CanReadFileFilter;\n// This filter accepts Files that can be written to.\nClass CanWriteFileFilter;\n// This filter accepts Files that are directories.\nClass DirectoryFileFilter;\n// This filter accepts files or directories that are empty.\nClass EmptyFileFilter;\n// A file filter that always returns false.\nClass FalseFileFilter;\n// This filter accepts Files that are files (not directories).\nClass FileFileFilter;\n// This filter accepts Files that are hidden.\nClass HiddenFileFilter;\n// Filters file names for a certain name.\nClass NameFileFilter;\n// This filter produces a logical NOT of the filters specified.\nClass NotFileFilter;\n// A FileFilter providing conditional OR logic across a list of file filters.\nClass OrFileFilter;\n// Filters file names for a certain prefix.\nClass PrefixFileFilter;\n// Filters files using supplied regular expression(s).\nClass RegexFileFilter;\n// Filters files based on size, can filter either smaller files or files equal to or larger than a given threshold.\nClass SizeFileFilter;\n// Filter that accepts files whose size is >= minimum size and <= maximum size.\nClass SizeRangeFileFilter;\n// Filters files based on the suffix (what the file name ends with).\nClass SuffixFileFilter;\n// This filter accepts Files that are symbolic links.\nClass SymbolicLinkFileFilter;\n// A file filter that always returns true.\nClass TrueFileFilter;\n// Filters files using the supplied wildcards.\nClass WildcardFileFilter;\n// Enumeration of IO case sensitivity.\nEnum IOCase;\n", "des": "Implementations of org.apache.commons.vfs2.FileFilter."}
{"index": 511, "repo": "commons-vfs2-2.9.0", "code": "package function\n\n// A Consumer that throws FileSystemException.\nInterface VfsConsumer<T>;\n", "des": "Functional interface types in the style of java.util.function."}
{"index": 512, "repo": "commons-vfs2-2.9.0", "code": "package impl\n\n// Base class to build a fileObject decoration.\nClass DecoratedFileObject;\n// The default file content information.\nClass DefaultFileContentInfo;\n// A polling FileMonitor implementation.\nClass DefaultFileMonitor;\n// A simple file replicator and temporary file store.\nClass DefaultFileReplicator;\n// Default options usable for all file systems.\nClass DefaultFileSystemConfigBuilder;\n// The default file system manager implementation.\nClass DefaultFileSystemManager;\n// Same as ProviderConfiguration but for the default provider.\nClass DefaultProviderConfiguration;\n// The FileContentInfoFilenameFactory.\nClass FileContentInfoFilenameFactory;\n// A file replicator that wraps another file replicator, performing the replication as a privileged action.\nClass PrivilegedFileReplicator;\n// This class describes the configuration for a provider.\nClass ProviderConfiguration;\n// A FileSystemManager that configures itself from an XML (Default: providers.xml) configuration file.\nClass StandardFileSystemManager;\n// This decorator synchronize all access to the FileObject.\nClass SynchronizedFileObject;\n// A class loader that can load classes and resources from a search path.\nClass VFSClassLoader;\n// A simple Filename to hold the scheme for to be created virtual file system.\nClass VirtualFileName;\n// A virtual file system provider.\nClass VirtualFileProvider;\n// A logical file system, made up of set of junctions, or links, to files from other file systems.\nClass VirtualFileSystem;\n", "des": "The standard VFS implementation."}
{"index": 513, "repo": "commons-vfs2-2.9.0", "code": "package operations\n\n// A FileOperation is an object that brings an extra function to a FileObject.\nInterface FileOperation;\n// FileOperationProvider is responsible for dealing with FileOperation's.\nInterface FileOperationProvider;\n// FileOperations interface provides API to work with operations.\nInterface FileOperations;\n// \nClass AbstractFileOperation;\n// \nClass AbstractFileOperationProvider;\n// \nClass DefaultFileOperations;\n", "des": "VFS Operations handling."}
{"index": 514, "repo": "commons-vfs2-2.9.0", "code": "package vcs\n\n// \nInterface VcsAdd;\n// \nInterface VcsCheckout;\n// \nInterface VcsCommit;\n// \nInterface VcsCommitListener;\n// \nInterface VcsDelete;\n// \nInterface VcsLog;\n// \nInterface VcsLogEntryHandler;\n// \nInterface VcsModifyListener;\n// Restores pristine working copy file and cancels all local modifications.\nInterface VcsRevert;\n// \nInterface VcsUpdate;\n// \nInterface VcsUpdateListener;\n// \nClass VcsLogEntry;\n// \nEnum VcsStatus;\n", "des": "VFS version control operations."}
{"index": 515, "repo": "commons-vfs2-2.9.0", "code": "package provider\n\n// Provides methods to parse a file name into a FileName.\nInterface FileNameParser;\n// A file provider.\nInterface FileProvider;\n// Responsible for making local replicas of files.\nInterface FileReplicator;\n// A file provider which handles local files.\nInterface LocalFileProvider;\n// Manages a repository of temporary local files.\nInterface TemporaryFileStore;\n// This interface is used to manage the lifecycle of all VFS components.\nInterface VfsComponent;\n// Allows VFS components to access the services they need, such as the file replicator.\nInterface VfsComponentContext;\n// A default file name implementation.\nClass AbstractFileName;\n// Provides methods to parse a file name into a FileName.\nClass AbstractFileNameParser;\n// A partial file object implementation.\nClass AbstractFileObject<AFS extends AbstractFileSystem>;\n// A partial FileProvider implementation.\nClass AbstractFileProvider;\n// A partial FileSystem implementation.\nClass AbstractFileSystem;\n// A FileProvider that is layered on top of another, such as the contents of a zip or tar file.\nClass AbstractLayeredFileProvider;\n// A FileProvider that handles physical files, such as the files in a local fs, or on an FTP server.\nClass AbstractOriginatingFileProvider;\n// Implements the DataOutput part of the RandomAccessContent interface and throws UnsupportedOperationException when one of these methods are called.\nClass AbstractRandomAccessContent;\n// Implements the part usable for all stream-based random access.\nClass AbstractRandomAccessStreamContent;\n// A partial VfsComponent implementation.\nClass AbstractVfsComponent;\n// A VfsComponent that contains a set of sub-components.\nClass AbstractVfsContainer;\n// Description.\nClass CompositeFileProvider;\n// The content of a file.\nClass DefaultFileContent;\n// A default URL connection that will work for most file systems.\nClass DefaultURLConnection;\n// A default URL stream handler that will work for most file systems.\nClass DefaultURLStreamHandler;\n// A file backed by another file.\nClass DelegateFileObject<AFS extends AbstractFileSystem>;\n// A file name that represents a 'generic' URI, as per RFC 2396.\nClass GenericFileName;\n// Generic file name that represents a URL.\nClass GenericURLFileName;\n", "des": "The File Provider API, and utility classes."}
{"index": 516, "repo": "commons-vfs2-2.9.0", "code": "package bzip2\n\n// the bzip2 file.\nClass Bzip2FileObject;\n// Provides access to the content of bzip2 compressed files.\nClass Bzip2FileProvider;\n// Filesytem to handle compressed files using the bzip2 method.\nClass Bzip2FileSystem;\n", "des": "The BZIP2 File Provider"}
{"index": 517, "repo": "commons-vfs2-2.9.0", "code": "package compressed\n\n// A compressed file.\nClass CompressedFileFileObject<FS extends CompressedFileFileSystem>;\n// A file system provider for compressed files.\nClass CompressedFileFileProvider;\n// A read-only file system for compressed files.\nClass CompressedFileFileSystem;\n", "des": "The compressed file provider"}
{"index": 518, "repo": "commons-vfs2-2.9.0", "code": "package ftp\n\n// What VFS expects from an FTP client to provide.\nInterface FtpClient;\n// Create a FtpClient instance.\nClass FtpClientFactory;\n// Abstract Factory, used to configure different FTPClients.\nClass FtpClientFactory.ConnectionFactory<C extends org.apache.commons.net.ftp.FTPClient,B extends FtpFileSystemConfigBuilder>;\n// Connection Factory, used to configure the FTPClient.\nClass FtpClientFactory.FtpConnectionFactory;\n// A wrapper to the FTPClient to allow automatic reconnect on connection loss.\nClass FTPClientWrapper;\n// Implementation for FTP.\nClass FtpFileNameParser;\n// An FTP file.\nClass FtpFileObject;\n// A provider for FTP file systems.\nClass FtpFileProvider;\n// An FTP file system.\nClass FtpFileSystem;\n// The config builder for various FTP configuration options.\nClass FtpFileSystemConfigBuilder;\n// The FTP file types.\nEnum FtpFileType;\n", "des": "The FTP File Provider."}
{"index": 519, "repo": "commons-vfs2-2.9.0", "code": "package ftps\n\n// Create FTPSClient instances.\nClass FtpsClientFactory;\n// A provider for FTP file systems.\nClass FtpsFileProvider;\n// A FTPS file system.\nClass FtpsFileSystem;\n// The configuration builder for various FTPS configuration options.\nClass FtpsFileSystemConfigBuilder;\n// Protection level of the data channel in a FTPS communication.\nEnum FtpsDataChannelProtectionLevel;\n// Mode of the FTPS connection.\nEnum FtpsMode;\n", "des": "The FTPS File Provider."}
{"index": 520, "repo": "commons-vfs2-2.9.0", "code": "package gzip\n\n// A Gzip file.\nClass GzipFileObject;\n// Provides access to the content of Gzip files.\nClass GzipFileProvider;\n// A compressed file system using the Gzip method.\nClass GzipFileSystem;\n", "des": "The GZIP File Provider"}
{"index": 521, "repo": "commons-vfs2-2.9.0", "code": "package hdfs\n\n// Creates FileContentInfo instances for HDFS.\nClass HdfsFileContentInfoFactory;\n// A VFS representation of an HDFS file.\nClass HdfsFileObject;\n// FileProvider for HDFS files.\nClass HdfsFileProvider;\n// A VFS FileSystem that interacts with HDFS.\nClass HdfsFileSystem;\n// Configuration settings for the HdfsFileSystem.\nClass HdfsFileSystemConfigBuilder;\n// Provides random access to content in an HdfsFileObject.\nClass HdfsRandomAccessContent;\n// HDFS file content attributes.\nEnum HdfsFileAttributes;\n", "des": "The HDFS File Provider"}
{"index": 522, "repo": "commons-vfs2-2.9.0", "code": "package http\n\n// Create a HttpClient instance.\nClass HttpClientFactory;\n// Creates FileContentInfo instances for HTTP.\nClass HttpFileContentInfoFactory;\n// Implementation for http.\nClass HttpFileNameParser;\n// A file object backed by Apache Commons HttpClient.\nClass HttpFileObject<FS extends HttpFileSystem>;\n// An HTTP provider that uses commons-httpclient.\nClass HttpFileProvider;\n// An HTTP file system.\nClass HttpFileSystem;\n// Configuration options for HTTP.\nClass HttpFileSystemConfigBuilder;\n", "des": "The HTTP File Provider"}
{"index": 523, "repo": "commons-vfs2-2.9.0", "code": "package http4\n\n// Creates FileContentInfoFactory instances for http4 provider.\nClass Http4FileContentInfoFactory;\n// FileNameParser implementation for http4 provider, setting default port to 80.\nClass Http4FileNameParser;\n// A file object backed by Apache HttpComponents HttpClient.\nClass Http4FileObject<FS extends Http4FileSystem>;\n// FileProvider implementation using HttpComponents HttpClient library.\nClass Http4FileProvider;\n// http4 file system.\nClass Http4FileSystem;\n// Configuration options builder utility for http4 provider.\nClass Http4FileSystemConfigBuilder;\n", "des": "The HTTP4 File Provider"}
{"index": 524, "repo": "commons-vfs2-2.9.0", "code": "package http4s\n\n// FileNameParser implementation for http4s provider, setting default port to 443.\nClass Http4sFileNameParser;\n// http4s provider that uses HttpComponents HttpClient.\nClass Http4sFileProvider;\n", "des": "The HTTP4S File Provider"}
{"index": 525, "repo": "commons-vfs2-2.9.0", "code": "package http5\n\n// Creates FileContentInfoFactory instances for http5 provider.\nClass Http5FileContentInfoFactory;\n// FileNameParser implementation for http5 provider, setting default port to 80.\nClass Http5FileNameParser;\n// A file object backed by Apache HttpComponents HttpClient v5.\nClass Http5FileObject<FS extends Http5FileSystem>;\n// FileProvider implementation using HttpComponents HttpClient v5 library.\nClass Http5FileProvider;\n// http5 file system.\nClass Http5FileSystem;\n// Configuration options builder utility for http5 provider.\nClass Http5FileSystemConfigBuilder;\n", "des": "The HTTP5 File Provider"}
{"index": 526, "repo": "commons-vfs2-2.9.0", "code": "package http5s\n\n// FileNameParser implementation for http5s provider, setting default port to 443.\nClass Http5sFileNameParser;\n// http5s provider that uses HttpComponents HttpClient.\nClass Http5sFileProvider;\n", "des": "The HTTP5S File Provider"}
{"index": 527, "repo": "commons-vfs2-2.9.0", "code": "package https\n\n// Implementation for https.\nClass HttpsFileNameParser;\n// An HTTPS provider that uses commons-httpclient.\nClass HttpsFileProvider;\n", "des": "The HTTPS File Provider"}
{"index": 528, "repo": "commons-vfs2-2.9.0", "code": "package jar\n\n// A file in a Jar file system.\nClass JarFileObject;\n// A file system provider for Jar files.\nClass JarFileProvider;\n// A read-only file system for Jar files.\nClass JarFileSystem;\n// A default URL connection that will work for most file systems.\nClass JarURLConnectionImpl;\n", "des": "The Jar File Provider."}
{"index": 529, "repo": "commons-vfs2-2.9.0", "code": "package local\n\n// A file system provider, which uses direct file access.\nClass DefaultLocalFileProvider;\n// A general-purpose file name parser.\nClass GenericFileNameParser;\n// A file object implementation which uses direct file access.\nClass LocalFile;\n// A local file URI.\nClass LocalFileName;\n// A name parser.\nClass LocalFileNameParser;\n// A local file system.\nClass LocalFileSystem;\n// A local file URI.\nClass WindowsFileName;\n// A parser for Windows file names.\nClass WindowsFileNameParser;\n", "des": "The Local File Provider."}
{"index": 530, "repo": "commons-vfs2-2.9.0", "code": "package ram\n\n// A RAM File contains a single RAM FileData instance, it provides methods to access the data by implementing FileObject interface.\nClass RamFileObject;\n// OutputStream to a RamFile.\nClass RamFileOutputStream;\n// RAM File Provider.\nClass RamFileProvider;\n// RAM File Random Access Content.\nClass RamFileRandomAccessContent;\n// A RAM File System.\nClass RamFileSystem;\n// Config Builder for the RAM file system.\nClass RamFileSystemConfigBuilder;\n", "des": "The RAM File Provider."}
{"index": 531, "repo": "commons-vfs2-2.9.0", "code": "package res\n\n// A resource file URI.\nClass ResourceFileName;\n// Slightly modified filename parser for resource URIs.\nClass ResourceFileNameParser;\n// The Resource provider.\nClass ResourceFileProvider;\n// The config BUILDER for various FTP configuration options.\nClass ResourceFileSystemConfigBuilder;\n", "des": "The Resource File Provider"}
{"index": 532, "repo": "commons-vfs2-2.9.0", "code": "package sftp\n\n// Provides identity to a JSch.\nInterface IdentityProvider;\n// Creates instances of JSch IdentityRepository.\nInterface IdentityRepositoryFactory;\n// Structure for an identity based on byte arrays.\nClass BytesIdentityInfo;\n// Structure for an identity based on Files.\nClass IdentityInfo;\n// Create a JSch Session instance.\nClass SftpClientFactory;\n// Implementation for SFTP.\nClass SftpFileNameParser;\n// An SFTP file.\nClass SftpFileObject;\n// A provider for accessing files over SFTP.\nClass SftpFileProvider;\n// Represents the files on an SFTP server.\nClass SftpFileSystem;\n// The config builder for various SFTP configuration options.\nClass SftpFileSystemConfigBuilder;\n// Proxy type.\nClass SftpFileSystemConfigBuilder.ProxyType;\n// Stream based proxy for JSch.\nClass SftpStreamProxy;\n// Helper class to trust a new host.\nClass TrustEveryoneUserInfo;\n// Pretends that the current user is always the owner and in the same group.\nClass UserIsOwnerPosixPermissions;\n", "des": "The SFTP Provider."}
{"index": 533, "repo": "commons-vfs2-2.9.0", "code": "package tar\n\n// A file in a Tar file system.\nClass TarFileObject;\n// A file system provider for Tar files.\nClass TarFileProvider;\n// A read-only file system for Tar files.\nClass TarFileSystem;\n// A file system provider for Tar files.\nClass Tbz2FileProvider;\n// A file system provider for Tar files.\nClass TgzFileProvider;\n", "des": "The Tar File Provider."}
{"index": 534, "repo": "commons-vfs2-2.9.0", "code": "package temp\n\n// A provider for temporary files.\nClass TemporaryFileProvider;\n", "des": "The Temporary Filespace Provider."}
{"index": 535, "repo": "commons-vfs2-2.9.0", "code": "package url\n\n// A URL FileName.\nClass UrlFileName;\n// Implementation for any java.net.url based file system.\nClass UrlFileNameParser;\n// A FileObject implementation backed by a URL.\nClass UrlFileObject;\n// A file provider backed by Java's URL API.\nClass UrlFileProvider;\n// A File system backed by Java's URL API.\nClass UrlFileSystem;\n", "des": "The Default File Provider, which wraps java.net.URL."}
{"index": 536, "repo": "commons-vfs2-2.9.0", "code": "package zip\n\n// A file in a ZIP file system.\nClass ZipFileObject;\n// A file system provider for ZIP files.\nClass ZipFileProvider;\n// A read-only file system for ZIP and JAR files.\nClass ZipFileSystem;\n// \nClass ZipFileSystemConfigBuilder;\n", "des": "The Zip File Provider."}
{"index": 537, "repo": "commons-vfs2-2.9.0", "code": "package tasks\n\n// An abstract file synchronization task.\nClass AbstractSyncTask;\n// Information about a source file.\nClass AbstractSyncTask.SourceInfo;\n// An Ant task that copies matching files.\nClass CopyTask;\n// An Ant task that deletes matching files.\nClass DeleteTask;\n// An Ant task that creates a directory.\nClass MkdirTask;\n// An Ant task that moves matching files.\nClass MoveTask;\n// An Ant task that writes the details of a file to Ant's log.\nClass ShowFileTask;\n// A task that synchronises the destination folder to look exactly like the source folder (or folders).\nClass SyncTask;\n// Base class for the VFS Ant tasks.\nClass VfsTask;\n", "des": "The VFS Ant Tasks."}
{"index": 538, "repo": "commons-vfs2-2.9.0", "code": "package util\n\n// \nInterface Cryptor;\n// \nClass CombinedResources;\n// Factory to create an instance of a Cryptor.\nClass CryptorFactory;\n// Allows passwords to be encrypted and decrypted.\nClass DefaultCryptor;\n// This class use reflection to set a configuration value using the fileSystemConfigBuilder associated the a scheme.\nClass DelegatingFileSystemOptionsBuilder;\n// Allows passwords to be encrypted and decrypted.\nClass EncryptUtil;\n// Utility methods for FileObject.\nClass FileObjectUtils;\n// Formats messages.\nClass Messages;\n// An InputStream that provides buffering and end-of-stream monitoring.\nClass MonitorInputStream;\n// An OutputStream that provides buffering and end-of-stream monitoring.\nClass MonitorOutputStream;\n// A RandomAccessContent that provides end-of-stream monitoring.\nClass MonitorRandomAccessContent;\n// Use Apache Commons Lang's SystemUtils.\nClass Os;\n// Use Apache Commons Lang's SystemUtils.\nClass OsFamily;\n// UNIX permissions.\nClass PosixPermissions;\n// An InputStream that provides end-of-stream monitoring.\nClass RawMonitorInputStream;\n// The URI escape and character encoding and decoding utility.\nClass URIUtils;\n// Helps with authentication.\nClass UserAuthenticatorUtils;\n// Wraps a listener with a WeakReference.\nClass WeakRefFileListener;\n// Permission types.\nEnum PosixPermissions.Type;\n// An enumerated type representing the modes of a random access content.\nEnum RandomAccessMode;\n", "des": "Utility classes used by the VFS."}
{"index": 539, "repo": "commons-geometry-core-1.0", "code": "package core\n\n// This interface defines mappings between a space and one of its subspaces.\nInterface Embedding<P extends Point<P>,S extends Point<S>>;\n// Interface representing a point in a mathematical space.\nInterface Point<P extends Point<P>>;\n// Interface representing a region in a space.\nInterface Region<P extends Point<P>>;\n// Interface representing a geometric element that embeds a region in a subspace.\nInterface RegionEmbedding<P extends Point<P>,S extends Point<S>>;\n// Interface representing a geometric element with a size.\nInterface Sized;\n// Interface representing a generic element in a mathematical space.\nInterface Spatial;\n// Interface representing geometric transforms in a space, i.e.\nInterface Transform<P extends Point<P>>;\n// Interface representing a vector in a vector space or displacement vectors in an affine space.\nInterface Vector<V extends Vector<V>>;\n// Enumeration containing the possible locations of a point with respect to a region.\nEnum RegionLocation;\n", "des": "This package contains the core interfaces and classes for commons-geometry."}
{"index": 540, "repo": "commons-geometry-core-1.0", "code": "package internal\n\n// Represents a function that accepts a single double value and returns a result.\nInterface DoubleFunction1N<T>;\n// Represents a function that accepts two double values and returns a result.\nInterface DoubleFunction2N<T>;\n// Represents a function that accepts three double values and returns a result.\nInterface DoubleFunction3N<T>;\n// Utility methods for HyperplaneSubset implementations.\nClass HyperplaneSubsets;\n// Class that wraps another iterator, converting each input iterator value into one or more output iterator values.\nClass IteratorTransform<I,T>;\n// Class for performing simple formatting and parsing of real number tuples.\nClass SimpleTupleFormat;\n// Exception thrown when something that should not happen does happen.\nClass GeometryInternalError;\n", "des": "This package contains utilities intended for internal use only."}
{"index": 541, "repo": "commons-geometry-core-1.0", "code": "package partitioning\n\n// Interface representing an object that can produce region boundaries as a stream of hyperplane convex subsets.\nInterface BoundarySource<C extends HyperplaneConvexSubset<? extends Point<?>>>;\n// Hyperplane that also embeds a subspace.\nInterface EmbeddingHyperplane<P extends Point<P>,S extends Point<S>>;\n// Interface representing a hyperplane, which in a space of dimension n is a subspace of dimension n - 1.\nInterface Hyperplane<P extends Point<P>>;\n// Interface representing regions with boundaries defined by hyperplanes or portions of hyperplanes.\nInterface HyperplaneBoundedRegion<P extends Point<P>>;\n// Extension of the HyperplaneSubset interface with the additional restriction that instances represent convex regions of space.\nInterface HyperplaneConvexSubset<P extends Point<P>>;\n// Interface representing a subset of the points lying in a hyperplane.\nInterface HyperplaneSubset<P extends Point<P>>;\n// Interface representing objects that can be split by Hyperplanes.\nInterface Splittable<P extends Point<P>,S extends Splittable<P,S>>;\n// Base class for convex hyperplane-bounded regions.\nClass AbstractConvexHyperplaneBoundedRegion<P extends Point<P>,S extends HyperplaneConvexSubset<P>>;\n// Internal class encapsulating the logic for building convex region boundaries from collections of hyperplanes.\nClass AbstractConvexHyperplaneBoundedRegion.ConvexRegionBoundaryBuilder<P extends Point<P>,S extends HyperplaneConvexSubset<P>>;\n// Base class for hyperplane implementations.\nClass AbstractHyperplane<P extends Point<P>>;\n// Simple implementation of BoundarySource containing boundaries stored in a list.\nClass BoundaryList<P extends Point<P>,S extends HyperplaneConvexSubset<P>>;\n// Class containing the result of splitting an object with a hyperplane.\nClass Split<T>;\n// Enumeration containing possible locations of a point with respect to a hyperplane.\nEnum HyperplaneLocation;\n// Enumeration representing the location of a split object with respect to its splitting hyperplane.\nEnum SplitLocation;\n", "des": "This package contains code related to partitioning of spaces by hyperplanes."}
{"index": 542, "repo": "commons-geometry-core-1.0", "code": "package bsp\n\n// Interface used to initialize newly created BSP subtrees, consisting of a single parent node and two child nodes.\nInterface AbstractBSPTree.SubtreeInitializer<N extends AbstractBSPTree.AbstractNode<?,?>>;\n// Interface for types that form the root of BSP subtrees.\nInterface BSPSubtree<P extends Point<P>,N extends BSPTree.Node<P,N>>;\n// Interface for Binary Space Partitioning (BSP) trees.\nInterface BSPTree<P extends Point<P>,N extends BSPTree.Node<P,N>>;\n// Interface for Binary Space Partitioning (BSP) tree nodes.\nInterface BSPTree.Node<P extends Point<P>,N extends BSPTree.Node<P,N>>;\n// Interface for visiting the nodes in a BSPTree or BSPSubtree.\nInterface BSPTreeVisitor<P extends Point<P>,N extends BSPTree.Node<P,N>>;\n// Abstract class for Binary Space Partitioning (BSP) tree implementations.\nClass AbstractBSPTree<P extends Point<P>,N extends AbstractBSPTree.AbstractNode<P,N>>;\n// Abstract implementation of BSPTree.Node.\nClass AbstractBSPTree.AbstractNode<P extends Point<P>,N extends AbstractBSPTree.AbstractNode<P,N>>;\n// Class containing the basic algorithm for merging two AbstractBSPTree instances.\nClass AbstractBSPTreeMergeOperator<P extends Point<P>,N extends AbstractBSPTree.AbstractNode<P,N>>;\n// Class encapsulating logic for building regions by inserting boundaries into a BSP tree containing structural cuts, i.e.\nClass AbstractPartitionedRegionBuilder<P extends Point<P>,N extends AbstractRegionBSPTree.AbstractRegionNode<P,N>>;\n// Abstract BSPTree specialized for representing regions of space.\nClass AbstractRegionBSPTree<P extends Point<P>,N extends AbstractRegionBSPTree.AbstractRegionNode<P,N>>;\n", "des": "This package contains classes related to Binary Space Partitioning (BSP) trees."}
{"index": 543, "repo": "spring-mobile-device-1.1.5.RELEASE", "code": "package device\n\n// A model for the user agent or device that submitted the current request.\nInterface Device;\n// Service interface for resolving Devices that originate web requests with the application.\nInterface DeviceResolver;\n// Spring MVC HandlerMethodArgumentResolver that resolves @Controller MethodParameters of type Device to the value of the web request's current device attribute.\nClass DeviceHandlerMethodArgumentResolver;\n// A Spring MVC interceptor that resolves the Device that originated the web request before any request handler is invoked.\nClass DeviceResolverHandlerInterceptor;\n// A Servlet 2.3 Filter that resolves the Device that originated the web request.\nClass DeviceResolverRequestFilter;\n// Static helper for accessing request-scoped Device values.\nClass DeviceUtils;\n// Spring MVC WebArgumentResolver that resolves @Controller MethodParameters of type Device to the value of the web request's current device attribute.\nClass DeviceWebArgumentResolver;\n// A \"lightweight\" device resolver algorithm based on Wordpress's Mobile pack.\nClass LiteDeviceResolver;\n// Enumeration for the platform of device that has been resolved\nEnum DevicePlatform;\n// Enumeration for the type of device that has been resolved\nEnum DeviceType;\n", "des": "Public API for device resolution."}
{"index": 544, "repo": "spring-mobile-device-1.1.5.RELEASE", "code": "package site\n\n// Service interface for site preference management.\nInterface SitePreferenceHandler;\n// A strategy for storing a user's site preference.\nInterface SitePreferenceRepository;\n// SitePreferenceRepository implementation that stores user preference in a Cookie.\nClass CookieSitePreferenceRepository;\n// A Spring MVC interceptor that, on preHandle, delegates to a SitePreferenceHandler to resolve the SitePreference of the user that originated the web request.\nClass SitePreferenceHandlerInterceptor;\n// Spring MVC HandlerMethodArgumentResolver that resolves @Controller MethodParameters of type SitePreference to the value of the web request's current site preference attribute.\nClass SitePreferenceHandlerMethodArgumentResolver;\n// A Servlet 2.3 Filter that delegates to a SitePreferenceHandler to resolve the SitePreference of the user that originated the web request.\nClass SitePreferenceRequestFilter;\n// Static helper for accessing request-scoped SitePreference values.\nClass SitePreferenceUtils;\n// Spring MVC WebArgumentResolver that resolves @Controller MethodParameters of type SitePreference to the value of the web request's current site preference attribute.\nClass SitePreferenceWebArgumentResolver;\n// A helper that resolves the user's site preference and makes it available as a request attribute.\nClass StandardSitePreferenceHandler;\n// Possible site preference values.\nEnum SitePreference;\n", "des": "Ability for the user to specify whether they prefer the mobile or normal site."}
{"index": 545, "repo": "spring-mobile-device-1.1.5.RELEASE", "code": "package switcher\n\n// \nInterface SiteSwitcherHandler;\n// Strategy for constructing different site URLs, such as the 'mobile' site URL.\nInterface SiteUrlFactory;\n// Abstract SiteUrlFactory implementation that differentiates each site by the HTTP request path.\nClass AbstractSitePathUrlFactory;\n// Abstract implementation of the SiteUrlFactory interface.\nClass AbstractSiteUrlFactory;\n// Path based site URL factory implementation that handles requests for the \"mobile\" site.\nClass MobileSitePathUrlFactory;\n// Path based site URL factory implementation that handles requests for the \"normal\" site.\nClass NormalSitePathUrlFactory;\n// A Spring MVC interceptor that switches the user between the mobile, normal, and tablet sites by employing a specific switching algorithm.\nClass SiteSwitcherHandlerInterceptor;\n// A Servlet 2.3 Filter that switches the user between the mobile and normal site by employing a specific switching algorithm.\nClass SiteSwitcherRequestFilter;\n// \nClass StandardSiteSwitcherHandler;\n// Site URL factory implementation that differentiates each site by the value of the server name field.\nClass StandardSiteUrlFactory;\n// Path based site URL factory implementation that handles requests for the \"tablet\" site.\nClass TabletSitePathUrlFactory;\n", "des": "Mobile site switcher for Spring MVC-based web apps."}
{"index": 546, "repo": "spring-mobile-device-1.1.5.RELEASE", "code": "package util\n\n// Static helper for determining how to handle the combination of device and site preference.\nClass ResolverUtils;\n", "des": "Spring Mobile utilities"}
{"index": 547, "repo": "spring-mobile-device-1.1.5.RELEASE", "code": "package view\n\n// Abstract ViewResolver implementation, providing a device aware ViewResolver wrapper that delegates to another view resolver implementation, allowing for resolution of device specific view names without the need for a dedicated mapping to be defined for each view.\nClass AbstractDeviceDelegatingViewResolver;\n// A lightweight AbstractDeviceDelegatingViewResolver for adjusting a view based on the combination of resolved Device and specified SitePreference.\nClass LiteDeviceDelegatingViewResolver;\n", "des": "Device aware view resolution for Spring MVC-based web apps."}
{"index": 548, "repo": "commons-rdf-rdf4j-0.5.0", "code": "package rdf4j\n\n// An Iterable which should be AutoCloseable.close()d after use.\nInterface ClosableIterable<T>;\n// Marker interface for RDF4J implementations of Commons RDF BlankNode.\nInterface RDF4JBlankNode;\n// Marker interface for RDF4J implementations of Commons RDF BlankNodeOrIRI (e.g.\nInterface RDF4JBlankNodeOrIRI;\n// Marker interface for RDF4J implementations of Dataset.\nInterface RDF4JDataset;\n// Marker interface for RDF4J implementations of Graph.\nInterface RDF4JGraph;\n// Marker interface for RDF4J implementations of GraphLike.\nInterface RDF4JGraphLike<T extends TripleLike>;\n// Marker interface for RDF4J implementations of Commons RDF IRI.\nInterface RDF4JIRI;\n// Marker interface for RDF4J implementations of Commons RDF Literal.\nInterface RDF4JLiteral;\n// Marker interface for RDF4J implementations of Quad.\nInterface RDF4JQuad;\n// Marker interface for RDF4J implementations of RDFTerm.\nInterface RDF4JTerm;\n// Marker interface for RDF4J implementations of Triple.\nInterface RDF4JTriple;\n// Marker interface for RDF4J implementations of TripleLike statements.\nInterface RDF4JTripleLike;\n// RDF4J implementation of RDF.\nClass RDF4J;\n// \nEnum RDF4J.Option;\n", "des": "Commons RDF integration with RDF4J."}
{"index": 549, "repo": "commons-rdf-rdf4j-0.5.0", "code": "package experimental\n\n// RDF4J-based parser.\nClass RDF4JParser;\n", "des": "Experimental Commons RDF RDF4J implementations."}
{"index": 550, "repo": "hadoop-common-3.3.4", "code": "package conf\n\n// Something that may be configured with a Configuration.\nInterface Configurable;\n// Something whose Configuration can be changed at run time.\nInterface Reconfigurable;\n// Tool for redacting sensitive information when displaying config parameters.\nClass ConfigRedactor;\n// Provides access to configuration parameters.\nClass Configuration;\n// A pending addition to the global set of deprecated keys.\nClass Configuration.DeprecationDelta;\n// A class that represents a set of positive integer ranges.\nClass Configuration.IntegerRanges;\n// Base class for things that may be configured with a Configuration.\nClass Configured;\n// Utility base class for implementing the Reconfigurable interface.\nClass ReconfigurableBase;\n// A servlet for changing a node's configuration.\nClass ReconfigurationServlet;\n// \nClass ReconfigurationUtil;\n// \nClass ReconfigurationUtil.PropertyChange;\n// A class that contains the numeric value and the unit of measure.\nClass StorageSize;\n// Class that maintains different forms of Storage Units.\nEnum StorageUnit;\n// \nClass ConfServlet.BadFormatException;\n// Exception indicating that configuration property cannot be changed at run time.\nClass ReconfigurationException;\n", "des": "Configuration of system parameters."}
{"index": 551, "repo": "hadoop-common-3.3.4", "code": "package key\n\n// CryptoExtension is a type of Extension that exposes methods to generate EncryptedKeys and to decrypt the same.\nInterface KeyProviderCryptoExtension.CryptoExtension;\n// DelegationTokenExtension is a type of Extension that exposes methods needed to work with Delegation Tokens.\nInterface KeyProviderDelegationTokenExtension.DelegationTokenExtension;\n// A marker interface for the KeyProviderExtension subclass implement.\nInterface KeyProviderExtension.Extension;\n// A KeyProviderExtension implementation providing a short lived cache for KeyVersions and Metadatato avoid burst of requests to hit the underlying KeyProvider.\nClass CachingKeyProvider;\n// The factory to create JksProviders, which is used by the ServiceLoader.\nClass JavaKeyStoreProvider.Factory;\n// An adapter between a KeyStore Key and our Metadata.\nClass JavaKeyStoreProvider.KeyMetadata;\n// A provider of secret key material for Hadoop applications.\nClass KeyProvider;\n// The combination of both the key version name and the key material.\nClass KeyProvider.KeyVersion;\n// Key metadata that is associated with the key.\nClass KeyProvider.Metadata;\n// Options when creating key objects.\nClass KeyProvider.Options;\n// An encrypted encryption key (EEK) and related information.\nClass KeyProviderCryptoExtension.EncryptedKeyVersion;\n// A KeyProvider extension with the ability to add a renewer's Delegation Tokens to the provided Credentials.\nClass KeyProviderDelegationTokenExtension;\n// This is a utility class used to extend the functionality of KeyProvider, that takes a KeyProvider and an Extension.\nClass KeyProviderExtension<E extends KeyProviderExtension.Extension>;\n// A factory to create a list of KeyProvider based on the path given in a Configuration.\nClass KeyProviderFactory;\n// This program is the CLI utility for the KeyProvider facilities in Hadoop.\nClass KeyShell;\n// \nClass UserProvider.Factory;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 552, "repo": "hadoop-common-3.3.4", "code": "package fs\n\n// Abort data being written to a stream, so that close() does not write the data.\nInterface Abortable;\n// Interface for the result of aborts; allows subclasses to extend (IOStatistics etc) or for future enhancements if ever needed.\nInterface Abortable.AbortableResult;\n// \nInterface BatchedRemoteIterator.BatchedEntries<E>;\n// Interface filesystems MAY implement to offer a batched list.\nInterface BatchListingOperations;\n// A storage policy specifies the placement of block replicas on specific storage types.\nInterface BlockStoragePolicySpi;\n// Implementers of this interface provide a positioned read API that writes to a ByteBuffer rather than a byte[].\nInterface ByteBufferPositionedReadable;\n// Implementers of this interface provide a read API that writes to a ByteBuffer, not a byte[].\nInterface ByteBufferReadable;\n// \nInterface CanSetDropBehind;\n// \nInterface CanSetReadahead;\n// FSDataInputStreams implement this interface to indicate that they can clear their buffers on request.\nInterface CanUnbuffer;\n// The renewable interface used by the renewer.\nInterface DelegationTokenRenewer.Renewable;\n// An optional interface for FileStatus subclasses to implement to provide access to etags.\nInterface EtagSource;\n// The base interface which various FileSystem FileContext Builder interfaces can extend, and which underlying implementations will then implement.\nInterface FSBuilder<S,B extends FSBuilder<S,B>>;\n// FileSystem related constants.\nInterface FsConstants;\n// \nInterface FSProtos.FileStatusProtoOrBuilder;\n// \nInterface FSProtos.FsPermissionProtoOrBuilder;\n// \nInterface FSProtos.LocalFileSystemPathHandleProtoOrBuilder;\n// Builder for input streams and subclasses whose return value is actually a completable future: this allows for better asynchronous operation.\nInterface FutureDataInputStreamBuilder;\n// \nInterface GetSpaceUsed;\n// A callback API for creating new StorageStatistics instances.\nInterface GlobalStorageStatistics.StorageStatisticsProvider;\n// MultipartUploader is an interface for copying files multipart and across multiple nodes.\nInterface MultipartUploader;\n// Builder interface for Multipart readers.\nInterface MultipartUploaderBuilder<S extends MultipartUploader,B extends MultipartUploaderBuilder<S,B>>;\n// Opaque, serializable reference to a part id for multipart uploads.\nInterface PartHandle;\n", "des": "An abstract file system API."}
{"index": 553, "repo": "hadoop-common-3.3.4", "code": "package audit\n\n// Statistic Names for Auditing.\nClass AuditStatisticNames;\n// The common audit context is a map of common context information which can be used with any audit span.\nClass CommonAuditContext;\n", "des": "Public classes for adding information to any auditing information picked up by filesystem clients."}
{"index": 554, "repo": "hadoop-common-3.3.4", "code": "package http\n\n// A Filesystem that reads from HTTP endpoint.\nClass HttpFileSystem;\n// A Filesystem that reads from HTTPS endpoint.\nClass HttpsFileSystem;\n", "des": "Filesystem implementations that allow Hadoop to read directly from HTTP / HTTPS endpoints."}
{"index": 555, "repo": "hadoop-common-3.3.4", "code": "package protocolPB\n\n// Utility methods aiding conversion of fs data structures.\nClass PBHelper;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 556, "repo": "hadoop-common-3.3.4", "code": "package sftp\n\n// SFTP FileSystem.\nClass SFTPFileSystem;\n", "des": "SFTP FileSystem package."}
{"index": 557, "repo": "hadoop-common-3.3.4", "code": "package statistics\n\n// Interface to be implemented by objects which can track duration.\nInterface DurationTracker;\n// Interface for a source of duration tracking.\nInterface DurationTrackerFactory;\n// IO Statistics.\nInterface IOStatistics;\n// Interface exported by classes which support aggregation of IOStatistics.\nInterface IOStatisticsAggregator;\n// A source of IO statistics.\nInterface IOStatisticsSource;\n// An extension of BufferedInputStream which implements IOStatisticsSource and forwards requests for the IOStatistics to the wrapped stream.\nClass BufferedIOStatisticsInputStream;\n// An extension of BufferedOutputStream which implements IOStatisticsSource and forwards requests for the IOStatistics to the wrapped stream.\nClass BufferedIOStatisticsOutputStream;\n// Summary of duration tracking statistics as extracted from an IOStatistics instance.\nClass DurationStatisticSummary;\n// Utility operations convert IO Statistics sources/instances to strings, especially for robustly logging.\nClass IOStatisticsLogging;\n// Snapshot of statistics from a different source.\nClass IOStatisticsSnapshot;\n// Support for working with IOStatistics.\nClass IOStatisticsSupport;\n// A mean statistic represented as the sum and the sample count; the mean is calculated on demand.\nClass MeanStatistic;\n// Common statistic names for object store operations..\nClass StoreStatisticNames;\n// These are common statistic names.\nClass StreamStatisticNames;\n", "des": "This package contains support for statistic collection and reporting."}
{"index": 558, "repo": "hadoop-common-3.3.4", "code": "package lib\n\n// Provides a servlet filter that pretends to authenticate a fake user (Dr.Who) so that the web UI is usable for a secure cluster without authentication.\nClass StaticUserWebFilter;\n// \nClass StaticUserWebFilter.StaticUserFilter;\n", "des": "This package provides user-selectable (via configuration) classes that add functionality to the web UI."}
{"index": 559, "repo": "hadoop-common-3.3.4", "code": "package io\n\n// \nInterface ByteBufferPool;\n// use java.io.Closeable\nInterface Closeable;\n// \nInterface MapFile.Reader.Option;\n// \nInterface MapFile.Writer.Option;\n// A Comparator that operates directly on byte representations of objects.\nInterface RawComparator<T>;\n// An outstanding readahead request that has been submitted to the pool.\nInterface ReadaheadPool.ReadaheadRequest;\n// A tag interface for all of the Reader options\nInterface SequenceFile.Reader.Option;\n// The interface to iterate over raw keys/values of SequenceFiles.\nInterface SequenceFile.Sorter.RawKeyValueIterator;\n// The interface to 'raw' values of SequenceFiles.\nInterface SequenceFile.ValueBytes;\n// \nInterface SequenceFile.Writer.Option;\n// Stringifier interface offers two methods to convert an object to a string representation and restore the object given its string representation.\nInterface Stringifier<T>;\n// A serializable object which implements a simple, efficient, serialization protocol, based on DataInput and DataOutput.\nInterface Writable;\n// A Writable which is also Comparable.\nInterface WritableComparable<T>;\n// A factory for a class of Writable.\nInterface WritableFactory;\n// Abstract base class for MapWritable and SortedMapWritable Unlike org.apache.nutch.crawl.MapWritable, this class allows creation of MapWritable<Writable, MapWritable> so the CLASS_TO_ID and ID_TO_CLASS maps travel with the class instead of being static.\nClass AbstractMapWritable;\n// A dense file-based mapping from integers to values.\nClass ArrayFile;\n// Provide access to an existing array file.\nClass ArrayFile.Reader;\n// Write a new array file.\nClass ArrayFile.Writer;\n// This is a wrapper class.\nClass ArrayPrimitiveWritable;\n// A Writable for arrays containing instances of a class.\nClass ArrayWritable;\n// Interface supported by WritableComparable types supporting ordering/permutation by a representative set of bytes.\nClass BinaryComparable;\n// This class extends MapFile and provides very much the same functionality.\nClass BloomMapFile;\n// \nClass BloomMapFile.Reader;\n// \nClass BloomMapFile.Writer;\n// A WritableComparable for booleans.\nClass BooleanWritable;\n", "des": "Generic i/o code for use when reading and writing data to the network, to databases, and to files."}
{"index": 560, "repo": "hadoop-common-3.3.4", "code": "package serializer\n\n// An experimental Serialization for Java Serializable classes.\nClass JavaSerialization;\n// A RawComparator that uses a JavaSerialization Deserializer to deserialize objects that are then compared via their Comparable interfaces.\nClass JavaSerializationComparator<T extends Serializable & Comparable<T>>;\n// A Serialization for Writables that delegates to Writable.write(java.io.DataOutput) and Writable.readFields(java.io.DataInput).\nClass WritableSerialization;\n", "des": "This package provides a mechanism for using different serialization frameworks in Hadoop."}
{"index": 561, "repo": "hadoop-common-3.3.4", "code": "package avro\n\n// Tag interface for Avro 'reflect' serializable classes.\nInterface AvroReflectSerializable;\n// \nClass AvroRecord;\n// RecordBuilder for AvroRecord instances.\nClass AvroRecord.Builder;\n// Serialization for Avro Reflect classes.\nClass AvroReflectSerialization;\n// Base class for providing serialization to Avro types.\nClass AvroSerialization<T>;\n// Serialization for Avro Specific classes.\nClass AvroSpecificSerialization;\n", "des": "This package provides Avro serialization in Hadoop."}
{"index": 562, "repo": "hadoop-common-3.3.4", "code": "package metrics2\n\n// The metrics collector interface\nInterface MetricsCollector;\n// Interface to provide immutable metainfo for metrics.\nInterface MetricsInfo;\n// The plugin interface for the metrics framework\nInterface MetricsPlugin;\n// An immutable snapshot of metrics with a timestamp\nInterface MetricsRecord;\n// The metrics sink interface.\nInterface MetricsSink;\n// The source of metrics information.\nInterface MetricsSource;\n// The metrics system callback interface (needed for proxies.)\nInterface MetricsSystem.Callback;\n// The JMX interface to the metrics system\nInterface MetricsSystemMXBean;\n// A visitor interface for metrics\nInterface MetricsVisitor;\n// The immutable metric\nClass AbstractMetric;\n// The metrics filter interface.\nClass MetricsFilter;\n// Build a JSON dump of the metrics.\nClass MetricsJsonBuilder;\n// The metrics record builder interface\nClass MetricsRecordBuilder;\n// The metrics system interface.\nClass MetricsSystem;\n// Convenient abstract class for implementing callback interface\nClass MetricsSystem.AbstractCallback;\n// Immutable tag for metrics (for grouping on host/queue/username etc.)\nClass MetricsTag;\n// Build a string dump of the metrics.\nClass MetricStringBuilder;\n// \nEnum MetricType;\n// A general metrics exception wrapper\nClass MetricsException;\n", "des": "Metrics 2.0"}
{"index": 563, "repo": "hadoop-common-3.3.4", "code": "package annotation\n\n// \nEnum Metric.Type;\n// Annotation interface for a single metric used to annotate a field or a method in the class.\nAnnotation Type Metric;\n// Annotation interface for a group of metrics\nAnnotation Type Metrics;\n", "des": "Annotation interfaces for metrics instrumentation"}
{"index": 564, "repo": "hadoop-common-3.3.4", "code": "package filter\n\n// A glob pattern filter for metrics.\nClass GlobFilter;\n// A regex pattern filter for metrics\nClass RegexFilter;\n", "des": "Builtin metrics filters (to be used in metrics config files)"}
{"index": 565, "repo": "hadoop-common-3.3.4", "code": "package lib\n\n// Helpers to create interned metrics info.\nClass Interns;\n// An optional metrics registry class for creating and maintaining a collection of MetricsMutables, making writing metrics source easier.\nClass MetricsRegistry;\n// The mutable counter (monotonically increasing) metric interface\nClass MutableCounter;\n// A mutable int counter for implementing metrics sources\nClass MutableCounterInt;\n// A mutable long counter\nClass MutableCounterLong;\n// The mutable gauge metric interface\nClass MutableGauge;\n// A mutable float gauge.\nClass MutableGaugeFloat;\n// A mutable int gauge\nClass MutableGaugeInt;\n// A mutable long gauge\nClass MutableGaugeLong;\n// The mutable metric interface\nClass MutableMetric;\n// Watches a stream of long values, maintaining online estimates of specific quantiles with provably low error bounds.\nClass MutableQuantiles;\n// A convenient mutable metric for throughput measurement\nClass MutableRate;\n// Helper class to manage a group of mutable rate metrics This class synchronizes all accesses to the metrics it contains, so it should not be used in situations where there is high contention on the metrics.\nClass MutableRates;\n// Helper class to manage a group of mutable rate metrics.\nClass MutableRatesWithAggregation;\n// This class maintains a group of rolling average metrics.\nClass MutableRollingAverages;\n// A mutable metric with stats.\nClass MutableStat;\n// The default metrics system singleton.\nEnum DefaultMetricsSystem;\n", "des": "A collection of library classes for implementing metrics sources"}
{"index": 566, "repo": "hadoop-common-3.3.4", "code": "package sink\n\n// A metrics sink that writes to a file\nClass FileSink;\n// A metrics sink that writes to a Graphite server\nClass GraphiteSink;\n// \nClass GraphiteSink.Graphite;\n// Metrics sink for prometheus exporter.\nClass PrometheusMetricsSink;\n// This class is a metrics sink that uses FileSystem to write the metrics logs.\nClass RollingFileSystemSink;\n// A metrics sink that writes metrics to a StatsD daemon.\nClass StatsDSink;\n// Class that sends UDP packets to StatsD daemon.\nClass StatsDSink.StatsD;\n", "des": "Builtin metrics sinks"}
{"index": 567, "repo": "hadoop-common-3.3.4", "code": "package util\n\n// \nInterface QuantileEstimator;\n// This util class provides a method to register an MBean using our standard naming convention as described in the doc for {link MBeans.register(String, String, Object).\nClass MBeans;\n// A metrics cache for sinks that don't support sparse updates.\nClass MetricsCache;\n// Cached record\nClass MetricsCache.Record;\n// Helper to keep running min/max\nClass SampleStat.MinMax;\n// Helpers to handle server addresses\nClass Servers;\n", "des": "General helpers for implementing source and sinks"}
{"index": 568, "repo": "hadoop-common-3.3.4", "code": "package net\n\n// An interface that must be implemented to allow pluggable DNS-name/IP-address to RackID resolvers.\nInterface DNSToSwitchMapping;\n// This interface provides methods for the failover proxy to get IP addresses of the associated servers (NameNodes, RBF routers etc).\nInterface DomainNameResolver;\n// \nInterface InnerNode.Factory<N extends org.apache.hadoop.net.InnerNode>;\n// This is a base class for DNS to Switch mappings.\nClass AbstractDNSToSwitchMapping;\n// A cached implementation of DNSToSwitchMapping that takes an raw DNSToSwitchMapping and stores the resolved network location in a cache.\nClass CachedDNSToSwitchMapping;\n// DNSDomainNameResolver wraps up the default DNS service for forward/reverse DNS lookup.\nClass DNSDomainNameResolver;\n// InnerNode represents a switch/router of a data center or rack.\nClass InnerNodeImpl;\n// \nClass InnerNodeImpl.Factory;\n// This class implements the DNSToSwitchMapping interface using a script configured via the CommonConfigurationKeysPublic.NET_TOPOLOGY_SCRIPT_FILE_NAME_KEY option.\nClass ScriptBasedMapping;\n// This is the uncached script mapping that is fed into the cache managed by the superclass CachedDNSToSwitchMapping\nClass ScriptBasedMapping.RawScriptBasedMapping;\n// Specialized SocketFactory to create sockets with a SOCKS proxy\nClass SocksSocketFactory;\n// Specialized SocketFactory to create sockets with a SOCKS proxy\nClass StandardSocketFactory;\n// Simple DNSToSwitchMapping implementation that reads a 2 column text file.\nClass TableMapping;\n// Thrown by NetUtils.connect(java.net.Socket, java.net.SocketAddress, int) if it times out while connecting to the remote host.\nClass ConnectTimeoutException;\n// \nClass NetworkTopology.InvalidTopologyException;\n", "des": "Network-related classes."}
{"index": 569, "repo": "hadoop-common-3.3.4", "code": "package alias\n\n// The factory to create JksProviders, which is used by the ServiceLoader.\nClass BouncyCastleFipsKeyStoreProvider.Factory;\n// A provider of credentials or password for Hadoop applications.\nClass CredentialProvider;\n// The combination of both the alias and the actual credential value.\nClass CredentialProvider.CredentialEntry;\n// A factory to create a list of CredentialProvider based on the path given in a Configuration.\nClass CredentialProviderFactory;\n// This program is the CLI utility for the CredentialProvider facilities in Hadoop.\nClass CredentialShell;\n// To facilitate testing since Console is a final class.\nClass CredentialShell.PasswordReader;\n// The factory to create JksProviders, which is used by the ServiceLoader.\nClass JavaKeyStoreProvider.Factory;\n// The factory to create KeyStore Providers, which is used by the ServiceLoader.\nClass LocalBouncyCastleFipsKeyStoreProvider.Factory;\n// The factory to create JksProviders, which is used by the ServiceLoader.\nClass LocalJavaKeyStoreProvider.Factory;\n// \nClass UserProvider.Factory;\n", "des": "Provides the hadoop credential provider API."}
{"index": 570, "repo": "hadoop-common-3.3.4", "code": "package server\n\n// AuthenticationFilter which adds support to perform operations using end user instead of proxy user.\nClass ProxyUserAuthenticationFilter;\n// Filter initializer to initialize ProxyUserAuthenticationFilter which adds support to perform operations using end user instead of proxy user.\nClass ProxyUserAuthenticationFilterInitializer;\n", "des": "Provides the server-side framework for authentication."}
{"index": 571, "repo": "hadoop-common-3.3.4", "code": "package launcher\n\n// Callback issues on an interrupt.\nInterface IrqHandler.Interrupted;\n// An interface which services can implement to have their execution managed by the ServiceLauncher.\nInterface LaunchableService;\n// Standard launcher arguments.\nInterface LauncherArguments;\n// Common Exit codes.\nInterface LauncherExitCodes;\n// Subclass of AbstractService that provides basic implementations of the LaunchableService methods.\nClass AbstractLaunchableService;\n// This class is intended to be installed by calling Thread.setDefaultUncaughtExceptionHandler(UncaughtExceptionHandler) in the main entry point.\nClass HadoopUncaughtExceptionHandler;\n// Forced shutdown runnable.\nClass InterruptEscalator.ServiceForcedShutdown;\n// Interrupt data to pass on.\nClass IrqHandler.InterruptData;\n// A class to launch any YARN service by name.\nClass ServiceLauncher<S extends Service>;\n// A generic options parser which does not parse any of the traditional Hadoop options.\nClass ServiceLauncher.MinimalGenericOptionsParser;\n// A service launch exception that includes an exit code.\nClass ServiceLaunchException;\n", "des": "This package contains classes, interfaces and exceptions to launch YARN services from the command line."}
{"index": 572, "repo": "hadoop-common-3.3.4", "code": "package util\n\n// Pass in an implementation of this interface to cleanup ByteBuffers.\nInterface CleanerUtil.BufferCleaner;\n// Get the exit code of an exception.\nInterface ExitCodeProvider;\n// The user can provide an instance of a class implementing this interface when initializing a GcTimeMonitor to receive alerts when GC time percentage exceeds the specified threshold.\nInterface GcTimeMonitor.GcTimeAlertHandler;\n// \nInterface IdentityHashStore.Visitor<K,V>;\n// \nInterface IPList;\n// Entries of LightWeightCache.\nInterface LightWeightCache.Entry;\n// Elements of LightWeightGSet.\nInterface LightWeightGSet.LinkedElement;\n// A facility for reporting progress.\nInterface Progressable;\n// \nInterface Shell.CommandExecutor;\n// A tool interface that supports handling of generic command-line options.\nInterface Tool;\n// A URLClassLoader for application isolation.\nClass ApplicationClassLoader;\n// This is a wrap class of a ReentrantLock.\nClass AutoCloseableLock;\n// BasicDiskValidator is a wrapper around DiskChecker.\nClass BasicDiskValidator;\n// CacheableIPList loads a list of subnets from a file.\nClass CacheableIPList;\n// A closeable object that maintains a reference count.\nClass CloseableReferenceCount;\n// Util class to stores ips/hosts/subnets.\nClass CombinedIPList;\n// \nClass CombinedIPWhiteList;\n// Generic implementation of version comparison.\nClass ComparableVersion;\n// A duration with logging of final state at info or debug in the close() call.\nClass DurationInfo;\n// Fast thread-safe version of NumberFormat\nClass FastNumberFormat;\n// FileBasedIPList loads a list of subnets in CIDR format and ip addresses from a file.\nClass FileBasedIPList;\n// This entry point exists for diagnosing classloader problems: is a class or resource present -and if so, where?\nClass FindClass;\n// This class monitors the percentage of time the JVM is paused in GC within the specified observation window, say 1 minute.\nClass GcTimeMonitor;\n// \nClass GcTimeMonitor.Builder;\n// Encapsulates data about GC pauses measured at the specific timestamp.\nClass GcTimeMonitor.GcData;\n", "des": "Common utilities."}
{"index": 573, "repo": "hadoop-common-3.3.4", "code": "package functional\n\n// Function of arity 2 which may raise an IOException.\nInterface BiFunctionRaisingIOE<T,U,R>;\n// This is a callable which only raises an IOException.\nInterface CallableRaisingIOE<R>;\n// Version of java.util.function.Consumer which raises exceptions.\nInterface ConsumerRaisingIOE<T>;\n// Function of arity 1 which may raise an IOException.\nInterface FunctionRaisingIOE<T,R>;\n// This is a lambda-expression which may raises an IOException.\nInterface InvocationRaisingIOE;\n// A bridge from Callable to Supplier; catching exceptions raised by the callable and wrapping them as appropriate.\nClass CommonCallableSupplier<T>;\n// Future IO Helper methods.\nClass FutureIO;\n// A set of remote iterators supporting transformation and filtering, with IOStatisticsSource passthrough, and of conversions of the iterators to lists/arrays and of performing actions on the values.\nClass RemoteIterators;\n", "des": "Support for functional programming within the Hadoop APIs."}
{"index": 574, "repo": "commons-collections-3.2.2", "code": "package collections\n\n// Defines a collection that counts the number of times an object appears in the collection.\nInterface Bag;\n// Defines a map that allows bidirectional lookup between key and values.\nInterface BidiMap;\n// Defines a collection that is bounded in size.\nInterface BoundedCollection;\n// Defines a map that is bounded in size.\nInterface BoundedMap;\n// Defines a collection that allows objects to be removed in some well-defined order.\nInterface Buffer;\n// Defines a functor interface implemented by classes that do something.\nInterface Closure;\n// Defines a functor interface implemented by classes that create objects.\nInterface Factory;\n// Defines a map that can be iterated directly without needing to create an entry set.\nInterface IterableMap;\n// Defines a simple key value pair.\nInterface KeyValue;\n// Defines an iterator that operates over a Map.\nInterface MapIterator;\n// Defines a map that holds a collection of values against each key.\nInterface MultiMap;\n// Defines a map that allows bidirectional lookup between key and values and retains and provides access to an ordering.\nInterface OrderedBidiMap;\n// Defines an iterator that operates over an ordered collection.\nInterface OrderedIterator;\n// Defines a map that maintains order and allows both forward and backward iteration through that order.\nInterface OrderedMap;\n// Defines an iterator that operates over an ordered Map.\nInterface OrderedMapIterator;\n// Defines a functor interface implemented by classes that perform a predicate test on an object.\nInterface Predicate;\n// Replaced by the Buffer interface and implementations in buffer subpackage.\nInterface PriorityQueue;\n// Defines an iterator that can be reset back to an initial state.\nInterface ResettableIterator;\n// Defines a list iterator that can be reset back to an initial state.\nInterface ResettableListIterator;\n// Defines a type of Bag that maintains a sorted order among its unique representative members.\nInterface SortedBag;\n// Defines a map that allows bidirectional lookup between key and values and retains both keys and values in sorted order.\nInterface SortedBidiMap;\n// Defines a functor interface implemented by classes that transform one object into another.\nInterface Transformer;\n", "des": "This package contains the interfaces and utilities shared across all the subpackages of this component."}
{"index": 575, "repo": "commons-collections-3.2.2", "code": "package bag\n\n// Decorates another Bag to provide additional behaviour.\nClass AbstractBagDecorator;\n// Abstract implementation of the Bag interface to simplify the creation of subclass implementations.\nClass AbstractMapBag;\n// Mutable integer class for storing the data.\nClass AbstractMapBag.MutableInteger;\n// Decorates another SortedBag to provide additional behaviour.\nClass AbstractSortedBagDecorator;\n// Implements Bag, using a HashMap to provide the data storage.\nClass HashBag;\n// Decorates another Bag to validate that additions match a specified predicate.\nClass PredicatedBag;\n// Decorates another SortedBag to validate that additions match a specified predicate.\nClass PredicatedSortedBag;\n// Decorates another Bag to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedBag;\n// Decorates another SortedBag to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedSortedBag;\n// Decorates another Bag to transform objects that are added.\nClass TransformedBag;\n// Decorates another SortedBag to transform objects that are added.\nClass TransformedSortedBag;\n// Implements SortedBag, using a TreeMap to provide the data storage.\nClass TreeBag;\n// Decorates another Bag to validate that elements added are of a specific type.\nClass TypedBag;\n// Decorates another SortedBag to validate that elements added are of a specific type.\nClass TypedSortedBag;\n// Decorates another Bag to ensure it can't be altered.\nClass UnmodifiableBag;\n// Decorates another SortedBag to ensure it can't be altered.\nClass UnmodifiableSortedBag;\n", "des": "This package contains implementations of the Bag and SortedBag interfaces."}
{"index": 576, "repo": "commons-collections-3.2.2", "code": "package bidimap\n\n// Provides a base decorator that enables additional functionality to be added to a BidiMap via decoration.\nClass AbstractBidiMapDecorator;\n// Abstract BidiMap implemented using two maps.\nClass AbstractDualBidiMap;\n// Inner class MapIterator.\nClass AbstractDualBidiMap.BidiMapIterator;\n// Inner class EntrySet.\nClass AbstractDualBidiMap.EntrySet;\n// Inner class EntrySetIterator.\nClass AbstractDualBidiMap.EntrySetIterator;\n// Inner class KeySet.\nClass AbstractDualBidiMap.KeySet;\n// Inner class KeySetIterator.\nClass AbstractDualBidiMap.KeySetIterator;\n// Inner class MapEntry.\nClass AbstractDualBidiMap.MapEntry;\n// Inner class Values.\nClass AbstractDualBidiMap.Values;\n// Inner class ValuesIterator.\nClass AbstractDualBidiMap.ValuesIterator;\n// Inner class View.\nClass AbstractDualBidiMap.View;\n// Provides a base decorator that enables additional functionality to be added to an OrderedBidiMap via decoration.\nClass AbstractOrderedBidiMapDecorator;\n// Provides a base decorator that enables additional functionality to be added to a SortedBidiMap via decoration.\nClass AbstractSortedBidiMapDecorator;\n// Implementation of BidiMap that uses two HashMap instances.\nClass DualHashBidiMap;\n// Implementation of BidiMap that uses two TreeMap instances.\nClass DualTreeBidiMap;\n// Inner class MapIterator.\nClass DualTreeBidiMap.BidiOrderedMapIterator;\n// Internal sorted map view.\nClass DualTreeBidiMap.ViewMap;\n// Red-Black tree-based implementation of BidiMap where all objects added implement the Comparable interface.\nClass TreeBidiMap;\n// Decorates another BidiMap to ensure it can't be altered.\nClass UnmodifiableBidiMap;\n// Decorates another OrderedBidiMap to ensure it can't be altered.\nClass UnmodifiableOrderedBidiMap;\n// Decorates another SortedBidiMap to ensure it can't be altered.\nClass UnmodifiableSortedBidiMap;\n", "des": "This package contains implementations of the BidiMap, OrderedBidiMap and SortedBidiMap interfaces."}
{"index": 577, "repo": "commons-collections-3.2.2", "code": "package buffer\n\n// Decorates another Buffer to provide additional behaviour.\nClass AbstractBufferDecorator;\n// Decorates another Buffer to make BlockingBuffer.get() and BlockingBuffer.remove() block when the Buffer is empty.\nClass BlockingBuffer;\n// Decorates another Buffer to ensure a fixed maximum size.\nClass BoundedBuffer;\n// The BoundedFifoBuffer is a very efficient implementation of Buffer that is of a fixed size.\nClass BoundedFifoBuffer;\n// CircularFifoBuffer is a first in first out buffer with a fixed size that replaces its oldest element if full.\nClass CircularFifoBuffer;\n// Decorates another Buffer to validate that additions match a specified predicate.\nClass PredicatedBuffer;\n// Binary heap implementation of Buffer that provides for removal based on Comparator ordering.\nClass PriorityBuffer;\n// Decorates another Buffer to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedBuffer;\n// Decorates another Buffer to transform objects that are added.\nClass TransformedBuffer;\n// Decorates another Buffer to validate that elements added are of a specific type.\nClass TypedBuffer;\n// UnboundedFifoBuffer is a very efficient implementation of Buffer that can grow to any size.\nClass UnboundedFifoBuffer;\n// Decorates another Buffer to ensure it can't be altered.\nClass UnmodifiableBuffer;\n", "des": "This package contains implementations of the Buffer interface."}
{"index": 578, "repo": "commons-collections-3.2.2", "code": "package collection\n\n// Pluggable strategy to handle changes to the composite.\nInterface CompositeCollection.CollectionMutator;\n// Decorates another Collection to provide additional behaviour.\nClass AbstractCollectionDecorator;\n// Serializable subclass of AbstractCollectionDecorator.\nClass AbstractSerializableCollectionDecorator;\n// Decorates a collection of other collections to provide a single unified view.\nClass CompositeCollection;\n// Decorates another Collection to validate that additions match a specified predicate.\nClass PredicatedCollection;\n// Decorates another Collection to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedCollection;\n// Decorates another Collection to transform objects that are added.\nClass TransformedCollection;\n// Decorates a Collection to validate that elements added are of a specific type.\nClass TypedCollection;\n// UnmodifiableBoundedCollection decorates another BoundedCollection to ensure it can't be altered.\nClass UnmodifiableBoundedCollection;\n// Decorates another Collection to ensure it can't be altered.\nClass UnmodifiableCollection;\n", "des": "This package contains implementations of the Collection interface."}
{"index": 579, "repo": "commons-collections-3.2.2", "code": "package comparators\n\n// A Comparator for Boolean objects that can sort either true or false first.\nClass BooleanComparator;\n// A Comparator that compares Comparable objects.\nClass ComparableComparator;\n// A ComparatorChain is a Comparator that wraps one or more Comparators in sequence.\nClass ComparatorChain;\n// A Comparator which imposes a specific order on a specific set of Objects.\nClass FixedOrderComparator;\n// A Comparator that will compare nulls to be either lower or higher than other objects.\nClass NullComparator;\n// Reverses the order of another comparator by reversing the arguments to its compare method.\nClass ReverseComparator;\n// Decorates another Comparator with transformation behavior.\nClass TransformingComparator;\n", "des": "This package contains implementations of the Comparator interface."}
{"index": 580, "repo": "commons-collections-3.2.2", "code": "package functors\n\n// Defines a predicate that decorates one or more other predicates.\nInterface PredicateDecorator;\n// Predicate implementation that returns true if all the predicates return true.\nClass AllPredicate;\n// Predicate implementation that returns true if both the predicates return true.\nClass AndPredicate;\n// Predicate implementation that returns true if any of the predicates return true.\nClass AnyPredicate;\n// Closure implementation that chains the specified closures together.\nClass ChainedClosure;\n// Transformer implementation that chains the specified transformers together.\nClass ChainedTransformer;\n// Transformer implementation that returns a clone of the input object.\nClass CloneTransformer;\n// Transformer implementation that calls a Closure using the input object and then returns the input.\nClass ClosureTransformer;\n// Factory implementation that returns the same constant each time.\nClass ConstantFactory;\n// Transformer implementation that returns the same constant each time.\nClass ConstantTransformer;\n// Predicate implementation that returns true if the input is the same object as the one stored in this predicate by equals.\nClass EqualPredicate;\n// Closure implementation that always throws an exception.\nClass ExceptionClosure;\n// Factory implementation that always throws an exception.\nClass ExceptionFactory;\n// Predicate implementation that always throws an exception.\nClass ExceptionPredicate;\n// Transformer implementation that always throws an exception.\nClass ExceptionTransformer;\n// Transformer implementation that calls a Factory and returns the result.\nClass FactoryTransformer;\n// Predicate implementation that always returns false.\nClass FalsePredicate;\n// Closure implementation that calls another closure n times, like a for loop.\nClass ForClosure;\n// Predicate implementation that returns true if the input is the same object as the one stored in this predicate.\nClass IdentityPredicate;\n// Closure implementation acts as an if statement calling one or other closure based on a predicate.\nClass IfClosure;\n// Predicate implementation that returns true if the input is an instanceof the type stored in this predicate.\nClass InstanceofPredicate;\n// Factory implementation that creates a new object instance by reflection.\nClass InstantiateFactory;\n// Transformer implementation that creates a new object instance by reflection.\nClass InstantiateTransformer;\n// Transformer implementation that creates a new object instance by reflection.\nClass InvokerTransformer;\n// Transformer implementation that returns the value held in a specified map using the input parameter as a key.\nClass MapTransformer;\n", "des": "This package contains implementations of the Closure, Predicate, Transformer and Factory interfaces."}
{"index": 581, "repo": "commons-collections-3.2.2", "code": "package iterators\n\n// Provides basic behaviour for decorating an iterator with extra functionality.\nClass AbstractIteratorDecorator;\n// Provides basic behaviour for decorating a list iterator with extra functionality.\nClass AbstractListIteratorDecorator;\n// Provides basic behaviour for decorating a map iterator with extra functionality.\nClass AbstractMapIteratorDecorator;\n// Provides basic behaviour for decorating an ordered map iterator with extra functionality.\nClass AbstractOrderedMapIteratorDecorator;\n// Implements an Iterator over any array.\nClass ArrayIterator;\n// Implements a ListIterator over an array.\nClass ArrayListIterator;\n// Provides an ordered iteration over the elements contained in a collection of ordered Iterators.\nClass CollatingIterator;\n// Provides an implementation of an empty iterator.\nClass EmptyIterator;\n// Provides an implementation of an empty list iterator.\nClass EmptyListIterator;\n// Provides an implementation of an empty map iterator.\nClass EmptyMapIterator;\n// Provides an implementation of an empty ordered iterator.\nClass EmptyOrderedIterator;\n// Provides an implementation of an empty ordered map iterator.\nClass EmptyOrderedMapIterator;\n// Implements a MapIterator using a Map entrySet.\nClass EntrySetMapIterator;\n// Adapter to make Enumeration instances appear to be Iterator instances.\nClass EnumerationIterator;\n// Decorates another Iterator using a predicate to filter elements.\nClass FilterIterator;\n// Decorates another ListIterator using a predicate to filter elements.\nClass FilterListIterator;\n// An IteratorChain is an Iterator that wraps a number of Iterators.\nClass IteratorChain;\n// Adapter to make an Iterator instance appear to be an Enumeration instance.\nClass IteratorEnumeration;\n// Converts an iterator into a list iterator by caching the returned entries.\nClass ListIteratorWrapper;\n// An Iterator that restarts when it reaches the end.\nClass LoopingIterator;\n// A ListIterator that restarts when it reaches the end or when it reaches the beginning.\nClass LoopingListIterator;\n// An Iterator over an array of objects.\nClass ObjectArrayIterator;\n// Implements a ListIterator over an array of objects.\nClass ObjectArrayListIterator;\n// An Iterator that can traverse multiple iterators down an object graph.\nClass ObjectGraphIterator;\n// Use AbstractIteratorDecorator.\nClass ProxyIterator;\n// Use AbstractListIteratorDecorator.\nClass ProxyListIterator;\n", "des": "This package contains implementations of the Iterator interface."}
{"index": 582, "repo": "commons-collections-3.2.2", "code": "package keyvalue\n\n// Abstract pair class to assist with creating KeyValue and Map.Entry implementations.\nClass AbstractKeyValue;\n// Abstract Pair class to assist with creating correct Map.Entry implementations.\nClass AbstractMapEntry;\n// Provides a base decorator that allows additional functionality to be added to a Map.Entry.\nClass AbstractMapEntryDecorator;\n// A mutable KeyValue pair that does not implement Map.Entry.\nClass DefaultKeyValue;\n// A restricted implementation of Map.Entry that prevents the Map.Entry contract from being broken.\nClass DefaultMapEntry;\n// A MultiKey allows multiple map keys to be merged together.\nClass MultiKey;\n// A Map.Entry tied to a map underneath.\nClass TiedMapEntry;\n// A Map.Entry that throws UnsupportedOperationException when setValue is called.\nClass UnmodifiableMapEntry;\n", "des": "This package contains implementations of collection and map related key/value classes."}
{"index": 583, "repo": "commons-collections-3.2.2", "code": "package list\n\n// An abstract implementation of a linked list which provides numerous points for subclasses to override.\nClass AbstractLinkedList;\n// A list iterator over the linked list.\nClass AbstractLinkedList.LinkedListIterator;\n// The sublist implementation for AbstractLinkedList.\nClass AbstractLinkedList.LinkedSubList;\n// A list iterator over the linked sub list.\nClass AbstractLinkedList.LinkedSubListIterator;\n// A node within the linked list.\nClass AbstractLinkedList.Node;\n// Decorates another List to provide additional behaviour.\nClass AbstractListDecorator;\n// Serializable subclass of AbstractListDecorator.\nClass AbstractSerializableListDecorator;\n// A List implementation with a ListIterator that allows concurrent modifications to the underlying list.\nClass CursorableLinkedList;\n// An extended ListIterator that allows concurrent changes to the underlying list.\nClass CursorableLinkedList.Cursor;\n// A cursor for the sublist based on LinkedSubListIterator.\nClass CursorableLinkedList.SubCursor;\n// Decorates another List to fix the size preventing add/remove.\nClass FixedSizeList;\n// Decorates another List to make it seamlessly grow when indices larger than the list size are used on add and set, avoiding most IndexOutOfBoundsExceptions.\nClass GrowthList;\n// Decorates another List to create objects in the list on demand.\nClass LazyList;\n// A List implementation that stores a cache of internal Node objects in an effort to reduce wasteful object creation.\nClass NodeCachingLinkedList;\n// Decorates another List to validate that all additions match a specified predicate.\nClass PredicatedList;\n// Decorates a List to ensure that no duplicates are present much like a Set.\nClass SetUniqueList;\n// Decorates another List to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedList;\n// Decorates another List to transform objects that are added.\nClass TransformedList;\n// A List implementation that is optimised for fast insertions and removals at any index in the list.\nClass TreeList;\n// Decorates another List to validate that elements added are of a specific type.\nClass TypedList;\n// Decorates another List to ensure it can't be altered.\nClass UnmodifiableList;\n", "des": "This package contains implementations of the List interface."}
{"index": 584, "repo": "commons-collections-3.2.2", "code": "package map\n\n// This interface allows definition for all of the indeterminate mutators in a CompositeMap, as well as providing a hook for callbacks on key collisions.\nInterface CompositeMap.MapMutator;\n// An abstract implementation of a hash-based map which provides numerous points for subclasses to override.\nClass AbstractHashedMap;\n// EntrySet implementation.\nClass AbstractHashedMap.EntrySet;\n// EntrySet iterator.\nClass AbstractHashedMap.EntrySetIterator;\n// HashEntry used to store the data.\nClass AbstractHashedMap.HashEntry;\n// Base Iterator\nClass AbstractHashedMap.HashIterator;\n// MapIterator implementation.\nClass AbstractHashedMap.HashMapIterator;\n// KeySet implementation.\nClass AbstractHashedMap.KeySet;\n// KeySet iterator.\nClass AbstractHashedMap.KeySetIterator;\n// Values implementation.\nClass AbstractHashedMap.Values;\n// Values iterator.\nClass AbstractHashedMap.ValuesIterator;\n// An abstract implementation of a hash-based map that links entries to create an ordered map and which provides numerous points for subclasses to override.\nClass AbstractLinkedMap;\n// EntrySet iterator.\nClass AbstractLinkedMap.EntrySetIterator;\n// KeySet iterator.\nClass AbstractLinkedMap.KeySetIterator;\n// LinkEntry that stores the data.\nClass AbstractLinkedMap.LinkEntry;\n// Base Iterator that iterates in link order.\nClass AbstractLinkedMap.LinkIterator;\n// MapIterator implementation.\nClass AbstractLinkedMap.LinkMapIterator;\n// Values iterator.\nClass AbstractLinkedMap.ValuesIterator;\n// Provides a base decorator that enables additional functionality to be added to a Map via decoration.\nClass AbstractMapDecorator;\n// Provides a base decorator that enables additional functionality to be added to an OrderedMap via decoration.\nClass AbstractOrderedMapDecorator;\n// An abstract implementation of a hash-based map that allows the entries to be removed by the garbage collector.\nClass AbstractReferenceMap;\n// A MapEntry implementation for the map.\nClass AbstractReferenceMap.ReferenceEntry;\n// Provides a base decorator that enables additional functionality to be added to a Map via decoration.\nClass AbstractSortedMapDecorator;\n// A case-insensitive Map.\nClass CaseInsensitiveMap;\n", "des": "This package contains implementations of the Map, IterableMap, OrderedMap and SortedMap interfaces."}
{"index": 585, "repo": "commons-collections-3.2.2", "code": "package set\n\n// Define callbacks for mutation operations.\nInterface CompositeSet.SetMutator;\n// Serializable subclass of AbstractSetDecorator.\nClass AbstractSerializableSetDecorator;\n// Decorates another Set to provide additional behaviour.\nClass AbstractSetDecorator;\n// Decorates another SortedSet to provide additional behaviour.\nClass AbstractSortedSetDecorator;\n// Decorates a set of other sets to provide a single unified view.\nClass CompositeSet;\n// Decorates another Set to ensure that the order of addition is retained and used by the iterator.\nClass ListOrderedSet;\n// Decorates a Map to obtain Set behaviour.\nClass MapBackedSet;\n// Decorates another Set to validate that all additions match a specified predicate.\nClass PredicatedSet;\n// Decorates another SortedSet to validate that all additions match a specified predicate.\nClass PredicatedSortedSet;\n// Decorates another Set to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedSet;\n// Decorates another SortedSet to synchronize its behaviour for a multi-threaded environment.\nClass SynchronizedSortedSet;\n// Decorates another Set to transform objects that are added.\nClass TransformedSet;\n// Decorates another SortedSet to transform objects that are added.\nClass TransformedSortedSet;\n// Decorates another Set to validate that elements added are of a specific type.\nClass TypedSet;\n// Decorates another SortedSet to validate that elements added are of a specific type.\nClass TypedSortedSet;\n// Decorates another Set to ensure it can't be altered.\nClass UnmodifiableSet;\n// Decorates another SortedSet to ensure it can't be altered.\nClass UnmodifiableSortedSet;\n", "des": "This package contains implementations of the Set and SortedSet interfaces."}
{"index": 586, "repo": "org.apache.karaf.main-2.4.4", "code": "package adaptor\n\n// Special startup class for the Eclipse Platform.\nClass EclipseStarter;\n// This class is used to manage the various Locations for Eclipse.\nClass LocationManager;\n", "des": "Provides API to start the platform."}
{"index": 587, "repo": "org.apache.karaf.main-2.4.4", "code": "package console\n\n// A command interpreter is a shell that can interpret command lines.\nInterface CommandInterpreter;\n// When an object wants to provide a number of commands to the console, it should register an object with this interface.\nInterface CommandProvider;\n// A console session service provides the input and output to a single console session.\nClass ConsoleSession;\n", "des": "Provides services related to the Equinox console."}
{"index": 588, "repo": "org.apache.karaf.main-2.4.4", "code": "package eventmgr\n\n// The EventDispatcher interface contains the method that is called by the Event Manager to complete the event delivery to the event listener.\nInterface EventDispatcher<K,V,E>;\n// A copy-on-write identity map.\nClass CopyOnWriteIdentityMap<K,V>;\n// As of 3.5.\nClass EventListeners<K,V>;\n// This class is the central class for the Event Manager.\nClass EventManager;\n// The ListenerQueue is used to snapshot the list of listeners at the time the event is fired.\nClass ListenerQueue<K,V,E>;\n", "des": "Provides the event manager API."}
{"index": 589, "repo": "org.apache.karaf.main-2.4.4", "code": "package log\n\n// The FramworkLog interface.\nInterface FrameworkLog;\n// A framework log entry used to log information to a FrameworkLog\nClass FrameworkLogEntry;\n", "des": "Provides the FrameworkLog service."}
{"index": 590, "repo": "org.apache.karaf.main-2.4.4", "code": "package launch\n\n// The System Bundle implementation for the Equinox Framework.\nClass Equinox;\n// The framework factory implementation for the Equinox framework.\nClass EquinoxFactory;\n", "des": "Provides the Equinox framework launch API."}
{"index": 591, "repo": "org.apache.karaf.main-2.4.4", "code": "package datalocation\n\n// A Location represents a URL which may have a default value, may be read only, may or may not have a current value and may be cascaded on to a parent location.\nInterface Location;\n", "des": "Provides the Location service."}
{"index": 592, "repo": "org.apache.karaf.main-2.4.4", "code": "package debug\n\n// Used to get debug options settings and creating a new DebugTrace instance for a bundle to use for dynamic tracing.\nInterface DebugOptions;\n// A debug options listener is notified whenever one of its plug-in option-path entries is changed.\nInterface DebugOptionsListener;\n// A DebugTrace is used to record debug trace statements, based on the current option settings in a corresponding DebugOptions class.\nInterface DebugTrace;\n", "des": "Provides the DebugOptions service."}
{"index": 593, "repo": "org.apache.karaf.main-2.4.4", "code": "package environment\n\n// Constants used with the EnvironmentInfo service.\nInterface Constants;\n// A Framework service which gives access to the command line used to start this running framework as well as information about the environment such as the current operating system, machine architecture, locale and windowing system.\nInterface EnvironmentInfo;\n", "des": "Provides the EnvironmentInfo service."}
{"index": 594, "repo": "org.apache.karaf.main-2.4.4", "code": "package localization\n\n// The interface of the service that gets ResourceBundle objects from a given bundle with a given locale.\nInterface BundleLocalization;\n// A service that is used to determine what the current locale is for a particular context or session.\nInterface LocaleProvider;\n", "des": "Provides bundle localization and local provider service APIs."}
{"index": 595, "repo": "org.apache.karaf.main-2.4.4", "code": "package resolver\n\n// This class represents a base description object for a state.\nInterface BaseDescription;\n// BundleDeltas represent the changes related to an individual bundle between two states.\nInterface BundleDelta;\n// This class represents a specific version of a bundle in the system.\nInterface BundleDescription;\n// A representation of one bundle import constraint as seen in a bundle manifest and managed by a state and resolver.\nInterface BundleSpecification;\n// This class represents a specific version of an exported package in the system.\nInterface ExportPackageDescription;\n// A description of a generic capability.\nInterface GenericDescription;\n// A specification which depends on a generic capability\nInterface GenericSpecification;\n// A representation of one host bundle constraint as seen in a bundle manifest and managed by a state and resolver.\nInterface HostSpecification;\n// A representation of one package import constraint as seen in a bundle manifest and managed by a state and resolver.\nInterface ImportPackageSpecification;\n// This class represents a native code description.\nInterface NativeCodeDescription;\n// This class represents a native code specification.\nInterface NativeCodeSpecification;\n// Framework service which allows bundle programmers to inspect the bundles and packages known to the Framework.\nInterface PlatformAdmin;\n// An implementation of a resolver which resolves the constraints of the bundles in a system.\nInterface Resolver;\n// ResolverErrors represent a single error that prevents a bundle from resolving in a State object.\nInterface ResolverError;\n// The state of a system as reported by a resolver.\nInterface State;\n// A state delta contains all the changes to bundles within a state.\nInterface StateDelta;\n// A helper class that provides convenience methods for manipulating state objects.\nInterface StateHelper;\n// A factory for states and their component objects.\nInterface StateObjectFactory;\n// VersionConstraints represent the relationship between two bundles (in the case of bundle requires) or a bundle and a package (in the case of import/export).\nInterface VersionConstraint;\n// A disabled info represents a policy decision to disable a bundle which exists in a State.\nClass DisabledInfo;\n// A state wire represents a decision made by a resolver to wire a requirement to a capability.\nClass StateWire;\n// This class represents a version range.\nClass VersionRange;\n// A runtime exception thrown by a resolver to indicate that a resolver hook threw an unexpected exception and the resolve operation terminated.\nClass ResolverHookException;\n", "des": "Provides the Equinox resolver API."}
{"index": 596, "repo": "org.apache.karaf.main-2.4.4", "code": "package runnable\n\n// An ApplicationLauncher is used to launch ParameterizedRunnable objects using the main thread.\nInterface ApplicationLauncher;\n// A parameterized runnable that can be stopped.\nInterface ApplicationRunnable;\n// Like a Runnable, an object which captures a block of code which can be passed around and executed.\nInterface ParameterizedRunnable;\n// Service interface used to monitor the startup process.\nInterface StartupMonitor;\n", "des": "Provides API for monitoring and running code on the main thread."}
{"index": 597, "repo": "org.apache.karaf.main-2.4.4", "code": "package security\n\n// A TrustEngine is used to establish the authenticity of a Certificate chain.\nClass TrustEngine;\n", "des": "Equinox security services"}
{"index": 598, "repo": "org.apache.karaf.main-2.4.4", "code": "package signedcontent\n\n// A SignedContent object represents content which may be signed.\nInterface SignedContent;\n// A SignedContentEntry represents a content entry which may be signed.\nInterface SignedContentEntry;\n// A factory used to create SignedContent objects.\nInterface SignedContentFactory;\n// A SignerInfo object represents a single signer chain.\nInterface SignerInfo;\n// Indicates that signed content is invalid according to one of the signers.\nClass InvalidContentException;\n", "des": "Equinox Signed Content"}
{"index": 599, "repo": "org.apache.karaf.main-2.4.4", "code": "package storagemanager\n\n// Represents a managed output stream for target managed by a storage manager.\nClass ManagedOutputStream;\n// Storage managers provide a facility for tracking the state of a group of files having relationship with each others and being updated by several entities at the same time.\nClass StorageManager;\n", "des": "Provides the storage manager API."}
{"index": 600, "repo": "org.apache.karaf.main-2.4.4", "code": "package util\n\n// This class represents a single manifest element.\nClass ManifestElement;\n// Common superclass for all message bundle classes.\nClass NLS;\n// This class is used to process strings that have special semantic meaning (such as file paths) in RTL-oriented locales so that they render in a way that does not corrupt the semantic meaning of the string but also maintains compliance with the Unicode BiDi algorithm of rendering Bidirectional text.\nClass TextProcessor;\n", "des": "Provides utility classes for NLS support and bundle manifest header parsing."}
{"index": 601, "repo": "org.apache.karaf.main-2.4.4", "code": "package framework\n\n// A ServiceEvent listener that does not filter based upon package wiring.\nInterface AllServiceListener;\n// An installed bundle in the Framework.\nInterface Bundle;\n// Customizes the starting and stopping of a bundle.\nInterface BundleActivator;\n// A bundle's execution context within the Framework.\nInterface BundleContext;\n// A BundleEvent listener.\nInterface BundleListener;\n// A reference to a Bundle.\nInterface BundleReference;\n// As of 1.2.\nInterface Configurable;\n// Defines standard names for the OSGi environment system properties, service properties, and Manifest header attribute keys.\nInterface Constants;\n// An RFC 1960-based Filter.\nInterface Filter;\n// A FrameworkEvent listener.\nInterface FrameworkListener;\n// Allows services to provide customized service objects in the OSGi environment.\nInterface ServiceFactory<S>;\n// A ServiceEvent listener.\nInterface ServiceListener;\n// A reference to a service.\nInterface ServiceReference<S>;\n// A registered service.\nInterface ServiceRegistration<S>;\n// A synchronous BundleEvent listener.\nInterface SynchronousBundleListener;\n// A ServiceEvent listener that does not filter based upon any filter string specified to BundleContext.addServiceListener(ServiceListener, String).\nInterface UnfilteredServiceListener;\n// A bundle's authority to adapt an object to a type.\nClass AdaptPermission;\n// A bundle's authority to perform specific privileged administrative operations on or to get sensitive information about a bundle.\nClass AdminPermission;\n// An event from the Framework describing a bundle lifecycle change.\nClass BundleEvent;\n// A bundle's authority to require or provide a bundle or to receive or attach fragments.\nClass BundlePermission;\n// A bundle's authority to provide or require a capability.\nClass CapabilityPermission;\n// A general event from the Framework.\nClass FrameworkEvent;\n// Framework Utility class.\nClass FrameworkUtil;\n// A bundle's authority to import or export a package.\nClass PackagePermission;\n// An event from the Framework describing a service lifecycle change.\nClass ServiceEvent;\n// A bundle's authority to register or get a service.\nClass ServicePermission;\n// Version identifier for capabilities such as bundles and packages.\nClass Version;\n// Version range.\nClass VersionRange;\n", "des": "Framework Package Version 1.7."}
{"index": 602, "repo": "org.apache.karaf.main-2.4.4", "code": "package bundle\n\n// OSGi Framework Bundle Collision Hook Service.\nInterface CollisionHook;\n// OSGi Framework Bundle Event Hook Service.\nInterface EventHook;\n// OSGi Framework Bundle Context Hook Service.\nInterface FindHook;\n", "des": "Framework Bundle Hooks Package Version 1.1."}
{"index": 603, "repo": "org.apache.karaf.main-2.4.4", "code": "package resolver\n\n// OSGi Framework Resolver Hook instances are obtained from the OSGi Framework Resolver Hook Factory service.\nInterface ResolverHook;\n// OSGi Framework Resolver Hook Factory Service.\nInterface ResolverHookFactory;\n", "des": "Framework Resolver Hooks Package Version 1.0."}
{"index": 604, "repo": "org.apache.karaf.main-2.4.4", "code": "package service\n\n// As of 1.1.\nInterface EventHook;\n// OSGi Framework Service Event Listener Hook Service.\nInterface EventListenerHook;\n// OSGi Framework Service Find Hook Service.\nInterface FindHook;\n// OSGi Framework Service Listener Hook Service.\nInterface ListenerHook;\n// Information about a Service Listener.\nInterface ListenerHook.ListenerInfo;\n", "des": "Framework Service Hooks Package Version 1.1."}
{"index": 605, "repo": "org.apache.karaf.main-2.4.4", "code": "package weaving\n\n// OSGi Framework Weaving Hook Service.\nInterface WeavingHook;\n// A class being woven.\nInterface WovenClass;\n// A weaving exception used to indicate that the class load should be failed but the weaving hook must not be blacklisted by the framework.\nClass WeavingException;\n", "des": "Framework Weaving Hooks Package Version 1.0."}
{"index": 606, "repo": "org.apache.karaf.main-2.4.4", "code": "package launch\n\n// A Framework instance.\nInterface Framework;\n// A factory for creating Framework instances.\nInterface FrameworkFactory;\n", "des": "Framework Launch Package Version 1.1."}
{"index": 607, "repo": "org.apache.karaf.main-2.4.4", "code": "package namespace\n\n// Wiring Capability and Requirement Namespaces base class.\nClass AbstractWiringNamespace;\n// Bundle Capability and Requirement Namespace.\nClass BundleNamespace;\n// Execution Environment Capability and Requirement Namespace.\nClass ExecutionEnvironmentNamespace;\n// Host Capability and Requirement Namespace.\nClass HostNamespace;\n// Identity Capability and Requirement Namespace.\nClass IdentityNamespace;\n// Package Capability and Requirement Namespace.\nClass PackageNamespace;\n", "des": "Namespace Package Version 1.0."}
{"index": 608, "repo": "org.apache.karaf.main-2.4.4", "code": "package startlevel\n\n// Query and modify the start level information for a bundle.\nInterface BundleStartLevel;\n// Query and modify the start level information for the framework.\nInterface FrameworkStartLevel;\n", "des": "Framework Start Level Package Version 1.0."}
{"index": 609, "repo": "org.apache.karaf.main-2.4.4", "code": "package wiring\n\n// A capability that has been declared from a bundle revision.\nInterface BundleCapability;\n// A requirement that has been declared from a bundle revision.\nInterface BundleRequirement;\n// Bundle Revision.\nInterface BundleRevision;\n// The bundle revisions of a bundle.\nInterface BundleRevisions;\n// A wire connecting a BundleCapability to a BundleRequirement.\nInterface BundleWire;\n// A wiring for a bundle.\nInterface BundleWiring;\n// Query and modify wiring information for the framework.\nInterface FrameworkWiring;\n", "des": "Framework Wiring Package Version 1.1."}
{"index": 610, "repo": "org.apache.karaf.main-2.4.4", "code": "package resource\n\n// A capability that has been declared from a Resource.\nInterface Capability;\n// A requirement that has been declared from a Resource .\nInterface Requirement;\n// A resource is the representation of a uniquely identified and typed data.\nInterface Resource;\n// A wire connecting a Capability to a Requirement.\nInterface Wire;\n// A wiring for a resource.\nInterface Wiring;\n// Capability and Requirement Namespaces base class.\nClass Namespace;\n", "des": "Resource Package Version 1.0."}
{"index": 611, "repo": "org.apache.karaf.main-2.4.4", "code": "package condpermadmin\n\n// The interface implemented by a Condition.\nInterface Condition;\n// Framework service to administer Conditional Permissions.\nInterface ConditionalPermissionAdmin;\n// A list of Permissions guarded by a list of conditions with an access decision.\nInterface ConditionalPermissionInfo;\n// Update the Conditional Permission Table.\nInterface ConditionalPermissionUpdate;\n// Condition to test if the location of a bundle matches or does not match a pattern.\nClass BundleLocationCondition;\n// Condition to test if the signer of a bundle matches or does not match a pattern.\nClass BundleSignerCondition;\n// Condition representation used by the Conditional Permission Admin service.\nClass ConditionInfo;\n", "des": "Conditional Permission Admin Package Version 1.1."}
{"index": 612, "repo": "org.apache.karaf.main-2.4.4", "code": "package log\n\n// Provides methods to access the information contained in an individual Log Service log entry.\nInterface LogEntry;\n// Subscribes to LogEntry objects from the LogReaderService.\nInterface LogListener;\n// Provides methods to retrieve LogEntry objects from the log.\nInterface LogReaderService;\n// Provides methods for bundles to write messages to the log.\nInterface LogService;\n", "des": "Log Service Package Version 1.3."}
{"index": 613, "repo": "org.apache.karaf.main-2.4.4", "code": "package packageadmin\n\n// The PackageAdmin service has been replaced by the org.osgi.framework.wiring package.\nInterface ExportedPackage;\n// This service has been replaced by the org.osgi.framework.wiring package.\nInterface PackageAdmin;\n// The PackageAdmin service has been replaced by the org.osgi.framework.wiring package.\nInterface RequiredBundle;\n", "des": "Package Admin Package Version 1.2."}
{"index": 614, "repo": "org.apache.karaf.main-2.4.4", "code": "package permissionadmin\n\n// The Permission Admin service allows management agents to manage the permissions of bundles.\nInterface PermissionAdmin;\n// Permission representation used by the Permission Admin service.\nClass PermissionInfo;\n", "des": "Permission Admin Package Version 1.2."}
{"index": 615, "repo": "org.apache.karaf.main-2.4.4", "code": "package startlevel\n\n// This service has been replaced by the org.osgi.framework.startlevel package.\nInterface StartLevel;\n", "des": "Start Level Package Version 1.1."}
{"index": 616, "repo": "org.apache.karaf.main-2.4.4", "code": "package url\n\n// Defines standard names for property keys associated with URLStreamHandlerService and java.net.ContentHandler services.\nInterface URLConstants;\n// Service interface with public versions of the protected java.net.URLStreamHandler methods.\nInterface URLStreamHandlerService;\n// Interface used by URLStreamHandlerService objects to call the setURL method on the proxy URLStreamHandler object.\nInterface URLStreamHandlerSetter;\n// Abstract implementation of the URLStreamHandlerService interface.\nClass AbstractURLStreamHandlerService;\n", "des": "URL Stream and Content Handlers Package Version 1.0."}
{"index": 617, "repo": "org.apache.karaf.main-2.4.4", "code": "package tracker\n\n// The BundleTrackerCustomizer interface allows a BundleTracker to customize the Bundles that are tracked.\nInterface BundleTrackerCustomizer<T>;\n// The ServiceTrackerCustomizer interface allows a ServiceTracker to customize the service objects that are tracked.\nInterface ServiceTrackerCustomizer<S,T>;\n// The BundleTracker class simplifies tracking bundles much like the ServiceTracker simplifies tracking services.\nClass BundleTracker<T>;\n// The ServiceTracker class simplifies using services from the Framework's service registry.\nClass ServiceTracker<S,T>;\n", "des": "Tracker Package Version 1.5."}
{"index": 618, "repo": "freemarker-2.3.32", "code": "package cache\n\n// Cache storage abstracts away the storage aspects of a cache - associating an object with a key, retrieval and removal via the key.\nInterface CacheStorage;\n// A cache storage that has a getSize() method for returning the current number of cache entries.\nInterface CacheStorageWithGetSize;\n// An optional interface for cache storage that knows whether it can be concurrently accessible without synchronization.\nInterface ConcurrentCacheStorage;\n// Interface that can be implemented by TemplateLoader-s that maintain some sort of internal state (i.e.\nInterface StatefulTemplateLoader;\n// FreeMarker loads template \"files\" through objects that implement this interface, thus the templates need not be real files, and can come from any kind of data source (like classpath, servlet context, database, etc).\nInterface TemplateLoader;\n// Logical \"and\" operation among the given matchers.\nClass AndMatcher;\n// A TemplateLoader that uses a Map with byte[] as its source of templates.\nClass ByteArrayTemplateLoader;\n// A TemplateLoader that can load templates from the \"classpath\".\nClass ClassTemplateLoader;\n// Returns the given TemplateConfiguration directly, or another TemplateConfigurationFactory's result, when the specified matcher matches the template source.\nClass ConditionalTemplateConfigurationFactory;\n// Matches the file extension; unlike other matchers, by default case insensitive.\nClass FileExtensionMatcher;\n// As opposed to PathGlobMatcher, it only compares the \"file name\" part (the part after the last /) of the source name with the given glob.\nClass FileNameGlobMatcher;\n// A TemplateLoader that uses files inside a specified directory as the source of templates.\nClass FileTemplateLoader;\n// Returns the first non-null result of the child factories, ignoring all further child factories.\nClass FirstMatchTemplateConfigurationFactory;\n// Returns the merged results of all the child factories.\nClass MergingTemplateConfigurationFactory;\n// A cache storage that implements a two-level Most Recently Used cache.\nClass MruCacheStorage;\n// A TemplateLoader that uses a set of other loaders to load the templates.\nClass MultiTemplateLoader;\n// Logical \"not\" operation on the given matcher.\nClass NotMatcher;\n// A cache storage that doesn't store anything.\nClass NullCacheStorage;\n// Logical \"or\" operation among the given matchers.\nClass OrMatcher;\n", "des": "Template loading and caching."}
{"index": 619, "repo": "freemarker-2.3.32", "code": "package core\n\n// Gives information about the place where a directive is called from, also lets you attach a custom data object to that place.\nInterface DirectiveCallPlace;\n// Don't implement this interface yourself; use the existing implementation(s).\nInterface ParserConfiguration;\n// Used by built-ins and other template language features that get a class based on a string.\nInterface TemplateClassResolver;\n// \"markup output\" template language data-type; stores markup (some kind of \"rich text\" / structured format, as opposed to plain text) that meant to be printed as template output.\nInterface TemplateMarkupOutputModel<MO extends TemplateMarkupOutputModel<MO>>;\n// Defines the methods in CFormat that are the same for all JSON-like languages.\nClass AbstractJSONLikeFormat;\n// Creates an alias to another format, so that the format can be referred to with a simple name in the template, rather than as a concrete pattern or other kind of format string.\nClass AliasTemplateDateFormatFactory;\n// Creates an alias to another format, so that the format can be referred to with a simple name in the template, rather than as a concrete pattern or other kind of format string.\nClass AliasTemplateNumberFormatFactory;\n// Used for implementing the arithmetic operations and number comparisons in the template language.\nClass ArithmeticEngine;\n// This is the default arithmetic engine in FreeMarker.\nClass ArithmeticEngine.BigDecimalEngine;\n// An arithmetic engine that conservatively widens the operation arguments to extent that they can hold the result of the operation.\nClass ArithmeticEngine.ConservativeEngine;\n// \nClass BuiltInForNodeEx;\n// Defines a format (usually a computer language) that's used by the c, cn built-ins, and for the \"c\" and \"computer\" number_format, and the \"c\" boolean_format.\nClass CFormat;\n// Represents two markup formats nested into each other.\nClass CombinedMarkupOutputFormat;\n// Will be removed (main method in a library, often classified as CWE-489 \"Leftover Debug Code\").\nClass CommandLine;\n// Common superclass for implementing MarkupOutputFormat-s that use a CommonTemplateMarkupOutputModel subclass.\nClass CommonMarkupOutputFormat<MO extends CommonTemplateMarkupOutputModel>;\n", "des": "The seldom used or advanced parts of the fundamental FreeMarker API, compared to freemarker.template."}
{"index": 620, "repo": "freemarker-2.3.32", "code": "package debug\n\n// Represents the debugger-side mirror of a debugged Environment object in the remote VM.\nInterface DebuggedEnvironment;\n// The main debugger interface.\nInterface Debugger;\n// An interface for components that wish to receive debugging events.\nInterface DebuggerListener;\n// Represents the debugger-side mirror of a TemplateModel object, a Template object, or a Configuration object.\nInterface DebugModel;\n// Represents a breakpoint location consisting of a template name and a line number.\nClass Breakpoint;\n// A utility class that allows you to connect to the FreeMarker debugger service running on a specific host and port.\nClass DebuggerClient;\n// Event describing a suspension of an environment (ie because it hit a breakpoint).\nClass EnvironmentSuspendedEvent;\n", "des": "Debugging API; experimental status, might change! This is to support debugging in IDE-s."}
{"index": 621, "repo": "freemarker-2.3.32", "code": "package ant\n\n// FMPP is a more complete solution.\nClass FreemarkerXmlTask;\n// Used internally, public for technical reasons only.\nClass JythonAntTask;\n// Used internally, public for technical reasons only.\nClass UnlinkedJythonOperationsImpl;\n", "des": "Ant task to transform XML files with a template; a more powerful alternative is FMPP."}
{"index": 622, "repo": "freemarker-2.3.32", "code": "package beans\n\n// Returned by MemberAccessPolicy.forClass(Class).\nInterface ClassMemberAccessPolicy;\n// Implement this to restrict what class members (methods, fields, constructors) are accessible from templates.\nInterface MemberAccessPolicy;\n// Used for customizing how the methods are visible from templates, via BeansWrapper.setMethodAppearanceFineTuner(MethodAppearanceFineTuner).\nInterface MethodAppearanceFineTuner;\n// Marker interface useful when used together with MethodAppearanceFineTuner and such customizer objects, to indicate that it doesn't contain reference to the ObjectWrapper (so beware with non-static inner classes) and can be and should be used in call introspection cache keys.\nInterface SingletonCustomizer;\n// A class that will wrap an arbitrary array into TemplateCollectionModel and TemplateSequenceModel interfaces.\nClass ArrayModel;\n// A class that will wrap an arbitrary object into TemplateHashModel interface allowing calls to arbitrary property getters and invocation of accessible methods on the object from a template using the object.foo to access properties and object.bar(arg1, arg2) to invoke methods on it.\nClass BeanModel;\n// \nClass BeansModelCache;\n// ObjectWrapper that is able to expose the Java API of arbitrary Java objects.\nClass BeansWrapper;\n// Used for MethodAppearanceFineTuner.process(freemarker.ext.beans.BeansWrapper.MethodAppearanceDecisionInput, freemarker.ext.beans.BeansWrapper.MethodAppearanceDecision) to store the results; see there.\nClass BeansWrapper.MethodAppearanceDecision;\n// Used for MethodAppearanceFineTuner.process(freemarker.ext.beans.BeansWrapper.MethodAppearanceDecisionInput, freemarker.ext.beans.BeansWrapper.MethodAppearanceDecision) as input parameter; see there.\nClass BeansWrapper.MethodAppearanceDecisionInput;\n// Gets/creates a BeansWrapper singleton instance that's already configured as specified in the properties of this object; this is recommended over using the BeansWrapper constructors.\nClass BeansWrapperBuilder;\n// Holds BeansWrapper configuration settings and defines their defaults.\nClass BeansWrapperConfiguration;\n", "des": "The default object wrapper of FreeMarker uses this to expose Java Beans and POJO-s to templates."}
{"index": 623, "repo": "freemarker-2.3.32", "code": "package dom\n\n// \nInterface XPathSupport;\n// A base class for wrapping a single W3C DOM Node as a FreeMarker template model.\nClass NodeModel;\n// Will be removed (main method in a library, often classified as CWE-489 \"Leftover Debug Code\").\nClass Transform;\n", "des": "Exposes DOM XML nodes to templates as easily traversable trees; see in the Manual."}
{"index": 624, "repo": "freemarker-2.3.32", "code": "package jdom\n\n// Use NodeModel instead.\nClass NodeListModel;\n", "des": "Deprecated, use W3C DOM (freemarker.ext.dom) instead; Exposes JDOM XML nodes to templates."}
{"index": 625, "repo": "freemarker-2.3.32", "code": "package jsp\n\n// An instance of this class should be registered as a <listener> in the web.xml descriptor in order to correctly dispatch events to event listeners that are specified in TLD files.\nClass EventForwarding;\n// This feature is not supported anymore, also, it uses the deprecated default Configuration.\nClass FreemarkerTag;\n// A hash model associated with a servlet context that can load JSP tag libraries associated with that servlet context.\nClass TaglibFactory;\n// To search TLD-s under META-INF/**/*.tld inside classpath root containers, that is, in directories and jar-s that are in the classpath (or are visible for the class loader otherwise).\nClass TaglibFactory.ClasspathMetaInfTldSource;\n// When it occurs in the TaglibFactory.MetaInfTldSource list, all TaglibFactory.MetaInfTldSource-s before it will be disabled.\nClass TaglibFactory.ClearMetaInfTldSource;\n// A location within which we will look for META-INF/**/*.tld-s.\nClass TaglibFactory.MetaInfTldSource;\n// To search TLD-s under sevletContext:/WEB-INF/lib/*.{jar,zip}/META-INF/**/*.tld, as requested by the JSP specification.\nClass TaglibFactory.WebInfPerLibJarMetaInfTldSource;\n", "des": "Classes for two-way FreeMarker-JSP integration."}
{"index": 626, "repo": "freemarker-2.3.32", "code": "package jython\n\n// Model for Jython dictionaries (PyDictionary and PyStringMap).\nClass JythonHashModel;\n// Generic model for arbitrary Jython objects.\nClass JythonModel;\n// Model for Jython numeric objects (PyInteger, PyLong, PyFloat).\nClass JythonNumberModel;\n// Model for Jython sequence objects (PySequence descendants).\nClass JythonSequenceModel;\n// Functions that has a different implementation depending on the Jython version used.\nClass JythonVersionAdapter;\n// An object wrapper that wraps Jython objects into FreeMarker template models and vice versa.\nClass JythonWrapper;\n", "des": "Exposes Jython objects to templates."}
{"index": 627, "repo": "freemarker-2.3.32", "code": "package rhino\n\n// \nClass RhinoFunctionModel;\n// \nClass RhinoScriptableModel;\n// \nClass RhinoWrapper;\n", "des": "Exposes Rhino (ECMAScript) objects to templates."}
{"index": 628, "repo": "freemarker-2.3.32", "code": "package servlet\n\n// An extension of SimpleHash that looks up keys in the hash, then in the request, session, and servlet context scopes.\nClass AllHttpScopesHashModel;\n// FreeMarker MVC View servlet that can be used similarly to JSP views.\nClass FreemarkerServlet;\n// TemplateHashModel wrapper for a HttpServletRequest attributes.\nClass HttpRequestHashModel;\n// TemplateHashModel wrapper for a HttpServletRequest parameters.\nClass HttpRequestParametersHashModel;\n// TemplateHashModel wrapper for a HttpSession attributes.\nClass HttpSessionHashModel;\n// A model that when invoked with a 'path' parameter will perform a servlet include.\nClass IncludePage;\n// TemplateHashModel wrapper for a ServletContext attributes.\nClass ServletContextHashModel;\n", "des": "Servlet for legacy \"Model 2\" frameworks that allows using FreeMarker templates instead of JSP as the MVC View (see in the Manual)."}
{"index": 629, "repo": "freemarker-2.3.32", "code": "package util\n\n// Interface used to create various wrapper models in the ModelCache.\nInterface ModelFactory;\n// A generic interface for template models that wrap some underlying object, and wish to provide access to that wrapped object.\nInterface WrapperTemplateModel;\n// Use IdentityHashMap instead.\nClass IdentityHashMap;\n// Internally used by various wrapper implementations to implement model caching.\nClass ModelCache;\n", "des": "Various classes used by freemarker.ext but might be useful outside it too."}
{"index": 630, "repo": "freemarker-2.3.32", "code": "package xml\n\n// Use NodeModel instead.\nClass NodeListModel;\n", "des": "Deprecated, use W3C DOM with freemarker.ext.dom instead; Exposes XML from DOM, dom4j or JDOM nodes, uniformly."}
{"index": 631, "repo": "freemarker-2.3.32", "code": "package log\n\n// Delegates logger creation to an actual logging library.\nClass Logger;\n", "des": "Logging facility; dispatches FreeMarker log messages to the chosen logger library."}
{"index": 632, "repo": "freemarker-2.3.32", "code": "package template\n\n// A TemplateModel that can be unwrapped and then it considers a provided desired (hint) class.\nInterface AdapterTemplateModel;\n// Used for the attempt_exception_reported configuration setting.\nInterface AttemptExceptionReporter;\n// Maps Java objects to the type-system of FreeMarker Template Language (see the TemplateModel interfaces).\nInterface ObjectWrapper;\n// Experimental - subject to change: Adds functionality to ObjectWrapper that creates a plain Java object from a TemplateModel.\nInterface ObjectWrapperAndUnwrapper;\n// \"boolean\" template language data type; same as in Java; either true or false.\nInterface TemplateBooleanModel;\n// \"collection\" template language data type: a collection of values that can be enumerated, but can't be or not meant to be accessed by index or key, nor the number of elements in it is known.\nInterface TemplateCollectionModel;\n// \"collection\" template language data type: Adds size/emptiness querybility to TemplateCollectionModel.\nInterface TemplateCollectionModelEx;\n// \"date\", \"time\" and \"date-time\" template language data types: corresponds to Date.\nInterface TemplateDateModel;\n// Represents the nested content of a directive (TemplateDirectiveModel) invocation.\nInterface TemplateDirectiveBody;\n// \"directive\" template language data type: used as user-defined directives (much like macros) in templates.\nInterface TemplateDirectiveModel;\n// Used for the template_exception_handler configuration setting.\nInterface TemplateExceptionHandler;\n// \"hash\" template language data type: an object that contains other objects accessible through string keys (sub-variable names).\nInterface TemplateHashModel;\n// \"extended hash\" template language data type; extends TemplateHashModel by allowing iterating through its keys and values.\nInterface TemplateHashModelEx;\n// Adds key-value pair listing capability to TemplateHashModelEx.\nInterface TemplateHashModelEx2;\n// A key-value pair in a hash; used for TemplateHashModelEx2.KeyValuePairIterator.\nInterface TemplateHashModelEx2.KeyValuePair;\n// Iterates over the key-value pairs in a hash.\nInterface TemplateHashModelEx2.KeyValuePairIterator;\n// Use TemplateMethodModelEx instead.\nInterface TemplateMethodModel;\n// \"extended method\" template language data type: Objects that act like functions.\nInterface TemplateMethodModelEx;\n", "des": "The fundamental, most commonly used API-s of FreeMarker; start with Configuration (see also the Getting Started in the Manual.)"}
{"index": 633, "repo": "freemarker-2.3.32", "code": "package utility\n\n// Used internally by DateUtil; don't use its implementations for anything else.\nInterface DateUtil.CalendarFieldsToDateConverter;\n// Used internally by DateUtil; don't use its implementations for anything else.\nInterface DateUtil.DateToISO8601CalendarFactory;\n// Used for the trivial cases of the factory pattern.\nInterface ObjectFactory<T>;\n// Experimental - subject to change: Implemented by ObjectWrapper-s to help TemplateModel-s to implement the someValue?api operation.\nInterface ObjectWrapperWithAPISupport;\n// Experimental - subject to change: Union of the interfaces that a typical feature rich ObjectWrapper is expected to implement.\nInterface RichObjectWrapper;\n// Implemented by objects that can be made permanently read-only.\nInterface WriteProtectable;\n// Use block-assignments instead, like <assign x>...</assign>.\nClass CaptureOutput;\n// \nClass ClassUtil;\n// Not needed anymore, as FreeMarker now requires higher than Java 1.3\nClass Collections12;\n// \nClass CollectionUtils;\n// Frequently used constant TemplateModel values.\nClass Constants;\n// Date and time related utilities.\nClass DateUtil;\n// Non-thread-safe implementation that hard-references a calendar internally.\nClass DateUtil.TrivialCalendarFieldsToDateConverter;\n// Non-thread-safe factory that hard-references a calendar internally.\nClass DateUtil.TrivialDateToISO8601CalendarFactory;\n// Utility methods for unwrapping TemplateModel-s.\nClass DeepUnwrap;\n// Use NodeModel instead\nClass DOMNodeModel;\n// Gives FreeMarker the the ability to execute external commands.\nClass Execute;\n// Performs an HTML escape of a given template fragment.\nClass HtmlEscape;\n// A crude first pass at an embeddable Jython interpreter\nClass JythonRuntime;\n// Transformer that supports FreeMarker legacy behavior: all newlines appearing within the transformed area will be transformed into the platform's default newline.\nClass NormalizeNewlines;\n// A Writer that simply drops what it gets.\nClass NullWriter;\n// Number- and math-related utilities.\nClass NumberUtil;\n// An object that you can make available in a template to instantiate arbitrary beans-wrapped objects in a template.\nClass ObjectConstructor;\n// \nClass OptimizerUtil;\n// \nClass SecurityUtilities;\n", "des": "Various classes used by core FreeMarker code but might be useful outside of it too."}
{"index": 634, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package server\n\n// Extends Thread and provides an implementation that is used for processing the AM heart beat request asynchronously and sending back the response using the callback method registered with the system.\nClass AMHeartbeatRequestHandler;\n// Data structure that encapsulates AllocateRequest and AsyncCallback instance.\nClass AMHeartbeatRequestHandler.AsyncAllocateRequestInfo;\n// A component that sits in between AMRMClient(Impl) and Yarn RM.\nClass AMRMClientRelayer;\n// \nClass RMNMSecurityInfoClass;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 635, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package records\n\n// \nInterface MasterKey;\n// \nClass AppCollectorData;\n// Used to hold max wait time / queue length information to be passed back to the NodeManager.\nClass ContainerQueuingLimit;\n// NodeHealthStatus is a summary of the health status of the node.\nClass NodeHealthStatus;\n// NodeStatus is a summary of the status of the node.\nClass NodeStatus;\n// OpportunisticContainersStatus captures information pertaining to the state of execution of the opportunistic containers within a node.\nClass OpportunisticContainersStatus;\n// The NodeManager is instructed to perform the given action.\nEnum NodeAction;\n", "des": "Server records."}
{"index": 636, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package pb\n\n// \nClass AppCollectorDataPBImpl;\n// Implementation of ContainerQueuingLimit interface.\nClass ContainerQueuingLimitPBImpl;\n// \nClass MasterKeyPBImpl;\n// \nClass NodeHealthStatusPBImpl;\n// \nClass NodeStatusPBImpl;\n// Protocol Buffer implementation of OpportunisticContainersStatus.\nClass OpportunisticContainersStatusPBImpl;\n", "des": "Server records PB implementations."}
{"index": 637, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package failover\n\n// Utility class that creates proxy for specified protocols when federation is enabled.\nClass FederationProxyProviderUtil;\n// A FailoverProxyProvider implementation that uses the FederationStateStore to determine the ResourceManager to connect to.\nClass FederationRMFailoverProxyProvider<T>;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 638, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package policies\n\n// This interface provides a general method to reinitialize a policy.\nInterface ConfigurableFederationPolicy;\n// Base abstract class for a weighted ConfigurableFederationPolicy.\nClass AbstractConfigurableFederationPolicy;\n// Context to (re)initialize a FederationAMRMProxyPolicy and FederationRouterPolicy.\nClass FederationPolicyInitializationContext;\n// Helper class used to factor out common validation steps for policies.\nClass FederationPolicyInitializationContextValidator;\n// Utility class for Federation policy.\nClass FederationPolicyUtils;\n// This class provides a facade to the policy subsystem, and handles the lifecycle of policies (e.g., refresh from remote, default behaviors etc.).\nClass RouterPolicyFacade;\n", "des": "Federation Policies."}
{"index": 639, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package amrmproxy\n\n// Implementors of this interface provide logic to split the list of ResourceRequests received by the AM among various RMs.\nInterface FederationAMRMProxyPolicy;\n// Base abstract class for FederationAMRMProxyPolicy implementations, that provides common validation for reinitialization.\nClass AbstractAMRMProxyPolicy;\n// An implementation of the FederationAMRMProxyPolicy that simply broadcasts each ResourceRequest to all the available sub-clusters.\nClass BroadcastAMRMProxyPolicy;\n// An implementation of the FederationAMRMProxyPolicy that simply sends the ResourceRequest to the home subcluster.\nClass HomeAMRMProxyPolicy;\n// An implementation of the FederationAMRMProxyPolicy interface that carefully multicasts the requests with the following behavior:\nClass LocalityMulticastAMRMProxyPolicy;\n// An implementation of the FederationAMRMProxyPolicy that simply rejects all requests.\nClass RejectAMRMProxyPolicy;\n", "des": "AMRMPRoxy policies."}
{"index": 640, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package dao\n\n// This is a DAO class for the configuration of parameteres for federation policies.\nClass WeightedPolicyInfo;\n", "des": "DAO objects for serializing/deserializing policy configurations."}
{"index": 641, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package exceptions\n\n// Generic policy exception.\nClass FederationPolicyException;\n// This exception is thrown when the initialization of a federation policy is not successful.\nClass FederationPolicyInitializationException;\n// This exception is thrown when policies cannot locate any active cluster.\nClass NoActiveSubclustersException;\n// This exception is thrown whenever a policy is given a SubClusterId that is unknown.\nClass UnknownSubclusterException;\n", "des": "Exceptions for policies."}
{"index": 642, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package manager\n\n// Implementors need to provide the ability to serliaze a policy and its configuration as a SubClusterPolicyConfiguration, as well as provide (re)initialization mechanics for the underlying FederationAMRMProxyPolicy and FederationRouterPolicy.\nInterface FederationPolicyManager;\n// This class provides basic implementation for common methods that multiple policies will need to implement.\nClass AbstractPolicyManager;\n// Policy that routes applications via hashing of their queuename, and broadcast resource requests.\nClass HashBroadcastPolicyManager;\n// Policy manager which uses the UniformRandomRouterPolicy for the Router and HomeAMRMProxyPolicy as the AMRMProxy policy to find the RM.\nClass HomePolicyManager;\n// Policy that allows operator to configure \"weights\" for routing.\nClass PriorityBroadcastPolicyManager;\n// This class represents a simple implementation of a FederationPolicyManager.\nClass RejectAllPolicyManager;\n// This class represents a simple implementation of a FederationPolicyManager.\nClass UniformBroadcastPolicyManager;\n// Policy that allows operator to configure \"weights\" for routing.\nClass WeightedLocalityPolicyManager;\n", "des": "Various implementation of FederationPolicyManager."}
{"index": 643, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package router\n\n// Implements the logic for determining the routing of an application submission based on a policy.\nInterface FederationRouterPolicy;\n// Base abstract class for FederationRouterPolicy implementations, that provides common validation for reinitialization.\nClass AbstractRouterPolicy;\n// This FederationRouterPolicy pick a subcluster based on the hash of the job's queue name.\nClass HashBasedRouterPolicy;\n// This implements a simple load-balancing policy.\nClass LoadBasedRouterPolicy;\n// This policy selects the subcluster depending on the node where the Client wants to run its application.\nClass LocalityRouterPolicy;\n// This implements a policy that interprets \"weights\" as a ordered list of preferences among sub-clusters.\nClass PriorityRouterPolicy;\n// This FederationRouterPolicy simply rejects all incoming requests.\nClass RejectRouterPolicy;\n// This simple policy picks at uniform random among any of the currently active subclusters.\nClass UniformRandomRouterPolicy;\n// This policy implements a weighted random sample among currently active sub-clusters.\nClass WeightedRandomRouterPolicy;\n", "des": "Router policies."}
{"index": 644, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package resolver\n\n// An utility that helps to determine the sub-cluster that a specified node or rack belongs to.\nInterface SubClusterResolver;\n// Partial implementation of SubClusterResolver, containing basic implementations of the read methods.\nClass AbstractSubClusterResolver;\n// Default simple sub-cluster and rack resolver class.\nClass DefaultSubClusterResolverImpl;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 645, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package store\n\n// FederationApplicationHomeSubClusterStore maintains the state of all Applications that have been submitted to the federated cluster.\nInterface FederationApplicationHomeSubClusterStore;\n// FederationMembershipStateStore maintains the state of all subcluster(s) as encapsulated by SubClusterInfo for all the subcluster(s) that are participating in federation.\nInterface FederationMembershipStateStore;\n// The FederationPolicyStore provides a key-value interface to access the policies configured for the system.\nInterface FederationPolicyStore;\n// FederationStore extends the three interfaces used to coordinate the state of a federated cluster: FederationApplicationHomeSubClusterStore, FederationMembershipStateStore, and FederationPolicyStore.\nInterface FederationStateStore;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 646, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package exception\n\n// Exception thrown by the FederationStateStore.\nClass FederationStateStoreException;\n// Exception thrown by the FederationMembershipStateStoreInputValidator, FederationApplicationHomeSubClusterStoreInputValidator, FederationPolicyStoreInputValidator if the input is invalid.\nClass FederationStateStoreInvalidInputException;\n// Exception thrown by the FederationStateStore, if it is a retriable exception.\nClass FederationStateStoreRetriableException;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 647, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package impl\n\n// In-memory implementation of FederationStateStore.\nClass MemoryFederationStateStore;\n// SQL implementation of FederationStateStore.\nClass SQLFederationStateStore;\n// ZooKeeper implementation of FederationStateStore.\nClass ZookeeperFederationStateStore;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 648, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package metrics\n\n// Performance metrics for FederationStateStore implementations.\nClass FederationStateStoreClientMetrics;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 649, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package records\n\n// The request sent by the Router to Federation state store to map the home subcluster of a newly submitted application.\nClass AddApplicationHomeSubClusterRequest;\n// AddApplicationHomeSubClusterResponse contains the answer from the FederationApplicationHomeSubClusterStore to a request to insert a newly generated applicationId and its owner.\nClass AddApplicationHomeSubClusterResponse;\n// ApplicationHomeSubCluster is a report of the runtime information of the application that is running in the federated cluster.\nClass ApplicationHomeSubCluster;\n// The request to Federation state store to delete the mapping of home subcluster of a submitted application.\nClass DeleteApplicationHomeSubClusterRequest;\n// DeleteApplicationHomeSubClusterResponse contains the answer from the FederationApplicationHomeSubClusterStore to a request to delete the mapping of home subcluster of a submitted application.\nClass DeleteApplicationHomeSubClusterResponse;\n// Request class to obtain the home sub-cluster for the specified ApplicationId.\nClass GetApplicationHomeSubClusterRequest;\n// The response sent by Federation state store to a query for the home subcluster of a newly submitted application.\nClass GetApplicationHomeSubClusterResponse;\n// Request class to obtain the home sub-cluster mapping of all active applications.\nClass GetApplicationsHomeSubClusterRequest;\n// The response sent by Federation state store to a query for the home subcluster of all submitted applications.\nClass GetApplicationsHomeSubClusterResponse;\n// Request class to obtain information about a sub-cluster identified by its SubClusterId.\nClass GetSubClusterInfoRequest;\n// Response to a query with SubClusterInfo about a sub-cluster.\nClass GetSubClusterInfoResponse;\n// GetSubClusterPoliciesConfigurationsRequest is a request to the FederationPolicyStore to obtain all policy configurations.\nClass GetSubClusterPoliciesConfigurationsRequest;\n// GetSubClusterPolicyConfigurationResponse contains the answer from the FederationPolicyStore to a request to get all the policies configured in the system via a SubClusterPolicyConfiguration.\nClass GetSubClusterPoliciesConfigurationsResponse;\n// GetSubClusterPolicyConfigurationRequest is a request to the FederationPolicyStore to get the configuration of a policy for a given queue.\nClass GetSubClusterPolicyConfigurationRequest;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 650, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package pb\n\n// Protocol buffer based implementation of AddApplicationHomeSubClusterRequest.\nClass AddApplicationHomeSubClusterRequestPBImpl;\n// Protocol buffer based implementation of AddApplicationHomeSubClusterResponse.\nClass AddApplicationHomeSubClusterResponsePBImpl;\n// Protocol buffer based implementation of ApplicationHomeSubCluster.\nClass ApplicationHomeSubClusterPBImpl;\n// Protocol buffer based implementation of DeleteApplicationHomeSubClusterRequest.\nClass DeleteApplicationHomeSubClusterRequestPBImpl;\n// Protocol buffer based implementation of DeleteApplicationHomeSubClusterResponse.\nClass DeleteApplicationHomeSubClusterResponsePBImpl;\n// Protocol buffer based implementation of GetApplicationHomeSubClusterRequest.\nClass GetApplicationHomeSubClusterRequestPBImpl;\n// Protocol buffer based implementation of GetApplicationHomeSubClusterResponse.\nClass GetApplicationHomeSubClusterResponsePBImpl;\n// Protocol buffer based implementation of GetApplicationsHomeSubClusterRequest.\nClass GetApplicationsHomeSubClusterRequestPBImpl;\n// Protocol buffer based implementation of GetApplicationsHomeSubClusterResponse.\nClass GetApplicationsHomeSubClusterResponsePBImpl;\n// Protocol buffer based implementation of GetSubClusterInfoRequest.\nClass GetSubClusterInfoRequestPBImpl;\n// Protocol buffer based implementation of GetSubClusterInfoResponse.\nClass GetSubClusterInfoResponsePBImpl;\n// Protocol buffer based implementation of GetSubClusterPoliciesConfigurationsRequest.\nClass GetSubClusterPoliciesConfigurationsRequestPBImpl;\n// Protocol buffer based implementation of GetSubClusterPoliciesConfigurationsResponse.\nClass GetSubClusterPoliciesConfigurationsResponsePBImpl;\n// Protocol buffer based implementation of GetSubClusterPolicyConfigurationRequest.\nClass GetSubClusterPolicyConfigurationRequestPBImpl;\n// Protocol buffer based implementation of GetSubClusterPolicyConfigurationResponse.\nClass GetSubClusterPolicyConfigurationResponsePBImpl;\n// Protocol buffer based implementation of GetSubClustersInfoRequest.\nClass GetSubClustersInfoRequestPBImpl;\n// Protocol buffer based implementation of GetSubClustersInfoResponse.\nClass GetSubClustersInfoResponsePBImpl;\n// Protocol buffer based implementation of SetSubClusterPolicyConfigurationRequest.\nClass SetSubClusterPolicyConfigurationRequestPBImpl;\n// Protocol buffer based implementation of SetSubClusterPolicyConfigurationResponse.\nClass SetSubClusterPolicyConfigurationResponsePBImpl;\n// Protocol buffer based implementation of SubClusterDeregisterRequest.\nClass SubClusterDeregisterRequestPBImpl;\n// Protocol buffer based implementation of SubClusterDeregisterResponse.\nClass SubClusterDeregisterResponsePBImpl;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 651, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package utils\n\n// Utility class to validate the inputs to FederationApplicationHomeSubClusterStore, allows a fail fast mechanism for invalid user inputs.\nClass FederationApplicationHomeSubClusterStoreInputValidator;\n// Utility class to validate the inputs to FederationMembershipStateStore, allows a fail fast mechanism for invalid user inputs.\nClass FederationMembershipStateStoreInputValidator;\n// Utility class to validate the inputs to FederationPolicyStore, allows a fail fast mechanism for invalid user inputs.\nClass FederationPolicyStoreInputValidator;\n// Common utility methods used by the store implementations.\nClass FederationStateStoreUtils;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 652, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package utils\n\n// Encapsulates a method that has one parameter and returns a value of the type specified by the TResult parameter.\nInterface FederationStateStoreFacade.Func<T,TResult>;\n// Helper class that handles reads and writes to Yarn Registry to support UAM HA and second attempt.\nClass FederationRegistryClient;\n// The FederationStateStoreFacade is an utility wrapper that provides singleton access to the Federation state store.\nClass FederationStateStoreFacade;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 653, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package metrics\n\n// Metrics for FederationInterceptor Internals.\nClass AMRMClientRelayerMetrics;\n// Metrics for Opportunistic Scheduler.\nClass OpportunisticSchedulerMetrics;\n// Easier classification of request types for logging metrics.\nEnum AMRMClientRelayerMetrics.RequestType;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 654, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package scheduler\n\n// The DistributedOpportunisticContainerAllocator allocates containers on a given list of nodes, after modifying the container sizes to respect the limits set by the ResourceManager.\nClass DistributedOpportunisticContainerAllocator;\n// Base abstract class for Opportunistic container allocations, that provides common functions required for Opportunistic container allocation.\nClass OpportunisticContainerAllocator;\n// This class encapsulates container and resourceName for an allocation.\nClass OpportunisticContainerAllocator.Allocation;\n// This class encapsulates application specific parameters used to build a Container.\nClass OpportunisticContainerAllocator.AllocationParams;\n// A Container Id Generator.\nClass OpportunisticContainerAllocator.ContainerIdGenerator;\n// This class encapsulates Resource Request and provides requests per node and rack.\nClass OpportunisticContainerAllocator.EnrichedResourceRequest;\n// Class that includes two lists of ResourceRequests: one for GUARANTEED and one for OPPORTUNISTIC ResourceRequests.\nClass OpportunisticContainerAllocator.PartitionedResourceRequests;\n// This encapsulates application specific information used by the Opportunistic Container Allocator to allocate containers.\nClass OpportunisticContainerContext;\n// A set of resource requests of the same scheduler key ResourceRequestSetKey.\nClass ResourceRequestSet;\n// The scheduler key for a group of ResourceRequest.\nClass ResourceRequestSetKey;\n// Composite key for outstanding scheduler requests for any schedulable entity.\nClass SchedulerRequestKey;\n", "des": "Utility classes used for Scheduling."}
{"index": 655, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package service\n\n// Marker interface for starting services from RM.\nInterface SystemServiceManager;\n", "des": "Package org.apache.hadoop.yarn.server.service contains service related classes."}
{"index": 656, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package security\n\n// Timeline authentication filter provides delegation token support for ATSv1 and ATSv2.\nClass TimelineAuthenticationFilter;\n// Initializes TimelineAuthenticationFilter which provides support for Kerberos HTTP SPNEGO authentication.\nClass TimelineAuthenticationFilterInitializer;\n// Abstract implementation of delegation token manager service for different versions of timeline service.\nClass TimelineDelgationTokenSecretManagerService;\n", "des": "Package org.apache.hadoop.server.timeline.security contains classes related to timeline authentication filters and abstract delegation token service for ATSv1 and ATSv2."}
{"index": 657, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package uam\n\n// A service that manages a pool of UAM managers in UnmanagedApplicationManager.\nClass UnmanagedAMPoolManager;\n// UnmanagedApplicationManager is used to register unmanaged application and negotiate for resources from resource managers.\nClass UnmanagedApplicationManager;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 658, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package timeline\n\n// Set of utility methods to be used across timeline reader and collector.\nClass TimelineServerUtils;\n", "des": "Package org.apache.hadoop.server.util.timeline contains utility classes used by ATSv1 and ATSv2 on the server side."}
{"index": 659, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package csi\n\n// CSI constants.\nClass CsiConstants;\n// Volume capability range that specified in a volume resource request, this range defines the desired min/max capacity.\nClass VolumeCapabilityRange;\n// The builder used to build a VolumeCapabilityRange instance.\nClass VolumeCapabilityRange.VolumeCapabilityBuilder;\n// Unique ID for a volume.\nClass VolumeId;\n// VolumeMetaData defines all valid info for a CSI compatible volume.\nClass VolumeMetaData;\n// The builder used to build a VolumeMetaData instance.\nClass VolumeMetaData.VolumeSpecBuilder;\n", "des": "This package contains common volume related classes."}
{"index": 660, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package exception\n\n// This exception is thrown when a volume is found not valid.\nClass InvalidVolumeException;\n// Base class for all volume related exceptions.\nClass VolumeException;\n// Exception throws when volume provisioning is failed.\nClass VolumeProvisioningException;\n", "des": "This package contains volume related exception classes."}
{"index": 661, "repo": "hadoop-yarn-server-common-3.3.6", "code": "package webapp\n\n// Classes implementing this interface are used in the LogServlet for providing various application related information.\nInterface AppInfoProvider;\n// Common web service parameters which could be used in RM/NM/AHS WebService.\nInterface YarnWebServiceParams;\n// \nClass AppAttemptBlock;\n// \nClass AppBlock;\n// \nClass AppsBlock;\n// \nClass ContainerBlock;\n// \nClass ErrorsAndWarningsBlock;\n// \nClass ErrorsAndWarningsBlock.ErrorMetrics;\n// \nClass ErrorsAndWarningsBlock.MetricsBase;\n// \nClass ErrorsAndWarningsBlock.WarningMetrics;\n// Extracts aggregated logs and related information.\nClass LogServlet;\n// Support only ATSv2 client only.\nClass LogWebService;\n// Log web service utils class.\nClass LogWebServiceUtils;\n// \nClass WebPageUtils;\n// \nClass WebServices;\n// WrappedLogMetaRequest is wrapping a log request initiated by the client.\nClass WrappedLogMetaRequest;\n// \nClass WrappedLogMetaRequest.Builder;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 662, "repo": "commons-lang3-3.12.0", "code": "package lang3\n\n// Use FailableBiConsumer.\nInterface Functions.FailableBiConsumer<O1,O2,T extends Throwable>;\n// Use FailableBiFunction.\nInterface Functions.FailableBiFunction<O1,O2,R,T extends Throwable>;\n// Use FailableBiPredicate.\nInterface Functions.FailableBiPredicate<O1,O2,T extends Throwable>;\n// Use FailableCallable.\nInterface Functions.FailableCallable<R,T extends Throwable>;\n// Use FailableConsumer.\nInterface Functions.FailableConsumer<O,T extends Throwable>;\n// Use FailableFunction.\nInterface Functions.FailableFunction<I,R,T extends Throwable>;\n// Use FailablePredicate.\nInterface Functions.FailablePredicate<I,T extends Throwable>;\n// Use FailableRunnable.\nInterface Functions.FailableRunnable<T extends Throwable>;\n// Use FailableSupplier.\nInterface Functions.FailableSupplier<R,T extends Throwable>;\n// A predicate for selecting threadgroups.\nInterface ThreadUtils.ThreadGroupPredicate;\n// A predicate for selecting threads.\nInterface ThreadUtils.ThreadPredicate;\n// Helper methods for working with Annotation instances.\nClass AnnotationUtils;\n// An utility class for the os.arch System Property.\nClass ArchUtils;\n// Sorts and returns arrays in the fluent style.\nClass ArraySorter;\n// Operations on arrays, primitive arrays (like int[]) and primitive wrapper arrays (like Integer[]).\nClass ArrayUtils;\n// Supports operations on bit-mapped fields.\nClass BitField;\n// Operations on boolean primitives and Boolean objects.\nClass BooleanUtils;\n// Java 7 introduced StandardCharsets, which defines these constants as Charset objects.\nClass CharEncoding;\n// Operations on CharSequence that are null safe.\nClass CharSequenceUtils;\n// A set of characters.\nClass CharSet;\n// Operations on CharSet instances.\nClass CharSetUtils;\n// Operations on char primitives and Character objects.\nClass CharUtils;\n// Helps work with ClassLoader.\nClass ClassLoaderUtils;\n// Operations regarding the classpath.\nClass ClassPathUtils;\n// Operates on classes without using reflection.\nClass ClassUtils;\n// Static methods to convert a type into another, with endianness and bit ordering awareness.\nClass Conversion;\n", "des": "Provides highly reusable static utility methods, chiefly concerned with adding value to the java.lang classes."}
{"index": 663, "repo": "commons-lang3-3.12.0", "code": "package arch\n\n// The Processor represents a microprocessor and defines some properties like architecture and type of the microprocessor.\nClass Processor;\n// The Processor.Arch enum defines the architecture of a microprocessor.\nEnum Processor.Arch;\n// The Processor.Type enum defines types of a microprocessor.\nEnum Processor.Type;\n", "des": "Provides classes to work with the values of the os.arch system property."}
{"index": 664, "repo": "commons-lang3-3.12.0", "code": "package builder\n\n// The Builder interface is designed to designate a class as a builder object in the Builder design pattern.\nInterface Builder<T>;\n// Diffable classes can be compared with other objects for differences.\nInterface Diffable<T>;\n// Assists in implementing Comparable.compareTo(Object) methods.\nClass CompareToBuilder;\n// A Diff contains the differences between two Diffable class fields.\nClass Diff<T>;\n// Assists in implementing Diffable.diff(Object) methods.\nClass DiffBuilder<T>;\n// A DiffResult contains a collection of the differences between two Diffable objects.\nClass DiffResult<T>;\n// Assists in implementing Object.equals(Object) methods.\nClass EqualsBuilder;\n// Assists in implementing Object.hashCode() methods.\nClass HashCodeBuilder;\n// Works with ToStringBuilder to create a \"deep\" toString.\nClass MultilineRecursiveToStringStyle;\n// Works with ToStringBuilder to create a \"deep\" toString.\nClass RecursiveToStringStyle;\n// Assists in implementing Diffable.diff(Object) methods.\nClass ReflectionDiffBuilder<T>;\n// Assists in implementing Object.toString() methods using reflection.\nClass ReflectionToStringBuilder;\n// Works with ToStringBuilder to create a toString.\nClass StandardToStringStyle;\n// Assists in implementing Object.toString() methods.\nClass ToStringBuilder;\n// Controls String formatting for ToStringBuilder.\nClass ToStringStyle;\n// Use this annotation to exclude a field from being used by the various reflectionEquals methods defined on EqualsBuilder.\nAnnotation Type EqualsExclude;\n// Use this annotation to exclude a field from being used by the various reflectionHashcode methods defined on HashCodeBuilder.\nAnnotation Type HashCodeExclude;\n// Use this annotation to exclude a field from being used by the ReflectionToStringBuilder.\nAnnotation Type ToStringExclude;\n// Use this annotation on the fields to get the summary instead of the detailed information when using ReflectionToStringBuilder.\nAnnotation Type ToStringSummary;\n", "des": "Assists in creating consistent equals(Object), toString(), hashCode(), and compareTo(Object) methods."}
{"index": 665, "repo": "commons-lang3-3.12.0", "code": "package compare\n\n// Utility library to provide helper methods for translating Comparable.compareTo(T) result into a boolean.\nClass ComparableUtils;\n// Provides access to the available methods\nClass ComparableUtils.ComparableCheckBuilder<A extends Comparable<A>>;\n// Compares Object's Object.toString() values.\nClass ObjectToStringComparator;\n", "des": "Provides classes to work with the Comparable and Comparator interfaces."}
{"index": 666, "repo": "commons-lang3-3.12.0", "code": "package concurrent\n\n// An interface describing a Circuit Breaker component.\nInterface CircuitBreaker<T>;\n// Definition of an interface for a wrapper around a calculation that takes a single parameter and returns a result.\nInterface Computable<I,O>;\n// Definition of an interface for the thread-safe initialization of objects.\nInterface ConcurrentInitializer<T>;\n// Base class for circuit breakers.\nClass AbstractCircuitBreaker<T>;\n// A specialized implementation of the ConcurrentInitializer interface based on an AtomicReference variable.\nClass AtomicInitializer<T>;\n// A specialized ConcurrentInitializer implementation which is similar to AtomicInitializer, but ensures that the AtomicSafeInitializer.initialize() method is called only once.\nClass AtomicSafeInitializer<T>;\n// A class that allows complex initialization operations in a background task.\nClass BackgroundInitializer<T>;\n// An implementation of the ThreadFactory interface that provides some configuration options for the threads it creates.\nClass BasicThreadFactory;\n// A builder class for creating instances of BasicThreadFactory.\nClass BasicThreadFactory.Builder;\n// A specialized BackgroundInitializer implementation that wraps a Callable object.\nClass CallableBackgroundInitializer<T>;\n// An utility class providing functionality related to the java.util.concurrent package.\nClass ConcurrentUtils;\n// A very simple implementation of the ConcurrentInitializer interface which always returns the same object.\nClass ConstantInitializer<T>;\n// A simple implementation of the Circuit Breaker pattern that counts specific events.\nClass EventCountCircuitBreaker;\n// This class provides a generic implementation of the lazy initialization pattern.\nClass LazyInitializer<T>;\n// Definition of an interface for a wrapper around a calculation that takes a single parameter and returns a result.\nClass Memoizer<I,O>;\n// A specialized BackgroundInitializer implementation that can deal with multiple background initialization tasks.\nClass MultiBackgroundInitializer;\n// A data class for storing the results of the background initialization performed by MultiBackgroundInitializer.\nClass MultiBackgroundInitializer.MultiBackgroundInitializerResults;\n// A simple implementation of the Circuit Breaker pattern that opens if the requested increment amount is greater than a given threshold.\nClass ThresholdCircuitBreaker;\n// A specialized semaphore implementation that provides a number of permits in a given time frame.\nClass TimedSemaphore;\n// An internal enumeration representing the different states of a circuit breaker.\nEnum AbstractCircuitBreaker.State;\n", "des": "Provides support classes for multi-threaded programming."}
{"index": 667, "repo": "commons-lang3-3.12.0", "code": "package locks\n\n// Combines the monitor and visitor pattern to work with locked objects.\nClass LockingVisitors;\n// Wraps a domain object and a lock for access by lambdas.\nClass LockingVisitors.LockVisitor<O,L>;\n// This class implements a wrapper for a locked (hidden) object, and provides the means to access it.\nClass LockingVisitors.ReadWriteLockVisitor<O>;\n// This class implements a wrapper for a locked (hidden) object, and provides the means to access it.\nClass LockingVisitors.StampedLockVisitor<O>;\n", "des": "Provides support classes for multi-threaded programming."}
{"index": 668, "repo": "commons-lang3-3.12.0", "code": "package event\n\n// An EventListenerSupport object can be used to manage a list of event listeners of a particular type.\nClass EventListenerSupport<L>;\n// Provides some useful event-based utility methods.\nClass EventUtils;\n", "des": "Provides some useful event-based utilities."}
{"index": 669, "repo": "commons-lang3-3.12.0", "code": "package exception\n\n// Allows the storage and retrieval of contextual information based on label-value pairs for exceptions.\nInterface ExceptionContext;\n// Default implementation of the context storing the label-value pairs for contexted exceptions.\nClass DefaultExceptionContext;\n// Provides utilities for manipulating and examining Throwable objects.\nClass ExceptionUtils;\n// Exception thrown when a clone cannot be created.\nClass CloneFailedException;\n// An exception that provides an easy and safe way to add contextual information.\nClass ContextedException;\n// A runtime exception that provides an easy and safe way to add contextual information.\nClass ContextedRuntimeException;\n", "des": "Provides functionality for Exceptions."}
{"index": 670, "repo": "commons-lang3-3.12.0", "code": "package function\n\n// A functional interface like BiConsumer that declares a Throwable.\nInterface FailableBiConsumer<T,U,E extends Throwable>;\n// A functional interface like BiFunction that declares a Throwable.\nInterface FailableBiFunction<T,U,R,E extends Throwable>;\n// A functional interface like BiPredicate that declares a Throwable.\nInterface FailableBiPredicate<T,U,E extends Throwable>;\n// A functional interface like BooleanSupplier that declares a Throwable.\nInterface FailableBooleanSupplier<E extends Throwable>;\n// A functional interface like Callable that declares a Throwable.\nInterface FailableCallable<R,E extends Throwable>;\n// A functional interface like Consumer that declares a Throwable.\nInterface FailableConsumer<T,E extends Throwable>;\n// A functional interface like DoubleBinaryOperator that declares a Throwable.\nInterface FailableDoubleBinaryOperator<E extends Throwable>;\n// A functional interface like DoubleConsumer that declares a Throwable.\nInterface FailableDoubleConsumer<E extends Throwable>;\n// A functional interface like DoubleFunction that declares a Throwable.\nInterface FailableDoubleFunction<R,E extends Throwable>;\n// A functional interface like DoublePredicate that declares a Throwable.\nInterface FailableDoublePredicate<E extends Throwable>;\n// A functional interface like DoubleSupplier that declares a Throwable.\nInterface FailableDoubleSupplier<E extends Throwable>;\n// A functional interface like DoubleToIntFunction that declares a Throwable.\nInterface FailableDoubleToIntFunction<E extends Throwable>;\n// A functional interface like DoubleToLongFunction that declares a Throwable.\nInterface FailableDoubleToLongFunction<E extends Throwable>;\n// A functional interface like DoubleUnaryOperator that declares a Throwable.\nInterface FailableDoubleUnaryOperator<E extends Throwable>;\n// A functional interface like Function that declares a Throwable.\nInterface FailableFunction<T,R,E extends Throwable>;\n// A functional interface like IntBinaryOperator that declares a Throwable.\nInterface FailableIntBinaryOperator<E extends Throwable>;\n// A functional interface like IntConsumer that declares a Throwable.\nInterface FailableIntConsumer<E extends Throwable>;\n// A functional interface like IntFunction that declares a Throwable.\nInterface FailableIntFunction<R,E extends Throwable>;\n", "des": "Provides functional interfaces to complement those in java.lang.function and utilities for working with Java 8 lambdas."}
{"index": 671, "repo": "commons-lang3-3.12.0", "code": "package math\n\n// Fraction is a Number implementation that stores fractions accurately.\nClass Fraction;\n// Provides IEEE-754r variants of NumberUtils methods.\nClass IEEE754rUtils;\n// Provides extra functionality for Java Number classes.\nClass NumberUtils;\n", "des": "Extends java.math for business mathematical classes."}
{"index": 672, "repo": "commons-lang3-3.12.0", "code": "package mutable\n\n// Provides mutable access to a value.\nInterface Mutable<T>;\n// A mutable boolean wrapper.\nClass MutableBoolean;\n// A mutable byte wrapper.\nClass MutableByte;\n// A mutable double wrapper.\nClass MutableDouble;\n// A mutable float wrapper.\nClass MutableFloat;\n// A mutable int wrapper.\nClass MutableInt;\n// A mutable long wrapper.\nClass MutableLong;\n// A mutable Object wrapper.\nClass MutableObject<T>;\n// A mutable short wrapper.\nClass MutableShort;\n", "des": "Provides typed mutable wrappers to primitive values and Object."}
{"index": 673, "repo": "commons-lang3-3.12.0", "code": "package reflect\n\n// Generalization of \"has a type.\"\nInterface Typed<T>;\n// Utility reflection methods focused on constructors, modeled after MethodUtils.\nClass ConstructorUtils;\n// Utilities for working with Fields by reflection.\nClass FieldUtils;\n// Utility methods focusing on inheritance.\nClass InheritanceUtils;\n// Utility reflection methods focused on Methods, originally from Commons BeanUtils.\nClass MethodUtils;\n// Type literal comparable to javax.enterprise.util.TypeLiteral, made generally available outside the JEE context.\nClass TypeLiteral<T>;\n// Utility methods focusing on type inspection, particularly with regard to generics.\nClass TypeUtils;\n// WildcardType builder.\nClass TypeUtils.WildcardTypeBuilder;\n", "des": "Accumulates common high-level uses of the java.lang.reflect APIs."}
{"index": 674, "repo": "commons-lang3-3.12.0", "code": "package stream\n\n// Provides utility functions, and classes for working with the java.util.stream package, or more generally, with Java 8 lambdas.\nClass Streams;\n// A Collector type for arrays.\nClass Streams.ArrayCollector<O>;\n// A reduced, and simplified version of a Stream with failable method signatures.\nClass Streams.FailableStream<O>;\n", "des": "Provides utility classes to complement those in java.util.stream."}
{"index": 675, "repo": "commons-lang3-3.12.0", "code": "package text\n\n// as of 3.6, use commons-text FormatFactory instead\nInterface FormatFactory;\n// as of 3.6, use commons-text CompositeFormat instead\nClass CompositeFormat;\n// as of 3.6, use commons-text ExtendedMessageFormat instead\nClass ExtendedMessageFormat;\n// as of 3.6, use commons-text FormattableUtils instead\nClass FormattableUtils;\n// as of 3.6, use commons-text TextStringBuilder instead\nClass StrBuilder;\n// as of 3.6, use commons-text StringLookupFactory instead\nClass StrLookup<V>;\n// as of 3.6, use commons-text StringMatcherFactory instead\nClass StrMatcher;\n// as of 3.6, use commons-text StringSubstitutor instead\nClass StrSubstitutor;\n// as of 3.6, use commons-text StringTokenizer instead\nClass StrTokenizer;\n// as of 3.6, use commons-text WordUtils instead\nClass WordUtils;\n", "des": "Provides classes for handling and manipulating text, partly as an extension to java.text."}
{"index": 676, "repo": "commons-lang3-3.12.0", "code": "package translate\n\n// as of 3.6, use commons-text AggregateTranslator instead\nClass AggregateTranslator;\n// as of 3.6, use commons-text CharSequenceTranslator instead\nClass CharSequenceTranslator;\n// as of 3.6, use commons-text CharSequenceTranslator instead\nClass CodePointTranslator;\n// as of 3.6, use commons-text EntityArrays instead\nClass EntityArrays;\n// as of 3.6, use commons-text UnicodeEscaper instead\nClass JavaUnicodeEscaper;\n// as of 3.6, use commons-text LookupTranslator instead\nClass LookupTranslator;\n// as of 3.6, use commons-text NumericEntityEscaper instead\nClass NumericEntityEscaper;\n// as of 3.6, use commons-text NumericEntityUnescaper instead\nClass NumericEntityUnescaper;\n// as of 3.6, use commons-text OctalUnescaper instead\nClass OctalUnescaper;\n// as of 3.6, use commons-text UnicodeEscaper instead\nClass UnicodeEscaper;\n// as of 3.6, use commons-text UnicodeUnescaper instead\nClass UnicodeUnescaper;\n// as of 3.6, use commons-text UnicodeUnpairedSurrogateRemover instead\nClass UnicodeUnpairedSurrogateRemover;\n// Enumerates NumericEntityUnescaper options for unescaping.\nEnum NumericEntityUnescaper.OPTION;\n", "des": "An API for creating text translation routines from a set of smaller building blocks."}
{"index": 677, "repo": "commons-lang3-3.12.0", "code": "package time\n\n// DateParser is the \"missing\" interface for the parsing methods of DateFormat.\nInterface DateParser;\n// DatePrinter is the \"missing\" interface for the format methods of DateFormat.\nInterface DatePrinter;\n// Helps use Calendars.\nClass CalendarUtils;\n// Date and time formatting utilities and constants.\nClass DateFormatUtils;\n// A suite of utilities surrounding the use of the Calendar and Date object.\nClass DateUtils;\n// Duration formatting utilities and constants.\nClass DurationFormatUtils;\n// Utilities for Duration.\nClass DurationUtils;\n// FastDateFormat is a fast and thread-safe version of SimpleDateFormat.\nClass FastDateFormat;\n// FastDateParser is a fast and thread-safe version of SimpleDateFormat.\nClass FastDateParser;\n// FastDatePrinter is a fast and thread-safe version of SimpleDateFormat.\nClass FastDatePrinter;\n// Faster methods to produce custom time zones.\nClass FastTimeZone;\n// StopWatch provides a convenient API for timings.\nClass StopWatch;\n// Helps to deal with TimeZones.\nClass TimeZones;\n", "des": "Provides classes and methods to work with dates and durations."}
{"index": 678, "repo": "commons-lang3-3.12.0", "code": "package tuple\n\n// An immutable pair consisting of two Object elements.\nClass ImmutablePair<L,R>;\n// An immutable triple consisting of three Object elements.\nClass ImmutableTriple<L,M,R>;\n// A mutable pair consisting of two Object elements.\nClass MutablePair<L,R>;\n// A mutable triple consisting of three Object elements.\nClass MutableTriple<L,M,R>;\n// A pair consisting of two elements.\nClass Pair<L,R>;\n// A triple consisting of three elements.\nClass Triple<L,M,R>;\n", "des": "Tuple classes, starting with a Pair class in version 3.0."}
{"index": 679, "repo": "jackson-databind-2.15.2", "code": "package databind\n\n// Add-on extension used for XML-specific configuration, needed to decouple format module functionality from pluggable introspection functionality (especially JAXB-annotation related one).\nInterface AnnotationIntrospector.XmlExtensions;\n// Bean properties are logical entities that represent data that Java objects (POJOs (Plain Old Java Objects), sometimes also called \"beans\") contain; and that are accessed using accessors (methods like getters and setters, fields, constructor parameters).\nInterface BeanProperty;\n// Defines how the string representation of an enum is converted into an external property name for mapping during deserialization.\nInterface EnumNamingStrategy;\n// Interface that can be implemented by objects that know how to serialize themselves to JSON, using JsonGenerator (and SerializerProvider if necessary).\nInterface JsonSerializable;\n// Interface Jackson exposes to modules for purpose of registering extended functionality.\nInterface Module.SetupContext;\n// Defines interface for resolvers that can resolve abstract types into concrete ones; either by using static mappings, or possibly by materializing implementations dynamically.\nClass AbstractTypeResolver;\n// Abstract class that defines API used for introspecting annotation-based configuration for serialization and deserialization.\nClass AnnotationIntrospector;\n// Value type used with managed and back references; contains type and logic name, used to link related references\nClass AnnotationIntrospector.ReferenceProperty;\n// Basic container for information gathered by ClassIntrospector to help in constructing serializers and deserializers.\nClass BeanDescription;\n// Alternative \"Null\" implementation that can be used in cases where a non-null BeanProperty is needed\nClass BeanProperty.Bogus;\n// Simple stand-alone implementation, useful as a placeholder or base class for more complex implementations.\nClass BeanProperty.Std;\n// Shared base class for DeserializationContext and SerializerProvider, context objects passed through data-binding process.\nClass DatabindContext;\n// Object that contains baseline configuration for deserialization process.\nClass DeserializationConfig;\n// Context for the process of deserialization a single root-level value.\nClass DeserializationContext;\n// A container class for implementations of the EnumNamingStrategy interface.\nClass EnumNamingStrategies;\n// An implementation of EnumNamingStrategy that converts enum names in the typical upper snake case format to camel case format.\nClass EnumNamingStrategies.CamelCaseStrategy;\n", "des": "Basic data binding (mapping) functionality that allows for reading JSON content into Java Objects (POJOs) and JSON Trees (JsonNode), as well as writing Java Objects and trees as JSON."}
{"index": 680, "repo": "jackson-databind-2.15.2", "code": "package annotation\n\n// Simple value container for containing values read from JsonPOJOBuilder annotation instance.\nClass JsonPOJOBuilder.Value;\n// Marker class used with annotations to indicate \"no class\".\nClass NoClass;\n// \nEnum JsonSerialize.Inclusion;\n// Enumeration used with JsonSerialize.typing() property to define whether type detection is based on dynamic runtime type (DYNAMIC) or declared type (STATIC).\nEnum JsonSerialize.Typing;\n// Annotation that can be used to indicate a EnumNamingStrategy to use for annotated class.\nAnnotation Type EnumNaming;\n// Marker interface used to indicate implementation classes (serializers, deserializers etc) that are standard ones Jackson uses; not custom ones that application has added.\nAnnotation Type JacksonStdImpl;\n// Annotation used to add \"virtual\" properties that will be written after regular properties during serialization.\nAnnotation Type JsonAppend;\n// Definition of a single attribute-backed property.\nAnnotation Type JsonAppend.Attr;\n// Definition of a single general virtual property.\nAnnotation Type JsonAppend.Prop;\n// Annotation use for configuring deserialization aspects, by attaching to \"setter\" methods or fields, or to value classes.\nAnnotation Type JsonDeserialize;\n// Annotation that can be used to indicate a PropertyNamingStrategy to use for annotated class.\nAnnotation Type JsonNaming;\n// Annotation used to configure details of a Builder class: instances of which are used as Builders for deserialized POJO values, instead of POJOs being instantiated using constructors or factory methods.\nAnnotation Type JsonPOJOBuilder;\n// Annotation used for configuring serialization aspects, by attaching to \"getter\" methods or fields, or to value classes.\nAnnotation Type JsonSerialize;\n// Annotation that can be used to plug a custom type identifier handler (TypeIdResolver) to be used by TypeSerializers and TypeDeserializers for converting between java types and type id included in JSON content.\nAnnotation Type JsonTypeIdResolver;\n// Annotation that can be used to explicitly define custom resolver used for handling serialization and deserialization of type information, needed for handling of polymorphic types (or sometimes just for linking abstract types to concrete types)\nAnnotation Type JsonTypeResolver;\n// Annotation that can be used to indicate a ValueInstantiator to use for creating instances of specified type.\nAnnotation Type JsonValueInstantiator;\n", "des": "Annotations that directly depend on classes in databinding bundle (not just Jackson core) and cannot be included in Jackson core annotations package (because it cannot have any external dependencies)."}
{"index": 681, "repo": "jackson-databind-2.15.2", "code": "package cfg\n\n// Interface that actual SerializationFeature enumerations used by MapperConfig implementations must implement.\nInterface ConfigFeature;\n// Interface that defines interaction with data type specific configuration features.\nInterface DatatypeFeature;\n// Immutable container class used to store simple configuration settings for both serialization and deserialization.\nClass BaseSettings;\n// \nClass CoercionConfig;\n// \nClass CoercionConfigs;\n// Configuration object that is accessed by databinding functionality to find overrides to configuration of properties, based on declared type of the property.\nClass ConfigOverride;\n// Container for individual ConfigOverride values.\nClass ConfigOverrides;\n// Configurable handler used to select aspects of selecting constructor to use as \"Creator\" for POJOs.\nClass ConstructorDetector;\n// Helper class used for storing and accessing per-call attributes.\nClass ContextAttributes;\n// \nClass ContextAttributes.Impl;\n// Immutable value class that contains settings for multiple DatatypeFeature enumerations.\nClass DatatypeFeatures;\n// Configuration settings container class for DeserializerFactory.\nClass DeserializerFactoryConfig;\n// Helper class used for handling details of creating handler instances (things like JsonSerializers, JsonDeserializers, various type handlers) of specific types.\nClass HandlerInstantiator;\n// Jackson 3 will introduce fully immutable, builder-based system for constructing ObjectMappers.\nClass MapperBuilder<M extends ObjectMapper,B extends MapperBuilder<M,B>>;\n// Interface that defines functionality accessible through both serialization and deserialization configuration objects; accessors to mode-independent configuration settings and such.\nClass MapperConfig<T extends MapperConfig<T>>;\n// \nClass MapperConfigBase<CFG extends ConfigFeature,T extends MapperConfigBase<CFG,T>>;\n// Mutable version of CoercionConfig (or rather, extended API) exposed during configuration phase of ObjectMapper construction (via Builder).\nClass MutableCoercionConfig;\n// Extension of ConfigOverride that allows changing of contained configuration settings.\nClass MutableConfigOverride;\n// Automatically generated from PackageVersion.java.in during packageVersion-generate execution of maven-replacer-plugin in pom.xml.\nClass PackageVersion;\n// Configuration settings container class for SerializerFactory implementations.\nClass SerializerFactoryConfig;\n", "des": "Package that contains most of configuration-related classes; exception being couple of most-commonly used configuration things (like Feature enumerations) that are at the main level (com.fasterxml.jackson.databind)."}
{"index": 682, "repo": "jackson-databind-2.15.2", "code": "package deser\n\n// Add-on interface that JsonDeserializers can implement to get a callback that can be used to create contextual (context-dependent) instances of deserializer to use for handling properties of supported type.\nInterface ContextualDeserializer;\n// Add-on interface that KeyDeserializers can implement to get a callback that can be used to create contextual instances of key deserializer to use for handling Map keys of supported type.\nInterface ContextualKeyDeserializer;\n// Interface that defines API for simple extensions that can provide additional deserializers for various types.\nInterface Deserializers;\n// Interface that defines API for simple extensions that can provide additional deserializers for deserializer Map keys of various types, from JSON property names.\nInterface KeyDeserializers;\n// Helper interface implemented by classes that are to be used as null providers during deserialization.\nInterface NullValueProvider;\n// Interface used to indicate deserializers that want to do post-processing after construction but before being returned to caller (and possibly cached) and used.\nInterface ResolvableDeserializer;\n// \nInterface ValueInstantiator.Gettable;\n// Interface for providers of ValueInstantiator instances.\nInterface ValueInstantiators;\n// Deserializer only used for abstract types used as placeholders during polymorphic type handling deserialization.\nClass AbstractDeserializer;\n// Abstract factory base class that can provide deserializers for standard JDK classes, including collection classes and simple heuristics for \"upcasting\" common collection interface types (such as Collection).\nClass BasicDeserializerFactory;\n// Helper class to contain default mappings for abstract JDK Collection and Map types.\nClass BasicDeserializerFactory.ContainerDefaultMappings;\n// Helper class to contain largish number of parameters that need to be passed during Creator introspection.\nClass BasicDeserializerFactory.CreatorCollectionState;\n// Deserializer class that can deserialize instances of arbitrary bean objects, usually from JSON Object structs,\nClass BeanDeserializer;\n// Base class for BeanDeserializer.\nClass BeanDeserializerBase;\n// Builder class used for aggregating deserialization information about a POJO, in order to build a JsonDeserializer for deserializing instances.\nClass BeanDeserializerBuilder;\n// Concrete deserializer factory class that adds full Bean deserializer construction logic using class introspection.\nClass BeanDeserializerFactory;\n// Abstract class that defines API for objects that can be registered to participate in constructing JsonDeserializer instances (via DeserializerFactory).\nClass BeanDeserializerModifier;\n", "des": "Contains implementation classes of deserialization part of data binding."}
{"index": 683, "repo": "jackson-databind-2.15.2", "code": "package impl\n\n// \nClass BeanAsArrayBuilderDeserializer;\n// Variant of BeanDeserializer used for handling deserialization of POJOs when serialized as JSON Arrays, instead of JSON Objects.\nClass BeanAsArrayDeserializer;\n// Helper class used for storing mapping from property name to SettableBeanProperty instances.\nClass BeanPropertyMap;\n// \nClass CreatorCandidate;\n// \nClass CreatorCandidate.Param;\n// Container class for storing information on creators (based on annotations, visibility), to be able to build actual ValueInstantiator later on.\nClass CreatorCollector;\n// A deserializer that stores an Error caught during constructing of the deserializer, which needs to be deferred and only during actual attempt to deserialize a value of given type.\nClass ErrorThrowingDeserializer;\n// Helper class that is used to flatten JSON structure when using \"external type id\" (see JsonTypeInfo.As.EXTERNAL_PROPERTY).\nClass ExternalTypeHandler;\n// \nClass ExternalTypeHandler.Builder;\n// Special bogus \"serializer\" that will throw MismatchedInputException if an attempt is made to deserialize a value.\nClass FailingDeserializer;\n// This concrete sub-class implements property that is set directly assigning to a Field.\nClass FieldProperty;\n// This sub-class is used to handle special case of value being a non-static inner class.\nClass InnerClassProperty;\n// Helper class used to contain logic for deserializing \"special\" containers from java.util.Collections and java.util.Arrays.\nClass JavaUtilCollectionsDeserializers;\n// Container for a set of ValueInstantiators used for certain critical JDK value types, either as performance optimization for initialization time observed by profiling, or due to difficulty in otherwise finding constructors.\nClass JDKValueInstantiators;\n// Wrapper property that is used to handle managed (forward) properties Basically just needs to delegate first to actual forward property, and then to back property.\nClass ManagedReferenceProperty;\n// SettableBeanProperty implementation that will try to access value of the property first, and if non-null value found, pass that for update (using JsonDeserializer.deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, Object)) instead of constructing a new value.\nClass MergingSettableBeanProperty;\n", "des": "Contains those implementation classes of deserialization part of data binding that are not considered part of public or semi-public interfaces."}
{"index": 684, "repo": "jackson-databind-2.15.2", "code": "package std\n\n// We need a custom deserializer both because ArrayBlockingQueue has no default constructor AND because it has size limit used for constructing underlying storage automatically.\nClass ArrayBlockingQueueDeserializer;\n// \nClass AtomicBooleanDeserializer;\n// \nClass AtomicIntegerDeserializer;\n// \nClass AtomicLongDeserializer;\n// \nClass AtomicReferenceDeserializer;\n// \nClass ByteBufferDeserializer;\n// Basic serializer that can take JSON \"Array\" structure and construct a Collection instance, with typed contents.\nClass CollectionDeserializer;\n// Helper class for dealing with Object Id references for values contained in collections being deserialized.\nClass CollectionDeserializer.CollectionReferringAccumulator;\n// Intermediate base deserializer class that adds more shared accessor so that other classes can access information about contained (value) types\nClass ContainerDeserializerBase<T>;\n// Container class for core JDK date/time type deserializers.\nClass DateDeserializers;\n// \nClass DateDeserializers.CalendarDeserializer;\n// \nClass DateDeserializers.DateBasedDeserializer<T>;\n// Simple deserializer for handling Date values.\nClass DateDeserializers.DateDeserializer;\n// Compared to plain old Date, SQL version is easier to deal with: mostly because it is more limited.\nClass DateDeserializers.SqlDateDeserializer;\n// Simple deserializer for handling Timestamp values.\nClass DateDeserializers.TimestampDeserializer;\n// Base class that simplifies implementations of JsonDeserializers that mostly delegate functionality to another deserializer implementation (possibly forming a chaining of deserializers delegating functionality in some cases)\nClass DelegatingDeserializer;\n// Deserializer class that can deserialize instances of specified Enum class from Strings and Integers.\nClass EnumDeserializer;\n// Deserializer for EnumMap values.\nClass EnumMapDeserializer;\n// Standard deserializer for EnumSets.\nClass EnumSetDeserializer;\n// Base class for simple deserializers that serialize values from String representation: this includes JSON Strings and other Scalar values that can be coerced into text, like Numbers and Booleans).\nClass FromStringDeserializer<T>;\n// \"Chameleon\" deserializer that works on simple types that are deserialized from a simple String.\nClass FromStringDeserializer.Std;\n// Container class that contains serializers for JDK types that require special handling for some reason.\nClass JdkDeserializers;\n", "des": "Contains public standard implementations of abstraction that Jackson uses."}
{"index": 685, "repo": "jackson-databind-2.15.2", "code": "package ext\n\n// Container deserializers that handle \"core\" XML types: ones included in standard JDK 1.5.\nClass CoreXMLDeserializers;\n// Combo-deserializer that supports deserialization of somewhat optional javax.xml types QName, Duration and XMLGregorianCalendar.\nClass CoreXMLDeserializers.Std;\n// Provider for serializers of XML types that are part of full JDK 1.5, but that some alleged 1.5 platforms are missing (Android, GAE).\nClass CoreXMLSerializers;\n// \nClass CoreXMLSerializers.XMLGregorianCalendarSerializer;\n// Base for serializers that allows parsing DOM Documents from JSON Strings.\nClass DOMDeserializer<T>;\n// \nClass DOMDeserializer.DocumentDeserializer;\n// \nClass DOMDeserializer.NodeDeserializer;\n// \nClass DOMSerializer;\n// Since v2.15, Java7HandlersImpl is no longer loaded via reflection.\nClass Java7Handlers;\n// Since v2.15, this is no longer loaded via reflection.\nClass Java7HandlersImpl;\n// To support Java7-incomplete platforms, we will offer support for JDK 7 annotations through this class, loaded dynamically; if loading fails, support will be missing.\nClass Java7Support;\n// \nClass Java7SupportImpl;\n// \nClass NioPathDeserializer;\n// \nClass NioPathSerializer;\n// Helper class used for isolating details of handling optional+external types (javax.xml classes) from standard factories that offer them.\nClass OptionalHandlerFactory;\n// Serializer implementation for Blob to write as binary (for JSON and other formats Base64-encoded String, for binary formats as true binary).\nClass SqlBlobSerializer;\n", "des": "Contains extended support for \"external\" packages: things that may or may not be present in runtime environment, but that are commonly enough used so that explicit support can be added."}
{"index": 686, "repo": "jackson-databind-2.15.2", "code": "package introspect\n\n// Interface used for decoupling details of how mix-in annotation definitions are accessed (via this interface), and how they are stored (defined by classes that implement the interface)\nInterface ClassIntrospector.MixInResolver;\n// Definition of a handler API to use for checking whether given base name (remainder of accessor method name after removing prefix) is acceptable based on various rules.\nInterface DefaultAccessorNamingStrategy.BaseNameValidator;\n// Interface that defines API used by members (like AnnotatedMethod) to dynamically resolve types they have.\nInterface TypeResolutionContext;\n// Interface for object used for determine which property elements (methods, fields, constructors) can be auto-detected, with respect to their visibility modifiers.\nInterface VisibilityChecker<T extends VisibilityChecker<T>>;\n// \nInterface WithMember<T>;\n// API for handlers used to \"mangle\" names of \"getter\" and \"setter\" methods to find implicit property names.\nClass AccessorNamingStrategy;\n// Helper class that implements all abstract methods with dummy implementations.\nClass AccessorNamingStrategy.Base;\n// Interface for provider (factory) for constructing AccessorNamingStrategy for given type of deserialization target\nClass AccessorNamingStrategy.Provider;\n// Shared base class used for anything on which annotations (included within a AnnotationMap).\nClass Annotated;\n// Silly little \"Pair\" class needed for 2-element tuples (without adding dependency to one of 3rd party packages that has one).\nClass AnnotatedAndMetadata<A extends Annotated,M>;\n// \nClass AnnotatedClass;\n// \nClass AnnotatedClass.Creators;\n// Helper class that contains logic for resolving annotations to construct AnnotatedClass instances.\nClass AnnotatedClassResolver;\n// \nClass AnnotatedConstructor;\n// Object that represents non-static (and usually non-transient/volatile) fields of a class.\nClass AnnotatedField;\n// \nClass AnnotatedFieldCollector;\n// Intermediate base class for annotated entities that are members of a class; fields, methods and constructors.\nClass AnnotatedMember;\n// \nClass AnnotatedMethod;\n// \nClass AnnotatedMethodCollector;\n// Simple helper class used to keep track of collection of AnnotatedMethods, accessible by lookup.\nClass AnnotatedMethodMap;\n// Object that represents method parameters, mostly so that associated annotations can be processed conveniently.\nClass AnnotatedParameter;\n", "des": "Functionality needed for Bean introspection, required for detecting accessors and mutators for Beans, as well as locating and handling method annotations."}
{"index": 687, "repo": "jackson-databind-2.15.2", "code": "package jdk14\n\n// Helper class to support some of JDK 14 (and later) features without Jackson itself being run on (or even built with) Java 14.\nClass JDK14Util;\n", "des": "Contains helper class(es) needed to support some of JDK14+ features without requiring running or building using JDK 14."}
{"index": 688, "repo": "jackson-databind-2.15.2", "code": "package jsonFormatVisitors\n\n// \nInterface JsonAnyFormatVisitor;\n// \nInterface JsonArrayFormatVisitor;\n// \nInterface JsonBooleanFormatVisitor;\n// Interface JsonSerializer implements to allow for visiting type hierarchy.\nInterface JsonFormatVisitable;\n// \nInterface JsonFormatVisitorWithSerializerProvider;\n// Interface for visitor callbacks, when type in question can be any of legal JSON types.\nInterface JsonFormatVisitorWrapper;\n// \nInterface JsonIntegerFormatVisitor;\n// \nInterface JsonMapFormatVisitor;\n// \nInterface JsonNullFormatVisitor;\n// \nInterface JsonNumberFormatVisitor;\n// Visitor called when properties of a type that maps to JSON Object are being visited: this usually means POJOs, but sometimes other types use it too (like EnumMap).\nInterface JsonObjectFormatVisitor;\n// \nInterface JsonStringFormatVisitor;\n// \nInterface JsonValueFormatVisitor;\n// Default \"empty\" implementation, useful as the base to start on; especially as it is guaranteed to implement all the method of the interface, even if new methods are getting added.\nClass JsonAnyFormatVisitor.Base;\n// Default \"empty\" implementation, useful as the base to start on; especially as it is guaranteed to implement all the method of the interface, even if new methods are getting added.\nClass JsonArrayFormatVisitor.Base;\n// Default \"empty\" implementation, useful as the base to start on; especially as it is guaranteed to implement all the method of the interface, even if new methods are getting added.\nClass JsonBooleanFormatVisitor.Base;\n// Empty \"no-op\" implementation of JsonFormatVisitorWrapper, suitable for sub-classing.\nClass JsonFormatVisitorWrapper.Base;\n// Default \"empty\" implementation, useful as the base to start on; especially as it is guaranteed to implement all the method of the interface, even if new methods are getting added.\nClass JsonIntegerFormatVisitor.Base;\n// Default \"empty\" implementation, useful as the base to start on; especially as it is guaranteed to implement all the method of the interface, even if new methods are getting added.\nClass JsonMapFormatVisitor.Base;\n// Default \"empty\" implementation, useful as the base to start on; especially as it is guaranteed to implement all the method of the interface, even if new methods are getting added.\nClass JsonNullFormatVisitor.Base;\n", "des": "Classes used for exposing logical structure of POJOs as Jackson sees it, and exposed via ObjectMapper.acceptJsonFormatVisitor(Class, JsonFormatVisitorWrapper) and ObjectMapper.acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType, JsonFormatVisitorWrapper) methods."}
{"index": 689, "repo": "jackson-databind-2.15.2", "code": "package jsonschema\n\n// Since 2.15, we recommend use of external JSON Schema generator module\nInterface SchemaAware;\n// Since 2.2, we recommend use of external JSON Schema generator module\nClass JsonSchema;\n// Since 2.15, we recommend use of external JSON Schema generator module\nAnnotation Type JsonSerializableSchema;\n", "des": "Classes needed for JSON schema support (currently just ability to generate schemas using serialization part of data mapping)"}
{"index": 690, "repo": "jackson-databind-2.15.2", "code": "package jsontype\n\n// Interface that defines standard API for converting types to type identifiers and vice versa.\nInterface TypeIdResolver;\n// Interface that defines builders that are configured based on annotations (like JsonTypeInfo or JAXB annotations), and produce type serializers and deserializers used for handling type information embedded in JSON to allow for safe polymorphic type handling.\nInterface TypeResolverBuilder<T extends TypeResolverBuilder<T>>;\n// Standard BasicPolymorphicTypeValidator implementation that users may want to use for constructing validators based on simple class hierarchy and/or name patterns to allow and/or deny certain subtypes.\nClass BasicPolymorphicTypeValidator;\n// Builder class for configuring and constructing immutable BasicPolymorphicTypeValidator instances.\nClass BasicPolymorphicTypeValidator.Builder;\n// General matcher interface (predicate) for validating unresolved subclass class name.\nClass BasicPolymorphicTypeValidator.NameMatcher;\n// General matcher interface (predicate) for validating class values (base type or resolved subtype)\nClass BasicPolymorphicTypeValidator.TypeMatcher;\n// PolymorphicTypeValidator that will only allow polymorphic handling if the base type is NOT one of potential dangerous base types (see DefaultBaseTypeLimitingValidator.isUnsafeBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig<?>, com.fasterxml.jackson.databind.JavaType) for specific list of such base types).\nClass DefaultBaseTypeLimitingValidator;\n// Simple container class for types with optional logical name, used as external identifier\nClass NamedType;\n// Interface for classes that handle validation of class-name - based subtypes used with Polymorphic Deserialization: both via \"default typing\" and explicit @JsonTypeInfo when using Java Class name as Type Identifier.\nClass PolymorphicTypeValidator;\n// Shared base class with partial implementation (with all validation calls returning PolymorphicTypeValidator.Validity.INDETERMINATE) and convenience methods for indicating failure reasons.\nClass PolymorphicTypeValidator.Base;\n// Helper object used for handling registration on resolving of super-types to sub-types.\nClass SubtypeResolver;\n// Interface for deserializing type information from JSON content, to type-safely deserialize data into correct polymorphic instance (when type inclusion has been enabled for type handled).\nClass TypeDeserializer;\n", "des": "Package that contains interfaces that define how to implement functionality for dynamically resolving type during deserialization."}
{"index": 691, "repo": "jackson-databind-2.15.2", "code": "package impl\n\n// Type deserializer used with JsonTypeInfo.As.WRAPPER_ARRAY inclusion mechanism.\nClass AsArrayTypeDeserializer;\n// Type serializer that will embed type information in an array, as the first element, and actual value as the second element.\nClass AsArrayTypeSerializer;\n// A TypeDeserializer capable of deducing polymorphic types based on the fields available.\nClass AsDeductionTypeDeserializer;\n// \nClass AsDeductionTypeSerializer;\n// Type serializer used with JsonTypeInfo.As.EXISTING_PROPERTY inclusion mechanism.\nClass AsExistingPropertyTypeSerializer;\n// Type deserializer used with JsonTypeInfo.As.EXTERNAL_PROPERTY inclusion mechanism.\nClass AsExternalTypeDeserializer;\n// Type serializer that preferably embeds type information as an \"external\" type property; embedded in enclosing JSON object.\nClass AsExternalTypeSerializer;\n// Type deserializer used with JsonTypeInfo.As.PROPERTY inclusion mechanism.\nClass AsPropertyTypeDeserializer;\n// Type serializer that preferably embeds type information as an additional JSON Object property, if possible (when resulting serialization would use JSON Object).\nClass AsPropertyTypeSerializer;\n// Type deserializer used with JsonTypeInfo.As.WRAPPER_OBJECT inclusion mechanism.\nClass AsWrapperTypeDeserializer;\n// Type wrapper that tries to use an extra JSON Object, with a single entry that has type name as key, to serialize type information.\nClass AsWrapperTypeSerializer;\n// TypeIdResolver implementation that converts between fully-qualified Java class names and (JSON) Strings.\nClass ClassNameIdResolver;\n// Default PolymorphicTypeValidator used unless explicit one is constructed (and, in 2.11, MapperFeature.BLOCK_UNSAFE_POLYMORPHIC_BASE_TYPES not enabled).\nClass LaissezFaireSubTypeValidator;\n// \nClass MinimalClassNameIdResolver;\n// Standard SubtypeResolver implementation.\nClass StdSubtypeResolver;\n// Default TypeResolverBuilder implementation.\nClass StdTypeResolverBuilder;\n// Helper class used to encapsulate rules that determine subtypes that are invalid to use, even with default typing, mostly due to security concerns.\nClass SubTypeValidator;\n// Base class for all standard Jackson TypeDeserializers.\nClass TypeDeserializerBase;\n", "des": "Package that contains standard implementations for TypeResolverBuilder and TypeIdResolver."}
{"index": 692, "repo": "jackson-databind-2.15.2", "code": "package module\n\n// Simple AbstractTypeResolver implementation, which is based on static mapping from abstract super types into sub types (concrete or abstract), but retaining generic parameterization.\nClass SimpleAbstractTypeResolver;\n// Simple implementation Deserializers which allows registration of deserializers based on raw (type erased class).\nClass SimpleDeserializers;\n// Simple implementation KeyDeserializers which allows registration of deserializers based on raw (type erased class).\nClass SimpleKeyDeserializers;\n// Vanilla Module implementation that allows registration of serializers and deserializers, bean serializer and deserializer modifiers, registration of subtypes and mix-ins as well as some other commonly needed aspects (addition of custom AbstractTypeResolvers, ValueInstantiators).\nClass SimpleModule;\n// Simple implementation Serializers which allows registration of serializers based on raw (type erased class).\nClass SimpleSerializers;\n// \nClass SimpleValueInstantiators;\n", "des": "Package that contains classes and interfaces to help implement custom extension Modules (which are registered using ObjectMapper.registerModule(com.fasterxml.jackson.databind.Module)."}
{"index": 693, "repo": "jackson-databind-2.15.2", "code": "package node\n\n// Interface that defines common \"creator\" functionality implemented both by JsonNodeFactory and ContainerNode (that is, JSON Object and Array nodes).\nInterface JsonNodeCreator;\n// Node class that represents Arrays mapped from JSON content.\nClass ArrayNode;\n// Abstract base class common to all standard JsonNode implementations.\nClass BaseJsonNode;\n// Numeric node that contains simple 64-bit integer values.\nClass BigIntegerNode;\n// Value node that contains Base64 encoded binary value, which will be output and stored as Json String value.\nClass BinaryNode;\n// This concrete value class is used to contain boolean (true / false) values.\nClass BooleanNode;\n// This intermediate base class is used for all container nodes, specifically, array and object nodes.\nClass ContainerNode<T extends ContainerNode<T>>;\n// Numeric node that contains values that do not fit in simple integer (int, long) or floating point (double) values.\nClass DecimalNode;\n// Numeric node that contains 64-bit (\"double precision\") floating point values simple 32-bit integer values.\nClass DoubleNode;\n// JsonNode implementation for efficiently containing 32-bit `float` values.\nClass FloatNode;\n// Numeric node that contains simple 32-bit integer values.\nClass IntNode;\n// Base class that specifies methods for getting access to Node instances (newly constructed, or shared, depending on type), as well as basic implementation of the methods.\nClass JsonNodeFactory;\n// Numeric node that contains simple 64-bit integer values.\nClass LongNode;\n// This singleton node class is generated to denote \"missing nodes\" along paths that do not exist.\nClass MissingNode;\n// This singleton value class is used to contain explicit JSON null value.\nClass NullNode;\n// Intermediate value node used for numeric nodes.\nClass NumericNode;\n// Node that maps to JSON Object structures in JSON content.\nClass ObjectNode;\n// Value node that contains a wrapped POJO, to be serialized as a JSON constructed through data mapping (usually done by calling ObjectMapper).\nClass POJONode;\n// Numeric node that contains simple 16-bit integer values.\nClass ShortNode;\n// Value node that contains a text value.\nClass TextNode;\n", "des": "Contains concrete JsonNode implementations Jackson uses for the Tree model."}
{"index": 694, "repo": "jackson-databind-2.15.2", "code": "package ser\n\n// Since 2.3: use PropertyFilter instead.\nInterface BeanPropertyFilter;\n// Add-on interface that JsonSerializers can implement to get a callback that can be used to create contextual instances of serializer to use for handling properties of supported type.\nInterface ContextualSerializer;\n// Interface that defines API for filter objects use (as configured using JsonFilter) for filtering bean properties to serialize.\nInterface PropertyFilter;\n// Interface used to indicate serializers that want to do post-processing after construction and being added to SerializerProvider, but before being used.\nInterface ResolvableSerializer;\n// Interface that defines API for simple extensions that can provide additional serializers for various types.\nInterface Serializers;\n// Class similar to BeanPropertyWriter, but that will be used for serializing JsonAnyGetter annotated (Map) properties\nClass AnyGetterWriter;\n// Factory class that can provide serializers for standard JDK classes, as well as custom classes that extend standard classes or implement one of \"well-known\" interfaces (such as Collection).\nClass BasicSerializerFactory;\n// Base bean property handler class, which implements common parts of reflection-based functionality for accessing a property value and serializing it.\nClass BeanPropertyWriter;\n// Serializer class that can serialize Java objects that map to JSON Object output.\nClass BeanSerializer;\n// Builder class used for aggregating deserialization information about a POJO, in order to build a JsonSerializer for serializing intances.\nClass BeanSerializerBuilder;\n// Factory class that can provide serializers for any regular Java beans (as defined by \"having at least one get method recognizable as bean accessor\" -- where Object.getClass() does not count); as well as for \"standard\" JDK types.\nClass BeanSerializerFactory;\n// Abstract class that defines API for objects that can be registered (for BeanSerializerFactory to participate in constructing BeanSerializer instances.\nClass BeanSerializerModifier;\n// Intermediate base class for serializers used for serializing types that contain element(s) of other types, such as arrays, Collections (Lists, Sets etc) and Maps and iterable things (Iterators).\nClass ContainerSerializer<T>;\n// Standard implementation used by ObjectMapper: adds methods only exposed to ObjectMapper, as well as constructors.\nClass DefaultSerializerProvider;\n// Concrete implementation that defines factory method(s), defined as final.\nClass DefaultSerializerProvider.Impl;\n", "des": "Contains implementation classes of serialization part of data binding."}
{"index": 695, "repo": "jackson-databind-2.15.2", "code": "package impl\n\n// VirtualBeanPropertyWriter implementation used for JsonAppend, to serialize properties backed-by dynamically assignable attribute values.\nClass AttributePropertyWriter;\n// Specialized POJO serializer that differs from BeanSerializer in that instead of producing a JSON Object it will output a JSON Array, omitting field names, and serializing values in specified serialization order.\nClass BeanAsArraySerializer;\n// Special bogus \"serializer\" that will throw JsonMappingException if its FailingSerializer.serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) gets invoked.\nClass FailingSerializer;\n// Decorated BeanPropertyWriter that will filter out properties that are not to be included in currently active JsonView.\nClass FilteredBeanPropertyWriter;\n// This is an optimized serializer for Lists that can be efficiently traversed by index (as opposed to others, such as LinkedList that cannot}.\nClass IndexedListSerializer;\n// Efficient implement for serializing Lists that contains Strings and are random-accessible.\nClass IndexedStringListSerializer;\n// \nClass IteratorSerializer;\n// \nClass MapEntrySerializer;\n// Object that knows how to serialize Object Ids.\nClass ObjectIdWriter;\n// \nClass PropertyBasedObjectIdGenerator;\n// Helper container used for resolving serializers for dynamic (possibly but not necessarily polymorphic) properties: properties whose type is not forced to use dynamic (declared) type and that are not final.\nClass PropertySerializerMap;\n// Value class used for returning tuple that has both serializer that was retrieved and new map instance\nClass PropertySerializerMap.SerializerAndMapResult;\n// Optimized lookup table for accessing two types of serializers; typed and non-typed.\nClass ReadOnlyClassToSerializerMap;\n// Simple PropertyFilter implementation that only uses property name to determine whether to serialize property as is, or to filter it out.\nClass SimpleBeanPropertyFilter;\n// Filter implementation which defaults to filtering out unknown properties and only serializes ones explicitly listed.\nClass SimpleBeanPropertyFilter.FilterExceptFilter;\n// Filter implementation which defaults to serializing all properties, except for ones explicitly listed to be filtered out.\nClass SimpleBeanPropertyFilter.SerializeExceptFilter;\n// Simple FilterProvider implementation that just stores direct id-to-filter mapping.\nClass SimpleFilterProvider;\n", "des": "Contains implementation classes of serialization part of data binding."}
{"index": 696, "repo": "jackson-databind-2.15.2", "code": "package type\n\n// Array types represent Java arrays, both primitive and object valued.\nClass ArrayType;\n// Key class, used as an efficient and accurate key for locating per-class values, such as JsonSerializers.\nClass ClassKey;\n// Simple helper class used to keep track of 'call stack' for classes being referenced (as well as unbound variables)\nClass ClassStack;\n// Type that represents things that act similar to Collection; but may or may not be instances of that interface.\nClass CollectionLikeType;\n// Type that represents Java Collection types (Lists, Sets).\nClass CollectionType;\n// Type that represents Map-like types; things that consist of key/value pairs but that do not necessarily implement Map, but that do not have enough introspection functionality to allow for some level of generic handling.\nClass MapLikeType;\n// Type that represents \"true\" Java Map types.\nClass MapType;\n// Helper type used when introspecting bindings for already resolved types, needed for specialization.\nClass PlaceholderForType;\n// Specialized SimpleType for types that are referential types, that is, values that can be dereferenced to another value (or null), of different type.\nClass ReferenceType;\n// Internal placeholder type used for self-references.\nClass ResolvedRecursiveType;\n// Simple types are defined as anything other than one of recognized container types (arrays, Collections, Maps).\nClass SimpleType;\n// \nClass TypeBase;\n// Helper class used for resolving type parameters for given class\nClass TypeBindings;\n// Class used for creating concrete JavaType instances, given various inputs.\nClass TypeFactory;\n// Class that defines API that can be used to modify details of JavaType instances constructed using TypeFactory.\nClass TypeModifier;\n// Simple recursive-descent parser for parsing canonical JavaType representations and constructing type instances.\nClass TypeParser;\n// Set of logical types (or type categories, classes of classes), used for defining applicability of configuration like coercion configuration.\nEnum LogicalType;\n", "des": "Package that contains concrete implementations of JavaType, as well as the factory (TypeFactory) for constructing instances from various input data types (like Class, Type) and programmatically (for structured types, arrays, Lists and Maps)."}
{"index": 697, "repo": "jackson-databind-2.15.2", "code": "package util\n\n// Interface that defines interface for accessing contents of a collection of annotations.\nInterface Annotations;\n// Helper interface for things that convert Objects of one type to another.\nInterface Converter<IN,OUT>;\n// An interface describing the required API for the Jackson-databind Type cache.\nInterface LookupCache<K,V>;\n// Simple tag interface mostly to allow sorting by name.\nInterface Named;\n// Helper class that contains set of distinct builders for different arrays of primitive values.\nClass ArrayBuilders;\n// \nClass ArrayBuilders.BooleanBuilder;\n// \nClass ArrayBuilders.ByteBuilder;\n// \nClass ArrayBuilders.DoubleBuilder;\n// \nClass ArrayBuilders.FloatBuilder;\n// \nClass ArrayBuilders.IntBuilder;\n// \nClass ArrayBuilders.LongBuilder;\n// \nClass ArrayBuilders.ShortBuilder;\n// Iterator implementation used to efficiently expose contents of an Array as read-only iterator.\nClass ArrayIterator<T>;\n// Helper class that contains functionality needed by both serialization and deserialization side.\nClass BeanUtil;\n// Simple InputStream implementation that exposes currently available content of a ByteBuffer.\nClass ByteBufferBackedInputStream;\n// Simple OutputStream implementation that appends content written in given ByteBuffer instance.\nClass ByteBufferBackedOutputStream;\n// \nClass ClassUtil;\n// Value class used for caching Constructor declarations; used because caching done by JDK appears to be somewhat inefficient for some use cases.\nClass ClassUtil.Ctor;\n// Specialized lookup class that implements functionality similar to Map, but for special case of key always being String and using more compact (and memory-access friendly) hashing scheme.\nClass CompactStringObjectMap;\n// This marker class is only to be used with annotations, to indicate that no converter is to be used.\nClass Converter.None;\n// Helper class used to resolve String values (either JSON Object field names or regular String values) into Java Enum instances.\nClass EnumResolver;\n// Helper class used for storing String serializations of Enums, to match to/from external representations.\nClass EnumValues;\n// Utility methods for dealing with exceptions/throwables\nClass ExceptionUtil;\n// \nClass IgnorePropertiesUtil;\n// Helper class to encapsulate logic from static shouldIgnore method of util class.\nClass IgnorePropertiesUtil.Checker;\n", "des": "Utility classes for Mapper package."}
{"index": 698, "repo": "jackson-databind-2.15.2", "code": "package internal\n\n// A hash table supporting full concurrency of retrievals, adjustable expected concurrency for updates, and a maximum capacity to bound the map by.\nClass PrivateMaxEntriesMap<K,V>;\n// A builder that creates PrivateMaxEntriesMap instances.\nClass PrivateMaxEntriesMap.Builder<K,V>;\n", "des": "This package contains an implementation of a bounded ConcurrentMap data structure."}
{"index": 699, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package dsl\n\n// The main Integration DSL abstraction.\nInterface IntegrationFlow;\n// The Channels-specific Function.\nInterface IntegrationFlows.ChannelsFunction;\n// The MessageProducers-specific Function.\nInterface IntegrationFlows.MessageProducersFunction;\n// The MessageSources-specific Function.\nInterface IntegrationFlows.MessageSourcesFunction;\n// The MessagingGateways-specific Function.\nInterface IntegrationFlows.MessagingGatewaysFunction;\n// A MessageHandlerSpec for AbstractMessageRouters.\nClass AbstractRouterSpec<S extends AbstractRouterSpec<S,R>,R extends org.springframework.integration.router.AbstractMessageRouter>;\n// \nClass Adapters;\n// A CorrelationHandlerSpec for an AggregatingMessageHandler.\nClass AggregatorSpec;\n// A MessageHandlerSpec for the BarrierMessageHandler.\nClass BarrierSpec;\n// \nClass Channels;\n// A MessageHandlerSpec for an AbstractCorrelatingMessageHandler.\nClass CorrelationHandlerSpec<S extends CorrelationHandlerSpec<S,H>,H extends org.springframework.integration.aggregator.AbstractCorrelatingMessageHandler>;\n// A ConsumerEndpointSpec for a DelayHandler.\nClass DelayerEndpointSpec;\n// The MessageHandlerSpec implementation for the ContentEnricher.\nClass EnricherSpec;\n// A ConsumerEndpointSpec implementation for the MessageFilter.\nClass FilterEndpointSpec;\n// A ConsumerEndpointSpec implementation for a mid-flow GatewayMessageHandler.\nClass GatewayEndpointSpec;\n// A ConsumerEndpointSpec for a MessageHandler implementations.\nClass GenericEndpointSpec<H extends org.springframework.messaging.MessageHandler>;\n// An IntegrationComponentSpec for a HeaderEnricher.\nClass HeaderEnricherSpec;\n// The base Adapter class for the IntegrationFlow abstraction.\nClass IntegrationFlowAdapter;\n// \nClass IntegrationFlowBuilder;\n// The Builder pattern implementation for the EIP-method chain.\nClass IntegrationFlowDefinition<B extends IntegrationFlowDefinition<B>>;\n// The central factory for fluent IntegrationFlowBuilder API.\nClass IntegrationFlows;\n// \nClass MessageProducers;\n// Provides various factory methods for MessageSourceSpecs from Namespace Factories.\nClass MessageSources;\n// \nClass MessagingGateways;\n// \nClass PublishSubscribeSpec;\n", "des": "Root package of the Spring Integration Java DSL."}
{"index": 700, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package amqp\n\n// Factory class for AMQP components.\nClass Amqp;\n// \nClass AmqpAsyncOutboundGatewaySpec;\n// The base MessageProducerSpec implementation for a AmqpInboundChannelAdapter.\nClass AmqpBaseInboundChannelAdapterSpec<S extends AmqpBaseInboundChannelAdapterSpec<S>>;\n// A base MessagingGatewaySpec implementation for AmqpInboundGateway endpoint options.\nClass AmqpBaseInboundGatewaySpec<S extends AmqpBaseInboundGatewaySpec<S>>;\n// The base MessageHandlerSpec for AbstractAmqpOutboundEndpoints.\nClass AmqpBaseOutboundEndpointSpec<S extends AmqpBaseOutboundEndpointSpec<S,E>,E extends org.springframework.integration.amqp.outbound.AbstractAmqpOutboundEndpoint>;\n// A MessageProducerSpec for AmqpInboundChannelAdapters.\nClass AmqpInboundChannelAdapterSpec;\n// An AmqpBaseInboundGatewaySpec implementation for a AmqpInboundGateway.\nClass AmqpInboundGatewaySpec;\n// An AmqpPollableMessageChannelSpec for a message-driven PointToPointSubscribableAmqpChannel.\nClass AmqpMessageChannelSpec<S extends AmqpMessageChannelSpec<S>>;\n// \nClass AmqpOutboundEndpointSpec;\n// A MessageChannelSpec for a AbstractAmqpChannels.\nClass AmqpPollableMessageChannelSpec<S extends AmqpPollableMessageChannelSpec<S>>;\n// A AmqpMessageChannelSpec for PublishSubscribeAmqpChannels.\nClass AmqpPublishSubscribeMessageChannelSpec;\n", "des": "Provides AMQP Components support for Spring Integration Java DSL."}
{"index": 701, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package channel\n\n// \nClass DirectChannelSpec;\n// \nClass ExecutorChannelSpec;\n// \nClass LoadBalancingChannelSpec<S extends MessageChannelSpec<S,C>,C extends org.springframework.integration.channel.AbstractMessageChannel>;\n// \nClass MessageChannels;\n// \nClass MessageChannelSpec<S extends MessageChannelSpec<S,C>,C extends org.springframework.integration.channel.AbstractMessageChannel>;\n// \nClass PriorityChannelSpec;\n// \nClass PublishSubscribeChannelSpec<S extends PublishSubscribeChannelSpec<S>>;\n// \nClass QueueChannelSpec;\n// The ChannelMessageStore-specific QueueChannelSpec extension.\nClass QueueChannelSpec.MessageStoreSpec;\n// \nClass RendezvousChannelSpec;\n// The IntegrationComponentSpec implementation for the WireTap component.\nClass WireTapSpec;\n", "des": "Contains MessageChannel Builders DSL."}
{"index": 702, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package config\n\n// The Java DSL Integration infrastructure beanFactory initializer.\nClass DslIntegrationConfigurationInitializer;\n// A BeanPostProcessor to parse IntegrationFlow beans and register their components as beans in the provided BeanFactory, if necessary.\nClass IntegrationFlowBeanPostProcessor;\n", "des": "Provides config classes of the Spring Integration Java DSL."}
{"index": 703, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package context\n\n// A public API for dynamic (manual) registration of IntegrationFlow, not via standard bean registration phase.\nClass IntegrationFlowContext;\n// Instances of this classes are returned as a result of IntegrationFlowContext.registration(IntegrationFlow) invocation and provide an API for some useful IntegrationFlow options and its lifecycle.\nClass IntegrationFlowRegistration;\n", "des": "The context support classes for Spring Integration Java DSL."}
{"index": 704, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package core\n\n// The marker interface for the IntegrationComponentSpec implementation, when there is need to register as beans not only the target spec's components, but some additional components, e.g.\nInterface ComponentsRegistration;\n// A EndpointSpec for consumer endpoints.\nClass ConsumerEndpointSpec<S extends ConsumerEndpointSpec<S,H>,H extends org.springframework.messaging.MessageHandler>;\n// An IntegrationComponentSpec for endpoints.\nClass EndpointSpec<S extends EndpointSpec<S,F,H>,F extends org.springframework.beans.factory.BeanNameAware,H>;\n// The common Builder abstraction.\nClass IntegrationComponentSpec<S extends IntegrationComponentSpec<S,T>,T>;\n// An IntegrationComponentSpec for MessageHandlers.\nClass MessageHandlerSpec<S extends MessageHandlerSpec<S,H>,H extends org.springframework.messaging.MessageHandler>;\n// The IntegrationComponentSpec specific base class for MessageProcessors.\nClass MessageProcessorSpec<S extends MessageProcessorSpec<S>>;\n// An IntegrationComponentSpec for MessageProducers.\nClass MessageProducerSpec<S extends MessageProducerSpec<S,P>,P extends org.springframework.integration.endpoint.MessageProducerSupport>;\n// An IntegrationComponentSpec for MessageSources.\nClass MessageSourceSpec<S extends MessageSourceSpec<S,H>,H extends org.springframework.integration.core.MessageSource<?>>;\n// An IntegrationComponentSpec for MessagingGatewaySupports.\nClass MessagingGatewaySpec<S extends MessagingGatewaySpec<S,G>,G extends org.springframework.integration.gateway.MessagingGatewaySupport>;\n// An Adapter class for the Pollers factory.\nClass PollerFactory;\n// An utility class to provide PollerSpecs for PollerMetadata configuration variants.\nClass Pollers;\n// An IntegrationComponentSpec for PollerMetadatas.\nClass PollerSpec;\n", "des": "Provides core classes of the Spring Integration Java DSL."}
{"index": 705, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package feed\n\n// The Spring Integration Feed components Factory.\nClass Feed;\n// A MessageSourceSpec for a FeedEntryMessageSource.\nClass FeedEntryMessageSourceSpec;\n", "des": "Provides Feed Components support for Spring Integration Java DSL."}
{"index": 706, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package file\n\n// A MessageSourceSpec for a FileReadingMessageSource.\nClass FileInboundChannelAdapterSpec;\n// The Spring Integration File components Factory.\nClass Files;\n// The MessageHandlerSpec for the FileSplitter.\nClass FileSplitterSpec;\n// \nClass FileTransferringMessageHandlerSpec<F,S extends FileTransferringMessageHandlerSpec<F,S>>;\n// \nClass FileWritingMessageHandlerSpec;\n// A MessageSourceSpec for an AbstractInboundFileSynchronizingMessageSource.\nClass RemoteFileInboundChannelAdapterSpec<F,S extends RemoteFileInboundChannelAdapterSpec<F,S,MS>,MS extends org.springframework.integration.file.remote.synchronizer.AbstractInboundFileSynchronizingMessageSource<F>>;\n// \nClass RemoteFileOutboundGatewaySpec<F,S extends RemoteFileOutboundGatewaySpec<F,S>>;\n// A MessageProducerSpec for file tailing adapters.\nClass TailAdapterSpec;\n", "des": "Provides File Components support for Spring Integration Java DSL."}
{"index": 707, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package ftp\n\n// The factory for Spring Integration FTP components.\nClass Ftp;\n// A RemoteFileInboundChannelAdapterSpec for a FtpInboundFileSynchronizingMessageSource.\nClass FtpInboundChannelAdapterSpec;\n// \nClass FtpMessageHandlerSpec;\n// \nClass FtpOutboundGatewaySpec;\n", "des": "Provides FTP Components support for Spring Integration Java DSL."}
{"index": 708, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package http\n\n// \nClass BaseHttpInboundEndpointSpec<S extends BaseHttpInboundEndpointSpec<S,E>,E extends org.springframework.integration.http.inbound.HttpRequestHandlingEndpointSupport>;\n// A fluent API for the CrossOrigin.\nClass BaseHttpInboundEndpointSpec.CrossOriginSpec;\n// A fluent API for the RequestMapping.\nClass BaseHttpInboundEndpointSpec.RequestMappingSpec;\n// The HTTP components Factory.\nClass Http;\n// The BaseHttpInboundEndpointSpec implementation for the HttpRequestHandlingController.\nClass HttpControllerEndpointSpec;\n// The MessageHandlerSpec implementation for the HttpRequestExecutingMessageHandler.\nClass HttpMessageHandlerSpec;\n// The BaseHttpInboundEndpointSpec implementation for the HttpRequestHandlingMessagingGateway.\nClass HttpRequestHandlerEndpointSpec;\n", "des": "Provides HTTP Components support for Spring Integration Java DSL."}
{"index": 709, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package jms\n\n// Factory class for JMS components.\nClass Jms;\n// A DefaultMessageListenerContainer specific JmsListenerContainerSpec extension.\nClass JmsDefaultListenerContainerSpec;\n// A base IntegrationComponentSpec for JmsDestinationAccessors.\nClass JmsDestinationAccessorSpec<S extends JmsDestinationAccessorSpec<S,A>,A extends org.springframework.jms.support.destination.JmsDestinationAccessor>;\n// A MessageSourceSpec for a JmsDestinationPollingSource.\nClass JmsInboundChannelAdapterSpec<S extends JmsInboundChannelAdapterSpec<S>>;\n// A JmsTemplate-based JmsInboundChannelAdapterSpec extension.\nClass JmsInboundChannelAdapterSpec.JmsInboundChannelSpecTemplateAware;\n// \nClass JmsInboundGateway;\n// A MessagingGatewaySpec for a JmsInboundGateway.\nClass JmsInboundGatewaySpec<S extends JmsInboundGatewaySpec<S>>;\n// An AbstractMessageListenerContainer-based JmsInboundGatewaySpec extension.\nClass JmsInboundGatewaySpec.JmsInboundGatewayListenerContainerSpec<S extends JmsListenerContainerSpec<S,C>,C extends org.springframework.jms.listener.AbstractMessageListenerContainer>;\n// A JmsDestinationAccessorSpec for JmsListenerContainerSpecs.\nClass JmsListenerContainerSpec<S extends JmsListenerContainerSpec<S,C>,C extends org.springframework.jms.listener.AbstractMessageListenerContainer>;\n// A JmsMessageChannelSpec for subscribable AbstractJmsChannels.\nClass JmsMessageChannelSpec<S extends JmsMessageChannelSpec<S>>;\n// \nClass JmsMessageDrivenChannelAdapter;\n// A MessageProducerSpec for JmsMessageDrivenChannelAdapters.\nClass JmsMessageDrivenChannelAdapterSpec<S extends JmsMessageDrivenChannelAdapterSpec<S>>;\n// \nClass JmsMessageDrivenChannelAdapterSpec.JmsMessageDrivenChannelAdapterListenerContainerSpec<S extends JmsListenerContainerSpec<S,C>,C extends org.springframework.jms.listener.AbstractMessageListenerContainer>;\n// A MessageHandlerSpec for a JmsSendingMessageHandler.\nClass JmsOutboundChannelAdapterSpec<S extends JmsOutboundChannelAdapterSpec<S>>;\n// A JmsTemplate-based JmsOutboundChannelAdapterSpec extension.\nClass JmsOutboundChannelAdapterSpec.JmsOutboundChannelSpecTemplateAware;\n// A MessageHandlerSpec for a JmsOutboundGateway.\nClass JmsOutboundGatewaySpec;\n", "des": "Provides JMS Components support for Spring Integration Java DSL."}
{"index": 710, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package jpa\n\n// Factory class for JPA components.\nClass Jpa;\n// The base MessageHandlerSpec for JPA Outbound endpoints.\nClass JpaBaseOutboundEndpointSpec<S extends JpaBaseOutboundEndpointSpec<S>>;\n// A MessageSourceSpec for a JpaPollingChannelAdapter.\nClass JpaInboundChannelAdapterSpec;\n// A JpaBaseOutboundEndpointSpec extension for the JpaOutboundGateway with OutboundGatewayType.RETRIEVING mode.\nClass JpaRetrievingOutboundGatewaySpec;\n// A JpaBaseOutboundEndpointSpec extension for the updating JpaOutboundGateway mode.\nClass JpaUpdatingOutboundEndpointSpec;\n", "des": "Provides JPA Components support for Spring Integration Java DSL."}
{"index": 711, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package kafka\n\n// Factory class for Apache Kafka components.\nClass Kafka;\n// A MessageProducerSpec implementation for the KafkaMessageDrivenChannelAdapter.\nClass KafkaMessageDrivenChannelAdapterSpec<K,V,S extends KafkaMessageDrivenChannelAdapterSpec<K,V,S>>;\n// A ConcurrentMessageListenerContainer configuration KafkaMessageDrivenChannelAdapterSpec extension.\nClass KafkaMessageDrivenChannelAdapterSpec.KafkaMessageDrivenChannelAdapterListenerContainerSpec<K,V>;\n// A helper class in the Builder pattern style to delegate options to the ConcurrentMessageListenerContainer.\nClass KafkaMessageDrivenChannelAdapterSpec.KafkaMessageListenerContainerSpec<K,V>;\n// A MessageHandlerSpec implementation for the KafkaProducerMessageHandler.\nClass KafkaProducerMessageHandlerSpec<K,V>;\n// A KafkaTemplate-based KafkaProducerMessageHandlerSpec extension.\nClass KafkaProducerMessageHandlerSpec.KafkaProducerMessageHandlerTemplateSpec<K,V>;\n", "des": "Provides Kafka Components support for Spring Integration Java DSL."}
{"index": 712, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package mail\n\n// A MessageProducerSpec for a ImapIdleChannelAdapter.\nClass ImapIdleChannelAdapterSpec;\n// A MailInboundChannelAdapterSpec for IMAP.\nClass ImapMailInboundChannelAdapterSpec;\n// The factory for Spring Integration Mail components.\nClass Mail;\n// The Mail specific MapBuilder implementation.\nClass MailHeadersBuilder;\n// A MessageSourceSpec for a MailReceivingMessageSource.\nClass MailInboundChannelAdapterSpec<S extends MailInboundChannelAdapterSpec<S,R>,R extends org.springframework.integration.mail.AbstractMailReceiver>;\n// \nClass MailSendingMessageHandlerSpec;\n// A MailInboundChannelAdapterSpec for POP3.\nClass Pop3MailInboundChannelAdapterSpec;\n", "des": "Provides Mail Components support for Spring Integration Java DSL."}
{"index": 713, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package scripting\n\n// The MessageSourceSpec for Dynamic Language Scripts.\nClass ScriptMessageSourceSpec;\n// The factory for Dynamic Language Scripts (Groovy, Ruby, Python, JavaScript etc.).\nClass Scripts;\n// The MessageProcessorSpec implementation for the DslScriptExecutingMessageProcessor.\nClass ScriptSpec;\n", "des": "Provides Scripting Components support for Spring Integration Java DSL."}
{"index": 714, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package sftp\n\n// \nClass Sftp;\n// A RemoteFileInboundChannelAdapterSpec for a SftpInboundFileSynchronizingMessageSource.\nClass SftpInboundChannelAdapterSpec;\n// \nClass SftpMessageHandlerSpec;\n// \nClass SftpOutboundGatewaySpec;\n", "des": "Provides SFTP Components support for Spring Integration Java DSL."}
{"index": 715, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package support\n\n// Implementations accept a given value and perform work on the argument.\nInterface Consumer<T>;\n// Implementations of this class perform work on the given parameter and return a result of an optionally different type.\nInterface Function<T,R>;\n// A functional interface to specify MessageHandler logic with Java 8 Lambda expression: .<Integer>handle((p, h) -> p / 2)\nInterface GenericHandler<P>;\n// An \"artificial\" MessageProcessor for lazy-load of target bean by its name.\nClass BeanNameMessageProcessor<T>;\n// An \"artificial\" MessageChannel implementation which will be unwrapped to the FixedSubscriberChannel on the bean registration phase.\nClass FixedSubscriberChannelPrototype;\n// An Expression that simply invokes Function.apply(Object) on its provided Function.\nClass FunctionExpression<S>;\n// A Builder pattern implementation for the Map.\nClass MapBuilder<B extends MapBuilder<B,K,V>,K,V>;\n// An \"artificial\" MessageChannel implementation which will be unwrapped to the MessageChannel bean on the bean registration phase.\nClass MessageChannelReference;\n// The MessageSource strategy implementation to produce a Message from underlying MessageProcessorMessageSource.messageProcessor for polling endpoints.\nClass MessageProcessorMessageSource;\n// A Builder pattern implementation for the Properties.\nClass PropertiesBuilder;\n// A map builder creating a map with String keys and values.\nClass StringStringMapBuilder;\n// An utility class to provide methods for out-of-the-box Transformers.\nClass Transformers;\n", "des": "Provides various support classes used across Spring Integration Java DSL Components."}
{"index": 716, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package tuple\n\n// A Tuple is an immutable Collection of objects, each of which can be of an arbitrary type.\nClass Tuple;\n// A tuple that holds a single value.\nClass Tuple1<T1>;\n// A tuple that holds two values.\nClass Tuple2<T1,T2>;\n// The Tuple factory.\nClass Tuples;\n", "des": "Tuples provide a type-safe way to specify multiple parameters."}
{"index": 717, "repo": "spring-integration-java-dsl-1.2.3.RELEASE", "code": "package transaction\n\n// A TransactionInterceptor extension with HandleMessageAdvice marker.\nClass TransactionHandleMessageAdvice;\n// Provides a fluent API to build a transaction interceptor.\nClass TransactionInterceptorBuilder;\n", "des": "Provides classes supporting Transactions."}
{"index": 718, "repo": "commons-codec-1.16.0", "code": "package codec\n\n// Defines common decoding methods for byte array decoders.\nInterface BinaryDecoder;\n// Defines common encoding methods for byte array encoders.\nInterface BinaryEncoder;\n// Provides the highest level of abstraction for Decoders.\nInterface Decoder;\n// Provides the highest level of abstraction for Encoders.\nInterface Encoder;\n// Defines common decoding methods for String decoders.\nInterface StringDecoder;\n// Defines common encoding methods for String encoders.\nInterface StringEncoder;\n// Character encoding names required of every implementation of the Java platform.\nClass CharEncoding;\n// Charsets required of every implementation of the Java platform.\nClass Charsets;\n// Consider this class package private.\nClass Resources;\n// Compares Strings using a StringEncoder.\nClass StringEncoderComparator;\n// Defines encoding and decoding policies.\nEnum CodecPolicy;\n// Thrown when there is a failure condition during the decoding process.\nClass DecoderException;\n// Thrown when there is a failure condition during the encoding process.\nClass EncoderException;\n", "des": "Interfaces and classes used by the various implementations in the sub-packages."}
{"index": 719, "repo": "commons-codec-1.16.0", "code": "package binary\n\n// Provides Base16 encoding and decoding.\nClass Base16;\n// Provides Base16 encoding and decoding in a streaming fashion (unlimited size).\nClass Base16InputStream;\n// Provides Hex encoding and decoding in a streaming fashion (unlimited size).\nClass Base16OutputStream;\n// Provides Base32 encoding and decoding as defined by RFC 4648.\nClass Base32;\n// Provides Base32 encoding and decoding in a streaming fashion (unlimited size).\nClass Base32InputStream;\n// Provides Base32 encoding and decoding in a streaming fashion (unlimited size).\nClass Base32OutputStream;\n// Provides Base64 encoding and decoding as defined by RFC 2045.\nClass Base64;\n// Provides Base64 encoding and decoding in a streaming fashion (unlimited size).\nClass Base64InputStream;\n// Provides Base64 encoding and decoding in a streaming fashion (unlimited size).\nClass Base64OutputStream;\n// Abstract superclass for Base-N encoders and decoders.\nClass BaseNCodec;\n// Abstract superclass for Base-N input streams.\nClass BaseNCodecInputStream;\n// Abstract superclass for Base-N output streams.\nClass BaseNCodecOutputStream;\n// Converts between byte arrays and strings of \"0\"s and \"1\"s.\nClass BinaryCodec;\n// Operations on CharSequence that are null safe.\nClass CharSequenceUtils;\n// Converts hexadecimal Strings.\nClass Hex;\n// Converts String to and from bytes using the encodings required by the Java specification.\nClass StringUtils;\n", "des": "Base64, Base32, Binary, and Hexadecimal String encoding and decoding."}
{"index": 720, "repo": "commons-codec-1.16.0", "code": "package cli\n\n// A minimal command line to run digest over files, directories or a string.\nClass Digest;\n", "des": "Command line utility."}
{"index": 721, "repo": "commons-codec-1.16.0", "code": "package digest\n\n// Implements the Blake3 algorithm providing a hash function with extensible output (XOF), a keyed hash function (MAC, PRF), and a key derivation function (KDF).\nClass Blake3;\n// GNU libc crypt(3) compatible hash method.\nClass Crypt;\n// Operations to simplify common MessageDigest tasks.\nClass DigestUtils;\n// Simplifies common Mac tasks.\nClass HmacUtils;\n// The libc crypt() \"$1$\" and Apache \"$apr1$\" MD5-based hash algorithm.\nClass Md5Crypt;\n// Standard MessageDigest algorithm names from the Java Cryptography Architecture Standard Algorithm Name Documentation.\nClass MessageDigestAlgorithms;\n// Implementation of the MurmurHash2 32-bit and 64-bit hash functions.\nClass MurmurHash2;\n// Implementation of the MurmurHash3 32-bit and 128-bit hash functions.\nClass MurmurHash3;\n// Use IncrementalHash32x86.\nClass MurmurHash3.IncrementalHash32;\n// Generates 32-bit hash from input bytes.\nClass MurmurHash3.IncrementalHash32x86;\n// A pure-java implementation of the CRC32 checksum that uses the same polynomial as the built-in native CRC32.\nClass PureJavaCrc32;\n// A pure-java implementation of the CRC32 checksum that uses the CRC32-C polynomial, the same polynomial used by iSCSI and implemented on many Intel chipsets supporting SSE 4.2.\nClass PureJavaCrc32C;\n// SHA2-based Unix crypt implementation.\nClass Sha2Crypt;\n// Unix crypt(3) algorithm implementation.\nClass UnixCrypt;\n// Implementation of the xxHash32 hash algorithm.\nClass XXHash32;\n// Standard HmacUtils algorithm names from the Java Cryptography Architecture Standard Algorithm Name Documentation.\nEnum HmacAlgorithms;\n", "des": "Simplifies common MessageDigest tasks and includes a libc crypt(3) compatible crypt method that supports DES, MD5, SHA-256 and SHA-512 based algorithms as well as the Apache specific \"$apr1$\" variant."}
{"index": 722, "repo": "commons-codec-1.16.0", "code": "package language\n\n// Encodes a string into a Caverphone value.\nClass AbstractCaverphone;\n// 1.5 Replaced by Caverphone2, will be removed in 2.0.\nClass Caverphone;\n// Encodes a string into a Caverphone 1.0 value.\nClass Caverphone1;\n// Encodes a string into a Caverphone 2.0 value.\nClass Caverphone2;\n// Encodes a string into a Cologne Phonetic value.\nClass ColognePhonetic;\n// Encodes a string into a Daitch-Mokotoff Soundex value.\nClass DaitchMokotoffSoundex;\n// Encodes a string into a double metaphone value.\nClass DoubleMetaphone;\n// Match Rating Approach Phonetic Algorithm Developed by Western Airlines in 1977.\nClass MatchRatingApproachEncoder;\n// Encodes a string into a Metaphone value.\nClass Metaphone;\n// Encodes a string into a NYSIIS value.\nClass Nysiis;\n// Encodes a string into a Refined Soundex value.\nClass RefinedSoundex;\n// Encodes a string into a Soundex value.\nClass Soundex;\n", "des": "Language and phonetic encoders."}
{"index": 723, "repo": "commons-codec-1.16.0", "code": "package bm\n\n// \nInterface Rule.PhonemeExpr;\n// A minimal wrapper around the functionality of Pattern that we use, to allow for alternate implementations.\nInterface Rule.RPattern;\n// Encodes strings into their Beider-Morse phonetic encoding.\nClass BeiderMorseEncoder;\n// Language guessing utility.\nClass Lang;\n// Language codes.\nClass Languages;\n// A set of languages.\nClass Languages.LanguageSet;\n// Some languages, explicitly enumerated.\nClass Languages.SomeLanguages;\n// Converts words into potential phonetic representations.\nClass PhoneticEngine;\n// A phoneme rule.\nClass Rule;\n// \nClass Rule.Phoneme;\n// \nClass Rule.PhonemeList;\n// Supported types of names.\nEnum NameType;\n// Types of rule.\nEnum RuleType;\n", "des": "Implementation details of the Beider-Morse codec."}
{"index": 724, "repo": "commons-codec-1.16.0", "code": "package net\n\n// Identical to the Base64 encoding defined by RFC 1521 and allows a character set to be specified.\nClass BCodec;\n// Implements the Percent-Encoding scheme, as described in HTTP 1.1 specification.\nClass PercentCodec;\n// Similar to the Quoted-Printable content-transfer-encoding defined in RFC 1521 and designed to allow text containing mostly ASCII characters to be decipherable on an ASCII terminal without decoding.\nClass QCodec;\n// Codec for the Quoted-Printable section of RFC 1521.\nClass QuotedPrintableCodec;\n// Implements the 'www-form-urlencoded' encoding scheme, also misleadingly known as URL encoding.\nClass URLCodec;\n", "des": "Network related encoding and decoding."}
{"index": 725, "repo": "mina-core-3.0.0-M2", "code": "package api\n\n// Connects to several end-points, communicates with the server, and fires events to org.apache.mina.service.IoHandlers.\nInterface IoClient;\n// Filter are interceptors/processors for incoming data received/sent.\nInterface IoFilter;\n// A simple extension that allows listeners to register and receive results asynchronously via registered listeners.\nInterface IoFuture<V>;\n// A listener that asynchronously receives the result of a future computation.\nInterface IoFutureListener<V>;\n// Handle all the I/O events generated by a IoService.\nInterface IoHandler;\n// A network server bound to a local address.\nInterface IoServer;\n// Base interface for all IoServers and IoClients that provide I/O service and manage IoSession s.\nInterface IoService;\n// A handle which represents a connection between two end-points regardless of transport types.\nInterface IoSession;\n// The configuration of IoSession.\nInterface IoSessionConfig;\n// A convenient IoFilter implementation to be sub-classed for easier IoFilter implementation.\nClass AbstractIoFilter;\n// Convenient base implementation for IoFutureListener. if something wrong happen the exception is rethrown, which will produce an exception caught event for the session\nClass AbstractIoFutureListener<V>;\n// A convenient IoHandler implementation to be sub-classed for easier IoHandler implementation.\nClass AbstractIoHandler;\n// Represents the type of idleness of IoSession.\nEnum IdleStatus;\n// State of a IoSession\nEnum IoSession.SessionState;\n// A RuntimeException thrown when something wrong happened during IoService or IoSession configuration.\nClass ConfigurationException;\n// Something very wrong happened in the low level part of I/O processing.\nClass MinaRuntimeException;\n", "des": "Base API for the MINA library."}
{"index": 726, "repo": "mina-core-3.0.0-M2", "code": "package executor\n\n// A IoHandler event to be submitted to an IoHandlerExecutor.\nInterface Event;\n// Implement this interface for implementing different behavior on different Event.\nInterface EventVisitor;\n// A class in charge of executing IoHandler related events.\nInterface IoHandlerExecutor;\n// A session was closed event.\nClass CloseEvent;\n// An IoSession is idle (no sent or receive events)\nClass IdleEvent;\n// An IoSession open Event\nClass OpenEvent;\n// Use this executor if you want the IoHandler events of a session to be executed in order and on the same thread.\nClass OrderedHandlerExecutor;\n// A IoSession received a message Event.\nClass ReceiveEvent;\n// An IoSession sent a message Event\nClass SentEvent;\n// (in progress)\nClass UnorderHandlerExecutor;\n", "des": "Classes in charge of decoupling IoHandler event of the low level read/write/accept I/O threads ( SelectorLoop )."}
{"index": 727, "repo": "mina-core-3.0.0-M2", "code": "package bio\n\n// A java blocking I/O based UDP server.\nClass BioUdpServer;\n// A IoSession for BioUdpServer\nClass BioUdpSession;\n", "des": "Transport implementation base on blocking I/O Socket"}
{"index": 728, "repo": "mina-core-3.0.0-M2", "code": "package nio\n\n// To be used with NioSelectorLoop for being informed when the SelectionKey was created and registered.\nInterface RegistrationCallback;\n// Listen for selector events.\nInterface SelectorListener;\n// \nInterface SelectorLoop;\n// A pool of SelectorLoop\nInterface SelectorLoopPool;\n// Common ancestor for NIO based IoSession implmentation.\nClass AbstractNioSession;\n// A fixed size pool of SelectorLoop.\nClass FixedSelectorLoopPool;\n// This class holds a Selector and handle all the incoming events for the sessions registered on this selector.ALl the events will be processed by some dedicated thread, taken from a pool.\nClass NioSelectorLoop;\n// This class implements a TCP NIO based client.\nClass NioTcpClient;\n// This class implements a TCP NIO based server.\nClass NioTcpServer;\n// A NIO based TCP session, should be used by NioTcpServer and NioTcpClient.\nClass NioTcpSession;\n// This class implements a UDP NIO based client.\nClass NioUdpClient;\n// This class implements a UDP NIO based server.\nClass NioUdpServer;\n// A UDP session based on NIO\nClass NioUdpSession;\n// An helper class used to manage everything related to SSL/TLS establishment and management.\nClass SslHelper;\n", "des": "Transport implementations base on NIO (New I/O), Channel"}
{"index": 729, "repo": "mina-core-3.0.0-M2", "code": "package tcp\n\n// A IoSessionConfig for socket based sessions.\nInterface TcpSessionConfig;\n// Base class for TCP based Clients\nClass AbstractTcpClient;\n// Base class for TCP based Servers\nClass AbstractTcpServer;\n// Implementation for the socket session configuration.\nClass DefaultTcpSessionConfig;\n// This class proxy the inner java.net.Socket configuration with the SocketSessionConfig of the session.\nClass ProxyTcpSessionConfig;\n", "des": "Shared plumber for TCP transport implementations."}
{"index": 730, "repo": "mina-core-3.0.0-M2", "code": "package udp\n\n// A IoSessionConfig for UDP based sessions.\nInterface UdpSessionConfig;\n// Base class for UDP based Clients\nClass AbstractUdpClient;\n// Base implementation for all the UDP servers.\nClass AbstractUdpServer;\n// Implementation for the UDP session configuration.\nClass DefaultUdpSessionConfig;\n", "des": "Shared plumber UDP transport implementations."}
{"index": 731, "repo": "spring-data-solr-4.3.15", "code": "package solr\n\n// Version util uses ClassUtils.isPresent(String, ClassLoader) to determine presence of certain classes that are unique to some libraries, which allows to en-/disable some of the features in eg.\nClass VersionUtil;\n// SolrClient threw an exception that could not be mapped.\nClass UncategorizedSolrException;\n", "des": "Root stuff used through out Spring Data for Apache Solr."}
{"index": 732, "repo": "spring-data-solr-4.3.15", "code": "package core\n\n// The QueryParser takes a spring-data-solr Query and returns a SolrQuery.\nInterface QueryParser;\n// QueryParserBase.PredicateProcessor creates a solr reable query string representation for a given Criteria.Predicate\nInterface QueryParserBase.PredicateProcessor;\n// Callback interface for data access code that works with SolrClient.\nInterface SolrCallback<T>;\n// Interface that specifies a basic set of Solr operations.\nInterface SolrOperations;\n// \nInterface SolrTransactionSynchronizationAdapter.CompletionDelegate;\n// Implementation of QueryParser.\nClass DefaultQueryParser;\n// Base Implementation of QueryParser providing common functions for creating SolrQuery.\nClass QueryParserBase<QUERYTPYE extends SolrDataQuery>;\n// \nClass QueryParsers;\n// Implementation of PersistenceExceptionTranslator capable of translating SolrServerException instances to Spring's DataAccessException hierarchy.\nClass SolrExceptionTranslator;\n// Implementation of SolrOperations\nClass SolrTemplate;\n// \nClass SolrTransactionSynchronizationAdapter;\n// \nClass SolrTransactionSynchronizationAdapter.CommitTransaction;\n// \nClass SolrTransactionSynchronizationAdapter.RollbackTransaction;\n// \nClass SolrTransactionSynchronizationAdapterBuilder;\n// TermsQueryParser is capable of building SolrQuery for TermsQuery\nClass TermsQueryParser;\n// HTTP request types supported by SolrRequest.\nEnum RequestMethod;\n", "des": "Provides the classes necessary for Solr support."}
{"index": 733, "repo": "spring-data-solr-4.3.15", "code": "package convert\n\n// \nInterface SolrConverter;\n// since 2.0, use SolrCustomConversions.\nClass CustomConversions;\n// Converts a Date values into a solr readable String that can be directly used within the q parameter.\nClass DateTimeConverters;\n// Implementation of SolrConverter to read/write SolrDocument/ SolrInputDocument.\nClass MappingSolrConverter;\n// Converts a Number values into a solr readable String that can be directly used within the q parameter.\nClass NumberConverters;\n// \nClass SolrConverterBase;\n// Value object to capture custom conversion.\nClass SolrCustomConversions;\n// Trivial implementation of SolrConverter delegating conversion to DocumentObjectBinder\nClass SolrJConverter;\n// Reading Converter parses Date from SolrDocument to DateTime\nEnum DateTimeConverters.DateToJodaDateTimeConverter;\n// Reading Converter parses Date from SolrDocument to LocalDateTime\nEnum DateTimeConverters.DateToLocalDateTimeConverter;\n// Converter used to parse Date to String used for setting SolrQuery query string values\nEnum DateTimeConverters.JavaDateConverter;\n// Converter used to parse DateTime to String used for setting SolrQuery query string values\nEnum DateTimeConverters.JodaDateTimeConverter;\n// Writing Converter converts DateTime to Date so it can be used within SolrInputDocument\nEnum DateTimeConverters.JodaDateTimeToDateConverter;\n// Converter used to parse LocalDateTime to String used for setting SolrQuery query string values\nEnum DateTimeConverters.JodaLocalDateTimeConverter;\n// Writing Converter converts LocalDateTime to Date so it can be used within SolrInputDocument\nEnum DateTimeConverters.JodaLocalDateTimeToDateConverter;\n// \nEnum DateTimeConverters.StringToJodaDateTimeConverter;\n// \nEnum NumberConverters.NumberConverter;\n", "des": "All the Converters go here."}
{"index": 734, "repo": "spring-data-solr-4.3.15", "code": "package geo\n\n// \nClass GeoConverters;\n// \nClass Point;\n// Converts a Distance to a solrReadable request parameter.\nEnum GeoConverters.DistanceToStringConverter;\n// Converts a Point to a solrReadable request parameter.\nEnum GeoConverters.Point2DToStringConverter;\n// Converts a Point to a solrReadable request parameter.\nEnum GeoConverters.Point3DToStringConverter;\n// Converts comma separated string to Point.\nEnum GeoConverters.StringToPointConverter;\n", "des": "Apache Solr geo specifics."}
{"index": 735, "repo": "spring-data-solr-4.3.15", "code": "package mapping\n\n// \nInterface SolrPersistentEntity<T>;\n// \nInterface SolrPersistentProperty;\n// Solr specific implementation of MappingContext\nClass SimpleSolrMappingContext;\n// Solr specific PersistentEntity implementation holding eg. name of solr core.\nClass SimpleSolrPersistentEntity<T>;\n// Solr specific PersistentProperty implementation processing taking Field into account\nClass SimpleSolrPersistentProperty;\n// \nClass SolrMappingEventPublisher;\n// Set of type that do not need to be converted into a solr readable format\nClass SolrSimpleTypes;\n// \nEnum SolrPersistentProperty.PropertyToFieldNameConverter;\n// Marker interface for Apache Solr child document can be used as an alternative to Field.child().\nAnnotation Type ChildDocument;\n// Declare a field as dynamic.\nAnnotation Type Dynamic;\n// \nAnnotation Type Indexed;\n// Defines the annotated field to store the score of a document within search result.\nAnnotation Type Score;\n// \nAnnotation Type SolrDocument;\n", "des": "All the mapping things!"}
{"index": 736, "repo": "spring-data-solr-4.3.15", "code": "package query\n\n// \nInterface CalculatedField;\n// A Query that combines a FacetQuery and a HighlightQuery\nInterface FacetAndHighlightQuery;\n// Query to be used for faceting.\nInterface FacetQuery;\n// Defines a Field that can be used within Criteria.\nInterface Field;\n// Filter Queries are simple solr Queries applied after executing the original query.\nInterface FilterQuery;\n// \nInterface Function;\n// The Function.Context the Function is used in.\nInterface Function.Context;\n// \nInterface HighlightQuery;\n// Defines a field that could be used within a pivot facet query.\nInterface PivotField;\n// A Query that can be translated into a solr understandable Query.\nInterface Query;\n// Query Parameter to be used when executing query against solr server\nInterface QueryParameter;\n// Class holding a solr readable QueryString that can be used with the q parameter.\nInterface QueryStringHolder;\n// Common interface for any Query\nInterface SolrDataQuery;\n// \nInterface TermsQuery;\n// Update one or more fields of a Document without touching the others.\nInterface Update;\n// \nInterface UpdateField;\n// \nInterface ValueHoldingField;\n// General purpose FacetAndHighlightQuery decorator.\nClass AbstractFacetAndHighlightQueryDecorator;\n// General purpose FacetQuery decorator.\nClass AbstractFacetQueryDecorator;\n// \nClass AbstractFunction;\n// General purpose HighlightQuery decorator.\nClass AbstractHighlightQueryDecorator;\n// General purpose Query abstract decorator.\nClass AbstractQueryDecorator;\n// \nClass AnyCriteria;\n// Criteria is the central class when constructing queries.\nClass Criteria;\n// Single entry to be used when defining search criteria\nClass Criteria.Predicate;\n// \nClass Crotch;\n// Implementation of currency(field_name,[CODE])\nClass CurrencyFunction;\n// Implementation of def(field|function,defaultValue)\nClass DefaultValueFunction;\n// Implementation of CalculatedField for geodist\nClass DistanceField;\n// Implementation of dist(power, pointA, pointB)\nClass DistanceFunction;\n// \nClass DistanceFunction.Builder;\n// Implementation of div(x,y)\nClass DivideFunction;\n// \nClass DivideFunction.Builder;\n// Implementation of exists(field|function)\nClass ExistsFunction;\n", "des": "Query abstractions for SolrQuery."}
{"index": 737, "repo": "spring-data-solr-4.3.15", "code": "package result\n\n// \nInterface CountEntry;\n// Cursor provides a lazy loading abstraction for fetching documents.\nInterface Cursor<T>;\n// FacetAndHighlightPage holds a page for each field targeted by the facet query, each highlight returned by the highlight query as well as the page values returned by the solr query\nInterface FacetAndHighlightPage<T>;\n// FacetEntry is returned as result of a FacetQuery holding the key (eg. fieldname, query,...), value and valueCount for the requested facet\nInterface FacetEntry;\n// Entry for facet on field\nInterface FacetFieldEntry;\n// FacetPage holds a page for each field targeted by the facet query as well as the page values returned by facet.query\nInterface FacetPage<T>;\n// Entry for facet pivot field.\nInterface FacetPivotFieldEntry;\n// Facet Entry for facet via query\nInterface FacetQueryEntry;\n// Hold the results of a solr facet query.\nInterface FacetQueryResult<T>;\n// Specialization of StatsResult to represent statistic information for a field.\nInterface FieldStatsResult;\n// Representation of a group in a GroupResult.\nInterface GroupEntry<T>;\n// Representation of a Group result page, holding one GroupResult for each grouping requested on a org.springframework.data.solr.core.query.GroupQuery.\nInterface GroupPage<T>;\n// Representation of a group in response to group request (i.e. , , ) will have a GroupResult representation.\nInterface GroupResult<T>;\n// HighlightPage holds a page for each field targeted by the highlight query as well as the page values returned by the solr query\nInterface HighlightPage<T>;\n// Hold the results of a solr highlight query.\nInterface HighlightQueryResult<T>;\n// \nInterface PageKey;\n// Specific type of Page holding max score information.\nInterface ScoredPage<T>;\n// \nInterface SpellcheckedPage<T>;\n// \nInterface SpellcheckQueryResult;\n// Representation of a Stats result page, holding one FieldStatsResult for each field statistic requested on a Query through StatsOptions.\nInterface StatsPage<T>;\n// Contract to define representation of statistic information requested using StatsOptions.\nInterface StatsResult;\n// \nInterface TermsEntry;\n// \nInterface TermsFieldEntry;\n", "des": "Query result abstractions for Solr returned NamedList."}
{"index": 738, "repo": "spring-data-solr-4.3.15", "code": "package schema\n\n// \nInterface ContentParser;\n// \nInterface SchemaDefinition.SchemaField;\n// Operations interface for executing modification on a managed schema.\nInterface SchemaOperations;\n// SchemaOperations implementation based on SolrTemplate.\nClass DefaultSchemaOperations;\n// \nClass MappingJacksonRequestContentParser;\n// \nClass MappingJacksonResponseParser;\n// \nClass SchemaDefinition;\n// \nClass SchemaDefinition.CopyFieldDefinition;\n// \nClass SchemaDefinition.CopyFieldDefinition.Builder;\n// \nClass SchemaDefinition.FieldDefinition;\n// \nClass SchemaDefinition.FieldDefinition.Builder;\n// \nClass SchemaDefinition.FieldDefinitionBuilder;\n// \nClass SchemaDefinition.Filter;\n// \nClass SchemaDefinition.Tokenizer;\n// \nClass SolrJsonRequest;\n// \nClass SolrJsonResponse;\n// \nClass SolrPersistentEntitySchemaCreator;\n// \nClass SolrSchemaResolver;\n// \nClass SolrSchemaWriter;\n// \nEnum SolrPersistentEntitySchemaCreator.Feature;\n// NonTransientDataAccessException raised when schema modification requests fail.\nClass SchemaModificationException;\n", "des": "Everything Apache Solr schema specific."}
{"index": 739, "repo": "spring-data-solr-4.3.15", "code": "package repository\n\n// \nInterface SolrCrudRepository<T,ID extends Serializable>;\n// \nInterface SolrRepository<T,ID extends Serializable>;\n// Increase document score by boosting search criteria hit\nAnnotation Type Boost;\n// \nAnnotation Type Facet;\n// \nAnnotation Type Highlight;\n// \nAnnotation Type Pivot;\n// \nAnnotation Type Query;\n// since 4.0.\nAnnotation Type Score;\n// Definition of field selective statistical that shall be executed within the request.\nAnnotation Type SelectiveStats;\n// Enable Solr spellcheck component for a repository query method.\nAnnotation Type Spellcheck;\n// Statistics definition to be performed within a Query.\nAnnotation Type Stats;\n", "des": "Solr specific repository implementation."}
{"index": 740, "repo": "spring-data-solr-4.3.15", "code": "package cdi\n\n// Uses CdiRepositoryBean to create SolrRepository instances.\nClass SolrRepositoryBean<T>;\n// \nClass SolrRepositoryExtension;\n", "des": "Cdi extension."}
{"index": 741, "repo": "spring-data-solr-4.3.15", "code": "package config\n\n// Spring Data for Apache Solr base configuration using JavaConfig.\nClass AbstractSolrConfiguration;\n// RepositoryConfigurationExtension implementation to configure Solr repository configuration support, evaluating the EnableSolrRepositories annotation or the equivalent XML element.\nClass SolrRepositoryConfigExtension;\n// Annotation to enable Solr repositories.\nAnnotation Type EnableSolrRepositories;\n", "des": "Repository configuration and extension support."}
{"index": 742, "repo": "spring-data-solr-4.3.15", "code": "package query\n\n// \nInterface SolrEntityInformation<T,ID>;\n// \nInterface SolrEntityInformationCreator;\n// \nInterface SolrParameterAccessor;\n// Base implementation of a solr specific RepositoryQuery\nClass AbstractSolrQuery;\n// Used to provide additional information on parameters used in query definition.\nClass BindableSolrParameter;\n// Solr specific implementation of a query derived from method name\nClass PartTreeSolrQuery;\n// \nClass SolrParameters;\n// Implementation of SolrParameterAccessor\nClass SolrParametersParameterAccessor;\n// Solr specific implementation of QueryMethod taking care of Query\nClass SolrQueryMethod;\n// Solr specific implementation of RepositoryQuery that can handle string based queries\nClass StringBasedSolrQuery;\n", "des": "Apache Solr specific repository query methods and executions."}
{"index": 743, "repo": "spring-data-solr-4.3.15", "code": "package support\n\n// Solr specific implementation of AbstractEntityInformation\nClass MappingSolrEntityInformation<T,ID>;\n// Solr specific repository implementation.\nClass SimpleSolrRepository<T,ID extends Serializable>;\n// \nClass SolrEntityInformationCreatorImpl;\n// Factory to create SolrRepository\nClass SolrRepositoryFactory;\n// Spring FactoryBean implementation to ease container based configuration for XML namespace and JavaConfig.\nClass SolrRepositoryFactoryBean<T extends Repository<S,ID>,S,ID extends Serializable>;\n", "des": "Repository support classes for bootstrapping application context."}
{"index": 744, "repo": "spring-data-solr-4.3.15", "code": "package server\n\n// SolrClientFactory replaces SolrServerFactory from version 1.x and provides access to the solrj SolrClient.\nInterface SolrClientFactory;\n", "des": "SolrClient configuration and spring integration."}
{"index": 745, "repo": "spring-data-solr-4.3.15", "code": "package config\n\n// Implementation of BeanDefinitionParser that parses embedded-solr-server element.\nClass EmbeddedSolrServerBeanDefinitionParser;\n// HttpSolrClientBeanDefinitionParser replaces HttpSolrServerBeanDefinitionParser from version 1.x.\nClass HttpSolrClientBeanDefinitionParser;\n", "des": "Config support for SolrClient."}
{"index": 746, "repo": "spring-data-solr-4.3.15", "code": "package support\n\n// The EmbeddedSolrServerFactory allows hosting of an SolrServer instance in embedded mode.\nClass EmbeddedSolrServerFactory;\n// Implementation of FactoryBean for registration of an EmbeddedSolrServer as a Spring bean.\nClass EmbeddedSolrServerFactoryBean;\n// The HttpSolrClientFactory replaces HttpSolrServerFactory from version 1.x and configures an HttpSolrClient to work with the provided core.\nClass HttpSolrClientFactory;\n// HttpSolrClientFactoryBean replaces HttpSolrServerFactoryBean from version 1.x.\nClass HttpSolrClientFactoryBean;\n// SolrClientUtils replaces SolrServerUtils from version 1.x\nClass SolrClientUtils;\n", "des": "Everything SolrClient and EmbeddedSolrServer related."}
{"index": 747, "repo": "ignite-indexing-2.15.0", "code": "package indexing\n\n// Query engine configuration for indexing-backed query engine.\nClass IndexingQueryEngineConfiguration;\n", "des": "Contains Ignite-indexing module classes and interfaces."}
{"index": 748, "repo": "ignite-indexing-2.15.0", "code": "package h2\n\n// Processor responsible for execution of all non-SELECT and non-DML commands.\nClass CommandProcessor;\n// Command execution result.\nClass CommandResult;\n// Concurrent pool of object based on ConcurrentLinkedDeque.\nClass ConcurrentStripedPool<E>;\n// H2 connection manager.\nClass ConnectionManager;\n// Distributed configuration of the indexing module.\nClass DistributedSqlConfiguration;\n// Contains entry processors for DML.\nClass DmlStatementsProcessor;\n// Entry value updater.\nClass DmlStatementsProcessor.EntryValueUpdater;\n// \nClass DmlStatementsProcessor.InsertEntryProcessor;\n// Entry processor invoked by UPDATE and DELETE operations.\nClass DmlStatementsProcessor.ModifyingEntryProcessor;\n// SQL function manager.\nClass FunctionsManager;\n// Two step map-reduce style query.\nClass GridCacheTwoStepQuery;\n// \nClass GridSubqueryJoinOptimizer;\n// Wrapper to store connection with currently used schema and statement cache.\nClass H2Connection;\n// Cursor.\nClass H2Cursor;\n// Special field set iterator based on database result set.\nClass H2FieldsIterator;\n// Pooled connection wrapper to use close semantic to recycle connection (return to the pool).\nClass H2PooledConnection;\n// Print warning message to log when query result size fetch count is bigger then specified threshold.\nClass H2QueryFetchSizeInterceptor;\n// Base H2 query info with commons for MAP, LOCAL, REDUCE queries.\nClass H2QueryInfo;\n// Iterator over result set.\nClass H2ResultSetIterator<T>;\n// H2 schema manager.\nClass H2SchemaManager;\n// Field descriptor.\nClass H2SqlFieldMetadata;\n// Statement cache.\nClass H2StatementCache;\n// Information about table in database.\nClass H2TableDescriptor;\n// H2 Table engine.\nClass H2TableEngine;\n// Key for types lookup.\nClass H2TypeKey;\n// H2 utility methods.\nClass H2Utils;\n// Field getter.\nClass H2Utils.Getter<T,R>;\n// Field getter.\nClass H2Utils.Setter<T,R>;\n// \nClass H2Utils.ValueRuntimeSimpleObject<T>;\n", "des": "Contains default H2-based indexing SPI implementation."}
{"index": 749, "repo": "ignite-indexing-2.15.0", "code": "package dml\n\n// DML argument\nInterface DmlArgument;\n// Method to construct new instances of keys and values on SQL MERGE and INSERT, as well as to build new values during UPDATE - a function that takes a row selected from DB and then transforms it into new object.\nInterface KeyValueSupplier;\n// DML arguments factory.\nClass DmlArguments;\n// AST utils for DML\nClass DmlAstUtils;\n// Batch sender class.\nClass DmlBatchSender;\n// Converts a row of values to actual key+value using UpdatePlan.processRow(List).\nClass DmlBulkLoadDataConverter;\n// Additional information about distributed update plan.\nClass DmlDistributedPlanInfo;\n// Context for DML operation on reducer node.\nClass DmlDistributedUpdateRun;\n// Result of splitting keys whose processing resulted into an exception from those skipped by logic of EntryProcessors (most likely INSERT duplicates, or UPDATE/DELETE keys whose values had been modified concurrently), counting and collecting entry processor exceptions.\nClass DmlPageProcessingErrorResult;\n// Result of processing an individual page with IgniteCache.invokeAll(java.util.Map<? extends K, ? extends javax.cache.processor.EntryProcessor<K, V, T>>, java.lang.Object...) including error details, if any.\nClass DmlPageProcessingResult;\n// DML update results iterator.\nClass DmlUpdateResultsIterator;\n// \nClass DmlUpdateSingleEntryIterator<T>;\n// DML utility methods.\nClass DmlUtils;\n// Arguments for fast, query-less UPDATE or DELETE - key and, optionally, value and new value.\nClass FastUpdate;\n// Update plan - where to take data to update cache from and how to construct new keys and values, if needed.\nClass UpdatePlan;\n// Logic for building update plans performed by DmlStatementsProcessor.\nClass UpdatePlanBuilder;\n// DML statement execution plan type - MERGE/INSERT from rows or subquery, or UPDATE/DELETE from subquery or literals/params based.\nEnum UpdateMode;\n", "des": "Contains routines for executing DML statements on top of H2."}
{"index": 750, "repo": "artemis-odb-2.3.0", "code": "package artemis\n\n// Plugin for artemis-odb.\nInterface ArtemisPlugin;\n// \nInterface ComponentTypeFactory.ComponentTypeListener;\n// This interfaces reports entities inserted or removed when matched against their EntitySubscription\nInterface EntitySubscription.SubscriptionListener;\n// Provides a blueprint for new entities, offering greatly improved insertion performance for systems.\nClass Archetype;\n// Builder for basic Archetype instances.\nClass ArchetypeBuilder;\n// An Aspect is used by systems as a matcher against entities, to check if a system is interested in an entity.\nClass Aspect;\n// Constructs instances of Aspect.\nClass Aspect.Builder;\n// Manages all instances of EntitySubscription.\nClass AspectSubscriptionManager;\n// \nClass BaseComponentMapper<A extends Component>;\n// Tracks a subset of entities, but does not implement any sorting or iteration.\nClass BaseEntitySystem;\n// Most basic system.\nClass BaseSystem;\n// Components are pure data classes with optionally some helper methods.\nClass Component;\n// Handles the association between entities and their components.\nClass ComponentManager;\n// Provide high performance component access and mutation from within a System.\nClass ComponentMapper<A extends Component>;\n// \nClass ComponentPool<T extends PooledComponent>;\n// Identifies components in artemis without having to use classes.\nClass ComponentType;\n// Tracks all component types in a single world.\nClass ComponentTypeFactory;\n// The entity convenience class.\nClass Entity;\n// Entity mutator.\nClass EntityEdit;\n// Manages entity instances.\nClass EntityManager;\n// Maintains the list of entities matched by an aspect.\nClass EntitySubscription;\n// \nClass EntitySubscription.SubscriptionExtra;\n// Tracks a subset of entities, but does not implement any sorting or iteration.\nClass EntitySystem;\n// Fastest way of changing entity component compositions.\nClass EntityTransmuter;\n// Builder for EntityTransmuter.\nClass EntityTransmuterFactory;\n// \nClass ImmediateComponentRemover<A extends Component>;\n// Simple sequential invocation strategy.\nClass InvocationStrategy;\n// A manager for handling entities in the world.\nClass Manager;\n// Component type that recycles instances.\nClass PooledComponent;\n", "des": "Core Artemis classes."}
{"index": 751, "repo": "artemis-odb-2.3.0", "code": "package annotations\n\n// \nEnum LinkPolicy.Policy;\n// Auto-configures fields or systems pertaining to aspects.\nAnnotation Type All;\n// Auto-configures fields pertaining to aspects.\nAnnotation Type AspectDescriptor;\n// Extends the lifecycle of this component type, ensuring removed instances are retrievable until all listeners have been notified - regardless of removal method.\nAnnotation Type DelayedComponentRemoval;\n// Marks int and IntBag fields as holding entity id:s.\nAnnotation Type EntityId;\n// Auto-configures fields or systems pertaining to aspects.\nAnnotation Type Exclude;\n// Customize how the fluid generator processes your class.\nAnnotation Type Fluid;\n// Customize how the fluid generator processes a component method.\nAnnotation Type FluidMethod;\n// Annotation for entity-referencing fields in component types.\nAnnotation Type LinkPolicy;\n// Auto-configures fields or systems pertaining to aspects.\nAnnotation Type One;\n// Transforms a Component into a PooledComponent.\nAnnotation Type PooledWeaver;\n// Holds the path or identifier for Prefab types.\nAnnotation Type PrefabData;\n// When optimizing an EntityProcessingSystem, don't reduce the visibility of BaseSystem.process().\nAnnotation Type PreserveProcessVisiblity;\n// Profile EntitySystems with user-specified profiler class, implementing ArtemisProfiler.\nAnnotation Type Profile;\n// Skip reflective dependency injection on annotated field or class.\nAnnotation Type SkipWire;\n// Never persisted when serializing.\nAnnotation Type Transient;\n// Classes marked with this annotation may undergo extensive refactoring between releases.\nAnnotation Type UnstableApi;\n// Customizes reflective injection of ComponentMapper, EntitySystem, Manager, and registered types via WorldConfiguration.register(java.lang.Object).\nAnnotation Type Wire;\n", "des": "Annotations used by Artemis, both runtime and during compilation,"}
{"index": 752, "repo": "artemis-odb-2.3.0", "code": "package managers\n\n// If you need to group your entities together, e.g tanks going into \"units\" group or explosions into \"effects\", then use this manager.\nClass GroupManager;\n// You may sometimes want to specify to which player an entity belongs to.\nClass PlayerManager;\n// If you need to tag any entity, use this.\nClass TagManager;\n// Use this class together with PlayerManager.\nClass TeamManager;\n// \nClass UuidEntityManager;\n", "des": "Manager implementations."}
{"index": 753, "repo": "artemis-odb-2.3.0", "code": "package systems\n\n// Tracks cooldown per entity, processing entity when its timer runs out.\nClass DelayedEntityProcessingSystem;\n// Tracks cooldown per entity, processing entity when its timer runs out.\nClass DelayedIteratingSystem;\n// Entity reference iterating system.\nClass EntityProcessingSystem;\n// Process a subset of entities every x ticks.\nClass IntervalEntityProcessingSystem;\n// A system that processes entities at a interval in milliseconds.\nClass IntervalEntitySystem;\n// Process a subset of entities every x ticks.\nClass IntervalIteratingSystem;\n// Entity system processed at a certain interval, without iteration implementation.\nClass IntervalSystem;\n// Iterates over EntitySubscription member entities by entity identity.\nClass IteratingSystem;\n", "des": "Entity systems."}
{"index": 754, "repo": "artemis-odb-2.3.0", "code": "package utils\n\n// \nInterface ArtemisProfiler;\n// A non-modifiable bag.\nInterface ImmutableBag<E>;\n// A non-modifiable intbag.\nInterface ImmutableIntBag<E>;\n// Collection type a bit like ArrayList but does not preserve the order of its entities, speedwise it is very good, especially suited for games.\nClass Bag<E>;\n// Performance optimized bitset implementation.\nClass BitVector;\n// \nClass ConverterUtil;\n// Non-reusable entity creation helper for rapid prototyping.\nClass EntityBuilder;\n// Collection type a bit like ArrayList but does not preserve the order of its entities, speedwise it is very good, especially suited for games.\nClass IntBag;\n// Base iterator for IntBag\nClass IntBagIterator;\n// Missing tests and missing methods: (push|peek|pop)(Back|Front).\nClass IntDeque;\n// Collection type a bit like ArrayList but does not preserve the order of its entities, speedwise it is very good, especially suited for games.\nClass ShortBag;\n// Provides methods to sort arrays of objects.\nClass Sort;\n// \nEnum IntBagIterator.State;\n", "des": "Helper classes."}
{"index": 755, "repo": "lucene-analyzers-common-8.11.2", "code": "package ar\n\n// Analyzer for Arabic.\nClass ArabicAnalyzer;\n// A TokenFilter that applies ArabicNormalizer to normalize the orthography.\nClass ArabicNormalizationFilter;\n// Factory for ArabicNormalizationFilter.\nClass ArabicNormalizationFilterFactory;\n// Normalizer for Arabic.\nClass ArabicNormalizer;\n// A TokenFilter that applies ArabicStemmer to stem Arabic words..\nClass ArabicStemFilter;\n// Factory for ArabicStemFilter.\nClass ArabicStemFilterFactory;\n// Stemmer for Arabic.\nClass ArabicStemmer;\n", "des": "Analyzer for Arabic."}
{"index": 756, "repo": "lucene-analyzers-common-8.11.2", "code": "package bg\n\n// Analyzer for Bulgarian.\nClass BulgarianAnalyzer;\n// A TokenFilter that applies BulgarianStemmer to stem Bulgarian words.\nClass BulgarianStemFilter;\n// Factory for BulgarianStemFilter.\nClass BulgarianStemFilterFactory;\n// Light Stemmer for Bulgarian.\nClass BulgarianStemmer;\n", "des": "Analyzer for Bulgarian."}
{"index": 757, "repo": "lucene-analyzers-common-8.11.2", "code": "package bn\n\n// Analyzer for Bengali.\nClass BengaliAnalyzer;\n// A TokenFilter that applies BengaliNormalizer to normalize the orthography.\nClass BengaliNormalizationFilter;\n// Factory for BengaliNormalizationFilter.\nClass BengaliNormalizationFilterFactory;\n// Normalizer for Bengali.\nClass BengaliNormalizer;\n// A TokenFilter that applies BengaliStemmer to stem Bengali words.\nClass BengaliStemFilter;\n// Factory for BengaliStemFilter.\nClass BengaliStemFilterFactory;\n// Stemmer for Bengali.\nClass BengaliStemmer;\n", "des": "Analyzer for Bengali Language."}
{"index": 758, "repo": "lucene-analyzers-common-8.11.2", "code": "package boost\n\n// Characters before the delimiter are the \"token\", those after are the boost.\nClass DelimitedBoostTokenFilter;\n// Factory for DelimitedBoostTokenFilter.\nClass DelimitedBoostTokenFilterFactory;\n", "des": "Provides various convenience classes for creating boosts on Tokens."}
{"index": 759, "repo": "lucene-analyzers-common-8.11.2", "code": "package br\n\n// Analyzer for Brazilian Portuguese language.\nClass BrazilianAnalyzer;\n// A TokenFilter that applies BrazilianStemmer.\nClass BrazilianStemFilter;\n// Factory for BrazilianStemFilter.\nClass BrazilianStemFilterFactory;\n// A stemmer for Brazilian Portuguese words.\nClass BrazilianStemmer;\n", "des": "Analyzer for Brazilian Portuguese."}
{"index": 760, "repo": "lucene-analyzers-common-8.11.2", "code": "package ca\n\n// Analyzer for Catalan.\nClass CatalanAnalyzer;\n", "des": "Analyzer for Catalan."}
{"index": 761, "repo": "lucene-analyzers-common-8.11.2", "code": "package charfilter\n\n// Base utility class for implementing a CharFilter.\nClass BaseCharFilter;\n// A CharFilter that wraps another Reader and attempts to strip out HTML constructs.\nClass HTMLStripCharFilter;\n// Factory for HTMLStripCharFilter.\nClass HTMLStripCharFilterFactory;\n// Simplistic CharFilter that applies the mappings contained in a NormalizeCharMap to the character stream, and correcting the resulting changes to the offsets.\nClass MappingCharFilter;\n// Factory for MappingCharFilter.\nClass MappingCharFilterFactory;\n// Holds a map of String input to String output, to be used with MappingCharFilter.\nClass NormalizeCharMap;\n// Builds an NormalizeCharMap.\nClass NormalizeCharMap.Builder;\n", "des": "Normalization of text before the tokenizer."}
{"index": 762, "repo": "lucene-analyzers-common-8.11.2", "code": "package cjk\n\n// An Analyzer that tokenizes text with StandardTokenizer, normalizes content with CJKWidthFilter, folds case with LowerCaseFilter, forms bigrams of CJK with CJKBigramFilter, and filters stopwords with StopFilter\nClass CJKAnalyzer;\n// Forms bigrams of CJK terms that are generated from StandardTokenizer or ICUTokenizer.\nClass CJKBigramFilter;\n// Factory for CJKBigramFilter.\nClass CJKBigramFilterFactory;\n// A CharFilter that normalizes CJK width differences: Folds fullwidth ASCII variants into the equivalent basic latin Folds halfwidth Katakana variants into the equivalent kana\nClass CJKWidthCharFilter;\n// Factory for CJKWidthCharFilter.\nClass CJKWidthCharFilterFactory;\n// A TokenFilter that normalizes CJK width differences: Folds fullwidth ASCII variants into the equivalent basic latin Folds halfwidth Katakana variants into the equivalent kana\nClass CJKWidthFilter;\n// Factory for CJKWidthFilter.\nClass CJKWidthFilterFactory;\n", "des": "Analyzer for Chinese, Japanese, and Korean, which indexes bigrams."}
{"index": 763, "repo": "lucene-analyzers-common-8.11.2", "code": "package ckb\n\n// Analyzer for Sorani Kurdish.\nClass SoraniAnalyzer;\n// A TokenFilter that applies SoraniNormalizer to normalize the orthography.\nClass SoraniNormalizationFilter;\n// Factory for SoraniNormalizationFilter.\nClass SoraniNormalizationFilterFactory;\n// Normalizes the Unicode representation of Sorani text.\nClass SoraniNormalizer;\n// A TokenFilter that applies SoraniStemmer to stem Sorani words.\nClass SoraniStemFilter;\n// Factory for SoraniStemFilter.\nClass SoraniStemFilterFactory;\n// Light stemmer for Sorani\nClass SoraniStemmer;\n", "des": "Analyzer for Sorani Kurdish."}
{"index": 764, "repo": "lucene-analyzers-common-8.11.2", "code": "package commongrams\n\n// Construct bigrams for frequently occurring terms while indexing.\nClass CommonGramsFilter;\n// Constructs a CommonGramsFilter.\nClass CommonGramsFilterFactory;\n// Wrap a CommonGramsFilter optimizing phrase queries by only returning single words when they are not a member of a bigram.\nClass CommonGramsQueryFilter;\n// Construct CommonGramsQueryFilter.\nClass CommonGramsQueryFilterFactory;\n", "des": "Construct n-grams for frequently occurring terms and phrases."}
{"index": 765, "repo": "lucene-analyzers-common-8.11.2", "code": "package compound\n\n// Base class for decomposition token filters.\nClass CompoundWordTokenFilterBase;\n// A TokenFilter that decomposes compound words found in many Germanic languages.\nClass DictionaryCompoundWordTokenFilter;\n// Factory for DictionaryCompoundWordTokenFilter.\nClass DictionaryCompoundWordTokenFilterFactory;\n// A TokenFilter that decomposes compound words found in many Germanic languages.\nClass HyphenationCompoundWordTokenFilter;\n// Factory for HyphenationCompoundWordTokenFilter.\nClass HyphenationCompoundWordTokenFilterFactory;\n", "des": "A filter that decomposes compound words you find in many Germanic languages into the word parts."}
{"index": 766, "repo": "lucene-analyzers-common-8.11.2", "code": "package hyphenation\n\n// This interface is used to connect the XML pattern file parser to the hyphenation tree.\nInterface PatternConsumer;\n// This class implements a simple byte vector with access to the underlying array.\nClass ByteVector;\n// This class implements a simple char vector with access to the underlying array.\nClass CharVector;\n// This class represents a hyphen.\nClass Hyphen;\n// This class represents a hyphenated word.\nClass Hyphenation;\n// This tree structure stores the hyphenation patterns in an efficient way for fast lookup.\nClass HyphenationTree;\n// A SAX document handler to read and parse hyphenation patterns from a XML file.\nClass PatternParser;\n// Ternary Search Tree.\nClass TernaryTree;\n", "des": "Hyphenation code for the CompoundWordTokenFilter."}
{"index": 767, "repo": "lucene-analyzers-common-8.11.2", "code": "package core\n\n// Folds all Unicode digits in [:General_Category=Decimal_Number:] to Basic Latin digits (0-9).\nClass DecimalDigitFilter;\n// Factory for DecimalDigitFilter.\nClass DecimalDigitFilterFactory;\n// Converts an incoming graph token stream, such as one from SynonymGraphFilter, into a flat form so that all nodes form a single linear chain with no side paths.\nClass FlattenGraphFilter;\n// Factory for FlattenGraphFilter.\nClass FlattenGraphFilterFactory;\n// \"Tokenizes\" the entire stream as a single token.\nClass KeywordAnalyzer;\n// Emits the entire input as a single token.\nClass KeywordTokenizer;\n// Factory for KeywordTokenizer.\nClass KeywordTokenizerFactory;\n// A LetterTokenizer is a tokenizer that divides text at non-letters.\nClass LetterTokenizer;\n// Factory for LetterTokenizer.\nClass LetterTokenizerFactory;\n// Normalizes token text to lower case.\nClass LowerCaseFilter;\n// Factory for LowerCaseFilter.\nClass LowerCaseFilterFactory;\n// An Analyzer that filters LetterTokenizer with LowerCaseFilter\nClass SimpleAnalyzer;\n// Filters LetterTokenizer with LowerCaseFilter and StopFilter.\nClass StopAnalyzer;\n// Removes stop words from a token stream.\nClass StopFilter;\n// Factory for StopFilter.\nClass StopFilterFactory;\n// Removes tokens whose types appear in a set of blocked types from a token stream.\nClass TypeTokenFilter;\n// Factory class for TypeTokenFilter.\nClass TypeTokenFilterFactory;\n// An Analyzer that uses UnicodeWhitespaceTokenizer.\nClass UnicodeWhitespaceAnalyzer;\n// A UnicodeWhitespaceTokenizer is a tokenizer that divides text at whitespace.\nClass UnicodeWhitespaceTokenizer;\n// Normalizes token text to UPPER CASE.\nClass UpperCaseFilter;\n// Factory for UpperCaseFilter.\nClass UpperCaseFilterFactory;\n// An Analyzer that uses WhitespaceTokenizer.\nClass WhitespaceAnalyzer;\n// A tokenizer that divides text at whitespace characters as defined by Character.isWhitespace(int).\nClass WhitespaceTokenizer;\n// Factory for WhitespaceTokenizer.\nClass WhitespaceTokenizerFactory;\n", "des": "Basic, general-purpose analysis components."}
{"index": 768, "repo": "lucene-analyzers-common-8.11.2", "code": "package custom\n\n// A general-purpose Analyzer that can be created with a builder-style API.\nClass CustomAnalyzer;\n// Builder for CustomAnalyzer.\nClass CustomAnalyzer.Builder;\n// Factory class for a ConditionalTokenFilter\nClass CustomAnalyzer.ConditionBuilder;\n", "des": "A general-purpose Analyzer that can be created with a builder-style API."}
{"index": 769, "repo": "lucene-analyzers-common-8.11.2", "code": "package cz\n\n// Analyzer for Czech language.\nClass CzechAnalyzer;\n// A TokenFilter that applies CzechStemmer to stem Czech words.\nClass CzechStemFilter;\n// Factory for CzechStemFilter.\nClass CzechStemFilterFactory;\n// Light Stemmer for Czech.\nClass CzechStemmer;\n", "des": "Analyzer for Czech."}
{"index": 770, "repo": "lucene-analyzers-common-8.11.2", "code": "package da\n\n// Analyzer for Danish.\nClass DanishAnalyzer;\n", "des": "Analyzer for Danish."}
{"index": 771, "repo": "lucene-analyzers-common-8.11.2", "code": "package de\n\n// Analyzer for German language.\nClass GermanAnalyzer;\n// A TokenFilter that applies GermanLightStemmer to stem German words.\nClass GermanLightStemFilter;\n// Factory for GermanLightStemFilter.\nClass GermanLightStemFilterFactory;\n// Light Stemmer for German.\nClass GermanLightStemmer;\n// A TokenFilter that applies GermanMinimalStemmer to stem German words.\nClass GermanMinimalStemFilter;\n// Factory for GermanMinimalStemFilter.\nClass GermanMinimalStemFilterFactory;\n// Minimal Stemmer for German.\nClass GermanMinimalStemmer;\n// Normalizes German characters according to the heuristics of the German2 snowball algorithm.\nClass GermanNormalizationFilter;\n// Factory for GermanNormalizationFilter.\nClass GermanNormalizationFilterFactory;\n// A TokenFilter that stems German words.\nClass GermanStemFilter;\n// Factory for GermanStemFilter.\nClass GermanStemFilterFactory;\n// A stemmer for German words.\nClass GermanStemmer;\n", "des": "Analyzer for German."}
{"index": 772, "repo": "lucene-analyzers-common-8.11.2", "code": "package el\n\n// Analyzer for the Greek language.\nClass GreekAnalyzer;\n// Normalizes token text to lower case, removes some Greek diacritics, and standardizes final sigma to sigma.\nClass GreekLowerCaseFilter;\n// Factory for GreekLowerCaseFilter.\nClass GreekLowerCaseFilterFactory;\n// A TokenFilter that applies GreekStemmer to stem Greek words.\nClass GreekStemFilter;\n// Factory for GreekStemFilter.\nClass GreekStemFilterFactory;\n// A stemmer for Greek words, according to: Development of a Stemmer for the Greek Language. Georgios Ntais\nClass GreekStemmer;\n", "des": "Analyzer for Greek."}
{"index": 773, "repo": "lucene-analyzers-common-8.11.2", "code": "package en\n\n// Abstract parent class for analysis factories that accept a stopwords file as input.\nClass AbstractWordsFileFilterFactory;\n// Analyzer for English.\nClass EnglishAnalyzer;\n// A TokenFilter that applies EnglishMinimalStemmer to stem English words.\nClass EnglishMinimalStemFilter;\n// Factory for EnglishMinimalStemFilter.\nClass EnglishMinimalStemFilterFactory;\n// Minimal plural stemmer for English.\nClass EnglishMinimalStemmer;\n// TokenFilter that removes possessives (trailing 's) from words.\nClass EnglishPossessiveFilter;\n// Factory for EnglishPossessiveFilter.\nClass EnglishPossessiveFilterFactory;\n// A high-performance kstem filter for english.\nClass KStemFilter;\n// Factory for KStemFilter.\nClass KStemFilterFactory;\n// This class implements the Kstem algorithm\nClass KStemmer;\n// Transforms the token stream as per the Porter stemming algorithm.\nClass PorterStemFilter;\n// Factory for PorterStemFilter.\nClass PorterStemFilterFactory;\n", "des": "Analyzer for English."}
{"index": 774, "repo": "lucene-analyzers-common-8.11.2", "code": "package es\n\n// Analyzer for Spanish.\nClass SpanishAnalyzer;\n// A TokenFilter that applies SpanishLightStemmer to stem Spanish words.\nClass SpanishLightStemFilter;\n// Factory for SpanishLightStemFilter.\nClass SpanishLightStemFilterFactory;\n// Light Stemmer for Spanish\nClass SpanishLightStemmer;\n// A TokenFilter that applies SpanishMinimalStemmer to stem Spanish words.\nClass SpanishMinimalStemFilter;\n// Factory for SpanishMinimalStemFilter.\nClass SpanishMinimalStemFilterFactory;\n// Minimal plural stemmer for Spanish.\nClass SpanishMinimalStemmer;\n", "des": "Analyzer for Spanish."}
{"index": 775, "repo": "lucene-analyzers-common-8.11.2", "code": "package et\n\n// Analyzer for Estonian.\nClass EstonianAnalyzer;\n", "des": "Analyzer for Estonian."}
{"index": 776, "repo": "lucene-analyzers-common-8.11.2", "code": "package eu\n\n// Analyzer for Basque.\nClass BasqueAnalyzer;\n", "des": "Analyzer for Basque."}
{"index": 777, "repo": "lucene-analyzers-common-8.11.2", "code": "package fa\n\n// Analyzer for Persian.\nClass PersianAnalyzer;\n// CharFilter that replaces instances of Zero-width non-joiner with an ordinary space.\nClass PersianCharFilter;\n// Factory for PersianCharFilter.\nClass PersianCharFilterFactory;\n// A TokenFilter that applies PersianNormalizer to normalize the orthography.\nClass PersianNormalizationFilter;\n// Factory for PersianNormalizationFilter.\nClass PersianNormalizationFilterFactory;\n// Normalizer for Persian.\nClass PersianNormalizer;\n", "des": "Analyzer for Persian."}
{"index": 778, "repo": "lucene-analyzers-common-8.11.2", "code": "package fi\n\n// Analyzer for Finnish.\nClass FinnishAnalyzer;\n// A TokenFilter that applies FinnishLightStemmer to stem Finnish words.\nClass FinnishLightStemFilter;\n// Factory for FinnishLightStemFilter.\nClass FinnishLightStemFilterFactory;\n// Light Stemmer for Finnish.\nClass FinnishLightStemmer;\n", "des": "Analyzer for Finnish."}
{"index": 779, "repo": "lucene-analyzers-common-8.11.2", "code": "package fr\n\n// Analyzer for French language.\nClass FrenchAnalyzer;\n// A TokenFilter that applies FrenchLightStemmer to stem French words.\nClass FrenchLightStemFilter;\n// Factory for FrenchLightStemFilter.\nClass FrenchLightStemFilterFactory;\n// Light Stemmer for French.\nClass FrenchLightStemmer;\n// A TokenFilter that applies FrenchMinimalStemmer to stem French words.\nClass FrenchMinimalStemFilter;\n// Factory for FrenchMinimalStemFilter.\nClass FrenchMinimalStemFilterFactory;\n// Light Stemmer for French.\nClass FrenchMinimalStemmer;\n", "des": "Analyzer for French."}
{"index": 780, "repo": "lucene-analyzers-common-8.11.2", "code": "package ga\n\n// Analyzer for Irish.\nClass IrishAnalyzer;\n// Normalises token text to lower case, handling t-prothesis and n-eclipsis (i.e., that 'nAthair' should become 'n-athair')\nClass IrishLowerCaseFilter;\n// Factory for IrishLowerCaseFilter.\nClass IrishLowerCaseFilterFactory;\n", "des": "Analyzer for Irish."}
{"index": 781, "repo": "lucene-analyzers-common-8.11.2", "code": "package gl\n\n// Analyzer for Galician.\nClass GalicianAnalyzer;\n// A TokenFilter that applies GalicianMinimalStemmer to stem Galician words.\nClass GalicianMinimalStemFilter;\n// Factory for GalicianMinimalStemFilter.\nClass GalicianMinimalStemFilterFactory;\n// Minimal Stemmer for Galician\nClass GalicianMinimalStemmer;\n// A TokenFilter that applies GalicianStemmer to stem Galician words.\nClass GalicianStemFilter;\n// Factory for GalicianStemFilter.\nClass GalicianStemFilterFactory;\n// Galician stemmer implementing \"Regras do lematizador para o galego\".\nClass GalicianStemmer;\n", "des": "Analyzer for Galician."}
{"index": 782, "repo": "lucene-analyzers-common-8.11.2", "code": "package hi\n\n// Analyzer for Hindi.\nClass HindiAnalyzer;\n// A TokenFilter that applies HindiNormalizer to normalize the orthography.\nClass HindiNormalizationFilter;\n// Factory for HindiNormalizationFilter.\nClass HindiNormalizationFilterFactory;\n// Normalizer for Hindi.\nClass HindiNormalizer;\n// A TokenFilter that applies HindiStemmer to stem Hindi words.\nClass HindiStemFilter;\n// Factory for HindiStemFilter.\nClass HindiStemFilterFactory;\n// Light Stemmer for Hindi.\nClass HindiStemmer;\n", "des": "Analyzer for Hindi."}
{"index": 783, "repo": "lucene-analyzers-common-8.11.2", "code": "package hu\n\n// Analyzer for Hungarian.\nClass HungarianAnalyzer;\n// A TokenFilter that applies HungarianLightStemmer to stem Hungarian words.\nClass HungarianLightStemFilter;\n// Factory for HungarianLightStemFilter.\nClass HungarianLightStemFilterFactory;\n// Light Stemmer for Hungarian.\nClass HungarianLightStemmer;\n", "des": "Analyzer for Hungarian."}
{"index": 784, "repo": "lucene-analyzers-common-8.11.2", "code": "package hunspell\n\n// An object representing homonym dictionary entries.\nInterface DictEntries;\n// In-memory structure for the dictionary (.dic) and affix (.aff) data of a hunspell dictionary.\nClass Dictionary;\n// A spell checker based on Hunspell dictionaries.\nClass Hunspell;\n// TokenFilter that uses hunspell affix rules and words to stem tokens.\nClass HunspellStemFilter;\n// TokenFilterFactory that creates instances of HunspellStemFilter.\nClass HunspellStemFilterFactory;\n// A strategy determining what to do when Hunspell API calls take too much time\nEnum TimeoutPolicy;\n// An exception thrown when Hunspell.suggest(java.lang.String) call takes too long, if TimeoutPolicy.THROW_EXCEPTION is used.\nClass SuggestionTimeoutException;\n", "des": "A Java implementation of Hunspell stemming and spell-checking algorithms (Hunspell), and a stemming TokenFilter (HunspellStemFilter) based on it."}
{"index": 785, "repo": "lucene-analyzers-common-8.11.2", "code": "package hy\n\n// Analyzer for Armenian.\nClass ArmenianAnalyzer;\n", "des": "Analyzer for Armenian."}
{"index": 786, "repo": "lucene-analyzers-common-8.11.2", "code": "package id\n\n// Analyzer for Indonesian (Bahasa)\nClass IndonesianAnalyzer;\n// A TokenFilter that applies IndonesianStemmer to stem Indonesian words.\nClass IndonesianStemFilter;\n// Factory for IndonesianStemFilter.\nClass IndonesianStemFilterFactory;\n// Stemmer for Indonesian.\nClass IndonesianStemmer;\n", "des": "Analyzer for Indonesian."}
{"index": 787, "repo": "lucene-analyzers-common-8.11.2", "code": "package in\n\n// A TokenFilter that applies IndicNormalizer to normalize text in Indian Languages.\nClass IndicNormalizationFilter;\n// Factory for IndicNormalizationFilter.\nClass IndicNormalizationFilterFactory;\n// Normalizes the Unicode representation of text in Indian languages.\nClass IndicNormalizer;\n", "des": "Analyzer for Indian languages."}
{"index": 788, "repo": "lucene-analyzers-common-8.11.2", "code": "package it\n\n// Analyzer for Italian.\nClass ItalianAnalyzer;\n// A TokenFilter that applies ItalianLightStemmer to stem Italian words.\nClass ItalianLightStemFilter;\n// Factory for ItalianLightStemFilter.\nClass ItalianLightStemFilterFactory;\n// Light Stemmer for Italian.\nClass ItalianLightStemmer;\n", "des": "Analyzer for Italian."}
{"index": 789, "repo": "lucene-analyzers-common-8.11.2", "code": "package lt\n\n// Analyzer for Lithuanian.\nClass LithuanianAnalyzer;\n", "des": "Analyzer for Lithuanian."}
{"index": 790, "repo": "lucene-analyzers-common-8.11.2", "code": "package lv\n\n// Analyzer for Latvian.\nClass LatvianAnalyzer;\n// A TokenFilter that applies LatvianStemmer to stem Latvian words.\nClass LatvianStemFilter;\n// Factory for LatvianStemFilter.\nClass LatvianStemFilterFactory;\n// Light stemmer for Latvian.\nClass LatvianStemmer;\n", "des": "Analyzer for Latvian."}
{"index": 791, "repo": "lucene-analyzers-common-8.11.2", "code": "package minhash\n\n// Generate min hash tokens from an incoming stream of tokens.\nClass MinHashFilter;\n// TokenFilterFactory for MinHashFilter.\nClass MinHashFilterFactory;\n", "des": "MinHash filtering (for LSH)."}
{"index": 792, "repo": "lucene-analyzers-common-8.11.2", "code": "package miscellaneous\n\n// Attribute providing access to the term builder and UTF-16 conversion\nInterface ConcatenateGraphFilter.BytesRefBuilderTermAttribute;\n// This class converts alphabetic, numeric, and symbolic Unicode characters which are not in the first 127 ASCII characters (the \"Basic Latin\" Unicode block) into their ASCII equivalents, if one exists.\nClass ASCIIFoldingFilter;\n// Factory for ASCIIFoldingFilter.\nClass ASCIIFoldingFilterFactory;\n// A filter to apply normal capitalization rules to Tokens.\nClass CapitalizationFilter;\n// Factory for CapitalizationFilter.\nClass CapitalizationFilterFactory;\n// Removes words that are too long or too short from the stream.\nClass CodepointCountFilter;\n// Factory for CodepointCountFilter.\nClass CodepointCountFilterFactory;\n// Concatenates/Joins every incoming token with a separator into one output token for every path through the token stream (which is a graph).\nClass ConcatenateGraphFilter;\n// Implementation of ConcatenateGraphFilter.BytesRefBuilderTermAttribute\nClass ConcatenateGraphFilter.BytesRefBuilderTermAttributeImpl;\n// Factory for ConcatenateGraphFilter.\nClass ConcatenateGraphFilterFactory;\n// A TokenStream that takes an array of input TokenStreams as sources, and concatenates them together.\nClass ConcatenatingTokenStream;\n// Allows skipping TokenFilters based on the current set of attributes.\nClass ConditionalTokenFilter;\n// Abstract parent class for analysis factories that create ConditionalTokenFilter instances\nClass ConditionalTokenFilterFactory;\n// Filters all tokens that cannot be parsed to a date, using the provided DateFormat.\nClass DateRecognizerFilter;\n// Factory for DateRecognizerFilter.\nClass DateRecognizerFilterFactory;\n// Characters before the delimiter are the \"token\", the textual integer after is the term frequency.\nClass DelimitedTermFrequencyTokenFilter;\n// Factory for DelimitedTermFrequencyTokenFilter.\nClass DelimitedTermFrequencyTokenFilterFactory;\n// Allows Tokens with a given combination of flags to be dropped.\nClass DropIfFlaggedFilter;\n// Provides a filter that will drop tokens matching a set of flags.\nClass DropIfFlaggedFilterFactory;\n// An always exhausted token stream.\nClass EmptyTokenStream;\n", "des": "Miscellaneous Tokenstreams."}
{"index": 793, "repo": "lucene-analyzers-common-8.11.2", "code": "package ngram\n\n// Creates new instances of EdgeNGramTokenFilter.\nClass EdgeNGramFilterFactory;\n// Tokenizes the given token into n-grams of given size(s).\nClass EdgeNGramTokenFilter;\n// Tokenizes the input from an edge into n-grams of given size(s).\nClass EdgeNGramTokenizer;\n// Creates new instances of EdgeNGramTokenizer.\nClass EdgeNGramTokenizerFactory;\n// Factory for NGramTokenFilter.\nClass NGramFilterFactory;\n// Tokenizes the input into n-grams of the given size(s).\nClass NGramTokenFilter;\n// Tokenizes the input into n-grams of the given size(s).\nClass NGramTokenizer;\n// Factory for NGramTokenizer.\nClass NGramTokenizerFactory;\n", "des": "Character n-gram tokenizers and filters."}
{"index": 794, "repo": "lucene-analyzers-common-8.11.2", "code": "package nl\n\n// Analyzer for Dutch language.\nClass DutchAnalyzer;\n", "des": "Analyzer for Dutch."}
{"index": 795, "repo": "lucene-analyzers-common-8.11.2", "code": "package no\n\n// Analyzer for Norwegian.\nClass NorwegianAnalyzer;\n// A TokenFilter that applies NorwegianLightStemmer to stem Norwegian words.\nClass NorwegianLightStemFilter;\n// Factory for NorwegianLightStemFilter.\nClass NorwegianLightStemFilterFactory;\n// Light Stemmer for Norwegian.\nClass NorwegianLightStemmer;\n// A TokenFilter that applies NorwegianMinimalStemmer to stem Norwegian words.\nClass NorwegianMinimalStemFilter;\n// Factory for NorwegianMinimalStemFilter.\nClass NorwegianMinimalStemFilterFactory;\n// Minimal Stemmer for Norwegian Bokmål (no-nb) and Nynorsk (no-nn)\nClass NorwegianMinimalStemmer;\n", "des": "Analyzer for Norwegian."}
{"index": 796, "repo": "lucene-analyzers-common-8.11.2", "code": "package path\n\n// Tokenizer for path-like hierarchies.\nClass PathHierarchyTokenizer;\n// Factory for PathHierarchyTokenizer.\nClass PathHierarchyTokenizerFactory;\n// Tokenizer for domain-like hierarchies.\nClass ReversePathHierarchyTokenizer;\n", "des": "Analysis components for path-like strings such as filenames."}
{"index": 797, "repo": "lucene-analyzers-common-8.11.2", "code": "package pattern\n\n// Factory for PatternCaptureGroupTokenFilter.\nClass PatternCaptureGroupFilterFactory;\n// CaptureGroup uses Java regexes to emit multiple tokens - one for each capture group in one or more patterns.\nClass PatternCaptureGroupTokenFilter;\n// CharFilter that uses a regular expression for the target of replace string.\nClass PatternReplaceCharFilter;\n// Factory for PatternReplaceCharFilter.\nClass PatternReplaceCharFilterFactory;\n// A TokenFilter which applies a Pattern to each token in the stream, replacing match occurrences with the specified replacement string.\nClass PatternReplaceFilter;\n// Factory for PatternReplaceFilter.\nClass PatternReplaceFilterFactory;\n// This tokenizer uses regex pattern matching to construct distinct tokens for the input stream.\nClass PatternTokenizer;\n// Factory for PatternTokenizer.\nClass PatternTokenizerFactory;\n// Set a type attribute to a parameterized value when tokens are matched by any of a several regex patterns.\nClass PatternTypingFilter;\n// Value holding class for pattern typing rules.\nClass PatternTypingFilter.PatternTypingRule;\n// Provides a filter that will analyze tokens with the analyzer from an arbitrary field type.\nClass PatternTypingFilterFactory;\n// This tokenizer uses a Lucene RegExp or (expert usage) a pre-built determinized Automaton, to locate tokens.\nClass SimplePatternSplitTokenizer;\n// Factory for SimplePatternSplitTokenizer, for producing tokens by splitting according to the provided regexp.\nClass SimplePatternSplitTokenizerFactory;\n// This tokenizer uses a Lucene RegExp or (expert usage) a pre-built determinized Automaton, to locate tokens.\nClass SimplePatternTokenizer;\n// Factory for SimplePatternTokenizer, for matching tokens based on the provided regexp.\nClass SimplePatternTokenizerFactory;\n", "des": "Set of components for pattern-based (regex) analysis."}
{"index": 798, "repo": "lucene-analyzers-common-8.11.2", "code": "package payloads\n\n// Mainly for use with the DelimitedPayloadTokenFilter, converts char buffers to BytesRef.\nInterface PayloadEncoder;\n// Base class for payload encoders.\nClass AbstractEncoder;\n// Characters before the delimiter are the \"token\", those after are the payload.\nClass DelimitedPayloadTokenFilter;\n// Factory for DelimitedPayloadTokenFilter.\nClass DelimitedPayloadTokenFilterFactory;\n// Encode a character array Float as a BytesRef.\nClass FloatEncoder;\n// Does nothing other than convert the char array to a byte array using the specified encoding.\nClass IdentityEncoder;\n// Encode a character array Integer as a BytesRef.\nClass IntegerEncoder;\n// Assigns a payload to a token based on the TypeAttribute\nClass NumericPayloadTokenFilter;\n// Factory for NumericPayloadTokenFilter.\nClass NumericPayloadTokenFilterFactory;\n// Utility methods for encoding payloads.\nClass PayloadHelper;\n// Adds the OffsetAttribute.startOffset() and OffsetAttribute.endOffset() First 4 bytes are the start\nClass TokenOffsetPayloadTokenFilter;\n// Factory for TokenOffsetPayloadTokenFilter.\nClass TokenOffsetPayloadTokenFilterFactory;\n// Makes the TypeAttribute a payload.\nClass TypeAsPayloadTokenFilter;\n// Factory for TypeAsPayloadTokenFilter.\nClass TypeAsPayloadTokenFilterFactory;\n", "des": "Provides various convenience classes for creating payloads on Tokens."}
{"index": 799, "repo": "lucene-analyzers-common-8.11.2", "code": "package pt\n\n// Analyzer for Portuguese.\nClass PortugueseAnalyzer;\n// A TokenFilter that applies PortugueseLightStemmer to stem Portuguese words.\nClass PortugueseLightStemFilter;\n// Factory for PortugueseLightStemFilter.\nClass PortugueseLightStemFilterFactory;\n// Light Stemmer for Portuguese\nClass PortugueseLightStemmer;\n// A TokenFilter that applies PortugueseMinimalStemmer to stem Portuguese words.\nClass PortugueseMinimalStemFilter;\n// Factory for PortugueseMinimalStemFilter.\nClass PortugueseMinimalStemFilterFactory;\n// Minimal Stemmer for Portuguese\nClass PortugueseMinimalStemmer;\n// A TokenFilter that applies PortugueseStemmer to stem Portuguese words.\nClass PortugueseStemFilter;\n// Factory for PortugueseStemFilter.\nClass PortugueseStemFilterFactory;\n// Portuguese stemmer implementing the RSLP (Removedor de Sufixos da Lingua Portuguesa) algorithm.\nClass PortugueseStemmer;\n// Base class for stemmers that use a set of RSLP-like stemming steps.\nClass RSLPStemmerBase;\n// A basic rule, with no exceptions.\nClass RSLPStemmerBase.Rule;\n// A rule with a set of whole-word exceptions.\nClass RSLPStemmerBase.RuleWithSetExceptions;\n// A rule with a set of exceptional suffixes.\nClass RSLPStemmerBase.RuleWithSuffixExceptions;\n// A step containing a list of rules.\nClass RSLPStemmerBase.Step;\n", "des": "Analyzer for Portuguese."}
{"index": 800, "repo": "lucene-analyzers-common-8.11.2", "code": "package query\n\n// An Analyzer used primarily at query time to wrap another analyzer and provide a layer of protection which prevents very common words from being passed into queries.\nClass QueryAutoStopWordAnalyzer;\n", "des": "Automatically filter high-frequency stopwords."}
{"index": 801, "repo": "lucene-analyzers-common-8.11.2", "code": "package reverse\n\n// Reverse token string, for example \"country\" => \"yrtnuoc\".\nClass ReverseStringFilter;\n// Factory for ReverseStringFilter.\nClass ReverseStringFilterFactory;\n", "des": "Filter to reverse token text."}
{"index": 802, "repo": "lucene-analyzers-common-8.11.2", "code": "package ro\n\n// Analyzer for Romanian.\nClass RomanianAnalyzer;\n", "des": "Analyzer for Romanian."}
{"index": 803, "repo": "lucene-analyzers-common-8.11.2", "code": "package ru\n\n// Analyzer for Russian language.\nClass RussianAnalyzer;\n// A TokenFilter that applies RussianLightStemmer to stem Russian words.\nClass RussianLightStemFilter;\n// Factory for RussianLightStemFilter.\nClass RussianLightStemFilterFactory;\n// Light Stemmer for Russian.\nClass RussianLightStemmer;\n", "des": "Analyzer for Russian."}
{"index": 804, "repo": "lucene-analyzers-common-8.11.2", "code": "package shingle\n\n// A FixedShingleFilter constructs shingles (token n-grams) from a token stream.\nClass FixedShingleFilter;\n// Factory for FixedShingleFilter Parameters are: shingleSize - how many tokens should be combined into each shingle (default: 2) tokenSeparator - how tokens should be joined together in the shingle (default: space) fillerToken - what should be added in place of stop words (default: _ )\nClass FixedShingleFilterFactory;\n// A ShingleAnalyzerWrapper wraps a ShingleFilter around another Analyzer.\nClass ShingleAnalyzerWrapper;\n// A ShingleFilter constructs shingles (token n-grams) from a token stream.\nClass ShingleFilter;\n// Factory for ShingleFilter.\nClass ShingleFilterFactory;\n", "des": "Word n-gram filters."}
{"index": 805, "repo": "lucene-analyzers-common-8.11.2", "code": "package sinks\n\n// This TokenFilter provides the ability to set aside attribute states that have already been analyzed.\nClass TeeSinkTokenFilter;\n// TokenStream output from a tee.\nClass TeeSinkTokenFilter.SinkTokenStream;\n", "des": "TeeSinkTokenFilter."}
{"index": 806, "repo": "lucene-analyzers-common-8.11.2", "code": "package snowball\n\n// A filter that stems words using a Snowball-generated stemmer.\nClass SnowballFilter;\n// Factory for SnowballFilter, with configurable language\nClass SnowballPorterFilterFactory;\n", "des": "TokenFilter and Analyzer implementations that use Snowball stemmers."}
{"index": 807, "repo": "lucene-analyzers-common-8.11.2", "code": "package sr\n\n// Normalizes Serbian Cyrillic and Latin characters to \"bald\" Latin.\nClass SerbianNormalizationFilter;\n// Factory for SerbianNormalizationFilter.\nClass SerbianNormalizationFilterFactory;\n// Normalizes Serbian Cyrillic to Latin.\nClass SerbianNormalizationRegularFilter;\n", "des": "Analyzer for Serbian."}
{"index": 808, "repo": "lucene-analyzers-common-8.11.2", "code": "package standard\n\n// Filters ClassicTokenizer with ClassicFilter, LowerCaseFilter and StopFilter, using a list of English stop words.\nClass ClassicAnalyzer;\n// Normalizes tokens extracted with ClassicTokenizer.\nClass ClassicFilter;\n// Factory for ClassicFilter.\nClass ClassicFilterFactory;\n// A grammar-based tokenizer constructed with JFlex\nClass ClassicTokenizer;\n// Factory for ClassicTokenizer.\nClass ClassicTokenizerFactory;\n// Factory for StandardTokenizer.\nClass StandardTokenizerFactory;\n// Filters UAX29URLEmailTokenizer with LowerCaseFilter and StopFilter, using a list of English stop words.\nClass UAX29URLEmailAnalyzer;\n// This class implements Word Break rules from the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29 URLs and email addresses are also tokenized according to the relevant RFCs.\nClass UAX29URLEmailTokenizer;\n// Factory for UAX29URLEmailTokenizer.\nClass UAX29URLEmailTokenizerFactory;\n// This class implements Word Break rules from the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29 URLs and email addresses are also tokenized according to the relevant RFCs.\nClass UAX29URLEmailTokenizerImpl;\n", "des": "Fast, general-purpose grammar-based tokenizers."}
{"index": 809, "repo": "lucene-analyzers-common-8.11.2", "code": "package sv\n\n// Analyzer for Swedish.\nClass SwedishAnalyzer;\n// A TokenFilter that applies SwedishLightStemmer to stem Swedish words.\nClass SwedishLightStemFilter;\n// Factory for SwedishLightStemFilter.\nClass SwedishLightStemFilterFactory;\n// Light Stemmer for Swedish.\nClass SwedishLightStemmer;\n", "des": "Analyzer for Swedish."}
{"index": 810, "repo": "lucene-analyzers-common-8.11.2", "code": "package synonym\n\n// Parser for the Solr synonyms format.\nClass SolrSynonymParser;\n// Use SynonymGraphFilter instead, but be sure to also use FlattenGraphFilter at index time (not at search time) as well.\nClass SynonymFilter;\n// Use SynonymGraphFilterFactory instead, but be sure to also use FlattenGraphFilterFactory at index time (not at search time) as well.\nClass SynonymFilterFactory;\n// Applies single- or multi-token synonyms from a SynonymMap to an incoming TokenStream, producing a fully correct graph output.\nClass SynonymGraphFilter;\n// Factory for SynonymGraphFilter.\nClass SynonymGraphFilterFactory;\n// A map of synonyms, keys and values are phrases.\nClass SynonymMap;\n// Builds an FSTSynonymMap.\nClass SynonymMap.Builder;\n// Abstraction for parsing synonym files.\nClass SynonymMap.Parser;\n// Parser for wordnet prolog format\nClass WordnetSynonymParser;\n", "des": "Analysis components for Synonyms."}
{"index": 811, "repo": "lucene-analyzers-common-8.11.2", "code": "package te\n\n// Analyzer for Telugu.\nClass TeluguAnalyzer;\n// A TokenFilter that applies TeluguNormalizer to normalize the orthography.\nClass TeluguNormalizationFilter;\n// Factory for TeluguNormalizationFilter.\nClass TeluguNormalizationFilterFactory;\n// Normalizer for Telugu.\nClass TeluguNormalizer;\n// A TokenFilter that applies TeluguStemmer to stem Telugu words.\nClass TeluguStemFilter;\n// Factory for TeluguStemFilter.\nClass TeluguStemFilterFactory;\n// Stemmer for Telugu.\nClass TeluguStemmer;\n", "des": "Analyzer for Telugu Language."}
{"index": 812, "repo": "lucene-analyzers-common-8.11.2", "code": "package th\n\n// Analyzer for Thai language.\nClass ThaiAnalyzer;\n// Tokenizer that use BreakIterator to tokenize Thai text.\nClass ThaiTokenizer;\n// Factory for ThaiTokenizer.\nClass ThaiTokenizerFactory;\n", "des": "Analyzer for Thai."}
{"index": 813, "repo": "lucene-analyzers-common-8.11.2", "code": "package tr\n\n// Strips all characters after an apostrophe (including the apostrophe itself).\nClass ApostropheFilter;\n// Factory for ApostropheFilter.\nClass ApostropheFilterFactory;\n// Analyzer for Turkish.\nClass TurkishAnalyzer;\n// Normalizes Turkish token text to lower case.\nClass TurkishLowerCaseFilter;\n// Factory for TurkishLowerCaseFilter.\nClass TurkishLowerCaseFilterFactory;\n", "des": "Analyzer for Turkish."}
{"index": 814, "repo": "lucene-analyzers-common-8.11.2", "code": "package util\n\n// Abstraction for loading resources (streams, files, and classes).\nInterface ResourceLoader;\n// Interface for a component that needs to be initialized by an implementation of ResourceLoader.\nInterface ResourceLoaderAware;\n// Abstract parent class for analysis factories TokenizerFactory, TokenFilterFactory and CharFilterFactory.\nClass AbstractAnalysisFactory;\n// Helper class for loading named SPIs from classpath (e.g.\nClass AnalysisSPILoader<S extends AbstractAnalysisFactory>;\n// A CharacterIterator used internally for use with BreakIterator\nClass CharArrayIterator;\n// Abstract parent class for analysis factories that create CharFilter instances.\nClass CharFilterFactory;\n// An abstract base class for simple, character-oriented tokenizers.\nClass CharTokenizer;\n// Simple ResourceLoader that uses ClassLoader.getResourceAsStream(String) and Class.forName(String,boolean,ClassLoader) to open resources and classes, respectively.\nClass ClasspathResourceLoader;\n// Removes elisions from a TokenStream.\nClass ElisionFilter;\n// Factory for ElisionFilter.\nClass ElisionFilterFactory;\n// Simple ResourceLoader that opens resource files from the local file system, optionally resolving against a base directory.\nClass FilesystemResourceLoader;\n// A StringBuilder that allows one to access the array.\nClass OpenStringBuilder;\n// Acts like a forever growing char[] as you read characters into it from the provided reader, but internally it uses a circular buffer to only hold the characters that haven't been freed yet.\nClass RollingCharBuffer;\n// Breaks text into sentences with a BreakIterator and allows subclasses to decompose these sentences into words.\nClass SegmentingTokenizerBase;\n// Some commonly-used stemming functions\nClass StemmerUtil;\n// Abstract parent class for analysis factories that create TokenFilter instances.\nClass TokenFilterFactory;\n// Abstract parent class for analysis factories that create Tokenizer instances.\nClass TokenizerFactory;\n// This file contains unicode properties used by various CharTokenizers.\nClass UnicodeProps;\n", "des": "Utility functions for text analysis."}
{"index": 815, "repo": "lucene-analyzers-common-8.11.2", "code": "package wikipedia\n\n// Extension of StandardTokenizer that is aware of Wikipedia syntax.\nClass WikipediaTokenizer;\n// Factory for WikipediaTokenizer.\nClass WikipediaTokenizerFactory;\n", "des": "Tokenizer that is aware of Wikipedia syntax."}
{"index": 816, "repo": "lucene-analyzers-common-8.11.2", "code": "package collation\n\n// Converts each token into its CollationKey, and then encodes the bytes as an index term.\nClass CollationAttributeFactory;\n// Indexes collation keys as a single-valued SortedDocValuesField.\nClass CollationDocValuesField;\n// Configures KeywordTokenizer with CollationAttributeFactory.\nClass CollationKeyAnalyzer;\n", "des": "Unicode collation support."}
{"index": 817, "repo": "lucene-analyzers-common-8.11.2", "code": "package tokenattributes\n\n// Extension of CharTermAttributeImpl that encodes the term text as a binary Unicode collation key instead of as UTF-8 bytes.\nClass CollatedTermAttributeImpl;\n", "des": "Custom AttributeImpl for indexing collation keys as index terms."}
{"index": 818, "repo": "lucene-analyzers-common-8.11.2", "code": "package snowball\n\n// This is the rev 502 of the Snowball SVN trunk, now located at GitHub, but modified: made abstract and introduced abstract method stem to avoid expensive reflection in filter class.\nClass Among;\n// This is the rev 502 of the Snowball SVN trunk, now located at GitHub, but modified: made abstract and introduced abstract method stem to avoid expensive reflection in filter class.\nClass SnowballProgram;\n", "des": "Snowball stemmer API"}
{"index": 819, "repo": "lucene-analyzers-common-8.11.2", "code": "package ext\n\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass ArabicStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass ArmenianStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass BasqueStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass CatalanStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass DanishStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass DutchStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass EnglishStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass EstonianStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass FinnishStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass FrenchStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass German2Stemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass GermanStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass HungarianStemmer;\n// This class was automatically generated by a Snowball to Java compiler It implements the stemming algorithm defined by a snowball script.\nClass IrishStemmer;\n", "des": "Autogenerated snowball stemmer implementations."}
{"index": 820, "repo": "commons-rng-simple-1.5", "code": "package simple\n\n// Subclass of Random that delegates to a RestorableUniformRandomProvider instance but will otherwise rely on the base class for generating all the random types.\nClass JDKRandomBridge;\n// Wraps a Random instance to implement UniformRandomProvider.\nClass JDKRandomWrapper;\n// This class provides a thread-local UniformRandomProvider.\nClass ThreadLocalRandomSource;\n// This class provides the API for creating generators of random numbers.\nEnum RandomSource;\n", "des": "This package provides factory methods by which low-level classes implemented in module \"commons-rng-core\" are instantiated."}
{"index": 821, "repo": "commons-rng-simple-1.5", "code": "package internal\n\n// Seed converter to create an output array type.\nInterface Seed2ArrayConverter<IN,OUT>;\n// Seed converter.\nInterface SeedConverter<IN,OUT>;\n// Creates a int[] from a byte[].\nClass ByteArray2IntArray;\n// Creates a long[] from a byte[].\nClass ByteArray2LongArray;\n// Converts a Integer to an Long.\nClass Int2Long;\n// Creates a single value by \"xor\" of all the values in the input array.\nClass IntArray2Int;\n// Creates a long[] from an int[].\nClass IntArray2LongArray;\n// Converts a Long to an Integer.\nClass Long2Int;\n// Uses a long value to seed a SplitMix64 RNG and create a int[] with the requested number of random values.\nClass Long2IntArray;\n// Uses a Long value to seed a SplitMix64 RNG and create a long[] with the requested number of random values.\nClass Long2LongArray;\n// Creates an int[] from a long[].\nClass LongArray2IntArray;\n// Creates a single value by \"xor\" of all the values in the input array.\nClass LongArray2Long;\n// Dummy converter that simply passes on its input.\nClass NoOpConverter<SEED>;\n// RNG builder.\nClass ProviderBuilder;\n// Composes two converters.\nClass SeedConverterComposer<IN,TRANS,OUT>;\n// Utilities related to seeding.\nClass SeedFactory;\n// The native seed type.\nEnum NativeSeedType;\n// Identifiers of the generators.\nEnum ProviderBuilder.RandomSourceInternal;\n", "des": "Utilities for seed conversion."}
{"index": 822, "repo": "calcite-core-1.34.0", "code": "package calcite\n\n// Runtime context allowing access to the tables in a database.\nInterface DataContext;\n// Utilities for DataContext.\nClass DataContexts;\n// Demo.\nClass Demo;\n// Variable that may be asked for in a call to DataContext.get(java.lang.String).\nEnum DataContext.Variable;\n// Annotation to be used to convert interfaces/abstract classes into Immutable POJO using Immutables package.\nAnnotation Type CalciteImmutable;\n", "des": "Main package for Calcite, the dynamic data management platform."}
{"index": 823, "repo": "calcite-core-1.34.0", "code": "package clone\n\n// Schema that contains in-memory copies of tables from a JDBC schema.\nClass CloneSchema;\n// Schema factory that creates a CloneSchema.\nClass CloneSchema.Factory;\n", "des": "Provides utility classes."}
{"index": 824, "repo": "calcite-core-1.34.0", "code": "package enumerable\n\n// Information for a call to AggImplementor.implementAdd(AggContext, AggAddContext).\nInterface AggAddContext;\n// Information on the aggregate calculation context.\nInterface AggContext;\n// Implements an aggregate function by generating expressions to initialize, add to, and get a result from, an accumulator.\nInterface AggImplementor;\n// Generates lambda functions used in EnumerableAggregate.\nInterface AggregateLambdaFactory<TSource,TOrigAccumulate,TAccumulate,TResult,TKey>;\n// Information for a call to AggImplementor.implementReset(AggContext, AggResetContext).\nInterface AggResetContext;\n// Information for a call to AggImplementor.implementResult(AggContext, AggResultContext)\nInterface AggResultContext;\n// Implements a call via given translator.\nInterface CallImplementor;\n// Rule configuration.\nInterface EnumerableBatchNestedLoopJoinRule.Config;\n// Rule configuration.\nInterface EnumerableFilterToCalcRule.Config;\n// Rule configuration.\nInterface EnumerableLimitRule.Config;\n// Rule configuration.\nInterface EnumerableLimitSortRule.Config;\n// Rule configuration.\nInterface EnumerableMergeUnionRule.Config;\n// Rule configuration.\nInterface EnumerableProjectToCalcRule.Config;\n// A relational expression of one of the EnumerableConvention calling conventions.\nInterface EnumerableRel;\n// Accumulate on the cached input sources.\nInterface LazyAggregateLambdaFactory.LazyAccumulator<TOrigAccumulate,TSource>;\n// Implementor of Functions used in MATCH_RECOGNIZE Context.\nInterface MatchImplementor;\n// Allows to build nested code blocks with tracking of current context.\nInterface NestedBlockBuilder;\n// Simplified version of CallImplementor that does not know about null semantics.\nInterface NotNullImplementor;\n// Physical type of a row.\nInterface PhysType;\n// Null-safe implementor of RexCalls.\nInterface RexImpTable.RexCallImplementor;\n// Translates a field of an input to an expression.\nInterface RexToLixTranslator.InputGetter;\n// Implements a table-valued function call.\nInterface TableFunctionCallImplementor;\n// Information for a call to AggImplementor.implementAdd(AggContext, AggAddContext).\nInterface WinAggAddContext;\n", "des": "Query optimizer rules for Java calling convention."}
{"index": 825, "repo": "calcite-core-1.34.0", "code": "package impl\n\n// Implementation of AggAddContext.\nClass AggAddContextImpl;\n// Implementation of AggResetContext.\nClass AggResetContextImpl;\n// Implementation of AggResultContext.\nClass AggResultContextImpl;\n// Implementation of WinAggAddContext.\nClass WinAggAddContextImpl;\n// Implementation of WinAggResetContext.\nClass WinAggResetContextImpl;\n// Implementation of WinAggResultContext.\nClass WinAggResultContextImpl;\n", "des": "Calcite-specific classes for implementation of regular and window aggregates."}
{"index": 826, "repo": "calcite-core-1.34.0", "code": "package java\n\n// Type factory that can register Java classes as record types.\nInterface JavaTypeFactory;\n// Abstract base class for implementing Table.\nClass AbstractQueryableTable;\n// Implementation of Schema that exposes the public fields and methods in a Java object.\nClass ReflectiveSchema;\n// Factory that creates a schema by instantiating an object and looking at its public fields.\nClass ReflectiveSchema.Factory;\n// Annotation that indicates that a field is an array type.\nAnnotation Type Array;\n// Annotation that indicates that a field is a map type.\nAnnotation Type Map;\n", "des": "Query provider based on Java in-memory data structures."}
{"index": 827, "repo": "calcite-core-1.34.0", "code": "package jdbc\n\n// Relational expression that uses JDBC calling convention.\nInterface JdbcRel;\n// Do not use.\nInterface JdbcSchema.Foo;\n// Schema based upon a JDBC catalog (database).\nClass JdbcCatalogSchema;\n// Calling convention for relational operations that occur in a JDBC database.\nClass JdbcConvention;\n// State for generating a SQL statement.\nClass JdbcImplementor;\n// Implementation of QueryProvider that talks to JDBC databases.\nClass JdbcQueryProvider;\n// Rules and relational operators for JdbcConvention calling convention.\nClass JdbcRules;\n// Aggregate operator implemented in JDBC convention.\nClass JdbcRules.JdbcAggregate;\n// Rule to convert a Aggregate to a JdbcRules.JdbcAggregate.\nClass JdbcRules.JdbcAggregateRule;\n// \nClass JdbcRules.JdbcCalc;\n// Implementation of Filter in jdbc calling convention.\nClass JdbcRules.JdbcFilter;\n// Rule to convert a Filter to an JdbcRules.JdbcFilter.\nClass JdbcRules.JdbcFilterRule;\n// Intersect operator implemented in JDBC convention.\nClass JdbcRules.JdbcIntersect;\n// Rule to convert a Intersect to a JdbcRules.JdbcIntersect.\nClass JdbcRules.JdbcIntersectRule;\n// Join operator implemented in JDBC convention.\nClass JdbcRules.JdbcJoin;\n// Rule that converts a join to JDBC.\nClass JdbcRules.JdbcJoinRule;\n// Minus operator implemented in JDBC convention.\nClass JdbcRules.JdbcMinus;\n// Rule to convert a Minus to a JdbcRules.JdbcMinus.\nClass JdbcRules.JdbcMinusRule;\n// Implementation of Project in jdbc calling convention.\nClass JdbcRules.JdbcProject;\n// Rule to convert a Project to an JdbcRules.JdbcProject.\nClass JdbcRules.JdbcProjectRule;\n// Sort operator implemented in JDBC convention.\nClass JdbcRules.JdbcSort;\n// Rule to convert a Sort to an JdbcRules.JdbcSort.\nClass JdbcRules.JdbcSortRule;\n// Rule that converts a table-modification to JDBC.\nClass JdbcRules.JdbcTableModificationRule;\n// Table-modification operator implemented in JDBC convention.\nClass JdbcRules.JdbcTableModify;\n// Union operator implemented in JDBC convention.\nClass JdbcRules.JdbcUnion;\n// Rule to convert an Union to a JdbcRules.JdbcUnion.\nClass JdbcRules.JdbcUnionRule;\n", "des": "Query provider based on a JDBC data source."}
{"index": 828, "repo": "calcite-core-1.34.0", "code": "package config\n\n// Interface for reading connection properties within Calcite code.\nInterface CalciteConnectionConfig;\n// Implementation of CalciteConnectionConfig.\nClass CalciteConnectionConfigImpl;\n// A Calcite specific system property that is used to configure various aspects of the framework.\nClass CalciteSystemProperty<T>;\n// Properties that may be specified on the JDBC connect string.\nEnum CalciteConnectionProperty;\n// Styles of character literal.\nEnum CharLiteralStyle;\n// Named, built-in lexical policy.\nEnum Lex;\n// Strategy for how NULL values are to be sorted if NULLS FIRST or NULLS LAST are not specified in an item in the ORDER BY clause.\nEnum NullCollation;\n", "des": "Configuration."}
{"index": 829, "repo": "calcite-core-1.34.0", "code": "package interpreter\n\n// Relational expression that can implement itself in Bindable convention.\nInterface BindableRel;\n// Rule configuration.\nInterface Bindables.BindableTableScanRule.Config;\n// Context while converting a tree of RelNode to a program that can be run by an Interpreter.\nInterface Compiler;\n// Relational expression that can implement itself using an interpreter.\nInterface InterpretableRel;\n// Relational expression that can be executed using an interpreter.\nInterface Node;\n// Compiled scalar expression.\nInterface Scalar;\n// Produces a Scalar when a query is executed.\nInterface Scalar.Producer;\n// Sink to which to send rows.\nInterface Sink;\n// Source of rows.\nInterface Source;\n// Interpreter node that implements an Aggregate.\nClass AggregateNode;\n// Implementation of SUM over BigDecimal values as a user-defined aggregate.\nClass AggregateNode.BigDecimalSum;\n// Implementation of SUM over DOUBLE values as a user-defined aggregate.\nClass AggregateNode.DoubleSum;\n// Implementation of SUM over INTEGER values as a user-defined aggregate.\nClass AggregateNode.IntSum;\n// Implementation of SUM over BIGINT values as a user-defined aggregate.\nClass AggregateNode.LongSum;\n// Implementation of MAX function to calculate the maximum of BigDecimal values as a user-defined aggregate.\nClass AggregateNode.MaxBigDecimal;\n// Implementation of MAX function to calculate the maximum of double and real values as a user-defined aggregate.\nClass AggregateNode.MaxDouble;\n// Implementation of MAX function to calculate the maximum of float values as a user-defined aggregate.\nClass AggregateNode.MaxFloat;\n// Implementation of MAX function to calculate the maximum of integer values as a user-defined aggregate.\nClass AggregateNode.MaxInt;\n// Implementation of MAX function to calculate the maximum of long values as a user-defined aggregate.\nClass AggregateNode.MaxLong;\n// Implementation of MIN function to calculate the minimum of BigDecimal values as a user-defined aggregate.\nClass AggregateNode.MinBigDecimal;\n// Implementation of MIN function to calculate the minimum of boolean values as a user-defined aggregate.\nClass AggregateNode.MinBoolean;\n// Implementation of MIN function to calculate the minimum of double and real values as a user-defined aggregate.\nClass AggregateNode.MinDouble;\n", "des": "Provides an implementation of relational expressions using an interpreter."}
{"index": 830, "repo": "calcite-core-1.34.0", "code": "package jdbc\n\n// Extension to Calcite's implementation of JDBC connection allows schemas to be defined dynamically.\nInterface CalciteConnection;\n// API for a service that prepares statements for execution.\nInterface CalcitePrepare;\n// Context for preparing a statement.\nInterface CalcitePrepare.Context;\n// Callback to register Spark as the main engine.\nInterface CalcitePrepare.SparkHandler;\n// Allows Spark to declare the rules it needs.\nInterface CalcitePrepare.SparkHandler.RuleSetBuilder;\n// Extension of AvaticaFactory for Calcite.\nClass CalciteFactory;\n// Implementation of AvaticaFactory for Calcite and JDBC 4.1 (corresponds to JDK 1.7).\nClass CalciteJdbc41Factory;\n// Helper for implementing the getXxx methods such as AvaticaDatabaseMetaData.getTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String[]).\nClass CalciteMetaImpl;\n// The result of analyzing a view.\nClass CalcitePrepare.AnalyzeViewResult;\n// The result of preparing a query.\nClass CalcitePrepare.CalciteSignature<T>;\n// The result of parsing and validating a SQL query and converting it to relational algebra.\nClass CalcitePrepare.ConvertResult;\n// Namespace that allows us to define non-abstract methods inside an interface.\nClass CalcitePrepare.Dummy;\n// The result of parsing and validating a SQL query.\nClass CalcitePrepare.ParseResult;\n// A union type of the three possible ways of expressing a query: as a SQL string, a Queryable or a RelNode.\nClass CalcitePrepare.Query<T>;\n// Implementation of ResultSet for the Calcite engine.\nClass CalciteResultSet;\n// \nClass CalciteRootSchema;\n// Schema.\nClass CalciteSchema;\n// Entry in a schema, such as a table or sub-schema.\nClass CalciteSchema.Entry;\n// Membership of a function in a schema.\nClass CalciteSchema.FunctionEntry;\n// Implementation of CalciteSchema.FunctionEntry where all properties are held in fields.\nClass CalciteSchema.FunctionEntryImpl;\n// Membership of a lattice in a schema.\nClass CalciteSchema.LatticeEntry;\n", "des": "JDBC driver for Calcite."}
{"index": 831, "repo": "calcite-core-1.34.0", "code": "package materialize\n\n// Estimates row counts for a lattice and its attributes.\nInterface LatticeStatisticProvider;\n// Creates a LatticeStatisticProvider for a given Lattice.\nInterface LatticeStatisticProvider.Factory;\n// Creates tables that represent a materialized view.\nInterface MaterializationService.TableFactory;\n// Estimates row counts for tables and columns, and whether combinations of columns form primary/unique and foreign keys.\nInterface SqlStatisticProvider;\n// Implementation of LatticeStatisticProvider that delegates to an underlying provider.\nClass DelegatingLatticeStatisticProvider;\n// Structure that allows materialized views based upon a star schema to be recognized and recommended.\nClass Lattice;\n// Column in a lattice.\nClass Lattice.BaseColumn;\n// Lattice builder.\nClass Lattice.Builder;\n// Column in a lattice.\nClass Lattice.Column;\n// Column in a lattice that is based upon a SQL expression.\nClass Lattice.DerivedColumn;\n// A measure within a Lattice.\nClass Lattice.Measure;\n// The information necessary to convert a column to SQL.\nClass Lattice.SqlWriter;\n// Materialized aggregate within a lattice.\nClass Lattice.Tile;\n// Tile builder.\nClass Lattice.TileBuilder;\n// Non-root node in a Lattice.\nClass LatticeChildNode;\n// Source relation of a lattice.\nClass LatticeNode;\n// Root node in a Lattice.\nClass LatticeRootNode;\n// Utilities for Lattice, LatticeStatisticProvider.\nClass Lattices;\n// Algorithm that suggests a set of lattices.\nClass LatticeSuggester;\n// Table registered in the graph.\nClass LatticeTable;\n// Unique identifier for a materialization.\nClass MaterializationKey;\n// Manages the collection of materialized tables known to the system, and the process by which they become valid and invalid.\nClass MaterializationService;\n// Default implementation of MaterializationService.TableFactory.\nClass MaterializationService.DefaultTableFactory;\n// Definition of a particular combination of dimensions and measures of a lattice that is the basis of a materialization.\nClass TileKey;\n// Algorithm that suggests a set of initial tiles (materialized aggregate views) for a given lattice.\nClass TileSuggester;\n", "des": "Management of materialized query results."}
{"index": 832, "repo": "calcite-core-1.34.0", "code": "package model\n\n// JSON object representing a column.\nClass JsonColumn;\n// JSON schema element that represents a custom schema.\nClass JsonCustomSchema;\n// Custom table schema element.\nClass JsonCustomTable;\n// Function schema element.\nClass JsonFunction;\n// JSON object representing a schema that maps to a JDBC database.\nClass JsonJdbcSchema;\n// Element that describes a star schema and provides a framework for defining, recognizing, and recommending materialized views at various levels of aggregation.\nClass JsonLattice;\n// JSON object representing a schema whose tables are explicitly specified.\nClass JsonMapSchema;\n// Element that describes how a table is a materialization of a query.\nClass JsonMaterialization;\n// An aggregate function applied to a column (or columns) of a lattice.\nClass JsonMeasure;\n// Root schema element.\nClass JsonRoot;\n// Schema schema element.\nClass JsonSchema;\n// Information about whether a table allows streaming.\nClass JsonStream;\n// Table schema element.\nClass JsonTable;\n// Materialized view within a JsonLattice.\nClass JsonTile;\n// Type schema element.\nClass JsonType;\n// JSON object representing a type attribute.\nClass JsonTypeAttribute;\n// View schema element.\nClass JsonView;\n// Reads a model and creates schema objects accordingly.\nClass ModelHandler;\n// Built-in schema types.\nEnum JsonSchema.Type;\n// Extra operands automatically injected into a JsonCustomSchema.operand, as extra context for the adapter.\nEnum ModelHandler.ExtraOperand;\n", "des": "Provides model files, in JSON format, defining schemas and other metadata."}
{"index": 833, "repo": "calcite-core-1.34.0", "code": "package plan\n\n// Rule configuration.\nInterface CommonRelSubExprRule.Config;\n// Provides library users a way to store data within the planner session and access it within rules.\nInterface Context;\n// Calling convention trait.\nInterface Convention;\n// The digest is the exact representation of the corresponding RelNode, at anytime, anywhere.\nInterface RelDigest;\n// Customize the propagation of the RelHints from the root relational expression of a rule call RelOptRuleCall to the new equivalent expression.\nInterface RelHintsPropagator;\n// This is a marker interface for a callback used to convert a tree of relational expressions into a plan.\nInterface RelImplementor;\n// Trait for which a given relational expression can have multiple values.\nInterface RelMultipleTrait;\n// The planner's view of a connection to a database.\nInterface RelOptConnection;\n// RelOptCost defines an interface for optimizer cost in terms of number of rows processed, CPU cost, and I/O cost.\nInterface RelOptCost;\n// Cost model for query planning.\nInterface RelOptCostFactory;\n// RelOptListener defines an interface for listening to events which occur during the optimization process.\nInterface RelOptListener;\n// Node in a planner.\nInterface RelOptNode;\n// A RelOptPlanner is a query optimizer: it transforms a relational expression into a semantically equivalent relational expression, according to a given set of rules and a cost model.\nInterface RelOptPlanner;\n// Use RexExecutor\nInterface RelOptPlanner.Executor;\n// A RelOptSchema is a set of RelOptTable objects.\nInterface RelOptSchema;\n// Extension to RelOptSchema with support for sample data-sets.\nInterface RelOptSchemaWithSampling;\n// Represents a relational dataset in a RelOptSchema.\nInterface RelOptTable;\n// Contains the context needed to convert a a table into a relational expression.\nInterface RelOptTable.ToRelContext;\n// Can expand a view into relational expressions.\nInterface RelOptTable.ViewExpander;\n// Rule configuration.\nInterface RelRule.Config;\n// Indicates that an operand is complete.\nInterface RelRule.Done;\n", "des": "Defines interfaces for constructing rule-based optimizers of relational expressions."}
{"index": 834, "repo": "calcite-core-1.34.0", "code": "package hep\n\n// HepPlanner is a heuristic implementation of the RelOptPlanner interface.\nClass HepPlanner;\n// HepProgram specifies the order in which rules should be attempted by HepPlanner.\nClass HepProgram;\n// HepProgramBuilder creates instances of HepProgram.\nClass HepProgramBuilder;\n// HepRelVertex wraps a real RelNode as a vertex in a DAG representing the entire query expression.\nClass HepRelVertex;\n// HepRuleCall implements RelOptRuleCall for a HepPlanner.\nClass HepRuleCall;\n// HepMatchOrder specifies the order of graph traversal when looking for rule matches.\nEnum HepMatchOrder;\n", "des": "Provides a heuristic planner implementation for the interfaces in org.apache.calcite.plan."}
{"index": 835, "repo": "calcite-core-1.34.0", "code": "package visualizer\n\n// This is a tool to visualize the rule match process of a RelOptPlanner.\nClass RuleMatchVisualizer;\n", "des": "A visualizer showing how the rules are applied step-by-step."}
{"index": 836, "repo": "calcite-core-1.34.0", "code": "package volcano\n\n// Rule configuration.\nInterface AbstractConverter.ExpandConversionRule.Config;\n// Converts a relational expression to any given output convention.\nClass AbstractConverter;\n// Rule that converts an AbstractConverter into a chain of converters from the source relation to the target traits.\nClass AbstractConverter.ExpandConversionRule;\n// Subset of an equivalence class where all relational expressions have the same physical properties.\nClass RelSubset;\n// A data structure that manages rule matches for RuleDriver.\nClass RuleQueue;\n// VolcanoPlanner optimizes queries by transforming expressions selectively according to a dynamic programming algorithm.\nClass VolcanoPlanner;\n// \nClass VolcanoRelMetadataProvider;\n// VolcanoRuleCall implements the RelOptRuleCall interface for VolcanoPlanner.\nClass VolcanoRuleCall;\n// Indicates that planning timed out.\nClass VolcanoTimeoutException;\n", "des": "Optimizes relational expressions."}
{"index": 837, "repo": "calcite-core-1.34.0", "code": "package prepare\n\n// Interface by which validator and planner can read table metadata.\nInterface Prepare.CatalogReader;\n// Result of a call to Prepare.prepareSql(org.apache.calcite.sql.SqlNode, java.lang.Class, org.apache.calcite.sql.validate.SqlValidator, boolean).\nInterface Prepare.PreparedResult;\n// Definition of a table, for the purposes of the validator and planner.\nInterface Prepare.PreparingTable;\n// Implementation of Prepare.CatalogReader and also SqlOperatorTable based on tables and functions defined schemas.\nClass CalciteCatalogReader;\n// Shit just got real.\nClass CalcitePrepareImpl;\n// Holds state for the process of preparing a SQL statement.\nClass CalcitePrepareImpl.CalcitePreparingStmt;\n// Validator.\nClass CalciteSqlValidator;\n// Implementation of Planner.\nClass PlannerImpl;\n// Abstract base for classes that implement the process of preparing and executing SQL expressions.\nClass Prepare;\n// Abstract implementation of Prepare.PreparingTable with an implementation for Prepare.AbstractPreparingTable.columnHasDefaultValue(org.apache.calcite.rel.type.RelDataType, int, org.apache.calcite.sql2rel.InitializerContext).\nClass Prepare.AbstractPreparingTable;\n// Describes that a given SQL query is materialized by a given table.\nClass Prepare.Materialization;\n// PreparedExplanation is a PreparedResult for an EXPLAIN PLAN statement.\nClass Prepare.PreparedExplain;\n// Abstract implementation of Prepare.PreparedResult.\nClass Prepare.PreparedResultImpl;\n// Implementation of RelOptTable.\nClass RelOptTableImpl;\n", "des": "Preparation of queries (parsing, planning and implementation)."}
{"index": 838, "repo": "calcite-core-1.34.0", "code": "package profile\n\n// Analyzes data sets.\nInterface Profiler;\n// Statistic produced by the profiler.\nInterface Profiler.Statistic;\n// Column.\nClass Profiler.Column;\n// Value distribution, including cardinality and optionally values, of a column or set of columns.\nClass Profiler.Distribution;\n// Functional dependency.\nClass Profiler.FunctionalDependency;\n// The result of profiling, contains various statistics about the data in a table.\nClass Profiler.Profile;\n// Whole data set.\nClass Profiler.RowCount;\n// Unique key.\nClass Profiler.Unique;\n// Implementation of Profiler that only investigates \"interesting\" combinations of columns.\nClass ProfilerImpl;\n// Builds a ProfilerImpl.\nClass ProfilerImpl.Builder;\n// Basic implementation of Profiler.\nClass SimpleProfiler;\n", "des": "Utilities to analyze data sets."}
{"index": 839, "repo": "calcite-core-1.34.0", "code": "package rel\n\n// Physical node in a planner that is capable of doing physical trait propagation and derivation.\nInterface PhysicalNode;\n// Description of the physical ordering of a relational expression.\nInterface RelCollation;\n// Description of the physical distribution of a relational expression.\nInterface RelDistribution;\n// Context from which a relational expression can initialize itself, reading from a serialized form of the relational expression.\nInterface RelInput;\n// A RelNode is a relational expression.\nInterface RelNode;\n// Context of a relational expression, for purposes of checking validity.\nInterface RelNode.Context;\n// Interface for a referential constraint, i.e., Foreign-Key - Unique-Key relationship, between two tables.\nInterface RelReferentialConstraint;\n// Visitor that has methods for the common logical relational expressions.\nInterface RelShuttle;\n// Callback for an expression to dump itself to.\nInterface RelWriter;\n// Base class for every relational expression (RelNode).\nClass AbstractRelNode;\n// Abstract base class for relational expressions with a two inputs.\nClass BiRel;\n// Simple implementation of RelCollation.\nClass RelCollationImpl;\n// Utilities concerning RelCollation and RelFieldCollation.\nClass RelCollations;\n// Definition of the ordering trait.\nClass RelCollationTraitDef;\n// Utilities concerning RelDistribution.\nClass RelDistributions;\n// Definition of the distribution trait.\nClass RelDistributionTraitDef;\n// Definition of the ordering of one field of a RelNode whose output is to be sorted.\nClass RelFieldCollation;\n// Visits all the relations in a homogeneous way: always redirects calls to accept(RelNode).\nClass RelHomogeneousShuttle;\n// Utilities concerning relational expressions.\nClass RelNodes;\n// RelOptReferentialConstraint base implementation.\nClass RelReferentialConstraintImpl;\n// Root of a tree of RelNode.\nClass RelRoot;\n// Basic implementation of RelShuttle that calls RelNode.accept(RelShuttle) on each child, and RelNode.copy(org.apache.calcite.plan.RelTraitSet, java.util.List) if any children change.\nClass RelShuttleImpl;\n// Visitor that checks that every RelNode in a tree is valid.\nClass RelValidityChecker;\n", "des": "Defines relational expressions."}
{"index": 840, "repo": "calcite-core-1.34.0", "code": "package convert\n\n// A relational expression implements the interface Converter to indicate that it converts a physical attribute, or trait, of a relational expression from one value to another.\nInterface Converter;\n// Rule configuration.\nInterface ConverterRule.Config;\n// Rule configuration.\nInterface TraitMatchingRule.Config;\n// Abstract implementation of Converter.\nClass ConverterImpl;\n// Abstract base class for a rule which converts from one calling convention to another without changing semantics.\nClass ConverterRule;\n// NoneConverter converts a plan from inConvention to Convention.NONE.\nClass NoneConverter;\n// TraitMatchingRule adapts a converter rule, restricting it to fire only when its input already matches the expected output trait.\nClass TraitMatchingRule;\n", "des": "Defines relational expressions and rules for converting between calling conventions."}
{"index": 841, "repo": "calcite-core-1.34.0", "code": "package core\n\n// Can create a LogicalAggregate of the appropriate type for this rule's calling convention.\nInterface RelFactories.AggregateFactory;\n// Can create a correlate of the appropriate type for a rule's calling convention.\nInterface RelFactories.CorrelateFactory;\n// Can create a Exchange of the appropriate type for a rule's calling convention.\nInterface RelFactories.ExchangeFactory;\n// Can create a Filter of the appropriate type for this rule's calling convention.\nInterface RelFactories.FilterFactory;\n// Can create a join of the appropriate type for a rule's calling convention.\nInterface RelFactories.JoinFactory;\n// Can create a Match of the appropriate type for a rule's calling convention.\nInterface RelFactories.MatchFactory;\n// Can create a LogicalProject of the appropriate type for this rule's calling convention.\nInterface RelFactories.ProjectFactory;\n// Can create a RepeatUnion of the appropriate type for a rule's calling convention.\nInterface RelFactories.RepeatUnionFactory;\n// Use RelFactories.JoinFactory instead.\nInterface RelFactories.SemiJoinFactory;\n// Can create a SetOp for a particular kind of set operation (UNION, EXCEPT, INTERSECT) and of the appropriate type for this rule's calling convention.\nInterface RelFactories.SetOpFactory;\n// Can create a Snapshot of the appropriate type for a rule's calling convention.\nInterface RelFactories.SnapshotFactory;\n// Can create a SortExchange of the appropriate type for a rule's calling convention.\nInterface RelFactories.SortExchangeFactory;\n// Can create a Sort of the appropriate type for this rule's calling convention.\nInterface RelFactories.SortFactory;\n// Can create a Spool of the appropriate type for a rule's calling convention.\nInterface RelFactories.SpoolFactory;\n// Can create a TableFunctionScan of the appropriate type for a rule's calling convention.\nInterface RelFactories.TableFunctionScanFactory;\n// Can create a TableScan of the appropriate type for a rule's calling convention.\nInterface RelFactories.TableScanFactory;\n// Can create a Values of the appropriate type for a rule's calling convention.\nInterface RelFactories.ValuesFactory;\n// Relational operator that eliminates duplicates and computes totals.\nClass Aggregate;\n", "des": "Defines core relational expressions."}
{"index": 842, "repo": "calcite-core-1.34.0", "code": "package externalize\n\n// Options for displaying the rel node plan in dot format.\nInterface RelDotWriter.WriteOption;\n// Translates a JSON object that represents an input reference into a RexNode.\nInterface RelJson.InputTranslator;\n// Utility to dump a rel node plan in dot format.\nClass RelDotWriter;\n// Registry of Enum classes that can be serialized to JSON.\nClass RelEnumTypes;\n// Utilities for converting RelNode into JSON format.\nClass RelJson;\n// Reads a JSON plan and converts it back to a tree of relational expressions.\nClass RelJsonReader;\n// Callback for a relational expression to dump itself as JSON.\nClass RelJsonWriter;\n// Implementation of RelWriter.\nClass RelWriterImpl;\n// Callback for a relational expression to dump in XML format.\nClass RelXmlWriter;\n", "des": "Facilities to externalize RelNodes to and from XML and JSON format."}
{"index": 843, "repo": "calcite-core-1.34.0", "code": "package hint\n\n// Hintable is a kind of RelNode that can attach RelHints.\nInterface Hintable;\n// A HintOptionChecker validates the options of a RelHint.\nInterface HintOptionChecker;\n// A HintPredicate indicates whether a RelNode can apply the specified hint.\nInterface HintPredicate;\n// A HintPredicate to combine multiple hint predicates into one.\nClass CompositeHintPredicate;\n// A collection of hint predicates.\nClass HintPredicates;\n// Represents a hint strategy entry of HintStrategyTable.\nClass HintStrategy;\n// Builder for HintStrategy.\nClass HintStrategy.Builder;\n// A collection of HintStrategys.\nClass HintStrategyTable;\n// Builder for HintStrategyTable.\nClass HintStrategyTable.Builder;\n// Implementation of Litmus that returns a status code, it logs warnings for fail check and does not throw.\nClass HintStrategyTable.HintErrorLogger;\n// A hint predicate that specifies which kind of relational expression the hint can be applied to.\nClass NodeTypeHintPredicate;\n// Hint attached to a relation expression.\nClass RelHint;\n// Builder for RelHint.\nClass RelHint.Builder;\n// How hint predicates are composed.\nEnum CompositeHintPredicate.Composition;\n", "des": "Defines hints interfaces and utilities for relational expressions."}
{"index": 844, "repo": "calcite-core-1.34.0", "code": "package logical\n\n// LogicalAggregate is a relational operator which eliminates duplicates and computes totals.\nClass LogicalAggregate;\n// A relational expression which computes project expressions and also filters.\nClass LogicalCalc;\n// A relational operator that performs nested-loop joins.\nClass LogicalCorrelate;\n// Sub-class of Exchange not targeted at any particular engine or calling convention.\nClass LogicalExchange;\n// Sub-class of Filter not targeted at any particular engine or calling convention.\nClass LogicalFilter;\n// Sub-class of Intersect not targeted at any particular engine or calling convention.\nClass LogicalIntersect;\n// Sub-class of Join not targeted at any particular engine or calling convention.\nClass LogicalJoin;\n// Sub-class of Match not targeted at any particular engine or calling convention.\nClass LogicalMatch;\n// Sub-class of Minus not targeted at any particular engine or calling convention.\nClass LogicalMinus;\n// Sub-class of Project not targeted at any particular engine or calling convention.\nClass LogicalProject;\n// Sub-class of RepeatUnion not targeted at any particular engine or calling convention.\nClass LogicalRepeatUnion;\n// Sub-class of Snapshot not targeted at any particular engine or calling convention.\nClass LogicalSnapshot;\n// Sub-class of Sort not targeted at any particular engine or calling convention.\nClass LogicalSort;\n// Sub-class of SortExchange not targeted at any particular engine or calling convention.\nClass LogicalSortExchange;\n// Sub-class of TableFunctionScan not targeted at any particular engine or calling convention.\nClass LogicalTableFunctionScan;\n// Sub-class of TableModify not targeted at any particular engine or calling convention.\nClass LogicalTableModify;\n// A LogicalTableScan reads all the rows from a RelOptTable.\nClass LogicalTableScan;\n// Sub-class of TableSpool not targeted at any particular engine or calling convention.\nClass LogicalTableSpool;\n// Sub-class of Union not targeted at any particular engine or calling convention.\nClass LogicalUnion;\n// Sub-class of Values not targeted at any particular engine or calling convention.\nClass LogicalValues;\n// Sub-class of Window not targeted at any particular engine or calling convention.\nClass LogicalWindow;\n// Shuttle to convert any rel plan to a plan with all logical nodes.\nClass ToLogicalConverter;\n", "des": "Defines logical relational expressions."}
{"index": 845, "repo": "calcite-core-1.34.0", "code": "package metadata\n\n// Metadata about the predicates that hold in the rows emitted from a relational expression.\nInterface BuiltInMetadata.AllPredicates;\n// Handler API.\nInterface BuiltInMetadata.AllPredicates.Handler;\n// Metadata about which columns are sorted.\nInterface BuiltInMetadata.Collation;\n// Handler API.\nInterface BuiltInMetadata.Collation.Handler;\n// Metadata about the origins of columns.\nInterface BuiltInMetadata.ColumnOrigin;\n// Handler API.\nInterface BuiltInMetadata.ColumnOrigin.Handler;\n// Metadata about whether a set of columns uniquely identifies a row.\nInterface BuiltInMetadata.ColumnUniqueness;\n// Handler API.\nInterface BuiltInMetadata.ColumnUniqueness.Handler;\n// Metadata about the cost of evaluating a relational expression, including all of its inputs.\nInterface BuiltInMetadata.CumulativeCost;\n// Handler API.\nInterface BuiltInMetadata.CumulativeCost.Handler;\n// Metadata about the number of distinct rows returned by a set of columns in a relational expression.\nInterface BuiltInMetadata.DistinctRowCount;\n// Handler API.\nInterface BuiltInMetadata.DistinctRowCount.Handler;\n// Metadata about how a relational expression is distributed.\nInterface BuiltInMetadata.Distribution;\n// Handler API.\nInterface BuiltInMetadata.Distribution.Handler;\n// Metadata about whether a relational expression should appear in a plan.\nInterface BuiltInMetadata.ExplainVisibility;\n// Handler API.\nInterface BuiltInMetadata.ExplainVisibility.Handler;\n// Metadata about the origins of expressions.\nInterface BuiltInMetadata.ExpressionLineage;\n// Handler API.\nInterface BuiltInMetadata.ExpressionLineage.Handler;\n// Metadata to get the lower bound cost of a RelNode.\nInterface BuiltInMetadata.LowerBoundCost;\n// Handler API.\nInterface BuiltInMetadata.LowerBoundCost.Handler;\n// Metadata about the maximum number of rows returned by a relational expression.\nInterface BuiltInMetadata.MaxRowCount;\n// Handler API.\nInterface BuiltInMetadata.MaxRowCount.Handler;\n// Metadata about the memory use of an operator.\nInterface BuiltInMetadata.Memory;\n// Handler API.\nInterface BuiltInMetadata.Memory.Handler;\n// Metadata about the minimum number of rows returned by a relational expression.\nInterface BuiltInMetadata.MinRowCount;\n", "des": "Defines metadata interfaces and utilities for relational expressions."}
{"index": 846, "repo": "calcite-core-1.34.0", "code": "package janino\n\n// Contains Name and code that been generated for MetadataHandler.\nInterface RelMetadataHandlerGeneratorUtil.HandlerNameAndGeneratedCode;\n// Functions used by generated code.\nClass CacheUtil;\n// A key used in caching with descriptive to string.\nClass DescriptiveCacheKey;\n// Generates the MetadataHandler code.\nClass RelMetadataHandlerGeneratorUtil;\n", "des": "Code for generating metadata handlers."}
{"index": 847, "repo": "calcite-core-1.34.0", "code": "package mutable\n\n// Implementation of MutableRel whose only purpose is to have a child.\nClass Holder;\n// Mutable equivalent of Aggregate.\nClass MutableAggregate;\n// Mutable equivalent of Calc.\nClass MutableCalc;\n// Mutable equivalent of Collect.\nClass MutableCollect;\n// Mutable equivalent of Correlate.\nClass MutableCorrelate;\n// Mutable equivalent of Exchange.\nClass MutableExchange;\n// Mutable equivalent of Filter.\nClass MutableFilter;\n// Mutable equivalent of Intersect.\nClass MutableIntersect;\n// Mutable equivalent of Join.\nClass MutableJoin;\n// Mutable equivalent of Match.\nClass MutableMatch;\n// Mutable equivalent of Minus.\nClass MutableMinus;\n// Mutable equivalent of Project.\nClass MutableProject;\n// Mutable equivalent of RelNode.\nClass MutableRel;\n// Utilities for dealing with MutableRels.\nClass MutableRels;\n// Visitor over MutableRel.\nClass MutableRelVisitor;\n// Mutable equivalent of Sample.\nClass MutableSample;\n// Mutable equivalent of TableScan.\nClass MutableScan;\n// Mutable equivalent of SetOp.\nClass MutableSetOp;\n// Mutable equivalent of Sort.\nClass MutableSort;\n// Mutable equivalent of TableFunctionScan.\nClass MutableTableFunctionScan;\n// Mutable equivalent of TableModify.\nClass MutableTableModify;\n// Mutable equivalent of Uncollect.\nClass MutableUncollect;\n// Mutable equivalent of Union.\nClass MutableUnion;\n// Mutable equivalent of Values.\nClass MutableValues;\n// Mutable equivalent of Window.\nClass MutableWindow;\n", "des": "Defines mutable relational expressions."}
{"index": 848, "repo": "calcite-core-1.34.0", "code": "package rel2sql\n\n// Utility to convert relational expressions to SQL abstract syntax tree.\nClass RelToSqlConverter;\n// State for generating a SQL statement.\nClass SqlImplementor;\n// Context for translating a RexNode expression (within a RelNode) into a SqlNode expression (within a SQL parse tree).\nClass SqlImplementor.Context;\n// Simple implementation of SqlImplementor.Context that cannot handle sub-queries or correlations.\nClass SqlImplementor.SimpleContext;\n// Clauses in a SQL query.\nEnum SqlImplementor.Clause;\n", "des": "Translates a relational expression to SQL parse tree."}
{"index": 849, "repo": "calcite-core-1.34.0", "code": "package rules\n\n// Rule configuration.\nInterface AbstractJoinExtractFilterRule.Config;\n// Rule configuration.\nInterface AggregateCaseToFilterRule.Config;\n// Rule configuration.\nInterface AggregateExpandDistinctAggregatesRule.Config;\n// Rule configuration.\nInterface AggregateExpandWithinDistinctRule.Config;\n// Rule configuration.\nInterface AggregateExtractProjectRule.Config;\n// Rule configuration.\nInterface AggregateFilterTransposeRule.Config;\n// Rule configuration.\nInterface AggregateJoinJoinRemoveRule.Config;\n// Rule configuration.\nInterface AggregateJoinRemoveRule.Config;\n// Rule configuration.\nInterface AggregateJoinTransposeRule.Config;\n// Rule configuration.\nInterface AggregateMergeRule.Config;\n// Rule configuration.\nInterface AggregateProjectConstantToDummyJoinRule.Config;\n// Rule configuration.\nInterface AggregateProjectMergeRule.Config;\n// Rule configuration.\nInterface AggregateProjectPullUpConstantsRule.Config;\n// Rule configuration.\nInterface AggregateProjectStarTableRule.Config;\n// Rule configuration.\nInterface AggregateReduceFunctionsRule.Config;\n// Rule configuration.\nInterface AggregateRemoveRule.Config;\n// Rule configuration.\nInterface AggregateStarTableRule.Config;\n// Rule configuration.\nInterface AggregateUnionAggregateRule.Config;\n// Rule configuration.\nInterface AggregateUnionTransposeRule.Config;\n// Rule configuration.\nInterface AggregateValuesRule.Config;\n// Rule configuration.\nInterface CalcMergeRule.Config;\n// Rule configuration.\nInterface CalcRemoveRule.Config;\n// Rule configuration.\nInterface CalcSplitRule.Config;\n// Rule configuration.\nInterface CoerceInputsRule.Config;\n// Rule configuration.\nInterface DateRangeRules.FilterDateRangeRule.FilterDateRangeRuleConfig;\n// Rule configuration.\nInterface ExchangeRemoveConstantKeysRule.Config;\n// Rule configuration.\nInterface FilterAggregateTransposeRule.Config;\n// Rule configuration.\nInterface FilterCalcMergeRule.Config;\n// Rule configuration.\nInterface FilterCorrelateRule.Config;\n// Rule configuration.\nInterface FilterFlattenCorrelatedConditionRule.Config;\n// Rule configuration.\nInterface FilterJoinRule.Config;\n// Rule configuration.\nInterface FilterJoinRule.FilterIntoJoinRule.FilterIntoJoinRuleConfig;\n// Rule configuration.\nInterface FilterJoinRule.JoinConditionPushRule.JoinConditionPushRuleConfig;\n", "des": "Provides a core set of planner rules."}
{"index": 850, "repo": "calcite-core-1.34.0", "code": "package materialize\n\n// Rule configuration.\nInterface MaterializedViewAggregateRule.Config;\n// Rule configuration.\nInterface MaterializedViewOnlyAggregateRule.Config;\n// Rule configuration.\nInterface MaterializedViewOnlyFilterRule.Config;\n// Rule configuration.\nInterface MaterializedViewOnlyJoinRule.Config;\n// Rule configuration.\nInterface MaterializedViewProjectAggregateRule.Config;\n// Rule configuration.\nInterface MaterializedViewProjectFilterRule.Config;\n// Rule configuration.\nInterface MaterializedViewProjectJoinRule.Config;\n// Rule configuration.\nInterface MaterializedViewRule.Config;\n// Materialized view rewriting for aggregate.\nClass MaterializedViewAggregateRule<C extends MaterializedViewAggregateRule.Config>;\n// Materialized view rewriting for join.\nClass MaterializedViewJoinRule<C extends MaterializedViewRule.Config>;\n// Rule that matches Aggregate.\nClass MaterializedViewOnlyAggregateRule;\n// Rule that matches Filter.\nClass MaterializedViewOnlyFilterRule;\n// Rule that matches Join.\nClass MaterializedViewOnlyJoinRule;\n// Rule that matches Project on Aggregate.\nClass MaterializedViewProjectAggregateRule;\n// Rule that matches Project on Filter.\nClass MaterializedViewProjectFilterRule;\n// Rule that matches Project on Join.\nClass MaterializedViewProjectJoinRule;\n// Planner rule that converts a Project followed by Aggregate or an Aggregate to a scan (and possibly other operations) over a materialized view.\nClass MaterializedViewRule<C extends MaterializedViewRule.Config>;\n// Edge for graph.\nClass MaterializedViewRule.Edge;\n// Class representing an equivalence class, i.e., a set of equivalent columns\nClass MaterializedViewRule.EquivalenceClasses;\n// Expression lineage details.\nClass MaterializedViewRule.NodeLineage;\n// View partitioning result.\nClass MaterializedViewRule.ViewPartialRewriting;\n// Collection of rules pertaining to materialized views.\nClass MaterializedViewRules;\n// Complete, view partial, or query partial.\nEnum MaterializedViewRule.MatchModality;\n", "des": "Provides a materialized rewriting algorithm encapsulated within a planner rule."}
{"index": 851, "repo": "calcite-core-1.34.0", "code": "package stream\n\n// Rule configuration.\nInterface StreamRules.DeltaAggregateTransposeRule.DeltaAggregateTransposeRuleConfig;\n// Rule configuration.\nInterface StreamRules.DeltaFilterTransposeRule.DeltaFilterTransposeRuleConfig;\n// Rule configuration.\nInterface StreamRules.DeltaJoinTransposeRule.DeltaJoinTransposeRuleConfig;\n// Rule configuration.\nInterface StreamRules.DeltaProjectTransposeRule.DeltaProjectTransposeRuleConfig;\n// Rule configuration.\nInterface StreamRules.DeltaSortTransposeRule.DeltaSortTransposeRuleConfig;\n// Rule configuration.\nInterface StreamRules.DeltaTableScanRule.DeltaTableScanRuleConfig;\n// Rule configuration.\nInterface StreamRules.DeltaTableScanToEmptyRule.DeltaTableScanToEmptyRuleConfig;\n// Rule configuration.\nInterface StreamRules.DeltaUnionTransposeRule.DeltaUnionTransposeRuleConfig;\n// Relational operator that converts a stream to a relation.\nClass Chi;\n// Relational operator that converts a relation to a stream.\nClass Delta;\n// Sub-class of Chi not targeted at any particular engine or calling convention.\nClass LogicalChi;\n// Sub-class of Delta not targeted at any particular engine or calling convention.\nClass LogicalDelta;\n// Rules and relational operators for streaming relational expressions.\nClass StreamRules;\n// Planner rule that pushes a Delta through an Aggregate.\nClass StreamRules.DeltaAggregateTransposeRule;\n// Planner rule that pushes a Delta through a Filter.\nClass StreamRules.DeltaFilterTransposeRule;\n// Planner rule that pushes a Delta through a Join.\nClass StreamRules.DeltaJoinTransposeRule;\n// Planner rule that pushes a Delta through a Project.\nClass StreamRules.DeltaProjectTransposeRule;\n// Planner rule that pushes a Delta through an Sort.\nClass StreamRules.DeltaSortTransposeRule;\n// Planner rule that pushes a Delta into a TableScan of a StreamableTable.\nClass StreamRules.DeltaTableScanRule;\n// Planner rule that converts Delta over a TableScan of a table other than StreamableTable to an empty Values.\nClass StreamRules.DeltaTableScanToEmptyRule;\n// Planner rule that pushes a Delta through an Union.\nClass StreamRules.DeltaUnionTransposeRule;\n", "des": "Defines relational expressions for streaming."}
{"index": 852, "repo": "calcite-core-1.34.0", "code": "package type\n\n// RelDataType represents the type of a scalar expression or entire row returned from a relational expression.\nInterface RelDataType;\n// RelDataTypeFactory is a factory for datatype descriptors.\nInterface RelDataTypeFactory;\n// \nInterface RelDataTypeFactory.FieldInfo;\n// RelDataTypeFamily represents a family of related types.\nInterface RelDataTypeFamily;\n// RelDataTypeField represents the definition of a field in a structured RelDataType.\nInterface RelDataTypeField;\n// RelDataTypePrecedenceList defines a type precedence list for a particular type.\nInterface RelDataTypePrecedenceList;\n// Type system.\nInterface RelDataTypeSystem;\n// Can be converted into a RelDataType given a RelDataTypeFactory.\nInterface RelProtoDataType;\n// Time frame.\nInterface TimeFrame;\n// Builds a collection of time frames.\nInterface TimeFrameSet.Builder;\n// Implementation of RelDataTypeSystem that sends all methods to an underlying object.\nClass DelegatingTypeSystem;\n// Specific type of RelRecordType that corresponds to a dynamic table, where columns are created as they are requested.\nClass DynamicRecordType;\n// Implementation of RelDataType for a dynamic table.\nClass DynamicRecordTypeImpl;\n// Type of the cartesian product of two or more sets of records.\nClass RelCrossType;\n// Fluid API to build a list of fields.\nClass RelDataTypeFactory.Builder;\n// \nClass RelDataTypeFactory.FieldInfoBuilder;\n// Abstract base for implementations of RelDataTypeFactory.\nClass RelDataTypeFactoryImpl;\n// Use RelDataTypeField::getIndex\nClass RelDataTypeField.ToFieldIndex;\n// Use RelDataTypeField::getName\nClass RelDataTypeField.ToFieldName;\n// Default implementation of RelDataTypeField.\nClass RelDataTypeFieldImpl;\n// RelDataTypeImpl is an abstract base for implementations of RelDataType.\nClass RelDataTypeImpl;\n// Default implementation of RelDataTypeSystem, providing parameters from the SQL standard.\nClass RelDataTypeSystemImpl;\n// RelRecordType represents a structured type having named fields.\nClass RelRecordType;\n// Utilities for TimeFrame.\nClass TimeFrames;\n// Set of TimeFrame definitions.\nClass TimeFrameSet;\n// RelDataTypeComparability is an enumeration of the categories of comparison operators which types may support.\nEnum RelDataTypeComparability;\n", "des": "Defines a type system for relational expressions."}
{"index": 853, "repo": "calcite-core-1.34.0", "code": "package rex\n\n// \nInterface RexAction;\n// Visitor pattern for traversing a tree of RexNode objects and passing a payload to each.\nInterface RexBiVisitor<R,P>;\n// Can reduce expressions, writing a literal for each into a list.\nInterface RexExecutor;\n// \nInterface RexPattern;\n// Converts a RexNode expression into a SqlNode expression.\nInterface RexSqlConvertlet;\n// Collection of RexSqlConvertlets.\nInterface RexSqlConvertletTable;\n// Converts expressions from RexNode to SqlNode.\nInterface RexToSqlNodeConverter;\n// Visitor pattern for traversing a tree of RexNode objects.\nInterface RexVisitor<R>;\n// Visitor pattern for traversing a tree of RexNode objects.\nClass LogicVisitor;\n// Analyzes an expression, figures out what are the unbound variables, assigns a variety of values to each unbound variable, and evaluates the expression.\nClass RexAnalyzer;\n// Default implementation of RexBiVisitor, which visits each node but does nothing while it's there.\nClass RexBiVisitorImpl<R,P>;\n// Factory for row expressions.\nClass RexBuilder;\n// An expression formed by a call to an operator with zero or more expressions as operands.\nClass RexCall;\n// RexCallBinding implements SqlOperatorBinding by referring to an underlying collection of RexNode operands.\nClass RexCallBinding;\n// Visitor which checks the validity of a RexNode expression.\nClass RexChecker;\n// Reference to the current row of a correlating relational expression.\nClass RexCorrelVariable;\n// Dynamic parameter reference in a row-expression.\nClass RexDynamicParam;\n// Result of compiling code generated from a RexNode expression.\nClass RexExecutable;\n// Evaluates a RexNode expression.\nClass RexExecutorImpl;\n// Access to a field of a row-expression.\nClass RexFieldAccess;\n// Expression combined with sort flags (DESCENDING, NULLS LAST).\nClass RexFieldCollation;\n// Variable which references a field of an input relational expression.\nClass RexInputRef;\n// Evaluates RexNode expressions.\nClass RexInterpreter;\n", "des": "Provides a language for representing row-expressions."}
{"index": 854, "repo": "calcite-core-1.34.0", "code": "package runtime\n\n// Extension to Bindable that returns rows that are arrays of objects.\nInterface ArrayBindable;\n// Statement that can be bound to a DataContext and then executed.\nInterface Bindable<T>;\n// Compiler-checked resources for the Calcite project.\nInterface CalciteResource;\n// Given a match (a list of rows, and their states) produces a list of rows to be output.\nInterface Enumerables.Emitter<E,TResult>;\n// List that is also comparable.\nInterface FlatLists.ComparableList<T>;\n// Removes a Hook after use.\nInterface Hook.Closeable;\n// Regular expression, to be compiled into an Automaton.\nInterface Pattern;\n// Consumer for decorating a PreparedStatement, that is, setting its parameters.\nInterface ResultSetEnumerable.PreparedStatementEnricher;\n// Utilities for space-filling curves.\nInterface SpaceFillingCurve2D;\n// Range.\nInterface SpaceFillingCurve2D.IndexRange;\n// Adds type information to a Enumerable.\nInterface Typed;\n// Compares arrays.\nClass ArrayComparator;\n// Implementation of Cursor on top of an Enumerator that returns an array of Object for each row.\nClass ArrayEnumeratorCursor;\n// A nondeterministic finite-state automaton (NFA).\nClass Automaton;\n// Builds a state-transition graph for deterministic finite automaton.\nClass AutomatonBuilder;\n// Binary search for the implementation of RANGE BETWEEN XXX PRECEDING/FOLLOWING clause.\nClass BinarySearch;\n// A collection of functions used in compression and decompression.\nClass CompressionFunctions;\n// List that consists of a head element and an immutable non-empty list.\nClass ConsList<E>;\n// Transforms the coordinates of a geometry.\nClass CoordinateTransformer;\n// A deterministic finite automaton (DFA).\nClass DeterministicAutomaton;\n// Utilities for processing Enumerable collections.\nClass Enumerables;\n// Implementation of Cursor on top of an Enumerator that returns a record for each row.\nClass EnumeratorCursor<T>;\n// SQL language feature.\nClass Feature;\n// Space-efficient, comparable, immutable lists.\nClass FlatLists;\n// Base class for flat lists.\nClass FlatLists.AbstractFlatList<T>;\n", "des": "Utilities required at runtime."}
{"index": 855, "repo": "calcite-core-1.34.0", "code": "package schema\n\n// Function that combines several values into a scalar result.\nInterface AggregateFunction;\n// Extension to Table that specifies a custom way to resolve column names.\nInterface CustomColumnResolvingTable;\n// Table whose row type can be extended to include extra fields.\nInterface ExtensibleTable;\n// Table that can be scanned, optionally applying supplied filter expressions, without creating an intermediate relational expression.\nInterface FilterableTable;\n// Named expression that accepts parameters and returns a result.\nInterface Function;\n// Information about a function call that is passed to the constructor of a function instance.\nInterface FunctionContext;\n// Parameter to a Function.\nInterface FunctionParameter;\n// Function that can be translated to java code.\nInterface ImplementableAggFunction;\n// Function that can be translated to java code.\nInterface ImplementableFunction;\n// A named expression in a schema.\nInterface Member;\n// A table that can be modified.\nInterface ModifiableTable;\n// A modifiable view onto ModifiableTable.\nInterface ModifiableView;\n// Path from a root schema to a particular object (schema, table, function).\nInterface Path;\n// Table that can be scanned, optionally applying supplied filter expressions, and projecting a given list of columns, without creating an intermediate relational expression.\nInterface ProjectableFilterableTable;\n// Extension to Table that can translate itself to a Queryable.\nInterface QueryableTable;\n// Function that returns a scalar result.\nInterface ScalarFunction;\n// Table that can be scanned without creating an intermediate relational expression.\nInterface ScannableTable;\n// A namespace for tables and functions.\nInterface Schema;\n// Factory for Schema objects.\nInterface SchemaFactory;\n// Extension to the Schema interface.\nInterface SchemaPlus;\n// An interface to represent a version ID that can be used to create a read-consistent view of a Schema.\nInterface SchemaVersion;\n// Schema to which materializations can be added.\nInterface SemiMutableSchema;\n// Statistics about a Table.\nInterface Statistic;\n// Table that can be converted to a stream.\nInterface StreamableTable;\n// Table.\nInterface Table;\n// Factory for Table objects.\nInterface TableFactory<T extends Table>;\n// Function that returns a table during execution time.\nInterface TableFunction;\n// Function that returns a Table.\nInterface TableMacro;\n", "des": "Schema SPI."}
{"index": 856, "repo": "calcite-core-1.34.0", "code": "package impl\n\n// Abstract implementation of Schema.\nClass AbstractSchema;\n// Schema factory that creates an AbstractSchema.\nClass AbstractSchema.Factory;\n// Abstract base class for implementing Table.\nClass AbstractTable;\n// Abstract implementation of Queryable for QueryableTable.\nClass AbstractTableQueryable<T>;\n// Implementation of AggregateFunction via user-defined class.\nClass AggregateFunctionImpl;\n// Implementation of Schema that delegates to an underlying schema.\nClass DelegatingSchema;\n// TransientTable backed by a Java list.\nClass ListTransientTable;\n// Implementation of SchemaVersion that uses a long value as representation.\nClass LongSchemaVersion;\n// Table that is a materialized view.\nClass MaterializedViewTable;\n// Table function that returns the table that materializes a view.\nClass MaterializedViewTable.MaterializedViewTableMacro;\n// Extension to ViewTable that is modifiable.\nClass ModifiableViewTable;\n// Implementation of a function that is based on a method.\nClass ReflectiveFunctionBase;\n// Helps build lists of FunctionParameter.\nClass ReflectiveFunctionBase.ParameterListBuilder;\n// Implementation of ScalarFunction.\nClass ScalarFunctionImpl;\n// Virtual table that is composed of two or more tables joined together.\nClass StarTable;\n// Relational expression that scans a StarTable.\nClass StarTable.StarTableScan;\n// Implementation of TableFunction based on a method.\nClass TableFunctionImpl;\n// Implementation of TableMacro based on a method.\nClass TableMacroImpl;\n// Table whose contents are defined using an SQL statement.\nClass ViewTable;\n// Table function that implements a view.\nClass ViewTableMacro;\n", "des": "Utilities to help implement Calcite's SPIs."}
{"index": 857, "repo": "calcite-core-1.34.0", "code": "package server\n\n// Server.\nInterface CalciteServer;\n// Statement within a Calcite server.\nInterface CalciteServerStatement;\n// Executes DDL commands.\nInterface DdlExecutor;\n// Abstract implementation of DdlExecutor.\nClass DdlExecutorImpl;\n", "des": "Provides a server for hosting Calcite connections."}
{"index": 858, "repo": "calcite-core-1.34.0", "code": "package sql\n\n// Information for creating a dialect.\nInterface SqlDialect.Context;\n// Creates a SqlDialect appropriate for a given database metadata object.\nInterface SqlDialectFactory;\n// \nInterface SqlLiteral.SqlSymbol;\n// A class that describes how many operands an operator can take.\nInterface SqlOperandCountRange;\n// SqlOperatorTable defines a directory interface for enumerating and looking up SQL operators and functions.\nInterface SqlOperatorTable;\n// List of tokens: the input to a parser.\nInterface SqlSpecialOperator.TokenSequence;\n// Aggregate function that can be split into partial aggregates.\nInterface SqlSplittableAggFunction;\n// Collection in which one can register an element.\nInterface SqlSplittableAggFunction.Registry<E>;\n// A function that returns a table.\nInterface SqlTableFunction;\n// A SqlWriter is the target to construct a SQL statement from a parse tree.\nInterface SqlWriter;\n// A Frame is a piece of generated text which shares a common indentation level.\nInterface SqlWriter.Frame;\n// Frame type.\nInterface SqlWriter.FrameType;\n// Configuration for SqlWriter and SqlPrettyWriter.\nInterface SqlWriterConfig;\n// Sub-class should be a Enum and can convert to a SqlLiteral.\nInterface Symbolizable;\n// ExplicitOperatorBinding implements SqlOperatorBinding via an underlying array of known operand types.\nClass ExplicitOperatorBinding;\n// A SQL literal representing a DATE, TIME or TIMESTAMP value.\nClass SqlAbstractDateTimeLiteral;\n// SqlAccessType is represented by a set of allowed access types.\nClass SqlAccessType;\n// Abstract base class for the definition of an aggregate function: an operator which aggregates sets of values into a result.\nClass SqlAggFunction;\n// Represents a type name for an alien system.\nClass SqlAlienSystemTypeNameSpec;\n// Base class for an ALTER statements parse tree nodes.\nClass SqlAlter;\n// The AS operator associates an expression with an alias.\nClass SqlAsOperator;\n// Implementation of SqlCall that keeps its operands in an array.\nClass SqlBasicCall;\n// Concrete implementation of SqlFunction.\nClass SqlBasicFunction;\n// A sql type name specification of basic sql type.\nClass SqlBasicTypeNameSpec;\n// SqlBinaryOperator is a binary operator.\nClass SqlBinaryOperator;\n", "des": "Provides a SQL parser and object model."}
{"index": 859, "repo": "calcite-core-1.34.0", "code": "package advise\n\n// An assistant which offers hints and corrections to a partially-formed SQL statement.\nClass SqlAdvisor;\n// Text and position info of a validator or parser exception.\nClass SqlAdvisor.ValidateErrorInfo;\n// Table function that returns completion hints for a given SQL statement.\nClass SqlAdvisorGetHintsFunction;\n// Table function that returns completion hints for a given SQL statement.\nClass SqlAdvisorGetHintsFunction2;\n// This class is used to return values for (String, int, String[]).\nClass SqlAdvisorHint;\n// This class is used to return values for (String, int, String[]).\nClass SqlAdvisorHint2;\n// SqlAdvisorValidator is used by SqlAdvisor to traverse the parse tree of a SQL statement, not for validation purpose but for setting up the scopes and namespaces to facilitate retrieval of SQL statement completion hints.\nClass SqlAdvisorValidator;\n// A simple parser that takes an incomplete and turn it into a syntactically correct statement.\nClass SqlSimpleParser;\n// Token representing an identifier.\nClass SqlSimpleParser.IdToken;\n// Token.\nClass SqlSimpleParser.Token;\n// Tokenizer.\nClass SqlSimpleParser.Tokenizer;\n", "des": "Provides hints and corrections for editing SQL statements."}
{"index": 860, "repo": "calcite-core-1.34.0", "code": "package ddl\n\n// Parse tree for SqlAttributeDefinition, which is part of a SqlCreateType.\nClass SqlAttributeDefinition;\n// Parse tree for UNIQUE, PRIMARY KEY constraints.\nClass SqlCheckConstraint;\n// Parse tree for UNIQUE, PRIMARY KEY constraints.\nClass SqlColumnDeclaration;\n// Parse tree for CREATE FOREIGN SCHEMA statement.\nClass SqlCreateForeignSchema;\n// Parse tree for CREATE FUNCTION statement.\nClass SqlCreateFunction;\n// Parse tree for CREATE MATERIALIZED VIEW statement.\nClass SqlCreateMaterializedView;\n// Parse tree for CREATE SCHEMA statement.\nClass SqlCreateSchema;\n// Parse tree for CREATE TABLE statement.\nClass SqlCreateTable;\n// Parse tree for CREATE TYPE statement.\nClass SqlCreateType;\n// Parse tree for CREATE VIEW statement.\nClass SqlCreateView;\n// Utilities concerning SqlNode for DDL.\nClass SqlDdlNodes;\n// Parse tree for DROP FUNCTION statement.\nClass SqlDropFunction;\n// Parse tree for DROP MATERIALIZED VIEW statement.\nClass SqlDropMaterializedView;\n// Base class for parse trees of DROP TABLE, DROP VIEW, DROP MATERIALIZED VIEW and DROP TYPE statements.\nClass SqlDropObject;\n// Parse tree for DROP SCHEMA statement.\nClass SqlDropSchema;\n// Parse tree for DROP TABLE statement.\nClass SqlDropTable;\n// Parse tree for DROP TYPE statement.\nClass SqlDropType;\n// Parse tree for DROP VIEW statement.\nClass SqlDropView;\n// Parse tree for UNIQUE, PRIMARY KEY constraints.\nClass SqlKeyConstraint;\n// File type for CREATE FUNCTION.\nEnum SqlDdlNodes.FileType;\n", "des": "Parse tree for SQL DDL statements."}
{"index": 861, "repo": "calcite-core-1.34.0", "code": "package dialect\n\n// Stores information about capabilities of Jethro databases.\nInterface JethroDataSqlDialect.JethroInfoCache;\n// A SqlDialect implementation for the Access database.\nClass AccessSqlDialect;\n// A SqlDialect implementation for an unknown ANSI compatible database.\nClass AnsiSqlDialect;\n// A SqlDialect implementation for Google BigQuery's \"Standard SQL\" dialect.\nClass BigQuerySqlDialect;\n// A SqlDialect implementation that produces SQL that can be parsed by Apache Calcite.\nClass CalciteSqlDialect;\n// A SqlDialect implementation for the ClickHouse database.\nClass ClickHouseSqlDialect;\n// A SqlDialect implementation for the IBM DB2 database.\nClass Db2SqlDialect;\n// A SqlDialect implementation for the Apache Derby database.\nClass DerbySqlDialect;\n// A SqlDialect implementation for the Exasol database.\nClass ExasolSqlDialect;\n// A SqlDialect implementation for the Firebird database.\nClass FirebirdSqlDialect;\n// A SqlDialect implementation for the Firebolt database.\nClass FireboltSqlDialect;\n// A SqlDialect implementation for the H2 database.\nClass H2SqlDialect;\n// A SqlDialect implementation for the Apache Hive database.\nClass HiveSqlDialect;\n// A SqlDialect implementation for the Hsqldb database.\nClass HsqldbSqlDialect;\n// A SqlDialect implementation for the Infobright database.\nClass InfobrightSqlDialect;\n// A SqlDialect implementation for the Informix database.\nClass InformixSqlDialect;\n// A SqlDialect implementation for the Ingres database.\nClass IngresSqlDialect;\n// A SqlDialect implementation for the Interbase database.\nClass InterbaseSqlDialect;\n// A SqlDialect implementation for the JethroData database.\nClass JethroDataSqlDialect;\n// Information about the capabilities of a Jethro database.\nClass JethroDataSqlDialect.JethroInfo;\n// A SqlDialect implementation for the LucidDB database.\nClass LucidDbSqlDialect;\n// A SqlDialect implementation for the Microsoft SQL Server database.\nClass MssqlSqlDialect;\n// A SqlDialect implementation for the MySQL database.\nClass MysqlSqlDialect;\n// A SqlDialect implementation for the Neoview database.\nClass NeoviewSqlDialect;\n", "des": "SQL unparsers for JDBC dialects."}
{"index": 862, "repo": "calcite-core-1.34.0", "code": "package fun\n\n// Use SqlLibraryOperatorTableFactory.getOperatorTable(SqlLibrary...) instead, passing SqlLibrary.ORACLE as argument.\nClass OracleSqlOperatorTable;\n// Base class for grouping functions GROUP_ID, GROUPING_ID, GROUPING.\nClass SqlAbstractGroupFunction;\n// Base class for time functions such as \"LOCALTIME\", \"LOCALTIME(n)\".\nClass SqlAbstractTimeFunction;\n// Definition of the ANY_VALUE aggregate functions, returning any one of the values which go into it.\nClass SqlAnyValueAggFunction;\n// Definition of the SQL:2003 standard ARRAY query constructor, ARRAY (<query>).\nClass SqlArrayQueryConstructor;\n// Definition of the SQL:2003 standard ARRAY constructor, ARRAY [<expr>, ...].\nClass SqlArrayValueConstructor;\n// Avg is an aggregator which returns the average of the values which go into it.\nClass SqlAvgAggFunction;\n// Base class for functions such as \"USER\", \"CURRENT_ROLE\", and \"CURRENT_PATH\".\nClass SqlBaseContextVariable;\n// Concrete implementation of SqlAggFunction.\nClass SqlBasicAggFunction;\n// Defines the BETWEEN operator.\nClass SqlBetweenOperator;\n// Definition of the BIT_AND and BIT_OR aggregate functions, returning the bitwise AND/OR of all non-null input values, or null if none.\nClass SqlBitOpAggFunction;\n// A SqlCase is a node of a parse tree which represents a case statement.\nClass SqlCase;\n// An operator describing a CASE, NULLIF or COALESCE expression.\nClass SqlCaseOperator;\n// SqlCastFunction.\nClass SqlCastFunction;\n// The COALESCE function.\nClass SqlCoalesceFunction;\n// SqlCollectionTableOperator is the \"table function derived table\" operator.\nClass SqlCollectionTableOperator;\n// SqlColumnListConstructor defines the non-standard constructor used to pass a COLUMN_LIST parameter to a UDX.\nClass SqlColumnListConstructor;\n// Common base for the CONVERT and TRANSLATE functions.\nClass SqlConvertFunction;\n// Definition of the SQL COUNT aggregation function.\nClass SqlCountAggFunction;\n// Covar is an aggregator which returns the Covariance of the values which go into it.\nClass SqlCovarAggFunction;\n", "des": "Defines the set of standard SQL row-level functions and operators."}
{"index": 863, "repo": "calcite-core-1.34.0", "code": "package parser\n\n// Interface to define the configuration for a SQL parser.\nInterface SqlParser.Config;\n// Factory for SqlAbstractParserImpl objects.\nInterface SqlParserImplFactory;\n// Builder for SqlParserPos.\nClass Span;\n// A SqlParser parses a SQL statement.\nClass SqlParser;\n// \nClass SqlParser.ConfigBuilder;\n// SqlParserPos represents the position of a parsed token within SQL statement text.\nClass SqlParserPos;\n// Utility methods relating to parsing SQL.\nClass SqlParserUtil;\n// The components of a collation definition, per the SQL standard.\nClass SqlParserUtil.ParsedCollation;\n// Class that holds a SqlOperator and a SqlParserPos.\nClass SqlParserUtil.ToTreeListItem;\n// Contains a string, the offset of a token within the string, and a parser position containing the beginning and end line number.\nClass StringAndPos;\n// SqlParseException defines a checked exception corresponding to SqlParser.\nClass SqlParseException;\n// Thrown by SqlParserUtil.replaceEscapedChars(String).\nClass SqlParserUtil.MalformedUnicodeEscape;\n", "des": "Provides a SQL parser."}
{"index": 864, "repo": "calcite-core-1.34.0", "code": "package pretty\n\n// Data structure to hold options for SqlPrettyWriter.setFormatOptions(SqlFormatOptions).\nClass SqlFormatOptions;\n// Pretty printer for SQL statements.\nClass SqlPrettyWriter;\n", "des": "Provides a pretty-printer for SQL statements."}
{"index": 865, "repo": "calcite-core-1.34.0", "code": "package type\n\n// Holds constants associated with SQL types introduced after the earliest version of Java supported by Farrago (this currently means anything introduced in JDK 1.6 or later).\nInterface ExtraSqlTypes;\n// An operand type checker that supports implicit type cast, see TypeCoercion.builtinFunctionCoercion(SqlCallBinding, List, List) for details.\nInterface ImplicitCastOperandTypeChecker;\n// Strategy interface to process operands of an operator call.\nInterface SqlOperandHandler;\n// Extension to SqlOperandTypeChecker that also provides names and types of particular operands.\nInterface SqlOperandMetadata;\n// Strategy interface to check for allowed operand types of an operator call.\nInterface SqlOperandTypeChecker;\n// Strategy to infer unknown types of the operands of an operator call.\nInterface SqlOperandTypeInference;\n// Strategy interface to infer the type of an operator call from the type of the operands.\nInterface SqlReturnTypeInference;\n// SqlSingleOperandTypeChecker is an extension of SqlOperandTypeChecker for implementations which are capable of checking the type of a single operand in isolation.\nInterface SqlSingleOperandTypeChecker;\n// Interface that defines rules within type mappings.\nInterface SqlTypeMappingRule;\n// Strategy to transform one type to another.\nInterface SqlTypeTransform;\n// Abstract base class for SQL implementations of RelDataType.\nClass AbstractSqlType;\n// SQL array type.\nClass ArraySqlType;\n// AssignableOperandTypeChecker implements SqlOperandTypeChecker by verifying that the type of each argument is assignable to a predefined set of parameter types (under the SQL definition of \"assignable\").\nClass AssignableOperandTypeChecker;\n// BasicSqlType represents a standard atomic SQL type (excluding interval types).\nClass BasicSqlType;\n// Type checking strategy which verifies that types have the required attributes to be used as arguments to comparison operators.\nClass ComparableOperandTypeChecker;\n// This class allows multiple existing SqlOperandTypeChecker rules to be combined into one rule.\nClass CompositeOperandTypeChecker;\n// Allows multiple SqlSingleOperandTypeChecker rules to be combined into one rule.\nClass CompositeSingleOperandTypeChecker;\n// Returns the rowtype of a cursor of the operand at a particular 0-based ordinal position.\nClass CursorReturnTypeInference;\n// Parameter type-checking strategy for Explicit Type.\nClass ExplicitOperandTypeChecker;\n", "des": "SQL type system."}
{"index": 866, "repo": "calcite-core-1.34.0", "code": "package util\n\n// Argument handler.\nInterface SqlBasicVisitor.ArgHandler<R>;\n// Visitor class, follows the visitor pattern.\nInterface SqlVisitor<R>;\n// ChainedSqlOperatorTable implements the SqlOperatorTable interface by chaining together any number of underlying operator table instances.\nClass ChainedSqlOperatorTable;\n// Similar to Pair but identity is based on identity of values.\nClass IdPair<L,R>;\n// Implementation of the SqlOperatorTable interface by using a list of operators.\nClass ListSqlOperatorTable;\n// ReflectiveSqlOperatorTable implements the SqlOperatorTable interface by reflecting the public fields of a subclass.\nClass ReflectiveSqlOperatorTable;\n// Basic implementation of SqlVisitor which does nothing at each node.\nClass SqlBasicVisitor<R>;\n// Default implementation of SqlBasicVisitor.ArgHandler which merely calls SqlNode.accept(org.apache.calcite.sql.util.SqlVisitor<R>) on each operand.\nClass SqlBasicVisitor.ArgHandlerImpl<R>;\n// Extension to StringBuilder for the purposes of creating SQL queries and expressions.\nClass SqlBuilder;\n// Utilities for SqlOperatorTables.\nClass SqlOperatorTables;\n// Basic implementation of SqlVisitor which returns each leaf node unchanged.\nClass SqlShuttle;\n// String that represents a kocher SQL statement, expression, or fragment.\nClass SqlString;\n", "des": "Utility classes for the SQL object model, parsing, and validation."}
{"index": 867, "repo": "calcite-core-1.34.0", "code": "package validate\n\n// An extension to the SqlValidatorScope interface which indicates that the scope is aggregating.\nInterface AggregatingScope;\n// Enumeration of valid SQL compatibility modes.\nInterface SqlConformance;\n// An interface of an object identifier that represents a SqlIdentifier.\nInterface SqlMoniker;\n// Checks whether two names are the same according to a case-sensitivity policy.\nInterface SqlNameMatcher;\n// Validates the parse tree of a SQL statement, and provides semantic information about the parse tree.\nInterface SqlValidator;\n// Interface to define the configuration for a SqlValidator.\nInterface SqlValidator.Config;\n// Supplies catalog information for SqlValidator.\nInterface SqlValidatorCatalogReader;\n// A namespace describes the relation returned by a section of a SQL query.\nInterface SqlValidatorNamespace;\n// Name-resolution scope.\nInterface SqlValidatorScope;\n// Callback from SqlValidatorScope.resolve(java.util.List<java.lang.String>, org.apache.calcite.sql.validate.SqlNameMatcher, boolean, org.apache.calcite.sql.validate.SqlValidatorScope.Resolved).\nInterface SqlValidatorScope.Resolved;\n// Supplies a SqlValidator with the metadata for a table.\nInterface SqlValidatorTable;\n// Suggests candidates for unique names, given the number of attempts so far and the number of expressions in the project list.\nInterface SqlValidatorUtil.Suggester;\n// Extends SqlValidator to allow discovery of useful data such as fully qualified names of SQL objects, alternative valid SQL objects that can be used in the SQL statement (dubbed as hints).\nInterface SqlValidatorWithHints;\n// Scope for resolving identifiers within a SELECT statement that has a GROUP BY clause.\nClass AggregatingSelectScope;\n// Information about an aggregating scope that can only be determined after validation has occurred.\nClass AggregatingSelectScope.Resolved;\n// Namespace for an AS t(c1, c2, ...) clause.\nClass AliasNamespace;\n// Namespace for COLLECT and TABLE constructs.\nClass CollectNamespace;\n// An implementation of SqlValidatorNamespace that delegates all methods to an underlying object.\nClass DelegatingNamespace;\n// A scope which delegates all requests to its parent scope.\nClass DelegatingScope;\n", "des": "SQL validation."}
{"index": 868, "repo": "calcite-core-1.34.0", "code": "package implicit\n\n// Default strategies to coerce differing types that participate in operations into compatible ones.\nInterface TypeCoercion;\n// Factory for TypeCoercion objects.\nInterface TypeCoercionFactory;\n// Base class for all the type coercion rules.\nClass AbstractTypeCoercion;\n// Default implementation of Calcite implicit type cast.\nClass TypeCoercionImpl;\n// Factory class for type coercion instantiation of different sql dialects.\nClass TypeCoercions;\n", "des": "SQL Implicit Type Cast"}
{"index": 869, "repo": "calcite-core-1.34.0", "code": "package sql2rel\n\n// Converts an expression for a group window function (e.g.\nInterface AuxiliaryConverter;\n// Provides context for InitializerExpressionFactory methods.\nInterface InitializerContext;\n// InitializerExpressionFactory supplies default values for INSERT, UPDATE, and NEW.\nInterface InitializerExpressionFactory;\n// Rule configuration.\nInterface RelDecorrelator.AdjustProjectForCountAggregateRule.AdjustProjectForCountAggregateRuleConfig;\n// Base configuration for rules that are non-static in a RelDecorrelator.\nInterface RelDecorrelator.Config;\n// Rule configuration.\nInterface RelDecorrelator.RemoveCorrelationForScalarAggregateRule.RemoveCorrelationForScalarAggregateRuleConfig;\n// Rule configuration.\nInterface RelDecorrelator.RemoveCorrelationForScalarProjectRule.RemoveCorrelationForScalarProjectRuleConfig;\n// Rule configuration.\nInterface RelDecorrelator.RemoveSingleAggregateRule.RemoveSingleAggregateRuleConfig;\n// Mix-in interface for relational expressions that know how to flatten themselves.\nInterface RelStructuredTypeFlattener.SelfFlatteningRel;\n// Converts expressions from SqlNode to RexNode.\nInterface SqlNodeToRexConverter;\n// Contains the context necessary for a SqlRexConvertlet to convert a SqlNode expression into a RexNode.\nInterface SqlRexContext;\n// Thunk which converts a SqlNode expression into a RexNode expression.\nInterface SqlRexConvertlet;\n// Collection of SqlRexConvertlets.\nInterface SqlRexConvertletTable;\n// Interface to define the configuration for a SqlToRelConverter.\nInterface SqlToRelConverter.Config;\n// SubQueryConverter provides the interface for classes that convert sub-queries into equivalent expressions.\nInterface SubQueryConverter;\n// Simple implementation of AuxiliaryConverter.\nClass AuxiliaryConverter.Impl;\n// A visitor for relational expressions that extracts a Project, with a \"simple\" computation over the correlated variables, from the right side of a correlation (Correlate) and places it on the left side.\nClass CorrelateProjectExtractor;\n// Shuttle that finds references to a given CorrelationId within a tree of RelNodes.\nClass CorrelationReferenceFinder;\n// Rewrites relations to ensure the same correlation is referenced by the same correlation variable.\nClass DeduplicateCorrelateVariables;\n", "des": "Translates a SQL parse tree to relational expression."}
{"index": 870, "repo": "calcite-core-1.34.0", "code": "package statistic\n\n// Implementation of SqlStatisticProvider that reads and writes a cache.\nClass CachingSqlStatisticProvider;\n// Implementation of SqlStatisticProvider that generates and executes SQL queries.\nClass QuerySqlStatisticProvider;\n// Implementation of SqlStatisticProvider that looks up values in a table.\nEnum MapSqlStatisticProvider;\n", "des": "Implementations of statistics providers."}
{"index": 871, "repo": "calcite-core-1.34.0", "code": "package tools\n\n// Interface that describes how to configure planning sessions generated using the Frameworks tools.\nInterface FrameworkConfig;\n// Piece of code to be run in a context where a planner and statement are available.\nInterface Frameworks.BasePrepareAction<R>;\n// Piece of code to be run in a context where a planner is available.\nInterface Frameworks.PlannerAction<R>;\n// Configuration.\nInterface Hoist.Config;\n// A façade that covers Calcite's query planning process: parse SQL, validate the parse tree, convert the parse tree to a relational expression, and optimize the relational expression.\nInterface Planner;\n// Program that transforms a relational expression into another relational expression.\nInterface Program;\n// Information necessary to create a call to an aggregate function.\nInterface RelBuilder.AggCall;\n// Configuration of RelBuilder.\nInterface RelBuilder.Config;\n// Information necessary to create the GROUP BY clause of an Aggregate.\nInterface RelBuilder.GroupKey;\n// Call to a windowed aggregate function.\nInterface RelBuilder.OverCall;\n// A partially-created RelBuilder.\nInterface RelBuilderFactory;\n// Runs a relational expression.\nInterface RelRunner;\n// A set rules associated with a particular type of invocation of the Planner.\nInterface RuleSet;\n// Tools for invoking Calcite functionality without initializing a container / server first.\nClass Frameworks;\n// A builder to help you build a FrameworkConfig using defaults where values aren't required.\nClass Frameworks.ConfigBuilder;\n// \nClass Frameworks.PrepareAction<R>;\n// Utility that extracts constants from a SQL query.\nClass Hoist;\n// Result of hoisting.\nClass Hoist.Hoisted;\n// Variable.\nClass Hoist.Variable;\n// Extension to RelBuilder for Pig relational operators.\nClass PigRelBuilder;\n// Utilities for creating Programs.\nClass Programs;\n// Builder for relational expressions.\nClass RelBuilder;\n// Implementations of RelRunner.\nClass RelRunners;\n// Utilities for creating and composing rule sets.\nClass RuleSets;\n// Option for performing group efficiently if data set is already sorted.\nEnum PigRelBuilder.GroupOption;\n", "des": "Provides utility classes."}
{"index": 872, "repo": "calcite-core-1.34.0", "code": "package util\n\n// Tagging interface to allow a SqlParseException to be identified without adding a dependency on it from client-side code.\nInterface CalciteParserException;\n// Tagging interface to allow a SqlValidatorException to be identified without adding a dependency on it from client-side code.\nInterface CalciteValidatorException;\n// Compatibility layer.\nInterface Compatible;\n// A collection of terms.\nInterface Glossary;\n// Maps Java types to their corresponding getters in JDBC.\nInterface JdbcType<T>;\n// Callback to be called when a test for validity succeeds or fails.\nInterface Litmus;\n// Ordering relation.\nInterface PartiallyOrderedSet.Ordering<E>;\n// Callback defining the behavior of a special function.\nInterface PrecedenceClimbingParser.Special;\n// Consumer of Range values.\nInterface RangeSets.Consumer<C extends Comparable<C>>;\n// Deconstructor for Range values.\nInterface RangeSets.Handler<C extends Comparable<C>,R>;\n// Interface for looking up methods relating to reflective visitation.\nInterface ReflectiveVisitDispatcher<R extends ReflectiveVisitor,E>;\n// Object which can be a target for a reflective visitation (see ReflectUtil.invokeVisitor(ReflectiveVisitor, Object, Class, String).\nInterface ReflectiveVisitor;\n// Can invoke a method on an object of type E with return type T.\nInterface ReflectUtil.MethodDispatcher<T>;\n// As of release 1.19, replaced by CalciteSystemProperty\nInterface SaffronProperties;\n// Source of data.\nInterface Source;\n// Remembers to set the value back.\nInterface TryThreadLocal.Memo;\n// A class derived from BarfingInvocationHandler handles a method call by looking for a method in itself with identical parameters.\nClass BarfingInvocationHandler;\n// Helps to run benchmarks by running the same task repeatedly and averaging the running times.\nClass Benchmark;\n// Collects statistics for a test that is run multiple times.\nClass Benchmark.Statistician;\n// Utility functions for BitSet.\nClass BitSets;\n// String of bits.\nClass BitString;\n// Holder for a list of constants describing which bugs which have not been fixed.\nClass Bug;\n", "des": "Provides utility classes."}
{"index": 873, "repo": "calcite-core-1.34.0", "code": "package format\n\n// A format element in a format string.\nInterface FormatElement;\n// Describes the format strings used by a formatting function such as FORMAT_TIMESTAMP or CAST(string AS DATE FORMAT formatString).\nInterface FormatModel;\n// Utilities for FormatModel.\nClass FormatModels;\n// Implementation of FormatElement containing the standard format elements.\nEnum FormatElementEnum;\n", "des": "Utility classes for handling format strings."}
{"index": 874, "repo": "calcite-core-1.34.0", "code": "package graph\n\n// Factory for edges that have attributes.\nInterface AttributedDirectedGraph.AttributedEdgeFactory<V,E>;\n// Directed graph.\nInterface DirectedGraph<V,E>;\n// Factory for edges.\nInterface DirectedGraph.EdgeFactory<V,E>;\n// Directed graph where edges have attributes and allows multiple edges between any two vertices provided that their attributes are different.\nClass AttributedDirectedGraph<V,E extends DefaultEdge>;\n// Iterates over the vertices in a directed graph in breadth-first order.\nClass BreadthFirstIterator<V,E extends DefaultEdge>;\n// Detects cycles in directed graphs.\nClass CycleDetector<V,E extends DefaultEdge>;\n// Default implementation of DirectedGraph.\nClass DefaultDirectedGraph<V,E extends DefaultEdge>;\n// Default implementation of Edge.\nClass DefaultEdge;\n// Iterates over the vertices in a directed graph in depth-first order.\nClass DepthFirstIterator<V,E extends DefaultEdge>;\n// Miscellaneous graph utilities.\nClass Graphs;\n// Immutable grap.\nClass Graphs.FrozenGraph<V,E extends DefaultEdge>;\n// Iterates over the edges of a graph in topological order.\nClass TopologicalOrderIterator<V,E extends DefaultEdge>;\n", "des": "Graph-theoretic algorithms and data structures."}
{"index": 875, "repo": "calcite-core-1.34.0", "code": "package javac\n\n// The interface JavaCompiler represents an interface to invoke a regular Java compiler.\nInterface JavaCompiler;\n// JaninoCompiler implements the JavaCompiler interface by calling Janino.\nClass JaninoCompiler;\n// Arguments to an invocation of the Janino compiler.\nClass JaninoCompiler.JaninoCompilerArgs;\n// A JavaCompilerArgs holds the arguments for a JavaCompiler.\nClass JavaCompilerArgs;\n", "des": "Provides compilers for Java code."}
{"index": 876, "repo": "calcite-core-1.34.0", "code": "package mapping\n\n// A Mapping is a relationship between a source domain to target domain of integers.\nInterface Mapping;\n// Core interface of all mappings.\nInterface Mappings.CoreMapping;\n// Mapping where every source has a target.\nInterface Mappings.FunctionMapping;\n// Mapping suitable for sourcing columns.\nInterface Mappings.SourceMapping;\n// Mapping suitable for mapping columns to a target.\nInterface Mappings.TargetMapping;\n// Simple implementation of Mappings.TargetMapping where the number of sources and targets are specified as constructor parameters, and you just need to implement one method.\nClass AbstractSourceMapping;\n// Simple implementation of Mappings.TargetMapping where the number of sources and targets are specified as constructor parameters, and you just need to implement one method.\nClass AbstractTargetMapping;\n// An immutable pair of integers.\nClass IntPair;\n// Utility functions related to mappings.\nClass Mappings;\n// Abstract implementation of Mapping.\nClass Mappings.AbstractMapping;\n// Abstract implementation of mapping where both source and target domains are finite.\nClass Mappings.FiniteAbstractMapping;\n// The identity mapping, of a given size, or infinite.\nClass Mappings.IdentityMapping;\n// Source mapping that returns the same result as a parent Mappings.SourceMapping except for specific overriding elements.\nClass Mappings.OverridingSourceMapping;\n// Target mapping that returns the same result as a parent Mappings.TargetMapping except for specific overriding elements.\nClass Mappings.OverridingTargetMapping;\n// A mapping where a source has at most one target, and every target has at most one source.\nClass Mappings.PartialMapping;\n// Describes the type of a mapping, from the most general MappingType.MULTI_FUNCTION (every element in the source and target domain can participate in many mappings) to the most restricted MappingType.BIJECTION (every element in the source and target domain must be paired with precisely one element in the other domain).\nEnum MappingType;\n// Thrown when a mapping is expected to return one element but returns none.\nClass Mappings.NoElementException;\n// Thrown when a mapping is expected to return one element but returns several.\nClass Mappings.TooManyElementsException;\n", "des": "Support for algebraic maps."}
{"index": 877, "repo": "calcite-core-1.34.0", "code": "package trace\n\n// Small extension to Logger with some performance improvements.\nClass CalciteLogger;\n// CalciteTimingTracer provides a mechanism for tracing the timing of a call sequence at nanosecond resolution.\nClass CalciteTimingTracer;\n// Contains all of the tracers used within org.apache.calcite class libraries.\nClass CalciteTrace;\n", "des": "Tracing services."}
{"index": 878, "repo": "mahout-math-0.13.0", "code": "package math\n\n// The basic interface including numerous convenience functions\nInterface Matrix;\n// Optional interface for optimized matrix multiplications.\nInterface MatrixTimesOps;\n// \nInterface QR;\n// Interface for an object that knows how to swap elements at two positions (a,b).\nInterface Swapper;\n// The basic interface including numerous convenience functions\nInterface Vector;\n// A holder for information about a specific item in the Vector.\nInterface Vector.Element;\n// \nInterface VectorIterable;\n// A few universal implementations of convenience functions for a JVM-backed matrix.\nClass AbstractMatrix;\n// \nClass AbstractMatrix.TransposeViewVector;\n// Implementations of generic capabilities like sum of elements and dot products\nClass AbstractVector;\n// \nClass Algebra;\n// Array manipulations; complements java.util.Arrays.\nClass Arrays;\n// \nClass BinarySearch;\n// A centroid is a weighted vector.\nClass Centroid;\n// Cholesky decomposition shamelessly ported from JAMA.\nClass CholeskyDecomposition;\n// Implements a vector with all the same values.\nClass ConstantVector;\n// A delegating vector provides an easy way to decorate vectors with weights or id's and such while keeping all of the Vector functionality.\nClass DelegatingVector;\n// Matrix of doubles implemented using a 2-d array\nClass DenseMatrix;\n// Economy packaging for a dense symmetric in-core matrix.\nClass DenseSymmetricMatrix;\n// Implements vector as an array of doubles\nClass DenseVector;\n// \nClass DiagonalMatrix;\n// Provides a way to get data from a file and treat it as if it were a matrix, but avoids putting all that data onto the Java heap.\nClass FileBasedMatrix;\n// Provides a way to get data from a file and treat it as if it were a matrix, but avoids putting all that data onto the Java heap.\nClass FileBasedSparseBinaryMatrix;\n// \nClass FileBasedSparseBinaryMatrix.BinaryReadOnlyElement;\n// \nClass Matrices;\n// \nClass MatrixSlice;\n// Provides a virtual vector that is really a row or column or diagonal of a matrix.\nClass MatrixVectorView;\n// Implements subset view of a Matrix\nClass MatrixView;\n", "des": "Core base classes; Operations on primitive arrays such as sorting, partitioning and permuting."}
{"index": 879, "repo": "mahout-math-0.13.0", "code": "package function\n\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteByteProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteCharProcedure;\n// A comparison function which imposes a total ordering on some collection of elements.\nInterface ByteComparator;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteDoubleProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteFloatProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteIntProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteLongProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteObjectProcedure<T>;\n// Interface that represents a procedure object: a procedure that takes a single argument and does not return a value.\nInterface ByteProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface ByteShortProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharByteProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharCharProcedure;\n// A comparison function which imposes a total ordering on some collection of elements.\nInterface CharComparator;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharDoubleProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharFloatProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharIntProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharLongProcedure;\n// Interface that represents a procedure object: a procedure that takes two arguments and does not return a value.\nInterface CharObjectProcedure<T>;\n", "des": "Core interfaces for functions, comparisons and procedures on objects and primitive data types."}
{"index": 880, "repo": "mahout-math-0.13.0", "code": "package math\n\n// Arithmetic functions.\nClass Arithmetic;\n// Defines some useful constants.\nClass Constants;\n// Polynomial functions.\nClass Polynomial;\n", "des": "Tools for basic and advanced mathematics: Arithmetics and Algebra, Polynomials and Chebyshev series, Bessel and Airy functions, Function Objects for generic function evaluation, etc."}
{"index": 881, "repo": "mahout-math-0.13.0", "code": "package engine\n\n// MersenneTwister (MT19937) is one of the strongest uniform pseudo-random number generators known so far; at the same time it is quick.\nClass MersenneTwister;\n// Abstract base class for uniform pseudo-random number generating engines.\nClass RandomEngine;\n", "des": "Engines generating strong uniformly distributed pseudo-random numbers; Needed by all JET probability distributions since they rely on uniform random numbers to generate random numbers from their own distribution."}
{"index": 882, "repo": "mahout-math-0.13.0", "code": "package stat\n\n// Partially deprecated until unit tests are in place.\nClass Gamma;\n// Partially deprecated until unit tests are in place.\nClass Probability;\n", "des": "Tools for basic and advanced statistics: Estimators, Gamma functions, Beta functions, Probabilities, Special integrals, etc."}
{"index": 883, "repo": "mahout-math-0.13.0", "code": "package list\n\n// Abstract base class for resizable lists holding byte elements; abstract.\nClass AbstractByteList;\n// Abstract base class for resizable lists holding char elements; abstract.\nClass AbstractCharList;\n// Abstract base class for resizable lists holding double elements; abstract.\nClass AbstractDoubleList;\n// Abstract base class for resizable lists holding float elements; abstract.\nClass AbstractFloatList;\n// Abstract base class for resizable lists holding int elements; abstract.\nClass AbstractIntList;\n// Abstract base class for resizable lists holding objects or primitive data types such as int, float, etc.\nClass AbstractList;\n// Abstract base class for resizable lists holding long elements; abstract.\nClass AbstractLongList;\n// Abstract base class for resizable lists holding objects or primitive data types such as int, float, etc.First see the package summary and javadoc tree view to get the broad picture.\nClass AbstractObjectList<T>;\n// Abstract base class for resizable lists holding short elements; abstract.\nClass AbstractShortList;\n// Resizable list holding byte elements; implemented with arrays.\nClass ByteArrayList;\n// Resizable list holding char elements; implemented with arrays.\nClass CharArrayList;\n// Resizable list holding double elements; implemented with arrays.\nClass DoubleArrayList;\n// Resizable list holding float elements; implemented with arrays.\nClass FloatArrayList;\n// Resizable list holding int elements; implemented with arrays.\nClass IntArrayList;\n// Resizable list holding long elements; implemented with arrays.\nClass LongArrayList;\n// Resizable list holding ${valueType} elements; implemented with arrays.\nClass ObjectArrayList<T>;\n// Resizable list holding short elements; implemented with arrays.\nClass ShortArrayList;\n// Resizable list holding long elements; implemented with arrays; not efficient; just to demonstrate which methods you must override to implement a fully functional list.\nClass SimpleLongArrayList;\n", "des": "Resizable lists holding objects or primitive data types such as int, double, etc."}
{"index": 884, "repo": "mahout-math-0.13.0", "code": "package map\n\n// \nClass AbstractByteByteMap;\n// \nClass AbstractByteCharMap;\n// \nClass AbstractByteDoubleMap;\n// \nClass AbstractByteFloatMap;\n// \nClass AbstractByteIntMap;\n// \nClass AbstractByteLongMap;\n// \nClass AbstractByteObjectMap<T>;\n// \nClass AbstractByteShortMap;\n// \nClass AbstractCharByteMap;\n// \nClass AbstractCharCharMap;\n// \nClass AbstractCharDoubleMap;\n// \nClass AbstractCharFloatMap;\n// \nClass AbstractCharIntMap;\n// \nClass AbstractCharLongMap;\n// \nClass AbstractCharObjectMap<T>;\n// \nClass AbstractCharShortMap;\n// \nClass AbstractDoubleByteMap;\n// \nClass AbstractDoubleCharMap;\n// \nClass AbstractDoubleDoubleMap;\n// \nClass AbstractDoubleFloatMap;\n// \nClass AbstractDoubleIntMap;\n// \nClass AbstractDoubleLongMap;\n// \nClass AbstractDoubleObjectMap<T>;\n// \nClass AbstractDoubleShortMap;\n// \nClass AbstractFloatByteMap;\n// \nClass AbstractFloatCharMap;\n// \nClass AbstractFloatDoubleMap;\n// \nClass AbstractFloatFloatMap;\n// \nClass AbstractFloatIntMap;\n// \nClass AbstractFloatLongMap;\n// \nClass AbstractFloatObjectMap<T>;\n// \nClass AbstractFloatShortMap;\n// \nClass AbstractIntByteMap;\n// \nClass AbstractIntCharMap;\n// \nClass AbstractIntDoubleMap;\n// \nClass AbstractIntFloatMap;\n// \nClass AbstractIntIntMap;\n// \nClass AbstractIntLongMap;\n// \nClass AbstractIntObjectMap<T>;\n// \nClass AbstractIntShortMap;\n// \nClass AbstractLongByteMap;\n// \nClass AbstractLongCharMap;\n// \nClass AbstractLongDoubleMap;\n// \nClass AbstractLongFloatMap;\n// \nClass AbstractLongIntMap;\n// \nClass AbstractLongLongMap;\n// \nClass AbstractLongObjectMap<T>;\n// \nClass AbstractLongShortMap;\n", "des": "Automatically growing and shrinking maps holding objects or primitive data types such as int, double, etc."}
{"index": 885, "repo": "cassandra-all-4.1.2", "code": "package types\n\n// Collection of (typed) CQL values that can be retrieved by index (starting at zero).\nInterface GettableByIndexData;\n// Collection of (typed) CQL values that can be retrieved by name.\nInterface GettableByNameData;\n// Collection of (typed) CQL values that can be retrieved either by index (starting at zero) or by name.\nInterface GettableData;\n// Collection of (typed) CQL values that can be set by index (starting at zero).\nInterface SettableByIndexData<T extends SettableByIndexData<T>>;\n// Collection of (typed) CQL values that can set by name.\nInterface SettableByNameData<T extends SettableData<T>>;\n// Collection of (typed) CQL values that can be set either by index (starting at zero) or by name.\nInterface SettableData<T extends SettableData<T>>;\n// \nClass AbstractGettableData;\n// A registry for TypeCodecs.\nClass CodecRegistry;\n// A set of utility methods to deal with type conversion and serialization.\nClass CodecUtils;\n// Data types supported by cassandra.\nClass DataType;\n// Instances of this class represent collection types, that is, lists, sets or maps.\nClass DataType.CollectionType;\n// A \"custom\" type is a type that cannot be expressed as a CQL type.\nClass DataType.CustomType;\n// Instances of this class represent CQL native types, also known as CQL primitive types.\nClass DataType.NativeType;\n// \nClass DataTypeClassNameParser;\n// Represents a duration.\nClass Duration;\n// A date with no time components, no time zone, in the ISO 8601 calendar.\nClass LocalDate;\n// Keeps metadata on the connected cluster, including known nodes and schema definitions.\nClass Metadata;\n// Simple utility class used to help parsing CQL values (mainly UDT and collection ones).\nClass ParseUtils;\n// A tuple type.\nClass TupleType;\n// A value for a Tuple.\nClass TupleValue;\n// A Codec that can serialize and deserialize to and from a given CQL type and a given Java Type.\nClass TypeCodec<T>;\n// Base class for codecs mapping CQL lists and sets to Java collections.\nClass TypeCodec.AbstractCollectionCodec<E,C extends java.util.Collection<E>>;\n", "des": "Contains pieces of the Java Driver that are needed to handle data types in C* User-Defined-Functions/Aggregates."}
{"index": 886, "repo": "cassandra-all-4.1.2", "code": "package streaming\n\n// This is the interface is used by the streaming code read a SSTable stream off a channel.\nInterface IStreamReader;\n// CassandraStreamReader that reads from streamed compressed SSTable\nClass CassandraCompressedStreamReader;\n// CassandraStreamWriter for compressed SSTable.\nClass CassandraCompressedStreamWriter;\n// CassandraEntireSSTableStreamReader reads SSTable off the wire and writes it to disk.\nClass CassandraEntireSSTableStreamReader;\n// CassandraEntireSSTableStreamWriter streams the entire SSTable to given channel.\nClass CassandraEntireSSTableStreamWriter;\n// used to receive the part(or whole) of a SSTable data file.\nClass CassandraIncomingFile;\n// used to transfer the part(or whole) of a SSTable data file\nClass CassandraOutgoingFile;\n// \nClass CassandraStreamHeader;\n// \nClass CassandraStreamHeader.Builder;\n// \nClass CassandraStreamHeader.CassandraStreamHeaderSerializer;\n// Implements the streaming interface for the native cassandra storage engine.\nClass CassandraStreamManager;\n// CassandraStreamReader reads from stream and writes to SSTable.\nClass CassandraStreamReader;\n// \nClass CassandraStreamReader.StreamDeserializer;\n// \nClass CassandraStreamReceiver;\n// CassandraStreamWriter writes given section of the SSTable to given channel.\nClass CassandraStreamWriter;\n// \nClass ComponentContext;\n// \nClass ComponentManifest;\n// InputStream which reads compressed chunks from the underlying input stream and deals with decompression and position tracking.\nClass CompressedInputStream;\n// Container that carries compression parameters and chunks to decompress data from stream.\nClass CompressionInfo;\n", "des": "File transfer"}
{"index": 887, "repo": "cassandra-all-4.1.2", "code": "package hadoop\n\n// \nClass ColumnFamilySplit;\n// \nClass ConfigHelper;\n// Utility methods to allow applications to deal with inconsistencies between MapReduce Context Objects API between Hadoop 1.x and 2.x.\nClass HadoopCompat;\n// A reporter that works with both mapred and mapreduce APIs.\nClass ReporterWrapper;\n", "des": "This package was deprecated."}
{"index": 888, "repo": "cassandra-all-4.1.2", "code": "package hints\n\n// \nInterface HintsServiceMBean;\n// Marker interface for file positions as provided by the various ChecksummedDataReader implementations.\nInterface InputPosition;\n// \nInterface SerializableHintMessage;\n// A RandomAccessReader wrapper that calculates the CRC in place.\nClass ChecksummedDataInput;\n// \nClass CompressedChecksummedDataInput;\n// \nClass CompressedHintsWriter;\n// \nClass EncryptedChecksummedDataInput;\n// \nClass EncryptedHintsWriter;\n// Encapsulates the hinted mutation, its creation time, and the gc grace seconds param for each table involved.\nClass Hint;\n// The message we use to dispatch and forward hints.\nClass HintMessage;\n// \nClass HintMessage.Serializer;\n// A singleton-ish wrapper over various hints components: - a catalog of all hints stores - a single-threaded write executor - a multi-threaded dispatch executor - the buffer pool for writing hints into - an optional scheduled task to clean up the applicable hints files The front-end for everything hints related.\nClass HintsService;\n// Verb handler used both for hint dispatch and streaming.\nClass HintVerbHandler;\n// \nClass PendingHintsInfo;\n", "des": "Hints subsystem consists of several components."}
{"index": 889, "repo": "cassandra-all-4.1.2", "code": "package async\n\n// \nClass NettyStreamingChannel;\n// \nClass NettyStreamingConnectionFactory;\n// A serialiazer for stream compressed files (see package-level documentation).\nClass StreamCompressionSerializer;\n// Responsible for sending StreamMessages to a given peer.\nClass StreamingMultiplexedChannel;\n", "des": "Non-blocking streaming with netty"}
{"index": 890, "repo": "commons-jcs3-core-3.1", "code": "package jcs3\n\n// Simple class for using JCS.\nClass JCS;\n", "des": "Contains the class JCS which provides a simple interface for clients to use JCS."}
{"index": 891, "repo": "commons-jcs3-core-3.1", "code": "package access\n\n// This class provides the common methods for all types of access to the cache.\nClass AbstractCacheAccess<K,V>;\n// This class provides an interface for all types of access to the cache.\nClass CacheAccess<K,V>;\n// Access for groups.\nClass GroupCacheAccess<K,V>;\n", "des": "Contains classes for accessing the cache."}
{"index": 892, "repo": "commons-jcs3-core-3.1", "code": "package auxiliary\n\n// Tag interface for auxiliary caches.\nInterface AuxiliaryCache<K,V>;\n// This is a nominal interface that auxiliary cache attributes should implement.\nInterface AuxiliaryCacheAttributes;\n// All auxiliary caches must have a factory that the cache configurator can use to create instances.\nInterface AuxiliaryCacheFactory;\n// This holds convenience methods used by most auxiliary caches.\nClass AbstractAuxiliaryCache<K,V>;\n// This has common attributes used by all auxiliaries.\nClass AbstractAuxiliaryCacheAttributes;\n// All ICacheEvents are defined as final.\nClass AbstractAuxiliaryCacheEventLogging<K,V>;\n// Base class for auxiliary cache factories.\nClass AbstractAuxiliaryCacheFactory;\n// Used to monitor and repair any failed connection for the lateral cache service.\nClass AbstractAuxiliaryCacheMonitor;\n// Configuration util for auxiliary caches.\nClass AuxiliaryCacheConfigurator;\n", "des": "Root package for auxiliary caches."}
{"index": 893, "repo": "commons-jcs3-core-3.1", "code": "package disk\n\n// Abstract class providing a base implementation of a disk cache, which can be easily extended to implement a disk cache for a specific persistence mechanism.\nClass AbstractDiskCache<K,V>;\n// This has common attributes that any conceivable disk cache would need.\nClass AbstractDiskCacheAttributes;\n// Implementation of cache elements in purgatory.\nClass PurgatoryElement<K,V>;\n", "des": "The primary disk auxiliary."}
{"index": 894, "repo": "commons-jcs3-core-3.1", "code": "package lateral\n\n// Lateral distributor.\nClass LateralCache<K,V>;\n// This class stores attributes for all of the available lateral cache auxiliaries.\nClass LateralCacheAttributes;\n// Used to monitor and repair any failed connection for the lateral cache service.\nClass LateralCacheMonitor;\n// Used to queue up update requests to the underlying cache.\nClass LateralCacheNoWait<K,V>;\n// Used to provide access to multiple services under nowait protection.\nClass LateralCacheNoWaitFacade<K,V>;\n// This class wraps command to other laterals.\nClass LateralElementDescriptor<K,V>;\n// Enumeration of the available lateral commands\nEnum LateralCommand;\n", "des": "Root package for the lateral cache family."}
{"index": 895, "repo": "commons-jcs3-core-3.1", "code": "package remote\n\n// Abstract base for remote caches.\nClass AbstractRemoteAuxiliaryCache<K,V>;\n// Shared listener base.\nClass AbstractRemoteCacheListener<K,V>;\n// An abstract base for the No Wait Facade.\nClass AbstractRemoteCacheNoWaitFacade<K,V>;\n// Attributes common to remote cache client and server.\nClass CommonRemoteCacheAttributes;\n// Client proxy for an RMI remote cache.\nClass RemoteCache<K,V>;\n// These objects are used to configure the remote cache client.\nClass RemoteCacheAttributes;\n// The RemoteCacheFactory creates remote caches for the cache hub.\nClass RemoteCacheFactory;\n// Functionality moved to RemoteCacheNoWaitFacade\nClass RemoteCacheFailoverRunner<K,V>;\n// Registered with RemoteCache server.\nClass RemoteCacheListener<K,V>;\n// An instance of RemoteCacheManager corresponds to one remote connection of a specific host and port.\nClass RemoteCacheManager;\n// Used to monitor and repair any failed connection for the remote cache service.\nClass RemoteCacheMonitor;\n// The RemoteCacheNoWait wraps the RemoteCacheClient.\nClass RemoteCacheNoWait<K,V>;\n// Used to provide access to multiple services under nowait protection.\nClass RemoteCacheNoWaitFacade<K,V>;\n// Location of the RMI registry.\nClass RemoteLocation;\n// This class provides some basic utilities for doing things such as starting the registry properly.\nClass RemoteUtils;\n", "des": "Root package for the remote auxiliary cache."}
{"index": 896, "repo": "commons-jcs3-core-3.1", "code": "package engine\n\n// An abstract base class to the different implementations\nClass AbstractCacheEventQueue<K,V>;\n// Used for Cache-to-Cache messaging purposes.\nClass CacheAdaptor<K,V>;\n// Generic element wrapper.\nClass CacheElement<K,V>;\n// Either serialized value or the value should be null;\nClass CacheElementSerialized<K,V>;\n// An event queue is used to propagate ordered cache events to one and only one target listener.\nClass CacheEventQueue<K,V>;\n// This class hands out event Queues.\nClass CacheEventQueueFactory<K,V>;\n// The grouping functionality is on the way out.\nClass CacheGroup;\n// This is a static variable holder for the distribution auxiliaries that need something like a vmid.\nClass CacheInfo;\n// Used to associates a set of [cache listener to cache event queue] for a cache.\nClass CacheListeners<K,V>;\n// Intercepts the requests to the underlying ICacheObserver object so that the listeners can be recorded locally for remote connection recovery purposes.\nClass CacheWatchRepairable;\n// The CompositeCacheAttributes defines the general cache region settings.\nClass CompositeCacheAttributes;\n// This it the element attribute descriptor class.\nClass ElementAttributes;\n// An event queue is used to propagate ordered cache events to one and only one target listener.\nClass PooledCacheEventQueue<K,V>;\n// Zombie adapter for any cache service.\nClass ZombieCacheService<K,V>;\n// Zombie adapter for the non local cache services.\nClass ZombieCacheServiceNonLocal<K,V>;\n// Base of the other events.\nClass ZombieCacheServiceNonLocal.ZombieEvent;\n// Zombie Observer.\nClass ZombieCacheWatch;\n// Cache statuses\nEnum CacheStatus;\n", "des": "Interfaces used by the core and the auxiliary caches."}
{"index": 897, "repo": "commons-jcs3-core-3.1", "code": "package behavior\n\n// This is the top level interface for all cache like structures.\nInterface ICache<K,V>;\n// Every item is the cache is wrapped in an ICacheElement.\nInterface ICacheElement<K,V>;\n// This interface defines the behavior of the serialized element wrapper.\nInterface ICacheElementSerialized<K,V>;\n// Interface for a cache event queue.\nInterface ICacheEventQueue<K,V>;\n// Used to receive a cache event notification.\nInterface ICacheListener<K,V>;\n// Used to register interest in receiving cache changes.\nInterface ICacheObserver;\n// Used to retrieve and update the cache.\nInterface ICacheService<K,V>;\n// Description of the Interface\nInterface ICacheServiceAdmin;\n// Used to retrieve and update non local caches, such as the remote and lateral caches.\nInterface ICacheServiceNonLocal<K,V>;\n// Interface implemented by a specific cache.\nInterface ICacheType;\n// This defines the minimal behavior for the Cache Configuration settings.\nInterface ICompositeCacheAttributes;\n// I need the interface so I can plug in mock managers for testing.\nInterface ICompositeCacheManager;\n// Interface for cache element attributes classes.\nInterface IElementAttributes;\n// Defines the behavior for cache element serializers.\nInterface IElementSerializer;\n// Marker interface for providers of the central ScheduledExecutorService\nInterface IProvideScheduler;\n// Marker interface to allow the injection of a central ScheduledExecutorService for all modules requiring scheduled background operations.\nInterface IRequireScheduler;\n// ShutdownObservers can observe ShutdownObservable objects.\nInterface IShutdownObservable;\n// This interface is required of all shutdown observers.\nInterface IShutdownObserver;\n// Interface to mark an object as zombie for error recovery purposes.\nInterface IZombie;\n// \nEnum ICacheEventQueue.QueueType;\n// \nEnum ICacheType.CacheType;\n// \nEnum ICompositeCacheAttributes.DiskUsagePattern;\n", "des": "Interfaces used by the core and the auxiliary caches."}
{"index": 898, "repo": "commons-jcs3-core-3.1", "code": "package control\n\n// This is the primary hub for a single cache/region.\nClass CompositeCache<K,V>;\n// This class configures JCS based on a properties object.\nClass CompositeCacheConfigurator;\n// Manages a composite cache.\nClass CompositeCacheManager;\n", "des": "The primary cache classes and the hub."}
{"index": 899, "repo": "commons-jcs3-core-3.1", "code": "package memory\n\n// This class contains methods that are common to memory caches using the double linked list, such as the LRU, MRU, FIFO, and LIFO caches.\nClass AbstractDoubleLinkedListMemoryCache<K,V>;\n// This base includes some common code for memory caches.\nClass AbstractMemoryCache<K,V>;\n", "des": "Parent package for memory type plugins."}
{"index": 900, "repo": "commons-jcs3-core-3.1", "code": "package lru\n\n// This is a test memory manager using the jdk1.4 LinkedHashMap.\nClass LHMLRUMemoryCache<K,V>;\n// A fast reference management system.\nClass LRUMemoryCache<K,V>;\n", "des": "The primary memory plugin using a 'least recently used' removal policy."}
{"index": 901, "repo": "commons-jcs3-core-3.1", "code": "package mru\n\n// The most recently used items move to the front of the list and get spooled to disk if the cache hub is configured to use a disk cache.\nClass MRUMemoryCache<K,V>;\n", "des": "A memory plugin implemented using a 'most recently used' removal policy."}
{"index": 902, "repo": "commons-jcs3-core-3.1", "code": "package soft\n\n// A JCS IMemoryCache that has SoftReference to all its values.\nClass SoftReferenceMemoryCache<K,V>;\n", "des": "A memory plugin implemented using soft references."}
{"index": 903, "repo": "commons-jcs3-core-3.1", "code": "package config\n\n// This class is based on the log4j class org.apache.log4j.helpers.OptionConverter that was made by Ceki Gülcü Simon Kitching; Avy Sharell (sharell@online.fr) Anders Kristensen Matthieu Verbert (mve@zurich.ibm.com) A convenience class to convert property values to specific types.\nClass OptionConverter;\n// This class is based on the log4j class org.apache.log4j.config.PropertySetter that was made by Anders Kristensen General purpose Object property setter.\nClass PropertySetter;\n// This class is based on the log4j class org.apache.log4j.config.PropertySetter that was made by Anders Kristensen Thrown when an error is encountered whilst attempting to set a property using the PropertySetterutility class.\nClass PropertySetterException;\n", "des": "This package contains utility classes that are used when configuring the cache."}
{"index": 904, "repo": "commons-compress-1.23.0", "code": "package archivers\n\n// Represents an entry of an archive.\nInterface ArchiveEntry;\n// Creates Archive ArchiveInputStreams and ArchiveOutputStreams.\nInterface ArchiveStreamProvider;\n// Provides information about ArchiveEntry stream offsets.\nInterface EntryStreamOffsets;\n// Archive input streams MUST override the InputStream.read(byte[], int, int) - or ArchiveInputStream.read() - method so that reading from the stream generates EOF for the end of data in each entry as well as at the end of the file proper.\nClass ArchiveInputStream;\n// Archive output stream implementations are expected to override the OutputStream.write(byte[], int, int) method to improve performance.\nClass ArchiveOutputStream;\n// Factory to create Archive[In|Out]putStreams from names or the first bytes of the InputStream.\nClass ArchiveStreamFactory;\n// Simple command line application that lists the contents of an archive.\nClass Lister;\n// Archiver related Exception\nClass ArchiveException;\n// Exception thrown by ArchiveStreamFactory if a format is requested/detected that doesn't support streaming.\nClass StreamingNotSupportedException;\n", "des": "Provides a unified API and factories for dealing with archives in different formats."}
{"index": 905, "repo": "commons-compress-1.23.0", "code": "package ar\n\n// Represents an archive entry in the \"ar\" format.\nClass ArArchiveEntry;\n// Implements the \"ar\" archive format as an input stream.\nClass ArArchiveInputStream;\n// Implements the \"ar\" archive format as an output stream.\nClass ArArchiveOutputStream;\n", "des": "Provides stream classes for reading and writing archives using the AR format."}
{"index": 906, "repo": "commons-compress-1.23.0", "code": "package arj\n\n// An entry in an ARJ archive.\nClass ArjArchiveEntry;\n// The known values for HostOs.\nClass ArjArchiveEntry.HostOs;\n// Implements the \"arj\" archive format as an InputStream.\nClass ArjArchiveInputStream;\n", "des": "Provides stream classes for reading archives using the ARJ format."}
{"index": 907, "repo": "commons-compress-1.23.0", "code": "package cpio\n\n// All constants needed by CPIO.\nInterface CpioConstants;\n// A cpio archive consists of a sequence of files.\nClass CpioArchiveEntry;\n// CpioArchiveInputStream is a stream for reading cpio streams.\nClass CpioArchiveInputStream;\n// CpioArchiveOutputStream is a stream for writing CPIO streams.\nClass CpioArchiveOutputStream;\n", "des": "Provides stream classes for reading and writing archives using the CPIO format."}
{"index": 908, "repo": "commons-compress-1.23.0", "code": "package dump\n\n// Various constants associated with dump archives.\nClass DumpArchiveConstants;\n// This class represents an entry in a Dump archive.\nClass DumpArchiveEntry;\n// The DumpArchiveInputStream reads a UNIX dump archive as an InputStream.\nClass DumpArchiveInputStream;\n// This class represents identifying information about a Dump archive volume.\nClass DumpArchiveSummary;\n// The type of compression.\nEnum DumpArchiveConstants.COMPRESSION_TYPE;\n// The type of tape segment.\nEnum DumpArchiveConstants.SEGMENT_TYPE;\n// \nEnum DumpArchiveEntry.PERMISSION;\n// \nEnum DumpArchiveEntry.TYPE;\n// Dump Archive Exception\nClass DumpArchiveException;\n// Invalid Format Exception.\nClass InvalidFormatException;\n// Short File Exception.\nClass ShortFileException;\n// Unrecognized Format Exception.\nClass UnrecognizedFormatException;\n// Unsupported compression algorithm.\nClass UnsupportedCompressionAlgorithmException;\n", "des": "This package provides stream classes for reading archives using the Unix DUMP format."}
{"index": 909, "repo": "commons-compress-1.23.0", "code": "package examples\n\n// Callback that is informed about a closable resource that has been wrapped around a passed in stream or channel by Expander or Archiver when Expander or Archiver no longer need them.\nInterface CloseableConsumer;\n// Provides a high level API for creating archives.\nClass Archiver;\n// Provides a high level API for expanding archives.\nClass Expander;\n", "des": "Contains example code that is not guaranteed to provide a stable API across releases of Commons Compress."}
{"index": 910, "repo": "commons-compress-1.23.0", "code": "package jar\n\n// \nClass JarArchiveEntry;\n// Implements an input stream that can read entries from jar files.\nClass JarArchiveInputStream;\n// Subclass that adds a special extra field to the very first entry which allows the created archive to be used as an executable jar on Solaris.\nClass JarArchiveOutputStream;\n", "des": "Provides stream classes for reading and writing archives using the ZIP format with some extensions for the special case of JAR archives."}
{"index": 911, "repo": "commons-compress-1.23.0", "code": "package sevenz\n\n// Usage: archive-name [list]\nClass CLI;\n// An entry in a 7z archive.\nClass SevenZArchiveEntry;\n// Reads a 7z file, using SeekableByteChannel under the covers.\nClass SevenZFile;\n// Collects options for reading 7z archives.\nClass SevenZFileOptions;\n// Mutable builder for the immutable SevenZFileOptions.\nClass SevenZFileOptions.Builder;\n// Combines a SevenZMethod with configuration options for the method.\nClass SevenZMethodConfiguration;\n// Writes a 7z file.\nClass SevenZOutputFile;\n// The (partially) supported compression/encryption methods used in 7z archives.\nEnum SevenZMethod;\n", "des": "Provides classes for reading and writing archives using the 7z format."}
{"index": 912, "repo": "commons-compress-1.23.0", "code": "package tar\n\n// This interface contains all the definitions used in the package.\nInterface TarConstants;\n// This class represents an entry in a Tar archive.\nClass TarArchiveEntry;\n// The TarInputStream reads a UNIX tar archive as an InputStream.\nClass TarArchiveInputStream;\n// The TarOutputStream writes a UNIX tar archive as an OutputStream.\nClass TarArchiveOutputStream;\n// This class represents a sparse entry in a Tar archive.\nClass TarArchiveSparseEntry;\n// This class represents struct sparse in a Tar archive.\nClass TarArchiveStructSparse;\n// Provides random access to UNIX archives.\nClass TarFile;\n// This class provides static utility methods to work with byte streams.\nClass TarUtils;\n", "des": "Provides stream classes for reading and writing archives using the TAR format."}
{"index": 913, "repo": "commons-compress-1.23.0", "code": "package zip\n\n// An interface added to allow access to the character set associated with an NioZipEncoding, without requiring a new method to be added to ZipEncoding.\nInterface CharsetAccessor;\n// Controls details of parsing ZIP extra fields.\nInterface ExtraFieldParsingBehavior;\n// Constants from stat.h on Unix systems.\nInterface UnixStat;\n// Handles extra field data that doesn't follow the recommended pattern for extra fields with a two-byte key and a two-byte length.\nInterface UnparseableExtraFieldBehavior;\n// A predicate to test if a #ZipArchiveEntry matches a criteria.\nInterface ZipArchiveEntryPredicate;\n// Supplies ZipArchiveEntryRequest.\nInterface ZipArchiveEntryRequestSupplier;\n// General format of extra field data.\nInterface ZipExtraField;\n// A common base class for Unicode extra information extra fields.\nClass AbstractUnicodeExtraField;\n// Adds Unix file permission and UID/GID fields as well as symbolic link handling.\nClass AsiExtraField;\n// Implements ScatterGatherBackingStoreSupplier using a temporary folder.\nClass DefaultBackingStoreSupplier;\n// ZipExtraField related methods\nClass ExtraFieldUtils;\n// \"enum\" for the possible actions to take if the extra field cannot be parsed.\nClass ExtraFieldUtils.UnparseableExtraField;\n// Parser/encoder for the \"general purpose bit\" field in ZIP's local file and central directory headers.\nClass GeneralPurposeBit;\n// If this extra field is added as the very first extra field of the archive, Solaris will consider it an executable jar file.\nClass JarMarker;\n// Creates a ZIP in parallel by using multiple threadlocal ScatterZipOutputStream instances.\nClass ParallelScatterZipCreator;\n// Base class for all PKWare strong crypto extra headers.\nClass PKWareExtraHeader;\n// An extra field who's sole purpose is to align and pad the local file header so that the entry's data starts at a certain position.\nClass ResourceAlignmentExtraField;\n// Provides information about a scatter compression run.\nClass ScatterStatistics;\n// A ZIP output stream that is optimized for multi-threaded scatter/gather construction of ZIP files.\nClass ScatterZipOutputStream;\n// \nClass ScatterZipOutputStream.ZipEntryWriter;\n", "des": "Provides stream classes for reading and writing archives using the ZIP format."}
{"index": 914, "repo": "commons-compress-1.23.0", "code": "package changes\n\n// ChangeSet collects and performs changes to an archive.\nClass ChangeSet;\n// Performs ChangeSet operations on a stream.\nClass ChangeSetPerformer;\n// Stores the results of an performed ChangeSet operation.\nClass ChangeSetResults;\n", "des": "EXPERIMENTAL support for changesets that are applied to archives."}
{"index": 915, "repo": "commons-compress-1.23.0", "code": "package compressors\n\n// Creates Compressor CompressorInputStreams and CompressorOutputStreams.\nInterface CompressorStreamProvider;\n// \nClass CompressorInputStream;\n// \nClass CompressorOutputStream;\n// Factory to create Compressor[In|Out]putStreams from names.\nClass CompressorStreamFactory;\n// File name mapping code for the compression formats.\nClass FileNameUtil;\n// Compressor related exception\nClass CompressorException;\n", "des": "Provides a unified API and factories for dealing with compressed streams."}
{"index": 916, "repo": "commons-compress-1.23.0", "code": "package brotli\n\n// CompressorInputStream implementation to decode Brotli encoded stream.\nClass BrotliCompressorInputStream;\n// Utility code for the Brotli compression format.\nClass BrotliUtils;\n", "des": "Provides stream class for decompressing streams using the Brotli algorithm based on Google's Brotli decoder."}
{"index": 917, "repo": "commons-compress-1.23.0", "code": "package bzip2\n\n// An input stream that decompresses from the BZip2 format to be read as any other stream.\nClass BZip2CompressorInputStream;\n// An output stream that compresses into the BZip2 format into another stream.\nClass BZip2CompressorOutputStream;\n// Utility code for the BZip2 compression format.\nClass BZip2Utils;\n", "des": "Provides stream classes for compressing and decompressing streams using the BZip2 algorithm."}
{"index": 918, "repo": "commons-compress-1.23.0", "code": "package deflate\n\n// Deflate decompressor.\nClass DeflateCompressorInputStream;\n// Deflate compressor.\nClass DeflateCompressorOutputStream;\n// Parameters for the Deflate compressor.\nClass DeflateParameters;\n", "des": "Provides a stream classes that allow (de)compressing streams using the DEFLATE algorithm."}
{"index": 919, "repo": "commons-compress-1.23.0", "code": "package deflate64\n\n// Deflate64 decompressor.\nClass Deflate64CompressorInputStream;\n", "des": "Provides a stream that allows decompressing streams using the DEFLATE64(tm) algorithm."}
{"index": 920, "repo": "commons-compress-1.23.0", "code": "package gzip\n\n// Input stream that decompresses .gz files.\nClass GzipCompressorInputStream;\n// Compressed output stream using the gzip format.\nClass GzipCompressorOutputStream;\n// Parameters for the GZIP compressor.\nClass GzipParameters;\n// Utility code for the gzip compression format.\nClass GzipUtils;\n", "des": "Provides stream classes for compressing and decompressing streams using the GZip algorithm."}
{"index": 921, "repo": "commons-compress-1.23.0", "code": "package lz4\n\n// CompressorInputStream for the LZ4 block format.\nClass BlockLZ4CompressorInputStream;\n// CompressorOutputStream for the LZ4 block format.\nClass BlockLZ4CompressorOutputStream;\n// CompressorInputStream for the LZ4 frame format.\nClass FramedLZ4CompressorInputStream;\n// CompressorOutputStream for the LZ4 frame format.\nClass FramedLZ4CompressorOutputStream;\n// Parameters of the LZ4 frame format.\nClass FramedLZ4CompressorOutputStream.Parameters;\n// Implementation of the xxhash32 hash algorithm.\nClass XXHash32;\n// The block sizes supported by the format.\nEnum FramedLZ4CompressorOutputStream.BlockSize;\n", "des": "Provides stream classes for the LZ4 algorithm."}
{"index": 922, "repo": "commons-compress-1.23.0", "code": "package lz77support\n\n// Callback invoked while the compressor processes data.\nInterface LZ77Compressor.Callback;\n// Encapsulates code common to LZ77 decompressors.\nClass AbstractLZ77CompressorInputStream;\n// Helper class for compression algorithms that use the ideas of LZ77.\nClass LZ77Compressor;\n// Represents a back-reference.\nClass LZ77Compressor.BackReference;\n// Base class representing blocks the compressor may emit.\nClass LZ77Compressor.Block;\n// A simple \"we are done\" marker.\nClass LZ77Compressor.EOD;\n// Represents a literal block of data.\nClass LZ77Compressor.LiteralBlock;\n// Parameters of the compressor.\nClass Parameters;\n// Builder for Parameters instances.\nClass Parameters.Builder;\n// Enumeration of the block types the compressor may emit.\nEnum LZ77Compressor.Block.BlockType;\n", "des": "Provides utility classes for LZ77 based algorithms."}
{"index": 923, "repo": "commons-compress-1.23.0", "code": "package lzma\n\n// LZMA decompressor.\nClass LZMACompressorInputStream;\n// LZMA compressor.\nClass LZMACompressorOutputStream;\n// Utility code for the lzma compression format.\nClass LZMAUtils;\n", "des": "Provides stream classes using the \"stand-alone\" LZMA algorithm."}
{"index": 924, "repo": "commons-compress-1.23.0", "code": "package lzw\n\n// Generic LZW implementation.\nClass LZWInputStream;\n", "des": "Generic LZW implementation."}
{"index": 925, "repo": "commons-compress-1.23.0", "code": "package pack200\n\n// An input stream that decompresses from the Pack200 format to be read as any other stream.\nClass Pack200CompressorInputStream;\n// An output stream that compresses using the Pack200 format.\nClass Pack200CompressorOutputStream;\n// Utility methods for Pack200.\nClass Pack200Utils;\n// The different modes the Pack200 streams can use to wrap input and output.\nEnum Pack200Strategy;\n", "des": "Provides stream classes for compressing and decompressing streams using the Pack200 algorithm used to compress Java archives."}
{"index": 926, "repo": "commons-compress-1.23.0", "code": "package snappy\n\n// CompressorInputStream for the framing Snappy format.\nClass FramedSnappyCompressorInputStream;\n// CompressorOutputStream for the framing Snappy format.\nClass FramedSnappyCompressorOutputStream;\n// CompressorInputStream for the raw Snappy format.\nClass SnappyCompressorInputStream;\n// CompressorOutputStream for the raw Snappy format.\nClass SnappyCompressorOutputStream;\n// Dialects of the framing format that FramedSnappyCompressorInputStream can deal with.\nEnum FramedSnappyDialect;\n", "des": "Provides stream classes for the Snappy algorithm."}
{"index": 927, "repo": "commons-compress-1.23.0", "code": "package xz\n\n// XZ decompressor.\nClass XZCompressorInputStream;\n// XZ compressor.\nClass XZCompressorOutputStream;\n// Utility code for the xz compression format.\nClass XZUtils;\n", "des": "Provides stream classes for compressing and decompressing streams using the XZ algorithm."}
{"index": 928, "repo": "commons-compress-1.23.0", "code": "package z\n\n// Input stream that decompresses .Z files.\nClass ZCompressorInputStream;\n", "des": "Provides stream classes for decompressing streams using the \"compress\" algorithm used to write .Z files."}
{"index": 929, "repo": "commons-compress-1.23.0", "code": "package zstandard\n\n// CompressorInputStream implementation to decode Zstandard encoded stream.\nClass ZstdCompressorInputStream;\n// CompressorOutputStream implementation to create Zstandard encoded stream.\nClass ZstdCompressorOutputStream;\n// Utility code for the Zstandard compression format.\nClass ZstdUtils;\n", "des": "Provides stream class for (de)compressing streams using the Zstandard algorithm based on Zstandard JNI."}
{"index": 930, "repo": "commons-compress-1.23.0", "code": "package nls\n\n// This class retrieves strings from a resource bundle and returns them, formatting them with MessageFormat when required.\nClass Messages;\n", "des": "Internal package."}
{"index": 931, "repo": "commons-compress-1.23.0", "code": "package pack200\n\n// An AttributeLayoutElement is a part of an attribute layout and has one or more bands associated with it, which transmit the AttributeElement data for successive Attributes of this type.\nInterface NewAttributeBands.AttributeLayoutElement;\n// Archive is the main entry point to pack200 and represents a packed archive.\nClass Archive;\n// Attribute Definition bands define how any unknown attributes should be read by the decompressor.\nClass AttributeDefinitionBands;\n// \nClass AttributeDefinitionBands.AttributeDefinition;\n// Abstract superclass for a set of bands\nClass BandSet;\n// Bytecode bands (corresponds to the bc_bands set of bands in the pack200 specification)\nClass BcBands;\n// A BHSD codec is a means of encoding integer values as a sequence of bytes or vice versa using a specified \"BHSD\" encoding mechanism.\nClass BHSDCodec;\n// Sets of codecs that share characteristics.\nClass CanonicalCodecFamilies;\n// Class bands (corresponds to the class_bands set of bands in the pack200 specification)\nClass ClassBands;\n// A Codec allows a sequence of bytes to be decoded into integer values (or vice versa).\nClass Codec;\n// CodecEncoding is used to get the right Codec for a given meta-encoding\nClass CodecEncoding;\n// Abstract superclass for constant pool entries.\nClass ConstantPoolEntry;\n// Pack200 Constant Pool Bands\nClass CpBands;\n// Constant pool entry for a class.\nClass CPClass;\n// Abstract superclass for constant pool constant entries such as numbers or Strings.\nClass CPConstant<T extends CPConstant<T>>;\n// Constant pool entry for a double.\nClass CPDouble;\n// Constant pool entry for a float.\nClass CPFloat;\n// Constant pool entry for an int.\nClass CPInt;\n// Constant pool entry for a long.\nClass CPLong;\n// Constant pool entry for a method or field.\nClass CPMethodOrField;\n// Constant pool entry for a name and type pair.\nClass CPNameAndType;\n// Constant pool entry for a signature.\nClass CPSignature;\n// Constant pool entry for a String.\nClass CPString;\n// Constant pool entry for a UTF8 entry, used for storing long Strings.\nClass CPUTF8;\n", "des": "Internal package."}
{"index": 932, "repo": "commons-compress-1.23.0", "code": "package unpack200\n\n// Interface for a class that can perform matching on flag values.\nInterface IMatcher;\n// Archive is the main entry point to unpack200.\nClass Archive;\n// Attribute definition bands are the set of bands used to define extra attributes transmitted in the archive.\nClass AttrDefinitionBands;\n// AttributeLayout defines a layout that describes how an attribute will be transmitted.\nClass AttributeLayout;\n// Stores a mapping from attribute names to their corresponding layout types.\nClass AttributeLayoutMap;\n// Abstract superclass for a set of bands\nClass BandSet;\n// Bytecode bands\nClass BcBands;\n// Class Bands\nClass ClassBands;\n// Constant Pool bands\nClass CpBands;\n// Parses the file band headers (not including the actual bits themselves).\nClass FileBands;\n// Inner Class Bands\nClass IcBands;\n// An IcTuple is the set of information that describes an inner class.\nClass IcTuple;\n// A group of metadata bands, such as class_RVA_bands, method_AD_bands etc.\nClass MetadataBandGroup;\n// Set of bands relating to a non-predefined attribute\nClass NewAttributeBands;\n// \nClass NewAttributeBands.Callable;\n// This class provides the binding between the standard Pack200 interface and the internal interface for (un)packing.\nClass Pack200UnpackerAdapter;\n// A Pack200 archive consists of one or more segments.\nClass Segment;\n// SegmentConstantPool manages the constant pool used for re-creating class files.\nClass SegmentConstantPool;\n// The SegmentConstantPool spends a lot of time searching through large arrays of Strings looking for matches.\nClass SegmentConstantPoolArrayCache;\n// SegmentHeader is the header band of a Segment\nClass SegmentHeader;\n// Stores the combinations of bit flags that can be used in the segment header options.\nClass SegmentOptions;\n// Utility class for unpack200\nClass SegmentUtils;\n", "des": "Internal package."}
{"index": 933, "repo": "commons-compress-1.23.0", "code": "package bytecode\n\n// AnnotationDefault class file attribute\nClass AnnotationDefaultAttribute;\n// Abstract superclass for Annotations attributes\nClass AnnotationsAttribute;\n// Class to represent the annotation structure for class file attributes\nClass AnnotationsAttribute.Annotation;\n// \nClass AnnotationsAttribute.ElementValue;\n// Abstract superclass for class file attributes\nClass Attribute;\n// Abstract superclass for attributes that have some part encoded with a BCI renumbering\nClass BCIRenumberedAttribute;\n// A bytecode class file entry.\nClass ByteCode;\n// The Class constant pool\nClass ClassConstantPool;\n// ClassFile is used to represent and write out Java class files.\nClass ClassFile;\n// The abstract superclass for all types of class file entries.\nClass ClassFileEntry;\n// \nClass CodeAttribute;\n// Abstract superclass for constant pool entries\nClass ConstantPoolEntry;\n// An Attribute representing a constant.\nClass ConstantValueAttribute;\n// Constant pool entry for a class\nClass CPClass;\n// Abstract superclass for constant pool constant entries such as numbers or Strings\nClass CPConstant;\n// Abstract superclass for constant pool entries that are numbers.\nClass CPConstantNumber;\n// Double constant pool entry.\nClass CPDouble;\n// Field constant pool entry.\nClass CPField;\n// Field reference constant pool entry.\nClass CPFieldRef;\n// Float constant pool entry.\nClass CPFloat;\n// Integer constant pool entry.\nClass CPInteger;\n// Interface method reference constant pool entry.\nClass CPInterfaceMethodRef;\n// Long constant pool entry.\nClass CPLong;\n// Superclass for member constant pool entries, such as fields or methods.\nClass CPMember;\n// Method constant pool entry.\nClass CPMethod;\n// Method reference constant pool entry.\nClass CPMethodRef;\n// Name and Type pair constant pool entry.\nClass CPNameAndType;\n// Abstract superclass for reference constant pool entries, such as a method or field reference.\nClass CPRef;\n// String constant pool entry.\nClass CPString;\n// UTF8 constant pool entry, used for storing long Strings.\nClass CPUTF8;\n// Deprecated class file attribute.\nClass DeprecatedAttribute;\n// Enclosing method class file attribute.\nClass EnclosingMethodAttribute;\n// Exceptions class file attribute\nClass ExceptionsAttribute;\n// An entry in an exception table.\nClass ExceptionTableEntry;\n", "des": "Internal package."}
{"index": 934, "repo": "commons-compress-1.23.0", "code": "package forms\n\n// \nClass ByteCodeForm;\n// This class implements the form for bytecodes which have single byte operands.\nClass ByteForm;\n// This class implements the byte code form for those bytecodes which have class references (and only class references).\nClass ClassRefForm;\n// Abstract superclass of all classes that have class-specific references to constant pool information.\nClass ClassSpecificReferenceForm;\n// This class implements the byte code form for those bytecodes which have double references (and only double references).\nClass DoubleForm;\n// This class implements the byte code form for those bytecodes which have field references (and only field references).\nClass FieldRefForm;\n// This class implements the byte code form for those bytecodes which have float references (and only float references).\nClass FloatRefForm;\n// This class implements the byte code form for the iinc instruction.\nClass IincForm;\n// This class implements the byte code form for those bytecodes which have IMethod references (and only IMethod references).\nClass IMethodRefForm;\n// Abstract superclass of those classes which look up init methods (these are class specific methods).\nClass InitMethodReferenceForm;\n// This class implements the byte code form for those bytecodes which have int references (and only int references).\nClass IntRefForm;\n// This class implements the byte code form for those bytecodes which have label references (and only label references).\nClass LabelForm;\n// This class implements the byte code form for those bytecodes which have float references (and only float references).\nClass LocalForm;\n// This class implements the byte code form for those bytecodes which have long references (and only long references).\nClass LongForm;\n// \nClass LookupSwitchForm;\n// This class implements the byte code form for those bytecodes which have regular method references (and only regular method references).\nClass MethodRefForm;\n// This class implements the byte code form for the multianewarray instruction.\nClass MultiANewArrayForm;\n// This class is used for representations of cldc and cldc_w.\nClass NarrowClassRefForm;\n// This class is an extension of the ClassRefForm.\nClass NewClassRefForm;\n", "des": "Internal package."}
{"index": 935, "repo": "commons-compress-1.23.0", "code": "package jar\n\n// The interface defining the API for converting a JAR file to an output stream in the Pack200 format.\nInterface Pack200.Packer;\n// The interface defining the API for converting a packed stream in the Pack200 format to a JAR file.\nInterface Pack200.Unpacker;\n// Class factory for Pack200.Packer and Pack200.Unpacker.\nClass Pack200;\n", "des": "Internal package."}
{"index": 936, "repo": "commons-compress-1.23.0", "code": "package parallel\n\n// Supplies input streams.\nInterface InputStreamSupplier;\n// Store intermediate payload in a scatter-gather scenario.\nInterface ScatterGatherBackingStore;\n// Supplies ScatterGatherBackingStore instances.\nInterface ScatterGatherBackingStoreSupplier;\n// ScatterGatherBackingStore that is backed by a path.\nClass FileBasedScatterGatherBackingStore;\n", "des": "Provides common API classes for parallel compression features."}
{"index": 937, "repo": "commons-compress-1.23.0", "code": "package utils\n\n// Used to consume bytes.\nInterface ByteUtils.ByteConsumer;\n// Used to supply bytes.\nInterface ByteUtils.ByteSupplier;\n// This interface provides statistics on the current decompression stream.\nInterface InputStreamStatistics;\n// Generic Archive utilities\nClass ArchiveUtils;\n// Reads bits from an InputStream.\nClass BitInputStream;\n// NIO backed bounded input stream for reading a predefined amount of data from.\nClass BoundedArchiveInputStream;\n// A stream that limits reading from a wrapped stream to a given number of bytes.\nClass BoundedInputStream;\n// InputStream that delegates requests to the underlying SeekableByteChannel, making sure that only bytes from a certain range can be read.\nClass BoundedSeekableByteChannelInputStream;\n// Utility methods for reading and writing bytes.\nClass ByteUtils;\n// ByteUtils.ByteSupplier based on InputStream.\nClass ByteUtils.InputStreamByteSupplier;\n// ByteUtils.ByteConsumer based on OutputStream.\nClass ByteUtils.OutputStreamByteConsumer;\n// Character encoding names required of every implementation of the Java platform.\nClass CharsetNames;\n// Charsets required of every implementation of the Java platform.\nClass Charsets;\n// A stream that calculates the checksum of the data read.\nClass ChecksumCalculatingInputStream;\n// A stream that verifies the checksum of the data read once the stream is exhausted.\nClass ChecksumVerifyingInputStream;\n// Re-implements FilterInputStream.close() to do nothing.\nClass CloseShieldFilterInputStream;\n// Input stream that tracks the number of bytes read.\nClass CountingInputStream;\n// Stream that tracks the number of bytes read.\nClass CountingOutputStream;\n// A stream that verifies the CRC of the data read once the stream is exhausted.\nClass CRC32VerifyingInputStream;\n// PRIVATE.\nClass ExactMath;\n// Generic file name utilities.\nClass FileNameUtils;\n// This class supports writing to an OutputStream or WritableByteChannel in fixed length blocks.\nClass FixedLengthBlockOutputStream;\n// Re-implements FilterOutputStream.flush() to do nothing.\nClass FlushShieldFilterOutputStream;\n// Utility functions\nClass IOUtils;\n// Iterator utilities.\nClass Iterators;\n// List utilities\nClass Lists;\n// Read-Only Implementation of SeekableByteChannel that concatenates a collection of other SeekableByteChannels.\nClass MultiReadOnlySeekableByteChannel;\n", "des": "Provides utilities used internally by the compress library."}
{"index": 938, "repo": "spring-ws-3.0.10.RELEASE", "code": "package ws\n\n// Sub-interface of WebServiceMessage that can contain special Fault messages.\nInterface FaultAwareWebServiceMessage;\n// Represents a protocol-agnostic XML message.\nInterface WebServiceMessage;\n// The WebServiceMessageFactory serves as a factory for WebServiceMessages.\nInterface WebServiceMessageFactory;\n// Exception thrown when a WebServiceMessageFactory cannot parse the XML passed on to WebServiceMessageFactory.createWebServiceMessage(java.io.InputStream).\nClass InvalidXmlException;\n// Exception thrown when an endpoint cannot be resolved for an incoming message request.\nClass NoEndpointFoundException;\n// Root of the hierarchy of Web Service exceptions.\nClass WebServiceException;\n// Base class for all web service message exceptions.\nClass WebServiceMessageException;\n", "des": "Provides the core functionality of the Spring Web Services framework."}
{"index": 939, "repo": "spring-ws-3.0.10.RELEASE", "code": "package client\n\n// Exception thrown whenever an error occurs on the client-side.\nClass WebServiceClientException;\n// Thrown by SimpleFaultMessageResolver when the response message has a fault.\nClass WebServiceFaultException;\n// Exception thrown whenever an I/O error occurs on the client-side.\nClass WebServiceIOException;\n// Exception thrown whenever a transformation error occurs on the client-side.\nClass WebServiceTransformerException;\n// Exception thrown whenever a transport error occurs on the client-side.\nClass WebServiceTransportException;\n", "des": "Contains classes for client-side Spring-WS support, allowing for Spring-style Web service access."}
{"index": 940, "repo": "spring-ws-3.0.10.RELEASE", "code": "package core\n\n// Defines the interface for objects than can resolve fault WebServiceMessages.\nInterface FaultMessageResolver;\n// Callback interface for extracting a result object from a Source instance.\nInterface SourceExtractor<T>;\n// Generic callback interface for code that operates on a WebServiceMessage.\nInterface WebServiceMessageCallback;\n// Callback interface for extracting a result object from a WebServiceMessage instance.\nInterface WebServiceMessageExtractor<T>;\n// Specifies a basic set of Web service operations.\nInterface WebServiceOperations;\n// Simple fault resolver that simply throws a WebServiceFaultException when a fault occurs.\nClass SimpleFaultMessageResolver;\n// The central class for client-side Web services. It provides a message-driven approach to sending and receiving WebServiceMessage instances.\nClass WebServiceTemplate;\n", "des": "Core package of the Spring-WS client-side support."}
{"index": 941, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Convenient super class for application classes that need Web service access.\nClass WebServiceGatewaySupport;\n", "des": "Convenient super class for application classes that need Web service access."}
{"index": 942, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Base class for WebServiceTemplate and other WS-accessing helpers.\nClass WebServiceAccessor;\n", "des": "Classes supporting the org.springframework.ws.client.core package."}
{"index": 943, "repo": "spring-ws-3.0.10.RELEASE", "code": "package destination\n\n// Strategy interface for providing a WebServiceTemplate destination URI at runtime.\nInterface DestinationProvider;\n// Abstract base class for DestinationProvider implementations that cache destination URI.\nClass AbstractCachingDestinationProvider;\n// Implementation of the DestinationProvider that resolves a destination URI from a WSDL file.\nClass Wsdl11DestinationProvider;\n// Thrown by a DestinationProvider when it cannot provide a destination.\nClass DestinationProvisionException;\n", "des": "Provides the DestinationProvider interface."}
{"index": 944, "repo": "spring-ws-3.0.10.RELEASE", "code": "package interceptor\n\n// Workflow interface that allows for customized client-side message interception.\nInterface ClientInterceptor;\n// Abstract base class for ClientInterceptor implementations that validate part of the message using a schema.\nClass AbstractValidatingInterceptor;\n// Default implementation of the ClientInterceptor interface, for simplified implementation of pre-only/post-only interceptors.\nClass ClientInterceptorAdapter;\n// Client-side interceptor that validates the contents of WebServiceMessages using a schema.\nClass PayloadValidatingInterceptor;\n// Exception thrown whenever a validation error occurs on the client-side.\nClass WebServiceValidationException;\n", "des": "Provides the ClientInterceptor interface, and validating interceptors."}
{"index": 945, "repo": "spring-ws-3.0.10.RELEASE", "code": "package config\n\n// NamespaceHandler for the 'web-services' namespace.\nClass WebServicesNamespaceHandler;\n", "des": "Provides an namespace handler for the Spring Web Services namespace."}
{"index": 946, "repo": "spring-ws-3.0.10.RELEASE", "code": "package context\n\n// Context holder for message requests.\nInterface MessageContext;\n// Abstract base class for MessageContext instances.\nClass AbstractMessageContext;\n// Default implementation of MessageContext.\nClass DefaultMessageContext;\n", "des": "Contains the MessageContext interface and implementations thereof."}
{"index": 947, "repo": "spring-ws-3.0.10.RELEASE", "code": "package mime\n\n// Represents an attachment to a MimeMessage\nInterface Attachment;\n// Represents a Web service message with MIME attachments.\nInterface MimeMessage;\n// Abstract implementation of the MimeMessage interface.\nClass AbstractMimeMessage;\n// Exception thrown when a MIME attachment could not be accessed.\nClass AttachmentException;\n", "des": "Provides MIME functionality for use the Spring Web Services framework."}
{"index": 948, "repo": "spring-ws-3.0.10.RELEASE", "code": "package pox\n\n// Defines the contract for Plain Old XML messages.\nInterface PoxMessage;\n// Specific subclass of WebServiceMessageException for Plain Old XML messages.\nClass PoxMessageException;\n", "des": "Provides the Plain Old XML (POX) functionality of the Spring Web Services framework."}
{"index": 949, "repo": "spring-ws-3.0.10.RELEASE", "code": "package dom\n\n// Implementation of the PoxMessage interface that is based on a DOM Document.\nClass DomPoxMessage;\n// Implementation of the WebServiceMessageFactory interface that creates a DomPoxMessage.\nClass DomPoxMessageFactory;\n// Specific subclass of PoxMessageException for DOM Plain Old XML messages.\nClass DomPoxMessageException;\n", "des": "Contains an implementation of the POX interfaces that is based on DOM."}
{"index": 950, "repo": "spring-ws-3.0.10.RELEASE", "code": "package server\n\n// Interface that must be implemented for each endpoint type to handle a message request.\nInterface EndpointAdapter;\n// Defines the interface for objects than can resolve exceptions thrown during endpoint execution.\nInterface EndpointExceptionResolver;\n// Workflow interface that allows for customized endpoint invocation chains.\nInterface EndpointInterceptor;\n// Defines a mapping between message requests and endpoint objects.\nInterface EndpointMapping;\n// Extension of the EndpointInterceptor interface that adds a way to decide whether the interceptor should intercept a given message context.\nInterface SmartEndpointInterceptor;\n// Endpoint invocation chain, consisting of an endpoint object and any preprocessing interceptors.\nClass EndpointInvocationChain;\n// Central dispatcher for use within Spring-WS, dispatching Web service messages to registered endpoints.\nClass MessageDispatcher;\n", "des": "Contains classes for server-side Spring-WS support."}
{"index": 951, "repo": "spring-ws-3.0.10.RELEASE", "code": "package endpoint\n\n// Defines the basic contract for Web Services interested in the entire message payload.\nInterface MessageEndpoint;\n// Defines the basic contract for Web Services interested in just the message payload.\nInterface PayloadEndpoint;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractDom4jPayloadEndpoint;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractDomPayloadEndpoint;\n// Abstract base class for EndpointExceptionResolvers.\nClass AbstractEndpointExceptionResolver;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractJDomPayloadEndpoint;\n// Abstract base class for EndpointInterceptor instances that log a part of a WebServiceMessage.\nClass AbstractLoggingInterceptor;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractMarshallingPayloadEndpoint;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractSaxPayloadEndpoint;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractStaxEventPayloadEndpoint;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractStaxPayloadEndpoint;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractStaxStreamPayloadEndpoint;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractValidatingMarshallingPayloadEndpoint;\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractXomPayloadEndpoint;\n// Represents a bean method that will be invoked as part of an incoming Web service message.\nClass MethodEndpoint;\n", "des": "Provides standard endpoint, and EndpointAdapter implementations."}
{"index": 952, "repo": "spring-ws-3.0.10.RELEASE", "code": "package adapter\n\n// Abstract base class for EndpointAdapter implementations that support MethodEndpoints.\nClass AbstractMethodEndpointAdapter;\n// Default extension of AbstractMethodEndpointAdapter with support for pluggable argument resolvers and return value handlers.\nClass DefaultMethodEndpointAdapter;\n// as of Spring Web Services 2.0, in favor of DefaultMethodEndpointAdapter and MarshallingPayloadMethodProcessor.\nClass GenericMarshallingMethodEndpointAdapter;\n// as of Spring Web Services 2.0, in favor of DefaultMethodEndpointAdapter and MarshallingPayloadMethodProcessor.\nClass MarshallingMethodEndpointAdapter;\n// Adapter to use a MessageEndpoint as the endpoint for a EndpointInvocationChain.\nClass MessageEndpointAdapter;\n// as of Spring Web Services 2.0, in favor of DefaultMethodEndpointAdapter and MessageContextMethodArgumentResolver.\nClass MessageMethodEndpointAdapter;\n// Adapter to use a PayloadEndpoint as the endpoint for a EndpointInvocationChain.\nClass PayloadEndpointAdapter;\n// as of Spring Web Services 2.0, in favor of DefaultMethodEndpointAdapter and SourcePayloadMethodProcessor.\nClass PayloadMethodEndpointAdapter;\n// as of Spring Web Services 2.0, in favor of DefaultMethodEndpointAdapter and XPathParamMethodArgumentResolver.\nClass XPathParamAnnotationMethodEndpointAdapter;\n", "des": "Provides miscellaneous EndpointAdapter implementations."}
{"index": 953, "repo": "spring-ws-3.0.10.RELEASE", "code": "package method\n\n// Strategy interface used to resolve method parameters into arguments.\nInterface MethodArgumentResolver;\n// Strategy interface used to handle method return values.\nInterface MethodReturnValueHandler;\n// Abstract base class for MethodArgumentResolver and MethodReturnValueHandler implementations based on RequestPayload and ResponsePayload annotations.\nClass AbstractPayloadMethodProcessor;\n// Abstract base class for MethodArgumentResolver and MethodReturnValueHandler implementations based on Sources.\nClass AbstractPayloadSourceMethodProcessor;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that uses Marshaller and Unmarshaller to support marshalled objects.\nClass MarshallingPayloadMethodProcessor;\n// Implementation of MethodArgumentResolver that supports MessageContext arguments.\nClass MessageContextMethodArgumentResolver;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports Source objects.\nClass SourcePayloadMethodProcessor;\n// Implementation of MethodArgumentResolver that supports StAX XMLStreamReader and XMLEventReader arguments.\nClass StaxPayloadMethodArgumentResolver;\n// Implementation of MethodArgumentResolver that supports the @XPathParam annotation.\nClass XPathParamMethodArgumentResolver;\n", "des": "Provides the MethodArgumentResolver and MethodReturnValueHandler abstractions, and various implementations thereof."}
{"index": 954, "repo": "spring-ws-3.0.10.RELEASE", "code": "package dom\n\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports dom4j elements.\nClass Dom4jPayloadMethodProcessor;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports W3C DOM elements.\nClass DomPayloadMethodProcessor;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports JDOM elements.\nClass JDomPayloadMethodProcessor;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports XOM elements.\nClass XomPayloadMethodProcessor;\n", "des": "Provides DOM-based implementations of the MethodArgumentResolver and MethodReturnValueHandler interfaces."}
{"index": 955, "repo": "spring-ws-3.0.10.RELEASE", "code": "package jaxb\n\n// Abstract base class for MethodArgumentResolver and MethodReturnValueHandler implementations that use JAXB2.\nClass AbstractJaxb2PayloadMethodProcessor;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports JAXBElement objects.\nClass JaxbElementPayloadMethodProcessor;\n// Implementation of MethodArgumentResolver and MethodReturnValueHandler that supports parameters annotated with @XmlRootElement or @XmlType, and return values annotated with @XmlRootElement.\nClass XmlRootElementPayloadMethodProcessor;\n", "des": "Provides JAXB2-based implementations of the MethodArgumentResolver and MethodReturnValueHandler interfaces."}
{"index": 956, "repo": "spring-ws-3.0.10.RELEASE", "code": "package annotation\n\n// Indicates that an annotated class is an \"Endpoint\" (e.g.\nAnnotation Type Endpoint;\n// Sets up a namespace to be used in an @Endpoint method, class, or package.\nAnnotation Type Namespace;\n// Sets the namespaces to be used in an @Endpoint method, class, or package.\nAnnotation Type Namespaces;\n// Marks an endpoint method as the handler for an incoming request.\nAnnotation Type PayloadRoot;\n// Marks an endpoint method as containing multiple PayloadRoots.\nAnnotation Type PayloadRoots;\n// Annotation which indicates that a method parameter should be bound to the request payload.\nAnnotation Type RequestPayload;\n// Annotation which indicates that a method return value should be bound to the response payload.\nAnnotation Type ResponsePayload;\n// Indicates that a method parameter should be bound to an XPath expression.\nAnnotation Type XPathParam;\n", "des": "JDK 1.5+ annotations for Spring-WS endpoints."}
{"index": 957, "repo": "spring-ws-3.0.10.RELEASE", "code": "package interceptor\n\n// Abstract base class for EndpointInterceptor implementations that validate part of the message using a schema.\nClass AbstractValidatingInterceptor;\n// Implementation of the SmartEndpointInterceptor interface that delegates to a delegate EndpointInterceptor.\nClass DelegatingSmartEndpointInterceptor;\n// Default implementation of the EndpointInterceptor interface, for simplified implementation of pre-only/post-only interceptors.\nClass EndpointInterceptorAdapter;\n// Simple EndpointInterceptor that logs the payload of request and response messages.\nClass PayloadLoggingInterceptor;\n// Interceptor that transforms the payload of WebServiceMessages using XSLT stylesheet.\nClass PayloadTransformingInterceptor;\n", "des": "Provides miscellaneous endpoints EndpointInterceptor implementations."}
{"index": 958, "repo": "spring-ws-3.0.10.RELEASE", "code": "package mapping\n\n// Abstract base for EndpointMapping implementations that map classes tagged with an annotation.\nClass AbstractAnnotationMethodEndpointMapping<T>;\n// Abstract base class for EndpointMapping implementations.\nClass AbstractEndpointMapping;\n// Abstract base class for endpoint mapping that are based on a Map.\nClass AbstractMapBasedEndpointMapping;\n// Abstract base class for MethodEndpoint mappings.\nClass AbstractMethodEndpointMapping<T>;\n// Abstract base class for EndpointMappings that resolve qualified names as registration keys.\nClass AbstractQNameEndpointMapping;\n// Implementation of the EndpointMapping interface that uses the PayloadRoot annotation to map methods to request payload root elements.\nClass PayloadRootAnnotationMethodEndpointMapping;\n// Implementation of the EndpointMapping interface to map from the qualified name of the request payload root element.\nClass PayloadRootQNameEndpointMapping;\n// Simple subclass of AbstractMethodEndpointMapping that maps from the local name of the request payload to methods.\nClass SimpleMethodEndpointMapping;\n// Implementation of the EndpointMapping interface to map from the full request URI or request URI path to endpoint beans.\nClass UriEndpointMapping;\n// Implementation of the EndpointMapping interface that maps to endpoint using an XPath expression.\nClass XPathPayloadEndpointMapping;\n", "des": "Provides miscellaneous endpoints EndpointMapping implementations."}
{"index": 959, "repo": "spring-ws-3.0.10.RELEASE", "code": "package jaxb\n\n// Implementation of the EndpointMapping interface that uses the JAXB2 XmlRootElement annotation to map methods to request payload root elements.\nClass XmlRootElementEndpointMapping;\n", "des": "Provides JAXB2-based EndpointMapping implementations."}
{"index": 960, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Helper class for handling @Namespace annotations.\nClass NamespaceUtils;\n// Helper class for determining the root qualified name of a Web Service payload.\nClass PayloadRootUtils;\n", "des": "Provides helper classes for EndpointAdapter, EndpointInteceptor, and EndpointMapping implementations."}
{"index": 961, "repo": "spring-ws-3.0.10.RELEASE", "code": "package soap\n\n// Represents the Body element in a SOAP message.\nInterface SoapBody;\n// The base interface for all elements that are contained in a SOAP message.\nInterface SoapElement;\n// Represents the Envelope element in a SOAP message.\nInterface SoapEnvelope;\n// Represents the Fault element in the body of a SOAP message.\nInterface SoapFault;\n// Represents the detail element in a SOAP fault.\nInterface SoapFaultDetail;\n// Represents the content for an individual SOAP detail entry in a SOAP Message.\nInterface SoapFaultDetailElement;\n// Represents the Header element in a SOAP message.\nInterface SoapHeader;\n// Represents the contents of an individual SOAP header in the a SOAP message.\nInterface SoapHeaderElement;\n// Represents an abstraction for SOAP messages, providing access to a SOAP Envelope.\nInterface SoapMessage;\n// Sub-interface of WebServiceMessageFactory which contains SOAP-specific properties and methods.\nInterface SoapMessageFactory;\n// Interface that defines a specific version of the SOAP specification.\nInterface SoapVersion;\n// Abstract implementation of the SoapMessage interface.\nClass AbstractSoapMessage;\n// Exception thrown when a SOAP body could not be accessed.\nClass SoapBodyException;\n// Exception thrown when a SOAP element could not be accessed.\nClass SoapElementException;\n// Exception thrown when a SOAP body could not be accessed.\nClass SoapEnvelopeException;\n// Exception thrown when a SOAP fault could not be accessed.\nClass SoapFaultException;\n// Exception thrown when a SOAP header could not be accessed.\nClass SoapHeaderException;\n// Exception thrown when a web service message cannot be created.\nClass SoapMessageCreationException;\n// Base class for all SOAP message exceptions.\nClass SoapMessageException;\n", "des": "Provides the SOAP functionality of the Spring Web Services framework."}
{"index": 962, "repo": "spring-ws-3.0.10.RELEASE", "code": "package addressing\n\n// Exception thrown in case on WS-Addressing errors.\nClass AddressingException;\n", "des": "Provides WS-Addressing implementation classes."}
{"index": 963, "repo": "spring-ws-3.0.10.RELEASE", "code": "package core\n\n// Represents an Endpoint Reference, as defined in the WS-Addressing specification.\nClass EndpointReference;\n// Represents a set of Message Addressing Properties, as defined in the WS-Addressing specification.\nClass MessageAddressingProperties;\n", "des": "Core package for WS-Addressing support."}
{"index": 964, "repo": "spring-ws-3.0.10.RELEASE", "code": "package messageid\n\n// Strategy interface that encapsulates the creation and validation of WS-Addressing MessageIDs.\nInterface MessageIdStrategy;\n// Implementation of the MessageIdStrategy interface that uses a UUID to generate a Message Id.\nClass UuidMessageIdStrategy;\n", "des": "Contains various strategies for generating WS-Addressing MessageIDs."}
{"index": 965, "repo": "spring-ws-3.0.10.RELEASE", "code": "package server\n\n// Abstract base class for WS-Addressing Action-mapped EndpointMapping implementations.\nClass AbstractActionEndpointMapping;\n// Abstract base class for WS-Addressing Action-mapped EndpointMapping implementations that map to MethodEndpoints.\nClass AbstractActionMethodEndpointMapping;\n// Abstract base class for EndpointMapping implementations that handle WS-Addressing.\nClass AbstractAddressingEndpointMapping;\n// Implementation of the EndpointMapping interface that uses the @Action annotation to map methods to a WS-Addressing Action header.\nClass AnnotationActionEndpointMapping;\n// Implementation of the EndpointMapping interface to map from WS-Addressing Action Message Addressing Property to endpoint beans.\nClass SimpleActionEndpointMapping;\n", "des": "Contains servers-side WS-Addressing support, in the form of EndpointMappings."}
{"index": 966, "repo": "spring-ws-3.0.10.RELEASE", "code": "package version\n\n// Defines the contract for a specific version of the WS-Addressing specification.\nInterface AddressingVersion;\n// Abstract base class for AddressingVersion implementations.\nClass AbstractAddressingVersion;\n// Implements WS-Addressing 1.0 (May 2006).\nClass Addressing10;\n// Implements the August 2004 edition of the WS-Addressing specification.\nClass Addressing200408;\n", "des": "Contains abstractions over various versions of the WS-Addressing specification."}
{"index": 967, "repo": "spring-ws-3.0.10.RELEASE", "code": "package axiom\n\n// AXIOM-specific implementation of the SoapMessage interface.\nClass AxiomSoapMessage;\n// Axiom-specific implementation of the WebServiceMessageFactory interface.\nClass AxiomSoapMessageFactory;\n// \nClass AxiomAttachmentException;\n// \nClass AxiomSoapBodyException;\n// \nClass AxiomSoapElementException;\n// \nClass AxiomSoapEnvelopeException;\n// \nClass AxiomSoapFaultException;\n// \nClass AxiomSoapHeaderException;\n// \nClass AxiomSoapMessageCreationException;\n// \nClass AxiomSoapMessageException;\n", "des": "AXis Object Model (AXIOM) support for Spring-WS' soap message infrastructure."}
{"index": 968, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Collection of generic utility methods to work with Axiom.\nClass AxiomUtils;\n", "des": "Support classes for working with the AXis Object Model (AXIOM)."}
{"index": 969, "repo": "spring-ws-3.0.10.RELEASE", "code": "package client\n\n// Thrown by SoapFaultMessageResolver when the response message has a fault.\nClass SoapFaultClientException;\n", "des": "Contains classes for SOAP-specific client-side Spring-WS support."}
{"index": 970, "repo": "spring-ws-3.0.10.RELEASE", "code": "package core\n\n// WebServiceMessageCallback implementation that sets the SOAP Action header on the message.\nClass SoapActionCallback;\n// Simple fault resolver that simply throws a SoapFaultClientException when a fault occurs.\nClass SoapFaultMessageResolver;\n", "des": "Contains core classes for SOAP-specific client-side Spring-WS support."}
{"index": 971, "repo": "spring-ws-3.0.10.RELEASE", "code": "package saaj\n\n// SAAJ-specific implementation of the SoapMessage interface.\nClass SaajSoapMessage;\n// SAAJ-specific implementation of the WebServiceMessageFactory.\nClass SaajSoapMessageFactory;\n// \nClass SaajAttachmentException;\n// \nClass SaajSoapBodyException;\n// \nClass SaajSoapElementException;\n// \nClass SaajSoapEnvelopeException;\n// \nClass SaajSoapFaultException;\n// \nClass SaajSoapHeaderException;\n// \nClass SaajSoapMessageCreationException;\n// \nClass SaajSoapMessageException;\n", "des": "SOAP with Attachments API for Java (SAAJ) support for Spring-WS soap message infrastructure."}
{"index": 972, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// SAX ContentHandler that transforms callback calls to the creation of SAAJ Nodes and SOAPElements.\nClass SaajContentHandler;\n// Collection of generic utility methods to work with SAAJ.\nClass SaajUtils;\n// SAX XMLReader that reads from a SAAJ Node.\nClass SaajXmlReader;\n", "des": "Support classes for working with the SOAP with Attachments API for Java (SAAJ)."}
{"index": 973, "repo": "spring-ws-3.0.10.RELEASE", "code": "package security\n\n// Interceptor base class for interceptors that handle WS-Security.\nClass AbstractWsSecurityInterceptor;\n// Exception indicating that something went wrong during WS-Security executions.\nClass WsSecurityException;\n// Exception indicating that a WS-Security executions should result in a SOAP Fault.\nClass WsSecurityFaultException;\n// Exception indicating that something went wrong during the securement of a message.\nClass WsSecuritySecurementException;\n// Exception indicating that something went wrong during the validation of a message.\nClass WsSecurityValidationException;\n", "des": "Provides WS-Security implementation classes."}
{"index": 974, "repo": "spring-ws-3.0.10.RELEASE", "code": "package callback\n\n// Abstract implementation of a CallbackHandler.\nClass AbstractCallbackHandler;\n// Represents a chain of CallbackHandlers.\nClass CallbackHandlerChain;\n// Underlying security services instantiate and pass a CleanupCallback to the handle method of a CallbackHandler to clean up security state.\nClass CleanupCallback;\n", "des": "Contains generic CallbackHandler implementations."}
{"index": 975, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Spring factory bean for an array of KeyManagers.\nClass KeyManagersFactoryBean;\n// Spring factory bean for a KeyStore.\nClass KeyStoreFactoryBean;\n// Generic utility methods for dealing with KeyStore objects.\nClass KeyStoreUtils;\n// Generic utility methods for Spring Security\nClass SpringSecurityUtils;\n// Spring factory bean for an array of TrustManagers.\nClass TrustManagersFactoryBean;\n", "des": "Contains support classes for handling WS-Security messages."}
{"index": 976, "repo": "spring-ws-3.0.10.RELEASE", "code": "package wss4j2\n\n// A WS-Security endpoint interceptor based on Apache's WSS4J.\nClass Wss4jSecurityInterceptor;\n// WSS4J-specific version of the WsSecurityFaultException.\nClass Wss4jSecurityFaultException;\n// WSS4J-specific version of the WsSecuritySecurementException.\nClass Wss4jSecuritySecurementException;\n// WSS4J-specific version of the WsSecurityValidationException.\nClass Wss4jSecurityValidationException;\n", "des": "Contains classes for using the Apache WSS4J 2.0 WS-Security implementation within Spring-WS."}
{"index": 977, "repo": "spring-ws-3.0.10.RELEASE", "code": "package callback\n\n// Abstract base class for CallbackHandler implementations that handle WSPasswordCallback callbacks.\nClass AbstractWsPasswordCallbackHandler;\n// Callback handler that uses Java Security KeyStores to handle cryptographic callbacks.\nClass KeyStoreCallbackHandler;\n// Simple callback handler that validates passwords against a in-memory Properties object.\nClass SimplePasswordValidationCallbackHandler;\n// Callback handler that validates a plain text or digest password using an Spring Security UserDetailsService.\nClass SpringSecurityPasswordValidationCallbackHandler;\n// Underlying security services instantiate and pass a UsernameTokenPrincipalCallback to the handle method of a CallbackHandler to pass a security WSUsernameTokenPrincipal.\nClass UsernameTokenPrincipalCallback;\n", "des": "Contains CallbackHandler implementations for WSS4J 2.0."}
{"index": 978, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Spring factory bean for a WSS4J Crypto.\nClass CryptoFactoryBean;\n", "des": "Contains support classes for working with WSS4J 2.0."}
{"index": 979, "repo": "spring-ws-3.0.10.RELEASE", "code": "package xwss\n\n// WS-Security endpoint interceptor that is based on Sun's XML and Web Services Security package (XWSS).\nClass XwsSecurityInterceptor;\n// XWSS-specific version of the WsSecurityFaultException.\nClass XwsSecurityFaultException;\n// XWSS-specific version of the WsSecuritySecurementException.\nClass XwsSecuritySecurementException;\n// XWSS-specific version of the WsSecurityValidationException.\nClass XwsSecurityValidationException;\n", "des": "Contains classes for using the XML and WebServices Security WS-Security implementation within Spring-WS."}
{"index": 980, "repo": "spring-ws-3.0.10.RELEASE", "code": "package callback\n\n// Default callback handler that handles cryptographic callback.\nClass CryptographyCallbackHandler;\n// A default implementation of a TimestampValidationCallback.TimestampValidator.\nClass DefaultTimestampValidator;\n// Callback handler that uses Java Security KeyStores to handle cryptographic callbacks.\nClass KeyStoreCallbackHandler;\n// Mock implementation of of callback handler that accepts all password and certificate validation callbacks.\nClass MockValidationCallbackHandler;\n// Simple callback handler that validates passwords agains a in-memory Properties object.\nClass SimplePasswordValidationCallbackHandler;\n// Simple callback handler that supplies a username and password to a username token at runtime.\nClass SimpleUsernamePasswordCallbackHandler;\n// Callback handler that validates a certificate using an Spring Security AuthenticationManager.\nClass SpringCertificateValidationCallbackHandler;\n// Callback handler that validates a password digest using an Spring Security UserDetailsService.\nClass SpringDigestPasswordValidationCallbackHandler;\n// Callback handler that validates a certificate uses an Spring Security AuthenticationManager.\nClass SpringPlainTextPasswordValidationCallbackHandler;\n// Callback handler that adds username/password information to a mesage using an Spring Security SecurityContext.\nClass SpringUsernamePasswordCallbackHandler;\n// Represents a chain of CallbackHandlers.\nClass XwssCallbackHandlerChain;\n", "des": "Contains CallbackHandler implementations for XWSS."}
{"index": 981, "repo": "spring-ws-3.0.10.RELEASE", "code": "package jaas\n\n// Abstract base class for integrating with JAAS.\nClass AbstractJaasValidationCallbackHandler;\n// Provides basic support for integrating with JAAS and certificates.\nClass JaasCertificateValidationCallbackHandler;\n// Provides basic support for integrating with JAAS and plain text passwords.\nClass JaasPlainTextPasswordValidationCallbackHandler;\n", "des": "Contains CallbackHandler implementations for XWSS that use the Java Authentication and Authorization Service (JAAS)."}
{"index": 982, "repo": "spring-ws-3.0.10.RELEASE", "code": "package server\n\n// SOAP-specific extension of the SmartEndpointInterceptor interface.\nInterface SmartSoapEndpointInterceptor;\n// SOAP-specific extension of the EndpointInterceptor interface.\nInterface SoapEndpointInterceptor;\n// SOAP-specific sub-interface of the EndpointMapping.\nInterface SoapEndpointMapping;\n// SOAP-specific subclass of the EndpointInvocationChain.\nClass SoapEndpointInvocationChain;\n// SOAP-specific subclass of the MessageDispatcher.\nClass SoapMessageDispatcher;\n", "des": "Contains classes for SOAP-specific server-side Spring-WS support."}
{"index": 983, "repo": "spring-ws-3.0.10.RELEASE", "code": "package endpoint\n\n// as of Spring Web Services 2.0, in favor of annotated endpoints\nClass AbstractFaultCreatingValidatingMarshallingPayloadEndpoint;\n// Abstract base class for SOAP-based EndpointExceptionResolver implementations that depend on SoapFaultDefinition.\nClass AbstractSoapFaultDefinitionExceptionResolver;\n// Simple, SOAP-specific EndpointExceptionResolver implementation that stores the exception's message as the fault string.\nClass SimpleSoapExceptionResolver;\n// Implementation of the EndpointExceptionResolver interface that uses the SoapFault annotation to map exceptions to SOAP Faults.\nClass SoapFaultAnnotationExceptionResolver;\n// Defines properties for a SOAP Fault.\nClass SoapFaultDefinition;\n// PropertyEditor for SoapFaultDefinition objects.\nClass SoapFaultDefinitionEditor;\n// Exception resolver that allows for mapping exception class names to SOAP Faults.\nClass SoapFaultMappingExceptionResolver;\n", "des": "Provides EndpointAdapter, EndpointMapping, and EndpointExceptionResolver implementations for SOAP."}
{"index": 984, "repo": "spring-ws-3.0.10.RELEASE", "code": "package annotation\n\n// Enumeration that represents the standard SOAP Fault codes for use with the JDK 1.5+ SoapFault annotation.\nEnum FaultCode;\n// Marks an endpoint method as the handler for an incoming request.\nAnnotation Type SoapAction;\n// Marks an endpoint method as containing multiple SoapActions.\nAnnotation Type SoapActions;\n// Marks an exception class with the fault elements that should be returned whenever this exception is thrown.\nAnnotation Type SoapFault;\n// Marks an endpoint method parameter to be resolved as a single or a list of SoapHeaderElement.\nAnnotation Type SoapHeader;\n", "des": "JDK 1.5+ annotations for Spring-WS SOAP endpoints."}
{"index": 985, "repo": "spring-ws-3.0.10.RELEASE", "code": "package interceptor\n\n// Subclass of AbstractValidatingInterceptor that creates a SOAP Fault whenever the request message cannot be validated.\nClass AbstractFaultCreatingValidatingInterceptor;\n// Implementation of the SmartSoapEndpointInterceptor interface that delegates to a delegate SoapEndpointInterceptor.\nClass DelegatingSmartSoapEndpointInterceptor;\n// Implementation of the SmartSoapEndpointInterceptor interface that only intercepts requests that have a specified namespace URI or local part (or both) as payload root.\nClass PayloadRootSmartSoapEndpointInterceptor;\n// Interceptor that validates the contents of WebServiceMessages using a schema.\nClass PayloadValidatingInterceptor;\n// Implementation of the SmartEndpointInterceptor interface that only intercepts requests that have a specified soap action.\nClass SoapActionSmartEndpointInterceptor;\n// SOAP-specific EndpointInterceptor that logs the complete request and response envelope of SoapMessage messages.\nClass SoapEnvelopeLoggingInterceptor;\n", "des": "Provides miscellaneous endpoints EndpointInterceptor implementations for SOAP purposes."}
{"index": 986, "repo": "spring-ws-3.0.10.RELEASE", "code": "package mapping\n\n// EndpointMapping implement that adds SOAP actors or roles to a delegate endpoint.\nClass DelegatingSoapEndpointMapping;\n// Implementation of the EndpointMapping interface that uses the SoapAction annotation to map methods to the request SOAPAction header.\nClass SoapActionAnnotationMethodEndpointMapping;\n// Implementation of the EndpointMapping interface to map from SOAPAction headers to endpoint beans.\nClass SoapActionEndpointMapping;\n", "des": "Provides miscellaneous endpoints EndpointMapping implementations for SOAP purposes."}
{"index": 987, "repo": "spring-ws-3.0.10.RELEASE", "code": "package soap11\n\n// Subinterface of SoapBody that exposes SOAP 1.1 functionality.\nInterface Soap11Body;\n// Subinterface of SoapFault that exposes SOAP 1.1 functionality.\nInterface Soap11Fault;\n// Subinterface of SoapHeader that exposes SOAP 1.1 functionality.\nInterface Soap11Header;\n", "des": "Contains interfaces specific to SOAP 1.1."}
{"index": 988, "repo": "spring-ws-3.0.10.RELEASE", "code": "package soap12\n\n// Subinterface of SoapBody that exposes SOAP 1.2 functionality.\nInterface Soap12Body;\n// Subinterface of SoapFault that exposes SOAP 1.2 functionality.\nInterface Soap12Fault;\n// Subinterface of SoapHeader that exposes SOAP 1.2 functionality.\nInterface Soap12Header;\n", "des": "Contains interfaces specific to SOAP 1.2."}
{"index": 989, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Contains various utility methods for handling SOAP messages.\nClass SoapUtils;\n", "des": "Classes supporting the org.springframework.ws.soap package."}
{"index": 990, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Helper class for for loading default implementations of an interface.\nClass DefaultStrategiesHelper;\n// Helper class for endpoints and endpoint mappings that use marshalling.\nClass MarshallingUtils;\n// Miscellaneous utilities for web applications.\nClass WebUtils;\n", "des": "Provides general helper classes for Spring Web Services."}
{"index": 991, "repo": "spring-ws-3.0.10.RELEASE", "code": "package client\n\n// Defines the contract for matching requests to expectations.\nInterface RequestMatcher;\n// Allows for setting up expectations on XPath expressions.\nInterface RequestXPathExpectations;\n// Allows for setting up responses and additional expectations.\nInterface ResponseActions;\n// Allows for creating up responses.\nInterface ResponseCreator;\n// Mock implementation of WebServiceMessageSender.\nClass MockWebServiceMessageSender;\n// Main entry point for client-side Web service testing.\nClass MockWebServiceServer;\n// Factory methods for RequestMatcher classes.\nClass RequestMatchers;\n// Factory methods for ResponseCreator classes.\nClass ResponseCreators;\n", "des": "Provides a testing framework for client-side Web service testing."}
{"index": 992, "repo": "spring-ws-3.0.10.RELEASE", "code": "package server\n\n// Creates request messages.\nInterface RequestCreator;\n// Allows for setting up expectation about response messages.\nInterface ResponseActions;\n// Defines the contract for matching response messages to expectations.\nInterface ResponseMatcher;\n// Allows for setting up expectations on XPath expressions.\nInterface ResponseXPathExpectations;\n// Main entry point for server-side Web service testing.\nClass MockWebServiceClient;\n// Factory methods for RequestCreator classes.\nClass RequestCreators;\n// Factory methods for ResponseMatcher classes.\nClass ResponseMatchers;\n", "des": "Provides a testing framework for server-side Web service testing."}
{"index": 993, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// JUnit independent assertion class.\nClass AssertionErrors;\n// Helper class for for loading default implementations of an interface.\nClass MockStrategiesHelper;\n// Subclass of AssertionError that also contains a Source for more context.\nClass SourceAssertionError;\n", "des": "Support classes for the testing framework, used by the classes in the org.springframework.ws.test.client and org.springframework.ws.test.server packages."}
{"index": 994, "repo": "spring-ws-3.0.10.RELEASE", "code": "package creator\n\n// Defines the general contract for creating messages used in test scenarios.\nInterface WebServiceMessageCreator;\n// Abstract base class for the WebServiceMessageCreator interface.\nClass AbstractMessageCreator;\n// Implementation of WebServiceMessageCreator that creates a request based on a Source.\nClass PayloadMessageCreator;\n// Implementation of WebServiceMessageCreator that creates a request based on a SOAP envelope Source.\nClass SoapEnvelopeMessageCreator;\n", "des": "Provides the generic WebServiceMessageCreator interface, and implementations."}
{"index": 995, "repo": "spring-ws-3.0.10.RELEASE", "code": "package matcher\n\n// Defines the general contract for matching messages to expectations.\nInterface WebServiceMessageMatcher;\n// Abstract base class for SOAP-specific WebServiceMessageMatcher implementations.\nClass AbstractSoapMessageMatcher;\n// Implementation of WebServiceMessageMatcher based on XMLUnit's Diff.\nClass DiffMatcher;\n// Matches Source payloads.\nClass PayloadDiffMatcher;\n// Uses the XmlValidator to validate request payload.\nClass SchemaValidatingMatcher;\n// Matches Source SOAP envelopes.\nClass SoapEnvelopeDiffMatcher;\n// Matches SOAP headers.\nClass SoapHeaderMatcher;\n// Helper class for dealing with XPath expectations.\nClass XPathExpectationsHelper;\n", "des": "Provides the generic WebServiceMessageMatcher interface, and implementations."}
{"index": 996, "repo": "spring-ws-3.0.10.RELEASE", "code": "package transport\n\n// Sub-interface of WebServiceConnection that is aware of any server-side situations where an endpoint is not found.\nInterface EndpointAwareWebServiceConnection;\n// Sub-interface of WebServiceConnection that is aware of any Fault messages received.\nInterface FaultAwareWebServiceConnection;\n// Interface to define access to header information for certain WebServiceConnection implementations.\nInterface HeadersAwareReceiverWebServiceConnection;\n// \nInterface HeadersAwareSenderWebServiceConnection;\n// Declares useful transport constants.\nInterface TransportConstants;\n// Represents a point-to-point connection that a client can use for sending WebServiceMessage objects directly to a remote party.\nInterface WebServiceConnection;\n// Defines the methods for classes capable of receiving WebServiceMessage instances coming in on a transport.\nInterface WebServiceMessageReceiver;\n// Defines the methods for classes capable of sending and receiving WebServiceMessage instances across a transport.\nInterface WebServiceMessageSender;\n// Abstract base class for WebServiceConnection implementations used for receiving requests.\nClass AbstractReceiverConnection;\n// Abstract base class for WebServiceConnection implementations used for sending requests.\nClass AbstractSenderConnection;\n// Abstract base class for WebServiceConnection implementations.\nClass AbstractWebServiceConnection;\n// A TransportInputStream is an input stream with MIME input headers.\nClass TransportInputStream;\n// A TransportOutputStream is an output stream with MIME input headers.\nClass TransportOutputStream;\n// Abstract base class for exceptions related to the transport layer.\nClass TransportException;\n", "des": "Contains the TransportRequest and TransportResponse interfaces."}
{"index": 997, "repo": "spring-ws-3.0.10.RELEASE", "code": "package context\n\n// Strategy interface for determining the current WebServiceConnection.\nInterface TransportContext;\n// Default implementation of the TransportContext interface.\nClass DefaultTransportContext;\n// Simple holder class that associates a TransportContext instance with the current thread.\nClass TransportContextHolder;\n", "des": "Abstraction for determining the current TransportInputStream and TransportOutputStream."}
{"index": 998, "repo": "spring-ws-3.0.10.RELEASE", "code": "package http\n\n// Declares HTTP-specific transport constants.\nInterface HttpTransportConstants;\n// Abstract base class for WebServiceConnection implementations that send request over HTTP.\nClass AbstractHttpSenderConnection;\n// Abstract base class for WebServiceMessageSender implementations that use HTTP.\nClass AbstractHttpWebServiceMessageSender;\n// Implementation of the WebServiceConnection interface that is based on the Spring 3 ClientHttpRequest and ClientHttpResponse.\nClass ClientHttpRequestConnection;\n// WebServiceMessageSender implementation based on the ClientHttpRequestFactory introduced in Spring 3.\nClass ClientHttpRequestMessageSender;\n// In favor of HttpComponentsConnection\nClass CommonsHttpConnection;\n// In favor of HttpComponentsMessageSender\nClass CommonsHttpMessageSender;\n// Implementation of WebServiceConnection that is based on Apache HttpClient.\nClass HttpComponentsConnection;\n// WebServiceMessageSender implementation that uses Apache HttpClient to execute POST requests.\nClass HttpComponentsMessageSender;\n// HttpClient HttpRequestInterceptor implementation that removes Content-Length and Transfer-Encoding headers from the request.\nClass HttpComponentsMessageSender.RemoveSoapHeadersInterceptor;\n// Implementation of WebServiceConnection that is based on the Java 6 HttpServer HttpExchange.\nClass HttpExchangeConnection;\n// Implementation of WebServiceConnection that is based on the Servlet API.\nClass HttpServletConnection;\n// Extension of HttpUrlConnectionMessageSender that adds support for (self-signed) HTTPS certificates.\nClass HttpsUrlConnectionMessageSender;\n// Implementation of the WebServiceConnection interface that uses a HttpURLConnection.\nClass HttpUrlConnection;\n// WebServiceMessageSender implementation that uses standard J2SE facilities to execute POST requests, without support for HTTP authentication or advanced configuration options.\nClass HttpUrlConnectionMessageSender;\n// Abstract base class for WsdlDefinitionHandlerAdapter and XsdSchemaHandlerAdapter that transforms XSD and WSDL location attributes.\nClass LocationTransformerObjectSupport;\n// Servlet for simplified dispatching of Web service messages.\nClass MessageDispatcherServlet;\n// Adapter to use the WebServiceMessageReceiver interface with the generic DispatcherServlet.\nClass WebServiceMessageReceiverHandlerAdapter;\n// HttpHandler that can be used to handle incoming HttpExchange service requests.\nClass WebServiceMessageReceiverHttpHandler;\n// Adapter to use the WsdlDefinition interface with the generic DispatcherServlet.\nClass WsdlDefinitionHandlerAdapter;\n// \nClass WsdlDefinitionHttpHandler;\n", "des": "Package providing support for handling messages via HTTP."}
{"index": 999, "repo": "spring-ws-3.0.10.RELEASE", "code": "package jms\n\n// Declares JMS-specific transport constants.\nInterface JmsTransportConstants;\n// Convenience base class for JMS server-side transport objects.\nClass JmsMessageReceiver;\n// WebServiceMessageSender implementation that uses JMS Messages.\nClass JmsMessageSender;\n// Implementation of WebServiceConnection that is used for server-side JMS access.\nClass JmsReceiverConnection;\n// Implementation of WebServiceConnection that is used for client-side JMS access.\nClass JmsSenderConnection;\n// Spring SessionAwareMessageListener that can be used to handle incoming Message service requests.\nClass WebServiceMessageListener;\n// Exception that is thrown when an error occurs in the JMS transport.\nClass JmsTransportException;\n", "des": "Package providing support for handling messages via JMS."}
{"index": 1000, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Collection of utility methods to work with JMS transports.\nClass JmsTransportUtils;\n", "des": "Classes supporting the org.springframework.ws.transport.jms package."}
{"index": 1001, "repo": "spring-ws-3.0.10.RELEASE", "code": "package mail\n\n// Declares Mail-specific transport constants.\nInterface MailTransportConstants;\n// Server-side component for receiving email messages using JavaMail.\nClass MailMessageReceiver;\n// WebServiceMessageSender implementation that uses Mail MimeMessages.\nClass MailMessageSender;\n// Implementation of WebServiceConnection that is used for server-side Mail access.\nClass MailReceiverConnection;\n// Implementation of WebServiceConnection that is used for client-side Mail access.\nClass MailSenderConnection;\n// Exception that is thrown when an error occurs in the Mail transport.\nClass MailTransportException;\n", "des": "Package providing support for handling messages via email."}
{"index": 1002, "repo": "spring-ws-3.0.10.RELEASE", "code": "package monitor\n\n// Defines the contract for objects that monitor a given folder for new messages.\nInterface MonitoringStrategy;\n// Abstract base class for the MonitoringStrategy interface.\nClass AbstractMonitoringStrategy;\n// Implementation of the MonitoringStrategy interface that uses the IMAP IDLE command for asynchronous message detection.\nClass ImapIdleMonitoringStrategy;\n// Implementation of the MonitoringStrategy interface that uses a simple polling mechanism.\nClass PollingMonitoringStrategy;\n// Implementation of the MonitoringStrategy interface that uses a simple polling mechanism suitable for POP3 servers.\nClass Pop3PollingMonitoringStrategy;\n", "des": "Provides the MonitoringStrategy interface and implementations."}
{"index": 1003, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Collection of utility methods to work with Mail transports.\nClass MailTransportUtils;\n", "des": "Classes supporting the org.springframework.ws.transport.mail package."}
{"index": 1004, "repo": "spring-ws-3.0.10.RELEASE", "code": "package support\n\n// Abstract base class for asynchronous standalone, server-side transport objects.\nClass AbstractAsyncStandaloneMessageReceiver;\n// Abstract base class for standalone, server-side transport objects.\nClass AbstractStandaloneMessageReceiver;\n// Adapts an Enumeration to follow the interface of Iterator.\nClass EnumerationIterator<T>;\n// Base class for server-side transport objects which have a predefined WebServiceMessageReceiver.\nClass SimpleWebServiceMessageReceiverObjectSupport;\n// Generic utility methods for working with Web service transports.\nClass TransportUtils;\n// Convenience base class for server-side transport objects.\nClass WebServiceMessageReceiverObjectSupport;\n", "des": "Classes supporting the org.springframework.ws.transport package."}
{"index": 1005, "repo": "spring-ws-3.0.10.RELEASE", "code": "package xmpp\n\n// Declares XMPP-specific transport constants.\nInterface XmppTransportConstants;\n// Server-side component for receiving XMPP (Jabber) messages.\nClass XmppMessageReceiver;\n// WebServiceMessageSender implementation that uses XMPP Messages.\nClass XmppMessageSender;\n// Implementation of WebServiceConnection that is used for server-side XMPP access.\nClass XmppReceiverConnection;\n// Implementation of WebServiceConnection that is used for client-side XMPP access.\nClass XmppSenderConnection;\n", "des": "Package providing support for handling messages via xmpp."}
{"index": 1006, "repo": "spring-ws-3.0.10.RELEASE", "code": "package wsdl\n\n// Represents an abstraction for WSDL definitions.\nInterface WsdlDefinition;\n// Base class for all WSDL definition exceptions.\nClass WsdlDefinitionException;\n", "des": "Provides the WSDL functionality of the Spring Web Services framework."}
{"index": 1007, "repo": "spring-ws-3.0.10.RELEASE", "code": "package wsdl11\n\n// Models a WSDL 1.1-specific WsdlDefinition.\nInterface Wsdl11Definition;\n// Convenient implementation of Wsdl11Definition that creates a SOAP 1.1 or 1.2 binding based on naming conventions in one or more inlined XSD schemas.\nClass DefaultWsdl11Definition;\n// Implementation of the Wsdl11Definition that uses a provider-based mechanism to populate a WSDL4J Definition.\nClass ProviderBasedWsdl4jDefinition;\n// The default Wsdl11Definition implementation.\nClass SimpleWsdl11Definition;\n// Implementation of the Wsdl11Definition based on WSDL4J.\nClass Wsdl4jDefinition;\n// Subclass of WsdlDefinitionException that wraps WSDLExceptions.\nClass Wsdl4jDefinitionException;\n", "des": "Contains interfaces and classes specific to WSDL 1.1."}
{"index": 1008, "repo": "spring-ws-3.0.10.RELEASE", "code": "package provider\n\n// Strategy for adding Bindings to a Definition.\nInterface BindingsProvider;\n// Strategy for adding Imports to a Definition.\nInterface ImportsProvider;\n// Strategy for adding Messages to a Definition.\nInterface MessagesProvider;\n// Strategy for adding PortTypes to a Definition.\nInterface PortTypesProvider;\n// Strategy for adding Services to a Definition.\nInterface ServicesProvider;\n// Strategy for adding Types to a Definition.\nInterface TypesProvider;\n// Abstract base class for PortTypesProvider implementations.\nClass AbstractPortTypesProvider;\n// Default implementation of the BindingsProvider and ServicesProvider interfaces.\nClass DefaultConcretePartProvider;\n// Default implementation of the MessagesProvider.\nClass DefaultMessagesProvider;\n// Implementation of TypesProvider that inlines a XsdSchema or XsdSchemaCollection into the WSDL.\nClass InliningXsdSchemaTypesProvider;\n// Implementation of the BindingsProvider and ServicesProvider interfaces that are SOAP 1.1 specific.\nClass Soap11Provider;\n// Implementation of the BindingsProvider and ServicesProvider interfaces that are SOAP 1.2 specific.\nClass Soap12Provider;\n// Implementation of the BindingsProvider and ServicesProvider interfaces that supports SOAP 1.1 and SOAP 1.2.\nClass SoapProvider;\n// Implementation of the MessagesProvider interface that is based on suffixes.\nClass SuffixBasedMessagesProvider;\n// Implementation of the PortTypesProvider interface that is based on suffixes.\nClass SuffixBasedPortTypesProvider;\n", "des": "Provides a contribution strategy for WSDL definitions."}
{"index": 1009, "repo": "spring-ws-3.0.10.RELEASE", "code": "package xml\n\n// \nClass DocumentBuilderFactoryUtils;\n// Helper class used to find the current version of JAXP.\nClass JaxpVersion;\n// \nClass XMLInputFactoryUtils;\n// Root of the hierarchy of XML exception.\nClass XmlException;\n", "des": "Provides classes for XML handling: version detection and a base XML exception class."}
{"index": 1010, "repo": "spring-ws-3.0.10.RELEASE", "code": "package dom\n\n// SAX ContentHandler that transforms callback calls to DOM Nodes.\nClass DomContentHandler;\n", "des": "Provides classes that help with DOM: the Document Object Model."}
{"index": 1011, "repo": "spring-ws-3.0.10.RELEASE", "code": "package namespace\n\n// PropertyEditor for javax.xml.namespace.QName, to populate a property of type QName from a String value.\nClass QNameEditor;\n// Helper class for using QName.\nClass QNameUtils;\n// Simple javax.xml.namespace.NamespaceContext implementation.\nClass SimpleNamespaceContext;\n", "des": "Provides classes that help with XML Namespace processing."}
{"index": 1012, "repo": "spring-ws-3.0.10.RELEASE", "code": "package sax\n\n// Abstract base class for SAX XMLReader implementations.\nClass AbstractXmlReader;\n// Convenient utility methods for dealing with SAX.\nClass SaxUtils;\n", "des": "Provides classes that help with SAX: the Simple API for XML."}
{"index": 1013, "repo": "spring-ws-3.0.10.RELEASE", "code": "package transform\n\n// Callback interface invoked on each sort of Result.\nInterface TraxUtils.ResultCallback;\n// Callback interface invoked on each sort of Source.\nInterface TraxUtils.SourceCallback;\n// Convenient subclass of SAXSource that reads from a Spring Resource.\nClass ResourceSource;\n// Convenient subclass of StreamResult that writes to a StringWriter.\nClass StringResult;\n// Convenient subclass of StreamSource that reads from a StringReader.\nClass StringSource;\n// \nClass TransformerFactoryUtils;\n// Helper class for Transformer usage.\nClass TransformerHelper;\n// Convenient base class for objects that use a Transformer.\nClass TransformerObjectSupport;\n// Convenient utility methods for dealing with TrAX.\nClass TraxUtils;\n", "des": "Provides classes that help with XML transformations."}
{"index": 1014, "repo": "spring-ws-3.0.10.RELEASE", "code": "package validation\n\n// Subinterface of ErrorHandler that allows the registered errors to be retrieved.\nInterface ValidationErrorHandler;\n// Simple processor that validates a given Source.\nInterface XmlValidator;\n// \nClass SchemaFactoryUtils;\n// Convenient utility methods for loading of Schema objects, performing standard handling of input streams.\nClass SchemaLoaderUtils;\n// \nClass XMLReaderFactoryUtils;\n// Factory for XmlValidator objects, being aware of JAXP 1.3 Validators, and JAXP 1.0 parsing capabilities.\nClass XmlValidatorFactory;\n// Exception thrown when a validation error occurs\nClass XmlValidationException;\n", "des": "Provides classes for XML validation in JAXP 1.0 and JAXP 1.3."}
{"index": 1015, "repo": "spring-ws-3.0.10.RELEASE", "code": "package xpath\n\n// An interface used by XPathOperations implementations for processing Node objects on a per-node basis.\nInterface NodeCallbackHandler;\n// An interface used by XPathOperations implementations for mapping Node objects on a per-node basis.\nInterface NodeMapper<T>;\n// Defines the contract for a precompiled XPath expression.\nInterface XPathExpression;\n// Interface that specifies a basic set of XPath operations, implemented by various XPathTemplates.\nInterface XPathOperations;\n// Abstract base class for implementations of XPathOperations.\nClass AbstractXPathTemplate;\n// Implementation of XPathOperations that uses Jaxen.\nClass JaxenXPathTemplate;\n// Implementation of XPathOperations that uses JAXP 1.3.\nClass Jaxp13XPathTemplate;\n// Factory for compiled XPathExpressions, being aware of JAXP 1.3+ XPath functionality, and Jaxen.\nClass XPathExpressionFactory;\n// Spring FactoryBean for XPathExpression object.\nClass XPathExpressionFactoryBean;\n// Exception thrown when an error occurs during XPath processing.\nClass XPathException;\n// Exception throws when a XPath expression cannot be parsed.\nClass XPathParseException;\n", "des": "Provides XPathTemplate implementations, and various classes for XPath evaluation using JAXP 1.3, and Jaxen."}
{"index": 1016, "repo": "spring-ws-3.0.10.RELEASE", "code": "package xsd\n\n// Represents an abstraction for XSD schemas.\nInterface XsdSchema;\n// Represents an abstraction for a collection of XSD schemas.\nInterface XsdSchemaCollection;\n// The default XsdSchema implementation.\nClass SimpleXsdSchema;\n// Base class for all WSDL definition exceptions.\nClass XsdSchemaException;\n", "des": "Provides an abstraction over XSD XML schemas."}
{"index": 1017, "repo": "spring-ws-3.0.10.RELEASE", "code": "package commons\n\n// Implementation of the XsdSchema interface that uses Apache WS-Commons XML Schema.\nClass CommonsXsdSchema;\n// Implementation of the XsdSchemaCollection that uses Apache WS-Commons XML Schema.\nClass CommonsXsdSchemaCollection;\n// Commons XmlSchema version of the XsdSchemaException.\nClass CommonsXsdSchemaException;\n", "des": "Contains a implementation of the XsdSchema interfaces that uses Apache WS-Commons XML Schema."}
{"index": 1018, "repo": "hive-common-4.0.0-alpha-2", "code": "package datetime\n\n// Formatter using SQL:2016 datetime patterns.\nClass HiveSqlDateTimeFormatter;\n// Token representation.\nClass HiveSqlDateTimeFormatter.Token;\n// Represents broad categories of tokens.\nEnum HiveSqlDateTimeFormatter.TokenType;\n", "des": "Deals with formatting and parsing of datetime objects."}
{"index": 1019, "repo": "commons-email-1.5", "code": "package mail\n\n// Creates a DataSource based on an URL.\nInterface DataSourceResolver;\n// since 1.4, use ByteArrayDataSource instead\nClass ByteArrayDataSource;\n// This is a very simple authentication object that can be used for any transport needing basic userName and password type authentication.\nClass DefaultAuthenticator;\n// The base class for all email messages.\nClass Email;\n// This class models an email attachment.\nClass EmailAttachment;\n// Constants used by Email classes.\nClass EmailConstants;\n// An HTML multipart email.\nClass HtmlEmail;\n// Small wrapper class on top of HtmlEmail which encapsulates the required logic to retrieve images that are contained in \"<img src=..\nClass ImageHtmlEmail;\n// A multipart email.\nClass MultiPartEmail;\n// This class is used to send simple internet email messages without attachments.\nClass SimpleEmail;\n// Exception thrown when a checked error occurs in commons-email.\nClass EmailException;\n", "des": "Commons-Email aims to provide a API for sending email."}
{"index": 1020, "repo": "commons-email-1.5", "code": "package resolver\n\n// Base class for various resolvers.\nClass DataSourceBaseResolver;\n// Creates a DataSource based on an class path.\nClass DataSourceClassPathResolver;\n// A composite data source resolver.\nClass DataSourceCompositeResolver;\n// Creates a DataSource based on an URL.\nClass DataSourceFileResolver;\n// Creates a DataSource based on an URL.\nClass DataSourceUrlResolver;\n", "des": "Contains implementation classes to resolve data sources from the following locations: class path file system URL"}
{"index": 1021, "repo": "commons-email-1.5", "code": "package util\n\n// Converts email addresses containing International Domain Names into an ASCII representation suitable for sending an email.\nClass IDNEmailAddressConverter;\n// Parses a MimeMessage and stores the individual parts such a plain text, HTML text and attachments.\nClass MimeMessageParser;\n// Static helper methods.\nClass MimeMessageUtils;\n", "des": "This package provides some utility classes."}
{"index": 1022, "repo": "hadoop-aws-3.3.6", "code": "package s3a\n\n// Callback for retry and notification operations.\nInterface Invoker.Retried;\n// Callbacks for input stream IO.\nInterface S3AInputStream.InputStreamCallbacks;\n// An interface for use in lambda-expressions working with directory tree listings.\nInterface S3AUtils.CallOnLocatedFileStatus;\n// An interface for use in lambda-expressions working with directory tree listings.\nInterface S3AUtils.LocatedFileStatusMap<T>;\n// This interface will be replaced by one which uses the AWS SDK V2 S3 client as part of upgrading S3A to SDK V2.\nInterface S3ClientFactory;\n// Callbacks for writeOperationHelper.\nInterface WriteOperationHelper.WriteOperationHelperCallbacks;\n// Operations to update the store.\nInterface WriteOperations;\n// This class will be replaced by one that implements AWS SDK V2's AwsCredentialProvider as part of upgrading S3A to SDK V2.\nClass AnonymousAWSCredentialsProvider;\n// Represents an Arn Resource, this can be an accesspoint or bucket.\nClass ArnResource;\n// A list of providers.\nClass AWSCredentialProviderList;\n// Constants used with the S3AFileSystem.\nClass Constants;\n// The default S3ClientFactory implementation.\nClass DefaultS3ClientFactory;\n// Simple object which stores current failure injection settings.\nClass FailureInjectionPolicy;\n// A wrapper around AmazonS3 that injects failures.\nClass InconsistentAmazonS3Client;\n// S3 Client factory used for testing with eventual consistency fault injection.\nClass InconsistentS3ClientFactory;\n// Class to provide lambda expression invocation of AWS operations.\nClass Invoker;\n// Place for the S3A listing classes; keeps all the small classes under control.\nClass Listing;\n// Accept all entries except the base path and those which map to S3N pseudo directory markers.\nClass Listing.AcceptAllButSelfAndS3nDirs;\n// MultipartUtils upload-specific functions for use by S3AFileSystem and Hadoop CLI.\nClass MultipartUtils;\n// Iterator over multipart uploads.\nClass MultipartUtils.UploadIterator;\n// Listener to progress from AWS regarding transfers.\nClass ProgressableProgressListener;\n", "des": "S3A Filesystem."}
{"index": 1023, "repo": "hadoop-aws-3.3.6", "code": "package api\n\n// Factory for S3 objects.\nInterface RequestFactory;\n// An operation is unsupported.\nClass UnsupportedRequestException;\n", "des": "Where the interfaces for classes implemented in o.a.h.fs.s3a.impl should go."}
{"index": 1024, "repo": "hadoop-aws-3.3.6", "code": "package audit\n\n// Interface for Audit Managers auditing operations through the AWS libraries.\nInterface AuditManagerS3A;\n// An Audit Span with S3A integration, specifically callbacks from the AWS client SDK.\nInterface AuditSpanS3A;\n// Callbacks for audit spans.\nInterface AWSAuditEventCallbacks;\n// Interfaces for audit services to implement.\nInterface OperationAuditor;\n// Support for integrating auditing within the S3A code.\nClass AuditIntegration;\n// Extract information from a request.\nClass AWSRequestAnalyzer;\n// Info about a request.\nClass AWSRequestAnalyzer.RequestInfo;\n// Options for the OperationAuditor.\nClass OperationAuditorOptions;\n// \nClass S3AAuditConstants;\n// Class to help parse AWS S3 Logs.\nClass S3LogParser;\n// Various verbs in the S3 logs.\nClass S3LogVerbs;\n// This is in the AWS exception tree so that exceptions raised in the AWS SDK are correctly reported up.\nClass AuditFailureException;\n// The auditor has rejected the operation as forbidden/unavailable.\nClass AuditOperationRejectedException;\n", "des": "Support for auditing and ultimately tracing operations."}
{"index": 1025, "repo": "hadoop-aws-3.3.6", "code": "package impl\n\n// Activation callbacks.\nInterface NoopSpan.SpanActivationCallbacks;\n// Base class for the audit spans implementations..\nClass AbstractAuditSpanImpl;\n// This is a long-lived service which is created in S3A FS initialize (make it fast!) which provides context for tracking operations made to S3.\nClass AbstractOperationAuditor;\n// Thread management for the active audit.\nClass ActiveAuditManagerS3A;\n// The LoggingAuditor logs operations at DEBUG (in SDK Request) and in span lifecycle and S3 request class construction at TRACE.\nClass LoggingAuditor;\n// Simple No-op audit manager for use before a real audit chain is set up, and for testing.\nClass NoopAuditManagerS3A;\n// An audit service which returns the NoopSpan.\nClass NoopAuditor;\n// A minimal span with no direct side effects.\nClass NoopSpan;\n// Internal constants; not intended for public use, or for use by any external implementations.\nClass S3AInternalAuditConstants;\n", "des": "The internal implementations of auditing support."}
{"index": 1026, "repo": "hadoop-aws-3.3.6", "code": "package auth\n\n// Interface which can be implemented to allow initialization of any custom signers which may be used by the S3AFileSystem.\nInterface AwsSignerInitializer;\n// This class will be replaced by one that implements AWS SDK V2's AwsCredentialProvider as part of upgrading S3A to SDK V2.\nClass AbstractAWSCredentialProvider;\n// This class will be replaced by one that implements AWS SDK V2's AwsCredentialProvider as part of upgrading S3A to SDK V2.\nClass AbstractSessionCredentialsProvider;\n// A special set of null credentials which are not the anonymous class.\nClass AbstractSessionCredentialsProvider.NoCredentials;\n// This class will be replaced by one that implements AWS SDK V2's AwsCredentialProvider as part of upgrading S3A to SDK V2.\nClass AssumedRoleCredentialProvider;\n// This class will be replaced by one that implements AWS SDK V2's AwsCredentialProvider as part of upgrading S3A to SDK V2.\nClass IAMInstanceCredentialsProvider;\n// Class to bridge from the serializable/marshallabled MarshalledCredentialBinding class to/from AWS classes.\nClass MarshalledCredentialBinding;\n// AWS credential provider driven from marshalled session/full credentials (full, simple session or role).\nClass MarshalledCredentialProvider;\n// Stores the credentials for a session or for a full login.\nClass MarshalledCredentials;\n// Jackson Role Model for Role Properties, for API clients and tests.\nClass RoleModel;\n// A policy is one or more statements.\nClass RoleModel.Policy;\n// Any element in a role.\nClass RoleModel.RoleElt;\n// A single statement.\nClass RoleModel.Statement;\n// Operations, statements and policies covering the operations needed to work with S3.\nClass RolePolicies;\n// Class to handle custom signers.\nClass SignerManager;\n// Factory for creating STS Clients.\nClass STSClientFactory;\n// STS client connection with retries.\nClass STSClientFactory.STSClient;\n// Enumeration of credential types for use in validation methods.\nEnum MarshalledCredentials.CredentialTypeRequired;\n// Effect options.\nEnum RoleModel.Effects;\n// A specific subclass of AmazonClientException which is used in the S3A retry policy to fail fast when there is any authentication problem.\nClass NoAuthWithAWSException;\n", "des": "Authentication and permissions support."}
{"index": 1027, "repo": "hadoop-aws-3.3.6", "code": "package delegation\n\n// Interface for providers of AWS policy for accessing data.\nInterface AWSPolicyProvider;\n// All operations used for delegation which aren't in the store context.\nInterface DelegationOperations;\n// Interface for S3A Delegation Token access.\nInterface DelegationTokenProvider;\n// An AbstractDelegationTokenBinding implementation is a class which handles the binding of its underlying authentication mechanism to the Hadoop Delegation token mechanism.\nClass AbstractDelegationTokenBinding;\n// This is the base class for both the delegation binding code and the back end service created; allows for shared methods across both.\nClass AbstractDTService;\n// An S3A Delegation Token Identifier: contains the information needed to talk to S3A.\nClass AbstractS3ATokenIdentifier;\n// All the constants related to delegation tokens.\nClass DelegationConstants;\n// These support operations on EncryptionSecrets which use the AWS SDK operations.\nClass EncryptionSecretOperations;\n// Encryption options in a form which can serialized or marshalled as a hadoop Writeable.\nClass EncryptionSecrets;\n// Full credentials: they are simply passed as-is, rather than converted to a session.\nClass FullCredentialsTokenBinding;\n// The full credentials payload is the same of that for a session token, but a different token kind is used.\nClass FullCredentialsTokenIdentifier;\n// Role Token support requests an explicit role and automatically restricts that role to the given policy of the binding.\nClass RoleTokenBinding;\n// Role token identifier.\nClass RoleTokenIdentifier;\n// Support for creating a DT from a filesystem.\nClass S3ADelegationTokens;\n// A DT fetcher for S3A.\nClass S3ADtFetcher;\n// The session token DT binding: creates an AWS session token for the DT, extracts and serves it up afterwards.\nClass SessionTokenBinding;\n// A token identifier which contains a set of AWS session credentials, credentials which will be valid until they expire.\nClass SessionTokenIdentifier;\n// Access levels.\nEnum AWSPolicyProvider.AccessLevel;\n// How will tokens be issued on request? The S3ADelegationTokens.TokenIssuingPolicy.RequestNewToken policy does not guarantee that a tokens can be created, only that an attempt will be made to request one.\nEnum S3ADelegationTokens.TokenIssuingPolicy;\n// General IOException for Delegation Token issues.\nClass DelegationTokenIOException;\n", "des": "Extensible delegation token support for the S3A connector."}
{"index": 1028, "repo": "hadoop-aws-3.3.6", "code": "package commit\n\n// Abstract base class for S3A committers; allows for any commonality between different architectures.\nClass AbstractS3ACommitter;\n// State of the active commit operation.\nClass AbstractS3ACommitter.ActiveCommit;\n// Dynamically create the output committer based on subclass type and settings.\nClass AbstractS3ACommitterFactory;\n// Constants for working with committers.\nClass CommitConstants;\n// Statistic names for committers.\nClass CommitterStatisticNames;\n// Static utility methods related to S3A commitment processing, both staging and magic.\nClass CommitUtils;\n// These are internal constants not intended for public use.\nClass InternalCommitterConstants;\n// Adds the code needed for S3A to support magic committers.\nClass MagicCommitIntegration;\n// Operations on (magic) paths.\nClass MagicCommitPaths;\n// Multipart put tracker.\nClass PutTracker;\n// The S3A committer factory which chooses the committer based on the specific option chosen in a per-bucket basis from the property CommitConstants.FS_S3A_COMMITTER_NAME.\nClass S3ACommitterFactory;\n// Enumeration of Job UUID source.\nEnum AbstractS3ACommitter.JobUUIDSource;\n// Path exception to use for various commit issues.\nClass PathCommitException;\n// Exception raised on validation failures; kept as an IOException for consistency with other failures.\nClass ValidationFailure;\n", "des": "Support for committing the output of analytics jobs directly to S3."}
{"index": 1029, "repo": "hadoop-aws-3.3.6", "code": "package files\n\n// Persistent format for multiple pending commits.\nClass PendingSet;\n// Class for single/multiple commit data structures.\nClass PersistentCommitData<T extends PersistentCommitData>;\n// This is the serialization format for uploads yet to be committed.\nClass SinglePendingCommit;\n// Summary data saved into a _SUCCESS marker file.\nClass SuccessData;\n", "des": "Persistent data formats for the committers."}
{"index": 1030, "repo": "hadoop-aws-3.3.6", "code": "package impl\n\n// Class to track/update context information to set in threads.\nClass AuditContextUpdater;\n// Commit context.\nClass CommitContext;\n// The implementation of the various actions a committer needs.\nClass CommitOperations;\n// A holder for a possible IOException; the call CommitOperations.MaybeIOE.maybeRethrow() will throw any exception passed into the constructor, and be a no-op if none was.\nClass CommitOperations.MaybeIOE;\n// These are commit utility methods which import classes from hadoop-mapreduce, and so only work when that module is on the classpath.\nClass CommitUtilsWithMR;\n", "des": "Internal classes which make use of mapreduce code."}
{"index": 1031, "repo": "hadoop-aws-3.3.6", "code": "package magic\n\n// Put tracker for Magic commits.\nClass MagicCommitTracker;\n// This is a dedicated committer which requires the \"magic\" directory feature of the S3A Filesystem to be enabled; it then uses paths for task and job attempts in magic paths, so as to ensure that the final output goes direct to the destination directory.\nClass MagicS3GuardCommitter;\n// Factory for the Magic committer.\nClass MagicS3GuardCommitterFactory;\n", "des": "This is the \"Magic\" committer and support."}
{"index": 1032, "repo": "hadoop-aws-3.3.6", "code": "package staging\n\n// This commits to a directory.\nClass DirectoryStagingCommitter;\n// Factory for the Directory committer.\nClass DirectoryStagingCommitterFactory;\n// Partitioned committer.\nClass PartitionedStagingCommitter;\n// Factory for the PartitionedStagingCommitter.\nClass PartitionedStagingCommitterFactory;\n// Path operations for the staging committers.\nClass Paths;\n// Committer based on the contributed work of the Netflix multipart committers. The working directory of each task is actually under a temporary path in the local filesystem; jobs write directly into it.\nClass StagingCommitter;\n// Internal staging committer constants.\nClass StagingCommitterConstants;\n// Factory for the staging committer.\nClass StagingCommitterFactory;\n// Enum of conflict resolution algorithms.\nEnum ConflictResolution;\n", "des": "The staging committers."}
{"index": 1033, "repo": "hadoop-aws-3.3.6", "code": "package impl\n\n// An interface to implement for providing accessors to S3AFileSystem-level API calls.\nInterface ContextAccessors;\n// Define the contract for CopyFromLocalOperation to interact with any external resources.\nInterface CopyFromLocalOperation.CopyFromLocalOperationCallbacks;\n// Callbacks for creating the file.\nInterface CreateFileBuilder.CreateFileBuilderCallbacks;\n// Interface for Directory Marker policies to implement.\nInterface DirectoryPolicy;\n// Callbacks used by the operation.\nInterface GetContentSummaryOperation.GetContentSummaryCallbacks;\n// \nInterface HeaderProcessing.HeaderProcessingCallbacks;\n// These are all the callbacks which Listing operations need, derived from the actual appropriate S3AFileSystem methods.\nInterface ListingOperationCallbacks;\n// Callbacks used by mkdir.\nInterface MkdirOperation.MkdirCallbacks;\n// These are all the callbacks which the RenameOperation and DeleteOperation operations need, derived from the appropriate S3AFileSystem methods.\nInterface OperationCallbacks;\n// This is a callback for anything to \"prepare\" every request after creation.\nInterface RequestFactoryImpl.PrepareRequest;\n// Base class of operations in the store.\nClass AbstractStoreOperation;\n// Context for any active operation.\nClass ActiveOperationContext;\n// Handler for bulk delete retry events.\nClass BulkDeleteRetryHandler;\n// A bridge from Callable to Supplier; catching exceptions raised by the callable and wrapping them as appropriate.\nClass CallableSupplier<T>;\n// Object change detection policy.\nClass ChangeDetectionPolicy;\n// Change tracking for input streams: the version ID or etag of the object is tracked and compared on open/re-open.\nClass ChangeTracker;\n// This interacts with the Shaded httpclient library used in the full AWS SDK.\nClass ConfigureShadedAWSSocketFactory;\n// Implementation of CopyFromLocalOperation.\nClass CopyFromLocalOperation;\n// Extracts the outcome of a TransferManager-executed copy operation.\nClass CopyOutcome;\n// Builder used in create file; takes a callback to the operation to create the file.\nClass CreateFileBuilder;\n// Create file options as built from the builder set or the classic entry point.\nClass CreateFileBuilder.CreateFileOptions;\n// Implementation of the delete() operation.\nClass DeleteOperation;\n// Implementation of directory policy.\nClass DirectoryPolicyImpl;\n", "des": "Implementation classes private to the S3A store."}
{"index": 1034, "repo": "hadoop-aws-3.3.6", "code": "package prefetch\n\n// Provides read access to S3 file one block at a time.\nClass S3ABlockManager;\n// Provides access to S3 file one block at a time.\nClass S3ACachingBlockManager;\n// Provides an InputStream that allows reading from an S3 file.\nClass S3ACachingInputStream;\n// Provides an InputStream that allows reading from an S3 file.\nClass S3AInMemoryInputStream;\n// Enhanced InputStream for reading from S3.\nClass S3APrefetchingInputStream;\n// Provides an InputStream that allows reading from an S3 file.\nClass S3ARemoteInputStream;\n// Encapsulates low level interactions with S3 object on AWS.\nClass S3ARemoteObject;\n// Provides functionality to read S3 file one block at a time.\nClass S3ARemoteObjectReader;\n", "des": "High performance s3 input stream which reads in blocks and can cache blocks in the local filesystem."}
{"index": 1035, "repo": "hadoop-aws-3.3.6", "code": "package s3guard\n\n// Logic for integrating MetadataStore with S3A.\nClass S3Guard;\n// CLI to manage S3Guard Metadata Store.\nClass S3GuardTool;\n// Get info about a bucket and its S3Guard integration status.\nClass S3GuardTool.BucketInfo;\n", "des": "This package contained S3Guard support; now the feature has been removed, its contents are limited to the public command line and some methods still used by directory marker code."}
{"index": 1036, "repo": "hadoop-aws-3.3.6", "code": "package select\n\n// Constants for internal use in the org.apache.hadoop.fs.s3a module itself.\nClass InternalSelectConstants;\n// Class to do the S3 select binding and build a select request from the supplied arguments/configuration.\nClass SelectBinding;\n// Options related to S3 Select.\nClass SelectConstants;\n// An input stream for S3 Select return values.\nClass SelectInputStream;\n// This is a CLI tool for the select operation, which is available through the S3Guard command.\nClass SelectTool;\n", "des": "Support for S3 Select."}
{"index": 1037, "repo": "hadoop-aws-3.3.6", "code": "package statistics\n\n// Block output stream statistics.\nInterface BlockOutputStreamStatistics;\n// Interface for change tracking statistics.\nInterface ChangeTrackerStatistics;\n// Statistics for S3A committers.\nInterface CommitterStatistics;\n// This is the foundational API for collecting S3A statistics.\nInterface CountersAndGauges;\n// Instrumentation exported to for S3A Delegation Token support.\nInterface DelegationTokenStatistics;\n// Interface for PUT tracking.\nInterface PutTrackerStatistics;\n// Statistics updated by a S3AInputStream during its use.\nInterface S3AInputStreamStatistics;\n// Statistics for the S3A multipart uploader.\nInterface S3AMultipartUploaderStatistics;\n// Base Interface for S3A Statistics, as a way of managing them.\nInterface S3AStatisticInterface;\n// This is the statistics context for ongoing operations in S3A.\nInterface S3AStatisticsContext;\n// interface to receive statistics events from the AWS SDK by way of AwsStatisticsCollector.\nInterface StatisticsFromAwsSdk;\n// Enum of statistic types.\nEnum StatisticTypeEnum;\n", "des": "Statistics collection for the S3A connector: interfaces."}
{"index": 1038, "repo": "hadoop-aws-3.3.6", "code": "package impl\n\n// This is the interface which an integration source must implement for the integration.\nInterface BondedS3AStatisticsContext.S3AFSStatisticsSource;\n// Base class for implementing IOStatistics sources in the S3 module.\nClass AbstractS3AStatisticsSource;\n// Collect statistics from the AWS SDK and forward to an instance of StatisticsFromAwsSdk and thence into the S3A statistics.\nClass AwsStatisticsCollector;\n// An S3A statistics context which is bonded to a S3AInstrumentation instance -inevitably that of an S3AFileSystem instance.\nClass BondedS3AStatisticsContext;\n// A change tracker which increments an atomic long.\nClass CountingChangeTracker;\n// Special statistics context, all of whose context operations are no-ops.\nClass EmptyS3AStatisticsContext;\n// Multipart Uploader.\nClass EmptyS3AStatisticsContext.EmptyMultipartUploaderStatistics;\n// Implementation of the uploader statistics.\nClass S3AMultipartUploaderStatisticsImpl;\n// Hook up AWS SDK Statistics to the S3 counters.\nClass StatisticsFromAwsSdkImpl;\n", "des": "Statistics collection for the S3A connector: implementation."}
{"index": 1039, "repo": "hadoop-aws-3.3.6", "code": "package tools\n\n// Operations which must be offered by the store for MarkerTool.\nInterface MarkerToolOperations;\n// Audit an S3 bucket for directory markers.\nClass MarkerTool;\n// Result of a call of MarkerTool.purgeMarkers(DirMarkerTracker, int); included in MarkerTool.ScanResult so must share visibility.\nClass MarkerTool.MarkerPurgeSummary;\n// Arguments for the scan.\nClass MarkerTool.ScanArgs;\n// Builder of the scan arguments.\nClass MarkerTool.ScanArgsBuilder;\n// Result of the scan operation.\nClass MarkerTool.ScanResult;\n// Implement the marker tool operations by forwarding to the OperationCallbacks instance provided in the constructor.\nClass MarkerToolOperationsImpl;\n", "des": "S3A Command line tools independent of S3Guard."}
{"index": 1040, "repo": "hadoop-aws-3.3.6", "code": "package s3native\n\n// Replaced by the S3A client.\nClass NativeS3FileSystem;\n// Class to aid logging in to S3 endpoints.\nClass S3xLoginHelper;\n// Simple tuple of login details.\nClass S3xLoginHelper.Login;\n", "des": "A distributed implementation of FileSystem for reading and writing files on Amazon S3."}
{"index": 1041, "repo": "commons-io-2.13.0", "code": "package io\n\n// Byte Order Mark (BOM) representation.\nClass ByteOrderMark;\n// Converts Strings to ByteOrder instances.\nClass ByteOrderParser;\n// Charsets required of every implementation of the Java platform.\nClass Charsets;\n// Use IOUtils.\nClass CopyUtils;\n// Apache Commons IO no longer uses this class.\nClass DirectoryWalker<T>;\n// Helps with different endian systems.\nClass EndianUtils;\n// Use FileCleaningTracker\nClass FileCleaner;\n// Keeps track of files awaiting deletion, and deletes them when an associated marker object is reclaimed by the garbage collector.\nClass FileCleaningTracker;\n// Strategy for deleting files.\nClass FileDeleteStrategy;\n// General file name and file path manipulation utilities.\nClass FilenameUtils;\n// As of 2.6 deprecated without replacement.\nClass FileSystemUtils;\n// General file manipulation utilities.\nClass FileUtils;\n// Dumps data in hexadecimal format.\nClass HexDump;\n// General IO stream manipulation utilities.\nClass IOUtils;\n// An Iterator over the lines in a Reader.\nClass LineIterator;\n// Works on RandomAccessFile.\nClass RandomAccessFiles;\n// Helps work with threads.\nClass ThreadUtils;\n// Abstracts an OS' file system details, currently supporting the single use case of converting a file name String to a legal file name with FileSystem.toLegalFileName(String, char).\nEnum FileSystem;\n// Enumeration of IO case sensitivity.\nEnum IOCase;\n// Access modes and factory methods for RandomAccessFile.\nEnum RandomAccessFileMode;\n// Enumerates standard line separators: StandardLineSeparator.CR, StandardLineSeparator.CRLF, StandardLineSeparator.LF.\nEnum StandardLineSeparator;\n// CancelException is thrown in DirectoryWalker to cancel the current processing.\nClass DirectoryWalker.CancelException;\n// Indicates that a file already exists.\nClass FileExistsException;\n// An IOException based on a list of Throwable causes.\nClass IOExceptionList;\n// (since 2.5) use IOException instead\nClass IOExceptionWithCause;\n// A IOException associated with a source index.\nClass IOIndexedException;\n// An IOException decorator that adds a serializable tag to the wrapped exception.\nClass TaggedIOException;\n", "des": "Provides classes for working with streams, readers, writers and files."}
{"index": 1042, "repo": "commons-io-2.13.0", "code": "package build\n\n// Abstracts the origin of data for builders like a File, Path, Reader, Writer, InputStream, OutputStream, and URI.\nClass AbstractOrigin<T,B extends AbstractOrigin<T,B>>;\n// A byte[] origin.\nClass AbstractOrigin.ByteArrayOrigin;\n// A CharSequence origin.\nClass AbstractOrigin.CharSequenceOrigin;\n// A File origin.\nClass AbstractOrigin.FileOrigin;\n// An InputStream origin.\nClass AbstractOrigin.InputStreamOrigin;\n// An OutputStream origin.\nClass AbstractOrigin.OutputStreamOrigin;\n// A Path origin.\nClass AbstractOrigin.PathOrigin;\n// An Reader origin.\nClass AbstractOrigin.ReaderOrigin;\n// A URI origin.\nClass AbstractOrigin.URIOrigin;\n// An Writer origin.\nClass AbstractOrigin.WriterOrigin;\n// Abstracts building an instance of T.\nClass AbstractOriginSupplier<T,B extends AbstractOriginSupplier<T,B>>;\n// Abstracts building a typed instance of T.\nClass AbstractStreamBuilder<T,B extends AbstractStreamBuilder<T,B>>;\n// Abstracts supplying an instance of T.\nClass AbstractSupplier<T,B extends AbstractSupplier<T,B>>;\n", "des": "Provides classes to implement IO builders."}
{"index": 1043, "repo": "commons-io-2.13.0", "code": "package charset\n\n// Works with CharsetDecoder.\nClass CharsetDecoders;\n// Works with CharsetEncoder.\nClass CharsetEncoders;\n", "des": "Provides classes to work with code from java.nio.charset."}
{"index": 1044, "repo": "commons-io-2.13.0", "code": "package comparator\n\n// Compare two files using a set of delegate file Comparator.\nClass CompositeFileComparator;\n// Compares two files using the default File.compareTo(File) method.\nClass DefaultFileComparator;\n// Compare two files using the File.isDirectory() method.\nClass DirectoryFileComparator;\n// Compare the file name extensions for order (see FilenameUtils.getExtension(String)).\nClass ExtensionFileComparator;\n// Compare the last modified date/time of two files for order (see FileUtils.lastModifiedUnchecked(File)).\nClass LastModifiedFileComparator;\n// Compare the names of two files for order (see File.getName()).\nClass NameFileComparator;\n// Compare the path of two files for order (see File.getPath()).\nClass PathFileComparator;\n// Compare the length/size of two files for order (see File.length() and FileUtils.sizeOfDirectory(File)).\nClass SizeFileComparator;\n", "des": "Provides various Comparator implementations for Files."}
{"index": 1045, "repo": "commons-io-2.13.0", "code": "package file\n\n// Counts using a number.\nInterface Counters.Counter;\n// Counts files, directories, and sizes, as a visit proceeds.\nInterface Counters.PathCounters;\n// An object that configures how to delete a file.\nInterface DeleteOption;\n// A filter for Paths.\nInterface PathFilter;\n// A FileVisitor typed to a Path.\nInterface PathVisitor;\n// Accumulates normalized paths during visitation.\nClass AccumulatorPathVisitor;\n// Deletes files but not directories as a visit proceeds.\nClass CleaningPathVisitor;\n// Copies a source directory to a target directory.\nClass CopyDirectoryVisitor;\n// Provides counters for files, directories, and sizes, as a visit proceeds.\nClass Counters;\n// Counts files, directories, and sizes, as a visit proceeds.\nClass CountingPathVisitor;\n// Deletes files and directories as a visit proceeds.\nClass DeletingPathVisitor;\n// A DirectoryStream.Filter that delegates to a PathFilter.\nClass DirectoryStreamFilter;\n// Delegates to Files to uncheck calls by throwing UncheckedIOException instead of IOException.\nClass FilesUncheck;\n// A noop path visitor.\nClass NoopPathVisitor;\n// NIO Path utilities.\nClass PathUtils;\n// A SimpleFileVisitor typed to a Path.\nClass SimplePathVisitor;\n// Defines the standard delete options.\nEnum StandardDeleteOption;\n", "des": "Provides extensions in the realm of java.nio.file."}
{"index": 1046, "repo": "commons-io-2.13.0", "code": "package attribute\n\n// Helps use FileTime and interoperate Date and NTFS times.\nClass FileTimes;\n", "des": "Provides help using java.nio.file.attribute types."}
{"index": 1047, "repo": "commons-io-2.13.0", "code": "package spi\n\n// Helps to work with FileSystemProvider.\nClass FileSystemProviders;\n", "des": "Provides extensions in the realm of java.nio.file.spi."}
{"index": 1048, "repo": "commons-io-2.13.0", "code": "package filefilter\n\n// Defines operations for conditional file filters.\nInterface ConditionalFileFilter;\n// An interface which brings the FileFilter, FilenameFilter, and PathFilter interfaces together.\nInterface IOFileFilter;\n// Abstracts the implementation of the FileFilter (IO), FilenameFilter (IO), PathFilter (NIO) interfaces via our own IOFileFilter interface.\nClass AbstractFileFilter;\n// Filters files based on a cutoff time, can filter either newer files or files equal to or older.\nClass AgeFileFilter;\n// A FileFilter providing conditional AND logic across a list of file filters.\nClass AndFileFilter;\n// This filter accepts Files that can be executed.\nClass CanExecuteFileFilter;\n// This filter accepts Files that can be read.\nClass CanReadFileFilter;\n// This filter accepts Files that can be written to.\nClass CanWriteFileFilter;\n// This class turns a Java FileFilter or FilenameFilter into an IO FileFilter.\nClass DelegateFileFilter;\n// This filter accepts Files that are directories.\nClass DirectoryFileFilter;\n// This filter accepts files or directories that are empty.\nClass EmptyFileFilter;\n// A file filter that always returns false.\nClass FalseFileFilter;\n// Accepts only an exact File object match.\nClass FileEqualsFileFilter;\n// This filter accepts Files that are files (not directories).\nClass FileFileFilter;\n// Useful utilities for working with file filters.\nClass FileFilterUtils;\n// This filter accepts Files that are hidden.\nClass HiddenFileFilter;\n// File filter for matching files containing a \"magic number\".\nClass MagicNumberFileFilter;\n// Filters file names for a certain name.\nClass NameFileFilter;\n// This filter produces a logical NOT of the filters specified.\nClass NotFileFilter;\n// A FileFilter providing conditional OR logic across a list of file filters.\nClass OrFileFilter;\n// Accepts only an exact Path object match.\nClass PathEqualsFileFilter;\n// A file filter backed by a path visitor.\nClass PathVisitorFileFilter;\n// Filters file names for a certain prefix.\nClass PrefixFileFilter;\n// Filters files using supplied regular expression(s).\nClass RegexFileFilter;\n// Filters files based on size, can filter either smaller files or files equal to or larger than a given threshold.\nClass SizeFileFilter;\n// Filters files based on the suffix (what the file name ends with).\nClass SuffixFileFilter;\n", "des": "Provides the an interface IOFileFilter that combines both FileFilter and FilenameFilter."}
{"index": 1049, "repo": "commons-io-2.13.0", "code": "package function\n\n// Like BaseStream but throws IOException.\nInterface IOBaseStream<T,S extends IOBaseStream<T,S,B>,B extends BaseStream<T,B>>;\n// Like BiConsumer but throws IOException.\nInterface IOBiConsumer<T,U>;\n// Like BiFunction but throws IOException.\nInterface IOBiFunction<T,U,R>;\n// Like BinaryOperator but throws IOException.\nInterface IOBinaryOperator<T>;\n// Like Comparator but throws IOException.\nInterface IOComparator<T>;\n// Like Consumer but throws IOException.\nInterface IOConsumer<T>;\n// Like Function but throws IOException.\nInterface IOFunction<T,R>;\n// Like Iterator but throws IOException.\nInterface IOIterator<E>;\n// Like Predicate but throws IOException.\nInterface IOPredicate<T>;\n// Represents a function that accepts four arguments and produces a result.\nInterface IOQuadFunction<T,U,V,W,R>;\n// Like Runnable but throws IOException.\nInterface IORunnable;\n// Like Spliterator but throws IOException.\nInterface IOSpliterator<T>;\n// Like Stream but throws IOException.\nInterface IOStream<T>;\n// Like Supplier but throws IOException.\nInterface IOSupplier<T>;\n// Like BiConsumer but throws IOException.\nInterface IOTriConsumer<T,U,V>;\n// Represents a function that accepts three arguments and produces a result.\nInterface IOTriFunction<T,U,V,R>;\n// Like UnaryOperator but throws IOException.\nInterface IOUnaryOperator<T>;\n// Unchecks calls by throwing UncheckedIOException instead of IOException.\nClass Uncheck;\n", "des": "Provides IO-only related functional interfaces for lambda expressions and method references."}
{"index": 1050, "repo": "commons-io-2.13.0", "code": "package input\n\n// Bridges access to a resource for random access, normally a file.\nInterface Tailer.RandomAccessResourceBridge;\n// A tailable resource like a file.\nInterface Tailer.Tailable;\n// Listener for events from a Tailer.\nInterface TailerListener;\n// A filter reader that filters out characters where subclasses decide which characters to filter out.\nClass AbstractCharacterFilterReader;\n// Proxy stream that closes and discards the underlying stream as soon as the end of input has been reached or when the stream is explicitly closed.\nClass AutoCloseInputStream;\n// Builds a new AutoCloseInputStream instance.\nClass AutoCloseInputStream.Builder;\n// This class is used to wrap a stream that includes an encoded ByteOrderMark as its first bytes.\nClass BOMInputStream;\n// Builds a new BOMInputStream instance.\nClass BOMInputStream.Builder;\n// Reads bytes up to a maximum length, if its count goes above that, it stops.\nClass BoundedInputStream;\n// A reader that imposes a limit to the number of characters that can be read from an underlying reader, returning EOF when this limit is reached, regardless of state of underlying reader.\nClass BoundedReader;\n// Always throws an IOException from all the InputStream methods where the exception is declared.\nClass BrokenInputStream;\n// Always throws an IOException from all the Reader methods where the exception is declared.\nClass BrokenReader;\n// InputStream implementation which uses direct buffer to read a file to avoid extra copy of data between Java and native memory which happens when using BufferedInputStream.\nClass BufferedFileChannelInputStream;\n// Builds a new BufferedFileChannelInputStream instance.\nClass BufferedFileChannelInputStream.Builder;\n// A filter reader that filters out a given character represented as an int code point, handy to remove known junk characters from CSV files for example.\nClass CharacterFilterReader;\n// A filter reader that removes a given set of characters represented as int code points, handy to remove known junk characters from CSV files for example.\nClass CharacterSetFilterReader;\n// Implements an InputStream to read from String, StringBuffer, StringBuilder or CharBuffer.\nClass CharSequenceInputStream;\n// Builds a new CharSequenceInputStream instance.\nClass CharSequenceInputStream.Builder;\n// Reader implementation that can read from String, StringBuffer, StringBuilder or CharBuffer.\nClass CharSequenceReader;\n", "des": "Provides implementations of input classes, such as InputStream and Reader."}
{"index": 1051, "repo": "commons-io-2.13.0", "code": "package buffer\n\n// Implements a buffered input stream, which is internally based on a CircularByteBuffer.\nClass CircularBufferInputStream;\n// A buffer, which doesn't need reallocation of byte arrays, because it reuses a single byte array.\nClass CircularByteBuffer;\n// Implements a buffered input stream, which allows to peek into the buffers first bytes.\nClass PeekableInputStream;\n", "des": "Provides implementations of buffered input classes, such as CircularBufferInputStream and PeekableInputStream."}
{"index": 1052, "repo": "commons-io-2.13.0", "code": "package monitor\n\n// Receives events of file system modifications.\nInterface FileAlterationListener;\n// Convenience FileAlterationListener implementation that does nothing.\nClass FileAlterationListenerAdaptor;\n// A runnable that spawns a monitoring thread triggering any registered FileAlterationObserver at a specified interval.\nClass FileAlterationMonitor;\n// FileAlterationObserver represents the state of files below a root directory, checking the file system and notifying listeners of create, change or delete events.\nClass FileAlterationObserver;\n// The state of a file or directory, capturing the following File attributes at a point in time.\nClass FileEntry;\n", "des": "Provides a component for monitoring file system events (directory and file create, update and delete events)."}
{"index": 1053, "repo": "commons-io-2.13.0", "code": "package output\n\n// Constructor for an InputStream subclass.\nInterface AbstractByteArrayOutputStream.InputStreamConstructor<T extends InputStream>;\n// An Appendable that throws UncheckedIOException instead of IOException.\nInterface UncheckedAppendable;\n// This is the base class for implementing an output stream in which the data is written into a byte array.\nClass AbstractByteArrayOutputStream;\n// OutputStream implementation that writes the data to an Appendable Object.\nClass AppendableOutputStream<T extends Appendable>;\n// Writer implementation that writes the data to an Appendable Object.\nClass AppendableWriter<T extends Appendable>;\n// Broken output stream.\nClass BrokenOutputStream;\n// Always throws an IOException from all Writer methods.\nClass BrokenWriter;\n// Implements a ThreadSafe version of AbstractByteArrayOutputStream using instance synchronization.\nClass ByteArrayOutputStream;\n// OutputStream which breaks larger output blocks into chunks.\nClass ChunkedOutputStream;\n// Builds a new UnsynchronizedByteArrayOutputStream instance.\nClass ChunkedOutputStream.Builder;\n// Writer which breaks larger output blocks into chunks.\nClass ChunkedWriter;\n// Throws an IOException on all attempts to write to the stream.\nClass ClosedOutputStream;\n// Throws an IOException on all attempts to write with ClosedWriter.close() implemented as a noop.\nClass ClosedWriter;\n// Proxy stream that prevents the underlying output stream from being closed.\nClass CloseShieldOutputStream;\n// Proxy writer that prevents the underlying writer from being closed.\nClass CloseShieldWriter;\n// A decorating output stream that counts the number of bytes that have passed through the stream so far.\nClass CountingOutputStream;\n// An output stream which will retain data in memory until a specified threshold is reached, and only then commit it to disk.\nClass DeferredFileOutputStream;\n// Builds a new DeferredFileOutputStream instance.\nClass DeferredFileOutputStream.Builder;\n// Forwards data to a stream that has been associated with this thread.\nClass DemuxOutputStream;\n// Writer of files that allows the encoding to be set.\nClass FileWriterWithEncoding;\n// Builds a new FileWriterWithEncoding instance.\nClass FileWriterWithEncoding.Builder;\n// Abstract class for writing filtered character streams to a Collection of writers.\nClass FilterCollectionWriter;\n// FileWriter that will create and honor lock files to allow simple cross thread file lock handling.\nClass LockableFileWriter;\n", "des": "Provides implementations of output classes, such as OutputStream and Writer."}
{"index": 1054, "repo": "commons-io-2.13.0", "code": "package serialization\n\n// An object that matches a Class name to a condition.\nInterface ClassNameMatcher;\n// An ObjectInputStream that's restricted to deserialize a limited set of classes.\nClass ValidatingObjectInputStream;\n", "des": "Provides a framework for controlling the deserialization of classes."}
{"index": 1055, "repo": "commons-rdf-api-0.5.0", "code": "package api\n\n// A RDF-1.1 Blank Node, as defined by RDF-1.1 Concepts and Abstract Syntax, a W3C Recommendation published on 25 February 2014. Note: Blank nodes are disjoint from IRIs and literals.\nInterface BlankNode;\n// This interface represents the RDFTerms that may be used in the subject position of an RDF-1.1 Triple as well as the graph name position of a Quad.\nInterface BlankNodeOrIRI;\n// An RDF 1.1 Dataset, a set of RDF quads, as defined by RDF-1.1 Concepts and Abstract Syntax, a W3C Recommendation published on 25 February 2014.\nInterface Dataset;\n// An RDF 1.1 Graph, a set of RDF triples, as defined by RDF-1.1 Concepts and Abstract Syntax, a W3C Recommendation published on 25 February 2014.\nInterface Graph;\n// A \"graph-like\" interface that contains TripleLike statements.\nInterface GraphLike<T extends TripleLike>;\n// An RDF-1.1 IRI, as defined by RDF-1.1 Concepts and Abstract Syntax, a W3C Recommendation published on 25 February 2014.\nInterface IRI;\n// An RDF-1.1 Literal, as defined by RDF-1.1 Concepts and Abstract Syntax, a W3C Recommendation published on 25 February 2014.\nInterface Literal;\n// A Quad is a statement in a RDF-1.1 Dataset, as defined by RDF-1.1 Concepts and Abstract Syntax, a W3C Working Group Note published on 25 February 2014.\nInterface Quad;\n// A generalised \"quad-like\" interface, extended by Quad.\nInterface QuadLike<G extends RDFTerm>;\n// A RDF implementation.\nInterface RDF;\n// An RDF syntax, e.g.\nInterface RDFSyntax;\n// An RDF-1.1 Term, as defined by RDF-1.1 Concepts and Abstract Syntax, a W3C Recommendation published on 25 February 2014.\nInterface RDFTerm;\n// \nInterface RDFTermFactory;\n// An RDF-1.1 Triple, as defined by RDF-1.1 Concepts and Abstract Syntax, a W3C Recommendation published on 25 February 2014.\nInterface Triple;\n", "des": "Commons RDF, a common library of RDF 1.1 concepts."}
{"index": 1056, "repo": "commons-rdf-api-0.5.0", "code": "package experimental\n\n// Parse an RDF source into a target (e.g.\nInterface RDFParser;\n// The result of RDFParser.parse() indicating parsing completed.\nInterface RDFParser.ParseResult;\n", "des": "Experimental Commons RDF features."}
{"index": 1057, "repo": "avro-1.11.2", "code": "package avro\n\n// Factory interface and SPI for logical types.\nInterface LogicalTypes.LogicalTypeFactory;\n// An interface for validating the compatibility of a single schema against another.\nInterface SchemaValidationStrategy;\n// A SchemaValidator has one method, which validates that a Schema is compatible with the other schemas provided.\nInterface SchemaValidator;\n// Conversion between generic and logical type instances.\nClass Conversion<T>;\n// \nClass Conversions;\n// \nClass Conversions.DecimalConversion;\n// \nClass Conversions.UUIDConversion;\n// Base class for objects that have JSON-valued properties.\nClass JsonProperties;\n// \nClass JsonProperties.Null;\n// Logical types provides an opt-in way to extend Avro's types.\nClass LogicalType;\n// \nClass LogicalTypes;\n// Date represents a date without a time\nClass LogicalTypes.Date;\n// Decimal represents arbitrary-precision fixed-scale decimal numbers\nClass LogicalTypes.Decimal;\n// \nClass LogicalTypes.LocalTimestampMicros;\n// \nClass LogicalTypes.LocalTimestampMillis;\n// TimeMicros represents a time in microseconds without a date\nClass LogicalTypes.TimeMicros;\n// TimeMillis represents a time in milliseconds without a date\nClass LogicalTypes.TimeMillis;\n// TimestampMicros represents a date and time in microseconds\nClass LogicalTypes.TimestampMicros;\n// TimestampMillis represents a date and time in milliseconds\nClass LogicalTypes.TimestampMillis;\n// A set of messages forming an application protocol.\nClass Protocol;\n// Encapsulate schema-resolution logic in an easy-to-consume representation.\nClass Resolver;\n// An abstract class for an action to be taken to resolve a writer's schema (found in public instance variable writer) against a reader's schema (in reader).\nClass Resolver.Action;\n// Used for array and map schemas: the public instance variable elementAction contains the resolving action needed for the element type of an array or value top of a map.\nClass Resolver.Container;\n// In this case, there's nothing to be done for resolution: the two schemas are effectively the same.\nClass Resolver.DoNothing;\n// Contains information needed to resolve enumerations.\nClass Resolver.EnumAdjust;\n// In this case there is an error.\nClass Resolver.ErrorAction;\n", "des": "Avro kernel classes."}
{"index": 1058, "repo": "avro-1.11.2", "code": "package data\n\n// Interface for error builders\nInterface ErrorBuilder<T>;\n// Interface for record builders\nInterface RecordBuilder<T>;\n// Utilities for reading and writing arbitrary Json data in Avro format.\nClass Json;\n// DatumReader for arbitrary Json data using the object model described in JsonProperties.\nClass Json.ObjectReader;\n// DatumWriter for arbitrary Json data using the object model described in JsonProperties.\nClass Json.ObjectWriter;\n// Abstract base class for RecordBuilder implementations.\nClass RecordBuilderBase<T extends IndexedRecord>;\n// \nClass TimeConversions;\n// \nClass TimeConversions.DateConversion;\n// \nClass TimeConversions.LocalTimestampMicrosConversion;\n// \nClass TimeConversions.LocalTimestampMillisConversion;\n// \nClass TimeConversions.TimeMicrosConversion;\n// \nClass TimeConversions.TimeMillisConversion;\n// \nClass TimeConversions.TimestampMicrosConversion;\n// \nClass TimeConversions.TimestampMillisConversion;\n", "des": "Interfaces and base classes shared by generic, specific and reflect."}
{"index": 1059, "repo": "avro-1.11.2", "code": "package file\n\n// Interface for reading data from a file.\nInterface FileReader<D>;\n// An InputStream that supports seek and tell.\nInterface SeekableInput;\n// \nInterface Syncable;\n// Implements bzip2 compression and decompression.\nClass BZip2Codec;\n// Interface for Avro-supported compression codecs for data files.\nClass Codec;\n// Encapsulates the ability to specify and configure a compression codec.\nClass CodecFactory;\n// Constants used in data files.\nClass DataFileConstants;\n// Random access to files written with DataFileWriter.\nClass DataFileReader<D>;\n// Read files written by Avro version 1.2.\nClass DataFileReader12<D>;\n// Streaming access to files written by DataFileWriter.\nClass DataFileStream<D>;\n// A handle that can be used to reopen a DataFile without re-reading the header of the stream.\nClass DataFileStream.Header;\n// Stores in a file a sequence of data conforming to a schema.\nClass DataFileWriter<D>;\n// Implements DEFLATE (RFC1951) compression and decompression.\nClass DeflateCodec;\n// A SeekableInput backed with data in a byte array.\nClass SeekableByteArrayInput;\n// A FileInputStream that implements SeekableInput.\nClass SeekableFileInput;\n// Implements Snappy compression and decompression.\nClass SnappyCodec;\n// An implementation of Syncable which writes to a file.\nClass SyncableFileOutputStream;\n// Implements xz compression and decompression.\nClass XZCodec;\n// \nClass ZstandardCodec;\n// Thrown by DataFileWriter.append(Object) when an exception occurs while writing a datum to the buffer.\nClass DataFileWriter.AppendWriteException;\n", "des": "A container file for Avro data."}
{"index": 1060, "repo": "avro-1.11.2", "code": "package generic\n\n// Array that permits reuse of contained elements.\nInterface GenericArray<T>;\n// Contains data of other types.\nInterface GenericContainer;\n// \nInterface GenericData.InstanceSupplier;\n// An enum symbol.\nInterface GenericEnumSymbol<E extends GenericEnumSymbol<E>>;\n// Fixed-size data.\nInterface GenericFixed;\n// A generic instance of a record schema.\nInterface GenericRecord;\n// A record implementation that permits field access by integer index.\nInterface IndexedRecord;\n// Utilities for generic Java data.\nClass GenericData;\n// Default implementation of an array.\nClass GenericData.Array<T>;\n// Default implementation of GenericEnumSymbol.\nClass GenericData.EnumSymbol;\n// Default implementation of GenericFixed.\nClass GenericData.Fixed;\n// Default implementation of GenericRecord.\nClass GenericData.Record;\n// DatumReader for generic Java objects.\nClass GenericDatumReader<D>;\n// DatumWriter for generic Java objects.\nClass GenericDatumWriter<D>;\n// A RecordBuilder for generic records.\nClass GenericRecordBuilder;\n// Used to specify the Java type for a string schema.\nEnum GenericData.StringType;\n", "des": "A generic representation for Avro data."}
{"index": 1061, "repo": "avro-1.11.2", "code": "package io\n\n// Read data of a schema.\nInterface DatumReader<D>;\n// Write data of a schema.\nInterface DatumWriter<D>;\n// \nInterface FastReaderBuilder.ExecutionStep;\n// \nInterface FastReaderBuilder.FieldReader;\n// \nInterface FastReaderBuilder.ReusingFieldReader;\n// Utilities for binary-encoded data.\nClass BinaryData;\n// An Decoder for binary-format data.\nClass BinaryDecoder;\n// An abstract Encoder for Avro's binary encoding.\nClass BinaryEncoder;\n// A BinaryEncoder implementation that writes large arrays and maps as a sequence of blocks.\nClass BlockingBinaryEncoder;\n// An Encoder for Avro's binary encoding.\nClass BufferedBinaryEncoder;\n// Low-level support for de-serializing Avro values.\nClass Decoder;\n// A factory for creating and configuring Decoders.\nClass DecoderFactory;\n// An Encoder for Avro's binary encoding that does not buffer output.\nClass DirectBinaryEncoder;\n// Low-level support for serializing Avro values.\nClass Encoder;\n// A factory for creating and configuring Encoder instances.\nClass EncoderFactory;\n// \nClass FastReaderBuilder;\n// \nClass FastReaderBuilder.MapReader;\n// \nClass FastReaderBuilder.RecordReader;\n// A Decoder for Avro's JSON data encoding.\nClass JsonDecoder;\n// An Encoder for Avro's JSON data encoding.\nClass JsonEncoder;\n// Base class for parser-based Decoders.\nClass ParsingDecoder;\n// Base class for parser-based Encoders.\nClass ParsingEncoder;\n// Decoder that performs type-resolution between the reader's and writer's schemas.\nClass ResolvingDecoder;\n// An implementation of Decoder that ensures that the sequence of operations conforms to a schema.\nClass ValidatingDecoder;\n// An implementation of Encoder that wraps another Encoder and ensures that the sequence of operations conforms to the provided schema.\nClass ValidatingEncoder;\n// \nEnum FastReaderBuilder.RecordReader.Stage;\n", "des": "Utilities for Encoding and Decoding Avro data."}
{"index": 1062, "repo": "avro-1.11.2", "code": "package parsing\n\n// The parser knows how to handle the terminal and non-terminal symbols.\nInterface Parser.ActionHandler;\n// The clients implement this interface to skip symbols and actions.\nInterface SkipParser.SkipHandler;\n// The class that generates a grammar suitable to parse Avro data in JSON format.\nClass JsonGrammarGenerator;\n// Parser is the class that maintains the stack for parsing.\nClass Parser;\n// The class that generates a resolving grammar to resolve between two schemas.\nClass ResolvingGrammarGenerator;\n// A parser that capable of skipping as well read and write.\nClass SkipParser;\n// Symbol is the base of all symbols (terminals and non-terminals) of the grammar.\nClass Symbol;\n// \nClass Symbol.Alternative;\n// \nClass Symbol.DefaultStartAction;\n// \nClass Symbol.EnumAdjustAction;\n// \nClass Symbol.EnumLabelsAction;\n// \nClass Symbol.ErrorAction;\n// \nClass Symbol.FieldAdjustAction;\n// \nClass Symbol.FieldOrderAction;\n// \nClass Symbol.ImplicitAction;\n// \nClass Symbol.IntCheckAction;\n// \nClass Symbol.Repeater;\n// \nClass Symbol.ResolvingAction;\n// \nClass Symbol.Root;\n// \nClass Symbol.Sequence;\n// \nClass Symbol.SkipAction;\n// \nClass Symbol.UnionAdjustAction;\n// \nClass Symbol.WriterUnionAction;\n// The class that generates validating grammar.\nClass ValidatingGrammarGenerator;\n// \nEnum Symbol.Kind;\n", "des": "Implementation of Avro schemas as LL(1) grammars."}
{"index": 1063, "repo": "avro-1.11.2", "code": "package path\n\n// root interface for all pieces of an AvroPath expression\nInterface PathElement;\n// a predicate is a filter that restricts items selected by a LocationStep\nInterface PathPredicate;\n// interface for exceptions that can trace the AvroPath of an error\nInterface PathTracingException<T extends Throwable>;\n// filters items by their context position\nInterface PositionalPathPredicate;\n// Returns items by their position (numeric index) in an array\nClass ArrayPositionPredicate;\n// Selects items based on their \"path\" (name of a property under which they are stored) relative to the context.\nClass LocationStep;\n// Returns items by their position (string key under which they are stored) in a map\nClass MapKeyPredicate;\n// Returns items by their position (numeric index of type) in a union schema\nClass UnionTypePredicate;\n// an AvroTypeException with extra fields used to trace back the path to a bad value through an object graph\nClass TracingAvroTypeException;\n// a ClassCastException with extra fields used to trace back the path to a bad value through an object graph\nClass TracingClassCastException;\n// a NullPointerException with extra fields used to trace back the path to a null value through an object graph\nClass TracingNullPointException;\n", "des": "Interfaces and base classes for AvroPath."}
{"index": 1064, "repo": "avro-1.11.2", "code": "package reflect\n\n// Expert: a custom encoder and decoder that writes an object directly to avro.\nClass CustomEncoding<T>;\n// This encoder/decoder writes a java.util.Date object as a long to avro and reads a Date object from long.\nClass DateAsLongEncoding;\n// Use org.apache.avro.util.MapEntry\nClass MapEntry<K,V>;\n// Utilities to use existing Java classes and interfaces via reflection.\nClass ReflectData;\n// ReflectData implementation that permits null field values.\nClass ReflectData.AllowNull;\n// DatumReader for existing classes via Java reflection.\nClass ReflectDatumReader<T>;\n// DatumWriter for existing classes via Java reflection.\nClass ReflectDatumWriter<T>;\n// A few utility methods for using @link{java.misc.Unsafe}, mostly for private use.\nClass ReflectionUtil;\n// Adds the given name and space as an alias to the schema.\nAnnotation Type AvroAlias;\n// \nAnnotation Type AvroAliases;\n// Specifies a default value for a field as a JSON string.\nAnnotation Type AvroDefault;\n// Sets the avrodoc for this java field.\nAnnotation Type AvroDoc;\n// Expert: Fields with this annotation are encoded using the given custom encoder.\nAnnotation Type AvroEncode;\n// Marks a field as transient.\nAnnotation Type AvroIgnore;\n// Adds the given key:Value pair as metadata into the schema, at the corresponding node.\nAnnotation Type AvroMeta;\n// \nAnnotation Type AvroMeta.AvroMetas;\n// Sets the avroname for this java field.\nAnnotation Type AvroName;\n// Declares that a Java type should have a specified Avro schema, overriding the normally inferred schema.\nAnnotation Type AvroSchema;\n// Declares that null is a valid value for a Java type.\nAnnotation Type Nullable;\n// Declares that a class or field should be represented by an Avro string.\nAnnotation Type Stringable;\n// Declares that a Java type should be represented by an Avro union schema.\nAnnotation Type Union;\n", "des": "Use Java reflection to generate schemas and protocols for existing classes."}
{"index": 1065, "repo": "avro-1.11.2", "code": "package specific\n\n// Tag interface that indicates that a class has a one-argument constructor that accepts a Schema.\nInterface SpecificData.SchemaConstructable;\n// Implemented by generated record classes.\nInterface SpecificRecord;\n// Utilities for generated Java classes and interfaces.\nClass SpecificData;\n// DatumReader for generated Java classes.\nClass SpecificDatumReader<T>;\n// DatumWriter for generated Java classes.\nClass SpecificDatumWriter<T>;\n// Abstract base class for specific ErrorBuilder implementations.\nClass SpecificErrorBuilderBase<T extends SpecificExceptionBase>;\n// Base class for generated fixed-sized data classes.\nClass SpecificFixed;\n// Base class for generated record classes.\nClass SpecificRecordBase;\n// Abstract base class for specific RecordBuilder implementations.\nClass SpecificRecordBuilderBase<T extends SpecificRecord>;\n// Base class for specific exceptions.\nClass SpecificExceptionBase;\n// Indicates that an annotated class is an Avro generated class.\nAnnotation Type AvroGenerated;\n// Declares the size of implementations of GenericFixed.\nAnnotation Type FixedSize;\n", "des": "Generate specific Java classes for schemas and protocols."}
{"index": 1066, "repo": "avro-1.11.2", "code": "package util\n\n// Utility to present ByteBuffer data as an InputStream.\nClass ByteBufferInputStream;\n// Utility to collect data written to an OutputStream in ByteBuffers.\nClass ByteBufferOutputStream;\n// \nClass ClassUtils;\n// An implementation of Map.Entry with well-defined member names.\nClass MapEntry<K,V>;\n// \nClass MapUtil;\n// Utility to make data written to an ByteArrayOutputStream directly available as a ByteBuffer.\nClass NonCopyingByteArrayOutputStream;\n// Generates schema data as Java objects with random values.\nClass RandomData;\n// \nClass ReusableByteArrayInputStream;\n// \nClass ReusableByteBufferInputStream;\n// \nClass SchemaUtil;\n// A Utf8 string.\nClass Utf8;\n// Implements a combination of WeakHashMap and IdentityHashMap.\nClass WeakIdentityHashMap<K,V>;\n", "des": "Common utility classes."}
{"index": 1067, "repo": "accumulo-client-mapreduce-2.0.0-alpha-1", "code": "package impl\n\n// \nClass ConfiguratorBase;\n// \nClass DistributedCacheHelper;\n// \nClass FileOutputConfigurator;\n// \nClass InputConfigurator;\n// \nClass MapReduceClientOnDefaultTable;\n// \nClass MapReduceClientOnRequiredTable;\n// Adds some MR awareness to the ClientOpts\nClass MapReduceClientOpts;\n// \nClass OutputConfigurator;\n// \nEnum ConfiguratorBase.ClientOpts;\n// Specifies that connection info was configured\nEnum ConfiguratorBase.ConnectorInfo;\n// Configuration keys for general configuration options.\nEnum ConfiguratorBase.GeneralOpts;\n// Configuration keys for AccumuloConfiguration.\nEnum FileOutputConfigurator.Opts;\n// Configuration keys for various features.\nEnum InputConfigurator.Features;\n// Configuration keys for Scanner.\nEnum InputConfigurator.ScanOpts;\n// Configuration keys for various features.\nEnum OutputConfigurator.Features;\n// Configuration keys for BatchWriter.\nEnum OutputConfigurator.WriteOpts;\n", "des": "This package exists to store common helpers for configuring MapReduce jobs in a single location."}
{"index": 1068, "repo": "hadoop-yarn-common-3.3.6", "code": "package pb\n\n// PlacementConstraintFromProtoConverter generates an PlacementConstraint.AbstractConstraint given a YarnProtos.PlacementConstraintProto.\nClass PlacementConstraintFromProtoConverter;\n// PlacementConstraintToProtoConverter generates a YarnProtos.PlacementConstraintProto given a PlacementConstraint.AbstractConstraint.\nClass PlacementConstraintToProtoConverter;\n", "des": "API related to protobuf objects that are not backed by PBImpl classes."}
{"index": 1069, "repo": "hadoop-yarn-common-3.3.6", "code": "package resource\n\n// This class contains inner classes that define transformation on a PlacementConstraint expression.\nClass PlacementConstraintTransformations;\n// The default implementation of the PlacementConstraint.Visitor that does a traversal of the constraint tree, performing no action for the lead constraints.\nClass PlacementConstraintTransformations.AbstractTransformer;\n// Visits a PlacementConstraint tree and substitutes each PlacementConstraint.TargetConstraint and PlacementConstraint.CardinalityConstraint with an equivalent PlacementConstraint.SingleConstraint.\nClass PlacementConstraintTransformations.SingleConstraintTransformer;\n// Visits a PlacementConstraint tree and, whenever possible, substitutes each PlacementConstraint.SingleConstraint with a PlacementConstraint.TargetConstraint.\nClass PlacementConstraintTransformations.SpecializedConstraintTransformer;\n", "des": "API related to resources."}
{"index": 1070, "repo": "hadoop-yarn-common-3.3.6", "code": "package api\n\n// Client for managing applications.\nClass AppAdminClient;\n// A client library that can be used to post some information in terms of a number of conceptual entities.\nClass TimelineClient;\n// A client library that can be used to get Timeline Entities associated with application, application attempt or containers.\nClass TimelineReaderClient;\n// A client library that can be used to post some information in terms of a number of conceptual entities.\nClass TimelineV2Client;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1071, "repo": "hadoop-yarn-common-3.3.6", "code": "package impl\n\n// A simple writer class for storing Timeline data into Leveldb store.\nClass DirectTimelineWriter;\n// A simple writer class for storing Timeline data in any storage that implements a basic FileSystem interface.\nClass FileSystemTimelineWriter;\n// \nClass TimelineClientImpl;\n// Utility Connector class which is used by timeline clients to securely get connected to the timeline server.\nClass TimelineConnector;\n// Abstract class for an operation that should be retried by timeline client.\nClass TimelineConnector.TimelineClientRetryOp;\n// \nClass TimelineConnector.TimelineClientRetryOpForOperateDelegationToken;\n// Implementation of TimelineReaderClient interface.\nClass TimelineReaderClientImpl;\n// Implementation of timeline v2 client interface.\nClass TimelineV2ClientImpl;\n// Base writer class to write the Timeline data.\nClass TimelineWriter;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1072, "repo": "hadoop-yarn-common-3.3.6", "code": "package metrics\n\n// \nInterface EventTypeMetrics<T extends Enum<T>>;\n// This is base class for allocated and available metrics for custom resources.\nClass CustomResourceMetrics;\n// Class that holds metrics values for custom resources in a map keyed with the name of the custom resource.\nClass CustomResourceMetricValue;\n// \nClass DisableEventTypeMetrics;\n// \nClass GenericEventTypeMetrics<T extends Enum<T>>;\n// Builder class for GenericEventTypeMetrics.\nClass GenericEventTypeMetrics.EventTypeMetricsBuilder<T extends Enum<T>>;\n", "des": "Provides common metrics (available, allocated) for custom resources."}
{"index": 1073, "repo": "hadoop-yarn-common-3.3.6", "code": "package metrics\n\n// \nClass AppAttemptMetricsConstants;\n// \nClass ApplicationMetricsConstants;\n// \nClass ContainerMetricsConstants;\n", "des": "Yarn Common Metrics package."}
{"index": 1074, "repo": "hadoop-yarn-common-3.3.6", "code": "package dao\n\n// This class stores the Scheduler Configuration.\nClass ConfInfo;\n// This class stores the Configuration Property.\nClass ConfInfo.ConfItem;\n// Information for adding or updating a queue to scheduler configuration for this queue.\nClass QueueConfigInfo;\n// Information for making scheduler configuration changes (supports adding, removing, or updating a queue, as well as global scheduler conf changes).\nClass SchedConfUpdateInfo;\n", "des": "Data structures for scheduler configuration mutation info."}
{"index": 1075, "repo": "hadoop-yarn-common-3.3.6", "code": "package hamlet\n\n// \nInterface HamletSpec._;\n// \nInterface HamletSpec._Anchor;\n// %block -(FORM|FIELDSET)\nInterface HamletSpec._Block;\n// \nInterface HamletSpec._Body;\n// \nInterface HamletSpec._Cell;\n// \nInterface HamletSpec._Child;\n// \nInterface HamletSpec._Content;\n// \nInterface HamletSpec._Dl;\n// \nInterface HamletSpec._FieldSet;\n// Part of %pre.exclusion\nInterface HamletSpec._FontSize;\n// %fontstyle -(%pre.exclusion)\nInterface HamletSpec._FontStyle;\n// \nInterface HamletSpec._Form;\n// \nInterface HamletSpec._FormCtrl;\n// \nInterface HamletSpec._Head;\n// \nInterface HamletSpec._Html;\n// Part of %pre.exclusion\nInterface HamletSpec._ImgObject;\n// INS and DEL are unusual for HTML \"in that they may serve as either block-level or inline elements (but not both)\".\nInterface HamletSpec._InsDel;\n// \nInterface HamletSpec._Label;\n// \nInterface HamletSpec._Legend;\n// \nInterface HamletSpec._Li;\n// \nInterface HamletSpec._Object;\n// \nInterface HamletSpec._Option;\n// \nInterface HamletSpec._Param;\n// \nInterface HamletSpec._RawContent;\n// \nInterface HamletSpec._Script;\n// %special -(A|%pre.exclusion)\nInterface HamletSpec._Special;\n// Part of %pre.exclusion\nInterface HamletSpec._SubSup;\n// \nInterface HamletSpec._Table;\n// \nInterface HamletSpec._TableCol;\n// \nInterface HamletSpec._TableRow;\n// \nInterface HamletSpec._Tr;\n// \nInterface HamletSpec.A;\n// \nInterface HamletSpec.ABBR;\n// \nInterface HamletSpec.ACRONYM;\n", "des": "Deprecated."}
{"index": 1076, "repo": "hadoop-yarn-common-3.3.6", "code": "package hamlet2\n\n// \nInterface HamletSpec.__;\n// \nInterface HamletSpec._Anchor;\n// %block -(FORM|FIELDSET)\nInterface HamletSpec._Block;\n// \nInterface HamletSpec._Body;\n// \nInterface HamletSpec._Cell;\n// \nInterface HamletSpec._Child;\n// \nInterface HamletSpec._Content;\n// \nInterface HamletSpec._Dl;\n// \nInterface HamletSpec._FieldSet;\n// Part of %pre.exclusion\nInterface HamletSpec._FontSize;\n// %fontstyle -(%pre.exclusion)\nInterface HamletSpec._FontStyle;\n// \nInterface HamletSpec._Form;\n// \nInterface HamletSpec._FormCtrl;\n// \nInterface HamletSpec._Head;\n// \nInterface HamletSpec._Html;\n// Part of %pre.exclusion\nInterface HamletSpec._ImgObject;\n// INS and DEL are unusual for HTML \"in that they may serve as either block-level or inline elements (but not both)\".\nInterface HamletSpec._InsDel;\n// \nInterface HamletSpec._Label;\n// \nInterface HamletSpec._Legend;\n// \nInterface HamletSpec._Li;\n// \nInterface HamletSpec._Object;\n// \nInterface HamletSpec._Option;\n// \nInterface HamletSpec._Param;\n// \nInterface HamletSpec._RawContent;\n// \nInterface HamletSpec._Script;\n// %special -(A|%pre.exclusion)\nInterface HamletSpec._Special;\n// Part of %pre.exclusion\nInterface HamletSpec._SubSup;\n// \nInterface HamletSpec._Table;\n// \nInterface HamletSpec._TableCol;\n// \nInterface HamletSpec._TableRow;\n// \nInterface HamletSpec._Tr;\n// \nInterface HamletSpec.A;\n// \nInterface HamletSpec.ABBR;\n// \nInterface HamletSpec.ACRONYM;\n", "des": "This package is the replacement for org.apache.hadoop.yarn.webapp.hamlet."}
{"index": 1077, "repo": "graal-sdk-1.0.0-rc7", "code": "package collections\n\n// Memory efficient map data structure.\nInterface EconomicMap<K,V>;\n// Memory efficient set data structure.\nInterface EconomicSet<E>;\n// Cursor to iterate over a mutable map.\nInterface MapCursor<K,V>;\n// Unmodifiable memory efficient map data structure.\nInterface UnmodifiableEconomicMap<K,V>;\n// Unmodifiable memory efficient set data structure.\nInterface UnmodifiableEconomicSet<E>;\n// Cursor to iterate over a map without changing its contents.\nInterface UnmodifiableMapCursor<K,V>;\n// Strategy for comparing two objects.\nClass Equivalence;\n// Utility class representing a pair of values.\nClass Pair<L,R>;\n", "des": "The Graal-SDK collections package contains memory efficient data structures."}
{"index": 1078, "repo": "graal-sdk-1.0.0-rc7", "code": "package nativeimage\n\n// Features allow clients to intercept the native image generation and run custom initialization code at various stages.\nInterface Feature;\n// Access methods available for Feature.afterAnalysis(org.graalvm.nativeimage.Feature.AfterAnalysisAccess).\nInterface Feature.AfterAnalysisAccess;\n// Access methods available for Feature.afterCompilation(org.graalvm.nativeimage.Feature.AfterCompilationAccess).\nInterface Feature.AfterCompilationAccess;\n// Access methods available for Feature.afterHeapLayout(org.graalvm.nativeimage.Feature.AfterHeapLayoutAccess).\nInterface Feature.AfterHeapLayoutAccess;\n// Access methods available for Feature.afterImageWrite(org.graalvm.nativeimage.Feature.AfterImageWriteAccess).\nInterface Feature.AfterImageWriteAccess;\n// Access methods available for Feature.afterRegistration(org.graalvm.nativeimage.Feature.AfterRegistrationAccess).\nInterface Feature.AfterRegistrationAccess;\n// Access methods available for Feature.beforeAnalysis(org.graalvm.nativeimage.Feature.BeforeAnalysisAccess).\nInterface Feature.BeforeAnalysisAccess;\n// Access methods available for Feature.beforeCompilation(org.graalvm.nativeimage.Feature.BeforeCompilationAccess).\nInterface Feature.BeforeCompilationAccess;\n// Access methods available for Feature.beforeImageWrite(org.graalvm.nativeimage.Feature.BeforeImageWriteAccess).\nInterface Feature.BeforeImageWriteAccess;\n// Access methods available for Feature.beforeCompilation(org.graalvm.nativeimage.Feature.BeforeCompilationAccess) and Feature.afterCompilation(org.graalvm.nativeimage.Feature.AfterCompilationAccess).\nInterface Feature.CompilationAccess;\n// Access methods available for Feature.duringAnalysis(org.graalvm.nativeimage.Feature.DuringAnalysisAccess).\nInterface Feature.DuringAnalysisAccess;\n// Access methods available for Feature.duringSetup(org.graalvm.nativeimage.Feature.DuringSetupAccess).\nInterface Feature.DuringSetupAccess;\n// Access methods that are available for all feature methods.\nInterface Feature.FeatureAccess;\n// Access methods available for Feature.isInConfiguration(org.graalvm.nativeimage.Feature.IsInConfigurationAccess).\nInterface Feature.IsInConfigurationAccess;\n", "des": "The Graal-SDK native-image API allows to customize the native image generation, i.e., the ahead-of-time compilation of Java code to standalone executables."}
{"index": 1079, "repo": "graal-sdk-1.0.0-rc7", "code": "package c\n\n// Describes a C context.\nInterface CContext.Directives;\n// Defines the context for most other annotations of the C interface: the C header files that need to be imported, the C macros that need to be defined to properly configure these headers, and additional flags that should be passed to the C compiler when analyzing the definitions.\nAnnotation Type CContext;\n", "des": "This package and its sub-packages provide a fast and lightweight interface between Java code and C code."}
{"index": 1080, "repo": "graal-sdk-1.0.0-rc7", "code": "package constant\n\n// Allows access to the value of a CConstant during image generation.\nClass CConstant.ValueAccess;\n// Denotes a method as a C constant value.\nAnnotation Type CConstant;\n// Annotation to import a C enumeration to Java.\nAnnotation Type CEnum;\n// Provides additional properties for a field (i.e., an enumeration value) of Java enumeration annotated with CEnum.\nAnnotation Type CEnumConstant;\n// Annotation for a method that returns the Java enumeration object for a given C integer value.\nAnnotation Type CEnumLookup;\n// Annotation for a method that returns the C integer value for a Java enumeration object.\nAnnotation Type CEnumValue;\n", "des": "This package provides parts of the Java / C interface that are related to C constants."}
{"index": 1081, "repo": "graal-sdk-1.0.0-rc7", "code": "package function\n\n// Base interface for all function pointers.\nInterface CFunctionPointer;\n// Pointer to executable code.\nInterface CodePointer;\n// A pointer which is relocated when the native image is loaded at runtime.\nInterface RelocatedPointer;\n// Special placeholder value for CEntryPoint.exceptionHandler() to print the caught exception and treat it as a fatal error.\nClass CEntryPoint.FatalExceptionHandler;\n// Utility methods that provide access to the current isolate.\nClass CEntryPointContext;\n// A function pointer to an entry point method that can be, for example, handed out to C code so that C code can call back into Java code.\nClass CEntryPointLiteral<T extends CFunctionPointer>;\n// The built-in methods which can be aliased.\nEnum CEntryPoint.Builtin;\n// Describes the thread state transition performed when the C function is invoked.\nEnum CFunction.Transition;\n// Annotates a method that is a VM entry point.\nAnnotation Type CEntryPoint;\n// Designates an Isolate parameter to use as the execution context.\nAnnotation Type CEntryPoint.IsolateContext;\n// Designates an IsolateThread parameter to use as the execution context.\nAnnotation Type CEntryPoint.IsolateThreadContext;\n// Denotes a static native method that calls directly from Java to C, without following the JNI protocol.\nAnnotation Type CFunction;\n// Denotes an external library that needs to be linked in.\nAnnotation Type CLibrary;\n// Informational only.\nAnnotation Type CMacroInfo;\n// Annotation for an invocation method defined in a sub-interface of CFunctionPointer.\nAnnotation Type InvokeCFunctionPointer;\n", "des": "This package provides parts of the Java / C interface that are related to C functions."}
{"index": 1082, "repo": "graal-sdk-1.0.0-rc7", "code": "package struct\n\n// Contains static methods that provide access to the size of dereferenced SystemJava pointer types (i.e.\nClass SizeOf;\n// Allows a method annotated with CField to have a value type that is narrower (smaller number of bits) than the C type.\nAnnotation Type AllowNarrowingCast;\n// Allows a method annotated with CField to have a value type that is wider (larger number of bits) than the C type.\nAnnotation Type AllowWideningCast;\n// Denotes a method as a bitfield access of a C struct.\nAnnotation Type CBitfield;\n// Denotes a method as a field access of a C struct.\nAnnotation Type CField;\n// Denotes a method as a field address computation of a C struct.\nAnnotation Type CFieldAddress;\n// Denotes a method as a field offset access of a C struct.\nAnnotation Type CFieldOffset;\n// Denotes Java interface that imports a C pointer type.\nAnnotation Type CPointerTo;\n// Denotes Java interface that imports a C struct.\nAnnotation Type CStruct;\n// Informational only.\nAnnotation Type CTypedefOfInfo;\n// Denotes a method as a field access of a structured C memory.\nAnnotation Type RawField;\n// Denotes Java interface that represents C memory, but without a C struct definition.\nAnnotation Type RawStructure;\n// A CField also annotated with this annotation gets a unique LocationIdentity assigned, i.e., reads and writes do not interfere with reads and writes to any other field and are optimized without regarding other fields.\nAnnotation Type UniqueLocationIdentity;\n", "des": "This package provides parts of the Java / C interface that are related to C structures."}
{"index": 1083, "repo": "graal-sdk-1.0.0-rc7", "code": "package type\n\n// A pointer to a 8-bit C primitive value.\nInterface CCharPointer;\n// A pointer to a pointer to a 8-bit C primitive value.\nInterface CCharPointerPointer;\n// A pointer to a C primitive 'double' value.\nInterface CDoublePointer;\n// A pointer to a C primitive 'float' value.\nInterface CFloatPointer;\n// A pointer to a 32-bit C primitive value.\nInterface CIntPointer;\n// A pointer to a pointer to a 32-bit C primitive value.\nInterface CIntPointerPointer;\n// A pointer to a 64-bit C primitive value.\nInterface CLongPointer;\n// A pointer to a 16-bit C primitive value.\nInterface CShortPointer;\n// An auto-closable that holds a Java CharSequence as a null-terminated C char[] array.\nInterface CTypeConversion.CCharPointerHolder;\n// A void* pointer to an opaque C value of an unknown type, without any methods to read or write.\nInterface VoidPointer;\n// A untyped C pointer to any machine-word-sized value, e.g., a pointer to another pointer or a pointer to a UnsignedWord or SignedWord value.\nInterface WordPointer;\n// Utility methods to convert between Java types and C types.\nClass CTypeConversion;\n// An auto-closable that holds a Java CharSequence[] array as a null-terminated array of null-terminated C char[]s.\nClass CTypeConversion.CCharPointerPointerHolder;\n", "des": "This package provides parts of the Java / C interface that are related to standard C pointer types, as well as utility functions to convert between Java types and C types."}
{"index": 1084, "repo": "graal-sdk-1.0.0-rc7", "code": "package options\n\n// An interface to a set of OptionDescriptors.\nInterface OptionDescriptors;\n// Represents a set of option values based on an OptionDescriptor.\nInterface OptionValues;\n// Represents metadata for a single option.\nClass OptionDescriptor;\n// Represents the option key for an option specification.\nClass OptionKey<T>;\n// Represents a type of an option that allows to convert string values to Java values.\nClass OptionType<T>;\n// Categorizes options according to user relevance.\nEnum OptionCategory;\n", "des": "The Graal-SDK options package contains reusable collection classes for options."}
{"index": 1085, "repo": "graal-sdk-1.0.0-rc7", "code": "package polyglot\n\n// A polyglot context for Graal guest languages that allows to evaluate code.\nClass Context;\n// An execution engine for Graal guest languages that allows to inspect the the installed guest languages, instruments and their available options.\nClass Engine;\n// A handle for an instrument installed in an engine.\nClass Instrument;\n// A handle for a Graal language installed in an engine.\nClass Language;\n// Representation of a source code unit and its contents that can be evaluated in an execution context.\nClass Source;\n// Description of contiguous section of text within a Source of program code.; supports multiple modes of access to the text and its location.\nClass SourceSection;\n// Represents a generic type T.\nClass TypeLiteral<T>;\n// Represents a polyglot value that can be accessed using a set of language agnostic operations.\nClass Value;\n// A polyglot exception represents errors that contain Graal guest languages on the stack trace.\nClass PolyglotException;\n", "des": "The Graal-SDK polyglot API allows to embed Graal languages in Java applications."}
{"index": 1086, "repo": "graal-sdk-1.0.0-rc7", "code": "package io\n\n// A ByteSequence is a readable sequence of byte values.\nInterface ByteSequence;\n// Service-provider for Truffle files.\nInterface FileSystem;\n", "des": "Input/Output support for the Graal-SDK polyglot API."}
{"index": 1087, "repo": "graal-sdk-1.0.0-rc7", "code": "package management\n\n// An execution event object passed to an execution listener consumer.\nClass ExecutionEvent;\n// Execution listeners allow to instrument the execution of guest languages.\nClass ExecutionListener;\n", "des": "The management package provides tools that monitor and instrument the behavior of guest language programs."}
{"index": 1088, "repo": "graal-sdk-1.0.0-rc7", "code": "package proxy\n\n// Proxy interfaces allow to mimic guest language objects, arrays, executables, primitives and native objects in Graal languages.\nInterface Proxy;\n// Interface to be implemented to mimic guest language arrays.\nInterface ProxyArray;\n// Interface to be implemented to mimic guest language objects that are executable.\nInterface ProxyExecutable;\n// Interface to be implemented to mimic guest language objects that are instantiable.\nInterface ProxyInstantiable;\n// Interface to be implemented to mimic native pointers.\nInterface ProxyNativeObject;\n// Interface to be implemented to mimic guest language objects that contain members.\nInterface ProxyObject;\n", "des": "The Graal SDK proxy interfaces allow to mimic guest language objects, arrays, executables, primitives and native objects in Graal languages."}
{"index": 1089, "repo": "graal-sdk-1.0.0-rc7", "code": "package word\n\n// A machine-word-sized value that can be compared for equality.\nInterface ComparableWord;\n// Lowest-level memory access of native C memory.\nInterface Pointer;\n// Marker interface for all word types that have the semantic of a pointer (but not necessarily all the memory access methods defined in Pointer).\nInterface PointerBase;\n// Represents a signed word-sized value.\nInterface SignedWord;\n// Represents an unsigned word-sized value.\nInterface UnsignedWord;\n// The root of the interface hierarchy for machine-word-sized values.\nInterface WordBase;\n// Marker interface for location identities.\nClass LocationIdentity;\n// Provides factory method to create machine-word-sized values.\nClass WordFactory;\n", "des": "This package provides a low-level mechanism to use machine-word-sized values in Java."}
{"index": 1090, "repo": "lucene-analyzers-smartcn-8.11.2", "code": "package smart\n\n// Manages analysis data configuration for SmartChineseAnalyzer\nClass AnalyzerProfile;\n// Internal SmartChineseAnalyzer character type constants.\nClass CharType;\n// Tokenizer for Chinese or mixed Chinese-English text.\nClass HMMChineseTokenizer;\n// Factory for HMMChineseTokenizer\nClass HMMChineseTokenizerFactory;\n// SmartChineseAnalyzer is an analyzer for Chinese or mixed Chinese-English text.\nClass SmartChineseAnalyzer;\n// SmartChineseAnalyzer utility constants and methods\nClass Utility;\n// Internal SmartChineseAnalyzer token type constants\nClass WordType;\n", "des": "Analyzer for Simplified Chinese, which indexes words."}
{"index": 1091, "repo": "lucene-analyzers-smartcn-8.11.2", "code": "package hhmm\n\n// Finds the optimal segmentation of a sentence into Chinese words\nClass HHMMSegmenter;\n// SmartChineseAnalyzer internal token\nClass SegToken;\n// Filters a SegToken by converting full-width latin to half-width, then lowercasing latin.\nClass SegTokenFilter;\n", "des": "SmartChineseAnalyzer Hidden Markov Model package."}
{"index": 1092, "repo": "hbase-server-3.0.0-alpha-4", "code": "package constraint\n\n// Apply a Constraint (in traditional database terminology) to a Table.\nInterface Constraint;\n// Base class to use when actually implementing a Constraint.\nClass BaseConstraint;\n// Processes multiple Constraints on a given table.\nClass ConstraintProcessor;\n// Utilities for adding/removing constraints from a table.\nClass Constraints;\n// Exception that a user defined constraint throws on failure of a Put.\nClass ConstraintException;\n", "des": "Restrict the domain of a data attribute, often times to fulfill business rules/requirements."}
{"index": 1093, "repo": "hbase-server-3.0.0-alpha-4", "code": "package coprocessor\n\n// Coprocessors implement this interface to observe and mediate bulk load operations.\nInterface BulkLoadObserver;\n// Implementations defined function to get an observer of type O from a coprocessor of type C.\nInterface CoprocessorHost.ObserverGetter<C,O>;\n// Since 2.0.\nInterface CoprocessorService;\n// Coprocessors implement this interface to observe and mediate endpoint invocations on a region.\nInterface EndpointObserver;\n// Since 2.0.0 to be removed in 3.0.0.\nInterface HasMasterServices;\n// Since 2.0.0 to be removed in 3.0.0.\nInterface HasRegionServerServices;\n// \nInterface MasterCoprocessor;\n// \nInterface MasterCoprocessorEnvironment;\n// Defines coprocessor hooks for interacting with operations on the HMaster process.\nInterface MasterObserver;\n// Carries the execution state for a given invocation of an Observer coprocessor (RegionObserver, MasterObserver, or WALObserver) method.\nInterface ObserverContext<E extends CoprocessorEnvironment>;\n// \nInterface RegionCoprocessor;\n// \nInterface RegionCoprocessorEnvironment;\n// Coprocessors implement this interface to observe and mediate client actions on the region.\nInterface RegionObserver;\n// \nInterface RegionServerCoprocessor;\n// \nInterface RegionServerCoprocessorEnvironment;\n// Defines coprocessor hooks for interacting with operations on the HRegionServer process.\nInterface RegionServerObserver;\n// WALCoprocessor don't support loading services using Coprocessor.getServices().\nInterface WALCoprocessor;\n// \nInterface WALCoprocessorEnvironment;\n// It's provided to have a way for coprocessors to observe, rewrite, or skip WALEdits as they are being written to the WAL.\nInterface WALObserver;\n// Encapsulation of the environment of each coprocessor\nClass BaseEnvironment<C extends Coprocessor>;\n// Provides the common setup framework and runtime services for coprocessor invocation from HBase services.\nClass CoprocessorHost<C extends Coprocessor,E extends CoprocessorEnvironment<C>>;\n// A coprocessor that collects metrics from meta table.\nClass MetaTableMetrics;\n", "des": "Table of Contents"}
{"index": 1094, "repo": "hbase-server-3.0.0-alpha-4", "code": "package hfile\n\n// Block cache interface.\nInterface BlockCache;\n// Allows for defining different compression rate predicates on its implementing classes.\nInterface BlockCompressedSizePredicator;\n// \nInterface BlockIndexChunk;\n// Cacheable is an interface that allows for an object to be cached.\nInterface Cacheable;\n// Interface for a deserializer.\nInterface CacheableDeserializer<T extends Cacheable>;\n// \nInterface CachedBlock;\n// In-memory BlockCache that may be backed by secondary layer(s).\nInterface FirstLevelBlockCache;\n// An abstraction used by the block index.\nInterface HFile.CachingBlockReader;\n// An interface used by clients to open and iterate an HFile.\nInterface HFile.Reader;\n// API required to write an HFile\nInterface HFile.Writer;\n// Controls what kind of data block encoding is used.\nInterface HFileDataBlockEncoder;\n// Controls what kind of index block encoding is used.\nInterface HFileIndexBlockEncoder;\n// \nInterface HFileIndexBlockEncoder.EncodedSeeker;\n// A scanner allows you to position yourself within a HFile and scan through it.\nInterface HFileScanner;\n// A way to write \"inline\" blocks into an HFile.\nInterface InlineBlockWriter;\n// BlockCache which is resizable.\nInterface ResizableBlockCache;\n// Snapshot of block cache age in cache.\nClass AgeSnapshot;\n// \nClass BlockCacheFactory;\n// Cache Key for use with implementations of BlockCache\nClass BlockCacheKey;\n// Utilty for aggregating counts in CachedBlocks and toString/toJSON CachedBlocks and BlockCaches.\nClass BlockCacheUtil;\n// Use one of these to keep a running account of cached blocks by file.\nClass BlockCacheUtil.CachedBlocksByFile;\n// BlockWithScanInfo is wrapper class for HFileBlock with other attributes.\nClass BlockWithScanInfo;\n// \nClass BloomFilterMetrics;\n// This class is used to manage the identifiers for CacheableDeserializer.\nClass CacheableDeserializerIdManager;\n// Stores all of the cache objects and configuration for a single HFile.\nClass CacheConfig;\n// Class that implements cache metrics.\nClass CacheStats;\n// Utility methods to compute and validate checksums.\nClass ChecksumUtil;\n", "des": "Provides implementations of HFile and HFile BlockCache."}
{"index": 1095, "repo": "hbase-server-3.0.0-alpha-4", "code": "package bucket\n\n// A class implementing IOEngine interface supports data services for BucketCache.\nInterface IOEngine;\n// This class is used to allocate a block with specified size and free the block when evicting.\nClass BucketAllocator;\n// \nClass BucketAllocator.Bucket;\n// BucketCache uses BucketAllocator to allocate/free blocks, and uses BucketCache#ramCache and BucketCache#backingMap in order to determine if a given element is in the cache.\nClass BucketCache;\n// \nClass BucketCachePersister;\n// Class that implements cache metrics for bucket cache.\nClass BucketCacheStats;\n// IO engine that stores data in memory using an array of ByteBuffers ByteBufferArray.\nClass ByteBufferIOEngine;\n// A memory-bound queue that will grow until an element brings total size larger than maxSize.\nClass CachedEntryQueue;\n// IO engine that stores data to a file on the local block device using memory mapping mechanism\nClass ExclusiveMemoryMmapIOEngine;\n// IO engine that stores data to a file on the local file system.\nClass FileIOEngine;\n// IO engine that stores data to a file on the specified file system using memory mapping mechanism\nClass FileMmapIOEngine;\n// A class implementing PersistentIOEngine interface supports file integrity verification for BucketCache which use persistent IOEngine\nClass PersistentIOEngine;\n// IO engine that stores data in pmem devices such as DCPMM.\nClass SharedMemoryMmapIOEngine;\n// Thrown by BucketAllocator\nClass BucketAllocatorException;\n// Thrown by BucketAllocator.allocateBlock(int) when cache is full for the requested size\nClass CacheFullException;\n", "des": "Provides BucketCache, an implementation of BlockCache."}
{"index": 1096, "repo": "hbase-server-3.0.0-alpha-4", "code": "package ipc\n\n// An interface for calling out of RPC for error conditions.\nInterface HBaseRPCErrorHandler;\n// Function to figure priority of incoming request.\nInterface PriorityFunction;\n// Interface for balancing requests across IPC queues\nInterface QueueBalancer;\n// Interface of all necessary to carry out a RPC method invocation on the server.\nInterface RpcCall;\n// Denotes a callback action that has to be executed at the end of an Rpc Call.\nInterface RpcCallback;\n// Interface of all necessary to carry out a RPC service invocation on the server.\nInterface RpcCallContext;\n// \nInterface RpcServer.CallCleanup;\n// \nInterface RpcServerInterface;\n// Adaptive LIFO blocking queue utilizing CoDel algorithm to prevent queue overloading.\nClass AdaptiveLifoCoDelCallQueue;\n// Reads special method annotations and table names to figure a priority for use by QoS facility in ipc; e.g: rpcs to hbase:meta get priority.\nClass AnnotationReadingPriorityFunction<T extends HBaseRpcServicesBase<?>>;\n// An RpcExecutor that will balance requests evenly across all its queues, but still remains efficient with a single queue via an inlinable queue balancing mechanism.\nClass BalancedQueueRpcExecutor;\n// \nClass CallQueueInfo;\n// The request processing logic, which is usually executed in thread pools provided by an RpcScheduler.\nClass CallRunner;\n// Balanced queue executor with a fastpath.\nClass FastPathBalancedQueueRpcExecutor;\n// \nClass FastPathRpcHandler;\n// RPC Executor that extends RWQueueRpcExecutor with fast-path feature, used in FastPathBalancedQueueRpcExecutor.\nClass FastPathRWQueueRpcExecutor;\n// A very simple RpcScheduler} that serves incoming requests in order.\nClass FifoRpcScheduler;\n// A pooled ByteBufAllocator that does not prefer direct buffers regardless of platform settings.\nClass HeapByteBufAllocator;\n// A special RpcScheduler} only used for master.\nClass MasterFifoRpcScheduler;\n// RPC Executor that uses different queues for reads and writes for meta.\nClass MetaRWQueueRpcExecutor;\n// \nClass MetricsHBaseServer;\n// \nClass MetricsHBaseServerWrapperImpl;\n// An RPC server with Netty4 implementation.\nClass NettyRpcServer;\n", "des": "Tools to help define network clients and servers."}
{"index": 1097, "repo": "hbase-server-3.0.0-alpha-4", "code": "package gson\n\n// Provides a singleton Gson instance configured just the way we like it.\nClass GsonFactory;\n// Used to register with (shaded) Jersey the presence of Entity serialization using (shaded) Gson.\nClass GsonSerializationFeature;\n", "des": "This package should be in the hbase-http module as a.a.h.h.http.gson."}
{"index": 1098, "repo": "hbase-server-3.0.0-alpha-4", "code": "package normalizer\n\n// A NormalizationPlan describes some modification to region split points as identified by an instance of RegionNormalizer.\nInterface NormalizationPlan;\n// Factory to create instance of RegionNormalizer as configured.\nClass RegionNormalizerFactory;\n// This class encapsulates the details of the RegionNormalizer subsystem.\nClass RegionNormalizerManager;\n// Store region normalizer state.\nClass RegionNormalizerStateStore;\n// \nEnum NormalizationPlan.PlanType;\n", "des": "The Region Normalizer subsystem is responsible for coaxing all the regions in a table toward a \"normal\" size, according to their storefile size."}
{"index": 1099, "repo": "hbase-server-3.0.0-alpha-4", "code": "package replication\n\n// ReplicationEndpoint is a plugin which implements replication to other HBase clusters, or other systems.\nInterface ReplicationEndpoint;\n// A filter for WAL entry cells before being sent over to replication.\nInterface WALCellFilter;\n// A Filter for WAL entries before being sent over to replication.\nInterface WALEntryFilter;\n// A Base implementation for ReplicationEndpoints.\nClass BaseReplicationEndpoint;\n// \nClass BulkLoadCellFilter;\n// A ChainWALEntryFilter for providing more flexible options\nClass ChainWALEmptyEntryFilter;\n// A WALEntryFilter which contains multiple filters and applies them in chain order\nClass ChainWALEntryFilter;\n// Filters out entries with our peerClusterId (i.e.\nClass ClusterMarkingEntryFilter;\n// A BaseReplicationEndpoint for replication endpoints whose target cluster is an HBase cluster.\nClass HBaseReplicationEndpoint;\n// Tracks changes to the list of region servers in a peer's cluster.\nClass HBaseReplicationEndpoint.PeerRegionServerListener;\n// Wraps a replication region server sink to provide the ability to identify it.\nClass HBaseReplicationEndpoint.SinkPeer;\n// Filter a WAL Entry by the peer config according to the table and family which it belongs to.\nClass NamespaceTableCfWALEntryFilter;\n// Helper class for storing replication barriers in family 'rep_barrier' of meta table.\nClass ReplicationBarrierFamilyFormat;\n// \nClass ReplicationBarrierFamilyFormat.ReplicationBarrierResult;\n// \nClass ReplicationEndpoint.Context;\n// A context for ReplicationEndpoint.replicate(ReplicateContext) method.\nClass ReplicationEndpoint.ReplicateContext;\n// \nClass ReplicationOffsetUtil;\n// \nClass ReplicationSinkServiceImpl;\n// Keeps KVs that are scoped other than local\nClass ScopeWALEntryFilter;\n// Skips WAL edits for all System tables including hbase:meta except hbase:acl.\nClass SystemTableWALEntryFilter;\n// A dummy ReplicationEndpoint that replicates nothing.\nClass VerifyWALEntriesReplicationEndpoint;\n", "des": "Multi Cluster Replication"}
{"index": 1100, "repo": "fontbox-3.0.0-beta1", "code": "package afm\n\n// This class is used to parse AFM(Adobe Font Metrics) documents.\nClass AFMParser;\n// This class represents a single character metric.\nClass CharMetric;\n// This class represents composite character data.\nClass Composite;\n// This class represents a part of composite character data.\nClass CompositePart;\n// This is the outermost AFM type.\nClass FontMetrics;\n// This represents some kern pair data.\nClass KernPair;\n// This class represents a ligature, which is an entry of the CharMetrics.\nClass Ligature;\n// This class represents a piece of track kerning data.\nClass TrackKern;\n", "des": "This package holds classes used to parse AFM(Adobe Font Metrics) files."}
{"index": 1101, "repo": "fontbox-3.0.0-beta1", "code": "package cff\n\n// A CFF charset.\nInterface CFFCharset;\n// Source from which bytes may be read in the future.\nInterface CFFParser.ByteSource;\n// This interface defines some functionality to read a CFF font.\nInterface DataInput;\n// \nInterface FDSelect;\n// A Type 0 CIDFont represented in a CFF file.\nClass CFFCIDFont;\n// A CFF Type 1-equivalent Encoding.\nClass CFFEncoding;\n// This is specialized CFFCharset.\nClass CFFExpertCharset;\n// This is specialized CFFEncoding.\nClass CFFExpertEncoding;\n// This is specialized CFFCharset.\nClass CFFExpertSubsetCharset;\n// An Adobe Compact Font Format (CFF) font.\nClass CFFFont;\n// This is specialized CFFCharset.\nClass CFFISOAdobeCharset;\n// This class represents a CFF operator.\nClass CFFOperator;\n// This class represents a parser for a CFF font.\nClass CFFParser;\n// This is specialized CFFEncoding.\nClass CFFStandardEncoding;\n// This class represents a standard SID to String mapping.\nClass CFFStandardString;\n// A Type 1-equivalent font program represented in a CFF file.\nClass CFFType1Font;\n// This class represents a CharStringCommand.\nClass CharStringCommand;\n// A CID-Keyed Type 2 CharString.\nClass CIDKeyedType2CharString;\n// This class implements the DataInput interface using a byte buffer as source.\nClass DataInputByteArray;\n// This class implements the DataInput interface using a RandomAccessRead as source.\nClass DataInputRandomAccessRead;\n// This class represents and renders a Type 1 CharString.\nClass Type1CharString;\n// This class represents a converter for a mapping into a Type 1 sequence.\nClass Type1CharStringParser;\n// This class contains some helper methods handling Type1-Fonts.\nClass Type1FontUtil;\n// Represents a Type 2 CharString by converting it into an equivalent Type 1 CharString.\nClass Type2CharString;\n// This class represents a converter for a mapping into a Type2-sequence.\nClass Type2CharStringParser;\n", "des": "This package holds classes used to parse CFF/Type2-Fonts (aka Type1C-Fonts)."}
{"index": 1102, "repo": "fontbox-3.0.0-beta1", "code": "package cmap\n\n// This class represents a CMap file.\nClass CMap;\n// Parses a CMap stream.\nClass CMapParser;\n// This represents a single entry in the codespace range.\nClass CodespaceRange;\n", "des": "This package holds classes that are necessary to parse cmap files."}
{"index": 1103, "repo": "fontbox-3.0.0-beta1", "code": "package encoding\n\n// A font's built-in encoding.\nClass BuiltInEncoding;\n// A PostScript Encoding vector.\nClass Encoding;\n// This is the MacRomanEncoding.\nClass MacRomanEncoding;\n// Adobe Standard Encoding\nClass StandardEncoding;\n", "des": "This package contains the implementations for all of the encodings that are used in PDF documents."}
{"index": 1104, "repo": "fontbox-3.0.0-beta1", "code": "package pfb\n\n// Parser for a pfb-file.\nClass PfbParser;\n", "des": "Classes that are used to parse pfb files."}
{"index": 1105, "repo": "fontbox-3.0.0-beta1", "code": "package ttf\n\n// An interface that abstracts the cid <-> codepoint lookup functionality of cmap.\nInterface CmapLookup;\n// Specifies access to glyph description classes, simple and composite.\nInterface GlyphDescription;\n// Implement the callback method to call TrueTypeCollection.processAllFonts(TrueTypeFontProcessor).\nInterface TrueTypeCollection.TrueTypeFontProcessor;\n// PostScript font program (compact font format).\nClass CFFTable;\n// A \"cmap\" subtable.\nClass CmapSubtable;\n// The \"cmap\" table of a true type font.\nClass CmapTable;\n// A table in a true type font.\nClass DigitalSignatureTable;\n// This class is based on code from Apache Batik a subproject of Apache XMLGraphics.\nClass GlyfCompositeComp;\n// Glyph description for composite glyphs.\nClass GlyfCompositeDescript;\n// This class is based on code from Apache Batik a subproject of Apache XMLGraphics.\nClass GlyfDescript;\n// This class is based on code from Apache Batik a subproject of Apache XMLGraphics.\nClass GlyfSimpleDescript;\n// A glyph data record in the glyf table.\nClass GlyphData;\n// A glyph substitution 'GSUB' table in a TrueType or OpenType font.\nClass GlyphSubstitutionTable;\n// A table in a true type font.\nClass GlyphTable;\n// A table in a true type font.\nClass HeaderTable;\n// A table in a true type font.\nClass HorizontalHeaderTable;\n// A table in a true type font.\nClass HorizontalMetricsTable;\n// A table in a true type font.\nClass IndexToLocationTable;\n// A 'kern' table in a true type font.\nClass KerningSubtable;\n// A 'kern' table in a true type font.\nClass KerningTable;\n// A table in a true type font.\nClass MaximumProfileTable;\n// A name record in the name table.\nClass NameRecord;\n// A table in a true type font.\nClass NamingTable;\n// An OpenType (OTF/TTF) font.\nClass OpenTypeFont;\n// A class for mapping Unicode codepoints to OpenType script tags\nClass OpenTypeScript;\n", "des": "This package contains classes to parse a TTF file."}
{"index": 1106, "repo": "fontbox-3.0.0-beta1", "code": "package gsub\n\n// This class splits an array of GlyphIds with a prospective match.\nInterface GlyphArraySplitter;\n// This class is responsible for replacing GlyphIDs with new ones according to the GSUB tables.\nInterface GsubWorker;\n// Takes in the given text having compound-glyphs to substitute, and splits it into chunks consisting of parts that should be substituted and the ones that can be processed normally.\nClass CompoundCharacterTokenizer;\n// This is an in-efficient implementation based on regex, which helps split the array.\nClass GlyphArraySplitterRegexImpl;\n// This class has utility methods to extract meaningful GsubData from the highly obfuscated GSUB Tables.\nClass GlyphSubstitutionDataExtractor;\n// Gets a Language specific instance of a GsubWorker\nClass GsubWorkerFactory;\n// Bengali-specific implementation of GSUB system\nClass GsubWorkerForBengali;\n// Latin-specific implementation of GSUB system\nClass GsubWorkerForLatin;\n", "des": "This package contains utility classes which extract meanigful data from the highly obfuscated GSUB table structures."}
{"index": 1107, "repo": "fontbox-3.0.0-beta1", "code": "package model\n\n// Model for data from the GSUB tables\nInterface GsubData;\n// Models a FeatureRecord\nInterface ScriptFeature;\n// A Map based simple implementation of the GsubData\nClass MapBackedGsubData;\n// A Map based simple implementation of the ScriptFeature\nClass MapBackedScriptFeature;\n// Enumerates the languages supported for GSUB operation.\nEnum Language;\n", "des": "This package contains a more logical model for the various font tables like GSUB."}
{"index": 1108, "repo": "fontbox-3.0.0-beta1", "code": "package common\n\n// This class models the Coverage Table in the Open Type layout common tables.\nClass CoverageTable;\n// This class models the Coverage format 1 in the Open Type layout common tables.\nClass CoverageTableFormat1;\n// This class models the Coverage format 2 in the Open Type layout common tables.\nClass CoverageTableFormat2;\n// This class models the Feature List table in the Open Type layout common tables.\nClass FeatureListTable;\n// This class models the Features and lookups in the Open Type layout common tables.\nClass FeatureRecord;\n// This class models the Feature table in the Open Type layout common tables.\nClass FeatureTable;\n// This class models the Language system tags in the Open Type Font specs.\nClass LangSysTable;\n// This class models the Lookup List Table in the Open Type layout common tables.\nClass LookupListTable;\n// This class models the Lookup Sub-Table in the Open Type layout common tables.\nClass LookupSubTable;\n// This class models the Lookup Table in the Open Type layout common tables.\nClass LookupTable;\n// This class models the Range Record in the Coverage format 2 in the Open Type layout common tables.\nClass RangeRecord;\n// This class models the Script tags in the Open Type Font specs.\nClass ScriptTable;\n", "des": "This package contains the highly obfuscated Layout Common Table Formats system of tables from the Open Type Font specs."}
{"index": 1109, "repo": "fontbox-3.0.0-beta1", "code": "package gsub\n\n// This class is a part of the GSUB — Glyph Substitution Table system of tables in the Open Type Font specs.\nClass LigatureSetTable;\n// This class is a part of the GSUB — Glyph Substitution Table system of tables in the Open Type Font specs.\nClass LigatureTable;\n// This class is a part of the GSUB — Glyph Substitution Table system of tables in the Open Type Font specs.\nClass LookupTypeLigatureSubstitutionSubstFormat1;\n// \nClass LookupTypeMultipleSubstitutionFormat1;\n// This class is a part of the GSUB — Glyph Substitution Table system of tables in the Open Type Font specs.\nClass LookupTypeSingleSubstFormat1;\n// This class is a part of the GSUB — Glyph Substitution Table system of tables in the Open Type Font specs.\nClass LookupTypeSingleSubstFormat2;\n// This class is a part of the GSUB — Glyph Substitution Table system of tables in the Open Type Font specs.\nClass SequenceTable;\n", "des": "This package contains the highly obfuscated GSUB, aka, Glyph Substitution Table system of tables from the Open Type Font specs."}
{"index": 1110, "repo": "fontbox-3.0.0-beta1", "code": "package type1\n\n// Something which can read Type 1 CharStrings, namely Type 1 and CFF fonts.\nInterface Type1CharStringReader;\n// Represents an Adobe Type 1 (.pfb) font.\nClass Type1Font;\n// Thrown when a font is damaged and cannot be read.\nClass DamagedFontException;\n", "des": "This package holds classes used to parse Type1-Fonts."}
{"index": 1111, "repo": "fontbox-3.0.0-beta1", "code": "package util\n\n// This is an implementation of a bounding box.\nClass BoundingBox;\n", "des": "This package contains utility classes used by various font types."}
{"index": 1112, "repo": "fontbox-3.0.0-beta1", "code": "package autodetect\n\n// Implementers provide find method for searching native operating system for available fonts.\nInterface FontDirFinder;\n// Helps to autodetect/locate available operating system fonts.\nClass FontFileFinder;\n// Mac font directory finder.\nClass MacFontDirFinder;\n// Native font finder base class.\nClass NativeFontDirFinder;\n// Font finder for OS/400 systems.\nClass OS400FontDirFinder;\n// Unix font directory finder.\nClass UnixFontDirFinder;\n// FontFinder for native Windows platforms.\nClass WindowsFontDirFinder;\n", "des": "This package contains utility classes to manage local fonts."}
{"index": 1113, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package deviceplugin\n\n// A must interface for vendor plugin to implement.\nInterface DevicePlugin;\n// An optional interface to implement if custom device scheduling is needed.\nInterface DevicePluginScheduler;\n// Represent one \"device\" resource.\nClass Device;\n// Builder for Device.\nClass Device.Builder;\n// Contains plugin register request info.\nClass DeviceRegisterRequest;\n// Builder class for construct DeviceRegisterRequest.\nClass DeviceRegisterRequest.Builder;\n// This is a spec used to prepare and run container.\nClass DeviceRuntimeSpec;\n// Builder for DeviceRuntimeSpec.\nClass DeviceRuntimeSpec.Builder;\n// Describe one device mount.\nClass MountDeviceSpec;\n// Builder for MountDeviceSpec.\nClass MountDeviceSpec.Builder;\n// Describe one volume mount.\nClass MountVolumeSpec;\n// Builder for MountVolumeSpec.\nClass MountVolumeSpec.Builder;\n// Describe one volume creation or deletion.\nClass VolumeSpec;\n// Builder for VolumeSpec.\nClass VolumeSpec.Builder;\n// YarnRuntime parameter enum for DevicePlugin.\nEnum YarnRuntimeType;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1114, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package pb\n\n// Utilities for converting from PB representations.\nClass NMProtoUtils;\n// \nClass ResourceLocalizationSpecPBImpl;\n", "des": "Package containing classes for working with Protobuf."}
{"index": 1115, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package collectormanager\n\n// Service that handles collector information.\nClass NMCollectorService;\n", "des": "Package org.apache.hadoop.yarn.server.nodemanager.collectormanager contains classes for handling timeline collector information."}
{"index": 1116, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package recovery\n\n// Encapsulates the recovery info needed to recover a DeletionTask from the NM state store.\nClass DeletionTaskRecoveryInfo;\n", "des": "Package containing classes for recovering DeletionTasks."}
{"index": 1117, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package task\n\n// DeletionTasks are supplied to the DeletionService for deletion.\nClass DeletionTask;\n// DeletionTask handling the removal of Docker containers.\nClass DockerContainerDeletionTask;\n// DeletionTask handling the removal of files (and directories).\nClass FileDeletionTask;\n// Available types of DeletionTasks.\nEnum DeletionTaskType;\n", "des": "Package containing DeletionTasks for use with the DeletionService."}
{"index": 1118, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package launcher\n\n// Pluggable ContainersLauncher interface for processing ContainersLauncherEvents.\nInterface AbstractContainersLauncher;\n// Cleanup the container.\nClass ContainerCleanup;\n// \nClass ContainerLaunch;\n// \nClass ContainerLaunch.ShellScriptBuilder;\n// Relaunch container.\nClass ContainerRelaunch;\n// The launcher for the containers.\nClass ContainersLauncher;\n// \nClass ContainersLauncherEvent;\n// This is a ContainerLaunch which has been recovered after an NM restart (for rolling upgrades).\nClass RecoveredContainerLaunch;\n// This is a ContainerLaunch which has been recovered after an NM restart for pause containers (for rolling upgrades)\nClass RecoverPausedContainerLaunch;\n// \nClass SignalContainersLauncherEvent;\n// \nEnum ContainersLauncherEventType;\n", "des": "This package contains classes related to NM container launch."}
{"index": 1119, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package numa\n\n// NumaNodeResource class holds the NUMA node topology with the total and used resources.\nClass NumaNodeResource;\n// NumaResourceAllocation contains Memory nodes and CPU nodes assigned to a container.\nClass NumaResourceAllocation;\n// NUMA Resources Allocator reads the NUMA topology and assigns NUMA nodes to the containers.\nClass NumaResourceAllocator;\n// ResourceHandler implementation for allocating NUMA Resources to each container.\nClass NumaResourceHandlerImpl;\n", "des": "Package org.apache.hadoop.yarn.server.nodemanager.containermanager.linux."}
{"index": 1120, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package docker\n\n// \nClass DockerClient;\n// \nClass DockerCommand;\n// Utility class for executing common docker operations.\nClass DockerCommandExecutor;\n// Encapsulates the docker exec command and its command line arguments.\nClass DockerExecCommand;\n// Encapsulates the docker images command and its command line arguments.\nClass DockerImagesCommand;\n// Encapsulates the docker inspect command and its command line arguments.\nClass DockerInspectCommand;\n// Encapsulates the docker kill command and its command line arguments.\nClass DockerKillCommand;\n// \nClass DockerLoadCommand;\n// Encapsulates the docker pull command and its command line arguments.\nClass DockerPullCommand;\n// Encapsulates the docker rm command and its command line arguments.\nClass DockerRmCommand;\n// \nClass DockerRunCommand;\n// Encapsulates the docker start command and its command line arguments.\nClass DockerStartCommand;\n// Encapsulates the docker stop command and its command line arguments.\nClass DockerStopCommand;\n// Docker Volume Command, run \"docker volume --help\" for more details.\nClass DockerVolumeCommand;\n// Potential states that the docker status can return.\nEnum DockerCommandExecutor.DockerContainerStatus;\n", "des": "Package containing classes related to Docker commands and common operations used within the @{link DockerLinuxContainerRuntime}."}
{"index": 1121, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package runc\n\n// This class is a plugin interface for the RuncContainerRuntime to convert image tags into OCI Image Manifests.\nInterface RuncImageTagToManifestPlugin;\n// This class is a plugin interface for the RuncContainerRuntime that maps OCI Image Manifests into associated config and layers.\nInterface RuncManifestToResourcesPlugin;\n// This class is a plugin for the RuncContainerRuntime that maps runC image manifests into their associated config and layers that are located in HDFS.\nClass HdfsManifestToResourcesPlugin;\n// This class is a Java representation of the OCI Image Manifest Specification.\nClass ImageManifest;\n// This class is a Java representation of an OCI Image Blob.\nClass ImageManifest.Blob;\n// This class is a plugin for the RuncContainerRuntime to convert image tags into runC image manifests.\nClass ImageTagToManifestPlugin;\n// This class is used by the RuncContainerRuntime to pass a JSON object to the container-executor.\nClass RuncContainerExecutorConfig;\n// This class is a Java representation of an OCI image layer.\nClass RuncContainerExecutorConfig.OCILayer;\n// This class is a Java representation of the OCI Runtime Specification.\nClass RuncContainerExecutorConfig.OCIRuntimeConfig;\n// This class is a Java representation of the oci annotations config section of the OCI Runtime Specification.\nClass RuncContainerExecutorConfig.OCIRuntimeConfig.OCIAnnotationsConfig;\n// This class is a Java representation of the oci hooks section of the OCI Runtime Specification.\nClass RuncContainerExecutorConfig.OCIRuntimeConfig.OCIHooksConfig;\n// This class is a Java representation of the hook type section of the OCI Runtime Specification.\nClass RuncContainerExecutorConfig.OCIRuntimeConfig.OCIHooksConfig.HookType;\n// This class is a Java representation of the oci linux config section of the OCI Runtime Specification.\nClass RuncContainerExecutorConfig.OCIRuntimeConfig.OCILinuxConfig;\n// This class is a Java representation of the device section of the OCI Runtime Specification.\nClass RuncContainerExecutorConfig.OCIRuntimeConfig.OCILinuxConfig.Device;\n// This class is a Java representation of the idmapping section of the OCI Runtime Specification.\nClass RuncContainerExecutorConfig.OCIRuntimeConfig.OCILinuxConfig.IDMapping;\n", "des": "Package containing classes related to runC commands and common operations used within the @{link RuncContainerRuntime}."}
{"index": 1122, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package records\n\n// Set of configuration properties that can be injected into the service components via envs, files and custom pluggable helper docker containers.\nClass AuxServiceConfiguration;\n// A config file that needs to be created and made available as a volume in an service component container.\nClass AuxServiceFile;\n// An Service resource has the following attributes.\nClass AuxServiceRecord;\n// A list of Services.\nClass AuxServiceRecords;\n// Config Type.\nEnum AuxServiceFile.TypeEnum;\n", "des": "Package used for auxiliary services manifest records."}
{"index": 1123, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package resourceplugin\n\n// Interface to make different resource plugins (e.g.\nInterface DockerCommandPlugin;\n// ResourcePlugin is an interface for node manager to easier support discovery/manage/isolation for new resource types.\nInterface ResourcePlugin;\n// Plugins to handle resources on a node.\nClass NodeResourceUpdaterPlugin;\n// Manages ResourcePlugin configured on this NodeManager.\nClass ResourcePluginManager;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1124, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package nec\n\n// A device framework plugin which supports NEC Vector Engine.\nClass NECVEPlugin;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1125, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package nvidia\n\n// Nvidia GPU plugin supporting both Nvidia container runtime v2 for Docker and non-Docker container.\nClass NvidiaGPUPluginForRuntimeV2;\n// Different type of link.\nEnum NvidiaGPUPluginForRuntimeV2.DeviceLinkType;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1126, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package deviceframework\n\n// Device wrapper class used for NM REST API.\nClass AssignedDevice;\n// Schedule device resource based on requirements and do book keeping It holds all device type resource and can do scheduling as a default scheduler.\nClass DeviceMappingManager;\n// The DevicePluginAdapter will adapt existing hooks.\nClass DevicePluginAdapter;\n// Bridge DevicePlugin and the hooks related to lunch Docker container.\nClass DeviceResourceDockerRuntimePluginImpl;\n// The Hooks into container lifecycle.\nClass DeviceResourceHandlerImpl;\n// Hooks into NodeStatusUpdater to update resource.\nClass DeviceResourceUpdaterImpl;\n// A shell Wrapper to ease testing.\nClass ShellWrapper;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1127, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package fpga\n\n// FPGA plugin interface for vendor to implement.\nInterface AbstractFpgaVendorPlugin;\n// A class that represents an FPGA card.\nClass FpgaDevice;\n// \nClass FpgaDiscoverer;\n// \nClass FpgaNodeResourceUpdateHandler;\n// \nClass FpgaResourcePlugin;\n// Intel FPGA for OpenCL plugin.\nClass IntelFpgaOpenclPlugin;\n// Helper class to run aocl diagnose & determine major/minor numbers.\nClass IntelFpgaOpenclPlugin.InnerShellExecutor;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1128, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package discovery\n\n// Interface for an FPGA device discovery strategy.\nInterface FPGADiscoveryStrategy;\n// FPGA device discovery strategy which invokes the \"aocl\" SDK command to retrieve the list of available FPGA cards.\nClass AoclOutputBasedDiscoveryStrategy;\n// Parses a string which specifies FPGA devices.\nClass DeviceSpecParser;\n// FPGA device discovery strategy which invokes an external script.\nClass ScriptBasedFPGADiscoveryStrategy;\n// FPGA device discovery strategy which parses a string.\nClass SettingsBasedFPGADiscoveryStrategy;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1129, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package gpu\n\n// In addition to GpuDevice, this include container id and more runtime information related to who is using the GPU device if possible\nClass AssignedGpuDevice;\n// This class is used to represent GPU device while allocation.\nClass GpuDevice;\n// \nClass GpuDiscoverer;\n// Factory to create GpuDocker Command Plugin instance\nClass GpuDockerCommandPluginFactory;\n// \nClass GpuNodeResourceUpdateHandler;\n// \nClass GpuResourcePlugin;\n// Executes the \"nvidia-smi\" command and returns an object based on its output.\nClass NvidiaBinaryHelper;\n// Implementation to use nvidia-docker v1 as GPU docker command plugin.\nClass NvidiaDockerV1CommandPlugin;\n// Implementation to use nvidia-docker v2 as GPU docker command plugin.\nClass NvidiaDockerV2CommandPlugin;\n// This exception is to be thrown when allowed GPU device specification is empty or invalid.\nClass GpuDeviceSpecificationException;\n", "des": "Package for GPU support classes."}
{"index": 1130, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package scheduler\n\n// This interface abstracts out how a container contributes to Resource Utilization of the node.\nInterface ResourceUtilizationTracker;\n// An implementation of the ResourceUtilizationTracker that equates resource utilization with the total resource allocated to the container.\nClass AllocationBasedResourceUtilizationTracker;\n// The ContainerScheduler manages a collection of runnable containers.\nClass ContainerScheduler;\n// Events consumed by the ContainerScheduler.\nClass ContainerSchedulerEvent;\n// Update Event consumed by the ContainerScheduler.\nClass UpdateContainerSchedulerEvent;\n// Event types associated with ContainerSchedulerEvent.\nEnum ContainerSchedulerEventType;\n", "des": "Container Scheduler"}
{"index": 1131, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package csi\n\n// Publish/un-publish CSI volumes on node manager.\nClass ContainerVolumePublisher;\n", "des": "CSI volumes."}
{"index": 1132, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package nodelabels\n\n// Interface which will be responsible for fetching node descriptors, a node descriptor could be a NodeLabel or a NodeAttribute.\nInterface NodeDescriptorsProvider<T>;\n// Provides base implementation of NodeDescriptorsProvider with Timer and expects subclass to provide TimerTask which can fetch node descriptors.\nClass AbstractNodeDescriptorsProvider<T>;\n// Configuration based node attributes provider.\nClass ConfigurationNodeAttributesProvider;\n// Provides Node's Labels by constantly monitoring the configuration.\nClass ConfigurationNodeLabelsProvider;\n// Abstract class which will be responsible for fetching the node attributes.\nClass NodeAttributesProvider;\n// A node descriptors script runner periodically runs a script, parses the output to collect desired descriptors, and then post these descriptors to the given NodeDescriptorsProvider.\nClass NodeDescriptorsScriptRunner<T>;\n// Abstract class which will be responsible for fetching the node labels.\nClass NodeLabelsProvider;\n// Node attribute provider that periodically runs a script to collect node attributes.\nClass ScriptBasedNodeAttributesProvider;\n// The class which provides functionality of getting the labels of the node using the configured node labels provider script.\nClass ScriptBasedNodeLabelsProvider;\n", "des": "Package to encapsulate classes used to handle node labels and node attributes in NM."}
{"index": 1133, "repo": "hadoop-yarn-server-nodemanager-3.3.6", "code": "package timelineservice\n\n// Event posted to NMTimelinePublisher which in turn publishes it to timelineservice v2.\nClass NMTimelineEvent;\n// Metrics publisher service that publishes data to the timeline service v.2.\nClass NMTimelinePublisher;\n// Type of NMTimelineEvent.\nEnum NMTimelineEventType;\n", "des": "Package org.apache.hadoop.yarn.server.nodemanager.timelineservice contains classes related to publishing container events and other NM lifecycle events to ATSv2."}
{"index": 1134, "repo": "hadoop-yarn-api-3.3.6", "code": "package ams\n\n// This is a marker interface for a context object that is injected into the ApplicationMasterService processor.\nInterface ApplicationMasterServiceContext;\n// Interface to abstract out the the actual processing logic of the Application Master Service.\nInterface ApplicationMasterServiceProcessor;\n// Utility methods to be used by ApplicationMasterServiceProcessor.\nClass ApplicationMasterServiceUtils;\n", "des": "Public api for Application Master Service interceptors."}
{"index": 1135, "repo": "hadoop-yarn-api-3.3.6", "code": "package impl\n\n// LightWeightResource extends Resource to handle base resources such as memory and CPU.\nClass LightWeightResource;\n", "des": "Package org.apache.hadoop.yarn.api.records.impl contains classes which define basic resources."}
{"index": 1136, "repo": "hadoop-yarn-api-3.3.6", "code": "package timeline\n\n// \nClass TimelineAbout;\n// The response of delegation token related request\nClass TimelineDelegationTokenResponse;\n// This class contains the information about a timeline domain, which is used to a user to host a number of timeline entities, isolating them from others'.\nClass TimelineDomain;\n// The class that hosts a list of timeline domains.\nClass TimelineDomains;\n// The class that hosts a list of timeline entities.\nClass TimelineEntities;\n// The class that contains the the meta information of some conceptual entity and its related events.\nClass TimelineEntity;\n// TimelineEntityGroupId is an abstract way for timeline service users to represent “a group of related timeline data.\nClass TimelineEntityGroupId;\n// The class that contains the information of an event that is related to some conceptual entity of an application.\nClass TimelineEvent;\n// The class that hosts a list of events, which are categorized according to their related entities.\nClass TimelineEvents;\n// The class that hosts a list of events that are only related to one entity.\nClass TimelineEvents.EventsOfOneEntity;\n// This class holds health information for ATS.\nClass TimelineHealth;\n// A class that holds a list of put errors.\nClass TimelinePutResponse;\n// A class that holds the error code for one entity.\nClass TimelinePutResponse.TimelinePutError;\n// Timline health status.\nEnum TimelineHealth.TimelineHealthStatus;\n", "des": "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements."}
{"index": 1137, "repo": "hadoop-yarn-api-3.3.6", "code": "package timelineservice\n\n// This entity represents an application attempt.\nClass ApplicationAttemptEntity;\n// This entity represents an application.\nClass ApplicationEntity;\n// This entity represents a YARN cluster.\nClass ClusterEntity;\n// This entity represents a container belonging to an application attempt.\nClass ContainerEntity;\n// Entity that represents a record for flow activity.\nClass FlowActivityEntity;\n// This entity represents a flow run.\nClass FlowRunEntity;\n// This class extends timeline entity and defines parent-child relationships with other entities.\nClass HierarchicalTimelineEntity;\n// This entity represents a queue.\nClass QueueEntity;\n// This entity represents a user defined entities to be stored under sub application table.\nClass SubApplicationEntity;\n// This class contains the information about a timeline service domain, which is used to a user to host a number of timeline entities, isolating them from others'.\nClass TimelineDomain;\n// This class hosts a set of timeline entities.\nClass TimelineEntities;\n// The basic timeline entity data structure for timeline service v2.\nClass TimelineEntity;\n// Identifier of timeline entity(entity id + entity type).\nClass TimelineEntity.Identifier;\n// This class contains the information of an event that belongs to an entity.\nClass TimelineEvent;\n// This class contains the information of a metric that is related to some entity.\nClass TimelineMetric;\n// A calculator for timeline metrics.\nClass TimelineMetricCalculator;\n// A class that holds a list of put errors.\nClass TimelineWriteResponse;\n// A class that holds the error code for one entity.\nClass TimelineWriteResponse.TimelineWriteError;\n// This entity represents a user.\nClass UserEntity;\n// Defines type of entity.\nEnum TimelineEntityType;\n// Type of metric.\nEnum TimelineMetric.Type;\n// Aggregation operations.\nEnum TimelineMetricOperation;\n", "des": "Package org.apache.hadoop.yarn.api.records.timelineservice contains classes which define the data model for ATSv2."}
{"index": 1138, "repo": "hadoop-yarn-api-3.3.6", "code": "package resource\n\n// Interface used to enable the elements of the constraint tree to be visited.\nInterface PlacementConstraint.Visitable;\n// Visitor API for a constraint tree.\nInterface PlacementConstraint.Visitor<T>;\n// PlacementConstraint represents a placement constraint for a resource allocation.\nClass PlacementConstraint;\n// Abstract class that acts as the superclass of all placement constraint classes.\nClass PlacementConstraint.AbstractConstraint;\n// Class that represents a composite constraint that is a conjunction of other constraints.\nClass PlacementConstraint.And;\n// Class that represents a cardinality constraint.\nClass PlacementConstraint.CardinalityConstraint;\n// Class that represents composite constraints, which comprise other constraints, forming a constraint tree.\nClass PlacementConstraint.CompositeConstraint<R extends PlacementConstraint.Visitable>;\n// Class that represents a composite constraint that comprises a list of timed placement constraints (see PlacementConstraint.TimedPlacementConstraint).\nClass PlacementConstraint.DelayedOr;\n// Class that represents a composite constraint that is a disjunction of other constraints.\nClass PlacementConstraint.Or;\n// Consider a set of nodes N that belongs to the scope specified in the constraint.\nClass PlacementConstraint.SingleConstraint;\n// Class that represents a target constraint.\nClass PlacementConstraint.TargetConstraint;\n// Class representing the target expressions that are used in placement constraints.\nClass PlacementConstraint.TargetExpression;\n// Represents a timed placement constraint that has to be satisfied within a time window.\nClass PlacementConstraint.TimedPlacementConstraint;\n// This class contains various static methods for the applications to create placement constraints (see also PlacementConstraint).\nClass PlacementConstraints;\n// Class with static methods for constructing target expressions to be used in placement constraints.\nClass PlacementConstraints.PlacementTargets;\n// Enum specifying the type of the target expression.\nEnum PlacementConstraint.TargetExpression.TargetType;\n// The unit of scheduling delay.\nEnum PlacementConstraint.TimedPlacementConstraint.DelayUnit;\n", "des": "API related to resources."}
{"index": 1139, "repo": "hadoop-yarn-api-3.3.6", "code": "package constraint\n\n// Tokenizer interface that used to parse an expression.\nInterface PlacementConstraintParser.ConstraintTokenizer;\n// Placement constraint expression parser.\nClass PlacementConstraintParser;\n// A basic tokenizer that splits an expression by a given delimiter.\nClass PlacementConstraintParser.BaseStringTokenizer;\n// Constraint parser used to parse a given target expression, such as \"cardinality, NODE, foo, 0, 1\".\nClass PlacementConstraintParser.CardinalityConstraintParser;\n// Parser used to parse conjunction form of constraints, such as AND(A, ..., B), OR(A, ..., B).\nClass PlacementConstraintParser.ConjunctionConstraintParser;\n// Tokenizer used to parse conjunction form of a constraint expression, [AND|OR](C1:C2:...:Cn).\nClass PlacementConstraintParser.ConjunctionTokenizer;\n// Constraint Parser used to parse placement constraints from a given expression.\nClass PlacementConstraintParser.ConstraintParser;\n// Tokenizer used to handle a placement spec composed by multiple constraint expressions.\nClass PlacementConstraintParser.MultipleConstraintsTokenizer;\n// Constraint parser used to parse a given target expression.\nClass PlacementConstraintParser.NodeConstraintParser;\n// A helper class to encapsulate source tags and allocations in the placement specification.\nClass PlacementConstraintParser.SourceTags;\n// Tokenizer used to parse allocation tags expression, which should be in tag(numOfAllocations) syntax.\nClass PlacementConstraintParser.SourceTagsTokenizer;\n// Constraint parser used to parse a given target expression, such as \"NOTIN, NODE, foo, bar\".\nClass PlacementConstraintParser.TargetConstraintParser;\n// Exception when the placement constraint parser fails to parse an expression.\nClass PlacementConstraintParseException;\n", "des": "Package org.apache.hadoop.yarn.util.constraint contains classes which is used as utility class for placement constraints."}
{"index": 1140, "repo": "hadoop-yarn-api-3.3.6", "code": "package csi\n\n// Utility class for CSI in the API level.\nClass CsiConfigUtils;\n", "des": "Package that includes some CSI utility classes."}
{"index": 1141, "repo": "hadoop-yarn-api-3.3.6", "code": "package resource\n\n// Helper class to read the resource-types to be supported by the system.\nClass ResourceUtils;\n", "des": "Package org.apache.hadoop.yarn.util.resource contains classes which is used as utility class for resource profile computations."}
{"index": 1142, "repo": "commons-math3-3.6.1", "code": "package math3\n\n// Interface representing a field.\nInterface Field<T>;\n// Interface representing field elements.\nInterface FieldElement<T>;\n// Interface representing a real field.\nInterface RealFieldElement<T>;\n", "des": "Common classes used throughout the commons-math library."}
{"index": 1143, "repo": "commons-math3-3.6.1", "code": "package analysis\n\n// An interface representing a bivariate real function.\nInterface BivariateFunction;\n// as of 3.1 replaced by MultivariateDifferentiableFunction\nInterface DifferentiableMultivariateFunction;\n// as of 3.1 replaced by MultivariateDifferentiableVectorFunction\nInterface DifferentiableMultivariateVectorFunction;\n// as of 3.1 replaced by UnivariateDifferentiableFunction\nInterface DifferentiableUnivariateFunction;\n// as of 3.1 replaced by UnivariateDifferentiableMatrixFunction\nInterface DifferentiableUnivariateMatrixFunction;\n// as of 3.1 replaced by UnivariateDifferentiableVectorFunction\nInterface DifferentiableUnivariateVectorFunction;\n// An interface representing a multivariate real function.\nInterface MultivariateFunction;\n// An interface representing a multivariate matrix function.\nInterface MultivariateMatrixFunction;\n// An interface representing a multivariate vectorial function.\nInterface MultivariateVectorFunction;\n// An interface representing a real function that depends on one independent variable plus some extra parameters.\nInterface ParametricUnivariateFunction;\n// An interface representing a univariate real function.\nInterface RealFieldUnivariateFunction<T extends RealFieldElement<T>>;\n// An interface representing a trivariate real function.\nInterface TrivariateFunction;\n// An interface representing a univariate real function.\nInterface UnivariateFunction;\n// An interface representing a univariate matrix function.\nInterface UnivariateMatrixFunction;\n// An interface representing a univariate vectorial function.\nInterface UnivariateVectorFunction;\n// Utilities for manipulating function objects.\nClass FunctionUtils;\n", "des": "Parent package for common numerical analysis procedures, including root finding, function interpolation and integration."}
{"index": 1144, "repo": "commons-math3-3.6.1", "code": "package differentiation\n\n// Extension of MultivariateFunction representing a multivariate differentiable real function.\nInterface MultivariateDifferentiableFunction;\n// Extension of MultivariateVectorFunction representing a multivariate differentiable vectorial function.\nInterface MultivariateDifferentiableVectorFunction;\n// Interface for univariate functions derivatives.\nInterface UnivariateDifferentiableFunction;\n// Extension of UnivariateMatrixFunction representing a univariate differentiable matrix function.\nInterface UnivariateDifferentiableMatrixFunction;\n// Extension of UnivariateVectorFunction representing a univariate differentiable vectorial function.\nInterface UnivariateDifferentiableVectorFunction;\n// Interface defining the function differentiation operation.\nInterface UnivariateFunctionDifferentiator;\n// Interface defining the function differentiation operation.\nInterface UnivariateMatrixFunctionDifferentiator;\n// Interface defining the function differentiation operation.\nInterface UnivariateVectorFunctionDifferentiator;\n// Class representing both the value and the differentials of a function.\nClass DerivativeStructure;\n// Class holding \"compiled\" computation rules for derivative structures.\nClass DSCompiler;\n// Univariate functions differentiator using finite differences.\nClass FiniteDifferencesDifferentiator;\n// Class representing the gradient of a multivariate function.\nClass GradientFunction;\n// Class representing the Jacobian of a multivariate vector function.\nClass JacobianFunction;\n// First derivative computation with large number of variables.\nClass SparseGradient;\n", "des": "This package holds the main interfaces and basic building block classes dealing with differentiation."}
{"index": 1145, "repo": "commons-math3-3.6.1", "code": "package function\n\n// Absolute value function.\nClass Abs;\n// Arc-cosine function.\nClass Acos;\n// Hyperbolic arc-cosine function.\nClass Acosh;\n// Add the two operands.\nClass Add;\n// Arc-sine function.\nClass Asin;\n// Hyperbolic arc-sine function.\nClass Asinh;\n// Arc-tangent function.\nClass Atan;\n// Arc-tangent function.\nClass Atan2;\n// Hyperbolic arc-tangent function.\nClass Atanh;\n// Cube root function.\nClass Cbrt;\n// ceil function.\nClass Ceil;\n// Constant function.\nClass Constant;\n// Cosine function.\nClass Cos;\n// Hyperbolic cosine function.\nClass Cosh;\n// Divide the first operand by the second.\nClass Divide;\n// Exponential function.\nClass Exp;\n// ex-1 function.\nClass Expm1;\n// floor function.\nClass Floor;\n// Gaussian function.\nClass Gaussian;\n// Parametric function where the input array contains the parameters of the Gaussian, ordered as follows: Norm Mean Standard deviation\nClass Gaussian.Parametric;\n// simple harmonic oscillator function.\nClass HarmonicOscillator;\n// Parametric function where the input array contains the parameters of the harmonic oscillator function, ordered as follows: Amplitude Angular frequency Phase\nClass HarmonicOscillator.Parametric;\n// Identity function.\nClass Identity;\n// Inverse function.\nClass Inverse;\n// Natural logarithm function.\nClass Log;\n// Base 10 logarithm function.\nClass Log10;\n// log(1 + p) function.\nClass Log1p;\n// Generalised logistic function.\nClass Logistic;\n// Parametric function where the input array contains the parameters of the logistic function, ordered as follows: k m b q a n\nClass Logistic.Parametric;\n// Logit function.\nClass Logit;\n// Parametric function where the input array contains the parameters of the logit function, ordered as follows: Lower bound Higher bound\nClass Logit.Parametric;\n// Maximum function.\nClass Max;\n", "des": "The function package contains function objects that wrap the methods contained in Math, as well as common mathematical functions such as the gaussian and sinc functions."}
{"index": 1146, "repo": "commons-math3-3.6.1", "code": "package integration\n\n// Interface for univariate real integration algorithms.\nInterface UnivariateIntegrator;\n// Provide a default implementation for several generic functions.\nClass BaseAbstractUnivariateIntegrator;\n// This algorithm divides the integration interval into equally-sized sub-interval and on each of them performs a Legendre-Gauss quadrature.\nClass IterativeLegendreGaussIntegrator;\n// As of 3.1 (to be removed in 4.0).\nClass LegendreGaussIntegrator;\n// Implements the Midpoint Rule for integration of real univariate functions.\nClass MidPointIntegrator;\n// Implements the Romberg Algorithm for integration of real univariate functions.\nClass RombergIntegrator;\n// Implements Simpson's Rule for integration of real univariate functions.\nClass SimpsonIntegrator;\n// Implements the Trapezoid Rule for integration of real univariate functions.\nClass TrapezoidIntegrator;\n", "des": "Numerical integration (quadrature) algorithms for univariate real functions."}
{"index": 1147, "repo": "commons-math3-3.6.1", "code": "package gauss\n\n// Base class for rules that determines the integration nodes and their weights.\nClass BaseRuleFactory<T extends Number>;\n// Class that implements the Gaussian rule for integrating a weighted function.\nClass GaussIntegrator;\n// Class that provides different ways to compute the nodes and weights to be used by the Gaussian integration rule.\nClass GaussIntegratorFactory;\n// Factory that creates a Gauss-type quadrature rule using Hermite polynomials of the first kind.\nClass HermiteRuleFactory;\n// Factory that creates Gauss-type quadrature rule using Legendre polynomials.\nClass LegendreHighPrecisionRuleFactory;\n// Factory that creates Gauss-type quadrature rule using Legendre polynomials.\nClass LegendreRuleFactory;\n// This class's implements integrate method assuming that the integral is symmetric about 0.\nClass SymmetricGaussIntegrator;\n", "des": "Gauss family of quadrature schemes."}
{"index": 1148, "repo": "commons-math3-3.6.1", "code": "package interpolation\n\n// Interface representing a bivariate real interpolating function where the sample points must be specified on a regular grid.\nInterface BivariateGridInterpolator;\n// Interface representing a univariate real interpolating function.\nInterface MultivariateInterpolator;\n// Interface representing a trivariate real interpolating function where the sample points must be specified on a regular grid.\nInterface TrivariateGridInterpolator;\n// Interface representing a univariate real interpolating function.\nInterface UnivariateInterpolator;\n// Computes a cubic spline interpolation for the data set using the Akima algorithm, as originally formulated by Hiroshi Akima in his 1970 paper \"A New Method of Interpolation and Smooth Curve Fitting Based on Local Procedures.\" J.\nClass AkimaSplineInterpolator;\n// Function that implements the bicubic spline interpolation.\nClass BicubicInterpolatingFunction;\n// Generates a bicubic interpolating function.\nClass BicubicInterpolator;\n// as of 3.4 replaced by PiecewiseBicubicSplineInterpolatingFunction\nClass BicubicSplineInterpolatingFunction;\n// as of 3.4 replaced by PiecewiseBicubicSplineInterpolator\nClass BicubicSplineInterpolator;\n// Implements the Divided Difference Algorithm for interpolation of real univariate functions.\nClass DividedDifferenceInterpolator;\n// Polynomial interpolator using both sample values and sample derivatives.\nClass FieldHermiteInterpolator<T extends FieldElement<T>>;\n// Polynomial interpolator using both sample values and sample derivatives.\nClass HermiteInterpolator;\n// Utility class for the MicrosphereProjectionInterpolator algorithm.\nClass InterpolatingMicrosphere;\n// Utility class for the MicrosphereProjectionInterpolator algorithm.\nClass InterpolatingMicrosphere2D;\n// Implements a linear function for interpolation of real univariate functions.\nClass LinearInterpolator;\n// Implements the Local Regression Algorithm (also Loess, Lowess) for interpolation of real univariate functions.\nClass LoessInterpolator;\n// Code will be removed in 4.0.\nClass MicrosphereInterpolatingFunction;\n// Code will be removed in 4.0.\nClass MicrosphereInterpolator;\n", "des": "Univariate real functions interpolation algorithms."}
{"index": 1149, "repo": "commons-math3-3.6.1", "code": "package polynomials\n\n// Immutable representation of a real polynomial function with real coefficients.\nClass PolynomialFunction;\n// Dedicated parametric polynomial class.\nClass PolynomialFunction.Parametric;\n// Implements the representation of a real polynomial function in Lagrange Form.\nClass PolynomialFunctionLagrangeForm;\n// Implements the representation of a real polynomial function in Newton Form.\nClass PolynomialFunctionNewtonForm;\n// Represents a polynomial spline function.\nClass PolynomialSplineFunction;\n// A collection of static methods that operate on or return polynomials.\nClass PolynomialsUtils;\n", "des": "Univariate real polynomials implementations, seen as differentiable univariate real functions."}
{"index": 1150, "repo": "commons-math3-3.6.1", "code": "package solvers\n\n// Interface for (univariate real) rootfinding algorithms.\nInterface BaseUnivariateSolver<FUNC extends UnivariateFunction>;\n// Interface for (univariate real) root-finding algorithms that maintain a bracketed solution.\nInterface BracketedRealFieldUnivariateSolver<T extends RealFieldElement<T>>;\n// Interface for (univariate real) root-finding algorithms that maintain a bracketed solution.\nInterface BracketedUnivariateSolver<FUNC extends UnivariateFunction>;\n// as of 3.1, replaced by UnivariateDifferentiableSolver\nInterface DifferentiableUnivariateSolver;\n// Interface for (polynomial) root-finding algorithms.\nInterface PolynomialSolver;\n// Interface for (univariate real) rootfinding algorithms.\nInterface UnivariateDifferentiableSolver;\n// Interface for (univariate real) root-finding algorithms.\nInterface UnivariateSolver;\n// as of 3.1, replaced by AbstractUnivariateDifferentiableSolver\nClass AbstractDifferentiableUnivariateSolver;\n// Base class for solvers.\nClass AbstractPolynomialSolver;\n// Provide a default implementation for several functions useful to generic solvers.\nClass AbstractUnivariateDifferentiableSolver;\n// Base class for solvers.\nClass AbstractUnivariateSolver;\n// Provide a default implementation for several functions useful to generic solvers.\nClass BaseAbstractUnivariateSolver<FUNC extends UnivariateFunction>;\n// Base class for all bracketing Secant-based methods for root-finding (approximating a zero of a univariate real function).\nClass BaseSecantSolver;\n// Implements the bisection algorithm for finding zeros of univariate real functions.\nClass BisectionSolver;\n// This class implements a modification of the Brent algorithm.\nClass BracketingNthOrderBrentSolver;\n// This class implements the Brent algorithm for finding zeros of real univariate functions.\nClass BrentSolver;\n// This class implements a modification of the Brent algorithm.\nClass FieldBracketingNthOrderBrentSolver<T extends RealFieldElement<T>>;\n// Implements the Illinois method for root-finding (approximating a zero of a univariate real function).\nClass IllinoisSolver;\n", "des": "Root finding algorithms, for univariate real functions."}
{"index": 1151, "repo": "commons-math3-3.6.1", "code": "package complex\n\n// Representation of a Complex number, i.e.\nClass Complex;\n// Representation of the complex numbers field.\nClass ComplexField;\n// Formats a Complex number in cartesian format \"Re(c) + Im(c)i\".\nClass ComplexFormat;\n// Static implementations of common Complex utilities functions.\nClass ComplexUtils;\n// This class implements quaternions (Hamilton's hypercomplex numbers).\nClass Quaternion;\n// A helper class for the computation and caching of the n-th roots of unity.\nClass RootsOfUnity;\n", "des": "Complex number type and implementations of complex transcendental functions."}
{"index": 1152, "repo": "commons-math3-3.6.1", "code": "package dfp\n\n// as of 3.6, replaced with RealFieldUnivariateFunction\nInterface UnivariateDfpFunction;\n// as of 3.6 replaced with FieldBracketingNthOrderBrentSolver\nClass BracketingNthOrderBrentSolverDFP;\n// Decimal floating point library for Java\nClass Dfp;\n// Subclass of Dfp which hides the radix-10000 artifacts of the superclass.\nClass DfpDec;\n// Field for Decimal floating point instances.\nClass DfpField;\n// Mathematical routines for use with Dfp.\nClass DfpMath;\n// Enumerate for rounding modes.\nEnum DfpField.RoundingMode;\n", "des": "Decimal floating point library for Java"}
{"index": 1153, "repo": "commons-math3-3.6.1", "code": "package distribution\n\n// Interface for distributions on the integers.\nInterface IntegerDistribution;\n// Base interface for multivariate distributions on the reals.\nInterface MultivariateRealDistribution;\n// Base interface for distributions on the reals.\nInterface RealDistribution;\n// Base class for integer-valued discrete distributions.\nClass AbstractIntegerDistribution;\n// Base class for multivariate probability distributions.\nClass AbstractMultivariateRealDistribution;\n// Base class for probability distributions on the reals.\nClass AbstractRealDistribution;\n// Implements the Beta distribution.\nClass BetaDistribution;\n// Implementation of the binomial distribution.\nClass BinomialDistribution;\n// Implementation of the Cauchy distribution.\nClass CauchyDistribution;\n// Implementation of the chi-squared distribution.\nClass ChiSquaredDistribution;\n// Implementation of the constant real distribution.\nClass ConstantRealDistribution;\n// A generic implementation of a discrete probability distribution (Wikipedia) over a finite sample space, based on an enumerated list of <value, probability> pairs.\nClass EnumeratedDistribution<T>;\n// Implementation of an integer-valued EnumeratedDistribution.\nClass EnumeratedIntegerDistribution;\n// Implementation of a real-valued EnumeratedDistribution.\nClass EnumeratedRealDistribution;\n// Implementation of the exponential distribution.\nClass ExponentialDistribution;\n// Implementation of the F-distribution.\nClass FDistribution;\n// Implementation of the Gamma distribution.\nClass GammaDistribution;\n// Implementation of the geometric distribution.\nClass GeometricDistribution;\n// This class implements the Gumbel distribution.\nClass GumbelDistribution;\n// Implementation of the hypergeometric distribution.\nClass HypergeometricDistribution;\n// to be removed in version 4.0 - use KolmogorovSmirnovTest\nClass KolmogorovSmirnovDistribution;\n// This class implements the Laplace distribution.\nClass LaplaceDistribution;\n// This class implements the Lévy distribution.\nClass LevyDistribution;\n// This class implements the Logistic distribution.\nClass LogisticDistribution;\n// Implementation of the log-normal (gaussian) distribution.\nClass LogNormalDistribution;\n// Multivariate normal mixture distribution.\nClass MixtureMultivariateNormalDistribution;\n", "des": "Implementations of common discrete and continuous distributions."}
{"index": 1154, "repo": "commons-math3-3.6.1", "code": "package fitting\n\n// Expectation-Maximization algorithm for fitting the parameters of multivariate normal mixture model distributions.\nClass MultivariateNormalMixtureExpectationMaximization;\n", "des": "Fitting of parameters against distributions."}
{"index": 1155, "repo": "commons-math3-3.6.1", "code": "package exception\n\n// Error thrown when a numerical computation can not be performed because the numerical result failed to converge to a finite value.\nClass ConvergenceException;\n// Exception to be thrown when two dimensions differ.\nClass DimensionMismatchException;\n// Exception to be thrown when there is insufficient data to perform a computation.\nClass InsufficientDataException;\n// Base class for arithmetic exceptions.\nClass MathArithmeticException;\n// Base class for all preconditions violation exceptions.\nClass MathIllegalArgumentException;\n// Base class for exceptions raised by a wrong number.\nClass MathIllegalNumberException;\n// Base class for all exceptions that signal that the process throwing the exception is in a state that does not comply with the set of states that it is designed to be in.\nClass MathIllegalStateException;\n// Exception triggered when something that shouldn't happen does happen.\nClass MathInternalError;\n// Class to signal parse failures.\nClass MathParseException;\n// As of release 4.0, all exceptions thrown by the Commons Math code (except NullArgumentException) inherit from this class.\nClass MathRuntimeException;\n// Base class for all unsupported features.\nClass MathUnsupportedOperationException;\n// Exception to be thrown when some counter maximum value is exceeded.\nClass MaxCountExceededException;\n// Exception to be thrown when two sets of dimensions differ.\nClass MultiDimensionMismatchException;\n// Exception to be thrown when function values have the same sign at both ends of an interval.\nClass NoBracketingException;\n// Exception to be thrown when the required data is missing.\nClass NoDataException;\n// Exception to be thrown when the a sequence of values is not monotonically increasing or decreasing.\nClass NonMonotonicSequenceException;\n// Exception to be thrown when a number is not a number.\nClass NotANumberException;\n// Exception to be thrown when a number is not finite.\nClass NotFiniteNumberException;\n// Exception to be thrown when the argument is negative.\nClass NotPositiveException;\n// Exception to be thrown when the argument is not greater than 0.\nClass NotStrictlyPositiveException;\n// All conditions checks that fail due to a null argument must throw this exception.\nClass NullArgumentException;\n// Exception to be thrown when a number is too large.\nClass NumberIsTooLargeException;\n// Exception to be thrown when a number is too small.\nClass NumberIsTooSmallException;\n", "des": "Specialized exceptions for algorithms errors."}
{"index": 1156, "repo": "commons-math3-3.6.1", "code": "package util\n\n// Interface for accessing the context data structure stored in Commons Math exceptions.\nInterface ExceptionContextProvider;\n// Interface for localizable strings.\nInterface Localizable;\n// Utility class for transforming the list of arguments passed to constructors of exceptions.\nClass ArgUtils;\n// Dummy implementation of the Localizable interface, without localization.\nClass DummyLocalizable;\n// Class that contains the actual implementation of the functionality mandated by the ExceptionContext interface.\nClass ExceptionContext;\n// Enumeration for localized messages formats used in exceptions messages.\nEnum LocalizedFormats;\n", "des": "Classes supporting exception localization."}
{"index": 1157, "repo": "commons-math3-3.6.1", "code": "package filter\n\n// Defines the measurement model for the use with a KalmanFilter.\nInterface MeasurementModel;\n// Defines the process dynamics model for the use with a KalmanFilter.\nInterface ProcessModel;\n// Default implementation of a MeasurementModel for the use with a KalmanFilter.\nClass DefaultMeasurementModel;\n// Default implementation of a ProcessModel for the use with a KalmanFilter.\nClass DefaultProcessModel;\n// Implementation of a Kalman filter to estimate the state xk of a discrete-time controlled process that is governed by the linear stochastic difference equation:\nClass KalmanFilter;\n", "des": "Implementations of common discrete-time linear filters."}
{"index": 1158, "repo": "commons-math3-3.6.1", "code": "package fitting\n\n// Base class that contains common code for fitting parametric univariate real functions y = f(pi;x), where x is the independent variable and the pi are the parameters.\nClass AbstractCurveFitter;\n// Vector function for computing function theoretical values.\nClass AbstractCurveFitter.TheoreticalValuesFunction;\n// As of 3.3.\nClass CurveFitter<T extends ParametricUnivariateFunction>;\n// Fits points to a Gaussian function.\nClass GaussianCurveFitter;\n// Guesses the parameters norm, mean, and sigma of a Gaussian.Parametric based on the specified observed points.\nClass GaussianCurveFitter.ParameterGuesser;\n// As of 3.3.\nClass GaussianFitter;\n// Guesses the parameters norm, mean, and sigma of a Gaussian.Parametric based on the specified observed points.\nClass GaussianFitter.ParameterGuesser;\n// Fits points to a harmonic oscillator function.\nClass HarmonicCurveFitter;\n// This class guesses harmonic coefficients from a sample.\nClass HarmonicCurveFitter.ParameterGuesser;\n// As of 3.3.\nClass HarmonicFitter;\n// This class guesses harmonic coefficients from a sample.\nClass HarmonicFitter.ParameterGuesser;\n// Fits points to a polynomial function.\nClass PolynomialCurveFitter;\n// As of 3.3.\nClass PolynomialFitter;\n// Fits points to a user-defined function.\nClass SimpleCurveFitter;\n// This class is a simple container for weighted observed point in curve fitting.\nClass WeightedObservedPoint;\n// Simple container for weighted observed points used in curve fitting algorithms.\nClass WeightedObservedPoints;\n", "des": "Classes to perform curve fitting."}
{"index": 1159, "repo": "commons-math3-3.6.1", "code": "package leastsquares\n\n// An algorithm that can be applied to a non-linear least squares problem.\nInterface LeastSquaresOptimizer;\n// The optimum found by the optimizer.\nInterface LeastSquaresOptimizer.Optimum;\n// The data necessary to define a non-linear least squares problem.\nInterface LeastSquaresProblem;\n// An evaluation of a LeastSquaresProblem at a particular point.\nInterface LeastSquaresProblem.Evaluation;\n// A interface for functions that compute a vector of values and can compute their derivatives (Jacobian).\nInterface MultivariateJacobianFunction;\n// Interface for validating a set of model parameters.\nInterface ParameterValidator;\n// A interface for functions that compute a vector of values and can compute their derivatives (Jacobian).\nInterface ValueAndJacobianFunction;\n// An implementation of LeastSquaresProblem.Evaluation that is designed for extension.\nClass AbstractEvaluation;\n// Check if an optimization has converged based on the change in computed RMS.\nClass EvaluationRmsChecker;\n// Gauss-Newton least-squares solver.\nClass GaussNewtonOptimizer;\n// An adapter that delegates to another implementation of LeastSquaresProblem.\nClass LeastSquaresAdapter;\n// A mutable builder for LeastSquaresProblems.\nClass LeastSquaresBuilder;\n// A Factory for creating LeastSquaresProblems.\nClass LeastSquaresFactory;\n// This class solves a least-squares problem using the Levenberg-Marquardt algorithm.\nClass LevenbergMarquardtOptimizer;\n// The decomposition algorithm to use to solve the normal equations.\nEnum GaussNewtonOptimizer.Decomposition;\n", "des": "This package provides algorithms that minimize the residuals between observations and model values."}
{"index": 1160, "repo": "commons-math3-3.6.1", "code": "package fraction\n\n// Common part shared by both FractionFormat and BigFractionFormat.\nClass AbstractFormat;\n// Representation of a rational number without any overflow.\nClass BigFraction;\n// Representation of the fractional numbers without any overflow field.\nClass BigFractionField;\n// Formats a BigFraction number in proper format or improper format.\nClass BigFractionFormat;\n// Representation of a rational number.\nClass Fraction;\n// Representation of the fractional numbers field.\nClass FractionField;\n// Formats a Fraction number in proper format or improper format.\nClass FractionFormat;\n// Formats a BigFraction number in proper format.\nClass ProperBigFractionFormat;\n// Formats a Fraction number in proper format.\nClass ProperFractionFormat;\n// Error thrown when a double value cannot be converted to a fraction in the allowed number of iterations.\nClass FractionConversionException;\n", "des": "Fraction number type and fraction number formatting."}
{"index": 1161, "repo": "commons-math3-3.6.1", "code": "package genetics\n\n// Policy used to create a pair of new chromosomes by performing a crossover operation on a source pair of chromosomes.\nInterface CrossoverPolicy;\n// Fitness of a chromosome.\nInterface Fitness;\n// Algorithm used to mutate a chromosome.\nInterface MutationPolicy;\n// Interface indicating that the chromosome represents a permutation of objects.\nInterface PermutationChromosome<T>;\n// A collection of chromosomes that facilitates generational evolution.\nInterface Population;\n// Algorithm used to select a chromosome pair from a population.\nInterface SelectionPolicy;\n// Algorithm used to determine when to stop evolution.\nInterface StoppingCondition;\n// Chromosome represented by an immutable list of a fixed length.\nClass AbstractListChromosome<T>;\n// Chromosome represented by a vector of 0s and 1s.\nClass BinaryChromosome;\n// Mutation for BinaryChromosomes.\nClass BinaryMutation;\n// Individual in a population.\nClass Chromosome;\n// A pair of Chromosome objects.\nClass ChromosomePair;\n// Cycle Crossover [CX] builds offspring from ordered chromosomes by identifying cycles between two parent chromosomes.\nClass CycleCrossover<T>;\n// Population of chromosomes which uses elitism (certain percentage of the best chromosomes is directly copied to the next generation).\nClass ElitisticListPopulation;\n// Stops after a fixed amount of time has elapsed.\nClass FixedElapsedTime;\n// Stops after a fixed number of generations.\nClass FixedGenerationCount;\n// Implementation of a genetic algorithm.\nClass GeneticAlgorithm;\n// Population of chromosomes represented by a List.\nClass ListPopulation;\n// N-point crossover policy.\nClass NPointCrossover<T>;\n// One point crossover policy.\nClass OnePointCrossover<T>;\n// Order 1 Crossover [OX1] builds offspring from ordered chromosomes by copying a consecutive slice from one parent, and filling up the remaining genes from the other parent as they appear.\nClass OrderedCrossover<T>;\n// Random Key chromosome is used for permutation representation.\nClass RandomKey<T>;\n// Mutation operator for RandomKeys.\nClass RandomKeyMutation;\n", "des": "This package provides Genetic Algorithms components and implementations."}
{"index": 1162, "repo": "commons-math3-3.6.1", "code": "package geometry\n\n// This interface represents a generic geometrical point.\nInterface Point<S extends Space>;\n// This interface represents a generic space, with affine and vectorial counterparts.\nInterface Space;\n// This interface represents a generic vector in a vectorial space or a point in an affine space.\nInterface Vector<S extends Space>;\n// Formats a vector in components list format \"{x; y; ...}\".\nClass VectorFormat<S extends Space>;\n", "des": "This package is the top level package for geometry."}
{"index": 1163, "repo": "commons-math3-3.6.1", "code": "package enclosing\n\n// Interface for algorithms computing enclosing balls.\nInterface Encloser<S extends Space,P extends Point<S>>;\n// Interface for generating balls based on support points.\nInterface SupportBallGenerator<S extends Space,P extends Point<S>>;\n// This class represents a ball enclosing some points.\nClass EnclosingBall<S extends Space,P extends Point<S>>;\n// Class implementing Emo Welzl algorithm to find the smallest enclosing ball in linear time.\nClass WelzlEncloser<S extends Space,P extends Point<S>>;\n", "des": "This package provides interfaces and classes related to the smallest enclosing ball problem."}
{"index": 1164, "repo": "commons-math3-3.6.1", "code": "package oned\n\n// This class implements a one-dimensional space.\nClass Euclidean1D;\n// This class represents a 1D interval.\nClass Interval;\n// This class represents a 1D region: a set of intervals.\nClass IntervalsSet;\n// This class represents a 1D oriented hyperplane.\nClass OrientedPoint;\n// This class represents sub-hyperplane for OrientedPoint.\nClass SubOrientedPoint;\n// This class represents a 1D vector.\nClass Vector1D;\n// Formats a 1D vector in components list format \"{x}\".\nClass Vector1DFormat;\n// Specialized exception for inexistent sub-space.\nClass Euclidean1D.NoSubSpaceException;\n", "des": "This package provides basic 1D geometry components."}
{"index": 1165, "repo": "commons-math3-3.6.1", "code": "package threed\n\n// This class implements a three-dimensional space.\nClass Euclidean3D;\n// This class is a re-implementation of Rotation using RealFieldElement.\nClass FieldRotation<T extends RealFieldElement<T>>;\n// This class is a re-implementation of Vector3D using RealFieldElement.\nClass FieldVector3D<T extends RealFieldElement<T>>;\n// The class represent lines in a three dimensional space.\nClass Line;\n// Extractor for polyhedrons sets outlines.\nClass OutlineExtractor;\n// The class represent planes in a three dimensional space.\nClass Plane;\n// This class represents a 3D region: a set of polyhedrons.\nClass PolyhedronsSet;\n// This class implements rotations in a three-dimensional space.\nClass Rotation;\n// This class is a utility representing a rotation order specification for Cardan or Euler angles specification.\nClass RotationOrder;\n// Simple container for a two-points segment.\nClass Segment;\n// Class generating an enclosing ball from its support points.\nClass SphereGenerator;\n// This class provides conversions related to spherical coordinates.\nClass SphericalCoordinates;\n// This class represents a subset of a Line.\nClass SubLine;\n// This class represents a sub-hyperplane for Plane.\nClass SubPlane;\n// This class implements vectors in a three-dimensional space.\nClass Vector3D;\n// Formats a 3D vector in components list format \"{x; y; z}\".\nClass Vector3DFormat;\n// This enumerates is used to differentiate the semantics of a rotation.\nEnum RotationConvention;\n// This class represents exceptions thrown while extractiong Cardan or Euler angles from a rotation.\nClass CardanEulerSingularityException;\n// This class represents exceptions thrown while building rotations from matrices.\nClass NotARotationMatrixException;\n", "des": "This package provides basic 3D geometry components."}
{"index": 1166, "repo": "commons-math3-3.6.1", "code": "package twod\n\n// Class generating an enclosing ball from its support points.\nClass DiskGenerator;\n// This class implements a two-dimensional space.\nClass Euclidean2D;\n// This class represents an oriented line in the 2D plane.\nClass Line;\n// This class represents a 2D region: a set of polygons.\nClass PolygonsSet;\n// Simple container for a two-points segment.\nClass Segment;\n// This class represents a sub-hyperplane for Line.\nClass SubLine;\n// This class represents a 2D vector.\nClass Vector2D;\n// Formats a 2D vector in components list format \"{x; y}\".\nClass Vector2DFormat;\n", "des": "This package provides basic 2D geometry components."}
{"index": 1167, "repo": "commons-math3-3.6.1", "code": "package hull\n\n// Interface for convex hull generators in the two-dimensional euclidean space.\nInterface ConvexHullGenerator2D;\n// A simple heuristic to improve the performance of convex hull algorithms.\nClass AklToussaintHeuristic;\n// This class represents a convex hull in an two-dimensional euclidean space.\nClass ConvexHull2D;\n// Implements Andrew's monotone chain method to generate the convex hull of a finite set of points in the two-dimensional euclidean space.\nClass MonotoneChain;\n", "des": "This package provides algorithms to generate the convex hull for a set of points in an two-dimensional euclidean space."}
{"index": 1168, "repo": "commons-math3-3.6.1", "code": "package hull\n\n// This class represents a convex hull.\nInterface ConvexHull<S extends Space,P extends Point<S>>;\n// Interface for convex hull generators.\nInterface ConvexHullGenerator<S extends Space,P extends Point<S>>;\n", "des": "This package provides interfaces and classes related to the convex hull problem."}
{"index": 1169, "repo": "commons-math3-3.6.1", "code": "package partitioning\n\n// This interface gather the merging operations between a BSP tree leaf and another BSP tree.\nInterface BSPTree.LeafMerger<S extends Space>;\n// This interface handles the corner cases when an internal node cut sub-hyperplane vanishes.\nInterface BSPTree.VanishingCutHandler<S extends Space>;\n// This interface is used to visit BSP tree nodes.\nInterface BSPTreeVisitor<S extends Space>;\n// This interface defines mappers between a space and one of its sub-spaces.\nInterface Embedding<S extends Space,T extends Space>;\n// This interface represents an hyperplane of a space.\nInterface Hyperplane<S extends Space>;\n// This interface represents a region of a space as a partition.\nInterface Region<S extends Space>;\n// This interface represents the remaining parts of an hyperplane after other parts have been chopped off.\nInterface SubHyperplane<S extends Space>;\n// This interface represents an inversible affine transform in a space.\nInterface Transform<S extends Space,T extends Space>;\n// Abstract class for all regions, independently of geometry type or dimension.\nClass AbstractRegion<S extends Space,T extends Space>;\n// This class implements the dimension-independent parts of SubHyperplane.\nClass AbstractSubHyperplane<S extends Space,T extends Space>;\n// Class holding boundary attributes.\nClass BoundaryAttribute<S extends Space>;\n// Class holding the result of point projection on region boundary.\nClass BoundaryProjection<S extends Space>;\n// This class represent a Binary Space Partition tree.\nClass BSPTree<S extends Space>;\n// Set of BSP tree nodes.\nClass NodesSet<S extends Space>;\n// This class is a factory for Region.\nClass RegionFactory<S extends Space>;\n// Class holding the results of the split method.\nClass SubHyperplane.SplitSubHyperplane<U extends Space>;\n// Enumerate for visit order with respect to plus sub-tree, minus sub-tree and cut sub-hyperplane.\nEnum BSPTreeVisitor.Order;\n// Enumerate for the location of a point with respect to the region.\nEnum Region.Location;\n", "des": "This package provides classes to implement Binary Space Partition trees."}
{"index": 1170, "repo": "commons-math3-3.6.1", "code": "package utilities\n\n// as of 3.4, this class is not used anymore and considered to be out of scope of Apache Commons Math\nClass AVLTree<T extends Comparable<T>>;\n// as of 3.4, this class is not used anymore and considered to be out of scope of Apache Commons Math\nClass OrderedTuple;\n", "des": "This package provides multidimensional ordering features for partitioning."}
{"index": 1171, "repo": "commons-math3-3.6.1", "code": "package oned\n\n// This class represents an arc on a circle.\nClass Arc;\n// This class represents a region of a circle: a set of arcs.\nClass ArcsSet;\n// Class holding the results of the split method.\nClass ArcsSet.Split;\n// This class represents a 1D oriented hyperplane on the circle.\nClass LimitAngle;\n// This class represents a point on the 1-sphere.\nClass S1Point;\n// This class implements a one-dimensional sphere (i.e.\nClass Sphere1D;\n// This class represents sub-hyperplane for LimitAngle.\nClass SubLimitAngle;\n// Specialized exception for inconsistent BSP tree state inconsistency.\nClass ArcsSet.InconsistentStateAt2PiWrapping;\n// Specialized exception for inexistent sub-space.\nClass Sphere1D.NoSubSpaceException;\n", "des": "This package provides basic geometry components on the 1-sphere."}
{"index": 1172, "repo": "commons-math3-3.6.1", "code": "package twod\n\n// This class represents an oriented great circle on the 2-sphere.\nClass Circle;\n// Spherical polygons boundary edge.\nClass Edge;\n// This class represents a point on the 2-sphere.\nClass S2Point;\n// This class implements a two-dimensional sphere (i.e.\nClass Sphere2D;\n// This class represents a region on the 2-sphere: a set of spherical polygons.\nClass SphericalPolygonsSet;\n// This class represents a sub-hyperplane for Circle.\nClass SubCircle;\n// Spherical polygons boundary vertex.\nClass Vertex;\n", "des": "This package provides basic geometry components on the 2-sphere."}
{"index": 1173, "repo": "commons-math3-3.6.1", "code": "package linear\n\n// Interface defining very basic matrix operations.\nInterface AnyMatrix;\n// Interface handling decomposition algorithms that can solve A × X = B.\nInterface DecompositionSolver;\n// Interface handling decomposition algorithms that can solve A × X = B.\nInterface FieldDecompositionSolver<T extends FieldElement<T>>;\n// Interface defining field-valued matrix with basic algebraic operations.\nInterface FieldMatrix<T extends FieldElement<T>>;\n// Interface defining a visitor for matrix entries.\nInterface FieldMatrixChangingVisitor<T extends FieldElement<?>>;\n// Interface defining a visitor for matrix entries.\nInterface FieldMatrixPreservingVisitor<T extends FieldElement<?>>;\n// Interface defining a field-valued vector with basic algebraic operations.\nInterface FieldVector<T extends FieldElement<T>>;\n// This interface defines a visitor for the entries of a vector.\nInterface FieldVectorChangingVisitor<T extends FieldElement<?>>;\n// This interface defines a visitor for the entries of a vector.\nInterface FieldVectorPreservingVisitor<T extends FieldElement<?>>;\n// Interface defining a real-valued matrix with basic algebraic operations.\nInterface RealMatrix;\n// Interface defining a visitor for matrix entries.\nInterface RealMatrixChangingVisitor;\n// Interface defining a visitor for matrix entries.\nInterface RealMatrixPreservingVisitor;\n// This interface defines a visitor for the entries of a vector.\nInterface RealVectorChangingVisitor;\n// This interface defines a visitor for the entries of a vector.\nInterface RealVectorPreservingVisitor;\n// Marker interface for RealMatrix implementations that require sparse backing storage\nInterface SparseRealMatrix;\n// Basic implementation of FieldMatrix methods regardless of the underlying storage.\nClass AbstractFieldMatrix<T extends FieldElement<T>>;\n// Basic implementation of RealMatrix methods regardless of the underlying storage.\nClass AbstractRealMatrix;\n// Implementation of FieldMatrix using a FieldElement[][] array to store entries.\nClass Array2DRowFieldMatrix<T extends FieldElement<T>>;\n// Implementation of RealMatrix using a double[][] array to store entries.\nClass Array2DRowRealMatrix;\n// This class implements the FieldVector interface with a FieldElement array.\nClass ArrayFieldVector<T extends FieldElement<T>>;\n", "des": "Linear algebra support."}
{"index": 1174, "repo": "commons-math3-3.6.1", "code": "package clustering\n\n// Interface for n-dimensional points that can be clustered together.\nInterface Clusterable;\n// A Cluster used by centroid-based clustering algorithms.\nClass CentroidCluster<T extends Clusterable>;\n// Cluster holding a set of Clusterable points.\nClass Cluster<T extends Clusterable>;\n// Base class for clustering algorithms.\nClass Clusterer<T extends Clusterable>;\n// DBSCAN (density-based spatial clustering of applications with noise) algorithm.\nClass DBSCANClusterer<T extends Clusterable>;\n// A simple implementation of Clusterable for points with double coordinates.\nClass DoublePoint;\n// Fuzzy K-Means clustering algorithm.\nClass FuzzyKMeansClusterer<T extends Clusterable>;\n// Clustering algorithm based on David Arthur and Sergei Vassilvitski k-means++ algorithm.\nClass KMeansPlusPlusClusterer<T extends Clusterable>;\n// A wrapper around a k-means++ clustering algorithm which performs multiple trials and returns the best solution.\nClass MultiKMeansPlusPlusClusterer<T extends Clusterable>;\n// Strategies to use for replacing an empty cluster.\nEnum KMeansPlusPlusClusterer.EmptyClusterStrategy;\n", "des": "Clustering algorithms."}
{"index": 1175, "repo": "commons-math3-3.6.1", "code": "package evaluation\n\n// Base class for cluster evaluation methods.\nClass ClusterEvaluator<T extends Clusterable>;\n// Computes the sum of intra-cluster distance variances according to the formula:\nClass SumOfClusterVariances<T extends Clusterable>;\n", "des": "Cluster evaluation methods."}
{"index": 1176, "repo": "commons-math3-3.6.1", "code": "package distance\n\n// Interface for distance measures of n-dimensional vectors.\nInterface DistanceMeasure;\n// Calculates the Canberra distance between two points.\nClass CanberraDistance;\n// Calculates the L∞ (max of abs) distance between two points.\nClass ChebyshevDistance;\n// Calculates the Earh Mover's distance (also known as Wasserstein metric) between two distributions.\nClass EarthMoversDistance;\n// Calculates the L2 (Euclidean) distance between two points.\nClass EuclideanDistance;\n// Calculates the L1 (sum of abs) distance between two points.\nClass ManhattanDistance;\n", "des": "Common distance measures."}
{"index": 1177, "repo": "commons-math3-3.6.1", "code": "package neuralnet\n\n// Defines how to assign the first value of a neuron's feature.\nInterface FeatureInitializer;\n// Describes how to update the network in response to a training sample.\nInterface UpdateAction;\n// Creates functions that will select the initial values of a neuron's features.\nClass FeatureInitializerFactory;\n// Utilities for network maps.\nClass MapUtils;\n// Neural network, composed of Neuron instances and the links between them.\nClass Network;\n// Comparator that prescribes an order of the neurons according to the increasing order of their identifier.\nClass Network.NeuronIdentifierComparator;\n// Describes a neuron element of a neural network.\nClass Neuron;\n// Defines neighbourhood types.\nEnum SquareNeighbourhood;\n", "des": "Neural networks."}
{"index": 1178, "repo": "commons-math3-3.6.1", "code": "package oned\n\n// Neural network with the topology of a one-dimensional line.\nClass NeuronString;\n", "des": "One-dimensional neural networks."}
{"index": 1179, "repo": "commons-math3-3.6.1", "code": "package sofm\n\n// Provides the learning rate as a function of the number of calls already performed during the learning task.\nInterface LearningFactorFunction;\n// Provides the network neighbourhood's size as a function of the number of calls already performed during the learning task.\nInterface NeighbourhoodSizeFunction;\n// Trainer for Kohonen's Self-Organizing Map.\nClass KohonenTrainingTask;\n// Update formula for Kohonen's Self-Organizing Map.\nClass KohonenUpdateAction;\n// Factory for creating instances of LearningFactorFunction.\nClass LearningFactorFunctionFactory;\n// Factory for creating instances of NeighbourhoodSizeFunction.\nClass NeighbourhoodSizeFunctionFactory;\n", "des": "Self Organizing Feature Map."}
{"index": 1180, "repo": "commons-math3-3.6.1", "code": "package util\n\n// Exponential decay function: a e-x / b, where x is the (integer) independent variable.\nClass ExponentialDecayFunction;\n// Decay function whose shape is similar to a sigmoid.\nClass QuasiSigmoidDecayFunction;\n", "des": "Miscellaneous utilities."}
{"index": 1181, "repo": "commons-math3-3.6.1", "code": "package twod\n\n// Neural network with the topology of a two-dimensional surface.\nClass NeuronSquareMesh2D;\n// Horizontal (along row) direction.\nEnum NeuronSquareMesh2D.HorizontalDirection;\n// Vertical (along column) direction.\nEnum NeuronSquareMesh2D.VerticalDirection;\n", "des": "Two-dimensional neural networks."}
{"index": 1182, "repo": "commons-math3-3.6.1", "code": "package util\n\n// Interface for algorithms that compute some metrics of the projection of data on a 2D-map.\nInterface MapDataVisualization;\n// Interface for algorithms that compute some property of a 2D-map.\nInterface MapVisualization;\n// Computes the hit histogram.\nClass HitHistogram;\n// Helper class to find the grid coordinates of a neuron.\nClass LocationFinder;\n// Container holding a (row, column) pair.\nClass LocationFinder.Location;\n// Computes the quantization error histogram.\nClass QuantizationError;\n// Visualization of high-dimensional data projection on a 2D-map.\nClass SmoothedDataHistogram;\n// Computes the topographic error histogram.\nClass TopographicErrorHistogram;\n// U-Matrix visualization of high-dimensional data projection.\nClass UnifiedDistanceMatrix;\n", "des": "Utilities to visualize two-dimensional neural networks."}
{"index": 1183, "repo": "commons-math3-3.6.1", "code": "package ode\n\n// This interface allows users to add secondary differential equations to a primary set of differential equations.\nInterface FieldSecondaryEquations<T extends RealFieldElement<T>>;\n// This interface represents a first order differential equations set.\nInterface FirstOrderDifferentialEquations;\n// This interface represents a first order differential equations set.\nInterface FirstOrderFieldDifferentialEquations<T extends RealFieldElement<T>>;\n// This interface represents a first order integrator for differential equations.\nInterface FirstOrderFieldIntegrator<T extends RealFieldElement<T>>;\n// This interface represents a first order integrator for differential equations.\nInterface FirstOrderIntegrator;\n// Interface expanding first order differential equations in order to compute exactly the main state jacobian matrix for partial derivatives equations.\nInterface MainStateJacobianProvider;\n// as of 3.6 this unused interface is deprecated\nInterface MultistepIntegrator.NordsieckTransformer;\n// This interface defines the common parts shared by integrators for first and second order differential equations.\nInterface ODEIntegrator;\n// This interface enables to process any parameterizable object.\nInterface Parameterizable;\n// Interface to compute by finite difference Jacobian matrix for some parameter when computing partial derivatives equations.\nInterface ParameterizedODE;\n// Interface to compute exactly Jacobian matrix for some parameter when computing partial derivatives equations.\nInterface ParameterJacobianProvider;\n// This interface allows users to add secondary differential equations to a primary set of differential equations.\nInterface SecondaryEquations;\n// This interface represents a second order differential equations set.\nInterface SecondOrderDifferentialEquations;\n// This interface represents a second order integrator for differential equations.\nInterface SecondOrderIntegrator;\n// Base class managing common boilerplate for all integrators.\nClass AbstractFieldIntegrator<T extends RealFieldElement<T>>;\n// Base class managing common boilerplate for all integrators.\nClass AbstractIntegrator;\n// This abstract class provides boilerplate parameters list.\nClass AbstractParameterizable;\n// This class stores all information provided by an ODE integrator during the integration process and build a continuous model of the solution from this.\nClass ContinuousOutputFieldModel<T extends RealFieldElement<T>>;\n", "des": "This package provides classes to solve Ordinary Differential Equations problems."}
{"index": 1184, "repo": "commons-math3-3.6.1", "code": "package events\n\n// This interface represents a handler for discrete events triggered during ODE integration.\nInterface EventHandler;\n// This interface represents a handler for discrete events triggered during ODE integration.\nInterface FieldEventHandler<T extends RealFieldElement<T>>;\n// Wrapper used to detect only increasing or decreasing events.\nClass EventFilter;\n// This class handles the state for one event handler during integration steps.\nClass EventState;\n// This class handles the state for one event handler during integration steps.\nClass FieldEventState<T extends RealFieldElement<T>>;\n// Enumerate for actions to be performed when an event occurs during ODE integration.\nEnum Action;\n// Enumerate for actions to be performed when an event occurs.\nEnum EventHandler.Action;\n// Enumerate for filtering events.\nEnum FilterType;\n", "des": "This package provides classes to handle discrete events occurring during Ordinary Differential Equations integration."}
{"index": 1185, "repo": "commons-math3-3.6.1", "code": "package nonstiff\n\n// This interface represents an integrator based on Butcher arrays.\nInterface FieldButcherArrayProvider<T extends RealFieldElement<T>>;\n// This class implements explicit Adams-Bashforth integrators for Ordinary Differential Equations.\nClass AdamsBashforthFieldIntegrator<T extends RealFieldElement<T>>;\n// This class implements explicit Adams-Bashforth integrators for Ordinary Differential Equations.\nClass AdamsBashforthIntegrator;\n// Base class for Adams-Bashforth and Adams-Moulton integrators.\nClass AdamsFieldIntegrator<T extends RealFieldElement<T>>;\n// Base class for Adams-Bashforth and Adams-Moulton integrators.\nClass AdamsIntegrator;\n// This class implements implicit Adams-Moulton integrators for Ordinary Differential Equations.\nClass AdamsMoultonFieldIntegrator<T extends RealFieldElement<T>>;\n// This class implements implicit Adams-Moulton integrators for Ordinary Differential Equations.\nClass AdamsMoultonIntegrator;\n// Transformer to Nordsieck vectors for Adams integrators.\nClass AdamsNordsieckFieldTransformer<T extends RealFieldElement<T>>;\n// Transformer to Nordsieck vectors for Adams integrators.\nClass AdamsNordsieckTransformer;\n// This abstract class holds the common part of all adaptive stepsize integrators for Ordinary Differential Equations.\nClass AdaptiveStepsizeFieldIntegrator<T extends RealFieldElement<T>>;\n// This abstract class holds the common part of all adaptive stepsize integrators for Ordinary Differential Equations.\nClass AdaptiveStepsizeIntegrator;\n// This class implements the classical fourth order Runge-Kutta integrator for Ordinary Differential Equations (it is the most often used Runge-Kutta method).\nClass ClassicalRungeKuttaFieldIntegrator<T extends RealFieldElement<T>>;\n", "des": "This package provides classes to solve non-stiff Ordinary Differential Equations problems."}
{"index": 1186, "repo": "commons-math3-3.6.1", "code": "package sampling\n\n// This interface represents a handler that should be called after each successful fixed step.\nInterface FieldFixedStepHandler<T extends RealFieldElement<T>>;\n// This interface represents a handler that should be called after each successful step.\nInterface FieldStepHandler<T extends RealFieldElement<T>>;\n// This interface represents an interpolator over the last step during an ODE integration.\nInterface FieldStepInterpolator<T extends RealFieldElement<T>>;\n// This interface represents a handler that should be called after each successful fixed step.\nInterface FixedStepHandler;\n// This interface represents a handler that should be called after each successful step.\nInterface StepHandler;\n// This interface represents an interpolator over the last step during an ODE integration.\nInterface StepInterpolator;\n// This abstract class represents an interpolator over the last step during an ODE integration.\nClass AbstractFieldStepInterpolator<T extends RealFieldElement<T>>;\n// This abstract class represents an interpolator over the last step during an ODE integration.\nClass AbstractStepInterpolator;\n// This class is a step handler that does nothing.\nClass DummyStepHandler;\n// This class wraps an object implementing FieldFixedStepHandler into a FieldStepHandler.\nClass FieldStepNormalizer<T extends RealFieldElement<T>>;\n// This class implements an interpolator for integrators using Nordsieck representation.\nClass NordsieckStepInterpolator;\n// This class wraps an object implementing FixedStepHandler into a StepHandler.\nClass StepNormalizer;\n// Step normalizer bounds settings.\nEnum StepNormalizerBounds;\n// Step normalizer modes.\nEnum StepNormalizerMode;\n", "des": "This package provides classes to handle sampling steps during Ordinary Differential Equations integration."}
{"index": 1187, "repo": "commons-math3-3.6.1", "code": "package optim\n\n// This interface specifies how to check if an optimization algorithm has converged.\nInterface ConvergenceChecker<PAIR>;\n// Marker interface.\nInterface OptimizationData;\n// Common settings for all optimization problems.\nInterface OptimizationProblem<PAIR>;\n// Base class for all convergence checker implementations.\nClass AbstractConvergenceChecker<PAIR>;\n// Base class for implementing optimization problems.\nClass AbstractOptimizationProblem<PAIR>;\n// Base class multi-start optimizer for a multivariate function.\nClass BaseMultiStartMultivariateOptimizer<PAIR>;\n// Base class for implementing optimizers for multivariate functions.\nClass BaseMultivariateOptimizer<PAIR>;\n// Base class for implementing optimizers.\nClass BaseOptimizer<PAIR>;\n// Starting point (first guess) of the optimization procedure.\nClass InitialGuess;\n// Maximum number of evaluations of the function to be optimized.\nClass MaxEval;\n// Maximum number of iterations performed by an (iterative) algorithm.\nClass MaxIter;\n// This class holds a point and the value of an objective function at that point.\nClass PointValuePair;\n// This class holds a point and the vectorial value of an objective function at that point.\nClass PointVectorValuePair;\n// Simple optimization constraints: lower and upper bounds.\nClass SimpleBounds;\n// Simple implementation of the ConvergenceChecker interface using only point coordinates.\nClass SimplePointChecker<PAIR extends Pair<double[],? extends Object>>;\n// Simple implementation of the ConvergenceChecker interface using only objective function values.\nClass SimpleValueChecker;\n// Simple implementation of the ConvergenceChecker interface using only objective function values.\nClass SimpleVectorValueChecker;\n", "des": "Generally, optimizers are algorithms that will either minimize or maximize a scalar function, called the objective function."}
{"index": 1188, "repo": "commons-math3-3.6.1", "code": "package linear\n\n// A linear constraint for a linear optimization problem.\nClass LinearConstraint;\n// Class that represents a set of linear constraints.\nClass LinearConstraintSet;\n// An objective function for a linear optimization problem.\nClass LinearObjectiveFunction;\n// Base class for implementing linear optimizers.\nClass LinearOptimizer;\n// A constraint for a linear optimization problem indicating whether all variables must be restricted to non-negative values.\nClass NonNegativeConstraint;\n// Solves a linear problem using the \"Two-Phase Simplex\" method.\nClass SimplexSolver;\n// A callback object that can be provided to a linear optimizer to keep track of the best solution found.\nClass SolutionCallback;\n// Pivot selection rule to the use for a Simplex solver.\nEnum PivotSelectionRule;\n// Types of relationships between two cells in a Solver LinearConstraint.\nEnum Relationship;\n// This class represents exceptions thrown by optimizers when no solution fulfills the constraints.\nClass NoFeasibleSolutionException;\n// This class represents exceptions thrown by optimizers when a solution escapes to infinity.\nClass UnboundedSolutionException;\n", "des": "Optimization algorithms for linear constrained problems."}
{"index": 1189, "repo": "commons-math3-3.6.1", "code": "package scalar\n\n// Base class for implementing optimizers for multivariate scalar differentiable functions.\nClass GradientMultivariateOptimizer;\n// This class converts vectorial objective functions to scalar objective functions when the goal is to minimize them.\nClass LeastSquaresConverter;\n// Class for finding the minimum of the objective function along a given direction.\nClass LineSearch;\n// Multi-start optimizer.\nClass MultiStartMultivariateOptimizer;\n// Adapter for mapping bounded MultivariateFunction to unbounded ones.\nClass MultivariateFunctionMappingAdapter;\n// Adapter extending bounded MultivariateFunction to an unbouded domain using a penalty function.\nClass MultivariateFunctionPenaltyAdapter;\n// Base class for a multivariate scalar function optimizer.\nClass MultivariateOptimizer;\n// Scalar function to be optimized.\nClass ObjectiveFunction;\n// Gradient of the scalar function to be optimized.\nClass ObjectiveFunctionGradient;\n// Goal type for an optimization problem (minimization or maximization of a scalar function.\nEnum GoalType;\n", "des": "Algorithms for optimizing a scalar function."}
{"index": 1190, "repo": "commons-math3-3.6.1", "code": "package gradient\n\n// This interface represents a preconditioner for differentiable scalar objective function optimizers.\nInterface Preconditioner;\n// Non-linear conjugate gradient optimizer.\nClass NonLinearConjugateGradientOptimizer;\n// As of v3.3, this class is not used anymore.\nClass NonLinearConjugateGradientOptimizer.BracketingStep;\n// Default identity preconditioner.\nClass NonLinearConjugateGradientOptimizer.IdentityPreconditioner;\n// Available choices of update formulas for the updating the parameter that is used to compute the successive conjugate search directions.\nEnum NonLinearConjugateGradientOptimizer.Formula;\n", "des": "This package provides optimization algorithms that require derivatives."}
{"index": 1191, "repo": "commons-math3-3.6.1", "code": "package noderiv\n\n// This class implements the simplex concept.\nClass AbstractSimplex;\n// Powell's BOBYQA algorithm.\nClass BOBYQAOptimizer;\n// An implementation of the active Covariance Matrix Adaptation Evolution Strategy (CMA-ES) for non-linear, non-convex, non-smooth, global function minimization.\nClass CMAESOptimizer;\n// Population size.\nClass CMAESOptimizer.PopulationSize;\n// Input sigma values.\nClass CMAESOptimizer.Sigma;\n// This class implements the multi-directional direct search method.\nClass MultiDirectionalSimplex;\n// This class implements the Nelder-Mead simplex algorithm.\nClass NelderMeadSimplex;\n// Powell's algorithm.\nClass PowellOptimizer;\n// This class implements simplex-based direct search optimization.\nClass SimplexOptimizer;\n", "des": "This package provides optimization algorithms that do not require derivatives."}
{"index": 1192, "repo": "commons-math3-3.6.1", "code": "package vector\n\n// All classes and interfaces in this package are deprecated.\nClass JacobianMultivariateVectorOptimizer;\n// All classes and interfaces in this package are deprecated.\nClass ModelFunction;\n// All classes and interfaces in this package are deprecated.\nClass ModelFunctionJacobian;\n// \nClass MultiStartMultivariateVectorOptimizer;\n// \nClass MultivariateVectorOptimizer;\n// All classes and interfaces in this package are deprecated.\nClass Target;\n// All classes and interfaces in this package are deprecated.\nClass Weight;\n", "des": "Algorithms for optimizing a vector function."}
{"index": 1193, "repo": "commons-math3-3.6.1", "code": "package jacobian\n\n// All classes and interfaces in this package are deprecated.\nClass AbstractLeastSquaresOptimizer;\n// All classes and interfaces in this package are deprecated.\nClass GaussNewtonOptimizer;\n// All classes and interfaces in this package are deprecated.\nClass LevenbergMarquardtOptimizer;\n", "des": "This package provides optimization algorithms that require derivatives."}
{"index": 1194, "repo": "commons-math3-3.6.1", "code": "package univariate\n\n// Provide an interval that brackets a local optimum of a function.\nClass BracketFinder;\n// For a function defined on some interval (lo, hi), this class finds an approximation x to the point at which the function attains its minimum.\nClass BrentOptimizer;\n// Special implementation of the UnivariateOptimizer interface adding multi-start features to an existing optimizer.\nClass MultiStartUnivariateOptimizer;\n// Search interval and (optional) start value.\nClass SearchInterval;\n// Simple implementation of the ConvergenceChecker interface that uses only objective function values.\nClass SimpleUnivariateValueChecker;\n// Scalar function to be optimized.\nClass UnivariateObjectiveFunction;\n// Base class for a univariate scalar function optimizer.\nClass UnivariateOptimizer;\n// This class holds a point and the value of an objective function at this point.\nClass UnivariatePointValuePair;\n", "des": "One-dimensional optimization algorithms."}
{"index": 1195, "repo": "commons-math3-3.6.1", "code": "package optimization\n\n// As of 3.1 (to be removed in 4.0).\nInterface BaseMultivariateOptimizer<FUNC extends MultivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nInterface BaseMultivariateSimpleBoundsOptimizer<FUNC extends MultivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nInterface BaseMultivariateVectorOptimizer<FUNC extends MultivariateVectorFunction>;\n// As of 3.1 (to be removed in 4.0).\nInterface BaseOptimizer<PAIR>;\n// As of 3.1 (to be removed in 4.0).\nInterface ConvergenceChecker<PAIR>;\n// As of 3.1 (to be removed in 4.0).\nInterface DifferentiableMultivariateOptimizer;\n// As of 3.1 (to be removed in 4.0).\nInterface DifferentiableMultivariateVectorOptimizer;\n// As of 3.1 (to be removed in 4.0).\nInterface MultivariateDifferentiableOptimizer;\n// As of 3.1 (to be removed in 4.0).\nInterface MultivariateDifferentiableVectorOptimizer;\n// As of 3.1 (to be removed in 4.0).\nInterface MultivariateOptimizer;\n// As of 3.1 (to be removed in 4.0).\nInterface OptimizationData;\n// As of 3.1 (to be removed in 4.0).\nClass AbstractConvergenceChecker<PAIR>;\n// As of 3.1 (to be removed in 4.0).\nClass BaseMultivariateMultiStartOptimizer<FUNC extends MultivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nClass BaseMultivariateVectorMultiStartOptimizer<FUNC extends MultivariateVectorFunction>;\n// As of 3.1 (to be removed in 4.0).\nClass DifferentiableMultivariateMultiStartOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass DifferentiableMultivariateVectorMultiStartOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass InitialGuess;\n// As of 3.1 (to be removed in 4.0).\nClass LeastSquaresConverter;\n", "des": "All classes and sub-packages of this package are deprecated."}
{"index": 1196, "repo": "commons-math3-3.6.1", "code": "package direct\n\n// As of 3.1 (to be removed in 4.0).\nClass AbstractSimplex;\n// As of 3.1 (to be removed in 4.0).\nClass BaseAbstractMultivariateOptimizer<FUNC extends MultivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nClass BaseAbstractMultivariateSimpleBoundsOptimizer<FUNC extends MultivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nClass BaseAbstractMultivariateVectorOptimizer<FUNC extends MultivariateVectorFunction>;\n// As of 3.1 (to be removed in 4.0).\nClass BOBYQAOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass CMAESOptimizer;\n// Population size.\nClass CMAESOptimizer.PopulationSize;\n// Input sigma values.\nClass CMAESOptimizer.Sigma;\n// As of 3.1 (to be removed in 4.0).\nClass MultiDirectionalSimplex;\n// As of 3.1 (to be removed in 4.0).\nClass MultivariateFunctionMappingAdapter;\n// As of 3.1 (to be removed in 4.0).\nClass MultivariateFunctionPenaltyAdapter;\n// As of 3.1 (to be removed in 4.0).\nClass NelderMeadSimplex;\n// As of 3.1 (to be removed in 4.0).\nClass PowellOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass SimplexOptimizer;\n", "des": "This package provides optimization algorithms that don't require derivatives."}
{"index": 1197, "repo": "commons-math3-3.6.1", "code": "package fitting\n\n// As of 3.1 (to be removed in 4.0).\nClass CurveFitter<T extends ParametricUnivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nClass GaussianFitter;\n// Guesses the parameters norm, mean, and sigma of a Gaussian.Parametric based on the specified observed points.\nClass GaussianFitter.ParameterGuesser;\n// As of 3.1 (to be removed in 4.0).\nClass HarmonicFitter;\n// This class guesses harmonic coefficients from a sample.\nClass HarmonicFitter.ParameterGuesser;\n// As of 3.1 (to be removed in 4.0).\nClass PolynomialFitter;\n// As of 3.1 (to be removed in 4.0).\nClass WeightedObservedPoint;\n", "des": "This package provides classes to perform curve fitting."}
{"index": 1198, "repo": "commons-math3-3.6.1", "code": "package general\n\n// As of 3.1 (to be removed in 4.0).\nInterface Preconditioner;\n// As of 3.1 (to be removed in 4.0).\nClass AbstractDifferentiableOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass AbstractLeastSquaresOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass AbstractScalarDifferentiableOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass GaussNewtonOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass LevenbergMarquardtOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass NonLinearConjugateGradientOptimizer;\n// Default identity preconditioner.\nClass NonLinearConjugateGradientOptimizer.IdentityPreconditioner;\n// As of 3.1 (to be removed in 4.0).\nEnum ConjugateGradientFormula;\n", "des": "This package provides optimization algorithms that require derivatives."}
{"index": 1199, "repo": "commons-math3-3.6.1", "code": "package linear\n\n// As of 3.1 (to be removed in 4.0).\nInterface LinearOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass AbstractLinearOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass LinearConstraint;\n// As of 3.1 (to be removed in 4.0).\nClass LinearObjectiveFunction;\n// As of 3.1 (to be removed in 4.0).\nClass SimplexSolver;\n// As of 3.1 (to be removed in 4.0).\nEnum Relationship;\n// As of 3.1 (to be removed in 4.0).\nClass NoFeasibleSolutionException;\n// As of 3.1 (to be removed in 4.0).\nClass UnboundedSolutionException;\n", "des": "This package provides optimization algorithms for linear constrained problems."}
{"index": 1200, "repo": "commons-math3-3.6.1", "code": "package univariate\n\n// As of 3.1 (to be removed in 4.0).\nInterface BaseUnivariateOptimizer<FUNC extends UnivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nInterface UnivariateOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass BaseAbstractUnivariateOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass BracketFinder;\n// As of 3.1 (to be removed in 4.0).\nClass BrentOptimizer;\n// As of 3.1 (to be removed in 4.0).\nClass SimpleUnivariateValueChecker;\n// As of 3.1 (to be removed in 4.0).\nClass UnivariateMultiStartOptimizer<FUNC extends UnivariateFunction>;\n// As of 3.1 (to be removed in 4.0).\nClass UnivariatePointValuePair;\n", "des": "Univariate real functions minimum finding algorithms."}
{"index": 1201, "repo": "commons-math3-3.6.1", "code": "package primes\n\n// Methods related to prime numbers in the range of int: primality test prime number generation factorization\nClass Primes;\n", "des": "Methods related to prime numbers like primality test, factor decomposition."}
{"index": 1202, "repo": "commons-math3-3.6.1", "code": "package random\n\n// This interface represent a normalized random generator for scalars.\nInterface NormalizedRandomGenerator;\n// to be removed in 4.0.\nInterface RandomData;\n// Interface extracted from java.util.Random.\nInterface RandomGenerator;\n// This interface represents a random generator for whole vectors.\nInterface RandomVectorGenerator;\n// Abstract class implementing the RandomGenerator interface.\nClass AbstractRandomGenerator;\n// This abstract class implements the WELL class of pseudo-random number generator from François Panneton, Pierre L'Ecuyer and Makoto Matsumoto.\nClass AbstractWell;\n// Base class for random number generators that generates bits streams.\nClass BitsStreamGenerator;\n// A RandomVectorGenerator that generates vectors with with correlated components.\nClass CorrelatedRandomVectorGenerator;\n// Represents an empirical probability distribution -- a probability distribution derived from observed data without making any assumptions about the functional form of the population distribution that the data come from.\nClass EmpiricalDistribution;\n// This class is a gaussian normalized random generator for scalars.\nClass GaussianRandomGenerator;\n// Implementation of a Halton sequence.\nClass HaltonSequenceGenerator;\n// ISAAC: a fast cryptographic pseudo-random number generator ISAAC (Indirection, Shift, Accumulate, Add, and Count) generates 32-bit random numbers.\nClass ISAACRandom;\n// Extension of java.util.Random to implement RandomGenerator.\nClass JDKRandomGenerator;\n// This class implements a powerful pseudo-random number generator developed by Makoto Matsumoto and Takuji Nishimura during 1996-1997.\nClass MersenneTwister;\n// Extension of java.util.Random wrapping a RandomGenerator.\nClass RandomAdaptor;\n// Implements the RandomData interface using a RandomGenerator instance to generate non-secure data and a SecureRandom instance to provide data for the nextSecureXxx methods.\nClass RandomDataGenerator;\n// to be removed in 4.0.\nClass RandomDataImpl;\n// Utilities for creating RandomGenerator instances.\nClass RandomGeneratorFactory;\n// Implementation of a Sobol sequence.\nClass SobolSequenceGenerator;\n// This class provides a stable normalized random generator.\nClass StableRandomGenerator;\n", "des": "Random number and random data generators."}
{"index": 1203, "repo": "commons-math3-3.6.1", "code": "package special\n\n// This class provides computation methods related to Bessel functions of the first kind.\nClass BesselJ;\n// Encapsulates the results returned by BesselJ.rjBesl(double, double, int).\nClass BesselJ.BesselJResult;\n// This is a utility class that provides computation methods related to the Beta family of functions.\nClass Beta;\n// This is a utility class that provides computation methods related to the error functions.\nClass Erf;\n// This is a utility class that provides computation methods related to the Γ (Gamma) family of functions.\nClass Gamma;\n", "des": "Implementations of special functions such as Beta and Gamma."}
{"index": 1204, "repo": "commons-math3-3.6.1", "code": "package stat\n\n// Maintains a frequency distribution.\nClass Frequency;\n// StatUtils provides static methods for computing statistics based on data stored in double[] arrays.\nClass StatUtils;\n", "des": "Data storage, manipulation and summary routines."}
{"index": 1205, "repo": "commons-math3-3.6.1", "code": "package clustering\n\n// As of 3.2 (to be removed in 4.0), use Clusterable instead\nInterface Clusterable<T>;\n// As of 3.2 (to be removed in 4.0), use Cluster instead\nClass Cluster<T extends Clusterable<T>>;\n// As of 3.2 (to be removed in 4.0), use DBSCANClusterer instead\nClass DBSCANClusterer<T extends Clusterable<T>>;\n// As of 3.2 (to be removed in 4.0), use DoublePoint instead\nClass EuclideanDoublePoint;\n// As of 3.2 (to be removed in 4.0), use DoublePoint instead\nClass EuclideanIntegerPoint;\n// As of 3.2 (to be removed in 4.0), use KMeansPlusPlusClusterer instead\nClass KMeansPlusPlusClusterer<T extends Clusterable<T>>;\n// Strategies to use for replacing an empty cluster.\nEnum KMeansPlusPlusClusterer.EmptyClusterStrategy;\n", "des": "All classes and sub-packages of this package are deprecated."}
{"index": 1206, "repo": "commons-math3-3.6.1", "code": "package correlation\n\n// Computes covariances for pairs of arrays or columns of a matrix.\nClass Covariance;\n// Implementation of Kendall's Tau-b rank correlation.\nClass KendallsCorrelation;\n// Computes Pearson's product-moment correlation coefficients for pairs of arrays or columns of a matrix.\nClass PearsonsCorrelation;\n// Spearman's rank correlation.\nClass SpearmansCorrelation;\n// Covariance implementation that does not require input data to be stored in memory.\nClass StorelessCovariance;\n", "des": "Correlations/Covariance computations."}
{"index": 1207, "repo": "commons-math3-3.6.1", "code": "package descriptive\n\n// Reporting interface for basic multivariate statistics.\nInterface StatisticalMultivariateSummary;\n// Reporting interface for basic univariate statistics.\nInterface StatisticalSummary;\n// Extends the definition of UnivariateStatistic with StorelessUnivariateStatistic.increment(double) and StorelessUnivariateStatistic.incrementAll(double[]) methods for adding values and updating internal state.\nInterface StorelessUnivariateStatistic;\n// Base interface implemented by all statistics.\nInterface UnivariateStatistic;\n// Weighted evaluation for statistics.\nInterface WeightedEvaluation;\n// Abstract implementation of the StorelessUnivariateStatistic interface.\nClass AbstractStorelessUnivariateStatistic;\n// Abstract base class for all implementations of the UnivariateStatistic interface.\nClass AbstractUnivariateStatistic;\n// An aggregator for SummaryStatistics from several data sets or data set partitions.\nClass AggregateSummaryStatistics;\n// Maintains a dataset of values of a single variable and computes descriptive statistics based on stored data.\nClass DescriptiveStatistics;\n// Computes summary statistics for a stream of n-tuples added using the addValue method.\nClass MultivariateSummaryStatistics;\n// Value object representing the results of a univariate statistical summary.\nClass StatisticalSummaryValues;\n// Computes summary statistics for a stream of data values added using the addValue method.\nClass SummaryStatistics;\n// Implementation of DescriptiveStatistics that is safe to use in a multithreaded environment.\nClass SynchronizedDescriptiveStatistics;\n// Implementation of MultivariateSummaryStatistics that is safe to use in a multithreaded environment.\nClass SynchronizedMultivariateSummaryStatistics;\n// Implementation of SummaryStatistics that is safe to use in a multithreaded environment.\nClass SynchronizedSummaryStatistics;\n", "des": "Generic univariate summary statistic objects."}
{"index": 1208, "repo": "commons-math3-3.6.1", "code": "package moment\n\n// Returns the geometric mean of the available values.\nClass GeometricMean;\n// Computes the Kurtosis of the available values.\nClass Kurtosis;\n// Computes the arithmetic mean of a set of values.\nClass Mean;\n// Computes a statistic related to the Second Central Moment.\nClass SecondMoment;\n// Computes the semivariance of a set of values with respect to a given cutoff value.\nClass SemiVariance;\n// Computes the skewness of the available values.\nClass Skewness;\n// Computes the sample standard deviation.\nClass StandardDeviation;\n// Computes the variance of the available values.\nClass Variance;\n// Returns the covariance matrix of the available vectors.\nClass VectorialCovariance;\n// Returns the arithmetic mean of the available vectors.\nClass VectorialMean;\n// The direction of the semivariance - either upside or downside.\nEnum SemiVariance.Direction;\n", "des": "Summary statistics based on moments."}
{"index": 1209, "repo": "commons-math3-3.6.1", "code": "package rank\n\n// An interface that encapsulates abstractions of the P-square algorithm markers as is explained in the original works.\nInterface PSquarePercentile.PSquareMarkers;\n// Returns the maximum of the available values.\nClass Max;\n// Returns the median of the available values.\nClass Median;\n// Returns the minimum of the available values.\nClass Min;\n// Provides percentile computation.\nClass Percentile;\n// A StorelessUnivariateStatistic estimating percentiles using the P2 Algorithm as explained by Raj Jain and Imrich Chlamtac in P2 Algorithm for Dynamic Calculation of Quantiles and Histogram Without Storing Observations.\nClass PSquarePercentile;\n// An enum for various estimation strategies of a percentile referred in wikipedia on quantile with the names of enum matching those of types mentioned in wikipedia.\nEnum Percentile.EstimationType;\n", "des": "Summary statistics based on ranks."}
{"index": 1210, "repo": "commons-math3-3.6.1", "code": "package summary\n\n// Returns the product of the available values.\nClass Product;\n// Returns the sum of the available values.\nClass Sum;\n// Returns the sum of the natural logs for this collection of values.\nClass SumOfLogs;\n// Returns the sum of the squares of the available values.\nClass SumOfSquares;\n", "des": "Other summary statistics."}
{"index": 1211, "repo": "commons-math3-3.6.1", "code": "package inference\n\n// Implements binomial test statistics.\nClass BinomialTest;\n// Implements Chi-Square test statistics.\nClass ChiSquareTest;\n// Implements G Test statistics.\nClass GTest;\n// Implementation of the Kolmogorov-Smirnov (K-S) test for equality of continuous distributions.\nClass KolmogorovSmirnovTest;\n// An implementation of the Mann-Whitney U test (also called Wilcoxon rank-sum test).\nClass MannWhitneyUTest;\n// Implements one-way ANOVA (analysis of variance) statistics.\nClass OneWayAnova;\n// A collection of static methods to create inference test instances or to perform inference tests.\nClass TestUtils;\n// An implementation for Student's t-tests.\nClass TTest;\n// An implementation of the Wilcoxon signed-rank test.\nClass WilcoxonSignedRankTest;\n// Represents an alternative hypothesis for a hypothesis test.\nEnum AlternativeHypothesis;\n", "des": "Classes providing hypothesis testing."}
{"index": 1212, "repo": "commons-math3-3.6.1", "code": "package interval\n\n// Interface to generate confidence intervals for a binomial proportion.\nInterface BinomialConfidenceInterval;\n// Implements the Agresti-Coull method for creating a binomial proportion confidence interval.\nClass AgrestiCoullInterval;\n// Implements the Clopper-Pearson method for creating a binomial proportion confidence interval.\nClass ClopperPearsonInterval;\n// Represents an interval estimate of a population parameter.\nClass ConfidenceInterval;\n// Factory methods to generate confidence intervals for a binomial proportion.\nClass IntervalUtils;\n// Implements the normal approximation method for creating a binomial proportion confidence interval.\nClass NormalApproximationInterval;\n// Implements the Wilson score method for creating a binomial proportion confidence interval.\nClass WilsonScoreInterval;\n", "des": "Classes providing binomial proportion confidence interval construction."}
{"index": 1213, "repo": "commons-math3-3.6.1", "code": "package ranking\n\n// Interface representing a rank transformation.\nInterface RankingAlgorithm;\n// Ranking based on the natural ordering on doubles.\nClass NaturalRanking;\n// Strategies for handling NaN values in rank transformations.\nEnum NaNStrategy;\n// Strategies for handling tied values in rank transformations.\nEnum TiesStrategy;\n", "des": "Classes providing rank transformations."}
{"index": 1214, "repo": "commons-math3-3.6.1", "code": "package regression\n\n// The multiple linear regression can be represented in matrix-notation.\nInterface MultipleLinearRegression;\n// An interface for regression models allowing for dynamic updating of the data.\nInterface UpdatingMultipleLinearRegression;\n// Abstract base class for implementations of MultipleLinearRegression.\nClass AbstractMultipleLinearRegression;\n// The GLS implementation of multiple linear regression.\nClass GLSMultipleLinearRegression;\n// This class is a concrete implementation of the UpdatingMultipleLinearRegression interface.\nClass MillerUpdatingRegression;\n// Implements ordinary least squares (OLS) to estimate the parameters of a multiple linear regression model.\nClass OLSMultipleLinearRegression;\n// Results of a Multiple Linear Regression model fit.\nClass RegressionResults;\n// Estimates an ordinary least squares regression model with one independent variable.\nClass SimpleRegression;\n// Exception thrown when a regression model is not correctly specified.\nClass ModelSpecificationException;\n", "des": "Statistical routines involving multivariate data."}
{"index": 1215, "repo": "commons-math3-3.6.1", "code": "package transform\n\n// Interface for one-dimensional data sets transformations producing real results.\nInterface RealTransformer;\n// Implements the Fast Cosine Transform for transformation of one-dimensional real data sets.\nClass FastCosineTransformer;\n// Implements the Fast Fourier Transform for transformation of one-dimensional real or complex data sets.\nClass FastFourierTransformer;\n// Implements the Fast Hadamard Transform (FHT).\nClass FastHadamardTransformer;\n// Implements the Fast Sine Transform for transformation of one-dimensional real data sets.\nClass FastSineTransformer;\n// Useful functions for the implementation of various transforms.\nClass TransformUtils;\n// This enumeration defines the various types of normalizations that can be applied to discrete cosine transforms (DCT).\nEnum DctNormalization;\n// This enumeration defines the various types of normalizations that can be applied to discrete Fourier transforms (DFT).\nEnum DftNormalization;\n// This enumeration defines the various types of normalizations that can be applied to discrete sine transforms (DST).\nEnum DstNormalization;\n// This enumeration defines the type of transform which is to be computed.\nEnum TransformType;\n", "des": "Implementations of transform methods, including Fast Fourier transforms."}
{"index": 1216, "repo": "commons-math3-3.6.1", "code": "package util\n\n// Provides a standard interface for double arrays.\nInterface DoubleArray;\n// Defines a method to be called at counter exhaustion.\nInterface Incrementor.MaxCountExceededCallback;\n// Defines a method to be called at counter exhaustion.\nInterface IntegerSequence.Incrementor.MaxCountExceededCallback;\n// The listener interface for receiving events occurring in an iterative algorithm.\nInterface IterationListener;\n// Real-valued function that operate on an array or a part of it.\nInterface MathArrays.Function;\n// Subclasses implementing this interface can transform Objects to doubles.\nInterface NumberTransformer;\n// A strategy to pick a pivoting index of an array for doing partitioning.\nInterface PivotingStrategyInterface;\n// Some useful, arithmetics related, additions to the built-in functions in Math.\nClass ArithmeticUtils;\n// Arbitrary precision decimal number.\nClass BigReal;\n// Representation of real numbers with arbitrary precision field.\nClass BigRealField;\n// A mid point strategy based on the average of begin and end indices.\nClass CentralPivotingStrategy;\n// Utility to create combinations (n, k) of k elements in a set of n elements.\nClass Combinations;\n// Combinatorial utilities.\nClass CombinatoricsUtils;\n// Base class for formatters of composite objects (complex numbers, vectors ...).\nClass CompositeFormat;\n// Provides a generic means to evaluate continued fractions.\nClass ContinuedFraction;\n// This class wraps a double value in an object.\nClass Decimal64;\n// The field of double precision floating-point numbers.\nClass Decimal64Field;\n// A Default NumberTransformer for java.lang.Numbers and Numeric Strings.\nClass DefaultTransformer;\n// Faster, more accurate, portable alternative to Math and StrictMath for large scale computation.\nClass FastMath;\n// Use IntegerSequence.Incrementor instead.\nClass Incrementor;\n// Provides a sequence of integers.\nClass IntegerSequence;\n// Utility that increments a counter until a maximum is reached, at which point, the instance will by default throw a MaxCountExceededException.\nClass IntegerSequence.Incrementor;\n// Generates a sequence of integers.\nClass IntegerSequence.Range;\n// The root class from which all events occurring while running an IterationManager should be derived.\nClass IterationEvent;\n", "des": "Convenience routines and common data structures used throughout the commons-math library."}
{"index": 1217, "repo": "commons-text-1.10.0", "code": "package text\n\n// The Builder interface is designed to designate a class as a builder object in the Builder design pattern.\nInterface Builder<T>;\n// A predicate for selecting code points.\nInterface CharacterPredicate;\n// Format factory.\nInterface FormatFactory;\n// TextRandomProvider implementations are used by RandomStringGenerator as a source of randomness.\nInterface TextRandomProvider;\n// Convert from one alphabet to another, with the possibility of leaving certain characters unencoded.\nClass AlphabetConverter;\n// Case manipulation operations on Strings that contain words.\nClass CaseUtils;\n// Formats using one formatter and parses using a different formatter.\nClass CompositeFormat;\n// Extends java.text.MessageFormat to allow pluggable/additional formatting options for embedded format elements.\nClass ExtendedMessageFormat;\n// Provides utilities for working with the Formattable interface.\nClass FormattableUtils;\n// Generates random Unicode strings containing the specified number of code points.\nClass RandomStringGenerator;\n// A builder for generating RandomStringGenerator instances.\nClass RandomStringGenerator.Builder;\n// Deprecated as of 1.3, use TextStringBuilder instead.\nClass StrBuilder;\n// Escapes and unescapes Strings for Java, Java Script, HTML and XML.\nClass StringEscapeUtils;\n// Convenience wrapper for StringBuilder providing escape methods.\nClass StringEscapeUtils.Builder;\n// Substitutes variables within a string by values.\nClass StringSubstitutor;\n// Tokenizes a string based on delimiters (separators) and supporting quoting and ignored character concepts.\nClass StringTokenizer;\n// Deprecated as of 1.3, use StringLookupFactory instead.\nClass StrLookup<V>;\n// Deprecated as of 1.3, use StringMatcherFactory instead.\nClass StrMatcher;\n// Deprecated as of 1.3, use StringSubstitutor instead.\nClass StrSubstitutor;\n// Deprecated as of 1.3, use StringTokenizer instead.\nClass StrTokenizer;\n// Builds a string from constituent parts providing a more flexible and powerful API than StringBuffer and StringBuilder.\nClass TextStringBuilder;\n// Operations on Strings that contain words.\nClass WordUtils;\n// Commonly used implementations of CharacterPredicate.\nEnum CharacterPredicates;\n", "des": "Basic classes for text handling."}
{"index": 1218, "repo": "commons-text-1.10.0", "code": "package diff\n\n// This interface should be implemented by user object to walk through EditScript objects.\nInterface CommandVisitor<T>;\n// This interface is devoted to handle synchronized replacement sequences.\nInterface ReplacementsHandler<T>;\n// Command representing the deletion of one object of the first sequence.\nClass DeleteCommand<T>;\n// Abstract base class for all commands used to transform an objects sequence into another one.\nClass EditCommand<T>;\n// This class gathers all the commands needed to transform one objects sequence into another objects sequence.\nClass EditScript<T>;\n// Command representing the insertion of one object of the second sequence.\nClass InsertCommand<T>;\n// Command representing the keeping of one object present in both sequences.\nClass KeepCommand<T>;\n// This class handles sequences of replacements resulting from a comparison.\nClass ReplacementsFinder<T>;\n// It is guaranteed that the comparisons will always be done as o1.equals(o2) where o1 belongs to the first sequence and o2 belongs to the second sequence.\nClass StringsComparator;\n", "des": "Provides algorithms for diff between strings."}
{"index": 1219, "repo": "commons-text-1.10.0", "code": "package io\n\n// A Reader that performs string substitution on a source Reader using a StringSubstitutor.\nClass StringSubstitutorReader;\n", "des": "StringSubstitutorReader is a Reader that performs string substitution on a source Reader using a StringSubstitutor."}
{"index": 1220, "repo": "commons-text-1.10.0", "code": "package lookup\n\n// Lookups a String key for a String value.\nInterface BiStringLookup<U>;\n// Lookups a String key for a String value.\nInterface StringLookup;\n// Create instances of string lookups or access singleton string lookups implemented in this package.\nClass StringLookupFactory;\n// An enumeration defining StringLookup objects available through StringLookupFactory.\nEnum DefaultStringLookup;\n", "des": "Provides algorithms for looking up strings for use with a StringSubstitutor."}
{"index": 1221, "repo": "commons-text-1.10.0", "code": "package matcher\n\n// Determines if a character array portion matches.\nInterface StringMatcher;\n// Provides access to matchers defined in this package.\nClass StringMatcherFactory;\n", "des": "Provides algorithms for matching up strings for use with a StringSubstitutor."}
{"index": 1222, "repo": "commons-text-1.10.0", "code": "package numbers\n\n// Builds configured format functions for standard double format types.\nClass DoubleFormat.Builder;\n// Enum containing standard double format types with methods to produce configured formatter instances.\nEnum DoubleFormat;\n", "des": "Provides algorithms for converting numbers to strings."}
{"index": 1223, "repo": "commons-text-1.10.0", "code": "package similarity\n\n// Interface for Edit Distances.\nInterface EditDistance<R>;\n// Interface for the concept of a string similarity score.\nInterface SimilarityScore<R>;\n// Measures the cosine distance between two character sequences.\nClass CosineDistance;\n// Measures the Cosine similarity of two vectors of an inner product space and compares the angle between them.\nClass CosineSimilarity;\n// This stores a EditDistance implementation and a CharSequence \"left\" string.\nClass EditDistanceFrom<R>;\n// A matching algorithm that is similar to the searching algorithms implemented in editors such as Sublime Text, TextMate, Atom and others.\nClass FuzzyScore;\n// The hamming distance between two strings of equal length is the number of positions at which the corresponding symbols are different.\nClass HammingDistance;\n// Represents the intersection result between two sets.\nClass IntersectionResult;\n// Measures the intersection of two sets created from a pair of character sequences.\nClass IntersectionSimilarity<T>;\n// Measures the Jaccard distance of two sets of character sequence.\nClass JaccardDistance;\n// Measures the Jaccard similarity (aka Jaccard index) of two sets of character sequence.\nClass JaccardSimilarity;\n// Measures the Jaro-Winkler distance of two character sequences.\nClass JaroWinklerDistance;\n// A similarity algorithm indicating the percentage of matched characters between two character sequences.\nClass JaroWinklerSimilarity;\n// An algorithm for measuring the difference between two character sequences.\nClass LevenshteinDetailedDistance;\n// An algorithm for measuring the difference between two character sequences.\nClass LevenshteinDistance;\n// Container class to store Levenshtein distance between two character sequences.\nClass LevenshteinResults;\n// A similarity algorithm indicating the length of the longest common subsequence between two strings.\nClass LongestCommonSubsequence;\n// An edit distance algorithm based on the length of the longest common subsequence between two strings.\nClass LongestCommonSubsequenceDistance;\n// This stores a SimilarityScore implementation and a CharSequence \"left\" string.\nClass SimilarityScoreFrom<R>;\n", "des": "Provides algorithms for string similarity."}
{"index": 1224, "repo": "commons-text-1.10.0", "code": "package translate\n\n// Executes a sequence of translators one after the other.\nClass AggregateTranslator;\n// An API for translating text.\nClass CharSequenceTranslator;\n// Helper subclass to CharSequenceTranslator to allow for translations that will replace up to one character at a time.\nClass CodePointTranslator;\n// This class holds inner classes for escaping/unescaping Comma Separated Values.\nClass CsvTranslators;\n// Translator for escaping Comma Separated Values.\nClass CsvTranslators.CsvEscaper;\n// Translator for unescaping escaped Comma Separated Value entries.\nClass CsvTranslators.CsvUnescaper;\n// Class holding various entity data for HTML and XML - generally for use with the LookupTranslator.\nClass EntityArrays;\n// Translates code points to their Unicode escaped value suitable for Java source.\nClass JavaUnicodeEscaper;\n// Translates a value using a lookup table.\nClass LookupTranslator;\n// Translates code points to their XML numeric entity escaped value.\nClass NumericEntityEscaper;\n// Translates XML numeric entities of the form &#[xX]?\\d+;? to the specific code point.\nClass NumericEntityUnescaper;\n// Translate escaped octal Strings back to their octal values.\nClass OctalUnescaper;\n// Translates code points to their Unicode escaped value.\nClass UnicodeEscaper;\n// Translates escaped Unicode values of the form \\\\u+\\d\\d\\d\\d back to Unicode.\nClass UnicodeUnescaper;\n// Helper subclass to CharSequenceTranslator to remove unpaired surrogates.\nClass UnicodeUnpairedSurrogateRemover;\n// Enumerates NumericEntityUnescaper options for unescaping.\nEnum NumericEntityUnescaper.OPTION;\n", "des": "An API for creating text translation routines from a set of smaller building blocks."}
{"index": 1225, "repo": "spring-plugin-core-3.0.0", "code": "package core\n\n// PluginRegistry implementation that be made aware of a certain ordering of Plugins.\npublic class OrderAwarePluginRegistry<T extends Plugin<S>,S> extends SimplePluginRegistry<T,S>;\n// Central interface for plugins for the system.\npublic interface Plugin<S>;\n// Registry for Plugins.\npublic interface PluginRegistry<T extends Plugin<S>,S> extends Iterable<T>;\n// Base class for PluginRegistry implementations.\npublic abstract class PluginRegistrySupport<T extends Plugin<S>,S> extends Object implements PluginRegistry<T,S>, Iterable<T>;\n// Basic implementation of PluginRegistry.\npublic class SimplePluginRegistry<T extends Plugin<S>,S> extends PluginRegistrySupport<T,S>;\n", "des": "This package contains the core plugin API."}
{"index": 1226, "repo": "spring-plugin-core-3.0.0", "code": "package config\n\n// Enables exposure of PluginRegistry instances for the configured Plugin types\n@Target(TYPE) @Retention(RUNTIME) @Inherited @Documented @Import(PluginRegistriesBeanDefinitionRegistrar.class) public @interface EnablePluginRegistries;\n// Bean definition parser to register <list /> elements from the plugin namespace.\npublic class PluginListDefinitionParser extends org.springframework.beans.factory.xml.AbstractBeanDefinitionParser;\n// Simple namespace handler for plugin-config namespace.\npublic class PluginNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n// ImportBeanDefinitionRegistrar to register PluginRegistryFactoryBean instances for type listed in EnablePluginRegistries.\npublic class PluginRegistriesBeanDefinitionRegistrar extends Object implements org.springframework.context.annotation.ImportBeanDefinitionRegistrar;\n// Simple extension of PluginListDefinitionParser.\npublic class PluginRegistryDefinitionParser extends PluginListDefinitionParser;\n", "des": "This package contains configuration support classes to ease registry configuration with Spring namespaces."}
{"index": 1227, "repo": "spring-plugin-core-3.0.0", "code": "package support\n\n// Abstract base class to implement types that need access to all beans of a given type from the ApplicationContext.\npublic abstract class AbstractTypeAwareSupport<T> extends Object implements org.springframework.context.ApplicationContextAware, org.springframework.context.ApplicationListener<org.springframework.context.event.ContextRefreshedEvent>, org.springframework.beans.factory.InitializingBean;\n// Factory to create bean lists for a given type.\npublic class BeanListFactoryBean<T> extends AbstractTypeAwareSupport<T> implements org.springframework.beans.factory.FactoryBean<List<T>>;\n// FactoryBean to create PluginRegistry instances.\npublic class PluginRegistryFactoryBean<T extends Plugin<S>,S> extends AbstractTypeAwareSupport<T> implements org.springframework.beans.factory.FactoryBean<PluginRegistry<T,S>>;\n", "des": "This package contains support classes to create bean lists or plugin registry instances out of beans implementing a certain interface."}
{"index": 1228, "repo": "spring-hateoas-2.1.2", "code": "package hateoas\n\n// Hold the AffordanceModels for all supported media types.\npublic final class Affordance extends Object implements Iterable<AffordanceModel>;\n// Collection of attributes needed to render any form of hypermedia.\npublic abstract class AffordanceModel extends Object;\n// Payload metadata for incoming requests.\npublic static interface AffordanceModel.InputPayloadMetadata extends AffordanceModel.PayloadMetadata;\n// A named component.\npublic static interface AffordanceModel.Named;\n// Metadata about payloads.\npublic static interface AffordanceModel.PayloadMetadata;\n// Metadata about the property model of a representation.\npublic static interface AffordanceModel.PropertyMetadata extends AffordanceModel.Named;\n// SPI for a type that can get AffordanceModel.PropertyMetadata applied.\npublic static interface AffordanceModel.PropertyMetadataConfigured<T>;\n// General helper to easily create a wrapper for a collection of entities.\npublic class CollectionModel<T> extends RepresentationModel<CollectionModel<T>> implements Iterable<T>, ResolvableTypeProvider;\n// A simple EntityModel wrapping a domain object and adding links to it.\npublic class EntityModel<T> extends RepresentationModel<EntityModel<T>>;\n// Capture standard IANA-based link relations.\npublic final class IanaLinkRelations extends Object;\n// A list of well-defined URI schemes governed by IANA.\npublic class IanaUriSchemes extends Object;\n// Annotation to declare a dedicated input type for a property of an representation model.\n@Documented @Retention(RUNTIME) @Target({FIELD,METHOD,ANNOTATION_TYPE}) public @interface InputType;\n// Value object for links.\npublic class Link extends Object implements Serializable;\n// Interface for defining link relations.\npublic interface LinkRelation;\n// Value object to represent a list of Links.\npublic class Links extends Object implements Iterable<Link>;\n// The mode how to merge two Links instances.\npublic static enum Links.MergeMode extends Enum<Links.MergeMode>;\n// Constants for well-known hypermedia types.\npublic class MediaTypes extends Object;\n", "des": "Value objects to ease creating Links and link driven representations for REST webservices."}
{"index": 1229, "repo": "spring-hateoas-2.1.2", "code": "package client\n\n// Container for customizations to a single traverson \"hop\"\npublic final class Hop extends Object;\n// LinkDiscoverer that uses JsonPath to find links inside a representation.\npublic class JsonPathLinkDiscoverer extends Object implements LinkDiscoverer;\n// Interface to allow discovering links by relation type from some source.\npublic interface LinkDiscoverer extends org.springframework.plugin.core.Plugin<MediaType>;\n// Value object to wrap a PluginRegistry for LinkDiscoverer so that it's easier to inject them into clients wanting to lookup a LinkDiscoverer for a given MediaTypes.\npublic class LinkDiscoverers extends Object;\n// Component to ease traversing hypermedia APIs by following links with relation types.\npublic class Traverson extends Object;\n// SPI that exposes HttpMessageConverters and LinkDiscoverers to be used by default by Traverson.\npublic interface TraversonDefaults;\n", "des": "Client side support."}
{"index": 1230, "repo": "spring-hateoas-2.1.2", "code": "package config\n\n// Activates hypermedia support in the ApplicationContext.\n@Retention(RUNTIME) @Target(TYPE) @Documented @Import({org.springframework.hateoas.config.HypermediaConfigurationImportSelector.class,HateoasConfiguration.class,org.springframework.hateoas.config.WebStackImportSelector.class}) public @interface EnableHypermediaSupport;\n// Hypermedia representation types supported.\npublic static enum EnableHypermediaSupport.HypermediaType extends Enum<EnableHypermediaSupport.HypermediaType>;\n// Common HATEOAS specific configuration.\n@Configuration(proxyBeanMethods=false) @EnablePluginRegistries(LinkDiscoverer.class) public class HateoasConfiguration extends Object;\n// Interface for registering custom hypermedia handlers.\npublic interface HypermediaMappingInformation;\n// Assembles hypermedia-based message converters and applies them to an existing RestTemplate.\npublic class HypermediaRestTemplateConfigurer extends Object;\n// Assembles Jackson2JsonEncoders and Jackson2JsonDecoders needed to wire a WebClient with hypermedia support.\npublic class HypermediaWebClientConfigurer extends Object;\n// Assembles Jackson2JsonEncoders and Jackson2JsonDecoders needed to wire a WebTestClient with hypermedia support.\npublic class HypermediaWebTestClientConfigurer extends Object implements WebTestClientConfigurer;\n// SPI used to register internal media types through spring.factories.\npublic interface MediaTypeConfigurationProvider;\n// Value type to handle registration of hypermedia related HttpMessageConverters.\npublic class WebConverters extends Object;\n", "des": "Spring container configuration support."}
{"index": 1231, "repo": "spring-hateoas-2.1.2", "code": "package mediatype\n\n// SPI for media type implementations to create a specific AffordanceModel for a ConfiguredAffordance.\npublic interface AffordanceModelFactory;\n// Operations commons to all builder APIs.\npublic interface AffordanceOperations;\n// Primary API to construct Affordance instances.\npublic class Affordances extends Object implements AffordanceOperations;\n// An affordance in creation.\npublic interface ConfigurableAffordance extends AffordanceOperations;\n// A HandlerInstantiator that will use instances explicitly registered with it but fall back to lookup or even create a fresh instance via the AutowireCapableBeanFactory provided on construction.\npublic class ConfigurableHandlerInstantiator extends com.fasterxml.jackson.databind.cfg.HandlerInstantiator;\n// A configure affordance for inspection by media type implementations to create AffordanceModel instances.\npublic interface ConfiguredAffordance;\n// SPI interface for components that can derive an input type from a ResolvableType.\npublic interface InputTypeFactory;\n// Jackson utility methods.\npublic final class JacksonHelper extends Object;\n// A simplified variant of MessageSourceAccessor to allow more direct replacement with a no-op implementation in case the target MessageSource is unavailable to avoid resolution overhead.\npublic interface MessageResolver;\n// A Jackson serializer triggering message resolution via a MessageResolver for MessageSourceResolvable instances about to be serialized.\npublic class MessageSourceResolvableSerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer<MessageSourceResolvable>;\n// \npublic class PropertyUtils extends Object;\n", "des": "Spring container configuration support."}
{"index": 1232, "repo": "spring-hateoas-2.1.2", "code": "package alps\n\n// An ALPS document.\npublic final class Alps extends Object;\n// \npublic static class Alps.AlpsBuilder extends Object;\n// LinkDiscoverer implementation to find ALPS-based links.\npublic class AlpsLinkDiscoverer extends JsonPathLinkDiscoverer;\n// A value object for an ALPS descriptor.\npublic final class Descriptor extends Object;\n// \npublic static class Descriptor.DescriptorBuilder extends Object;\n// A value object for an ALPS doc element.\npublic final class Doc extends Object;\n// \npublic static class Doc.DocBuilder extends Object;\n// A value object for an ALPS ext element.\npublic final class Ext extends Object;\n// \npublic static class Ext.ExtBuilder extends Object;\n// Enum for all ALPS doc formats.\npublic enum Format extends Enum<Format>;\n// An enum for ALPS descriptor types\npublic enum Type extends Enum<Type>;\n", "des": "Value objects to build ALPS metadata."}
{"index": 1233, "repo": "spring-hateoas-2.1.2", "code": "package collectionjson\n\n// LinkDiscoverer implementation based on JSON Collection link structure.\npublic class CollectionJsonLinkDiscoverer extends JsonPathLinkDiscoverer;\n// Jackson 2 module implementation to render CollectionModel, EntityModel, and RepresentationModel instances in Collection+JSON compatible JSON.\npublic class Jackson2CollectionJsonModule extends com.fasterxml.jackson.databind.module.SimpleModule;\n", "des": "Value objects to build Collection+JSON representations."}
{"index": 1234, "repo": "spring-hateoas-2.1.2", "code": "package hal\n\n// Custom mixin to to render collection content as _embedded.\npublic abstract class CollectionModelMixin<T> extends CollectionModel<T>;\n// API to provide HAL curie information for links.\npublic interface CurieProvider;\n// Default implementation of CurieProvider rendering a single configurable UriTemplate based curie.\npublic class DefaultCurieProvider extends Object implements CurieProvider;\n// Value object to get the curie Link rendered in JSON.\nprotected static class DefaultCurieProvider.Curie extends Link;\n// HAL specific configuration.\npublic class HalConfiguration extends Object;\n// Configuration option how to render single links of a given LinkRelation.\npublic static enum HalConfiguration.RenderSingleLinks extends Enum<HalConfiguration.RenderSingleLinks>;\n// LinkDiscoverer implementation based on HAL link structure.\npublic class HalLinkDiscoverer extends JsonPathLinkDiscoverer;\n// Value object for HAL based LinkRelation, i.e. a relation that can be curied.\npublic class HalLinkRelation extends Object implements LinkRelation, MessageSourceResolvable;\n// Simple builder interface to easily create multiple HalLinkRelations for a single curie.\npublic static interface HalLinkRelation.HalLinkRelationBuilder;\n// Spring configuration to set up HAL support.\n@Configuration(proxyBeanMethods=false) public class HalMediaTypeConfiguration extends Object implements HypermediaMappingInformation;\n// Builder API to create complex HAL representations exposing a HAL idiomatic API.\npublic class HalModelBuilder extends Object;\n// \npublic static interface HalModelBuilder.PreviewBuilder;\n// Jackson 2 module implementation to render Link and RepresentationModel instances in HAL compatible JSON.\npublic class Jackson2HalModule extends com.fasterxml.jackson.databind.module.SimpleModule;\n// Helper to easily map embedded resources and find out whether they were curied.\npublic static class Jackson2HalModule.EmbeddedMapper extends Object;\n// HandlerInstantiator to create HAL-specific serializers, deserializers etc.\npublic static class Jackson2HalModule.HalHandlerInstantiator extends ConfigurableHandlerInstantiator;\n", "des": "HAL-specific extensions, SPIs and Jackson customizations."}
{"index": 1235, "repo": "spring-hateoas-2.1.2", "code": "package forms\n\n// HAL-FORMS specific configuration extension of HalConfiguration.\npublic class HalFormsConfiguration extends Object;\n// HAL-FORMS based JsonPathLinkDiscoverer.\npublic class HalFormsLinkDiscoverer extends HalLinkDiscoverer;\n// Representation of HAL-FORMS options attribute.\npublic interface HalFormsOptions;\n// \npublic abstract static class HalFormsOptions.AbstractHalFormsOptions<T extends HalFormsOptions.AbstractHalFormsOptions<T>> extends Object implements HalFormsOptions;\n// \npublic static class HalFormsOptions.Inline extends HalFormsOptions.AbstractHalFormsOptions<HalFormsOptions.Inline>;\n// Representation of a remote options element.\npublic static class HalFormsOptions.Remote extends HalFormsOptions.AbstractHalFormsOptions<HalFormsOptions.Remote>;\n// A value object to describe prompted values for HAL-FORMS options' inline attribute or responses of resources pointed to by the link object.\npublic class HalFormsPromptedValue extends Object;\n// Serialize / deserialize all the parts of HAL-FORMS documents using Jackson.\npublic class Jackson2HalFormsModule extends com.fasterxml.jackson.databind.module.SimpleModule;\n", "des": "HAL-FORMS extension media type."}
{"index": 1236, "repo": "spring-hateoas-2.1.2", "code": "package html\n\n// The types of HTML <input … /> elements.\npublic class HtmlInputType extends Object;\n", "des": "Support for HTML media type."}
{"index": 1237, "repo": "spring-hateoas-2.1.2", "code": "package problem\n\n// Encapsulation of an RFC-7807 Problem code.\npublic class Problem extends Object;\n// \npublic static final class Problem.ExtendedProblem<T> extends Problem;\n", "des": "Value objects to build Problem representations."}
{"index": 1238, "repo": "spring-hateoas-2.1.2", "code": "package uber\n\n// Jackson SimpleModule for UBER+JSON serializers and deserializers.\npublic class Jackson2UberModule extends com.fasterxml.jackson.databind.module.SimpleModule;\n// Find links by rel in an UBER+JSON representation.\npublic class UberLinkDiscoverer extends Object implements LinkDiscoverer;\n", "des": "UBER media type objects."}
{"index": 1239, "repo": "spring-hateoas-2.1.2", "code": "package vnderrors\n\n// \n@Deprecated public class VndErrors extends CollectionModel<VndErrors.VndError>;\n// \n@Deprecated public static class VndErrors.VndError extends RepresentationModel<VndErrors.VndError>;\n", "des": "Vnd.Error media type."}
{"index": 1240, "repo": "spring-hateoas-2.1.2", "code": "package server\n\n// Accessor to links pointing to controllers backing an entity type.\npublic interface EntityLinks extends org.springframework.plugin.core.Plugin<Class<?>>;\n// Annotation to demarcate controllers that expose URI templates of a structure according to ControllerEntityLinks.\n@Inherited @Documented @Retention(RUNTIME) @Target(TYPE) public @interface ExposesResourceFor;\n// Builder to ease building Link instances.\npublic interface LinkBuilder;\n// Factory for LinkBuilder instances.\npublic interface LinkBuilderFactory<T extends LinkBuilder>;\n// API to provide LinkRelations for collections and items of the given type.\npublic interface LinkRelationProvider extends org.springframework.plugin.core.Plugin<LinkRelationProvider.LookupContext>;\n// LinkRelationProvider selection context for item resource relation lookups (LinkRelationProvider.LookupContext.forItemResourceRelLookup(Class), collection resource relation lookups LinkRelationProvider.LookupContext.forCollectionResourceRelLookup(Class) or both LinkRelationProvider.LookupContext.forType(Class).\npublic static class LinkRelationProvider.LookupContext extends Object;\n// Extension of LinkBuilderFactory for implementations that also support creating LinkBuilders by pointing to a method.\npublic interface MethodLinkBuilderFactory<T extends LinkBuilder> extends LinkBuilderFactory<T>;\n// Interface for components that convert a domain type into a RepresentationModel.\npublic interface RepresentationModelAssembler<T,D extends RepresentationModel<?>>;\n// SPI interface to allow components to process the RepresentationModel instances returned from Spring MVC controllers.\npublic interface RepresentationModelProcessor<T extends RepresentationModel<?>>;\n// A RepresentationModelAssembler based purely on the domain type, using EntityRepresentationModel<T> as the enclosing representation model type.\npublic interface SimpleRepresentationModelAssembler<T> extends RepresentationModelAssembler<T,EntityModel<T>>;\n// Entity links API to create Links and LinkBuilder instances based on an identifier function.\npublic class TypedEntityLinks<T> extends Object;\n// Extension of TypedEntityLinks that exposes the ability to create links to collection resources as well.\npublic static class TypedEntityLinks.ExtendedTypedEntityLinks<T> extends TypedEntityLinks<T>;\n", "des": "Server-side components for hypermedia handling."}
{"index": 1241, "repo": "spring-hateoas-2.1.2", "code": "package core\n\n// Implementation base class to delegate the higher level methods of EntityLinks by delegating to the more fine grained ones to reduce the implementation effort for actual implementation classes.\npublic abstract class AbstractEntityLinks extends Object implements EntityLinks;\n// Simply helper to reference a dedicated attribute of an Annotation.\npublic class AnnotationAttribute extends Object;\n// LinkRelationProvider that evaluates the Relation annotation on entity types.\npublic class AnnotationLinkRelationProvider extends Object implements LinkRelationProvider, Ordered;\n// MappingDiscoverer implementation that inspects mappings from a particular annotation.\npublic class AnnotationMappingDiscoverer extends Object implements MappingDiscoverer;\n// Caching adapter of MappingDiscoverer.\npublic class CachingMappingDiscoverer extends Object implements MappingDiscoverer;\n// EntityLinks implementation which assumes a certain URI mapping structure: A class-level ExposesResourceFor annotation to declare that the annotated controller exposes collection and item resources for. An RequestMapping annotation to form the base URI of the collection resource. A controller method with a mapping annotation to actually handle at least one HTTP method. A controller method that maps a subordinate resource taking a path variable to identify an item resource.\npublic class ControllerEntityLinks extends AbstractEntityLinks;\n// FactoryBean implementation to create ControllerEntityLinks instances looking up controller classes from an ApplicationContext.\npublic class ControllerEntityLinksFactoryBean extends AbstractFactoryBean<ControllerEntityLinks> implements ApplicationContextAware;\n// Default implementation of LinkRelationProvider to simply use the uncapitalized version of the given type's name as item resource LinkRelation as well as an appended List for the collection resource LinkRelation.\npublic class DefaultLinkRelationProvider extends Object implements LinkRelationProvider, Ordered;\n// EntityLinks implementation that delegates to the EntityLinks instances registered in the PluginRegistry given on instance creation.\npublic class DelegatingEntityLinks extends Object implements EntityLinks;\n// \npublic class DelegatingLinkRelationProvider extends Object implements LinkRelationProvider;\n// Utility methods to capture dummy method invocations.\npublic class DummyInvocationUtils extends Object;\n// A wrapper to handle values to be embedded into a EntityModel.\npublic interface EmbeddedWrapper;\n// Interface to mark objects that are aware of the rel they'd like to be exposed under.\npublic class EmbeddedWrappers extends Object;\n// LinkRelationProvider implementation using the Evo Inflector implementation of an algorithmic approach to English plurals.\npublic class EvoInflectorLinkRelationProvider extends DefaultLinkRelationProvider;\n", "des": "Implementations of core API interfaces."}
{"index": 1242, "repo": "spring-hateoas-2.1.2", "code": "package mvc\n\n// Simples LinkBuilder implementation possible.\npublic class BasicLinkBuilder extends LinkBuilderSupport<BasicLinkBuilder>;\n// LinkRelationProvider inspecting ExposesResourceFor annotations on controller classes.\npublic class ControllerLinkRelationProvider extends Object implements LinkRelationProvider;\n// Simple Jackson serializers and deserializers.\npublic class JacksonSerializers extends Object;\n// Custom JsonDeserializer for Spring's MediaType using the MediaType.parseMediaType(String) method.\npublic static class JacksonSerializers.MediaTypeDeserializer extends com.fasterxml.jackson.databind.deser.std.StdDeserializer<MediaType>;\n// Syntactic sugar to create Link instances from MvcUriComponentsBuilder invocations.\npublic class MvcLink extends Object;\n// Base class to implement RepresentationModelAssemblers.\npublic abstract class RepresentationModelAssemblerSupport<T,D extends RepresentationModel<?>> extends Object implements RepresentationModelAssembler<T,D>;\n// HandlerMethodReturnValueHandler to post-process the objects returned from controller methods using the configured RepresentationModelProcessors.\npublic class RepresentationModelProcessorHandlerMethodReturnValueHandler extends Object implements HandlerMethodReturnValueHandler;\n// Component to easily invoke all RepresentationModelProcessor instances registered for values of type RepresentationModel.\npublic class RepresentationModelProcessorInvoker extends Object;\n// RepresentationModelProcessorInvoker.ProcessorWrapper for RepresentationModelProcessors targeting CollectionModel.\npublic static class RepresentationModelProcessorInvoker.CollectionModelProcessorWrapper extends Object;\n// Extension of MappingJackson2HttpMessageConverter to constrain the ability to read and write HTTP message based on the target type.\npublic class TypeConstrainedMappingJackson2HttpMessageConverter extends MappingJackson2HttpMessageConverter;\n// SPI callback to enhance a UriComponentsBuilder when referring to a method through a dummy method invocation.\npublic interface UriComponentsContributor;\n// Builder to ease building Link instances pointing to Spring MVC controllers.\npublic class WebMvcLinkBuilder extends TemplateVariableAwareLinkBuilderSupport<WebMvcLinkBuilder>;\n// Factory for LinkBuilderSupport instances based on the request mapping annotated on the given controller.\npublic class WebMvcLinkBuilderFactory extends Object implements MethodLinkBuilderFactory<WebMvcLinkBuilder>;\n", "des": "Spring MVC helper classes to build Links and assemble RepresentationModel types."}
{"index": 1243, "repo": "spring-hateoas-2.1.2", "code": "package reactive\n\n// Reactive variant of RepresentationModelAssembler combined with SimpleRepresentationModelAssembler.\npublic interface ReactiveRepresentationModelAssembler<T,D extends RepresentationModel<?>>;\n// Reactive variant of RepresentationModelAssembler combined with SimpleRepresentationModelAssembler.\npublic interface SimpleReactiveRepresentationModelAssembler<T> extends ReactiveRepresentationModelAssembler<T,EntityModel<T>>;\n// Utility for building reactive Links.\npublic class WebFluxLinkBuilder extends TemplateVariableAwareLinkBuilderSupport<WebFluxLinkBuilder>;\n// \npublic static class WebFluxLinkBuilder.WebFluxBuilder extends Object;\n// Intermediate representation of a Link within a reactive pipeline to easily add Affordances from method invocations.\npublic static class WebFluxLinkBuilder.WebFluxLink extends Object;\n", "des": "Spring WebFlux components to build Links and assemble RepresentationModel types."}
{"index": 1244, "repo": "spring-hateoas-2.1.2", "code": "package support\n\n// \npublic class ClassUtils extends Object;\n// Utility to glean what web stack is currently available.\npublic enum WebStack extends Enum<WebStack>;\n", "des": "Support utilities for hypermedia handling."}
{"index": 1245, "repo": "spring-integration-smb-6.1.2", "code": "package config\n\n// Parser for the SMB 'inbound-channel-adapter' element.\npublic class SmbInboundChannelAdapterParser extends org.springframework.integration.file.config.AbstractRemoteFileInboundChannelAdapterParser;\n// Provides namespace support for using SMB.\npublic class SmbNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n// The parser for <Int-smb:outbound-channel-adapter>.\npublic class SmbOutboundChannelAdapterParser extends org.springframework.integration.file.config.RemoteFileOutboundChannelAdapterParser;\n// Parser for the SMB 'outbound-gateway' element.\npublic class SmbOutboundGatewayParser extends org.springframework.integration.file.config.AbstractRemoteFileOutboundGatewayParser;\n// Parser for the SMB 'inbound-streaming-channel-adapter' element.\npublic class SmbStreamingInboundChannelAdapterParser extends org.springframework.integration.file.config.AbstractRemoteFileStreamingInboundChannelAdapterParser;\n", "des": "SMB-specific file list filter classes."}
{"index": 1246, "repo": "spring-integration-smb-6.1.2", "code": "package dsl\n\n// The factory for SMB components.\npublic final class Smb extends Object;\n// A RemoteFileInboundChannelAdapterSpec for an SmbInboundFileSynchronizingMessageSource.\npublic class SmbInboundChannelAdapterSpec extends org.springframework.integration.file.dsl.RemoteFileInboundChannelAdapterSpec<jcifs.smb.SmbFile,SmbInboundChannelAdapterSpec,SmbInboundFileSynchronizingMessageSource>;\n// A FileTransferringMessageHandlerSpec for SMB.\npublic class SmbMessageHandlerSpec extends org.springframework.integration.file.dsl.FileTransferringMessageHandlerSpec<jcifs.smb.SmbFile,SmbMessageHandlerSpec>;\n// A RemoteFileOutboundGatewaySpec for SMB.\npublic class SmbOutboundGatewaySpec extends org.springframework.integration.file.dsl.RemoteFileOutboundGatewaySpec<jcifs.smb.SmbFile,SmbOutboundGatewaySpec>;\n// A RemoteFileStreamingInboundChannelAdapterSpec for a SmbStreamingMessageSource.\npublic class SmbStreamingInboundChannelAdapterSpec extends org.springframework.integration.file.dsl.RemoteFileStreamingInboundChannelAdapterSpec<jcifs.smb.SmbFile,SmbStreamingInboundChannelAdapterSpec,SmbStreamingMessageSource>;\n", "des": "Provides SMB Components for the Java DSL."}
{"index": 1247, "repo": "spring-integration-smb-6.1.2", "code": "package filters\n\n// Implementation of AbstractPersistentAcceptOnceFileListFilter for SMB.\npublic class SmbPersistentAcceptOnceFileListFilter extends org.springframework.integration.file.filters.AbstractPersistentAcceptOnceFileListFilter<jcifs.smb.SmbFile>;\n// Implementation of AbstractRegexPatternFileListFilter for SMB.\npublic class SmbRegexPatternFileListFilter extends org.springframework.integration.file.filters.AbstractRegexPatternFileListFilter<jcifs.smb.SmbFile>;\n// Implementation of AbstractSimplePatternFileListFilter for SMB.\npublic class SmbSimplePatternFileListFilter extends org.springframework.integration.file.filters.AbstractSimplePatternFileListFilter<jcifs.smb.SmbFile>;\n// Implementation of AbstractMarkerFilePresentFileListFilter for SMB.\npublic class SmbSystemMarkerFilePresentFileListFilter extends org.springframework.integration.file.filters.AbstractMarkerFilePresentFileListFilter<jcifs.smb.SmbFile>;\n", "des": "SMB Namespace support classes."}
{"index": 1248, "repo": "spring-integration-smb-6.1.2", "code": "package inbound\n\n// An implementation of AbstractInboundFileSynchronizer for SMB.\npublic class SmbInboundFileSynchronizer extends org.springframework.integration.file.remote.synchronizer.AbstractInboundFileSynchronizer<jcifs.smb.SmbFile>;\n// A MessageSource implementation for SMB.\npublic class SmbInboundFileSynchronizingMessageSource extends org.springframework.integration.file.remote.synchronizer.AbstractInboundFileSynchronizingMessageSource<jcifs.smb.SmbFile>;\n// Message source for streaming SMB remote file contents.\npublic class SmbStreamingMessageSource extends org.springframework.integration.file.remote.AbstractRemoteFileStreamingMessageSource<jcifs.smb.SmbFile>;\n", "des": "Inbound Channel Adapters implementations for SMB protocol."}
{"index": 1249, "repo": "spring-integration-smb-6.1.2", "code": "package outbound\n\n// The SMB specific FileTransferringMessageHandler extension.\npublic class SmbMessageHandler extends org.springframework.integration.file.remote.handler.FileTransferringMessageHandler<jcifs.smb.SmbFile>;\n// Outbound Gateway for performing remote file operations via SMB.\npublic class SmbOutboundGateway extends org.springframework.integration.file.remote.gateway.AbstractRemoteFileOutboundGateway<jcifs.smb.SmbFile>;\n", "des": "Outbound Channel Adapter implementations for SMB protocol."}
{"index": 1250, "repo": "spring-integration-smb-6.1.2", "code": "package session\n\n// Data holder class for a SMB share configuration.\npublic class SmbConfig extends Object;\n// An AbstractFileInfo implementation for SMB protocol.\npublic class SmbFileInfo extends org.springframework.integration.file.remote.AbstractFileInfo<jcifs.smb.SmbFile>;\n// The SMB-specific RemoteFileTemplate implementation.\npublic class SmbRemoteFileTemplate extends org.springframework.integration.file.remote.RemoteFileTemplate<jcifs.smb.SmbFile>;\n// Implementation of the Session interface for Server Message Block (SMB) also known as Common Internet File System (CIFS).\npublic class SmbSession extends Object implements org.springframework.integration.file.remote.session.Session<jcifs.smb.SmbFile>;\n// The SMB session factory.\npublic class SmbSessionFactory extends SmbConfig implements org.springframework.integration.file.remote.session.SessionFactory<jcifs.smb.SmbFile>;\n// The SmbFile extension to represent an SMB share directory.\npublic class SmbShare extends jcifs.smb.SmbFile;\n", "des": "SMB Remote Session abstraction support classes."}
{"index": 1251, "repo": "spring-core-6.0.11", "code": "package aot\n\n// Utility for determining if AOT-processed optimizations must be used rather than the regular runtime.\npublic abstract class AotDetector extends Object;\n", "des": "Core package for Spring AOT infrastructure."}
{"index": 1252, "repo": "spring-core-6.0.11", "code": "package generate\n\n// Determine the access control of a Member or type signature.\npublic final class AccessControl extends Object;\n// Access visibility types as determined by the modifiers on a Member or ResolvableType.\npublic static enum AccessControl.Visibility extends Enum<AccessControl.Visibility>;\n// Generate unique class names based on a target ClassName and a feature name.\npublic final class ClassNameGenerator extends Object;\n// Default GenerationContext implementation.\npublic class DefaultGenerationContext extends Object implements GenerationContext;\n// Default MethodReference implementation based on a MethodSpec.\npublic class DefaultMethodReference extends Object implements MethodReference;\n// GeneratedFiles implementation that stores generated files using a FileSystem.\npublic class FileSystemGeneratedFiles extends Object implements GeneratedFiles;\n// A single generated class.\npublic final class GeneratedClass extends Object;\n// A managed collection of generated classes.\npublic class GeneratedClasses extends Object;\n// Interface that can be used to add source, resource, or class files generated during ahead-of-time processing.\npublic interface GeneratedFiles;\n// The various kinds of generated files that are supported.\npublic static enum GeneratedFiles.Kind extends Enum<GeneratedFiles.Kind>;\n// A generated method.\npublic final class GeneratedMethod extends Object;\n// A managed collection of generated methods.\npublic class GeneratedMethods extends Object;\n// A TypeReference for a generated type.\npublic final class GeneratedTypeReference extends AbstractTypeReference;\n// Central interface used for code generation.\npublic interface GenerationContext;\n// GeneratedFiles implementation that keeps generated files in-memory.\npublic class InMemoryGeneratedFiles extends Object implements GeneratedFiles;\n// A reference to a method with convenient code generation for referencing, or invoking it.\npublic interface MethodReference;\n// Strategy for generating code for arguments based on their type.\npublic static interface MethodReference.ArgumentCodeGenerator;\n", "des": "Support classes for components that contribute generated code equivalent to a runtime behavior."}
{"index": 1253, "repo": "spring-core-6.0.11", "code": "package hint\n\n// Base TypeReference implementation that ensures consistent behaviour for equals(), hashCode(), and toString() based on the canonical name.\npublic abstract class AbstractTypeReference extends Object implements TypeReference;\n// Register the necessary reflection hints so that the specified type can be bound at runtime.\npublic class BindingReflectionHintsRegistrar extends Object;\n// Contract for runtime hints that only apply if the described condition is met.\npublic interface ConditionalHint;\n// A hint that describes the need for reflection on a Method or Constructor.\npublic final class ExecutableHint extends MemberHint;\n// Builder for ExecutableHint.\npublic static class ExecutableHint.Builder extends Object;\n// Represent the need of reflection for a given Executable.\npublic enum ExecutableMode extends Enum<ExecutableMode>;\n// A hint that describes the need for reflection on a Field.\npublic final class FieldHint extends MemberHint;\n// A hint that describes the need for Java serialization at runtime.\npublic class JavaSerializationHint extends Object implements ConditionalHint;\n// Builder for JavaSerializationHint.\npublic static class JavaSerializationHint.Builder extends Object;\n// A hint that describes the need for a JDK interface-based Proxy.\npublic final class JdkProxyHint extends Object implements ConditionalHint;\n// Builder for JdkProxyHint.\npublic static class JdkProxyHint.Builder extends Object;\n// Predefined Member categories.\npublic enum MemberCategory extends Enum<MemberCategory>;\n// Base hint that describes the need for reflection on a Member.\npublic abstract class MemberHint extends Object;\n// Gather the need for using proxies at runtime.\npublic class ProxyHints extends Object;\n// Gather the need for reflection at runtime.\npublic class ReflectionHints extends Object;\n// A hint that describes the need to access a ResourceBundle.\npublic final class ResourceBundleHint extends Object implements ConditionalHint;\n// Builder for ResourceBundleHint.\npublic static class ResourceBundleHint.Builder extends Object;\n// Gather the need for resources available at runtime.\npublic class ResourceHints extends Object;\n// A hint that describes resources that should be made available at runtime.\npublic final class ResourcePatternHint extends Object implements ConditionalHint;\n// A collection of ResourcePatternHint describing whether resources should be made available at runtime using a matching algorithm based on include/exclude patterns.\npublic final class ResourcePatternHints extends Object;\n// Builder for ResourcePatternHints.\npublic static class ResourcePatternHints.Builder extends Object;\n", "des": "Support for registering the need for reflection, resources, java serialization and proxies at runtime."}
{"index": 1254, "repo": "spring-core-6.0.11", "code": "package annotation\n\n// Indicate that the annotated element requires reflection.\n@Target({ANNOTATION_TYPE,TYPE,CONSTRUCTOR,FIELD,METHOD}) @Retention(RUNTIME) @Documented public @interface Reflective;\n// Process an AnnotatedElement and register the necessary reflection hints for it.\npublic interface ReflectiveProcessor;\n// Process @Reflective annotated elements.\npublic class ReflectiveRuntimeHintsRegistrar extends Object;\n// Indicates that the classes specified in the annotation attributes require some reflection hints for binding or reflection-based serialization purposes.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Reflective(RegisterReflectionForBindingProcessor.class) public @interface RegisterReflectionForBinding;\n// A ReflectiveProcessor implementation that registers reflection hints for data binding purpose (class, constructors, fields, properties, record components, including types transitively used on properties and record components).\npublic class RegisterReflectionForBindingProcessor extends Object implements ReflectiveProcessor;\n// A simple ReflectiveProcessor implementation that registers only a reflection hint for the annotated type.\npublic class SimpleReflectiveProcessor extends Object implements ReflectiveProcessor;\n", "des": "Annotation support for runtime hints."}
{"index": 1255, "repo": "spring-core-6.0.11", "code": "package predicate\n\n// Generator of ProxyHints predicates, testing whether the given hints match the expected behavior for proxies.\npublic class ProxyHintsPredicates extends Object;\n// Generator of ReflectionHints predicates, testing whether the given hints match the expected behavior for reflection.\npublic class ReflectionHintsPredicates extends Object;\n// \npublic static class ReflectionHintsPredicates.ConstructorHintPredicate extends ReflectionHintsPredicates.ExecutableHintPredicate<Constructor<?>>;\n// \npublic abstract static class ReflectionHintsPredicates.ExecutableHintPredicate<T extends Executable> extends Object implements Predicate<RuntimeHints>;\n// \npublic static class ReflectionHintsPredicates.FieldHintPredicate extends Object implements Predicate<RuntimeHints>;\n// \npublic static class ReflectionHintsPredicates.MethodHintPredicate extends ReflectionHintsPredicates.ExecutableHintPredicate<Method>;\n// \npublic static class ReflectionHintsPredicates.TypeHintPredicate extends Object implements Predicate<RuntimeHints>;\n// Generator of ResourceHints predicates, testing whether the given hints match the expected behavior for resources.\npublic class ResourceHintsPredicates extends Object;\n// Static generator of predicates that test whether the given RuntimeHints instance matches the expected behavior for reflection, resource, serialization, or proxy generation.\npublic abstract class RuntimeHintsPredicates extends Object;\n// Generator of SerializationHints predicates, testing whether the given hints match the expected behavior for serialization.\npublic class SerializationHintsPredicates extends Object;\n", "des": "Predicate support for runtime hints."}
{"index": 1256, "repo": "spring-core-6.0.11", "code": "package support\n\n// Utilities for core hint inference on Spring-managed classes, specifically for proxy types such as interface-based JDK proxies and CGLIB-generated subclasses which need proxy/reflection hints.\npublic abstract class ClassHintUtils extends Object;\n// Register the necessary resource hints for loading files from the classpath.\npublic class FilePatternResourceHintsRegistrar extends Object;\n", "des": "Convenience classes for using runtime hints."}
{"index": 1257, "repo": "spring-core-6.0.11", "code": "package nativex\n\n// A NativeConfigurationWriter implementation that writes the configuration to disk.\npublic class FileNativeConfigurationWriter extends NativeConfigurationWriter;\n// Write RuntimeHints as GraalVM native configuration.\npublic abstract class NativeConfigurationWriter extends Object;\n", "des": "Support for generating GraalVM native configuration from runtime hints."}
{"index": 1258, "repo": "spring-core-6.0.11", "code": "package asm\n\n// A visitor to visit a Java annotation.\npublic abstract class AnnotationVisitor extends Object;\n// A non standard class, field, method or Code attribute, as defined in the Java Virtual Machine Specification (JVMS).\npublic class Attribute extends Object;\n// A dynamically extensible vector of bytes.\npublic class ByteVector extends Object;\n// A parser to make a ClassVisitor visit a ClassFile structure, as defined in the Java Virtual Machine Specification (JVMS).\npublic class ClassReader extends Object;\n// Exception thrown when the constant pool of a class produced by a ClassWriter is too large.\npublic final class ClassTooLargeException extends IndexOutOfBoundsException;\n// A visitor to visit a Java class.\npublic abstract class ClassVisitor extends Object;\n// A ClassVisitor that generates a corresponding ClassFile structure, as defined in the Java Virtual Machine Specification (JVMS).\npublic class ClassWriter extends ClassVisitor;\n// A constant whose value is computed at runtime, with a bootstrap method.\npublic final class ConstantDynamic extends Object;\n// A visitor to visit a Java field.\npublic abstract class FieldVisitor extends Object;\n// A reference to a field or a method.\npublic final class Handle extends Object;\n// A position in the bytecode of a method.\npublic class Label extends Object;\n// Exception thrown when the Code attribute of a method produced by a ClassWriter is too large.\npublic final class MethodTooLargeException extends IndexOutOfBoundsException;\n// A visitor to visit a Java method.\npublic abstract class MethodVisitor extends Object;\n// A visitor to visit a Java module.\npublic abstract class ModuleVisitor extends Object;\n// The JVM opcodes, access flags and array type codes.\npublic interface Opcodes;\n// A visitor to visit a record component.\npublic abstract class RecordComponentVisitor extends Object;\n// Utility class exposing constants related to Spring's internal repackaging of the ASM bytecode library: currently based on ASM 9.x plus minor patches.\npublic final class SpringAsmInfo extends Object;\n// A Java field or method type.\npublic final class Type extends Object;\n// The path to a type argument, wildcard bound, array element type, or static inner type within an enclosing type.\npublic final class TypePath extends Object;\n// A reference to a type appearing in a class, field or method declaration, or on an instruction.\npublic class TypeReference extends Object;\n", "des": "Spring's repackaging of ASM 9.x (with Spring-specific patches; for internal use only)."}
{"index": 1259, "repo": "spring-core-6.0.11", "code": "package cglib\n\n// Empty class used to ensure that the org.springframework.cglib package is processed during javadoc generation.\npublic final class SpringCglibInfo extends Object;\n", "des": "Spring's repackaging of CGLIB 3.3 (with Spring-specific patches; for internal use only)."}
{"index": 1260, "repo": "spring-core-6.0.11", "code": "package beans\n\n// \npublic abstract class BeanCopier extends Object;\n// \npublic static class BeanCopier.Generator extends AbstractClassGenerator;\n// \npublic class BeanGenerator extends AbstractClassGenerator;\n// A Map-based view of a JavaBean.\npublic abstract class BeanMap extends Object implements Map;\n// \npublic static class BeanMap.Generator extends AbstractClassGenerator;\n// \npublic abstract class BulkBean extends Object;\n// \npublic static class BulkBean.Generator extends AbstractClassGenerator;\n// \npublic class BulkBeanException extends RuntimeException;\n// \npublic class FixedKeySet extends AbstractSet;\n// \npublic class ImmutableBean extends Object;\n// \npublic static class ImmutableBean.Generator extends AbstractClassGenerator;\n", "des": "Spring's repackaging of the CGLIB beans package (for internal use only)."}
{"index": 1261, "repo": "spring-core-6.0.11", "code": "package core\n\n// Abstract class for all code-generating CGLIB utilities.\npublic abstract class AbstractClassGenerator<T> extends Object implements ClassGenerator;\n// \nprotected static class AbstractClassGenerator.ClassLoaderData extends Object;\n// \nprotected static class AbstractClassGenerator.Source extends Object;\n// \npublic class Block extends Object;\n// \npublic class ClassEmitter extends ClassTransformer;\n// \npublic class ClassesKey extends Object;\n// \npublic interface ClassGenerator;\n// \npublic abstract class ClassInfo extends Object;\n// CGLIB GeneratorStrategy variant which exposes the application ClassLoader as current thread context ClassLoader for the time of class generation.\npublic class ClassLoaderAwareGeneratorStrategy extends DefaultGeneratorStrategy;\n// \npublic class ClassNameReader extends Object;\n// \npublic abstract class ClassTransformer extends ClassVisitor;\n// \npublic class CodeEmitter extends LocalVariablesSorter;\n// \npublic class CodeGenerationException extends RuntimeException;\n// \npublic class CollectionUtils extends Object;\n// \npublic interface Constants extends Opcodes;\n// \npublic interface Converter;\n// Customizes key types for KeyFactory when building equals, hashCode, and toString.\npublic interface Customizer extends KeyFactoryCustomizer;\n// \npublic class DebuggingClassWriter extends ClassVisitor;\n// \npublic class DefaultGeneratorStrategy extends Object implements GeneratorStrategy;\n// The default policy used by AbstractClassGenerator.\npublic class DefaultNamingPolicy extends Object implements NamingPolicy;\n// \npublic class DuplicatesPredicate extends Object implements Predicate;\n// \npublic class EmitUtils extends Object;\n// \npublic static class EmitUtils.ArrayDelimiters extends Object;\n// Customizes key types for KeyFactory right in constructor.\npublic interface FieldTypeCustomizer extends KeyFactoryCustomizer;\n// The GeneratorStrategy is responsible for taking a ClassGenerator and producing a byte array containing the data for the generated Class.\npublic interface GeneratorStrategy;\n// \npublic interface HashCodeCustomizer extends KeyFactoryCustomizer;\n// Generates classes to handle multi-valued keys, for use in things such as Maps and Sets.\npublic abstract class KeyFactory extends Object;\n// \npublic static class KeyFactory.Generator extends AbstractClassGenerator;\n// Marker interface for customizers of KeyFactory\npublic interface KeyFactoryCustomizer;\n// \npublic class Local extends Object;\n", "des": "Spring's repackaging of the CGLIB core package (for internal use only)."}
{"index": 1262, "repo": "spring-core-6.0.11", "code": "package internal\n\n// \npublic class CustomizerRegistry extends Object;\n// \npublic interface Function<K,V>;\n// \npublic class LoadingCache<K,KK,V> extends Object;\n", "des": "Spring's repackaging of the CGLIB core internal package (for internal use only)."}
{"index": 1263, "repo": "spring-core-6.0.11", "code": "package proxy\n\n// All callback interfaces used by Enhancer extend this interface.\npublic interface Callback;\n// Map methods of subclasses generated by Enhancer to a particular callback.\npublic interface CallbackFilter;\n// \npublic abstract class CallbackHelper extends Object implements CallbackFilter;\n// Dispatching Enhancer callback.\npublic interface Dispatcher extends Callback;\n// Generates dynamic subclasses to enable method interception.\npublic class Enhancer extends AbstractClassGenerator;\n// All enhanced instances returned by the Enhancer class implement this interface.\npublic interface Factory;\n// Enhancer callback that simply returns the value to return from the proxied method.\npublic interface FixedValue extends Callback;\n// Generates new interfaces at runtime.\npublic class InterfaceMaker extends AbstractClassGenerator;\n// InvocationHandler replacement (unavailable under JDK 1.2).\npublic interface InvocationHandler extends Callback;\n// Lazy-loading Enhancer callback.\npublic interface LazyLoader extends Callback;\n// General-purpose Enhancer callback which provides for \"around advice\".\npublic interface MethodInterceptor extends Callback;\n// Classes generated by Enhancer pass this object to the registered MethodInterceptor objects when an intercepted method is invoked.\npublic class MethodProxy extends Object;\n// Mixin allows multiple objects to be combined into a single larger object.\npublic abstract class Mixin extends Object;\n// \npublic static class Mixin.Generator extends AbstractClassGenerator;\n// Methods using this Enhancer callback will delegate directly to the default (super) implementation in the base class.\npublic interface NoOp extends Callback;\n// This class is meant to be used as replacement for java.lang.reflect.Proxy under JDK 1.2.\npublic class Proxy extends Object implements Serializable;\n// Dispatching Enhancer callback.\npublic interface ProxyRefDispatcher extends Callback;\n// Used by Proxy as a replacement for java.lang.reflect.UndeclaredThrowableException.\npublic class UndeclaredThrowableException extends CodeGenerationException;\n", "des": "Spring's repackaging of the CGLIB proxy package (for internal use only)."}
{"index": 1264, "repo": "spring-core-6.0.11", "code": "package reflect\n\n// \npublic abstract class ConstructorDelegate extends Object;\n// \npublic static class ConstructorDelegate.Generator extends AbstractClassGenerator;\n// \npublic abstract class FastClass extends Object;\n// \npublic static class FastClass.Generator extends AbstractClassGenerator;\n// \npublic class FastConstructor extends FastMember;\n// \npublic abstract class FastMember extends Object;\n// \npublic class FastMethod extends FastMember;\n// DOCUMENTATION FROM APACHE AVALON DELEGATE CLASS\npublic abstract class MethodDelegate extends Object;\n// \npublic static class MethodDelegate.Generator extends AbstractClassGenerator;\n// \npublic abstract class MulticastDelegate extends Object implements Cloneable;\n// \npublic static class MulticastDelegate.Generator extends AbstractClassGenerator;\n", "des": "Spring's repackaging of the CGLIB reflect package (for internal use only)."}
{"index": 1265, "repo": "spring-core-6.0.11", "code": "package transform\n\n// \npublic abstract class AbstractClassFilterTransformer extends AbstractClassTransformer;\n// \npublic abstract class AbstractClassLoader extends ClassLoader;\n// \npublic abstract class AbstractClassTransformer extends ClassTransformer;\n// \npublic class AnnotationVisitorTee extends AnnotationVisitor;\n// \npublic abstract class ClassEmitterTransformer extends ClassEmitter;\n// \npublic interface ClassFilter;\n// \npublic class ClassFilterTransformer extends AbstractClassFilterTransformer;\n// \npublic class ClassReaderGenerator extends Object implements ClassGenerator;\n// \npublic class ClassTransformerChain extends AbstractClassTransformer;\n// \npublic interface ClassTransformerFactory;\n// \npublic class ClassTransformerTee extends ClassTransformer;\n// \npublic class ClassVisitorTee extends ClassVisitor;\n// \npublic class FieldVisitorTee extends FieldVisitor;\n// \npublic interface MethodFilter;\n// \npublic class MethodFilterTransformer extends AbstractClassTransformer;\n// \npublic class MethodVisitorTee extends MethodVisitor;\n// \npublic class TransformingClassGenerator extends Object implements ClassGenerator;\n// \npublic class TransformingClassLoader extends AbstractClassLoader;\n", "des": "Spring's repackaging of the CGLIB transform package (for internal use only)."}
{"index": 1266, "repo": "spring-core-6.0.11", "code": "package impl\n\n// \npublic class AbstractInterceptFieldCallback extends Object implements InterceptFieldCallback;\n// \npublic class AccessFieldTransformer extends ClassEmitterTransformer;\n// \npublic static interface AccessFieldTransformer.Callback;\n// \npublic class AddDelegateTransformer extends ClassEmitterTransformer;\n// \npublic class AddInitTransformer extends ClassEmitterTransformer;\n// \npublic class AddPropertyTransformer extends ClassEmitterTransformer;\n// \npublic class AddStaticInitTransformer extends ClassEmitterTransformer;\n// \npublic interface FieldProvider;\n// \npublic class FieldProviderTransformer extends ClassEmitterTransformer;\n// \npublic interface InterceptFieldCallback;\n// \npublic interface InterceptFieldEnabled;\n// \npublic interface InterceptFieldFilter;\n// \npublic class InterceptFieldTransformer extends ClassEmitterTransformer;\n// A GeneratorStrategy suitable for use with Enhancer which causes all undeclared exceptions thrown from within a proxied method to be wrapped in an alternative exception of your choice.\npublic class UndeclaredThrowableStrategy extends DefaultGeneratorStrategy;\n// \npublic class UndeclaredThrowableTransformer extends ClassEmitterTransformer;\n", "des": "Spring's repackaging of the CGLIB transform impl package (for internal use only)."}
{"index": 1267, "repo": "spring-core-6.0.11", "code": "package util\n\n// For the efficient sorting of multiple arrays in parallel.\npublic abstract class ParallelSorter extends Object;\n// \npublic static class ParallelSorter.Generator extends AbstractClassGenerator;\n// This class implements a simple String → int mapping for a fixed set of keys.\npublic abstract class StringSwitcher extends Object;\n// \npublic static class StringSwitcher.Generator extends AbstractClassGenerator;\n", "des": "Spring's repackaging of the CGLIB util package (for internal use only)."}
{"index": 1268, "repo": "spring-core-6.0.11", "code": "package core\n\n// Common interface for managing aliases.\npublic interface AliasRegistry;\n// Interface defining a generic contract for attaching and accessing metadata to/from arbitrary objects.\npublic interface AttributeAccessor;\n// Support class for AttributeAccessors, providing a base implementation of all methods.\npublic abstract class AttributeAccessorSupport extends Object implements AttributeAccessor, Serializable;\n// Helper for resolving synthetic bridge Methods to the Method being bridged.\npublic final class BridgeMethodResolver extends Object;\n// Factory for collections that is aware of common Java and Spring collection types.\npublic final class CollectionFactory extends Object;\n// Special ObjectInputStream subclass that resolves class names against a specific ClassLoader.\npublic class ConfigurableObjectInputStream extends ObjectInputStream;\n// This class can be used to parse other classes containing constant definitions in public static final members.\npublic class Constants extends Object;\n// Exception thrown when the Constants class is asked for an invalid constant name.\npublic static class Constants.ConstantException extends IllegalArgumentException;\n// Provides methods to support various naming and other conventions used throughout the framework.\npublic final class Conventions extends Object;\n// Utilities for working with Kotlin Coroutines.\npublic abstract class CoroutinesUtils extends Object;\n// Base class for decorating ClassLoaders such as OverridingClassLoader and org.springframework.instrument.classloading.ShadowingClassLoader, providing common handling of excluded packages and classes.\npublic abstract class DecoratingClassLoader extends ClassLoader;\n// Interface to be implemented by decorating proxies, in particular Spring AOP proxies but potentially also custom proxies with decorator semantics.\npublic interface DecoratingProxy;\n// Default implementation of the ParameterNameDiscoverer strategy interface, delegating to the Java 8 standard reflection mechanism, with a deprecated fallback to LocalVariableTableParameterNameDiscoverer.\npublic class DefaultParameterNameDiscoverer extends PrioritizedParameterNameDiscoverer;\n// Comparator capable of sorting exceptions based on their depth from the thrown exception type.\npublic class ExceptionDepthComparator extends Object implements Comparator<Class<? extends Throwable>>;\n// Helper class for resolving generic types against type variables.\npublic final class GenericTypeResolver extends Object;\n// Interface to be implemented by transparent resource proxies that need to be considered as equal to the underlying resource, for example for consistent lookup key comparisons.\npublic interface InfrastructureProxy;\n", "des": "Provides basic classes for exception handling and version detection, and other core helpers that are not specific to any part of the framework."}
{"index": 1269, "repo": "spring-core-6.0.11", "code": "package annotation\n\n// @AliasFor is an annotation that is used to declare aliases for annotation attributes.\n@Retention(RUNTIME) @Target(METHOD) @Documented public @interface AliasFor;\n// General utility methods for finding annotations, meta-annotations, and repeatable annotations on AnnotatedElements.\npublic abstract class AnnotatedElementUtils extends Object;\n// LinkedHashMap subclass representing annotation attribute key-value pairs as read by AnnotationUtils, AnnotatedElementUtils, and Spring's reflection- and ASM-based AnnotationMetadata implementations.\npublic class AnnotationAttributes extends LinkedHashMap<String,Object>;\n// AnnotationAwareOrderComparator is an extension of OrderComparator that supports Spring's Ordered interface as well as the @Order and @Priority annotations, with an order value provided by an Ordered instance overriding a statically defined annotation value (if any).\npublic class AnnotationAwareOrderComparator extends OrderComparator;\n// Thrown by AnnotationUtils and synthesized annotations if an annotation is improperly configured.\npublic class AnnotationConfigurationException extends NestedRuntimeException;\n// Callback interface that can be used to filter specific annotation types.\n@FunctionalInterface public interface AnnotationFilter;\n// General utility methods for working with annotations, handling meta-annotations, bridge methods (which the compiler generates for generic declarations) as well as super methods (for optional annotation inheritance).\npublic abstract class AnnotationUtils extends Object;\n// A single merged annotation returned from a MergedAnnotations collection.\npublic interface MergedAnnotation<A extends Annotation>;\n// Adaptations that can be applied to attribute values when creating Maps or AnnotationAttributes.\npublic static enum MergedAnnotation.Adapt extends Enum<MergedAnnotation.Adapt>;\n// Collector implementations that provide various reduction operations for MergedAnnotation instances.\npublic abstract class MergedAnnotationCollectors extends Object;\n// Predicate implementations that provide various test operations for MergedAnnotations.\npublic abstract class MergedAnnotationPredicates extends Object;\n// Provides access to a collection of merged annotations, usually obtained from a source such as a Class or Method.\npublic interface MergedAnnotations extends Iterable<MergedAnnotation<Annotation>>;\n// Fluent API for configuring the search algorithm used in the MergedAnnotations model and performing a search.\npublic static final class MergedAnnotations.Search extends Object;\n", "des": "Core support package for annotations, meta-annotations, and merged annotations with attribute overrides."}
{"index": 1270, "repo": "spring-core-6.0.11", "code": "package codec\n\n// Abstract base class for Decoder implementations that can decode a DataBuffer directly to the target element type.\npublic abstract class AbstractDataBufferDecoder<T> extends AbstractDecoder<T>;\n// Abstract base class for Decoder implementations.\npublic abstract class AbstractDecoder<T> extends Object implements Decoder<T>;\n// Abstract base class for Encoder implementations.\npublic abstract class AbstractEncoder<T> extends Object implements Encoder<T>;\n// Abstract base class for Encoder classes that can only deal with a single value.\npublic abstract class AbstractSingleValueEncoder<T> extends AbstractEncoder<T>;\n// Decoder for byte arrays.\npublic class ByteArrayDecoder extends AbstractDataBufferDecoder<byte[]>;\n// Encoder for byte arrays.\npublic class ByteArrayEncoder extends AbstractEncoder<byte[]>;\n// Decoder for ByteBuffers.\npublic class ByteBufferDecoder extends AbstractDataBufferDecoder<ByteBuffer>;\n// Encoder for ByteBuffers.\npublic class ByteBufferEncoder extends AbstractEncoder<ByteBuffer>;\n// Encode from a CharSequence stream to a bytes stream.\npublic final class CharSequenceEncoder extends AbstractEncoder<CharSequence>;\n// General error that indicates a problem while encoding and decoding to and from an Object stream.\npublic class CodecException extends NestedRuntimeException;\n// Simple pass-through decoder for DataBuffers.\npublic class DataBufferDecoder extends AbstractDataBufferDecoder<DataBuffer>;\n// Simple pass-through encoder for DataBuffers.\npublic class DataBufferEncoder extends AbstractEncoder<DataBuffer>;\n// Strategy for decoding a DataBuffer input stream into an output stream of elements of type <T>.\npublic interface Decoder<T>;\n// Indicates an issue with decoding the input stream with a focus on content related issues such as a parse failure.\npublic class DecodingException extends CodecException;\n// Strategy to encode a stream of Objects of type <T> into an output stream of bytes.\npublic interface Encoder<T>;\n// Indicates an issue with encoding the input Object stream with a focus on not being able to encode Objects.\npublic class EncodingException extends CodecException;\n// Constants and convenience methods for working with hints.\npublic abstract class Hints extends Object;\n// Decoder for Buffers.\npublic class Netty5BufferDecoder extends AbstractDataBufferDecoder<io.netty5.buffer.Buffer>;\n", "des": "Encoder and Decoder abstractions to convert between a reactive stream of bytes and Java objects."}
{"index": 1271, "repo": "spring-core-6.0.11", "code": "package convert\n\n// Base class for exceptions thrown by the conversion system.\npublic abstract class ConversionException extends NestedRuntimeException;\n// Exception to be thrown when an actual type conversion attempt fails.\npublic class ConversionFailedException extends ConversionException;\n// A service interface for type conversion.\npublic interface ConversionService;\n// Exception to be thrown when a suitable converter could not be found in a given conversion service.\npublic class ConverterNotFoundException extends ConversionException;\n// A description of a JavaBeans Property that allows us to avoid a dependency on java.beans.PropertyDescriptor.\npublic final class Property extends Object;\n// Contextual descriptor about a type to convert from or to.\npublic class TypeDescriptor extends Object implements Serializable;\n", "des": "Type conversion system API."}
{"index": 1272, "repo": "spring-core-6.0.11", "code": "package converter\n\n// Allows a Converter, GenericConverter or ConverterFactory to conditionally execute based on attributes of the source and target TypeDescriptor.\npublic interface ConditionalConverter;\n// A GenericConverter that may conditionally execute based on attributes of the source and target TypeDescriptor.\npublic interface ConditionalGenericConverter extends GenericConverter, ConditionalConverter;\n// A converter converts a source object of type S to a target of type T.\n@FunctionalInterface public interface Converter<S,T>;\n// A factory for \"ranged\" converters that can convert objects from S to subtypes of R.\npublic interface ConverterFactory<S,R>;\n// For registering converters with a type conversion system.\npublic interface ConverterRegistry;\n// A Comparator that converts values before they are compared.\npublic class ConvertingComparator<S,T> extends Object implements Comparator<S>;\n// Generic converter interface for converting between two or more types.\npublic interface GenericConverter;\n// Holder for a source-to-target class pair.\npublic static final class GenericConverter.ConvertiblePair extends Object;\n", "des": "SPI to implement Converters for the type conversion system."}
{"index": 1273, "repo": "spring-core-6.0.11", "code": "package support\n\n// Configuration interface to be implemented by most if not all ConversionService types.\npublic interface ConfigurableConversionService extends ConversionService, ConverterRegistry;\n// A factory for common ConversionService configurations.\npublic final class ConversionServiceFactory extends Object;\n// Adapter that exposes a PropertyEditor for any given ConversionService and specific target type.\npublic class ConvertingPropertyEditorAdapter extends PropertyEditorSupport;\n// A specialization of GenericConversionService configured by default with converters appropriate for most environments.\npublic class DefaultConversionService extends GenericConversionService;\n// Base ConversionService implementation suitable for use in most environments.\npublic class GenericConversionService extends Object implements ConfigurableConversionService;\n", "des": "Default implementation of the type conversion system."}
{"index": 1274, "repo": "spring-core-6.0.11", "code": "package env\n\n// Abstract base class for Environment implementations.\npublic abstract class AbstractEnvironment extends Object implements ConfigurableEnvironment;\n// Abstract base class for resolving properties against any underlying source.\npublic abstract class AbstractPropertyResolver extends Object implements ConfigurablePropertyResolver;\n// Abstract base class for PropertySource implementations backed by command line arguments.\npublic abstract class CommandLinePropertySource<T> extends EnumerablePropertySource<T>;\n// Composite PropertySource implementation that iterates over a set of PropertySource instances.\npublic class CompositePropertySource extends EnumerablePropertySource<Object>;\n// Configuration interface to be implemented by most if not all Environment types.\npublic interface ConfigurableEnvironment extends Environment, ConfigurablePropertyResolver;\n// Configuration interface to be implemented by most if not all PropertyResolver types.\npublic interface ConfigurablePropertyResolver extends PropertyResolver;\n// A PropertySource implementation capable of interrogating its underlying source object to enumerate all possible property name/value pairs.\npublic abstract class EnumerablePropertySource<T> extends PropertySource<T>;\n// Interface representing the environment in which the current application is running.\npublic interface Environment extends PropertyResolver;\n// Interface indicating a component that contains and exposes an Environment reference.\npublic interface EnvironmentCapable;\n// CommandLinePropertySource implementation backed by a JOpt OptionSet.\npublic class JOptCommandLinePropertySource extends CommandLinePropertySource<joptsimple.OptionSet>;\n// PropertySource that reads keys and values from a Map object.\npublic class MapPropertySource extends EnumerablePropertySource<Map<String,Object>>;\n// Exception thrown when required properties are not found.\npublic class MissingRequiredPropertiesException extends IllegalStateException;\n// The default implementation of the PropertySources interface.\npublic class MutablePropertySources extends Object implements PropertySources;\n// Profile predicate that may be accepted by an Environment.\n@FunctionalInterface public interface Profiles;\n// PropertySource implementation that extracts properties from a Properties object.\npublic class PropertiesPropertySource extends MapPropertySource;\n// Interface for resolving properties against any underlying source.\npublic interface PropertyResolver;\n// Abstract base class representing a source of name/value property pairs.\npublic abstract class PropertySource<T> extends Object;\n// PropertySource to be used as a placeholder in cases where an actual property source cannot be eagerly initialized at application context creation time.\npublic static class PropertySource.StubPropertySource extends PropertySource<Object>;\n", "des": "Spring's environment abstraction consisting of bean definition profile and hierarchical property source support."}
{"index": 1275, "repo": "spring-core-6.0.11", "code": "package io\n\n// Abstract base class for resources which resolve URLs into File references, such as UrlResource or ClassPathResource.\npublic abstract class AbstractFileResolvingResource extends AbstractResource;\n// Convenience base class for Resource implementations, pre-implementing typical behavior.\npublic abstract class AbstractResource extends Object implements Resource;\n// Resource implementation for a given byte array.\npublic class ByteArrayResource extends AbstractResource;\n// Resource implementation for class path resources.\npublic class ClassPathResource extends AbstractFileResolvingResource;\n// ResourceLoader implementation that interprets plain resource paths as relative to a given java.lang.Class.\npublic class ClassRelativeResourceLoader extends DefaultResourceLoader;\n// Extended interface for a resource that is loaded from an enclosing 'context', e.g.\npublic interface ContextResource extends Resource;\n// Default implementation of the ResourceLoader interface.\npublic class DefaultResourceLoader extends Object implements ResourceLoader;\n// ClassPathResource that explicitly expresses a context-relative path through implementing the ContextResource interface.\nprotected static class DefaultResourceLoader.ClassPathContextResource extends ClassPathResource implements ContextResource;\n// Simple Resource implementation that holds a resource description but does not point to an actually readable resource.\npublic class DescriptiveResource extends AbstractResource;\n// Resource implementation for java.io.File and java.nio.file.Path handles with a file system target.\npublic class FileSystemResource extends AbstractResource implements WritableResource;\n// ResourceLoader implementation that resolves plain paths as file system resources rather than as class path resources (the latter is DefaultResourceLoader's default strategy).\npublic class FileSystemResourceLoader extends DefaultResourceLoader;\n// Subclass of UrlResource which assumes file resolution, to the degree of implementing the WritableResource interface for it.\npublic class FileUrlResource extends UrlResource implements WritableResource;\n// Resource implementation for a given InputStream.\npublic class InputStreamResource extends AbstractResource;\n// Simple interface for objects that are sources for an InputStream.\npublic interface InputStreamSource;\n// Resource implementation for Path handles, performing all operations and transformations via the Path API.\npublic class PathResource extends AbstractResource implements WritableResource;\n// A resolution strategy for protocol-specific resource handles.\n@FunctionalInterface public interface ProtocolResolver;\n// Interface for a resource descriptor that abstracts from the actual type of underlying resource, such as a file or class path resource.\npublic interface Resource extends InputStreamSource;\n", "des": "Generic abstraction for (file-based) resources, used throughout the framework."}
{"index": 1276, "repo": "spring-core-6.0.11", "code": "package buffer\n\n// Extension of DataBuffer that allows for buffers that can be used in a try-with-resources statement.\npublic interface CloseableDataBuffer extends DataBuffer, AutoCloseable;\n// Basic abstraction over byte buffers.\npublic interface DataBuffer;\n// A dedicated iterator type that ensures the lifecycle of iterated ByteBuffer elements.\npublic static interface DataBuffer.ByteBufferIterator extends Iterator<ByteBuffer>, Closeable;\n// A factory for DataBuffers, allowing for allocation and wrapping of data buffers.\npublic interface DataBufferFactory;\n// Exception that indicates the cumulative number of bytes consumed from a stream of DataBuffer's exceeded some pre-configured limit.\npublic class DataBufferLimitException extends IllegalStateException;\n// Utility class for working with DataBuffers.\npublic abstract class DataBufferUtils extends Object;\n// Contract to find delimiter(s) against one or more data buffers that can be passed one at a time to the DataBufferUtils.Matcher.match(DataBuffer) method.\npublic static interface DataBufferUtils.Matcher;\n// Provides a convenient implementation of the DataBuffer interface that can be overridden to adapt the delegate.\npublic class DataBufferWrapper extends Object implements DataBuffer;\n// Default implementation of the DataBuffer interface that uses a ByteBuffer internally.\npublic class DefaultDataBuffer extends Object implements DataBuffer;\n// Default implementation of the DataBufferFactory interface.\npublic class DefaultDataBufferFactory extends Object implements DataBufferFactory;\n// Custom List to collect data buffers with and enforce a limit on the total number of bytes buffered.\npublic class LimitedDataBufferList extends ArrayList<DataBuffer>;\n// Implementation of the DataBuffer interface that wraps a Netty 5 Buffer.\npublic final class Netty5DataBuffer extends Object implements CloseableDataBuffer, TouchableDataBuffer;\n// Implementation of the DataBufferFactory interface based on a Netty 5 BufferAllocator.\npublic class Netty5DataBufferFactory extends Object implements DataBufferFactory;\n// Implementation of the DataBuffer interface that wraps a Netty 4 ByteBuf.\npublic class NettyDataBuffer extends Object implements PooledDataBuffer;\n// Implementation of the DataBufferFactory interface based on a Netty 4 ByteBufAllocator.\npublic class NettyDataBufferFactory extends Object implements DataBufferFactory;\n// Extension of DataBuffer that allows for buffers that share a memory pool.\npublic interface PooledDataBuffer extends TouchableDataBuffer;\n", "des": "Generic abstraction for working with byte buffer implementations."}
{"index": 1277, "repo": "spring-core-6.0.11", "code": "package support\n\n// The default implementation for PropertySourceFactory, wrapping every resource in a ResourcePropertySource.\npublic class DefaultPropertySourceFactory extends Object implements PropertySourceFactory;\n// Holder that combines a Resource descriptor with a specific encoding or Charset to be used for reading from the resource.\npublic class EncodedResource extends Object implements InputStreamSource;\n// Helper class for loading a localized resource, specified through name, extension and current locale.\npublic class LocalizedResourceHelper extends Object;\n// A ResourcePatternResolver implementation that is able to resolve a specified resource location path into one or more matching Resources.\npublic class PathMatchingResourcePatternResolver extends Object implements ResourcePatternResolver;\n// Base class for JavaBean-style components that need to load properties from one or more resources.\npublic abstract class PropertiesLoaderSupport extends Object;\n// Convenient utility methods for loading of java.util.Properties, performing standard handling of input streams.\npublic abstract class PropertiesLoaderUtils extends Object;\n// Describe a PropertySource.\npublic record PropertySourceDescriptor(List<String> locations, boolean ignoreResourceNotFound, String name, Class<? extends PropertySourceFactory> propertySourceFactory, String encoding) extends Record;\n// Strategy interface for creating resource-based PropertySource wrappers.\npublic interface PropertySourceFactory;\n// Contribute property sources to the Environment.\npublic class PropertySourceProcessor extends Object;\n// Editor for Resource arrays, to automatically convert String location patterns (e.g.\npublic class ResourceArrayPropertyEditor extends PropertyEditorSupport;\n// Strategy interface for resolving a location pattern (for example, an Ant-style path pattern) into Resource objects.\npublic interface ResourcePatternResolver extends ResourceLoader;\n// Utility class for determining whether a given URL is a resource location that can be loaded via a ResourcePatternResolver.\npublic abstract class ResourcePatternUtils extends Object;\n// Subclass of PropertiesPropertySource that loads a Properties object from a given Resource or resource location such as \"classpath:/com/myco/foo.properties\" or \"file:/path/to/file.xml\".\npublic class ResourcePropertySource extends PropertiesPropertySource;\n// Region of a Resource implementation, materialized by a position within the Resource and a byte count for the length of that region.\npublic class ResourceRegion extends Object;\n// General purpose factory loading mechanism for internal use within the framework.\npublic class SpringFactoriesLoader extends Object;\n", "des": "Support classes for Spring's resource abstraction."}
{"index": 1278, "repo": "spring-core-6.0.11", "code": "package log\n\n// A convenient accessor for Commons Logging, providing not only CharSequence based log methods but also Supplier based variants for use with Java 8 lambda expressions.\npublic class LogAccessor extends Object;\n// Factory for common Log delegates with Spring's logging conventions.\npublic final class LogDelegateFactory extends Object;\n// Utility methods for formatting and logging messages.\npublic abstract class LogFormatUtils extends Object;\n// A simple log message type for use with Commons Logging, allowing for convenient lazy resolution of a given Supplier instance (typically bound to a lambda expression) or a printf-style format string (String.format(java.lang.String, java.lang.Object...)) in its LogMessage.toString().\npublic abstract class LogMessage extends Object implements CharSequence;\n", "des": "Useful delegates for Spring's logging conventions."}
{"index": 1279, "repo": "spring-core-6.0.11", "code": "package metrics\n\n// Instruments the application startup phase using steps.\npublic interface ApplicationStartup;\n// Step recording metrics about a particular phase or action happening during the ApplicationStartup.\npublic interface StartupStep;\n// Simple key/value association for storing step metadata.\npublic static interface StartupStep.Tag;\n// Immutable collection of StartupStep.Tag.\npublic static interface StartupStep.Tags extends Iterable<StartupStep.Tag>;\n", "des": "Support package for recording metrics during application startup."}
{"index": 1280, "repo": "spring-core-6.0.11", "code": "package jfr\n\n// ApplicationStartup implementation for the Java Flight Recorder.\npublic class FlightRecorderApplicationStartup extends Object implements ApplicationStartup;\n", "des": "Support package for recording startup metrics using Java Flight Recorder."}
{"index": 1281, "repo": "spring-core-6.0.11", "code": "package serializer\n\n// A default Deserializer implementation that reads an input stream using Java serialization.\npublic class DefaultDeserializer extends Object implements Deserializer<Object>;\n// A Serializer implementation that writes an object to an output stream using Java serialization.\npublic class DefaultSerializer extends Object implements Serializer<Object>;\n// A strategy interface for converting from data in an InputStream to an Object.\n@FunctionalInterface public interface Deserializer<T>;\n// A strategy interface for streaming an object to an OutputStream.\n@FunctionalInterface public interface Serializer<T>;\n", "des": "Root package for Spring's serializer interfaces and implementations."}
{"index": 1282, "repo": "spring-core-6.0.11", "code": "package support\n\n// A Converter that delegates to a Deserializer to convert data in a byte array to an object.\npublic class DeserializingConverter extends Object implements Converter<byte[],Object>;\n// A convenient delegate with pre-arranged configuration state for common serialization needs.\npublic class SerializationDelegate extends Object implements Serializer<Object>, Deserializer<Object>;\n// Wrapper for the native IOException (or similar) when a Serializer or Deserializer failed.\npublic class SerializationFailedException extends NestedRuntimeException;\n// A Converter that delegates to a Serializer to convert an object to a byte array.\npublic class SerializingConverter extends Object implements Converter<Object,byte[]>;\n", "des": "Support classes for Spring's serializer abstraction."}
{"index": 1283, "repo": "spring-core-6.0.11", "code": "package style\n\n// Spring's default toString() styler.\npublic class DefaultToStringStyler extends Object implements ToStringStyler;\n// Converts objects to String form, generally for debugging purposes, using Spring's toString styling conventions.\npublic class DefaultValueStyler extends Object implements ValueStyler;\n// ValueStyler that converts objects to String form — generally for debugging purposes — using simple styling conventions that mimic the toString() styling conventions for standard JDK implementations of collections, maps, and arrays.\npublic class SimpleValueStyler extends DefaultValueStyler;\n// Simple utility class to allow for convenient access to value styling logic, mainly to support descriptive logging messages.\npublic abstract class StylerUtils extends Object;\n// Utility class that builds pretty-printing toString() methods with pluggable styling conventions.\npublic class ToStringCreator extends Object;\n// A strategy interface for pretty-printing toString() methods.\npublic interface ToStringStyler;\n// Strategy that encapsulates value String styling algorithms according to Spring conventions.\npublic interface ValueStyler;\n", "des": "Support for styling values as Strings, with ToStringCreator as central class."}
{"index": 1284, "repo": "spring-core-6.0.11", "code": "package task\n\n// \n@Deprecated(since=\"6.0\") public interface AsyncListenableTaskExecutor extends AsyncTaskExecutor;\n// Extended interface for asynchronous TaskExecutor implementations, offering support for Callable.\npublic interface AsyncTaskExecutor extends TaskExecutor;\n// TaskExecutor implementation that fires up a new Thread for each task, executing it asynchronously.\npublic class SimpleAsyncTaskExecutor extends CustomizableThreadCreator implements AsyncListenableTaskExecutor, Serializable;\n// TaskExecutor implementation that executes each task synchronously in the calling thread.\npublic class SyncTaskExecutor extends Object implements TaskExecutor, Serializable;\n// A callback interface for a decorator to be applied to any Runnable about to be executed.\n@FunctionalInterface public interface TaskDecorator;\n// Simple task executor interface that abstracts the execution of a Runnable.\n@FunctionalInterface public interface TaskExecutor extends Executor;\n// Exception thrown when a TaskExecutor rejects to accept a given task for execution.\npublic class TaskRejectedException extends RejectedExecutionException;\n// \n@Deprecated public class TaskTimeoutException extends TaskRejectedException;\n", "des": "This package defines Spring's core TaskExecutor abstraction, and provides SyncTaskExecutor and SimpleAsyncTaskExecutor implementations."}
{"index": 1285, "repo": "spring-core-6.0.11", "code": "package support\n\n// \n@Deprecated(since=\"6.0.5\", forRemoval=true) public class ConcurrentExecutorAdapter extends Object implements Executor;\n// Adapter that takes a Spring TaskExecutor and exposes a full java.util.concurrent.ExecutorService for it.\npublic class ExecutorServiceAdapter extends AbstractExecutorService;\n// Adapter that takes a JDK java.util.concurrent.Executor and exposes a Spring TaskExecutor for it.\npublic class TaskExecutorAdapter extends Object implements AsyncListenableTaskExecutor;\n", "des": "Support classes for Spring's TaskExecutor abstraction."}
{"index": 1286, "repo": "spring-core-6.0.11", "code": "package type\n\n// Defines access to the annotations of a specific type (class or method), in a form that does not necessarily require the class-loading.\npublic interface AnnotatedTypeMetadata;\n// Interface that defines abstract access to the annotations of a specific class, in a form that does not require that class to be loaded yet.\npublic interface AnnotationMetadata extends ClassMetadata, AnnotatedTypeMetadata;\n// Interface that defines abstract metadata of a specific class, in a form that does not require that class to be loaded yet.\npublic interface ClassMetadata;\n// Interface that defines abstract access to the annotations of a specific method, in a form that does not require that method's class to be loaded yet.\npublic interface MethodMetadata extends AnnotatedTypeMetadata;\n// AnnotationMetadata implementation that uses standard reflection to introspect a given Class.\npublic class StandardAnnotationMetadata extends StandardClassMetadata implements AnnotationMetadata;\n// ClassMetadata implementation that uses standard reflection to introspect a given Class.\npublic class StandardClassMetadata extends Object implements ClassMetadata;\n// MethodMetadata implementation that uses standard reflection to introspect a given Method.\npublic class StandardMethodMetadata extends Object implements MethodMetadata;\n", "des": "Core support package for type introspection."}
{"index": 1287, "repo": "spring-core-6.0.11", "code": "package classreading\n\n// Caching implementation of the MetadataReaderFactory interface, caching a MetadataReader instance per Spring Resource handle (i.e.\npublic class CachingMetadataReaderFactory extends SimpleMetadataReaderFactory;\n// Simple facade for accessing class metadata, as read by an ASM ClassReader.\npublic interface MetadataReader;\n// Factory interface for MetadataReader instances.\npublic interface MetadataReaderFactory;\n// Simple implementation of the MetadataReaderFactory interface, creating a new ASM ClassReader for every request.\npublic class SimpleMetadataReaderFactory extends Object implements MetadataReaderFactory;\n", "des": "Support classes for reading annotation and class-level metadata."}
{"index": 1288, "repo": "spring-core-6.0.11", "code": "package filter\n\n// Type filter that exposes a ClassMetadata object to subclasses, for class testing purposes.\npublic abstract class AbstractClassTestingTypeFilter extends Object implements TypeFilter;\n// Type filter that is aware of traversing over hierarchy.\npublic abstract class AbstractTypeHierarchyTraversingFilter extends Object implements TypeFilter;\n// A simple TypeFilter which matches classes with a given annotation, checking inherited annotations as well.\npublic class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter;\n// Type filter that uses AspectJ type pattern for matching.\npublic class AspectJTypeFilter extends Object implements TypeFilter;\n// A simple filter which matches classes that are assignable to a given type.\npublic class AssignableTypeFilter extends AbstractTypeHierarchyTraversingFilter;\n// A simple filter for matching a fully-qualified class name with a regex Pattern.\npublic class RegexPatternTypeFilter extends AbstractClassTestingTypeFilter;\n// Base interface for type filters using a MetadataReader.\n@FunctionalInterface public interface TypeFilter;\n", "des": "Core support package for type filtering (e.g."}
{"index": 1289, "repo": "spring-core-6.0.11", "code": "package lang\n\n// A common Spring annotation to declare that annotated elements cannot be null.\n@Target({METHOD,PARAMETER,FIELD}) @Retention(RUNTIME) @Documented @Nonnull @TypeQualifierNickname public @interface NonNull;\n// A common Spring annotation to declare that parameters and return values are to be considered as non-nullable by default for a given package.\n@Target(PACKAGE) @Retention(RUNTIME) @Documented @Nonnull @TypeQualifierDefault({METHOD,PARAMETER}) public @interface NonNullApi;\n// A common Spring annotation to declare that fields are to be considered as non-nullable by default for a given package.\n@Target(PACKAGE) @Retention(RUNTIME) @Documented @Nonnull @TypeQualifierDefault(FIELD) public @interface NonNullFields;\n// A common Spring annotation to declare that annotated elements can be null under some circumstance.\n@Target({METHOD,PARAMETER,FIELD}) @Retention(RUNTIME) @Documented @Nonnull(when=MAYBE) @TypeQualifierNickname public @interface Nullable;\n", "des": "Common annotations with language-level semantics: nullability as well as JDK API indications."}
{"index": 1290, "repo": "spring-core-6.0.11", "code": "package objenesis\n\n// Spring-specific variant of ObjenesisStd / ObjenesisBase, providing a cache based on Class keys instead of class names, and allowing for selective use of the cache.\npublic class SpringObjenesis extends Object implements org.springframework.objenesis.Objenesis;\n", "des": "Spring's repackaging of Objenesis 3.2 (with SpringObjenesis entry point; for internal use only)."}
{"index": 1291, "repo": "spring-core-6.0.11", "code": "package util\n\n// An IdGenerator that uses SecureRandom for the initial seed and Random thereafter, instead of calling UUID.randomUUID() every time as JdkIdGenerator does.\npublic class AlternativeJdkIdGenerator extends Object implements IdGenerator;\n// PathMatcher implementation for Ant-style path patterns.\npublic class AntPathMatcher extends Object implements PathMatcher;\n// Tests whether a string matches against a pattern via a Pattern.\nprotected static class AntPathMatcher.AntPathStringMatcher extends Object;\n// The default Comparator implementation returned by AntPathMatcher.getPatternComparator(String).\nprotected static class AntPathMatcher.AntPatternComparator extends Object implements Comparator<String>;\n// Assertion utility class that assists in validating arguments.\npublic abstract class Assert extends Object;\n// Simple List wrapper class that allows for elements to be automatically populated as they are requested.\npublic class AutoPopulatingList<E> extends Object implements List<E>, Serializable;\n// Factory interface for creating elements for an index-based access data structure such as a List.\n@FunctionalInterface public static interface AutoPopulatingList.ElementFactory<E>;\n// Exception to be thrown from ElementFactory.\npublic static class AutoPopulatingList.ElementInstantiationException extends RuntimeException;\n// \n@Deprecated(since=\"6.0.5\", forRemoval=true) public abstract class Base64Utils extends Object;\n// Miscellaneous java.lang.Class utility methods.\npublic abstract class ClassUtils extends Object;\n// Miscellaneous collection utility methods.\npublic abstract class CollectionUtils extends Object;\n// java.io.Writer adapter for a Commons Logging Log.\npublic class CommonsLogWriter extends Writer;\n// Composite iterator that combines multiple other iterators, as registered via CompositeIterator.add(Iterator).\npublic class CompositeIterator<E> extends Object implements Iterator<E>;\n// Support class for throttling concurrent access to a specific resource.\npublic abstract class ConcurrencyThrottleSupport extends Object implements Serializable;\n// Simple LRU (Least Recently Used) cache, bounded by a specified cache capacity.\npublic final class ConcurrentLruCache<K,V> extends Object;\n// A ConcurrentHashMap that uses soft or weak references for both keys and values.\npublic class ConcurrentReferenceHashMap<K,V> extends AbstractMap<K,V> implements ConcurrentMap<K,V>;\n", "des": "Miscellaneous utility classes, such as utilities for working with strings, classes, collections, reflection, etc."}
{"index": 1292, "repo": "spring-core-6.0.11", "code": "package backoff\n\n// Provide a BackOffExecution that indicates the rate at which an operation should be retried.\n@FunctionalInterface public interface BackOff;\n// Represent a particular back-off execution.\n@FunctionalInterface public interface BackOffExecution;\n// Implementation of BackOff that increases the back off period for each retry attempt.\npublic class ExponentialBackOff extends Object implements BackOff;\n// A simple BackOff implementation that provides a fixed interval between two attempts and a maximum number of retries.\npublic class FixedBackOff extends Object implements BackOff;\n", "des": "A generic back-off abstraction."}
{"index": 1293, "repo": "spring-core-6.0.11", "code": "package comparator\n\n// A Comparator for Boolean objects that can sort either true or false first.\npublic class BooleanComparator extends Object implements Comparator<Boolean>, Serializable;\n// Comparator that adapts Comparables to the Comparator interface.\npublic class ComparableComparator<T extends Comparable<T>> extends Object implements Comparator<T>;\n// Convenient entry point with generically typed factory methods for common Spring Comparator variants.\npublic abstract class Comparators extends Object;\n// Compares objects based on an arbitrary class order.\npublic class InstanceComparator<T> extends Object implements Comparator<T>;\n// A Comparator that will safely compare nulls to be lower or higher than other objects.\npublic class NullSafeComparator<T> extends Object implements Comparator<T>;\n", "des": "Useful generic java.util.Comparator implementations, such as an invertible comparator and a compound comparator."}
{"index": 1294, "repo": "spring-core-6.0.11", "code": "package concurrent\n\n// \n@Deprecated(since=\"6.0\") public class CompletableToListenableFutureAdapter<T> extends Object implements ListenableFuture<T>;\n// \n@Deprecated(since=\"6.0\") @FunctionalInterface public interface FailureCallback;\n// \n@Deprecated(since=\"6.0\") public abstract class FutureAdapter<T,S> extends Object implements Future<T>;\n// Convenience utilities for working with Future and implementations.\npublic abstract class FutureUtils extends Object;\n// \n@Deprecated(since=\"6.0\") public interface ListenableFuture<T> extends Future<T>;\n// \n@Deprecated(since=\"6.0\") public abstract class ListenableFutureAdapter<T,S> extends FutureAdapter<T,S> implements ListenableFuture<T>;\n// \n@Deprecated(since=\"6.0\") public interface ListenableFutureCallback<T> extends SuccessCallback<T>, FailureCallback;\n// \n@Deprecated(since=\"6.0\") public class ListenableFutureCallbackRegistry<T> extends Object;\n// \n@Deprecated(since=\"6.0\") public class ListenableFutureTask<T> extends FutureTask<T> implements ListenableFuture<T>;\n// \n@Deprecated(since=\"6.0\") public class MonoToListenableFutureAdapter<T> extends CompletableToListenableFutureAdapter<T>;\n// \n@Deprecated(since=\"6.0\") public class SettableListenableFuture<T> extends Object implements ListenableFuture<T>;\n// \n@Deprecated(since=\"6.0\") @FunctionalInterface public interface SuccessCallback<T>;\n", "des": "Useful generic java.util.concurrent.Future extensions."}
{"index": 1295, "repo": "spring-core-6.0.11", "code": "package function\n\n// A Supplier decorator that caches a singleton result and makes it available from SingletonSupplier.get() (nullable) and SingletonSupplier.obtain() (null-safe).\npublic class SingletonSupplier<T> extends Object implements Supplier<T>;\n// Convenience utilities for Supplier handling.\npublic abstract class SupplierUtils extends Object;\n// A BiFunction that allows invocation of code that throws a checked exception.\npublic interface ThrowingBiFunction<T,U,R> extends BiFunction<T,U,R>;\n// A Consumer that allows invocation of code that throws a checked exception.\n@FunctionalInterface public interface ThrowingConsumer<T> extends Consumer<T>;\n// A Function that allows invocation of code that throws a checked exception.\n@FunctionalInterface public interface ThrowingFunction<T,R> extends Function<T,R>;\n// A Supplier that allows invocation of code that throws a checked exception.\npublic interface ThrowingSupplier<T> extends Supplier<T>;\n", "des": "Useful generic java.util.function helper classes."}
{"index": 1296, "repo": "spring-core-6.0.11", "code": "package unit\n\n// A data size, such as '12MB'.\npublic final class DataSize extends Object implements Comparable<DataSize>, Serializable;\n// A standard set of DataSize units.\npublic enum DataUnit extends Enum<DataUnit>;\n", "des": "Useful unit data types."}
{"index": 1297, "repo": "spring-core-6.0.11", "code": "package xml\n\n// Convenience methods for working with the DOM API, in particular for working with DOM Nodes and DOM Elements.\npublic abstract class DomUtils extends Object;\n// Simple javax.xml.namespace.NamespaceContext implementation.\npublic class SimpleNamespaceContext extends Object implements NamespaceContext;\n// Simple org.xml.sax.ErrorHandler implementation: logs warnings using the given Commons Logging logger instance, and rethrows errors to discontinue the XML transformation.\npublic class SimpleSaxErrorHandler extends Object implements ErrorHandler;\n// Simple javax.xml.transform.ErrorListener implementation: logs warnings using the given Commons Logging logger instance, and rethrows errors to discontinue the XML transformation.\npublic class SimpleTransformErrorListener extends Object implements ErrorListener;\n// Convenience methods for working with the StAX API.\npublic abstract class StaxUtils extends Object;\n// Contains common behavior relating to Transformers and the javax.xml.transform package in general.\npublic abstract class TransformerUtils extends Object;\n// Detects whether an XML stream is using DTD- or XSD-based validation.\npublic class XmlValidationModeDetector extends Object;\n", "des": "Miscellaneous utility classes for XML parsing and transformation, such as error handlers that log warnings via Commons Logging."}
{"index": 1298, "repo": "groovy-all-4.0.13", "code": "package ui\n\n// Base class for console\npublic abstract class ConsoleSupport extends Object;\n// Component which provides a styled editor for the console.\npublic class ConsoleTextEditor extends JScrollPane;\n// Intercepts System.out/System.err.\npublic class SystemOutputInterceptor extends FilterOutputStream;\n", "des": "An interactive command line terminal along with a Swing console for evaluating Groovy scripts and inspecting objects, AST and bytecode information."}
{"index": 1299, "repo": "groovy-all-4.0.13", "code": "package text\n\n// \npublic final class FindReplaceUtility extends Object;\n// \npublic class GroovyFilter extends StructuredSyntaxDocumentFilter;\n// Represents highlighter to highlight matched parentheses, brackets and curly braces when caret touching them\npublic class MatchingHighlighter extends Object implements CaretListener;\n// The document filter based on Parrot's lexer is for highlighting the content of text editor\npublic class SmartDocumentFilter extends DocumentFilter;\n// \npublic class StructuredSyntaxDocumentFilter extends DocumentFilter;\n// \npublic class StructuredSyntaxHandler extends DefaultHandler;\n// Contains all the basic resources and values used by the utility framework.\npublic final class StructuredSyntaxResources extends Object;\n// A simple text pane that is printable and wrapping is optional.\npublic class TextEditor extends JTextPane implements Pageable, Printable;\n// To use this, simply drop this as an UndoableEditListener into your document, and then create actions to call undo/redo as needed (checking can undo/redo first, of course).\npublic class TextUndoManager extends UndoManager;\n", "des": "Text processing helpers for the interactive command line terminal."}
{"index": 1300, "repo": "groovy-all-4.0.13", "code": "package inspect\n\n// The Inspector provides a unified access to an object's information that can be determined by introspection.\npublic class Inspector extends Object;\n// \npublic static class Inspector.MemberComparator extends Object implements Comparator<Object>, Serializable;\n// \npublic static class Inspector.MemberComparatorWithValue extends Object implements Comparator<Object>, Serializable;\n", "des": "Classes for inspecting object properties through introspection."}
{"index": 1301, "repo": "groovy-all-4.0.13", "code": "package io\n\n// A buffered writer only for OutputStreamWriter that is aware of the encoding of the OutputStreamWriter.\npublic class EncodingAwareBufferedWriter extends BufferedWriter;\n// Represents particular files of interest.\npublic enum FileType extends Enum<FileType>;\n// Represents special return values for the 'preDir', 'postDir' and 'visit'/supplied Closures used with ResourceGroovyMethods.traverse(java.io.File, java.util.Map, groovy.lang.Closure) and related methods to control subsequent traversal behavior.\npublic enum FileVisitResult extends Enum<FileVisitResult>;\n// A PrintStream that outputs objects in Groovy style.\npublic class GroovyPrintStream extends PrintStream;\n// A PrintWriter that outputs objects in Groovy style.\npublic class GroovyPrintWriter extends PrintWriter;\n// The LineColumnReader is an extension to BufferedReader that keeps track of the line and column information of where the cursor is.\npublic class LineColumnReader extends BufferedReader;\n// A buffered writer that gobbles any \\r characters and replaces every \\n with a platform specific newline.\npublic class PlatformLineWriter extends Writer;\n", "des": "Classes for Groovier Input/Output."}
{"index": 1302, "repo": "groovy-all-4.0.13", "code": "package jmx\n\n// A GroovyObject facade for an underlying MBean which acts like a normal groovy object but which is actually implemented via an underlying JMX MBean.\npublic class GroovyMBean extends GroovyObjectSupport;\n", "des": "Classes for working with the Java Management Extensions (JMX) technology."}
{"index": 1303, "repo": "groovy-all-4.0.13", "code": "package builder\n\n// Runtime exception used by JmxBuilder.\npublic class JmxBuilderException extends RuntimeException;\n// The JmxBuilderModelMBean is the MBean class that proxies exported POGO/POJO inside the MBeanServer.\npublic class JmxBuilderModelMBean extends RequiredModelMBean implements NotificationListener;\n// The JmxEventEmitter is a JMX Broadcaster class that is used to send generic events on the MBeanServer's event bus.\npublic class JmxEventEmitter extends NotificationBroadcasterSupport implements JmxEventEmitterMBean;\n// This is the management interface for JmxEventEmitter.\npublic interface JmxEventEmitterMBean;\n// The JmxEventListener class is used by the builder to listen to events on the event bus.\npublic class JmxEventListener extends Object implements NotificationListener;\n", "des": "Classes for the JMX Builder."}
{"index": 1304, "repo": "groovy-all-4.0.13", "code": "package plugin\n\n// Integration code for running JUnit5 tests in Groovy.\npublic class JUnit5Runner extends Object implements GroovyRunner;\n", "des": "Classes to support running JUnit5 tests as scripts."}
{"index": 1305, "repo": "groovy-all-4.0.13", "code": "package lang\n\n// An interface for MetaClass instances that \"adapt\" other MetaClass instances such as a proxy or delegating MetaClass.\npublic interface AdaptingMetaClass extends MetaClass;\n// Interceptor that registers the timestamp of each method call before and after invocation.\npublic class BenchmarkInterceptor extends Object implements Interceptor;\n// Represents the variable bindings of a script which can be altered from outside the script object or created outside of a script and passed into it.\npublic class Binding extends GroovyObjectSupport;\n// \npublic interface Buildable;\n// Transforms an instance-style Groovy class or interface to become a static-style conventional Groovy category.\n@Documented @Retention(SOURCE) @Target(TYPE) public @interface Category;\n// Represents any closure object in Groovy.\npublic abstract class Closure<V> extends GroovyObjectSupport implements Cloneable, Runnable, GroovyCallable<V>, Serializable;\n// An exception thrown by a closure invocation\npublic class ClosureException extends RuntimeException;\n// An interface for MetaMethods that invoke closures to implements.\npublic interface ClosureInvokingMethod;\n// Annotation to automatically delegate part of the functionality of an owner class to the annotated delegation target.\n@Documented @Retention(RUNTIME) @Target({FIELD,METHOD}) public @interface Delegate;\n// This annotation can be used by API or DSL writers to document parameters which accept a closure.\n@Documented @Retention(RUNTIME) @Target({PARAMETER,METHOD}) public @interface DelegatesTo;\n// Parameter annotation used to specify the delegate for a @DelegatesTo annotated parameter of the same method.\n@Retention(RUNTIME) @Target(PARAMETER) public static @interface DelegatesTo.Target;\n// \npublic class DelegatingMetaClass extends Object implements MetaClass, MutableMetaClass, GroovyObject;\n// Use this exception to mark a method implementation as being deprecated.\npublic class DeprecationException extends RuntimeException;\n// Constructing Ranges like 0..<0\npublic class EmptyRange<T extends Comparable> extends AbstractList<T> implements Range<T>;\n// ExpandoMetaClass is a MetaClass that behaves like an Expando, allowing the addition or replacement of methods, properties and constructors on the fly.\npublic class ExpandoMetaClass extends MetaClassImpl implements GroovyObject;\n", "des": "Core Groovy language classes for implementing data structures, closures, metadata and so forth."}
{"index": 1306, "repo": "groovy-all-4.0.13", "code": "package interceptor\n\n// The ProxyMetaClass for the MockInterceptor.\npublic class MockProxyMetaClass extends ProxyMetaClass;\n", "des": "The groovy.mock.interceptor is an all-groovy mock testing library."}
{"index": 1307, "repo": "groovy-all-4.0.13", "code": "package security\n\n// Permission required to explicitly specify a codebase for a groovy script whose codebase cannot be determined.\npublic final class GroovyCodeSourcePermission extends BasicPermission;\n", "des": "Security-related classes"}
{"index": 1308, "repo": "groovy-all-4.0.13", "code": "package servlet\n\n// A base class dealing with common HTTP servlet API housekeeping aspects.\npublic abstract class AbstractHttpServlet extends HttpServlet implements ResourceConnector;\n// This servlet will run Groovy scripts as Groovlets.\npublic class GroovyServlet extends AbstractHttpServlet;\n// Servlet-specific binding extension to lazy load the writer or the output stream from the response.\npublic class ServletBinding extends Binding;\n// Servlet support.\npublic class ServletCategory extends Object;\n// A generic servlet for serving (mostly HTML) templates.\npublic class TemplateServlet extends AbstractHttpServlet;\n", "des": "Support for Groovlets which are Servlets written as a simple Groovy script."}
{"index": 1309, "repo": "groovy-all-4.0.13", "code": "package sql\n\n// Class which delegates to a PreparedStatement but keeps track of a batch count size.\npublic class BatchingPreparedStatementWrapper extends BatchingStatementWrapper;\n// Class which delegates to a Statement but keeps track of a batch count size.\npublic class BatchingStatementWrapper extends GroovyObjectSupport implements AutoCloseable;\n// An enhancement of Groovy's Sql class providing support for accessing and querying databases using POGO fields and operators rather than JDBC-level API calls and RDBMS column names.\npublic class DataSet extends Sql;\n// Identifies a variable to be expanded into the sql string rather than representing a placeholder.\npublic interface ExpandedVariable;\n// Represents an extent of objects\npublic interface GroovyResultSet extends GroovyObject, ResultSet;\n// GroovyResultSetExtension implements additional logic for ResultSet.\npublic class GroovyResultSetExtension extends GroovyObjectSupport;\n// GroovyResultSetProxy is used to create a proxy for GroovyResultSet.\npublic final class GroovyResultSetProxy extends Object implements InvocationHandler;\n// Represents an extent of objects.\npublic class GroovyRowResult extends GroovyObjectSupport implements Map<String,Object>;\n// A typed parameter passed to, and returned from a CallableStatement.\npublic interface InOutParameter extends InParameter, OutParameter;\n// A typed parameter to pass to a query\npublic interface InParameter;\n// A parameter to be returned from a CallableStatement.\npublic interface OutParameter;\n// This class defines a wrapper for accessing a specific column in ResultSetMetaData.\npublic class ResultSetMetaDataWrapper extends GroovyObjectSupport;\n// A ResultSet out parameter.\npublic interface ResultSetOutParameter extends OutParameter;\n// A facade over Java's normal JDBC APIs providing greatly simplified resource management and result set handling.\npublic class Sql extends Object implements AutoCloseable;\n// \npublic class SqlOrderByVisitor extends CodeVisitorSupport;\n// \npublic class SqlWhereVisitor extends CodeVisitorSupport;\n// \npublic class SqlWithParams extends Object;\n", "des": "Groovy helper classes for working with SQL data as Groovy objects"}
{"index": 1310, "repo": "groovy-all-4.0.13", "code": "package binding\n\n// \npublic class AbstractButtonProperties extends Object;\n// \npublic abstract class AbstractSyntheticBinding extends AbstractFullBinding;\n// \npublic class JComboBoxProperties extends Object;\n// \npublic class JComponentProperties extends Object;\n// \npublic class JScrollBarProperties extends Object;\n// \npublic class JSliderProperties extends Object;\n// \npublic class JSpinnerProperties extends Object;\n// \npublic class JTableProperties extends Object;\n// \npublic class JTextComponentProperties extends Object;\n", "des": "Binding classes for SwingBuilder"}
{"index": 1311, "repo": "groovy-all-4.0.13", "code": "package impl\n\n// \npublic class ClosureRenderer extends Object implements ListCellRenderer, TableCellRenderer, TreeCellRenderer;\n// A default action implementation\npublic class DefaultAction extends AbstractAction;\n// A ListModel implementation that's backed by a live List.\npublic class ListWrapperListModel<E> extends AbstractListModel;\n// Represents a HTML style table layout\npublic class TableLayout extends JPanel;\n// Represents a cell in a table layout.\npublic class TableLayoutCell extends Object;\n// Represents a row in a table layout\npublic class TableLayoutRow extends Object;\n", "des": "Implementation classes for SwingBuilder"}
{"index": 1312, "repo": "groovy-all-4.0.13", "code": "package model\n\n// Represents a value model using a closure to extract the value from some source model and an optional write closure for updating the value.\npublic class ClosureModel extends Object implements ValueModel, NestedValueModel;\n// Represents a column using a ValueModel to extract the value.\npublic class DefaultTableColumn extends TableColumn;\n// A default table model made up of PropertyModels on a Value model.\npublic class DefaultTableModel extends AbstractTableModel;\n// \nprotected static class DefaultTableModel.MyTableColumnModel extends DefaultTableColumnModel;\n// Represents a number of field models which can be ValueModel, PropertyModel, TableModel, TreeModel or nested FormModel instances\npublic class FormModel extends Object;\n// Represents a nested value model such as a PropertyModel or a ClosureModel\npublic interface NestedValueModel;\n// Represents a property of a value as a model.\npublic class PropertyModel extends Object implements ValueModel, NestedValueModel;\n// A simple ValueModel implementation which is a holder of an object value.\npublic class ValueHolder extends Object implements ValueModel;\n// Represents a model of a value\npublic interface ValueModel;\n", "des": "An MVC model package for working with user interfaces and data structures and arbitrary Java and Groovy objects"}
{"index": 1313, "repo": "groovy-all-4.0.13", "code": "package text\n\n// Processes template source files substituting variables and expressions into placeholders in a template source text to produce the desired output using a streaming approach.\npublic class GStringTemplateEngine extends TemplateEngine;\n// Processes template source files substituting variables and expressions into placeholders in a template source text to produce the desired output.\npublic class SimpleTemplateEngine extends TemplateEngine;\n// Processes template source files substituting variables and expressions into placeholders in a template source text to produce the desired output using a closure based approach.\npublic class StreamingTemplateEngine extends TemplateEngine;\n// A template is a block of text with an associated binding that can be output to a writer or evaluated to a string.\npublic interface Template;\n// A template engine is a factory for creating a Template instance for a given text input.\npublic abstract class TemplateEngine extends Object;\n// A custom exception class to flag template execution errors\npublic class TemplateExecutionException extends Exception;\n// A custom exception class to flag template parsing errors\npublic class TemplateParseException extends RuntimeException;\n// Template engine for use in templating scenarios where both the template source and the expected output are intended to be XML.\npublic class XmlTemplateEngine extends TemplateEngine;\n", "des": "Contains the text processing utilities including templating APIs and default implementations."}
{"index": 1314, "repo": "groovy-all-4.0.13", "code": "package markup\n\n// All templates compiled through MarkupTemplateEngine extend this abstract class, which provides a number of utility methods to generate markup.\npublic abstract class BaseTemplate extends Object implements Writable;\n// A writer which delegates to another writer and supports an additional indenting level.\npublic class DelegatingIndentWriter extends Writer;\n// A template engine which leverages StreamingMarkupBuilder to generate XML/XHTML.\npublic class MarkupTemplateEngine extends TemplateEngine;\n// A template resolver which avoids calling ClassLoader.getResource(String) if a template path already has been queried before.\npublic static class MarkupTemplateEngine.CachingTemplateResolver extends MarkupTemplateEngine.DefaultTemplateResolver;\n// \npublic static class MarkupTemplateEngine.DefaultTemplateResolver extends Object implements TemplateResolver;\n// \npublic static class MarkupTemplateEngine.TemplateResource extends Object;\n// Configuration options for the markup template engine.\npublic class TemplateConfiguration extends Object;\n// Interface for template resolvers, which, given a template identifier, return a URL where the template can be loaded.\npublic interface TemplateResolver;\n", "des": "Contains a template engine facilitating generation of XML-like markup with optional type checking."}
{"index": 1315, "repo": "groovy-all-4.0.13", "code": "package time\n\n// Base class for date and time durations.\npublic abstract class BaseDuration extends Object implements Comparable<BaseDuration>;\n// \npublic abstract static class BaseDuration.From extends Object;\n// DatumDependentDuration represents durations whose length in milliseconds cannot be determined without knowing the datum point.\npublic class DatumDependentDuration extends BaseDuration;\n// Duration represents time periods which have values independent of the context.\npublic class Duration extends BaseDuration;\n// Apply a number of methods to allow convenient Date/Time manipulation,such as:\npublic class TimeCategory extends Object;\n// TimeDatumDuration represents a time period which results from an arithmetic operation between a TimeDuration object and a DatumDuration object\npublic class TimeDatumDependentDuration extends DatumDependentDuration;\n// TimeDuration represents time periods expressed in units of hours, minutes, seconds and milliseconds.\npublic class TimeDuration extends Duration;\n", "des": "Classes for easily manipulating Dates and times."}
{"index": 1316, "repo": "groovy-all-4.0.13", "code": "package util\n\n// \npublic abstract class AbstractFactory extends Object implements Factory;\n// An iterator that allows examining the next element without consuming it.\npublic interface BufferedIterator<T> extends Iterator<T>;\n// Base class for creating arbitrary nested trees of objects or events.\npublic abstract class BuilderSupport extends GroovyObjectSupport;\n// Utility class to guess the encoding of a given text file.\npublic class CharsetToolkit extends Object;\n// A Comparator which uses a closure to compare 2 values being equal\npublic class ClosureComparator<T> extends Object implements Comparator<T>, Serializable;\n// A ConfigObject at a simple level is a Map that creates configuration entries (other ConfigObjects) when referencing them.\npublic class ConfigObject extends GroovyObjectSupport implements Writable, Map, Cloneable;\n// Script that performs method invocations and property access like Closure does.\npublic abstract class DelegatingScript extends Script;\n// Allow easy integration from Groovy into Java through convenience methods.\npublic class Eval extends Object;\n// Represents a dynamically expandable bean.\npublic class Expando extends GroovyObjectSupport;\n// \npublic interface Factory;\n// Mix of BuilderSupport and SwingBuilder's factory support.\npublic abstract class FactoryBuilderSupport extends Binding;\n// A Collections utility class\npublic class GroovyCollections extends Object;\n// Specific script engine able to reload modified scripts as well as dealing properly with dependent scripts.\npublic class GroovyScriptEngine extends Object implements ResourceConnector;\n// \npublic interface IFileNameFinder;\n// A helper class for printing indented text.\npublic class IndentPrinter extends Object;\n// A Map.Entry implementation.\npublic class MapEntry extends Object implements Map.Entry;\n// Represents an arbitrary tree node which can be used for structured metadata or any arbitrary XML-like tree.\npublic class Node extends Object implements Serializable, Cloneable;\n// A helper class for creating nested trees of Node objects for handling arbitrary data\npublic class NodeBuilder extends BuilderSupport;\n// A List implementation which is returned by queries on a Node which provides some XPath like helper methods for GPath.\npublic class NodeList extends ArrayList;\n// A helper class for creating nested trees of data\npublic class NodePrinter extends Object;\n", "des": "Various Groovy utilities for working with nodes, builders, logging, and other things."}
{"index": 1317, "repo": "groovy-all-4.0.13", "code": "package xml\n\n// A helper class for creating a W3C DOM tree\npublic class DOMBuilder extends BuilderSupport;\n// Support class for creating XML Factories\npublic class FactorySupport extends Object;\n// A helper class for creating XML or HTML markup.\npublic class MarkupBuilder extends BuilderSupport;\n// \npublic static enum MarkupBuilder.CharFilter extends Enum<MarkupBuilder.CharFilter>;\n// \npublic static class MarkupBuilder.DefaultXmlEscapingFunction extends Object implements Function<Character,Optional<String>>;\n// A helper class for MarkupBuilder.\npublic class MarkupBuilderHelper extends Object;\n// A simple helper class which acts as a factory of QName instances.\npublic class Namespace extends Object;\n// A helper class for creating namespaces for GroovyMarkup\npublic class NamespaceBuilder extends Object;\n// A helper class for creating namespaced GroovyMarkup\npublic class NamespaceBuilderSupport extends BuilderSupport;\n// A builder for generating W3C SAX events.\npublic class SAXBuilder extends BuilderSupport;\n// Prints a groovy.util.Node (as used with XmlParser) including all children in XML format.\npublic class XmlNodePrinter extends Object;\n// \nprotected static class XmlNodePrinter.NamespaceContext extends Object;\n// A helper class for parsing XML into a tree of Node instances for a simple way of processing XML.\npublic class XmlParser extends Object implements ContentHandler;\n// Parse XML into a document tree that may be traversed similar to XPath expressions.\npublic class XmlSlurper extends DefaultHandler;\n// Used for pretty printing XML content and other XML related utilities.\npublic class XmlUtil extends Object;\n", "des": "Groovy markup builder classes for working with SAX and W3C DOM and Groovy markup."}
{"index": 1318, "repo": "groovy-all-4.0.13", "code": "package dom\n\n// Category class which adds GPath style operations to Java's DOM classes.\npublic class DOMCategory extends Object;\n", "des": "Groovy XML Dom processing classes."}
{"index": 1319, "repo": "groovy-all-4.0.13", "code": "package slurpersupport\n\n// Lazy evaluated representation of a node attribute.\npublic class Attribute extends GPathResult;\n// Lazy evaluated representation of a node's attributes.\npublic class Attributes extends NodeChildren;\n// Lazy evaluated representation of a node's attributes filtered by a Closure.\npublic class FilteredAttributes extends Attributes;\n// Lazy evaluated representation of child nodes filtered by a Closure.\npublic class FilteredNodeChildren extends NodeChildren;\n// Base class for representing lazy evaluated GPath expressions.\npublic abstract class GPathResult extends GroovyObjectSupport implements Writable, Buildable, Iterable;\n// \npublic class NamespaceAwareHashMap extends HashMap<String,String>;\n// Lazy evaluated representation of a GPath expression returning no children.\npublic class NoChildren extends GPathResult;\n// Represents a node.\npublic class Node extends Object implements Writable;\n// Lazy evaluated representation of a child node.\npublic class NodeChild extends GPathResult;\n// Lazy evaluated representation of child nodes.\npublic class NodeChildren extends GPathResult;\n// Helper class for iterating through nodes.\npublic abstract class NodeIterator extends Object implements Iterator;\n// Lazy evaluated representation of parent nodes without duplicates\npublic class NodeParents extends NodeChildren;\n// Helper base class used for lazy updates.\npublic abstract class ReplacementNode extends Object implements Buildable, Writable;\n", "des": "Helper classes for XmlSlurper."}
{"index": 1320, "repo": "groovy-all-4.0.13", "code": "package streamingmarkupsupport\n\n// \npublic class BaseMarkupBuilder extends Builder;\n// \npublic abstract class Builder extends GroovyObjectSupport;\n// \nprotected abstract static class Builder.Built extends GroovyObjectSupport;\n// \npublic class StreamingMarkupWriter extends Writer;\n", "des": "XmlBuilder related classes to support streaming XML."}
{"index": 1321, "repo": "groovy-all-4.0.13", "code": "package yaml\n\n// A builder for creating YAML payloads.\npublic class YamlBuilder extends GroovyObjectSupport implements Writable;\n// Represents runtime exception occurred when parsing or building YAML\npublic class YamlRuntimeException extends GroovyRuntimeException;\n// Represents a YAML parser\npublic class YamlSlurper extends Object;\n", "des": "Classes for building and parsing YAML."}
{"index": 1322, "repo": "groovy-all-4.0.13", "code": "package binding\n\n// \npublic abstract class AbstractFullBinding extends Object implements FullBinding;\n// An aggregation of multiple bindings\npublic class AggregateBinding extends Object implements BindingUpdatable;\n// This class returns half bound FullBindings on the source half to the model object for every property reference (and I do mean every, valid or not, queried before or not).\npublic class BindingProxy extends GroovyObjectSupport implements BindingUpdatable;\n// \npublic interface BindingUpdatable;\n// The bind path object.\npublic class BindPath extends Object;\n// \npublic class ClosureSourceBinding extends Object implements SourceBinding;\n// \npublic class ClosureTriggerBinding extends Object implements TriggerBinding, SourceBinding;\n// \npublic class EventTriggerBinding extends Object implements TriggerBinding;\n// \npublic interface FullBinding extends BindingUpdatable;\n// \npublic class MutualPropertyBinding extends Object implements FullBinding;\n// \npublic class PropertyBinding extends Object implements SourceBinding, TargetBinding, TriggerBinding;\n// \npublic static enum PropertyBinding.UpdateStrategy extends Enum<PropertyBinding.UpdateStrategy>;\n// \npublic class PropertyChangeProxyTargetBinding extends Object implements TargetBinding;\n// A property path full binding\npublic class PropertyPathFullBinding extends AbstractFullBinding implements PropertyChangeListener;\n// \npublic interface SourceBinding;\n// \npublic class SwingTimerTriggerBinding extends Object implements TriggerBinding;\n// \npublic interface TargetBinding;\n// \npublic interface TriggerBinding;\n", "des": "Classes related to property binding."}
{"index": 1323, "repo": "groovy-all-4.0.13", "code": "package concurrentlinkedhashmap\n\n// A hash table supporting full concurrency of retrievals, adjustable expected concurrency for updates, and a maximum capacity to bound the map by.\n@ThreadSafe public final class ConcurrentLinkedHashMap<K,V> extends AbstractMap<K,V> implements ConcurrentMap<K,V>, Serializable;\n// A builder that creates ConcurrentLinkedHashMap instances.\npublic static final class ConcurrentLinkedHashMap.Builder<K,V> extends Object;\n// A class that can determine the weight of an entry.\n@ThreadSafe public interface EntryWeigher<K,V>;\n// A listener registered for notification when an entry is evicted.\n@ThreadSafe public interface EvictionListener<K,V>;\n// A class that can determine the weight of a value.\n@ThreadSafe public interface Weigher<V>;\n// A common set of Weigher and EntryWeigher implementations.\npublic final class Weighers extends Object;\n", "des": "This package contains an implementation of a bounded ConcurrentMap data structure."}
{"index": 1324, "repo": "groovy-all-4.0.13", "code": "package util\n\n// A converter for converting YAML to JSON, vice versa\npublic final class YamlConverter extends Object;\n", "des": "Utility classes for YAML processing."}
{"index": 1325, "repo": "groovy-all-4.0.13", "code": "package groovy\n\n// This class represents an error that is thrown when a bug is recognized inside the runtime.\npublic class GroovyBugError extends AssertionError;\n// \npublic class GroovyException extends Exception implements GroovyExceptionInterface;\n// An interface for use by all Groovy compiler exceptions.\npublic interface GroovyExceptionInterface;\n", "des": "Groovy Language for the JVM"}
{"index": 1326, "repo": "groovy-all-4.0.13", "code": "package ant\n\n// \npublic class AntProjectPropertiesDelegate extends Hashtable<String,Object>;\n// Support for compilation related tasks.\npublic abstract class CompileTaskSupport extends org.apache.tools.ant.taskdefs.MatchingTask;\n// FileIterator is an iterator over a number of files from a collection of FileSet instances.\npublic class FileIterator extends Object implements Iterator<File>;\n// FileScanner is a bean which allows the iteration over a number of files from a collection of FileSet instances.\npublic class FileScanner extends org.apache.tools.ant.Task;\n// This is a helper class, to provide a controlled entry point for the groovyc ant task forked mode.\npublic class FileSystemCompilerFacade extends Object;\n// Generates Java stubs from Groovy sources.\npublic class GenerateStubsTask extends CompileTaskSupport;\n// Executes a series of Groovy statements.\npublic class Groovy extends org.apache.tools.ant.taskdefs.Java;\n// Compiles Groovy source files using Ant.\npublic class Groovyc extends org.apache.tools.ant.taskdefs.MatchingTask;\n// Compiles Groovy source files.\npublic class GroovycTask extends CompileTaskSupport;\n// Access to the GroovyDoc tool from Ant.\npublic class Groovydoc extends org.apache.tools.ant.Task;\n// Helper to make logging from Ant easier.\npublic class LoggingHelper extends Object;\n// Sets the RootLoader as reference.\npublic class RootLoaderRef extends org.apache.tools.ant.taskdefs.MatchingTask;\n// Compiles Java and Groovy source files.\npublic class UberCompileTask extends org.apache.tools.ant.Task;\n// Verify Class files.\npublic class VerifyClass extends org.apache.tools.ant.taskdefs.MatchingTask;\n", "des": "Ant tasks for working with Groovy - such as groovyc for compiling Groovy source code to Java bytecode"}
{"index": 1327, "repo": "groovy-all-4.0.13", "code": "package ast\n\n// Base class for any AST node which is capable of being annotated\npublic class AnnotatedNode extends ASTNode implements GroovydocHolder<AnnotatedNode>;\n// Represents an annotation which can be attached to interfaces, classes, methods, fields, parameters, and other places.\npublic class AnnotationNode extends ASTNode;\n// Base class for any AST node.\npublic class ASTNode extends Object implements NodeMetaDataHandler;\n// Helper class for converting AST into text.\npublic class AstToTextHelper extends Object;\n// Transforms expressions in a whole class.\npublic abstract class ClassCodeExpressionTransformer extends ClassCodeVisitorSupport implements ExpressionTransformer;\n// \npublic abstract class ClassCodeVisitorSupport extends CodeVisitorSupport implements ErrorCollecting, GroovyClassVisitor;\n// Helper for ClassNode and classes handling them.\npublic class ClassHelper extends Object;\n// Represents a class in the AST.\npublic class ClassNode extends AnnotatedNode;\n// Abstract base class for any GroovyCodeVisitor which by default just walks the code and expression tree\npublic abstract class CodeVisitorSupport extends Object implements GroovyCodeVisitor;\n// Represents the entire contents of a compilation step which consists of one or more ModuleNode instances.\npublic class CompileUnit extends Object implements NodeMetaDataHandler;\n// Represents a constructor declaration\npublic class ConstructorNode extends MethodNode;\n// \npublic class DynamicVariable extends Object implements Variable;\n// Represents the anonymous inner class for an enum constant.\npublic class EnumConstantClassNode extends InnerClassNode;\n// Represents a field (member variable)\npublic class FieldNode extends AnnotatedNode implements Variable;\n// This class is used to describe generic type signatures for ClassNodes.\npublic class GenericsType extends ASTNode;\n// Represents GenericsType name.\npublic static class GenericsType.GenericsTypeName extends Object;\n// A special visitor for working with the structure of a class.\npublic interface GroovyClassVisitor;\n// An implementation of the visitor pattern for working with ASTNodes.\npublic interface GroovyCodeVisitor;\n// \npublic class GroovyCodeVisitorAdapter extends Object implements GroovyCodeVisitor;\n// Represents an import statement.\npublic class ImportNode extends AnnotatedNode;\n// Represents an inner class declaration\npublic class InnerClassNode extends ClassNode;\n", "des": "Groovy AST nodes for the syntax of the language"}
{"index": 1328, "repo": "groovy-all-4.0.13", "code": "package expr\n\n// Represents an annotation \"constant\" that may appear in annotation attributes (mainly used as a marker).\npublic class AnnotationConstantExpression extends ConstantExpression;\n// Represents one or more arguments being passed into a method\npublic class ArgumentListExpression extends TupleExpression;\n// Represents an array object construction.\npublic class ArrayExpression extends Expression;\n// Represents an attribute access (accessing the field of a class) such as the expression \"foo.@bar\".\npublic class AttributeExpression extends PropertyExpression;\n// Represents two expressions and an operation\npublic class BinaryExpression extends Expression;\n// \npublic class BitwiseNegationExpression extends Expression;\n// Represents a boolean expression\npublic class BooleanExpression extends Expression;\n// Represents a typecast expression.\npublic class CastExpression extends Expression;\n// Represents access to a Java/Groovy class in an expression, such as when invoking a static method or accessing a static type\npublic class ClassExpression extends Expression;\n// Represents a closure expression such as\npublic class ClosureExpression extends Expression;\n// This class represents a list of expressions used to create closures.\npublic class ClosureListExpression extends ListExpression;\n// Represents a constant expression such as null, true, false.\npublic class ConstantExpression extends Expression;\n// A constructor call.\npublic class ConstructorCallExpression extends Expression implements MethodCall;\n// Represents one or more local variables.\npublic class DeclarationExpression extends BinaryExpression;\n// Represents a short ternary expression x ?: y, which is equal to\npublic class ElvisOperatorExpression extends TernaryExpression;\n// Placeholder for an empty expression.\npublic class EmptyExpression extends Expression;\n// Represents a base class for expressions which evaluate as an object\npublic abstract class Expression extends AnnotatedNode;\n// Provides a way to transform expressions\npublic interface ExpressionTransformer;\n// Represents a field access such as the expression \"this.foo\".\npublic class FieldExpression extends Expression;\n// Represents a String expression which contains embedded values inside it such as \"hello there ${user} how are you\" which is expanded lazily\npublic class GStringExpression extends Expression;\n// Represents a lambda expression such as one of these:\npublic class LambdaExpression extends ClosureExpression;\n", "des": "AST nodes for Groovy expressions"}
{"index": 1329, "repo": "groovy-all-4.0.13", "code": "package stmt\n\n// Represents an assert statement.\npublic class AssertStatement extends Statement;\n// A list of statements and a scope.\npublic class BlockStatement extends Statement;\n// Represents a break statement in a switch or loop statement\npublic class BreakStatement extends Statement;\n// Represents a case statement in a switch statement\npublic class CaseStatement extends Statement;\n// Represents a catch (Exception var) { } statement\npublic class CatchStatement extends Statement;\n// Represents a continue statement in a loop statement\npublic class ContinueStatement extends Statement;\n// Represents a do { ...\npublic class DoWhileStatement extends Statement implements LoopingStatement;\n// \npublic class EmptyStatement extends Statement;\n// A simple statement such as a method call where the return value is ignored\npublic class ExpressionStatement extends Statement;\n// Represents a standard for loop in Groovy\npublic class ForStatement extends Statement implements LoopingStatement;\n// Represents an if (condition) { ...\npublic class IfStatement extends Statement;\n// This is an AST Node that provides some sort of looping mechanism.\npublic interface LoopingStatement;\n// A return statement\npublic class ReturnStatement extends Statement;\n// Base class for any statement.\npublic class Statement extends ASTNode;\n// Represents a switch (object) { case value: ...\npublic class SwitchStatement extends Statement;\n// Represents a synchronized statement\npublic class SynchronizedStatement extends Statement;\n// Represents a throw statement\npublic class ThrowStatement extends Statement;\n// Represents a try { ...\npublic class TryCatchStatement extends Statement;\n// Represents a while (condition) { ...\npublic class WhileStatement extends Statement implements LoopingStatement;\n", "des": "AST nodes for Groovy statements"}
{"index": 1330, "repo": "groovy-all-4.0.13", "code": "package classgen\n\n// An Annotation visitor responsible for: reading annotation metadata (@Retention, @Target, attribute types) verify that an AnnotationNode conforms to annotation meta enhancing an AnnotationNode AST to reflect real annotation meta\npublic class AnnotationVisitor extends Object;\n// Generates Java class versions of Groovy classes using ASM.\npublic class AsmClassGenerator extends ClassGenerator;\n// Represents some custom bytecode generation by the compiler.\npublic abstract class BytecodeExpression extends Expression;\n// Helper class used by the class generator.\npublic abstract class BytecodeInstruction extends Object;\n// This class represents a sequence of BytecodeInstructions or ASTNodes.\npublic class BytecodeSequence extends Statement;\n// Checks that a class satisfies various conditions including: Incorrect class or method access modifiers No abstract methods appear in a non-abstract class Existence and correct visibility for inherited members Invalid attempts to override final members\npublic class ClassCompletionVerifier extends ClassCodeVisitorSupport;\n// Abstract base class for generator of Java class versions of Groovy AST classes\npublic abstract class ClassGenerator extends ClassCodeVisitorSupport;\n// An exception thrown by the class generator\npublic class ClassGeneratorException extends RuntimeException;\n// To generate a class that has all the fields and methods, except that fields are not initialized and methods are empty.\npublic class DummyClassGenerator extends ClassGenerator;\n// Enums have a parent constructor with two arguments from java.lang.Enum.\npublic class EnumCompletionVisitor extends ClassCodeVisitorSupport;\n// \npublic class EnumVisitor extends ClassCodeVisitorSupport;\n// A specialized Groovy AST visitor meant to perform additional verifications upon the current AST.\npublic class ExtendedVerifier extends ClassCodeVisitorSupport;\n// \npublic class FinalVariableAnalyzer extends ClassCodeVisitorSupport;\n// \npublic static interface FinalVariableAnalyzer.VariableNotFinalCallback;\n// A context shared across generations of a class and its inner classes.\npublic class GeneratorContext extends Object;\n// \npublic class InnerClassCompletionVisitor extends InnerClassVisitorHelper;\n// \npublic class InnerClassVisitor extends InnerClassVisitorHelper;\n// \npublic abstract class InnerClassVisitorHelper extends ClassCodeVisitorSupport;\n// Utility class to add return statements.\npublic class ReturnAdder extends Object;\n// \n@FunctionalInterface public static interface ReturnAdder.ReturnStatementListener;\n", "des": "Generates Java classes for Groovy classes using ASM."}
{"index": 1331, "repo": "groovy-all-4.0.13", "code": "package asm\n\n// \npublic class AssertionWriter extends Object;\n// Binary write operations specialised for Booleans\npublic class BinaryBooleanExpressionHelper extends BinaryIntExpressionHelper;\n// \npublic class BinaryDoubleExpressionHelper extends BinaryLongExpressionHelper;\n// \npublic class BinaryExpressionHelper extends Object;\n// This class is for internal use only! This class will dispatch to the right type adapters according to the kind of binary expression that is provided.\npublic class BinaryExpressionMultiTypeDispatcher extends BinaryExpressionHelper;\n// Base class for writing primitive typed operations\npublic abstract class BinaryExpressionWriter extends Object;\n// \npublic class BinaryFloatExpressionHelper extends BinaryExpressionWriter;\n// \npublic class BinaryIntExpressionHelper extends BinaryExpressionWriter;\n// \npublic class BinaryLongExpressionHelper extends BinaryExpressionWriter;\n// \npublic class BinaryObjectExpressionHelper extends BinaryExpressionWriter;\n// A utility class which can be used in test cases to dump generated bytecode.\npublic class BytecodeDumper extends Object implements BytecodeProcessor;\n// A helper class for bytecode generation with AsmClassGenerator.\npublic class BytecodeHelper extends Object;\n// Represents compile time variable metadata while compiling a method.\npublic class BytecodeVariable extends Object;\n// This class represents non-public API used by AsmClassGenerator.\npublic class CallSiteWriter extends Object;\n// \npublic class ClosureWriter extends Object;\n// \nprotected static class ClosureWriter.CorrectAccessedVariableVisitor extends CodeVisitorSupport;\n// \nprotected static interface ClosureWriter.UseExistingReference;\n// Manages different aspects of the code of a code block like handling labels, defining variables, and scopes.\npublic class CompileStack extends Object;\n// \npublic static class CompileStack.BlockRecorder extends Object;\n// \nprotected static class CompileStack.LabelRange extends Object;\n// This class will delegate all calls to a WriterController given in the constructor.\npublic class DelegatingController extends WriterController;\n// Helper class that takes an Expression and if visited will load it normally, storing the result in a helper variable, which then can be requested after the visit is completed.\npublic class ExpressionAsVariableSlot extends BytecodeExpression;\n// \npublic class InvocationWriter extends Object;\n// \npublic class LambdaWriter extends ClosureWriter;\n", "des": "Helper classes for ASMClassGenerator."}
{"index": 1332, "repo": "groovy-all-4.0.13", "code": "package control\n\n// Resolves constants in annotation definitions.\npublic class AnnotationConstantsVisitor extends ClassCodeVisitorSupport;\n// Stores state information about global AST transformations applied to a compilation unit.\npublic class ASTTransformationsContext extends Object;\n// \npublic interface BytecodeProcessor;\n// This class is used as a pluggable way to resolve class names.\npublic class ClassNodeResolver extends Object;\n// Helper class to return either a SourceUnit or ClassNode.\npublic static class ClassNodeResolver.LookupResult extends Object;\n// Thrown when compilation fails from source errors.\npublic class CompilationFailedException extends GroovyRuntimeException;\n// The CompilationUnit collects all compilation data as it is generated by the compiler system.\npublic class CompilationUnit extends ProcessingUnit;\n// A callback interface you can use during the classgen phase of compilation as the compiler traverses the ClassNode tree.\n@FunctionalInterface public static interface CompilationUnit.ClassgenCallback;\n// \n@Deprecated public abstract static class CompilationUnit.GroovyClassOperation extends Object implements CompilationUnit.IGroovyClassOperation;\n// \n@FunctionalInterface public static interface CompilationUnit.IGroovyClassOperation;\n// \n@FunctionalInterface public static interface CompilationUnit.IPrimaryClassNodeOperation;\n// \n@FunctionalInterface public static interface CompilationUnit.ISourceUnitOperation;\n// \n@Deprecated public abstract static class CompilationUnit.PrimaryClassNodeOperation extends Object implements CompilationUnit.IPrimaryClassNodeOperation;\n// A callback interface you can use to get a callback after every unit of the compile process.\n@FunctionalInterface public static interface CompilationUnit.ProgressCallback;\n// \n@Deprecated public abstract static class CompilationUnit.SourceUnitOperation extends Object implements CompilationUnit.ISourceUnitOperation;\n// The phases of the GroovyCompiler.\npublic enum CompilePhase extends Enum<CompilePhase>;\n// Compilation control flags and coordination stuff.\npublic class CompilerConfiguration extends Object;\n// Thrown when configuration data is invalid.\npublic class ConfigurationException extends RuntimeException implements GroovyExceptionInterface;\n// A base class for collecting messages and errors during processing.\npublic class ErrorCollector extends Object implements Serializable;\n// Verify correct usage of generics.\npublic class GenericsVisitor extends ClassCodeVisitorSupport;\n// An interface for things that need to be cleaned up after operations complete.\npublic interface HasCleanup;\n", "des": "Compiler control classes."}
{"index": 1333, "repo": "groovy-all-4.0.13", "code": "package io\n\n// For ReaderSources that can choose a parent class, a base that provides common functionality.\npublic abstract class AbstractReaderSource extends Object implements ReaderSource;\n// A ReaderSource for source files.\npublic class FileReaderSource extends AbstractReaderSource;\n// A ReaderSource for source strings.\npublic class InputStreamReaderSource extends AbstractReaderSource;\n// A Writer that eats its input.\npublic class NullWriter extends Writer;\n// An interface for things that can supply (and potentially resupply) a Reader on a source stream.\npublic interface ReaderSource extends HasCleanup;\n// A ReaderSource for source strings.\npublic class StringReaderSource extends AbstractReaderSource;\n// A ReaderSource for source files hosted at a URL.\npublic class URLReaderSource extends AbstractReaderSource;\n", "des": "Internal classes for Groovier Input/Output."}
{"index": 1334, "repo": "groovy-all-4.0.13", "code": "package messages\n\n// A class for error messages produced by the parser system.\npublic class ExceptionMessage extends Message;\n// A base class for compilation messages.\npublic class LocatedMessage extends SimpleMessage;\n// A base class for compilation messages.\npublic abstract class Message extends Object;\n// A base class for compilation messages.\npublic class SimpleMessage extends Message;\n// A class for error messages produced by the parser system.\npublic class SyntaxErrorMessage extends Message;\n// A class for warning messages.\npublic class WarningMessage extends LocatedMessage;\n", "des": "Error message classes."}
{"index": 1335, "repo": "groovy-all-4.0.13", "code": "package groovydoc\n\n// \npublic interface GroovyAnnotationRef;\n// \npublic interface GroovyClassDoc extends GroovyType, GroovyProgramElementDoc;\n// \npublic interface GroovyConstructorDoc extends GroovyExecutableMemberDoc;\n// \npublic interface GroovyDoc extends Comparable<GroovyDoc>;\n// \npublic interface GroovyDocErrorReporter;\n// \npublic interface GroovyExecutableMemberDoc extends GroovyMemberDoc;\n// \npublic interface GroovyFieldDoc extends GroovyMemberDoc;\n// \npublic interface GroovyMemberDoc extends GroovyProgramElementDoc;\n// \npublic interface GroovyMethodDoc extends GroovyExecutableMemberDoc;\n// \npublic interface GroovyPackageDoc extends GroovyDoc;\n// \npublic interface GroovyParameter;\n// \npublic interface GroovyProgramElementDoc extends GroovyDoc;\n// \npublic interface GroovyRootDoc extends GroovyDoc, GroovyDocErrorReporter;\n// \npublic interface GroovyTag;\n// \npublic interface GroovyType;\n", "des": "GroovyDoc internal classes."}
{"index": 1336, "repo": "groovy-all-4.0.13", "code": "package reflection\n\n// \npublic class CacheAccessControlException extends GroovyRuntimeException;\n// \npublic class CachedClass extends Object;\n// \npublic static class CachedClass.CachedMethodComparatorByName extends Object implements Comparator<CachedMethod>;\n// \npublic static class CachedClass.CachedMethodComparatorWithString extends Object implements Comparator;\n// \npublic class CachedConstructor extends ParameterTypes;\n// \npublic class CachedField extends MetaProperty;\n// \npublic class CachedMethod extends MetaMethod implements Comparable;\n// Handle for all information we want to keep about the class\npublic class ClassInfo extends Object implements Finalizable;\n// \npublic static interface ClassInfo.ClassInfoAction;\n// \npublic class ClassLoaderForClassArtifacts extends ClassLoader;\n// \npublic abstract class GeneratedMetaMethod extends MetaMethod;\n// \npublic static class GeneratedMetaMethod.DgmMethodRecord extends Object implements Serializable;\n// \npublic static class GeneratedMetaMethod.Proxy extends GeneratedMetaMethod;\n// Abstraction for Java version dependent ClassValue implementations.\npublic interface GroovyClassValue<T>;\n// \npublic static interface GroovyClassValue.ComputeValue<T>;\n// \npublic class MixinInMetaClass extends Object;\n// \npublic class ParameterTypes extends Object;\n// \npublic class ReflectionCache extends Object;\n// This class contains utility methods to determine which class called the current class to multiple levels of depth.\npublic class ReflectionUtils extends Object;\n// Special class loader, which when running on Sun VM allows to generate accessor classes for any method\npublic class SunClassLoader extends ClassLoader;\n", "des": "Internal classes for assisting with reflection."}
{"index": 1337, "repo": "groovy-all-4.0.13", "code": "package runtime\n\n// \npublic abstract class AbstractComparator<T> extends Object implements Comparator<T>;\n// Utilities for handling array types\npublic class ArrayTypeUtils extends Object;\n// This is a generated class used internally during the writing of bytecode within the CallSiteWriter logic.\npublic class ArrayUtil extends Object;\n// This class contains methods special to optimizations used directly from bytecode in Groovy 1.8\npublic class BytecodeInterface8 extends Object;\n// A wrapper for Closure to support composition.\npublic final class ComposedClosure<V> extends Closure<V>;\n// This class is a general adapter to map a call to a Java interface to a given delegate.\npublic abstract class ConversionHandler extends Object implements InvocationHandler, Serializable;\n// This class is a general adapter to adapt a closure to any Java interface.\npublic class ConvertedClosure extends ConversionHandler implements Serializable;\n// This class is a general adapter to adapt a map of closures to any Java interface.\npublic class ConvertedMap extends ConversionHandler;\n// A wrapper for Closure to support currying.\npublic final class CurriedClosure<V> extends Closure<V>;\n// A default implementation of MethodKey\npublic class DefaultCachedMethodKey extends MethodKey;\n// This class defines new groovy methods which appear on normal JDK classes inside the Groovy environment.\npublic class DefaultGroovyMethods extends DefaultGroovyMethodsSupport;\n// Support methods for DefaultGroovyMethods and PluginDefaultMethods.\npublic class DefaultGroovyMethodsSupport extends Object;\n// This class defines all the new static groovy methods which appear on normal JDK classes inside the Groovy environment.\npublic class DefaultGroovyStaticMethods extends Object;\n// A default implementation of MethodKey\npublic class DefaultMethodKey extends MethodKey;\n// This class defines all the encoding/decoding groovy methods which enhance the normal JDK classes when inside the Groovy environment.\npublic class EncodingGroovyMethods extends Object;\n// Keep this constant in a separate file as it is troublesome for Antlr to parse for doc purposes.\npublic class EncodingGroovyMethodsSupport extends Object;\n// Stream writer which flushes after each write operation.\npublic class FlushingStreamWriter extends OutputStreamWriter;\n// Formatting methods\npublic class FormatHelper extends Object;\n// Marker interface to identify closures generated by the groovy compiler.\npublic interface GeneratedClosure;\n", "des": "Runtime classes for Groovy - whether the dynamic interpreter is being used, the compiler or the bytecode generator."}
{"index": 1338, "repo": "groovy-all-4.0.13", "code": "package metaclass\n\n// A metaclass for closures generated by the Groovy compiler.\npublic final class ClosureMetaClass extends MetaClassImpl;\n// A MetaMethod that accepts a closure in the constructor which is invoked when the MetaMethod is called.\npublic class ClosureMetaMethod extends MetaMethod implements ClosureInvokingMethod;\n// This class represents a MetaMethod that is a closure that pretends to be a static method.\npublic class ClosureStaticMetaMethod extends MetaMethod implements ClosureInvokingMethod;\n// A hash table that supports mostly-concurrent reading, but exclusive writing.\npublic class ConcurrentReaderHashMap extends AbstractMap implements Cloneable, Serializable;\n// A Serializable class for barrier lock\nprotected static class ConcurrentReaderHashMap.BarrierLock extends Object implements Serializable;\n// ConcurrentReaderHashMap collision list entry.\nprotected static class ConcurrentReaderHashMap.Entry extends Object implements Map.Entry;\n// WARNING: This class is for internal use only! We use this class to store information about if a default MetaClass is used for certain primitives.\npublic class DefaultMetaClassInfo extends Object;\n// \npublic static class DefaultMetaClassInfo.ConstantMetaClassVersioning extends Object;\n// A registry of MetaClass instances which caches introspection and reflection information and allows methods to be dynamically added to existing classes at runtime\npublic class MetaClassRegistryImpl extends Object implements MetaClassRegistry;\n// \npublic class MetaMethodIndex extends Object;\n// \npublic static class MetaMethodIndex.CacheEntry extends Object;\n// \npublic static class MetaMethodIndex.Entry extends Object;\n// \npublic static interface MetaMethodIndex.EntryIterator;\n// \npublic static class MetaMethodIndex.Header extends Object;\n// Some reflection helper methods\npublic class MethodHelper extends Object;\n// Wrapper for a method for a property get or set.\npublic class MethodMetaProperty extends MetaProperty;\n// Wrapper for a method realizing the property getter.\npublic static class MethodMetaProperty.GetBeanMethodMetaProperty extends MethodMetaProperty;\n// Wrapper for a method realizing the property get.\npublic static class MethodMetaProperty.GetMethodMetaProperty extends MethodMetaProperty;\n// This exception is thrown if the runtime is unable to select a method.\npublic class MethodSelectionException extends GroovyRuntimeException;\n// \npublic class MissingMethodExceptionNoStack extends MissingMethodException;\n", "des": "Internal classes related to Groovy's metaclass implementation."}
{"index": 1339, "repo": "groovy-all-4.0.13", "code": "package typehandling\n\n// BigDecimal NumberMath operations\npublic final class BigDecimalMath extends NumberMath;\n// BigInteger NumberMath operations\npublic final class BigIntegerMath extends NumberMath;\n// Class providing various type conversions, coercions and boxing/unboxing operations.\npublic class DefaultTypeTransformation extends Object;\n// FloatingPoint (Double and Float) NumberMath operations\npublic final class FloatingPointMath extends NumberMath;\n// \npublic class GroovyCastException extends ClassCastException;\n// Integer NumberMath operations\npublic final class IntegerMath extends NumberMath;\n// Long NumberMath operations\npublic final class LongMath extends NumberMath;\n// Stateless objects used to perform math on the various Number subclasses.\npublic abstract class NumberMath extends Object;\n// \npublic class NumberMathModificationInfo extends Object;\n// Class providing various short paths for type conversions.\npublic class ShortTypeHandling extends Object;\n", "des": "Classes used to execute special actions based on the type."}
{"index": 1340, "repo": "groovy-all-4.0.13", "code": "package wrappers\n\n// \npublic class BooleanWrapper extends PojoWrapper;\n// \npublic class ByteWrapper extends PojoWrapper;\n// \npublic class CharWrapper extends PojoWrapper;\n// \npublic class DoubleWrapper extends PojoWrapper;\n// \npublic class FloatWrapper extends PojoWrapper;\n// \npublic class GroovyObjectWrapper extends Wrapper;\n// \npublic class IntWrapper extends PojoWrapper;\n// \npublic class LongWrapper extends PojoWrapper;\n// \npublic class PojoWrapper extends Wrapper;\n// \npublic class ShortWrapper extends PojoWrapper;\n// \npublic abstract class Wrapper extends Object implements GroovyObject;\n", "des": "Groovy wrapper classes for primitive types."}
{"index": 1341, "repo": "groovy-all-4.0.13", "code": "package syntax\n\n// A common base class of AST helper methods which can be shared across the classic and new parsers\npublic class ASTHelper extends Object;\n// An abstract base class for nodes in the concrete syntax tree that is the result of parsing.\npublic abstract class CSTNode extends Object;\n// Helper class for processing Groovy numeric literals.\npublic class Numbers extends Object;\n// \npublic class ParserException extends TokenException;\n// Encapsulates non-specific i/o exceptions.\npublic class ReadException extends GroovyException;\n// A syntax reduction, produced by the Parser.\npublic class Reduction extends CSTNode;\n// A helper class to allow parser exceptions to be thrown anywhere in the code.\npublic class RuntimeParserException extends GroovyRuntimeException;\n// Base exception indicating a syntax error.\npublic class SyntaxException extends GroovyException;\n// A CSTNode produced by the Lexer.\npublic class Token extends CSTNode;\n// \npublic class TokenException extends SyntaxException;\n// \npublic class TokenMismatchException extends TokenException;\n// Utility methods for working with Tokens.\npublic class TokenUtil extends Object;\n// Typing information for the CST system.\npublic class Types extends Object;\n", "des": "Lexer, parser and trees."}
{"index": 1342, "repo": "groovy-all-4.0.13", "code": "package tools\n\n// A convenience front end for getting standard compilations done.\npublic class Compiler extends Object;\n// \npublic class DgmConverter extends Object;\n// Provides services for reporting compilation errors to the user.\npublic class ErrorReporter extends Object;\n// Command-line compiler (aka.\npublic class FileSystemCompiler extends Object;\n// \npublic static class FileSystemCompiler.CompilationOptions extends Object;\n// \npublic static class FileSystemCompiler.VersionProvider extends Object implements picocli.CommandLine.IVersionProvider;\n// \npublic class GrapeUtil extends Object;\n// \npublic class GroovyClass extends Object;\n// Helper class to initialize the Groovy runtime.\npublic class GroovyStarter extends Object;\n// Class used to configure a RootLoader from a stream or by using its methods.\npublic class LoaderConfiguration extends Object;\n// This ClassLoader should be used as root of class loaders.\npublic class RootLoader extends URLClassLoader;\n// \npublic class StringHelper extends Object;\n// Various utility functions for use in the compiler.\npublic abstract class Utilities extends Object;\n", "des": "Compiler entry points and miscellaneous development tools."}
{"index": 1343, "repo": "groovy-all-4.0.13", "code": "package groovydoc\n\n// \npublic class ArrayClassDocWrapper extends Object implements GroovyClassDoc;\n// \npublic class ClasspathResourceManager extends Object implements ResourceManager;\n// Represents a class not in the codebase being processed.\npublic class ExternalGroovyClassDoc extends Object implements GroovyClassDoc;\n// \npublic class FileOutputTool extends Object implements OutputTool;\n// \npublic class FileSystemResourceManager extends Object implements ResourceManager;\n// \npublic interface GroovyDocParserI;\n// Process Groovydoc templates.\npublic class GroovyDocTemplateEngine extends Object;\n// \npublic class GroovyDocTool extends Object;\n// Write GroovyDoc resources to destination.\npublic class GroovyDocWriter extends Object;\n// \npublic class GroovyRootDocBuilder extends Object;\n// Represents a link pair (href, packages).\npublic class LinkArgument extends Object;\n// \npublic class MockOutputTool extends Object implements OutputTool;\n// \npublic interface OutputTool;\n// \npublic interface ResourceManager;\n// \npublic class SimpleGroovyAbstractableElementDoc extends SimpleGroovyProgramElementDoc;\n// \npublic class SimpleGroovyAnnotationRef extends Object implements GroovyAnnotationRef;\n// \npublic class SimpleGroovyClassDoc extends SimpleGroovyAbstractableElementDoc implements GroovyClassDoc;\n// \npublic class SimpleGroovyConstructorDoc extends SimpleGroovyExecutableMemberDoc implements GroovyConstructorDoc;\n// \npublic class SimpleGroovyDoc extends Object implements GroovyDoc;\n// \npublic class SimpleGroovyExecutableMemberDoc extends SimpleGroovyMemberDoc implements GroovyExecutableMemberDoc;\n// \npublic class SimpleGroovyFieldDoc extends SimpleGroovyMemberDoc implements GroovyFieldDoc;\n// \npublic class SimpleGroovyMemberDoc extends SimpleGroovyAbstractableElementDoc implements GroovyMemberDoc;\n// \npublic class SimpleGroovyMethodDoc extends SimpleGroovyExecutableMemberDoc implements GroovyMethodDoc;\n// \npublic class SimpleGroovyPackageDoc extends SimpleGroovyDoc implements GroovyPackageDoc;\n// \npublic class SimpleGroovyParameter extends Object implements GroovyParameter;\n// \npublic class SimpleGroovyProgramElementDoc extends SimpleGroovyDoc implements GroovyProgramElementDoc;\n// \npublic class SimpleGroovyRootDoc extends SimpleGroovyDoc implements GroovyRootDoc;\n", "des": "GroovyDoc tool."}
{"index": 1344, "repo": "groovy-all-4.0.13", "code": "package javac\n\n// Compilation Unit capable of compiling Java source files.\npublic class JavaAwareCompilationUnit extends CompilationUnit;\n// \npublic class JavaAwareResolveVisitor extends ResolveVisitor;\n// \npublic class JavacCompilerFactory extends Object implements JavaCompilerFactory;\n// \npublic class JavacJavaCompiler extends Object implements JavaCompiler;\n// \npublic interface JavaCompiler;\n// \npublic interface JavaCompilerFactory;\n// Compilation unit to only generate stubs.\npublic class JavaStubCompilationUnit extends CompilationUnit;\n// \npublic class JavaStubGenerator extends Object;\n// Represents a Java source file in memory to compile\npublic class MemJavaFileObject extends SimpleJavaFileObject;\n// Represents a Java source file in file to compile\npublic class RawJavaFileObject extends SimpleJavaFileObject;\n", "des": "Classes related to the joint compiler."}
{"index": 1345, "repo": "groovy-all-4.0.13", "code": "package vmplugin\n\n// Interface to access VM version based actions.\npublic interface VMPlugin;\n// Factory class to get functionality based on the VM version.\npublic class VMPluginFactory extends Object;\n", "des": "JVM version specific classes."}
{"index": 1346, "repo": "spring-integration-kafka-6.1.2", "code": "package channel\n\n// Abstract MessageChannel backed by an Apache Kafka topic.\npublic abstract class AbstractKafkaChannel extends org.springframework.integration.channel.AbstractMessageChannel;\n// Pollable channel backed by an Apache Kafka topic.\npublic class PollableKafkaChannel extends AbstractKafkaChannel implements org.springframework.messaging.PollableChannel, org.springframework.integration.channel.ExecutorChannelInterceptorAware;\n// Publish/subscribe channel backed by an Apache Kafka topic.\npublic class PublishSubscribeKafkaChannel extends SubscribableKafkaChannel implements org.springframework.integration.channel.BroadcastCapableChannel;\n// Subscribable channel backed by an Apache Kafka topic.\npublic class SubscribableKafkaChannel extends AbstractKafkaChannel implements org.springframework.messaging.SubscribableChannel, org.springframework.integration.support.management.ManageableSmartLifecycle;\n", "des": "Provides classes related to message channel implementations for Apache Kafka."}
{"index": 1347, "repo": "spring-integration-kafka-6.1.2", "code": "package xml\n\n// Parser for a channel backed by an Apache Kafka topic.\npublic class KafkaChannelParser extends org.springframework.integration.config.xml.AbstractChannelParser;\n// Parser for the inbound channel adapter.\npublic class KafkaInboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n// Inbound gateway parser.\npublic class KafkaInboundGatewayParser extends org.springframework.integration.config.xml.AbstractInboundGatewayParser;\n// Parser for the message driven channel adapter.\npublic class KafkaMessageDrivenChannelAdapterParser extends org.springframework.integration.config.xml.AbstractChannelAdapterParser;\n// The namespace handler for the Apache Kafka namespace.\npublic class KafkaNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n// Parser for the outbound channel adapter.\npublic class KafkaOutboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractOutboundChannelAdapterParser;\n// Parser for the outbound gateway.\npublic class KafkaOutboundGatewayParser extends org.springframework.integration.config.xml.AbstractConsumerEndpointParser;\n// Utilities to assist with parsing XML.\npublic final class KafkaParsingUtils extends Object;\n", "des": "Provides parser classes to provide Xml namespace support for the Apache Kafka components."}
{"index": 1348, "repo": "spring-integration-kafka-6.1.2", "code": "package dsl\n\n// Spec for a message channel backed by an Apache Kafka topic.\npublic abstract class AbstractKafkaChannelSpec<S extends AbstractKafkaChannelSpec<S,C>,C extends AbstractKafkaChannel> extends org.springframework.integration.dsl.MessageChannelSpec<S,C>;\n// Factory class for Apache Kafka components.\npublic final class Kafka extends Object;\n// Spec for a polled Apache Kafka inbound channel adapter.\npublic class KafkaInboundChannelAdapterSpec<K,V> extends org.springframework.integration.dsl.MessageSourceSpec<KafkaInboundChannelAdapterSpec<K,V>,KafkaMessageSource<K,V>>;\n// A MessagingGatewaySpec implementation for the KafkaInboundGateway.\npublic class KafkaInboundGatewaySpec<K,V,R,S extends KafkaInboundGatewaySpec<K,V,R,S>> extends org.springframework.integration.dsl.MessagingGatewaySpec<S,KafkaInboundGateway<K,V,R>> implements org.springframework.integration.dsl.ComponentsRegistration;\n// A ConcurrentMessageListenerContainer configuration KafkaInboundGatewaySpec extension.\npublic static class KafkaInboundGatewaySpec.KafkaInboundGatewayListenerContainerSpec<K,V,R> extends KafkaInboundGatewaySpec<K,V,R,KafkaInboundGatewaySpec.KafkaInboundGatewayListenerContainerSpec<K,V,R>>;\n// A MessageProducerSpec implementation for the KafkaMessageDrivenChannelAdapter.\npublic class KafkaMessageDrivenChannelAdapterSpec<K,V,S extends KafkaMessageDrivenChannelAdapterSpec<K,V,S>> extends org.springframework.integration.dsl.MessageProducerSpec<S,KafkaMessageDrivenChannelAdapter<K,V>> implements org.springframework.integration.dsl.ComponentsRegistration;\n// A ConcurrentMessageListenerContainer configuration KafkaMessageDrivenChannelAdapterSpec extension.\npublic static class KafkaMessageDrivenChannelAdapterSpec.KafkaMessageDrivenChannelAdapterListenerContainerSpec<K,V> extends KafkaMessageDrivenChannelAdapterSpec<K,V,KafkaMessageDrivenChannelAdapterSpec.KafkaMessageDrivenChannelAdapterListenerContainerSpec<K,V>>;\n", "des": "Provides Spring Integration Java DSL Components support for Apache Kafka."}
{"index": 1349, "repo": "spring-integration-kafka-6.1.2", "code": "package inbound\n\n// An extension of ErrorMessagePublisher that can be used in a CommonErrorHandler for recovering Kafka delivery failures.\npublic class KafkaErrorSendingMessageRecoverer extends org.springframework.integration.core.ErrorMessagePublisher implements org.springframework.kafka.listener.ConsumerRecordRecoverer;\n// Implementations of this interface will generally support a retry template for retrying incoming deliveries and this supports adding common attributes to the retry context.\npublic interface KafkaInboundEndpoint;\n// Inbound gateway.\npublic class KafkaInboundGateway<K,V,R> extends org.springframework.integration.gateway.MessagingGatewaySupport implements KafkaInboundEndpoint, org.springframework.integration.core.Pausable, org.springframework.integration.context.OrderlyShutdownCapable;\n// Message-driven channel adapter.\npublic class KafkaMessageDrivenChannelAdapter<K,V> extends org.springframework.integration.endpoint.MessageProducerSupport implements KafkaInboundEndpoint, org.springframework.integration.context.OrderlyShutdownCapable, org.springframework.integration.core.Pausable;\n// The listener mode for the container, record or batch.\npublic static enum KafkaMessageDrivenChannelAdapter.ListenerMode extends Enum<KafkaMessageDrivenChannelAdapter.ListenerMode>;\n// Polled message source for Apache Kafka.\npublic class KafkaMessageSource<K,V> extends org.springframework.integration.endpoint.AbstractMessageSource<Object> implements org.springframework.integration.core.Pausable;\n// AcknowledgmentCallback for Kafka.\npublic static class KafkaMessageSource.KafkaAckCallback<K,V> extends Object implements org.springframework.integration.acks.AcknowledgmentCallback, org.springframework.kafka.support.Acknowledgment;\n// AcknowledgmentCallbackFactory for KafkaAckInfo.\npublic static record KafkaMessageSource.KafkaAckCallbackFactory<K,V>(org.springframework.kafka.listener.ConsumerProperties consumerProperties) extends Record implements org.springframework.integration.acks.AcknowledgmentCallbackFactory<KafkaMessageSource.KafkaAckInfo<K,V>>;\n", "des": "Provides Spring Integration inbound components for Apache Kafka."}
{"index": 1350, "repo": "spring-integration-kafka-6.1.2", "code": "package outbound\n\n// A Message Handler for Apache Kafka; when supplied with a ReplyingKafkaTemplate it is used as the handler in an outbound gateway.\npublic class KafkaProducerMessageHandler<K,V> extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler implements org.springframework.integration.support.management.ManageableLifecycle;\n// Creates a ProducerRecord from a Message and/or properties derived from configuration and/or the message.\n@FunctionalInterface public static interface KafkaProducerMessageHandler.ProducerRecordCreator<K,V>;\n", "des": "Provides Spring Integration outbound components for Apache Kafka."}
{"index": 1351, "repo": "spring-integration-kafka-6.1.2", "code": "package support\n\n// Headers specifically for Spring Integration components.\npublic final class KafkaIntegrationHeaders extends Object;\n// An exception that is the payload of an ErrorMessage when a send fails.\npublic class KafkaSendFailureException extends org.springframework.messaging.MessagingException;\n// ErrorMessageStrategy extension that adds the raw record as a header to the ErrorMessage.\npublic class RawRecordHeaderErrorMessageStrategy extends Object implements org.springframework.integration.support.ErrorMessageStrategy;\n", "des": "Provides support classes."}
{"index": 1352, "repo": "spring-integration-stream-6.1.2", "code": "package stream\n\n// A pollable source for receiving bytes from an InputStream.\npublic class ByteStreamReadingMessageSource extends org.springframework.integration.endpoint.AbstractMessageSource<byte[]>;\n// A MessageHandler that writes a byte array to an OutputStream.\npublic class ByteStreamWritingMessageHandler extends org.springframework.integration.handler.AbstractMessageHandler;\n// A pollable source for Readers.\npublic class CharacterStreamReadingMessageSource extends org.springframework.integration.endpoint.AbstractMessageSource<String> implements org.springframework.context.ApplicationEventPublisherAware;\n// A MessageHandler that writes characters to a Writer.\npublic class CharacterStreamWritingMessageHandler extends org.springframework.integration.handler.AbstractMessageHandler;\n// Application event published when EOF is detected on a stream.\npublic class StreamClosedEvent extends org.springframework.integration.events.IntegrationEvent;\n", "des": "Base package for stream support."}
{"index": 1353, "repo": "spring-integration-stream-6.1.2", "code": "package config\n\n// Parser for the <stdin-channel-adapter> element.\npublic class ConsoleInboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n// Parser for the \"stdout-\" and \"stderr-channel-adapter\" elements.\npublic class ConsoleOutboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractOutboundChannelAdapterParser;\n// \npublic class StreamNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n", "des": "Provides classes for configuration - parsers, namespace handlers."}
{"index": 1354, "repo": "spring-tx-6.0.11", "code": "package dao\n\n// Exception thrown on failure to acquire a lock during an update, for example during a \"select for update\" statement.\npublic class CannotAcquireLockException extends PessimisticLockingFailureException;\n// \n@Deprecated(since=\"6.0.3\") public class CannotSerializeTransactionException extends PessimisticLockingFailureException;\n// \n@Deprecated(since=\"6.0.3\") public class CleanupFailureDataAccessException extends NonTransientDataAccessException;\n// Exception thrown on various data access concurrency failures.\npublic class ConcurrencyFailureException extends TransientDataAccessException;\n// Root of the hierarchy of data access exceptions discussed in Expert One-On-One J2EE Design and Development.\npublic abstract class DataAccessException extends org.springframework.core.NestedRuntimeException;\n// Data access exception thrown when a resource fails completely: for example, if we can't connect to a database using JDBC.\npublic class DataAccessResourceFailureException extends NonTransientDataAccessResourceException;\n// Exception thrown when an attempt to insert or update data results in violation of an integrity constraint.\npublic class DataIntegrityViolationException extends NonTransientDataAccessException;\n// Exception thrown if certain expected data could not be retrieved, e.g.\npublic class DataRetrievalFailureException extends NonTransientDataAccessException;\n// \n@Deprecated(since=\"6.0.3\") public class DeadlockLoserDataAccessException extends PessimisticLockingFailureException;\n// Exception thrown when an attempt to insert or update data results in violation of a primary key or unique constraint.\npublic class DuplicateKeyException extends DataIntegrityViolationException;\n// Data access exception thrown when a result was expected to have at least one row (or element) but zero rows (or elements) were actually returned.\npublic class EmptyResultDataAccessException extends IncorrectResultSizeDataAccessException;\n// Data access exception thrown when a result was not of the expected size, for example when expecting a single row but getting 0 or more than 1 rows.\npublic class IncorrectResultSizeDataAccessException extends DataRetrievalFailureException;\n// Data access exception thrown when something unintended appears to have happened with an update, but the transaction hasn't already been rolled back.\npublic class IncorrectUpdateSemanticsDataAccessException extends InvalidDataAccessResourceUsageException;\n", "des": "Exception hierarchy enabling sophisticated error handling independent of the data access approach in use."}
{"index": 1355, "repo": "spring-tx-6.0.11", "code": "package annotation\n\n// Spring AOP exception translation aspect for use at Repository or DAO layer level.\npublic class PersistenceExceptionTranslationAdvisor extends org.springframework.aop.support.AbstractPointcutAdvisor;\n// Bean post-processor that automatically applies persistence exception translation to any bean marked with Spring's @Repository annotation, adding a corresponding PersistenceExceptionTranslationAdvisor to the exposed proxy (either an existing AOP proxy or a newly generated proxy that implements all of the target's interfaces).\npublic class PersistenceExceptionTranslationPostProcessor extends org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor;\n", "des": "Annotation support for DAOs."}
{"index": 1356, "repo": "spring-tx-6.0.11", "code": "package support\n\n// Implementation of PersistenceExceptionTranslator that supports chaining, allowing the addition of PersistenceExceptionTranslator instances in order.\npublic class ChainedPersistenceExceptionTranslator extends Object implements PersistenceExceptionTranslator;\n// Generic base class for DAOs, defining template methods for DAO initialization.\npublic abstract class DaoSupport extends Object implements org.springframework.beans.factory.InitializingBean;\n// Miscellaneous utility methods for DAO implementations.\npublic abstract class DataAccessUtils extends Object;\n// AOP Alliance MethodInterceptor that provides persistence exception translation based on a given PersistenceExceptionTranslator.\npublic class PersistenceExceptionTranslationInterceptor extends Object implements org.aopalliance.intercept.MethodInterceptor, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean;\n// Interface implemented by Spring integrations with data access technologies that throw runtime exceptions, such as JPA and Hibernate.\n@FunctionalInterface public interface PersistenceExceptionTranslator;\n", "des": "Support classes for DAO implementations, providing miscellaneous utility methods."}
{"index": 1357, "repo": "spring-tx-6.0.11", "code": "package endpoint\n\n// Abstract base implementation of the JCA 1.7 MessageEndpointFactory interface, providing transaction management capabilities as well as ClassLoader exposure for endpoint invocations.\npublic abstract class AbstractMessageEndpointFactory extends Object implements MessageEndpointFactory, org.springframework.beans.factory.BeanNameAware;\n// Generic implementation of the JCA 1.7 MessageEndpointFactory interface, providing transaction management capabilities for any kind of message listener object (e.g.\npublic class GenericMessageEndpointFactory extends AbstractMessageEndpointFactory;\n// Internal exception thrown when a ResourceException has been encountered during the endpoint invocation.\npublic static class GenericMessageEndpointFactory.InternalResourceException extends RuntimeException;\n// Generic bean that manages JCA 1.7 message endpoints within a Spring application context, activating and deactivating the endpoint as part of the application context's lifecycle.\npublic class GenericMessageEndpointManager extends Object implements org.springframework.context.SmartLifecycle, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n", "des": "This package provides a facility for generic JCA message endpoint management."}
{"index": 1358, "repo": "spring-tx-6.0.11", "code": "package support\n\n// FactoryBean that creates a local JCA connection factory in \"non-managed\" mode (as defined by the Java Connector Architecture specification).\npublic class LocalConnectionFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<Object>, org.springframework.beans.factory.InitializingBean;\n// FactoryBean that bootstraps the specified JCA 1.7 ResourceAdapter, starting it with a local BootstrapContext and exposing it for bean references.\npublic class ResourceAdapterFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<ResourceAdapter>, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// Simple implementation of the JCA 1.7 BootstrapContext interface, used for bootstrapping a JCA ResourceAdapter in a local environment.\npublic class SimpleBootstrapContext extends Object implements BootstrapContext;\n", "des": "Provides generic support classes for JCA usage within Spring, mainly for local setup of a JCA ResourceAdapter and/or ConnectionFactory."}
{"index": 1359, "repo": "spring-tx-6.0.11", "code": "package transaction\n\n// Exception thrown when a transaction can't be created using an underlying transaction API such as JTA.\npublic class CannotCreateTransactionException extends TransactionException;\n// Exception that represents a transaction failure caused by a heuristic decision on the side of the transaction coordinator.\npublic class HeuristicCompletionException extends TransactionException;\n// Exception thrown when the existence or non-existence of a transaction amounts to an illegal state according to the transaction propagation behavior that applies.\npublic class IllegalTransactionStateException extends TransactionUsageException;\n// Exception that gets thrown when an invalid isolation level is specified, i.e.\npublic class InvalidIsolationLevelException extends TransactionUsageException;\n// Exception that gets thrown when an invalid timeout is specified, that is, the specified timeout valid is out of range or the transaction manager implementation doesn't support timeouts.\npublic class InvalidTimeoutException extends TransactionUsageException;\n// Exception thrown when attempting to work with a nested transaction but nested transactions are not supported by the underlying backend.\npublic class NestedTransactionNotSupportedException extends CannotCreateTransactionException;\n// Exception thrown when an operation is attempted that relies on an existing transaction (such as setting rollback status) and there is no existing transaction.\npublic class NoTransactionException extends TransactionUsageException;\n// This is the central interface in Spring's imperative transaction infrastructure.\npublic interface PlatformTransactionManager extends TransactionManager;\n// Representation of an ongoing reactive transaction.\npublic interface ReactiveTransaction extends TransactionExecution;\n// This is the central interface in Spring's reactive transaction infrastructure.\npublic interface ReactiveTransactionManager extends TransactionManager;\n// Interface that specifies an API to programmatically manage transaction savepoints in a generic fashion.\npublic interface SavepointManager;\n// Interface that defines Spring-compliant transaction properties.\npublic interface TransactionDefinition;\n// Superclass for all transaction exceptions.\npublic abstract class TransactionException extends org.springframework.core.NestedRuntimeException;\n// Common representation of the current state of a transaction.\npublic interface TransactionExecution;\n// Marker interface for Spring transaction manager implementations, either traditional or reactive.\npublic interface TransactionManager;\n// Representation of the status of a transaction.\npublic interface TransactionStatus extends TransactionExecution, SavepointManager, Flushable;\n", "des": "Spring's core transaction management APIs (independent of any specific transaction management system); an exception hierarchy for Spring's transaction infrastructure; and transaction manager, definition, and status interfaces."}
{"index": 1360, "repo": "spring-tx-6.0.11", "code": "package annotation\n\n// Abstract base @Configuration class providing common structure for enabling Spring's annotation-driven transaction management capability.\n@Configuration public abstract class AbstractTransactionManagementConfiguration extends Object implements org.springframework.context.annotation.ImportAware;\n// Implementation of the TransactionAttributeSource interface for working with transaction metadata in JDK 1.5+ annotation format.\npublic class AnnotationTransactionAttributeSource extends AbstractFallbackTransactionAttributeSource implements Serializable;\n// Strategy implementation for parsing EJB3's TransactionAttribute annotation.\npublic class Ejb3TransactionAnnotationParser extends Object implements TransactionAnnotationParser, Serializable;\n// Enables Spring's annotation-driven transaction management capability, similar to the support found in Spring's <tx:*> XML namespace.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(TransactionManagementConfigurationSelector.class) public @interface EnableTransactionManagement;\n// Enumeration that represents transaction isolation levels for use with the @Transactional annotation, corresponding to the TransactionDefinition interface.\npublic enum Isolation extends Enum<Isolation>;\n// Strategy implementation for parsing JTA 1.2's Transactional annotation.\npublic class JtaTransactionAnnotationParser extends Object implements TransactionAnnotationParser, Serializable;\n// Enumeration that represents transaction propagation behaviors for use with the Transactional annotation, corresponding to the TransactionDefinition interface.\npublic enum Propagation extends Enum<Propagation>;\n// @Configuration class that registers the Spring infrastructure beans necessary to enable proxy-based annotation-driven transaction management.\n@Configuration(proxyBeanMethods=false) @Role(2) @ImportRuntimeHints(org.springframework.transaction.annotation.TransactionRuntimeHints.class) public class ProxyTransactionManagementConfiguration extends AbstractTransactionManagementConfiguration;\n// Strategy implementation for parsing Spring's Transactional annotation.\npublic class SpringTransactionAnnotationParser extends Object implements TransactionAnnotationParser, Serializable;\n// Describes a transaction attribute on an individual method or on a class.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Inherited @Documented @Reflective public @interface Transactional;\n// Strategy interface for parsing known transaction annotation types.\npublic interface TransactionAnnotationParser;\n// Selects which implementation of AbstractTransactionManagementConfiguration should be used based on the value of EnableTransactionManagement.mode() on the importing @Configuration class.\npublic class TransactionManagementConfigurationSelector extends org.springframework.context.annotation.AdviceModeImportSelector<EnableTransactionManagement>;\n", "des": "Spring's support for annotation-based transaction demarcation."}
{"index": 1361, "repo": "spring-tx-6.0.11", "code": "package config\n\n// Parser for the <tx:jta-transaction-manager/> XML configuration element.\npublic class JtaTransactionManagerBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;\n// \n@Deprecated(since=\"6.0\") public class JtaTransactionManagerFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<JtaTransactionManager>, org.springframework.beans.factory.InitializingBean;\n// Configuration constants for internal sharing across subpackages.\npublic abstract class TransactionManagementConfigUtils extends Object;\n// NamespaceHandler allowing for the configuration of declarative transaction management using either XML or using annotations.\npublic class TxNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Support package for declarative transaction configuration, with XML schema being the primary configuration format."}
{"index": 1362, "repo": "spring-tx-6.0.11", "code": "package event\n\n// An ApplicationListener that is invoked according to a TransactionPhase.\npublic interface TransactionalApplicationListener<E extends org.springframework.context.ApplicationEvent> extends org.springframework.context.ApplicationListener<E>, org.springframework.core.Ordered;\n// Callback to be invoked on synchronization-driven event processing, wrapping the target listener invocation (TransactionalApplicationListener.processEvent(E)).\npublic static interface TransactionalApplicationListener.SynchronizationCallback;\n// TransactionalApplicationListener adapter that delegates the processing of an event to a target ApplicationListener instance.\npublic class TransactionalApplicationListenerAdapter<E extends org.springframework.context.ApplicationEvent> extends Object implements TransactionalApplicationListener<E>, org.springframework.core.Ordered;\n// GenericApplicationListener adapter that delegates the processing of an event to a TransactionalEventListener annotated method.\npublic class TransactionalApplicationListenerMethodAdapter extends org.springframework.context.event.ApplicationListenerMethodAdapter implements TransactionalApplicationListener<org.springframework.context.ApplicationEvent>;\n// An EventListener that is invoked according to a TransactionPhase.\n@Target({METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @EventListener public @interface TransactionalEventListener;\n// EventListenerFactory implementation that handles TransactionalEventListener annotated methods.\npublic class TransactionalEventListenerFactory extends Object implements org.springframework.context.event.EventListenerFactory, org.springframework.core.Ordered;\n// The phase in which a transactional event listener applies.\npublic enum TransactionPhase extends Enum<TransactionPhase>;\n", "des": "Spring's support for listening to transaction events."}
{"index": 1363, "repo": "spring-tx-6.0.11", "code": "package interceptor\n\n// Abstract implementation of TransactionAttributeSource that caches attributes for methods and implements a fallback policy: 1.\npublic abstract class AbstractFallbackTransactionAttributeSource extends Object implements TransactionAttributeSource, org.springframework.context.EmbeddedValueResolverAware;\n// Advisor driven by a TransactionAttributeSource, used to include a transaction advice bean for methods that are transactional.\npublic class BeanFactoryTransactionAttributeSourceAdvisor extends org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor;\n// Composite TransactionAttributeSource implementation that iterates over a given array of TransactionAttributeSource instances.\npublic class CompositeTransactionAttributeSource extends Object implements TransactionAttributeSource, Serializable;\n// Spring's common transaction attribute implementation.\npublic class DefaultTransactionAttribute extends DefaultTransactionDefinition implements TransactionAttribute;\n// TransactionAttribute implementation that delegates all calls to a given target TransactionAttribute instance.\npublic abstract class DelegatingTransactionAttribute extends DelegatingTransactionDefinition implements TransactionAttribute, Serializable;\n// Very simple implementation of TransactionAttributeSource which will always return the same TransactionAttribute for all methods fed to it.\npublic class MatchAlwaysTransactionAttributeSource extends Object implements TransactionAttributeSource, Serializable;\n// Simple TransactionAttributeSource implementation that allows attributes to be stored per method in a Map.\npublic class MethodMapTransactionAttributeSource extends Object implements TransactionAttributeSource, org.springframework.context.EmbeddedValueResolverAware, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean;\n// Simple TransactionAttributeSource implementation that allows attributes to be matched by registered name.\npublic class NameMatchTransactionAttributeSource extends Object implements TransactionAttributeSource, org.springframework.context.EmbeddedValueResolverAware, org.springframework.beans.factory.InitializingBean, Serializable;\n// Tag subclass of RollbackRuleAttribute that has the opposite behavior to the RollbackRuleAttribute superclass.\npublic class NoRollbackRuleAttribute extends RollbackRuleAttribute;\n// Rule determining whether a given exception should cause a rollback.\npublic class RollbackRuleAttribute extends Object implements Serializable;\n// TransactionAttribute implementation that works out whether a given exception should cause transaction rollback by applying a number of rollback rules, both positive and negative.\npublic class RuleBasedTransactionAttribute extends DefaultTransactionAttribute implements Serializable;\n// A marker interface for manually created transactional proxies.\npublic interface TransactionalProxy extends org.springframework.aop.SpringProxy;\n", "des": "AOP-based solution for declarative transaction demarcation."}
{"index": 1364, "repo": "spring-tx-6.0.11", "code": "package jta\n\n// Adapter for a JTA Synchronization, invoking the afterCommit / afterCompletion callbacks of Spring TransactionSynchronization objects callbacks after the outer JTA transaction has completed.\npublic class JtaAfterCompletionSynchronization extends Object implements Synchronization;\n// PlatformTransactionManager implementation for JTA, delegating to a backend JTA provider.\npublic class JtaTransactionManager extends AbstractPlatformTransactionManager implements TransactionFactory, org.springframework.beans.factory.InitializingBean, Serializable;\n// JTA transaction object, representing a UserTransaction.\npublic class JtaTransactionObject extends Object implements SmartTransactionObject;\n// Adapter for a managed JTA Transaction handle, taking a JTA TransactionManager reference and creating a JTA Transaction handle for it.\npublic class ManagedTransactionAdapter extends Object implements Transaction;\n// Default implementation of the TransactionFactory strategy interface, simply wrapping a standard JTA TransactionManager.\npublic class SimpleTransactionFactory extends Object implements TransactionFactory;\n// Adapter that implements the JTA Synchronization interface delegating to an underlying Spring TransactionSynchronization.\npublic class SpringJtaSynchronizationAdapter extends Object implements Synchronization;\n// Strategy interface for creating JTA Transaction objects based on specified transactional characteristics.\npublic interface TransactionFactory;\n// Adapter for a JTA UserTransaction handle, taking a JTA TransactionManager reference and creating a JTA UserTransaction handle for it.\npublic class UserTransactionAdapter extends Object implements UserTransaction;\n", "des": "Transaction SPI implementation for JTA."}
{"index": 1365, "repo": "spring-tx-6.0.11", "code": "package reactive\n\n// Abstract base class that implements Spring's standard reactive transaction workflow, serving as basis for concrete platform transaction managers.\npublic abstract class AbstractReactiveTransactionManager extends Object implements ReactiveTransactionManager, Serializable;\n// Holder for suspended resources.\nprotected static final class AbstractReactiveTransactionManager.SuspendedResourcesHolder extends Object;\n// Default implementation of the ReactiveTransaction interface, used by AbstractReactiveTransactionManager.\npublic class GenericReactiveTransaction extends Object implements ReactiveTransaction;\n// TransactionSynchronization implementation that manages a resource object bound through TransactionSynchronizationManager.\npublic abstract class ReactiveResourceSynchronization<O,K> extends Object implements TransactionSynchronization;\n// Operator class that simplifies programmatic transaction demarcation and transaction exception handling.\npublic interface TransactionalOperator;\n// Callback interface for reactive transactional code.\n@FunctionalInterface public interface TransactionCallback<T>;\n// Mutable transaction context that encapsulates transactional synchronizations and resources in the scope of a single transaction.\npublic class TransactionContext extends Object;\n// Delegate to register and obtain transactional contexts.\npublic abstract class TransactionContextManager extends Object;\n// Interface for reactive transaction synchronization callbacks.\npublic interface TransactionSynchronization;\n// Central delegate that manages resources and transaction synchronizations per subscriber context.\npublic class TransactionSynchronizationManager extends Object;\n", "des": "Support classes for reactive transaction management."}
{"index": 1366, "repo": "spring-tx-6.0.11", "code": "package support\n\n// Abstract base class that implements Spring's standard transaction workflow, serving as basis for concrete platform transaction managers like JtaTransactionManager.\npublic abstract class AbstractPlatformTransactionManager extends Object implements PlatformTransactionManager, Serializable;\n// Holder for suspended resources.\nprotected static final class AbstractPlatformTransactionManager.SuspendedResourcesHolder extends Object;\n// Abstract base implementation of the TransactionStatus interface.\npublic abstract class AbstractTransactionStatus extends Object implements TransactionStatus;\n// Extension of the PlatformTransactionManager interface, exposing a method for executing a given callback within a transaction.\npublic interface CallbackPreferringPlatformTransactionManager extends PlatformTransactionManager;\n// Default implementation of the TransactionDefinition interface, offering bean-style configuration and sensible default values (PROPAGATION_REQUIRED, ISOLATION_DEFAULT, TIMEOUT_DEFAULT, readOnly=false).\npublic class DefaultTransactionDefinition extends Object implements TransactionDefinition, Serializable;\n// Default implementation of the TransactionStatus interface, used by AbstractPlatformTransactionManager.\npublic class DefaultTransactionStatus extends AbstractTransactionStatus;\n// TransactionDefinition implementation that delegates all calls to a given target TransactionDefinition instance.\npublic abstract class DelegatingTransactionDefinition extends Object implements TransactionDefinition, Serializable;\n// Generic interface to be implemented by resource holders.\npublic interface ResourceHolder;\n// Convenient base class for resource holders.\npublic abstract class ResourceHolderSupport extends Object implements ResourceHolder;\n// TransactionSynchronization implementation that manages a ResourceHolder bound through TransactionSynchronizationManager.\npublic abstract class ResourceHolderSynchronization<H extends ResourceHolder,K> extends Object implements TransactionSynchronization;\n// Extended variant of TransactionDefinition, indicating a resource transaction and in particular whether the transactional resource is ready for local optimizations.\npublic interface ResourceTransactionDefinition extends TransactionDefinition;\n// Extension of the PlatformTransactionManager interface, indicating a native resource transaction manager, operating on a single target resource.\npublic interface ResourceTransactionManager extends PlatformTransactionManager;\n// A simple transaction-backed Scope implementation, delegating to TransactionSynchronizationManager's resource binding mechanism.\npublic class SimpleTransactionScope extends Object implements org.springframework.beans.factory.config.Scope;\n// A simple TransactionStatus implementation.\npublic class SimpleTransactionStatus extends AbstractTransactionStatus;\n", "des": "Support classes for the org.springframework.transaction package."}
{"index": 1367, "repo": "wicket-devutils-10.0.0-M1", "code": "package inspector\n\n// A Wicket panel that shows interesting information about a given Wicket session.\npublic final class ApplicationView extends DevUtilsPanel;\n// Enhanced PageView which displays all Components and Behaviors of a Page in a TableTree representation.\npublic final class EnhancedPageView extends org.apache.wicket.markup.html.panel.GenericPanel<org.apache.wicket.Page>;\n// A page that shows interesting attributes of the Wicket environment, including the current session and the component tree for the current page.\npublic final class InspectorPage extends DevUtilsPage;\n// \npublic class LiveSessionsPage extends DevUtilsPage;\n// A listener that adds a special Behavior that measures the time needed by a component to render itself.\npublic class RenderPerformanceListener extends Object implements org.apache.wicket.application.IComponentInstantiationListener;\n// \npublic class RequestsPage extends DevUtilsPage;\n// Calculates\npublic class SessionSizeModel extends Object implements org.apache.wicket.model.IModel<org.apache.wicket.util.lang.Bytes>;\n// A Wicket panel that shows interesting information about a given Wicket session.\npublic final class SessionView extends DevUtilsPanel;\n", "des": "Classes that make debugging Wicket HTML applications easier."}
{"index": 1368, "repo": "log4j-over-slf4j-2.0.7", "code": "package log4j\n\n// Implement this interface for your own strategies for outputting log statements.\npublic interface Appender;\n// \npublic class AppenderSkeleton extends Object implements OptionHandler;\n// A minimal (nop) implementation of BasicConfigurator.\npublic class BasicConfigurator extends Object;\n// This class is a minimal implementation of the original org.apache.log4j.Category class (as found in log4j 1.2) by delegation of all calls to a Logger instance.\npublic class Category extends Object;\n// Skeleton implementation of ConsoleAppender\npublic class ConsoleAppender extends WriterAppender;\n// \npublic class FileAppender extends WriterAppender;\n// This class is a minimal implementation of the original Log4J class.\npublic class Layout extends Object;\n// Defines the minimum set of levels recognized by the system, that is OFF, FATAL, ERROR, WARN, INFO, DEBUG and ALL.\npublic class Level extends Priority implements Serializable;\n// This class is a minimal implementation of the original org.apache.log4j.Logger class (as found in log4j 1.2) delegating all calls to a Logger instance.\npublic class Logger extends Category;\n// This class is a minimal implementation of the original org.apache.log4j.LogManager class (as found in log4j 1.2) delegating all calls to SLF4J.\npublic class LogManager extends Object;\n// \npublic class MDC extends Object;\n// A log4j's NDC implemented in terms of SLF4J MDC primitives.\npublic class NDC extends Object;\n// This class is a minimal implementation of the original Log4J class.\npublic class PatternLayout extends Layout;\n// Refrain from using this class directly, use the Level class instead.\npublic class Priority extends Object;\n// A no-op implementation of PropertyConfigurator.\npublic class PropertyConfigurator extends Object implements Configurator;\n// This class is a minimal implementation of the original Log4J class.\npublic class RollingFileAppender extends Object;\n// \npublic class SimpleLayout extends Layout;\n// \npublic class WriterAppender extends AppenderSkeleton;\n", "des": "An rather minimal but sufficient implementation redirecting all calls to a log4j logger to a logback logger."}
{"index": 1369, "repo": "spring-boot-actuator-3.1.1", "code": "package amqp\n\n// Simple implementation of a HealthIndicator returning status information for the RabbitMQ messaging system.\npublic class RabbitHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for AMQP and RabbitMQ."}
{"index": 1370, "repo": "spring-boot-actuator-3.1.1", "code": "package audit\n\n// A value object representing an audit event: at a particular time, a particular user or agent carried out an action of a particular type.\npublic class AuditEvent extends Object implements Serializable;\n// Repository for AuditEvents.\npublic interface AuditEventRepository;\n// @Endpoint to expose audit events.\n@Endpoint(id=\"auditevents\") public class AuditEventsEndpoint extends Object;\n// Description of an application's audit events.\npublic static final class AuditEventsEndpoint.AuditEventsDescriptor extends Object implements OperationResponseBody;\n// In-memory AuditEventRepository implementation.\npublic class InMemoryAuditEventRepository extends Object implements AuditEventRepository;\n", "des": "Core actuator auditing classes."}
{"index": 1371, "repo": "spring-boot-actuator-3.1.1", "code": "package listener\n\n// Abstract ApplicationListener to handle AuditApplicationEvents.\npublic abstract class AbstractAuditListener extends Object implements org.springframework.context.ApplicationListener<AuditApplicationEvent>;\n// Spring ApplicationEvent to encapsulate AuditEvents.\npublic class AuditApplicationEvent extends org.springframework.context.ApplicationEvent;\n// The default AbstractAuditListener implementation.\npublic class AuditListener extends AbstractAuditListener;\n", "des": "Actuator auditing listeners."}
{"index": 1372, "repo": "spring-boot-actuator-3.1.1", "code": "package availability\n\n// A HealthIndicator that checks a specific AvailabilityState of the application.\npublic class AvailabilityStateHealthIndicator extends AbstractHealthIndicator;\n// Callback used to add status mappings.\npublic static interface AvailabilityStateHealthIndicator.StatusMappings<S extends org.springframework.boot.availability.AvailabilityState>;\n// A HealthIndicator that checks the LivenessState of the application.\npublic class LivenessStateHealthIndicator extends AvailabilityStateHealthIndicator;\n// A HealthIndicator that checks the ReadinessState of the application.\npublic class ReadinessStateHealthIndicator extends AvailabilityStateHealthIndicator;\n", "des": "Actuator support for application availability concerns."}
{"index": 1373, "repo": "spring-boot-actuator-3.1.1", "code": "package beans\n\n// @Endpoint to expose details of an application's beans, grouped by application context.\n@Endpoint(id=\"beans\") public class BeansEndpoint extends Object;\n// Description of a bean.\npublic static final class BeansEndpoint.BeanDescriptor extends Object;\n// Description of an application's beans.\npublic static final class BeansEndpoint.BeansDescriptor extends Object implements OperationResponseBody;\n// Description of an application context beans.\npublic static final class BeansEndpoint.ContextBeansDescriptor extends Object;\n", "des": "Actuator support relating to Spring Beans."}
{"index": 1374, "repo": "spring-boot-actuator-3.1.1", "code": "package cache\n\n// @Endpoint to expose available caches.\n@Endpoint(id=\"caches\") public class CachesEndpoint extends Object;\n// Description of a Cache.\npublic static class CachesEndpoint.CacheDescriptor extends Object implements OperationResponseBody;\n// Description of a Cache entry.\npublic static final class CachesEndpoint.CacheEntryDescriptor extends CachesEndpoint.CacheDescriptor;\n// Description of a CacheManager.\npublic static final class CachesEndpoint.CacheManagerDescriptor extends Object;\n// Description of the caches.\npublic static final class CachesEndpoint.CachesDescriptor extends Object implements OperationResponseBody;\n// @EndpointWebExtension for the CachesEndpoint.\n@EndpointWebExtension(endpoint=CachesEndpoint.class) public class CachesEndpointWebExtension extends Object;\n// Exception thrown when multiple caches exist with the same name.\npublic class NonUniqueCacheException extends RuntimeException;\n", "des": "Actuator support for caches."}
{"index": 1375, "repo": "spring-boot-actuator-3.1.1", "code": "package cassandra\n\n// Simple implementation of a HealthIndicator returning status information for Cassandra data stores.\npublic class CassandraDriverHealthIndicator extends AbstractHealthIndicator;\n// Simple implementation of a ReactiveHealthIndicator returning status information for Cassandra data stores.\npublic class CassandraDriverReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Cassandra."}
{"index": 1376, "repo": "spring-boot-actuator-3.1.1", "code": "package context\n\n// @Endpoint to shutdown the ApplicationContext.\n@Endpoint(id=\"shutdown\", enableByDefault=false) public class ShutdownEndpoint extends Object implements org.springframework.context.ApplicationContextAware;\n// Description of the shutdown.\npublic static class ShutdownEndpoint.ShutdownDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support relating to Spring Context."}
{"index": 1377, "repo": "spring-boot-actuator-3.1.1", "code": "package properties\n\n// @Endpoint to expose application properties from @ConfigurationProperties annotated beans.\n@Endpoint(id=\"configprops\") public class ConfigurationPropertiesReportEndpoint extends Object implements org.springframework.context.ApplicationContextAware;\n// Description of a @ConfigurationProperties bean.\npublic static final class ConfigurationPropertiesReportEndpoint.ConfigurationPropertiesBeanDescriptor extends Object;\n// Description of an application's @ConfigurationProperties beans.\npublic static final class ConfigurationPropertiesReportEndpoint.ConfigurationPropertiesDescriptor extends Object implements OperationResponseBody;\n// Description of an application context's @ConfigurationProperties beans.\npublic static final class ConfigurationPropertiesReportEndpoint.ContextConfigurationPropertiesDescriptor extends Object;\n// BeanSerializerModifier to return only relevant configuration properties.\nprotected static class ConfigurationPropertiesReportEndpoint.GenericSerializerModifier extends com.fasterxml.jackson.databind.ser.BeanSerializerModifier;\n// @EndpointWebExtension for the ConfigurationPropertiesReportEndpoint.\n@EndpointWebExtension(endpoint=ConfigurationPropertiesReportEndpoint.class) public class ConfigurationPropertiesReportEndpointWebExtension extends Object;\n", "des": "Actuator support relating to external configuration properties."}
{"index": 1378, "repo": "spring-boot-actuator-3.1.1", "code": "package couchbase\n\n// HealthIndicator for Couchbase.\npublic class CouchbaseHealthIndicator extends AbstractHealthIndicator;\n// A ReactiveHealthIndicator for Couchbase.\npublic class CouchbaseReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Couchbase."}
{"index": 1379, "repo": "spring-boot-actuator-3.1.1", "code": "package elasticsearch\n\n// HealthIndicator for an Elasticsearch cluster using a ReactiveElasticsearchClient.\npublic class ElasticsearchReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Elasticsearch dependent on Spring Data."}
{"index": 1380, "repo": "spring-boot-actuator-3.1.1", "code": "package mongo\n\n// Simple implementation of a HealthIndicator returning status information for Mongo data stores.\npublic class MongoHealthIndicator extends AbstractHealthIndicator;\n// A ReactiveHealthIndicator for Mongo.\npublic class MongoReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Mongo dependent on Spring Data."}
{"index": 1381, "repo": "spring-boot-actuator-3.1.1", "code": "package redis\n\n// Simple implementation of a HealthIndicator returning status information for Redis data stores.\npublic class RedisHealthIndicator extends AbstractHealthIndicator;\n// A ReactiveHealthIndicator for Redis.\npublic class RedisReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Redis dependent on Spring Data."}
{"index": 1382, "repo": "spring-boot-actuator-3.1.1", "code": "package elasticsearch\n\n// HealthIndicator for an Elasticsearch cluster using a RestClient.\npublic class ElasticsearchRestClientHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for Elasticsearch."}
{"index": 1383, "repo": "spring-boot-actuator-3.1.1", "code": "package endpoint\n\n// Abstract base class for ExposableEndpoint implementations.\npublic abstract class AbstractExposableEndpoint<O extends Operation> extends Object implements ExposableEndpoint<O>;\n// API versions supported for the actuator API.\npublic enum ApiVersion extends Enum<ApiVersion> implements Producible<ApiVersion>;\n// Strategy class that can be used to filter endpoints.\n@FunctionalInterface public interface EndpointFilter<E extends ExposableEndpoint<?>>;\n// An identifier for an actuator endpoint.\npublic final class EndpointId extends Object;\n// Provides access to a collection of endpoints.\n@FunctionalInterface public interface EndpointsSupplier<E extends ExposableEndpoint<?>>;\n// Information describing an endpoint that can be exposed in some technology specific way.\npublic interface ExposableEndpoint<O extends Operation>;\n// Indicate that an endpoint request is invalid.\npublic class InvalidEndpointRequestException extends RuntimeException;\n// The context for the invocation of an operation.\npublic class InvocationContext extends Object;\n// An operation on an endpoint.\npublic interface Operation;\n// Resolver for an argument of an Operation.\npublic interface OperationArgumentResolver;\n// Tagging interface used to indicate that an operation result is intended to be returned in the body of the response.\npublic interface OperationResponseBody;\n// An enumeration of the different types of operation supported by an endpoint.\npublic enum OperationType extends Enum<OperationType>;\n// Interface that can be implemented by any Enum that represents a finite set of producible mime-types.\npublic interface Producible<E extends Enum<E> & Producible<E>>;\n// An OperationArgumentResolver for producible enums.\npublic class ProducibleOperationArgumentResolver extends Object implements OperationArgumentResolver;\n// Value object that represents the data that can be used by a SanitizingFunction.\npublic final class SanitizableData extends Object;\n// Strategy that should be used by endpoint implementations to sanitize potentially sensitive keys.\npublic class Sanitizer extends Object;\n// Function that takes a SanitizableData and applies sanitization to the value, if necessary.\n@FunctionalInterface public interface SanitizingFunction;\n// Security context in which an endpoint is being invoked.\npublic interface SecurityContext;\n// Options for showing data in endpoint responses.\npublic enum Show extends Enum<Show>;\n", "des": "Endpoint support."}
{"index": 1384, "repo": "spring-boot-actuator-3.1.1", "code": "package annotation\n\n// Abstract base class for endpoints discovered by a EndpointDiscoverer.\npublic abstract class AbstractDiscoveredEndpoint<O extends Operation> extends AbstractExposableEndpoint<O> implements DiscoveredEndpoint<O>;\n// Abstract base class for endpoints operations discovered by a EndpointDiscoverer.\npublic abstract class AbstractDiscoveredOperation extends Object implements Operation;\n// Identifies a method on an @Endpoint as being a delete operation.\n@Target(METHOD) @Retention(RUNTIME) @Documented @Reflective(org.springframework.boot.actuate.endpoint.annotation.OperationReflectiveProcessor.class) public @interface DeleteOperation;\n// An endpoint discovered by an EndpointDiscoverer.\npublic interface DiscoveredEndpoint<O extends Operation> extends ExposableEndpoint<O>;\n// An OperationMethod discovered by an EndpointDiscoverer.\npublic class DiscoveredOperationMethod extends OperationMethod;\n// EndpointFilter the matches based on the EndpointDiscoverer the created the endpoint.\npublic abstract class DiscovererEndpointFilter extends Object implements EndpointFilter<DiscoveredEndpoint<?>>;\n// Identifies a type as being an actuator endpoint that provides information about the running application.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Reflective public @interface Endpoint;\n// Qualifier for beans that are needed to convert @Endpoint input parameters.\n@Target({FIELD,METHOD,PARAMETER,TYPE,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Qualifier public @interface EndpointConverter;\n// A Base for EndpointsSupplier implementations that discover @Endpoint beans and @EndpointExtension beans in an application context.\npublic abstract class EndpointDiscoverer<E extends ExposableEndpoint<O>,O extends Operation> extends Object implements EndpointsSupplier<E>;\n// A key generated for an Operation based on specific criteria from the actual operation implementation.\nprotected static final class EndpointDiscoverer.OperationKey extends Object;\n// Annotation primarily used as a meta-annotation to indicate that an annotation provides extension support for an endpoint.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Reflective public @interface EndpointExtension;\n// Annotation that can be used on an @Endpoint to implement implicit filtering.\n@Target(TYPE) @Retention(RUNTIME) @Documented public @interface FilteredEndpoint;\n", "des": "Annotation support for actuator endpoints."}
{"index": 1385, "repo": "spring-boot-actuator-3.1.1", "code": "package invoke\n\n// RuntimeException thrown when an endpoint invocation does not contain required parameters.\npublic final class MissingParametersException extends InvalidEndpointRequestException;\n// Interface to perform an operation invocation.\n@FunctionalInterface public interface OperationInvoker;\n// Allows additional functionality to be applied to an OperationInvoker.\n@FunctionalInterface public interface OperationInvokerAdvisor;\n// A single operation parameter.\npublic interface OperationParameter;\n// A collection of operation parameters.\npublic interface OperationParameters extends Iterable<OperationParameter>;\n// A ParameterMappingException is thrown when a failure occurs during operation parameter mapping.\npublic final class ParameterMappingException extends InvalidEndpointRequestException;\n// Maps parameter values to the required type when invoking an endpoint.\n@FunctionalInterface public interface ParameterValueMapper;\n", "des": "Interfaces and classes relating to invoking operation methods."}
{"index": 1386, "repo": "spring-boot-actuator-3.1.1", "code": "package convert\n\n// ParameterValueMapper backed by a ConversionService.\npublic class ConversionServiceParameterValueMapper extends Object implements ParameterValueMapper;\n// A String to OffsetDateTime Converter that uses ISO offset parsing.\npublic class IsoOffsetDateTimeConverter extends Object implements org.springframework.core.convert.converter.Converter<String,OffsetDateTime>;\n", "des": "Converter support for actuator endpoints."}
{"index": 1387, "repo": "spring-boot-actuator-3.1.1", "code": "package reflect\n\n// Information describing an operation method on an endpoint method.\npublic class OperationMethod extends Object;\n// An OperationInvoker that invokes an operation using reflection.\npublic class ReflectiveOperationInvoker extends Object implements OperationInvoker;\n", "des": "Endpoint reflection support."}
{"index": 1388, "repo": "spring-boot-actuator-3.1.1", "code": "package cache\n\n// An OperationInvoker that caches the response of an operation with a configurable time to live.\npublic class CachingOperationInvoker extends Object implements OperationInvoker;\n// OperationInvokerAdvisor to optionally provide result caching support.\npublic class CachingOperationInvokerAdvisor extends Object implements OperationInvokerAdvisor;\n", "des": "Caching support for actuator endpoints."}
{"index": 1389, "repo": "spring-boot-actuator-3.1.1", "code": "package jackson\n\n// Interface used to supply the ObjectMapper that should be used when serializing OperationResponseBody endpoint results.\npublic interface EndpointObjectMapper;\n", "des": "Jackson support classes for actuator endpoints."}
{"index": 1390, "repo": "spring-boot-actuator-3.1.1", "code": "package jmx\n\n// Adapter to expose a JMX endpoint as a DynamicMBean.\npublic class EndpointMBean extends Object implements DynamicMBean;\n// A factory to create an ObjectName for an EndpointMBean.\n@FunctionalInterface public interface EndpointObjectNameFactory;\n// Information describing an endpoint that can be exposed over JMX.\npublic interface ExposableJmxEndpoint extends ExposableEndpoint<JmxOperation>;\n// JmxOperationResponseMapper that delegates to a Jackson ObjectMapper to return a JSON response.\npublic class JacksonJmxOperationResponseMapper extends Object implements JmxOperationResponseMapper;\n// Exports JMX endpoints to a MBeanServer.\npublic class JmxEndpointExporter extends Object implements org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean, org.springframework.beans.factory.BeanClassLoaderAware;\n// EndpointsSupplier for JMX endpoints.\n@FunctionalInterface public interface JmxEndpointsSupplier extends EndpointsSupplier<ExposableJmxEndpoint>;\n// An operation on a JMX endpoint.\npublic interface JmxOperation extends Operation;\n// Describes the parameters of an operation on a JMX endpoint.\npublic interface JmxOperationParameter;\n// Maps an operation's response to a JMX-friendly form.\npublic interface JmxOperationResponseMapper;\n", "des": "JMX support for actuator endpoints."}
{"index": 1391, "repo": "spring-boot-actuator-3.1.1", "code": "package annotation\n\n// Identifies a type as being a JMX-specific extension of an @Endpoint.\n@Target(TYPE) @Retention(RUNTIME) @Documented @EndpointExtension(filter=org.springframework.boot.actuate.endpoint.jmx.annotation.JmxEndpointFilter.class) public @interface EndpointJmxExtension;\n// Identifies a type as being an endpoint that is only exposed over JMX.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Endpoint @FilteredEndpoint(org.springframework.boot.actuate.endpoint.jmx.annotation.JmxEndpointFilter.class) public @interface JmxEndpoint;\n// EndpointDiscoverer for JMX endpoints.\n@ImportRuntimeHints(org.springframework.boot.actuate.endpoint.jmx.annotation.JmxEndpointDiscoverer.JmxEndpointDiscovererRuntimeHints.class) public class JmxEndpointDiscoverer extends EndpointDiscoverer<ExposableJmxEndpoint,JmxOperation> implements JmxEndpointsSupplier;\n", "des": "Annotation support for actuator JMX endpoints."}
{"index": 1392, "repo": "spring-boot-actuator-3.1.1", "code": "package web\n\n// A resolver for links to web endpoints.\npublic class EndpointLinksResolver extends Object;\n// A value object for the base mapping for endpoints.\npublic class EndpointMapping extends Object;\n// Media types that are, by default, produced and consumed by an endpoint.\npublic class EndpointMediaTypes extends Object;\n// Contains details of a servlet that is exposed as an actuator endpoint.\npublic final class EndpointServlet extends Object;\n// Information describing an endpoint that can be exposed by registering a servlet.\npublic interface ExposableServletEndpoint extends ExposableEndpoint<Operation>, PathMappedEndpoint;\n// Information describing an endpoint that can be exposed over the web.\npublic interface ExposableWebEndpoint extends ExposableEndpoint<WebOperation>, PathMappedEndpoint;\n// Details for a link in a HAL-formatted response.\npublic class Link extends Object;\n// Interface that can be implemented by an ExposableEndpoint that is mapped to a root web path.\n@FunctionalInterface public interface PathMappedEndpoint;\n// A collection of path mapped endpoints.\npublic class PathMappedEndpoints extends Object implements Iterable<PathMappedEndpoint>;\n// Strategy interface used to provide a mapping between an endpoint ID and the root path where it will be exposed.\n@FunctionalInterface public interface PathMapper;\n// ServletContextInitializer to register servlet endpoints.\npublic class ServletEndpointRegistrar extends Object implements org.springframework.boot.web.servlet.ServletContextInitializer;\n// An enumeration of HTTP methods supported by web endpoint operations.\npublic enum WebEndpointHttpMethod extends Enum<WebEndpointHttpMethod>;\n// A WebEndpointResponse can be returned by an operation on a @EndpointWebExtension to provide additional, web-specific information such as the HTTP status code.\npublic final class WebEndpointResponse<T> extends Object;\n// EndpointsSupplier for web endpoints.\n@FunctionalInterface public interface WebEndpointsSupplier extends EndpointsSupplier<ExposableWebEndpoint>;\n// An operation on a web endpoint.\npublic interface WebOperation extends Operation;\n// A predicate for a request to an operation on a web endpoint.\npublic final class WebOperationRequestPredicate extends Object;\n// Enumeration of server namespaces.\npublic final class WebServerNamespace extends Object;\n", "des": "Web support for actuator endpoints."}
{"index": 1393, "repo": "spring-boot-actuator-3.1.1", "code": "package annotation\n\n// Identifies a type as being an endpoint that is only exposed over Spring MVC or Spring WebFlux.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Endpoint @FilteredEndpoint(org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointFilter.class) public @interface ControllerEndpoint;\n// EndpointDiscoverer for controller endpoints.\n@ImportRuntimeHints(org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer.ControllerEndpointDiscovererRuntimeHints.class) public class ControllerEndpointDiscoverer extends EndpointDiscoverer<ExposableControllerEndpoint,Operation> implements ControllerEndpointsSupplier;\n// EndpointsSupplier for controller endpoints.\n@FunctionalInterface public interface ControllerEndpointsSupplier extends EndpointsSupplier<ExposableControllerEndpoint>;\n// Identifies a type as being a Web-specific extension of an @Endpoint.\n@Target(TYPE) @Retention(RUNTIME) @Documented @EndpointExtension(filter=org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter.class) public @interface EndpointWebExtension;\n// Information describing an endpoint that can be exposed over Spring MVC or Spring WebFlux.\npublic interface ExposableControllerEndpoint extends ExposableEndpoint<Operation>, PathMappedEndpoint;\n// Identifies a type as being a REST endpoint that is only exposed over Spring MVC or Spring WebFlux.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Endpoint @FilteredEndpoint(org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointFilter.class) @ResponseBody public @interface RestControllerEndpoint;\n// Identifies a type as being an endpoint that supplies a servlet to expose.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Endpoint @FilteredEndpoint(org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointFilter.class) public @interface ServletEndpoint;\n// EndpointDiscoverer for servlet endpoints.\n@ImportRuntimeHints(org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer.ServletEndpointDiscovererRuntimeHints.class) public class ServletEndpointDiscoverer extends EndpointDiscoverer<ExposableServletEndpoint,Operation> implements ServletEndpointsSupplier;\n", "des": "Annotation support for actuator web endpoints."}
{"index": 1394, "repo": "spring-boot-actuator-3.1.1", "code": "package jersey\n\n// A factory for creating Jersey Resources for web endpoint operations.\npublic class JerseyEndpointResourceFactory extends Object;\n// A factory for creating Jersey Resources for health groups with additional path.\npublic class JerseyHealthEndpointAdditionalPathResourceFactory extends JerseyEndpointResourceFactory;\n", "des": "Jersey support for actuator endpoints."}
{"index": 1395, "repo": "spring-boot-actuator-3.1.1", "code": "package reactive\n\n// A custom HandlerMapping that makes web endpoints available over HTTP using Spring WebFlux.\n@ImportRuntimeHints(org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping.AbstractWebFluxEndpointHandlerMappingRuntimeHints.class) public abstract class AbstractWebFluxEndpointHandlerMapping extends org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping;\n// An OperationInvoker that performs the invocation of a blocking operation on a separate thread using Reactor's bounded elastic scheduler.\nprotected static final class AbstractWebFluxEndpointHandlerMapping.ElasticSchedulerInvoker extends Object implements OperationInvoker;\n// Reactive handler providing actuator links at the root endpoint.\n@FunctionalInterface protected static interface AbstractWebFluxEndpointHandlerMapping.LinksHandler;\n// A reactive web operation that can be handled by WebFlux.\n@FunctionalInterface protected static interface AbstractWebFluxEndpointHandlerMapping.ReactiveWebOperation;\n// A custom HandlerMapping that allows health groups to be mapped to an additional path.\npublic class AdditionalHealthEndpointPathsWebFluxHandlerMapping extends AbstractWebFluxEndpointHandlerMapping;\n// HandlerMapping that exposes @ControllerEndpoint and @RestControllerEndpoint annotated endpoints over Spring WebFlux.\npublic class ControllerEndpointHandlerMapping extends org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping;\n// A custom HandlerMapping that makes web endpoints available over HTTP using Spring WebFlux.\n@ImportRuntimeHints(org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping.WebFluxEndpointHandlerMappingRuntimeHints.class) public class WebFluxEndpointHandlerMapping extends AbstractWebFluxEndpointHandlerMapping implements org.springframework.beans.factory.InitializingBean;\n", "des": "Spring WebFlux support for actuator endpoints."}
{"index": 1396, "repo": "spring-boot-actuator-3.1.1", "code": "package servlet\n\n// A custom HandlerMapping that makes web endpoints available over HTTP using Spring MVC.\n@ImportRuntimeHints(org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.AbstractWebMvcEndpointHandlerMappingRuntimeHints.class) public abstract class AbstractWebMvcEndpointHandlerMapping extends org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping implements org.springframework.beans.factory.InitializingBean;\n// Handler providing actuator links at the root endpoint.\n@FunctionalInterface protected static interface AbstractWebMvcEndpointHandlerMapping.LinksHandler;\n// A servlet web operation that can be handled by Spring MVC.\n@FunctionalInterface protected static interface AbstractWebMvcEndpointHandlerMapping.ServletWebOperation;\n// A custom HandlerMapping that allows health groups to be mapped to an additional path.\npublic class AdditionalHealthEndpointPathsWebMvcHandlerMapping extends AbstractWebMvcEndpointHandlerMapping;\n// HandlerMapping that exposes @ControllerEndpoint and @RestControllerEndpoint annotated endpoints over Spring MVC.\npublic class ControllerEndpointHandlerMapping extends org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;\n// A custom HandlerMapping that makes web endpoints available over HTTP using Spring MVC.\n@ImportRuntimeHints(org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.WebMvcEndpointHandlerMappingRuntimeHints.class) public class WebMvcEndpointHandlerMapping extends AbstractWebMvcEndpointHandlerMapping;\n", "des": "Spring MVC support for actuator endpoints."}
{"index": 1397, "repo": "spring-boot-actuator-3.1.1", "code": "package env\n\n// @Endpoint to expose environment information.\n@Endpoint(id=\"env\") public class EnvironmentEndpoint extends Object;\n// Description of an Environment.\npublic static final class EnvironmentEndpoint.EnvironmentDescriptor extends Object implements OperationResponseBody;\n// Description of an entry of the Environment.\npublic static final class EnvironmentEndpoint.EnvironmentEntryDescriptor extends Object;\n// Description of a PropertySource.\npublic static final class EnvironmentEndpoint.PropertySourceDescriptor extends Object;\n// Description of a particular entry of PropertySource.\npublic static final class EnvironmentEndpoint.PropertySourceEntryDescriptor extends Object;\n// Description of a particular entry of the Environment.\npublic static final class EnvironmentEndpoint.PropertySummaryDescriptor extends Object;\n// Description of a property's value, including its origin if available.\npublic static final class EnvironmentEndpoint.PropertyValueDescriptor extends Object;\n// @EndpointWebExtension for the EnvironmentEndpoint.\n@EndpointWebExtension(endpoint=EnvironmentEndpoint.class) public class EnvironmentEndpointWebExtension extends Object;\n", "des": "Actuator support for Spring Framework's Environment."}
{"index": 1398, "repo": "spring-boot-actuator-3.1.1", "code": "package flyway\n\n// @Endpoint to expose flyway info.\n@Endpoint(id=\"flyway\") public class FlywayEndpoint extends Object;\n// Description of an application context's Flyway beans.\npublic static final class FlywayEndpoint.ContextFlywayBeansDescriptor extends Object;\n// Description of an application's Flyway beans.\npublic static final class FlywayEndpoint.FlywayBeansDescriptor extends Object implements OperationResponseBody;\n// Description of a Flyway bean.\npublic static class FlywayEndpoint.FlywayDescriptor extends Object;\n// Description of a migration performed by Flyway.\npublic static final class FlywayEndpoint.FlywayMigrationDescriptor extends Object;\n", "des": "Actuator support for Flyway."}
{"index": 1399, "repo": "spring-boot-actuator-3.1.1", "code": "package hazelcast\n\n// HealthIndicator for Hazelcast.\npublic class HazelcastHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for Hazelcast."}
{"index": 1400, "repo": "spring-boot-actuator-3.1.1", "code": "package health\n\n// Base HealthIndicator implementations that encapsulates creation of Health instance and error handling.\npublic abstract class AbstractHealthIndicator extends Object implements HealthIndicator;\n// Base ReactiveHealthIndicator implementations that encapsulates creation of Health instance and error handling.\npublic abstract class AbstractReactiveHealthIndicator extends Object implements ReactiveHealthIndicator;\n// Value object that represents an additional path for a HealthEndpointGroup.\npublic final class AdditionalHealthEndpointPath extends Object;\n// A HealthComponent that is composed of other HealthComponent instances.\npublic class CompositeHealth extends HealthComponent;\n// A HealthContributor that is composed of other HealthContributor instances.\npublic interface CompositeHealthContributor extends HealthContributor, NamedContributors<HealthContributor>;\n// A ReactiveHealthContributor that is composed of other ReactiveHealthContributor instances.\npublic interface CompositeReactiveHealthContributor extends ReactiveHealthContributor, NamedContributors<ReactiveHealthContributor>;\n// A mutable registry of health endpoint contributors (either HealthContributor or ReactiveHealthContributor).\npublic interface ContributorRegistry<C> extends NamedContributors<C>;\n// Default HealthContributorRegistry implementation.\npublic class DefaultHealthContributorRegistry extends Object implements HealthContributorRegistry;\n// Default ReactiveHealthContributorRegistry implementation.\npublic class DefaultReactiveHealthContributorRegistry extends Object implements ReactiveHealthContributorRegistry;\n// Carries information about the health of a component or subsystem.\npublic final class Health extends HealthComponent;\n// Builder for creating immutable Health instances.\npublic static class Health.Builder extends Object;\n// A component that contributes data to results returned from the HealthEndpoint.\npublic abstract class HealthComponent extends Object implements OperationResponseBody;\n// Tagging interface for classes that contribute to health components to the results returned from the HealthEndpoint.\npublic interface HealthContributor;\n// Generate a sensible health indicator name based on its bean name.\npublic class HealthContributorNameFactory extends Object implements Function<String,String>;\n// ContributorRegistry for HealthContributors.\npublic interface HealthContributorRegistry extends ContributorRegistry<HealthContributor>;\n// @Endpoint to expose application health information.\n@Endpoint(id=\"health\") public class HealthEndpoint extends Object;\n// A logical grouping of health contributors that can be exposed by the HealthEndpoint.\npublic interface HealthEndpointGroup;\n", "des": "Actuator health indicator and endpoints."}
{"index": 1401, "repo": "spring-boot-actuator-3.1.1", "code": "package influx\n\n// HealthIndicator for InfluxDB.\npublic class InfluxDbHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for InfluxDB."}
{"index": 1402, "repo": "spring-boot-actuator-3.1.1", "code": "package info\n\n// An InfoContributor that exposes BuildProperties.\n@ImportRuntimeHints(org.springframework.boot.actuate.info.BuildInfoContributor.BuildInfoContributorRuntimeHints.class) public class BuildInfoContributor extends InfoPropertiesInfoContributor<org.springframework.boot.info.BuildProperties>;\n// An InfoContributor that provides all environment entries prefixed with info.\npublic class EnvironmentInfoContributor extends Object implements InfoContributor;\n// An InfoContributor that exposes GitProperties.\n@ImportRuntimeHints(org.springframework.boot.actuate.info.GitInfoContributor.GitInfoContributorRuntimeHints.class) public class GitInfoContributor extends InfoPropertiesInfoContributor<org.springframework.boot.info.GitProperties>;\n// Carries information of the application.\npublic final class Info extends Object;\n// Builder for creating immutable Info instances.\npublic static class Info.Builder extends Object;\n// Contributes additional info details.\n@FunctionalInterface public interface InfoContributor;\n// @Endpoint to expose arbitrary application information.\n@Endpoint(id=\"info\") public class InfoEndpoint extends Object;\n// A base InfoContributor to expose an InfoProperties.\npublic abstract class InfoPropertiesInfoContributor<T extends org.springframework.boot.info.InfoProperties> extends Object implements InfoContributor;\n// Defines how properties should be exposed.\npublic static enum InfoPropertiesInfoContributor.Mode extends Enum<InfoPropertiesInfoContributor.Mode>;\n// An InfoContributor that exposes JavaInfo.\n@ImportRuntimeHints(org.springframework.boot.actuate.info.JavaInfoContributor.JavaInfoContributorRuntimeHints.class) public class JavaInfoContributor extends Object implements InfoContributor;\n// A simple InfoContributor that exposes a map.\npublic class MapInfoContributor extends Object implements InfoContributor;\n// An InfoContributor that exposes OsInfo.\n@ImportRuntimeHints(org.springframework.boot.actuate.info.OsInfoContributor.OsInfoContributorRuntimeHints.class) public class OsInfoContributor extends Object implements InfoContributor;\n", "des": "Classes for application info."}
{"index": 1403, "repo": "spring-boot-actuator-3.1.1", "code": "package integration\n\n// @Endpoint to expose the Spring Integration graph.\n@Endpoint(id=\"integrationgraph\") public class IntegrationGraphEndpoint extends Object;\n// Description of a Graph.\npublic static class IntegrationGraphEndpoint.GraphDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support for Spring Integration."}
{"index": 1404, "repo": "spring-boot-actuator-3.1.1", "code": "package jdbc\n\n// HealthIndicator that tests the status of a DataSource and optionally runs a test query.\npublic class DataSourceHealthIndicator extends AbstractHealthIndicator implements org.springframework.beans.factory.InitializingBean;\n", "des": "Actuator support for JDBC."}
{"index": 1405, "repo": "spring-boot-actuator-3.1.1", "code": "package jms\n\n// HealthIndicator for a JMS ConnectionFactory.\npublic class JmsHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for JMS."}
{"index": 1406, "repo": "spring-boot-actuator-3.1.1", "code": "package ldap\n\n// HealthIndicator for configured LDAP server(s).\npublic class LdapHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for LDAP."}
{"index": 1407, "repo": "spring-boot-actuator-3.1.1", "code": "package liquibase\n\n// @Endpoint to expose liquibase info.\n@Endpoint(id=\"liquibase\") public class LiquibaseEndpoint extends Object;\n// Description of a Liquibase change set.\npublic static class LiquibaseEndpoint.ChangeSetDescriptor extends Object;\n// Description of a context expression in a LiquibaseEndpoint.ChangeSetDescriptor.\npublic static class LiquibaseEndpoint.ContextExpressionDescriptor extends Object;\n// Description of an application context's SpringLiquibase beans.\npublic static final class LiquibaseEndpoint.ContextLiquibaseBeansDescriptor extends Object;\n// Description of a SpringLiquibase bean.\npublic static final class LiquibaseEndpoint.LiquibaseBeanDescriptor extends Object;\n// Description of an application's SpringLiquibase beans.\npublic static final class LiquibaseEndpoint.LiquibaseBeansDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support for Liquibase."}
{"index": 1408, "repo": "spring-boot-actuator-3.1.1", "code": "package logging\n\n// Web @Endpoint that provides access to an application's log file.\n@WebEndpoint(id=\"logfile\") public class LogFileWebEndpoint extends Object;\n// @Endpoint to expose a collection of LoggerConfigurations.\n@Endpoint(id=\"loggers\") @RegisterReflectionForBinding({GroupLoggerLevelsDescriptor.class,SingleLoggerLevelsDescriptor.class}) public class LoggersEndpoint extends Object;\n// Description of levels configured for a given group logger.\npublic static class LoggersEndpoint.GroupLoggerLevelsDescriptor extends LoggersEndpoint.LoggerLevelsDescriptor;\n// Description of levels configured for a given logger.\npublic static class LoggersEndpoint.LoggerLevelsDescriptor extends Object implements OperationResponseBody;\n// Description of loggers.\npublic static class LoggersEndpoint.LoggersDescriptor extends Object implements OperationResponseBody;\n// Description of levels configured for a given single logger.\npublic static class LoggersEndpoint.SingleLoggerLevelsDescriptor extends LoggersEndpoint.LoggerLevelsDescriptor;\n", "des": "Actuator support for logging."}
{"index": 1409, "repo": "spring-boot-actuator-3.1.1", "code": "package mail\n\n// HealthIndicator for configured smtp server(s).\npublic class MailHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for JavaMail."}
{"index": 1410, "repo": "spring-boot-actuator-3.1.1", "code": "package management\n\n// Web @Endpoint to expose heap dumps.\n@WebEndpoint(id=\"heapdump\") public class HeapDumpWebEndpoint extends Object;\n// Strategy interface used to dump the heap to a file.\n@FunctionalInterface protected static interface HeapDumpWebEndpoint.HeapDumper;\n// Exception to be thrown if the HeapDumpWebEndpoint.HeapDumper cannot be created.\nprotected static class HeapDumpWebEndpoint.HeapDumperUnavailableException extends RuntimeException;\n// HeapDumpWebEndpoint.HeapDumper that uses com.sun.management.HotSpotDiagnosticMXBean, available on Oracle and OpenJDK, to dump the heap to a file.\nprotected static class HeapDumpWebEndpoint.HotSpotDiagnosticMXBeanHeapDumper extends Object implements HeapDumpWebEndpoint.HeapDumper;\n// @Endpoint to expose thread info.\n@Endpoint(id=\"threaddump\") public class ThreadDumpEndpoint extends Object;\n// Description of a thread dump.\npublic static final class ThreadDumpEndpoint.ThreadDumpDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support for JVM management."}
{"index": 1411, "repo": "spring-boot-actuator-3.1.1", "code": "package metrics\n\n// Strategy that can be used to apply Timers automatically instead of using @Timed.\n@FunctionalInterface public interface AutoTimer;\n// An @Endpoint for exposing the metrics held by a MeterRegistry.\n@Endpoint(id=\"metrics\") public class MetricsEndpoint extends Object;\n// A set of tags for further dimensional drill-down and their potential values.\npublic static final class MetricsEndpoint.AvailableTag extends Object;\n// Description of a metric.\npublic static final class MetricsEndpoint.MetricDescriptor extends Object implements OperationResponseBody;\n// Description of metric names.\npublic static final class MetricsEndpoint.MetricNamesDescriptor extends Object implements OperationResponseBody;\n// A measurement sample combining a statistic and a value.\npublic static final class MetricsEndpoint.Sample extends Object;\n", "des": "Core actuator support for metrics."}
{"index": 1412, "repo": "spring-boot-actuator-3.1.1", "code": "package amqp\n\n// A MeterBinder for RabbitMQ Java Client metrics.\npublic class RabbitMetrics extends Object implements io.micrometer.core.instrument.binder.MeterBinder;\n", "des": "Actuator support for RabbitMQ Java Client metrics."}
{"index": 1413, "repo": "spring-boot-actuator-3.1.1", "code": "package annotation\n\n// Utility used to obtain @Timed annotations from bean methods.\npublic final class TimedAnnotations extends Object;\n", "des": "Support classes for handler method metrics."}
{"index": 1414, "repo": "spring-boot-actuator-3.1.1", "code": "package cache\n\n// CacheMeterBinderProvider implementation for cache2k.\npublic class Cache2kCacheMeterBinderProvider extends Object implements CacheMeterBinderProvider<org.cache2k.extra.spring.SpringCache2kCache>;\n// Provide a MeterBinder based on a Cache.\n@FunctionalInterface public interface CacheMeterBinderProvider<C extends org.springframework.cache.Cache>;\n// Register supported Cache to a MeterRegistry.\npublic class CacheMetricsRegistrar extends Object;\n// CacheMeterBinderProvider implementation for Caffeine.\npublic class CaffeineCacheMeterBinderProvider extends Object implements CacheMeterBinderProvider<org.springframework.cache.caffeine.CaffeineCache>;\n// CacheMeterBinderProvider implementation for Hazelcast.\n@ImportRuntimeHints(org.springframework.boot.actuate.metrics.cache.HazelcastCacheMeterBinderProvider.HazelcastCacheMeterBinderProviderRuntimeHints.class) public class HazelcastCacheMeterBinderProvider extends Object implements CacheMeterBinderProvider<com.hazelcast.spring.cache.HazelcastCache>;\n// CacheMeterBinderProvider implementation for JCache.\npublic class JCacheCacheMeterBinderProvider extends Object implements CacheMeterBinderProvider<org.springframework.cache.jcache.JCacheCache>;\n// CacheMeterBinderProvider implementation for Redis.\npublic class RedisCacheMeterBinderProvider extends Object implements CacheMeterBinderProvider<org.springframework.data.redis.cache.RedisCache>;\n// CacheMeterBinder for RedisCache.\npublic class RedisCacheMetrics extends io.micrometer.core.instrument.binder.cache.CacheMeterBinder<org.springframework.data.redis.cache.RedisCache>;\n", "des": "Actuator support for cache metrics."}
{"index": 1415, "repo": "spring-boot-actuator-3.1.1", "code": "package data\n\n// Default RepositoryTagsProvider implementation.\npublic class DefaultRepositoryTagsProvider extends Object implements RepositoryTagsProvider;\n// Intercepts Spring Data Repository invocations and records metrics about execution time and results.\npublic class MetricsRepositoryMethodInvocationListener extends Object implements org.springframework.data.repository.core.support.RepositoryMethodInvocationListener;\n// Provides Tags for Spring Data Repository invocations.\n@FunctionalInterface public interface RepositoryTagsProvider;\n", "des": "Actuator support for Spring Data Repository metrics."}
{"index": 1416, "repo": "spring-boot-actuator-3.1.1", "code": "package prometheus\n\n// Class that can be used to manage the pushing of metrics to a Prometheus PushGateway.\npublic class PrometheusPushGatewayManager extends Object;\n// The operation that should be performed on shutdown.\npublic static enum PrometheusPushGatewayManager.ShutdownOperation extends Enum<PrometheusPushGatewayManager.ShutdownOperation>;\n// @Endpoint that outputs metrics in a format that can be scraped by the Prometheus server.\n@WebEndpoint(id=\"prometheus\") public class PrometheusScrapeEndpoint extends Object;\n// A Producible enum for supported Prometheus TextFormat.\npublic enum TextOutputFormat extends Enum<TextOutputFormat> implements Producible<TextOutputFormat>;\n", "des": "Actuator support for exporting metrics to Prometheus."}
{"index": 1417, "repo": "spring-boot-actuator-3.1.1", "code": "package http\n\n// The outcome of an HTTP request.\npublic enum Outcome extends Enum<Outcome>;\n", "des": "Support classes for HTTP-related metrics."}
{"index": 1418, "repo": "spring-boot-actuator-3.1.1", "code": "package jdbc\n\n// A MeterBinder for a DataSource.\npublic class DataSourcePoolMetrics extends Object implements io.micrometer.core.instrument.binder.MeterBinder;\n", "des": "Actuator support for JDBC metrics."}
{"index": 1419, "repo": "spring-boot-actuator-3.1.1", "code": "package r2dbc\n\n// A MeterBinder for a ConnectionPool.\npublic class ConnectionPoolMetrics extends Object implements io.micrometer.core.instrument.binder.MeterBinder;\n", "des": "Actuator support for R2DBC metrics."}
{"index": 1420, "repo": "spring-boot-actuator-3.1.1", "code": "package startup\n\n// Binds application startup metrics in response to ApplicationStartedEvent and ApplicationReadyEvent.\npublic class StartupTimeMetricsListener extends Object implements org.springframework.context.event.SmartApplicationListener;\n", "des": "Actuator support for startup metrics."}
{"index": 1421, "repo": "spring-boot-actuator-3.1.1", "code": "package system\n\n// A MeterBinder that binds one or more DiskSpaceMetrics.\npublic class DiskSpaceMetricsBinder extends Object implements io.micrometer.core.instrument.binder.MeterBinder;\n", "des": "Actuator support for system metrics."}
{"index": 1422, "repo": "spring-boot-actuator-3.1.1", "code": "package client\n\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public class DefaultRestTemplateExchangeTagsProvider extends Object implements RestTemplateExchangeTagsProvider;\n// RestTemplateCustomizer that configures the RestTemplate to record request observations.\npublic class ObservationRestTemplateCustomizer extends Object implements org.springframework.boot.web.client.RestTemplateCustomizer;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public final class RestTemplateExchangeTags extends Object;\n// \n@FunctionalInterface @Deprecated(since=\"3.0.0\", forRemoval=true) public interface RestTemplateExchangeTagsProvider;\n", "des": "Actuator support for web client metrics."}
{"index": 1423, "repo": "spring-boot-actuator-3.1.1", "code": "package jetty\n\n// Base class for binding Jetty metrics in response to an ApplicationStartedEvent.\npublic abstract class AbstractJettyMetricsBinder extends Object implements org.springframework.context.ApplicationListener<org.springframework.boot.context.event.ApplicationStartedEvent>;\n// AbstractJettyMetricsBinder for JettyConnectionMetrics.\npublic class JettyConnectionMetricsBinder extends AbstractJettyMetricsBinder;\n// AbstractJettyMetricsBinder for JettyServerThreadPoolMetrics.\npublic class JettyServerThreadPoolMetricsBinder extends AbstractJettyMetricsBinder;\n// AbstractJettyMetricsBinder for JettySslHandshakeMetrics.\npublic class JettySslHandshakeMetricsBinder extends AbstractJettyMetricsBinder;\n", "des": "Actuator support for Jetty metrics."}
{"index": 1424, "repo": "spring-boot-actuator-3.1.1", "code": "package client\n\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public class DefaultWebClientExchangeTagsProvider extends Object implements WebClientExchangeTagsProvider;\n// WebClientCustomizer that configures the WebClient to record request observations.\npublic class ObservationWebClientCustomizer extends Object implements org.springframework.boot.web.reactive.function.client.WebClientCustomizer;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public final class WebClientExchangeTags extends Object;\n// \n@FunctionalInterface @Deprecated(since=\"3.0.0\", forRemoval=true) public interface WebClientExchangeTagsProvider;\n", "des": "Actuator support for WebClient metrics."}
{"index": 1425, "repo": "spring-boot-actuator-3.1.1", "code": "package server\n\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public class DefaultWebFluxTagsProvider extends Object implements WebFluxTagsProvider;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public final class WebFluxTags extends Object;\n// \n@FunctionalInterface @Deprecated(since=\"3.0.0\", forRemoval=true) public interface WebFluxTagsContributor;\n// \n@FunctionalInterface @Deprecated(since=\"3.0.0\", forRemoval=true) public interface WebFluxTagsProvider;\n", "des": "Actuator support for WebFlux metrics."}
{"index": 1426, "repo": "spring-boot-actuator-3.1.1", "code": "package servlet\n\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public class DefaultWebMvcTagsProvider extends Object implements WebMvcTagsProvider;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public final class WebMvcTags extends Object;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public interface WebMvcTagsContributor;\n// \n@Deprecated(since=\"3.0.0\", forRemoval=true) public interface WebMvcTagsProvider;\n", "des": "Actuator support for Spring MVC metrics."}
{"index": 1427, "repo": "spring-boot-actuator-3.1.1", "code": "package tomcat\n\n// Binds TomcatMetrics in response to the ApplicationStartedEvent.\npublic class TomcatMetricsBinder extends Object implements org.springframework.context.ApplicationListener<org.springframework.boot.context.event.ApplicationStartedEvent>, org.springframework.beans.factory.DisposableBean;\n", "des": "Actuator support for Tomcat metrics."}
{"index": 1428, "repo": "spring-boot-actuator-3.1.1", "code": "package neo4j\n\n// HealthIndicator that tests the status of a Neo4j by executing a Cypher statement and extracting server and database information.\npublic class Neo4jHealthIndicator extends AbstractHealthIndicator;\n// ReactiveHealthIndicator that tests the status of a Neo4j by executing a Cypher statement and extracting server and database information.\npublic final class Neo4jReactiveHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for Neo4j."}
{"index": 1429, "repo": "spring-boot-actuator-3.1.1", "code": "package quartz\n\n// Endpoint to expose Quartz Scheduler jobs and triggers.\n@Endpoint(id=\"quartz\") public class QuartzEndpoint extends Object;\n// Description of a CalendarIntervalTrigger.\npublic static final class QuartzEndpoint.CalendarIntervalTriggerDescriptor extends QuartzEndpoint.TriggerDescriptor;\n// Description of a CronTrigger.\npublic static final class QuartzEndpoint.CronTriggerDescriptor extends QuartzEndpoint.TriggerDescriptor;\n// Description of a custom Trigger.\npublic static final class QuartzEndpoint.CustomTriggerDescriptor extends QuartzEndpoint.TriggerDescriptor;\n// Description of a DailyTimeIntervalTrigger.\npublic static final class QuartzEndpoint.DailyTimeIntervalTriggerDescriptor extends QuartzEndpoint.TriggerDescriptor;\n// Description of group names.\npublic static class QuartzEndpoint.GroupNamesDescriptor extends Object;\n// Description of available job and trigger group names.\npublic static final class QuartzEndpoint.QuartzDescriptor extends Object implements OperationResponseBody;\n// Description of each group identified by name.\npublic static class QuartzEndpoint.QuartzGroupsDescriptor extends Object implements OperationResponseBody;\n// Description of a Quartz Job.\npublic static final class QuartzEndpoint.QuartzJobDetailsDescriptor extends Object implements OperationResponseBody;\n// Description of the jobs in a given group.\npublic static final class QuartzEndpoint.QuartzJobGroupSummaryDescriptor extends Object implements OperationResponseBody;\n// Description of a Quartz Job.\npublic static final class QuartzEndpoint.QuartzJobSummaryDescriptor extends Object;\n// Description of the triggers in a given group.\npublic static final class QuartzEndpoint.QuartzTriggerGroupSummaryDescriptor extends Object implements OperationResponseBody;\n// \npublic static final class QuartzEndpoint.QuartzTriggerGroupSummaryDescriptor.Triggers extends Object;\n// Description of a SimpleTrigger.\npublic static final class QuartzEndpoint.SimpleTriggerDescriptor extends QuartzEndpoint.TriggerDescriptor;\n// Base class for descriptions of a Trigger.\npublic abstract static class QuartzEndpoint.TriggerDescriptor extends Object;\n// @EndpointWebExtension for the QuartzEndpoint.\n@EndpointWebExtension(endpoint=QuartzEndpoint.class) @ImportRuntimeHints(org.springframework.boot.actuate.quartz.QuartzEndpointWebExtension.QuartzEndpointWebExtensionRuntimeHints.class) public class QuartzEndpointWebExtension extends Object;\n", "des": "Actuator support for Quartz Scheduler."}
{"index": 1430, "repo": "spring-boot-actuator-3.1.1", "code": "package r2dbc\n\n// A HealthIndicator to validate a R2DBC ConnectionFactory.\npublic class ConnectionFactoryHealthIndicator extends AbstractReactiveHealthIndicator;\n", "des": "Actuator support for R2DBC."}
{"index": 1431, "repo": "spring-boot-actuator-3.1.1", "code": "package scheduling\n\n// @Endpoint to expose information about an application's scheduled tasks.\n@Endpoint(id=\"scheduledtasks\") @ImportRuntimeHints(org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint.ScheduledTasksEndpointRuntimeHints.class) public class ScheduledTasksEndpoint extends Object;\n// Description of a CronTask or a TriggerTask with a CronTrigger.\npublic static final class ScheduledTasksEndpoint.CronTaskDescriptor extends ScheduledTasksEndpoint.TaskDescriptor;\n// Description of a TriggerTask with a custom Trigger.\npublic static final class ScheduledTasksEndpoint.CustomTriggerTaskDescriptor extends ScheduledTasksEndpoint.TaskDescriptor;\n// Description of a FixedDelayTask or a TriggerTask with a fixed-delay PeriodicTrigger.\npublic static final class ScheduledTasksEndpoint.FixedDelayTaskDescriptor extends ScheduledTasksEndpoint.IntervalTaskDescriptor;\n// Description of a FixedRateTask or a TriggerTask with a fixed-rate PeriodicTrigger.\npublic static final class ScheduledTasksEndpoint.FixedRateTaskDescriptor extends ScheduledTasksEndpoint.IntervalTaskDescriptor;\n// Description of an IntervalTask.\npublic static class ScheduledTasksEndpoint.IntervalTaskDescriptor extends ScheduledTasksEndpoint.TaskDescriptor;\n// Description of a Task's Runnable.\npublic static final class ScheduledTasksEndpoint.RunnableDescriptor extends Object;\n// Description of an application's scheduled Tasks.\npublic static final class ScheduledTasksEndpoint.ScheduledTasksDescriptor extends Object implements OperationResponseBody;\n// Base class for descriptions of a Task.\npublic abstract static class ScheduledTasksEndpoint.TaskDescriptor extends Object;\n", "des": "Actuator scheduling support."}
{"index": 1432, "repo": "spring-boot-actuator-3.1.1", "code": "package security\n\n// Abstract ApplicationListener to expose Spring Security authentication events as AuditEvents.\npublic abstract class AbstractAuthenticationAuditListener extends Object implements org.springframework.context.ApplicationListener<org.springframework.security.authentication.event.AbstractAuthenticationEvent>, org.springframework.context.ApplicationEventPublisherAware;\n// Abstract ApplicationListener to expose Spring Security authorization denied and authorization granted events as AuditEvents.\npublic abstract class AbstractAuthorizationAuditListener extends Object implements org.springframework.context.ApplicationListener<org.springframework.security.authorization.event.AuthorizationEvent>, org.springframework.context.ApplicationEventPublisherAware;\n// Default implementation of AbstractAuthenticationAuditListener.\npublic class AuthenticationAuditListener extends AbstractAuthenticationAuditListener;\n// Default implementation of AbstractAuthorizationAuditListener.\npublic class AuthorizationAuditListener extends AbstractAuthorizationAuditListener;\n", "des": "Actuator support for security."}
{"index": 1433, "repo": "spring-boot-actuator-3.1.1", "code": "package session\n\n// @Endpoint to expose a user's Sessions.\n@Endpoint(id=\"sessions\") public class SessionsEndpoint extends Object;\n// Description of user's session.\npublic static final class SessionsEndpoint.SessionDescriptor extends Object implements OperationResponseBody;\n// Description of user's sessions.\npublic static final class SessionsEndpoint.SessionsDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support for Spring Session."}
{"index": 1434, "repo": "spring-boot-actuator-3.1.1", "code": "package startup\n\n// @Endpoint to expose the timeline of the application startup.\n@Endpoint(id=\"startup\") @ImportRuntimeHints(org.springframework.boot.actuate.startup.StartupEndpoint.StartupEndpointRuntimeHints.class) public class StartupEndpoint extends Object;\n// Description of an application startup.\npublic static final class StartupEndpoint.StartupDescriptor extends Object implements OperationResponseBody;\n", "des": "Actuator support for ApplicationStartup."}
{"index": 1435, "repo": "spring-boot-actuator-3.1.1", "code": "package system\n\n// A HealthIndicator that checks available disk space and reports a status of Status.DOWN when it drops below a configurable threshold.\npublic class DiskSpaceHealthIndicator extends AbstractHealthIndicator;\n", "des": "Actuator support for system-related concerns."}
{"index": 1436, "repo": "spring-boot-actuator-3.1.1", "code": "package exchanges\n\n// An HTTP request and response exchange.\npublic final class HttpExchange extends Object;\n// Principal associated with an HTTP request-response exchange.\npublic static final class HttpExchange.Principal extends Object;\n// The request that started the exchange.\npublic static final class HttpExchange.Request extends Object;\n// The response that finished the exchange.\npublic static final class HttpExchange.Response extends Object;\n// The session associated with the exchange.\npublic static final class HttpExchange.Session extends Object;\n// A started request that when finished will return a new HttpExchange instance.\npublic static final class HttpExchange.Started extends Object;\n// A repository for HttpExchange instances.\npublic interface HttpExchangeRepository;\n// @Endpoint to expose HttpExchange information.\n@Endpoint(id=\"httpexchanges\") public class HttpExchangesEndpoint extends Object;\n// Description of an application's HttpExchange entries.\npublic static final class HttpExchangesEndpoint.HttpExchangesDescriptor extends Object implements OperationResponseBody;\n// Include options for HTTP exchanges.\npublic enum Include extends Enum<Include>;\n// In-memory implementation of HttpExchangeRepository.\npublic class InMemoryHttpExchangeRepository extends Object implements HttpExchangeRepository;\n// The recordable parts of an HTTP request used when creating an HttpExchange.\npublic interface RecordableHttpRequest;\n// The recordable parts of an HTTP response used when creating an HttpExchange.\npublic interface RecordableHttpResponse;\n", "des": "Actuator HTTP exchanges support."}
{"index": 1437, "repo": "spring-boot-actuator-3.1.1", "code": "package reactive\n\n// A WebFilter for recording HTTP exchanges.\npublic class HttpExchangesWebFilter extends Object implements org.springframework.web.server.WebFilter, org.springframework.core.Ordered;\n", "des": "Actuator HTTP exchanges support for reactive servers."}
{"index": 1438, "repo": "spring-boot-actuator-3.1.1", "code": "package servlet\n\n// Servlet Filter for recording HTTP exchanges.\npublic class HttpExchangesFilter extends org.springframework.web.filter.OncePerRequestFilter implements org.springframework.core.Ordered;\n", "des": "Actuator HTTP exchanges support for servlet servers."}
{"index": 1439, "repo": "spring-boot-actuator-3.1.1", "code": "package mappings\n\n// A description of a HandlerMethod.\npublic class HandlerMethodDescription extends Object;\n// A MappingDescriptionProvider provides a List of mapping descriptions through implementation-specific introspection of an application context.\npublic interface MappingDescriptionProvider;\n// @Endpoint to expose HTTP request mappings.\n@Endpoint(id=\"mappings\") public class MappingsEndpoint extends Object;\n// Description of an application's request mappings.\npublic static final class MappingsEndpoint.ApplicationMappingsDescriptor extends Object implements OperationResponseBody;\n// Description of an application context's request mappings.\npublic static final class MappingsEndpoint.ContextMappingsDescriptor extends Object;\n", "des": "Actuator web request mappings support."}
{"index": 1440, "repo": "spring-boot-actuator-3.1.1", "code": "package reactive\n\n// A description of a mapping known to a DispatcherServlet.\npublic class DispatcherHandlerMappingDescription extends Object;\n// Details of a DispatcherHandler mapping.\npublic class DispatcherHandlerMappingDetails extends Object;\n// A MappingDescriptionProvider that introspects the HandlerMappings that are known to a DispatcherHandler.\n@ImportRuntimeHints(org.springframework.boot.actuate.web.mappings.reactive.DispatcherHandlersMappingDescriptionProvider.DispatcherHandlersMappingDescriptionProviderRuntimeHints.class) public class DispatcherHandlersMappingDescriptionProvider extends Object implements MappingDescriptionProvider;\n// Description of a HandlerFunction.\npublic class HandlerFunctionDescription extends Object;\n// Description of the conditions of a RequestMappingInfo.\npublic class RequestMappingConditionsDescription extends Object;\n// A description of a MediaTypeExpression in a request mapping condition.\npublic static class RequestMappingConditionsDescription.MediaTypeExpressionDescription extends Object;\n// A description of a NameValueExpression in a request mapping condition.\npublic static class RequestMappingConditionsDescription.NameValueExpressionDescription extends Object;\n", "des": "Actuator reactive request mappings support."}
{"index": 1441, "repo": "spring-boot-actuator-3.1.1", "code": "package servlet\n\n// A description of a mapping known to a DispatcherServlet.\npublic class DispatcherServletMappingDescription extends Object;\n// Details of a DispatcherServlet mapping.\npublic class DispatcherServletMappingDetails extends Object;\n// A MappingDescriptionProvider that introspects the HandlerMappings that are known to one or more DispatcherServlets.\n@ImportRuntimeHints(org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider.DispatcherServletsMappingDescriptionProviderRuntimeHints.class) public class DispatcherServletsMappingDescriptionProvider extends Object implements MappingDescriptionProvider;\n// A RegistrationMappingDescription derived from a FilterRegistration.\npublic class FilterRegistrationMappingDescription extends RegistrationMappingDescription<jakarta.servlet.FilterRegistration>;\n// A MappingDescriptionProvider that describes that mappings of any Filters registered with a ServletContext.\n@ImportRuntimeHints(org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider.FiltersMappingDescriptionProviderRuntimeHints.class) public class FiltersMappingDescriptionProvider extends Object implements MappingDescriptionProvider;\n// A mapping description derived from a Registration.\npublic class RegistrationMappingDescription<T extends jakarta.servlet.Registration> extends Object;\n// Description of the conditions of a RequestMappingInfo.\npublic class RequestMappingConditionsDescription extends Object;\n// A description of a MediaTypeExpression in a request mapping condition.\npublic static class RequestMappingConditionsDescription.MediaTypeExpressionDescription extends Object;\n// A description of a NameValueExpression in a request mapping condition.\npublic static class RequestMappingConditionsDescription.NameValueExpressionDescription extends Object;\n// A mapping description derived from a ServletRegistration.\npublic class ServletRegistrationMappingDescription extends RegistrationMappingDescription<jakarta.servlet.ServletRegistration>;\n// A MappingDescriptionProvider that describes that mappings of any Servlets registered with a ServletContext.\n@ImportRuntimeHints(org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider.ServletsMappingDescriptionProviderRuntimeHints.class) public class ServletsMappingDescriptionProvider extends Object implements MappingDescriptionProvider;\n", "des": "Actuator servlet request mappings support."}
{"index": 1442, "repo": "spring-data-redis-3.1.2", "code": "package redis\n\n// ClusterRedirectException indicates that a requested slot is not served by the targeted server but can be obtained on another one.\npublic class ClusterRedirectException extends DataRetrievalFailureException;\n// DataAccessResourceFailureException indicating the current local snapshot of cluster state does no longer represent the actual remote state.\npublic class ClusterStateFailureException extends DataAccessResourceFailureException;\n// Potentially translates an Exception into appropriate DataAccessException.\npublic interface ExceptionTranslationStrategy;\n// FallbackExceptionTranslationStrategy returns RedisSystemException for unknown Exceptions.\npublic class FallbackExceptionTranslationStrategy extends PassThroughExceptionTranslationStrategy;\n// PassThroughExceptionTranslationStrategy returns null for unknown Exceptions.\npublic class PassThroughExceptionTranslationStrategy extends Object implements ExceptionTranslationStrategy;\n// Fatal exception thrown when the Redis connection fails completely.\npublic class RedisConnectionFailureException extends DataAccessResourceFailureException;\n// Exception thrown when we can't classify a Redis exception into one of Spring generic data access exceptions.\npublic class RedisSystemException extends UncategorizedDataAccessException;\n// DataRetrievalFailureException thrown when following cluster redirects exceeds the max number of edges.\npublic class TooManyClusterRedirectionsException extends DataRetrievalFailureException;\n", "des": "Root package for integrating Redis with Spring concepts."}
{"index": 1443, "repo": "spring-data-redis-3.1.2", "code": "package cache\n\n// A collection of predefined BatchStrategy implementations using KEYS or SCAN command.\npublic abstract class BatchStrategies extends Object;\n// A BatchStrategy to be used with RedisCacheWriter.\npublic interface BatchStrategy;\n// CacheKeyPrefix is a callback hook for creating custom prefixes prepended to the actual key stored in Redis.\n@FunctionalInterface public interface CacheKeyPrefix;\n// Cache statistics for a RedisCache.\npublic interface CacheStatistics;\n// The statistics collector supports capturing of relevant RedisCache operations such as hits & misses.\npublic interface CacheStatisticsCollector extends CacheStatisticsProvider;\n// Interface to be implemented by objects that expose CacheStatistics identified by cacheName.\npublic interface CacheStatisticsProvider;\n// Cache implementation using for Redis as the underlying store for cache data.\npublic class RedisCache extends AbstractValueAdaptingCache;\n// Immutable RedisCacheConfiguration used to customize RedisCache behaviour, such as caching null values, computing cache key prefixes and handling binary serialization.\npublic class RedisCacheConfiguration extends Object;\n// CacheManager backed by a RedisCache.\npublic class RedisCacheManager extends AbstractTransactionSupportingCacheManager;\n// Builder for creating a RedisCacheManager.\npublic static class RedisCacheManager.RedisCacheManagerBuilder extends Object;\n// RedisCacheWriter provides low level access to Redis commands (SET, SETNX, GET, EXPIRE,...) used for caching.\npublic interface RedisCacheWriter extends CacheStatisticsProvider;\n", "des": "Package providing a Redis implementation for Spring cache abstraction."}
{"index": 1444, "repo": "spring-data-redis-3.1.2", "code": "package connection\n\n// \npublic abstract class AbstractRedisConnection extends Object implements RedisConnection;\n// The actual BITFIELD command representation holding several BitFieldSubCommands.BitFieldSubCommands to execute.\npublic class BitFieldSubCommands extends Object implements Iterable<BitFieldSubCommands.BitFieldSubCommand>;\n// \npublic abstract static class BitFieldSubCommands.AbstractBitFieldSubCommand extends Object implements BitFieldSubCommands.BitFieldSubCommand;\n// The GET sub command used with BitFieldSubCommands.\npublic static class BitFieldSubCommands.BitFieldGet extends BitFieldSubCommands.AbstractBitFieldSubCommand;\n// \npublic static class BitFieldSubCommands.BitFieldGetBuilder extends Object;\n// The INCRBY sub command used with BitFieldSubCommands.\npublic static class BitFieldSubCommands.BitFieldIncrBy extends BitFieldSubCommands.AbstractBitFieldSubCommand;\n// \npublic static enum BitFieldSubCommands.BitFieldIncrBy.Overflow extends Enum<BitFieldSubCommands.BitFieldIncrBy.Overflow>;\n// The SET sub command used with BitFieldSubCommands.\npublic static class BitFieldSubCommands.BitFieldSet extends BitFieldSubCommands.AbstractBitFieldSubCommand;\n// \npublic static class BitFieldSubCommands.BitFieldSetBuilder extends Object;\n// Sub command to be used as part of BitFieldSubCommands.\npublic static interface BitFieldSubCommands.BitFieldSubCommand;\n// The actual Redis bitfield type representation for signed and unsigned integers used with BitFieldSubCommands.BitFieldSubCommand.\npublic static class BitFieldSubCommands.BitFieldType extends Object;\n// Offset used inside a BitFieldSubCommands.BitFieldSubCommand.\npublic static class BitFieldSubCommands.Offset extends Object;\n// Exception thrown when at least one call to a clustered redis environment fails.\npublic class ClusterCommandExecutionFailureException extends UncategorizedDataAccessException;\n// ClusterCommandExecutor takes care of running commands across the known cluster nodes.\npublic class ClusterCommandExecutor extends Object implements DisposableBean;\n// Callback interface for Redis 'low level' code using the cluster client directly.\npublic static interface ClusterCommandExecutor.ClusterCommandCallback<T,S>;\n", "des": "Connection package providing low-level abstractions for interacting with the various Redis 'drivers'/libraries."}
{"index": 1445, "repo": "spring-data-redis-3.1.2", "code": "package convert\n\n// Common type converters.\npublic abstract class Converters extends Object;\n// Converts a List of values of one type to a List of values of another type\npublic class ListConverter<S,T> extends Object implements Converter<List<S>,List<T>>;\n// Converts Longs to Booleans\npublic class LongToBooleanConverter extends Object implements Converter<Long,Boolean>;\n// Converts a Map of values of one key/value type to a Map of values of another type\npublic class MapConverter<S,T> extends Object implements Converter<Map<S,S>,Map<T,T>>;\n// \npublic enum MapToPropertiesConverter extends Enum<MapToPropertiesConverter> implements Converter<Map<?,?>,Properties>;\n// Converts a Set of values of one type to a Set of values of another type preserving item order.\npublic class SetConverter<S,T> extends Object implements Converter<Set<S>,Set<T>>;\n// Converts Strings to DataTypes\npublic class StringToDataTypeConverter extends Object implements Converter<String,DataType>;\n// Converts Strings to Properties\npublic class StringToPropertiesConverter extends Object implements Converter<String,Properties>;\n// Converter implementation to create one RedisClientInfo per line entry in given String array.\npublic class StringToRedisClientInfoConverter extends Object implements Converter<String[],List<RedisClientInfo>>;\n// Converts the results of transaction exec using a supplied Queue of FutureResults.\npublic class TransactionResultConverter<T> extends Object implements Converter<List<Object>,List<Object>>;\n", "des": "Redis specific converters used for sending data and parsing responses."}
{"index": 1446, "repo": "spring-data-redis-3.1.2", "code": "package jedis\n\n// Redis client configuration for jedis.\npublic interface JedisClientConfiguration;\n// Default JedisClientConfiguration.JedisClientConfigurationBuilder implementation to build an immutable JedisClientConfiguration.\npublic static class JedisClientConfiguration.DefaultJedisClientConfigurationBuilder extends Object implements JedisClientConfiguration.JedisClientConfigurationBuilder, JedisClientConfiguration.JedisPoolingClientConfigurationBuilder, JedisClientConfiguration.JedisSslClientConfigurationBuilder;\n// Builder for JedisClientConfiguration.\npublic static interface JedisClientConfiguration.JedisClientConfigurationBuilder;\n// Builder for Pooling-related JedisClientConfiguration.\npublic static interface JedisClientConfiguration.JedisPoolingClientConfigurationBuilder;\n// Builder for SSL-related JedisClientConfiguration.\npublic static interface JedisClientConfiguration.JedisSslClientConfigurationBuilder;\n// RedisClusterConnection implementation on top of JedisCluster. Uses the native JedisCluster api where possible and falls back to direct node communication using Jedis where needed.\npublic class JedisClusterConnection extends Object implements RedisClusterConnection;\n// Jedis specific ClusterCommandExecutor.ClusterCommandCallback.\nprotected static interface JedisClusterConnection.JedisClusterCommandCallback<T> extends ClusterCommandExecutor.ClusterCommandCallback<redis.clients.jedis.Jedis,T>;\n// Jedis specific implementation of ClusterTopologyProvider.\npublic static class JedisClusterConnection.JedisClusterTopologyProvider extends Object implements ClusterTopologyProvider;\n// Jedis specific ClusterCommandExecutor.MultiKeyClusterCommandCallback.\nprotected static interface JedisClusterConnection.JedisMultiKeyClusterCommandCallback<T> extends ClusterCommandExecutor.MultiKeyClusterCommandCallback<redis.clients.jedis.Jedis,T>;\n// RedisConnection implementation on top of Jedis library.\npublic class JedisConnection extends AbstractRedisConnection;\n// Connection factory creating Jedis based connections.\npublic class JedisConnectionFactory extends Object implements InitializingBean, DisposableBean, RedisConnectionFactory;\n// Converts Exceptions thrown from Jedis to DataAccessExceptions\npublic class JedisExceptionConverter extends Object implements Converter<Exception,DataAccessException>;\n// Converts the value returned by Jedis script eval to the expected ReturnType\npublic class JedisScriptReturnConverter extends Object implements Converter<Object,Object>;\n// \npublic class JedisSentinelConnection extends Object implements RedisSentinelConnection;\n", "des": "Connection package for Jedis library."}
{"index": 1447, "repo": "spring-data-redis-3.1.2", "code": "package lettuce\n\n// Redis client configuration for lettuce.\npublic interface LettuceClientConfiguration;\n// \npublic static class LettuceClientConfiguration.LettuceClientConfigurationBuilder extends Object;\n// Builder for SSL-related LettuceClientConfiguration.\npublic static class LettuceClientConfiguration.LettuceSslClientConfigurationBuilder extends Object;\n// RedisClusterConnection implementation on top of Lettuce Redis client.\npublic class LettuceClusterConnection extends LettuceConnection implements RedisClusterConnection, DefaultedRedisClusterConnection;\n// Lettuce specific implementation of ClusterCommandExecutor.ClusterCommandCallback.\nprotected static interface LettuceClusterConnection.LettuceClusterCommandCallback<T> extends ClusterCommandExecutor.ClusterCommandCallback<io.lettuce.core.cluster.api.sync.RedisClusterCommands<byte[],byte[]>,T>;\n// Lettuce specific implementation of ClusterCommandExecutor.MultiKeyClusterCommandCallback.\nprotected static interface LettuceClusterConnection.LettuceMultiKeyClusterCommandCallback<T> extends ClusterCommandExecutor.MultiKeyClusterCommandCallback<io.lettuce.core.cluster.api.sync.RedisClusterCommands<byte[],byte[]>,T>;\n// RedisConnection implementation on top of Lettuce Redis client.\npublic class LettuceConnection extends AbstractRedisConnection;\n// Strategy interface to control pipelining flush behavior.\npublic static interface LettuceConnection.PipeliningFlushPolicy;\n// State object associated with flushing of the currently ongoing pipeline.\npublic static interface LettuceConnection.PipeliningFlushState;\n// Connection factory creating Lettuce-based connections.\npublic class LettuceConnectionFactory extends Object implements InitializingBean, DisposableBean, RedisConnectionFactory, ReactiveRedisConnectionFactory;\n// Defines a provider for Lettuce connections.\n@FunctionalInterface public interface LettuceConnectionProvider;\n// Extension to LettuceConnectionProvider for providers that allow connection creation to specific nodes.\n@FunctionalInterface public static interface LettuceConnectionProvider.TargetAware;\n// Lettuce type converters\npublic abstract class LettuceConverters extends Converters;\n// Converts Lettuce Exceptions to DataAccessExceptions\npublic class LettuceExceptionConverter extends Object implements Converter<Exception,DataAccessException>;\n", "des": "Connection package for Lettuce Redis client."}
{"index": 1448, "repo": "spring-data-redis-3.1.2", "code": "package observability\n\n// Micrometer Observation.Context holding Lettuce contextual details.\npublic class LettuceObservationContext extends io.micrometer.observation.transport.SenderContext<Object>;\n// Tracing adapter using Micrometer's Observation.\npublic class MicrometerTracingAdapter extends Object implements io.lettuce.core.tracing.Tracing;\n// A Redis-based Observation.\npublic enum RedisObservation extends Enum<RedisObservation> implements io.micrometer.observation.docs.ObservationDocumentation;\n", "des": "Integration of Micrometer Tracing for Lettuce Observability."}
{"index": 1449, "repo": "spring-data-redis-3.1.2", "code": "package stream\n\n// A Record within the stream backed by a collection of binary field/value pairs.\npublic interface ByteBufferRecord extends MapRecord<ByteBuffer,ByteBuffer,ByteBuffer>;\n// A Record within the stream backed by a collection of binary field/value pairs.\npublic interface ByteRecord extends MapRecord<byte[],byte[],byte[]>;\n// Value object representing a Stream consumer within a consumer group.\npublic class Consumer extends Object;\n// A Record within the stream backed by a collection of field/value pairs.\npublic interface MapRecord<S,K,V> extends Record<S,Map<K,V>>, Iterable<Map.Entry<K,V>>;\n// A Record within the stream mapped to a single object.\npublic interface ObjectRecord<S,V> extends Record<S,V>;\n// Value object representing a single pending message containing its ID, the consumer that fetched the message and has still to acknowledge it, the time elapsed since the messages last delivery and the the total number of times delivered.\npublic class PendingMessage extends Object;\n// Value object holding detailed information about pending messages in consumer group for a given Range and offset.\npublic class PendingMessages extends Object implements Streamable<PendingMessage>;\n// Value Object summarizing pending messages in a consumer group.\npublic class PendingMessagesSummary extends Object;\n// Value object representing read offset for a Stream.\npublic final class ReadOffset extends Object;\n// A single entry in the stream consisting of the entry-id and the actual entry-value (typically a collection of field/value pairs).\npublic interface Record<S,V>;\n// The id of a single Record within a stream.\npublic class RecordId extends Object;\n// \npublic class StreamInfo extends Object;\n// \npublic static class StreamInfo.XInfoConsumer extends StreamInfo.XInfoObject;\n// \npublic static class StreamInfo.XInfoConsumers extends Object implements Streamable<StreamInfo.XInfoConsumer>;\n// \npublic static class StreamInfo.XInfoGroup extends StreamInfo.XInfoObject;\n// Value object holding general information about consumer groups associated with a Redis Stream.\npublic static class StreamInfo.XInfoGroups extends Object implements Streamable<StreamInfo.XInfoGroup>;\n// \npublic static class StreamInfo.XInfoObject extends Object;\n", "des": "Data structures and interfaces to interact with Redis Streams."}
{"index": 1450, "repo": "spring-data-redis-3.1.2", "code": "package util\n\n// Base implementation for a subscription handling the channel/pattern registration so subclasses only have to deal with the actual registration/unregistration.\npublic abstract class AbstractSubscription extends Object implements Subscription;\n// \npublic class ByteArraySet extends Object implements Set<ByteArrayWrapper>;\n// Simple wrapper class used for wrapping arrays so they can be used as keys inside maps.\npublic class ByteArrayWrapper extends Object implements Comparable<ByteArrayWrapper>;\n// Simple class containing various decoding utilities.\npublic abstract class DecodeUtils extends Object;\n", "des": "Internal utility package for encoding/decoding Strings to byte[] (using Base64) library."}
{"index": 1451, "repo": "spring-data-redis-3.1.2", "code": "package core\n\n// GeoOperations bound to a certain key.\npublic interface BoundGeoOperations<K,M> extends BoundKeyOperations<K>;\n// Hash operations bound to a certain key.\npublic interface BoundHashOperations<H,HK,HV> extends BoundKeyOperations<H>;\n// Operations over a Redis key.\npublic interface BoundKeyOperations<K>;\n// List operations bound to a certain key.\npublic interface BoundListOperations<K,V> extends BoundKeyOperations<K>;\n// Set operations bound to a certain key.\npublic interface BoundSetOperations<K,V> extends BoundKeyOperations<K>;\n// Redis stream specific operations bound to a certain key.\npublic interface BoundStreamOperations<K,HK,HV>;\n// Value (or String in Redis terminology) operations bound to a certain key.\npublic interface BoundValueOperations<K,V> extends BoundKeyOperations<K>;\n// ZSet (or SortedSet) operations bound to a certain key.\npublic interface BoundZSetOperations<K,V> extends BoundKeyOperations<K>;\n// Mapper translating Redis bulk value responses (typically returned by a sort query) to actual objects.\npublic interface BulkMapper<T,V>;\n// Redis operations for cluster specific operations.\npublic interface ClusterOperations<K,V>;\n// ConvertingCursor wraps a given cursor and applies given Converter to items prior to returning them.\npublic class ConvertingCursor<S,T> extends Object implements Cursor<T>;\n// Cursor abstraction to scan over the keyspace or elements within a data structure using a variant of a SCAN command.\npublic interface Cursor<T> extends CloseableIterator<T>;\n// Default implementation of TypedTuple.\npublic class DefaultTypedTuple<V> extends Object implements ZSetOperations.TypedTuple<V>;\n// Redis operations for geo commands.\npublic interface GeoOperations<K,M>;\n// Function that returns a HashMapper for a given type.\n@FunctionalInterface public interface HashMapperProvider<HK,HV>;\n// Redis map specific operations working on a hash.\npublic interface HashOperations<H,HK,HV>;\n// \npublic interface HyperLogLogOperations<K,V>;\n", "des": "Core package for integrating Redis with Spring concepts."}
{"index": 1452, "repo": "spring-data-redis-3.1.2", "code": "package convert\n\n// Bucket is the data bag for Redis hash structures to be used with RedisData.\npublic class Bucket extends Object;\n// Value object representing a path within a Bucket.\npublic static class Bucket.BucketPropertyPath extends Object;\n// Composite IndexResolver implementation that iterates over a given collection of delegate IndexResolver instances.\npublic class CompositeIndexResolver extends Object implements IndexResolver;\n// Default implementation of RedisTypeMapper allowing configuration of the key to lookup and store type information via Bucket.BucketPropertyPath in buckets.\npublic class DefaultRedisTypeMapper extends DefaultTypeMapper<Bucket.BucketPropertyPath> implements RedisTypeMapper;\n// IndexedData implementation indicating storage of data within a Redis GEO structure.\npublic class GeoIndexedPropertyValue extends Object implements IndexedData;\n// IndexedData represents a secondary index for a property path in a given keyspace.\npublic interface IndexedData;\n// IndexResolver extracts secondary index structures to be applied on a given path, PersistentProperty and value.\npublic interface IndexResolver;\n// Helper class to register JSR-310 specific Converter implementations in case the we're running on Java 8.\npublic abstract class Jsr310Converters extends Object;\n// KeyspaceConfiguration allows programmatic setup of keyspaces and time to live options for certain types.\npublic class KeyspaceConfiguration extends Object;\n// \npublic static class KeyspaceConfiguration.KeyspaceSettings extends Object;\n// MappingConfiguration is used for programmatic configuration of secondary indexes, key prefixes, expirations and the such.\npublic class MappingConfiguration extends Object;\n// RedisConverter implementation creating flat binary map structure out of a given domain type.\npublic class MappingRedisConverter extends Object implements RedisConverter, InitializingBean;\n// Value object representing a binary Redis Hash/Object identifier composed from keyspace and object id in the form of keyspace:id.\npublic static class MappingRedisConverter.BinaryKeyspaceIdentifier extends Object;\n// Value object representing a Redis Hash/Object identifier composed from keyspace and object id in the form of keyspace:id.\npublic static class MappingRedisConverter.KeyspaceIdentifier extends Object;\n// IndexResolver implementation considering properties annotated with Indexed or paths set up in IndexConfiguration.\npublic class PathIndexResolver extends Object implements IndexResolver;\n// Redis specific EntityConverter.\npublic interface RedisConverter extends EntityConverter<RedisPersistentEntity<?>,RedisPersistentProperty,Object,RedisData>;\n", "des": "Converters for Redis repository support utilizing mapping metadata."}
{"index": 1453, "repo": "spring-data-redis-3.1.2", "code": "package index\n\n// IndexDefinitionProvider that allows registering new IndexDefinition via IndexDefinitionRegistry.\npublic interface ConfigurableIndexDefinitionProvider extends IndexDefinitionProvider, IndexDefinitionRegistry;\n// \npublic class GeoIndexDefinition extends RedisIndexDefinition implements PathBasedRedisIndexDefinition;\n// Mark properties value to be included in a secondary index.\n@Documented @Retention(RUNTIME) @Target({FIELD,ANNOTATION_TYPE}) public @interface GeoIndexed;\n// IndexConfiguration allows programmatic setup of indexes.\npublic class IndexConfiguration extends Object implements ConfigurableIndexDefinitionProvider;\n// IndexDefinition allow to set up a blueprint for creating secondary index structures in Redis.\npublic interface IndexDefinition;\n// \npublic static interface IndexDefinition.Condition<T>;\n// Context in which a particular value is about to get indexed.\npublic static final class IndexDefinition.IndexingContext extends Object;\n// IndexDefinitionProvider give access to IndexDefinitions for creating secondary index structures.\npublic interface IndexDefinitionProvider;\n// Registry that allows adding IndexDefinition.\npublic interface IndexDefinitionRegistry;\n// Mark properties value to be included in a secondary index.\n@Documented @Retention(RUNTIME) @Target({FIELD,ANNOTATION_TYPE}) public @interface Indexed;\n// Converter implementation that is used to transform values for usage in a particular secondary index.\npublic interface IndexValueTransformer extends Converter<Object,Object>;\n// IndexDefinition that is based on a property paths.\npublic interface PathBasedRedisIndexDefinition extends IndexDefinition;\n// Base IndexDefinition implementation.\npublic abstract class RedisIndexDefinition extends Object implements IndexDefinition;\n// \npublic static class RedisIndexDefinition.CompositeValueTransformer extends Object implements IndexValueTransformer;\n// \npublic static enum RedisIndexDefinition.LowercaseIndexValueTransformer extends Enum<RedisIndexDefinition.LowercaseIndexValueTransformer> implements IndexValueTransformer;\n// \npublic static enum RedisIndexDefinition.NoOpValueTransformer extends Enum<RedisIndexDefinition.NoOpValueTransformer> implements IndexValueTransformer;\n// \npublic static class RedisIndexDefinition.OrCondition<T> extends Object implements IndexDefinition.Condition<T>;\n// \npublic static class RedisIndexDefinition.PathCondition extends Object implements IndexDefinition.Condition<Object>;\n// PathBasedRedisIndexDefinition for including property values in a secondary index.\npublic class SimpleIndexDefinition extends RedisIndexDefinition implements PathBasedRedisIndexDefinition;\n", "des": "Abstractions for Redis secondary indexes."}
{"index": 1454, "repo": "spring-data-redis-3.1.2", "code": "package mapping\n\n// RedisPersistentEntity implementation.\npublic class BasicRedisPersistentEntity<T> extends org.springframework.data.keyvalue.core.mapping.BasicKeyValuePersistentEntity<T,RedisPersistentProperty> implements RedisPersistentEntity<T>;\n// Redis specific MappingContext.\npublic class RedisMappingContext extends org.springframework.data.keyvalue.core.mapping.context.KeyValueMappingContext<RedisPersistentEntity<?>,RedisPersistentProperty>;\n// Redis specific PersistentEntity.\npublic interface RedisPersistentEntity<T> extends org.springframework.data.keyvalue.core.mapping.KeyValuePersistentEntity<T,RedisPersistentProperty>;\n// Redis specific PersistentProperty implementation.\npublic class RedisPersistentProperty extends org.springframework.data.keyvalue.core.mapping.KeyValuePersistentProperty<RedisPersistentProperty>;\n", "des": "Redis specific repository support mapping meta information."}
{"index": 1455, "repo": "spring-data-redis-3.1.2", "code": "package query\n\n// Utilities for SortQuery implementations.\npublic abstract class QueryUtils extends Object;\n// Internal interface part of the Sort DSL.\npublic interface SortCriterion<K>;\n// High-level abstraction over a Redis SORT (generified equivalent of SortParameters).\npublic interface SortQuery<K>;\n// Simple builder class for constructing SortQuery.\npublic class SortQueryBuilder<K> extends Object;\n", "des": "Query package for Redis template."}
{"index": 1456, "repo": "spring-data-redis-3.1.2", "code": "package script\n\n// Default implementation of ReactiveScriptExecutor.\npublic class DefaultReactiveScriptExecutor<K> extends Object implements ReactiveScriptExecutor<K>;\n// Default implementation of RedisScript.\npublic class DefaultRedisScript<T> extends Object implements RedisScript<T>, InitializingBean;\n// Default implementation of ScriptExecutor.\npublic class DefaultScriptExecutor<K> extends Object implements ScriptExecutor<K>;\n// Utilties for working with MessageDigest\npublic abstract class DigestUtils extends Object;\n// Executes RedisScripts using reactive infrastructure.\npublic interface ReactiveScriptExecutor<K>;\n// A script to be executed using the Redis scripting support available as of version 2.6\npublic interface RedisScript<T>;\n// Executes RedisScripts\npublic interface ScriptExecutor<K>;\n// RuntimeException thrown when issues occur with RedisScripts\npublic class ScriptingException extends NestedRuntimeException;\n", "des": "Lua script execution abstraction."}
{"index": 1457, "repo": "spring-data-redis-3.1.2", "code": "package types\n\n// Expiration holds a value with its associated TimeUnit.\npublic class Expiration extends Object;\n// RedisClientInfo provides general and statistical information about client connections.\npublic class RedisClientInfo extends Object;\n// \npublic static enum RedisClientInfo.INFO extends Enum<RedisClientInfo.INFO>;\n// \npublic static class RedisClientInfo.RedisClientInfoBuilder extends Object;\n", "des": "Redis domain specific types."}
{"index": 1458, "repo": "spring-data-redis-3.1.2", "code": "package hash\n\n// HashMapper based on Apache Commons BeanUtils project.\npublic class BeanUtilsHashMapper<T> extends Object implements HashMapper<T,String,String>;\n// Delegating hash mapper used for flattening objects into Strings.\npublic class DecoratingStringHashMapper<T> extends Object implements HashMapper<T,String,String>;\n// Core mapping contract between Java types and Redis hashes/maps.\npublic interface HashMapper<T,K,V>;\n// ObjectMapper based HashMapper implementation that allows flattening.\npublic class Jackson2HashMapper extends Object implements HashMapper<Object,String,Object>;\n// HashMapper based on MappingRedisConverter.\npublic class ObjectHashMapper extends Object implements HashMapper<Object,byte[],byte[]>;\n", "des": "Dedicated support package for Redis hashes."}
{"index": 1459, "repo": "spring-data-redis-3.1.2", "code": "package listener\n\n// Channel topic implementation (maps to a Redis channel).\npublic class ChannelTopic extends Object implements Topic;\n// MessageListener publishing RedisKeyExpiredEvents via ApplicationEventPublisher by listening to Redis keyspace notifications for key expirations.\npublic class KeyExpirationEventMessageListener extends KeyspaceEventMessageListener implements ApplicationEventPublisherAware;\n// Base MessageListener implementation for listening to Redis keyspace notifications.\npublic abstract class KeyspaceEventMessageListener extends Object implements MessageListener, InitializingBean, DisposableBean;\n// Pattern topic (matching multiple channels).\npublic class PatternTopic extends Object implements Topic;\n// Container providing a stream of ReactiveSubscription.ChannelMessage for messages received via Redis Pub/Sub listeners.\npublic class ReactiveRedisMessageListenerContainer extends Object implements DisposableBean;\n// Container providing asynchronous behaviour for Redis message listeners.\npublic class RedisMessageListenerContainer extends Object implements InitializingBean, DisposableBean, BeanNameAware, SmartLifecycle;\n// Topic for a Redis message.\npublic interface Topic;\n", "des": "Base package for Redis message listener / pubsub container facility"}
{"index": 1460, "repo": "spring-data-redis-3.1.2", "code": "package adapter\n\n// Message listener adapter that delegates the handling of messages to target listener methods via reflection, with flexible message type conversion.\npublic class MessageListenerAdapter extends Object implements InitializingBean, MessageListener;\n// Exception thrown when the execution of a listener method failed.\npublic class RedisListenerExecutionFailedException extends InvalidDataAccessApiUsageException;\n", "des": "Message listener adapter package."}
{"index": 1461, "repo": "spring-data-redis-3.1.2", "code": "package cdi\n\n// Base class for Bean wrappers.\npublic abstract class CdiBean<T> extends Object implements jakarta.enterprise.inject.spi.Bean<T>, jakarta.enterprise.inject.spi.PassivationCapable;\n// CdiBean to create RedisKeyValueAdapter instances.\npublic class RedisKeyValueAdapterBean extends CdiBean<RedisKeyValueAdapter>;\n// CdiBean to create RedisKeyValueTemplate instances.\npublic class RedisKeyValueTemplateBean extends CdiBean<org.springframework.data.keyvalue.core.KeyValueOperations>;\n// CdiRepositoryBean to create Redis repository instances.\npublic class RedisRepositoryBean<T> extends CdiRepositoryBean<T>;\n// CDI extension to export Redis repositories.\npublic class RedisRepositoryExtension extends CdiRepositoryExtensionSupport;\n", "des": "CDI support for Redis specific repository implementation."}
{"index": 1462, "repo": "spring-data-redis-3.1.2", "code": "package configuration\n\n// Annotation to activate Redis repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(RedisRepositoriesRegistrar.class) @QueryCreatorType(RedisQueryCreator.class) public @interface EnableRedisRepositories;\n// Redis specific ImportBeanDefinitionRegistrar.\npublic class RedisRepositoriesRegistrar extends RepositoryBeanDefinitionRegistrarSupport;\n// RepositoryConfigurationExtension for Redis.\npublic class RedisRepositoryConfigurationExtension extends org.springframework.data.keyvalue.repository.config.KeyValueRepositoryConfigurationExtension;\n", "des": "Redis repository specific configuration and bean registration."}
{"index": 1463, "repo": "spring-data-redis-3.1.2", "code": "package core\n\n// RedisEntityInformation implementation using a RedisPersistentEntity instance to lookup the necessary information.\npublic class MappingRedisEntityInformation<T,ID> extends PersistentEntityInformation<T,ID> implements RedisEntityInformation<T,ID>;\n// \npublic interface RedisEntityInformation<T,ID> extends EntityInformation<T,ID>;\n", "des": "Core domain entities for repository support."}
{"index": 1464, "repo": "spring-data-redis-3.1.2", "code": "package query\n\n// Mapper for Query-by-Example examples to an actual query.\npublic class ExampleQueryMapper extends Object;\n// Simple set of operations required to run queries against Redis.\npublic class RedisOperationChain extends Object;\n// \npublic static class RedisOperationChain.NearPath extends RedisOperationChain.PathAndValue;\n// \npublic static class RedisOperationChain.PathAndValue extends Object;\n// Redis specific query creator.\npublic class RedisQueryCreator extends AbstractQueryCreator<org.springframework.data.keyvalue.core.query.KeyValueQuery<RedisOperationChain>,RedisOperationChain>;\n", "des": "Redis specific query execution engine."}
{"index": 1465, "repo": "spring-data-redis-3.1.2", "code": "package support\n\n// Repository fragment implementing Redis Query-by-Example operations.\npublic class QueryByExampleRedisExecutor<T> extends Object implements QueryByExampleExecutor<T>, BeanFactoryAware, BeanClassLoaderAware;\n// RepositoryFactorySupport specific of handing Redis KeyValueRepository.\npublic class RedisRepositoryFactory extends org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory;\n// Adapter for Springs FactoryBean interface to allow easy setup of RedisRepositoryFactory via Spring configuration.\npublic class RedisRepositoryFactoryBean<T extends Repository<S,ID>,S,ID> extends org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean<T,S,ID>;\n", "des": "Spring context specific factory support."}
{"index": 1466, "repo": "spring-data-redis-3.1.2", "code": "package serializer\n\n// Generic Jackson 2-based RedisSerializer that maps objects to JSON using dynamic typing.\npublic class GenericJackson2JsonRedisSerializer extends Object implements RedisSerializer<Object>;\n// Generic String to byte[] (and back) serializer.\npublic class GenericToStringSerializer<T> extends Object implements RedisSerializer<T>, BeanFactoryAware;\n// RedisSerializer that can read and write JSON using Jackson's and Jackson Databind ObjectMapper.\npublic class Jackson2JsonRedisSerializer<T> extends Object implements RedisSerializer<T>;\n// Defines the contract for Object Mapping readers.\n@FunctionalInterface public interface JacksonObjectReader;\n// Defines the contract for Object Mapping writers.\n@FunctionalInterface public interface JacksonObjectWriter;\n// Java Serialization Redis serializer.\npublic class JdkSerializationRedisSerializer extends Object implements RedisSerializer<Object>;\n// Serializer adapter on top of Spring's O/X Mapping.\npublic class OxmSerializer extends Object implements InitializingBean, RedisSerializer<Object>;\n// Strategy interface that specifies a deserializer that can deserialize a binary element representation stored in Redis into an object.\n@FunctionalInterface public interface RedisElementReader<T>;\n// Strategy interface that specifies a serializer that can serialize an element to its binary representation to be used as Redis protocol payload.\n@FunctionalInterface public interface RedisElementWriter<T>;\n// Serialization context for reactive use.\npublic interface RedisSerializationContext<K,V>;\n// Builder for RedisSerializationContext.\npublic static interface RedisSerializationContext.RedisSerializationContextBuilder<K,V>;\n// Typed serialization tuple.\npublic static interface RedisSerializationContext.SerializationPair<T>;\n// Basic interface serialization and deserialization of Objects to byte arrays (binary data).\npublic interface RedisSerializer<T>;\n// Generic exception indicating a serialization/deserialization error.\npublic class SerializationException extends NestedRuntimeException;\n// Utility class with various serialization-related methods.\npublic abstract class SerializationUtils extends Object;\n// Simple String to byte[] (and back) serializer.\npublic class StringRedisSerializer extends Object implements RedisSerializer<String>;\n", "des": "Serialization/Deserialization package for converting Object to (and from) binary data."}
{"index": 1467, "repo": "spring-data-redis-3.1.2", "code": "package atomic\n\n// Atomic double backed by Redis.\npublic class RedisAtomicDouble extends Number implements Serializable, BoundKeyOperations<String>;\n// Atomic integer backed by Redis.\npublic class RedisAtomicInteger extends Number implements Serializable, BoundKeyOperations<String>;\n// Atomic long backed by Redis.\npublic class RedisAtomicLong extends Number implements Serializable, BoundKeyOperations<String>;\n", "des": "Small toolkit mirroring the java.util.atomic package in Redis."}
{"index": 1468, "repo": "spring-data-redis-3.1.2", "code": "package collections\n\n// Base implementation for RedisCollection.\npublic abstract class AbstractRedisCollection<E> extends AbstractCollection<E> implements RedisCollection<E>;\n// Utility class used mainly for type conversion by the default collection implementations.\npublic abstract class CollectionUtils extends Object;\n// Default implementation for RedisList.\npublic class DefaultRedisList<E> extends AbstractRedisCollection<E> implements RedisList<E>;\n// Default implementation for RedisMap.\npublic class DefaultRedisMap<K,V> extends Object implements RedisMap<K,V>;\n// Default implementation for RedisSet.\npublic class DefaultRedisSet<E> extends AbstractRedisCollection<E> implements RedisSet<E>;\n// Default implementation for RedisZSet.\npublic class DefaultRedisZSet<E> extends AbstractRedisCollection<E> implements RedisZSet<E>;\n// Redis extension for the Collection contract.\npublic interface RedisCollection<E> extends RedisStore;\n// Factory bean that facilitates creation of Redis-based collections.\npublic class RedisCollectionFactoryBean extends Object implements InitializingBean, BeanNameAware, FactoryBean<RedisStore>;\n// Collection types supported by this factory.\npublic static enum RedisCollectionFactoryBean.CollectionType extends Enum<RedisCollectionFactoryBean.CollectionType>;\n// Redis extension for the List contract.\npublic interface RedisList<E> extends RedisCollection<E>, List<E>, BlockingDeque<E>;\n// Map view of a Redis hash.\npublic interface RedisMap<K,V> extends RedisStore, ConcurrentMap<K,V>;\n// Properties extension for a Redis back-store.\npublic class RedisProperties extends Properties implements RedisMap<Object,Object>;\n// Redis extension for the Set contract.\npublic interface RedisSet<E> extends RedisCollection<E>, Set<E>;\n// Basic interface for Redis-based collections.\npublic interface RedisStore extends BoundKeyOperations<String>;\n// Redis ZSet (or sorted set (by weight)).\npublic interface RedisZSet<E> extends RedisCollection<E>, Set<E>;\n", "des": "Package providing implementations for most of the java.util collections on top of Redis."}
{"index": 1469, "repo": "spring-data-redis-3.1.2", "code": "package util\n\n// Some handy methods for dealing with byte arrays.\npublic final class ByteUtils extends Object;\n// Abstract utility class for common assertions used in Spring Data Redis.\npublic abstract class RedisAssertions extends Object;\n", "des": "Commonly used stuff for data manipulation throughout different driver specific implementations."}
{"index": 1470, "repo": "spring-boot-configuration-processor-3.1.1", "code": "package configurationprocessor\n\n// Annotation Processor that writes meta-data file for @ConfigurationProperties.\n@SupportedAnnotationTypes({\"org.springframework.boot.autoconfigure.AutoConfiguration\",\"org.springframework.boot.context.properties.ConfigurationProperties\",\"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpoint\",\"org.springframework.boot.actuate.endpoint.annotation.Endpoint\",\"org.springframework.boot.actuate.endpoint.jmx.annotation.JmxEndpoint\",\"org.springframework.boot.actuate.endpoint.web.annotation.RestControllerEndpoint\",\"org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpoint\",\"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint\",\"org.springframework.context.annotation.Configuration\"}) public class ConfigurationMetadataAnnotationProcessor extends AbstractProcessor;\n// Used by ConfigurationMetadataAnnotationProcessor to collect ConfigurationMetadata.\npublic class MetadataCollector extends Object;\n// A MetadataStore is responsible for the storage of metadata on the filesystem.\npublic class MetadataStore extends Object;\n", "des": "Annotation processor to create @ConfigurationProperties meta-data files."}
{"index": 1471, "repo": "spring-boot-configuration-processor-3.1.1", "code": "package fieldvalues\n\n// Parser which can be used to obtain the field values from an TypeElement.\n@FunctionalInterface public interface FieldValuesParser;\n", "des": "Abstraction for field value parsing."}
{"index": 1472, "repo": "spring-boot-configuration-processor-3.1.1", "code": "package javac\n\n// FieldValuesParser implementation for the standard Java compiler.\npublic class JavaCompilerFieldValuesParser extends Object implements FieldValuesParser;\n", "des": "Field value parsing for the standard Java compiler."}
{"index": 1473, "repo": "spring-boot-configuration-processor-3.1.1", "code": "package metadata\n\n// Configuration meta-data.\npublic class ConfigurationMetadata extends Object;\n// Thrown to indicate that some meta-data is invalid.\npublic class InvalidConfigurationMetadataException extends RuntimeException;\n// Describe an item deprecation.\npublic class ItemDeprecation extends Object;\n// Provide hints on an ItemMetadata.\npublic class ItemHint extends Object implements Comparable<ItemHint>;\n// A hint for a value.\npublic static class ItemHint.ValueHint extends Object;\n// A value provider.\npublic static class ItemHint.ValueProvider extends Object;\n// A group or property meta-data item from some ConfigurationMetadata.\npublic final class ItemMetadata extends Object implements Comparable<ItemMetadata>;\n// The item type.\npublic static enum ItemMetadata.ItemType extends Enum<ItemMetadata.ItemType>;\n// Marshaller to write ConfigurationMetadata as JSON.\npublic class JsonMarshaller extends Object;\n", "des": "The configuration properties meta-data model and JSON writing support."}
{"index": 1474, "repo": "spring-shell-core-3.1.2", "code": "package shell\n\n// Indicates whether or not a command is currently available.\npublic class Availability extends Object;\n// Interface resolving Availability.\n@FunctionalInterface public interface AvailabilityProvider extends Supplier<Availability>;\n// A ReflectiveProcessor implementation that registers methods of a return type Availability from a target which is a class.\npublic final class AvailabilityReflectiveProcessor extends Object implements org.springframework.aot.hint.annotation.ReflectiveProcessor;\n// \npublic interface Command;\n// Encapsulates help metadata about a shell command.\npublic static class Command.Help extends Object;\n// Indicates that a command exists but is currently not invokable.\npublic class CommandNotCurrentlyAvailable extends RuntimeException;\n// A result to be handled by the ResultHandler when no command could be mapped to user input\npublic class CommandNotFound extends RuntimeException;\n// An extension of ParsedLine that, being aware of the quoting and escaping rules of the Parser that produced it, knows if and how a completion candidate should be escaped/quoted.\n@FunctionalInterface public interface CompletingParsedLine;\n// Represents the buffer context in which completion was triggered.\npublic class CompletionContext extends Object;\n// Represents a proposal for TAB completion, made not only of the text to append, but also metadata about the proposal.\npublic class CompletionProposal extends Object;\n// Default ShellApplicationRunner which dispatches to the first ordered ShellRunner able to handle the shell.\n@Order(0) public class DefaultShellApplicationRunner extends Object implements ShellApplicationRunner;\n// This exception, when thrown and caught, will ask the shell to gracefully shutdown.\npublic class ExitRequest extends RuntimeException;\n// Represents the input buffer to the shell.\npublic interface Input;\n// To be implemented by components able to provide a \"line\" of user input, whether interactively or by batch.\npublic interface InputProvider;\n// \npublic class JnaRuntimeHints extends Object implements org.springframework.aot.hint.RuntimeHintsRegistrar;\n// Strategy interface for registering commands.\npublic interface MethodTargetRegistrar;\n// Thrown when no ParameterResolver is found for a parameter during a resolve operation.\npublic class ParameterResolverMissingException extends RuntimeException;\n// Thrown when one or more parameters fail bean validation constraints.\npublic class ParameterValidationException extends RuntimeException;\n", "des": "Contains core classes for Spring Shell, irrespective of the way commands are actually implemented."}
{"index": 1475, "repo": "spring-shell-core-3.1.2", "code": "package jline\n\n// Shameful copy-paste of JLine's DefaultParser which creates CompletingParsedLine.\npublic class ExtendedDefaultParser extends Object implements org.jline.reader.Parser;\n// An InputProvider that reads input from file-like sources.\npublic class FileInputProvider extends Object implements InputProvider, Closeable;\n// A ShellRunner that bootstraps the shell in interactive mode.\n@Order(0) public class InteractiveShellRunner extends Object implements ShellRunner;\n// \npublic static class InteractiveShellRunner.JLineInputProvider extends Object implements InputProvider;\n// A ShellRunner that executes commands without entering interactive shell mode.\n@Order(-50) public class NonInteractiveShellRunner extends Object implements ShellRunner;\n// Called at each REPL cycle to decide what the prompt should be.\npublic interface PromptProvider;\n// A ShellRunner that looks for process arguments that start with @, which are then interpreted as references to script files to run and exit.\n@Order(-100) public class ScriptShellRunner extends Object implements ShellRunner;\n", "des": "Contains classes that leverage the JLine library to hook into the Spring Shell REPL."}
{"index": 1476, "repo": "spring-shell-core-3.1.2", "code": "package result\n\n// A ResultHandler that knows how to render JLine's AttributedCharSequence.\npublic class AttributedCharSequenceResultHandler extends TerminalAwareResultHandler<org.jline.utils.AttributedCharSequence>;\n// Provider for a message used within CommandNotFoundResultHandler.\n@FunctionalInterface public interface CommandNotFoundMessageProvider extends Function<CommandNotFoundMessageProvider.ProviderContext,String>;\n// Context for CommandNotFoundResultHandler.\npublic static interface CommandNotFoundMessageProvider.ProviderContext;\n// ResultHandler for CommandNotFound using CommandNotFoundMessageProvider to provide an error message.\npublic final class CommandNotFoundResultHandler extends TerminalAwareResultHandler<CommandNotFound>;\n// A simple ResultHandler that deals with Objects (hence comes as a last resort) and prints the Object.toString() value of results to standard out.\npublic class DefaultResultHandler extends TerminalAwareResultHandler<Object>;\n// \npublic interface GenericResultHandler;\n// Base implementation suitable for use in most environments.\npublic class GenericResultHandlerService extends Object implements ResultHandlerService;\n// Displays validation errors on the terminal.\npublic class ParameterValidationExceptionResultHandler extends TerminalAwareResultHandler<ParameterValidationException>;\n// Used for explicit configuration of ResultHandlers.\n@Configuration(proxyBeanMethods=false) public class ResultHandlerConfig extends Object;\n// \npublic class ResultHandlerNotFoundException extends ResultHandlingException;\n// \npublic class ResultHandlingException extends org.springframework.core.NestedRuntimeException;\n// Base class for ResultHandlers that rely on JLine's Terminal.\npublic abstract class TerminalAwareResultHandler<T> extends Object implements ResultHandler<T>;\n// A ResultHandler that prints TerminalSizeAware according to the Terminal size.\npublic class TerminalSizeAwareResultHandler extends TerminalAwareResultHandler<org.springframework.shell.TerminalSizeAware>;\n// A ResultHandler that prints thrown exceptions messages in red.\npublic class ThrowableResultHandler extends TerminalAwareResultHandler<Throwable>;\n", "des": "Contains strategies for dealing with results of commands."}
{"index": 1477, "repo": "tribuo-core-4.3.1", "code": "package tribuo\n\n// Same as a CategoricalInfo, but with an additional int id field.\npublic class CategoricalIDInfo extends CategoricalInfo implements VariableIDInfo;\n// Stores information about Categorical features.\npublic class CategoricalInfo extends SkeletalVariableInfo;\n// It's a DataSource that's also Configurable.\npublic interface ConfigurableDataSource<T extends Output<T>> extends DataSource<T>, com.oracle.labs.mlrg.olcut.config.Configurable;\n// A class for sets of data, which are used to train and evaluate classifiers.\npublic abstract class Dataset<T extends Output<T>> extends Object implements Iterable<Example<T>>, ProtoSerializable<org.tribuo.protos.core.DatasetProto>, com.oracle.labs.mlrg.olcut.provenance.Provenancable<DatasetProvenance>, Serializable;\n// A interface for things that can be given to a Dataset's constructor.\npublic interface DataSource<T extends Output<T>> extends com.oracle.labs.mlrg.olcut.provenance.Provenancable<DataSourceProvenance>, Iterable<Example<T>>;\n// An example used for training and evaluation.\npublic abstract class Example<T extends Output<T>> extends Object implements Iterable<Feature>, ProtoSerializable<org.tribuo.protos.core.ExampleProto>, Serializable;\n// Holds an Example, a Prediction and a Map from String to List of Pairs that contains the per output explanation.\npublic class Excuse<T extends Output<T>> extends Object;\n// A class for features.\npublic class Feature extends Object implements Serializable, Cloneable, Comparable<Feature>;\n// A map from Strings to VariableInfo objects storing information about a feature.\npublic abstract class FeatureMap extends Object implements Serializable, ProtoSerializable<org.tribuo.protos.core.FeatureDomainProto>, Iterable<VariableInfo>;\n// An interface for feature selection algorithms.\npublic interface FeatureSelector<T extends Output<T>> extends com.oracle.labs.mlrg.olcut.config.Configurable, com.oracle.labs.mlrg.olcut.provenance.Provenancable<FeatureSelectorProvenance>;\n", "des": "Provides the core interfaces and classes for using Tribuo."}
{"index": 1478, "repo": "tribuo-core-4.3.1", "code": "package dataset\n\n// DatasetView provides an immutable view on another Dataset that only exposes selected examples.\npublic final class DatasetView<T extends Output<T>> extends ImmutableDataset<T>;\n// Provenance for the DatasetView.\npublic static final class DatasetView.DatasetViewProvenance extends DatasetProvenance;\n// This class creates a pruned dataset in which low frequency features that occur less than the provided minimum cardinality have been removed.\npublic class MinimumCardinalityDataset<T extends Output<T>> extends ImmutableDataset<T>;\n// Provenance for MinimumCardinalityDataset.\npublic static class MinimumCardinalityDataset.MinimumCardinalityDatasetProvenance extends DatasetProvenance;\n// This class creates a pruned dataset which only contains the selected features.\npublic final class SelectedFeatureDataset<T extends Output<T>> extends ImmutableDataset<T>;\n// Provenance for SelectedFeatureDataset.\npublic static final class SelectedFeatureDataset.SelectedFeatureDatasetProvenance extends DatasetProvenance;\n", "des": "Provides utility datasets which subsample or otherwise transform the wrapped dataset."}
{"index": 1479, "repo": "tribuo-core-4.3.1", "code": "package datasource\n\n// Aggregates multiple ConfigurableDataSources, uses AggregateDataSource.IterationOrder to control the iteration order.\npublic class AggregateConfigurableDataSource<T extends Output<T>> extends Object implements ConfigurableDataSource<T>;\n// Provenance for the AggregateConfigurableDataSource.\npublic static class AggregateConfigurableDataSource.AggregateConfigurableDataSourceProvenance extends com.oracle.labs.mlrg.olcut.provenance.impl.SkeletalConfiguredObjectProvenance implements DataSourceProvenance;\n// Aggregates multiple DataSources, uses AggregateDataSource.IterationOrder to control the iteration order.\npublic class AggregateDataSource<T extends Output<T>> extends Object implements DataSource<T>;\n// Provenance for the AggregateDataSource.\npublic static class AggregateDataSource.AggregateDataSourceProvenance extends Object implements DataSourceProvenance;\n// Specifies the iteration order of the inner sources.\npublic static enum AggregateDataSource.IterationOrder extends Enum<AggregateDataSource.IterationOrder>;\n// A DataSource which can read IDX formatted data (i.e., MNIST).\npublic final class IDXDataSource<T extends Output<T>> extends Object implements ConfigurableDataSource<T>;\n// Java side representation for an IDX file.\npublic static class IDXDataSource.IDXData extends Object;\n// Provenance class for IDXDataSource.\npublic static final class IDXDataSource.IDXDataSourceProvenance extends com.oracle.labs.mlrg.olcut.provenance.impl.SkeletalConfiguredObjectProvenance implements DataSourceProvenance;\n// The possible IDX input formats.\npublic static enum IDXDataSource.IDXType extends Enum<IDXDataSource.IDXType>;\n// A DataSource which can read LibSVM formatted data.\npublic final class LibSVMDataSource<T extends Output<T>> extends Object implements ConfigurableDataSource<T>;\n// The provenance for a LibSVMDataSource.\npublic static final class LibSVMDataSource.LibSVMDataSourceProvenance extends com.oracle.labs.mlrg.olcut.provenance.impl.SkeletalConfiguredObjectProvenance implements DataSourceProvenance;\n// A data source which wraps up a list of Examples along with their DataSourceProvenance and an OutputFactory.\npublic class ListDataSource<T extends Output<T>> extends Object implements DataSource<T>;\n", "des": "Simple data sources for ingesting or aggregating data."}
{"index": 1480, "repo": "tribuo-core-4.3.1", "code": "package ensemble\n\n// A Trainer that wraps another trainer and produces a bagged ensemble.\npublic class BaggingTrainer<T extends Output<T>> extends Object implements Trainer<T>;\n// An interface for combining predictions.\npublic interface EnsembleCombiner<T extends Output<T>> extends com.oracle.labs.mlrg.olcut.config.Configurable, ProtoSerializable<org.tribuo.protos.core.EnsembleCombinerProto>, com.oracle.labs.mlrg.olcut.provenance.Provenancable<com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance>, Serializable;\n// An Excuse which has a List of excuses for each of the ensemble members.\npublic class EnsembleExcuse<T extends Output<T>> extends Excuse<T>;\n// A model which contains a list of other Models.\npublic abstract class EnsembleModel<T extends Output<T>> extends Model<T>;\n// An ensemble model that uses weights to combine the ensemble member predictions.\npublic final class WeightedEnsembleModel<T extends Output<T>> extends EnsembleModel<T> implements ONNXExportable;\n", "des": "Provides an interface for model prediction combinations, two base classes for ensemble models, a base class for ensemble excuses, and a Bagging implementation."}
{"index": 1481, "repo": "tribuo-core-4.3.1", "code": "package evaluation\n\n// Base class for evaluators.\npublic abstract class AbstractEvaluator<T extends Output<T>,C extends MetricContext<T>,E extends Evaluation<T>,M extends EvaluationMetric<T,C>> extends Object implements Evaluator<T,E>;\n// A class that does k-fold cross-validation.\npublic class CrossValidation<T extends Output<T>,E extends Evaluation<T>> extends Object;\n// Descriptive statistics calculated across a list of doubles.\npublic final class DescriptiveStats extends Object;\n// An immutable evaluation of a specific model and dataset.\npublic interface Evaluation<T extends Output<T>> extends com.oracle.labs.mlrg.olcut.provenance.Provenancable<EvaluationProvenance>;\n// Aggregates metrics from a list of evaluations, or a list of models and datasets.\npublic final class EvaluationAggregator extends Object;\n// Renders an Evaluation into a String.\n@FunctionalInterface public interface EvaluationRenderer<T extends Output<T>,E extends Evaluation<T>>;\n// An evaluation factory which produces immutable Evaluations of a given Dataset using the given Model.\npublic interface Evaluator<T extends Output<T>,E extends Evaluation<T>>;\n// A k-fold splitter to be used in cross-validation.\npublic class KFoldSplitter<T extends Output<T>> extends Object;\n// Stores a train/test split for a dataset.\npublic static class KFoldSplitter.TrainTestFold<T extends Output<T>> extends Object;\n// An evaluator which aggregates predictions and produces Evaluations covering all the Predictions it has seen or created.\npublic final class OnlineEvaluator<T extends Output<T>,E extends Evaluation<T>> extends Object;\n// Splits data into training and testing sets.\npublic class TrainTestSplitter<T extends Output<T>> extends Object;\n// Provenance for a split data source.\npublic static class TrainTestSplitter.SplitDataSourceProvenance extends Object implements DataSourceProvenance;\n", "des": "Evaluation base classes, along with code for train/test splits and cross validation."}
{"index": 1482, "repo": "tribuo-core-4.3.1", "code": "package metrics\n\n// A metric that can be calculated for the specified output type.\npublic interface EvaluationMetric<T extends Output<T>,C extends MetricContext<T>>;\n// Specifies what form of average to use for a EvaluationMetric.\npublic static enum EvaluationMetric.Average extends Enum<EvaluationMetric.Average>;\n// The context for a metric or set of metrics.\npublic abstract class MetricContext<T extends Output<T>> extends Object;\n// Just an easier-to-read alias for Pair<MetricTarget<T>, String>.\npublic final class MetricID<T extends Output<T>> extends com.oracle.labs.mlrg.olcut.util.Pair<MetricTarget<T>,String>;\n// Used by a given EvaluationMetric to determine whether it should compute its value for a specific Output value or whether it should average them.\npublic class MetricTarget<T extends Output<T>> extends Object;\n", "des": "This package contains the infrastructure classes for building evaluation metrics."}
{"index": 1483, "repo": "tribuo-core-4.3.1", "code": "package hash\n\n// Hashes names using String.hashCode().\npublic final class HashCodeHasher extends Hasher;\n// Provenance for the HashCodeHasher.\npublic static final class HashCodeHasher.HashCodeHasherProvenance extends Object implements com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance;\n// A FeatureMap used by the HashingTrainer to provide feature name hashing and guarantee that the Model does not contain feature name information, but still works with unhashed features names.\npublic final class HashedFeatureMap extends ImmutableFeatureMap;\n// An abstract base class for hash functions used to hash the names of features.\npublic abstract class Hasher extends Object implements com.oracle.labs.mlrg.olcut.config.Configurable, com.oracle.labs.mlrg.olcut.provenance.Provenancable<com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance>, Serializable, ProtoSerializable<org.tribuo.protos.core.HasherProto>;\n// An Options implementation which provides CLI arguments for the model hashing functionality.\npublic class HashingOptions extends Object implements com.oracle.labs.mlrg.olcut.config.Options;\n// Supported types of hashes in CLI programs.\npublic static enum HashingOptions.ModelHashingType extends Enum<HashingOptions.ModelHashingType>;\n// A Trainer which hashes the Dataset before the Model is produced.\npublic final class HashingTrainer<T extends Output<T>> extends Object implements Trainer<T>;\n// Hashes Strings using the supplied MessageDigest type.\npublic final class MessageDigestHasher extends Hasher;\n// Provenance for MessageDigestHasher.\npublic static final class MessageDigestHasher.MessageDigestHasherProvenance extends Object implements com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance;\n// Hashes names using String.hashCode(), then reduces the dimension.\npublic final class ModHashCodeHasher extends Hasher;\n// Provenance for the ModHashCodeHasher.\npublic static final class ModHashCodeHasher.ModHashCodeHasherProvenance extends Object implements com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance;\n", "des": "Provides the base interface and implementations of the Model hashing which obscures the feature names stored in a model."}
{"index": 1484, "repo": "tribuo-core-4.3.1", "code": "package impl\n\n// An Example backed by two arrays, one of String and one of double.\npublic class ArrayExample<T extends Output<T>> extends Example<T>;\n// An Example backed by a single array of feature names.\npublic final class BinaryFeaturesExample<T extends Output<T>> extends Example<T>;\n// Serialization carrier for common fields in Dataset.\npublic final class DatasetDataCarrier<T extends Output<T>> extends Object;\n// A version of ArrayExample which also has the id numbers.\npublic class IndexedArrayExample<T extends Output<T>> extends ArrayExample<T>;\n// A tuple of the feature name, id and value.\npublic static class IndexedArrayExample.FeatureTuple extends Object;\n// This class will not be performant until value types are available in Java.\npublic class ListExample<T extends Output<T>> extends Example<T> implements Serializable;\n// Serialization carrier for common fields in Model and SequenceModel.\npublic final class ModelDataCarrier<T extends Output<T>> extends Object;\n", "des": "Provides implementations of base classes and interfaces from org.tribuo."}
{"index": 1485, "repo": "tribuo-core-4.3.1", "code": "package protos\n\n// Interface for serializing an implementing object to the specified protobuf.\npublic interface ProtoSerializable<T extends com.google.protobuf.Message>;\n// Mark a class as being ProtoSerializable and specify the class type used to serialize the \"serialized_data\".\n@Retention(RUNTIME) @Target(TYPE) public @interface ProtoSerializableClass;\n// Annotation which denotes that a field should be part of the protobuf serialized representation.\n@Retention(RUNTIME) @Target(FIELD) public @interface ProtoSerializableField;\n// Annotation which denotes that the map field this is applied to is serialized as two repeated fields, one for keys and one for values.\n@Retention(RUNTIME) @Target(FIELD) public @interface ProtoSerializableKeysValuesField;\n// Annotation which denotes that a map field should be part of the protobuf serialized representation.\n@Retention(RUNTIME) @Target(FIELD) public @interface ProtoSerializableMapField;\n// Annotation which denotes that the map field this is applied to is serialized as a list of values.\n@Retention(RUNTIME) @Target(FIELD) public @interface ProtoSerializableMapValuesField;\n// Utilities for working with Tribuo protobufs.\npublic final class ProtoUtil extends Object;\n", "des": "Classes which control the serialization of Tribuo objects to and from protocol buffers."}
{"index": 1486, "repo": "tribuo-core-4.3.1", "code": "package provenance\n\n// A tag interface for configurable data source provenance.\npublic interface ConfiguredDataSourceProvenance extends DataSourceProvenance, com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance;\n// Tag interface for data sources provenances.\npublic interface DataProvenance extends com.oracle.labs.mlrg.olcut.provenance.ObjectProvenance;\n// Base class for dataset provenance.\npublic class DatasetProvenance extends Object implements DataProvenance, com.oracle.labs.mlrg.olcut.provenance.ObjectProvenance;\n// Data source provenance.\npublic interface DataSourceProvenance extends DataProvenance, com.oracle.labs.mlrg.olcut.provenance.ObjectProvenance;\n// Model provenance for ensemble models.\npublic class EnsembleModelProvenance extends ModelProvenance;\n// Provenance for evaluations.\npublic final class EvaluationProvenance extends Object implements com.oracle.labs.mlrg.olcut.provenance.ObjectProvenance;\n// A tag interface for feature selection algorithms.\npublic interface FeatureSelectorProvenance extends com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance;\n// Contains provenance information for an instance of a SelectedFeatureSet.\npublic final class FeatureSetProvenance extends Object implements com.oracle.labs.mlrg.olcut.provenance.ObjectProvenance;\n// Contains provenance information for an instance of a Model.\npublic class ModelProvenance extends Object implements com.oracle.labs.mlrg.olcut.provenance.ObjectProvenance;\n// A tag provenance for an output factory.\npublic interface OutputFactoryProvenance extends com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance;\n// This class stores a String describing the data source, along with a timestamp.\npublic class SimpleDataSourceProvenance extends Object implements DataSourceProvenance;\n// The skeleton of a TrainerProvenance that extracts the configured parameters.\npublic abstract class SkeletalTrainerProvenance extends com.oracle.labs.mlrg.olcut.provenance.impl.SkeletalConfiguredObjectProvenance implements TrainerProvenance;\n", "des": "Provides Tribuo specific infrastructure for the Provenance system which tracks models and datasets."}
{"index": 1487, "repo": "tribuo-core-4.3.1", "code": "package impl\n\n// An empty DatasetProvenance, should not be used except by the provenance removal system.\npublic final class EmptyDatasetProvenance extends DatasetProvenance;\n// An empty DataSourceProvenance, should not be used except by the provenance removal system.\npublic final class EmptyDataSourceProvenance extends Object implements DataSourceProvenance;\n// An empty TrainerProvenance, should not be used except by the provenance removal system.\npublic final class EmptyTrainerProvenance extends Object implements TrainerProvenance;\n// An implementation of FeatureSelectorProvenance which delegates everything to SkeletalConfiguredObjectProvenance.\npublic final class FeatureSelectorProvenanceImpl extends com.oracle.labs.mlrg.olcut.provenance.impl.SkeletalConfiguredObjectProvenance implements FeatureSelectorProvenance;\n// A TrainerProvenance with a timestamp, used when there was no trainer involved in model construction (e.g., creating an EnsembleModel from existing models).\npublic final class TimestampedTrainerProvenance extends Object implements TrainerProvenance;\n// An implementation of TrainerProvenance that delegates everything to SkeletalTrainerProvenance.\npublic final class TrainerProvenanceImpl extends SkeletalTrainerProvenance;\n", "des": "Provides internal implementations for empty provenance classes and TrainerProvenance."}
{"index": 1488, "repo": "tribuo-core-4.3.1", "code": "package sequence\n\n// Base class for sequence evaluators.\npublic abstract class AbstractSequenceEvaluator<T extends Output<T>,C extends MetricContext<T>,E extends SequenceEvaluation<T>,M extends EvaluationMetric<T,C>> extends Object implements SequenceEvaluator<T,E>;\n// A SequenceTrainer that hashes all the feature names on the way in.\npublic final class HashingSequenceTrainer<T extends Output<T>> extends Object implements SequenceTrainer<T>;\n// Provenance for HashingSequenceTrainer.\npublic static class HashingSequenceTrainer.HashingSequenceTrainerProvenance extends SkeletalTrainerProvenance;\n// This is a SequenceDataset which has an ImmutableFeatureMap to store the feature information.\npublic class ImmutableSequenceDataset<T extends Output<T>> extends SequenceDataset<T> implements Serializable;\n// A SequenceModel which independently predicts each element of the sequence.\npublic class IndependentSequenceModel<T extends Output<T>> extends SequenceModel<T>;\n// Trains a sequence model by training a regular model to independently predict every example in each sequence.\npublic class IndependentSequenceTrainer<T extends Output<T>> extends Object implements SequenceTrainer<T>;\n// This class creates a pruned dataset in which low frequency features that occur less than the provided minimum cardinality have been removed.\npublic class MinimumCardinalitySequenceDataset<T extends Output<T>> extends ImmutableSequenceDataset<T>;\n// Provenance for MinimumCardinalitySequenceDataset.\npublic static class MinimumCardinalitySequenceDataset.MinimumCardinalitySequenceDatasetProvenance extends DatasetProvenance;\n// A MutableSequenceDataset is a SequenceDataset with a MutableFeatureMap which grows over time.\npublic class MutableSequenceDataset<T extends Output<T>> extends SequenceDataset<T>;\n// A class for sets of data, which are used to train and evaluate classifiers.\npublic abstract class SequenceDataset<T extends Output<T>> extends Object implements Iterable<SequenceExample<T>>, ProtoSerializable<org.tribuo.protos.core.SequenceDatasetProto>, com.oracle.labs.mlrg.olcut.provenance.Provenancable<DatasetProvenance>, Serializable;\n", "des": "Provides core classes for working with sequences of Examples."}
{"index": 1489, "repo": "tribuo-core-4.3.1", "code": "package transform\n\n// An interface representing a class of transformations which can be applied to a feature.\npublic interface Transformation extends com.oracle.labs.mlrg.olcut.config.Configurable, com.oracle.labs.mlrg.olcut.provenance.Provenancable<TransformationProvenance>;\n// A carrier type for a set of transformations to be applied to a Dataset.\npublic class TransformationMap extends Object implements com.oracle.labs.mlrg.olcut.config.Configurable, com.oracle.labs.mlrg.olcut.provenance.Provenancable<com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance>;\n// A carrier type as OLCUT does not support nested generics.\npublic static final class TransformationMap.TransformationList extends Object implements com.oracle.labs.mlrg.olcut.config.Configurable, com.oracle.labs.mlrg.olcut.provenance.Provenancable<com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance>;\n// A tag interface for provenances in the transformation system.\npublic interface TransformationProvenance extends com.oracle.labs.mlrg.olcut.provenance.ConfiguredObjectProvenance;\n// Wraps a Model with it's TransformerMap so all Examples are transformed appropriately before the model makes predictions.\npublic class TransformedModel<T extends Output<T>> extends Model<T>;\n// A fitted Transformation which can apply a transform to the input value.\npublic interface Transformer extends ProtoSerializable<org.tribuo.protos.core.TransformerProto>, Serializable;\n// A collection of Transformers which can be applied to a Dataset or Example.\npublic final class TransformerMap extends Object implements ProtoSerializable<org.tribuo.protos.core.TransformerMapProto>, com.oracle.labs.mlrg.olcut.provenance.Provenancable<TransformerMap.TransformerMapProvenance>, Serializable;\n// Provenance for TransformerMap.\npublic static final class TransformerMap.TransformerMapProvenance extends Object implements com.oracle.labs.mlrg.olcut.provenance.ObjectProvenance;\n", "des": "Provides infrastructure for applying transformations to a Dataset."}
{"index": 1490, "repo": "tribuo-core-4.3.1", "code": "package transformations\n\n// A Transformation which bins values.\npublic final class BinningTransformation extends Object implements Transformation;\n// Provenance for BinningTransformation.\npublic static final class BinningTransformation.BinningTransformationProvenance extends Object implements TransformationProvenance;\n// The implementation of a Transformer which splits the input into n bins.\npublic static final class BinningTransformation.BinningTransformer extends Object implements Transformer;\n// The allowed binning types.\npublic static enum BinningTransformation.BinningType extends Enum<BinningTransformation.BinningType>;\n// A feature transformation that computes the IDF for features and then transforms them with a TF-IDF weighting.\npublic class IDFTransformation extends Object implements Transformation;\n// Provenance for IDFTransformation.\npublic static final class IDFTransformation.IDFTransformationProvenance extends Object implements TransformationProvenance;\n// A Transformation which takes an observed distribution and rescales it so all values are between the desired min and max.\npublic final class LinearScalingTransformation extends Object implements Transformation;\n// Provenance for LinearScalingTransformation.\npublic static final class LinearScalingTransformation.LinearScalingTransformationProvenance extends Object implements TransformationProvenance;\n// A Transformation which takes an observed distribution and rescales it so it has the desired mean and standard deviation.\npublic final class MeanStdDevTransformation extends Object implements Transformation;\n// Provenance for MeanStdDevTransformation.\npublic static final class MeanStdDevTransformation.MeanStdDevTransformationProvenance extends Object implements TransformationProvenance;\n// This is used for stateless functions such as exp, log, addition or multiplication by a constant.\npublic final class SimpleTransform extends Object implements Transformer, Transformation, TransformStatistics;\n// Operations understood by this Transformation.\npublic static enum SimpleTransform.Operation extends Enum<SimpleTransform.Operation>;\n// Provenance for SimpleTransform.\npublic static final class SimpleTransform.SimpleTransformProvenance extends Object implements TransformationProvenance;\n", "des": "Provides implementations of standard transformations like binning, scaling, taking logs and exponents."}
{"index": 1491, "repo": "tribuo-core-4.3.1", "code": "package util\n\n// Utilities for nice HTML output that can be put in wikis and such.\npublic final class HTMLOutput extends Object;\n// A Pair of a primitive int and a primitive double.\npublic final class IntDoublePair extends Object;\n// An accumulator for online calculation of the mean and variance of a stream of doubles.\npublic final class MeanVarianceAccumulator extends Object implements Serializable;\n// An interface which can merge double values.\n@FunctionalInterface public interface Merger;\n// The MurmurHash3 algorithm was created by Austin Appleby and placed in the public domain.\npublic final class MurmurHash3 extends Object;\n// 128 bits of state\npublic static final class MurmurHash3.LongPair extends Object;\n// Ye olde util class.\npublic final class Util extends Object;\n", "des": "Provides utilities which don't have other Tribuo dependencies."}
{"index": 1492, "repo": "wicket-extensions-10.0.0-M1", "code": "package breadcrumb\n\n// A component that renders bread crumbs.\npublic class BreadCrumbBar extends org.apache.wicket.markup.html.panel.Panel implements IBreadCrumbModel;\n// A link that when clicked will set the the active bread crumb participant to the one that is returned by BreadCrumbLink.getParticipant(String).\npublic abstract class BreadCrumbLink extends org.apache.wicket.markup.html.link.Link<Void>;\n// Utility class for working with bread crumb model listeners.\npublic final class BreadCrumbModelListenerSupport extends Object implements org.apache.wicket.util.io.IClusterable;\n// Default breadcrumb model implementation that should be good for 99% of the use cases out there.\npublic class DefaultBreadCrumbsModel extends Object implements IBreadCrumbModel;\n// Bread crumbs provide a means to track certain history of client actions.\npublic interface IBreadCrumbModel extends org.apache.wicket.util.io.IClusterable;\n// Bread crumb model listeners get notified by bread crumb models of activation, addition and removal events.\npublic interface IBreadCrumbModelListener extends EventListener, org.apache.wicket.util.io.IClusterable;\n// Bread crumb participants function as proxies for components that are part of a bread crumb hierarchy.\npublic interface IBreadCrumbParticipant extends org.apache.wicket.util.io.IClusterable;\n", "des": "Package for working with bread crumb components."}
{"index": 1493, "repo": "wicket-extensions-10.0.0-M1", "code": "package panel\n\n// A panel that participates with a bread crumb model.\npublic abstract class BreadCrumbPanel extends org.apache.wicket.markup.html.panel.Panel implements IBreadCrumbParticipant;\n// Simple factory that creates instances of a bread crumb panel based on the class it is constructed with.\npublic final class BreadCrumbPanelFactory extends Object implements IBreadCrumbPanelFactory;\n// Bread crumb link specifically for bread crumb panels.\npublic class BreadCrumbPanelLink extends BreadCrumbLink;\n// Base implementation for Panel/ Component based IBreadCrumbParticipant that decouples the implementation from the actual panel class.\npublic abstract class BreadCrumbParticipantDelegate extends Object implements IBreadCrumbParticipant;\n// Factory interface to enabled deferred creation of a bread crumb panel while getting the proper id for creation.\n@FunctionalInterface public interface IBreadCrumbPanelFactory extends org.apache.wicket.util.io.IClusterable;\n", "des": "This package contains a panel based implementation of bread crumb participants."}
{"index": 1494, "repo": "wicket-extensions-10.0.0-M1", "code": "package basic\n\n// This implementation adds link render strategies for email addresses and urls.\npublic class DefaultLinkParser extends LinkParser;\n// ILinkParser parses an input text and performs modifications according to its render strategies.\n@FunctionalInterface public interface ILinkParser;\n// An implementation of ILinkRenderStrategy transforms a link target (e.g.\n@FunctionalInterface public interface ILinkRenderStrategy;\n// This base implementation iterates over all provided ILinkRenderStrategy implementations and applies them to the input text.\npublic class LinkParser extends Object implements ILinkParser;\n// If you have email addresses or web URLs in the data that you are displaying, then you can automatically display those pieces of data as hyperlinks, you will not have to take any action to convert that data.\npublic class SmartLinkLabel extends org.apache.wicket.markup.html.basic.Label;\n// If you have email addresses or web URLs in the data that you are displaying, then you can automatically display those pieces of data as hyperlinks, you will not have to take any action to convert that data.\npublic class SmartLinkMultiLineLabel extends org.apache.wicket.markup.html.basic.MultiLineLabel;\n", "des": "Basic extensions."}
{"index": 1495, "repo": "wicket-extensions-10.0.0-M1", "code": "package resource\n\n// Image resource that dynamically scales the given original resource to a thumbnail.\npublic class ThumbnailImageResource extends org.apache.wicket.request.resource.DynamicImageResource;\n", "des": "Image resource extensions."}
{"index": 1496, "repo": "wicket-extensions-10.0.0-M1", "code": "package export\n\n// An abstract helper implementation of IDataExporter.\npublic abstract class AbstractDataExporter extends Object implements IDataExporter;\n// A helper implementation of IExportableColumn.\npublic abstract class AbstractExportableColumn<T,S> extends AbstractColumn<T,S> implements IExportableColumn<T,S>;\n// An IDataExporter that exports data to a CSV file.\npublic class CSVDataExporter extends AbstractDataExporter;\n// A toolbar that provides links to download the data represented by all IExportableColumns in the table exported to formats supported by the IDataExporters configured.\npublic class ExportToolbar extends AbstractToolbar;\n// An IResourceStreamWriter which writes the exportable data from a table to an output stream.\npublic static class ExportToolbar.DataExportResourceStreamWriter extends org.apache.wicket.util.resource.AbstractResourceStreamWriter;\n// Exports data provided by a IDataProvider as described by IExportableColumns.\npublic interface IDataExporter extends org.apache.wicket.util.io.IClusterable;\n// An IColumn that can be exported.\npublic interface IExportableColumn<T,S> extends IColumn<T,S>;\n", "des": "Package for exporting data tables."}
{"index": 1497, "repo": "wicket-extensions-10.0.0-M1", "code": "package tabs\n\n// Convenience class that takes care of common ITab functionality\npublic abstract class AbstractTab extends Object implements ITab;\n// Interface used to represent a single tab in a TabbedPanel\npublic interface ITab extends org.apache.wicket.util.io.IClusterable;\n// A simple decorator that will cache the panel returned from the first call to getPanel()\npublic class PanelCachingTab extends Object implements ITab;\n// TabbedPanel component represents a panel with tabs that are used to switch between different content panels inside the TabbedPanel panel.\npublic class TabbedPanel<T extends ITab> extends org.apache.wicket.markup.html.panel.Panel;\n", "des": "Package for working with tab panels."}
{"index": 1498, "repo": "wicket-extensions-10.0.0-M1", "code": "package model\n\n// Model adapter that makes working with models for checkboxes easier.\npublic abstract class AbstractCheckBoxModel extends Object implements org.apache.wicket.model.IModel<Boolean>;\n", "des": "Convenience models."}
{"index": 1499, "repo": "wicket-extensions-10.0.0-M1", "code": "package encoding\n\n// This class maintains a set of mappers defining mappings between locales and the corresponding charsets.\npublic final class CharSetMap extends Object;\n// Utility class.\npublic class CharSetUtil extends Object;\n", "des": "Encoding extensions."}
{"index": 1500, "repo": "wicket-extensions-10.0.0-M1", "code": "package wizard\n\n// Abstract wizard model that provides an implementation for handling wizard model listeners and provides base implementations of many methods.\npublic abstract class AbstractWizardModel extends Object implements IWizardModel;\n// A bar of buttons for wizards utilizing AjaxFormSubmitBehavior.\npublic class AjaxWizardButtonBar extends WizardButtonBar;\n// Models a cancel button in the wizard.\npublic class CancelButton extends WizardButton;\n// Models a cancel button in the wizard.\npublic class FinishButton extends WizardButton;\n// Interface for the wizard component.\npublic interface IWizard extends org.apache.wicket.util.io.IClusterable;\n// This interface defines the model for wizards.\npublic interface IWizardModel extends org.apache.wicket.util.io.IClusterable;\n// Receives notifications for wizard model state changes.\npublic interface IWizardModelListener extends org.apache.wicket.util.io.IClusterable;\n// Models one step in a wizard, and is the equivalent of one panel in a wizard from an end-user's perspective.\npublic interface IWizardStep extends org.apache.wicket.util.io.IClusterable;\n// Models a 'last' button in the wizard.\npublic class LastButton extends WizardButton;\n// Models a next button in the wizard.\npublic class NextButton extends WizardButton;\n// Models a previous button in the wizard.\npublic class PreviousButton extends WizardButton;\n// A wizard step that displays the provided static content without expecting any input.\npublic class StaticContentStep extends WizardStep;\n// A wizard is a dialog component that takes users through a number of steps to complete a task.\npublic class Wizard extends org.apache.wicket.markup.html.panel.Panel implements IWizardModelListener, IWizard;\n// Base class for buttons that work with the wizard component.\npublic abstract class WizardButton extends org.apache.wicket.markup.html.form.Button;\n// The default bar of button components for wizards.\npublic class WizardButtonBar extends org.apache.wicket.markup.html.panel.Panel;\n// Default implementation of IWizardModel, which models a semi-static wizard.\npublic class WizardModel extends AbstractWizardModel;\n", "des": "Package for working with Wizard components."}
{"index": 1501, "repo": "spring-context-6.0.11", "code": "package cache\n\n// Interface that defines common cache operations.\npublic interface Cache;\n// Wrapper exception to be thrown from Cache.get(Object, Callable) in case of the value loader callback failing with an exception.\npublic static class Cache.ValueRetrievalException extends RuntimeException;\n// A (wrapper) object representing a cache value.\n@FunctionalInterface public static interface Cache.ValueWrapper;\n// Spring's central cache manager SPI.\npublic interface CacheManager;\n", "des": "Spring's generic cache abstraction."}
{"index": 1502, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Abstract base @Configuration class providing common structure for enabling Spring's annotation-driven cache management capability.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractCachingConfiguration extends Object implements ImportAware;\n// \nprotected static class AbstractCachingConfiguration.CachingConfigurerSupplier extends Object;\n// Implementation of the CacheOperationSource interface for working with caching metadata in annotation format.\npublic class AnnotationCacheOperationSource extends AbstractFallbackCacheOperationSource implements Serializable;\n// Callback interface providing CacheOperation instance(s) based on a given CacheAnnotationParser.\n@FunctionalInterface protected static interface AnnotationCacheOperationSource.CacheOperationProvider;\n// Annotation indicating that the result of invoking a method (or all methods in a class) can be cached.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Inherited @Documented @Reflective public @interface Cacheable;\n// Strategy interface for parsing known caching annotation types.\npublic interface CacheAnnotationParser;\n// @CacheConfig provides a mechanism for sharing common cache-related settings at the class level.\n@Target(TYPE) @Retention(RUNTIME) @Documented public @interface CacheConfig;\n// Annotation indicating that a method (or all methods on a class) triggers a cache evict operation.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Inherited @Documented @Reflective public @interface CacheEvict;\n// Annotation indicating that a method (or all methods on a class) triggers a cache put operation.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Inherited @Documented @Reflective public @interface CachePut;\n// Group annotation for multiple cache annotations (of different or the same type).\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Inherited @Documented @Reflective public @interface Caching;\n// Selects which implementation of AbstractCachingConfiguration should be used based on the value of EnableCaching.mode() on the importing @Configuration class.\npublic class CachingConfigurationSelector extends AdviceModeImportSelector<EnableCaching>;\n// Interface to be implemented by @Configuration classes annotated with @EnableCaching that wish or need to specify explicitly how caches are resolved and how keys are generated for annotation-driven cache management.\npublic interface CachingConfigurer;\n", "des": "Annotations and supporting classes for declarative cache management."}
{"index": 1503, "repo": "spring-context-6.0.11", "code": "package concurrent\n\n// Simple Cache implementation based on the core JDK java.util.concurrent package.\npublic class ConcurrentMapCache extends AbstractValueAdaptingCache;\n// FactoryBean for easy configuration of a ConcurrentMapCache when used within a Spring container.\npublic class ConcurrentMapCacheFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<ConcurrentMapCache>, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean;\n// CacheManager implementation that lazily builds ConcurrentMapCache instances for each ConcurrentMapCacheManager.getCache(java.lang.String) request.\npublic class ConcurrentMapCacheManager extends Object implements CacheManager, org.springframework.beans.factory.BeanClassLoaderAware;\n", "des": "Implementation package for java.util.concurrent based caches."}
{"index": 1504, "repo": "spring-context-6.0.11", "code": "package config\n\n// Configuration constants for internal sharing across subpackages.\npublic abstract class CacheManagementConfigUtils extends Object;\n// NamespaceHandler allowing for the configuration of declarative cache management using either XML or using annotations.\npublic class CacheNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Support package for declarative caching configuration, with XML schema being the primary configuration format."}
{"index": 1505, "repo": "spring-context-6.0.11", "code": "package interceptor\n\n// A base component for invoking Cache operations and using a configurable CacheErrorHandler when an exception occurs.\npublic abstract class AbstractCacheInvoker extends Object;\n// A base CacheResolver implementation that requires the concrete implementation to provide the collection of cache name(s) based on the invocation context.\npublic abstract class AbstractCacheResolver extends Object implements CacheResolver, org.springframework.beans.factory.InitializingBean;\n// Abstract implementation of CacheOperation that caches attributes for methods and implements a fallback policy: 1.\npublic abstract class AbstractFallbackCacheOperationSource extends Object implements CacheOperationSource;\n// The base interface that all cache operations must implement.\npublic interface BasicOperation;\n// Advisor driven by a CacheOperationSource, used to include a cache advice bean for methods that are cacheable.\npublic class BeanFactoryCacheOperationSourceAdvisor extends org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor;\n// Class describing a cache 'cacheable' operation.\npublic class CacheableOperation extends CacheOperation;\n// A builder that can be used to create a CacheableOperation.\npublic static class CacheableOperation.Builder extends CacheOperation.Builder;\n// Base class for caching aspects, such as the CacheInterceptor or an AspectJ aspect.\npublic abstract class CacheAspectSupport extends AbstractCacheInvoker implements org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.SmartInitializingSingleton;\n// Metadata of a cache operation that does not depend on a particular invocation which makes it a good candidate for caching.\nprotected static class CacheAspectSupport.CacheOperationMetadata extends Object;\n// A strategy for handling cache-related errors.\npublic interface CacheErrorHandler;\n// Class describing a cache 'evict' operation.\npublic class CacheEvictOperation extends CacheOperation;\n// A builder that can be used to create a CacheEvictOperation.\npublic static class CacheEvictOperation.Builder extends CacheOperation.Builder;\n// AOP Alliance MethodInterceptor for declarative cache management using the common Spring caching infrastructure (Cache).\npublic class CacheInterceptor extends CacheAspectSupport implements org.aopalliance.intercept.MethodInterceptor, Serializable;\n// Base class for cache operations.\npublic abstract class CacheOperation extends Object implements BasicOperation;\n", "des": "AOP-based solution for declarative caching demarcation."}
{"index": 1506, "repo": "spring-context-6.0.11", "code": "package support\n\n// Abstract base class implementing the common CacheManager methods.\npublic abstract class AbstractCacheManager extends Object implements CacheManager, org.springframework.beans.factory.InitializingBean;\n// Common base class for Cache implementations that need to adapt null values (and potentially other such special values) before passing them on to the underlying store.\npublic abstract class AbstractValueAdaptingCache extends Object implements Cache;\n// Composite CacheManager implementation that iterates over a given collection of delegate CacheManager instances.\npublic class CompositeCacheManager extends Object implements CacheManager, org.springframework.beans.factory.InitializingBean;\n// A no operation Cache implementation suitable for disabling caching.\npublic class NoOpCache extends Object implements Cache;\n// A basic, no operation CacheManager implementation suitable for disabling caching, typically used for backing cache declarations without an actual backing store.\npublic class NoOpCacheManager extends Object implements CacheManager;\n// Simple serializable class that serves as a null replacement for cache stores which otherwise do not support null values.\npublic final class NullValue extends Object implements Serializable;\n// Simple cache manager working against a given collection of caches.\npublic class SimpleCacheManager extends AbstractCacheManager;\n// Straightforward implementation of Cache.ValueWrapper, simply holding the value as given at construction and returning it from SimpleValueWrapper.get().\npublic class SimpleValueWrapper extends Object implements Cache.ValueWrapper;\n", "des": "Support classes for the org.springframework.cache package."}
{"index": 1507, "repo": "spring-context-6.0.11", "code": "package context\n\n// Central interface to provide configuration for an application.\npublic interface ApplicationContext extends org.springframework.core.env.EnvironmentCapable, org.springframework.beans.factory.ListableBeanFactory, org.springframework.beans.factory.HierarchicalBeanFactory, MessageSource, ApplicationEventPublisher, org.springframework.core.io.support.ResourcePatternResolver;\n// Interface to be implemented by any object that wishes to be notified of the ApplicationContext that it runs in.\npublic interface ApplicationContextAware extends org.springframework.beans.factory.Aware;\n// Exception thrown during application context initialization.\npublic class ApplicationContextException extends org.springframework.beans.FatalBeanException;\n// Callback interface for initializing a Spring ConfigurableApplicationContext prior to being refreshed.\n@FunctionalInterface public interface ApplicationContextInitializer<C extends ConfigurableApplicationContext>;\n// Class to be extended by all application events.\npublic abstract class ApplicationEvent extends EventObject;\n// Interface that encapsulates event publication functionality.\n@FunctionalInterface public interface ApplicationEventPublisher;\n// Interface to be implemented by any object that wishes to be notified of the ApplicationEventPublisher (typically the ApplicationContext) that it runs in.\npublic interface ApplicationEventPublisherAware extends org.springframework.beans.factory.Aware;\n// Interface to be implemented by application event listeners.\n@FunctionalInterface public interface ApplicationListener<E extends ApplicationEvent> extends EventListener;\n// Interface to be implemented by any object that wishes to be notified of the ApplicationStartup that it runs with.\npublic interface ApplicationStartupAware extends org.springframework.beans.factory.Aware;\n// SPI interface to be implemented by most if not all application contexts.\npublic interface ConfigurableApplicationContext extends ApplicationContext, Lifecycle, Closeable;\n// Interface to be implemented by any object that wishes to be notified of a StringValueResolver for the resolution of embedded definition values.\npublic interface EmbeddedValueResolverAware extends org.springframework.beans.factory.Aware;\n// Interface to be implemented by any bean that wishes to be notified of the Environment that it runs in.\npublic interface EnvironmentAware extends org.springframework.beans.factory.Aware;\n", "des": "This package builds on the beans package to add support for message sources and for the Observer design pattern, and the ability for application objects to obtain resources using a consistent API."}
{"index": 1508, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Enumeration used to determine whether JDK proxy-based or AspectJ weaving-based advice should be applied.\npublic enum AdviceMode extends Enum<AdviceMode>;\n// Convenient base class for ImportSelector implementations that select imports based on an AdviceMode value from an annotation (such as the @Enable* annotations).\npublic abstract class AdviceModeImportSelector<A extends Annotation> extends Object implements ImportSelector;\n// Convenient adapter for programmatic registration of bean classes.\npublic class AnnotatedBeanDefinitionReader extends Object;\n// BeanNameGenerator implementation for bean classes annotated with the @Component annotation or with another annotation that is itself annotated with @Component as a meta-annotation.\npublic class AnnotationBeanNameGenerator extends Object implements org.springframework.beans.factory.support.BeanNameGenerator;\n// Standalone application context, accepting component classes as input — in particular @Configuration-annotated classes, but also plain @Component types and JSR-330 compliant classes using jakarta.inject annotations.\npublic class AnnotationConfigApplicationContext extends GenericApplicationContext implements AnnotationConfigRegistry;\n// Parser for the <context:annotation-config/> element.\npublic class AnnotationConfigBeanDefinitionParser extends Object implements org.springframework.beans.factory.xml.BeanDefinitionParser;\n// Common interface for annotation config application contexts, defining AnnotationConfigRegistry.register(java.lang.Class<?>...) and AnnotationConfigRegistry.scan(java.lang.String...) methods.\npublic interface AnnotationConfigRegistry;\n// Utility class that allows for convenient registration of common BeanPostProcessor and BeanFactoryPostProcessor definitions for annotation-based configuration.\npublic abstract class AnnotationConfigUtils extends Object;\n// A ScopeMetadataResolver implementation that by default checks for the presence of Spring's @Scope annotation on the bean class.\npublic class AnnotationScopeMetadataResolver extends Object implements ScopeMetadataResolver;\n// Registers an auto proxy creator against the current BeanDefinitionRegistry as appropriate based on an @Enable* annotation having mode and proxyTargetClass attributes set to the correct values.\npublic class AutoProxyRegistrar extends Object implements ImportBeanDefinitionRegistrar;\n// Indicates that a method produces a bean to be managed by the Spring container.\n@Target({METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented public @interface Bean;\n", "des": "Annotation support for the Application Context, including JSR-250 \"common\" annotations, component-scanning, and Java-based metadata for creating Spring-managed objects."}
{"index": 1509, "repo": "spring-context-6.0.11", "code": "package aot\n\n// Abstract base class for filesystem-based ahead-of-time (AOT) processing.\npublic abstract class AbstractAotProcessor<T> extends Object;\n// Common settings for AOT processors.\npublic static final class AbstractAotProcessor.Settings extends Object;\n// Fluent builder API for AbstractAotProcessor.Settings.\npublic static final class AbstractAotProcessor.Settings.Builder extends Object;\n// Specialized ApplicationContextInitializer used to initialize a ConfigurableApplicationContext using artifacts that were generated ahead-of-time.\n@FunctionalInterface public interface AotApplicationContextInitializer<C extends ConfigurableApplicationContext> extends ApplicationContextInitializer<C>;\n// Process an ApplicationContext and its BeanFactory to generate code that represents the state of the bean factory, as well as the necessary hints that can be used at runtime in a constrained environment.\npublic class ApplicationContextAotGenerator extends Object;\n// Filesystem-based ahead-of-time (AOT) processing base implementation.\npublic abstract class ContextAotProcessor extends AbstractAotProcessor<org.springframework.javapoet.ClassName>;\n", "des": "AOT support for application contexts."}
{"index": 1510, "repo": "spring-context-6.0.11", "code": "package config\n\n// NamespaceHandler for the 'context' namespace.\npublic class ContextNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Support package for advanced application context configuration, with XML schema being the primary configuration format."}
{"index": 1511, "repo": "spring-context-6.0.11", "code": "package event\n\n// Abstract implementation of the ApplicationEventMulticaster interface, providing the basic listener registration facility.\npublic abstract class AbstractApplicationEventMulticaster extends Object implements ApplicationEventMulticaster, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware;\n// Base class for events raised for an ApplicationContext.\npublic abstract class ApplicationContextEvent extends ApplicationEvent;\n// Interface to be implemented by objects that can manage a number of ApplicationListener objects and publish events to them.\npublic interface ApplicationEventMulticaster;\n// GenericApplicationListener adapter that delegates the processing of an event to an EventListener annotated method.\npublic class ApplicationListenerMethodAdapter extends Object implements GenericApplicationListener;\n// Event raised when an ApplicationContext gets closed.\npublic class ContextClosedEvent extends ApplicationContextEvent;\n// Event raised when an ApplicationContext gets initialized or refreshed.\npublic class ContextRefreshedEvent extends ApplicationContextEvent;\n// Event raised when an ApplicationContext gets started.\npublic class ContextStartedEvent extends ApplicationContextEvent;\n// Event raised when an ApplicationContext gets stopped.\npublic class ContextStoppedEvent extends ApplicationContextEvent;\n// Default EventListenerFactory implementation that supports the regular EventListener annotation.\npublic class DefaultEventListenerFactory extends Object implements EventListenerFactory, org.springframework.core.Ordered;\n// Annotation that marks a method as a listener for application events.\n@Target({METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Reflective public @interface EventListener;\n// Strategy interface for creating ApplicationListener for methods annotated with EventListener.\npublic interface EventListenerFactory;\n// Registers EventListener methods as individual ApplicationListener instances.\npublic class EventListenerMethodProcessor extends Object implements org.springframework.beans.factory.SmartInitializingSingleton, ApplicationContextAware, org.springframework.beans.factory.config.BeanFactoryPostProcessor;\n// Interceptor that publishes an ApplicationEvent to all ApplicationListeners registered with an ApplicationEventPublisher after each successful method invocation.\npublic class EventPublicationInterceptor extends Object implements org.aopalliance.intercept.MethodInterceptor, ApplicationEventPublisherAware, org.springframework.beans.factory.InitializingBean;\n// Extended variant of the standard ApplicationListener interface, exposing further metadata such as the supported event and source type.\npublic interface GenericApplicationListener extends SmartApplicationListener;\n", "des": "Support classes for application events, like standard context events."}
{"index": 1512, "repo": "spring-context-6.0.11", "code": "package expression\n\n// Represent an AnnotatedElement on a particular Class and is suitable as a key.\npublic final class AnnotatedElementKey extends Object implements Comparable<AnnotatedElementKey>;\n// EL property accessor that knows how to traverse the beans and contextual objects of a Spring BeanExpressionContext.\npublic class BeanExpressionContextAccessor extends Object implements org.springframework.expression.PropertyAccessor;\n// EL property accessor that knows how to traverse the beans of a Spring BeanFactory.\npublic class BeanFactoryAccessor extends Object implements org.springframework.expression.PropertyAccessor;\n// EL bean resolver that operates against a Spring BeanFactory.\npublic class BeanFactoryResolver extends Object implements org.springframework.expression.BeanResolver;\n// Shared utility class used to evaluate and cache SpEL expressions that are defined on AnnotatedElement.\npublic abstract class CachedExpressionEvaluator extends Object;\n// An expression key.\nprotected static class CachedExpressionEvaluator.ExpressionKey extends Object implements Comparable<CachedExpressionEvaluator.ExpressionKey>;\n// Read-only EL property accessor that knows how to retrieve keys of a Spring Environment instance.\npublic class EnvironmentAccessor extends Object implements org.springframework.expression.PropertyAccessor;\n// EL property accessor that knows how to traverse the keys of a standard Map.\npublic class MapAccessor extends Object implements org.springframework.expression.spel.CompilablePropertyAccessor;\n// A method-based EvaluationContext that provides explicit support for method-based invocations.\npublic class MethodBasedEvaluationContext extends org.springframework.expression.spel.support.StandardEvaluationContext;\n// Standard implementation of the BeanExpressionResolver interface, parsing and evaluating Spring EL using Spring's expression module.\npublic class StandardBeanExpressionResolver extends Object implements org.springframework.beans.factory.config.BeanExpressionResolver;\n", "des": "Expression parsing support within a Spring application context."}
{"index": 1513, "repo": "spring-context-6.0.11", "code": "package i18n\n\n// Strategy interface for determining the current Locale.\npublic interface LocaleContext;\n// Simple holder class that associates a LocaleContext instance with the current thread.\npublic final class LocaleContextHolder extends Object;\n// Simple implementation of the LocaleContext interface, always returning a specified Locale.\npublic class SimpleLocaleContext extends Object implements LocaleContext;\n// Simple implementation of the TimeZoneAwareLocaleContext interface, always returning a specified Locale and TimeZone.\npublic class SimpleTimeZoneAwareLocaleContext extends SimpleLocaleContext implements TimeZoneAwareLocaleContext;\n// Extension of LocaleContext, adding awareness of the current time zone.\npublic interface TimeZoneAwareLocaleContext extends LocaleContext;\n", "des": "Abstraction for determining the current Locale, plus global holder that exposes a thread-bound Locale."}
{"index": 1514, "repo": "spring-context-6.0.11", "code": "package index\n\n// Provide access to the candidates that are defined in META-INF/spring.components.\npublic class CandidateComponentsIndex extends Object;\n// Candidate components index loading mechanism for internal use within the framework.\npublic final class CandidateComponentsIndexLoader extends Object;\n", "des": "Support package for reading and managing the components index."}
{"index": 1515, "repo": "spring-context-6.0.11", "code": "package support\n\n// Abstract implementation of the ApplicationContext interface.\npublic abstract class AbstractApplicationContext extends org.springframework.core.io.DefaultResourceLoader implements ConfigurableApplicationContext;\n// Abstract implementation of the HierarchicalMessageSource interface, implementing common handling of message variants, making it easy to implement a specific strategy for a concrete MessageSource.\npublic abstract class AbstractMessageSource extends MessageSourceSupport implements HierarchicalMessageSource;\n// Base class for ApplicationContext implementations which are supposed to support multiple calls to AbstractApplicationContext.refresh(), creating a new internal bean factory instance every time.\npublic abstract class AbstractRefreshableApplicationContext extends AbstractApplicationContext;\n// AbstractRefreshableApplicationContext subclass that adds common handling of specified config locations.\npublic abstract class AbstractRefreshableConfigApplicationContext extends AbstractRefreshableApplicationContext implements org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean;\n// Abstract base class for MessageSource implementations based on resource bundle conventions, such as ResourceBundleMessageSource and ReloadableResourceBundleMessageSource.\npublic abstract class AbstractResourceBasedMessageSource extends AbstractMessageSource;\n// Convenient base class for ApplicationContext implementations, drawing configuration from XML documents containing bean definitions understood by an XmlBeanDefinitionReader.\npublic abstract class AbstractXmlApplicationContext extends AbstractRefreshableConfigApplicationContext;\n// Convenient superclass for application objects that want to be aware of the application context, e.g.\npublic abstract class ApplicationObjectSupport extends Object implements ApplicationContextAware;\n// Standalone XML application context, taking the context definition files from the class path, interpreting plain paths as class path resource names that include the package path (e.g.\npublic class ClassPathXmlApplicationContext extends AbstractXmlApplicationContext;\n// A factory providing convenient access to a ConversionService configured with converters appropriate for most environments.\npublic class ConversionServiceFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<org.springframework.core.convert.ConversionService>, org.springframework.beans.factory.InitializingBean;\n// Default implementation of the LifecycleProcessor strategy.\npublic class DefaultLifecycleProcessor extends Object implements LifecycleProcessor, org.springframework.beans.factory.BeanFactoryAware;\n// Spring's default implementation of the MessageSourceResolvable interface.\npublic class DefaultMessageSourceResolvable extends Object implements MessageSourceResolvable, Serializable;\n", "des": "Classes supporting the org.springframework.context package, such as abstract base classes for ApplicationContext implementations and a MessageSource implementation."}
{"index": 1516, "repo": "spring-context-6.0.11", "code": "package weaving\n\n// Post-processor that registers AspectJ's ClassPreProcessorAgentAdapter with the Spring application context's default LoadTimeWeaver.\npublic class AspectJWeavingEnabler extends Object implements org.springframework.beans.factory.config.BeanFactoryPostProcessor, org.springframework.beans.factory.BeanClassLoaderAware, LoadTimeWeaverAware, org.springframework.core.Ordered;\n// Default LoadTimeWeaver bean for use in an application context, decorating an automatically detected internal LoadTimeWeaver.\npublic class DefaultContextLoadTimeWeaver extends Object implements LoadTimeWeaver, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.DisposableBean;\n// Interface to be implemented by any object that wishes to be notified of the application context's default LoadTimeWeaver.\npublic interface LoadTimeWeaverAware extends org.springframework.beans.factory.Aware;\n// BeanPostProcessor implementation that passes the context's default LoadTimeWeaver to beans that implement the LoadTimeWeaverAware interface.\npublic class LoadTimeWeaverAwareProcessor extends Object implements org.springframework.beans.factory.config.BeanPostProcessor, org.springframework.beans.factory.BeanFactoryAware;\n", "des": "Load-time weaving support for a Spring application context, building on Spring's LoadTimeWeaver abstraction."}
{"index": 1517, "repo": "spring-context-6.0.11", "code": "package config\n\n// NamespaceHandler for the 'jee' namespace.\npublic class JeeNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Support package for EJB/Jakarta EE-related configuration, with XML schema being the primary configuration format."}
{"index": 1518, "repo": "spring-context-6.0.11", "code": "package format\n\n// A factory that creates formatters to format values of fields annotated with a particular Annotation.\npublic interface AnnotationFormatterFactory<A extends Annotation>;\n// Formats objects of type T.\npublic interface Formatter<T> extends Printer<T>, Parser<T>;\n// Registers Converters and Formatters with a FormattingConversionService through the FormatterRegistry SPI.\npublic interface FormatterRegistrar;\n// A registry of field formatting logic.\npublic interface FormatterRegistry extends org.springframework.core.convert.converter.ConverterRegistry;\n// Parses text strings to produce instances of T.\n@FunctionalInterface public interface Parser<T>;\n// Prints objects of type T for display.\n@FunctionalInterface public interface Printer<T>;\n", "des": "An API for defining Formatters to format field model values for display in a UI."}
{"index": 1519, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Declares that a field or method parameter should be formatted as a date or time.\n@Documented @Retention(RUNTIME) @Target({METHOD,FIELD,PARAMETER,ANNOTATION_TYPE}) public @interface DateTimeFormat;\n// Common ISO date time format patterns.\npublic static enum DateTimeFormat.ISO extends Enum<DateTimeFormat.ISO>;\n// Declares that a field or method parameter should be formatted as a number.\n@Documented @Retention(RUNTIME) @Target({METHOD,FIELD,PARAMETER,ANNOTATION_TYPE}) public @interface NumberFormat;\n// Common number format styles.\npublic static enum NumberFormat.Style extends Enum<NumberFormat.Style>;\n", "des": "Annotations for declaratively configuring field formatting rules."}
{"index": 1520, "repo": "spring-context-6.0.11", "code": "package datetime\n\n// A formatter for Date types.\npublic class DateFormatter extends Object implements Formatter<Date>;\n// Configures basic date formatting for use with Spring, primarily for DateTimeFormat declarations.\npublic class DateFormatterRegistrar extends Object implements FormatterRegistrar;\n// Formats fields annotated with the DateTimeFormat annotation using a DateFormatter.\npublic class DateTimeFormatAnnotationFormatterFactory extends EmbeddedValueResolutionSupport implements AnnotationFormatterFactory<DateTimeFormat>;\n", "des": "Formatters for java.util.Date properties."}
{"index": 1521, "repo": "spring-context-6.0.11", "code": "package standard\n\n// A context that holds user-specific java.time (JSR-310) settings such as the user's Chronology (calendar system) and time zone.\npublic class DateTimeContext extends Object;\n// A holder for a thread-local user DateTimeContext.\npublic final class DateTimeContextHolder extends Object;\n// Factory that creates a JSR-310 DateTimeFormatter.\npublic class DateTimeFormatterFactory extends Object;\n// FactoryBean that creates a JSR-310 DateTimeFormatter.\npublic class DateTimeFormatterFactoryBean extends DateTimeFormatterFactory implements org.springframework.beans.factory.FactoryBean<DateTimeFormatter>, org.springframework.beans.factory.InitializingBean;\n// Configures the JSR-310 java.time formatting system for use with Spring.\npublic class DateTimeFormatterRegistrar extends Object implements FormatterRegistrar;\n// Formatter implementation for a JSR-310 Instant, following JSR-310's parsing rules for an Instant (that is, not using a configurable DateTimeFormatter): accepting the default ISO_INSTANT format as well as RFC_1123_DATE_TIME (which is commonly used for HTTP date header values), as of Spring 4.3.\npublic class InstantFormatter extends Object implements Formatter<Instant>;\n// Formats fields annotated with the DateTimeFormat annotation using the JSR-310 java.time package in JDK 8.\npublic class Jsr310DateTimeFormatAnnotationFormatterFactory extends EmbeddedValueResolutionSupport implements AnnotationFormatterFactory<DateTimeFormat>;\n// Parser implementation for a JSR-310 TemporalAccessor, using a DateTimeFormatter (the contextual one, if available).\npublic final class TemporalAccessorParser extends Object implements Parser<TemporalAccessor>;\n// Printer implementation for a JSR-310 TemporalAccessor, using a DateTimeFormatter) (the contextual one, if available).\npublic final class TemporalAccessorPrinter extends Object implements Printer<TemporalAccessor>;\n", "des": "Integration with the JSR-310 java.time package in JDK 8."}
{"index": 1522, "repo": "spring-context-6.0.11", "code": "package number\n\n// Abstract formatter for Numbers, providing a AbstractNumberFormatter.getNumberFormat(java.util.Locale) template method.\npublic abstract class AbstractNumberFormatter extends Object implements Formatter<Number>;\n// A BigDecimal formatter for number values in currency style.\npublic class CurrencyStyleFormatter extends AbstractNumberFormatter;\n// Formats fields annotated with the NumberFormat annotation.\npublic class NumberFormatAnnotationFormatterFactory extends EmbeddedValueResolutionSupport implements AnnotationFormatterFactory<NumberFormat>;\n// A general-purpose number formatter using NumberFormat's number style.\npublic class NumberStyleFormatter extends AbstractNumberFormatter;\n// A formatter for number values in percent style.\npublic class PercentStyleFormatter extends AbstractNumberFormatter;\n", "des": "Formatters for java.lang.Number properties."}
{"index": 1523, "repo": "spring-context-6.0.11", "code": "package money\n\n// Formatter for JSR-354 CurrencyUnit values, from and to currency code Strings.\npublic class CurrencyUnitFormatter extends Object implements Formatter<javax.money.CurrencyUnit>;\n// Formats MonetaryAmount fields annotated with Spring's common NumberFormat annotation.\npublic class Jsr354NumberFormatAnnotationFormatterFactory extends EmbeddedValueResolutionSupport implements AnnotationFormatterFactory<NumberFormat>;\n// Formatter for JSR-354 MonetaryAmount values, delegating to MonetaryAmountFormat.format(javax.money.MonetaryAmount) and MonetaryAmountFormat.parse(java.lang.CharSequence).\npublic class MonetaryAmountFormatter extends Object implements Formatter<javax.money.MonetaryAmount>;\n", "des": "Integration with the JSR-354 javax.money package."}
{"index": 1524, "repo": "spring-context-6.0.11", "code": "package support\n\n// A specialization of FormattingConversionService configured by default with converters and formatters appropriate for most applications.\npublic class DefaultFormattingConversionService extends FormattingConversionService;\n// Adapter that bridges between Formatter and PropertyEditor.\npublic class FormatterPropertyEditorAdapter extends PropertyEditorSupport;\n// A ConversionService implementation designed to be configured as a FormatterRegistry.\npublic class FormattingConversionService extends org.springframework.core.convert.support.GenericConversionService implements FormatterRegistry, EmbeddedValueResolverAware;\n// A factory providing convenient access to a FormattingConversionService configured with converters and formatters for common types such as numbers and datetimes.\npublic class FormattingConversionServiceFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<FormattingConversionService>, EmbeddedValueResolverAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Support classes for the formatting package, providing common implementations as well as adapters."}
{"index": 1525, "repo": "spring-context-6.0.11", "code": "package classloading\n\n// LoadTimeWeaver relying on VM Instrumentation.\npublic class InstrumentationLoadTimeWeaver extends Object implements LoadTimeWeaver;\n// Defines the contract for adding one or more ClassFileTransformers to a ClassLoader.\npublic interface LoadTimeWeaver;\n// LoadTimeWeaver which uses reflection to delegate to an underlying ClassLoader with well-known transformation hooks.\npublic class ReflectiveLoadTimeWeaver extends Object implements LoadTimeWeaver;\n// Subclass of ShadowingClassLoader that overrides attempts to locate certain files.\npublic class ResourceOverridingShadowingClassLoader extends ShadowingClassLoader;\n// ClassLoader decorator that shadows an enclosing ClassLoader, applying registered transformers to all affected classes.\npublic class ShadowingClassLoader extends org.springframework.core.DecoratingClassLoader;\n// Simplistic implementation of an instrumentable ClassLoader.\npublic class SimpleInstrumentableClassLoader extends org.springframework.core.OverridingClassLoader;\n// LoadTimeWeaver that builds and exposes a SimpleInstrumentableClassLoader.\npublic class SimpleLoadTimeWeaver extends Object implements LoadTimeWeaver;\n// ClassLoader that can be used to load classes without bringing them into the parent loader.\npublic class SimpleThrowawayClassLoader extends org.springframework.core.OverridingClassLoader;\n// ClassFileTransformer-based weaver, allowing for a list of transformers to be applied on a class byte array.\npublic class WeavingTransformer extends Object;\n", "des": "Support package for load time weaving based on class loaders, as required by JPA providers (but not JPA-specific)."}
{"index": 1526, "repo": "spring-context-6.0.11", "code": "package glassfish\n\n// LoadTimeWeaver implementation for GlassFish's org.glassfish.api.deployment.InstrumentableClassLoader InstrumentableClassLoader.\npublic class GlassFishLoadTimeWeaver extends Object implements LoadTimeWeaver;\n", "des": "Support for class instrumentation on GlassFish."}
{"index": 1527, "repo": "spring-context-6.0.11", "code": "package jboss\n\n// LoadTimeWeaver implementation for JBoss's instrumentable ClassLoader.\npublic class JBossLoadTimeWeaver extends Object implements LoadTimeWeaver;\n", "des": "Support for class instrumentation on JBoss AS 6 and 7."}
{"index": 1528, "repo": "spring-context-6.0.11", "code": "package tomcat\n\n// LoadTimeWeaver implementation for Tomcat's new org.apache.tomcat.InstrumentableClassLoader.\npublic class TomcatLoadTimeWeaver extends Object implements LoadTimeWeaver;\n", "des": "Support for class instrumentation on Tomcat."}
{"index": 1529, "repo": "spring-context-6.0.11", "code": "package jmx\n\n// General base exception to be thrown on JMX errors.\npublic class JmxException extends org.springframework.core.NestedRuntimeException;\n// Exception thrown when we cannot locate an instance of an MBeanServer, or when more than one instance is found.\npublic class MBeanServerNotFoundException extends JmxException;\n", "des": "This package contains Spring's JMX support, which includes registration of Spring-managed beans as JMX MBeans as well as access to remote JMX MBeans."}
{"index": 1530, "repo": "spring-context-6.0.11", "code": "package access\n\n// Thrown when trying to invoke an operation on a proxy that is not exposed by the proxied MBean resource's management interface.\npublic class InvalidInvocationException extends JMRuntimeException;\n// Thrown when an invocation on an MBean resource failed with an exception (either a reflection exception or an exception thrown by the target method itself).\npublic class InvocationFailureException extends JmxException;\n// MethodInterceptor that routes calls to an MBean running on the supplied MBeanServerConnection.\npublic class MBeanClientInterceptor extends Object implements org.aopalliance.intercept.MethodInterceptor, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// Thrown when an invocation failed because of an I/O problem on the MBeanServerConnection.\npublic class MBeanConnectFailureException extends JmxException;\n// Thrown if an exception is encountered when trying to retrieve MBean metadata.\npublic class MBeanInfoRetrievalException extends JmxException;\n// Creates a proxy to a managed resource running either locally or remotely.\npublic class MBeanProxyFactoryBean extends MBeanClientInterceptor implements org.springframework.beans.factory.FactoryBean<Object>, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean;\n// Registrar object that associates a specific NotificationListener with one or more MBeans in an MBeanServer (typically via a MBeanServerConnection).\npublic class NotificationListenerRegistrar extends NotificationListenerHolder implements org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n", "des": "Provides support for accessing remote MBean resources."}
{"index": 1531, "repo": "spring-context-6.0.11", "code": "package export\n\n// JMX exporter that allows for exposing any Spring-managed bean to a JMX MBeanServer, without the need to define any JMX-specific information in the bean classes.\npublic class MBeanExporter extends MBeanRegistrationSupport implements MBeanExportOperations, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.SmartInitializingSingleton, org.springframework.beans.factory.DisposableBean;\n// A listener that allows application code to be notified when an MBean is registered and unregistered via an MBeanExporter.\npublic interface MBeanExporterListener;\n// Exception thrown in case of failure when exporting an MBean.\npublic class MBeanExportException extends JmxException;\n// Interface that defines the set of MBean export operations that are intended to be accessed by application developers during application runtime.\npublic interface MBeanExportOperations;\n// Helper class that aggregates a NotificationListener, a NotificationFilter, and an arbitrary handback object.\npublic class NotificationListenerBean extends NotificationListenerHolder implements org.springframework.beans.factory.InitializingBean;\n// Extension of the RequiredModelMBean class that ensures the thread context ClassLoader is switched for the managed resource's ClassLoader before any invocations occur.\npublic class SpringModelMBean extends RequiredModelMBean;\n// Exception thrown when we are unable to register an MBean, for example because of a naming conflict.\npublic class UnableToRegisterMBeanException extends MBeanExportException;\n", "des": "This package provides declarative creation and registration of Spring-managed beans as JMX MBeans."}
{"index": 1532, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Implementation of the JmxAttributeSource interface that reads annotations and exposes the corresponding attributes.\npublic class AnnotationJmxAttributeSource extends Object implements JmxAttributeSource, org.springframework.beans.factory.BeanFactoryAware;\n// Convenient subclass of Spring's standard MBeanExporter, activating annotation usage for JMX exposure of Spring beans: ManagedResource, ManagedAttribute, ManagedOperation, etc.\npublic class AnnotationMBeanExporter extends MBeanExporter;\n// Method-level annotation that indicates to expose a given bean property as a JMX attribute, corresponding to the ManagedAttribute.\n@Target(METHOD) @Retention(RUNTIME) @Documented public @interface ManagedAttribute;\n// Method-level annotation that indicates to expose a given bean property as a JMX attribute, with added descriptor properties to indicate that it is a metric.\n@Target(METHOD) @Retention(RUNTIME) @Documented public @interface ManagedMetric;\n// Type-level annotation that indicates a JMX notification emitted by a bean.\n@Target(TYPE) @Retention(RUNTIME) @Inherited @Documented @Repeatable(ManagedNotifications.class) public @interface ManagedNotification;\n// Type-level annotation used as a container for one or more @ManagedNotification declarations.\n@Target(TYPE) @Retention(RUNTIME) @Inherited @Documented public @interface ManagedNotifications;\n// Method-level annotation that indicates to expose a given method as a JMX operation, corresponding to the ManagedOperation attribute.\n@Target(METHOD) @Retention(RUNTIME) @Documented public @interface ManagedOperation;\n// Method-level annotation used to provide metadata about operation parameters, corresponding to a ManagedOperationParameter attribute.\n@Target(METHOD) @Retention(RUNTIME) @Documented @Repeatable(ManagedOperationParameters.class) public @interface ManagedOperationParameter;\n// Method-level annotation used as a container for one or more @ManagedOperationParameter declarations.\n@Target(METHOD) @Retention(RUNTIME) @Documented public @interface ManagedOperationParameters;\n// Class-level annotation that indicates to register instances of a class with a JMX server, corresponding to the ManagedResource attribute.\n@Target(TYPE) @Retention(RUNTIME) @Inherited @Documented public @interface ManagedResource;\n", "des": "Annotations for MBean exposure."}
{"index": 1533, "repo": "spring-context-6.0.11", "code": "package assembler\n\n// Base class for MBeanInfoAssemblers that support configurable JMX notification behavior.\npublic abstract class AbstractConfigurableMBeanInfoAssembler extends AbstractReflectiveMBeanInfoAssembler;\n// Abstract implementation of the MBeanInfoAssembler interface that encapsulates the creation of a ModelMBeanInfo instance but delegates the creation of metadata to subclasses.\npublic abstract class AbstractMBeanInfoAssembler extends Object implements MBeanInfoAssembler;\n// Builds on the AbstractMBeanInfoAssembler superclass to add a basic algorithm for building metadata based on the reflective metadata of the MBean class.\npublic abstract class AbstractReflectiveMBeanInfoAssembler extends AbstractMBeanInfoAssembler;\n// Extends the MBeanInfoAssembler to add autodetection logic.\npublic interface AutodetectCapableMBeanInfoAssembler extends MBeanInfoAssembler;\n// Subclass of AbstractReflectiveMBeanInfoAssembler that allows for the management interface of a bean to be defined using arbitrary interfaces.\npublic class InterfaceBasedMBeanInfoAssembler extends AbstractConfigurableMBeanInfoAssembler implements org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean;\n// Interface to be implemented by all classes that can create management interface metadata for a managed resource.\npublic interface MBeanInfoAssembler;\n// Implementation of the MBeanInfoAssembler interface that reads the management interface information from source level metadata.\npublic class MetadataMBeanInfoAssembler extends AbstractReflectiveMBeanInfoAssembler implements AutodetectCapableMBeanInfoAssembler, org.springframework.beans.factory.InitializingBean;\n// AbstractReflectiveMBeanInfoAssembler subclass that allows method names to be explicitly excluded as MBean operations and attributes.\npublic class MethodExclusionMBeanInfoAssembler extends AbstractConfigurableMBeanInfoAssembler;\n// Subclass of AbstractReflectiveMBeanInfoAssembler that allows to specify method names to be exposed as MBean operations and attributes.\npublic class MethodNameBasedMBeanInfoAssembler extends AbstractConfigurableMBeanInfoAssembler;\n// Simple subclass of AbstractReflectiveMBeanInfoAssembler that always votes yes for method and property inclusion, effectively exposing all public methods and properties as operations and attributes.\npublic class SimpleReflectiveMBeanInfoAssembler extends AbstractConfigurableMBeanInfoAssembler;\n", "des": "Provides a strategy for MBeanInfo assembly."}
{"index": 1534, "repo": "spring-context-6.0.11", "code": "package metadata\n\n// Base class for all JMX metadata classes.\npublic abstract class AbstractJmxAttribute extends Object;\n// Thrown by the JmxAttributeSource when it encounters incorrect metadata on a managed resource or one of its methods.\npublic class InvalidMetadataException extends JmxException;\n// Interface used by the MetadataMBeanInfoAssembler to read source-level metadata from a managed resource's class.\npublic interface JmxAttributeSource;\n// Utility methods for converting Spring JMX metadata into their plain JMX equivalents.\npublic abstract class JmxMetadataUtils extends Object;\n// Metadata that indicates to expose a given bean property as JMX attribute.\npublic class ManagedAttribute extends AbstractJmxAttribute;\n// Metadata that indicates to expose a given bean property as a JMX attribute, with additional descriptor properties that indicate that the attribute is a metric.\npublic class ManagedMetric extends AbstractJmxAttribute;\n// Metadata that indicates a JMX notification emitted by a bean.\npublic class ManagedNotification extends Object;\n// Metadata that indicates to expose a given method as JMX operation.\npublic class ManagedOperation extends AbstractJmxAttribute;\n// Metadata about JMX operation parameters.\npublic class ManagedOperationParameter extends Object;\n// Metadata indicating that instances of an annotated class are to be registered with a JMX server.\npublic class ManagedResource extends AbstractJmxAttribute;\n", "des": "Provides generic JMX metadata classes and basic support for reading JMX metadata in a provider-agnostic manner."}
{"index": 1535, "repo": "spring-context-6.0.11", "code": "package naming\n\n// An implementation of the ObjectNamingStrategy interface that creates a name based on the identity of a given instance.\npublic class IdentityNamingStrategy extends Object implements ObjectNamingStrategy;\n// ObjectNamingStrategy implementation that builds ObjectName instances from the key used in the \"beans\" map passed to MBeanExporter.\npublic class KeyNamingStrategy extends Object implements ObjectNamingStrategy, org.springframework.beans.factory.InitializingBean;\n// An implementation of the ObjectNamingStrategy interface that reads the ObjectName from the source-level metadata.\npublic class MetadataNamingStrategy extends Object implements ObjectNamingStrategy, org.springframework.beans.factory.InitializingBean;\n// Strategy interface that encapsulates the creation of ObjectName instances.\n@FunctionalInterface public interface ObjectNamingStrategy;\n// Interface that allows infrastructure components to provide their own ObjectNames to the MBeanExporter.\npublic interface SelfNaming;\n", "des": "Provides a strategy for ObjectName creation."}
{"index": 1536, "repo": "spring-context-6.0.11", "code": "package notification\n\n// NotificationPublisher implementation that uses the infrastructure provided by the ModelMBean interface to track javax.management.NotificationListeners and send Notifications to those listeners.\npublic class ModelMBeanNotificationPublisher extends Object implements NotificationPublisher;\n// Simple interface allowing Spring-managed MBeans to publish JMX notifications without being aware of how those notifications are being transmitted to the MBeanServer.\n@FunctionalInterface public interface NotificationPublisher;\n// Interface to be implemented by any Spring-managed resource that is to be registered with an MBeanServer and wishes to send JMX javax.management.Notifications.\npublic interface NotificationPublisherAware extends org.springframework.beans.factory.Aware;\n// Thrown when a JMX Notification is unable to be sent.\npublic class UnableToSendNotificationException extends JmxException;\n", "des": "Provides supporting infrastructure to allow Spring-created MBeans to send JMX notifications."}
{"index": 1537, "repo": "spring-context-6.0.11", "code": "package support\n\n// FactoryBean that creates a JSR-160 JMXConnectorServer, optionally registers it with the MBeanServer, and then starts it.\npublic class ConnectorServerFactoryBean extends MBeanRegistrationSupport implements org.springframework.beans.factory.FactoryBean<JMXConnectorServer>, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// Collection of generic utility methods to support Spring JMX.\npublic abstract class JmxUtils extends Object;\n// Provides supporting infrastructure for registering MBeans with an MBeanServer.\npublic class MBeanRegistrationSupport extends Object;\n// FactoryBean that creates a JMX 1.2 MBeanServerConnection to a remote MBeanServer exposed via a JMXServerConnector.\npublic class MBeanServerConnectionFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<MBeanServerConnection>, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// FactoryBean that obtains a MBeanServer reference through the standard JMX 1.2 MBeanServerFactory API.\npublic class MBeanServerFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<MBeanServer>, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// Represents how the measurement values of a ManagedMetric will change over time.\npublic enum MetricType extends Enum<MetricType>;\n// Helper class that aggregates a NotificationListener, a NotificationFilter, and an arbitrary handback object, as well as the names of MBeans from which the listener wishes to receive Notifications.\npublic class NotificationListenerHolder extends Object;\n// Helper class for the creation of ObjectName instances.\npublic final class ObjectNameManager extends Object;\n// Indicates registration behavior when attempting to register an MBean that already exists.\npublic enum RegistrationPolicy extends Enum<RegistrationPolicy>;\n", "des": "Contains support classes for connecting to local and remote MBeanServers and for exposing an MBeanServer to remote clients."}
{"index": 1538, "repo": "spring-context-6.0.11", "code": "package jndi\n\n// Convenient superclass for JNDI accessors, providing \"jndiTemplate\" and \"jndiEnvironment\" bean properties.\npublic class JndiAccessor extends Object;\n// Callback interface to be implemented by classes that need to perform an operation (such as a lookup) in a JNDI context.\n@FunctionalInterface public interface JndiCallback<T>;\n// JndiLocatorSupport subclass with public lookup methods, for convenient use as a delegate.\npublic class JndiLocatorDelegate extends JndiLocatorSupport;\n// Convenient superclass for classes that can locate any number of JNDI objects.\npublic abstract class JndiLocatorSupport extends JndiAccessor;\n// RuntimeException to be thrown in case of JNDI lookup failures, in particular from code that does not declare JNDI's checked NamingException: for example, from Spring's JndiObjectTargetSource.\npublic class JndiLookupFailureException extends org.springframework.core.NestedRuntimeException;\n// FactoryBean that looks up a JNDI object.\npublic class JndiObjectFactoryBean extends JndiObjectLocator implements org.springframework.beans.factory.FactoryBean<Object>, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.BeanClassLoaderAware;\n// Convenient superclass for JNDI-based service locators, providing configurable lookup of a specific JNDI resource.\npublic abstract class JndiObjectLocator extends JndiLocatorSupport implements org.springframework.beans.factory.InitializingBean;\n// AOP TargetSource that provides configurable JNDI lookups for getTarget() calls.\npublic class JndiObjectTargetSource extends JndiObjectLocator implements org.springframework.aop.TargetSource;\n// PropertySource implementation that reads properties from an underlying Spring JndiLocatorDelegate.\npublic class JndiPropertySource extends org.springframework.core.env.PropertySource<JndiLocatorDelegate>;\n// Helper class that simplifies JNDI operations.\npublic class JndiTemplate extends Object;\n// Properties editor for JndiTemplate objects.\npublic class JndiTemplateEditor extends PropertyEditorSupport;\n// Exception thrown if a type mismatch is encountered for an object located in a JNDI environment.\npublic class TypeMismatchNamingException extends NamingException;\n", "des": "The classes in this package make JNDI easier to use, facilitating the accessing of configuration stored in JNDI, and provide useful superclasses for JNDI access classes."}
{"index": 1539, "repo": "spring-context-6.0.11", "code": "package support\n\n// Simple JNDI-based implementation of Spring's BeanFactory interface.\npublic class SimpleJndiBeanFactory extends JndiLocatorSupport implements org.springframework.beans.factory.BeanFactory;\n", "des": "Support classes for JNDI usage, including a JNDI-based BeanFactory implementation."}
{"index": 1540, "repo": "spring-context-6.0.11", "code": "package scheduling\n\n// Extension of the Runnable interface, adding special callbacks for long-running operations.\npublic interface SchedulingAwareRunnable extends Runnable;\n// General exception to be thrown on scheduling failures, such as the scheduler already having shut down.\npublic class SchedulingException extends org.springframework.core.NestedRuntimeException;\n// A TaskExecutor extension exposing scheduling characteristics that are relevant to potential task submitters.\npublic interface SchedulingTaskExecutor extends org.springframework.core.task.AsyncTaskExecutor;\n// Task scheduler interface that abstracts the scheduling of Runnables based on different kinds of triggers.\npublic interface TaskScheduler;\n// Common interface for trigger objects that determine the next execution time of a task that they get associated with.\npublic interface Trigger;\n// Context object encapsulating last execution times and last completion time of a given task.\npublic interface TriggerContext;\n", "des": "General exceptions for Spring's scheduling support, independent of any specific scheduling system."}
{"index": 1541, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Abstract base Configuration class providing common structure for enabling Spring's asynchronous method execution capability.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractAsyncConfiguration extends Object implements ImportAware;\n// Specialization of AsyncExecutionInterceptor that delegates method execution to an Executor based on the Async annotation.\npublic class AnnotationAsyncExecutionInterceptor extends org.springframework.aop.interceptor.AsyncExecutionInterceptor;\n// Annotation that marks a method as a candidate for asynchronous execution.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Reflective public @interface Async;\n// Advisor that activates asynchronous method execution through the Async annotation.\npublic class AsyncAnnotationAdvisor extends org.springframework.aop.support.AbstractPointcutAdvisor implements org.springframework.beans.factory.BeanFactoryAware;\n// Bean post-processor that automatically applies asynchronous invocation behavior to any bean that carries the Async annotation at class or method-level by adding a corresponding AsyncAnnotationAdvisor to the exposed proxy (either an existing AOP proxy or a newly generated proxy that implements all the target's interfaces).\npublic class AsyncAnnotationBeanPostProcessor extends org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor;\n// Selects which implementation of AbstractAsyncConfiguration should be used based on the value of EnableAsync.mode() on the importing @Configuration class.\npublic class AsyncConfigurationSelector extends AdviceModeImportSelector<EnableAsync>;\n// Interface to be implemented by @Configuration classes annotated with @EnableAsync that wish to customize the Executor instance used when processing async method invocations or the AsyncUncaughtExceptionHandler instance used to process exception thrown from async method with void return type.\npublic interface AsyncConfigurer;\n// \n@Deprecated(since=\"6.0\") public class AsyncConfigurerSupport extends Object implements AsyncConfigurer;\n// \n@Deprecated(since=\"6.0\") public class AsyncResult<V> extends Object implements org.springframework.util.concurrent.ListenableFuture<V>;\n// Enables Spring's asynchronous method execution capability, similar to functionality found in Spring's <task:*> XML namespace.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(AsyncConfigurationSelector.class) public @interface EnableAsync;\n", "des": "Annotation support for asynchronous method execution."}
{"index": 1542, "repo": "spring-context-6.0.11", "code": "package concurrent\n\n// Adapter that takes a java.util.concurrent.Executor and exposes a Spring TaskExecutor for it.\npublic class ConcurrentTaskExecutor extends Object implements org.springframework.core.task.AsyncListenableTaskExecutor, SchedulingTaskExecutor;\n// Delegate that wraps a given Runnable/Callable with a JSR-236 ManagedTask, exposing a long-running hint based on SchedulingAwareRunnable and a given identity name.\nprotected static class ConcurrentTaskExecutor.ManagedTaskBuilder extends Object;\n// Adapter that takes a java.util.concurrent.ScheduledExecutorService and exposes a Spring TaskScheduler for it.\npublic class ConcurrentTaskScheduler extends ConcurrentTaskExecutor implements TaskScheduler;\n// Implementation of the ThreadFactory interface, allowing for customizing the created threads (name, priority, etc).\npublic class CustomizableThreadFactory extends org.springframework.util.CustomizableThreadCreator implements ThreadFactory;\n// JNDI-based variant of CustomizableThreadFactory, performing a default lookup for JSR-236's \"java:comp/DefaultManagedThreadFactory\" in a Jakarta EE environment, falling back to the local CustomizableThreadFactory setup if not found.\npublic class DefaultManagedAwareThreadFactory extends CustomizableThreadFactory implements org.springframework.beans.factory.InitializingBean;\n// JNDI-based variant of ConcurrentTaskExecutor, performing a default lookup for JSR-236's \"java:comp/DefaultManagedExecutorService\" in a Jakarta EE/8 environment.\npublic class DefaultManagedTaskExecutor extends ConcurrentTaskExecutor implements org.springframework.beans.factory.InitializingBean;\n// JNDI-based variant of ConcurrentTaskScheduler, performing a default lookup for JSR-236's \"java:comp/DefaultManagedScheduledExecutorService\" in a Jakarta EE environment.\npublic class DefaultManagedTaskScheduler extends ConcurrentTaskScheduler implements org.springframework.beans.factory.InitializingBean;\n// Base class for setting up a ExecutorService (typically a ThreadPoolExecutor or ScheduledThreadPoolExecutor).\npublic abstract class ExecutorConfigurationSupport extends CustomizableThreadFactory implements org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n", "des": "Scheduling convenience classes for the java.util.concurrent and jakarta.enterprise.concurrent packages, allowing to set up a ThreadPoolExecutor or ScheduledThreadPoolExecutor as a bean in a Spring context."}
{"index": 1543, "repo": "spring-context-6.0.11", "code": "package config\n\n// Parser for the 'annotation-driven' element of the 'task' namespace.\npublic class AnnotationDrivenBeanDefinitionParser extends Object implements org.springframework.beans.factory.xml.BeanDefinitionParser;\n// ScheduledTaskRegistrar subclass which redirects the actual scheduling of tasks to the ContextLifecycleScheduledTaskRegistrar.afterSingletonsInstantiated() callback (as of 4.1.2).\npublic class ContextLifecycleScheduledTaskRegistrar extends ScheduledTaskRegistrar implements org.springframework.beans.factory.SmartInitializingSingleton;\n// TriggerTask implementation defining a Runnable to be executed according to a standard cron expression.\npublic class CronTask extends TriggerTask;\n// Parser for the 'executor' element of the 'task' namespace.\npublic class ExecutorBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;\n// Specialization of IntervalTask for fixed-delay semantics.\npublic class FixedDelayTask extends IntervalTask;\n// Specialization of IntervalTask for fixed-rate semantics.\npublic class FixedRateTask extends IntervalTask;\n// Task implementation defining a Runnable to be executed at a given millisecond interval which may be treated as fixed-rate or fixed-delay depending on context.\npublic class IntervalTask extends Task;\n// A representation of a scheduled task at runtime, used as a return value for scheduling methods.\npublic final class ScheduledTask extends Object;\n// Common interface for exposing locally scheduled tasks.\npublic interface ScheduledTaskHolder;\n// Helper bean for registering tasks with a TaskScheduler, typically using cron expressions.\npublic class ScheduledTaskRegistrar extends Object implements ScheduledTaskHolder, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// Parser for the 'scheduled-tasks' element of the scheduling namespace.\npublic class ScheduledTasksBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;\n// Parser for the 'scheduler' element of the 'task' namespace.\npublic class SchedulerBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;\n// Holder class defining a Runnable to be executed as a task, typically at a scheduled time or interval.\npublic class Task extends Object;\n", "des": "Support package for declarative scheduling configuration, with XML schema being the primary configuration format."}
{"index": 1544, "repo": "spring-context-6.0.11", "code": "package support\n\n// Representation of a crontab expression that can calculate the next time it matches.\npublic final class CronExpression extends Object;\n// \n@Deprecated(since=\"5.3\", forRemoval=true) public class CronSequenceGenerator extends Object;\n// Trigger implementation for cron expressions.\npublic class CronTrigger extends Object implements Trigger;\n// Runnable wrapper that catches any exception or error thrown from its delegate Runnable and allows an ErrorHandler to handle it.\npublic class DelegatingErrorHandlingRunnable extends Object implements Runnable;\n// Adapter that implements the Runnable interface as a configurable method invocation based on Spring's MethodInvoker.\npublic class MethodInvokingRunnable extends org.springframework.beans.support.ArgumentConvertingMethodInvoker implements Runnable, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean;\n// A trigger for periodic task execution.\npublic class PeriodicTrigger extends Object implements Trigger;\n// Variant of MethodInvokingRunnable meant to be used for processing of no-arg scheduled methods.\npublic class ScheduledMethodRunnable extends Object implements Runnable;\n// Simple data holder implementation of the TriggerContext interface.\npublic class SimpleTriggerContext extends Object implements TriggerContext;\n// Utility methods for decorating tasks with error handling.\npublic abstract class TaskUtils extends Object;\n", "des": "Generic support classes for scheduling."}
{"index": 1545, "repo": "spring-context-6.0.11", "code": "package scripting\n\n// Exception to be thrown on script compilation failure.\npublic class ScriptCompilationException extends org.springframework.core.NestedRuntimeException;\n// Spring's strategy interface for evaluating a script.\npublic interface ScriptEvaluator;\n// Script definition interface, encapsulating the configuration of a specific script as well as a factory method for creating the actual scripted Java Object.\npublic interface ScriptFactory;\n// Interface that defines the source of a script.\npublic interface ScriptSource;\n", "des": "Core interfaces for Spring's scripting support."}
{"index": 1546, "repo": "spring-context-6.0.11", "code": "package bsh\n\n// BeanShell-based implementation of Spring's ScriptEvaluator strategy interface.\npublic class BshScriptEvaluator extends Object implements ScriptEvaluator, org.springframework.beans.factory.BeanClassLoaderAware;\n// ScriptFactory implementation for a BeanShell script.\npublic class BshScriptFactory extends Object implements ScriptFactory, org.springframework.beans.factory.BeanClassLoaderAware;\n// Utility methods for handling BeanShell-scripted objects.\npublic abstract class BshScriptUtils extends Object;\n// Exception to be thrown on script execution failure.\npublic static final class BshScriptUtils.BshExecutionException extends org.springframework.core.NestedRuntimeException;\n", "des": "Package providing integration of BeanShell (and BeanShell2) into Spring's scripting infrastructure."}
{"index": 1547, "repo": "spring-context-6.0.11", "code": "package config\n\n// NamespaceHandler that supports the wiring of objects backed by dynamic languages such as Groovy, JRuby and BeanShell.\npublic class LangNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n// Utilities for use with LangNamespaceHandler.\npublic abstract class LangNamespaceUtils extends Object;\n", "des": "Support package for Spring's dynamic language machinery, with XML schema being the primary configuration format."}
{"index": 1548, "repo": "spring-context-6.0.11", "code": "package groovy\n\n// Strategy used by GroovyScriptFactory to allow the customization of a created GroovyObject.\n@FunctionalInterface public interface GroovyObjectCustomizer;\n// Groovy-based implementation of Spring's ScriptEvaluator strategy interface.\npublic class GroovyScriptEvaluator extends Object implements ScriptEvaluator, org.springframework.beans.factory.BeanClassLoaderAware;\n// ScriptFactory implementation for a Groovy script.\npublic class GroovyScriptFactory extends Object implements ScriptFactory, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.BeanClassLoaderAware;\n", "des": "Package providing integration of Groovy into Spring's scripting infrastructure."}
{"index": 1549, "repo": "spring-context-6.0.11", "code": "package support\n\n// Subclass of BeanFactoryRefreshableTargetSource that determines whether a refresh is required through the given ScriptFactory.\npublic class RefreshableScriptTargetSource extends org.springframework.aop.target.dynamic.BeanFactoryRefreshableTargetSource;\n// ScriptSource implementation based on Spring's Resource abstraction.\npublic class ResourceScriptSource extends Object implements ScriptSource;\n// BeanPostProcessor that handles ScriptFactory definitions, replacing each factory with the actual scripted Java object generated by it.\npublic class ScriptFactoryPostProcessor extends Object implements org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware, ResourceLoaderAware, org.springframework.beans.factory.DisposableBean, org.springframework.core.Ordered;\n// Exception decorating a ScriptException coming out of JSR-223 script evaluation, i.e.\npublic class StandardScriptEvalException extends RuntimeException;\n// javax.script (JSR-223) based implementation of Spring's ScriptEvaluator strategy interface.\npublic class StandardScriptEvaluator extends Object implements ScriptEvaluator, org.springframework.beans.factory.BeanClassLoaderAware;\n// ScriptFactory implementation based on the JSR-223 script engine abstraction (as included in Java).\npublic class StandardScriptFactory extends Object implements ScriptFactory, org.springframework.beans.factory.BeanClassLoaderAware;\n// Common operations for dealing with a JSR-223 ScriptEngine.\npublic abstract class StandardScriptUtils extends Object;\n// Static implementation of the ScriptSource interface, encapsulating a given String that contains the script source text.\npublic class StaticScriptSource extends Object implements ScriptSource;\n", "des": "Support classes for Spring's scripting package."}
{"index": 1550, "repo": "spring-context-6.0.11", "code": "package stereotype\n\n// Indicates that an annotated class is a \"component\".\n@Target(TYPE) @Retention(RUNTIME) @Documented @Indexed public @interface Component;\n// Indicates that an annotated class is a \"Controller\" (e.g.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Component public @interface Controller;\n// Indicate that the annotated element represents a stereotype for the index.\n@Target(TYPE) @Retention(RUNTIME) @Documented public @interface Indexed;\n// Indicates that an annotated class is a \"Repository\", originally defined by Domain-Driven Design (Evans, 2003) as \"a mechanism for encapsulating storage, retrieval, and search behavior which emulates a collection of objects\".\n@Target(TYPE) @Retention(RUNTIME) @Documented @Component public @interface Repository;\n// Indicates that an annotated class is a \"Service\", originally defined by Domain-Driven Design (Evans, 2003) as \"an operation offered as an interface that stands alone in the model, with no encapsulated state.\"\n@Target(TYPE) @Retention(RUNTIME) @Documented @Component public @interface Service;\n", "des": "Annotations denoting the roles of types or methods in the overall architecture (at a conceptual, rather than implementation, level)."}
{"index": 1551, "repo": "spring-context-6.0.11", "code": "package ui\n\n// Implementation of the Model interface based on a ConcurrentHashMap for use in concurrent scenarios.\npublic class ConcurrentModel extends ConcurrentHashMap<String,Object> implements Model;\n// Subclass of ModelMap that implements the Model interface.\npublic class ExtendedModelMap extends ModelMap implements Model;\n// Interface that defines a holder for model attributes.\npublic interface Model;\n// Implementation of Map for use when building model data for use with UI tools.\npublic class ModelMap extends LinkedHashMap<String,Object>;\n", "des": "Generic support for UI layer concepts."}
{"index": 1552, "repo": "spring-context-6.0.11", "code": "package context\n\n// \n@Deprecated(since=\"6.0\") public interface HierarchicalThemeSource extends ThemeSource;\n// \n@Deprecated(since=\"6.0\") public interface Theme;\n// \n@Deprecated(since=\"6.0\") public interface ThemeSource;\n", "des": "Contains classes defining the application context subinterface for UI applications."}
{"index": 1553, "repo": "spring-context-6.0.11", "code": "package support\n\n// \n@Deprecated(since=\"6.0\") public class DelegatingThemeSource extends Object implements HierarchicalThemeSource;\n// \n@Deprecated(since=\"6.0\") public class ResourceBundleThemeSource extends Object implements HierarchicalThemeSource, org.springframework.beans.factory.BeanClassLoaderAware;\n// \n@Deprecated(since=\"6.0\") public class SimpleTheme extends Object implements Theme;\n// \n@Deprecated(since=\"6.0\") public abstract class UiApplicationContextUtils extends Object;\n", "des": "Classes supporting the org.springframework.ui.context package."}
{"index": 1554, "repo": "spring-context-6.0.11", "code": "package validation\n\n// Abstract implementation of the BindingResult interface and its super-interface Errors.\npublic abstract class AbstractBindingResult extends AbstractErrors implements BindingResult, Serializable;\n// Abstract implementation of the Errors interface.\npublic abstract class AbstractErrors extends Object implements Errors, Serializable;\n// Abstract base class for BindingResult implementations that work with Spring's PropertyAccessor mechanism.\npublic abstract class AbstractPropertyBindingResult extends AbstractBindingResult;\n// Default implementation of the Errors and BindingResult interfaces, for the registration and evaluation of binding errors on JavaBean objects.\npublic class BeanPropertyBindingResult extends AbstractPropertyBindingResult implements Serializable;\n// Thrown when binding errors are considered fatal.\npublic class BindException extends Exception implements BindingResult;\n// Strategy for processing DataBinder's missing field errors, and for translating a PropertyAccessException to a FieldError.\npublic interface BindingErrorProcessor;\n// General interface that represents binding results.\npublic interface BindingResult extends Errors;\n// Convenience methods for looking up BindingResults in a model Map.\npublic abstract class BindingResultUtils extends Object;\n// Binder that allows for setting property values on a target object, including support for validation and binding result analysis.\npublic class DataBinder extends Object implements org.springframework.beans.PropertyEditorRegistry, org.springframework.beans.TypeConverter;\n// Default BindingErrorProcessor implementation.\npublic class DefaultBindingErrorProcessor extends Object implements BindingErrorProcessor;\n// Default implementation of the MessageCodesResolver interface.\npublic class DefaultMessageCodesResolver extends Object implements MessageCodesResolver, Serializable;\n// Common message code formats.\npublic static enum DefaultMessageCodesResolver.Format extends Enum<DefaultMessageCodesResolver.Format> implements MessageCodeFormatter;\n// Special implementation of the Errors and BindingResult interfaces, supporting registration and evaluation of binding errors on value objects.\npublic class DirectFieldBindingResult extends AbstractPropertyBindingResult;\n// Stores and exposes information about data-binding and validation errors for a specific object.\npublic interface Errors;\n// Encapsulates a field error, that is, a reason for rejecting a specific field value.\npublic class FieldError extends ObjectError;\n// Map-based implementation of the BindingResult interface, supporting registration and evaluation of binding errors on Map attributes.\npublic class MapBindingResult extends AbstractBindingResult implements Serializable;\n// A strategy interface for formatting message codes.\n@FunctionalInterface public interface MessageCodeFormatter;\n", "des": "Provides data binding and validation functionality, for usage in business and/or UI layers."}
{"index": 1555, "repo": "spring-context-6.0.11", "code": "package annotation\n\n// Variant of JSR-303's Valid, supporting the specification of validation groups.\n@Target({TYPE,METHOD,PARAMETER}) @Retention(RUNTIME) @Documented public @interface Validated;\n// Utility class for handling validation annotations.\npublic abstract class ValidationAnnotationUtils extends Object;\n", "des": "Support classes for annotation-based constraint evaluation, e.g."}
{"index": 1556, "repo": "spring-context-6.0.11", "code": "package beanvalidation\n\n// Simple BeanPostProcessor that checks JSR-303 constraint annotations in Spring-managed beans, throwing an initialization exception in case of constraint violations right before calling the bean's init method (if any).\npublic class BeanValidationPostProcessor extends Object implements org.springframework.beans.factory.config.BeanPostProcessor, org.springframework.beans.factory.InitializingBean;\n// Configurable bean class that exposes a specific JSR-303 Validator through its original interface as well as through the Spring Validator interface.\npublic class CustomValidatorBean extends SpringValidatorAdapter implements Validator, org.springframework.beans.factory.InitializingBean;\n// Delegates to a target MessageInterpolator implementation but enforces Spring's managed Locale.\npublic class LocaleContextMessageInterpolator extends Object implements MessageInterpolator;\n// This is the central class for jakarta.validation (JSR-303) setup in a Spring application context: It bootstraps a jakarta.validation.ValidationFactory and exposes it through the Spring Validator interface as well as through the JSR-303 Validator interface and the ValidatorFactory interface itself.\npublic class LocalValidatorFactoryBean extends SpringValidatorAdapter implements ValidatorFactory, ApplicationContextAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// Implementation of Hibernate Validator 4.3/5.x's ResourceBundleLocator interface, exposing a Spring MessageSource as localized MessageSourceResourceBundle.\npublic class MessageSourceResourceBundleLocator extends Object implements org.hibernate.validator.spi.resourceloading.ResourceBundleLocator;\n// An AOP Alliance MethodInterceptor implementation that delegates to a JSR-303 provider for performing method-level validation on annotated methods.\npublic class MethodValidationInterceptor extends Object implements org.aopalliance.intercept.MethodInterceptor;\n// A convenient BeanPostProcessor implementation that delegates to a JSR-303 provider for performing method-level validation on annotated methods.\npublic class MethodValidationPostProcessor extends org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor implements org.springframework.beans.factory.InitializingBean;\n", "des": "Support classes for integrating a JSR-303 Bean Validation provider (such as Hibernate Validator) into a Spring ApplicationContext and in particular with Spring's data binding and validation APIs."}
{"index": 1557, "repo": "spring-context-6.0.11", "code": "package support\n\n// Subclass of ConcurrentModel that automatically removes the BindingResult object when its corresponding target attribute is replaced through regular Map operations.\npublic class BindingAwareConcurrentModel extends ConcurrentModel;\n// Subclass of ExtendedModelMap that automatically removes a BindingResult object if the corresponding target attribute gets replaced through regular Map operations.\npublic class BindingAwareModelMap extends ExtendedModelMap;\n", "des": "Support classes for handling validation results."}
{"index": 1558, "repo": "spring-restdocs-core-3.0.0", "code": "package restdocs\n\n// A JUnit TestRule used to automatically manage the RestDocumentationContext.\npublic class JUnitRestDocumentation extends Object implements RestDocumentationContextProvider, org.junit.rules.TestRule;\n// ManualRestDocumentation is used to manually manage the RestDocumentationContext.\npublic final class ManualRestDocumentation extends Object implements RestDocumentationContextProvider;\n// RestDocumentationContext encapsulates the context in which the documentation of a RESTful API is being performed.\npublic interface RestDocumentationContext;\n// A RestDocumentationContextProvider is used to provide access to the RestDocumentationContext.\npublic interface RestDocumentationContextProvider;\n// A JUnit Jupiter Extension used to automatically manage the RestDocumentationContext.\npublic class RestDocumentationExtension extends Object implements org.junit.jupiter.api.extension.BeforeEachCallback, org.junit.jupiter.api.extension.AfterEachCallback, org.junit.jupiter.api.extension.ParameterResolver;\n", "des": "Core Spring REST Docs classes."}
{"index": 1559, "repo": "spring-restdocs-core-3.0.0", "code": "package cli\n\n// Static factory methods for documenting a RESTful API as if it were being driven using a command-line utility such as curl or HTTPie.\npublic abstract class CliDocumentation extends Object;\n// Formatter for CLI commands such as those included in CurlRequestSnippet and HttpieRequestSnippet.\npublic interface CommandFormatter;\n// A Snippet that documents the curl command for a request.\npublic class CurlRequestSnippet extends TemplatedSnippet;\n// A Snippet that documents the HTTPie command for a request.\npublic class HttpieRequestSnippet extends TemplatedSnippet;\n", "des": "Documenting CLI commands required to make a request to a RESTful API."}
{"index": 1560, "repo": "spring-restdocs-core-3.0.0", "code": "package config\n\n// Abstract configurer that declares methods that are internal to the documentation configuration implementation.\npublic abstract class AbstractConfigurer extends Object;\n// Base class for NestedConfigurer implementations.\npublic abstract class AbstractNestedConfigurer<PARENT> extends AbstractConfigurer;\n// A configurer that can be used to configure the default operation preprocessors.\npublic abstract class OperationPreprocessorsConfigurer<PARENT,TYPE> extends AbstractNestedConfigurer<PARENT>;\n// Abstract base class for the configuration of Spring REST Docs.\npublic abstract class RestDocumentationConfigurer<S extends AbstractConfigurer,P extends AbstractConfigurer,T> extends Object;\n// A configurer that can be used to configure the generated documentation snippets.\npublic abstract class SnippetConfigurer<PARENT,TYPE> extends AbstractNestedConfigurer<PARENT>;\n", "des": "Classes for configuring Spring REST Docs."}
{"index": 1561, "repo": "spring-restdocs-core-3.0.0", "code": "package constraints\n\n// A constraint.\npublic class Constraint extends Object;\n// Resolves a description for a Constraint.\npublic interface ConstraintDescriptionResolver;\n// Provides access to descriptions of a class's constraints.\npublic class ConstraintDescriptions extends Object;\n// An abstraction for resolving a class's constraints.\npublic interface ConstraintResolver;\n// A ConstraintDescriptionResolver that resolves constraint descriptions from a ResourceBundle.\npublic class ResourceBundleConstraintDescriptionResolver extends Object implements ConstraintDescriptionResolver;\n// A ConstraintResolver that uses a Bean Validation Validator to resolve constraints.\npublic class ValidatorConstraintResolver extends Object implements ConstraintResolver;\n", "des": "Documenting a RESTful API's constraints."}
{"index": 1562, "repo": "spring-restdocs-core-3.0.0", "code": "package cookies\n\n// Abstract TemplatedSnippet subclass that provides a base for snippets that document a RESTful resource's request or response cookies.\npublic abstract class AbstractCookiesSnippet extends TemplatedSnippet;\n// A description of a cookie found in a request or response.\npublic class CookieDescriptor extends IgnorableDescriptor<CookieDescriptor>;\n// Static factory methods for documenting a RESTful API's request and response cookies.\npublic abstract class CookieDocumentation extends Object;\n// A Snippet that documents the cookies in a request.\npublic class RequestCookiesSnippet extends AbstractCookiesSnippet;\n// A Snippet that documents the cookies in a response.\npublic class ResponseCookiesSnippet extends AbstractCookiesSnippet;\n", "des": "Documenting the cookies of a RESTful API's requests and responses."}
{"index": 1563, "repo": "spring-restdocs-core-3.0.0", "code": "package generate\n\n// An exception that can be thrown when a failure occurs during REST documentation generation.\npublic class RestDocumentationGenerationException extends RuntimeException;\n// A RestDocumentationGenerator is used to generate documentation snippets from the request and response of an operation performed on a service.\npublic final class RestDocumentationGenerator<REQ,RESP> extends Object;\n", "des": "Classes that drive the generation of the documentation snippets."}
{"index": 1564, "repo": "spring-restdocs-core-3.0.0", "code": "package headers\n\n// Abstract TemplatedSnippet subclass that provides a base for snippets that document a RESTful resource's request or response headers.\npublic abstract class AbstractHeadersSnippet extends TemplatedSnippet;\n// A description of a header found in a request or response.\npublic class HeaderDescriptor extends AbstractDescriptor<HeaderDescriptor>;\n// Static factory methods for documenting a RESTful API's request and response headers.\npublic abstract class HeaderDocumentation extends Object;\n// A Snippet that documents the headers in a request.\npublic class RequestHeadersSnippet extends AbstractHeadersSnippet;\n// A Snippet that documents the headers in a response.\npublic class ResponseHeadersSnippet extends AbstractHeadersSnippet;\n", "des": "Documenting the headers of a RESTful API's requests and responses."}
{"index": 1565, "repo": "spring-restdocs-core-3.0.0", "code": "package http\n\n// Static factory methods for documenting a RESTful API's HTTP requests.\npublic abstract class HttpDocumentation extends Object;\n// A Snippet that documents an HTTP request.\npublic class HttpRequestSnippet extends TemplatedSnippet;\n// A Snippet that documents an HTTP response.\npublic class HttpResponseSnippet extends TemplatedSnippet;\n", "des": "Documenting the HTTP request sent to a RESTful API and the HTTP response that is returned."}
{"index": 1566, "repo": "spring-restdocs-core-3.0.0", "code": "package hypermedia\n\n// Static factory methods for documenting a RESTful API that utilizes Hypermedia.\npublic abstract class HypermediaDocumentation extends Object;\n// Representation of a link used in a Hypermedia-based API.\npublic class Link extends Object;\n// A description of a link found in a hypermedia API.\npublic class LinkDescriptor extends IgnorableDescriptor<LinkDescriptor>;\n// A LinkExtractor is used to extract links from a JSON response.\npublic interface LinkExtractor;\n// A Snippet that documents a RESTful resource's links.\npublic class LinksSnippet extends TemplatedSnippet;\n", "des": "Documenting a RESTful API that uses hypermedia."}
{"index": 1567, "repo": "spring-restdocs-core-3.0.0", "code": "package operation\n\n// An exception that can be thrown by RequestConverter and ResponseConverter implementations to indicate that a failure has occurred during conversion.\npublic class ConversionException extends RuntimeException;\n// A request's form parameters, derived from its form URL encoded body content.\npublic final class FormParameters extends LinkedMultiValueMap<String,String>;\n// Describes an operation performed on a RESTful service.\npublic interface Operation;\n// The request that was sent as part of performing an operation on a RESTful service.\npublic interface OperationRequest;\n// A factory for creating OperationRequests.\npublic class OperationRequestFactory extends Object;\n// A part of a multipart request.\npublic interface OperationRequestPart;\n// A factory for creating OperationRequestParts.\npublic class OperationRequestPartFactory extends Object;\n// The response that was received as part of performing an operation on a RESTful service.\npublic interface OperationResponse;\n// A factory for creating OperationResponses.\npublic class OperationResponseFactory extends Object;\n// A request's query parameters, derived from its URI's query string.\npublic final class QueryParameters extends LinkedMultiValueMap<String,String>;\n// A RequestConverter is used to convert an implementation-specific request into an OperationRequest.\npublic interface RequestConverter<R>;\n// A representation of a Cookie received in a request.\npublic final class RequestCookie extends Object;\n// A ResponseConverter is used to convert an implementation-specific response into an OperationResponse.\npublic interface ResponseConverter<R>;\n// A representation of a Cookie returned in a response.\npublic final class ResponseCookie extends Object;\n// Standard implementation of Operation.\npublic class StandardOperation extends Object implements Operation;\n", "des": "Operation API that describes a request that was sent and the response that was received when calling a RESTful API."}
{"index": 1568, "repo": "spring-restdocs-core-3.0.0", "code": "package preprocess\n\n// A ContentModifier modifies the content of an OperationRequest or OperationResponse during the preprocessing that is performed prior to documentation generation.\npublic interface ContentModifier;\n// An OperationPreprocessor that applies a ContentModifier to the content of the request or response.\npublic class ContentModifyingOperationPreprocessor extends Object implements OperationPreprocessor;\n// An OperationPreprocessor that modifies a request or response by adding, setting, or removing headers.\npublic class HeadersModifyingOperationPreprocessor extends Object implements OperationPreprocessor;\n// An OperationPreprocessor processes the OperationRequest and OperationResponse of an Operation prior to it being documented.\npublic interface OperationPreprocessor;\n// An implementation of OperationPreprocessor that returns the request and response as-is.\npublic abstract class OperationPreprocessorAdapter extends Object implements OperationPreprocessor;\n// An OperationRequestPreprocessor is used to modify an OperationRequest prior to it being documented.\npublic interface OperationRequestPreprocessor;\n// An OperationResponsePreprocessor is used to modify an OperationResponse prior to it being documented.\npublic interface OperationResponsePreprocessor;\n// Static factory methods for creating OperationPreprocessors that can be applied to an Operation's request or response before it is documented.\npublic final class Preprocessors extends Object;\n// A ContentModifier that modifies the content by pretty printing it.\npublic class PrettyPrintingContentModifier extends Object implements ContentModifier;\n// An OperationPreprocessor that modifies URIs in the request and in the response by changing one or more of their host, scheme, and port.\npublic class UriModifyingOperationPreprocessor extends Object implements OperationPreprocessor;\n", "des": "Support for preprocessing an operation prior to it being documented."}
{"index": 1569, "repo": "spring-restdocs-core-3.0.0", "code": "package payload\n\n// Abstract TemplatedSnippet subclass that provides a base for snippets that document a RESTful resource's request or response body.\npublic abstract class AbstractBodySnippet extends TemplatedSnippet;\n// Abstract TemplatedSnippet subclass that provides a base for snippets that document a RESTful resource's request or response fields.\npublic abstract class AbstractFieldsSnippet extends TemplatedSnippet;\n// A description of a field found in a request or response payload.\npublic class FieldDescriptor extends IgnorableDescriptor<FieldDescriptor>;\n// A FieldDoesNotExistException is thrown when a requested field does not exist in a payload.\npublic class FieldDoesNotExistException extends RuntimeException;\n// A PayloadSubsectionExtractor that extracts the subsection of the JSON payload identified by a field path.\npublic class FieldPathPayloadSubsectionExtractor extends Object implements PayloadSubsectionExtractor<FieldPathPayloadSubsectionExtractor>;\n// A FieldTypeRequiredException is thrown when a field's type cannot be determined automatically and, therefore, must be explicitly provided.\npublic class FieldTypeRequiredException extends RuntimeException;\n// Resolves the type of a field in a request or response payload.\npublic interface FieldTypeResolver;\n// An enumeration of the possible types for a field in a JSON request or response payload.\npublic enum JsonFieldType extends Enum<JsonFieldType>;\n// Static factory methods for documenting a RESTful API's request and response payloads.\npublic abstract class PayloadDocumentation extends Object;\n// Strategy interface for extracting a subsection of a payload.\npublic interface PayloadSubsectionExtractor<T extends PayloadSubsectionExtractor<T>>;\n// A Snippet that documents the body of a request.\npublic class RequestBodySnippet extends AbstractBodySnippet;\n// A Snippet that documents the fields in a request.\npublic class RequestFieldsSnippet extends AbstractFieldsSnippet;\n// A Snippet that documents the body of a request part.\npublic class RequestPartBodySnippet extends AbstractBodySnippet;\n// A Snippet that documents the fields in a request part.\npublic class RequestPartFieldsSnippet extends AbstractFieldsSnippet;\n// A Snippet that documents the body of a response.\npublic class ResponseBodySnippet extends AbstractBodySnippet;\n// A Snippet that documents the fields in a response.\npublic class ResponseFieldsSnippet extends AbstractFieldsSnippet;\n// A description of a subsection, i.e.\npublic class SubsectionDescriptor extends FieldDescriptor;\n", "des": "Documenting the payload of a RESTful API's requests and responses."}
{"index": 1570, "repo": "spring-restdocs-core-3.0.0", "code": "package request\n\n// Abstract TemplatedSnippet subclass that provides a base for snippets that document parameters from a request sent to a RESTful resource.\npublic abstract class AbstractParametersSnippet extends TemplatedSnippet;\n// A Snippet that documents the form parameters supported by a RESTful resource.\npublic class FormParametersSnippet extends AbstractParametersSnippet;\n// A descriptor of a request or path parameter.\npublic class ParameterDescriptor extends IgnorableDescriptor<ParameterDescriptor>;\n// A Snippet that documents the path parameters supported by a RESTful resource.\npublic class PathParametersSnippet extends AbstractParametersSnippet;\n// A Snippet that documents the query parameters supported by a RESTful resource.\npublic class QueryParametersSnippet extends AbstractParametersSnippet;\n// Static factory methods for documenting aspects of a request sent to a RESTful API.\npublic abstract class RequestDocumentation extends Object;\n// A descriptor of a request part.\npublic class RequestPartDescriptor extends IgnorableDescriptor<RequestPartDescriptor>;\n// A Snippet that documents the request parts supported by a RESTful resource.\npublic class RequestPartsSnippet extends TemplatedSnippet;\n", "des": "Documenting query and path parameters of requests sent to a RESTful API."}
{"index": 1571, "repo": "spring-restdocs-core-3.0.0", "code": "package snippet\n\n// Base class for descriptors.\npublic abstract class AbstractDescriptor<T extends AbstractDescriptor<T>> extends Object;\n// A fluent API for building a map of attributes.\npublic abstract class Attributes extends Object;\n// An attribute (key-value pair).\npublic static final class Attributes.Attribute extends Object;\n// A simple builder for an attribute (key-value pair).\npublic static final class Attributes.AttributeBuilder extends Object;\n// Base class for descriptors for items that can be ignored.\npublic abstract class IgnorableDescriptor<T extends IgnorableDescriptor<T>> extends AbstractDescriptor<T>;\n// An exception that can be thrown by a TemplatedSnippet to indicate that a failure has occurred during model creation.\npublic class ModelCreationException extends RuntimeException;\n// A factory for creating PropertyPlaceholderHelper.PlaceholderResolver instances.\npublic interface PlaceholderResolverFactory;\n// A PropertyPlaceholderHelper.PlaceholderResolver that resolves placeholders using a RestDocumentationContext.\npublic class RestDocumentationContextPlaceholderResolver extends Object implements PropertyPlaceholderHelper.PlaceholderResolver;\n// A PlaceholderResolverFactory that creates RestDocumentationContextPlaceholderResolver instances.\npublic final class RestDocumentationContextPlaceholderResolverFactory extends Object implements PlaceholderResolverFactory;\n// A Snippet is used to document aspects of a call to a RESTful API.\npublic interface Snippet;\n// A RuntimeException thrown to indicate a problem with the generation of a documentation snippet.\npublic class SnippetException extends RuntimeException;\n// Standard implementation of WriterResolver.\npublic final class StandardWriterResolver extends Object implements WriterResolver;\n// Base class for a Snippet that is produced using a Template and TemplateEngine.\npublic abstract class TemplatedSnippet extends Object implements Snippet;\n// A WriterResolver is used to access the Writer that should be used to write a snippet for an operation that is being documented.\npublic interface WriterResolver;\n", "des": "Snippet generation."}
{"index": 1572, "repo": "spring-restdocs-core-3.0.0", "code": "package templates\n\n// Standard implementation of TemplateResourceResolver.\npublic class StandardTemplateResourceResolver extends Object implements TemplateResourceResolver;\n// A compiled Template that can be rendered to a String.\npublic interface Template;\n// A TemplateEngine is used to render documentation snippets.\npublic interface TemplateEngine;\n// A TemplateFormat provides information about a particular template format, such as Asciidoctor or Markdown.\npublic interface TemplateFormat;\n// An enumeration of the built-in formats for which templates are provided.\npublic abstract class TemplateFormats extends Object;\n// A TemplateResourceResolver is responsible for resolving a name for a template into a Resource from which the template can be read.\npublic interface TemplateResourceResolver;\n", "des": "Template API used to render documentation snippets."}
{"index": 1573, "repo": "spring-restdocs-core-3.0.0", "code": "package mustache\n\n// A Mustache.Lambda that escapes | characters so that the do not break the table's formatting.\npublic final class AsciidoctorTableCellContentLambda extends Object implements org.springframework.restdocs.mustache.Mustache.Lambda;\n// An adapter that exposes a compiled Mustache template as a Template.\npublic class MustacheTemplate extends Object implements Template;\n// A Mustache-based TemplateEngine implemented using JMustache.\npublic class MustacheTemplateEngine extends Object implements TemplateEngine;\n", "des": "JMustache-based implementation of the template API."}
{"index": 1574, "repo": "spring-cloud-task-core-3.0.3", "code": "package configuration\n\n// Default implementation of the TaskConfigurer interface.\npublic class DefaultTaskConfigurer extends Object implements TaskConfigurer;\n// Enables the TaskLifecycleListener so that the features of Spring Cloud Task will be applied.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(TaskLifecycleConfiguration.class) public @interface EnableTask;\n// Base Configuration class providing common structure for enabling and using Spring Task.\n@AutoConfiguration @EnableTransactionManagement @EnableConfigurationProperties(TaskProperties.class) @ConditionalOnProperty(prefix=\"spring.cloud.task.autoconfiguration\", name=\"enabled\", havingValue=\"true\", matchIfMissing=true) @Import(org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer.class) public class SimpleTaskAutoConfiguration extends Object;\n// When spring.cloud.task.single-instance-enabled is set to true this listener will create a lock for the task based on the spring.cloud.task.name.\npublic class SingleInstanceTaskListener extends Object implements org.springframework.context.ApplicationListener<org.springframework.context.ApplicationEvent>;\n// Autoconfiguration of SingleInstanceTaskListener.\n@Order(-2147483648) @AutoConfiguration @ConditionalOnProperty(prefix=\"spring.cloud.task\", name=\"single-instance-enabled\", havingValue=\"true\") public class SingleTaskConfiguration extends Object;\n// Provides a strategy interface for providing configuration customization to the task system.\npublic interface TaskConfigurer;\n// Configuration for a TaskLifecycleListener.\n@Configuration(proxyBeanMethods=false) public class TaskLifecycleConfiguration extends Object;\n// Provides values for the KeyValues for the task Observation when the cloud profile is active.\npublic class TaskObservationCloudKeyValues extends Object;\n// Properties available to configure the task.\n@ConfigurationProperties(prefix=\"spring.cloud.task\") public class TaskProperties extends Object;\n// Native Hints for Spring Cloud Task.\npublic class TaskRuntimeHints extends Object implements org.springframework.aot.hint.RuntimeHintsRegistrar;\n", "des": "Interfaces for configuring Spring Cloud Task and a default implementations."}
{"index": 1575, "repo": "spring-cloud-task-core-3.0.3", "code": "package dao\n\n// Stores Task Execution Information to a JDBC DataSource.\npublic class JdbcTaskExecutionDao extends Object implements TaskExecutionDao;\n// Stores Task Execution Information to a in-memory map.\npublic class MapTaskExecutionDao extends Object implements TaskExecutionDao;\n// Data Access Object for task executions.\npublic interface TaskExecutionDao;\n", "des": "Interface DAO and default implementations for storing and retrieving data for tasks from a repository."}
{"index": 1576, "repo": "spring-cloud-task-core-3.0.3", "code": "package support\n\n// Enum representing a database type, such as DB2 or oracle.\npublic enum DatabaseType extends Enum<DatabaseType>;\n// TaskExplorer for that gathers task information from a task repository.\npublic class SimpleTaskExplorer extends Object implements TaskExplorer;\n// Simple implementation of the TaskNameResolver interface.\npublic class SimpleTaskNameResolver extends Object implements TaskNameResolver, org.springframework.context.ApplicationContextAware;\n// Records the task execution information to the log and to TaskExecutionDao provided.\npublic class SimpleTaskRepository extends Object implements TaskRepository;\n// A FactoryBean implementation that creates the appropriate TaskExecutionDao based on the provided information.\npublic class TaskExecutionDaoFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<TaskExecutionDao>;\n// Utility for initializing the Task Repository's datasource.\npublic final class TaskRepositoryInitializer extends Object implements org.springframework.beans.factory.InitializingBean;\n", "des": "Classes used for setting up and supporting a task repositories."}
{"index": 1577, "repo": "spring-security-oauth2-client-6.1.2", "code": "package client\n\n// An implementation of an OAuth2AuthorizedClientProvider for the authorization_code grant.\npublic final class AuthorizationCodeOAuth2AuthorizedClientProvider extends Object implements OAuth2AuthorizedClientProvider;\n// An implementation of a ReactiveOAuth2AuthorizedClientProvider for the authorization_code grant.\npublic final class AuthorizationCodeReactiveOAuth2AuthorizedClientProvider extends Object implements ReactiveOAuth2AuthorizedClientProvider;\n// An implementation of an OAuth2AuthorizedClientManager that is capable of operating outside of the context of a HttpServletRequest, e.g.\npublic final class AuthorizedClientServiceOAuth2AuthorizedClientManager extends Object implements OAuth2AuthorizedClientManager;\n// The default implementation of the contextAttributesMapper.\npublic static class AuthorizedClientServiceOAuth2AuthorizedClientManager.DefaultContextAttributesMapper extends Object implements Function<OAuth2AuthorizeRequest,Map<String,Object>>;\n// An implementation of a ReactiveOAuth2AuthorizedClientManager that is capable of operating outside of the context of a ServerWebExchange, e.g.\npublic final class AuthorizedClientServiceReactiveOAuth2AuthorizedClientManager extends Object implements ReactiveOAuth2AuthorizedClientManager;\n// The default implementation of the contextAttributesMapper.\npublic static class AuthorizedClientServiceReactiveOAuth2AuthorizedClientManager.DefaultContextAttributesMapper extends Object implements Function<OAuth2AuthorizeRequest,reactor.core.publisher.Mono<Map<String,Object>>>;\n// This exception is thrown on the client side when an attempt to authenticate or authorize an OAuth 2.0 client fails.\npublic class ClientAuthorizationException extends org.springframework.security.oauth2.core.OAuth2AuthorizationException;\n// This exception is thrown when an OAuth 2.0 Client is required to obtain authorization from the Resource Owner.\npublic class ClientAuthorizationRequiredException extends ClientAuthorizationException;\n// An implementation of an OAuth2AuthorizedClientProvider for the client_credentials grant.\npublic final class ClientCredentialsOAuth2AuthorizedClientProvider extends Object implements OAuth2AuthorizedClientProvider;\n// An implementation of a ReactiveOAuth2AuthorizedClientProvider for the client_credentials grant.\npublic final class ClientCredentialsReactiveOAuth2AuthorizedClientProvider extends Object implements ReactiveOAuth2AuthorizedClientProvider;\n// An implementation of an OAuth2AuthorizedClientProvider that simply delegates to it's internal List of OAuth2AuthorizedClientProvider(s).\npublic final class DelegatingOAuth2AuthorizedClientProvider extends Object implements OAuth2AuthorizedClientProvider;\n", "des": "Core classes and interfaces providing support for OAuth 2.0 Client."}
{"index": 1578, "repo": "spring-security-oauth2-client-6.1.2", "code": "package authentication\n\n// An implementation of an AbstractAuthenticationToken that represents an OAuth 2.0 Authentication.\npublic class OAuth2AuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken;\n// An implementation of an AuthenticationProvider for the OAuth 2.0 Authorization Code Grant.\npublic class OAuth2AuthorizationCodeAuthenticationProvider extends Object implements org.springframework.security.authentication.AuthenticationProvider;\n// An AbstractAuthenticationToken for the OAuth 2.0 Authorization Code Grant.\npublic class OAuth2AuthorizationCodeAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken;\n// An implementation of an AuthenticationProvider for OAuth 2.0 Login, which leverages the OAuth 2.0 Authorization Code Grant Flow.\npublic class OAuth2AuthorizationCodeReactiveAuthenticationManager extends Object implements org.springframework.security.authentication.ReactiveAuthenticationManager;\n// An implementation of an AuthenticationProvider for OAuth 2.0 Login, which leverages the OAuth 2.0 Authorization Code Grant Flow.\npublic class OAuth2LoginAuthenticationProvider extends Object implements org.springframework.security.authentication.AuthenticationProvider;\n// An AbstractAuthenticationToken for OAuth 2.0 Login, which leverages the OAuth 2.0 Authorization Code Grant Flow.\npublic class OAuth2LoginAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken;\n// An implementation of an AuthenticationProvider for OAuth 2.0 Login, which leverages the OAuth 2.0 Authorization Code Grant Flow.\npublic class OAuth2LoginReactiveAuthenticationManager extends Object implements org.springframework.security.authentication.ReactiveAuthenticationManager;\n", "des": "Support classes and interfaces for authenticating and authorizing a client with an OAuth 2.0 Authorization Server using a specific authorization grant flow."}
{"index": 1579, "repo": "spring-security-oauth2-client-6.1.2", "code": "package endpoint\n\n// Base implementation of an OAuth 2.0 Authorization Grant request that holds an authorization grant credential and is used when initiating a request to the Authorization Server's Token Endpoint.\npublic abstract class AbstractOAuth2AuthorizationGrantRequest extends Object;\n// Abstract base class for all of the WebClientReactive*TokenResponseClients that communicate to the Authorization Server's Token Endpoint.\npublic abstract class AbstractWebClientReactiveOAuth2AccessTokenResponseClient<T extends AbstractOAuth2AuthorizationGrantRequest> extends Object implements ReactiveOAuth2AccessTokenResponseClient<T>;\n// The default implementation of an OAuth2AccessTokenResponseClient for the authorization_code grant.\npublic final class DefaultAuthorizationCodeTokenResponseClient extends Object implements OAuth2AccessTokenResponseClient<OAuth2AuthorizationCodeGrantRequest>;\n// The default implementation of an OAuth2AccessTokenResponseClient for the client_credentials grant.\npublic final class DefaultClientCredentialsTokenResponseClient extends Object implements OAuth2AccessTokenResponseClient<OAuth2ClientCredentialsGrantRequest>;\n// The default implementation of an OAuth2AccessTokenResponseClient for the jwt-bearer grant.\npublic final class DefaultJwtBearerTokenResponseClient extends Object implements OAuth2AccessTokenResponseClient<JwtBearerGrantRequest>;\n// \n@Deprecated public final class DefaultPasswordTokenResponseClient extends Object implements OAuth2AccessTokenResponseClient<OAuth2PasswordGrantRequest>;\n// The default implementation of an OAuth2AccessTokenResponseClient for the refresh_token grant.\npublic final class DefaultRefreshTokenTokenResponseClient extends Object implements OAuth2AccessTokenResponseClient<OAuth2RefreshTokenGrantRequest>;\n// A JWT Bearer Grant request that holds a Jwt assertion.\npublic class JwtBearerGrantRequest extends AbstractOAuth2AuthorizationGrantRequest;\n// An implementation of an AbstractOAuth2AuthorizationGrantRequestEntityConverter that converts the provided JwtBearerGrantRequest to a RequestEntity representation of an OAuth 2.0 Access Token Request for the JWT Bearer Grant.\npublic class JwtBearerGrantRequestEntityConverter extends Object;\n// A Converter that customizes the OAuth 2.0 Access Token Request parameters by adding a signed JSON Web Token (JWS) to be used for client authentication at the Authorization Server's Token Endpoint.\npublic final class NimbusJwtClientAuthenticationParametersConverter<T extends AbstractOAuth2AuthorizationGrantRequest> extends Object implements org.springframework.core.convert.converter.Converter<T,org.springframework.util.MultiValueMap<String,String>>;\n", "des": "Classes and interfaces providing support to the client for initiating requests to the Authorization Server's Protocol Endpoints."}
{"index": 1580, "repo": "spring-security-oauth2-client-6.1.2", "code": "package authentication\n\n// An implementation of an AuthenticationProvider for the OpenID Connect Core 1.0 Authorization Code Grant Flow.\npublic class OidcAuthorizationCodeAuthenticationProvider extends Object implements org.springframework.security.authentication.AuthenticationProvider;\n// An implementation of an AuthenticationProvider for OAuth 2.0 Login, which leverages the OAuth 2.0 Authorization Code Grant Flow.\npublic class OidcAuthorizationCodeReactiveAuthenticationManager extends Object implements org.springframework.security.authentication.ReactiveAuthenticationManager;\n// A factory that provides a JwtDecoder used for OidcIdToken signature verification.\npublic final class OidcIdTokenDecoderFactory extends Object implements org.springframework.security.oauth2.jwt.JwtDecoderFactory<ClientRegistration>;\n// An OAuth2TokenValidator responsible for validating the claims in an ID Token.\npublic final class OidcIdTokenValidator extends Object implements org.springframework.security.oauth2.core.OAuth2TokenValidator<org.springframework.security.oauth2.jwt.Jwt>;\n// A factory that provides a ReactiveJwtDecoder used for OidcIdToken signature verification.\npublic final class ReactiveOidcIdTokenDecoderFactory extends Object implements org.springframework.security.oauth2.jwt.ReactiveJwtDecoderFactory<ClientRegistration>;\n", "des": "Support classes and interfaces for authenticating and authorizing a client with an OpenID Connect 1.0 Provider using a specific authorization grant flow."}
{"index": 1581, "repo": "spring-security-oauth2-client-6.1.2", "code": "package userinfo\n\n// An implementation of an ReactiveOAuth2UserService that supports OpenID Connect 1.0 Provider's.\npublic class OidcReactiveOAuth2UserService extends Object implements ReactiveOAuth2UserService<OidcUserRequest,org.springframework.security.oauth2.core.oidc.user.OidcUser>;\n// Represents a request the OidcUserService uses when initiating a request to the UserInfo Endpoint.\npublic class OidcUserRequest extends OAuth2UserRequest;\n// An implementation of an OAuth2UserService that supports OpenID Connect 1.0 Provider's.\npublic class OidcUserService extends Object implements OAuth2UserService<OidcUserRequest,org.springframework.security.oauth2.core.oidc.user.OidcUser>;\n", "des": "Classes and interfaces providing support to the client for initiating requests to the OpenID Connect 1.0 Provider's UserInfo Endpoint."}
{"index": 1582, "repo": "spring-security-oauth2-client-6.1.2", "code": "package registration\n\n// A representation of a client registration with an OAuth 2.0 or OpenID Connect 1.0 Provider.\npublic final class ClientRegistration extends Object implements Serializable;\n// A builder for ClientRegistration.\npublic static final class ClientRegistration.Builder extends Object implements Serializable;\n// A repository for OAuth 2.0 / OpenID Connect 1.0 ClientRegistration(s).\npublic interface ClientRegistrationRepository;\n// Allows creating a ClientRegistration.Builder from an OpenID Provider Configuration or Authorization Server Metadata based on provided issuer.\npublic final class ClientRegistrations extends Object;\n// A ClientRegistrationRepository that stores ClientRegistration(s) in-memory.\npublic final class InMemoryClientRegistrationRepository extends Object implements ClientRegistrationRepository, Iterable<ClientRegistration>;\n// A Reactive ClientRegistrationRepository that stores ClientRegistration(s) in-memory.\npublic final class InMemoryReactiveClientRegistrationRepository extends Object implements ReactiveClientRegistrationRepository, Iterable<ClientRegistration>;\n// A reactive repository for OAuth 2.0 / OpenID Connect 1.0 ClientRegistration(s).\npublic interface ReactiveClientRegistrationRepository;\n", "des": "Classes and interfaces that provide support for ClientRegistration."}
{"index": 1583, "repo": "spring-security-oauth2-client-6.1.2", "code": "package userinfo\n\n// An implementation of an OAuth2UserService that supports standard OAuth 2.0 Provider's.\npublic class DefaultOAuth2UserService extends Object implements OAuth2UserService<OAuth2UserRequest,org.springframework.security.oauth2.core.user.OAuth2User>;\n// An implementation of an ReactiveOAuth2UserService that supports standard OAuth 2.0 Provider's.\npublic class DefaultReactiveOAuth2UserService extends Object implements ReactiveOAuth2UserService<OAuth2UserRequest,org.springframework.security.oauth2.core.user.OAuth2User>;\n// An implementation of an OAuth2UserService that simply delegates to it's internal List of OAuth2UserService(s).\npublic class DelegatingOAuth2UserService<R extends OAuth2UserRequest,U extends org.springframework.security.oauth2.core.user.OAuth2User> extends Object implements OAuth2UserService<R,U>;\n// Represents a request the OAuth2UserService uses when initiating a request to the UserInfo Endpoint.\npublic class OAuth2UserRequest extends Object;\n// A Converter that converts the provided OAuth2UserRequest to a RequestEntity representation of a request for the UserInfo Endpoint.\npublic class OAuth2UserRequestEntityConverter extends Object implements org.springframework.core.convert.converter.Converter<OAuth2UserRequest,org.springframework.http.RequestEntity<?>>;\n// Implementations of this interface are responsible for obtaining the user attributes of the End-User (Resource Owner) from the UserInfo Endpoint using the Access Token granted to the Client and returning an AuthenticatedPrincipal in the form of an OAuth2User.\n@FunctionalInterface public interface OAuth2UserService<R extends OAuth2UserRequest,U extends org.springframework.security.oauth2.core.user.OAuth2User>;\n// Implementations of this interface are responsible for obtaining the user attributes of the End-User (Resource Owner) from the UserInfo Endpoint using the Access Token granted to the Client and returning an AuthenticatedPrincipal in the form of an OAuth2User.\n@FunctionalInterface public interface ReactiveOAuth2UserService<R extends OAuth2UserRequest,U extends org.springframework.security.oauth2.core.user.OAuth2User>;\n", "des": "Classes and interfaces providing support to the client for initiating requests to the OAuth 2.0 Authorization Server's UserInfo Endpoint."}
{"index": 1584, "repo": "spring-security-oauth2-client-6.1.2", "code": "package web\n\n// An implementation of an OAuth2AuthorizedClientRepository that delegates to the provided OAuth2AuthorizedClientService if the current Principal is authenticated, otherwise, to the default (or provided) OAuth2AuthorizedClientRepository if the current request is unauthenticated (or anonymous).\npublic final class AuthenticatedPrincipalOAuth2AuthorizedClientRepository extends Object implements OAuth2AuthorizedClientRepository;\n// Implementations of this interface are responsible for the persistence of OAuth2AuthorizationRequest between requests.\npublic interface AuthorizationRequestRepository<T extends org.springframework.security.oauth2.core.endpoint.OAuth2AuthorizationRequest>;\n// An implementation of an OAuth2AuthorizationRequestResolver that attempts to resolve an OAuth2AuthorizationRequest from the provided HttpServletRequest using the default request URI pattern /oauth2/authorization/{registrationId}.\npublic final class DefaultOAuth2AuthorizationRequestResolver extends Object implements OAuth2AuthorizationRequestResolver;\n// The default implementation of an OAuth2AuthorizedClientManager for use within the context of a HttpServletRequest.\npublic final class DefaultOAuth2AuthorizedClientManager extends Object implements OAuth2AuthorizedClientManager;\n// The default implementation of the contextAttributesMapper.\npublic static class DefaultOAuth2AuthorizedClientManager.DefaultContextAttributesMapper extends Object implements Function<OAuth2AuthorizeRequest,Map<String,Object>>;\n// The default implementation of a ReactiveOAuth2AuthorizedClientManager for use within the context of a ServerWebExchange.\npublic final class DefaultReactiveOAuth2AuthorizedClientManager extends Object implements ReactiveOAuth2AuthorizedClientManager;\n// The default implementation of the contextAttributesMapper.\npublic static class DefaultReactiveOAuth2AuthorizedClientManager.DefaultContextAttributesMapper extends Object implements Function<OAuth2AuthorizeRequest,reactor.core.publisher.Mono<Map<String,Object>>>;\n// An implementation of an AuthorizationRequestRepository that stores OAuth2AuthorizationRequest in the HttpSession.\npublic final class HttpSessionOAuth2AuthorizationRequestRepository extends Object implements AuthorizationRequestRepository<org.springframework.security.oauth2.core.endpoint.OAuth2AuthorizationRequest>;\n// An implementation of an OAuth2AuthorizedClientRepository that stores OAuth2AuthorizedClient's in the HttpSession.\npublic final class HttpSessionOAuth2AuthorizedClientRepository extends Object implements OAuth2AuthorizedClientRepository;\n", "des": "OAuth 2.0 Client Filter's and supporting classes and interfaces."}
{"index": 1585, "repo": "spring-websocket-6.0.11", "code": "package socket\n\n// A message that can be handled or sent on a WebSocket connection.\npublic abstract class AbstractWebSocketMessage<T> extends Object implements WebSocketMessage<T>;\n// A binary WebSocket message.\npublic final class BinaryMessage extends AbstractWebSocketMessage<ByteBuffer>;\n// Represents a WebSocket close status code and reason.\npublic final class CloseStatus extends Object implements Serializable;\n// A WebSocket ping message.\npublic final class PingMessage extends AbstractWebSocketMessage<ByteBuffer>;\n// A WebSocket pong message.\npublic final class PongMessage extends AbstractWebSocketMessage<ByteBuffer>;\n// An interface for WebSocket handlers that support sub-protocols as defined in RFC 6455.\npublic interface SubProtocolCapable;\n// A text WebSocket message.\npublic final class TextMessage extends AbstractWebSocketMessage<String>;\n// Represents a WebSocket extension as defined in the RFC 6455.\npublic class WebSocketExtension extends Object;\n// A handler for WebSocket messages and lifecycle events.\npublic interface WebSocketHandler;\n// An HttpHeaders variant that adds support for the HTTP headers defined by the WebSocket specification RFC 6455.\npublic class WebSocketHttpHeaders extends org.springframework.http.HttpHeaders;\n// A message that can be handled or sent on a WebSocket connection.\npublic interface WebSocketMessage<T>;\n// A WebSocket session abstraction.\npublic interface WebSocketSession extends Closeable;\n", "des": "Common abstractions and Spring configuration support for WebSocket applications."}
{"index": 1586, "repo": "spring-websocket-6.0.11", "code": "package adapter\n\n// An abstract base class for implementations of WebSocketSession.\npublic abstract class AbstractWebSocketSession<T> extends Object implements NativeWebSocketSession;\n// A WebSocketSession that exposes the underlying, native WebSocketSession through a getter.\npublic interface NativeWebSocketSession extends WebSocketSession;\n", "des": "Classes adapting Spring's WebSocket API to and from WebSocket providers."}
{"index": 1587, "repo": "spring-websocket-6.0.11", "code": "package jetty\n\n// Adapts WebSocketHandler to the Jetty 9 WebSocket API.\n@WebSocket public class JettyWebSocketHandlerAdapter extends Object;\n// A WebSocketSession for use with the Jetty 9.4 WebSocket API.\npublic class JettyWebSocketSession extends AbstractWebSocketSession<org.eclipse.jetty.websocket.api.Session>;\n// Adapter class to convert a WebSocketExtension to a Jetty ExtensionConfig.\npublic class WebSocketToJettyExtensionConfigAdapter extends org.eclipse.jetty.websocket.common.JettyExtensionConfig;\n", "des": "Adapter classes for the Jetty WebSocket API."}
{"index": 1588, "repo": "spring-websocket-6.0.11", "code": "package standard\n\n// Base class that can be used to implement a standard Encoder and/or Decoder.\npublic abstract class ConvertingEncoderDecoderSupport<T,M> extends Object;\n// A binary jakarta.websocket.Encoder that delegates to Spring's conversion service.\npublic abstract static class ConvertingEncoderDecoderSupport.BinaryDecoder<T> extends ConvertingEncoderDecoderSupport<T,ByteBuffer> implements Decoder.Binary<T>;\n// A binary jakarta.websocket.Encoder that delegates to Spring's conversion service.\npublic abstract static class ConvertingEncoderDecoderSupport.BinaryEncoder<T> extends ConvertingEncoderDecoderSupport<T,ByteBuffer> implements Encoder.Binary<T>;\n// A Text jakarta.websocket.Encoder that delegates to Spring's conversion service.\npublic abstract static class ConvertingEncoderDecoderSupport.TextDecoder<T> extends ConvertingEncoderDecoderSupport<T,String> implements Decoder.Text<T>;\n// A text jakarta.websocket.Encoder that delegates to Spring's conversion service.\npublic abstract static class ConvertingEncoderDecoderSupport.TextEncoder<T> extends ConvertingEncoderDecoderSupport<T,String> implements Encoder.Text<T>;\n// A subclass of WebSocketExtension that can be constructed from a Extension.\npublic class StandardToWebSocketExtensionAdapter extends WebSocketExtension;\n// Adapts a WebSocketHandler to the standard WebSocket for Java API.\npublic class StandardWebSocketHandlerAdapter extends Endpoint;\n// A WebSocketSession for use with the standard WebSocket for Java API.\npublic class StandardWebSocketSession extends AbstractWebSocketSession<Session>;\n// Adapt an instance of WebSocketExtension to the Extension interface.\npublic class WebSocketToStandardExtensionAdapter extends Object implements Extension;\n", "des": "Adapter classes for the standard Jakarta WebSocket API."}
{"index": 1589, "repo": "spring-websocket-6.0.11", "code": "package client\n\n// Abstract base class for WebSocketClient implementations.\npublic abstract class AbstractWebSocketClient extends Object implements WebSocketClient;\n// Base class for a connection manager that automates the process of connecting to a WebSocket server with the Spring ApplicationContext lifecycle.\npublic abstract class ConnectionManagerSupport extends Object implements org.springframework.context.SmartLifecycle;\n// Contract for initiating a WebSocket request.\npublic interface WebSocketClient;\n// WebSocket connection manager that connects to the server via WebSocketClient and handles the session with a WebSocketHandler.\npublic class WebSocketConnectionManager extends ConnectionManagerSupport;\n", "des": "Client-side abstractions for WebSocket applications."}
{"index": 1590, "repo": "spring-websocket-6.0.11", "code": "package jetty\n\n// \n@Deprecated(since=\"6.0.3\", forRemoval=true) public class JettyWebSocketClient extends AbstractWebSocketClient implements org.springframework.context.Lifecycle;\n", "des": "Client-side support for the Jetty WebSocket API."}
{"index": 1591, "repo": "spring-websocket-6.0.11", "code": "package standard\n\n// WebSocket connection manager that connects to the server via WebSocketContainer and handles the session with an @ClientEndpoint endpoint.\npublic class AnnotatedEndpointConnectionManager extends ConnectionManagerSupport implements org.springframework.beans.factory.BeanFactoryAware;\n// WebSocket connection manager that connects to the server via WebSocketContainer and handles the session with an Endpoint.\npublic class EndpointConnectionManager extends ConnectionManagerSupport implements org.springframework.beans.factory.BeanFactoryAware;\n// A WebSocketClient based on the standard Jakarta WebSocket API.\npublic class StandardWebSocketClient extends AbstractWebSocketClient;\n// A FactoryBean for creating and configuring a WebSocketContainer through Spring XML configuration.\npublic class WebSocketContainerFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<WebSocketContainer>;\n", "des": "Client-side classes for use with standard Jakarta WebSocket endpoints."}
{"index": 1592, "repo": "spring-websocket-6.0.11", "code": "package config\n\n// A central class for aggregating information about internal state and counters from key infrastructure components of the setup that comes with @EnableWebSocketMessageBroker for Java config and <websocket:message-broker> for XML.\npublic class WebSocketMessageBrokerStats extends Object;\n// NamespaceHandler for Spring WebSocket configuration namespace.\npublic class WebSocketNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Configuration support for WebSocket request handling."}
{"index": 1593, "repo": "spring-websocket-6.0.11", "code": "package annotation\n\n// Base class for WebSocketHandlerRegistrations that gathers all the configuration options but allows subclasses to put together the actual HTTP request mappings.\npublic abstract class AbstractWebSocketHandlerRegistration<M> extends Object implements WebSocketHandlerRegistration;\n// A variation of WebSocketConfigurationSupport that detects implementations of WebSocketConfigurer in Spring configuration and invokes them in order to configure WebSocket request handling.\n@Configuration(proxyBeanMethods=false) public class DelegatingWebSocketConfiguration extends WebSocketConfigurationSupport;\n// A WebSocketMessageBrokerConfigurationSupport extension that detects beans of type WebSocketMessageBrokerConfigurer and delegates to all of them allowing callback style customization of the configuration provided in WebSocketMessageBrokerConfigurationSupport.\n@Configuration(proxyBeanMethods=false) public class DelegatingWebSocketMessageBrokerConfiguration extends WebSocketMessageBrokerConfigurationSupport;\n// Add this annotation to an @Configuration class to configure processing WebSocket requests.\n@Retention(RUNTIME) @Target(TYPE) @Documented @Import(DelegatingWebSocketConfiguration.class) public @interface EnableWebSocket;\n// Add this annotation to an @Configuration class to enable broker-backed messaging over WebSocket using a higher-level messaging sub-protocol.\n@Retention(RUNTIME) @Target(TYPE) @Documented @Import(DelegatingWebSocketMessageBrokerConfiguration.class) public @interface EnableWebSocketMessageBroker;\n// A helper class for configuring WebSocketHandler request handling including SockJS fallback options.\npublic class ServletWebSocketHandlerRegistration extends AbstractWebSocketHandlerRegistration<org.springframework.util.MultiValueMap<org.springframework.web.HttpRequestHandler,String>>;\n// WebSocketHandlerRegistry with Spring MVC handler mappings for the handshake requests.\npublic class ServletWebSocketHandlerRegistry extends Object implements WebSocketHandlerRegistry;\n// A helper class for configuring SockJS fallback options for use with an EnableWebSocket and WebSocketConfigurer setup.\npublic class SockJsServiceRegistration extends Object;\n// A contract for registering STOMP over WebSocket endpoints.\npublic interface StompEndpointRegistry;\n// A contract for configuring a STOMP over WebSocket endpoint.\npublic interface StompWebSocketEndpointRegistration;\n// A registry for STOMP over WebSocket endpoints that maps the endpoints with a HandlerMapping for use in Spring MVC.\npublic class WebMvcStompEndpointRegistry extends Object implements StompEndpointRegistry;\n", "des": "Support for annotation-based WebSocket setup in configuration classes."}
{"index": 1594, "repo": "spring-websocket-6.0.11", "code": "package handler\n\n// A convenient base class for WebSocketHandler implementation with empty methods.\npublic abstract class AbstractWebSocketHandler extends Object implements WebSocketHandler;\n// Instantiates a target handler through a Spring BeanFactory and also provides an equivalent destroy method.\npublic class BeanCreatingHandlerProvider<T> extends Object implements org.springframework.beans.factory.BeanFactoryAware;\n// A convenient base class for WebSocketHandler implementations that process binary messages only.\npublic class BinaryWebSocketHandler extends AbstractWebSocketHandler;\n// Wrap a WebSocketSession to guarantee only one thread can send messages at a time.\npublic class ConcurrentWebSocketSessionDecorator extends WebSocketSessionDecorator;\n// Enum for options of what to do when the buffer fills up.\npublic static enum ConcurrentWebSocketSessionDecorator.OverflowStrategy extends Enum<ConcurrentWebSocketSessionDecorator.OverflowStrategy>;\n// An exception handling WebSocketHandlerDecorator.\npublic class ExceptionWebSocketHandlerDecorator extends WebSocketHandlerDecorator;\n// A WebSocketHandlerDecorator that adds logging to WebSocket lifecycle events.\npublic class LoggingWebSocketHandlerDecorator extends WebSocketHandlerDecorator;\n// A WebSocketHandler that initializes and destroys a WebSocketHandler instance for each WebSocket connection and delegates all other methods to it.\npublic class PerConnectionWebSocketHandler extends Object implements WebSocketHandler, org.springframework.beans.factory.BeanFactoryAware;\n// Raised when a WebSocket session has exceeded limits it has been configured for, e.g.\npublic class SessionLimitExceededException extends RuntimeException;\n// A convenient base class for WebSocketHandler implementations that process text messages only.\npublic class TextWebSocketHandler extends AbstractWebSocketHandler;\n// Wraps another WebSocketHandler instance and delegates to it.\npublic class WebSocketHandlerDecorator extends Object implements WebSocketHandler;\n// A factory for applying decorators to a WebSocketHandler.\npublic interface WebSocketHandlerDecoratorFactory;\n// Wraps another WebSocketSession instance and delegates to it.\npublic class WebSocketSessionDecorator extends Object implements WebSocketSession;\n", "des": "Convenient WebSocketHandler implementations and decorators."}
{"index": 1595, "repo": "spring-websocket-6.0.11", "code": "package messaging\n\n// A base class for events for a message received from a WebSocket client and parsed into a higher-level sub-protocol (e.g.\npublic abstract class AbstractSubProtocolEvent extends org.springframework.context.ApplicationEvent;\n// A default implementation of SimpUserRegistry that relies on AbstractSubProtocolEvent application context events to keep track of connected users and their subscriptions.\npublic class DefaultSimpUserRegistry extends Object implements org.springframework.messaging.simp.user.SimpUserRegistry, org.springframework.context.event.SmartApplicationListener;\n// A connected event represents the server response to a client's connect request.\npublic class SessionConnectedEvent extends AbstractSubProtocolEvent;\n// Event raised when a new WebSocket client using a Simple Messaging Protocol (e.g.\npublic class SessionConnectEvent extends AbstractSubProtocolEvent;\n// Event raised when the session of a WebSocket client using a Simple Messaging Protocol (e.g.\npublic class SessionDisconnectEvent extends AbstractSubProtocolEvent;\n// Event raised when a new WebSocket client using a Simple Messaging Protocol (e.g.\npublic class SessionSubscribeEvent extends AbstractSubProtocolEvent;\n// Event raised when a new WebSocket client using a Simple Messaging Protocol (e.g.\npublic class SessionUnsubscribeEvent extends AbstractSubProtocolEvent;\n// A SubProtocolErrorHandler for use with STOMP.\npublic class StompSubProtocolErrorHandler extends Object implements SubProtocolErrorHandler<byte[]>;\n// A SubProtocolHandler for STOMP that supports versions 1.0, 1.1, and 1.2 of the STOMP specification.\npublic class StompSubProtocolHandler extends Object implements SubProtocolHandler, org.springframework.context.ApplicationEventPublisherAware;\n// Contract for access to session counters.\npublic static interface StompSubProtocolHandler.Stats;\n// A contract for handling sub-protocol errors sent to clients.\npublic interface SubProtocolErrorHandler<P>;\n// A contract for handling WebSocket messages as part of a higher level protocol, referred to as \"sub-protocol\" in the WebSocket RFC specification.\npublic interface SubProtocolHandler;\n", "des": "WebSocket integration for Spring's messaging module."}
{"index": 1596, "repo": "spring-websocket-6.0.11", "code": "package server\n\n// Thrown when handshake processing failed to complete due to an internal, unrecoverable error.\npublic class HandshakeFailureException extends org.springframework.core.NestedRuntimeException;\n// Contract for processing a WebSocket handshake request.\npublic interface HandshakeHandler;\n// Interceptor for WebSocket handshake requests.\npublic interface HandshakeInterceptor;\n// A server-specific strategy for performing the actual upgrade to a WebSocket exchange.\npublic interface RequestUpgradeStrategy;\n", "des": "Server-side abstractions for WebSocket interactions."}
{"index": 1597, "repo": "spring-websocket-6.0.11", "code": "package jetty\n\n// A RequestUpgradeStrategy for Jetty 11.\npublic class JettyRequestUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n", "des": "Server-side support for the Jetty 9+ WebSocket API."}
{"index": 1598, "repo": "spring-websocket-6.0.11", "code": "package standard\n\n// A base class for RequestUpgradeStrategy implementations that build on the standard WebSocket API for Java (JSR-356).\npublic abstract class AbstractStandardUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n// A base class for RequestUpgradeStrategy implementations on top of JSR-356 based servers which include Tyrus as their WebSocket engine.\npublic abstract class AbstractTyrusRequestUpgradeStrategy extends AbstractStandardUpgradeStrategy;\n// A WebSocket RequestUpgradeStrategy for Oracle's GlassFish 4.1 and higher.\npublic class GlassFishRequestUpgradeStrategy extends AbstractTyrusRequestUpgradeStrategy;\n// Detects beans of type ServerEndpointConfig and registers with the standard Jakarta WebSocket runtime.\npublic class ServerEndpointExporter extends org.springframework.web.context.support.WebApplicationObjectSupport implements org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.SmartInitializingSingleton;\n// An implementation of ServerEndpointConfig for use in Spring-based applications.\npublic class ServerEndpointRegistration extends ServerEndpointConfig.Configurator implements ServerEndpointConfig, org.springframework.beans.factory.BeanFactoryAware;\n// A FactoryBean for configuring ServerContainer.\npublic class ServletServerContainerFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<WebSocketContainer>, org.springframework.web.context.ServletContextAware, org.springframework.beans.factory.InitializingBean;\n// A ServerEndpointConfig.Configurator for initializing ServerEndpoint-annotated classes through Spring.\npublic class SpringConfigurator extends ServerEndpointConfig.Configurator;\n// A WebSocket RequestUpgradeStrategy for the Jakarta WebSocket API 2.1+.\npublic class StandardWebSocketUpgradeStrategy extends AbstractStandardUpgradeStrategy;\n// A WebSocket RequestUpgradeStrategy for Apache Tomcat.\npublic class TomcatRequestUpgradeStrategy extends StandardWebSocketUpgradeStrategy;\n// A WebSocket RequestUpgradeStrategy for WildFly and its underlying Undertow web server.\npublic class UndertowRequestUpgradeStrategy extends StandardWebSocketUpgradeStrategy;\n// A WebSocket RequestUpgradeStrategy for Oracle's WebLogic.\npublic class WebLogicRequestUpgradeStrategy extends AbstractTyrusRequestUpgradeStrategy;\n// WebSphere support for upgrading an HttpServletRequest during a WebSocket handshake.\npublic class WebSphereRequestUpgradeStrategy extends StandardWebSocketUpgradeStrategy;\n", "des": "Server-side classes for use with standard JSR-356 WebSocket endpoints."}
{"index": 1599, "repo": "spring-websocket-6.0.11", "code": "package support\n\n// A base class for HandshakeHandler implementations, independent of the Servlet API.\npublic abstract class AbstractHandshakeHandler extends Object implements HandshakeHandler, org.springframework.context.Lifecycle;\n// A default HandshakeHandler implementation, extending AbstractHandshakeHandler with Servlet-specific initialization support.\npublic class DefaultHandshakeHandler extends AbstractHandshakeHandler implements org.springframework.web.context.ServletContextAware;\n// A helper class that assists with invoking a list of handshake interceptors.\npublic class HandshakeInterceptorChain extends Object;\n// An interceptor to copy information from the HTTP session to the \"handshake attributes\" map to be made available via WebSocketSession.getAttributes().\npublic class HttpSessionHandshakeInterceptor extends Object implements HandshakeInterceptor;\n// An interceptor to check request Origin header value against a collection of allowed origins.\npublic class OriginHandshakeInterceptor extends Object implements HandshakeInterceptor;\n// Extension of SimpleUrlHandlerMapping with support for more precise mapping of WebSocket handshake requests to handlers of type WebSocketHttpRequestHandler.\npublic class WebSocketHandlerMapping extends org.springframework.web.servlet.handler.SimpleUrlHandlerMapping implements org.springframework.context.SmartLifecycle;\n// A HttpRequestHandler for processing WebSocket handshake requests.\npublic class WebSocketHttpRequestHandler extends Object implements org.springframework.web.HttpRequestHandler, org.springframework.context.Lifecycle, org.springframework.web.context.ServletContextAware;\n", "des": "Server-side support classes including container-specific strategies for upgrading a request."}
{"index": 1600, "repo": "spring-websocket-6.0.11", "code": "package sockjs\n\n// Base class for exceptions raised while processing SockJS HTTP requests.\npublic class SockJsException extends org.springframework.core.NestedRuntimeException;\n// An exception thrown when a message frame was successfully received over an HTTP POST and parsed but one or more of the messages it contained could not be delivered to the WebSocketHandler either because the handler failed or because the connection got closed.\npublic class SockJsMessageDeliveryException extends SockJsException;\n// The main entry point for processing HTTP requests from SockJS clients.\npublic interface SockJsService;\n// Indicates a serious failure that occurred in the SockJS implementation as opposed to in user code (e.g.\npublic class SockJsTransportFailureException extends SockJsException;\n", "des": "Top-level SockJS types."}
{"index": 1601, "repo": "spring-websocket-6.0.11", "code": "package client\n\n// Base class for SockJS client implementations of WebSocketSession.\npublic abstract class AbstractClientSockJsSession extends Object implements WebSocketSession;\n// Abstract base class for XHR transport implementations to extend.\npublic abstract class AbstractXhrTransport extends Object implements XhrTransport;\n// A component that can execute the SockJS \"Info\" request that needs to be performed before the SockJS session starts in order to check server endpoint capabilities such as whether the endpoint permits use of WebSocket.\npublic interface InfoReceiver;\n// An XHR transport based on Jetty's HttpClient.\npublic class JettyXhrTransport extends AbstractXhrTransport implements org.springframework.context.Lifecycle;\n// An XhrTransport implementation that uses a RestTemplate.\npublic class RestTemplateXhrTransport extends AbstractXhrTransport;\n// A SockJS implementation of WebSocketClient with fallback alternatives that simulate a WebSocket interaction through plain HTTP streaming and long polling techniques.\npublic class SockJsClient extends Object implements WebSocketClient, org.springframework.context.Lifecycle;\n// Container for the base URL of a SockJS endpoint with additional helper methods to derive related SockJS URLs: specifically, the info and transport URLs.\npublic class SockJsUrlInfo extends Object;\n// A client-side implementation for a SockJS transport.\npublic interface Transport;\n// Exposes information, typically to Transport and session implementations, about a request to connect to a SockJS server endpoint over a given transport.\npublic interface TransportRequest;\n// An XHR transport based on Undertow's UndertowClient.\npublic class UndertowXhrTransport extends AbstractXhrTransport;\n// An extension of AbstractClientSockJsSession wrapping and delegating to an actual WebSocket session.\npublic class WebSocketClientSockJsSession extends AbstractClientSockJsSession implements NativeWebSocketSession;\n// A SockJS Transport that uses a WebSocketClient.\npublic class WebSocketTransport extends Object implements Transport, org.springframework.context.Lifecycle;\n// An extension of AbstractClientSockJsSession for use with HTTP transports simulating a WebSocket session.\npublic class XhrClientSockJsSession extends AbstractClientSockJsSession;\n// A SockJS Transport that uses HTTP requests to simulate a WebSocket interaction.\npublic interface XhrTransport extends Transport, InfoReceiver;\n", "des": "SockJS client implementation of WebSocketClient."}
{"index": 1602, "repo": "spring-websocket-6.0.11", "code": "package frame\n\n// A base class for SockJS message codec that provides an implementation of AbstractSockJsMessageCodec.encode(String[]).\npublic abstract class AbstractSockJsMessageCodec extends Object implements SockJsMessageCodec;\n// A default implementation of SockJsFrameFormat that relies on String.format(String, Object...)..\npublic class DefaultSockJsFrameFormat extends Object implements SockJsFrameFormat;\n// A Jackson 2.x codec for encoding and decoding SockJS messages.\npublic class Jackson2SockJsMessageCodec extends AbstractSockJsMessageCodec;\n// Represents a SockJS frame.\npublic class SockJsFrame extends Object;\n// Applies a transport-specific format to the content of a SockJS frame resulting in a content that can be written out.\npublic interface SockJsFrameFormat;\n// SockJS frame types.\npublic enum SockJsFrameType extends Enum<SockJsFrameType>;\n// Encode and decode messages to and from a SockJS message frame, essentially an array of JSON-encoded messages.\npublic interface SockJsMessageCodec;\n", "des": "Support classes for creating SockJS frames including the encoding and decoding of SockJS message frames."}
{"index": 1603, "repo": "spring-websocket-6.0.11", "code": "package support\n\n// An abstract base class for SockJsService implementations that provides SockJS path resolution and handling of static SockJS requests (e.g.\npublic abstract class AbstractSockJsService extends Object implements SockJsService, org.springframework.web.cors.CorsConfigurationSource;\n// An HttpRequestHandler that allows mapping a SockJsService to requests in a Servlet container.\npublic class SockJsHttpRequestHandler extends Object implements org.springframework.web.HttpRequestHandler, org.springframework.web.cors.CorsConfigurationSource, org.springframework.context.Lifecycle, org.springframework.web.context.ServletContextAware;\n", "des": "Support classes for SockJS including an AbstractSockJsService implementation."}
{"index": 1604, "repo": "spring-websocket-6.0.11", "code": "package transport\n\n// Provides transport handling code with access to the SockJsService configuration options they need to have access to.\npublic interface SockJsServiceConfig;\n// SockJS extension of Spring's standard WebSocketSession.\npublic interface SockJsSession extends WebSocketSession;\n// A factory for creating a SockJS session.\npublic interface SockJsSessionFactory;\n// Handle a SockJS session URL, i.e.\npublic interface TransportHandler;\n// A basic implementation of SockJsService with support for SPI-based transport handling and session management.\npublic class TransportHandlingSockJsService extends AbstractSockJsService implements SockJsServiceConfig, org.springframework.context.Lifecycle;\n// SockJS transport types.\npublic enum TransportType extends Enum<TransportType>;\n", "des": "Server-side support for SockJS transports including TransportHandler implementations for processing incoming requests, their session counterparts for sending messages over the various transports, and DefaultSockJsService."}
{"index": 1605, "repo": "spring-websocket-6.0.11", "code": "package handler\n\n// Base class for HTTP transport handlers that receive messages via HTTP POST.\npublic abstract class AbstractHttpReceivingTransportHandler extends AbstractTransportHandler;\n// Base class for HTTP transport handlers that push messages to connected clients.\npublic abstract class AbstractHttpSendingTransportHandler extends AbstractTransportHandler implements SockJsSessionFactory;\n// Common base class for TransportHandler implementations.\npublic abstract class AbstractTransportHandler extends Object implements TransportHandler;\n// A default implementation of SockJsService with all default TransportHandler implementations pre-registered.\npublic class DefaultSockJsService extends TransportHandlingSockJsService implements org.springframework.web.context.ServletContextAware;\n// A TransportHandler for sending messages via Server-Sent Events: https://dev.w3.org/html5/eventsource/.\npublic class EventSourceTransportHandler extends AbstractHttpSendingTransportHandler;\n// An HTTP TransportHandler that uses a famous browser document.domain technique.\npublic class HtmlFileTransportHandler extends AbstractHttpSendingTransportHandler;\n// An implementation of WebSocketHandler that adds SockJS messages frames, sends SockJS heartbeat messages, and delegates lifecycle events and messages to a target WebSocketHandler.\npublic class SockJsWebSocketHandler extends TextWebSocketHandler implements SubProtocolCapable;\n// WebSocket-based TransportHandler.\npublic class WebSocketTransportHandler extends AbstractTransportHandler implements SockJsSessionFactory, HandshakeHandler, org.springframework.context.Lifecycle, org.springframework.web.context.ServletContextAware;\n// A TransportHandler based on XHR (long) polling.\npublic class XhrPollingTransportHandler extends AbstractHttpSendingTransportHandler;\n// A TransportHandler that receives messages over HTTP.\npublic class XhrReceivingTransportHandler extends AbstractHttpReceivingTransportHandler;\n// A TransportHandler that sends messages over an HTTP streaming request.\npublic class XhrStreamingTransportHandler extends AbstractHttpSendingTransportHandler;\n", "des": "TransportHandler implementation classes as well as a concrete SockJsService."}
{"index": 1606, "repo": "spring-websocket-6.0.11", "code": "package session\n\n// An abstract base class for use with HTTP transport SockJS sessions.\npublic abstract class AbstractHttpSockJsSession extends AbstractSockJsSession;\n// An abstract base class for SockJS sessions implementing SockJsSession.\npublic abstract class AbstractSockJsSession extends Object implements SockJsSession;\n// A SockJS session for use with polling HTTP transports.\npublic class PollingSockJsSession extends AbstractHttpSockJsSession;\n// A SockJS session for use with streaming HTTP transports.\npublic abstract class StreamingSockJsSession extends AbstractHttpSockJsSession;\n// A SockJS session for use with the WebSocket transport.\npublic class WebSocketServerSockJsSession extends AbstractSockJsSession implements NativeWebSocketSession;\n", "des": "SockJS specific implementations of WebSocketSession."}
{"index": 1607, "repo": "spring-data-neo4j-7.1.2", "code": "package config\n\n// Base class for imperative SDN configuration using JavaConfig.\n@Configuration @API(status=STABLE, since=\"6.0\") public abstract class AbstractNeo4jConfig extends Object;\n// Base class for reactive SDN configuration using JavaConfig.\n@Configuration @API(status=STABLE, since=\"6.0\") public abstract class AbstractReactiveNeo4jConfig extends Object;\n// An internally used CDI Qualifier to mark all beans produced by our configuration support as built in.\n@API(status=STABLE, since=\"6.0\") @Documented @Retention(RUNTIME) @Qualifier public @interface Builtin;\n// Annotation to enable auditing for SDN entities via annotation configuration.\n@Inherited @Documented @Target(TYPE) @Retention(RUNTIME) @Import(org.springframework.data.neo4j.config.Neo4jAuditingRegistrar.class) public @interface EnableNeo4jAuditing;\n// Annotation to enable auditing for SDN entities using reactive infrastructure via annotation configuration.\n@Inherited @Documented @Target(TYPE) @Retention(RUNTIME) @Import(org.springframework.data.neo4j.config.ReactiveNeo4jAuditingRegistrar.class) public @interface EnableReactiveNeo4jAuditing;\n// This CDI extension enables Spring Data Neo4j on a CDI 2.0 compatible CDI container.\n@API(status=STABLE, since=\"6.0\") public final class Neo4jCdiExtension extends CdiRepositoryExtensionSupport;\n// A utility class providing a way to discover an initial entity set for a Neo4jMappingContext.\n@API(status=STABLE, since=\"6.0.2\") public final class Neo4jEntityScanner extends Object;\n", "des": "This package contains configuration related support classes that can be used for application specific, annotated configuration classes."}
{"index": 1608, "repo": "spring-data-neo4j-7.1.2", "code": "package core\n\n// A value holder indicating a database selection based on an optional name.\n@API(status=STABLE, since=\"6.0\") public final class DatabaseSelection extends Object;\n// A provider interface that knows in which database repositories or either the reactive or imperative template should work.\n@API(status=STABLE, since=\"6.0\") @FunctionalInterface public interface DatabaseSelectionProvider;\n// FluentFindOperation allows creation and execution of Neo4j find operations in a fluent API style.\n@API(status=STABLE, since=\"6.1\") public interface FluentFindOperation;\n// Entry point for creating executable find operations.\npublic static interface FluentFindOperation.ExecutableFind<T> extends FluentFindOperation.FindWithProjection<T>;\n// Result type override (Optional).\npublic static interface FluentFindOperation.FindWithProjection<T> extends FluentFindOperation.FindWithQuery<T>;\n// Terminating operations invoking the actual query execution.\npublic static interface FluentFindOperation.FindWithQuery<T> extends FluentFindOperation.TerminatingFindWithoutQuery<T>;\n// Triggers find execution by calling one of the terminating methods.\npublic static interface FluentFindOperation.TerminatingFind<T> extends FluentFindOperation.TerminatingFindWithoutQuery<T>;\n// Trigger find execution by calling one of the terminating methods from a state where no query is yet defined.\npublic static interface FluentFindOperation.TerminatingFindWithoutQuery<T>;\n// An additional interface accompanying the Neo4jOperations and adding a couple of fluent operations, especially around finding and projecting things.\n@API(status=STABLE, since=\"6.1\") public interface FluentNeo4jOperations extends FluentFindOperation, FluentSaveOperation;\n// FluentSaveOperation allows creation and execution of Neo4j save operations in a fluent API style.\n@API(status=STABLE, since=\"6.1.3\") public interface FluentSaveOperation;\n// After the domain type has been specified, related projections or instances of the domain type can be saved.\npublic static interface FluentSaveOperation.ExecutableSave<DT>;\n// Definition of a modern Neo4j client.\n@API(status=STABLE, since=\"6.0\") public interface Neo4jClient;\n", "des": "This package contains the core infrastructure for creating an imperative or reactive client that can execute queries."}
{"index": 1609, "repo": "spring-data-neo4j-7.1.2", "code": "package convert\n\n// This annotation can be used to define either custom conversions for single attributes by specifying a custom Neo4jPersistentPropertyConverter and if needed, a custom factory to create that converter or the annotation can be used to build custom meta-annotated annotations like @org.springframework.data.neo4j.core.support.DateLong.\n@Retention(RUNTIME) @Target({ANNOTATION_TYPE,FIELD}) @Inherited @Documented @API(status=STABLE, since=\"6.0\") public @interface ConvertWith;\n// Indicates an unset converter.\npublic static final class ConvertWith.UnsetConverter extends Object implements Neo4jPersistentPropertyConverter<Object>;\n// \n@API(status=STABLE, since=\"6.0\") public final class Neo4jConversions extends CustomConversions;\n// This service orchestrates a standard Spring conversion service with Neo4jConversions registered.\n@API(status=STABLE, since=\"6.0\") public interface Neo4jConversionService;\n// This interface represents a pair of methods capable of converting values of type T to and from values.\n@API(status=STABLE, since=\"6.0\") public interface Neo4jPersistentPropertyConverter<T>;\n// This interface needs to be implemented to provide custom configuration for a Neo4jPersistentPropertyConverter.\npublic interface Neo4jPersistentPropertyConverterFactory;\n// You need to provide an implementation of this interface in case you want to store a property of an entity as separate properties on a node.\n@API(status=STABLE, since=\"6.0\") public interface Neo4jPersistentPropertyToMapConverter<K,P>;\n// A list of Neo4j simple types: All attributes that can be mapped to a property.\n@API(status=STABLE, since=\"6.0\") public final class Neo4jSimpleTypes extends Object;\n", "des": "Provides a set of simples types that SDN supports."}
{"index": 1610, "repo": "spring-data-neo4j-7.1.2", "code": "package mapping\n\n// Warning Internal API, might change without further notice, even in patch releases.\n@API(status=INTERNAL, since=\"6.3\") public final class AssociationHandlerSupport extends Object;\n// A pool of constants used in our Cypher generation.\n@API(status=EXPERIMENTAL, since=\"6.0\") public final class Constants extends Object;\n// The CreateRelationshipStatementHolder holds the Cypher Statement to create a relationship as well as the optional properties that describe the relationship in case of more than a simple relationship.\n@API(status=INTERNAL, since=\"6.0\") public final class CreateRelationshipStatementHolder extends Object;\n// A generator based on the schema defined by node and relationship descriptions.\n@API(status=INTERNAL, since=\"6.0\") public enum CypherGenerator extends Enum<CypherGenerator>;\n// Converter to instantiate DTOs from fully equipped domain objects.\n@API(status=INTERNAL, since=\"6.1.2\") public final class DtoInstantiatingConverter extends Object implements Converter<EntityInstanceWithSource,Object>;\n// Converter to instantiate entity objects from DTOs\n@API(status=INTERNAL, since=\"6.1.2\") public final class EntityFromDtoInstantiatingConverter<T> extends Object implements Converter<Object,T>;\n// Used to keep the raw result around in case of a DTO based projection so that missing properties can be filled later on.\n@API(status=INTERNAL, since=\"6.1.2\") public final class EntityInstanceWithSource extends Object;\n// Provides minimal information how to map class attributes to the properties of a node or a relationship.\n@API(status=STABLE, since=\"6.0\") public interface GraphPropertyDescription;\n// Description how to generate Ids for entities.\n@API(status=INTERNAL, since=\"6.0\") public final class IdDescription extends Object;\n// This class is not part of any public API and will be changed without further notice as needed.\n@API(status=INTERNAL) public final class IdentitySupport extends Object;\n// \n@API(status=INTERNAL, since=\"6.0\") public final class MappingSupport extends Object;\n", "des": "The main mapping framework."}
{"index": 1611, "repo": "spring-data-neo4j-7.1.2", "code": "package callback\n\n// A callback that can be used to modify an instance of a Neo4jPersistentEntity after it has been converted: That is, when a Neo4j record has been fully processed and the entity and all its associations have been processed.\n@FunctionalInterface @API(status=STABLE, since=\"6.3.0\") public interface AfterConvertCallback<T> extends EntityCallback<T>;\n// EntityCallback to populate auditing related fields on an entity about to be bound to a record.\n@API(status=STABLE, since=\"6.0.2\") public final class AuditingBeforeBindCallback extends Object implements BeforeBindCallback<Object>, Ordered;\n// Entity callback triggered before an Entity is bound to a record (represented by a java.util.Map<String, Object>).\n@FunctionalInterface @API(status=STABLE, since=\"6.0.2\") public interface BeforeBindCallback<T> extends EntityCallback<T>;\n// Utility class that orchestrates EntityCallbacks.\n@API(status=INTERNAL, since=\"6.0.2\") public final class EventSupport extends Object;\n// Reactive EntityCallback to populate auditing related fields on an entity about to be bound to a record.\n@API(status=STABLE, since=\"6.0.2\") public final class ReactiveAuditingBeforeBindCallback extends Object implements ReactiveBeforeBindCallback<Object>, Ordered;\n// Entity callback triggered before an Entity is bound to a record (represented by a java.util.Map<String, Object>).\n@FunctionalInterface @API(status=STABLE, since=\"6.0.2\") public interface ReactiveBeforeBindCallback<T> extends EntityCallback<T>;\n// Utility class that orchestrates EntityCallbacks.\n@API(status=INTERNAL, since=\"6.0.2\") public final class ReactiveEventSupport extends Object;\n", "des": "This package contains the callback API."}
{"index": 1612, "repo": "spring-data-neo4j-7.1.2", "code": "package schema\n\n// This annotation indicates a persistent property that is composed of multiple properties on a node or relationship.\n@Retention(RUNTIME) @Target(FIELD) @Inherited @ConvertWith(converterFactory=org.springframework.data.neo4j.core.schema.CompositePropertyConverterFactory.class) @API(status=STABLE, since=\"6.0\") public @interface CompositeProperty;\n// The default implementation, passing map properties through as they are on the way to the graph and possibly applying a post processor on the way out of the graph.\npublic static final class CompositeProperty.DefaultToMapConverter<K> extends Object implements Neo4jPersistentPropertyToMapConverter<K,Map<K,Object>>;\n// The default operation for transforming the keys.\npublic static final class CompositeProperty.NoopTransformation extends Object implements BiFunction<CompositeProperty.Phase,String,String>;\n// Phase of the mapping currently taking place.\npublic static enum CompositeProperty.Phase extends Enum<CompositeProperty.Phase>;\n// This annotation can be used on a field of type Collection<String>.\n@Retention(RUNTIME) @Target(FIELD) @Documented @API(status=STABLE, since=\"6.0\") public @interface DynamicLabels;\n// Indicates a generated id.\n@Retention(RUNTIME) @Target({FIELD,ANNOTATION_TYPE}) @Documented @Inherited @API(status=STABLE, since=\"6.0\") public @interface GeneratedValue;\n// This IdGenerator does nothing.\npublic static final class GeneratedValue.InternalIdGenerator extends Object implements IdGenerator<Void>;\n// This generator is automatically applied when a field of type UUID is annotated with @Id and @GeneratedValue.\npublic static final class GeneratedValue.UUIDGenerator extends Object implements IdGenerator<UUID>;\n// This annotation is included here for completeness.\n@Retention(RUNTIME) @Target({FIELD,ANNOTATION_TYPE}) @Documented @Inherited @API(status=STABLE, since=\"6.0\") public @interface Id;\n// Interface for generating ids for entities.\n@FunctionalInterface @API(status=STABLE, since=\"6.0\") public interface IdGenerator<T>;\n", "des": "This package contains the schema that is defined by a set of classes, representing nodes and relationships and their properties."}
{"index": 1613, "repo": "spring-data-neo4j-7.1.2", "code": "package support\n\n// Indicates SDN to store dates as long in the database.\n@Retention(RUNTIME) @Target(FIELD) @Inherited @ConvertWith(converter=org.springframework.data.neo4j.core.support.DateLongConverter.class) @API(status=STABLE, since=\"6.0\") public @interface DateLong;\n// Indicates SDN 6 to store dates as String in the database.\n@Retention(RUNTIME) @Target(FIELD) @Inherited @ConvertWith(converterFactory=org.springframework.data.neo4j.core.support.DateStringConverterFactory.class) @API(status=STABLE, since=\"6.0\") public @interface DateString;\n// A predicate indicating true for throwables that can be safely retried and false in any other case.\n@API(status=STABLE, since=\"6.0\") public final class RetryExceptionPredicate extends Object implements Predicate<Throwable>;\n// Representation of a user agent containing sensible information to identify queries generated by or executed via Spring Data Neo4j.\npublic enum UserAgent extends Enum<UserAgent>;\n// A generator providing UUIDs.\n@API(status=STABLE, since=\"6.0\") public final class UUIDStringGenerator extends Object implements IdGenerator<String>;\n", "des": "This package provides a couple of support classes that might be helpful in your domain, for example a predicate indicating that some transaction may be retried and additional converters and id generators."}
{"index": 1614, "repo": "spring-data-neo4j-7.1.2", "code": "package transaction\n\n// Responsible for storing, updating and retrieving the bookmarks of Neo4j's transaction.\n@API(status=STABLE, since=\"6.1.1\") public sealed interface Neo4jBookmarkManager;\n// This event will be published after a Neo4j transaction manager physically committed a transaction without errors and received a new set of bookmarks from the cluster.\n@API(status=STABLE, since=\"6.1.1\") public final class Neo4jBookmarksUpdatedEvent extends ApplicationEvent;\n// Dedicated PlatformTransactionManager for native Neo4j transactions.\n@API(status=STABLE, since=\"6.0\") public final class Neo4jTransactionManager extends AbstractPlatformTransactionManager implements ApplicationContextAware;\n// A builder for Neo4jTransactionManager.\n@API(status=STABLE, since=\"6.2\") public static final class Neo4jTransactionManager.Builder extends Object;\n// Internal use only.\npublic final class Neo4jTransactionUtils extends Object;\n// \n@API(status=STABLE, since=\"6.0\") public final class ReactiveNeo4jTransactionManager extends AbstractReactiveTransactionManager implements ApplicationContextAware;\n// A builder for ReactiveNeo4jTransactionManager.\n@API(status=STABLE, since=\"6.2\") public static final class ReactiveNeo4jTransactionManager.Builder extends Object;\n", "des": "Contains the core infrastructure for translating unmanaged Neo4j transaction into Spring managed transactions."}
{"index": 1615, "repo": "spring-data-neo4j-7.1.2", "code": "package repository\n\n// Neo4j specific Repository interface.\n@NoRepositoryBean public interface Neo4jRepository<T,ID> extends PagingAndSortingRepository<T,ID>, QueryByExampleExecutor<T>, CrudRepository<T,ID>;\n// Throw when a query doesn't return a required result.\n@API(status=STABLE, since=\"6.0\") public class NoResultException extends EmptyResultDataAccessException;\n// Neo4j specific Repository interface with reactive support.\n@NoRepositoryBean public interface ReactiveNeo4jRepository<T,ID> extends ReactiveSortingRepository<T,ID>, ReactiveQueryByExampleExecutor<T>, ReactiveCrudRepository<T,ID>;\n", "des": "This package provides the Neo4j imperative and reactive repository API."}
{"index": 1616, "repo": "spring-data-neo4j-7.1.2", "code": "package config\n\n// Annotation to activate Neo4j repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(org.springframework.data.neo4j.repository.config.Neo4jRepositoriesRegistrar.class) public @interface EnableNeo4jRepositories;\n// Annotation to activate reactive Neo4j repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(org.springframework.data.neo4j.repository.config.ReactiveNeo4jRepositoriesRegistrar.class) public @interface EnableReactiveNeo4jRepositories;\n// This dedicated Neo4j repository extension will be registered via Neo4jRepositoriesRegistrar and then provide all necessary beans to be registered in the application's context before the user's \"business\" beans gets registered.\n@API(status=INTERNAL, since=\"6.0\") public final class Neo4jRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport;\n// This dedicated Neo4j repository extension will be registered via Neo4jRepositoriesRegistrar and then provide all necessary beans to be registered in the application's context before the user's \"business\" beans gets registered.\n@API(status=INTERNAL, since=\"6.0\") public final class ReactiveNeo4jRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport;\n", "des": "Configuration infrastructure for Neo4j specific repositories, especially dedicated annotations to enable imperative and reactive Spring Data Neo4j repositories."}
{"index": 1617, "repo": "spring-data-neo4j-7.1.2", "code": "package query\n\n// This is a utility class that computes the bounding box of a polygon as a rectangle defined by the lower left and upper right point.\npublic final class BoundingBox extends Object;\n// Bridging between Spring Data domain Objects and Cypher constructs.\n@API(status=INTERNAL, since=\"6.0\") public final class CypherAdapterUtils extends Object;\n// \n@API(status=INTERNAL, since=\"6.1\") public final class CypherdslConditionExecutorImpl<T> extends Object implements CypherdslConditionExecutor<T>;\n// Specialized version of Query whose values is always used as exists projection.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @Query(exists=true) @API(status=STABLE, since=\"6.0\") public @interface ExistsQuery;\n// Lookup strategy for queries.\n@API(status=INTERNAL, since=\"6.0\") public final class Neo4jQueryLookupStrategy extends Object implements QueryLookupStrategy;\n// This class provides a couple of extensions to the Spring Data Neo4j SpEL support.\n@API(status=INTERNAL, since=\"6.0.2\") public final class Neo4jSpelSupport extends Object;\n// Annotation to provide Cypher statements that will be used for executing the method.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @API(status=STABLE, since=\"6.0\") public @interface Query;\n// Querydsl specific fragment for extending SimpleNeo4jRepository with an implementation of QuerydslPredicateExecutor.\n@API(status=INTERNAL, since=\"6.1\") public final class QuerydslNeo4jPredicateExecutor<T> extends Object implements QuerydslPredicateExecutor<T>;\n// Collects the parts of a Cypher query to be handed over to the Cypher generator.\n@API(status=INTERNAL, since=\"6.0.4\") public final class QueryFragments extends Object;\n// Combines the QueryFragments with parameters.\n@API(status=INTERNAL, since=\"6.0.4\") public final class QueryFragmentsAndParameters extends Object;\n", "des": "A set of annotations for providing custom queries to repositories."}
{"index": 1618, "repo": "spring-data-neo4j-7.1.2", "code": "package support\n\n// An interface that can be added to any repository so that queries can be enriched by conditions of the Cypher-DSL.\n@API(status=STABLE, since=\"6.1\") public interface CypherdslConditionExecutor<T>;\n// An interface that can be added to any imperative repository so that the repository exposes several methods taking in a Statement from the Cypher-DSL, that allows for full customization of the queries executed in a programmatic way in contrast to provide custom queries declaratively via @Query annotations.\n@API(status=STABLE, since=\"6.1\") public interface CypherdslStatementExecutor<T>;\n// Neo4j specific contract for entity informations.\npublic interface Neo4jEntityInformation<T,ID> extends EntityInformation<T,ID>;\n// This class registers the Neo4j SpEL Support it is registered by the appropriate repository factories as a root bean.\n@API(status=INTERNAL, since=\"6.0.2\") public final class Neo4jEvaluationContextExtension extends Object implements EvaluationContextExtension;\n// Special adapter for Springs FactoryBean interface to allow easy setup of repository factories via Spring configuration.\n@API(status=INTERNAL, since=\"6.0\") public final class Neo4jRepositoryFactoryBean<T extends Repository<S,ID>,S,ID extends Serializable> extends TransactionalRepositoryFactoryBeanSupport<T,S,ID>;\n// The CDI pendant to the Neo4jRepositoryFactoryBean.\n@API(status=INTERNAL, since=\"6.0\") public final class Neo4jRepositoryFactoryCdiBean<T> extends CdiRepositoryBean<T>;\n// An interface that can be added to any repository so that queries can be enriched by conditions of the Cypher-DSL.\n@API(status=STABLE, since=\"6.3.3\") public interface ReactiveCypherdslConditionExecutor<T>;\n", "des": "This package provides a couple of public support classes for building custom imperative and reactive Spring Data Neo4j repository base classes."}
{"index": 1619, "repo": "spring-data-neo4j-7.1.2", "code": "package types\n\n// \n@API(status=STABLE, since=\"6.0\") public final class CartesianPoint2d extends Object;\n// \n@API(status=STABLE, since=\"6.0\") public final class CartesianPoint3d extends Object;\n// \npublic final class Coordinate extends Object;\n// \n@API(status=STABLE, since=\"6.0\") public final class GeographicPoint2d extends Object;\n// \n@API(status=STABLE, since=\"6.0\") public final class GeographicPoint3d extends Object;\n// A dedicated Neo4j point, that is aware of its nature, either being geographic or cartesian.\n@API(status=STABLE, since=\"6.0\") public sealed interface Neo4jPoint;\n// \n@API(status=STABLE, since=\"6.0\") public final class PointBuilder extends Object;\n", "des": "Additional types provided by SDN."}
{"index": 1620, "repo": "spring-kafka-3.0.9", "code": "package kafka\n\n// The Spring for Apache Kafka specific NestedRuntimeException implementation.\npublic class KafkaException extends org.springframework.core.NestedRuntimeException;\n// The log level for KafkaException.\npublic static enum KafkaException.Level extends Enum<KafkaException.Level>;\n", "des": "Base package for kafka"}
{"index": 1621, "repo": "spring-kafka-3.0.9", "code": "package annotation\n\n// Annotation to determine the method the should process the DLT topic message.\n@Target(METHOD) @Retention(RUNTIME) @Documented public @interface DltHandler;\n// Enable Kafka listener annotated endpoints that are created under the covers by a AbstractListenerContainerFactory.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(KafkaListenerConfigurationSelector.class) public @interface EnableKafka;\n// Enables the non-blocking topic-based delayed retries feature.\n@Retention(RUNTIME) @Target(TYPE) @Documented @Import(RetryTopicConfigurationSupport.class) @EnableKafka public @interface EnableKafkaRetryTopic;\n// Enable default Kafka Streams components.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(KafkaStreamsDefaultConfiguration.class) public @interface EnableKafkaStreams;\n// An ImportBeanDefinitionRegistrar class that registers a KafkaListenerAnnotationBeanPostProcessor bean capable of processing Spring's @KafkaListener annotation.\npublic class KafkaBootstrapConfiguration extends Object implements org.springframework.context.annotation.ImportBeanDefinitionRegistrar;\n// Annotation that marks a method to be the target of a Kafka message listener within a class that is annotated with KafkaListener.\n@Target({METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) @MessageMapping @Documented public @interface KafkaHandler;\n// Annotation that marks a method to be the target of a Kafka message listener on the specified topics.\n@Target({TYPE,METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) @MessageMapping @Documented @Repeatable(KafkaListeners.class) public @interface KafkaListener;\n// Bean post-processor that registers methods annotated with KafkaListener to be invoked by a Kafka message listener container created under the covers by a KafkaListenerContainerFactory according to the parameters of the annotation.\npublic class KafkaListenerAnnotationBeanPostProcessor<K,V> extends Object implements org.springframework.beans.factory.config.BeanPostProcessor, org.springframework.core.Ordered, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.SmartInitializingSingleton;\n", "des": "Package for kafka annotations"}
{"index": 1622, "repo": "spring-kafka-3.0.9", "code": "package aot\n\n// Detect and register Avro types for Apache Kafka listeners.\npublic class KafkaAvroBeanRegistrationAotProcessor extends Object implements org.springframework.beans.factory.aot.BeanRegistrationAotProcessor;\n// RuntimeHintsRegistrar for Spring for Apache Kafka.\npublic class KafkaRuntimeHints extends Object implements org.springframework.aot.hint.RuntimeHintsRegistrar;\n", "des": "Provides classes to support Spring AOT."}
{"index": 1623, "repo": "spring-kafka-3.0.9", "code": "package config\n\n// Base KafkaListenerContainerFactory for Spring's base container implementation.\npublic abstract class AbstractKafkaListenerContainerFactory<C extends AbstractMessageListenerContainer<K,V>,K,V> extends Object implements KafkaListenerContainerFactory<C>, org.springframework.context.ApplicationEventPublisherAware, org.springframework.beans.factory.InitializingBean, org.springframework.context.ApplicationContextAware;\n// Base model for a Kafka listener endpoint.\npublic abstract class AbstractKafkaListenerEndpoint<K,V> extends Object implements KafkaListenerEndpoint, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean;\n// Composite KafkaStreamsCustomizer customizes KafkaStreams by delegating to a list of provided KafkaStreamsCustomizer.\npublic class CompositeKafkaStreamsCustomizer extends Object implements KafkaStreamsCustomizer;\n// Composite KafkaStreamsInfrastructureCustomizer customizes KafkaStreams by delegating to a list of provided KafkaStreamsInfrastructureCustomizer.\npublic class CompositeKafkaStreamsInfrastructureCustomizer extends Object implements KafkaStreamsInfrastructureCustomizer;\n// A KafkaListenerContainerFactory implementation to build a ConcurrentMessageListenerContainer.\npublic class ConcurrentKafkaListenerContainerFactory<K,V> extends AbstractKafkaListenerContainerFactory<ConcurrentMessageListenerContainer<K,V>,K,V>;\n// Called by the container factory after the container is created and configured.\n@FunctionalInterface public interface ContainerCustomizer<K,V,C extends AbstractMessageListenerContainer<K,V>>;\n// Configuration constants for internal sharing across subpackages.\npublic abstract class KafkaListenerConfigUtils extends Object;\n// Factory for MessageListenerContainers.\npublic interface KafkaListenerContainerFactory<C extends MessageListenerContainer>;\n// Model for a Kafka listener endpoint.\npublic interface KafkaListenerEndpoint;\n// Helper bean for registering KafkaListenerEndpoint with a KafkaListenerEndpointRegistry.\npublic class KafkaListenerEndpointRegistrar extends Object implements org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Package for kafka configuration"}
{"index": 1624, "repo": "spring-kafka-3.0.9", "code": "package core\n\n// A Supplier for bootstrap servers that can toggle between 2 lists of servers.\npublic class ABSwitchCluster extends Object implements Supplier<String>;\n// Specifies time of KafkaStreams.cleanUp() execution.\npublic class CleanupConfig extends Object;\n// The strategy to produce a Consumer instance(s).\npublic interface ConsumerFactory<K,V>;\n// Called whenever a consumer is added or removed.\npublic static interface ConsumerFactory.Listener<K,V>;\n// Called by consumer factories to perform post processing on newly created consumers.\npublic interface ConsumerPostProcessor<K,V> extends Function<org.apache.kafka.clients.consumer.Consumer<K,V>,org.apache.kafka.clients.consumer.Consumer<K,V>>;\n// The ConsumerFactory implementation to produce new Consumer instances for provided Map configs and optional Deserializers on each ConsumerFactory.createConsumer() invocation.\npublic class DefaultKafkaConsumerFactory<K,V> extends KafkaResourceFactory implements ConsumerFactory<K,V>, org.springframework.beans.factory.BeanNameAware;\n// The ProducerFactory implementation for a singleton shared Producer instance.\npublic class DefaultKafkaProducerFactory<K,V> extends KafkaResourceFactory implements ProducerFactory<K,V>, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.BeanNameAware, org.springframework.context.ApplicationListener<org.springframework.context.event.ContextStoppedEvent>, org.springframework.beans.factory.DisposableBean;\n// A wrapper class for the delegate.\nprotected static class DefaultKafkaProducerFactory.CloseSafeProducer<K,V> extends Object implements org.apache.kafka.clients.producer.Producer<K,V>;\n// An admin that delegates to an AdminClient to create topics defined in the application context.\npublic class KafkaAdmin extends KafkaResourceFactory implements org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.SmartInitializingSingleton, KafkaAdminOperations;\n// Wrapper for a collection of NewTopic to facilitate declaring multiple topics as a single bean.\npublic static class KafkaAdmin.NewTopics extends Object;\n// Provides a number of convenience methods wrapping AdminClient.\npublic interface KafkaAdminOperations;\n", "des": "Package for kafka core components"}
{"index": 1625, "repo": "spring-kafka-3.0.9", "code": "package reactive\n\n// Reactive kafka consumer operations implementation.\npublic class ReactiveKafkaConsumerTemplate<K,V> extends Object;\n// Reactive kafka producer operations implementation.\npublic class ReactiveKafkaProducerTemplate<K,V> extends Object implements AutoCloseable, org.springframework.beans.factory.DisposableBean;\n", "des": "Reactive component for consumer and producer."}
{"index": 1626, "repo": "spring-kafka-3.0.9", "code": "package event\n\n// An event published when a consumer fails to start.\npublic class ConsumerFailedToStartEvent extends KafkaEvent;\n// An event published when a consumer partition is paused.\npublic class ConsumerPartitionPausedEvent extends KafkaEvent;\n// An event published when a consumer partition is resumed.\npublic class ConsumerPartitionResumedEvent extends KafkaEvent;\n// An event published when a consumer is paused.\npublic class ConsumerPausedEvent extends KafkaEvent;\n// An event published when a consumer is resumed.\npublic class ConsumerResumedEvent extends KafkaEvent;\n// An event published when authentication or authorization of a consumer fails and is being retried.\npublic class ConsumerRetryAuthEvent extends KafkaEvent;\n// Reasons for retrying auth a consumer.\npublic static enum ConsumerRetryAuthEvent.Reason extends Enum<ConsumerRetryAuthEvent.Reason>;\n// An event published when authentication or authorization has been retried successfully.\npublic class ConsumerRetryAuthSuccessfulEvent extends KafkaEvent;\n// An event published when a consumer has started.\npublic class ConsumerStartedEvent extends KafkaEvent;\n// An event published when a consumer is initializing.\npublic class ConsumerStartingEvent extends KafkaEvent;\n// An event published when a consumer is stopped.\npublic class ConsumerStoppedEvent extends KafkaEvent;\n// Reasons for stopping a consumer.\npublic static enum ConsumerStoppedEvent.Reason extends Enum<ConsumerStoppedEvent.Reason>;\n// An event published when a consumer is stopped.\npublic class ConsumerStoppingEvent extends KafkaEvent;\n// An event published when a container is stopped.\npublic class ContainerStoppedEvent extends KafkaEvent;\n// Base class for events.\npublic abstract class KafkaEvent extends org.springframework.context.ApplicationEvent;\n// An event that is emitted when a container is idle if the container is configured to do so.\npublic class ListenerContainerIdleEvent extends KafkaEvent;\n// An event that is emitted when a container is no longer idle if configured to publish idle events.\npublic class ListenerContainerNoLongerIdleEvent extends KafkaEvent;\n// An event that is emitted when a container partition is idle if the container is configured to do so.\npublic class ListenerContainerPartitionIdleEvent extends KafkaEvent;\n// An event that is emitted when a partition is no longer idle if configured to publish idle events.\npublic class ListenerContainerPartitionNoLongerIdleEvent extends KafkaEvent;\n", "des": "Application Events."}
{"index": 1627, "repo": "spring-kafka-3.0.9", "code": "package listener\n\n// Manages the ConsumerSeekAware.ConsumerSeekCallback s for the listener.\npublic abstract class AbstractConsumerSeekAware extends Object implements ConsumerSeekAware;\n// Base class for KafkaBackOffManagerFactory implementations.\npublic abstract class AbstractKafkaBackOffManagerFactory extends Object implements KafkaBackOffManagerFactory, org.springframework.context.ApplicationContextAware;\n// The base implementation for the MessageListenerContainer.\npublic abstract class AbstractMessageListenerContainer<K,V> extends Object implements GenericMessageListenerContainer<K,V>, org.springframework.beans.factory.BeanNameAware, org.springframework.context.ApplicationEventPublisherAware, org.springframework.context.ApplicationContextAware;\n// Listener for handling incoming Kafka messages, propagating an acknowledgment handle that recipients can invoke when the message has been processed.\n@FunctionalInterface public interface AcknowledgingConsumerAwareMessageListener<K,V> extends MessageListener<K,V>;\n// Listener for handling incoming Kafka messages, propagating an acknowledgment handle that recipients can invoke when the message has been processed.\n@FunctionalInterface public interface AcknowledgingMessageListener<K,V> extends MessageListener<K,V>;\n// Invoked by a listener container with remaining, unprocessed, records (including the failed record).\n@FunctionalInterface public interface AfterRollbackProcessor<K,V>;\n// Handler for the provided back off time, listener container and exception.\npublic interface BackOffHandler;\n// Listener for handling a batch of incoming Kafka messages, propagating an acknowledgment handle that recipients can invoke when the message has been processed.\n@FunctionalInterface public interface BatchAcknowledgingConsumerAwareMessageListener<K,V> extends BatchMessageListener<K,V>;\n// Listener for handling a batch of incoming Kafka messages, propagating an acknowledgment handle that recipients can invoke when the message has been processed.\n@FunctionalInterface public interface BatchAcknowledgingMessageListener<K,V> extends BatchMessageListener<K,V>;\n// Listener for handling a batch of incoming Kafka messages; the list is created from the consumer records object returned by a poll.\n@FunctionalInterface public interface BatchConsumerAwareMessageListener<K,V> extends BatchMessageListener<K,V>;\n", "des": "Package for kafka listeners"}
{"index": 1628, "repo": "spring-kafka-3.0.9", "code": "package adapter\n\n// Top level class for all listener adapters.\npublic abstract class AbstractDelegatingMessageListenerAdapter<T> extends Object implements ConsumerSeekAware, DelegatingMessageListener<T>;\n// An abstract message listener adapter that implements record filter logic via a RecordFilterStrategy.\npublic abstract class AbstractFilteringMessageListener<K,V,T> extends AbstractDelegatingMessageListenerAdapter<T>;\n// Base class for retrying message listener adapters.\npublic abstract class AbstractRetryingMessageListenerAdapter<K,V,T> extends AbstractDelegatingMessageListenerAdapter<T>;\n// Utilities for listener adapters.\npublic final class AdapterUtils extends Object;\n// A MessageListener adapter that invokes a configurable HandlerAdapter; used when the factory is configured for the listener to receive batches of messages.\npublic class BatchMessagingMessageListenerAdapter<K,V> extends MessagingMessageListenerAdapter<K,V> implements BatchAcknowledgingConsumerAwareMessageListener<K,V>;\n// An adapter that adapts a batch listener to a record listener method.\n@FunctionalInterface public interface BatchToRecordAdapter<K,V>;\n// A callback for each message.\n@FunctionalInterface public static interface BatchToRecordAdapter.Callback<K,V>;\n// Used to provide a listener method argument when the user supplies such a parameter.\npublic class ConsumerRecordMetadata extends Object;\n// A AcknowledgingConsumerAwareMessageListener adapter that implements converting received ConsumerRecord using specified MessageConverter and then passes result to specified MessageListener.\npublic class ConvertingMessageListener<V> extends Object implements DelegatingMessageListener<MessageListener>, AcknowledgingConsumerAwareMessageListener<Object,Object>;\n// The default BatchToRecordAdapter implementation; if the supplied recoverer throws an exception, the batch will be aborted; otherwise the next record will be processed.\npublic class DefaultBatchToRecordAdapter<K,V> extends Object implements BatchToRecordAdapter<K,V>;\n// Delegates to an InvocableHandlerMethod based on the message payload type.\npublic class DelegatingInvocableHandler extends Object;\n", "des": "Provides classes for adapting listeners."}
{"index": 1629, "repo": "spring-kafka-3.0.9", "code": "package mock\n\n// Support the use of MockConsumer in tests.\npublic class MockConsumerFactory<K,V> extends Object implements ConsumerFactory<K,V>;\n// Support the use of MockProducer in tests.\npublic class MockProducerFactory<K,V> extends Object implements ProducerFactory<K,V>;\n", "des": "Provides classes to support the use of MockConsumer and MockProducer."}
{"index": 1630, "repo": "spring-kafka-3.0.9", "code": "package requestreply\n\n// A replying template that aggregates multiple replies with the same correlation id.\npublic class AggregatingReplyingKafkaTemplate<K,V,R> extends ReplyingKafkaTemplate<K,V,Collection<org.apache.kafka.clients.consumer.ConsumerRecord<K,R>>> implements BatchConsumerAwareMessageListener<K,Collection<org.apache.kafka.clients.consumer.ConsumerRecord<K,R>>>;\n// Wrapper for byte[] that can be used as a hash key.\npublic final class CorrelationKey extends Object;\n// Exception when a reply is not received within a timeout.\npublic class KafkaReplyTimeoutException extends KafkaException;\n// Request/reply operations.\npublic interface ReplyingKafkaOperations<K,V,R>;\n// A KafkaTemplate that implements request/reply semantics.\npublic class ReplyingKafkaTemplate<K,V,R> extends KafkaTemplate<K,V> implements BatchMessageListener<K,R>, org.springframework.beans.factory.InitializingBean, org.springframework.context.SmartLifecycle, org.springframework.beans.factory.DisposableBean, ReplyingKafkaOperations<K,V,R>, ConsumerSeekAware;\n// A CompletableFuture for requests/replies.\npublic class RequestReplyFuture<K,V,R> extends CompletableFuture<org.apache.kafka.clients.consumer.ConsumerRecord<K,R>>;\n// A listenable future for Message replies.\npublic class RequestReplyMessageFuture<K,V> extends CompletableFuture<org.springframework.messaging.Message<?>>;\n// A listenable future for Message replies with a specific payload type.\npublic class RequestReplyTypedMessageFuture<K,V,P> extends RequestReplyMessageFuture<K,V>;\n", "des": "Provides classes for request/reply semantics."}
{"index": 1631, "repo": "spring-kafka-3.0.9", "code": "package retrytopic\n\n// Generates the backoff values from the provided maxAttempts value and BackOffPolicy.\npublic class BackOffValuesGenerator extends Object;\n// Creates and configures the DeadLetterPublishingRecoverer that will be used to forward the messages using the DestinationTopicResolver.\npublic class DeadLetterPublishingRecovererFactory extends Object;\n// Implement this interface to create each DeadLetterPublishingRecoverer.\n@FunctionalInterface public static interface DeadLetterPublishingRecovererFactory.DeadLetterPublisherCreator;\n// Default implementation of the DestinationTopicProcessor interface.\npublic class DefaultDestinationTopicProcessor extends Object implements DestinationTopicProcessor;\n// Default implementation of the DestinationTopicResolver interface.\npublic class DefaultDestinationTopicResolver extends ExceptionClassifier implements DestinationTopicResolver, org.springframework.context.ApplicationListener<org.springframework.context.event.ContextRefreshedEvent>, org.springframework.context.ApplicationContextAware;\n// \npublic static class DefaultDestinationTopicResolver.DestinationTopicHolder extends Object;\n// Representation of a Destination Topic to which messages can be forwarded, such as retry topics and dlt.\npublic class DestinationTopic extends Object;\n// \npublic static class DestinationTopic.Properties extends Object;\n// Provides methods to store and retrieve DestinationTopic instances.\npublic interface DestinationTopicContainer;\n// The DestinationTopicProcessor creates and registers the DestinationTopic instances in the provided DestinationTopicProcessor.Context, also providing callback interfaces to be called upon the context properties.\npublic interface DestinationTopicProcessor;\n// \npublic static class DestinationTopicProcessor.Context extends Object;\n// Creates a list of DestinationTopic.Properties based on the provided configurations.\npublic class DestinationTopicPropertiesFactory extends Object;\n// \npublic static class DestinationTopicPropertiesFactory.DestinationTopicSuffixes extends Object;\n// Provides methods for resolving the destination to which a message that failed to be processed should be forwarded to.\npublic interface DestinationTopicResolver extends DestinationTopicContainer;\n// Strategies for handling DLT processing.\npublic enum DltStrategy extends Enum<DltStrategy>;\n// Customizes main, retry and DLT endpoints in the Retry Topic functionality and returns the resulting topic names.\n@FunctionalInterface public interface EndpointCustomizer;\n// \npublic static class EndpointCustomizer.TopicNamesHolder extends Object;\n", "des": "Package for retryable topic handling."}
{"index": 1632, "repo": "spring-kafka-3.0.9", "code": "package jaas\n\n// Contains properties for setting up an AppConfigurationEntry that can be used for the Kafka client.\npublic class KafkaJaasLoginModuleInitializer extends Object implements org.springframework.beans.factory.SmartInitializingSingleton, org.springframework.beans.factory.DisposableBean;\n// Control flag values for login configuration.\npublic static enum KafkaJaasLoginModuleInitializer.ControlFlag extends Enum<KafkaJaasLoginModuleInitializer.ControlFlag>;\n", "des": "Provides classes related to jaas."}
{"index": 1633, "repo": "spring-kafka-3.0.9", "code": "package streams\n\n// \n@Deprecated public class HeaderEnricher<K,V> extends Object implements org.apache.kafka.streams.kstream.Transformer<K,V,org.apache.kafka.streams.KeyValue<K,V>>;\n// Container object for SpEL evaluation.\npublic static final class HeaderEnricher.Container<K,V> extends Object;\n// Manipulate the headers.\npublic class HeaderEnricherProcessor<K,V> extends org.apache.kafka.streams.processor.api.ContextualProcessor<K,V,K,V>;\n// Container object for SpEL evaluation.\npublic static final class HeaderEnricherProcessor.Container<K,V> extends Object;\n// Creates a KafkaStreamsMetrics for the KafkaStreams.\npublic class KafkaStreamsMicrometerListener extends Object implements StreamsBuilderFactoryBean.Listener;\n// A DeserializationExceptionHandler that calls a ConsumerRecordRecoverer.\npublic class RecoveringDeserializationExceptionHandler extends Object implements org.apache.kafka.streams.errors.DeserializationExceptionHandler;\n", "des": "Package for classes related to Kafka Streams."}
{"index": 1634, "repo": "spring-kafka-3.0.9", "code": "package messaging\n\n// A function that receives a spring-messaging Message and returns a Message.\n@FunctionalInterface public interface MessagingFunction;\n// A Transformer implementation that invokes a MessagingFunction converting to/from spring-messaging Message.\npublic class MessagingProcessor<Kin,Vin,Kout,Vout> extends org.apache.kafka.streams.processor.api.ContextualProcessor<Kin,Vin,Kout,Vout>;\n// \n@Deprecated public class MessagingTransformer<K,V,R> extends Object implements org.apache.kafka.streams.kstream.Transformer<K,V,org.apache.kafka.streams.KeyValue<K,R>>;\n", "des": "Package for classes related to spring-messaging with Kafka Streams."}
{"index": 1635, "repo": "spring-kafka-3.0.9", "code": "package support\n\n// Base for Kafka header mappers.\npublic abstract class AbstractKafkaHeaderMapper extends Object implements KafkaHeaderMapper;\n// A matcher for headers.\nprotected static interface AbstractKafkaHeaderMapper.HeaderMatcher;\n// A matcher that never matches a set of headers.\nprotected static class AbstractKafkaHeaderMapper.NeverMatchHeaderMatcher extends Object implements AbstractKafkaHeaderMapper.HeaderMatcher;\n// A pattern-based header matcher that matches if the specified header matches the specified simple pattern.\nprotected static class AbstractKafkaHeaderMapper.SimplePatternBasedHeaderMatcher extends Object implements AbstractKafkaHeaderMapper.HeaderMatcher;\n// Handle for acknowledging the processing of a ConsumerRecord.\npublic interface Acknowledgment;\n// Class for managing Allow / Deny collections and its predicates.\npublic final class AllowDenyCollectionManager<T> extends Object;\n// A ProducerInterceptor that delegates to a collection of interceptors.\npublic class CompositeProducerInterceptor<K,V> extends Object implements org.apache.kafka.clients.producer.ProducerInterceptor<K,V>, Closeable;\n// A ProducerListener that delegates to a collection of listeners.\npublic class CompositeProducerListener<K,V> extends Object implements ProducerListener<K,V>;\n// Default header mapper for Apache Kafka.\npublic class DefaultKafkaHeaderMapper extends AbstractKafkaHeaderMapper;\n// Represents a header that could not be decoded due to an untrusted type.\npublic static class DefaultKafkaHeaderMapper.NonTrustedHeaderType extends Object;\n// Handler method for retrying endpoints.\npublic class EndpointHandlerMethod extends Object;\n// Subclass of ExponentialBackOff that allows the specification of the maximum number of retries rather than the maximum elapsed time.\npublic class ExponentialBackOffWithMaxRetries extends org.springframework.util.backoff.ExponentialBackOff;\n// A SimpleModule extension for MimeType serialization.\npublic final class JacksonMimeTypeModule extends com.fasterxml.jackson.databind.module.SimpleModule;\n// The utility to check if Jackson JSON processor is present in the classpath.\npublic final class JacksonPresent extends Object;\n// The utilities for Jackson ObjectMapper instances.\npublic final class JacksonUtils extends Object;\n// Chained utility methods to simplify some Java repetitive code.\npublic final class JavaUtils extends Object;\n", "des": "Package for kafka support"}
{"index": 1636, "repo": "spring-kafka-3.0.9", "code": "package converter\n\n// A Kafka-specific Message converter strategy.\npublic interface BatchMessageConverter extends MessageConverter;\n// A Messaging MessageConverter implementation used with a batch message listener; the consumer record values are extracted into a collection in the message payload.\npublic class BatchMessagingMessageConverter extends Object implements BatchMessageConverter;\n// JSON Message converter - byte[] on output, String, Bytes, or byte[] on input.\npublic class ByteArrayJsonMessageConverter extends JsonMessageConverter;\n// JSON Message converter - Bytes on output, String, Bytes, or byte[] on input.\npublic class BytesJsonMessageConverter extends JsonMessageConverter;\n// Exception for conversions.\npublic class ConversionException extends KafkaException;\n// Base class for JSON message converters; on the consumer side, it can handle byte[], Bytes and String record values.\npublic class JsonMessageConverter extends MessagingMessageConverter;\n// Overload of message headers configurable for adding id and timestamp headers.\npublic class KafkaMessageHeaders extends org.springframework.messaging.MessageHeaders;\n// Subclass of MappingJackson2MessageConverter that can handle parameterized (generic) types.\npublic class MappingJacksonParameterizedConverter extends org.springframework.messaging.converter.MappingJackson2MessageConverter;\n// A top level interface for message converters.\npublic interface MessageConverter;\n// A Messaging MessageConverter implementation for a message listener that receives individual messages.\npublic class MessagingMessageConverter extends Object implements RecordMessageConverter;\n// A MessageConverter implementation that uses a Spring Data ProjectionFactory to bind incoming messages to projection interfaces.\npublic class ProjectingMessageConverter extends MessagingMessageConverter;\n// A Kafka-specific Message converter strategy.\npublic interface RecordMessageConverter extends MessageConverter;\n// JSON Message converter - String on output, String, Bytes, or byte[] on input.\npublic class StringJsonMessageConverter extends JsonMessageConverter;\n", "des": "Package for kafka converters"}
{"index": 1637, "repo": "spring-kafka-3.0.9", "code": "package mapping\n\n// Abstract type mapper.\npublic abstract class AbstractJavaTypeMapper extends Object implements org.springframework.beans.factory.BeanClassLoaderAware;\n// Strategy for setting metadata on messages such that one can create the class that needs to be instantiated when receiving a message.\npublic interface ClassMapper;\n// Jackson 2 type mapper.\npublic class DefaultJackson2JavaTypeMapper extends AbstractJavaTypeMapper implements Jackson2JavaTypeMapper;\n// Strategy for setting metadata on messages such that one can create the class that needs to be instantiated when receiving a message.\npublic interface Jackson2JavaTypeMapper extends ClassMapper;\n// The precedence for type conversion - inferred from the method parameter or message headers.\npublic static enum Jackson2JavaTypeMapper.TypePrecedence extends Enum<Jackson2JavaTypeMapper.TypePrecedence>;\n", "des": "Provides classes related to type mapping."}
{"index": 1638, "repo": "spring-kafka-3.0.9", "code": "package micrometer\n\n// Spring for Apache Kafka Observation for listeners.\npublic enum KafkaListenerObservation extends Enum<KafkaListenerObservation> implements io.micrometer.observation.docs.ObservationDocumentation;\n// Default KafkaListenerObservationConvention for Kafka listener key values.\npublic static class KafkaListenerObservation.DefaultKafkaListenerObservationConvention extends Object implements KafkaListenerObservationConvention;\n// Low cardinality tags.\npublic static enum KafkaListenerObservation.ListenerLowCardinalityTags extends Enum<KafkaListenerObservation.ListenerLowCardinalityTags> implements io.micrometer.common.docs.KeyName;\n// ObservationConvention for Kafka listener key values.\npublic interface KafkaListenerObservationConvention extends io.micrometer.observation.ObservationConvention<KafkaRecordReceiverContext>;\n// ReceiverContext for ConsumerRecords.\npublic class KafkaRecordReceiverContext extends io.micrometer.observation.transport.ReceiverContext<org.apache.kafka.clients.consumer.ConsumerRecord<?,?>>;\n// SenderContext for ProducerRecords.\npublic class KafkaRecordSenderContext extends io.micrometer.observation.transport.SenderContext<org.apache.kafka.clients.producer.ProducerRecord<?,?>>;\n// Spring for Apache Kafka Observation for KafkaTemplate.\npublic enum KafkaTemplateObservation extends Enum<KafkaTemplateObservation> implements io.micrometer.observation.docs.ObservationDocumentation;\n// Default KafkaTemplateObservationConvention for Kafka template key values.\npublic static class KafkaTemplateObservation.DefaultKafkaTemplateObservationConvention extends Object implements KafkaTemplateObservationConvention;\n// Low cardinality tags.\npublic static enum KafkaTemplateObservation.TemplateLowCardinalityTags extends Enum<KafkaTemplateObservation.TemplateLowCardinalityTags> implements io.micrometer.common.docs.KeyName;\n// ObservationConvention for Kafka template key values.\npublic interface KafkaTemplateObservationConvention extends io.micrometer.observation.ObservationConvention<KafkaRecordSenderContext>;\n// A wrapper for micrometer timers when available on the class path.\npublic final class MicrometerHolder extends Object;\n", "des": "Provides classes to support Micrometer."}
{"index": 1639, "repo": "spring-kafka-3.0.9", "code": "package transaction\n\n// \n@Deprecated public class ChainedKafkaTransactionManager<K,V> extends org.springframework.data.transaction.ChainedTransactionManager implements KafkaAwareTransactionManager<K,V>;\n// A transaction manager that can provide a ProducerFactory.\npublic interface KafkaAwareTransactionManager<K,V> extends org.springframework.transaction.PlatformTransactionManager;\n// PlatformTransactionManager implementation for a single Kafka ProducerFactory.\npublic class KafkaTransactionManager<K,V> extends org.springframework.transaction.support.AbstractPlatformTransactionManager implements KafkaAwareTransactionManager<K,V>;\n", "des": "Provides classes related to transactions."}
{"index": 1640, "repo": "jena-core-4.9.0", "code": "package datatypes\n\n// Base level implementation of datatype from which real implementations can inherit.\npublic class BaseDatatype extends Object implements RDFDatatype;\n// Pair object used to encode both lexical form and datatype for a typed literal with unknown datatype.\npublic static class BaseDatatype.TypedValue extends Object;\n// Exception thrown when a lexical form does not match the stated datatype.\npublic class DatatypeFormatException extends JenaException;\n// Interface on a datatype representation.\npublic interface RDFDatatype;\n// The TypeMapper provides a global registry of known datatypes.\npublic class TypeMapper extends Object;\n", "des": "Provides the core interfaces through which datatypes are described to Jena."}
{"index": 1641, "repo": "jena-core-4.9.0", "code": "package xsd\n\n// Base class for representation of XSD duration, time, date/time and related datatype instances.\npublic class AbstractDateTime extends Object implements Comparable<AbstractDateTime>;\n// Exception thrown when attempting to access a field of an XSDDateTime object that is not legal for the current date/time type.\npublic class IllegalDateTimeFieldException extends JenaException;\n// Implement base64binary type.\npublic class XSDbase64Binary extends XSDbinary;\n// Root class for XSD datatypes with binary values, xsd:hexBinary and xsd:base64Binary.\npublic abstract class XSDbinary extends XSDDatatype;\n// Representation of an XSD datatype based on the Xerces-2 XSD implementation.\npublic class XSDDatatype extends BaseDatatype;\n// Generic XML Schema datatype (outside the xsd: namespace)\npublic static class XSDDatatype.XSDGenericType extends XSDDatatype;\n// Represent an XSD date/time value.\npublic class XSDDateTime extends AbstractDateTime;\n// Represent an XSD duration value.\npublic class XSDDuration extends AbstractDateTime;\n// Implement hexbinary type.\npublic class XSDhexBinary extends XSDbinary;\n", "des": "Provides datatype definitions for the XML Schema datatypes support by Jena."}
{"index": 1642, "repo": "jena-core-4.9.0", "code": "package impl\n\n// rdf:html.\npublic class RDFhtml extends BaseDatatype implements RDFDatatype;\n// rdf:json.\npublic class RDFjson extends BaseDatatype implements RDFDatatype;\n// rdf:langString.\npublic class RDFLangString extends BaseDatatype implements RDFDatatype;\n// Builtin data type to represent XMLLiteral (i.e.\npublic class XMLLiteralType extends BaseDatatype implements RDFDatatype;\n// Base class for all date/time/duration type representations.\npublic class XSDAbstractDateTimeType extends XSDDatatype;\n// Base implementation for all numeric datatypes derived from xsd:decimal.\npublic class XSDBaseNumericType extends XSDDatatype;\n// Base implementation for all string datatypes derived from xsd:string.\npublic class XSDBaseStringType extends XSDDatatype;\n// Datatype template used to define XSD int types\npublic class XSDByteType extends XSDBaseNumericType;\n// \npublic class XSDDateTimeStampType extends XSDDateTimeType;\n// Type processor for dateTime, most of the machinery is in the base XSDAbstractDateTimeType class.\npublic class XSDDateTimeType extends XSDAbstractDateTimeType;\n// Type processor for date, most of the machinery is in the base XSDAbstractDateTimeType class.\npublic class XSDDateType extends XSDAbstractDateTimeType;\n// \npublic class XSDDayTimeDurationType extends XSDAbstractDateTimeType;\n// Type processor for gDay, most of the machinery is in the base XSDAbstractDateTimeType class.\npublic class XSDDayType extends XSDAbstractDateTimeType;\n// Datatype representation for xsd:float.\npublic class XSDDouble extends XSDDatatype;\n// The XSD duration type, the only job of this extra layer is to wrap the return value in a more convenient accessor type.\npublic class XSDDurationType extends XSDAbstractDateTimeType;\n// Datatype representation for xsd:float.\npublic class XSDFloat extends XSDDatatype;\n// Type processor for gMonthDay, most of the machinery is in the base XSDAbstractDateTimeType class.\npublic class XSDMonthDayType extends XSDAbstractDateTimeType;\n// Type processor for gMonth, most of the machinery is in the base XSDAbstractDateTimeType class.\npublic class XSDMonthType extends XSDAbstractDateTimeType;\n// A datatype that does not use the Xerces machinery for isEqual, yet is still an XSDDatatype.\npublic class XSDPlainType extends XSDDatatype;\n", "des": "Provides implementations of the XSD datatype."}
{"index": 1643, "repo": "jena-core-4.9.0", "code": "package enhanced\n\n// Exception to throw when adding a view to a Polymorphic discovers that the view to add is already on a ring.\npublic class AlreadyLinkedViewException extends JenaException;\n// The personalities that are provided for the existing Jena classes.\npublic class BuiltinPersonalities extends Object;\n// EnhGraph wraps a plain graph and contains enhanced nodes that wrap the plain nodes of the plain graph.\npublic class EnhGraph extends Object;\n// A specialisation of Polymorphic that models an extended node in a an extended graph.\npublic class EnhNode extends Polymorphic<RDFNode> implements FrontsNode;\n// Personalities for Graphs.\npublic class GraphPersonality extends Personality<RDFNode>;\n// Interface defining a generic factory interface for generating enhanced nodes from normal graph nodes.\npublic abstract class Implementation extends Object;\n// Personalities for nodes.\npublic class NodePersonality extends Personality<RDFNode>;\n// Defines a set of permitted mappings from [interface] Class objects to Implementation factories that can generate instances of the facet represented by the Class.\npublic class Personality<T> extends Object;\n// Exception denoting that a personality is misconfigured in some way.\npublic class PersonalityConfigException extends RuntimeException;\n// Abstract base class for all polymorphic RDF objects, especially enhanced node and enhanced graph.\npublic abstract class Polymorphic<T> extends Object;\n// Exception to throw if an enhanced graph does not support polymorphism to a specific class.\npublic class UnsupportedPolymorphismException extends JenaException;\n", "des": "This package defines the enhanced node and graph classes; an enhanced node is one embedded in a particular enhanced graph."}
{"index": 1644, "repo": "jena-core-4.9.0", "code": "package graph\n\n// System identifier for a blank node.\npublic class BlankNodeId extends Object;\n// Interface for expressing capabilities.\npublic interface Capabilities;\n// \n@Deprecated public class Factory extends Object;\n// HasNode - interface for objects that front a Node in some context.\npublic interface FrontsNode;\n// FrontsTriple (see also FrontsNode) is an interface for things that can be seen as wrappers round triples.\npublic interface FrontsTriple;\n// this interface describes types that can have a triple extracted using a getTriple method.\npublic interface GetTriple;\n// The interface to be satisfied by implementations maintaining collections of RDF triples.\npublic interface Graph;\n// The component of a graph responsible for managing events and listeners.\npublic interface GraphEventManager extends GraphListener;\n// GraphEvents is the base class for Jena general graph events.\npublic class GraphEvents extends Object;\n// GraphExtract offers a very simple recursive extraction of a subgraph with a specified root in some supergraph.\npublic class GraphExtract extends Object;\n// Interface for listening to graph-level update events.\npublic interface GraphListener;\n// A factory for providing instances of named graphs with appropriate storage models.\npublic interface GraphMaker;\n// A factory class for creating memory Graphs.\npublic class GraphMemFactory extends Object;\n// An ad-hoc collection of useful code for graphs\npublic class GraphUtil extends Object;\n// \npublic class JenaNodeException extends JenaException;\n// A Node has five subtypes: Node_Blank, Node_Anon, Node_URI, Node_Variable, and Node_ANY.\npublic abstract class Node extends Object implements Serializable;\n// A Node_ANY (there should be only one) is a meta-node that is used to stand for any other node in a query.\npublic class Node_ANY extends Node_Fluid;\n// RDF blank nodes, ie nodes with identity but without URIs.\npublic class Node_Blank extends Node_Concrete;\n// This is the class of \"concrete\" nodes, ie those which correspond to actual RDF data - URIs, blank nodes, and literals.\npublic abstract class Node_Concrete extends Node;\n// Extension to the RDF Data model.\npublic abstract class Node_Ext<X> extends Node;\n", "des": "This package defines the Graph and Node family of classes, which form the underlying datatypes of the Jena system."}
{"index": 1645, "repo": "jena-core-4.9.0", "code": "package compose\n\n// Base class for graphs that are composed of multiple sub-graphs.\npublic abstract class CompositionBase extends GraphBase;\n// Graph operation for wrapping a base graph and leaving it unchanged while recording all the attempted updates for later access.\npublic class Delta extends CompositionBase implements Graph;\n// Class representing the dynamic set difference L - R of two graphs.\npublic class Difference extends Dyadic implements Graph;\n// DisjointUnion - a version of Union that assumes the graphs are disjoint, and hence that find need not do duplicate-removal.\npublic class DisjointUnion extends Dyadic;\n// Base class for the two-operand composition operations; has two graphs L and R\npublic abstract class Dyadic extends CompositionBase;\n// The dynamic intersection of two graphs L and R.\npublic class Intersection extends Dyadic implements Graph;\n// A graph implementation that presents the union of zero or more subgraphs, one of which is distinguished as the updateable graph.\npublic class MultiUnion extends Polyadic;\n// A base class for composition graphs that are composed from zero or more sub-graphs (thus providing a basis for polyadic composition operators).\npublic abstract class Polyadic extends CompositionBase;\n// \npublic class PolyadicPrefixMappingImpl extends PrefixMappingImpl implements PrefixMapping;\n// A class representing the dynamic union of two graphs.\npublic class Union extends Dyadic implements Graph;\n", "des": "This package defines simple composite graphs - union, intersection, difference, and update-tracking."}
{"index": 1646, "repo": "jena-core-4.9.0", "code": "package impl\n\n// \npublic class AdhocDatatype extends BaseDatatype;\n// A default implementation of capabilities, in which everything is allowed, size is accurate, and graphs may be completely empty.\npublic class AllCapabilities extends Object implements Capabilities;\n// This base class provides convenience functions for the three \"usual\" graph makers and a place to hold the reification style for the graphs it constructs.\npublic abstract class BaseGraphMaker extends Object implements GraphMaker;\n// A simple graph implementation that wraps a collection of triples.\npublic class CollectionGraph extends GraphBase;\n// GraphBase is an implementation of Graph that provides some convenient base functionality for Graph implementations.\npublic abstract class GraphBase extends Object implements GraphWithPerform;\n// An implementation of graph isomorphism for Graph equality.\npublic class GraphMatcher extends Object;\n// A version of Graph that enforces term equality even if the base graph uses value-indexing.\npublic class GraphPlain extends WrappedGraph;\n// GraphWithPerform is an implementation interface that extends Graph with the performAdd and performDelete methods used by GraphBase to invoke non-notifying versions of add and delete.\npublic interface GraphWithPerform extends Graph;\n// \npublic interface LiteralLabel;\n// \npublic class LiteralLabelFactory extends Object;\n// Simple implementation of GraphEventManager for GraphBase to use.\npublic class SimpleEventManager extends Object implements GraphEventManager;\n// A SimpleGraphFactory produces memory-based graphs and records them in a local map.\npublic class SimpleGraphMaker extends BaseGraphMaker;\n// \npublic class SimpleTransactionHandler extends TransactionHandlerBase;\n// A base for transaction handlers; provide implementations of execute* operations using the fundamental begin-commit-abort.\npublic abstract class TransactionHandlerBase extends Object implements TransactionHandler;\n// TripleStore - interface for bulk storage of triples used in composed graphs.\npublic interface TripleStore;\n// \npublic class WrappedCapabilities extends Object implements Capabilities;\n// A wrapper class which simply defers all operations to its base.\npublic class WrappedGraph extends Object implements GraphWithPerform;\n", "des": "This package provides basic implementations of Graph interfaces such as EventManager and Capabilities."}
{"index": 1647, "repo": "jena-core-4.9.0", "code": "package irix\n\n// Characters and character classes\npublic class Chars3986 extends Object;\n// Exception thrown due to IRI problems.\npublic class IRIException extends JenaException;\n// Provider: an implementation of a factory for IRIs.\npublic interface IRIProvider;\n// Non-resolving provider that accepts anything string for <...>.\npublic class IRIProviderAny extends Object implements IRIProvider;\n// IRIProvider implemented using java.net.URI.\npublic class IRIProviderJDK extends Object implements IRIProvider;\n// Provider for IRIx using the jena-iri module.\npublic class IRIProviderJenaIRI extends Object implements IRIProvider;\n// IRIx implementation for the jena-iri provider.\npublic static class IRIProviderJenaIRI.IRIxJena extends IRIx;\n// Operations in support of IRIx.\npublic class IRIs extends Object;\n// Support for RFC3986 IRIs.\npublic abstract class IRIx extends Object;\n// A resolver is a base IRI and a policy for resolution.\npublic class IRIxResolver extends Object;\n// \npublic static class IRIxResolver.Builder extends Object;\n// Exception thrown due to relative IRIs when not permitted.\npublic class RelativeIRIException extends IRIException;\n// Setup of jena-iri package IRI Factory for parsing and for checking.\npublic class SetupJenaIRI extends Object;\n// System setup and configuration.\npublic class SystemIRIx extends Object;\n", "des": "Support for RFC3986 IRIs."}
{"index": 1648, "repo": "jena-core-4.9.0", "code": "package mem\n\n// An ArrayBunch implements TripleBunch with a linear search of a short-ish array of Triples.\npublic class ArrayBunch extends Object implements TripleBunch;\n// A pruned (and slightly stewed) version of Map, containing just those operations required by NodeToTriplesMaps.\npublic interface BunchMap;\n// A class that encapsulates a filter on fields on a triple.\npublic class FieldFilter extends Object;\n// \n@Deprecated public class GraphMem extends GraphMemBase;\n// GraphMemBase - a common base class for GraphMem and SmallGraphMem.\npublic abstract class GraphMemBase extends GraphBase;\n// \npublic abstract class GraphTripleStoreBase extends Object implements TripleStore;\n// \npublic class GraphTripleStoreMem extends GraphTripleStoreBase implements TripleStore;\n// Shared stuff for our hashing implementations: does the base work for hashing and growth sizes.\npublic abstract class HashCommon<Key> extends Object;\n// A hashed structure may become empty as a side-effect of a .remove on one of its iterators: a container can request notification of this by passing a NotifyEmpty object in when the iterator is constructed, and its emptied method is called when the bunch becomes empty.\npublic static interface HashCommon.NotifyEmpty;\n// An implementation of BunchMap that does open-addressed hashing.\npublic class HashedBunchMap extends HashCommon<Object> implements BunchMap;\n// \npublic class HashedTripleBunch extends HashCommon<Triple> implements TripleBunch;\n// A base class for in-memory graphs\npublic abstract class NodeToTriplesMapBase extends Object;\n// \npublic class NodeToTriplesMapMem extends NodeToTriplesMapBase;\n// Helper class for listObjects.\npublic abstract class ObjectIterator extends NiceIterator<Node>;\n// A spliterator for sparse arrays.\npublic class SparseArraySpliterator<E> extends Object implements Spliterator<E>;\n// A spliterator for sparse arrays.\npublic class SparseArraySubSpliterator<E> extends Object implements Spliterator<E>;\n// An iterator wrapper for NodeToTriplesMap iterators which ensures that a .remove on the base iterator is copied to the other two maps of this GraphMem.\npublic class StoreTripleIterator extends TrackingTripleIterator;\n", "des": "Various memory-based implementations of interfaces, specifically GraphMem for memory-based Graphs."}
{"index": 1649, "repo": "jena-core-4.9.0", "code": "package ontology\n\n// Interface defining an individual in which all members of a collection are declared pair-wise disjoint.\npublic interface AllDifferent extends OntResource;\n// A property restriction that requires the named property to have have any range instances to be members of a given class.\npublic interface AllValuesFromRestriction extends Restriction;\n// Interface that represents the category of annotation properties in an ontology language.\npublic interface AnnotationProperty extends OntProperty, Property;\n// Encapsulates a class description formed from a boolean combination of other class descriptions (ie union, intersection or complement).\npublic interface BooleanClassDescription extends OntClass;\n// Interface representing the ontology abstraction for a qualified cardinality restriction.\npublic interface CardinalityQRestriction extends QualifiedRestriction;\n// A property restriction that requires the named property to have have exactly the given number of values for a given instance to be a member of the class defined by the restriction.\npublic interface CardinalityRestriction extends Restriction;\n// Class description that is formed from the complement of another class description\npublic interface ComplementClass extends BooleanClassDescription;\n// Exception that is thrown when an ontology resource is converted to another facet, using as(), and the requested conversion is not possible.\npublic class ConversionException extends OntologyException;\n// Represents an ontology DataRange: a class-like construct that contains only concrete data literals.\npublic interface DataRange extends OntResource;\n// Interface that encapsulates the class of properties whose range values are datatype values (as distinct from ObjectProperty whose values are individuals).\npublic interface DatatypeProperty extends OntProperty;\n// Encapsulates a class description representing a closed enumeration of individuals.\npublic interface EnumeratedClass extends OntClass;\n// Interface encapsulating the class of properties that are functional: that is, properties in which a given given domain value has a unique value in the range.\npublic interface FunctionalProperty extends OntProperty;\n// A property restriction that requires the named property to have a given individual as its value.\npublic interface HasValueRestriction extends Restriction;\n// Interface that encapsulates an individual in an ontology, sometimes referred to as a fact or assertion, or a member of the a-box.\npublic interface Individual extends OntResource;\n// Encapsulates a class description that is the intersection of a list of class expressions.\npublic interface IntersectionClass extends BooleanClassDescription;\n", "des": "Provides a set of abstractions and convenience classes for accessing and manipluating ontologies represented in RDF."}
{"index": 1650, "repo": "jena-core-4.9.0", "code": "package impl\n\n// Abstract base class to provide shared implementation for ontology language profiles.\npublic abstract class AbstractProfile extends Object implements Profile;\n// Implementation of the abstraction of axioms that denote the single name assumption.\npublic class AllDifferentImpl extends OntResourceImpl implements AllDifferent;\n// Implementation of the allValuesFrom restriction abstraction.\npublic class AllValuesFromRestrictionImpl extends RestrictionImpl implements AllValuesFromRestriction;\n// Implementation for ontology abstraction of annotation property\npublic class AnnotationPropertyImpl extends OntPropertyImpl implements AnnotationProperty;\n// Shared implementation for implementations of Boolean clas expressions.\npublic abstract class BooleanClassDescriptionImpl extends OntClassImpl implements BooleanClassDescription;\n// Implementation of the exact qualified cardinality restriction\npublic class CardinalityQRestrictionImpl extends QualifiedRestrictionImpl implements CardinalityQRestriction;\n// Implementation of the cardinality restriction abstraction.\npublic class CardinalityRestrictionImpl extends RestrictionImpl implements CardinalityRestriction;\n// Implementation of a node representing a complement class description.\npublic class ComplementClassImpl extends OntClassImpl implements ComplementClass;\n// Default implementation of the interface that defines a closed enumeration of concrete values for the range of a property.\npublic class DataRangeImpl extends OntResourceImpl implements DataRange;\n// Implementation of the datatype property abstraction\npublic class DatatypePropertyImpl extends OntPropertyImpl implements DatatypeProperty;\n// Implementation of a node representing an enumerated class description.\npublic class EnumeratedClassImpl extends OntClassImpl implements EnumeratedClass;\n// Implementation of the functional property abstraction\npublic class FunctionalPropertyImpl extends OntPropertyImpl implements FunctionalProperty;\n// Implementation of the hasValue restriction abstraction.\npublic class HasValueRestrictionImpl extends RestrictionImpl implements HasValueRestriction;\n// Implementation for the ontology abstraction representing ontology class descriptions.\npublic class IndividualImpl extends OntResourceImpl implements Individual;\n// Implementation of a node representing an intersection class description.\npublic class IntersectionClassImpl extends BooleanClassDescriptionImpl implements IntersectionClass;\n// Implementation of the functional property abstraction\npublic class InverseFunctionalPropertyImpl extends ObjectPropertyImpl implements InverseFunctionalProperty;\n// Implementation of the max qualified cardinality restriction\npublic class MaxCardinalityQRestrictionImpl extends QualifiedRestrictionImpl implements MaxCardinalityQRestriction;\n", "des": "Provides default implementations for the abstractions defined in the org.apache.jena.ontology package."}
{"index": 1651, "repo": "jena-core-4.9.0", "code": "package listeners\n\n// Class that merely notes that a change has occurred.\npublic class ChangedListener extends Object implements ModelChangedListener;\n// A listener that ignores everything you tell it; intended as a base class or an identity element.\npublic class NullListener extends Object implements ModelChangedListener;\n// Listener that funnels all the changes into add/removed(Object) x, ie, leaves discrimination to be done on the type of object added or removed.\npublic class ObjectListener extends Object implements ModelChangedListener;\n// A listener that filters all its listening down to the single-statement level.\npublic class StatementListener extends Object implements ModelChangedListener;\n", "des": "A package defining some useful implementations of ModelChangedListener, for listening to (a) all triples added or removed, exploding composite objects, (b) all objects added or removed, as themselves, (c) notification of additions/removals, but no details, and (d) accepting but ignoring all changes, as a base-class to be extended."}
{"index": 1652, "repo": "jena-core-4.9.0", "code": "package model\n\n// An RDF Alternative container.\npublic interface Alt extends Container;\n// Exception thrown if an Alt has no default statement.\npublic class AltHasNoDefaultException extends JenaException;\n// System id for an anonymous node.\npublic class AnonId extends Object;\n// An RDF Bag container.\npublic interface Bag extends Container;\n// An RDF Container.\npublic interface Container extends Resource;\n// This exception may be raised when an attempt to convert an RDFNode to a ReifiedStatement fails because the RDFNode does not correspond to a reification.\npublic class DoesNotReifyException extends JenaException;\n// A exception that is thrown when an operation is attempted on an empty (nil) list that actually requires a list of length one or more.\npublic class EmptyListException extends JenaException;\n// Exception that is thrown when an attept is made to perform a side-effectful operation on an RDFList that is the empty list, or rdf:nil.\npublic class EmptyListUpdateException extends JenaException;\n// Exception to throw when a Statement or Resource (which don't have a useful common supertype, alas) don't have an associated model.\npublic class HasNoModelException extends JenaException;\n// An extension to the normal Model interface that supports access to any underlying inference capability.\npublic interface InfModel extends Model;\n// A exception that is thrown when an operation is attempted on a list that is not well-formed, and is being processed in strict mode.\npublic class InvalidListException extends JenaException;\n// A exception that is thrown when an operation attempts to access an indexed list element beyond the length of the list.\npublic class ListIndexException extends JenaException;\n// An RDF Literal.\npublic interface Literal extends RDFNode;\n// Exception to throw when an RDFNode required to be a Literal isn't, or when a literal Node is required but a non-literal Node supplied.\npublic class LiteralRequiredException extends JenaException;\n// An RDF Model.\npublic interface Model extends ModelCon, ModelGraphInterface, RDFReaderF, RDFWriterF, PrefixMapping, Lock;\n// The interface for classes that listen for model-changed events.\npublic interface ModelChangedListener;\n// Convenience methods which extend the Model interface.\npublic interface ModelCon;\n", "des": "A package for creating and manipulating RDF graphs."}
{"index": 1653, "repo": "jena-core-4.9.0", "code": "package impl\n\n// An implementation of Alt.\npublic class AltImpl extends ContainerImpl implements Alt;\n// An implementation of Bag\npublic class BagImpl extends ContainerImpl implements Bag;\n// An internal class not normally of interest to application developers.\npublic class ContainerImpl extends ResourceImpl implements Container;\n// An internal class, not normally of interest to application developers.\npublic class ContNodeIteratorFactoryImpl extends Object implements NodeIteratorFactory;\n// An internal class not normally of interest to application developers.\npublic class ContNodeIteratorImpl extends NiceIterator<RDFNode> implements NodeIterator;\n// Default implementation of the InfModel interface which simply wraps up an InfGraph.\npublic class InfModelImpl extends ModelCom implements InfModel;\n// Builds Jena Iterators and other things (RDFNode and Statement) needed in a Model.\npublic final class IteratorFactory extends Object;\n// An implementation of Literal.\npublic class LiteralImpl extends EnhNode implements Literal;\n// \npublic class MemoryModelGetter extends Object implements ModelGetter;\n// Common methods for model implementations.\npublic class ModelCom extends EnhGraph implements Model, PrefixMapping, Lock;\n// Adapter class that converts a ModelChangedListener into a GraphListener.\npublic class ModelListenerAdapter extends Object implements GraphListener;\n// A ModelMakerImpl implements a ModelMaker over a GraphMaker.\npublic class ModelMakerImpl extends Object implements ModelMaker;\n// This class impedance-matches the reification requests of Model[Com] to the operations supplied by it's Graph's Reifier.\npublic class ModelReifier extends Object;\n// An internal class not normally of interest to application developers.\npublic interface NodeIteratorFactory;\n// A NodeIterator implementation.\npublic class NodeIteratorImpl extends WrappedIterator<RDFNode> implements NodeIterator;\n// An NsIterator implementation\npublic class NsIteratorImpl extends WrappedIterator<String> implements NsIterator;\n// N-Triple Reader\npublic class NTripleReader extends Object implements RDFReaderI;\n// Writes out an XML serialization of a model.\npublic class NTripleWriter extends Object implements RDFWriterI;\n// An implementation of Property.\npublic class PropertyImpl extends ResourceImpl implements Property;\n// The default error handler for RDF/XML I/O.\npublic class RDFDefaultErrorHandler extends Object implements RDFErrorHandler;\n", "des": "This package contains implementations of the interfaces defined in the .model package, eg ModelCom for Model, ResourceImpl for Resource, and so on."}
{"index": 1654, "repo": "jena-core-4.9.0", "code": "package xmlinput\n\n// A string literal property value from an RDF/XML file.\npublic interface ALiteral extends ANode;\n// A URI or blank node reported to a StatementHandler.\npublic interface AResource;\n// \n@Deprecated public class ARP extends Object implements ARPConfig;\n// Used to set event handlers and options on ARP, SAX2Model, and SAX2RDF instances.\npublic interface ARPConfig;\n// Error numbers used by ARP.\npublic interface ARPErrorNumbers;\n// Convenience generalization of all ARP handler interfaces.\npublic interface ARPEventHandler extends StatementHandler, ExtendedHandler, NamespaceHandler;\n// The interface to set the various handlers on ARP.\npublic class ARPHandlers extends Object;\n// The interface to set the various options on ARP.\npublic class ARPOptions extends Object implements ARPErrorNumbers;\n// Transform DOM nodes of RDF.XML into Jena Models.\npublic class DOM2Model extends SAX2Model;\n// Extended callbacks from a reader to an RDF application.\npublic interface ExtendedHandler;\n// This exception should only be seen in user code when using SAX2RDF or SAX2Model.\npublic class FatalParsingErrorException extends RuntimeException;\n// The interface for being notified about namespace use in an RDF/XML document.\npublic interface NamespaceHandler;\n// A command line interface into ARP.\npublic class NTriple extends Object implements ARPErrorNumbers;\n// An exception during the RDF processing of ARP.\npublic class ParseException extends SAXParseException implements ARPErrorNumbers;\n// Interface between Jena and ARP.\npublic class RDFXMLReader extends Object implements RDFReaderI, ARPErrorNumbers;\n// Use arbitrary SAX input to Jena.\npublic class SAX2Model extends SAX2RDF;\n// Allows connecting an arbitrary source of SAX events with ARP.\npublic class SAX2RDF extends SAX2RDFImpl implements ARPConfig;\n// The callback from a reader to an RDF application.\npublic interface StatementHandler;\n// A collection of convenient functions to parse an XML stream using ARP.\npublic class StAX2Model extends Object;\n// Bridge StAX and SAX parsing.\npublic class StAX2SAX extends Object;\n", "des": "A parser for RDF/XML."}
{"index": 1655, "repo": "jena-core-4.9.0", "code": "package xmlinput0\n\n// A string literal property value from an RDF/XML file.\npublic interface ALiteral extends ANode;\n// A URI or blank node reported to a StatementHandler.\npublic interface AResource;\n// Another RDF Parser.\npublic class ARP0 extends Object implements ARPConfig;\n// Used to set event handlers and options on ARP0, SAX2Model, and SAX2RDF instances.\npublic interface ARPConfig;\n// Error numbers used by ARP.\npublic interface ARPErrorNumbers;\n// Convenience generalization of all ARP handler interfaces.\npublic interface ARPEventHandler extends StatementHandler, ExtendedHandler, NamespaceHandler;\n// The interface to set the various handlers on ARP.\npublic class ARPHandlers extends Object;\n// The interface to set the various options on ARP.\npublic class ARPOptions extends Object implements ARPErrorNumbers;\n// Transform DOM nodes of RDF.XML into Jena Models.\npublic class DOM2Model extends SAX2Model;\n// Extended callbacks from a reader to an RDF application.\npublic interface ExtendedHandler;\n// This exception should only be seen in user code when using SAX2RDF or SAX2Model.\npublic class FatalParsingErrorException extends RuntimeException;\n// The interface for being notified about namespace use in an RDF/XML document.\npublic interface NamespaceHandler;\n// A command line interface into ARP.\npublic class NTriple extends Object implements ARPErrorNumbers;\n// An exception during the RDF processing of ARP.\npublic class ParseException extends ParseException;\n// Interface between Jena and ARP.\npublic class RDFXMLReader0 extends Object implements RDFReaderI, ARPErrorNumbers;\n// Use arbitrary SAX input to Jena.\npublic class SAX2Model extends SAX2RDF;\n// Allows connecting an arbitrary source of SAX events with ARP.\npublic class SAX2RDF extends SAX2RDFImpl implements ARPConfig;\n// The callback from a reader to an RDF application.\npublic interface StatementHandler;\n// A collection of convenient functions to parse an XML stream using ARP.\npublic class StAX2Model extends Object;\n// Bridge StAX and SAX parsing.\npublic class StAX2SAX extends Object;\n// Builtin data type to represent XMLLiteral (i.e.\npublic class XMLLiteralType0 extends BaseDatatype implements RDFDatatype;\n", "des": "A parser for RDF/XML."}
{"index": 1656, "repo": "jena-core-4.9.0", "code": "package xmloutput\n\n// This interface only adds documentation to RDFWriterI.\npublic interface RDFXMLWriterI extends RDFWriterI;\n", "des": "Writing RDF/XML."}
{"index": 1657, "repo": "jena-core-4.9.0", "code": "package reasoner\n\n// A base level implementation of the InfGraph interface.\npublic abstract class BaseInfGraph extends GraphBase implements InfGraph;\n// An InfCapabilities notes that size may not be accurate.\npublic static class BaseInfGraph.InfCapabilities extends AllCapabilities;\n// An InfCapabilities notes that size may not be accurate.\npublic static class BaseInfGraph.InfFindSafeCapabilities extends BaseInfGraph.InfCapabilities;\n// \npublic static class BaseInfGraph.InfTransactionHandler extends TransactionHandlerBase implements TransactionHandler;\n// Derivation records are used to determine how an inferred triple was derived from a set of source triples and a reasoner.\npublic interface Derivation;\n// Wrapper round a Graph to implement the slightly modified Finder interface.\npublic class FGraph extends Object implements Finder;\n// Minimal interface for preforming simple pattern find operations.\npublic interface Finder;\n// Some simple helper methods used when working with Finders, particularly to compose them into cascade sequences.\npublic class FinderUtil extends Object;\n// Exception used to signal that a configuration parameter was used (typically in a setParameter call) that was not understood - either because it was not a recognized parameter URI or its value range was incorrect.\npublic class IllegalParameterException extends ReasonerException;\n// Extends the Graph interface to give additional means to query an inferred graph.\npublic interface InfGraph extends Graph;\n// The minimal interface to which all reasoners (or reasoner adaptors) conform.\npublic interface Reasoner;\n// Exception signalling some generic problem with the reasoning subsystem.\npublic class ReasonerException extends JenaException;\n// The interface through which a reasoner (inference engine) can be instantiated.\npublic interface ReasonerFactory;\n// A global registry of known reasoner modules.\npublic class ReasonerRegistry extends Object;\n// Default implementation of ValidityReport which simply stores a list of precomputed Report records.\npublic class StandardValidityReport extends Object implements ValidityReport;\n// Datastructure which defines a triple pattern as used in simple rules and in find interfaces.\npublic class TriplePattern extends Object implements ClauseEntry;\n// Data structure used to report the results of validation or consistency checking operations.\npublic interface ValidityReport;\n// \npublic static class ValidityReport.Report extends Object;\n", "des": "The Jena2 reasoner subsystem is designed to allow a range of inference engines to be plugged into Jena."}
{"index": 1658, "repo": "jena-core-4.9.0", "code": "package rulesys\n\n// This interface collects together those operations that the backchaining engine needs to invoke in the parent InfGraph.\npublic interface BackwardRuleInfGraphI extends SilentAddI, InfGraph;\n// An inference graph interface that runs a set of forward chaining rules to conclusion on each added triple and stores the entire result set.\npublic class BasicForwardRuleInfGraph extends BaseInfGraph implements ForwardRuleInfGraphI;\n// Reasoner implementation which augments or transforms an RDF graph according to a set of rules.\npublic class BasicForwardRuleReasoner extends Object implements Reasoner;\n// Interface through which the current bound values of variables can be found.\npublic interface BindingEnvironment;\n// Rules employ builtins to do all tests and actions other than simple triple matches and triple creation.\npublic interface Builtin;\n// Exceptions thrown by runtime errors in executing rule system builtin operations.\npublic class BuiltinException extends JenaException;\n// \npublic abstract class BuiltinRegistry extends Object;\n// Common interface for all objects that can go into rules.\npublic interface ClauseEntry;\n// An inference graph that uses a mixture of forward and backward chaining rules.\npublic class FBRuleInfGraph extends BasicForwardRuleInfGraph implements BackwardRuleInfGraphI;\n// Structure used to wrap up pre-processed/compiled rule sets.\npublic static class FBRuleInfGraph.RuleStore extends Object;\n// Rule-based reasoner interface.\npublic class FBRuleReasoner extends Object implements RuleReasoner;\n// This interface collects together the operations on the InfGraph which are needed to support the forward rule engine.\npublic interface ForwardRuleInfGraphI extends InfGraph, SilentAddI;\n// A functor comprises a functor name and a list of arguments.\npublic class Functor extends Object implements ClauseEntry;\n// Datatype definition for functor-valued literals.\npublic class FunctorDatatype extends BaseDatatype;\n// A reasoner interface that is able to invoke any of the useful rule engine combinations.\npublic class GenericRuleReasoner extends FBRuleReasoner;\n// Class used as an enum for describing rule modes.\npublic static class GenericRuleReasoner.RuleMode extends Object;\n// Factory object for creating general rule reasoner instances.\npublic class GenericRuleReasonerFactory extends Object implements ReasonerFactory;\n", "des": "Provides a selection of simple rule engines for Jena inference models."}
{"index": 1659, "repo": "jena-core-4.9.0", "code": "package builtins\n\n// Bind the second argument to 1+ the first argument.\npublic class AddOne extends BaseBuiltin;\n// Assert the n^2 differtFrom pairs from a distinctMembers list\npublic class AssertDisjointPairs extends BaseBuiltin;\n// Dummy implementation of the Builtin interface that specific implementations can inherit from.\npublic abstract class BaseBuiltin extends Object implements Builtin;\n// Predicate used to check if a variable has been bound.\npublic class Bound extends BaseBuiltin;\n// CountLiteralValues(X, P, C) sets C to be the number of semantically distinct values for P on resource X.\npublic class CountLiteralValues extends BaseBuiltin;\n// Bind the third argument to the arithmetic difference between the first and second arguments.\npublic class Difference extends BaseBuiltin;\n// A variant of the \"remove\" builtin that will delete matched triples from the graph but will not trigger further rule processing for the removed triples.\npublic class Drop extends BaseBuiltin;\n// Check that the two args are semantically equal.\npublic class Equal extends BaseBuiltin;\n// Tests if the first argument is greater than or equal to the second.\npublic class GE extends BaseBuiltin;\n// Tests if the first argument is greater than the second.\npublic class GreaterThan extends BaseBuiltin;\n// Register a node as to be hidden from query result iterators.\npublic class Hide extends BaseBuiltin;\n// Tests the single argument to make sure it is blank node.\npublic class IsBNode extends BaseBuiltin;\n// Tests whether the first argument is an instance of the datatype defined by the resource in the second argument.\npublic class IsDType extends BaseBuiltin;\n// Tests the single argument to make sure it is not a Functor.\npublic class IsFunctor extends BaseBuiltin;\n// Tests the single argument to make sure it is a literal.\npublic class IsLiteral extends BaseBuiltin;\n// Tests if the first argument is less than or equal to the second.\npublic class LE extends BaseBuiltin;\n// Tests if the first argument is less than the second.\npublic class LessThan extends BaseBuiltin;\n// Returns true if the first argument is a list which contains the second argument.\npublic class ListContains extends BaseBuiltin;\n", "des": "Implementations of the Builtin class which provides primitive operations to the rule engines."}
{"index": 1660, "repo": "jena-core-4.9.0", "code": "package impl\n\n// Implementation of RuleContext for use in the backward chaining interpreter.\npublic class BBRuleContext extends Object implements RuleContext;\n// An implementation of the generic RuleContext interface used by the basic forward (BF) rule engine.\npublic class BFRuleContext extends Object implements RuleContext;\n// Provides a trail of possible variable bindings for a forward rule.\npublic class BindingStack extends Object implements BindingEnvironment;\n// An implementation of a binding environment that maintains a single array of bound values for the variables in a rule.\npublic class BindingVector extends Object implements BindingEnvironment;\n// A multi set of BindingVector's divided in buckets matching an unique combination of values at given indices managed by RETEQueue\npublic class BindingVectorMultiSet extends Object;\n// Represents a single frame in the LP interpreter's choice point stack, represents the OR part of the search tree.\npublic class ChoicePointFrame extends GenericChoiceFrame;\n// Frame in the LPInterpreter's control stack used to represent matching to the results of a tabled predicate.\npublic class ConsumerChoicePointFrame extends GenericTripleMatchFrame implements LPAgendaEntry, LPInterpreterState;\n// Represents a single frame in the LP interpreter's environment stack.\npublic class EnvironmentFrame extends FrameObject;\n// Extension of the normal AND-stack environment frame to support incremental derivation logging.\npublic class EnvironmentFrameWithDerivation extends EnvironmentFrame;\n// Base class for stack frame objects.\npublic class FrameObject extends Object;\n// The processing engine for forward production rules.\npublic class FRuleEngine extends Object implements FRuleEngineI;\n// Structure used to wrap up processed rule indexes.\npublic static class FRuleEngine.RuleStore extends Object;\n// Rule engines implement the internals of forward rule inference graphs and the forward part of hybrid graphs.\npublic interface FRuleEngineI;\n// Factory class for creating FRuleEngineI.\npublic class FRuleEngineIFactory extends Object;\n// A generator represents a set of memoized results for a single tabled subgoal.\npublic class Generator extends Object implements LPAgendaEntry, LPInterpreterContext;\n// Core properties of choice frames used use to represent the OR state of the backtracking search.\npublic class GenericChoiceFrame extends FrameObject;\n", "des": "Internal implementation objects used by the rule system interpreters and compilers."}
{"index": 1661, "repo": "jena-core-4.9.0", "code": "package transitiveReasoner\n\n// Uses two transitive graph caches to store a subclass and a subproperty lattice and use them within a larger inference graph.\npublic class TransitiveEngine extends Object;\n// Datastructure used to represent a closed transitive reflexive relation.\npublic class TransitiveGraphCache extends Object implements Finder;\n// Implementation of InfGraph used by the TransitiveReasoner.\npublic class TransitiveInfGraph extends BaseInfGraph;\n// A simple \"reasoner\" used to help with API development.\npublic class TransitiveReasoner extends Object implements Reasoner;\n// Factory class for creating blank instances of the transitive reasoner.\npublic class TransitiveReasonerFactory extends Object implements ReasonerFactory;\n", "des": "This package contains a reasoner which supports transitive-reflexive closure of subPropertyOf and subClassOf relations."}
{"index": 1662, "repo": "jena-core-4.9.0", "code": "package shared\n\n// Superclass of exceptions thrown when permissions do not allow an operation on a graph.\npublic class AccessDeniedException extends OperationDeniedException;\n// Exception to throw for a denied add operation\npublic class AddDeniedException extends AccessDeniedException;\n// Exception to throw when an attempt is made to create a named object (eg persistent model) when an object of that name already exists.\npublic class AlreadyExistsException extends JenaException;\n// The exception raised by reifyAs if a node is already bound to a single reified triple.\npublic class AlreadyReifiedException extends CannotReifyException;\n// Exception to throw when an assertion fails.\npublic class AssertionFailureException extends JenaException;\n// Exception to indicate that authentication is required for the operation to proceed.\npublic class AuthenticationRequiredException extends OperationDeniedException;\n// Exception to throw when a string cannot be converted to a Boolean value.\npublic class BadBooleanException extends JenaException;\n// Exception to throw when a literal required to be a single character isn't.\npublic class BadCharLiteralException extends JenaException;\n// Exception to throw if a model (or graph) is a bad description\npublic class BadDescriptionException extends JenaException;\n// Exception to throw if a Description contains multiple roots of a specified type.\npublic class BadDescriptionMultipleRootsException extends BadDescriptionException;\n// Exception to throw if a Description has no root of a specified type\npublic class BadDescriptionNoRootException extends BadDescriptionException;\n// \n@Deprecated public class BadURIException extends JenaException;\n// An exception to throw if an internal error is detected.\npublic class BrokenException extends JenaException;\n// \npublic class CannotCreateException extends OperationDeniedException;\n// Exception to throw when a character cannot be encoded into some context for some reason.\npublic class CannotEncodeCharacterException extends JenaException;\n// The exception thrown by reifyAs if a node is bound to bits and pieces of (an)other triple(s).\npublic class CannotReifyException extends JenaException;\n// Exception that may be thrown if an operation is attempted on a closed graph.\npublic class ClosedException extends JenaException;\n// An Exception indicating that Jena is not working because it is not correctly configured.\npublic class ConfigException extends JenaException;\n// Exception to throw if a delete is denied.\npublic class DeleteDeniedException extends AccessDeniedException;\n", "des": "This package defines some classes common to the Jena API and SPI levels, in particular the JenaException class from which all Jena-specific exceptions hang, and the interface PrefixMapping for translation to and from QNames."}
{"index": 1663, "repo": "jena-core-4.9.0", "code": "package impl\n\n// This class holds global, static, configuration parameters that affect the behaviour of the Jena API.\npublic class JenaParameters extends Object;\n// An implementation of PrefixMapping.\npublic class PrefixMappingImpl extends Object implements PrefixMapping;\n", "des": "This package provides \"standard\" implementations for the interfaces defined by .shared, notably an implementation of PrefixMapping."}
{"index": 1664, "repo": "jena-core-4.9.0", "code": "package util\n\n// This class provides a number of static methods which interact with java.nio.charset.Charset to analyze and transform the strings identifying character encodings.\npublic abstract class CharEncoding extends Object;\n// CollectionFactory - a central place for allocating sets and maps, mostly so that it's easy to plug in new implementations (eg trove).\npublic class CollectionFactory extends Object;\n// \npublic interface FileManager;\n// FileManager A FileManager provides access to named file-like resources by opening InputStreams to things in the filing system, by URL (http: and file:) and found by the classloader.\npublic class FileManagerImpl extends Object implements FileManager;\n// \npublic class FileUtils extends Object;\n// \npublic class IteratorCollection extends Object;\n// Create XML input methods.\npublic class JenaXMLInput extends Object;\n// Alternative locations for URIs.\npublic class LocationMapper extends Object;\n// Interface to things that open streams by some string reference\npublic interface Locator;\n// \n@Deprecated public class LocatorClassLoader extends Object implements Locator;\n// \n@Deprecated public class LocatorFile extends Object implements Locator;\n// \n@Deprecated public class LocatorURL extends Object implements Locator;\n// \n@Deprecated public class LocatorZip extends Object implements Locator;\n// \npublic abstract class ModelCollector extends Object implements IdentityFinishCollector.UnorderedIdentityFinishCollector<Model,Model>;\n// \npublic static class ModelCollector.ConcurrentModelCollector extends ModelCollector implements IdentityFinishCollector.ConcurrentUnorderedIdentityFinishCollector<Model,Model>;\n// \npublic static class ModelCollector.IntersectionModelCollector extends ModelCollector;\n// \npublic static class ModelCollector.UnionModelCollector extends ModelCollector;\n// Graph wrapper which provides normal access to an underlying graph but also maintains a snapshot of the triples it was last known to contain.\npublic class MonitorGraph extends WrappedGraph;\n// Model wrapper which provides normal access to an underlying model but also maintains a snapshot of the triples it was last known to contain.\npublic class MonitorModel extends ModelCom;\n// An extension to a standard map that supports one-to-many mappings: that is, there may be zero, one or many values corresponding to a given key.\npublic class OneToManyMap<From,To> extends Object implements Map<From,To>;\n", "des": "Miscellaneous collection of utility classes."}
{"index": 1665, "repo": "jena-core-4.9.0", "code": "package iterator\n\n// An iterator which should be closed after use.\npublic interface ClosableIterator<T> extends IteratorCloseable<T>;\n// An ExtendedIterator is a ClosableIterator on which other operations are defined for convenience in iterator composition: composition, filtering in, filtering out, and element mapping. NOTE that the result of these operations consumes the base iterator(s); they do not make independent copies.\npublic interface ExtendedIterator<T> extends ClosableIterator<T>;\n// Creates a sub-Iterator by filtering.\npublic class FilterIterator<T> extends WrappedIterator<T>;\n// An ExtendedIterator that is created lazily.\npublic abstract class LazyIterator<T> extends NiceIterator<T>;\n// An iterator that consumes an underlying iterator and maps its results before delivering them; supports remove if the underlying iterator does.\npublic class Map1Iterator<From,To> extends NiceIterator<To>;\n// Combines the actions of Map and Filter, mapping unacceptable objects to null and acceptable ones to their mapped value.\npublic interface MapFilter<R,S>;\n// A MapFilterIterator takes a MapFilter and an [Extended]Iterator and returns a new ExtendedIterator which delivers the sequence of all non-null elements MapFilter(X) for X from the base iterator.\npublic class MapFilterIterator<T,X> extends NiceIterator<X> implements ExtendedIterator<X>;\n// NiceIterator is the standard base class implementing ExtendedIterator.\npublic class NiceIterator<T> extends Object implements ExtendedIterator<T>;\n// An empty iterator.\npublic class NullIterator<T> extends NiceIterator<T>;\n// RandomOrderIterator - Reorders the elements returned by an Iterator.\npublic class RandomOrderIterator<T> extends WrappedIterator<T>;\n// A ClosableIterator that contains only one element\npublic class SingletonIterator<T> extends NiceIterator<T> implements ExtendedIterator<T>;\n// A Filter that filters out duplicate values.\npublic class UniqueFilter<T> extends Object implements Predicate<T>;\n// a WrappedIterator is an ExtendedIterator wrapping around a plain (or presented as plain) Iterator.\npublic class WrappedIterator<T> extends NiceIterator<T>;\n", "des": "A package for defining useful iterators and iterator operations, including concatenation, mapping, filtering, empty and singleton iterators, iterator wrappers, and the ExtendedIterator class used in many places in Jena."}
{"index": 1666, "repo": "jena-core-4.9.0", "code": "package vocabulary\n\n// The standard Activity Stream vocabulary.\npublic class AS extends Object;\n// \npublic class DC extends DC_11;\n// Dublin Core version 1.0 vocabulary.\npublic class DC_10 extends Object;\n// Vocabulary definitions from file:vocabularies/dublin-core_11.xml\npublic class DC_11 extends Object;\n// Constants for the W3C Data Catalog Vocabulary.\npublic class DCAT extends Object;\n// Vocabulary definitions from vocabularies/dublin-core_terms.xml\npublic class DCTerms extends Object;\n// Vocabulary definitions from vocabularies/dublin-core_types.xml\npublic class DCTypes extends Object;\n// Vocabulary definitions from Vocabularies/location-mapping-rdfs.n3\npublic class LocationMappingVocab extends Object;\n// The standard Open Annotation vocabulary.\npublic class OA extends Object;\n// Vocabulary definitions from file:vocabularies/ont-manager.rdf\npublic class OntDocManagerVocab extends Object;\n// Vocabulary definitions from file:vocabularies/ont-event.rdf\npublic class OntEventsVocab extends Object;\n// Constants for the W3C Organization Ontology.\npublic class ORG extends Object;\n// Vocabulary definitions from file:vocabularies/owl.owl\npublic class OWL extends Object;\n// OWL constants are used during Jena initialization.\npublic static class OWL.Init extends Object;\n// OWL2 vocabulary.\npublic class OWL2 extends Object;\n// The vocabulary used by WebOnt to encode results of test runs.\npublic class OWLResults extends Object;\n// The vocabulary used by the WebOnt working group to define test manifests.\npublic class OWLTest extends Object;\n// The standard RDF vocabulary.\npublic class RDF extends Object;\n// RDF constants are used during Jena initialization.\npublic static class RDF.Init extends Object;\n// The same items of vocabulary, but at the Node level, parked inside a nested class so that there's a simple way to refer to them.\npublic static final class RDF.Nodes extends Object;\n// RDFS vocabulary items\npublic class RDFS extends Object;\n// RDFS constants are used during Jena initialization.\npublic static class RDFS.Init extends Object;\n", "des": "A package containing constant classes with predefined constant objects for classes and properties defined in well known vocabularies."}
{"index": 1667, "repo": "spring-boot-cli-3.1.1", "code": "package cli\n\n// Default implementation of CommandFactory.\npublic class DefaultCommandFactory extends Object implements CommandFactory;\n// Spring Command Line Interface.\npublic final class SpringCli extends Object;\n", "des": "Main entry point of the Spring Boot CLI."}
{"index": 1668, "repo": "spring-boot-cli-3.1.1", "code": "package command\n\n// Abstract Command implementation.\npublic abstract class AbstractCommand extends Object implements Command;\n// A single command that can be run from the CLI.\npublic interface Command;\n// Runtime exception wrapper that defines additional CommandException.Options that are understood by the CommandRunner.\npublic class CommandException extends RuntimeException;\n// Specific options understood by the CommandRunner.\npublic static enum CommandException.Option extends Enum<CommandException.Option>;\n// Factory used to create CLI Commands.\n@FunctionalInterface public interface CommandFactory;\n// Main class used to run Commands.\npublic class CommandRunner extends Object implements Iterable<Command>;\n// An example that can be displayed in the help.\npublic class HelpExample extends Object;\n// Exception used to when the help command is called without arguments.\npublic class NoHelpCommandArgumentsException extends CommandException;\n// Exception used when a command is not found.\npublic class NoSuchCommandException extends CommandException;\n// Base class for a Command that parse options using an OptionHandler.\npublic abstract class OptionParsingCommand extends AbstractCommand;\n", "des": "Command infrastructure for the CLI."}
{"index": 1669, "repo": "spring-boot-cli-3.1.1", "code": "package core\n\n// Internal Command used for 'help' requests.\npublic class HelpCommand extends AbstractCommand;\n// Internal Command to provide hints for shell auto-completion.\npublic class HintCommand extends AbstractCommand;\n// Command to display the 'version' number.\npublic class VersionCommand extends AbstractCommand;\n", "des": "Core CLI commands."}
{"index": 1670, "repo": "spring-boot-cli-3.1.1", "code": "package encodepassword\n\n// Command to encode passwords for use with Spring Security.\npublic class EncodePasswordCommand extends OptionParsingCommand;\n", "des": "CLI command for password encoding."}
{"index": 1671, "repo": "spring-boot-cli-3.1.1", "code": "package init\n\n// Command that initializes a project using Spring initializr.\npublic class InitCommand extends OptionParsingCommand;\n// Exception with a message that can be reported to the user.\npublic class ReportableException extends RuntimeException;\n", "des": "CLI command for initializing a new application using Spring Initializr."}
{"index": 1672, "repo": "spring-boot-cli-3.1.1", "code": "package options\n\n// Delegate used by OptionParsingCommand to parse options and run the command.\npublic class OptionHandler extends Object;\n// Help for a specific option.\npublic interface OptionHelp;\n", "des": "Support classes for handling command line options."}
{"index": 1673, "repo": "spring-boot-cli-3.1.1", "code": "package shell\n\n// JLine Completer for Spring Boot Commands.\npublic class CommandCompleter extends jline.console.completer.StringsCompleter;\n// Command to change the Shell prompt.\npublic class PromptCommand extends AbstractCommand;\n// A shell for Spring Boot.\npublic class Shell extends Object;\n// Command to start a nested REPL shell.\npublic class ShellCommand extends AbstractCommand;\n// Exception used to stop the Shell.\npublic class ShellExitException extends CommandException;\n// Abstraction to manage a stack of prompts.\npublic class ShellPrompts extends Object;\n", "des": "Classes for running a nested shell in the CLI."}
{"index": 1674, "repo": "spring-boot-cli-3.1.1", "code": "package status\n\n// Encapsulation of the outcome of a command.\npublic final class ExitStatus extends Object;\n", "des": "CLI command status."}
{"index": 1675, "repo": "spring-boot-cli-3.1.1", "code": "package util\n\n// Simple logger used by the CLI.\npublic abstract class Log extends Object;\n", "des": "Utility classes for the CLI."}
{"index": 1676, "repo": "spring-oxm-6.0.11", "code": "package oxm\n\n// Subinterface of Marshaller that has support for generics.\npublic interface GenericMarshaller extends Marshaller;\n// Subinterface of Unmarshaller that has support for generics.\npublic interface GenericUnmarshaller extends Unmarshaller;\n// Defines the contract for Object XML Mapping Marshallers.\npublic interface Marshaller;\n// Base class for exception thrown when a marshalling or unmarshalling error occurs.\npublic abstract class MarshallingException extends XmlMappingException;\n// Exception thrown on marshalling failure.\npublic class MarshallingFailureException extends MarshallingException;\n// Exception that indicates that the cause cannot be distinguished further.\npublic class UncategorizedMappingException extends XmlMappingException;\n// Defines the contract for Object XML Mapping unmarshallers.\npublic interface Unmarshaller;\n// Exception thrown on unmarshalling failure.\npublic class UnmarshallingFailureException extends MarshallingException;\n// Exception thrown on marshalling validation failure.\npublic class ValidationFailureException extends XmlMappingException;\n// Root of the hierarchy of Object XML Mapping exceptions.\npublic abstract class XmlMappingException extends org.springframework.core.NestedRuntimeException;\n", "des": "Root package for Spring's O/X Mapping integration classes."}
{"index": 1677, "repo": "spring-oxm-6.0.11", "code": "package config\n\n// NamespaceHandler for the 'oxm' namespace.\npublic class OxmNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n", "des": "Provides an namespace handler for the Spring Object/XML namespace."}
{"index": 1678, "repo": "spring-oxm-6.0.11", "code": "package jaxb\n\n// Implementation of the GenericMarshaller interface for JAXB 2.2.\npublic class Jaxb2Marshaller extends Object implements MimeMarshaller, MimeUnmarshaller, GenericMarshaller, GenericUnmarshaller, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Package providing integration of JAXB with Spring's O/X Mapping support."}
{"index": 1679, "repo": "spring-oxm-6.0.11", "code": "package mime\n\n// Represents a container for MIME attachments Concrete implementations might adapt a SOAPMessage or an email message.\npublic interface MimeContainer;\n// Subinterface of Marshaller that can use MIME attachments to optimize storage of binary data.\npublic interface MimeMarshaller extends Marshaller;\n// Subinterface of Unmarshaller that can use MIME attachments to optimize storage of binary data.\npublic interface MimeUnmarshaller extends Unmarshaller;\n", "des": "Contains (un)marshallers optimized to store binary data in MIME attachments."}
{"index": 1680, "repo": "spring-oxm-6.0.11", "code": "package support\n\n// Abstract implementation of the Marshaller and Unmarshaller interface.\npublic abstract class AbstractMarshaller extends Object implements Marshaller, Unmarshaller;\n// Source implementation that uses a Marshaller.Can be constructed with a Marshaller and an object to be marshalled.\npublic class MarshallingSource extends SAXSource;\n// Convenient utility methods for dealing with SAX.\npublic abstract class SaxResourceUtils extends Object;\n", "des": "Provides generic support classes for using Spring's O/X Mapping integration within various scenario's."}
{"index": 1681, "repo": "spring-oxm-6.0.11", "code": "package xstream\n\n// XStream Converter that supports all classes, but throws exceptions for (un)marshalling.\npublic class CatchAllConverter extends Object implements com.thoughtworks.xstream.converters.Converter;\n// Implementation of the Marshaller interface for XStream.\npublic class XStreamMarshaller extends AbstractMarshaller implements org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean;\n", "des": "Package providing integration of XStream with Spring's O/X Mapping support."}
{"index": 1682, "repo": "spring-integration-mqtt-6.1.2", "code": "package xml\n\n// The MqttAdapter Message Driven Channel adapter parser.\npublic class MqttMessageDrivenChannelAdapterParser extends org.springframework.integration.config.xml.AbstractChannelAdapterParser;\n// The namespace handler for the MqttAdapter namespace.\npublic class MqttNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n// The parser for the MqttAdapter Outbound Channel Adapter.\npublic class MqttOutboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractOutboundChannelAdapterParser;\n", "des": "Provides parser classes to provide Xml namespace support for the MqttAdapter components."}
{"index": 1683, "repo": "spring-integration-mqtt-6.1.2", "code": "package core\n\n// Abstract class for MQTT client managers which can be a base for any common v3/v5 client manager implementation.\npublic abstract class AbstractMqttClientManager<T,C> extends Object implements ClientManager<T,C>, org.springframework.context.ApplicationEventPublisherAware;\n// A utility abstraction over MQTT client which can be used in any MQTT-related component without need to handle generic client callbacks, reconnects etc.\npublic interface ClientManager<T,C> extends org.springframework.context.SmartLifecycle, MqttComponent<C>;\n// A contract for a custom callback on connectComplete event from the client.\n@FunctionalInterface public static interface ClientManager.ConnectCallback;\n// Creates a default MqttClient and a set of options as configured.\npublic class DefaultMqttPahoClientFactory extends Object implements MqttPahoClientFactory;\n// \npublic static class DefaultMqttPahoClientFactory.Will extends Object;\n// A component that interfaces with MQTT.\npublic interface MqttComponent<T> extends org.springframework.beans.factory.BeanNameAware;\n// \npublic interface MqttPahoClientFactory;\n// An extension of MqttComponent for Eclipse Paho components.\npublic interface MqttPahoComponent extends MqttComponent<org.eclipse.paho.client.mqttv3.MqttConnectOptions>;\n// A client manager implementation for MQTT v3 protocol.\npublic class Mqttv3ClientManager extends AbstractMqttClientManager<org.eclipse.paho.client.mqttv3.IMqttAsyncClient,org.eclipse.paho.client.mqttv3.MqttConnectOptions> implements org.eclipse.paho.client.mqttv3.MqttCallbackExtended;\n", "des": "Provides core classes of the MqttAdapter module."}
{"index": 1684, "repo": "spring-integration-mqtt-6.1.2", "code": "package event\n\n// The MqttIntegrationEvent to notify about lost connection to the server.\npublic class MqttConnectionFailedEvent extends MqttIntegrationEvent;\n// Base class for Mqtt Events.\npublic abstract class MqttIntegrationEvent extends org.springframework.integration.events.IntegrationEvent;\n// An event emitted (when using aysnc) when the client indicates the message was delivered.\npublic class MqttMessageDeliveredEvent extends MqttMessageDeliveryEvent;\n// Base class for events related to message delivery.\npublic abstract class MqttMessageDeliveryEvent extends MqttIntegrationEvent;\n// An event emitted (when using async) when the client indicates that a message has been sent.\npublic class MqttMessageSentEvent extends MqttMessageDeliveryEvent;\n// The even representing an MQTT error occured during client interaction.\npublic class MqttProtocolErrorEvent extends MqttIntegrationEvent;\n// \npublic class MqttSubscribedEvent extends MqttIntegrationEvent;\n", "des": "ApplicationEvents generated by the mqtt module."}
{"index": 1685, "repo": "spring-integration-mqtt-6.1.2", "code": "package inbound\n\n// Abstract class for MQTT Message-Driven Channel Adapters.\n@ManagedResource @IntegrationManagedResource public abstract class AbstractMqttMessageDrivenChannelAdapter<T,C> extends org.springframework.integration.endpoint.MessageProducerSupport implements org.springframework.context.ApplicationEventPublisherAware, ClientManager.ConnectCallback;\n// Eclipse Paho Implementation.\npublic class MqttPahoMessageDrivenChannelAdapter extends AbstractMqttMessageDrivenChannelAdapter<org.eclipse.paho.client.mqttv3.IMqttAsyncClient,org.eclipse.paho.client.mqttv3.MqttConnectOptions> implements org.eclipse.paho.client.mqttv3.MqttCallbackExtended, MqttPahoComponent;\n// The AbstractMqttMessageDrivenChannelAdapter implementation for MQTT v5.\npublic class Mqttv5PahoMessageDrivenChannelAdapter extends AbstractMqttMessageDrivenChannelAdapter<org.eclipse.paho.mqttv5.client.IMqttAsyncClient,org.eclipse.paho.mqttv5.client.MqttConnectionOptions> implements org.eclipse.paho.mqttv5.client.MqttCallback, MqttComponent<org.eclipse.paho.mqttv5.client.MqttConnectionOptions>;\n", "des": "Provides inbound Spring Integration MqttAdapter components."}
{"index": 1686, "repo": "spring-integration-mqtt-6.1.2", "code": "package outbound\n\n// Abstract class for MQTT outbound channel adapters.\npublic abstract class AbstractMqttMessageHandler<T,C> extends org.springframework.integration.handler.AbstractMessageHandler implements org.springframework.integration.support.management.ManageableLifecycle, org.springframework.context.ApplicationEventPublisherAware;\n// Eclipse Paho Implementation.\npublic class MqttPahoMessageHandler extends AbstractMqttMessageHandler<org.eclipse.paho.client.mqttv3.IMqttAsyncClient,org.eclipse.paho.client.mqttv3.MqttConnectOptions> implements org.eclipse.paho.client.mqttv3.MqttCallback, MqttPahoComponent;\n// The AbstractMqttMessageHandler implementation for MQTT v5.\npublic class Mqttv5PahoMessageHandler extends AbstractMqttMessageHandler<org.eclipse.paho.mqttv5.client.IMqttAsyncClient,org.eclipse.paho.mqttv5.client.MqttConnectionOptions> implements org.eclipse.paho.mqttv5.client.MqttCallback, MqttComponent<org.eclipse.paho.mqttv5.client.MqttConnectionOptions>;\n", "des": "Provides Spring Integration components for doing outbound operations."}
{"index": 1687, "repo": "spring-integration-mqtt-6.1.2", "code": "package support\n\n// Default implementation for mapping to/from Messages.\npublic class DefaultPahoMessageConverter extends Object implements MqttMessageConverter, org.springframework.beans.factory.BeanFactoryAware;\n// Helper for typed access to incoming MQTT message headers.\npublic final class MqttHeaderAccessor extends Object;\n// The default HeaderMapper implementation for MQTT v5 message properties mapping.\npublic class MqttHeaderMapper extends Object implements org.springframework.integration.mapping.HeaderMapper<org.eclipse.paho.mqttv5.common.packet.MqttProperties>;\n// Spring Integration headers.\npublic final class MqttHeaders extends Object;\n// Extension of MessageConverter allowing the topic to be added as a header.\npublic interface MqttMessageConverter extends org.springframework.messaging.converter.MessageConverter;\n// MQTT Utilities.\npublic final class MqttUtils extends Object;\n", "des": "Provides various support classes used across Spring Integration MqttAdapter Components."}
{"index": 1688, "repo": "spring-data-couchbase-5.1.2", "code": "package config\n\n// Base class for Spring Data Couchbase configuration using JavaConfig.\n@Configuration public abstract class AbstractCouchbaseConfiguration extends Object;\n// Contains default bean names for Couchbase beans.\npublic class BeanNames extends Object;\n", "des": "This package contains all classes needed for specific configuration of Spring Data Couchbase."}
{"index": 1689, "repo": "spring-data-couchbase-5.1.2", "code": "package core\n\n// Base shared by Reactive and non-Reactive TemplateSupport\n@Internal public abstract class AbstractTemplateSupport extends Object;\n// Defines the callback which will be wrapped and executed on a bucket.\npublic interface CollectionCallback<T>;\n// A Couchbase specific integrity violation exception, thrown as a result of failing db operations.\npublic class CouchbaseDataIntegrityViolationException extends DataIntegrityViolationException;\n// Simple PersistenceExceptionTranslator for Couchbase.\npublic class CouchbaseExceptionTranslator extends Object implements PersistenceExceptionTranslator;\n// Defines common operations on the Couchbase data source, most commonly implemented by CouchbaseTemplate.\npublic interface CouchbaseOperations extends FluentCouchbaseOperations;\n// An DataRetrievalFailureException that denotes an error during a query (N1QL).\npublic class CouchbaseQueryExecutionException extends DataRetrievalFailureException;\n// Implements lower-level couchbase operations on top of the SDK with entity mapping capabilities.\npublic class CouchbaseTemplate extends Object implements CouchbaseOperations, ApplicationContextAware;\n// Insert Operations\npublic interface ExecutableExistsByIdOperation;\n// Provides methods for constructing KV exists operations in a fluent way.\npublic static interface ExecutableExistsByIdOperation.ExecutableExistsById extends ExecutableExistsByIdOperation.ExistsByIdInScope;\n// Fluent method to specify the collection.\npublic static interface ExecutableExistsByIdOperation.ExistsByIdInCollection<T> extends ExecutableExistsByIdOperation.ExistsByIdWithOptions<T>, InCollection<T>;\n// Fluent method to specify the scope.\npublic static interface ExecutableExistsByIdOperation.ExistsByIdInScope<T> extends ExecutableExistsByIdOperation.ExistsByIdInCollection<T>, InScope<T>;\n// Fluent method to specify options.\npublic static interface ExecutableExistsByIdOperation.ExistsByIdWithOptions<T> extends ExecutableExistsByIdOperation.TerminatingExistsById, WithExistsOptions<T>;\n// Terminating operations invoking the actual execution.\npublic static interface ExecutableExistsByIdOperation.TerminatingExistsById extends OneAndAllExists;\n// \npublic class ExecutableExistsByIdOperationSupport extends Object implements ExecutableExistsByIdOperation;\n// FindByAnalytics Operations\npublic interface ExecutableFindByAnalyticsOperation;\n// \npublic static interface ExecutableFindByAnalyticsOperation.ExecutableFindByAnalytics<T> extends ExecutableFindByAnalyticsOperation.FindByAnalyticsWithProjection<T>;\n", "des": "This package contains the specific implementations and core classes for Spring Data Couchbase internals."}
{"index": 1690, "repo": "spring-data-couchbase-5.1.2", "code": "package convert\n\n// An abstract CouchbaseConverter that provides the basics for the MappingCouchbaseConverter.\npublic abstract class AbstractCouchbaseConverter extends Object implements CouchbaseConverter, InitializingBean;\n// Reading Converter factory for Enums.\n@ReadingConverter public class BooleanToEnumConverterFactory extends Object implements ConverterFactory<Boolean,Enum>;\n// PropertyValueConverter throws this when cannot convert the property.\npublic class ConverterHasNoConversion extends RuntimeException;\n// ValueConversionContext that allows to delegate read/write to an underlying CouchbaseConverter.\npublic class CouchbaseConversionContext extends Object implements ValueConversionContext<CouchbasePersistentProperty>;\n// Marker interface for the converter, identifying the types to and from that can be converted.\npublic interface CouchbaseConverter extends EntityConverter<CouchbasePersistentEntity<?>,CouchbasePersistentProperty,Object,CouchbaseDocument>, CouchbaseWriter<Object,CouchbaseDocument>, EntityReader<Object,CouchbaseDocument>;\n// Value object to capture custom conversion.\npublic class CouchbaseCustomConversions extends CustomConversions;\n// CouchbaseCustomConversions.CouchbaseConverterConfigurationAdapter encapsulates creation of CustomConversions.ConverterConfiguration with CouchbaseDB specifics.\npublic static class CouchbaseCustomConversions.CouchbaseConverterConfigurationAdapter extends Object;\n// A property accessor for document properties.\npublic class CouchbaseDocumentPropertyAccessor extends MapAccessor;\n// Helper class to register JSR-310 specific Converter implementations.\npublic final class CouchbaseJsr310Converters extends Object;\n// \n@WritingConverter public static enum CouchbaseJsr310Converters.DurationToStringConverter extends Enum<CouchbaseJsr310Converters.DurationToStringConverter> implements Converter<Duration,String>;\n// \n@WritingConverter public static enum CouchbaseJsr310Converters.InstantToLongConverter extends Enum<CouchbaseJsr310Converters.InstantToLongConverter> implements Converter<Instant,Long>;\n// \n@WritingConverter public static enum CouchbaseJsr310Converters.LocalDateTimeToLongConverter extends Enum<CouchbaseJsr310Converters.LocalDateTimeToLongConverter> implements Converter<LocalDateTime,Long>;\n// \n@WritingConverter public static enum CouchbaseJsr310Converters.LocalDateToLongConverter extends Enum<CouchbaseJsr310Converters.LocalDateToLongConverter> implements Converter<LocalDate,Long>;\n", "des": "This package contains classes used for entity-to-JSON conversions, type mapping and writing."}
{"index": 1691, "repo": "spring-data-couchbase-5.1.2", "code": "package translation\n\n// A Jackson JSON Translator that implements the TranslationService contract.\npublic class JacksonTranslationService extends Object implements TranslationService, InitializingBean;\n// Defines a translation service to encode/decode responses into the CouchbaseStorable format.\npublic interface TranslationService;\n", "des": "This package contains a service interface to translate entities to a Couchbase storable format, and its implementations."}
{"index": 1692, "repo": "spring-data-couchbase-5.1.2", "code": "package mapping\n\n// The representation of a persistent entity.\npublic class BasicCouchbasePersistentEntity<T> extends BasicPersistentEntity<T,CouchbasePersistentProperty> implements CouchbasePersistentEntity<T>, EnvironmentAware;\n// Implements annotated property representations of a given Field instance.\npublic class BasicCouchbasePersistentProperty extends AnnotationBasedPersistentProperty<CouchbasePersistentProperty> implements CouchbasePersistentProperty;\n// A CouchbaseDocument is an abstract representation of a document stored inside Couchbase Server.\npublic class CouchbaseDocument extends Object implements CouchbaseStorable;\n// A CouchbaseList is an abstract list that represents an array stored in a (most of the times JSON) document.\npublic class CouchbaseList extends Object implements CouchbaseStorable;\n// Default implementation of a MappingContext for Couchbase using BasicCouchbasePersistentEntity and BasicCouchbasePersistentProperty as primary abstractions.\npublic class CouchbaseMappingContext extends AbstractMappingContext<BasicCouchbasePersistentEntity<?>,CouchbasePersistentProperty> implements ApplicationContextAware;\n// Represents an entity that can be persisted which contains 0 or more properties.\npublic interface CouchbasePersistentEntity<T> extends PersistentEntity<T,CouchbasePersistentProperty>;\n// Represents a property part of an entity that needs to be persisted.\npublic interface CouchbasePersistentProperty extends PersistentProperty<CouchbasePersistentProperty>;\n// \npublic abstract class CouchbaseSimpleTypes extends Object;\n// Marker Interface to identify either a CouchbaseDocument or a CouchbaseList.\npublic interface CouchbaseStorable;\n// Identifies a domain object to be persisted to Couchbase.\n@Inherited @Retention(RUNTIME) @Target(TYPE) @ScanConsistency public @interface Document;\n// Durability annotation\n@Inherited @Retention(RUNTIME) @Target({TYPE,ANNOTATION_TYPE}) public @interface Durability;\n// Annotation to define a field to be substituted for META().expiration in a query\n@Documented @Retention(RUNTIME) @Target({FIELD,ANNOTATION_TYPE}) public @interface Expiration;\n// Expiry annotation\n@Inherited @Retention(RUNTIME) @Target({TYPE,ANNOTATION_TYPE}) public @interface Expiry;\n// Annotation to define custom metadata for document fields.\n@Documented @Retention(RUNTIME) @Target({FIELD,METHOD,ANNOTATION_TYPE}) public @interface Field;\n", "des": "This package contains interfaces and annotations relative to object-json mapping and the notion of a Couchbase Storable."}
{"index": 1693, "repo": "spring-data-couchbase-5.1.2", "code": "package event\n\n// Base class to implement domain class specific ApplicationListeners.\npublic class AbstractCouchbaseEventListener<E> extends Object implements ApplicationListener<CouchbaseMappingEvent<?>>;\n// Callback being invoked after a domain object is materialized from a CouchbaseDocument when reading results.\n@FunctionalInterface public interface AfterConvertCallback<T> extends EntityCallback<T>;\n// \npublic class AfterDeleteEvent<E> extends CouchbaseMappingEvent<E>;\n// \npublic class AfterSaveEvent<E> extends CouchbaseMappingEvent<E>;\n// EntityCallback to populate auditing related fields on an entity about to be saved.\npublic class AuditingEntityCallback extends Object implements BeforeConvertCallback<Object>, AfterConvertCallback<Object>, Ordered;\n// Event listener to populate auditing related fields on an entity about to be saved.\npublic class AuditingEventListener extends Object implements ApplicationListener<CouchbaseMappingEvent<Object>>;\n// Callback being invoked before a domain object is converted to be persisted.\n@FunctionalInterface public interface BeforeConvertCallback<T> extends EntityCallback<T>;\n// \npublic class BeforeConvertEvent<E> extends CouchbaseMappingEvent<E>;\n// \npublic class BeforeDeleteEvent<E> extends CouchbaseMappingEvent<E>;\n// \npublic class BeforeSaveEvent<E> extends CouchbaseMappingEvent<E>;\n// A mapping event.\npublic class CouchbaseMappingEvent<T> extends ApplicationEvent;\n// AApplicationListener for Couchbase mapping events logging the events.\npublic class LoggingEventListener extends AbstractCouchbaseEventListener<Object>;\n// Callback being invoked after a domain object is materialized from a CouchbaseDocument when reading results.\n@FunctionalInterface public interface ReactiveAfterConvertCallback<T> extends EntityCallback<T>;\n// Reactive EntityCallback to populate auditing related fields on an entity about to be saved.\npublic class ReactiveAuditingEntityCallback extends Object implements ReactiveBeforeConvertCallback<Object>, ReactiveAfterConvertCallback<Object>, Ordered;\n// Callback being invoked before a domain object is converted to be persisted.\n@FunctionalInterface public interface ReactiveBeforeConvertCallback<T> extends EntityCallback<T>;\n// javax.validation dependant entities validator.\npublic class ValidatingCouchbaseEventListener extends AbstractCouchbaseEventListener<Object>;\n", "des": "This package contains various events that are emitted during the lifecycle of a Spring Data entity."}
{"index": 1694, "repo": "spring-data-couchbase-5.1.2", "code": "package query\n\n// \npublic class AnalyticsQuery extends Object;\n// Enumeration of different consistency configurations to be used by the queries generated by the framework.\npublic enum Consistency extends Enum<Consistency>;\n// \n@Documented @Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Deprecated public @interface Dimensional;\n// Setting for specify when to fetch the associated entities\npublic enum FetchType extends Enum<FetchType>;\n// Hash side to specify hash join.\npublic enum HashSide extends Enum<HashSide>;\n// Meta-data for Query instances.\npublic class Meta extends Object;\n// \npublic static enum Meta.MetaKey extends Enum<Meta.MetaKey>;\n// A N1QL Query Expression\npublic class N1QLExpression extends Object;\n// This annotation is targeted for entity field which is a list of the associated entities fetched by ANSI Join across the entities available from Couchbase Server 5.5\n@Target(FIELD) @Retention(RUNTIME) public @interface N1qlJoin;\n// \n@Deprecated @Target(TYPE) @Retention(RUNTIME) public @interface N1qlPrimaryIndexed;\n// \npublic class N1QLQuery extends Query;\n// \n@Target(TYPE) @Retention(RUNTIME) @Deprecated public @interface N1qlSecondaryIndexed;\n// Methods for building Options objects for Couchbae APIs.\npublic class OptionsBuilder extends Object;\n// \npublic class Query extends Object;\n// \npublic class QueryCriteria extends Object implements QueryCriteriaDefinition;\n// \npublic static enum QueryCriteria.ChainOperator extends Enum<QueryCriteria.ChainOperator>;\n// \npublic interface QueryCriteriaDefinition;\n// Query created from the string in @Query annotation in the repository interface.\npublic class StringQuery extends Query;\n// \n@Documented @Target(METHOD) @Retention(RUNTIME) @Deprecated public @interface View;\n// \n@Target(TYPE) @Retention(RUNTIME) @Deprecated public @interface ViewIndexed;\n// Annotation to set the scan consistency of N1QL queries with Couchbase.\n@Documented @Target(METHOD) @Retention(RUNTIME) public @interface WithConsistency;\n", "des": "This package contains annotations and classes relative to querying with Couchbase (whether through views or N1QL) and the associated indexes."}
{"index": 1695, "repo": "spring-data-couchbase-5.1.2", "code": "package repository\n\n// Collection Annotation\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE,TYPE}) @Documented public @interface Collection;\n// Couchbase specific Repository interface.\n@NoRepositoryBean public interface CouchbaseRepository<T,ID> extends PagingAndSortingRepository<T,ID>, CrudRepository<T,ID>;\n// The generic parameter needs to be REPO which is either a CouchbaseRepository parameterized on T,ID or a ReactiveCouchbaseRepository parameterized on T,ID. i.e.: interface AirportRepository extends CouchbaseRepository<Airport, String>, DynamicProxyable<AirportRepository>\npublic interface DynamicProxyable<REPO>;\n// Scope Annotation\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE,TYPE}) @Documented public @interface Options;\n// Annotation to support the use of N1QL queries with Couchbase.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented public @interface Query;\n// Couchbase-specific ReactiveSortingRepository implementation.\n@NoRepositoryBean public interface ReactiveCouchbaseRepository<T,ID> extends ReactiveSortingRepository<T,ID>, ReactiveCrudRepository<T,ID>;\n// Scan Consistency Annotation\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE,TYPE}) @Documented public @interface ScanConsistency;\n// Scope Annotation\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE,TYPE}) @Documented public @interface Scope;\n", "des": "This package contains the Couchbase interfaces to support the Spring Data repository abstraction."}
{"index": 1696, "repo": "spring-data-couchbase-5.1.2", "code": "package config\n\n// \npublic class CouchbaseRepositoriesRegistrar extends RepositoryBeanDefinitionRegistrarSupport;\n// \npublic class CouchbaseRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport;\n// Annotation to activate Couchbase repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(CouchbaseRepositoriesRegistrar.class) public @interface EnableCouchbaseRepositories;\n// Annotation to activate reactive couchbase repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(ReactiveCouchbaseRepositoriesRegistrar.class) public @interface EnableReactiveCouchbaseRepositories;\n// \npublic class ReactiveCouchbaseRepositoriesRegistrar extends RepositoryBeanDefinitionRegistrarSupport;\n// \npublic class ReactiveCouchbaseRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport;\n// \npublic class ReactiveRepositoryOperationsMapping extends Object;\n// A utility class for configuration allowing to tell which CouchbaseOperations should be backing repositories.\npublic class RepositoryOperationsMapping extends Object;\n", "des": "This package contains the support classes to configure repositories in the context of Couchbase."}
{"index": 1697, "repo": "spring-data-couchbase-5.1.2", "code": "package query\n\n// RepositoryQuery implementation for Couchbase.\npublic abstract class AbstractCouchbaseQuery extends AbstractCouchbaseQueryBase<CouchbaseOperations> implements RepositoryQuery;\n// RepositoryQuery implementation for Couchbase.\npublic abstract class AbstractCouchbaseQueryBase<CouchbaseOperationsType> extends Object implements RepositoryQuery;\n// Abstract base for all Couchbase RepositoryQuery.\npublic abstract class AbstractN1qlBasedQuery extends Object implements RepositoryQuery;\n// Base class for reactive RepositoryQuery implementations for Couchbase.\npublic abstract class AbstractReactiveCouchbaseQuery extends AbstractCouchbaseQueryBase<ReactiveCouchbaseOperations> implements RepositoryQuery;\n// An Iterator<Object> that converts values to their stored Class if warranted.\npublic class ConvertingIterator extends Object implements Iterator<Object>;\n// Marker interface for the Couchbase Entity Information.\npublic interface CouchbaseEntityInformation<T,ID> extends EntityInformation<T,ID>;\n// Extend PartTree to parse out distinct fields\npublic class CouchbasePartTree extends PartTree;\n// Represents a query method with couchbase extensions, allowing to discover if View-based query or N1QL-based query must be used.\npublic class CouchbaseQueryMethod extends QueryMethod;\n// \n@Deprecated public class CouchbaseRepositoryQuery extends Object implements RepositoryQuery;\n// An utility entity that allows to extract total row count out of a COUNT(*) N1QL query.\npublic class CountFragment extends Object;\n// \npublic class N1qlCountQueryCreator extends OldN1qlQueryCreator;\n// N1qlMutateQueryCreator allows to create queries for delete operations.\npublic class N1qlMutateQueryCreator extends AbstractQueryCreator<N1QLExpression,N1QLExpression> implements PartTreeN1qlQueryCreator;\n// \npublic class N1qlQueryCreator extends AbstractQueryCreator<Query,QueryCriteria>;\n// \n@Deprecated public class N1qlRepositoryQueryExecutor extends Object;\n// This Query Creator is responsible for parsing a PartTree (representing a method name) into the WHERE clause of a N1QL query.\npublic class OldN1qlQueryCreator extends AbstractQueryCreator<N1QLExpression,N1QLExpression> implements PartTreeN1qlQueryCreator;\n// RepositoryQuery implementation for Couchbase.\npublic class PartTreeCouchbaseQuery extends AbstractCouchbaseQuery;\n", "des": "This package contains classes related to query derivation and concrete ways of querying couchbase."}
{"index": 1698, "repo": "spring-data-couchbase-5.1.2", "code": "package support\n\n// A default PointInShapeEvaluator implementation based on the JDK's java.awt.geom classes.\npublic class AwtPointInShapeEvaluator extends PointInShapeEvaluator;\n// Utility class to deal with geo/dimensional indexed data and queries.\npublic class GeoUtils extends Object;\n// Utils for creating part tree expressions\npublic class N1qlQueryCreatorUtils extends Object;\n// Utility class to deal with constructing well formed N1QL queries around Spring Data entities, so that the framework can use N1QL to find such entities (eg. restrict the bucket search to a particular type).\npublic class N1qlUtils extends Object;\n// PointInShapeEvaluator can be used to tell if a particular Point is contained by a Polygon or Circle.\npublic abstract class PointInShapeEvaluator extends Object;\n", "des": "This package contains support classes for query derivation and other ways of querying couchbase (helper classes)."}
{"index": 1699, "repo": "spring-data-couchbase-5.1.2", "code": "package support\n\n// BasicQuery for Querydsl\npublic class BasicQuery extends Query;\n// Annotation processor to create Querydsl query types for QueryDsl annotated classes.\n@SupportedAnnotationTypes({\"com.querydsl.core.annotations.*\",\"org.springframework.data.couchbase.core.mapping.*\"}) @SupportedSourceVersion(RELEASE_6) public class CouchbaseAnnotationProcessor extends com.querydsl.apt.AbstractQuerydslProcessor;\n// Common base for SimpleCouchbaseRepository and SimpleReactiveCouchbaseRepository\npublic class CouchbaseRepositoryBase<T,ID> extends Object;\n// Factory to create SimpleCouchbaseRepository instances.\npublic class CouchbaseRepositoryFactory extends RepositoryFactorySupport;\n// The factory bean to create repositories.\npublic class CouchbaseRepositoryFactoryBean<T extends Repository<S,ID>,S,ID extends Serializable> extends RepositoryFactoryBeanSupport<T,S,ID>;\n// \npublic interface CrudMethodMetadata;\n// DB references\npublic class DBRef extends Object;\n// Invocation Handler for scope/collection/options proxy for repositories\npublic class DynamicInvocationHandler<T> extends Object implements InvocationHandler;\n// Entity Information container.\npublic class MappingCouchbaseEntityInformation<T,ID> extends PersistentEntityInformation<T,ID> implements CouchbaseEntityInformation<T,ID>;\n// Couchbase-specific QuerydslPredicateExecutor that allows execution Predicates in various forms.\npublic class QuerydslCouchbasePredicateExecutor<T> extends QuerydslPredicateExecutorSupport<T> implements QuerydslPredicateExecutor<T>;\n// \npublic class QuerydslPredicateExecutorSupport<T> extends Object;\n// \npublic class ReactiveCouchbaseRepositoryFactory extends ReactiveRepositoryFactorySupport;\n// \npublic class ReactiveCouchbaseRepositoryFactoryBean<T extends Repository<S,ID>,S,ID extends Serializable> extends RepositoryFactoryBeanSupport<T,S,ID>;\n// Repository base implementation for Couchbase.\npublic class SimpleCouchbaseRepository<T,ID> extends CouchbaseRepositoryBase<T,ID> implements CouchbaseRepository<T,ID>;\n// Reactive repository base implementation for Couchbase.\npublic class SimpleReactiveCouchbaseRepository<T,ID> extends CouchbaseRepositoryBase<T,ID> implements ReactiveCouchbaseRepository<T,ID>;\n", "des": "This package contains the Couchbase implementations to support the Spring Data repository abstraction."}
{"index": 1700, "repo": "drill-common-1.21.1", "code": "package common\n\n// A class similar to Pointer<>, but with features unique to holding AutoCloseable pointers.\npublic final class AutoCloseablePointer<T extends AutoCloseable> extends Object implements AutoCloseable;\n// Utilities for AutoCloseable classes.\npublic class AutoCloseables extends Object;\n// \npublic static interface AutoCloseables.Closeable extends AutoCloseable;\n// \npublic class CatastrophicFailure extends Object;\n// Collects one or more exceptions that may occur, using suppressed exceptions.\npublic class DeferredException extends Object implements AutoCloseable;\n// Provides functionality comparable to Guava's Closeables for AutoCloseables.\npublic class DrillAutoCloseables extends Object;\n// Process events serially. Our use of listeners that deliver events directly can sometimes cause problems when events are delivered recursively in the middle of event handling by the same object.\npublic abstract class EventProcessor<T> extends Object;\n// Utility class that can be used to log activity within a class for later logging and debugging.\npublic class HistoricalLog extends Object;\n// \npublic final class KerberosUtil extends Object;\n// Builds a string in Drill's \"plan string\" format: that shown in the text version of EXPLAIN PLAN FOR output.\npublic class PlanStringBuilder extends Object;\n// A wrapper for Runnables that provides a hook to do cleanup.\npublic abstract class SelfCleaningRunnable extends Object implements Runnable;\n// Convenient way of obtaining and manipulating stack traces for debugging.\npublic class StackTrace extends Object;\n// This class attempts to infer the data type of an unknown data type.\npublic class Typifier extends Object;\n// Encapsulates version information and provides ordering\npublic final class Version extends Object implements Comparable<Version>;\n", "des": "Logical (execution-engine-independent) element definitions."}
{"index": 1701, "repo": "drill-common-1.21.1", "code": "package config\n\n// \npublic interface ConfigConstants;\n// Interface that defines implementation to get all the config files names for default, module specific, distribution specific and override files.\npublic interface ConfigFileInfo;\n// \npublic interface ConfigProvider;\n// \npublic class DrillConfig extends Object;\n// \npublic class DrillExecConfigFileInfo extends Object implements ConfigFileInfo;\n// \npublic final class DrillProperties extends Properties;\n// \npublic class DrillRMConfigFileInfo extends Object implements ConfigFileInfo;\n", "des": "Internal configuration state definitions."}
{"index": 1702, "repo": "drill-common-1.21.1", "code": "package exceptions\n\n// Represents an additional level of error context detail that adds to that provided by some outer context.\npublic class ChildErrorContext extends Object implements CustomErrorContext;\n// Generic mechanism to pass error context throughout the row set mechanism and scan framework.\npublic interface CustomErrorContext;\n// \npublic class DrillConfigurationException extends DrillException;\n// \npublic class DrillError extends Error;\n// \npublic class DrillException extends Exception;\n// \npublic class DrillIOException extends IOException;\n// \npublic class DrillRuntimeException extends RuntimeException;\n// \npublic class EmptyErrorContext extends Object implements CustomErrorContext;\n// Utility class that handles error message generation from protobuf error objects.\npublic class ErrorHelper extends Object;\n// Special exception to be caught by caller, who is supposed to free memory by spilling and try again\npublic class RetryAfterSpillException extends Exception;\n// Base class for all user exception.\npublic class UserException extends DrillRuntimeException;\n// Builder class for DrillUserException.\npublic static class UserException.Builder extends Object;\n// Provides utilities (such as retrieving hints) to add more context to UserExceptions.\npublic class UserExceptionUtils extends Object;\n// Wraps a DrillPBError object so we don't need to rebuilt it multiple times when sending it to the client.\npublic class UserRemoteException extends UserException;\n", "des": "Various exceptions used in logical, physical and execution contexts."}
{"index": 1703, "repo": "drill-common-1.21.1", "code": "package types\n\n// Enum that contains two boolean types: TRUE and FALSE.\npublic enum BooleanType extends Enum<BooleanType>;\n// \npublic class Types extends Object;\n", "des": "Logical data types."}
{"index": 1704, "repo": "drill-common-1.21.1", "code": "package util\n\n// \npublic class ConstructorChecker extends Object;\n// \npublic class DataInputInputStream extends InputStream;\n// \npublic class DataOutputOutputStream extends OutputStream;\n// Extends regular Instant.parse(java.lang.CharSequence) with more formats.\npublic class DrillDateTimeFormatter extends Object;\n// Utility class which contain methods for conversion Drill ProtoBuf Error and Throwable\npublic class DrillExceptionUtil extends Object;\n// \npublic class DrillFileUtils extends Object;\n// \npublic class DrillStringUtils extends Object;\n// \npublic class GuavaPatcher extends Object;\n// Utility class which contain methods for conversion guava and shaded guava classes.\npublic class GuavaUtils extends Object;\n// \npublic class ProtobufPatcher extends Object;\n", "des": "Utilities useful across packages."}
{"index": 1705, "repo": "spring-integration-jmx-6.1.2", "code": "package jmx\n\n// A MessageSource implementation that retrieves the current value of a JMX attribute each time AbstractMessageSource.receive() is invoked.\npublic class AttributePollingMessageSource extends org.springframework.integration.endpoint.AbstractMessageSource<Object>;\n// \npublic class DefaultMBeanAttributeFilter extends Object implements MBeanAttributeFilter;\n// \npublic class DefaultMBeanObjectConverter extends Object implements MBeanObjectConverter;\n// Constants for JMX related Message Header keys.\npublic abstract class JmxHeaders extends Object;\n// \n@FunctionalInterface public interface MBeanAttributeFilter;\n// \n@FunctionalInterface public interface MBeanObjectConverter;\n// A MessageSource implementation that retrieves a snapshot of a filtered subset of the MBean tree.\npublic class MBeanTreePollingMessageSource extends org.springframework.integration.endpoint.AbstractMessageSource<Object>;\n// \npublic class NamedFieldsMBeanAttributeFilter extends Object implements MBeanAttributeFilter;\n// A JMX NotificationListener implementation that will send Messages containing the JMX Notification instances as their payloads.\npublic class NotificationListeningMessageProducer extends org.springframework.integration.endpoint.MessageProducerSupport implements NotificationListener, org.springframework.context.ApplicationListener<org.springframework.context.event.ContextRefreshedEvent>;\n// An AbstractMessageHandler implementation to publish an incoming message as a JMX Notification.\npublic class NotificationPublishingMessageHandler extends org.springframework.integration.handler.AbstractMessageHandler;\n// Simple class used for the actual MBean instances to be registered.\n@ManagedResource @IntegrationManagedResource public static class NotificationPublishingMessageHandler.PublisherDelegate extends Object implements org.springframework.jmx.export.notification.NotificationPublisherAware;\n// \npublic class NotNamedFieldsMBeanAttributeFilter extends Object implements MBeanAttributeFilter;\n// A MessageHandler implementation for invoking JMX operations based on the Message sent to its AbstractMessageHandler.handleMessage(Message) method.\npublic class OperationInvokingMessageHandler extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n", "des": "Base package for JMX support."}
{"index": 1706, "repo": "spring-integration-jmx-6.1.2", "code": "package config\n\n// \npublic class AttributePollingChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n// Enables default exporting for Spring Integration components in an existing application, as well as well all @ManagedResource annotated beans.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(IntegrationMBeanExportConfiguration.class) public @interface EnableIntegrationMBeanExport;\n// @Configuration class that registers a IntegrationMBeanExporter bean.\n@Configuration(proxyBeanMethods=false) public class IntegrationMBeanExportConfiguration extends Object implements org.springframework.context.annotation.ImportAware, org.springframework.context.EnvironmentAware, org.springframework.beans.factory.BeanFactoryAware;\n// The JMX Integration infrastructure beanFactory initializer.\npublic class JmxIntegrationConfigurationInitializer extends Object implements org.springframework.integration.config.IntegrationConfigurationInitializer;\n// Namespace handler for Spring Integration's jmx namespace.\npublic class JmxNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n// Parser for the 'mbean-export' element of the integration JMX namespace.\npublic class MBeanExporterParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;\n// \npublic class MBeanTreePollingChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n// \npublic class NotificationListeningChannelAdapterParser extends org.springframework.integration.config.xml.AbstractChannelAdapterParser;\n// \npublic class NotificationPublishingChannelAdapterParser extends org.springframework.integration.config.xml.AbstractOutboundChannelAdapterParser;\n// \npublic class OperationInvokingChannelAdapterParser extends org.springframework.integration.config.xml.AbstractOutboundChannelAdapterParser;\n// \npublic class OperationInvokingOutboundGatewayParser extends org.springframework.integration.config.xml.AbstractConsumerEndpointParser;\n", "des": "Provides classes for configuration - parsers, namespace handlers."}
{"index": 1707, "repo": "spring-integration-jmx-6.1.2", "code": "package monitor\n\n// The AnnotationJmxAttributeSource extension to resolve ManagedResources via IntegrationManagedResource on classes.\npublic class IntegrationJmxAttributeSource extends org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource;\n// MBean exporter for Spring Integration components in an existing application.\n@ManagedResource public class IntegrationMBeanExporter extends org.springframework.jmx.export.MBeanExporter implements org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor;\n", "des": "Provides classes related to Spring Integration managed resources."}
{"index": 1708, "repo": "spring-boot-test-3.1.1", "code": "package context\n\n// Utility class to find a class annotated with a particular annotation in a hierarchy.\npublic final class AnnotatedClassFinder extends Object;\n// ApplicationContextInitializer that can be used with the ContextConfiguration.initializers() to trigger loading of ConfigData such as application.properties.\npublic class ConfigDataApplicationContextInitializer extends Object implements org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>;\n// \n@FunctionalInterface @Deprecated(since=\"3.0.0\", forRemoval=true) public interface DefaultTestExecutionListenersPostProcessor;\n// Test URLClassLoader that can filter the classes and resources it can load.\npublic class FilteredClassLoader extends URLClassLoader implements org.springframework.core.SmartClassLoader;\n// Filter to restrict the classes that can be loaded.\npublic static final class FilteredClassLoader.ClassFilter extends Object implements Predicate<String>;\n// Filter to restrict the resources that can be loaded.\npublic static final class FilteredClassLoader.ClassPathResourceFilter extends Object implements Predicate<String>;\n// Filter to restrict the packages that can be loaded.\npublic static final class FilteredClassLoader.PackageFilter extends Object implements Predicate<String>;\n// Encapsulates the merged context configuration declared on a test class and all of its superclasses for a reactive web application.\npublic class ReactiveWebMergedContextConfiguration extends org.springframework.test.context.MergedContextConfiguration;\n// A ContextLoader that can be used to test Spring Boot applications (those that normally startup using SpringApplication).\npublic class SpringBootContextLoader extends org.springframework.test.context.support.AbstractContextLoader implements org.springframework.test.context.aot.AotContextLoader;\n// Annotation that can be specified on a test class that runs Spring Boot based tests.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @BootstrapWith(SpringBootTestContextBootstrapper.class) @ExtendWith(org.springframework.test.context.junit.jupiter.SpringExtension.class) public @interface SpringBootTest;\n", "des": "Classes and annotations related to configuring Spring's ApplicationContext for tests."}
{"index": 1709, "repo": "spring-boot-test-3.1.1", "code": "package assertj\n\n// AssertJ assertions that can be applied to an ApplicationContext.\npublic class ApplicationContextAssert<C extends org.springframework.context.ApplicationContext> extends org.assertj.core.api.AbstractAssert<ApplicationContextAssert<C>,C>;\n// The scope of an assertion.\npublic static enum ApplicationContextAssert.Scope extends Enum<ApplicationContextAssert.Scope>;\n// An ApplicationContext that additionally supports AssertJ style assertions.\npublic interface ApplicationContextAssertProvider<C extends org.springframework.context.ApplicationContext> extends org.springframework.context.ApplicationContext, org.assertj.core.api.AssertProvider<ApplicationContextAssert<C>>, Closeable;\n// An ApplicationContext that additionally supports AssertJ style assertions.\npublic interface AssertableApplicationContext extends ApplicationContextAssertProvider<org.springframework.context.ConfigurableApplicationContext>, org.springframework.context.ConfigurableApplicationContext;\n// A ReactiveWebApplicationContext that additionally supports AssertJ style assertions.\npublic interface AssertableReactiveWebApplicationContext extends ApplicationContextAssertProvider<org.springframework.boot.web.reactive.context.ConfigurableReactiveWebApplicationContext>, org.springframework.boot.web.reactive.context.ConfigurableReactiveWebApplicationContext;\n// A WebApplicationContext that additionally supports AssertJ style assertions.\npublic interface AssertableWebApplicationContext extends ApplicationContextAssertProvider<org.springframework.web.context.ConfigurableWebApplicationContext>, org.springframework.web.context.ConfigurableWebApplicationContext;\n", "des": "AssertJ support for ApplicationContexts."}
{"index": 1710, "repo": "spring-boot-test-3.1.1", "code": "package runner\n\n// Utility design to run an ApplicationContext and provide AssertJ style assertions.\npublic abstract class AbstractApplicationContextRunner<SELF extends AbstractApplicationContextRunner<SELF,C,A>,C extends org.springframework.context.ConfigurableApplicationContext,A extends ApplicationContextAssertProvider<C>> extends Object;\n// A Bean registration to be applied when the context loaded.\nprotected static final class AbstractApplicationContextRunner.BeanRegistration<T> extends Object;\n// \nprotected static final class AbstractApplicationContextRunner.RunnerConfiguration<C extends org.springframework.context.ConfigurableApplicationContext> extends Object;\n// An ApplicationContext runner for a standard, non-web environment ConfigurableApplicationContext.\npublic class ApplicationContextRunner extends AbstractApplicationContextRunner<ApplicationContextRunner,org.springframework.context.ConfigurableApplicationContext,AssertableApplicationContext>;\n// Callback interface used to process an ApplicationContext with the ability to throw a (checked) exception.\n@FunctionalInterface public interface ContextConsumer<C extends org.springframework.context.ApplicationContext>;\n// An ApplicationContext runner for a ConfigurableReactiveWebApplicationContext.\npublic final class ReactiveWebApplicationContextRunner extends AbstractApplicationContextRunner<ReactiveWebApplicationContextRunner,org.springframework.boot.web.reactive.context.ConfigurableReactiveWebApplicationContext,AssertableReactiveWebApplicationContext>;\n// An ApplicationContext runner for a Servlet based ConfigurableWebApplicationContext.\npublic final class WebApplicationContextRunner extends AbstractApplicationContextRunner<WebApplicationContextRunner,org.springframework.web.context.ConfigurableWebApplicationContext,AssertableWebApplicationContext>;\n", "des": "Test utilities to run application contexts for testing."}
{"index": 1711, "repo": "spring-boot-test-3.1.1", "code": "package json\n\n// Base class for AssertJ based JSON marshal testers.\npublic abstract class AbstractJsonMarshalTester<T> extends Object;\n// Utility class used to support field initialization.\nprotected abstract static class AbstractJsonMarshalTester.FieldInitializer<M> extends Object;\n// AssertJ based JSON tester that works with basic JSON strings.\npublic class BasicJsonTester extends Object;\n// AssertJ based JSON tester backed by Gson.\npublic class GsonTester<T> extends AbstractJsonMarshalTester<T>;\n// AssertJ based JSON tester backed by Jackson.\npublic class JacksonTester<T> extends AbstractJsonMarshalTester<T>;\n// AssertJ based JSON tester backed by Jsonb.\npublic class JsonbTester<T> extends AbstractJsonMarshalTester<T>;\n// JSON content usually created from a JSON tester.\npublic final class JsonContent<T> extends Object implements org.assertj.core.api.AssertProvider<JsonContentAssert>;\n// AssertJ Assert for JsonContent.\npublic class JsonContentAssert extends org.assertj.core.api.AbstractAssert<JsonContentAssert,CharSequence>;\n// Object content usually created from AbstractJsonMarshalTester.\npublic final class ObjectContent<T> extends Object implements org.assertj.core.api.AssertProvider<ObjectContentAssert<T>>;\n// AssertJ Assert for ObjectContent.\npublic class ObjectContentAssert<A> extends org.assertj.core.api.AbstractObjectAssert<ObjectContentAssert<A>,A>;\n", "des": "Support for testing JSON."}
{"index": 1712, "repo": "spring-boot-test-3.1.1", "code": "package mockito\n\n// Annotation that can be used to add mocks to a Spring ApplicationContext.\n@Target({TYPE,FIELD}) @Retention(RUNTIME) @Documented @Repeatable(MockBeans.class) public @interface MockBean;\n// Container annotation that aggregates several @MockBean annotations.\n@Retention(RUNTIME) @Target(TYPE) @Documented public @interface MockBeans;\n// A BeanFactoryPostProcessor used to register and inject @MockBeans with the ApplicationContext.\npublic class MockitoPostProcessor extends Object implements org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.config.BeanFactoryPostProcessor, org.springframework.core.Ordered;\n// TestExecutionListener to enable @MockBean and @SpyBean support.\npublic class MockitoTestExecutionListener extends org.springframework.test.context.support.AbstractTestExecutionListener;\n// Reset strategy used on a mock bean.\npublic enum MockReset extends Enum<MockReset>;\n// TestExecutionListener to reset any mock beans that have been marked with a MockReset.\npublic class ResetMocksTestExecutionListener extends org.springframework.test.context.support.AbstractTestExecutionListener;\n// A MockResolver for testing Spring Boot applications with Mockito.\npublic class SpringBootMockResolver extends Object implements org.mockito.plugins.MockResolver;\n// Annotation that can be used to apply Mockito spies to a Spring ApplicationContext.\n@Target({TYPE,FIELD}) @Retention(RUNTIME) @Documented @Repeatable(SpyBeans.class) public @interface SpyBean;\n// Container annotation that aggregates several @SpyBean annotations.\n@Retention(RUNTIME) @Target(TYPE) @Documented public @interface SpyBeans;\n", "des": "Mockito integration for Spring Boot tests."}
{"index": 1713, "repo": "spring-boot-test-3.1.1", "code": "package web\n\n// MockServletContext implementation for Spring Boot.\npublic class SpringBootMockServletContext extends org.springframework.mock.web.MockServletContext;\n", "des": "Mock web classes specific to Spring Boot."}
{"index": 1714, "repo": "spring-boot-test-3.1.1", "code": "package server\n\n// Annotation at the field or method/constructor parameter level that injects the RSocket port that was allocated at runtime.\n@Target({FIELD,METHOD,PARAMETER,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Value(\"${local.rsocket.server.port}\") public @interface LocalRSocketServerPort;\n", "des": "RSocket server test utilities and support classes."}
{"index": 1715, "repo": "spring-boot-test-3.1.1", "code": "package system\n\n// Provides access to System.out and System.err output that has been captured by the OutputCaptureExtension or OutputCaptureRule.\npublic interface CapturedOutput extends CharSequence;\n// JUnit Jupiter @Extension to capture System.out and System.err.\npublic class OutputCaptureExtension extends Object implements org.junit.jupiter.api.extension.BeforeAllCallback, org.junit.jupiter.api.extension.AfterAllCallback, org.junit.jupiter.api.extension.BeforeEachCallback, org.junit.jupiter.api.extension.AfterEachCallback, org.junit.jupiter.api.extension.ParameterResolver;\n// JUnit @Rule to capture output from System.out and System.err.\npublic class OutputCaptureRule extends Object implements org.junit.rules.TestRule, CapturedOutput;\n", "des": "Classes for System-related testing."}
{"index": 1716, "repo": "spring-boot-test-3.1.1", "code": "package util\n\n// Application context related test utilities.\npublic abstract class ApplicationContextTestUtils extends Object;\n// Test utilities for adding properties.\npublic final class TestPropertyValues extends Object;\n// A single name value pair.\npublic static final class TestPropertyValues.Pair extends Object;\n// The type of property source.\npublic static enum TestPropertyValues.Type extends Enum<TestPropertyValues.Type>;\n", "des": "General purpose test utilities."}
{"index": 1717, "repo": "spring-boot-test-3.1.1", "code": "package client\n\n// UriTemplateHandler will automatically prefix relative URIs with localhost:${local.server.port}.\npublic class LocalHostUriTemplateHandler extends org.springframework.boot.web.client.RootUriTemplateHandler;\n// RestTemplateCustomizer that can be applied to a RestTemplateBuilder instances to add MockRestServiceServer support.\npublic class MockServerRestTemplateCustomizer extends Object implements org.springframework.boot.web.client.RestTemplateCustomizer;\n// RequestExpectationManager that strips the specified root URI from the request before verification.\npublic class RootUriRequestExpectationManager extends Object implements org.springframework.test.web.client.RequestExpectationManager;\n// Convenient alternative of RestTemplate that is suitable for integration tests.\npublic class TestRestTemplate extends Object;\n// HttpComponentsClientHttpRequestFactory to apply customizations.\nprotected static class TestRestTemplate.CustomHttpComponentsClientHttpRequestFactory extends org.springframework.http.client.HttpComponentsClientHttpRequestFactory;\n// Options used to customize the Apache HTTP Client.\npublic static enum TestRestTemplate.HttpClientOption extends Enum<TestRestTemplate.HttpClientOption>;\n", "des": "Web client test utilities."}
{"index": 1718, "repo": "spring-boot-test-3.1.1", "code": "package htmlunit\n\n// WebClient will automatically prefix relative URLs with localhost:${local.server.port}.\npublic class LocalHostWebClient extends com.gargoylesoftware.htmlunit.WebClient;\n", "des": "HtmlUnit support classes."}
{"index": 1719, "repo": "spring-boot-test-3.1.1", "code": "package webdriver\n\n// LocalHostWebConnectionHtmlUnitDriver will automatically prefix relative URLs with localhost:${local.server.port}.\npublic class LocalHostWebConnectionHtmlUnitDriver extends org.springframework.test.web.servlet.htmlunit.webdriver.WebConnectionHtmlUnitDriver;\n", "des": "Selenium support classes."}
{"index": 1720, "repo": "spring-boot-test-3.1.1", "code": "package server\n\n// A customizer for a WebTestClient.Builder.\n@FunctionalInterface public interface WebTestClientBuilderCustomizer;\n", "des": "Spring Boot support for testing Spring WebFlux server endpoints via WebTestClient."}
{"index": 1721, "repo": "spring-boot-test-3.1.1", "code": "package server\n\n// Annotation at the field or method/constructor parameter level that injects the HTTP management port that was allocated at runtime.\n@Target({FIELD,METHOD,PARAMETER,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Value(\"${local.management.port}\") public @interface LocalManagementPort;\n// Annotation at the field or method/constructor parameter level that injects the HTTP server port that was allocated at runtime.\n@Target({FIELD,METHOD,PARAMETER,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Value(\"${local.server.port}\") public @interface LocalServerPort;\n", "des": "Web server test utilities and support classes."}
{"index": 1722, "repo": "spring-jdbc-6.0.11", "code": "package jdbc\n\n// Exception thrown when SQL specified is invalid.\npublic class BadSqlGrammarException extends org.springframework.dao.InvalidDataAccessResourceUsageException;\n// Fatal exception thrown when we can't connect to an RDBMS using JDBC.\npublic class CannotGetJdbcConnectionException extends org.springframework.dao.DataAccessResourceFailureException;\n// Data access exception thrown when a result set did not have the correct column count, for example when expecting a single column but getting 0 or more than 1 columns.\npublic class IncorrectResultSetColumnCountException extends org.springframework.dao.DataRetrievalFailureException;\n// Exception thrown when a ResultSet has been accessed in an invalid fashion.\npublic class InvalidResultSetAccessException extends org.springframework.dao.InvalidDataAccessResourceUsageException;\n// Exception thrown when a JDBC update affects an unexpected number of rows.\npublic class JdbcUpdateAffectedIncorrectNumberOfRowsException extends org.springframework.dao.IncorrectUpdateSemanticsDataAccessException;\n// Exception to be thrown when a LOB could not be retrieved.\npublic class LobRetrievalFailureException extends org.springframework.dao.DataRetrievalFailureException;\n// Exception thrown when we're not ignoring SQLWarnings.\npublic class SQLWarningException extends org.springframework.dao.UncategorizedDataAccessException;\n// Exception thrown when we can't classify an SQLException into one of our generic data access exceptions.\npublic class UncategorizedSQLException extends org.springframework.dao.UncategorizedDataAccessException;\n", "des": "The classes in this package make JDBC easier to use and reduce the likelihood of common errors."}
{"index": 1723, "repo": "spring-jdbc-6.0.11", "code": "package config\n\n// NamespaceHandler for JDBC configuration namespace.\npublic class JdbcNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n// FactoryBean implementation that takes a list of location Strings and creates a sorted array of Resource instances.\npublic class SortedResourcesFactoryBean extends org.springframework.beans.factory.config.AbstractFactoryBean<org.springframework.core.io.Resource[]> implements org.springframework.context.ResourceLoaderAware;\n", "des": "Defines the Spring JDBC configuration namespace."}
{"index": 1724, "repo": "spring-jdbc-6.0.11", "code": "package core\n\n// Simple adapter for PreparedStatementSetter that applies a given array of arguments.\npublic class ArgumentPreparedStatementSetter extends Object implements PreparedStatementSetter, ParameterDisposer;\n// Simple adapter for PreparedStatementSetter that applies given arrays of arguments and JDBC argument types.\npublic class ArgumentTypePreparedStatementSetter extends Object implements PreparedStatementSetter, ParameterDisposer;\n// Batch update callback interface used by the JdbcTemplate class.\npublic interface BatchPreparedStatementSetter;\n// RowMapper implementation that converts a row into a new instance of the specified mapped target class.\npublic class BeanPropertyRowMapper<T> extends Object implements RowMapper<T>;\n// Generic callback interface for code that operates on a CallableStatement.\n@FunctionalInterface public interface CallableStatementCallback<T>;\n// One of the three central callback interfaces used by the JdbcTemplate class.\n@FunctionalInterface public interface CallableStatementCreator;\n// Helper class that efficiently creates multiple CallableStatementCreator objects with different parameters based on an SQL statement and a single set of parameter declarations.\npublic class CallableStatementCreatorFactory extends Object;\n// RowMapper implementation that creates a java.util.Map for each row, representing all columns as key-value pairs: one entry for each column, with the column name as key.\npublic class ColumnMapRowMapper extends Object implements RowMapper<Map<String,Object>>;\n// Generic callback interface for code that operates on a JDBC Connection.\n@FunctionalInterface public interface ConnectionCallback<T>;\n// RowMapper implementation that converts a row into a new instance of the specified mapped target class.\npublic class DataClassRowMapper<T> extends BeanPropertyRowMapper<T>;\n// Subinterface of SqlTypeValue that adds a cleanup callback, to be invoked after the value has been set and the corresponding statement has been executed.\npublic interface DisposableSqlTypeValue extends SqlTypeValue;\n// Extension of the BatchPreparedStatementSetter interface, adding a batch exhaustion check.\npublic interface InterruptibleBatchPreparedStatementSetter extends BatchPreparedStatementSetter;\n// Interface specifying a basic set of JDBC operations.\npublic interface JdbcOperations;\n// This is the central class in the JDBC core package. It simplifies the use of JDBC and helps to avoid common errors.\npublic class JdbcTemplate extends JdbcAccessor implements JdbcOperations;\n", "des": "Provides the core JDBC framework, based on JdbcTemplate and its associated callback interfaces and helper objects."}
{"index": 1725, "repo": "spring-jdbc-6.0.11", "code": "package metadata\n\n// Class to manage context meta-data used for the configuration and execution of a stored procedure call.\npublic class CallMetaDataContext extends Object;\n// Interface specifying the API to be implemented by a class providing call meta-data.\npublic interface CallMetaDataProvider;\n// Factory used to create a CallMetaDataProvider implementation based on the type of database being used.\npublic final class CallMetaDataProviderFactory extends Object;\n// Holder of meta-data for a specific parameter that is used for call processing.\npublic class CallParameterMetaData extends Object;\n// DB2 specific implementation for the CallMetaDataProvider interface.\npublic class Db2CallMetaDataProvider extends GenericCallMetaDataProvider;\n// Derby specific implementation for the CallMetaDataProvider interface.\npublic class DerbyCallMetaDataProvider extends GenericCallMetaDataProvider;\n// The Derby specific implementation of TableMetaDataProvider.\npublic class DerbyTableMetaDataProvider extends GenericTableMetaDataProvider;\n// A generic implementation of the CallMetaDataProvider interface.\npublic class GenericCallMetaDataProvider extends Object implements CallMetaDataProvider;\n// A generic implementation of the TableMetaDataProvider interface which should provide enough features for all supported databases.\npublic class GenericTableMetaDataProvider extends Object implements TableMetaDataProvider;\n// SAP HANA specific implementation for the CallMetaDataProvider interface.\npublic class HanaCallMetaDataProvider extends GenericCallMetaDataProvider;\n// The HSQL specific implementation of TableMetaDataProvider.\npublic class HsqlTableMetaDataProvider extends GenericTableMetaDataProvider;\n// Oracle-specific implementation for the CallMetaDataProvider interface.\npublic class OracleCallMetaDataProvider extends GenericCallMetaDataProvider;\n// Oracle-specific implementation of the TableMetaDataProvider.\npublic class OracleTableMetaDataProvider extends GenericTableMetaDataProvider;\n// Postgres-specific implementation for the CallMetaDataProvider interface.\npublic class PostgresCallMetaDataProvider extends GenericCallMetaDataProvider;\n// The PostgreSQL specific implementation of TableMetaDataProvider.\npublic class PostgresTableMetaDataProvider extends GenericTableMetaDataProvider;\n// SQL Server specific implementation for the CallMetaDataProvider interface.\npublic class SqlServerCallMetaDataProvider extends GenericCallMetaDataProvider;\n// Sybase specific implementation for the CallMetaDataProvider interface.\npublic class SybaseCallMetaDataProvider extends GenericCallMetaDataProvider;\n// Class to manage context meta-data used for the configuration and execution of operations on a database table.\npublic class TableMetaDataContext extends Object;\n", "des": "Context metadata abstraction for the configuration and execution of table inserts and stored procedure calls."}
{"index": 1726, "repo": "spring-jdbc-6.0.11", "code": "package namedparam\n\n// Abstract base class for SqlParameterSource implementations.\npublic abstract class AbstractSqlParameterSource extends Object implements SqlParameterSource;\n// SqlParameterSource implementation that obtains parameter values from bean properties of a given JavaBean object.\npublic class BeanPropertySqlParameterSource extends AbstractSqlParameterSource;\n// A simple empty implementation of the SqlParameterSource interface.\npublic class EmptySqlParameterSource extends Object implements SqlParameterSource;\n// SqlParameterSource implementation that holds a given Map of parameters.\npublic class MapSqlParameterSource extends AbstractSqlParameterSource;\n// Extension of JdbcDaoSupport that exposes a NamedParameterJdbcTemplate as well.\npublic class NamedParameterJdbcDaoSupport extends JdbcDaoSupport;\n// Interface specifying a basic set of JDBC operations allowing the use of named parameters rather than the traditional '?' placeholders.\npublic interface NamedParameterJdbcOperations;\n// Template class with a basic set of JDBC operations, allowing the use of named parameters rather than traditional '?' placeholders.\npublic class NamedParameterJdbcTemplate extends Object implements NamedParameterJdbcOperations;\n// Helper methods for named parameter parsing.\npublic abstract class NamedParameterUtils extends Object;\n// Holds information about a parsed SQL statement.\npublic class ParsedSql extends Object;\n// Interface that defines common functionality for objects that can offer parameter values for named SQL parameters, serving as argument for NamedParameterJdbcTemplate operations.\npublic interface SqlParameterSource;\n// Class that provides helper methods for the use of SqlParameterSource, in particular with NamedParameterJdbcTemplate.\npublic abstract class SqlParameterSourceUtils extends Object;\n", "des": "JdbcTemplate variant with named parameter support."}
{"index": 1727, "repo": "spring-jdbc-6.0.11", "code": "package simple\n\n// Abstract class to provide base functionality for easy stored procedure calls based on configuration options and database meta-data.\npublic abstract class AbstractJdbcCall extends Object;\n// Abstract class to provide base functionality for easy inserts based on configuration options and database meta-data.\npublic abstract class AbstractJdbcInsert extends Object;\n// A SimpleJdbcCall is a multithreaded, reusable object representing a call to a stored procedure or a stored function.\npublic class SimpleJdbcCall extends AbstractJdbcCall implements SimpleJdbcCallOperations;\n// Interface specifying the API for a Simple JDBC Call implemented by SimpleJdbcCall.\npublic interface SimpleJdbcCallOperations;\n// A SimpleJdbcInsert is a multithreaded, reusable object providing easy insert capabilities for a table.\npublic class SimpleJdbcInsert extends AbstractJdbcInsert implements SimpleJdbcInsertOperations;\n// Interface specifying the API for a Simple JDBC Insert implemented by SimpleJdbcInsert.\npublic interface SimpleJdbcInsertOperations;\n", "des": "Simplification layer for table inserts and stored procedure calls."}
{"index": 1728, "repo": "spring-jdbc-6.0.11", "code": "package support\n\n// Abstract implementation of the InterruptibleBatchPreparedStatementSetter interface, combining the check for available values and setting of those into a single callback method AbstractInterruptibleBatchPreparedStatementSetter.setValuesIfAvailable(java.sql.PreparedStatement, int).\npublic abstract class AbstractInterruptibleBatchPreparedStatementSetter extends Object implements InterruptibleBatchPreparedStatementSetter;\n// Abstract PreparedStatementCallback implementation that manages a LobCreator.\npublic abstract class AbstractLobCreatingPreparedStatementCallback extends Object implements PreparedStatementCallback<Integer>;\n// Abstract ResultSetExtractor implementation that assumes streaming of LOB data.\npublic abstract class AbstractLobStreamingResultSetExtractor<T> extends Object implements ResultSetExtractor<T>;\n// Abstract implementation of the SqlTypeValue interface, for convenient creation of type values that are supposed to be passed into the PreparedStatement.setObject method.\npublic abstract class AbstractSqlTypeValue extends Object implements SqlTypeValue;\n// \n@Deprecated public class JdbcBeanDefinitionReader extends Object;\n// Convenient superclass for JDBC-based data access objects.\npublic abstract class JdbcDaoSupport extends org.springframework.dao.support.DaoSupport;\n// Object to represent an SQL BLOB/CLOB value parameter.\npublic class SqlLobValue extends Object implements DisposableSqlTypeValue;\n", "des": "Classes supporting the org.springframework.jdbc.core package."}
{"index": 1729, "repo": "spring-jdbc-6.0.11", "code": "package datasource\n\n// Abstract base class for Spring's DataSource implementations, taking care of the padding.\npublic abstract class AbstractDataSource extends Object implements DataSource;\n// Abstract base class for JDBC DataSource implementations that operate on a JDBC Driver.\npublic abstract class AbstractDriverBasedDataSource extends AbstractDataSource;\n// Simple interface to be implemented by handles for a JDBC Connection.\n@FunctionalInterface public interface ConnectionHandle;\n// Resource holder wrapping a JDBC Connection.\npublic class ConnectionHolder extends org.springframework.transaction.support.ResourceHolderSupport;\n// Subinterface of Connection to be implemented by Connection proxies.\npublic interface ConnectionProxy extends Connection;\n// PlatformTransactionManager implementation for a single JDBC DataSource.\npublic class DataSourceTransactionManager extends org.springframework.transaction.support.AbstractPlatformTransactionManager implements org.springframework.transaction.support.ResourceTransactionManager, org.springframework.beans.factory.InitializingBean;\n// Helper class that provides static methods for obtaining JDBC Connections from a DataSource.\npublic abstract class DataSourceUtils extends Object;\n// JDBC DataSource implementation that delegates all calls to a given target DataSource.\npublic class DelegatingDataSource extends Object implements DataSource, org.springframework.beans.factory.InitializingBean;\n// Simple implementation of the standard JDBC DataSource interface, configuring the plain old JDBC DriverManager via bean properties, and returning a new Connection from every getConnection call.\npublic class DriverManagerDataSource extends AbstractDriverBasedDataSource;\n// An adapter for a target DataSource, applying the current Spring transaction's isolation level (and potentially specified user credentials) to every getConnection call.\npublic class IsolationLevelDataSourceAdapter extends UserCredentialsDataSourceAdapter;\n// Convenient base class for JDBC-aware transaction objects.\npublic abstract class JdbcTransactionObjectSupport extends Object implements org.springframework.transaction.SavepointManager, org.springframework.transaction.support.SmartTransactionObject;\n// Proxy for a target DataSource, fetching actual JDBC Connections lazily, i.e.\npublic class LazyConnectionDataSourceProxy extends DelegatingDataSource;\n// Simple implementation of the ConnectionHandle interface, containing a given JDBC Connection.\npublic class SimpleConnectionHandle extends Object implements ConnectionHandle;\n// Simple implementation of the standard JDBC DataSource interface, configuring a plain old JDBC Driver via bean properties, and returning a new Connection from every getConnection call.\npublic class SimpleDriverDataSource extends AbstractDriverBasedDataSource;\n", "des": "Provides a utility class for easy DataSource access, a PlatformTransactionManager for a single DataSource, and various simple DataSource implementations."}
{"index": 1730, "repo": "spring-jdbc-6.0.11", "code": "package embedded\n\n// ConnectionProperties serves as a simple data container that allows essential JDBC connection properties to be configured consistently, independent of the actual DataSource implementation.\npublic interface ConnectionProperties;\n// DataSourceFactory encapsulates the creation of a particular DataSource implementation such as a non-pooling SimpleDriverDataSource or a HikariCP pool setup in the shape of a HikariDataSource.\npublic interface DataSourceFactory;\n// EmbeddedDatabase serves as a handle to an embedded database instance.\npublic interface EmbeddedDatabase extends DataSource;\n// A builder that provides a convenient API for constructing an embedded database.\npublic class EmbeddedDatabaseBuilder extends Object;\n// EmbeddedDatabaseConfigurer encapsulates the configuration required to create, connect to, and shut down a specific type of embedded database such as HSQL, H2, or Derby.\npublic interface EmbeddedDatabaseConfigurer;\n// Factory for creating an EmbeddedDatabase instance.\npublic class EmbeddedDatabaseFactory extends Object;\n// A subclass of EmbeddedDatabaseFactory that implements FactoryBean for registration as a Spring bean.\npublic class EmbeddedDatabaseFactoryBean extends EmbeddedDatabaseFactory implements org.springframework.beans.factory.FactoryBean<DataSource>, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// A supported embedded database type.\npublic enum EmbeddedDatabaseType extends Enum<EmbeddedDatabaseType>;\n// Internal helper for exposing dummy OutputStreams to embedded databases such as Derby, preventing the creation of a log file.\npublic final class OutputStreamFactory extends Object;\n", "des": "Provides extensible support for creating embedded database instances."}
{"index": 1731, "repo": "spring-jdbc-6.0.11", "code": "package init\n\n// Thrown by ScriptUtils if an SQL script cannot be read.\npublic class CannotReadScriptException extends ScriptException;\n// Composite DatabasePopulator that delegates to a list of given DatabasePopulator implementations, executing all scripts.\npublic class CompositeDatabasePopulator extends Object implements DatabasePopulator;\n// Strategy used to populate, initialize, or clean up a database.\n@FunctionalInterface public interface DatabasePopulator;\n// Utility methods for executing a DatabasePopulator.\npublic abstract class DatabasePopulatorUtils extends Object;\n// Used to set up a database during initialization and clean up a database during destruction.\npublic class DataSourceInitializer extends Object implements org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// Populates, initializes, or cleans up a database using SQL scripts defined in external resources.\npublic class ResourceDatabasePopulator extends Object implements DatabasePopulator;\n// Root of the hierarchy of data access exceptions that are related to processing of SQL scripts.\npublic abstract class ScriptException extends org.springframework.dao.DataAccessException;\n// Thrown by ScriptUtils if an SQL script cannot be properly parsed.\npublic class ScriptParseException extends ScriptException;\n// Thrown by ScriptUtils if a statement in an SQL script failed when executing it against the target database.\npublic class ScriptStatementFailedException extends ScriptException;\n// Generic utility methods for working with SQL scripts in conjunction with JDBC.\npublic abstract class ScriptUtils extends Object;\n// Thrown when we cannot determine anything more specific than \"something went wrong while processing an SQL script\": for example, a SQLException from JDBC that we cannot pinpoint more precisely.\npublic class UncategorizedScriptException extends ScriptException;\n", "des": "Provides extensible support for initializing databases through scripts."}
{"index": 1732, "repo": "spring-jdbc-6.0.11", "code": "package lookup\n\n// Abstract DataSource implementation that routes AbstractRoutingDataSource.getConnection() calls to one of various target DataSources based on a lookup key.\npublic abstract class AbstractRoutingDataSource extends AbstractDataSource implements org.springframework.beans.factory.InitializingBean;\n// DataSourceLookup implementation based on a Spring BeanFactory.\npublic class BeanFactoryDataSourceLookup extends Object implements DataSourceLookup, org.springframework.beans.factory.BeanFactoryAware;\n// Strategy interface for looking up DataSources by name.\n@FunctionalInterface public interface DataSourceLookup;\n// Exception to be thrown by a DataSourceLookup implementation, indicating that the specified DataSource could not be obtained.\npublic class DataSourceLookupFailureException extends org.springframework.dao.NonTransientDataAccessException;\n// DataSource that routes to one of various target DataSources based on the current transaction isolation level.\npublic class IsolationLevelDataSourceRouter extends AbstractRoutingDataSource;\n// JNDI-based DataSourceLookup implementation.\npublic class JndiDataSourceLookup extends org.springframework.jndi.JndiLocatorSupport implements DataSourceLookup;\n// Simple DataSourceLookup implementation that relies on a map for doing lookups.\npublic class MapDataSourceLookup extends Object implements DataSourceLookup;\n// An implementation of the DataSourceLookup that simply wraps a single given DataSource, returned for any data source name.\npublic class SingleDataSourceLookup extends Object implements DataSourceLookup;\n", "des": "Provides a strategy for looking up JDBC DataSources by name."}
{"index": 1733, "repo": "spring-jdbc-6.0.11", "code": "package object\n\n// SqlUpdate subclass that performs batch update operations.\npublic class BatchSqlUpdate extends SqlUpdate;\n// A concrete variant of SqlQuery which can be configured with a RowMapper.\npublic class GenericSqlQuery<T> extends SqlQuery<T>;\n// Concrete implementation making it possible to define the RDBMS stored procedures in an application context without writing a custom Java implementation class.\npublic class GenericStoredProcedure extends StoredProcedure;\n// Reusable query in which concrete subclasses must implement the abstract mapRow(ResultSet, int) method to convert each row of the JDBC ResultSet into an object.\npublic abstract class MappingSqlQuery<T> extends MappingSqlQueryWithParameters<T>;\n// Reusable RDBMS query in which concrete subclasses must implement the abstract mapRow(ResultSet, int) method to map each row of the JDBC ResultSet into an object.\npublic abstract class MappingSqlQueryWithParameters<T> extends SqlQuery<T>;\n// An \"RDBMS operation\" is a multithreaded, reusable object representing a query, update, or stored procedure call.\npublic abstract class RdbmsOperation extends Object implements org.springframework.beans.factory.InitializingBean;\n// RdbmsOperation using a JdbcTemplate and representing an SQL-based call such as a stored procedure or a stored function.\npublic abstract class SqlCall extends RdbmsOperation;\n// SQL \"function\" wrapper for a query that returns a single row of results.\npublic class SqlFunction<T> extends MappingSqlQuery<T>;\n// Operation object representing an SQL-based operation such as a query or update, as opposed to a stored procedure.\npublic abstract class SqlOperation extends RdbmsOperation;\n// Reusable operation object representing an SQL query.\npublic abstract class SqlQuery<T> extends SqlOperation;\n// Reusable operation object representing an SQL update.\npublic class SqlUpdate extends SqlOperation;\n// Superclass for object abstractions of RDBMS stored procedures.\npublic abstract class StoredProcedure extends SqlCall;\n// Reusable RDBMS query in which concrete subclasses must implement the abstract updateRow(ResultSet, int, context) method to update each row of the JDBC ResultSet and optionally map contents into an object.\npublic abstract class UpdatableSqlQuery<T> extends SqlQuery<T>;\n", "des": "The classes in this package represent RDBMS queries, updates, and stored procedures as threadsafe, reusable objects."}
{"index": 1734, "repo": "spring-jdbc-6.0.11", "code": "package support\n\n// Base class for SQLExceptionTranslator implementations that allow for fallback to some other SQLExceptionTranslator.\npublic abstract class AbstractFallbackSQLExceptionTranslator extends Object implements SQLExceptionTranslator;\n// JavaBean for holding custom JDBC error codes translation for a particular database.\npublic class CustomSQLErrorCodesTranslation extends Object;\n// Registry for custom SQLExceptionTranslator instances for specific databases.\npublic class CustomSQLExceptionTranslatorRegistrar extends Object implements org.springframework.beans.factory.InitializingBean;\n// Registry for custom SQLExceptionTranslator instances associated with specific databases allowing for overriding translation based on values contained in the configuration file named \"sql-error-codes.xml\".\npublic final class CustomSQLExceptionTranslatorRegistry extends Object;\n// A callback interface used by the JdbcUtils class.\n@FunctionalInterface public interface DatabaseMetaDataCallback<T>;\n// Bean that checks if a database has already started up.\npublic class DatabaseStartupValidator extends Object implements org.springframework.beans.factory.InitializingBean;\n// The standard implementation of the KeyHolder interface, to be used for holding auto-generated keys (as potentially returned by JDBC insert statements).\npublic class GeneratedKeyHolder extends Object implements KeyHolder;\n// Base class for JdbcTemplate and other JDBC-accessing DAO helpers, defining common properties such as DataSource and exception translator.\npublic abstract class JdbcAccessor extends Object implements org.springframework.beans.factory.InitializingBean;\n// JdbcAccessor-aligned subclass of the plain DataSourceTransactionManager, adding common JDBC exception translation for the commit and rollback step.\npublic class JdbcTransactionManager extends DataSourceTransactionManager;\n// Generic utility methods for working with JDBC.\npublic abstract class JdbcUtils extends Object;\n// Interface for retrieving keys, typically used for auto-generated keys as potentially returned by JDBC insert statements.\npublic interface KeyHolder;\n// Exception indicating that something went wrong during JDBC meta-data lookup.\npublic class MetaDataAccessException extends org.springframework.core.NestedCheckedException;\n// JavaBean for holding JDBC error codes for a particular database.\npublic class SQLErrorCodes extends Object;\n// Factory for creating SQLErrorCodes based on the \"databaseProductName\" taken from the DatabaseMetaData.\npublic class SQLErrorCodesFactory extends Object;\n// Implementation of SQLExceptionTranslator that analyzes vendor-specific error codes.\npublic class SQLErrorCodeSQLExceptionTranslator extends AbstractFallbackSQLExceptionTranslator;\n", "des": "Support classes for the JDBC framework, used by the classes in the jdbc.core and jdbc.object packages."}
{"index": 1735, "repo": "spring-jdbc-6.0.11", "code": "package incrementer\n\n// Abstract base class for DataFieldMaxValueIncrementer implementations that use a column in a custom sequence table.\npublic abstract class AbstractColumnMaxValueIncrementer extends AbstractDataFieldMaxValueIncrementer;\n// Base implementation of DataFieldMaxValueIncrementer that delegates to a single AbstractDataFieldMaxValueIncrementer.getNextKey() template method that returns a long.\npublic abstract class AbstractDataFieldMaxValueIncrementer extends Object implements DataFieldMaxValueIncrementer, org.springframework.beans.factory.InitializingBean;\n// Abstract base class for DataFieldMaxValueIncrementer implementations which are based on identity columns in a sequence-like table.\npublic abstract class AbstractIdentityColumnMaxValueIncrementer extends AbstractColumnMaxValueIncrementer;\n// Abstract base class for DataFieldMaxValueIncrementer implementations that use a database sequence.\npublic abstract class AbstractSequenceMaxValueIncrementer extends AbstractDataFieldMaxValueIncrementer;\n// Interface that defines contract of incrementing any data store field's maximum value.\npublic interface DataFieldMaxValueIncrementer;\n// DataFieldMaxValueIncrementer that retrieves the next value of a given sequence on DB2 LUW (for Linux, Unix and Windows).\npublic class Db2LuwMaxValueIncrementer extends AbstractSequenceMaxValueIncrementer;\n// DataFieldMaxValueIncrementer that retrieves the next value of a given sequence on DB2 for the mainframe (z/OS, DB2/390, DB2/400).\npublic class Db2MainframeMaxValueIncrementer extends AbstractSequenceMaxValueIncrementer;\n// DataFieldMaxValueIncrementer that increments the maximum value of a given Derby table with the equivalent of an auto-increment column.\npublic class DerbyMaxValueIncrementer extends AbstractIdentityColumnMaxValueIncrementer;\n// DataFieldMaxValueIncrementer that retrieves the next value of a given H2 sequence.\npublic class H2SequenceMaxValueIncrementer extends AbstractSequenceMaxValueIncrementer;\n// DataFieldMaxValueIncrementer that retrieves the next value of a given SAP HANA sequence.\npublic class HanaSequenceMaxValueIncrementer extends AbstractSequenceMaxValueIncrementer;\n// DataFieldMaxValueIncrementer that increments the maximum value of a given HSQL table with the equivalent of an auto-increment column.\npublic class HsqlMaxValueIncrementer extends AbstractIdentityColumnMaxValueIncrementer;\n", "des": "Provides a support framework for incrementing database table values via sequences, with implementations for various databases."}
{"index": 1736, "repo": "spring-jdbc-6.0.11", "code": "package lob\n\n// Abstract base class for LobHandler implementations.\npublic abstract class AbstractLobHandler extends Object implements LobHandler;\n// Default implementation of the LobHandler interface.\npublic class DefaultLobHandler extends AbstractLobHandler;\n// Interface that abstracts potentially database-specific creation of large binary fields and large text fields.\npublic interface LobCreator extends Closeable;\n// Abstraction for handling large binary fields and large text fields in specific databases, no matter if represented as simple types or Large OBjects.\npublic interface LobHandler;\n// LobCreator implementation based on temporary LOBs, using JDBC 4.0's Connection.createBlob() / Connection.createClob() mechanism.\npublic class TemporaryLobCreator extends Object implements LobCreator;\n", "des": "Provides a strategy interface for Large OBject handling, as well as a customizable default implementation."}
{"index": 1737, "repo": "spring-jdbc-6.0.11", "code": "package rowset\n\n// The default implementation of Spring's SqlRowSet interface, wrapping a ResultSet, catching any SQLExceptions and translating them to a corresponding Spring InvalidResultSetAccessException.\npublic class ResultSetWrappingSqlRowSet extends Object implements SqlRowSet;\n// The default implementation of Spring's SqlRowSetMetaData interface, wrapping a ResultSetMetaData instance, catching any SQLExceptions and translating them to a corresponding Spring InvalidResultSetAccessException.\npublic class ResultSetWrappingSqlRowSetMetaData extends Object implements SqlRowSetMetaData;\n// Mirror interface for RowSet, representing a disconnected variant of ResultSet data.\npublic interface SqlRowSet extends Serializable;\n// Metadata interface for Spring's SqlRowSet, analogous to JDBC's ResultSetMetaData.\npublic interface SqlRowSetMetaData;\n", "des": "Provides a convenient holder for disconnected result sets."}
{"index": 1738, "repo": "spring-jdbc-6.0.11", "code": "package xml\n\n// Default implementation of the SqlXmlHandler interface.\npublic class Jdbc4SqlXmlHandler extends Object implements SqlXmlHandler;\n// Exception thrown when the underlying implementation does not support the requested feature of the API.\npublic class SqlXmlFeatureNotImplementedException extends org.springframework.dao.InvalidDataAccessApiUsageException;\n// Abstraction for handling XML fields in specific databases.\npublic interface SqlXmlHandler;\n// Subinterface of SqlValue that supports passing in XML data to specified column and adds a cleanup callback, to be invoked after the value has been set and the corresponding statement has been executed.\npublic interface SqlXmlValue extends SqlValue;\n// Interface defining handling involved with providing OutputStream data for XML input.\npublic interface XmlBinaryStreamProvider;\n// Interface defining handling involved with providing Writer data for XML input.\npublic interface XmlCharacterStreamProvider;\n// Interface defining handling involved with providing Result data for XML input.\npublic interface XmlResultProvider;\n", "des": "Abstraction for handling fields of SQLXML data type."}
{"index": 1739, "repo": "spring-batch-integration-5.0.2", "code": "package async\n\n// An ItemProcessor that delegates to a nested processor and in the background.\npublic class AsyncItemProcessor<I,O> extends Object implements org.springframework.batch.item.ItemProcessor<I,Future<O>>, org.springframework.beans.factory.InitializingBean;\n// \npublic class AsyncItemWriter<T> extends Object implements org.springframework.batch.item.ItemStreamWriter<Future<T>>, org.springframework.beans.factory.InitializingBean;\n// A ChannelInterceptor that adds the current StepExecution (if there is one) as a header to the message.\npublic class StepExecutionInterceptor extends Object implements org.springframework.messaging.support.ChannelInterceptor;\n", "des": "Components for executing item processing asynchronously and writing the results when processing is complete."}
{"index": 1740, "repo": "spring-batch-integration-5.0.2", "code": "package chunk\n\n// Exception indicating that a failure or early completion condition was detected in a remote worker.\npublic class AsynchronousFailureException extends org.springframework.batch.item.ItemWriterException;\n// Interface for a remote worker in the Remote Chunking pattern.\npublic interface ChunkHandler<T>;\n// \npublic class ChunkMessageChannelItemWriter<T> extends Object implements StepExecutionListener, org.springframework.batch.item.ItemWriter<T>, org.springframework.batch.item.ItemStream, StepContributionSource;\n// \nprotected static class ChunkMessageChannelItemWriter.LocalState extends Object;\n// A ChunkHandler based on a ChunkProcessor.\n@MessageEndpoint public class ChunkProcessorChunkHandler<S> extends Object implements ChunkHandler<S>, org.springframework.beans.factory.InitializingBean;\n// Encapsulation of a chunk of items to be processed remotely as part of a step execution.\npublic class ChunkRequest<T> extends Object implements Serializable;\n// Encapsulates a response to processing a chunk of items, summarising the result as a StepContribution.\npublic class ChunkResponse extends Object implements Serializable;\n// \npublic class JmsRedeliveredExtractor extends Object;\n// A ChannelInterceptor that turns a pollable channel into a \"pass-thru channel\": if a client calls receive() on the channel it will delegate to a MessageSource to pull the message directly from an external source.\npublic class MessageSourcePollerInterceptor extends Object implements org.springframework.messaging.support.ChannelInterceptor, org.springframework.beans.factory.InitializingBean;\n// Convenient factory bean for a chunk handler that also converts an existing chunk-oriented step into a remote chunk manager.\npublic class RemoteChunkHandlerFactoryBean<T> extends Object implements org.springframework.beans.factory.FactoryBean<ChunkHandler<T>>;\n// Builder for a manager step in a remote chunking setup.\npublic class RemoteChunkingManagerStepBuilder<I,O> extends FaultTolerantStepBuilder<I,O>;\n// Convenient factory for a RemoteChunkingManagerStepBuilder which sets the JobRepository and PlatformTransactionManager automatically.\npublic class RemoteChunkingManagerStepBuilderFactory extends Object;\n", "des": "Components for remote chunking."}
{"index": 1741, "repo": "spring-batch-integration-5.0.2", "code": "package annotation\n\n// Base configuration class for Spring Batch Integration factory beans.\n@Configuration(proxyBeanMethods=false) public class BatchIntegrationConfiguration extends Object implements org.springframework.beans.factory.InitializingBean;\n// Enable Spring Batch Integration features and provide a base configuration for setting up remote chunking or partitioning infrastructure beans.\n@Target(TYPE) @Retention(RUNTIME) @Documented @EnableIntegration @Import(BatchIntegrationConfiguration.class) public @interface EnableBatchIntegration;\n", "des": "APIs for the configuration of Spring Integration components through annotations."}
{"index": 1742, "repo": "spring-batch-integration-5.0.2", "code": "package xml\n\n// The namespace handler for the Spring Batch Integration namespace.\npublic class BatchIntegrationNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n// The parser for the Job-Launching Gateway, which will instantiate a JobLaunchingGatewayParser.\npublic class JobLaunchingGatewayParser extends org.springframework.integration.config.xml.AbstractConsumerEndpointParser;\n// Parser for the remote-chunking-manager namespace element.\npublic class RemoteChunkingManagerParser extends org.springframework.beans.factory.xml.AbstractBeanDefinitionParser;\n// Parser for the remote-chunking-worker namespace element.\npublic class RemoteChunkingWorkerParser extends org.springframework.beans.factory.xml.AbstractBeanDefinitionParser;\n", "des": "APIs for the configuration of Spring Integration components through XML."}
{"index": 1743, "repo": "spring-batch-integration-5.0.2", "code": "package launch\n\n// The JobLaunchingGateway is used to launch Batch Jobs.\npublic class JobLaunchingGateway extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n// Message handler which uses strategies to convert a Message into a job and a set of job parameters\npublic class JobLaunchingMessageHandler extends Object implements JobLaunchRequestHandler;\n// Encapsulation of a Job and its JobParameters forming a request for a job to be launched.\npublic class JobLaunchRequest extends Object;\n// Interface for handling a JobLaunchRequest and returning a JobExecution.\npublic interface JobLaunchRequestHandler;\n", "des": "Message based job launching components."}
{"index": 1744, "repo": "spring-batch-integration-5.0.2", "code": "package partition\n\n// A StepLocator implementation that just looks in its enclosing bean factory for components of type Step.\npublic class BeanFactoryStepLocator extends Object implements StepLocator, org.springframework.beans.factory.BeanFactoryAware;\n// A PartitionHandler that uses MessageChannel instances to send instructions to remote workers and receive their responses.\n@MessageEndpoint public class MessageChannelPartitionHandler extends AbstractPartitionHandler implements org.springframework.beans.factory.InitializingBean;\n// Builder for a manager step in a remote partitioning setup.\npublic class RemotePartitioningManagerStepBuilder extends PartitionStepBuilder;\n// Convenient factory for a RemotePartitioningManagerStepBuilder which sets the JobRepository, JobExplorer, BeanFactory and PlatformTransactionManager automatically.\npublic class RemotePartitioningManagerStepBuilderFactory extends Object implements org.springframework.beans.factory.BeanFactoryAware;\n// Builder for a worker step in a remote partitioning setup.\npublic class RemotePartitioningWorkerStepBuilder extends StepBuilder;\n// Convenient factory for a RemotePartitioningWorkerStepBuilder which sets the JobRepository, JobExplorer, BeanFactory and PlatformTransactionManager automatically.\npublic class RemotePartitioningWorkerStepBuilderFactory extends Object implements org.springframework.beans.factory.BeanFactoryAware;\n// Class encapsulating information required to request a step execution in a remote partitioning setup.\npublic class StepExecutionRequest extends Object implements Serializable;\n// A MessageEndpoint that can handle a StepExecutionRequest and return a StepExecution as the result.\n@MessageEndpoint public class StepExecutionRequestHandler extends Object;\n", "des": "Remote partitioning components."}
{"index": 1745, "repo": "spring-batch-integration-5.0.2", "code": "package step\n\n// \n@Deprecated(since=\"5.0\", forRemoval=true) public class DelegateStep extends AbstractStep;\n", "des": "Support classes related to steps when used with Spring Integration."}
{"index": 1746, "repo": "spring-data-mongodb-4.1.2", "code": "package mongodb\n\n// A MongoExpression using the ParameterBindingDocumentCodec for parsing a raw (json) expression.\npublic class BindableMongoExpression extends Object implements MongoExpression;\n// Is thrown when errors occur during bulk operations.\npublic class BulkOperationException extends DataAccessException;\n// NonTransientDataAccessException specific to MongoDB ClientSession related data access failures such as reading data using an already closed session.\npublic class ClientSessionException extends NonTransientDataAccessException;\n// Provider interface to obtain CodecRegistry from the underlying MongoDB Java driver.\n@FunctionalInterface public interface CodecRegistryProvider;\n// \npublic class InvalidMongoDbApiUsageException extends InvalidDataAccessApiUsageException;\n// \npublic class LazyLoadingException extends UncategorizedDataAccessException;\n// Helper class featuring helper methods for working with MongoDb collections.\npublic abstract class MongoCollectionUtils extends Object;\n// Interface for factories creating MongoDatabase instances.\npublic interface MongoDatabaseFactory extends CodecRegistryProvider, MongoSessionProvider;\n// Helper class for managing a MongoDatabase instances via MongoDatabaseFactory.\npublic class MongoDatabaseUtils extends Object;\n// Wrapper object for MongoDB expressions like $toUpper : $name that manifest as Document when passed on to the driver.\n@FunctionalInterface public interface MongoExpression;\n// \npublic final class MongoManagedTypes extends Object implements ManagedTypes;\n// A simple interface for obtaining a ClientSession to be consumed by MongoOperations and MongoDB native operations that support causal consistency and transactions.\n@FunctionalInterface public interface MongoSessionProvider;\n// A specific ClientSessionException related to issues with a transaction such as aborted or non existing transactions.\npublic class MongoTransactionException extends ClientSessionException;\n// A PlatformTransactionManager implementation that manages ClientSession based transactions for a single MongoDatabaseFactory.\npublic class MongoTransactionManager extends AbstractPlatformTransactionManager implements ResourceTransactionManager, InitializingBean;\n// MongoDB specific transaction object, representing a MongoResourceHolder.\nprotected static class MongoTransactionManager.MongoTransactionObject extends Object implements SmartTransactionObject;\n// Interface for factories creating reactive MongoDatabase instances.\npublic interface ReactiveMongoDatabaseFactory extends CodecRegistryProvider;\n// Helper class for managing reactive MongoDatabase instances via ReactiveMongoDatabaseFactory.\npublic class ReactiveMongoDatabaseUtils extends Object;\n", "des": "Spring Data's MongoDB abstraction."}
{"index": 1747, "repo": "spring-data-mongodb-4.1.2", "code": "package config\n\n// Base class for Spring Data MongoDB configuration using JavaConfig with MongoClient.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractMongoClientConfiguration extends MongoConfigurationSupport;\n// Base class for reactive Spring Data MongoDB configuration using JavaConfig.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractReactiveMongoConfiguration extends MongoConfigurationSupport;\n// Constants to declare bean names used by the namespace configuration.\npublic abstract class BeanNames extends Object;\n// Parse a String to a ConnectionString.\npublic class ConnectionStringPropertyEditor extends PropertyEditorSupport;\n// Annotation to enable auditing in MongoDB via annotation configuration.\n@Inherited @Documented @Target(TYPE) @Retention(RUNTIME) @Import(org.springframework.data.mongodb.config.MongoAuditingRegistrar.class) public @interface EnableMongoAuditing;\n// Annotation to enable auditing in MongoDB using reactive infrastructure via annotation configuration.\n@Inherited @Documented @Target(TYPE) @Retention(RUNTIME) @Import(org.springframework.data.mongodb.config.ReactiveMongoAuditingRegistrar.class) public @interface EnableReactiveMongoAuditing;\n// Configuration class to expose GeoJsonModule as a Spring bean.\npublic class GeoJsonConfiguration extends Object implements SpringDataJacksonModules;\n// Bean definition parser for the mapping-converter element.\npublic class MappingMongoConverterParser extends Object implements BeanDefinitionParser;\n// BeanDefinitionParser to register a AuditingEntityCallback to transparently set auditing information on an entity.\npublic class MongoAuditingBeanDefinitionParser extends AbstractSingleBeanDefinitionParser;\n// Parser for mongo-client definitions.\npublic class MongoClientParser extends Object implements BeanDefinitionParser;\n// Base class for Spring Data MongoDB to be extended for JavaConfiguration usage.\npublic abstract class MongoConfigurationSupport extends Object;\n// Parse a String to a Collection of MongoCredential.\npublic class MongoCredentialPropertyEditor extends PropertyEditorSupport;\n// BeanDefinitionParser to parse db-factory elements into BeanDefinitions.\npublic class MongoDbFactoryParser extends AbstractBeanDefinitionParser;\n// \npublic class MongoJmxParser extends Object implements BeanDefinitionParser;\n// NamespaceHandler for Mongo DB configuration.\npublic class MongoNamespaceHandler extends NamespaceHandlerSupport;\n", "des": "Spring XML namespace configuration for MongoDB specific repositories."}
{"index": 1748, "repo": "spring-data-mongodb-4.1.2", "code": "package core\n\n// Bulk operations for insert/update/remove actions on a collection.\npublic interface BulkOperations;\n// Mode for bulk operation.\npublic static enum BulkOperations.BulkMode extends Enum<BulkOperations.BulkMode>;\n// Message implementation specific to MongoDB Change Streams.\npublic class ChangeStreamEvent<T> extends Object;\n// Options applicable to MongoDB Change Streams.\npublic class ChangeStreamOptions extends Object;\n// Builder for creating ChangeStreamOptions.\npublic static class ChangeStreamOptions.ChangeStreamOptionsBuilder extends Object;\n// Callback interface for executing actions against a MongoCollection.\npublic interface CollectionCallback<T>;\n// Provides a simple wrapper to encapsulate the variety of settings you can use when creating a collection.\npublic class CollectionOptions extends Object;\n// Encapsulation of options applied to define collections change stream behaviour.\npublic static class CollectionOptions.CollectionChangeStreamOptions extends Object;\n// Options applicable to Time Series collections.\npublic static class CollectionOptions.TimeSeriesOptions extends Object;\n// Encapsulation of ValidationOptions options.\npublic static class CollectionOptions.ValidationOptions extends Object;\n// Interface for functional preparation of a MongoCollection.\npublic interface CollectionPreparer<T>;\n// Simple callback interface to allow customization of a FindIterable.\npublic interface CursorPreparer extends ReadPreferenceAware;\n// Callback interface for executing actions against a MongoDatabase.\npublic interface DbCallback<T>;\n// Default implementation of IndexOperations.\npublic class DefaultIndexOperations extends Object implements IndexOperations;\n// Default implementation of ReactiveIndexOperations.\npublic class DefaultReactiveIndexOperations extends Object implements ReactiveIndexOperations;\n// An interface used by MongoTemplate for processing documents returned from a MongoDB query on a per-document basis.\npublic interface DocumentCallbackHandler;\n// Encryption algorithms supported by MongoDB Client Side Field Level Encryption.\npublic final class EncryptionAlgorithms extends Object;\n// ExecutableAggregationOperation allows creation and execution of MongoDB aggregation operations in a fluent API style.\npublic interface ExecutableAggregationOperation;\n// Define the aggregation with pipeline stages.\npublic static interface ExecutableAggregationOperation.AggregationWithAggregation<T>;\n// Collection override (Optional).\npublic static interface ExecutableAggregationOperation.AggregationWithCollection<T>;\n", "des": "MongoDB core support."}
{"index": 1749, "repo": "spring-data-mongodb-4.1.2", "code": "package aggregation\n\n// Gateway to accumulator aggregation operations.\npublic class AccumulatorOperators extends Object;\n// \npublic static class AccumulatorOperators.AccumulatorOperatorFactory extends Object;\n// AggregationExpression for $avg.\npublic static class AccumulatorOperators.Avg extends Object;\n// AggregationExpression for $covariancePop.\npublic static class AccumulatorOperators.CovariancePop extends Object;\n// AggregationExpression for $covarianceSamp.\npublic static class AccumulatorOperators.CovarianceSamp extends Object;\n// AccumulatorOperators.ExpMovingAvg calculates the exponential moving average of numeric values.\npublic static class AccumulatorOperators.ExpMovingAvg extends Object;\n// Builder for AccumulatorOperators.ExpMovingAvg.\npublic static interface AccumulatorOperators.ExpMovingAvgBuilder;\n// AggregationExpression for $max.\npublic static class AccumulatorOperators.Max extends Object;\n// AggregationExpression for $min.\npublic static class AccumulatorOperators.Min extends Object;\n// AggregationExpression for $stdDevPop.\npublic static class AccumulatorOperators.StdDevPop extends Object;\n// AggregationExpression for $stdDevSamp.\npublic static class AccumulatorOperators.StdDevSamp extends Object;\n// AggregationExpression for $sum.\npublic static class AccumulatorOperators.Sum extends Object;\n// Adds new fields to documents.\npublic class AddFieldsOperation extends Object;\n// \npublic static class AddFieldsOperation.AddFieldsOperationBuilder extends Object;\n// \npublic static interface AddFieldsOperation.AddFieldsOperationBuilder.ValueAppender;\n// An Aggregation is a representation of a list of aggregation steps to be performed by the MongoDB Aggregation Framework.\npublic class Aggregation extends Object;\n// An AggregationExpression can be used with field expressions in aggregation pipeline stages like project and group.\npublic interface AggregationExpression extends MongoExpression;\n// A criteria to use $expr within a Query.\npublic class AggregationExpressionCriteria extends Object implements CriteriaDefinition;\n// Represents one single operation in an aggregation pipeline.\npublic interface AggregationOperation;\n// The context for an AggregationOperation.\npublic interface AggregationOperationContext extends CodecRegistryProvider;\n// Holds a set of configurable aggregation options that can be used within an aggregation pipeline.\npublic class AggregationOptions extends Object implements ReadConcernAware, ReadPreferenceAware;\n// A Builder for AggregationOptions.\npublic static class AggregationOptions.Builder extends Object;\n", "des": "Support for the MongoDB aggregation framework."}
{"index": 1750, "repo": "spring-data-mongodb-4.1.2", "code": "package annotation\n\n// Collation allows to define the rules used for language-specific string comparison.\n@Inherited @Retention(RUNTIME) @Target({TYPE,METHOD}) public @interface Collation;\n", "des": "Core Spring Data MongoDB annotations not limited to a special use case (like Query,...)."}
{"index": 1751, "repo": "spring-data-mongodb-4.1.2", "code": "package convert\n\n// Base class for MongoConverter implementations.\npublic abstract class AbstractMongoConverter extends Object implements MongoConverter, InitializingBean;\n// \npublic interface DbRefProxyHandler;\n// Used to resolve associations annotated with DBRef.\npublic interface DbRefResolver extends ReferenceResolver;\n// Callback interface to be used in conjunction with DbRefResolver.\npublic interface DbRefResolverCallback;\n// A DbRefResolver that resolves DBRefs by delegating to a DbRefResolverCallback than is able to generate lazy loading proxies.\npublic class DefaultDbRefResolver extends DefaultReferenceResolver implements DbRefResolver, ReferenceResolver;\n// Default implementation of MongoTypeMapper allowing configuration of the key to lookup and store type information in Document.\npublic class DefaultMongoTypeMapper extends DefaultTypeMapper<org.bson.conversions.Bson> implements MongoTypeMapper;\n// TypeAliasAccessor to store aliases in a Document.\npublic static final class DefaultMongoTypeMapper.DocumentTypeAliasAccessor extends Object implements TypeAliasAccessor<org.bson.conversions.Bson>;\n// ReferenceResolver implementation that uses a given ReferenceLookupDelegate to load and convert entity associations expressed via a persitent property.\npublic class DefaultReferenceResolver extends Object implements ReferenceResolver;\n// The source object to resolve document references upon.\npublic class DocumentReferenceSource extends Object;\n// JsonSchemaMapper allows mapping a given Document containing a $jsonSchema to the fields of a given domain type.\npublic interface JsonSchemaMapper;\n// Allows direct interaction with the underlying LazyLoadingInterceptor.\npublic interface LazyLoadingProxy;\n// ProxyFactory to create a proxy for PersistentProperty.getType() to resolve a reference lazily.\npublic final class LazyLoadingProxyFactory extends Object;\n// \npublic static class LazyLoadingProxyFactory.LazyLoadingInterceptor extends Object implements MethodInterceptor, MethodInterceptor, Serializable;\n// MongoConverter that uses a MappingContext to do sophisticated mapping of domain objects to Document.\npublic class MappingMongoConverter extends AbstractMongoConverter implements ApplicationContextAware;\n// Conversion context defining an interface for graph-traversal-based conversion of documents.\nprotected static interface MappingMongoConverter.ConversionContext;\n// Conversion context holding references to simple MappingMongoConverter.DefaultConversionContext.ValueConverter and MappingMongoConverter.DefaultConversionContext.ContainerValueConverter.\nprotected static class MappingMongoConverter.DefaultConversionContext extends Object implements MappingMongoConverter.ConversionContext;\n", "des": "Spring Data MongoDB specific converter infrastructure."}
{"index": 1752, "repo": "spring-data-mongodb-4.1.2", "code": "package encryption\n\n// A specialized MongoValueConverter for encryptiong and decrypting properties.\npublic interface EncryptingConverter<S,T> extends MongoValueConverter<S,T>;\n// Default implementation of EncryptingConverter.\npublic class MongoEncryptionConverter extends Object implements EncryptingConverter<Object,Object>;\n", "des": "Converters integrating with explicit encryption mechanism of Client-Side Field Level Encryption."}
{"index": 1753, "repo": "spring-data-mongodb-4.1.2", "code": "package encryption\n\n// Component responsible for encrypting and decrypting values.\npublic interface Encryption<S,T>;\n// Context to encapsulate encryption for a specific MongoPersistentProperty.\npublic interface EncryptionContext;\n// The EncryptionKey represents a Data Encryption Key reference that can be either direct via the key id or its Key Alternative Name.\npublic interface EncryptionKey;\n// The key reference type.\npublic static enum EncryptionKey.Type extends Enum<EncryptionKey.Type>;\n// Interface to obtain a Data Encryption Key that is valid in a given context.\n@FunctionalInterface public interface EncryptionKeyResolver;\n// Options, like the EncryptionOptions.algorithm(), to apply when encrypting values.\npublic class EncryptionOptions extends Object;\n// ClientEncryption based Encryption implementation.\npublic class MongoClientEncryption extends Object implements Encryption<org.bson.BsonValue,org.bson.BsonBinary>;\n", "des": "Infrastructure for explicit encryption mechanism of Client-Side Field Level Encryption."}
{"index": 1754, "repo": "spring-data-mongodb-4.1.2", "code": "package geo\n\n// Interface definition for structures defined in GeoJSON format.\npublic interface GeoJson<T extends Iterable<?>>;\n// Defines a GeoJsonGeometryCollection that consists of a List of GeoJson objects.\npublic class GeoJsonGeometryCollection extends Object implements GeoJson<Iterable<GeoJson<?>>>;\n// GeoJsonLineString is defined as list of at least 2 Points.\npublic class GeoJsonLineString extends GeoJsonMultiPoint;\n// A Jackson Module to register custom JsonDeserializers for GeoJSON types.\npublic class GeoJsonModule extends com.fasterxml.jackson.databind.module.SimpleModule;\n// GeoJsonMultiLineString is defined as list of GeoJsonLineStrings.\npublic class GeoJsonMultiLineString extends Object implements GeoJson<Iterable<GeoJsonLineString>>;\n// GeoJsonMultiPoint is defined as list of Points.\npublic class GeoJsonMultiPoint extends Object implements GeoJson<Iterable<Point>>;\n// GeoJsonMultiPolygon is defined as a list of GeoJsonPolygons.\npublic class GeoJsonMultiPolygon extends Object implements GeoJson<Iterable<GeoJsonPolygon>>;\n// GeoJson representation of Point.\npublic class GeoJsonPoint extends Point implements GeoJson<List<Double>>;\n// GeoJson representation of Polygon.\npublic class GeoJsonPolygon extends Polygon implements GeoJson<List<GeoJsonLineString>>;\n// Represents a geospatial sphere value.\npublic class Sphere extends Object implements Shape;\n", "des": "Support for MongoDB geo-spatial queries."}
{"index": 1755, "repo": "spring-data-mongodb-4.1.2", "code": "package index\n\n// Mark a class to use compound indexes.\n@Target(TYPE) @Documented @Repeatable(CompoundIndexes.class) @Retention(RUNTIME) public @interface CompoundIndex;\n// Index definition to span multiple keys.\npublic class CompoundIndexDefinition extends Index;\n// Container annotation that allows to collect multiple CompoundIndex annotations.\n@Target(TYPE) @Documented @Retention(RUNTIME) public @interface CompoundIndexes;\n// Value object to capture data to create a geo index.\npublic class GeospatialIndex extends Object implements IndexDefinition;\n// Mark a field to be indexed using MongoDB's geospatial indexing feature.\n@Target({FIELD,ANNOTATION_TYPE}) @Retention(RUNTIME) public @interface GeoSpatialIndexed;\n// Geoposatial index type.\npublic enum GeoSpatialIndexType extends Enum<GeoSpatialIndexType>;\n// IndexDefinition implementation for MongoDB Hashed Indexes maintaining entries with hashes of the values of the indexed field.\npublic class HashedIndex extends Object implements IndexDefinition;\n// Annotation for a property that should be used as key for a Hashed Index.\n@Target({ANNOTATION_TYPE,FIELD}) @Retention(RUNTIME) public @interface HashIndexed;\n// \npublic class Index extends Object implements IndexDefinition;\n// \npublic interface IndexDefinition;\n// \npublic enum IndexDirection extends Enum<IndexDirection>;\n// Mark a field to be indexed using MongoDB's indexing feature.\n@Target({ANNOTATION_TYPE,FIELD}) @Retention(RUNTIME) public @interface Indexed;\n// Value object for an index field.\npublic final class IndexField extends Object;\n// Use IndexFilter to create the partial filter expression used when creating Partial Indexes.\npublic interface IndexFilter;\n// Index information for a MongoDB index.\npublic class IndexInfo extends Object;\n// Index operations on a collection.\npublic interface IndexOperations;\n// Adapter for creating synchronous IndexOperations.\npublic interface IndexOperationsAdapter extends IndexOperations;\n// Provider interface to obtain IndexOperations by MongoDB collection name.\n@FunctionalInterface public interface IndexOperationsProvider;\n// Changeable properties of an index.\npublic class IndexOptions extends Object;\n// \npublic static enum IndexOptions.Unique extends Enum<IndexOptions.Unique>;\n// \npublic abstract class IndexPredicate extends Object;\n", "des": "Support for MongoDB document indexing."}
{"index": 1756, "repo": "spring-data-mongodb-4.1.2", "code": "package mapping\n\n// MongoDB specific MongoPersistentEntity implementation that adds Mongo specific meta-data such as the collection name and the like.\npublic class BasicMongoPersistentEntity<T> extends BasicPersistentEntity<T,MongoPersistentProperty> implements MongoPersistentEntity<T>;\n// MongoDB specific PersistentProperty implementation.\npublic class BasicMongoPersistentProperty extends AnnotationBasedPersistentProperty<MongoPersistentProperty> implements MongoPersistentProperty;\n// MongoPersistentProperty caching access to CachingMongoPersistentProperty.isIdProperty() and CachingMongoPersistentProperty.getFieldName().\npublic class CachingMongoPersistentProperty extends BasicMongoPersistentProperty;\n// An annotation that indicates the annotated field is to be stored using a DBRef.\n@Documented @Retention(RUNTIME) @Target(FIELD) public @interface DBRef;\n// Identifies a domain object to be persisted to MongoDB.\n@Inherited @Retention(RUNTIME) @Target(TYPE) public @interface Document;\n// A custom pointer to a linked document to be used along with DocumentReference for storing the linkage value.\n@FunctionalInterface public interface DocumentPointer<T>;\n// A DocumentReference allows referencing entities in MongoDB using a flexible schema.\n@Documented @Retention(RUNTIME) @Target(FIELD) public @interface DocumentReference;\n// Encrypted provides data required for MongoDB Client Side Field Level Encryption that is applied during schema resolution.\n@Documented @Retention(RUNTIME) @Target({TYPE,FIELD}) public @interface Encrypted;\n// ExplicitEncrypted is a field level ValueConverter annotation that indicates the target element is subject to encryption during the mapping process, in which a given domain type is converted into the store specific format.\n@Retention(RUNTIME) @Target(FIELD) @Encrypted @ValueConverter public @interface ExplicitEncrypted;\n// Annotation to define custom metadata for document fields.\n@Documented @Retention(RUNTIME) @Target({FIELD,METHOD,ANNOTATION_TYPE}) public @interface Field;\n// Enumeration of write strategies to define when a property is included for write conversion.\npublic static enum Field.Write extends Enum<Field.Write>;\n// Enumeration of field value types that can be used to represent a Document field value.\npublic enum FieldType extends Enum<FieldType>;\n// Mark property as language field.\n@Documented @Target(FIELD) @Retention(RUNTIME) public @interface Language;\n", "des": "Infrastructure for the MongoDB document-to-object mapping subsystem."}
{"index": 1757, "repo": "spring-data-mongodb-4.1.2", "code": "package event\n\n// Base class for delete events.\npublic abstract class AbstractDeleteEvent<T> extends MongoMappingEvent<org.bson.Document>;\n// Base class to implement domain class specific ApplicationListeners.\npublic abstract class AbstractMongoEventListener<E> extends Object implements ApplicationListener<MongoMappingEvent<?>>;\n// Callback being invoked after a domain object is materialized from a Document when reading results.\n@FunctionalInterface public interface AfterConvertCallback<T> extends EntityCallback<T>;\n// MongoMappingEvent thrown after convert of a document.\npublic class AfterConvertEvent<E> extends MongoMappingEvent<E>;\n// Event being thrown after a single or a set of documents has/have been deleted.\npublic class AfterDeleteEvent<T> extends AbstractDeleteEvent<T>;\n// Event to be triggered after loading Documents to be mapped onto a given type.\npublic class AfterLoadEvent<T> extends MongoMappingEvent<org.bson.Document>;\n// Entity callback triggered after save of a Document.\n@FunctionalInterface public interface AfterSaveCallback<T> extends EntityCallback<T>;\n// MongoMappingEvent triggered after save of a document.\npublic class AfterSaveEvent<E> extends MongoMappingEvent<E>;\n// EntityCallback to populate auditing related fields on an entity about to be saved.\npublic class AuditingEntityCallback extends Object implements BeforeConvertCallback<Object>, Ordered;\n// Callback being invoked before a domain object is converted to be persisted.\n@FunctionalInterface public interface BeforeConvertCallback<T> extends EntityCallback<T>;\n// Event being thrown before a domain object is converted to be persisted.\npublic class BeforeConvertEvent<T> extends MongoMappingEvent<T>;\n// Event being thrown before a document is deleted.\npublic class BeforeDeleteEvent<T> extends AbstractDeleteEvent<T>;\n// Entity callback triggered before save of a document.\n@FunctionalInterface public interface BeforeSaveCallback<T> extends EntityCallback<T>;\n// MongoMappingEvent triggered before save of a document.\npublic class BeforeSaveEvent<E> extends MongoMappingEvent<E>;\n// ApplicationListener for Mongo mapping events logging the events.\npublic class LoggingEventListener extends AbstractMongoEventListener<Object>;\n", "des": "Mapping event callback infrastructure for the MongoDB document-to-object mapping subsystem."}
{"index": 1758, "repo": "spring-data-mongodb-4.1.2", "code": "package mapreduce\n\n// \n@Deprecated public class MapReduceCounts extends Object;\n// \n@Deprecated public class MapReduceOptions extends Object;\n// \n@Deprecated public class MapReduceResults<T> extends Object implements Iterable<T>;\n// \n@Deprecated public class MapReduceTiming extends Object;\n", "des": "Support for MongoDB map-reduce operations."}
{"index": 1759, "repo": "spring-data-mongodb-4.1.2", "code": "package messaging\n\n// Cancelable allows stopping long running tasks and freeing underlying resources.\npublic interface Cancelable;\n// SubscriptionRequest implementation to be used for listening to Change Streams via a MessageListenerContainer using the synchronous MongoDB Java driver.\npublic class ChangeStreamRequest<T> extends Object implements SubscriptionRequest<com.mongodb.client.model.changestream.ChangeStreamDocument<org.bson.Document>,T,ChangeStreamRequest.ChangeStreamRequestOptions>;\n// Builder for creating ChangeStreamRequest.\npublic static class ChangeStreamRequest.ChangeStreamRequestBuilder<T> extends Object;\n// SubscriptionRequest.RequestOptions implementation specific to a ChangeStreamRequest.\npublic static class ChangeStreamRequest.ChangeStreamRequestOptions extends Object implements SubscriptionRequest.RequestOptions;\n// Simple Executor based MessageListenerContainer implementation for running tasks like listening to MongoDB Change Streams and tailable cursors.\npublic class DefaultMessageListenerContainer extends Object implements MessageListenerContainer;\n// General message abstraction for any type of Event / Message published by MongoDB server to the client.\npublic interface Message<S,T>;\n// \npublic static class Message.MessageProperties extends Object;\n// Builder for Message.MessageProperties.\npublic static class Message.MessageProperties.MessagePropertiesBuilder extends Object;\n// Listener interface to receive delivery of Messages.\n@FunctionalInterface public interface MessageListener<S,T>;\n// Internal abstraction used by the framework representing a message listener container.\npublic interface MessageListenerContainer extends SmartLifecycle;\n// The Subscription is the link between the SubscriptionRequest and the actual running Task.\npublic interface Subscription extends Cancelable;\n// The actual SubscriptionRequest sent to the MessageListenerContainer.\npublic interface SubscriptionRequest<S,T,O extends SubscriptionRequest.RequestOptions>;\n// Options for specifying the behaviour of the SubscriptionRequest.\npublic static interface SubscriptionRequest.RequestOptions;\n// SubscriptionRequest implementation to be used to listen to query results in a Capped Collection using a Tailable Cursor.\npublic class TailableCursorRequest<T> extends Object implements SubscriptionRequest<org.bson.Document,T,SubscriptionRequest.RequestOptions>;\n// Builder for creating TailableCursorRequest.\npublic static class TailableCursorRequest.TailableCursorRequestBuilder<T> extends Object;\n", "des": "MongoDB specific messaging support for listening to eg."}
{"index": 1760, "repo": "spring-data-mongodb-4.1.2", "code": "package query\n\n// Custom Query implementation to setup a basic query from some arbitrary JSON query string.\npublic class BasicQuery extends Query;\n// \npublic class BasicUpdate extends Update;\n// Central abstraction for MongoDB collation support.\npublic class Collation extends Object;\n// \npublic static class Collation.Alternate extends Object;\n// \npublic static class Collation.AlternateWithMaxVariable extends Collation.Alternate;\n// \npublic static class Collation.CaseFirst extends Object;\n// ICU locale abstraction for usage with MongoDB Collation.\npublic static class Collation.CollationLocale extends Object;\n// Abstraction for the ICU Comparison Levels.\npublic static interface Collation.ComparisonLevel;\n// Primary-strength Collation.ICUComparisonLevel.\npublic static class Collation.PrimaryICUComparisonLevel extends Object;\n// Secondary-strength Collation.ICUComparisonLevel.\npublic static class Collation.SecondaryICUComparisonLevel extends Object;\n// Tertiary-strength Collation.ICUComparisonLevel.\npublic static class Collation.TertiaryICUComparisonLevel extends Object;\n// Central class for creating queries.\npublic class Criteria extends Object implements CriteriaDefinition;\n// MongoDB specific bitwise query operators like $bitsAllClear, $bitsAllSet,... for usage with Criteria.bits() and Query.\npublic static interface Criteria.BitwiseCriteriaOperators;\n// \npublic interface CriteriaDefinition;\n// Field projection.\npublic class Field extends Object;\n// Intermediate builder part for projecting a MongoExpression to a result field.\npublic static interface Field.FieldProjectionExpression;\n// Wrapper around a Shape to allow appropriate query rendering.\npublic final class GeoCommand extends Object;\n// Meta-data for Query instances.\npublic class Meta extends Object;\n// Meta.CursorOption represents OP_QUERY wire protocol flags to change the behavior of queries.\npublic static enum Meta.CursorOption extends Enum<Meta.CursorOption>;\n// Metric and Distance conversions using the metric system.\npublic class MetricConversion extends Object;\n// \npublic enum MongoRegexCreator extends Enum<MongoRegexCreator>;\n// Match modes for treatment of String values.\npublic static enum MongoRegexCreator.MatchMode extends Enum<MongoRegexCreator.MatchMode>;\n", "des": "MongoDB specific query and update support."}
{"index": 1761, "repo": "spring-data-mongodb-4.1.2", "code": "package schema\n\n// JsonSchemaProperty implementation.\npublic class IdentifiableJsonSchemaProperty<T extends JsonSchemaObject> extends Object implements JsonSchemaProperty;\n// Convenience JsonSchemaProperty implementation for a type : 'array' property.\npublic static class IdentifiableJsonSchemaProperty.ArrayJsonSchemaProperty extends IdentifiableJsonSchemaProperty<TypedJsonSchemaObject.ArrayJsonSchemaObject>;\n// Convenience JsonSchemaProperty implementation for a type : 'boolean' property.\npublic static class IdentifiableJsonSchemaProperty.BooleanJsonSchemaProperty extends IdentifiableJsonSchemaProperty<TypedJsonSchemaObject.BooleanJsonSchemaObject>;\n// Convenience JsonSchemaProperty implementation for a type : 'date' property.\npublic static class IdentifiableJsonSchemaProperty.DateJsonSchemaProperty extends IdentifiableJsonSchemaProperty<org.springframework.data.mongodb.core.schema.TypedJsonSchemaObject.DateJsonSchemaObject>;\n// JsonSchemaProperty implementation for encrypted fields.\npublic static class IdentifiableJsonSchemaProperty.EncryptedJsonSchemaProperty extends Object implements JsonSchemaProperty;\n// Convenience JsonSchemaProperty implementation for a type : 'null' property.\npublic static class IdentifiableJsonSchemaProperty.NullJsonSchemaProperty extends IdentifiableJsonSchemaProperty<org.springframework.data.mongodb.core.schema.TypedJsonSchemaObject.NullJsonSchemaObject>;\n// Convenience JsonSchemaProperty implementation for a type : 'number' property.\npublic static class IdentifiableJsonSchemaProperty.NumericJsonSchemaProperty extends IdentifiableJsonSchemaProperty<TypedJsonSchemaObject.NumericJsonSchemaObject>;\n// Convenience JsonSchemaProperty implementation for a type : 'object' property.\npublic static class IdentifiableJsonSchemaProperty.ObjectJsonSchemaProperty extends IdentifiableJsonSchemaProperty<TypedJsonSchemaObject.ObjectJsonSchemaObject>;\n// Delegating JsonSchemaProperty implementation having a required flag for evaluation during schema creation process.\npublic static class IdentifiableJsonSchemaProperty.RequiredJsonSchemaProperty extends Object implements JsonSchemaProperty;\n// Convenience JsonSchemaProperty implementation for a type : 'string' property.\npublic static class IdentifiableJsonSchemaProperty.StringJsonSchemaProperty extends IdentifiableJsonSchemaProperty<TypedJsonSchemaObject.StringJsonSchemaObject>;\n", "des": "MongoDB-specific JSON schema implementation classes."}
{"index": 1762, "repo": "spring-data-mongodb-4.1.2", "code": "package script\n\n// \n@Deprecated public class ExecutableMongoScript extends Object;\n// \n@Deprecated public class NamedMongoScript extends Object;\n", "des": "Abstraction classes javascript function execution within MongoDB Server."}
{"index": 1763, "repo": "spring-data-mongodb-4.1.2", "code": "package spel\n\n// A value object for nodes in an expression.\npublic class ExpressionNode extends Object implements Iterable<ExpressionNode>;\n// The context for an ExpressionNode transformation.\npublic class ExpressionTransformationContextSupport<T extends ExpressionNode> extends Object;\n// SPI interface to implement components that can transform an ExpressionTransformationContextSupport into an object.\npublic interface ExpressionTransformer<T extends ExpressionTransformationContextSupport<?>>;\n// A node representing a literal in an expression.\npublic class LiteralNode extends ExpressionNode;\n// An ExpressionNode representing a method reference.\npublic class MethodReferenceNode extends ExpressionNode;\n// \npublic static final class MethodReferenceNode.AggregationMethodReference extends Object;\n// The actual argument type to use when mapping parameters to MongoDB specific format.\npublic static enum MethodReferenceNode.AggregationMethodReference.ArgumentType extends Enum<MethodReferenceNode.AggregationMethodReference.ArgumentType>;\n// \npublic class NotOperatorNode extends ExpressionNode;\n// An ExpressionNode representing an operator.\npublic class OperatorNode extends ExpressionNode;\n", "des": "Support classes to transform SpEL expressions into MongoDB expressions."}
{"index": 1764, "repo": "spring-data-mongodb-4.1.2", "code": "package validation\n\n// Provides a validator object to be used for collection validation via CollectionOptions.ValidationOptions.\npublic interface Validator;\n", "des": "MongoDB schema validation specifics."}
{"index": 1765, "repo": "spring-data-mongodb-4.1.2", "code": "package gridfs\n\n// GridFs-specific helper class to define Criterias.\npublic class GridFsCriteria extends Criteria;\n// A common interface when dealing with GridFs items using Spring Data.\npublic interface GridFsObject<ID,CONTENT>;\n// Additional, context relevant information.\npublic static class GridFsObject.Options extends Object;\n// Collection of operations to store and read files from MongoDB GridFS.\npublic interface GridFsOperations extends ResourcePatternResolver;\n// GridFSFile based Resource implementation.\npublic class GridFsResource extends InputStreamResource implements GridFsObject<Object,InputStream>;\n// GridFsOperations implementation to store content into MongoDB GridFS.\npublic class GridFsTemplate extends Object implements GridFsOperations, ResourcePatternResolver;\n// Upload descriptor for a GridFS file upload.\npublic class GridFsUpload<ID> extends Object implements GridFsObject<ID,InputStream>;\n// Builder to create GridFsUpload in a fluent way.\npublic static class GridFsUpload.GridFsUploadBuilder<T> extends Object;\n// Collection of operations to store and read files from MongoDB GridFS using reactive infrastructure.\npublic interface ReactiveGridFsOperations;\n// Reactive GridFSFile based Resource implementation.\npublic class ReactiveGridFsResource extends Object implements GridFsObject<Object,org.reactivestreams.Publisher<DataBuffer>>;\n// ReactiveGridFsOperations implementation to store content into MongoDB GridFS.\npublic class ReactiveGridFsTemplate extends Object implements ReactiveGridFsOperations;\n// Upload descriptor for a GridFS file upload.\npublic class ReactiveGridFsUpload<ID> extends Object implements GridFsObject<ID,org.reactivestreams.Publisher<DataBuffer>>;\n// Builder to create ReactiveGridFsUpload in a fluent way.\npublic static class ReactiveGridFsUpload.ReactiveGridFsUploadBuilder<T> extends Object;\n", "des": "Support for MongoDB GridFS feature."}
{"index": 1766, "repo": "spring-data-mongodb-4.1.2", "code": "package monitor\n\n// Base class to encapsulate common configuration settings when connecting to a database\npublic abstract class AbstractMonitor extends Object;\n// JMX Metrics for assertions\n@ManagedResource(description=\"Assertion Metrics\") public class AssertMetrics extends AbstractMonitor;\n// JMX Metrics for Background Flushing\n@ManagedResource(description=\"Background Flushing Metrics\") public class BackgroundFlushingMetrics extends AbstractMonitor;\n// JMX Metrics for B-tree index counters\n@ManagedResource(description=\"Btree Metrics\") public class BtreeIndexCounters extends AbstractMonitor;\n// JMX Metrics for Connections\n@ManagedResource(description=\"Connection metrics\") public class ConnectionMetrics extends AbstractMonitor;\n// JMX Metrics for Global Locks\n@ManagedResource(description=\"Global Lock Metrics\") public class GlobalLockMetrics extends AbstractMonitor;\n// JMX Metrics for Memory\n@ManagedResource(description=\"Memory Metrics\") public class MemoryMetrics extends AbstractMonitor;\n// JMX Metrics for Operation counters\n@ManagedResource(description=\"Operation Counters\") public class OperationCounters extends AbstractMonitor;\n// Expose basic server information via JMX\n@ManagedResource(description=\"Server Information\") public class ServerInfo extends AbstractMonitor;\n", "des": "MongoDB specific JMX monitoring support."}
{"index": 1767, "repo": "spring-data-mongodb-4.1.2", "code": "package observability\n\n// Factory to create a ContextProvider to propagate the request context across tasks.\npublic class ContextProviderFactory extends Object;\n// ObservationConvention for MongoHandlerContext.\npublic interface MongoHandlerObservationConvention extends io.micrometer.observation.ObservationConvention<org.springframework.data.mongodb.observability.MongoHandlerContext>;\n// Implement MongoDB's CommandListener using Micrometer's Observation API.\npublic class MongoObservationCommandListener extends Object implements com.mongodb.event.CommandListener;\n", "des": "Infrastructure to provide driver observability using Micrometer."}
{"index": 1768, "repo": "spring-data-mongodb-4.1.2", "code": "package repository\n\n// The Aggregation annotation can be used to annotate a Repository query method so that it runs the Aggregation.pipeline() on invocation.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented public @interface Aggregation;\n// Annotation to declare finder count queries directly on repository methods.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @Query(count=true) public @interface CountQuery;\n// Annotation to declare finder delete queries directly on repository methods.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @Query(delete=true) public @interface DeleteQuery;\n// Annotation to declare finder exists queries directly on repository methods.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @Query(exists=true) public @interface ExistsQuery;\n// Annotation to declare index hints for repository query, update and aggregate operations.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented public @interface Hint;\n// \n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented public @interface Meta;\n// Mongo specific Repository interface.\n@NoRepositoryBean public interface MongoRepository<T,ID> extends ListCrudRepository<T,ID>, ListPagingAndSortingRepository<T,ID>, QueryByExampleExecutor<T>;\n// Annotation to be used for disambiguing method parameters that shall be used to trigger geo near queries.\n@Documented @Retention(RUNTIME) @Target(PARAMETER) public @interface Near;\n// Annotation to declare finder queries directly on repository methods.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @Hint public @interface Query;\n// Mongo specific Repository interface with reactive support.\n@NoRepositoryBean public interface ReactiveMongoRepository<T,ID> extends ReactiveCrudRepository<T,ID>, ReactiveSortingRepository<T,ID>, ReactiveQueryByExampleExecutor<T>;\n// Annotation to declare an infinite stream using MongoDB's tailable cursors.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented public @interface Tailable;\n", "des": "MongoDB specific repository implementation."}
{"index": 1769, "repo": "spring-data-mongodb-4.1.2", "code": "package aot\n\n// \npublic class AotMongoRepositoryPostProcessor extends RepositoryRegistrationAotProcessor;\n", "des": "Ahead-Of-Time processors for MongoDB repositories."}
{"index": 1770, "repo": "spring-data-mongodb-4.1.2", "code": "package cdi\n\n// CdiRepositoryBean to create Mongo repository instances.\npublic class MongoRepositoryBean<T> extends CdiRepositoryBean<T>;\n// CDI extension to export Mongo repositories.\npublic class MongoRepositoryExtension extends CdiRepositoryExtensionSupport;\n", "des": "CDI support for MongoDB specific repository implementation."}
{"index": 1771, "repo": "spring-data-mongodb-4.1.2", "code": "package config\n\n// Annotation to activate MongoDB repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(org.springframework.data.mongodb.repository.config.MongoRepositoriesRegistrar.class) public @interface EnableMongoRepositories;\n// Annotation to activate reactive MongoDB repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(org.springframework.data.mongodb.repository.config.ReactiveMongoRepositoriesRegistrar.class) public @interface EnableReactiveMongoRepositories;\n// NamespaceHandler to register repository configuration.\npublic class MongoRepositoryConfigNamespaceHandler extends MongoNamespaceHandler;\n// RepositoryConfigurationExtension for MongoDB.\npublic class MongoRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport;\n// Reactive RepositoryConfigurationExtension for MongoDB.\npublic class ReactiveMongoRepositoryConfigurationExtension extends MongoRepositoryConfigurationExtension;\n", "des": "Support infrastructure for the configuration of MongoDB specific repositories."}
{"index": 1772, "repo": "spring-data-mongodb-4.1.2", "code": "package query\n\n// Base class for RepositoryQuery implementations for Mongo.\npublic abstract class AbstractMongoQuery extends Object implements RepositoryQuery;\n// Base class for reactive RepositoryQuery implementations for MongoDB.\npublic abstract class AbstractReactiveMongoQuery extends Object implements RepositoryQuery;\n// Custom ParameterAccessor that uses a MongoWriter to serialize parameters into Mongo format.\npublic class ConvertingParameterAccessor extends Object implements MongoParameterAccessor;\n// Custom Iterator that adds a method to access elements in a converted manner.\npublic static interface ConvertingParameterAccessor.PotentiallyConvertingIterator extends Iterator<Object>;\n// Mongo specific EntityInformation.\npublic interface MongoEntityInformation<T,ID> extends EntityInformation<T,ID>;\n// Extension of EntityMetadata to additionally expose the collection name an entity shall be persisted to.\npublic interface MongoEntityMetadata<T> extends EntityMetadata<T>;\n// Mongo-specific ParameterAccessor exposing a maximum distance parameter.\npublic interface MongoParameterAccessor extends ParameterAccessor;\n// Custom extension of Parameters discovering additional\npublic class MongoParameters extends Parameters<MongoParameters,org.springframework.data.mongodb.repository.query.MongoParameters.MongoParameter>;\n// Mongo-specific ParametersParameterAccessor to allow access to the Distance parameter.\npublic class MongoParametersParameterAccessor extends ParametersParameterAccessor implements MongoParameterAccessor;\n// Mongo specific implementation of QueryMethod.\npublic class MongoQueryMethod extends QueryMethod;\n// RepositoryQuery implementation for Mongo.\npublic class PartTreeMongoQuery extends AbstractMongoQuery;\n// Reactive specific implementation of MongoQueryMethod.\npublic class ReactiveMongoQueryMethod extends MongoQueryMethod;\n// Reactive PartTree RepositoryQuery implementation for Mongo.\npublic class ReactivePartTreeMongoQuery extends AbstractReactiveMongoQuery;\n// A reactive RepositoryQuery to use a plain JSON String to create an aggregation pipeline to actually execute.\npublic class ReactiveStringBasedAggregation extends AbstractReactiveMongoQuery;\n// Query to use a plain JSON String to create the Query to actually execute.\npublic class ReactiveStringBasedMongoQuery extends AbstractReactiveMongoQuery;\n// AbstractMongoQuery implementation to run string-based aggregations using Aggregation.\npublic class StringBasedAggregation extends AbstractMongoQuery;\n// Query to use a plain JSON String to create the Query to actually execute.\npublic class StringBasedMongoQuery extends AbstractMongoQuery;\n", "des": "Query derivation mechanism for MongoDB specific repositories."}
{"index": 1773, "repo": "spring-data-mongodb-4.1.2", "code": "package support\n\n// MongoEntityInformation implementation using a MongoPersistentEntity instance to lookup the necessary information.\npublic class MappingMongoEntityInformation<T,ID> extends PersistentEntityInformation<T,ID> implements MongoEntityInformation<T,ID>;\n// Annotation processor to create Querydsl query types for QueryDsl annotated classes.\n@SupportedAnnotationTypes({\"com.querydsl.core.annotations.*\",\"org.springframework.data.mongodb.core.mapping.*\"}) @SupportedSourceVersion(RELEASE_6) public class MongoAnnotationProcessor extends com.querydsl.apt.AbstractQuerydslProcessor;\n// Factory to create MongoRepository instances.\npublic class MongoRepositoryFactory extends RepositoryFactorySupport;\n// FactoryBean to create MongoRepository instances.\npublic class MongoRepositoryFactoryBean<T extends Repository<S,ID>,S,ID extends Serializable> extends RepositoryFactoryBeanSupport<T,S,ID>;\n// MongoDB-specific QuerydslPredicateExecutor that allows execution Predicates in various forms.\npublic class QuerydslMongoPredicateExecutor<T> extends Object implements QuerydslPredicateExecutor<T>;\n// Base class to create repository implementations based on Querydsl.\npublic abstract class QuerydslRepositorySupport extends Object;\n// Factory to create ReactiveMongoRepository instances.\npublic class ReactiveMongoRepositoryFactory extends ReactiveRepositoryFactorySupport;\n// FactoryBean to create ReactiveMongoRepository instances.\npublic class ReactiveMongoRepositoryFactoryBean<T extends Repository<S,ID>,S,ID extends Serializable> extends RepositoryFactoryBeanSupport<T,S,ID>;\n// MongoDB-specific QuerydslPredicateExecutor that allows execution Predicates in various forms.\npublic class ReactiveQuerydslMongoPredicateExecutor<T> extends Object implements ReactiveQuerydslPredicateExecutor<T>;\n// Repository base implementation for Mongo.\npublic class SimpleMongoRepository<T,ID> extends Object implements MongoRepository<T,ID>;\n// Reactive repository base implementation for Mongo.\npublic class SimpleReactiveMongoRepository<T,ID extends Serializable> extends Object implements ReactiveMongoRepository<T,ID>;\n// Spring Data specific simple Fetchable Query implementation.\npublic class SpringDataMongodbQuery<T> extends com.querydsl.mongodb.document.AbstractMongodbQuery<Q> implements com.querydsl.core.Fetchable<T>;\n", "des": "Support infrastructure for query derivation of MongoDB specific repositories."}
{"index": 1774, "repo": "spring-data-mongodb-4.1.2", "code": "package util\n\n// Internal API for operations on Bson elements that can be either Document or DBObject.\npublic class BsonUtils extends Object;\n// \npublic class DBObjectUtils extends Object;\n// Value object representing a dot path.\npublic class DotPath extends Object;\n// MongoClientVersion holds information about the used mongo-java client and is used to distinguish between different versions.\npublic class MongoClientVersion extends Object;\n// MongoDbErrorCodes holds MongoDB specific error codes outlined in mongo/base/error_codes.err.\npublic final class MongoDbErrorCodes extends Object;\n// Utility to translate regex flags to MongoDB regex options and vice versa.\npublic abstract class RegexFlags extends Object;\n", "des": "MongoDB driver-specific utility classes for Bson and DBObject interaction."}
{"index": 1775, "repo": "spring-data-mongodb-4.1.2", "code": "package json\n\n// Reusable context for binding parameters to a placeholder or a SpEL expression within a JSON structure.\npublic class ParameterBindingContext extends Object;\n// A Codec implementation that allows binding parameters to placeholders or SpEL expressions when decoding a JSON String.\npublic class ParameterBindingDocumentCodec extends Object implements org.bson.codecs.CollectibleCodec<org.bson.Document>;\n// Reads a JSON and evaluates placehoders and SpEL expressions.\npublic class ParameterBindingJsonReader extends org.bson.AbstractBsonReader;\n// A value provider to retrieve bindable values by their parameter index.\n@FunctionalInterface public interface ValueProvider;\n", "des": "MongoDB driver-specific utility classes for Json conversion."}
{"index": 1776, "repo": "slf4j-api-2.0.7", "code": "package slf4j\n\n// ILoggerFactory instances manufacture Logger instances by name.\npublic interface ILoggerFactory;\n// Implementations of this interface are used to manufacture Marker instances.\npublic interface IMarkerFactory;\n// The org.slf4j.Logger interface is the main user entry point of SLF4J API.\npublic interface Logger;\n// The LoggerFactory is a utility class producing Loggers for various logging APIs, most notably for log4j, logback and JDK 1.4 logging.\npublic final class LoggerFactory extends Object;\n// All methods in this class are reserved for internal use, for testing purposes.\npublic class LoggerFactoryFriend extends Object;\n// Markers are named objects used to enrich log statements.\npublic interface Marker extends Serializable;\n// MarkerFactory is a utility class producing Marker instances as appropriate for the logging system currently in use.\npublic class MarkerFactory extends Object;\n// This class hides and serves as a substitute for the underlying logging system's MDC implementation.\npublic class MDC extends Object;\n// An adapter to remove the key when done.\npublic static class MDC.MDCCloseable extends Object implements Closeable;\n", "des": "Core logging interfaces."}
{"index": 1777, "repo": "slf4j-api-2.0.7", "code": "package helpers\n\n// An abstract implementation which delegates actual logging work to the AbstractLogger.handleNormalizedLoggingCall(Level, Marker, String, Object[], Throwable) method.\npublic abstract class AbstractLogger extends Object implements Logger, Serializable;\n// A simple implementation of the Marker interface.\npublic class BasicMarker extends Object implements Marker;\n// An almost trivial implementation of the IMarkerFactory interface which creates BasicMarker instances.\npublic class BasicMarkerFactory extends Object implements IMarkerFactory;\n// Basic MDC implementation, which can be used with logging systems that lack out-of-the-box MDC support.\npublic class BasicMDCAdapter extends Object implements MDCAdapter;\n// Used to annotate methods in the LoggingEventBuilder interface which return an instance of LoggingEventBuilder (usually as this).\n@Documented @Target(METHOD) @Retention(RUNTIME) public @interface CheckReturnValue;\n// Holds the results of formatting done by MessageFormatter.\npublic class FormattingTuple extends Object;\n// Provides minimal default implementations for LegacyAbstractLogger.isTraceEnabled(Marker), LegacyAbstractLogger.isDebugEnabled(Marker) and other similar methods.\npublic abstract class LegacyAbstractLogger extends AbstractLogger;\n// \npublic abstract class MarkerIgnoringBase extends Object implements Logger;\n// Formats messages according to very simple substitution rules.\npublic final class MessageFormatter extends Object;\n// \npublic class NOP_FallbackServiceProvider extends Object implements SLF4JServiceProvider;\n// A direct NOP (no operation) implementation of Logger.\npublic class NOPLogger extends Object implements Logger;\n// NOPLoggerFactory is a trivial implementation of ILoggerFactory which always returns the unique instance of NOPLogger.\npublic class NOPLoggerFactory extends Object implements ILoggerFactory;\n// This adapter is an empty implementation of the MDCAdapter interface.\npublic class NOPMDCAdapter extends Object implements MDCAdapter;\n// Holds normalized call parameters.\npublic class NormalizedParameters extends Object;\n// A logger implementation which logs via a delegate logger.\npublic class SubstituteLogger extends Object implements Logger;\n// SubstituteLoggerFactory manages instances of SubstituteLogger.\npublic class SubstituteLoggerFactory extends Object implements ILoggerFactory;\n// \npublic class SubstituteServiceProvider extends Object implements SLF4JServiceProvider;\n", "des": "Helper classes."}
{"index": 1778, "repo": "slf4j-api-2.0.7", "code": "package spi\n\n// Additional interface to LoggingEventBuilder and LoggingEvent.\npublic interface CallerBoundaryAware;\n// Default implementation of LoggingEventBuilder\npublic class DefaultLoggingEventBuilder extends Object implements LoggingEventBuilder, CallerBoundaryAware;\n// An optional interface helping integration with logging systems capable of extracting location information.\npublic interface LocationAwareLogger extends Logger;\n// \npublic interface LoggerFactoryBinder;\n// A logger capable of logging from org.slf4j.event.LoggingEvent implements this interface.\npublic interface LoggingEventAware;\n// This is the main interface in slf4j's fluent API for creating logging events.\npublic interface LoggingEventBuilder;\n// \npublic interface MarkerFactoryBinder;\n// This interface abstracts the service offered by various MDC implementations.\npublic interface MDCAdapter;\n// A no-operation implementation of LoggingEventBuilder.\npublic class NOPLoggingEventBuilder extends Object implements LoggingEventBuilder;\n// This interface based on ServiceLoader paradigm.\npublic interface SLF4JServiceProvider;\n", "des": "Classes and interfaces which are internal to SLF4J."}
{"index": 1779, "repo": "spring-integration-file-6.1.2", "code": "package file\n\n// Default directory scanner and base class for other directory scanners.\npublic class DefaultDirectoryScanner extends Object implements DirectoryScanner;\n// Default implementation of the filename generator strategy.\npublic class DefaultFileNameGenerator extends org.springframework.integration.util.AbstractExpressionEvaluator implements FileNameGenerator;\n// Strategy for scanning directories.\npublic interface DirectoryScanner;\n// Pre-defined header names to be used when storing or retrieving File-related values to/from integration Message Headers.\npublic abstract class FileHeaders extends Object;\n// A FileLocker is a strategy that can ensure that files are only processed a single time.\npublic interface FileLocker;\n// Strategy interface for generating a file name from a message.\n@FunctionalInterface public interface FileNameGenerator;\n// MessageSource that creates messages from a file system directory.\npublic class FileReadingMessageSource extends org.springframework.integration.endpoint.AbstractMessageSource<File> implements org.springframework.integration.support.management.ManageableLifecycle;\n// \npublic static enum FileReadingMessageSource.WatchEventType extends Enum<FileReadingMessageSource.WatchEventType>;\n// A MessageHandler implementation that writes the Message payload to a file.\npublic class FileWritingMessageHandler extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler implements org.springframework.integration.support.management.ManageableLifecycle, org.springframework.integration.handler.MessageTriggerAction;\n// When using FileExistsMode.APPEND_NO_FLUSH, an implementation of this interface is called for each file that has pending data to flush and close when FileWritingMessageHandler.flushIfNeeded(FlushPredicate) is invoked.\n@FunctionalInterface public static interface FileWritingMessageHandler.FlushPredicate;\n// When using FileExistsMode.APPEND_NO_FLUSH an implementation of this interface is called for each file that has pending data to flush when a trigger message is received.\n@FunctionalInterface public static interface FileWritingMessageHandler.MessageFlushPredicate;\n// A custom scanner that only returns the first maxNumberOfFiles elements from a directory listing.\npublic class HeadDirectoryScanner extends DefaultDirectoryScanner;\n// The DefaultDirectoryScanner extension which walks through the directory tree using Files.walk(Path, int, FileVisitOption...).\npublic class RecursiveDirectoryScanner extends DefaultDirectoryScanner;\n", "des": "Base package for File support."}
{"index": 1780, "repo": "spring-integration-file-6.1.2", "code": "package aggregator\n\n// An AbstractAggregatingMessageGroupProcessor implementation for file content collecting previously splitted by the FileSplitter with the markers option turned on.\npublic class FileAggregatingMessageGroupProcessor extends org.springframework.integration.aggregator.AbstractAggregatingMessageGroupProcessor;\n// A convenient component to utilize a FileSplitter.FileMarker-based aggregation logic.\npublic class FileAggregator extends Object implements org.springframework.integration.aggregator.CorrelationStrategy, org.springframework.integration.aggregator.ReleaseStrategy, org.springframework.integration.aggregator.GroupConditionProvider, org.springframework.integration.aggregator.MessageGroupProcessor, org.springframework.beans.factory.BeanFactoryAware;\n// A ReleaseStrategy which makes a decision based on the presence of FileSplitter.FileMarker.Mark.END message in the group and its FileHeaders.LINE_COUNT header.\npublic class FileMarkerReleaseStrategy extends Object implements org.springframework.integration.aggregator.ReleaseStrategy, org.springframework.integration.aggregator.GroupConditionProvider;\n", "des": "Provides support classes for file-based aggregation logic."}
{"index": 1781, "repo": "spring-integration-file-6.1.2", "code": "package config\n\n// Base class for File payload transformer parsers.\npublic abstract class AbstractFilePayloadTransformerParser extends org.springframework.integration.config.xml.AbstractTransformerParser;\n// Abstract base class for parsing remote file inbound channel adapters.\npublic abstract class AbstractRemoteFileInboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n// \npublic abstract class AbstractRemoteFileOutboundGatewayParser extends org.springframework.integration.config.xml.AbstractConsumerEndpointParser;\n// Abstract base class for parsing remote file streaming inbound channel adapters.\npublic abstract class AbstractRemoteFileStreamingInboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n// Parser for the <inbound-channel-adapter> element of the 'file' namespace.\npublic class FileInboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n// \npublic class FileListFilterFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<FileListFilter<File>>;\n// Namespace handler for Spring Integration's 'file' namespace.\npublic class FileNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n// Parser for the <outbound-channel-adapter/> element of the 'file' namespace.\npublic class FileOutboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractOutboundChannelAdapterParser;\n// Parser for the 'outbound-gateway' element of the file namespace.\npublic class FileOutboundGatewayParser extends org.springframework.integration.config.xml.AbstractConsumerEndpointParser;\n// \npublic final class FileParserUtils extends Object;\n// \npublic class FileReadingMessageSourceFactoryBean extends org.springframework.beans.factory.config.AbstractFactoryBean<FileReadingMessageSource> implements org.springframework.beans.factory.BeanNameAware;\n// \npublic class FileSplitterParser extends org.springframework.integration.config.xml.AbstractConsumerEndpointParser;\n", "des": "Provides classes for configuration - parsers, namespace handlers, factory beans."}
{"index": 1782, "repo": "spring-integration-file-6.1.2", "code": "package dsl\n\n// A MessageSourceSpec for a FileReadingMessageSource.\npublic class FileInboundChannelAdapterSpec extends org.springframework.integration.dsl.MessageSourceSpec<FileInboundChannelAdapterSpec,FileReadingMessageSource> implements org.springframework.integration.dsl.ComponentsRegistration;\n// The Spring Integration File components Factory.\npublic abstract class Files extends Object;\n// The MessageHandlerSpec for the FileSplitter.\npublic class FileSplitterSpec extends org.springframework.integration.dsl.MessageHandlerSpec<FileSplitterSpec,FileSplitter>;\n// The MessageHandlerSpec for the FileTransferringMessageHandler.\npublic abstract class FileTransferringMessageHandlerSpec<F,S extends FileTransferringMessageHandlerSpec<F,S>> extends org.springframework.integration.dsl.MessageHandlerSpec<S,FileTransferringMessageHandler<F>> implements org.springframework.integration.dsl.ComponentsRegistration;\n// The MessageHandlerSpec for the FileWritingMessageHandler.\npublic class FileWritingMessageHandlerSpec extends org.springframework.integration.dsl.MessageHandlerSpec<FileWritingMessageHandlerSpec,FileWritingMessageHandler> implements org.springframework.integration.dsl.ComponentsRegistration;\n// A MessageSourceSpec for an AbstractInboundFileSynchronizingMessageSource.\npublic abstract class RemoteFileInboundChannelAdapterSpec<F,S extends RemoteFileInboundChannelAdapterSpec<F,S,MS>,MS extends AbstractInboundFileSynchronizingMessageSource<F>> extends org.springframework.integration.dsl.MessageSourceSpec<S,MS> implements org.springframework.integration.dsl.ComponentsRegistration;\n// The MessageHandlerSpec for the AbstractRemoteFileOutboundGateway.\npublic abstract class RemoteFileOutboundGatewaySpec<F,S extends RemoteFileOutboundGatewaySpec<F,S>> extends org.springframework.integration.dsl.MessageHandlerSpec<S,AbstractRemoteFileOutboundGateway<F>> implements org.springframework.integration.dsl.ComponentsRegistration;\n", "des": "Provides File Components support for Spring Integration Java DSL."}
{"index": 1783, "repo": "spring-integration-file-6.1.2", "code": "package event\n\n// \npublic abstract class FileIntegrationEvent extends org.springframework.integration.events.IntegrationEvent;\n", "des": "ApplicationEvents generated by the file module."}
{"index": 1784, "repo": "spring-integration-file-6.1.2", "code": "package filters\n\n// A file list filter that can be configured to always accept (pass) directories.\npublic abstract class AbstractDirectoryAwareFileListFilter<F> extends AbstractFileListFilter<F>;\n// A convenience base class for any FileListFilter whose criteria can be evaluated against each File in isolation.\npublic abstract class AbstractFileListFilter<F> extends Object implements FileListFilter<F>;\n// A FileListFilter that only passes files matched by one or more FileListFilter if a corresponding marker file is also present to indicate a file transfer is complete.\npublic abstract class AbstractMarkerFilePresentFileListFilter<F> extends Object implements FileListFilter<F>;\n// Stores \"seen\" files in a MetadataStore to survive application restarts.\npublic abstract class AbstractPersistentAcceptOnceFileListFilter<F> extends AbstractDirectoryAwareFileListFilter<F> implements ReversibleFileListFilter<F>, ResettableFileListFilter<F>, Closeable;\n// Filters a listing of files by qualifying their 'name' against a regular expression (an instance of Pattern).\npublic abstract class AbstractRegexPatternFileListFilter<F> extends AbstractDirectoryAwareFileListFilter<F>;\n// Base class for filters that support ant style path expressions, which are less powerful but more readable than regular expressions.\npublic abstract class AbstractSimplePatternFileListFilter<F> extends AbstractDirectoryAwareFileListFilter<F>;\n// Simple implementation of FileListFilter that always returns true.\npublic class AcceptAllFileListFilter<F> extends AbstractFileListFilter<F>;\n// FileListFilter that passes files only one time.\npublic class AcceptOnceFileListFilter<F> extends AbstractFileListFilter<F> implements ReversibleFileListFilter<F>, ResettableFileListFilter<F>;\n// The CompositeFileListFilter extension which chains the result of the previous filter to the next one.\npublic class ChainFileListFilter<F> extends CompositeFileListFilter<F>;\n// Simple FileListFilter that predicates its matches against all of the configured FileListFilter.\npublic class CompositeFileListFilter<F> extends Object implements ReversibleFileListFilter<F>, ResettableFileListFilter<F>, DiscardAwareFileListFilter<F>, Closeable;\n// The FileListFilter modification which can accept a Consumer which can be called when the filter discards the file.\npublic interface DiscardAwareFileListFilter<F> extends FileListFilter<F>;\n", "des": "Provides classes supporting file filtering."}
{"index": 1785, "repo": "spring-integration-file-6.1.2", "code": "package locking\n\n// Convenience base class for implementing FileLockers that check a lock before accepting a file.\npublic abstract class AbstractFileLockerFilter extends AbstractFileListFilter<File> implements FileLocker;\n// File locking strategy that uses java.nio.\npublic class NioFileLocker extends AbstractFileLockerFilter;\n", "des": "Provides classes supporting file locking."}
{"index": 1786, "repo": "spring-integration-file-6.1.2", "code": "package remote\n\n// Abstract implementation of FileInfo; provides a setter for the remote directory and a generic toString implementation.\npublic abstract class AbstractFileInfo<F> extends Object implements FileInfo<F>, Comparable<FileInfo<F>>;\n// A message source that produces a message with an InputStream payload referencing a remote file.\npublic abstract class AbstractRemoteFileStreamingMessageSource<F> extends org.springframework.integration.endpoint.AbstractFetchLimitingMessageSource<InputStream> implements org.springframework.integration.support.management.ManageableLifecycle;\n// RemoteFileTemplate callback with the underlying client instance providing access to lower level methods.\n@FunctionalInterface public interface ClientCallback<C,T>;\n// RemoteFileTemplate callback with the underlying client instance providing access to lower level methods where no result is returned.\n@FunctionalInterface public interface ClientCallbackWithoutResult<C> extends ClientCallback<C,Object>;\n// Represents a remote file info - an abstraction over the underlying implementation.\npublic interface FileInfo<F>;\n// Callback for stream-based file retrieval using a RemoteFileOperations.\n@FunctionalInterface public interface InputStreamCallback;\n// Callback invoked by RemoteFileOperations.executeForMessage() - allows multiple operations on a session.\n@FunctionalInterface public interface MessageSessionCallback<F,T>;\n// Strategy for performing operations on remote files.\npublic interface RemoteFileOperations<F>;\n// Callback for using the same session for multiple RemoteFileTemplate operations.\n@FunctionalInterface public static interface RemoteFileOperations.OperationsCallback<F,T>;\n// A general abstraction for dealing with remote files.\npublic class RemoteFileTemplate<F> extends Object implements RemoteFileOperations<F>, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.BeanFactoryAware;\n// Utility methods for supporting remote file operations.\npublic final class RemoteFileUtils extends Object;\n// Callback invoked by RemoteFileOperations.execute() - allows multiple operations on a session.\n@FunctionalInterface public interface SessionCallback<F,T>;\n// Simple convenience implementation of SessionCallback for cases where no result is returned.\n@FunctionalInterface public interface SessionCallbackWithoutResult<F> extends SessionCallback<F,Object>;\n", "des": "Base package for supporting remote files."}
{"index": 1787, "repo": "spring-integration-file-6.1.2", "code": "package aop\n\n// A smart poller advice that rotates across multiple remote servers/directories.\npublic class RotatingServerAdvice extends Object implements org.springframework.integration.aop.MessageSourceMutator;\n// A strategy for rotating advices to allow reconfiguring the message source before and/or after a poll.\npublic interface RotationPolicy;\n// A key for a thread-local store and its related directory pair.\npublic static class RotationPolicy.KeyDirectory extends Object;\n// Standard rotation policy; iterates over key/directory pairs; when the end is reached, starts again at the beginning.\npublic class StandardRotationPolicy extends Object implements RotationPolicy;\n", "des": "Provides classes related to AOP."}
{"index": 1788, "repo": "spring-integration-file-6.1.2", "code": "package gateway\n\n// Base class for Outbound Gateways that perform remote file operations.\npublic abstract class AbstractRemoteFileOutboundGateway<F> extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n// Enumeration of commands supported by the gateways.\npublic static enum AbstractRemoteFileOutboundGateway.Command extends Enum<AbstractRemoteFileOutboundGateway.Command>;\n// Enumeration of options supported by various commands.\npublic static enum AbstractRemoteFileOutboundGateway.Option extends Enum<AbstractRemoteFileOutboundGateway.Option>;\n", "des": "Provides classes supporting remote file gateways."}
{"index": 1789, "repo": "spring-integration-file-6.1.2", "code": "package handler\n\n// A MessageHandler implementation that transfers files to a remote server.\npublic class FileTransferringMessageHandler<F> extends org.springframework.integration.handler.AbstractMessageHandler;\n", "des": "Provides classes supporting remote file message handlers."}
{"index": 1790, "repo": "spring-integration-file-6.1.2", "code": "package server\n\n// Base class for file server events.\npublic abstract class FileServerEvent extends org.springframework.integration.events.IntegrationEvent;\n", "des": "Provides classes related to file servers."}
{"index": 1791, "repo": "spring-integration-file-6.1.2", "code": "package session\n\n// A SessionFactory implementation that caches Sessions for reuse without requiring reconnection each time the Session is retrieved from the factory.\npublic class CachingSessionFactory<F> extends Object implements SessionFactory<F>, org.springframework.beans.factory.DisposableBean;\n// The default implementation of SessionFactoryLocator using a simple map lookup and an optional default to fall back on.\npublic class DefaultSessionFactoryLocator<F> extends Object implements SessionFactoryLocator<F>;\n// SessionFactory that delegates to a SessionFactory retrieved from a SessionFactoryLocator.\npublic class DelegatingSessionFactory<F> extends Object implements SessionFactory<F>;\n// Common abstraction for a Session with a remote File system.\npublic interface Session<F> extends Closeable;\n// Factory for acquiring Session instances.\n@FunctionalInterface public interface SessionFactory<F>;\n// A factory returning a SessionFactory based on some key.\n@FunctionalInterface public interface SessionFactoryLocator<F>;\n// A MapBuilder to producer a map that maps objects to SessionFactorys.\npublic class SessionFactoryMapBuilder<T> extends org.springframework.integration.support.MapBuilder<SessionFactoryMapBuilder<T>,Object,SessionFactory<T>>;\n// A SessionFactory that implements this interface is capable of supporting a shared session.\npublic interface SharedSessionCapable;\n", "des": "Provides classes supporting remote file sessions."}
{"index": 1792, "repo": "spring-integration-file-6.1.2", "code": "package synchronizer\n\n// Base class charged with knowing how to connect to a remote file system, scan it for new files and then download the files.\npublic abstract class AbstractInboundFileSynchronizer<F> extends Object implements InboundFileSynchronizer, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean, Closeable;\n// Factors out the common logic between the FTP and SFTP adapters.\npublic abstract class AbstractInboundFileSynchronizingMessageSource<F> extends org.springframework.integration.endpoint.AbstractFetchLimitingMessageSource<File> implements org.springframework.integration.support.management.ManageableLifecycle;\n// Strategy for synchronizing from a remote File system to a local directory.\n@FunctionalInterface public interface InboundFileSynchronizer;\n", "des": "Provides classes supporting the synchronization of remote and local file directories."}
{"index": 1793, "repo": "spring-integration-file-6.1.2", "code": "package splitter\n\n// The AbstractMessageSplitter implementation to split the File Message payload to lines.\npublic class FileSplitter extends org.springframework.integration.splitter.AbstractMessageSplitter;\n// \npublic static class FileSplitter.FileMarker extends Object implements Serializable;\n// \npublic static enum FileSplitter.FileMarker.Mark extends Enum<FileSplitter.FileMarker.Mark>;\n", "des": "Provides implementations of AbstractMessageSplitter."}
{"index": 1794, "repo": "spring-integration-file-6.1.2", "code": "package support\n\n// When writing file, this enumeration indicates what action shall be taken in case the destination file already exists.\npublic enum FileExistsMode extends Enum<FileExistsMode>;\n// Utilities for operations on Files.\npublic final class FileUtils extends Object;\n", "des": "Provides various support classes used across Spring Integration File Components."}
{"index": 1795, "repo": "spring-integration-file-6.1.2", "code": "package tail\n\n// File tailer that delegates to the Apache Commons Tailer.\npublic class ApacheCommonsFileTailingMessageProducer extends FileTailingMessageProducerSupport implements org.apache.commons.io.input.TailerListener;\n// Base class for file tailing inbound adapters.\npublic abstract class FileTailingMessageProducerSupport extends org.springframework.integration.endpoint.MessageProducerSupport implements org.springframework.context.ApplicationEventPublisherAware;\n// \npublic static class FileTailingMessageProducerSupport.FileTailingEvent extends FileIntegrationEvent;\n// \npublic static class FileTailingMessageProducerSupport.FileTailingIdleEvent extends FileTailingMessageProducerSupport.FileTailingEvent;\n// A file tailing message producer that delegates to the OS tail program.\npublic class OSDelegatingFileTailingMessageProducer extends FileTailingMessageProducerSupport implements org.springframework.scheduling.SchedulingAwareRunnable;\n", "des": "Classes used for tailing file system files."}
{"index": 1796, "repo": "spring-integration-file-6.1.2", "code": "package transformer\n\n// Base class for transformers that convert a File payload.\npublic abstract class AbstractFilePayloadTransformer<T> extends Object implements org.springframework.integration.transformer.Transformer, org.springframework.beans.factory.BeanFactoryAware;\n// A payload transformer that copies a File's contents to a byte array.\npublic class FileToByteArrayTransformer extends AbstractFilePayloadTransformer<byte[]>;\n// A payload transformer that copies a File's contents to a String.\npublic class FileToStringTransformer extends AbstractFilePayloadTransformer<String>;\n", "des": "Provides classes supporting the transformation of file contents to messages."}
{"index": 1797, "repo": "spring-aop-6.0.11", "code": "package aop\n\n// Tag interface for Advice.\npublic interface Advice;\n// Superclass for all AOP infrastructure exceptions.\npublic class AspectException extends RuntimeException;\n", "des": "The core AOP Alliance advice marker."}
{"index": 1798, "repo": "spring-aop-6.0.11", "code": "package intercept\n\n// Intercepts the construction of a new object.\npublic interface ConstructorInterceptor extends Interceptor;\n// Description of an invocation to a constructor, given to an interceptor upon constructor-call.\npublic interface ConstructorInvocation extends Invocation;\n// This interface represents a generic interceptor.\npublic interface Interceptor extends Advice;\n// This interface represents an invocation in the program.\npublic interface Invocation extends Joinpoint;\n// This interface represents a generic runtime joinpoint (in the AOP terminology).\npublic interface Joinpoint;\n// Intercepts calls on an interface on its way to the target.\n@FunctionalInterface public interface MethodInterceptor extends Interceptor;\n// Description of an invocation to a method, given to an interceptor upon method-call.\npublic interface MethodInvocation extends Invocation;\n", "des": "The AOP Alliance reflective interception abstraction."}
{"index": 1799, "repo": "spring-aop-6.0.11", "code": "package aop\n\n// Base interface holding AOP advice (action to take at a joinpoint) and a filter determining the applicability of the advice (such as a pointcut).\npublic interface Advisor;\n// Common marker interface for after advice, such as AfterReturningAdvice and ThrowsAdvice.\npublic interface AfterAdvice extends Advice;\n// After returning advice is invoked only on normal method return, not if an exception is thrown.\npublic interface AfterReturningAdvice extends AfterAdvice;\n// Exception that gets thrown when an AOP invocation failed because of misconfiguration or unexpected runtime issues.\npublic class AopInvocationException extends org.springframework.core.NestedRuntimeException;\n// Common marker interface for before advice, such as MethodBeforeAdvice.\npublic interface BeforeAdvice extends Advice;\n// Filter that restricts matching of a pointcut or introduction to a given set of target classes.\n@FunctionalInterface public interface ClassFilter;\n// Subinterface of AOP Alliance Advice that allows additional interfaces to be implemented by an Advice, and available via a proxy using that interceptor.\npublic interface DynamicIntroductionAdvice extends Advice;\n// Superinterface for advisors that perform one or more AOP introductions.\npublic interface IntroductionAdvisor extends Advisor, IntroductionInfo;\n// A specialized type of MethodMatcher that takes into account introductions when matching methods.\npublic interface IntroductionAwareMethodMatcher extends MethodMatcher;\n// Interface supplying the information necessary to describe an introduction.\npublic interface IntroductionInfo;\n// Subinterface of AOP Alliance MethodInterceptor that allows additional interfaces to be implemented by the interceptor, and available via a proxy using that interceptor.\npublic interface IntroductionInterceptor extends MethodInterceptor, DynamicIntroductionAdvice;\n// Advice invoked before a method is invoked.\npublic interface MethodBeforeAdvice extends BeforeAdvice;\n// Part of a Pointcut: Checks whether the target method is eligible for advice.\npublic interface MethodMatcher;\n// Core Spring pointcut abstraction.\npublic interface Pointcut;\n// Superinterface for all Advisors that are driven by a pointcut.\npublic interface PointcutAdvisor extends Advisor;\n", "des": "Core Spring AOP interfaces, built on AOP Alliance AOP interoperability interfaces."}
{"index": 1800, "repo": "spring-aop-6.0.11", "code": "package aspectj\n\n// Base class for AOP Alliance Advice classes wrapping an AspectJ aspect or an AspectJ-annotated advice method.\npublic abstract class AbstractAspectJAdvice extends Object implements Advice, AspectJPrecedenceInformation, Serializable;\n// Interface implemented to provide an instance of an AspectJ aspect.\npublic interface AspectInstanceFactory extends org.springframework.core.Ordered;\n// ParameterNameDiscoverer implementation that tries to deduce parameter names for an advice method from the pointcut expression, returning, and throwing clauses.\npublic class AspectJAdviceParameterNameDiscoverer extends Object implements org.springframework.core.ParameterNameDiscoverer;\n// Thrown in response to an ambiguous binding being detected when trying to resolve a method's parameter names.\npublic static class AspectJAdviceParameterNameDiscoverer.AmbiguousBindingException extends RuntimeException;\n// Spring AOP advice wrapping an AspectJ after advice method.\npublic class AspectJAfterAdvice extends AbstractAspectJAdvice implements MethodInterceptor, AfterAdvice, Serializable;\n// Spring AOP advice wrapping an AspectJ after-returning advice method.\npublic class AspectJAfterReturningAdvice extends AbstractAspectJAdvice implements AfterReturningAdvice, AfterAdvice, Serializable;\n// Spring AOP advice wrapping an AspectJ after-throwing advice method.\npublic class AspectJAfterThrowingAdvice extends AbstractAspectJAdvice implements MethodInterceptor, AfterAdvice, Serializable;\n// Utility methods for dealing with AspectJ advisors.\npublic abstract class AspectJAopUtils extends Object;\n// Spring AOP around advice (MethodInterceptor) that wraps an AspectJ advice method.\npublic class AspectJAroundAdvice extends AbstractAspectJAdvice implements MethodInterceptor, Serializable;\n// Spring Pointcut implementation that uses the AspectJ weaver to evaluate a pointcut expression.\npublic class AspectJExpressionPointcut extends AbstractExpressionPointcut implements ClassFilter, IntroductionAwareMethodMatcher, org.springframework.beans.factory.BeanFactoryAware;\n// Spring AOP Advisor that can be used for any AspectJ pointcut expression.\npublic class AspectJExpressionPointcutAdvisor extends AbstractGenericPointcutAdvisor implements org.springframework.beans.factory.BeanFactoryAware;\n", "des": "AspectJ integration package."}
{"index": 1801, "repo": "spring-aop-6.0.11", "code": "package annotation\n\n// Abstract base class for factories that can create Spring AOP Advisors given AspectJ classes from classes honoring the AspectJ 5 annotation syntax.\npublic abstract class AbstractAspectJAdvisorFactory extends Object implements AspectJAdvisorFactory;\n// Class modeling an AspectJ annotation, exposing its type enumeration and pointcut String.\nprotected static class AbstractAspectJAdvisorFactory.AspectJAnnotation extends Object;\n// Enum for AspectJ annotation types.\nprotected static enum AbstractAspectJAdvisorFactory.AspectJAnnotationType extends Enum<AbstractAspectJAdvisorFactory.AspectJAnnotationType>;\n// AspectJAwareAdvisorAutoProxyCreator subclass that processes all AspectJ annotation aspects in the current application context, as well as Spring Advisors.\npublic class AnnotationAwareAspectJAutoProxyCreator extends AspectJAwareAdvisorAutoProxyCreator;\n// Interface for factories that can create Spring AOP Advisors from classes annotated with AspectJ annotation syntax.\npublic interface AspectJAdvisorFactory;\n// AspectJ-based proxy factory, allowing for programmatic building of proxies which include AspectJ aspects (code style as well annotation style).\npublic class AspectJProxyFactory extends ProxyCreatorSupport;\n// Metadata for an AspectJ aspect class, with an additional Spring AOP pointcut for the per clause.\npublic class AspectMetadata extends Object implements Serializable;\n// AspectInstanceFactory implementation backed by a Spring BeanFactory.\npublic class BeanFactoryAspectInstanceFactory extends Object implements MetadataAwareAspectInstanceFactory, Serializable;\n// Helper for retrieving @AspectJ beans from a BeanFactory and building Spring Advisors based on them, for use with auto-proxying.\npublic class BeanFactoryAspectJAdvisorsBuilder extends Object;\n// Decorator to cause a MetadataAwareAspectInstanceFactory to instantiate only once.\npublic class LazySingletonAspectInstanceFactoryDecorator extends Object implements MetadataAwareAspectInstanceFactory, Serializable;\n// Subinterface of AspectInstanceFactory that returns AspectMetadata associated with AspectJ-annotated classes.\npublic interface MetadataAwareAspectInstanceFactory extends AspectInstanceFactory;\n// Extension of AopConfigException thrown when trying to perform an advisor generation operation on a class that is not an AspectJ annotation-style aspect.\npublic class NotAnAtAspectException extends AopConfigException;\n", "des": "Classes enabling AspectJ 5 @Annotated classes to be used in Spring AOP."}
{"index": 1802, "repo": "spring-aop-6.0.11", "code": "package autoproxy\n\n// AbstractAdvisorAutoProxyCreator subclass that exposes AspectJ's invocation context and understands AspectJ's rules for advice precedence when multiple pieces of advice come from the same aspect.\npublic class AspectJAwareAdvisorAutoProxyCreator extends AbstractAdvisorAutoProxyCreator;\n", "des": "Base classes enabling auto-proxying based on AspectJ."}
{"index": 1803, "repo": "spring-aop-6.0.11", "code": "package config\n\n// Base implementation for BeanDefinitionDecorators wishing to add an interceptor to the resulting bean.\npublic abstract class AbstractInterceptorDrivenBeanDefinitionDecorator extends Object implements org.springframework.beans.factory.xml.BeanDefinitionDecorator;\n// ParseState entry representing an advice element.\npublic class AdviceEntry extends Object implements org.springframework.beans.factory.parsing.ParseState.Entry;\n// ComponentDefinition that bridges the gap between the advisor bean definition configured by the <aop:advisor> tag and the component definition infrastructure.\npublic class AdvisorComponentDefinition extends org.springframework.beans.factory.parsing.AbstractComponentDefinition;\n// ParseState entry representing an advisor.\npublic class AdvisorEntry extends Object implements org.springframework.beans.factory.parsing.ParseState.Entry;\n// Utility class for handling registration of AOP auto-proxy creators.\npublic abstract class AopConfigUtils extends Object;\n// NamespaceHandler for the aop namespace.\npublic class AopNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n// Utility class for handling registration of auto-proxy creators used internally by the 'aop' namespace tags.\npublic abstract class AopNamespaceUtils extends Object;\n// ComponentDefinition that holds an aspect definition, including its nested pointcuts.\npublic class AspectComponentDefinition extends org.springframework.beans.factory.parsing.CompositeComponentDefinition;\n// ParseState entry representing an aspect.\npublic class AspectEntry extends Object implements org.springframework.beans.factory.parsing.ParseState.Entry;\n// FactoryBean implementation that locates a Method on a specified bean.\npublic class MethodLocatingFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<Method>, org.springframework.beans.factory.BeanFactoryAware;\n// ComponentDefinition implementation that holds a pointcut definition.\npublic class PointcutComponentDefinition extends org.springframework.beans.factory.parsing.AbstractComponentDefinition;\n// ParseState entry representing a pointcut.\npublic class PointcutEntry extends Object implements org.springframework.beans.factory.parsing.ParseState.Entry;\n", "des": "Support package for declarative AOP configuration, with XML schema being the primary configuration format."}
{"index": 1804, "repo": "spring-aop-6.0.11", "code": "package framework\n\n// Base class for BeanPostProcessor implementations that apply a Spring AOP Advisor to specific beans.\npublic abstract class AbstractAdvisingBeanPostProcessor extends ProxyProcessorSupport implements org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor;\n// Convenient superclass for FactoryBean types that produce singleton-scoped proxy objects.\npublic abstract class AbstractSingletonProxyFactoryBean extends ProxyConfig implements org.springframework.beans.factory.FactoryBean<Object>, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean;\n// Interface to be implemented by classes that hold the configuration of a factory of AOP proxies.\npublic interface Advised extends TargetClassAware;\n// Base class for AOP proxy configuration managers.\npublic class AdvisedSupport extends ProxyConfig implements Advised;\n// Listener to be registered on ProxyCreatorSupport objects Allows for receiving callbacks on activation and change of advice.\npublic interface AdvisedSupportListener;\n// Factory interface for advisor chains.\npublic interface AdvisorChainFactory;\n// Exception that gets thrown on illegal AOP configuration arguments.\npublic class AopConfigException extends org.springframework.core.NestedRuntimeException;\n// Class containing static methods used to obtain information about the current AOP invocation.\npublic final class AopContext extends Object;\n// Marker interface that indicates a bean that is part of Spring's AOP infrastructure.\npublic interface AopInfrastructureBean;\n// Delegate interface for a configured AOP proxy, allowing for the creation of actual proxy objects.\npublic interface AopProxy;\n// Interface to be implemented by factories that are able to create AOP proxies based on AdvisedSupport configuration objects.\npublic interface AopProxyFactory;\n// Utility methods for AOP proxy factories.\npublic abstract class AopProxyUtils extends Object;\n// A simple but definitive way of working out an advice chain for a Method, given an Advised object.\npublic class DefaultAdvisorChainFactory extends Object implements AdvisorChainFactory, Serializable;\n// Default AopProxyFactory implementation, creating either a CGLIB proxy or a JDK dynamic proxy.\npublic class DefaultAopProxyFactory extends Object implements AopProxyFactory, Serializable;\n", "des": "Package containing Spring's basic AOP infrastructure, compliant with the AOP Alliance interfaces."}
{"index": 1805, "repo": "spring-aop-6.0.11", "code": "package adapter\n\n// Interface allowing extension to the Spring AOP framework to allow handling of new Advisors and Advice types.\npublic interface AdvisorAdapter;\n// BeanPostProcessor that registers AdvisorAdapter beans in the BeanFactory with an AdvisorAdapterRegistry (by default the GlobalAdvisorAdapterRegistry).\npublic class AdvisorAdapterRegistrationManager extends Object implements org.springframework.beans.factory.config.BeanPostProcessor;\n// Interface for registries of Advisor adapters.\npublic interface AdvisorAdapterRegistry;\n// Interceptor to wrap an AfterReturningAdvice.\npublic class AfterReturningAdviceInterceptor extends Object implements MethodInterceptor, AfterAdvice, Serializable;\n// Default implementation of the AdvisorAdapterRegistry interface.\npublic class DefaultAdvisorAdapterRegistry extends Object implements AdvisorAdapterRegistry, Serializable;\n// Singleton to publish a shared DefaultAdvisorAdapterRegistry instance.\npublic final class GlobalAdvisorAdapterRegistry extends Object;\n// Interceptor to wrap a MethodBeforeAdvice.\npublic class MethodBeforeAdviceInterceptor extends Object implements MethodInterceptor, BeforeAdvice, Serializable;\n// Interceptor to wrap an after-throwing advice.\npublic class ThrowsAdviceInterceptor extends Object implements MethodInterceptor, AfterAdvice;\n// Exception thrown when an attempt is made to use an unsupported Advisor or Advice type.\npublic class UnknownAdviceTypeException extends IllegalArgumentException;\n", "des": "SPI package allowing Spring AOP framework to handle arbitrary advice types."}
{"index": 1806, "repo": "spring-aop-6.0.11", "code": "package autoproxy\n\n// Generic auto proxy creator that builds AOP proxies for specific beans based on detected Advisors for each bean.\npublic abstract class AbstractAdvisorAutoProxyCreator extends AbstractAutoProxyCreator;\n// BeanPostProcessor implementation that wraps each eligible bean with an AOP proxy, delegating to specified interceptors before invoking the bean itself.\npublic abstract class AbstractAutoProxyCreator extends ProxyProcessorSupport implements org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor, org.springframework.beans.factory.BeanFactoryAware;\n// Extension of AbstractAutoProxyCreator which implements BeanFactoryAware, adds exposure of the original target class for each proxied bean (AutoProxyUtils.ORIGINAL_TARGET_CLASS_ATTRIBUTE), and participates in an externally enforced target-class mode for any given bean (AutoProxyUtils.PRESERVE_TARGET_CLASS_ATTRIBUTE).\npublic abstract class AbstractBeanFactoryAwareAdvisingPostProcessor extends AbstractAdvisingBeanPostProcessor implements org.springframework.beans.factory.BeanFactoryAware;\n// Utilities for auto-proxy aware components.\npublic abstract class AutoProxyUtils extends Object;\n// Helper for retrieving standard Spring Advisors from a BeanFactory, for use with auto-proxying.\npublic class BeanFactoryAdvisorRetrievalHelper extends Object;\n// Auto proxy creator that identifies beans to proxy via a list of names.\npublic class BeanNameAutoProxyCreator extends AbstractAutoProxyCreator;\n// BeanPostProcessor implementation that creates AOP proxies based on all candidate Advisors in the current BeanFactory.\npublic class DefaultAdvisorAutoProxyCreator extends AbstractAdvisorAutoProxyCreator implements org.springframework.beans.factory.BeanNameAware;\n// Auto-proxy creator that considers infrastructure Advisor beans only, ignoring any application-defined Advisors.\npublic class InfrastructureAdvisorAutoProxyCreator extends AbstractAdvisorAutoProxyCreator;\n// Holder for the current proxy creation context, as exposed by auto-proxy creators such as AbstractAdvisorAutoProxyCreator.\npublic final class ProxyCreationContext extends Object;\n// Implementations can create special target sources, such as pooling target sources, for particular beans.\n@FunctionalInterface public interface TargetSourceCreator;\n", "des": "Bean post-processors for use in ApplicationContexts to simplify AOP usage by automatically creating AOP proxies without the need to use a ProxyFactoryBean."}
{"index": 1807, "repo": "spring-aop-6.0.11", "code": "package target\n\n// Convenient superclass for TargetSourceCreator implementations that require creating multiple instances of a prototype bean.\npublic abstract class AbstractBeanFactoryBasedTargetSourceCreator extends Object implements TargetSourceCreator, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.DisposableBean;\n// TargetSourceCreator that enforces a LazyInitTargetSource for each bean that is defined as \"lazy-init\".\npublic class LazyInitTargetSourceCreator extends AbstractBeanFactoryBasedTargetSourceCreator;\n// Convenient TargetSourceCreator using bean name prefixes to create one of three well-known TargetSource types: : CommonsPool2TargetSource % ThreadLocalTargetSource ! PrototypeTargetSource\npublic class QuickTargetSourceCreator extends AbstractBeanFactoryBasedTargetSourceCreator;\n", "des": "Various TargetSourceCreator implementations for use with Spring's AOP auto-proxying support."}
{"index": 1808, "repo": "spring-aop-6.0.11", "code": "package interceptor\n\n// Base class for monitoring interceptors, such as performance monitors.\npublic abstract class AbstractMonitoringInterceptor extends AbstractTraceInterceptor;\n// Base MethodInterceptor implementation for tracing.\npublic abstract class AbstractTraceInterceptor extends Object implements MethodInterceptor, Serializable;\n// Base class for asynchronous method execution aspects, such as org.springframework.scheduling.annotation.AnnotationAsyncExecutionInterceptor or org.springframework.scheduling.aspectj.AnnotationAsyncExecutionAspect.\npublic abstract class AsyncExecutionAspectSupport extends Object implements org.springframework.beans.factory.BeanFactoryAware;\n// AOP Alliance MethodInterceptor that processes method invocations asynchronously, using a given AsyncTaskExecutor.\npublic class AsyncExecutionInterceptor extends AsyncExecutionAspectSupport implements MethodInterceptor, org.springframework.core.Ordered;\n// A strategy for handling uncaught exceptions thrown from asynchronous methods.\n@FunctionalInterface public interface AsyncUncaughtExceptionHandler;\n// Interceptor that throttles concurrent access, blocking invocations if a specified concurrency limit is reached.\npublic class ConcurrencyThrottleInterceptor extends org.springframework.util.ConcurrencyThrottleSupport implements MethodInterceptor, Serializable;\n// MethodInterceptor implementation that allows for highly customizable method-level tracing, using placeholders.\npublic class CustomizableTraceInterceptor extends AbstractTraceInterceptor;\n// AOP Alliance MethodInterceptor that can be introduced in a chain to display verbose information about intercepted invocations to the logger.\npublic class DebugInterceptor extends SimpleTraceInterceptor;\n// Convenient methods for creating advisors that may be used when autoproxying beans created with the Spring IoC container, binding the bean name to the current invocation.\npublic abstract class ExposeBeanNameAdvisors extends Object;\n// Interceptor that exposes the current MethodInvocation as a thread-local object.\npublic final class ExposeInvocationInterceptor extends Object implements MethodInterceptor, org.springframework.core.PriorityOrdered, Serializable;\n// Simple AOP Alliance MethodInterceptor for performance monitoring.\npublic class PerformanceMonitorInterceptor extends AbstractMonitoringInterceptor;\n// A default AsyncUncaughtExceptionHandler that simply logs the exception.\npublic class SimpleAsyncUncaughtExceptionHandler extends Object implements AsyncUncaughtExceptionHandler;\n// Simple AOP Alliance MethodInterceptor that can be introduced in a chain to display verbose trace information about intercepted method invocations, with method entry and method exit info.\npublic class SimpleTraceInterceptor extends AbstractTraceInterceptor;\n", "des": "Provides miscellaneous interceptor implementations."}
{"index": 1809, "repo": "spring-aop-6.0.11", "code": "package scope\n\n// Default implementation of the ScopedObject interface.\npublic class DefaultScopedObject extends Object implements ScopedObject, Serializable;\n// An AOP introduction interface for scoped objects.\npublic interface ScopedObject extends RawTargetAccess;\n// Convenient proxy factory bean for scoped objects.\npublic class ScopedProxyFactoryBean extends ProxyConfig implements org.springframework.beans.factory.FactoryBean<Object>, org.springframework.beans.factory.BeanFactoryAware, AopInfrastructureBean;\n// Utility class for creating a scoped proxy.\npublic abstract class ScopedProxyUtils extends Object;\n", "des": "Support for AOP-based scoping of target objects, with configurable backend."}
{"index": 1810, "repo": "spring-aop-6.0.11", "code": "package support\n\n// Abstract BeanFactory-based PointcutAdvisor that allows for any Advice to be configured as reference to an Advice bean in a BeanFactory.\npublic abstract class AbstractBeanFactoryPointcutAdvisor extends AbstractPointcutAdvisor implements org.springframework.beans.factory.BeanFactoryAware;\n// Abstract superclass for expression pointcuts, offering location and expression properties.\npublic abstract class AbstractExpressionPointcut extends Object implements ExpressionPointcut, Serializable;\n// Abstract generic PointcutAdvisor that allows for any Advice to be configured.\npublic abstract class AbstractGenericPointcutAdvisor extends AbstractPointcutAdvisor;\n// Abstract base class for PointcutAdvisor implementations.\npublic abstract class AbstractPointcutAdvisor extends Object implements PointcutAdvisor, org.springframework.core.Ordered, Serializable;\n// Abstract base regular expression pointcut bean.\npublic abstract class AbstractRegexpMethodPointcut extends StaticMethodMatcherPointcut implements Serializable;\n// Utility methods for AOP support code.\npublic abstract class AopUtils extends Object;\n// Static utility methods for composing ClassFilters.\npublic abstract class ClassFilters extends Object;\n// Convenient class for building up pointcuts.\npublic class ComposablePointcut extends Object implements Pointcut, Serializable;\n// Pointcut and method matcher for use in simple cflow-style pointcut.\npublic class ControlFlowPointcut extends Object implements Pointcut, ClassFilter, MethodMatcher, Serializable;\n// Concrete BeanFactory-based PointcutAdvisor that allows for any Advice to be configured as reference to an Advice bean in the BeanFactory, as well as the Pointcut to be configured through a bean property.\npublic class DefaultBeanFactoryPointcutAdvisor extends AbstractBeanFactoryPointcutAdvisor;\n// Simple IntroductionAdvisor implementation that by default applies to any class.\npublic class DefaultIntroductionAdvisor extends Object implements IntroductionAdvisor, ClassFilter, org.springframework.core.Ordered, Serializable;\n// Convenient Pointcut-driven Advisor implementation.\npublic class DefaultPointcutAdvisor extends AbstractGenericPointcutAdvisor implements Serializable;\n// Convenient implementation of the IntroductionInterceptor interface.\npublic class DelegatePerTargetObjectIntroductionInterceptor extends IntroductionInfoSupport implements IntroductionInterceptor;\n", "des": "Convenience classes for using Spring's AOP API."}
{"index": 1811, "repo": "spring-aop-6.0.11", "code": "package annotation\n\n// Simple ClassFilter that looks for a specific annotation being present on a class.\npublic class AnnotationClassFilter extends Object implements ClassFilter;\n// Simple Pointcut that looks for a specific annotation being present on a class or method.\npublic class AnnotationMatchingPointcut extends Object implements Pointcut;\n// Simple MethodMatcher that looks for a specific annotation being present on a method (checking both the method on the invoked interface, if any, and the corresponding method on the target class).\npublic class AnnotationMethodMatcher extends StaticMethodMatcher;\n", "des": "Annotation support for AOP pointcuts."}
{"index": 1812, "repo": "spring-aop-6.0.11", "code": "package target\n\n// Base class for TargetSource implementations that are based on a Spring BeanFactory, delegating to Spring-managed bean instances.\npublic abstract class AbstractBeanFactoryBasedTargetSource extends Object implements TargetSource, org.springframework.beans.factory.BeanFactoryAware, Serializable;\n// TargetSource implementation that will lazily create a user-managed object.\npublic abstract class AbstractLazyCreationTargetSource extends Object implements TargetSource;\n// Abstract base class for pooling TargetSource implementations which maintain a pool of target instances, acquiring and releasing a target object from the pool for each method invocation.\npublic abstract class AbstractPoolingTargetSource extends AbstractPrototypeBasedTargetSource implements PoolingConfig, org.springframework.beans.factory.DisposableBean;\n// Base class for dynamic TargetSource implementations that create new prototype bean instances to support a pooling or new-instance-per-invocation strategy.\npublic abstract class AbstractPrototypeBasedTargetSource extends AbstractBeanFactoryBasedTargetSource;\n// TargetSource implementation that holds objects in a configurable Apache Commons2 Pool.\npublic class CommonsPool2TargetSource extends AbstractPoolingTargetSource implements org.apache.commons.pool2.PooledObjectFactory<Object>;\n// Canonical TargetSource when there is no target (or just the target class known), and behavior is supplied by interfaces and advisors only.\npublic final class EmptyTargetSource extends Object implements TargetSource, Serializable;\n// TargetSource implementation that caches a local target object, but allows the target to be swapped while the application is running.\npublic class HotSwappableTargetSource extends Object implements TargetSource, Serializable;\n// TargetSource that lazily accesses a singleton bean from a BeanFactory.\npublic class LazyInitTargetSource extends AbstractBeanFactoryBasedTargetSource;\n// Config interface for a pooling target source.\npublic interface PoolingConfig;\n// TargetSource implementation that creates a new instance of the target bean for each request, destroying each instance on release (after each request).\npublic class PrototypeTargetSource extends AbstractPrototypeBasedTargetSource;\n// Simple TargetSource implementation, freshly obtaining the specified target bean from its containing Spring BeanFactory.\npublic class SimpleBeanTargetSource extends AbstractBeanFactoryBasedTargetSource;\n// Implementation of the TargetSource interface that holds a given object.\npublic class SingletonTargetSource extends Object implements TargetSource, Serializable;\n", "des": "Various TargetSource implementations for use with Spring AOP."}
{"index": 1813, "repo": "spring-aop-6.0.11", "code": "package dynamic\n\n// Abstract TargetSource implementation that wraps a refreshable target object.\npublic abstract class AbstractRefreshableTargetSource extends Object implements TargetSource, Refreshable;\n// Refreshable TargetSource that fetches fresh target beans from a BeanFactory.\npublic class BeanFactoryRefreshableTargetSource extends AbstractRefreshableTargetSource;\n// Interface to be implemented by dynamic target objects, which support reloading and optionally polling for updates.\npublic interface Refreshable;\n", "des": "Support for dynamic, refreshable TargetSource implementations for use with Spring AOP."}
{"index": 1814, "repo": "spring-integration-mail-6.1.2", "code": "package mail\n\n// Base class for MailReceiver implementations.\npublic abstract class AbstractMailReceiver extends org.springframework.integration.context.IntegrationObjectSupport implements MailReceiver, org.springframework.beans.factory.DisposableBean;\n// An event-driven Channel Adapter that receives mail messages from a mail server that supports the IMAP \"idle\" command (see RFC 2177).\npublic class ImapIdleChannelAdapter extends org.springframework.integration.endpoint.MessageProducerSupport implements org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.context.ApplicationEventPublisherAware;\n// A MailReceiver implementation for receiving mail messages from a mail server that supports the IMAP protocol.\npublic class ImapMailReceiver extends AbstractMailReceiver;\n// Pre-defined header names to be used for setting and/or retrieving Mail Message attributes from/to integration Message Headers.\npublic final class MailHeaders extends Object;\n// Strategy interface for receiving mail Messages.\npublic interface MailReceiver;\n// MessageSource implementation that delegates to a MailReceiver to poll a mailbox.\npublic class MailReceivingMessageSource extends org.springframework.integration.endpoint.AbstractMessageSource<Object>;\n// A MessageHandler implementation for sending mail.\npublic class MailSendingMessageHandler extends org.springframework.integration.handler.AbstractMessageHandler;\n// Collection of utility methods to work with Mail transports.\npublic abstract class MailTransportUtils extends Object;\n// A MailReceiver implementation that polls a mail server using the POP3 protocol.\npublic class Pop3MailReceiver extends AbstractMailReceiver;\n// Strategy to be used to generate a SearchTerm.\n@FunctionalInterface public interface SearchTermStrategy;\n", "des": "Base package for Mail support."}
{"index": 1815, "repo": "spring-integration-mail-6.1.2", "code": "package config\n\n// Parser for the <imap-idle-channel-adapter> element in the 'mail' namespace.\npublic class ImapIdleChannelAdapterParser extends org.springframework.integration.config.xml.AbstractChannelAdapterParser;\n// \npublic class MailHeaderEnricherParser extends org.springframework.integration.config.xml.HeaderEnricherParserSupport;\n// Parser for the <inbound-channel-adapter> element of Spring Integration's 'mail' namespace.\npublic class MailInboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractPollingInboundChannelAdapterParser;\n// Namespace handler for the 'mail' namespace.\npublic class MailNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n// Parser for the <outbound-channel-adapter/> element of the 'mail' namespace.\npublic class MailOutboundChannelAdapterParser extends org.springframework.integration.config.xml.AbstractOutboundChannelAdapterParser;\n// \npublic class MailReceiverFactoryBean extends org.springframework.beans.factory.config.AbstractFactoryBean<MailReceiver>;\n// Parser for the <mail-to-string-transformer> element.\npublic class MailToStringTransformerParser extends org.springframework.integration.config.xml.AbstractTransformerParser;\n", "des": "Provides classes for configuration - parsers, namespace handlers."}
{"index": 1816, "repo": "spring-integration-mail-6.1.2", "code": "package dsl\n\n// A MessageProducerSpec for a ImapIdleChannelAdapter.\npublic class ImapIdleChannelAdapterSpec extends org.springframework.integration.dsl.MessageProducerSpec<ImapIdleChannelAdapterSpec,ImapIdleChannelAdapter> implements org.springframework.integration.dsl.ComponentsRegistration;\n// A MailInboundChannelAdapterSpec for IMAP.\npublic class ImapMailInboundChannelAdapterSpec extends MailInboundChannelAdapterSpec<ImapMailInboundChannelAdapterSpec,ImapMailReceiver>;\n// The factory for Spring Integration Mail components.\npublic final class Mail extends Object;\n// The Mail specific MapBuilder implementation.\npublic class MailHeadersBuilder extends org.springframework.integration.support.MapBuilder<MailHeadersBuilder,String,Object>;\n// A MessageSourceSpec for a MailReceivingMessageSource.\npublic abstract class MailInboundChannelAdapterSpec<S extends MailInboundChannelAdapterSpec<S,R>,R extends AbstractMailReceiver> extends org.springframework.integration.dsl.MessageSourceSpec<S,MailReceivingMessageSource> implements org.springframework.integration.dsl.ComponentsRegistration;\n// \npublic class MailSendingMessageHandlerSpec extends org.springframework.integration.dsl.MessageHandlerSpec<MailSendingMessageHandlerSpec,MailSendingMessageHandler>;\n// A MailInboundChannelAdapterSpec for POP3.\npublic class Pop3MailInboundChannelAdapterSpec extends MailInboundChannelAdapterSpec<Pop3MailInboundChannelAdapterSpec,Pop3MailReceiver>;\n", "des": "Provides Mail Components for the Java DSL."}
{"index": 1817, "repo": "spring-integration-mail-6.1.2", "code": "package event\n\n// \npublic abstract class MailIntegrationEvent extends org.springframework.integration.events.IntegrationEvent;\n", "des": "Events generated by the mail module"}
{"index": 1818, "repo": "spring-integration-mail-6.1.2", "code": "package support\n\n// Maps an inbound MimeMessage to a Map.\npublic class DefaultMailHeaderMapper extends Object implements org.springframework.integration.mapping.HeaderMapper<jakarta.mail.internet.MimeMessage>;\n// Utilities for handling mail messages.\npublic final class MailUtils extends Object;\n", "des": "Provides classes to support email."}
{"index": 1819, "repo": "spring-integration-mail-6.1.2", "code": "package transformer\n\n// Base class for Transformers that convert from a JavaMail Message to a Spring Integration Message.\npublic abstract class AbstractMailMessageTransformer<T> extends Object implements org.springframework.integration.transformer.Transformer, org.springframework.beans.factory.BeanFactoryAware;\n// Transforms a Message payload of type Message to a String.\npublic class MailToStringTransformer extends AbstractMailMessageTransformer<String>;\n", "des": "Provides classes related to transforming mail messages."}
{"index": 1820, "repo": "pulsar-client-original-3.0.0", "code": "package impl\n\n// Batch message container framework.\npublic abstract class AbstractBatchMessageContainer extends Object implements BatchMessageContainerBase;\n// Acknowledgments grouping tracker.\npublic interface AcknowledgmentsGroupingTracker extends AutoCloseable;\n// \npublic class AuthenticationUtil extends Object;\n// \npublic class AutoClusterFailover extends Object implements ServiceUrlProvider;\n// \npublic static class AutoClusterFailover.AutoClusterFailoverBuilderImpl extends Object implements AutoClusterFailoverBuilder;\n// \npublic class Backoff extends Object;\n// \npublic class BackoffBuilder extends Object;\n// \npublic interface BatchMessageContainerBase extends BatchMessageContainer;\n// \npublic class BatchMessageIdImpl extends MessageIdImpl;\n// \npublic class BinaryProtoLookupService extends Object implements LookupService;\n// \npublic static class BinaryProtoLookupService.LookupDataResult extends Object;\n// \npublic class ChunkMessageIdImpl extends MessageIdImpl;\n// \npublic class ClientBuilderImpl extends Object implements ClientBuilder;\n// Channel handler for the Pulsar client.\npublic class ClientCnx extends PulsarHandler;\n// \nprotected static enum ClientCnx.State extends Enum<ClientCnx.State>;\n// \npublic class ClientCnxIdleState extends Object;\n// Indicates the usage status of the connection and whether it has been released.\npublic static enum ClientCnxIdleState.State extends Enum<ClientCnxIdleState.State>;\n// \npublic class ConnectionHandler extends Object;\n// \npublic class ConnectionPool extends Object implements AutoCloseable;\n// \npublic abstract class ConsumerBase<T> extends Object implements Consumer<T>;\n// \nprotected static final class ConsumerBase.OpBatchReceive<T> extends Object;\n// \npublic class ConsumerBuilderImpl<T> extends Object implements ConsumerBuilder<T>;\n// \npublic class ConsumerId extends Object implements Comparable<ConsumerId>;\n// \npublic class ConsumerImpl<T> extends ConsumerBase<T>;\n// A container that hold the list ConsumerInterceptor and wraps calls to the chain of custom interceptors.\npublic class ConsumerInterceptors<T> extends Object implements Closeable;\n// \npublic class ConsumerStatsDisabled extends Object implements ConsumerStatsRecorder;\n// \npublic interface ConsumerStatsRecorder extends ConsumerStats;\n", "des": "Pulsar Client implementation."}
{"index": 1821, "repo": "pulsar-client-original-3.0.0", "code": "package auth\n\n// \npublic class AuthenticationBasic extends Object implements Authentication, EncodedAuthenticationParameterSupport;\n// \npublic class AuthenticationDataBasic extends Object implements AuthenticationDataProvider;\n// \npublic class AuthenticationDataKeyStoreTls extends Object implements AuthenticationDataProvider;\n// \npublic class AuthenticationDataNull extends Object implements AuthenticationDataProvider;\n// \npublic class AuthenticationDataTls extends Object implements AuthenticationDataProvider;\n// \npublic class AuthenticationDataToken extends Object implements AuthenticationDataProvider;\n// \npublic class AuthenticationDisabled extends Object implements Authentication, EncodedAuthenticationParameterSupport;\n// This plugin requires these parameters: keyStoreType, keyStorePath, and keyStorePassword.\npublic class AuthenticationKeyStoreTls extends Object implements Authentication, EncodedAuthenticationParameterSupport;\n// This plugin requires these parameters tlsCertFile: A file path for a client certificate.\npublic class AuthenticationTls extends Object implements Authentication, EncodedAuthenticationParameterSupport;\n// Token based authentication provider.\npublic class AuthenticationToken extends Object implements Authentication, EncodedAuthenticationParameterSupport;\n", "des": "Pulsar Client authentication."}
{"index": 1822, "repo": "pulsar-client-original-3.0.0", "code": "package customroute\n\n// \npublic class PartialRoundRobinMessageRouterImpl extends Object implements MessageRouter;\n", "des": "Pulsar Client customized routing mode."}
{"index": 1823, "repo": "pulsar-client-original-3.0.0", "code": "package schema\n\n// \npublic abstract class AbstractSchema<T> extends Object implements Schema<T>;\n// minimal abstract StructSchema.\npublic abstract class AbstractStructSchema<T> extends AbstractSchema<T>;\n// Auto detect schema, returns only GenericRecord instances.\npublic class AutoConsumeSchema extends Object implements Schema<GenericRecord>;\n// Auto detect schema.\npublic class AutoProduceBytesSchema<T> extends Object implements Schema<byte[]>;\n// This is a base schema implementation for Avro Based `Struct` types.\npublic abstract class AvroBaseStructSchema<T> extends AbstractStructSchema<T>;\n// An AVRO schema implementation.\npublic class AvroSchema<T> extends AvroBaseStructSchema<T>;\n// \npublic static class AvroSchema.TimestampConversion extends org.apache.avro.Conversion<org.joda.time.DateTime>;\n// A schema for `Boolean`.\npublic class BooleanSchema extends AbstractSchema<Boolean>;\n// A bytebuffer schema is effectively a `BYTES` schema.\npublic class ByteBufferSchema extends AbstractSchema<ByteBuffer>;\n// A variant `Bytes` schema that takes ByteBuf.\npublic class ByteBufSchema extends AbstractSchema<io.netty.buffer.ByteBuf>;\n// A schema for 'Byte'.\npublic class ByteSchema extends AbstractSchema<Byte>;\n// A schema for bytes array.\npublic class BytesSchema extends AbstractSchema<byte[]>;\n// A schema for `java.util.Date` or `java.sql.Date`.\npublic class DateSchema extends AbstractSchema<Date>;\n// A schema for `Double`.\npublic class DoubleSchema extends AbstractSchema<Double>;\n// A schema for `Float`.\npublic class FloatSchema extends AbstractSchema<Float>;\n// A schema for `java.time.Instant`.\npublic class InstantSchema extends AbstractSchema<Instant>;\n// A schema for `Integer`.\npublic class IntSchema extends AbstractSchema<Integer>;\n// A schema implementation to deal with json data.\npublic class JSONSchema<T> extends AvroBaseStructSchema<T>;\n// [Key, Value] pair schema definition.\npublic class KeyValueSchemaImpl<K,V> extends AbstractSchema<KeyValue<K,V>> implements KeyValueSchema<K,V>;\n", "des": "Pulsar Client schema."}
{"index": 1824, "repo": "pulsar-client-original-3.0.0", "code": "package reader\n\n// The abstract class of multi version avro base reader.\npublic abstract class AbstractMultiVersionAvroBaseReader<T> extends AbstractMultiVersionReader<T>;\n// The multi version reader abstract class, implement it will handle the multi version schema.\npublic abstract class AbstractMultiVersionReader<T> extends Object implements SchemaReader<T>;\n// \npublic class AvroReader<T> extends Object implements SchemaReader<T>;\n// Reader implementation for reading objects from JSON.\npublic class JacksonJsonReader<T> extends Object implements SchemaReader<T>;\n// \n@Deprecated public class JsonReader<T> extends Object implements SchemaReader<T>;\n// A multi version avro reader.\npublic class MultiVersionAvroReader<T> extends AbstractMultiVersionAvroBaseReader<T>;\n// \npublic class ProtobufNativeReader<T extends com.google.protobuf.GeneratedMessageV3> extends ProtobufReader<T>;\n// \npublic class ProtobufReader<T extends com.google.protobuf.GeneratedMessageV3> extends Object implements SchemaReader<T>;\n", "des": "Pulsar Client schema reader."}
{"index": 1825, "repo": "pulsar-client-original-3.0.0", "code": "package transaction\n\n// Interface of transaction buffer handler.\npublic interface TransactionBufferHandler;\n// The default implementation of transaction builder to build transactions.\npublic class TransactionBuilderImpl extends Object implements TransactionBuilder;\n// Transaction coordinator client based topic assigned.\npublic class TransactionCoordinatorClientImpl extends Object implements TransactionCoordinatorClient;\n// The default implementation of Transaction.\npublic class TransactionImpl extends Object implements Transaction, io.netty.util.TimerTask;\n", "des": "Transaction client implementation."}
{"index": 1826, "repo": "pulsar-client-original-3.0.0", "code": "package util\n\n// \npublic class ConsumerName extends Object;\n// \npublic class ExecutorProvider extends Object;\n// \npublic static class ExecutorProvider.ExtendedThreadFactory extends io.netty.util.concurrent.DefaultThreadFactory;\n// \npublic class MathUtils extends Object;\n// \npublic class MessageIdUtils extends Object;\n// \npublic class NoOpLock extends Object implements Lock;\n// \npublic class ObjectCache<T> extends Object implements Supplier<T>;\n// \npublic class RetryMessageUtil extends Object;\n// \npublic class RetryUtil extends Object;\n// \npublic class ScheduledExecutorProvider extends ExecutorProvider;\n// \n@Target({ANNOTATION_TYPE,FIELD,METHOD}) @Retention(RUNTIME) public @interface Secret;\n// \npublic class SecretsSerializer extends com.fasterxml.jackson.databind.JsonSerializer<Object>;\n// \npublic class TimedCompletableFuture<T> extends CompletableFuture<T>;\n// \npublic class TypeCheckUtil extends Object;\n// \npublic class WithSNISslEngineFactory extends org.asynchttpclient.netty.ssl.DefaultSslEngineFactory;\n", "des": "Pulsar Client Utils."}
{"index": 1827, "repo": "spring-test-6.0.11", "code": "package env\n\n// Simple ConfigurableEnvironment implementation exposing MockEnvironment.setProperty(String, String) and MockEnvironment.withProperty(String, String) methods for testing purposes.\npublic class MockEnvironment extends org.springframework.core.env.AbstractEnvironment;\n// Simple PropertySource implementation for use in testing.\npublic class MockPropertySource extends org.springframework.core.env.PropertiesPropertySource;\n", "des": "This package contains mock implementations of the Environment and PropertySource abstractions."}
{"index": 1828, "repo": "spring-test-6.0.11", "code": "package http\n\n// Mock implementation of HttpInputMessage.\npublic class MockHttpInputMessage extends Object implements org.springframework.http.HttpInputMessage;\n// Mock implementation of HttpOutputMessage.\npublic class MockHttpOutputMessage extends Object implements org.springframework.http.HttpOutputMessage;\n", "des": "Mock implementations of client/server-side HTTP abstractions."}
{"index": 1829, "repo": "spring-test-6.0.11", "code": "package client\n\n// Mock implementation of ClientHttpRequest.\npublic class MockClientHttpRequest extends MockHttpOutputMessage implements org.springframework.http.client.ClientHttpRequest;\n// Mock implementation of ClientHttpResponse.\npublic class MockClientHttpResponse extends MockHttpInputMessage implements org.springframework.http.client.ClientHttpResponse;\n", "des": "Mock implementations of client-side HTTP abstractions."}
{"index": 1830, "repo": "spring-test-6.0.11", "code": "package reactive\n\n// Mock implementation of ClientHttpRequest.\npublic class MockClientHttpRequest extends org.springframework.http.client.reactive.AbstractClientHttpRequest;\n// Mock implementation of ClientHttpResponse.\npublic class MockClientHttpResponse extends Object implements org.springframework.http.client.reactive.ClientHttpResponse;\n", "des": "Mock implementations of reactive HTTP client contracts."}
{"index": 1831, "repo": "spring-test-6.0.11", "code": "package reactive\n\n// Mock extension of AbstractServerHttpRequest for use in tests without an actual server.\npublic final class MockServerHttpRequest extends org.springframework.http.server.reactive.AbstractServerHttpRequest;\n// Request builder exposing properties not related to the body.\npublic static interface MockServerHttpRequest.BaseBuilder<B extends MockServerHttpRequest.BaseBuilder<B>>;\n// A builder that adds a body to the request.\npublic static interface MockServerHttpRequest.BodyBuilder extends MockServerHttpRequest.BaseBuilder<MockServerHttpRequest.BodyBuilder>;\n// Mock extension of AbstractServerHttpResponse for use in tests without an actual server.\npublic class MockServerHttpResponse extends org.springframework.http.server.reactive.AbstractServerHttpResponse;\n", "des": "Mock implementations of reactive HTTP server contracts."}
{"index": 1832, "repo": "spring-test-6.0.11", "code": "package web\n\n// Delegating implementation of ServletInputStream.\npublic class DelegatingServletInputStream extends ServletInputStream;\n// Delegating implementation of ServletOutputStream.\npublic class DelegatingServletOutputStream extends ServletOutputStream;\n// Mock implementation of the AsyncContext interface.\npublic class MockAsyncContext extends Object implements AsyncContext;\n// Mock implementation of the BodyContent class.\npublic class MockBodyContent extends BodyContent;\n// Extension of Cookie with extra attributes, as defined in RFC 6265.\npublic class MockCookie extends Cookie;\n// Mock implementation of the FilterChain interface.\npublic class MockFilterChain extends Object implements FilterChain;\n// Mock implementation of the FilterConfig interface.\npublic class MockFilterConfig extends Object implements FilterConfig;\n// Mock implementation of HttpServletMapping.\npublic class MockHttpServletMapping extends Object implements HttpServletMapping;\n// Mock implementation of the HttpServletRequest interface.\npublic class MockHttpServletRequest extends Object implements HttpServletRequest;\n// Mock implementation of the HttpServletResponse interface.\npublic class MockHttpServletResponse extends Object implements HttpServletResponse;\n// Mock implementation of the HttpSession interface.\npublic class MockHttpSession extends Object implements HttpSession;\n// Mock implementation of the JspWriter class.\npublic class MockJspWriter extends JspWriter;\n// Mock implementation of the MultipartFile interface.\npublic class MockMultipartFile extends Object implements org.springframework.web.multipart.MultipartFile;\n// Mock implementation of the MultipartHttpServletRequest interface.\npublic class MockMultipartHttpServletRequest extends MockHttpServletRequest implements org.springframework.web.multipart.MultipartHttpServletRequest;\n// Mock implementation of the PageContext interface.\npublic class MockPageContext extends PageContext;\n// Mock implementation of jakarta.servlet.http.Part.\npublic class MockPart extends Object implements Part;\n// Mock implementation of the RequestDispatcher interface.\npublic class MockRequestDispatcher extends Object implements RequestDispatcher;\n// Mock implementation of the ServletConfig interface.\npublic class MockServletConfig extends Object implements ServletConfig;\n// Mock implementation of the ServletContext interface.\npublic class MockServletContext extends Object implements ServletContext;\n// Mock implementation of the SessionCookieConfig interface.\npublic class MockSessionCookieConfig extends Object implements SessionCookieConfig;\n", "des": "A comprehensive set of Servlet API 6.0 mock objects, targeted at usage with Spring's Web MVC framework."}
{"index": 1833, "repo": "spring-test-6.0.11", "code": "package server\n\n// Mock implementation of ServerRequest.\npublic final class MockServerRequest extends Object implements org.springframework.web.reactive.function.server.ServerRequest;\n// Builder for MockServerRequest.\npublic static interface MockServerRequest.Builder;\n", "des": "Mock objects for the functional web framework."}
{"index": 1834, "repo": "spring-test-6.0.11", "code": "package server\n\n// Extension of DefaultServerWebExchange for use in tests, along with MockServerHttpRequest and MockServerHttpResponse.\npublic final class MockServerWebExchange extends org.springframework.web.server.adapter.DefaultServerWebExchange;\n// Builder for a MockServerWebExchange.\npublic static class MockServerWebExchange.Builder extends Object;\n// Implementation of WebSession that delegates to a session instance obtained via InMemoryWebSessionStore.\npublic class MockWebSession extends Object implements org.springframework.web.server.WebSession;\n", "des": "Mock implementations of Spring's reactive server web API abstractions."}
{"index": 1835, "repo": "spring-test-6.0.11", "code": "package annotation\n\n// @Commit is a test annotation that is used to indicate that a test-managed transaction should be committed after the test method has completed.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Inherited @Rollback(false) public @interface Commit;\n// Test annotation which indicates that the ApplicationContext associated with a test is dirty and should therefore be closed and removed from the context cache.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Inherited public @interface DirtiesContext;\n// Defines modes which determine how @DirtiesContext is interpreted when used to annotate a test class.\npublic static enum DirtiesContext.ClassMode extends Enum<DirtiesContext.ClassMode>;\n// Defines modes which determine how the context cache is cleared when @DirtiesContext is used in a test whose context is configured as part of a hierarchy via @ContextHierarchy.\npublic static enum DirtiesContext.HierarchyMode extends Enum<DirtiesContext.HierarchyMode>;\n// Defines modes which determine how @DirtiesContext is interpreted when used to annotate a test method.\npublic static enum DirtiesContext.MethodMode extends Enum<DirtiesContext.MethodMode>;\n// Test annotation for use with JUnit 4 to indicate whether a test is enabled or disabled for a specific testing profile.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Inherited public @interface IfProfileValue;\n// Strategy interface for retrieving profile values for a given testing environment.\npublic interface ProfileValueSource;\n// ProfileValueSourceConfiguration is a class-level annotation for use with JUnit 4 which is used to specify what type of ProfileValueSource to use when retrieving profile values configured via @IfProfileValue.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited public @interface ProfileValueSourceConfiguration;\n// General utility methods for working with profile values.\npublic abstract class ProfileValueUtils extends Object;\n// Test annotation for use with JUnit 4 to indicate that a test method should be invoked repeatedly.\n@Target({METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented public @interface Repeat;\n", "des": "Support classes for annotation-driven tests."}
{"index": 1836, "repo": "spring-test-6.0.11", "code": "package context\n\n// ActiveProfiles is a class-level annotation that is used to declare which active bean definition profiles should be used when loading an ApplicationContext for test classes.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited public @interface ActiveProfiles;\n// Strategy interface for programmatically resolving which active bean definition profiles should be used when loading an ApplicationContext for a test class.\n@FunctionalInterface public interface ActiveProfilesResolver;\n// Strategy for components that process failures related to application contexts within the Spring TestContext Framework.\npublic interface ApplicationContextFailureProcessor;\n// BootstrapContext encapsulates the context in which the Spring TestContext Framework is bootstrapped.\npublic interface BootstrapContext;\n// BootstrapUtils is a collection of utility methods to assist with bootstrapping the Spring TestContext Framework.\npublic abstract class BootstrapUtils extends Object;\n// @BootstrapWith defines class-level metadata that is used to determine how to bootstrap the Spring TestContext Framework.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited public @interface BootstrapWith;\n// A CacheAwareContextLoaderDelegate is responsible for loading and closing application contexts, interacting transparently with a ContextCache behind the scenes.\npublic interface CacheAwareContextLoaderDelegate;\n// @ContextConfiguration defines class-level metadata that is used to determine how to load and configure an ApplicationContext for integration tests.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited public @interface ContextConfiguration;\n// ContextConfigurationAttributes encapsulates the context configuration attributes declared via @ContextConfiguration.\npublic class ContextConfigurationAttributes extends Object;\n// Strategy interface for customizing application contexts that are created and managed by the Spring TestContext Framework.\n@FunctionalInterface public interface ContextCustomizer;\n// Factory for creating ContextCustomizers.\n@FunctionalInterface public interface ContextCustomizerFactory;\n// @ContextHierarchy is a class-level annotation that is used to define a hierarchy of ApplicationContexts for integration tests.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited public @interface ContextHierarchy;\n// Strategy interface for loading an ApplicationContext for an integration test managed by the Spring TestContext Framework.\npublic interface ContextLoader;\n// Exception thrown when an error occurs while a SmartContextLoader attempts to load an ApplicationContext.\npublic class ContextLoadException extends Exception;\n", "des": "This package contains the Spring TestContext Framework which provides annotation-driven unit and integration testing support that is agnostic of the actual testing framework in use."}
{"index": 1837, "repo": "spring-test-6.0.11", "code": "package aot\n\n// Strategy interface for loading an ApplicationContext for build-time AOT processing as well as run-time AOT execution for an integration test managed by the Spring TestContext Framework.\npublic interface AotContextLoader extends SmartContextLoader;\n// Holder for metadata specific to ahead-of-time (AOT) support in the Spring TestContext Framework.\npublic interface AotTestAttributes;\n// AotTestContextInitializers provides mappings from test classes to AOT-optimized context initializers.\npublic class AotTestContextInitializers extends Object;\n// AotTestExecutionListener is an extension of the TestExecutionListener SPI that allows a listener to optionally provide ahead-of-time (AOT) support.\npublic interface AotTestExecutionListener extends TestExecutionListener;\n// Filesystem-based ahead-of-time (AOT) processing base implementation that scans the provided classpath roots for Spring integration test classes and then generates AOT artifacts for those test classes in the configured output directories.\npublic abstract class TestAotProcessor extends org.springframework.context.aot.AbstractAotProcessor<Void>;\n// Thrown if an error occurs during AOT build-time processing or AOT run-time execution in the Spring TestContext Framework.\npublic class TestContextAotException extends RuntimeException;\n// TestContextAotGenerator generates AOT artifacts for integration tests that depend on support from the Spring TestContext Framework.\npublic class TestContextAotGenerator extends Object;\n// Contract for registering RuntimeHints for integration tests run with the Spring TestContext Framework based on the ClassLoader of the deployment unit.\npublic interface TestRuntimeHintsRegistrar;\n", "des": "Ahead-of-time (AOT) support for the Spring TestContext Framework."}
{"index": 1838, "repo": "spring-test-6.0.11", "code": "package cache\n\n// ContextCache defines the SPI for caching Spring ApplicationContexts within the Spring TestContext Framework.\npublic interface ContextCache;\n// Collection of utilities for working with ContextCaches.\npublic abstract class ContextCacheUtils extends Object;\n// Default implementation of the CacheAwareContextLoaderDelegate interface.\npublic class DefaultCacheAwareContextLoaderDelegate extends Object implements CacheAwareContextLoaderDelegate;\n// Default implementation of the ContextCache API.\npublic class DefaultContextCache extends Object implements ContextCache;\n", "des": "Support for context caching within the Spring TestContext Framework."}
{"index": 1839, "repo": "spring-test-6.0.11", "code": "package event\n\n// TestContextEvent published by the EventPublishingTestExecutionListener when TestExecutionListener.afterTestClass(TestContext) is invoked.\npublic class AfterTestClassEvent extends TestContextEvent;\n// TestContextEvent published by the EventPublishingTestExecutionListener when TestExecutionListener.afterTestExecution(TestContext) is invoked.\npublic class AfterTestExecutionEvent extends TestContextEvent;\n// TestContextEvent published by the EventPublishingTestExecutionListener when TestExecutionListener.afterTestMethod(TestContext) is invoked.\npublic class AfterTestMethodEvent extends TestContextEvent;\n// ApplicationEvents encapsulates all application events that were fired during the execution of a single test method.\npublic interface ApplicationEvents;\n// Holder class to expose the application events published during the execution of a test in the form of a thread-bound ApplicationEvents object.\npublic abstract class ApplicationEventsHolder extends Object;\n// TestExecutionListener which provides support for ApplicationEvents.\npublic class ApplicationEventsTestExecutionListener extends AbstractTestExecutionListener;\n// TestContextEvent published by the EventPublishingTestExecutionListener when TestExecutionListener.beforeTestClass(TestContext) is invoked.\npublic class BeforeTestClassEvent extends TestContextEvent;\n// TestContextEvent published by the EventPublishingTestExecutionListener when TestExecutionListener.beforeTestExecution(TestContext) is invoked.\npublic class BeforeTestExecutionEvent extends TestContextEvent;\n// TestContextEvent published by the EventPublishingTestExecutionListener when TestExecutionListener.beforeTestMethod(TestContext) is invoked.\npublic class BeforeTestMethodEvent extends TestContextEvent;\n// TestExecutionListener that publishes test execution events to the ApplicationContext for the currently executing test.\npublic class EventPublishingTestExecutionListener extends AbstractTestExecutionListener;\n// TestContextEvent published by the EventPublishingTestExecutionListener when TestExecutionListener.prepareTestInstance(TestContext) is invoked.\npublic class PrepareTestInstanceEvent extends TestContextEvent;\n// @RecordApplicationEvents is a class-level annotation that is used to instruct the Spring TestContext Framework to record all application events that are published in the ApplicationContext during the execution of a single test.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited public @interface RecordApplicationEvents;\n", "des": "Test event support classes for the Spring TestContext Framework."}
{"index": 1840, "repo": "spring-test-6.0.11", "code": "package annotation\n\n// @EventListener annotation used to consume an AfterTestClassEvent published by the EventPublishingTestExecutionListener.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @EventListener(AfterTestClassEvent.class) public @interface AfterTestClass;\n// @EventListener annotation used to consume an AfterTestExecutionEvent published by the EventPublishingTestExecutionListener.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @EventListener(AfterTestExecutionEvent.class) public @interface AfterTestExecution;\n// @EventListener annotation used to consume an AfterTestMethodEvent published by the EventPublishingTestExecutionListener.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @EventListener(AfterTestMethodEvent.class) public @interface AfterTestMethod;\n// @EventListener annotation used to consume a BeforeTestClassEvent published by the EventPublishingTestExecutionListener.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @EventListener(BeforeTestClassEvent.class) public @interface BeforeTestClass;\n// @EventListener annotation used to consume a BeforeTestExecution published by the EventPublishingTestExecutionListener.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @EventListener(BeforeTestExecutionEvent.class) public @interface BeforeTestExecution;\n// @EventListener annotation used to consume a BeforeTestMethodEvent published by the EventPublishingTestExecutionListener.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @EventListener(BeforeTestMethodEvent.class) public @interface BeforeTestMethod;\n// @EventListener annotation used to consume a PrepareTestInstanceEvent published by the EventPublishingTestExecutionListener.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) @Documented @EventListener(PrepareTestInstanceEvent.class) public @interface PrepareTestInstance;\n", "des": "Test execution event annotations for the Spring TestContext Framework."}
{"index": 1841, "repo": "spring-test-6.0.11", "code": "package jdbc\n\n// @Sql is used to annotate a test class or test method to configure SQL Sql.scripts() and Sql.statements() to be executed against a given database during integration tests.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Inherited @Repeatable(SqlGroup.class) public @interface Sql;\n// Enumeration of phases that dictate when SQL scripts are executed.\npublic static enum Sql.ExecutionPhase extends Enum<Sql.ExecutionPhase>;\n// @SqlConfig defines metadata that is used to determine how to parse and execute SQL scripts configured via the @Sql annotation.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited public @interface SqlConfig;\n// Enumeration of modes that dictate how errors are handled while executing SQL statements.\npublic static enum SqlConfig.ErrorMode extends Enum<SqlConfig.ErrorMode>;\n// Enumeration of modes that dictate whether SQL scripts should be executed within a transaction and what the transaction propagation behavior should be.\npublic static enum SqlConfig.TransactionMode extends Enum<SqlConfig.TransactionMode>;\n// Container annotation that aggregates several @Sql annotations.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Inherited public @interface SqlGroup;\n// @SqlMergeMode is used to annotate a test class or test method to configure whether method-level @Sql declarations are merged with class-level @Sql declarations.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Inherited public @interface SqlMergeMode;\n// Enumeration of modes that dictate whether method-level @Sql declarations are merged with class-level @Sql declarations.\npublic static enum SqlMergeMode.MergeMode extends Enum<SqlMergeMode.MergeMode>;\n// TestExecutionListener that provides support for executing SQL scripts and inlined statements configured via the @Sql annotation.\npublic class SqlScriptsTestExecutionListener extends AbstractTestExecutionListener implements AotTestExecutionListener;\n", "des": "JDBC support classes for the Spring TestContext Framework, including support for declarative SQL script execution via @Sql."}
{"index": 1842, "repo": "spring-test-6.0.11", "code": "package jupiter\n\n// @DisabledIf is used to signal that the annotated test class or test method is disabled and should not be executed if the supplied DisabledIf.expression() evaluates to true.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @ExtendWith(DisabledIfCondition.class) public @interface DisabledIf;\n// DisabledIfCondition is an ExecutionCondition that supports the @DisabledIf annotation when using the Spring TestContext Framework in conjunction with JUnit 5's Jupiter programming model.\npublic class DisabledIfCondition extends Object;\n// @EnabledIf is used to signal that the annotated test class or test method is enabled and should be executed if the supplied EnabledIf.expression() evaluates to true.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @ExtendWith(EnabledIfCondition.class) public @interface EnabledIf;\n// EnabledIfCondition is an ExecutionCondition that supports the @EnabledIf annotation when using the Spring TestContext Framework in conjunction with JUnit 5's Jupiter programming model.\npublic class EnabledIfCondition extends Object;\n// SpringExtension integrates the Spring TestContext Framework into JUnit 5's Jupiter programming model.\npublic class SpringExtension extends Object implements org.junit.jupiter.api.extension.BeforeAllCallback, org.junit.jupiter.api.extension.AfterAllCallback, org.junit.jupiter.api.extension.TestInstancePostProcessor, org.junit.jupiter.api.extension.BeforeEachCallback, org.junit.jupiter.api.extension.AfterEachCallback, org.junit.jupiter.api.extension.BeforeTestExecutionCallback, org.junit.jupiter.api.extension.AfterTestExecutionCallback, org.junit.jupiter.api.extension.ParameterResolver;\n// @SpringJUnitConfig is a composed annotation that combines @ExtendWith(SpringExtension.class) from JUnit Jupiter with @ContextConfiguration from the Spring TestContext Framework.\n@ExtendWith(SpringExtension.class) @ContextConfiguration @Documented @Inherited @Retention(RUNTIME) @Target(TYPE) public @interface SpringJUnitConfig;\n", "des": "Core support for integrating the Spring TestContext Framework with the JUnit Jupiter extension model in JUnit 5."}
{"index": 1843, "repo": "spring-test-6.0.11", "code": "package web\n\n// @SpringJUnitWebConfig is a composed annotation that combines @ExtendWith(SpringExtension.class) from JUnit Jupiter with @ContextConfiguration and @WebAppConfiguration from the Spring TestContext Framework.\n@ExtendWith(SpringExtension.class) @ContextConfiguration @WebAppConfiguration @Documented @Inherited @Retention(RUNTIME) @Target(TYPE) public @interface SpringJUnitWebConfig;\n", "des": "Web support for integrating the Spring TestContext Framework with the JUnit Jupiter extension model in JUnit 5."}
{"index": 1844, "repo": "spring-test-6.0.11", "code": "package junit4\n\n// Abstract base test class which integrates the Spring TestContext Framework with explicit ApplicationContext testing support in a JUnit 4 environment.\npublic abstract class AbstractJUnit4SpringContextTests extends Object implements org.springframework.context.ApplicationContextAware;\n// Abstract transactional extension of AbstractJUnit4SpringContextTests which adds convenience functionality for JDBC access.\n@Transactional public abstract class AbstractTransactionalJUnit4SpringContextTests extends AbstractJUnit4SpringContextTests;\n// SpringJUnit4ClassRunner is a custom extension of JUnit's BlockJUnit4ClassRunner which provides functionality of the Spring TestContext Framework to standard JUnit tests by means of the TestContextManager and associated support classes and annotations.\npublic class SpringJUnit4ClassRunner extends BlockJUnit4ClassRunner;\n// SpringRunner is an alias for the SpringJUnit4ClassRunner.\npublic final class SpringRunner extends SpringJUnit4ClassRunner;\n", "des": "Support classes for integrating the Spring TestContext Framework with JUnit 4.12 or higher."}
{"index": 1845, "repo": "spring-test-6.0.11", "code": "package rules\n\n// SpringClassRule is a custom JUnit TestRule that supports class-level features of the Spring TestContext Framework in standard JUnit tests by means of the TestContextManager and associated support classes and annotations.\npublic class SpringClassRule extends Object implements TestRule;\n// SpringMethodRule is a custom JUnit 4 MethodRule that supports instance-level and method-level features of the Spring TestContext Framework in standard JUnit tests by means of the TestContextManager and associated support classes and annotations.\npublic class SpringMethodRule extends Object implements MethodRule;\n", "des": "Custom JUnit 4 Rules used in the Spring TestContext Framework."}
{"index": 1846, "repo": "spring-test-6.0.11", "code": "package statements\n\n// ProfileValueChecker is a custom JUnit Statement that checks whether a test class or test method is enabled in the current environment via Spring's @IfProfileValue annotation.\npublic class ProfileValueChecker extends Statement;\n// RunAfterTestClassCallbacks is a custom JUnit Statement which allows the Spring TestContext Framework to be plugged into the JUnit execution chain by calling afterTestClass() on the supplied TestContextManager.\npublic class RunAfterTestClassCallbacks extends Statement;\n// RunAfterTestExecutionCallbacks is a custom JUnit Statement which allows the Spring TestContext Framework to be plugged into the JUnit 4 execution chain by calling afterTestExecution() on the supplied TestContextManager.\npublic class RunAfterTestExecutionCallbacks extends Statement;\n// RunAfterTestMethodCallbacks is a custom JUnit Statement which allows the Spring TestContext Framework to be plugged into the JUnit execution chain by calling afterTestMethod() on the supplied TestContextManager.\npublic class RunAfterTestMethodCallbacks extends Statement;\n// RunBeforeTestClassCallbacks is a custom JUnit Statement which allows the Spring TestContext Framework to be plugged into the JUnit execution chain by calling beforeTestClass() on the supplied TestContextManager.\npublic class RunBeforeTestClassCallbacks extends Statement;\n// RunBeforeTestExecutionCallbacks is a custom JUnit Statement which allows the Spring TestContext Framework to be plugged into the JUnit 4 execution chain by calling beforeTestExecution() on the supplied TestContextManager.\npublic class RunBeforeTestExecutionCallbacks extends Statement;\n// RunBeforeTestMethodCallbacks is a custom JUnit Statement which allows the Spring TestContext Framework to be plugged into the JUnit execution chain by calling beforeTestMethod() on the supplied TestContextManager.\npublic class RunBeforeTestMethodCallbacks extends Statement;\n// RunPrepareTestInstanceCallbacks is a custom JUnit Statement which allows the Spring TestContext Framework to be plugged into the JUnit execution chain by calling prepareTestInstance() on the supplied TestContextManager.\npublic class RunPrepareTestInstanceCallbacks extends Statement;\n// SpringFailOnTimeout is a custom JUnit Statement which adds support for Spring's @Timed annotation by throwing an exception if the next statement in the execution chain takes more than the specified number of milliseconds.\npublic class SpringFailOnTimeout extends Statement;\n", "des": "Custom JUnit 4 Statements used in the Spring TestContext Framework."}
{"index": 1847, "repo": "spring-test-6.0.11", "code": "package support\n\n// Abstract application context loader that provides a basis for all concrete implementations of the ContextLoader SPI.\npublic abstract class AbstractContextLoader extends Object implements SmartContextLoader;\n// AbstractDelegatingSmartContextLoader serves as an abstract base class for implementations of the SmartContextLoader SPI that delegate to a set of candidate SmartContextLoaders (i.e., one that supports XML configuration files or Groovy scripts and one that supports annotated classes) to determine which context loader is appropriate for a given test class's configuration.\npublic abstract class AbstractDelegatingSmartContextLoader extends Object implements AotContextLoader;\n// Abstract base class for TestExecutionListener implementations that provide support for marking the ApplicationContext associated with a test as dirty for both test classes and test methods annotated with the @DirtiesContext annotation.\npublic abstract class AbstractDirtiesContextTestExecutionListener extends AbstractTestExecutionListener;\n// Abstract, generic extension of AbstractContextLoader that loads a GenericApplicationContext.\npublic abstract class AbstractGenericContextLoader extends AbstractContextLoader implements AotContextLoader;\n// Abstract implementation of the TestContextBootstrapper interface which provides most of the behavior required by a bootstrapper.\npublic abstract class AbstractTestContextBootstrapper extends Object implements TestContextBootstrapper;\n// Abstract ordered implementation of the TestExecutionListener API.\npublic abstract class AbstractTestExecutionListener extends Object implements TestExecutionListener, org.springframework.core.Ordered;\n// Concrete implementation of AbstractGenericContextLoader that loads bean definitions from component classes.\npublic class AnnotationConfigContextLoader extends AbstractGenericContextLoader;\n// Utility methods for SmartContextLoaders that deal with component classes (e.g., @Configuration classes).\npublic abstract class AnnotationConfigContextLoaderUtils extends Object;\n// Default implementation of the ActiveProfilesResolver strategy that resolves active bean definition profiles based solely on profiles configured declaratively via ActiveProfiles.profiles() or ActiveProfiles.value().\npublic class DefaultActiveProfilesResolver extends Object implements ActiveProfilesResolver;\n// Default implementation of the BootstrapContext interface.\npublic class DefaultBootstrapContext extends Object implements BootstrapContext;\n// Default implementation of the TestContext interface.\npublic class DefaultTestContext extends Object implements TestContext;\n// Default implementation of the TestContextBootstrapper SPI.\npublic class DefaultTestContextBootstrapper extends AbstractTestContextBootstrapper;\n", "des": "Support classes for the Spring TestContext Framework."}
{"index": 1848, "repo": "spring-test-6.0.11", "code": "package testng\n\n// Abstract base test class which integrates the Spring TestContext Framework with explicit ApplicationContext testing support in a TestNG environment.\npublic abstract class AbstractTestNGSpringContextTests extends Object implements org.testng.IHookable, org.springframework.context.ApplicationContextAware;\n// Abstract transactional extension of AbstractTestNGSpringContextTests which adds convenience functionality for JDBC access.\n@Transactional public abstract class AbstractTransactionalTestNGSpringContextTests extends AbstractTestNGSpringContextTests;\n", "des": "Support classes for integrating the Spring TestContext Framework with TestNG."}
{"index": 1849, "repo": "spring-test-6.0.11", "code": "package transaction\n\n// Test annotation which indicates that the annotated void method should be executed after a transaction is ended for a test method configured to run within a transaction via Spring's @Transactional annotation.\n@Target({METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented public @interface AfterTransaction;\n// Test annotation which indicates that the annotated void method should be executed before a transaction is started for a test method configured to run within a transaction via Spring's @Transactional annotation.\n@Target({METHOD,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented public @interface BeforeTransaction;\n// Utility methods for working with transactions and data access related beans within the Spring TestContext Framework.\npublic abstract class TestContextTransactionUtils extends Object;\n// TestTransaction provides a collection of static utility methods for programmatic interaction with test-managed transactions within test methods, before methods, and after methods.\npublic final class TestTransaction extends Object;\n// TestExecutionListener that provides support for executing tests within test-managed transactions by honoring Spring's @Transactional annotation.\npublic class TransactionalTestExecutionListener extends AbstractTestExecutionListener;\n", "des": "Transactional support classes for the Spring TestContext Framework."}
{"index": 1850, "repo": "spring-test-6.0.11", "code": "package util\n\n// Utility methods for working with resources within the Spring TestContext Framework.\npublic abstract class TestContextResourceUtils extends Object;\n// Collection of utilities for working with SpringFactoriesLoader within the Spring TestContext Framework.\npublic abstract class TestContextSpringFactoriesUtils extends Object;\n", "des": "Common utilities used within the Spring TestContext Framework."}
{"index": 1851, "repo": "spring-test-6.0.11", "code": "package web\n\n// Abstract, generic extension of AbstractContextLoader that loads a GenericWebApplicationContext.\npublic abstract class AbstractGenericWebContextLoader extends AbstractContextLoader implements AotContextLoader;\n// Concrete implementation of AbstractGenericWebContextLoader that loads bean definitions from annotated classes.\npublic class AnnotationConfigWebContextLoader extends AbstractGenericWebContextLoader;\n// Concrete implementation of AbstractGenericWebContextLoader that loads bean definitions from Groovy scripts and XML configuration files.\npublic class GenericGroovyXmlWebContextLoader extends GenericXmlWebContextLoader;\n// Concrete implementation of AbstractGenericWebContextLoader that loads bean definitions from XML resources.\npublic class GenericXmlWebContextLoader extends AbstractGenericWebContextLoader;\n// TestExecutionListener which provides mock Servlet API support to WebApplicationContexts loaded by the Spring TestContext Framework.\npublic class ServletTestExecutionListener extends AbstractTestExecutionListener;\n// @WebAppConfiguration is a class-level annotation that is used to declare that the ApplicationContext loaded for an integration test should be a WebApplicationContext.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited public @interface WebAppConfiguration;\n// WebDelegatingSmartContextLoader is a concrete implementation of AbstractDelegatingSmartContextLoader that delegates to a GenericXmlWebContextLoader (or a GenericGroovyXmlWebContextLoader if Groovy is present on the classpath) and an AnnotationConfigWebContextLoader.\npublic class WebDelegatingSmartContextLoader extends AbstractDelegatingSmartContextLoader;\n// WebMergedContextConfiguration encapsulates the merged context configuration declared on a test class and all of its superclasses and enclosing classes via @ContextConfiguration, @WebAppConfiguration, @ActiveProfiles, and @TestPropertySource.\npublic class WebMergedContextConfiguration extends MergedContextConfiguration;\n// Web-specific implementation of the TestContextBootstrapper SPI.\npublic class WebTestContextBootstrapper extends DefaultTestContextBootstrapper;\n", "des": "Web support classes for the Spring TestContext Framework."}
{"index": 1852, "repo": "spring-test-6.0.11", "code": "package jdbc\n\n// JdbcTestUtils is a collection of JDBC related utility functions intended to simplify standard database testing scenarios.\npublic abstract class JdbcTestUtils extends Object;\n", "des": "Support classes for tests based on JDBC."}
{"index": 1853, "repo": "spring-test-6.0.11", "code": "package util\n\n// AopTestUtils is a collection of AOP-related utility methods for use in unit and integration testing scenarios.\npublic abstract class AopTestUtils extends Object;\n// Test assertions that are independent of any third-party assertion library.\npublic abstract class AssertionErrors extends Object;\n// ExceptionCollector is a test utility for executing code blocks, collecting exceptions, and generating a single AssertionError containing any exceptions encountered as suppressed exceptions.\npublic class ExceptionCollector extends Object;\n// Executable is a functional interface that can be used to implement any generic block of code that potentially throws a Throwable.\n@FunctionalInterface public static interface ExceptionCollector.Executable;\n// A helper class for assertions on JSON content.\npublic class JsonExpectationsHelper extends Object;\n// A helper class for applying assertions via JSON path expressions.\npublic class JsonPathExpectationsHelper extends Object;\n// ReflectionTestUtils is a collection of reflection-based utility methods for use in unit and integration testing scenarios.\npublic abstract class ReflectionTestUtils extends Object;\n// Simple utility for finding available TCP ports on localhost for use in integration testing scenarios.\npublic class TestSocketUtils extends Object;\n// A helper class for assertions on XML content.\npublic class XmlExpectationsHelper extends Object;\n// A helper class for applying assertions via XPath expressions.\npublic class XpathExpectationsHelper extends Object;\n", "des": "General utility classes for use in unit and integration tests."}
{"index": 1854, "repo": "spring-test-6.0.11", "code": "package web\n\n// A collection of assertions intended to simplify testing scenarios dealing with Spring Web MVC ModelAndView objects.\npublic abstract class ModelAndViewAssert extends Object;\n", "des": "Helper classes for unit tests based on Spring's web support."}
{"index": 1855, "repo": "spring-test-6.0.11", "code": "package client\n\n// Base class for RequestExpectationManager implementations responsible for storing expectations and actual requests, and checking for unsatisfied expectations at the end.\npublic abstract class AbstractRequestExpectationManager extends Object implements RequestExpectationManager;\n// Helper class to manage a group of remaining expectations.\nprotected static class AbstractRequestExpectationManager.RequestExpectationGroup extends Object;\n// Default implementation of RequestExpectation that simply delegates to the request matchers and the response creator it contains.\npublic class DefaultRequestExpectation extends Object implements RequestExpectation;\n// Helper class that keeps track of actual vs expected request count.\nprotected static class DefaultRequestExpectation.RequestCount extends Object;\n// A simple type representing a range for an expected count.\npublic final class ExpectedCount extends Object;\n// A ClientHttpRequestFactory for requests executed via MockMvc.\npublic class MockMvcClientHttpRequestFactory extends Object implements org.springframework.http.client.ClientHttpRequestFactory;\n// Main entry point for client-side REST testing.\npublic final class MockRestServiceServer extends Object;\n// Builder to create a MockRestServiceServer.\npublic static interface MockRestServiceServer.MockRestServiceServerBuilder;\n// An extension of ResponseActions that also implements RequestMatcher and ResponseCreator\npublic interface RequestExpectation extends ResponseActions, RequestMatcher, ResponseCreator;\n// Encapsulates the behavior required to implement MockRestServiceServer including its public API (create expectations + verify/reset) along with an extra method for verifying actual requests.\npublic interface RequestExpectationManager;\n// A contract for matching requests to expectations.\n@FunctionalInterface public interface RequestMatcher;\n// A contract for setting up request expectations and defining a response.\npublic interface ResponseActions;\n// A contract for creating a ClientHttpResponse.\n@FunctionalInterface public interface ResponseCreator;\n// Simple RequestExpectationManager that matches requests to expectations sequentially, i.e.\npublic class SimpleRequestExpectationManager extends AbstractRequestExpectationManager;\n// RequestExpectationManager that matches requests to expectations regardless of the order of declaration of expected requests.\npublic class UnorderedRequestExpectationManager extends AbstractRequestExpectationManager;\n", "des": "Contains client-side REST testing support."}
{"index": 1856, "repo": "spring-test-6.0.11", "code": "package match\n\n// Factory for request content RequestMatcher's.\npublic class ContentRequestMatchers extends Object;\n// Factory for assertions on the request content using JsonPath expressions.\npublic class JsonPathRequestMatchers extends Object;\n// Static factory methods for RequestMatcher classes.\npublic abstract class MockRestRequestMatchers extends Object;\n// Factory methods for request content RequestMatcher implementations that use an XPath expression.\npublic class XpathRequestMatchers extends Object;\n", "des": "Contains built-in RequestMatcher implementations."}
{"index": 1857, "repo": "spring-test-6.0.11", "code": "package response\n\n// A ResponseCreator with builder-style methods for adding response details.\npublic class DefaultResponseCreator extends Object implements ResponseCreator;\n// ResponseCreator that obtains the response by executing the request through a ClientHttpRequestFactory.\npublic class ExecutingResponseCreator extends Object implements ResponseCreator;\n// Static factory methods to obtain a ResponseCreator with a fixed response.\npublic abstract class MockRestResponseCreators extends Object;\n", "des": "Contains built-in ResponseCreator implementations."}
{"index": 1858, "repo": "spring-test-6.0.11", "code": "package server\n\n// Assertions on cookies of the response.\npublic class CookieAssertions extends Object;\n// ExchangeResult sub-class that exposes the response body fully extracted to a representation of type <T>.\npublic class EntityExchangeResult<T> extends ExchangeResult;\n// Container for request and response details for exchanges performed through WebTestClient.\npublic class ExchangeResult extends Object;\n// ExchangeResult variant with the response body decoded as Flux<T> but not yet consumed.\npublic class FluxExchangeResult<T> extends ExchangeResult;\n// Assertions on headers of the response.\npublic class HeaderAssertions extends Object;\n// Connector that handles requests by invoking an HttpHandler rather than making actual requests to a network socket.\npublic class HttpHandlerConnector extends Object implements org.springframework.http.client.reactive.ClientHttpConnector;\n// Indicates that an error occurred after the server response was completed, via ReactiveHttpOutputMessage.writeWith(org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>) or ReactiveHttpOutputMessage.setComplete(), and can no longer be changed.\npublic static final class HttpHandlerConnector.FailureAfterResponseCompletedException extends RuntimeException;\n// JsonPath assertions.\npublic class JsonPathAssertions extends Object;\n// Simple ClientHttpResponse extension that also exposes a result object from the underlying mock server exchange for further assertions on the state of the server response after the request is performed.\npublic interface MockServerClientHttpResponse extends org.springframework.http.client.reactive.ClientHttpResponse;\n// Contract that frameworks or applications can use to pre-package a set of customizations to a WebTestClient.MockServerSpec and expose that as a shortcut.\npublic interface MockServerConfigurer;\n// Assertions on the response status.\npublic class StatusAssertions extends Object;\n// Client for testing web servers that uses WebClient internally to perform requests while also providing a fluent API to verify responses.\npublic interface WebTestClient;\n// Spec for expectations on the response body content.\npublic static interface WebTestClient.BodyContentSpec;\n// Spec for expectations on the response body decoded to a single Object.\npublic static interface WebTestClient.BodySpec<B,S extends WebTestClient.BodySpec<B,S>>;\n", "des": "Support for testing Spring WebFlux server endpoints via WebTestClient."}
{"index": 1859, "repo": "spring-test-6.0.11", "code": "package servlet\n\n// Strategy interface for customizing DispatcherServlet instances that are managed by MockMvc.\n@FunctionalInterface public interface DispatcherServletCustomizer;\n// Main entry point for server-side Spring MVC test support.\npublic final class MockMvc extends Object;\n// Builds a MockMvc instance.\npublic interface MockMvcBuilder;\n// Base class for MockMvc builder implementations, providing the capability to create a MockMvc instance.\npublic abstract class MockMvcBuilderSupport extends Object;\n// Provides access to the result of an executed request.\npublic interface MvcResult;\n// Builds a MockHttpServletRequest.\npublic interface RequestBuilder;\n// Allows applying actions, such as expectations, on the result of an executed request.\npublic interface ResultActions;\n// A ResultHandler performs a generic action on the result of an executed request — for example, printing debug information.\n@FunctionalInterface public interface ResultHandler;\n// A ResultMatcher matches the result of an executed request against some expectation.\n@FunctionalInterface public interface ResultMatcher;\n// Extended variant of a RequestBuilder that applies its org.springframework.test.web.servlet.request.RequestPostProcessors as a separate step from the RequestBuilder.buildRequest(jakarta.servlet.ServletContext) method.\npublic interface SmartRequestBuilder extends RequestBuilder;\n", "des": "Contains server-side support for testing Spring MVC applications."}
{"index": 1860, "repo": "spring-test-6.0.11", "code": "package client\n\n// Connector that handles requests by invoking a MockMvc rather than making actual requests over HTTP.\npublic class MockMvcHttpConnector extends Object implements org.springframework.http.client.reactive.ClientHttpConnector;\n// The main class for testing Spring MVC applications via WebTestClient with MockMvc for server request handling.\npublic interface MockMvcWebTestClient;\n// Specification for configuring MockMvc to test one or more controllers directly, and a simple facade around StandaloneMockMvcBuilder.\npublic static interface MockMvcWebTestClient.ControllerSpec extends MockMvcWebTestClient.MockMvcServerSpec<MockMvcWebTestClient.ControllerSpec>;\n// Base specification for configuring MockMvc, and a simple facade around ConfigurableMockMvcBuilder.\npublic static interface MockMvcWebTestClient.MockMvcServerSpec<B extends MockMvcWebTestClient.MockMvcServerSpec<B>>;\n", "des": "Support for testing Spring MVC applications via WebTestClient with MockMvc for server request handling."}
{"index": 1861, "repo": "spring-test-6.0.11", "code": "package htmlunit\n\n// Implementation of WebConnection that allows delegating to various WebConnection implementations.\npublic final class DelegatingWebConnection extends Object implements com.gargoylesoftware.htmlunit.WebConnection;\n// The delegate web connection.\npublic static final class DelegatingWebConnection.DelegateWebConnection extends Object;\n// A WebRequestMatcher that allows matching on the host and optionally the port of WebRequest#getUrl().\npublic final class HostRequestMatcher extends Object implements WebRequestMatcher;\n// MockMvcWebClientBuilder simplifies the creation of an HtmlUnit WebClient that delegates to a MockMvc instance.\npublic class MockMvcWebClientBuilder extends MockMvcWebConnectionBuilderSupport<MockMvcWebClientBuilder>;\n// MockMvcWebConnection enables MockMvc to transform a WebRequest into a WebResponse.\npublic final class MockMvcWebConnection extends Object implements com.gargoylesoftware.htmlunit.WebConnection;\n// Support class that simplifies the creation of a WebConnection that uses MockMvc and optionally delegates to a real WebConnection for specific requests.\npublic abstract class MockMvcWebConnectionBuilderSupport<T extends MockMvcWebConnectionBuilderSupport<T>> extends Object;\n// A WebRequestMatcher that allows matching on WebRequest#getUrl().toExternalForm() using a regular expression.\npublic final class UrlRegexRequestMatcher extends Object implements WebRequestMatcher;\n// Strategy for matching on a WebRequest.\n@FunctionalInterface public interface WebRequestMatcher;\n", "des": "Server-side support for testing Spring MVC applications with MockMvc and HtmlUnit."}
{"index": 1862, "repo": "spring-test-6.0.11", "code": "package webdriver\n\n// MockMvcHtmlUnitDriverBuilder simplifies the building of an HtmlUnitDriver that delegates to MockMvc and optionally delegates to an actual connection for specific requests.\npublic class MockMvcHtmlUnitDriverBuilder extends MockMvcWebConnectionBuilderSupport<MockMvcHtmlUnitDriverBuilder>;\n// WebConnectionHtmlUnitDriver enables configuration of the WebConnection for an HtmlUnitDriver instance.\npublic class WebConnectionHtmlUnitDriver extends org.openqa.selenium.htmlunit.HtmlUnitDriver;\n", "des": "Server-side support for testing Spring MVC applications with MockMvc and the Selenium HtmlUnitDriver."}
{"index": 1863, "repo": "spring-test-6.0.11", "code": "package request\n\n// An extension of SmartRequestBuilder that can be configured with RequestPostProcessors.\npublic interface ConfigurableSmartRequestBuilder<B extends ConfigurableSmartRequestBuilder<B>> extends SmartRequestBuilder;\n// Default builder for MockHttpServletRequest required as input to perform requests in MockMvc.\npublic class MockHttpServletRequestBuilder extends Object implements ConfigurableSmartRequestBuilder<MockHttpServletRequestBuilder>, org.springframework.beans.Mergeable;\n// Default builder for MockMultipartHttpServletRequest.\npublic class MockMultipartHttpServletRequestBuilder extends MockHttpServletRequestBuilder;\n// Static factory methods for RequestBuilders.\npublic abstract class MockMvcRequestBuilders extends Object;\n// Extension point for applications or 3rd party libraries that wish to further initialize a MockHttpServletRequest instance after it has been built by MockHttpServletRequestBuilder or its subclass MockMultipartHttpServletRequestBuilder.\n@FunctionalInterface public interface RequestPostProcessor;\n", "des": "Contains built-in RequestBuilder implementations."}
{"index": 1864, "repo": "spring-test-6.0.11", "code": "package result\n\n// Factory for response content assertions.\npublic class ContentResultMatchers extends Object;\n// Factory for response cookie assertions.\npublic class CookieResultMatchers extends Object;\n// Factory for \"output\" flash attribute assertions.\npublic class FlashAttributeResultMatchers extends Object;\n// Factory for assertions on the selected handler or handler method.\npublic class HandlerResultMatchers extends Object;\n// Factory for response header assertions.\npublic class HeaderResultMatchers extends Object;\n// Factory for assertions on the response content using JsonPath expressions.\npublic class JsonPathResultMatchers extends Object;\n// Static factory methods for ResultHandler-based result actions.\npublic abstract class MockMvcResultHandlers extends Object;\n// Static factory methods for ResultMatcher-based result actions.\npublic abstract class MockMvcResultMatchers extends Object;\n// Factory for assertions on the model.\npublic class ModelResultMatchers extends Object;\n// Result handler that prints MvcResult details to a given output stream — for example: System.out, System.err, a custom java.io.PrintWriter, etc.\npublic class PrintingResultHandler extends Object implements ResultHandler;\n// A contract for how to actually write result information.\nprotected static interface PrintingResultHandler.ResultValuePrinter;\n// Factory for assertions on the request.\npublic class RequestResultMatchers extends Object;\n// Factory for assertions on the response status.\npublic class StatusResultMatchers extends Object;\n// Factory for assertions on the selected view.\npublic class ViewResultMatchers extends Object;\n// Factory for assertions on the response content using XPath expressions.\npublic class XpathResultMatchers extends Object;\n", "des": "Contains built-in ResultMatcher and ResultHandler implementations."}
{"index": 1865, "repo": "spring-test-6.0.11", "code": "package setup\n\n// Abstract implementation of MockMvcBuilder with common methods for configuring filters, default request properties, global expectations and global result actions.\npublic abstract class AbstractMockMvcBuilder<B extends AbstractMockMvcBuilder<B>> extends MockMvcBuilderSupport implements ConfigurableMockMvcBuilder<B>;\n// Defines common methods for building a MockMvc.\npublic interface ConfigurableMockMvcBuilder<B extends ConfigurableMockMvcBuilder<B>> extends MockMvcBuilder;\n// A concrete implementation of AbstractMockMvcBuilder that provides the WebApplicationContext supplied to it as a constructor argument.\npublic class DefaultMockMvcBuilder extends AbstractMockMvcBuilder<DefaultMockMvcBuilder>;\n// The main class to import in order to access all available MockMvcBuilders.\npublic final class MockMvcBuilders extends Object;\n// Contract for customizing a ConfigurableMockMvcBuilder in some specific way, e.g.\npublic interface MockMvcConfigurer;\n// An empty method implementation of MockMvcConfigurer.\npublic abstract class MockMvcConfigurerAdapter extends Object implements MockMvcConfigurer;\n// MockMvcConfigurer that stores and re-uses the HTTP session across multiple requests performed through the same MockMvc instance.\npublic class SharedHttpSessionConfigurer extends Object implements MockMvcConfigurer;\n// A MockMvcBuilder that accepts @Controller registrations thus allowing full control over the instantiation and initialization of controllers and their dependencies similar to plain unit tests, and also making it possible to test one controller at a time.\npublic class StandaloneMockMvcBuilder extends AbstractMockMvcBuilder<StandaloneMockMvcBuilder>;\n", "des": "Contains built-in MockMvcBuilder implementations."}
{"index": 1866, "repo": "spring-security-cas-6.1.2", "code": "package cas\n\n// Sets the appropriate parameters for CAS's implementation of SAML (which is not guaranteed to be actually SAML compliant).\npublic final class SamlServiceProperties extends ServiceProperties;\n// Stores properties related to this CAS service.\npublic class ServiceProperties extends Object implements org.springframework.beans.factory.InitializingBean;\n", "des": "Spring Security support for Apereo's Central Authentication Service (CAS)."}
{"index": 1867, "repo": "spring-security-cas-6.1.2", "code": "package authentication\n\n// Temporary authentication object needed to load the user details service.\npublic final class CasAssertionAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken;\n// An AuthenticationProvider implementation that integrates with JA-SIG Central Authentication Service (CAS).\npublic class CasAuthenticationProvider extends Object implements org.springframework.security.authentication.AuthenticationProvider, org.springframework.beans.factory.InitializingBean, org.springframework.context.MessageSourceAware;\n// Represents a successful CAS Authentication.\npublic class CasAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken implements Serializable;\n// An Authentication implementation that is designed to process CAS service ticket.\npublic class CasServiceTicketAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken;\n// Implementation of @link StatelessTicketCache that has no backing cache.\npublic final class NullStatelessTicketCache extends Object implements StatelessTicketCache;\n// Caches tickets using a Spring IoC defined Cache.\npublic class SpringCacheBasedTicketCache extends Object implements StatelessTicketCache;\n// Caches CAS service tickets and CAS proxy tickets for stateless connections.\npublic interface StatelessTicketCache;\n", "des": "An AuthenticationProvider that can process CAS service tickets and proxy tickets."}
{"index": 1868, "repo": "spring-security-cas-6.1.2", "code": "package web\n\n// Used by the ExceptionTranslationFilter to commence authentication via the JA-SIG Central Authentication Service (CAS).\npublic class CasAuthenticationEntryPoint extends Object implements org.springframework.security.web.AuthenticationEntryPoint, org.springframework.beans.factory.InitializingBean;\n// Processes a CAS service ticket, obtains proxy granting tickets, and processes proxy tickets.\npublic class CasAuthenticationFilter extends org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter;\n", "des": "Authenticates standard web browser users via CAS."}
{"index": 1869, "repo": "spring-security-cas-6.1.2", "code": "package authentication\n\n// In order for the CasAuthenticationProvider to provide the correct service url to authenticate the ticket, the returned value of Authentication.getDetails() should implement this interface when tickets can be sent to any URL rather than only ServiceProperties.getService().\npublic interface ServiceAuthenticationDetails extends Serializable;\n// The AuthenticationDetailsSource that is set on the CasAuthenticationFilter should return a value that implements ServiceAuthenticationDetails if the application needs to authenticate dynamic service urls.\npublic class ServiceAuthenticationDetailsSource extends Object implements org.springframework.security.authentication.AuthenticationDetailsSource<jakarta.servlet.http.HttpServletRequest,ServiceAuthenticationDetails>;\n", "des": "Authentication processing mechanisms which respond to the submission of authentication credentials using CAS."}
{"index": 1870, "repo": "shiro-core-2.0.0-alpha-2", "code": "package shiro\n\n// Accesses the currently accessible Subject for the calling code depending on runtime environment.\npublic abstract class SecurityUtils extends Object;\n// Exception thrown when attempting to acquire the application's SecurityManager instance, but Shiro's lookup heuristics cannot find one.\npublic class UnavailableSecurityManagerException extends org.apache.shiro.lang.ShiroException;\n", "des": "This package primarily exists as a root classpath distinction, but it does contain two core classes widely used by applications, SecurityUtils and ShiroException."}
{"index": 1871, "repo": "shiro-core-2.0.0-alpha-2", "code": "package aop\n\n// Base support class for implementations that reads and processes JSR-175 annotations.\npublic abstract class AnnotationHandler extends Object;\n// MethodInterceptor that inspects a specific annotation on the method invocation before continuing its execution.\npublic abstract class AnnotationMethodInterceptor extends MethodInterceptorSupport;\n// Defines an AOP-framework-independent way of determining if an Annotation exists on a Method.\npublic interface AnnotationResolver;\n// Default AnnotationResolver implementation that merely inspects the MethodInvocation's target method, and returns targetMethod.getAnnotation(class).\npublic class DefaultAnnotationResolver extends Object implements AnnotationResolver;\n// A MethodInterceptor intercepts a MethodInvocation to perform before or after logic (aka 'advice').\npublic interface MethodInterceptor;\n// This class is an abstraction of AOP method interceptor behavior specific to Shiro that leaves AOP implementation specifics to be handled by subclass implementations.\npublic abstract class MethodInterceptorSupport extends Object implements MethodInterceptor;\n// 3rd-party API independent representation of a method invocation.\npublic interface MethodInvocation;\n", "des": "Components used to support the framework's AOP/interception support classes."}
{"index": 1872, "repo": "shiro-core-2.0.0-alpha-2", "code": "package authc\n\n// Superclass for almost all Authenticator implementations that performs the common work around authentication attempts.\npublic abstract class AbstractAuthenticator extends Object implements Authenticator, LogoutAware;\n// An Account is a convenience interface that extends both AuthenticationInfo and AuthorizationInfo and represents authentication and authorization for a single account in a single Realm.\npublic interface Account extends AuthenticationInfo, AuthorizationInfo;\n// Exception thrown due to a problem with the account under which an authentication attempt is being executed.\npublic class AccountException extends AuthenticationException;\n// General exception thrown due to an error during the Authentication process.\npublic class AuthenticationException extends org.apache.shiro.lang.ShiroException;\n// AuthenticationInfo represents a Subject's (aka user's) stored account information relevant to the authentication/log-in process only.\npublic interface AuthenticationInfo extends Serializable;\n// An AuthenticationListener listens for notifications while Subjects authenticate with the system.\npublic interface AuthenticationListener;\n// An AuthenticationToken is a consolidation of an account's principals and supporting credentials submitted by a user during an authentication attempt.\npublic interface AuthenticationToken extends Serializable;\n// An Authenticator is responsible for authenticating accounts in an application.\npublic interface Authenticator;\n// A AuthenticationToken that contains an a Bearer token or API key, typically received via an HTTP Authorization header.\npublic class BearerToken extends Object implements HostAuthenticationToken;\n// Thrown when an authentication attempt has been received for an account that has already been authenticated (i.e.\npublic class ConcurrentAccessException extends AccountException;\n// Exception thrown due to a problem with the credential(s) submitted for an account during the authentication process.\npublic class CredentialsException extends AuthenticationException;\n// Thrown when attempting to authenticate and the corresponding account has been disabled for some reason.\npublic class DisabledAccountException extends AccountException;\n// Thrown when a system is configured to only allow a certain number of authentication attempts over a period of time and the current session has failed to authenticate successfully within that number.\npublic class ExcessiveAttemptsException extends AccountException;\n// Thrown during the authentication process when the system determines the submitted credential(s) has expired and will not allow login.\npublic class ExpiredCredentialsException extends CredentialsException;\n// A HostAuthenticationToken retains the host information from where an authentication attempt originates.\npublic interface HostAuthenticationToken extends AuthenticationToken;\n", "des": "Core interfaces and exceptions concerning Authentication (the act of logging-in)."}
{"index": 1873, "repo": "shiro-core-2.0.0-alpha-2", "code": "package credential\n\n// A credentials matcher that always returns true when matching credentials no matter what arguments are passed in.\npublic class AllowAllCredentialsMatcher extends Object implements CredentialsMatcher;\n// Interface implemented by classes that can determine if an AuthenticationToken's provided credentials matches a corresponding account's credentials stored in the system.\npublic interface CredentialsMatcher;\n// Default implementation of the PasswordService interface that relies on an internal HashService, HashFormat, and HashFormatFactory to function:\npublic class DefaultPasswordService extends Object implements HashingPasswordService;\n// A HashedCredentialMatcher provides support for hashing of supplied AuthenticationToken credentials before being compared to those in the AuthenticationInfo from the data store.\npublic class HashedCredentialsMatcher extends SimpleCredentialsMatcher;\n// A HashingPasswordService is a PasswordService that performs password encryption and comparisons based on cryptographic Hashes.\npublic interface HashingPasswordService extends PasswordService;\n// A CredentialsMatcher that employs best-practices comparisons for hashed text passwords.\npublic class PasswordMatcher extends Object implements CredentialsMatcher;\n// A PasswordService supports common use cases when using passwords as a credentials mechanism.\npublic interface PasswordService;\n// \npublic class Sha256CredentialsMatcher extends HashedCredentialsMatcher;\n// \npublic class Sha384CredentialsMatcher extends HashedCredentialsMatcher;\n// \npublic class Sha512CredentialsMatcher extends HashedCredentialsMatcher;\n// Simple CredentialsMatcher implementation.\npublic class SimpleCredentialsMatcher extends org.apache.shiro.lang.codec.CodecSupport implements CredentialsMatcher;\n", "des": "Support for validating credentials (such as passwords or X509 certificates) during authentication via the CredentialsMatcher interface and its supporting implementations."}
{"index": 1874, "repo": "shiro-core-2.0.0-alpha-2", "code": "package pam\n\n// Abstract base implementation for Shiro's concrete AuthenticationStrategy implementations.\npublic abstract class AbstractAuthenticationStrategy extends Object implements AuthenticationStrategy;\n// AuthenticationStrategy implementation that requires all configured realms to successfully process the submitted AuthenticationToken during the log-in attempt.\npublic class AllSuccessfulStrategy extends AbstractAuthenticationStrategy;\n// AuthenticationStrategy implementation that requires at least one configured realm to successfully process the submitted AuthenticationToken during the log-in attempt.\npublic class AtLeastOneSuccessfulStrategy extends AbstractAuthenticationStrategy;\n// A AuthenticationStrategy implementation assists the ModularRealmAuthenticator during the log-in process in a pluggable realm (PAM) environment.\npublic interface AuthenticationStrategy;\n// AuthenticationStrategy implementation that only accepts the account data from the first successfully consulted Realm and ignores all subsequent realms.\npublic class FirstSuccessfulStrategy extends AbstractAuthenticationStrategy;\n// A ModularRealmAuthenticator delegates account lookups to a pluggable (modular) collection of Realms.\npublic class ModularRealmAuthenticator extends AbstractAuthenticator;\n// Exception thrown during the authentication process using FirstSuccessfulStrategy, with stopAfterFirstSuccess set.\npublic class ShortCircuitIterationException extends AuthenticationException;\n// Exception thrown during the authentication process when an AuthenticationToken implementation is encountered that is not supported by one or more configured Realms.\npublic class UnsupportedTokenException extends AuthenticationException;\n", "des": "Support for PAM, or Pluggable Authentication Modules, which is the capability to authenticate a user against multiple configurable (pluggable) modules (Shiro calls these Realms)."}
{"index": 1875, "repo": "shiro-core-2.0.0-alpha-2", "code": "package authz\n\n// Exception thrown if there is a problem during authorization (access control check).\npublic class AuthorizationException extends org.apache.shiro.lang.ShiroException;\n// AuthorizationInfo represents a single Subject's stored authorization data (roles, permissions, etc.) used during authorization (access control) checks only.\npublic interface AuthorizationInfo extends Serializable;\n// An Authorizer performs authorization (access control) operations for any given Subject (aka 'application user').\npublic interface Authorizer;\n// Thrown when a particular client (that is, host address) has not been enabled to access the system or if the client has been enabled access but is not permitted to perform a particular operation or access a particular resource.\npublic class HostUnauthorizedException extends UnauthorizedException;\n// A ModularRealmAuthorizer is an Authorizer implementation that consults one or more configured Realms during an authorization operation.\npublic class ModularRealmAuthorizer extends Object implements Authorizer, PermissionResolverAware, RolePermissionResolverAware;\n// A Permission represents the ability to perform an action or access a resource.\npublic interface Permission;\n// Simple POJO implementation of the AuthorizationInfo interface that stores roles and permissions as internal attributes.\npublic class SimpleAuthorizationInfo extends Object implements AuthorizationInfo;\n// A simple representation of a security role that has a name and a collection of permissions.\npublic class SimpleRole extends Object implements Serializable;\n// Exception thrown when attempting to execute an authorization action when a successful authentication hasn't yet occurred.\npublic class UnauthenticatedException extends AuthorizationException;\n// Thrown to indicate a requested operation or access to a requested resource is not allowed.\npublic class UnauthorizedException extends AuthorizationException;\n", "des": "Core interfaces and exceptions supporting Authorization (access control)."}
{"index": 1876, "repo": "shiro-core-2.0.0-alpha-2", "code": "package annotation\n\n// An enum for specifying a logical operation that can be used for interpreting authorization annotations\npublic enum Logical extends Enum<Logical>;\n// Requires the current Subject to have been authenticated during their current session for the annotated class/instance/method to be accessed or invoked.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented public @interface RequiresAuthentication;\n// Requires the current Subject to be a \"guest\", that is, they are not authenticated or remembered from a previous session for the annotated class/instance/method to be accessed or invoked.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented public @interface RequiresGuest;\n// Requires the current executor's Subject to imply a particular permission in order to execute the annotated method.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented public @interface RequiresPermissions;\n// Requires the currently executing Subject to have all of the specified roles.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented public @interface RequiresRoles;\n// Requires the current Subject to be an application user for the annotated class/instance/method to be accessed or invoked.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented public @interface RequiresUser;\n", "des": "Annotations used to restrict which classes, instances, or methods may be accessed or invoked depending on the caller's access abilities or authentication state."}
{"index": 1877, "repo": "shiro-core-2.0.0-alpha-2", "code": "package aop\n\n// An AnnotationsAuthorizingMethodInterceptor is a MethodInterceptor that asserts a given method is authorized to execute based on one or more configured AuthorizingAnnotationMethodInterceptors.\npublic abstract class AnnotationsAuthorizingMethodInterceptor extends AuthorizingMethodInterceptor;\n// Handles RequiresAuthentication annotations and ensures the calling subject is authenticated before allowing access.\npublic class AuthenticatedAnnotationHandler extends AuthorizingAnnotationHandler;\n// Checks to see if a @RequiresAuthenticated annotation is declared, and if so, ensures the calling Subject.isAuthenticated() before invoking the method.\npublic class AuthenticatedAnnotationMethodInterceptor extends AuthorizingAnnotationMethodInterceptor;\n// An AnnotationHandler that executes authorization (access control) behavior based on directive(s) found in a JSR-175 Annotation.\npublic abstract class AuthorizingAnnotationHandler extends AnnotationHandler;\n// An AnnotationMethodInterceptor that asserts the calling code is authorized to execute the method before allowing the invocation to continue by inspecting code annotations to perform an access control check.\npublic abstract class AuthorizingAnnotationMethodInterceptor extends AnnotationMethodInterceptor;\n// Basic abstract class to support intercepting methods that perform authorization (access control) checks.\npublic abstract class AuthorizingMethodInterceptor extends MethodInterceptorSupport;\n// This AnnotationHandler denys access from any subject (anonymous or logged in user).\npublic class DenyAllAnnotationHandler extends AuthorizingAnnotationHandler;\n// Checks to see if a @RequiresGuest annotation is declared, and if so, ensures the calling Subject does not have an identity before invoking the method.\npublic class GuestAnnotationHandler extends AuthorizingAnnotationHandler;\n// Checks to see if a @RequiresGuest annotation is declared, and if so, ensures the calling Subject does not have an identity before invoking the method.\npublic class GuestAnnotationMethodInterceptor extends AuthorizingAnnotationMethodInterceptor;\n// Checks to see if a @RequiresPermissions annotation is declared, and if so, performs a permission check to see if the calling Subject is allowed continued access.\npublic class PermissionAnnotationHandler extends AuthorizingAnnotationHandler;\n// Checks to see if a @RequiresPermissions annotation is declared, and if so, performs a permission check to see if the calling Subject is allowed to call the method.\npublic class PermissionAnnotationMethodInterceptor extends AuthorizingAnnotationMethodInterceptor;\n", "des": "Contains AOP implementation support classes specifically used for authorization operations, particularly supporting AOP Method Interceptors and JSR-175 metadata Annotations."}
{"index": 1878, "repo": "shiro-core-2.0.0-alpha-2", "code": "package permission\n\n// An all AllPermission instance is one that always implies any other permission; that is, its implies method always returns true.\npublic class AllPermission extends Object implements Permission, Serializable;\n// Provides a base Permission class from which type-safe/domain-specific subclasses may extend.\npublic class DomainPermission extends WildcardPermission;\n// Thrown by PermissionResolver.resolvePermission(String) when the String being parsed is not valid for that resolver.\npublic class InvalidPermissionStringException extends org.apache.shiro.lang.ShiroException;\n// A PermissionResolver resolves a String value and converts it into a Permission instance.\npublic interface PermissionResolver;\n// Interface implemented by a component that wishes to use any application-configured PermissionResolver that might already exist instead of potentially creating one itself.\npublic interface PermissionResolverAware;\n// A RolePermissionResolver resolves a String value and converts it into a Collection of Permission instances.\npublic interface RolePermissionResolver;\n// Interface implemented by a component that wishes to use any application-configured RolePermissionResolver that might already exist instead of potentially creating one itself.\npublic interface RolePermissionResolverAware;\n// A WildcardPermission is a very flexible permission construct supporting multiple levels of permission matching.\npublic class WildcardPermission extends Object implements Permission, Serializable;\n// PermissionResolver implementation that returns a new WildcardPermission based on the input string.\npublic class WildcardPermissionResolver extends Object implements PermissionResolver;\n", "des": "Support and default implementations for Shiro's Permission interface."}
{"index": 1879, "repo": "shiro-core-2.0.0-alpha-2", "code": "package concurrent\n\n// Executor implementation that will automatically first associate any argument Runnable instances with the currently available Subject and then dispatch the Subject-enabled runnable to an underlying delegate Executor instance.\npublic class SubjectAwareExecutor extends Object implements Executor;\n// ExecutorService implementation that will automatically first associate any argument Runnable or Callable instances with the currently available subject and then dispatch the Subject-enabled runnable or callable to an underlying delegate ExecutorService instance.\npublic class SubjectAwareExecutorService extends SubjectAwareExecutor implements ExecutorService;\n// Same concept as the SubjectAwareExecutorService but additionally supports the ScheduledExecutorService interface.\npublic class SubjectAwareScheduledExecutorService extends SubjectAwareExecutorService implements ScheduledExecutorService;\n", "des": "Executor, ExecutorService, and ScheduledExecutorService implementations for transparent Subject association with threads in an asynchronous execution environment."}
{"index": 1880, "repo": "shiro-core-2.0.0-alpha-2", "code": "package dao\n\n// Generic exception representing a problem when attempting to access data.\npublic abstract class DataAccessException extends org.apache.shiro.lang.ShiroException;\n// Root exception indicating invalid or incorrect usage of a data access resource.\npublic class InvalidResourceUsageException extends DataAccessException;\n", "des": "Package containing various components useful when building Data Access Objects (DAOs), including a generic Data Access Exception hierarchy."}
{"index": 1881, "repo": "shiro-core-2.0.0-alpha-2", "code": "package env\n\n// Basic usage:\npublic class BasicIniEnvironment extends DefaultEnvironment;\n// Simple/default Environment implementation that stores Shiro objects as key-value pairs in a Map instance.\npublic class DefaultEnvironment extends Object implements NamedObjectEnvironment, org.apache.shiro.lang.util.Destroyable;\n// An Environment instance encapsulates all of the objects that Shiro requires to function.\npublic interface Environment;\n// Exception thrown for errors related to Environment instances or configuration.\npublic class EnvironmentException extends org.apache.shiro.lang.ShiroException;\n// An environment that supports object lookup by name.\npublic interface NamedObjectEnvironment extends Environment;\n// Exception thrown when attempting to acquire an object of a required type and that object does not equal, extend, or implement a specified Class.\npublic class RequiredTypeException extends EnvironmentException;\n", "des": "Concepts used to represent Shiro's aggregate state in an application."}
{"index": 1882, "repo": "shiro-core-2.0.0-alpha-2", "code": "package jndi\n\n// Callback interface to be implemented by classes that need to perform an operation (such as a lookup) in a JNDI context.\npublic interface JndiCallback;\n// Convenient superclass for JNDI accessors, providing \"jndiTemplate\" and \"jndiEnvironment\" bean properties.\npublic class JndiLocator extends Object;\n// A factory implementation intended to be used to look up objects in jndi.\npublic class JndiObjectFactory<T> extends JndiLocator implements org.apache.shiro.lang.util.Factory<T>;\n// Helper class that simplifies JNDI operations.\npublic class JndiTemplate extends Object;\n", "des": "Enables accessing objects located in JNDI that might be useful when configuring a Shiro-enabled application."}
{"index": 1883, "repo": "shiro-core-2.0.0-alpha-2", "code": "package mgt\n\n// Abstract implementation of the RememberMeManager interface that handles serialization and encryption of the remembered user identity.\npublic abstract class AbstractRememberMeManager extends Object implements RememberMeManager;\n// Shiro support of a SecurityManager class hierarchy that delegates all authentication operations to a wrapped Authenticator instance.\npublic abstract class AuthenticatingSecurityManager extends RealmSecurityManager;\n// Shiro support of a SecurityManager class hierarchy that delegates all authorization (access control) operations to a wrapped Authorizer instance.\npublic abstract class AuthorizingSecurityManager extends AuthenticatingSecurityManager;\n// A very basic starting point for the SecurityManager interface that merely provides logging and caching support.\npublic abstract class CachingSecurityManager extends Object implements SecurityManager, org.apache.shiro.lang.util.Destroyable, org.apache.shiro.cache.CacheManagerAware, org.apache.shiro.event.EventBusAware;\n// The Shiro framework's default concrete implementation of the SecurityManager interface, based around a collection of Realms.\npublic class DefaultSecurityManager extends SessionsSecurityManager;\n// A Default SessionStorageEvaluator that provides reasonable control over if and how Sessions may be used for storing Subject state.\npublic class DefaultSessionStorageEvaluator extends Object implements SessionStorageEvaluator;\n// Default SubjectDAO implementation that stores Subject state in the Subject's Session by default (but this can be disabled - see below).\npublic class DefaultSubjectDAO extends Object implements SubjectDAO;\n// Default SubjectFactory implementation that creates DelegatingSubject instances.\npublic class DefaultSubjectFactory extends Object implements SubjectFactory;\n// Shiro support of a SecurityManager class hierarchy based around a collection of Realms.\npublic abstract class RealmSecurityManager extends CachingSecurityManager;\n// A RememberMeManager is responsible for remembering a Subject's identity across that Subject's sessions with the application.\npublic interface RememberMeManager;\n// A SecurityManager executes all security operations for all Subjects (aka users) across a single application.\npublic interface SecurityManager extends Authenticator, Authorizer, SessionManager;\n// Shiro support of a SecurityManager class hierarchy that delegates all session operations to a wrapped SessionManager instance.\npublic abstract class SessionsSecurityManager extends AuthorizingSecurityManager;\n// Evaluates whether or not Shiro may use a Subject's Session to persist that Subject's internal state.\npublic interface SessionStorageEvaluator;\n", "des": "Provides the master SecurityManager interface and a default implementation hierarchy for managing all aspects of Shiro's functionality in an application."}
{"index": 1884, "repo": "shiro-core-2.0.0-alpha-2", "code": "package realm\n\n// A top-level abstract implementation of the Realm interface that only implements authentication support (log-in) operations and leaves authorization (access control) behavior to subclasses.\npublic abstract class AuthenticatingRealm extends CachingRealm implements org.apache.shiro.lang.util.Initializable;\n// An AuthorizingRealm extends the AuthenticatingRealm's capabilities by adding Authorization (access control) support.\npublic abstract class AuthorizingRealm extends AuthenticatingRealm implements Authorizer, org.apache.shiro.lang.util.Initializable, PermissionResolverAware, RolePermissionResolverAware;\n// A very basic abstract extension point for the Realm interface that provides caching support for subclasses.\npublic abstract class CachingRealm extends Object implements Realm, org.apache.shiro.lang.util.Nameable, org.apache.shiro.cache.CacheManagerAware, LogoutAware;\n// A Realm is a security component that can access application-specific security entities such as users, roles, and permissions to determine authentication and authorization operations.\npublic interface Realm;\n// Enables Shiro end-users to configure and initialize one or more Realm instances in any manner desired.\npublic interface RealmFactory;\n// A simple implementation of the Realm interface that uses a set of configured user accounts and roles to support authentication and authorization.\npublic class SimpleAccountRealm extends AuthorizingRealm;\n", "des": "Components and sub-packages used in supporting the core Realm interface."}
{"index": 1885, "repo": "shiro-core-2.0.0-alpha-2", "code": "package activedirectory\n\n// A Realm that authenticates with an active directory LDAP server to determine the roles for a particular user.\npublic class ActiveDirectoryRealm extends AbstractLdapRealm;\n", "des": "Realms that acquire security data from a Microsoft Active Directory."}
{"index": 1886, "repo": "shiro-core-2.0.0-alpha-2", "code": "package jdbc\n\n// Realm that allows authentication and authorization via JDBC calls.\npublic class JdbcRealm extends AuthorizingRealm;\n// Password hash salt configuration.\npublic static enum JdbcRealm.SaltStyle extends Enum<JdbcRealm.SaltStyle>;\n", "des": "Realms that acquire security data from an RDBMS (Relational Database Management System) using the JDBC API."}
{"index": 1887, "repo": "shiro-core-2.0.0-alpha-2", "code": "package jndi\n\n// Looks up one or more Realm instances from JNDI using specified jndiNames.\npublic class JndiRealmFactory extends JndiLocator implements RealmFactory;\n", "des": "Support for acquiring Realms from JNDI, particularly useful for configuring Shiro in JEE or EJB environments."}
{"index": 1888, "repo": "shiro-core-2.0.0-alpha-2", "code": "package ldap\n\n// A Realm that authenticates with an LDAP server to build the Subject for a user.\npublic abstract class AbstractLdapRealm extends AuthorizingRealm;\n// An LDAP Realm implementation utilizing Sun's/Oracle's JNDI API as an LDAP API.\npublic class DefaultLdapRealm extends AuthorizingRealm;\n// LdapContextFactory implementation using the default Sun/Oracle JNDI Ldap API, utilizing JNDI environment properties and an InitialContext.\npublic class JndiLdapContextFactory extends Object implements LdapContextFactory;\n// \npublic class JndiLdapRealm extends DefaultLdapRealm;\n// Interface that encapsulates the creation of LdapContext objects that are used by DefaultLdapRealms to perform authentication attempts and query for authorization data.\npublic interface LdapContextFactory;\n// Utility class providing static methods to make working with LDAP easier.\npublic final class LdapUtils extends Object;\n", "des": "Realms that acquire security data from an LDAP (Lightweight Directory Access Protocol) server utilizing LDAP/Naming APIs."}
{"index": 1889, "repo": "shiro-core-2.0.0-alpha-2", "code": "package text\n\n// A Realm implementation that creates SimpleAccount instances based on Ini configuration.\npublic class IniRealm extends TextConfigurationRealm;\n// A TextConfigurationRealm that defers all logic to the parent class, but just enables Properties based configuration in addition to the parent class's String configuration.\npublic class PropertiesRealm extends TextConfigurationRealm implements org.apache.shiro.lang.util.Destroyable, Runnable;\n// A SimpleAccountRealm that enables text-based configuration of the initial User, Role, and Permission objects created at startup.\npublic class TextConfigurationRealm extends SimpleAccountRealm;\n", "des": "Realms that acquire security data from text-based data sources such as Files or text streams."}
{"index": 1890, "repo": "shiro-core-2.0.0-alpha-2", "code": "package session\n\n// A special case of a StoppedSessionException.\npublic class ExpiredSessionException extends StoppedSessionException;\n// Exception thrown when attempting to interact with the system under an established session when that session is considered invalid.\npublic class InvalidSessionException extends SessionException;\n// Simple Session implementation that immediately delegates all corresponding calls to an underlying proxied session instance.\npublic class ProxiedSession extends Object implements Session;\n// A Session is a stateful data context associated with a single Subject (user, daemon process, etc.) who interacts with a software system over a period of time.\npublic interface Session;\n// General security exception attributed to problems during interaction with the system during a session.\npublic class SessionException extends org.apache.shiro.lang.ShiroException;\n// Interface to be implemented by components that wish to be notified of events that occur during a Session's life cycle.\npublic interface SessionListener;\n// Simple adapter implementation of the SessionListener interface, effectively providing no-op implementations of all methods.\npublic class SessionListenerAdapter extends Object implements SessionListener;\n// Exception thrown when attempting to interact with the system under a session that has been stopped.\npublic class StoppedSessionException extends InvalidSessionException;\n// Exception thrown when attempting to interact with the system under the pretense of a particular session (e.g.\npublic class UnknownSessionException extends InvalidSessionException;\n", "des": "Components related to managing sessions, the time-based data contexts in which a Subject interacts with an application."}
{"index": 1891, "repo": "shiro-core-2.0.0-alpha-2", "code": "package mgt\n\n// Abstract implementation supporting the NativeSessionManager interface, supporting SessionListeners and application of the globalSessionTimeout.\npublic abstract class AbstractNativeSessionManager extends AbstractSessionManager implements NativeSessionManager, org.apache.shiro.event.EventBusAware;\n// Base abstract class of the SessionManager interface, enabling configuration of an application-wide globalSessionTimeout.\npublic abstract class AbstractSessionManager extends Object implements SessionManager;\n// Default business-tier implementation of the ValidatingSessionManager interface.\npublic abstract class AbstractValidatingSessionManager extends AbstractNativeSessionManager implements ValidatingSessionManager, org.apache.shiro.lang.util.Destroyable;\n// Default implementation of the SessionContext interface which provides getters and setters that wrap interaction with the underlying backing context map.\npublic class DefaultSessionContext extends MapContext implements SessionContext;\n// Default implementation of the SessionKey interface, which allows setting and retrieval of a concrete sessionId that the SessionManager implementation can use to look up a Session instance.\npublic class DefaultSessionKey extends Object implements SessionKey, Serializable;\n// Default business-tier implementation of a ValidatingSessionManager.\npublic class DefaultSessionManager extends AbstractValidatingSessionManager implements org.apache.shiro.cache.CacheManagerAware;\n// A DelegatingSession is a client-tier representation of a server side Session.\npublic class DelegatingSession extends Object implements Session, Serializable;\n// SessionValidationScheduler implementation that uses a ScheduledExecutorService to call ValidatingSessionManager.validateSessions() every sessionValidationInterval milliseconds.\npublic class ExecutorServiceSessionValidationScheduler extends Object implements SessionValidationScheduler, Runnable;\n// Implementation of the Session interface that proxies another Session, but does not allow any 'write' operations to the underlying session.\npublic class ImmutableProxiedSession extends ProxiedSession;\n// A Native session manager is one that manages sessions natively - that is, it is directly responsible for the creation, persistence and removal of Session instances and their lifecycles.\npublic interface NativeSessionManager extends SessionManager;\n// A SessionContext is a 'bucket' of data presented to a SessionFactory which interprets this data to construct Session instances.\npublic interface SessionContext extends Map<String,Object>;\n// A simple factory class that instantiates concrete Session instances.\npublic interface SessionFactory;\n", "des": "SessionManager components supporting enterprise session management."}
{"index": 1892, "repo": "shiro-core-2.0.0-alpha-2", "code": "package eis\n\n// An abstract SessionDAO implementation that performs some sanity checks on session creation and reading and allows for pluggable Session ID generation strategies if desired.\npublic abstract class AbstractSessionDAO extends Object implements SessionDAO;\n// An CachingSessionDAO is a SessionDAO that provides a transparent caching layer between the components that use it and the underlying EIS (Enterprise Information System) session backing store (for example, filesystem, database, enterprise grid/cloud, etc.).\npublic abstract class CachingSessionDAO extends AbstractSessionDAO implements org.apache.shiro.cache.CacheManagerAware;\n// SessionDAO implementation that relies on an enterprise caching product as the EIS system of record for all sessions.\npublic class EnterpriseCacheSessionDAO extends CachingSessionDAO;\n// SessionIdGenerator that generates String values of JDK UUID's as the session IDs.\npublic class JavaUuidSessionIdGenerator extends Object implements SessionIdGenerator;\n// Simple memory-based implementation of the SessionDAO that stores all of its sessions in an in-memory ConcurrentMap.\npublic class MemorySessionDAO extends AbstractSessionDAO;\n// Generates session IDs by using a Random instance to generate random IDs.\npublic class RandomSessionIdGenerator extends Object implements SessionIdGenerator;\n// Data Access Object design pattern specification to enable Session access to an EIS (Enterprise Information System).\npublic interface SessionDAO;\n// Interface allowing pluggable session ID generation strategies to be used with various SessionDAO implementations.\npublic interface SessionIdGenerator;\n", "des": "EIS (Enterprise Information System)-tier components that can perform CRUD operations for sessions using any EIS API."}
{"index": 1893, "repo": "shiro-core-2.0.0-alpha-2", "code": "package subject\n\n// Exception wrapping any potential checked exception thrown when a Subject executes a Callable.\npublic class ExecutionException extends org.apache.shiro.lang.ShiroException;\n// A PrincipalCollection that allows modification.\npublic interface MutablePrincipalCollection extends PrincipalCollection;\n// A collection of all principals associated with a corresponding Subject.\npublic interface PrincipalCollection extends Iterable, Serializable;\n// EXPERIMENTAL - DO NOT USE YET\npublic interface PrincipalMap extends PrincipalCollection, Map<String,Object>;\n// A simple implementation of the MutablePrincipalCollection interface that tracks principals internally by storing them in a LinkedHashMap.\npublic class SimplePrincipalCollection extends Object implements MutablePrincipalCollection;\n// Default implementation of the PrincipalMap interface.\npublic class SimplePrincipalMap extends Object implements PrincipalMap;\n// A Subject represents state and security operations for a single application user.\npublic interface Subject;\n// Builder design pattern implementation for creating Subject instances in a simplified way without requiring knowledge of Shiro's construction techniques.\npublic static class Subject.Builder extends Object;\n// A SubjectContext is a 'bucket' of data presented to a SecurityManager which interprets this data to construct Subject instances.\npublic interface SubjectContext extends Map<String,Object>;\n", "des": "Components supporting the Subject interface, the most important concept in Shiro's API."}
{"index": 1894, "repo": "shiro-core-2.0.0-alpha-2", "code": "package support\n\n// Default implementation of the SubjectContext interface.\npublic class DefaultSubjectContext extends MapContext implements SubjectContext;\n// Implementation of the Subject interface that delegates method calls to an underlying SecurityManager instance for security checks.\npublic class DelegatingSubject extends Object implements Subject;\n// Exception thrown if attempting to create a new Subject session, but that Subject's sessions are disabled.\npublic class DisabledSessionException extends SessionException;\n// A SubjectCallable associates a Subject with a target/delegate Callable to ensure proper Subject thread-state management when the Callable executes.\npublic class SubjectCallable<V> extends Object implements Callable<V>;\n// A SubjectRunnable ensures that a target/delegate Runnable will execute such that any call to SecurityUtils.getSubject() during the Runnable's execution will return the associated Subject instance.\npublic class SubjectRunnable extends Object implements Runnable;\n// Manages thread-state for Subject access (supporting SecurityUtils.getSubject() calls) during a thread's execution.\npublic class SubjectThreadState extends Object implements ThreadState;\n", "des": "Concrete support implementations of most of the org.apache.shiro.subject interfaces."}
{"index": 1895, "repo": "shiro-core-2.0.0-alpha-2", "code": "package util\n\n// TODO - Class JavaDoc\npublic abstract class AbstractFactory<T> extends Object implements org.apache.shiro.lang.util.Factory<T>;\n// PathMatcher implementation for Ant-style path patterns.\npublic class AntPathMatcher extends Object implements PatternMatcher;\n// Static helper class for use dealing with Collections.\npublic class CollectionUtils extends Object;\n// \n@Deprecated public abstract class JavaEnvironment extends Object;\n// A set of static helper methods for managing JDBC API objects.\npublic class JdbcUtils extends Object;\n// A MapContext provides a common base for context-based data storage in a Map.\npublic class MapContext extends Object implements Map<String,Object>, Serializable;\n// Interface for components that can match source strings against a specified pattern string.\npublic interface PatternMatcher;\n// Utility class to help with String-to-Permission object resolution.\npublic class PermissionUtils extends Object;\n// PatternMatcher implementation that uses standard java.util.regex objects.\npublic class RegExPatternMatcher extends Object implements PatternMatcher;\n// A ThreadContext provides a means of binding and unbinding objects to the current thread based on key/value pairs.\npublic abstract class ThreadContext extends Object;\n// A ThreadState instance manages any state that might need to be bound and/or restored during a thread's execution.\npublic interface ThreadState;\n", "des": "Your run-of-the-mill 'util' package for components and logic widely used across the framework that can't find their home into a proper OO hierarchy (or, most likely for things used across many hierarchies)."}
{"index": 1896, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package autoconfigure\n\n// Abstract base class for a BeanFactoryPostProcessor that can be used to dynamically declare that all beans of a specific type should depend on specific other beans identified by name or type.\npublic abstract class AbstractDependsOnBeanFactoryPostProcessor extends Object implements org.springframework.beans.factory.config.BeanFactoryPostProcessor, org.springframework.core.Ordered;\n// Indicates that a class provides configuration that can be automatically applied by Spring Boot.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Configuration(proxyBeanMethods=false) @AutoConfigureBefore @AutoConfigureAfter public @interface AutoConfiguration;\n// A TypeFilter implementation that matches registered auto-configuration classes.\npublic class AutoConfigurationExcludeFilter extends Object implements org.springframework.core.type.filter.TypeFilter, org.springframework.beans.factory.BeanClassLoaderAware;\n// Event fired when auto-configuration classes are imported.\npublic class AutoConfigurationImportEvent extends EventObject;\n// Filter that can be registered in spring.factories to limit the auto-configuration classes considered.\n@FunctionalInterface public interface AutoConfigurationImportFilter;\n// Listener that can be registered with spring.factories to receive details of imported auto-configurations.\n@FunctionalInterface public interface AutoConfigurationImportListener extends EventListener;\n// DeferredImportSelector to handle auto-configuration.\npublic class AutoConfigurationImportSelector extends Object implements org.springframework.context.annotation.DeferredImportSelector, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.context.ResourceLoaderAware, org.springframework.beans.factory.BeanFactoryAware, org.springframework.context.EnvironmentAware, org.springframework.core.Ordered;\n// \nprotected static class AutoConfigurationImportSelector.AutoConfigurationEntry extends Object;\n// Provides access to meta-data written by the auto-configure annotation processor.\npublic interface AutoConfigurationMetadata;\n// Registers packages with AutoConfigurationPackages.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(org.springframework.boot.autoconfigure.AutoConfigurationPackages.Registrar.class) public @interface AutoConfigurationPackage;\n// Class for storing auto-configuration packages for reference later (e.g.\npublic abstract class AutoConfigurationPackages extends Object;\n", "des": "Spring Boot's auto-configuration capabilities."}
{"index": 1897, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package admin\n\n// Register a JMX component that allows to administer the current application.\n@AutoConfiguration(after=JmxAutoConfiguration.class) @ConditionalOnProperty(prefix=\"spring.application.admin\", value=\"enabled\", havingValue=\"true\", matchIfMissing=false) public class SpringApplicationAdminJmxAutoConfiguration extends Object;\n", "des": "Auto-configuration for admin-related features."}
{"index": 1898, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package amqp\n\n// Configures Rabbit ConnectionFactory with sensible defaults.\npublic abstract class AbstractConnectionFactoryConfigurer<T extends org.springframework.amqp.rabbit.connection.AbstractConnectionFactory> extends Object;\n// Configure RabbitListenerContainerFactory with sensible defaults.\npublic abstract class AbstractRabbitListenerContainerFactoryConfigurer<T extends org.springframework.amqp.rabbit.config.AbstractRabbitListenerContainerFactory<?>> extends Object;\n// Configures Rabbit CachingConnectionFactory with sensible defaults.\npublic class CachingConnectionFactoryConfigurer extends AbstractConnectionFactoryConfigurer<org.springframework.amqp.rabbit.connection.CachingConnectionFactory>;\n// Callback interface that can be implemented by beans wishing to customize the auto-configured RabbitMQ ConnectionFactory.\n@FunctionalInterface public interface ConnectionFactoryCustomizer;\n// Configure DirectRabbitListenerContainerFactoryConfigurer with sensible defaults.\npublic final class DirectRabbitListenerContainerFactoryConfigurer extends AbstractRabbitListenerContainerFactoryConfigurer<org.springframework.amqp.rabbit.config.DirectRabbitListenerContainerFactory>;\n// Callback interface that can be implemented by beans wishing to customize the auto-configured Environment that is created by an EnvironmentBuilder.\n@FunctionalInterface public interface EnvironmentBuilderCustomizer;\n// Auto-configuration for RabbitTemplate.\n@AutoConfiguration @ConditionalOnClass({org.springframework.amqp.rabbit.core.RabbitTemplate.class,com.rabbitmq.client.Channel.class}) @EnableConfigurationProperties(RabbitProperties.class) @Import({org.springframework.boot.autoconfigure.amqp.RabbitAnnotationDrivenConfiguration.class,org.springframework.boot.autoconfigure.amqp.RabbitStreamConfiguration.class}) public class RabbitAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(org.springframework.amqp.rabbit.core.RabbitMessagingTemplate.class) @ConditionalOnMissingBean(org.springframework.amqp.rabbit.core.RabbitMessagingTemplate.class) @Import(RabbitTemplateConfiguration.class) protected static class RabbitAutoConfiguration.MessagingTemplateConfiguration extends Object;\n", "des": "Auto-configuration for RabbitMQ."}
{"index": 1899, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package aop\n\n// Auto-configuration for Spring's AOP support.\n@AutoConfiguration @ConditionalOnProperty(prefix=\"spring.aop\", name=\"auto\", havingValue=\"true\", matchIfMissing=true) public class AopAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring AOP."}
{"index": 1900, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package availability\n\n// EnableAutoConfiguration for ApplicationAvailabilityBean.\n@AutoConfiguration public class ApplicationAvailabilityAutoConfiguration extends Object;\n", "des": "Auto-configuration for application availability features."}
{"index": 1901, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package batch\n\n// Auto-configuration for Spring Batch.\n@AutoConfiguration(after={HibernateJpaAutoConfiguration.class,TransactionAutoConfiguration.class}) @ConditionalOnClass({org.springframework.batch.core.launch.JobLauncher.class,javax.sql.DataSource.class,org.springframework.jdbc.datasource.init.DatabasePopulator.class}) @ConditionalOnBean({javax.sql.DataSource.class,org.springframework.transaction.PlatformTransactionManager.class}) @ConditionalOnMissingBean(value=org.springframework.batch.core.configuration.support.DefaultBatchConfiguration.class, annotation=org.springframework.batch.core.configuration.annotation.EnableBatchProcessing.class) @EnableConfigurationProperties(BatchProperties.class) @Import(org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer.class) public class BatchAutoConfiguration extends Object;\n// Callback interface that can be implemented by beans wishing to customize the ConfigurableConversionService that is provided by DefaultBatchConfiguration while retaining its default auto-configuration.\n@FunctionalInterface public interface BatchConversionServiceCustomizer;\n// Qualifier annotation for a DataSource to be injected into Batch auto-configuration.\n@Target({FIELD,METHOD,PARAMETER,TYPE,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Qualifier public @interface BatchDataSource;\n// DataSourceScriptDatabaseInitializer for the Spring Batch database.\npublic class BatchDataSourceScriptDatabaseInitializer extends org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer;\n// Configuration properties for Spring Batch.\n@ConfigurationProperties(prefix=\"spring.batch\") public class BatchProperties extends Object;\n// \npublic static class BatchProperties.Jdbc extends Object;\n// \npublic static class BatchProperties.Job extends Object;\n// Spring ApplicationEvent encapsulating a JobExecution.\npublic class JobExecutionEvent extends org.springframework.context.ApplicationEvent;\n// ExitCodeGenerator for JobExecutionEvents.\npublic class JobExecutionExitCodeGenerator extends Object implements org.springframework.context.ApplicationListener<JobExecutionEvent>, org.springframework.boot.ExitCodeGenerator;\n", "des": "Auto-configuration for Spring Batch."}
{"index": 1902, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package cache\n\n// Callback interface that can be implemented by beans wishing to customize the default setup for caches added to the manager through addCaches and for dynamically created caches.\npublic interface Cache2kBuilderCustomizer;\n// Auto-configuration for the cache abstraction.\n@AutoConfiguration(after={CouchbaseDataAutoConfiguration.class,HazelcastAutoConfiguration.class,HibernateJpaAutoConfiguration.class,RedisAutoConfiguration.class}) @ConditionalOnClass(org.springframework.cache.CacheManager.class) @ConditionalOnBean(org.springframework.cache.interceptor.CacheAspectSupport.class) @ConditionalOnMissingBean(value=org.springframework.cache.CacheManager.class, name=\"cacheResolver\") @EnableConfigurationProperties(CacheProperties.class) @Import({org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration.CacheConfigurationImportSelector.class,org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration.CacheManagerEntityManagerFactoryDependsOnPostProcessor.class}) public class CacheAutoConfiguration extends Object;\n// Callback interface that can be implemented by beans wishing to customize the cache manager before it is fully initialized, in particular to tune its configuration.\n@FunctionalInterface public interface CacheManagerCustomizer<T extends org.springframework.cache.CacheManager>;\n// Invokes the available CacheManagerCustomizer instances in the context for a given CacheManager.\npublic class CacheManagerCustomizers extends Object;\n// Configuration properties for the cache abstraction.\n@ConfigurationProperties(prefix=\"spring.cache\") public class CacheProperties extends Object;\n// Caffeine specific cache properties.\npublic static class CacheProperties.Caffeine extends Object;\n// Couchbase specific cache properties.\npublic static class CacheProperties.Couchbase extends Object;\n// Infinispan specific cache properties.\npublic static class CacheProperties.Infinispan extends Object;\n// JCache (JSR-107) specific cache properties.\npublic static class CacheProperties.JCache extends Object;\n// Redis-specific cache properties.\npublic static class CacheProperties.Redis extends Object;\n// Supported cache types (defined in order of precedence).\npublic enum CacheType extends Enum<CacheType>;\n", "des": "Auto-configuration for the cache abstraction."}
{"index": 1903, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package cassandra\n\n// Auto-configuration for Cassandra.\n@AutoConfiguration @ConditionalOnClass(com.datastax.oss.driver.api.core.CqlSession.class) @EnableConfigurationProperties(CassandraProperties.class) public class CassandraAutoConfiguration extends Object;\n// Details required to establish a connection to a Cassandra service.\npublic interface CassandraConnectionDetails extends ConnectionDetails;\n// A Cassandra node.\npublic static record CassandraConnectionDetails.Node(String host, int port) extends Record;\n// Configuration properties for Cassandra.\n@ConfigurationProperties(prefix=\"spring.cassandra\") public class CassandraProperties extends Object;\n// Name of the algorithm used to compress protocol frames.\npublic static enum CassandraProperties.Compression extends Enum<CassandraProperties.Compression>;\n// \npublic static class CassandraProperties.Connection extends Object;\n// \npublic static class CassandraProperties.Controlconnection extends Object;\n// Pool properties.\npublic static class CassandraProperties.Pool extends Object;\n// \npublic static class CassandraProperties.Request extends Object;\n// \npublic static class CassandraProperties.Ssl extends Object;\n// \npublic static class CassandraProperties.Throttler extends Object;\n// \npublic static enum CassandraProperties.ThrottlerType extends Enum<CassandraProperties.ThrottlerType>;\n// Callback interface that can be implemented by beans wishing to customize the CqlSession through a CqlSessionBuilder whilst retaining default auto-configuration.\n@FunctionalInterface public interface CqlSessionBuilderCustomizer;\n// Callback interface that can be implemented by beans wishing to customize the DriverConfigLoader through a DriverConfigLoaderBuilderCustomizer whilst retaining default auto-configuration.\npublic interface DriverConfigLoaderBuilderCustomizer;\n", "des": "Auto-configuration for Cassandra."}
{"index": 1904, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package codec\n\n// properties for reactive codecs.\n@ConfigurationProperties(prefix=\"spring.codec\") public class CodecProperties extends Object;\n", "des": "Auto-configuration for reactive codecs."}
{"index": 1905, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package condition\n\n// Abstract base class for nested conditions.\npublic abstract class AbstractNestedCondition extends SpringBootCondition implements org.springframework.context.annotation.ConfigurationCondition;\n// \nprotected static class AbstractNestedCondition.MemberMatchOutcomes extends Object;\n// Condition that will match when all nested class conditions match.\npublic abstract class AllNestedConditions extends AbstractNestedCondition;\n// Condition that will match when any nested class condition matches.\n@Order(2147483627) public abstract class AnyNestedCondition extends AbstractNestedCondition;\n// @Conditional that only matches when beans meeting all the specified requirements are already contained in the BeanFactory.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.autoconfigure.condition.OnBeanCondition.class) public @interface ConditionalOnBean;\n// @Conditional that only matches when the specified classes are on the classpath.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.autoconfigure.condition.OnClassCondition.class) public @interface ConditionalOnClass;\n// @Conditional that matches when the specified cloud platform is active.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition.class) public @interface ConditionalOnCloudPlatform;\n// Configuration annotation for a conditional element that depends on the value of a SpEL expression.\n@Retention(RUNTIME) @Target({TYPE,METHOD}) @Documented @Conditional(org.springframework.boot.autoconfigure.condition.OnExpressionCondition.class) public @interface ConditionalOnExpression;\n// @Conditional that matches based on the JVM version the application is running on.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.autoconfigure.condition.OnJavaCondition.class) public @interface ConditionalOnJava;\n// Range options.\npublic static enum ConditionalOnJava.Range extends Enum<ConditionalOnJava.Range>;\n", "des": "@Condition annotations and supporting classes."}
{"index": 1906, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package context\n\n// Auto-configuration for @ConfigurationProperties beans.\n@AutoConfiguration @EnableConfigurationProperties public class ConfigurationPropertiesAutoConfiguration extends Object;\n// Auto-configuration relating to the application context's lifecycle.\n@AutoConfiguration @EnableConfigurationProperties(LifecycleProperties.class) public class LifecycleAutoConfiguration extends Object;\n// Configuration properties for lifecycle processing.\n@ConfigurationProperties(prefix=\"spring.lifecycle\") public class LifecycleProperties extends Object;\n// Auto-configuration for MessageSource.\n@AutoConfiguration @ConditionalOnMissingBean(name=\"messageSource\", search=CURRENT) @AutoConfigureOrder(-2147483648) @Conditional(ResourceBundleCondition.class) @EnableConfigurationProperties public class MessageSourceAutoConfiguration extends Object;\n// \nprotected static class MessageSourceAutoConfiguration.ResourceBundleCondition extends SpringBootCondition;\n// Configuration properties for Message Source.\npublic class MessageSourceProperties extends Object;\n// Auto-configuration for PropertySourcesPlaceholderConfigurer.\n@AutoConfiguration @AutoConfigureOrder(-2147483648) public class PropertyPlaceholderAutoConfiguration extends Object;\n", "des": "Auto-configuration for the Spring context."}
{"index": 1907, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package couchbase\n\n// Callback interface that can be implemented by beans wishing to customize the ClusterEnvironment through a ClusterEnvironment.Builder whilst retaining default auto-configuration.\n@FunctionalInterface public interface ClusterEnvironmentBuilderCustomizer;\n// Auto-configuration for Couchbase.\n@AutoConfiguration(after=JacksonAutoConfiguration.class) @ConditionalOnClass(com.couchbase.client.java.Cluster.class) @Conditional(org.springframework.boot.autoconfigure.couchbase.CouchbaseAutoConfiguration.CouchbaseCondition.class) @EnableConfigurationProperties(CouchbaseProperties.class) public class CouchbaseAutoConfiguration extends Object;\n// Details required to establish a connection to a Couchbase service.\npublic interface CouchbaseConnectionDetails extends ConnectionDetails;\n// Configuration properties for Couchbase.\n@ConfigurationProperties(prefix=\"spring.couchbase\") public class CouchbaseProperties extends Object;\n// \npublic static class CouchbaseProperties.Env extends Object;\n// \npublic static class CouchbaseProperties.Io extends Object;\n// \npublic static class CouchbaseProperties.Ssl extends Object;\n// \npublic static class CouchbaseProperties.Timeouts extends Object;\n", "des": "Auto-configuration for Couchbase."}
{"index": 1908, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package dao\n\n// Auto-configuration for Spring's persistence exception translation.\n@AutoConfiguration @ConditionalOnClass(org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor.class) public class PersistenceExceptionTranslationAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring DAO."}
{"index": 1909, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package data\n\n// Base ImportBeanDefinitionRegistrar used to auto-configure Spring Data Repositories.\npublic abstract class AbstractRepositoryConfigurationSourceSupport extends Object implements org.springframework.context.annotation.ImportBeanDefinitionRegistrar, org.springframework.beans.factory.BeanFactoryAware, org.springframework.context.ResourceLoaderAware, org.springframework.context.EnvironmentAware;\n// @Conditional that only matches when a particular type of Spring Data repository has been enabled.\n@Retention(RUNTIME) @Target({TYPE,METHOD}) @Documented @Conditional(org.springframework.boot.autoconfigure.data.OnRepositoryTypeCondition.class) public @interface ConditionalOnRepositoryType;\n// Type of Spring Data repositories to enable.\npublic enum RepositoryType extends Enum<RepositoryType>;\n", "des": "Auto-configuration base classes for Spring Data."}
{"index": 1910, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package cassandra\n\n// Auto-configuration for Spring Data's Cassandra support.\n@AutoConfiguration(after=CassandraAutoConfiguration.class) @ConditionalOnClass({com.datastax.oss.driver.api.core.CqlSession.class,org.springframework.data.cassandra.core.CassandraAdminOperations.class}) @ConditionalOnBean(com.datastax.oss.driver.api.core.CqlSession.class) public class CassandraDataAutoConfiguration extends Object;\n// Auto-configuration for Spring Data's reactive Cassandra support.\n@AutoConfiguration(after=CassandraDataAutoConfiguration.class) @ConditionalOnClass({com.datastax.oss.driver.api.core.CqlSession.class,org.springframework.data.cassandra.core.ReactiveCassandraTemplate.class,reactor.core.publisher.Flux.class}) @ConditionalOnBean(com.datastax.oss.driver.api.core.CqlSession.class) public class CassandraReactiveDataAutoConfiguration extends Object;\n// Auto-configuration for Spring Data's Cassandra Reactive Repositories.\n@AutoConfiguration(after=CassandraReactiveDataAutoConfiguration.class) @ConditionalOnClass({org.springframework.data.cassandra.ReactiveSession.class,org.springframework.data.cassandra.repository.ReactiveCassandraRepository.class}) @ConditionalOnRepositoryType(store=\"cassandra\", type=REACTIVE) @ConditionalOnMissingBean(org.springframework.data.cassandra.repository.support.ReactiveCassandraRepositoryFactoryBean.class) @Import(org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveRepositoriesRegistrar.class) public class CassandraReactiveRepositoriesAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Data Cassandra."}
{"index": 1911, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package couchbase\n\n// Auto-configuration for Spring Data's Couchbase support.\n@AutoConfiguration(after={CouchbaseAutoConfiguration.class,ValidationAutoConfiguration.class}) @ConditionalOnClass({com.couchbase.client.java.Bucket.class,org.springframework.data.couchbase.repository.CouchbaseRepository.class}) @EnableConfigurationProperties(CouchbaseDataProperties.class) @Import({org.springframework.boot.autoconfigure.data.couchbase.CouchbaseDataConfiguration.class,org.springframework.boot.autoconfigure.data.couchbase.CouchbaseClientFactoryConfiguration.class,org.springframework.boot.autoconfigure.data.couchbase.CouchbaseClientFactoryDependentConfiguration.class}) public class CouchbaseDataAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(jakarta.validation.Validator.class) public static class CouchbaseDataAutoConfiguration.ValidationConfiguration extends Object;\n// Configuration properties for Spring Data Couchbase.\n@ConfigurationProperties(prefix=\"spring.data.couchbase\") public class CouchbaseDataProperties extends Object;\n// Auto-configuration for Spring Data's Reactive Couchbase support.\n@AutoConfiguration(after=CouchbaseDataAutoConfiguration.class) @ConditionalOnClass({com.couchbase.client.java.Cluster.class,org.springframework.data.couchbase.repository.ReactiveCouchbaseRepository.class,reactor.core.publisher.Flux.class}) @Import(org.springframework.boot.autoconfigure.data.couchbase.CouchbaseReactiveDataConfiguration.class) public class CouchbaseReactiveDataAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Data Couchbase."}
{"index": 1912, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package elasticsearch\n\n// Auto-configuration for Spring Data's Elasticsearch support.\n@AutoConfiguration(after={ElasticsearchClientAutoConfiguration.class,ReactiveElasticsearchClientAutoConfiguration.class}) @ConditionalOnClass(org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate.class) @Import({org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration.BaseConfiguration.class,org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration.JavaClientConfiguration.class,org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataConfiguration.ReactiveRestClientConfiguration.class}) public class ElasticsearchDataAutoConfiguration extends Object;\n// Auto-configuration for Spring Data's Elasticsearch Repositories.\n@AutoConfiguration @ConditionalOnClass(org.springframework.data.elasticsearch.repository.ElasticsearchRepository.class) @ConditionalOnProperty(prefix=\"spring.data.elasticsearch.repositories\", name=\"enabled\", havingValue=\"true\", matchIfMissing=true) @ConditionalOnMissingBean(org.springframework.data.elasticsearch.repository.support.ElasticsearchRepositoryFactoryBean.class) @Import(org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchRepositoriesRegistrar.class) public class ElasticsearchRepositoriesAutoConfiguration extends Object;\n// Auto-configuration for Spring Data's Elasticsearch Reactive Repositories.\n@AutoConfiguration @ConditionalOnClass({org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient.class,org.springframework.data.elasticsearch.repository.ReactiveElasticsearchRepository.class}) @ConditionalOnProperty(prefix=\"spring.data.elasticsearch.repositories\", name=\"enabled\", havingValue=\"true\", matchIfMissing=true) @ConditionalOnMissingBean(org.springframework.data.elasticsearch.repository.support.ReactiveElasticsearchRepositoryFactoryBean.class) @Import(org.springframework.boot.autoconfigure.data.elasticsearch.ReactiveElasticsearchRepositoriesRegistrar.class) public class ReactiveElasticsearchRepositoriesAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Data Elasticsearch."}
{"index": 1913, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jdbc\n\n// Auto-configuration for Spring Data's JDBC Repositories.\n@AutoConfiguration(after={JdbcTemplateAutoConfiguration.class,DataSourceTransactionManagerAutoConfiguration.class}) @ConditionalOnBean({org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations.class,org.springframework.transaction.PlatformTransactionManager.class}) @ConditionalOnClass({org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations.class,org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration.class}) @ConditionalOnProperty(prefix=\"spring.data.jdbc.repositories\", name=\"enabled\", havingValue=\"true\", matchIfMissing=true) public class JdbcRepositoriesAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Data JDBC."}
{"index": 1914, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jpa\n\n// Auto-configuration for Spring Data's JPA Repositories.\n@AutoConfiguration(after={HibernateJpaAutoConfiguration.class,TaskExecutionAutoConfiguration.class}) @ConditionalOnBean(javax.sql.DataSource.class) @ConditionalOnClass(org.springframework.data.jpa.repository.JpaRepository.class) @ConditionalOnMissingBean({org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.class,org.springframework.data.jpa.repository.config.JpaRepositoryConfigExtension.class}) @ConditionalOnProperty(prefix=\"spring.data.jpa.repositories\", name=\"enabled\", havingValue=\"true\", matchIfMissing=true) @Import(org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration.JpaRepositoriesImportSelector.class) public class JpaRepositoriesAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Data JPA."}
{"index": 1915, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package ldap\n\n// Auto-configuration for Spring Data's LDAP Repositories.\n@AutoConfiguration @ConditionalOnClass({javax.naming.ldap.LdapContext.class,org.springframework.data.ldap.repository.LdapRepository.class}) @ConditionalOnProperty(prefix=\"spring.data.ldap.repositories\", name=\"enabled\", havingValue=\"true\", matchIfMissing=true) @ConditionalOnMissingBean(org.springframework.data.ldap.repository.support.LdapRepositoryFactoryBean.class) @Import(org.springframework.boot.autoconfigure.data.ldap.LdapRepositoriesRegistrar.class) public class LdapRepositoriesAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Data LDAP."}
{"index": 1916, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package mongo\n\n// Auto-configuration for Spring Data's mongo support.\n@AutoConfiguration(after=MongoAutoConfiguration.class) @ConditionalOnClass({com.mongodb.client.MongoClient.class,org.springframework.data.mongodb.core.MongoTemplate.class}) @EnableConfigurationProperties(MongoProperties.class) @Import({org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration.class,org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryConfiguration.class,org.springframework.boot.autoconfigure.data.mongo.MongoDatabaseFactoryDependentConfiguration.class}) public class MongoDataAutoConfiguration extends Object;\n// Auto-configuration for Spring Data's reactive mongo support.\n@AutoConfiguration(after=MongoReactiveAutoConfiguration.class) @ConditionalOnClass({com.mongodb.reactivestreams.client.MongoClient.class,org.springframework.data.mongodb.core.ReactiveMongoTemplate.class}) @ConditionalOnBean(com.mongodb.reactivestreams.client.MongoClient.class) @EnableConfigurationProperties(MongoProperties.class) @Import(org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration.class) public class MongoReactiveDataAutoConfiguration extends Object;\n// Auto-configuration for Spring Data's Mongo Reactive Repositories.\n@AutoConfiguration(after=MongoReactiveDataAutoConfiguration.class) @ConditionalOnClass({com.mongodb.reactivestreams.client.MongoClient.class,org.springframework.data.mongodb.repository.ReactiveMongoRepository.class}) @ConditionalOnMissingBean({org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactoryBean.class,org.springframework.data.mongodb.repository.config.ReactiveMongoRepositoryConfigurationExtension.class}) @ConditionalOnRepositoryType(store=\"mongodb\", type=REACTIVE) @Import(org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesRegistrar.class) public class MongoReactiveRepositoriesAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Data Mongo."}
{"index": 1917, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package neo4j\n\n// Auto-configuration for Spring Data Neo4j.\n@AutoConfiguration(before=TransactionAutoConfiguration.class, after=Neo4jAutoConfiguration.class) @ConditionalOnClass({org.neo4j.driver.Driver.class,org.springframework.data.neo4j.core.transaction.Neo4jTransactionManager.class,org.springframework.transaction.PlatformTransactionManager.class}) @EnableConfigurationProperties(Neo4jDataProperties.class) @ConditionalOnBean(org.neo4j.driver.Driver.class) public class Neo4jDataAutoConfiguration extends Object;\n// Configuration properties for Spring Data Neo4j.\n@ConfigurationProperties(prefix=\"spring.data.neo4j\") public class Neo4jDataProperties extends Object;\n// Auto-configuration for Spring Data's reactive Neo4j support.\n@AutoConfiguration(after=Neo4jDataAutoConfiguration.class) @ConditionalOnClass({org.neo4j.driver.Driver.class,org.springframework.data.neo4j.core.ReactiveNeo4jTemplate.class,org.springframework.transaction.ReactiveTransactionManager.class,reactor.core.publisher.Flux.class}) @ConditionalOnBean(org.neo4j.driver.Driver.class) public class Neo4jReactiveDataAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Data Neo4j."}
{"index": 1918, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package r2dbc\n\n// Auto-configuration for DatabaseClient.\n@AutoConfiguration(after=R2dbcAutoConfiguration.class) @ConditionalOnClass({org.springframework.r2dbc.core.DatabaseClient.class,org.springframework.data.r2dbc.core.R2dbcEntityTemplate.class}) @ConditionalOnSingleCandidate(org.springframework.r2dbc.core.DatabaseClient.class) public class R2dbcDataAutoConfiguration extends Object;\n// Auto-configuration for Spring Data R2DBC Repositories.\n@AutoConfiguration(after=R2dbcDataAutoConfiguration.class) @ConditionalOnClass({io.r2dbc.spi.ConnectionFactory.class,org.springframework.data.r2dbc.repository.R2dbcRepository.class}) @ConditionalOnBean(org.springframework.r2dbc.core.DatabaseClient.class) @ConditionalOnProperty(prefix=\"spring.data.r2dbc.repositories\", name=\"enabled\", havingValue=\"true\", matchIfMissing=true) @ConditionalOnMissingBean(org.springframework.data.r2dbc.repository.support.R2dbcRepositoryFactoryBean.class) @Import(org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfigureRegistrar.class) public class R2dbcRepositoriesAutoConfiguration extends Object;\n", "des": "Auto-Configuration for Spring Data R2DBC."}
{"index": 1919, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package redis\n\n// Callback interface that can be implemented by beans wishing to customize the ClientResources through a ClientResources.Builder whilst retaining default auto-configuration.\npublic interface ClientResourcesBuilderCustomizer;\n// Callback interface that can be implemented by beans wishing to customize the JedisClientConfiguration through a JedisClientConfiguration.JedisClientConfigurationBuilder whilst retaining default auto-configuration.\n@FunctionalInterface public interface JedisClientConfigurationBuilderCustomizer;\n// Callback interface that can be implemented by beans wishing to customize the LettuceClientConfiguration through a LettuceClientConfiguration.LettuceClientConfigurationBuilder whilst retaining default auto-configuration.\n@FunctionalInterface public interface LettuceClientConfigurationBuilderCustomizer;\n// Auto-configuration for Spring Data's Redis support.\n@AutoConfiguration @ConditionalOnClass(org.springframework.data.redis.core.RedisOperations.class) @EnableConfigurationProperties(RedisProperties.class) @Import({org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration.class,org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration.class}) public class RedisAutoConfiguration extends Object;\n// Details required to establish a connection to a Redis service.\npublic interface RedisConnectionDetails extends ConnectionDetails;\n// Redis cluster configuration.\npublic static interface RedisConnectionDetails.Cluster;\n// A node in a sentinel or cluster configuration.\npublic static record RedisConnectionDetails.Node(String host, int port) extends Record;\n// Redis sentinel configuration.\npublic static interface RedisConnectionDetails.Sentinel;\n// Redis standalone configuration.\npublic static interface RedisConnectionDetails.Standalone;\n// Configuration properties for Redis.\n@ConfigurationProperties(prefix=\"spring.data.redis\") public class RedisProperties extends Object;\n// Type of Redis client to use.\npublic static enum RedisProperties.ClientType extends Enum<RedisProperties.ClientType>;\n// Cluster properties.\npublic static class RedisProperties.Cluster extends Object;\n// Jedis client properties.\npublic static class RedisProperties.Jedis extends Object;\n// Lettuce client properties.\npublic static class RedisProperties.Lettuce extends Object;\n// \npublic static class RedisProperties.Lettuce.Cluster extends Object;\n", "des": "Auto-configuration for Spring Data Redis."}
{"index": 1920, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package rest\n\n// Auto-configuration for Spring Data Rest's MVC integration.\n@AutoConfiguration(after={HttpMessageConvertersAutoConfiguration.class,JacksonAutoConfiguration.class}) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnMissingBean(org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration.class) @ConditionalOnClass(org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration.class) @EnableConfigurationProperties(RepositoryRestProperties.class) @Import(org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration.class) public class RepositoryRestMvcAutoConfiguration extends Object;\n// Configuration properties for Spring Data REST.\n@ConfigurationProperties(prefix=\"spring.data.rest\") public class RepositoryRestProperties extends Object;\n", "des": "Auto-configuration for Spring Data REST."}
{"index": 1921, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package web\n\n// Auto-configuration for Spring Data's web support.\n@AutoConfiguration(after=RepositoryRestMvcAutoConfiguration.class) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnClass({org.springframework.data.web.PageableHandlerMethodArgumentResolver.class,org.springframework.web.servlet.config.annotation.WebMvcConfigurer.class}) @ConditionalOnMissingBean(org.springframework.data.web.PageableHandlerMethodArgumentResolver.class) @EnableConfigurationProperties(SpringDataWebProperties.class) public class SpringDataWebAutoConfiguration extends Object;\n// Configuration properties for Spring Data Web.\n@ConfigurationProperties(\"spring.data.web\") public class SpringDataWebProperties extends Object;\n// Pageable properties.\npublic static class SpringDataWebProperties.Pageable extends Object;\n// Sort properties.\npublic static class SpringDataWebProperties.Sort extends Object;\n", "des": "Auto-configuration for Spring Data's Web Support."}
{"index": 1922, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package domain\n\n// Configures the base packages used by auto-configuration when scanning for entity classes.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(org.springframework.boot.autoconfigure.domain.EntityScanPackages.Registrar.class) public @interface EntityScan;\n// An entity scanner that searches the classpath from an @EntityScan specified packages.\npublic class EntityScanner extends Object;\n// Class for storing @EntityScan specified packages for reference later (e.g.\npublic class EntityScanPackages extends Object;\n", "des": "General purpose domain annotations and classes."}
{"index": 1923, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package elasticsearch\n\n// Auto-configuration for Elasticsearch's Java client.\n@AutoConfiguration(after={JacksonAutoConfiguration.class,JsonbAutoConfiguration.class,ElasticsearchRestClientAutoConfiguration.class}) @ConditionalOnClass(co.elastic.clients.elasticsearch.ElasticsearchClient.class) @Import({org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations.ElasticsearchTransportConfiguration.class,org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchClientConfigurations.ElasticsearchClientConfiguration.class}) public class ElasticsearchClientAutoConfiguration extends Object;\n// Details required to establish a connection to an Elasticsearch service.\npublic interface ElasticsearchConnectionDetails extends ConnectionDetails;\n// An Elasticsearch node.\npublic static record ElasticsearchConnectionDetails.Node(String hostname, int port, ElasticsearchConnectionDetails.Node.Protocol protocol, String username, String password) extends Record;\n// Connection protocol.\npublic static enum ElasticsearchConnectionDetails.Node.Protocol extends Enum<ElasticsearchConnectionDetails.Node.Protocol>;\n// Configuration properties for Elasticsearch.\n@ConfigurationProperties(\"spring.elasticsearch\") public class ElasticsearchProperties extends Object;\n// \npublic static class ElasticsearchProperties.Restclient extends Object;\n// \npublic static class ElasticsearchProperties.Restclient.Sniffer extends Object;\n// \npublic static class ElasticsearchProperties.Restclient.Ssl extends Object;\n// Auto-configuration for Elasticsearch REST clients.\n@AutoConfiguration(after=SslAutoConfiguration.class) @ConditionalOnClass(org.elasticsearch.client.RestClientBuilder.class) @EnableConfigurationProperties(ElasticsearchProperties.class) @Import({org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations.RestClientBuilderConfiguration.class,org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations.RestClientConfiguration.class,org.springframework.boot.autoconfigure.elasticsearch.ElasticsearchRestClientConfigurations.RestClientSnifferConfiguration.class}) public class ElasticsearchRestClientAutoConfiguration extends Object;\n", "des": "Auto-configuration for Elasticsearch client."}
{"index": 1924, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package flyway\n\n// Auto-configuration for Flyway database migrations.\n@AutoConfiguration(after={DataSourceAutoConfiguration.class,JdbcTemplateAutoConfiguration.class,HibernateJpaAutoConfiguration.class}) @ConditionalOnClass(org.flywaydb.core.Flyway.class) @Conditional(org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration.FlywayDataSourceCondition.class) @ConditionalOnProperty(prefix=\"spring.flyway\", name=\"enabled\", matchIfMissing=true) @Import(org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer.class) @ImportRuntimeHints(org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration.FlywayAutoConfigurationRuntimeHints.class) public class FlywayAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(org.springframework.jdbc.support.JdbcUtils.class) @ConditionalOnMissingBean(org.flywaydb.core.Flyway.class) @EnableConfigurationProperties(FlywayProperties.class) public static class FlywayAutoConfiguration.FlywayConfiguration extends Object;\n// Callback interface that can be implemented by beans wishing to customize the flyway configuration.\n@FunctionalInterface public interface FlywayConfigurationCustomizer;\n// Details required for Flyway to establish a connection to an SQL service using JDBC.\npublic interface FlywayConnectionDetails extends ConnectionDetails;\n// Qualifier annotation for a DataSource to be injected in to Flyway.\n@Target({FIELD,METHOD,PARAMETER,TYPE,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Qualifier public @interface FlywayDataSource;\n// InitializingBean used to trigger Flyway migration through the FlywayMigrationStrategy.\npublic class FlywayMigrationInitializer extends Object implements org.springframework.beans.factory.InitializingBean, org.springframework.core.Ordered;\n// Strategy used to initialize Flyway migration.\n@FunctionalInterface public interface FlywayMigrationStrategy;\n// Configuration properties for Flyway database migrations.\n@ConfigurationProperties(prefix=\"spring.flyway\") public class FlywayProperties extends Object;\n", "des": "Auto-configuration for Flyway."}
{"index": 1925, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package freemarker\n\n// Auto-configuration for FreeMarker.\n@AutoConfiguration @ConditionalOnClass({freemarker.template.Configuration.class,org.springframework.ui.freemarker.FreeMarkerConfigurationFactory.class}) @EnableConfigurationProperties(FreeMarkerProperties.class) @Import({org.springframework.boot.autoconfigure.freemarker.FreeMarkerServletWebConfiguration.class,org.springframework.boot.autoconfigure.freemarker.FreeMarkerReactiveWebConfiguration.class,org.springframework.boot.autoconfigure.freemarker.FreeMarkerNonWebConfiguration.class}) @ImportRuntimeHints(org.springframework.boot.autoconfigure.freemarker.FreeMarkerRuntimeHints.class) public class FreeMarkerAutoConfiguration extends Object;\n// @ConfigurationProperties for configuring FreeMarker.\n@ConfigurationProperties(prefix=\"spring.freemarker\") public class FreeMarkerProperties extends AbstractTemplateViewResolverProperties;\n// TemplateAvailabilityProvider that provides availability information for FreeMarker view templates.\npublic class FreeMarkerTemplateAvailabilityProvider extends PathBasedTemplateAvailabilityProvider;\n// \nprotected static final class FreeMarkerTemplateAvailabilityProvider.FreeMarkerTemplateAvailabilityProperties extends PathBasedTemplateAvailabilityProvider.TemplateAvailabilityProperties;\n", "des": "Auto-configuration for FreeMarker."}
{"index": 1926, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package graphql\n\n// @Conditional that only matches when a GraphQL schema is defined for the application, through schema files or infrastructure beans.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.autoconfigure.graphql.DefaultGraphQlSchemaCondition.class) public @interface ConditionalOnGraphQlSchema;\n// Auto-configuration for creating a Spring GraphQL base infrastructure.\n@AutoConfiguration @ConditionalOnClass({graphql.GraphQL.class,org.springframework.graphql.execution.GraphQlSource.class}) @ConditionalOnGraphQlSchema @EnableConfigurationProperties(GraphQlProperties.class) @ImportRuntimeHints(org.springframework.boot.autoconfigure.graphql.GraphQlAutoConfiguration.GraphQlResourcesRuntimeHints.class) public class GraphQlAutoConfiguration extends Object;\n// Configuration properties for GraphQL endpoint's CORS support.\n@ConfigurationProperties(prefix=\"spring.graphql.cors\") public class GraphQlCorsProperties extends Object;\n// properties for Spring GraphQL.\n@ConfigurationProperties(prefix=\"spring.graphql\") public class GraphQlProperties extends Object;\n// \npublic static class GraphQlProperties.Graphiql extends Object;\n// \npublic static class GraphQlProperties.Rsocket extends Object;\n// \npublic static class GraphQlProperties.Schema extends Object;\n// \npublic static class GraphQlProperties.Schema.Introspection extends Object;\n// \npublic static class GraphQlProperties.Schema.Printer extends Object;\n// \npublic static class GraphQlProperties.Websocket extends Object;\n// Callback interface that can be implemented by beans wishing to customize properties of Builder whilst retaining default auto-configuration.\n@FunctionalInterface public interface GraphQlSourceBuilderCustomizer;\n", "des": "Auto-configuration for Spring GraphQL."}
{"index": 1927, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package data\n\n// Auto-configuration that creates a GraphQlSourceBuilderCustomizers to detect Spring Data repositories with Query By Example support and register them as DataFetchers for any queries with a matching return type.\n@AutoConfiguration(after=GraphQlAutoConfiguration.class) @ConditionalOnClass({graphql.GraphQL.class,org.springframework.graphql.data.query.QueryByExampleDataFetcher.class,org.springframework.data.repository.query.QueryByExampleExecutor.class}) @ConditionalOnBean(org.springframework.graphql.execution.GraphQlSource.class) public class GraphQlQueryByExampleAutoConfiguration extends Object;\n// Auto-configuration that creates a GraphQlSourceBuilderCustomizers to detect Spring Data repositories with Querydsl support and register them as DataFetchers for any queries with a matching return type.\n@AutoConfiguration(after=GraphQlAutoConfiguration.class) @ConditionalOnClass({graphql.GraphQL.class,org.springframework.graphql.data.query.QuerydslDataFetcher.class,org.springframework.data.querydsl.QuerydslPredicateExecutor.class}) @ConditionalOnBean(org.springframework.graphql.execution.GraphQlSource.class) public class GraphQlQuerydslAutoConfiguration extends Object;\n// Auto-configuration that creates a GraphQlSourceBuilderCustomizers to detect Spring Data repositories with Query By Example support and register them as DataFetchers for any queries with a matching return type.\n@AutoConfiguration(after=GraphQlAutoConfiguration.class) @ConditionalOnClass({graphql.GraphQL.class,org.springframework.graphql.data.query.QueryByExampleDataFetcher.class,org.springframework.data.repository.query.ReactiveQueryByExampleExecutor.class}) @ConditionalOnBean(org.springframework.graphql.execution.GraphQlSource.class) public class GraphQlReactiveQueryByExampleAutoConfiguration extends Object;\n", "des": "Auto-configuration classes for data integrations with GraphQL."}
{"index": 1928, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n// Auto-configuration for enabling Spring GraphQL over WebFlux.\n@AutoConfiguration(after=GraphQlAutoConfiguration.class) @ConditionalOnWebApplication(type=REACTIVE) @ConditionalOnClass({graphql.GraphQL.class,org.springframework.graphql.server.webflux.GraphQlHttpHandler.class}) @ConditionalOnBean(org.springframework.graphql.ExecutionGraphQlService.class) @EnableConfigurationProperties(GraphQlCorsProperties.class) @ImportRuntimeHints(org.springframework.boot.autoconfigure.graphql.reactive.GraphQlWebFluxAutoConfiguration.GraphiQlResourceHints.class) public class GraphQlWebFluxAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) public static class GraphQlWebFluxAutoConfiguration.GraphQlEndpointCorsConfiguration extends Object implements org.springframework.web.reactive.config.WebFluxConfigurer;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnProperty(prefix=\"spring.graphql.websocket\", name=\"path\") public static class GraphQlWebFluxAutoConfiguration.WebSocketConfiguration extends Object;\n", "des": "Auto-configuration classes for WebFlux support in Spring GraphQL."}
{"index": 1929, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package rsocket\n\n// Auto-configuration for enabling Spring GraphQL over RSocket.\n@AutoConfiguration(after={GraphQlAutoConfiguration.class,RSocketMessagingAutoConfiguration.class}) @ConditionalOnClass({graphql.GraphQL.class,org.springframework.graphql.execution.GraphQlSource.class,io.rsocket.core.RSocketServer.class,reactor.netty.http.server.HttpServer.class}) @ConditionalOnBean({org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler.class,org.springframework.graphql.data.method.annotation.support.AnnotatedControllerConfigurer.class}) @ConditionalOnProperty(prefix=\"spring.graphql.rsocket\", name=\"mapping\") public class GraphQlRSocketAutoConfiguration extends Object;\n// Auto-configuration for RSocketGraphQlClient.\n@AutoConfiguration(after=RSocketRequesterAutoConfiguration.class) @ConditionalOnClass({graphql.GraphQL.class,org.springframework.graphql.client.RSocketGraphQlClient.class,org.springframework.messaging.rsocket.RSocketRequester.class,io.rsocket.RSocket.class,io.rsocket.transport.netty.client.TcpClientTransport.class}) public class RSocketGraphQlClientAutoConfiguration extends Object;\n", "des": "Auto-configuration classes for RSocket integration with GraphQL."}
{"index": 1930, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package security\n\n// Auto-configuration for enabling Security support for Spring GraphQL with WebFlux.\n@AutoConfiguration(after=GraphQlWebFluxAutoConfiguration.class) @ConditionalOnWebApplication(type=REACTIVE) @ConditionalOnClass({graphql.GraphQL.class,org.springframework.graphql.server.webflux.GraphQlHttpHandler.class,org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity.class}) @ConditionalOnBean(org.springframework.graphql.server.webflux.GraphQlHttpHandler.class) public class GraphQlWebFluxSecurityAutoConfiguration extends Object;\n// Auto-configuration for enabling Security support for Spring GraphQL with MVC.\n@AutoConfiguration(after=GraphQlWebMvcAutoConfiguration.class) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnClass({graphql.GraphQL.class,org.springframework.graphql.server.webmvc.GraphQlHttpHandler.class,org.springframework.security.config.annotation.web.configuration.EnableWebSecurity.class}) @ConditionalOnBean(org.springframework.graphql.server.webmvc.GraphQlHttpHandler.class) public class GraphQlWebMvcSecurityAutoConfiguration extends Object;\n", "des": "Auto-configuration classes for Security support in Spring GraphQL."}
{"index": 1931, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n// Auto-configuration for enabling Spring GraphQL over Spring MVC.\n@AutoConfiguration(after=GraphQlAutoConfiguration.class) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnClass({graphql.GraphQL.class,org.springframework.graphql.server.webmvc.GraphQlHttpHandler.class}) @ConditionalOnBean(org.springframework.graphql.ExecutionGraphQlService.class) @EnableConfigurationProperties(GraphQlCorsProperties.class) @ImportRuntimeHints(org.springframework.boot.autoconfigure.graphql.servlet.GraphQlWebMvcAutoConfiguration.GraphiQlResourceHints.class) public class GraphQlWebMvcAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) public static class GraphQlWebMvcAutoConfiguration.GraphQlEndpointCorsConfiguration extends Object implements org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnClass({jakarta.websocket.server.ServerContainer.class,org.springframework.web.socket.WebSocketHandler.class}) @ConditionalOnProperty(prefix=\"spring.graphql.websocket\", name=\"path\") public static class GraphQlWebMvcAutoConfiguration.WebSocketConfiguration extends Object;\n", "des": "Auto-configuration classes for MVC support in Spring GraphQL."}
{"index": 1932, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package template\n\n// Auto-configuration support for Groovy templates in MVC.\n@AutoConfiguration(after=WebMvcAutoConfiguration.class) @ConditionalOnClass(groovy.text.markup.MarkupTemplateEngine.class) @EnableConfigurationProperties(GroovyTemplateProperties.class) @ImportRuntimeHints(org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateRuntimeHints.class) public class GroovyTemplateAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer.class) public static class GroovyTemplateAutoConfiguration.GroovyMarkupConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnClass({jakarta.servlet.Servlet.class,org.springframework.context.i18n.LocaleContextHolder.class,org.springframework.web.servlet.view.UrlBasedViewResolver.class}) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnProperty(name=\"spring.groovy.template.enabled\", matchIfMissing=true) public static class GroovyTemplateAutoConfiguration.GroovyWebConfiguration extends Object;\n// TemplateAvailabilityProvider that provides availability information for Groovy view templates.\npublic class GroovyTemplateAvailabilityProvider extends PathBasedTemplateAvailabilityProvider;\n// \nprotected static final class GroovyTemplateAvailabilityProvider.GroovyTemplateAvailabilityProperties extends PathBasedTemplateAvailabilityProvider.TemplateAvailabilityProperties;\n// @ConfigurationProperties for configuring Groovy templates.\n@ConfigurationProperties(prefix=\"spring.groovy.template\", ignoreUnknownFields=true) public class GroovyTemplateProperties extends AbstractTemplateViewResolverProperties;\n", "des": "Auto-configuration for Groovy templates."}
{"index": 1933, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package gson\n\n// Auto-configuration for Gson.\n@AutoConfiguration @ConditionalOnClass(com.google.gson.Gson.class) @EnableConfigurationProperties(GsonProperties.class) public class GsonAutoConfiguration extends Object;\n// Callback interface that can be implemented by beans wishing to further customize the Gson through GsonBuilder retaining its default auto-configuration.\n@FunctionalInterface public interface GsonBuilderCustomizer;\n// Configuration properties to configure Gson.\n@ConfigurationProperties(prefix=\"spring.gson\") public class GsonProperties extends Object;\n", "des": "Auto-configuration for GSON."}
{"index": 1934, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package h2\n\n// Auto-configuration for H2's web console.\n@AutoConfiguration(after=DataSourceAutoConfiguration.class) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnClass(org.h2.server.web.JakartaWebServlet.class) @ConditionalOnProperty(prefix=\"spring.h2.console\", name=\"enabled\", havingValue=\"true\") @EnableConfigurationProperties(H2ConsoleProperties.class) public class H2ConsoleAutoConfiguration extends Object;\n// Configuration properties for H2's console.\n@ConfigurationProperties(prefix=\"spring.h2.console\") public class H2ConsoleProperties extends Object;\n// \npublic static class H2ConsoleProperties.Settings extends Object;\n", "des": "Auto-configuration for H2's Console."}
{"index": 1935, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package hateoas\n\n// properties for Spring HATEOAS.\n@ConfigurationProperties(prefix=\"spring.hateoas\") public class HateoasProperties extends Object;\n// Auto-configuration for Spring HATEOAS's @EnableHypermediaSupport.\n@AutoConfiguration(after={WebMvcAutoConfiguration.class,JacksonAutoConfiguration.class,HttpMessageConvertersAutoConfiguration.class,RepositoryRestMvcAutoConfiguration.class}) @ConditionalOnClass({org.springframework.hateoas.EntityModel.class,org.springframework.web.bind.annotation.RequestMapping.class,org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.class,org.springframework.plugin.core.Plugin.class}) @ConditionalOnWebApplication @EnableConfigurationProperties(HateoasProperties.class) public class HypermediaAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnMissingBean(org.springframework.hateoas.client.LinkDiscoverers.class) @ConditionalOnClass(com.fasterxml.jackson.databind.ObjectMapper.class) @EnableHypermediaSupport(type=HAL) protected static class HypermediaAutoConfiguration.HypermediaConfiguration extends Object;\n", "des": "Auto-configuration for Spring HATEOAS."}
{"index": 1936, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package hazelcast\n\n// Auto-configuration for Hazelcast IMDG.\n@AutoConfiguration @ConditionalOnClass(com.hazelcast.core.HazelcastInstance.class) @EnableConfigurationProperties(HazelcastProperties.class) @Import({org.springframework.boot.autoconfigure.hazelcast.HazelcastClientConfiguration.class,org.springframework.boot.autoconfigure.hazelcast.HazelcastServerConfiguration.class}) public class HazelcastAutoConfiguration extends Object;\n// Callback interface that can be implemented by beans wishing to customize the Hazelcast server configuration.\n@FunctionalInterface public interface HazelcastConfigCustomizer;\n// SpringBootCondition used to check if the Hazelcast configuration is available.\npublic abstract class HazelcastConfigResourceCondition extends ResourceCondition;\n// Additional configuration to ensure that EntityManagerFactory beans depend on the hazelcastInstance bean.\n@AutoConfiguration(after={HazelcastAutoConfiguration.class,HibernateJpaAutoConfiguration.class}) @ConditionalOnClass({com.hazelcast.core.HazelcastInstance.class,org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.class}) @Import(org.springframework.boot.autoconfigure.hazelcast.HazelcastJpaDependencyAutoConfiguration.HazelcastInstanceEntityManagerFactoryDependsOnPostProcessor.class) public class HazelcastJpaDependencyAutoConfiguration extends Object;\n// Configuration properties for the hazelcast integration.\n@ConfigurationProperties(prefix=\"spring.hazelcast\") public class HazelcastProperties extends Object;\n", "des": "Auto-configuration for Hazelcast."}
{"index": 1937, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package http\n\n// Bean used to manage the HttpMessageConverters used in a Spring Boot application.\npublic class HttpMessageConverters extends Object implements Iterable<org.springframework.http.converter.HttpMessageConverter<?>>;\n// Auto-configuration for HttpMessageConverters.\n@AutoConfiguration(after={GsonAutoConfiguration.class,JacksonAutoConfiguration.class,JsonbAutoConfiguration.class}) @ConditionalOnClass(org.springframework.http.converter.HttpMessageConverter.class) @Conditional(org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration.NotReactiveWebApplicationCondition.class) @Import({org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration.class,org.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration.class,org.springframework.boot.autoconfigure.http.JsonbHttpMessageConvertersConfiguration.class}) @ImportRuntimeHints(org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration.HttpMessageConvertersAutoConfigurationRuntimeHints.class) public class HttpMessageConvertersAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(org.springframework.http.converter.StringHttpMessageConverter.class) protected static class HttpMessageConvertersAutoConfiguration.StringHttpMessageConverterConfiguration extends Object;\n", "des": "Auto-configuration for HTTP concerns."}
{"index": 1938, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package codec\n\n// Auto-configuration for Encoders and Decoders.\n@AutoConfiguration(after=JacksonAutoConfiguration.class) @ConditionalOnClass({org.springframework.http.codec.CodecConfigurer.class,org.springframework.web.reactive.function.client.WebClient.class}) @EnableConfigurationProperties(CodecProperties.class) public class CodecsAutoConfiguration extends Object;\n", "des": "Auto-configuration for HTTP codecs."}
{"index": 1939, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package influx\n\n// Auto-configuration for InfluxDB.\n@AutoConfiguration @ConditionalOnClass(org.influxdb.InfluxDB.class) @EnableConfigurationProperties(InfluxDbProperties.class) @ConditionalOnProperty(\"spring.influx.url\") public class InfluxDbAutoConfiguration extends Object;\n// Callback interface that can be implemented by beans wishing to further customize InfluxDB whilst retaining default auto-configuration.\n@FunctionalInterface public interface InfluxDbCustomizer;\n// Provide the OkHttpClient.Builder to use to customize the auto-configured InfluxDB instance.\n@FunctionalInterface public interface InfluxDbOkHttpClientBuilderProvider extends Supplier<okhttp3.OkHttpClient.Builder>;\n// Configuration properties for InfluxDB.\n@ConfigurationProperties(prefix=\"spring.influx\") public class InfluxDbProperties extends Object;\n", "des": "Auto-configuration for InfluxDB."}
{"index": 1940, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package info\n\n// Auto-configuration for various project information.\n@AutoConfiguration @EnableConfigurationProperties(ProjectInfoProperties.class) public class ProjectInfoAutoConfiguration extends Object;\n// Configuration properties for project information.\n@ConfigurationProperties(prefix=\"spring.info\") public class ProjectInfoProperties extends Object;\n// Build specific info properties.\npublic static class ProjectInfoProperties.Build extends Object;\n// Git specific info properties.\npublic static class ProjectInfoProperties.Git extends Object;\n", "des": "Auto-configuration for project information."}
{"index": 1941, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package integration\n\n// Auto-configuration for Spring Integration.\n@AutoConfiguration(after={DataSourceAutoConfiguration.class,JmxAutoConfiguration.class,TaskSchedulingAutoConfiguration.class}) @ConditionalOnClass(org.springframework.integration.config.EnableIntegration.class) @EnableConfigurationProperties({IntegrationProperties.class,JmxProperties.class}) public class IntegrationAutoConfiguration extends Object;\n// Integration component scan configuration.\n@Configuration(proxyBeanMethods=false) @ConditionalOnMissingBean(org.springframework.integration.config.IntegrationComponentScanRegistrar.class) @Import(org.springframework.boot.autoconfigure.integration.IntegrationAutoConfigurationScanRegistrar.class) protected static class IntegrationAutoConfiguration.IntegrationComponentScanConfiguration extends Object;\n// Basic Spring Integration configuration.\n@Configuration(proxyBeanMethods=false) @EnableIntegration protected static class IntegrationAutoConfiguration.IntegrationConfiguration extends Object;\n// Integration JDBC configuration.\n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(org.springframework.integration.jdbc.store.JdbcMessageStore.class) @ConditionalOnSingleCandidate(javax.sql.DataSource.class) @Conditional(org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration.OnIntegrationDatasourceInitializationCondition.class) protected static class IntegrationAutoConfiguration.IntegrationJdbcConfiguration extends Object;\n// Spring Integration JMX configuration.\n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(org.springframework.integration.jmx.config.EnableIntegrationMBeanExport.class) @ConditionalOnMissingBean(value=org.springframework.integration.monitor.IntegrationMBeanExporter.class, search=CURRENT) @ConditionalOnBean(javax.management.MBeanServer.class) @ConditionalOnProperty(prefix=\"spring.jmx\", name=\"enabled\", havingValue=\"true\", matchIfMissing=true) protected static class IntegrationAutoConfiguration.IntegrationJmxConfiguration extends Object;\n// Integration management configuration.\n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(org.springframework.integration.config.EnableIntegrationManagement.class) @ConditionalOnMissingBean(value=org.springframework.integration.config.IntegrationManagementConfigurer.class, name=\"integrationManagementConfigurer\", search=CURRENT) protected static class IntegrationAutoConfiguration.IntegrationManagementConfiguration extends Object;\n", "des": "Auto-configuration for Spring Integration."}
{"index": 1942, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jackson\n\n// Callback interface that can be implemented by beans wishing to further customize the ObjectMapper through Jackson2ObjectMapperBuilder retaining its default auto-configuration.\n@FunctionalInterface public interface Jackson2ObjectMapperBuilderCustomizer;\n// Auto configuration for Jackson.\n@AutoConfiguration @ConditionalOnClass(com.fasterxml.jackson.databind.ObjectMapper.class) public class JacksonAutoConfiguration extends Object;\n// Configuration properties to configure Jackson.\n@ConfigurationProperties(prefix=\"spring.jackson\") public class JacksonProperties extends Object;\n// \npublic static enum JacksonProperties.ConstructorDetectorStrategy extends Enum<JacksonProperties.ConstructorDetectorStrategy>;\n", "des": "Auto-configuration for Jackson."}
{"index": 1943, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jdbc\n\n// Auto-configuration for DataSource.\n@AutoConfiguration(before=SqlInitializationAutoConfiguration.class) @ConditionalOnClass({javax.sql.DataSource.class,org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType.class}) @ConditionalOnMissingBean(type=\"io.r2dbc.spi.ConnectionFactory\") @EnableConfigurationProperties(DataSourceProperties.class) @Import(DataSourcePoolMetadataProvidersConfiguration.class) public class DataSourceAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @Conditional(org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration.EmbeddedDatabaseCondition.class) @ConditionalOnMissingBean({javax.sql.DataSource.class,javax.sql.XADataSource.class}) @Import(EmbeddedDataSourceConfiguration.class) protected static class DataSourceAutoConfiguration.EmbeddedDatabaseConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @Conditional(org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration.PooledDataSourceCondition.class) @ConditionalOnMissingBean({javax.sql.DataSource.class,javax.sql.XADataSource.class}) @Import({org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.Hikari.class,org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.Tomcat.class,org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.Dbcp2.class,org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.OracleUcp.class,org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration.Generic.class,org.springframework.boot.autoconfigure.jdbc.DataSourceJmxConfiguration.class}) protected static class DataSourceAutoConfiguration.PooledDataSourceConfiguration extends Object;\n// Base class for configuration of a data source.\n@ConfigurationProperties(prefix=\"spring.datasource\") public class DataSourceProperties extends Object implements org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean;\n// XA Specific datasource settings.\npublic static class DataSourceProperties.Xa extends Object;\n", "des": "Auto-configuration for JDBC."}
{"index": 1944, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package metadata\n\n// Register the DataSourcePoolMetadataProvider instances for the supported data sources.\n@Configuration(proxyBeanMethods=false) public class DataSourcePoolMetadataProvidersConfiguration extends Object;\n", "des": "Auto-configuration for JDBC Metadata."}
{"index": 1945, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jersey\n\n// Auto-configuration for Jersey.\n@AutoConfiguration(before=DispatcherServletAutoConfiguration.class, after=JacksonAutoConfiguration.class) @ConditionalOnClass({org.glassfish.jersey.server.spring.SpringComponentProvider.class,jakarta.servlet.ServletRegistration.class}) @ConditionalOnBean(type=\"org.glassfish.jersey.server.ResourceConfig\") @ConditionalOnWebApplication(type=SERVLET) @AutoConfigureOrder(-2147483648) @EnableConfigurationProperties(JerseyProperties.class) public class JerseyAutoConfiguration extends Object implements org.springframework.web.context.ServletContextAware;\n// \n@Order(-2147483648) public static final class JerseyAutoConfiguration.JerseyWebApplicationInitializer extends Object implements org.springframework.web.WebApplicationInitializer;\n// @ConfigurationProperties for Jersey.\n@ConfigurationProperties(prefix=\"spring.jersey\") public class JerseyProperties extends Object;\n// \npublic static class JerseyProperties.Filter extends Object;\n// \npublic static class JerseyProperties.Servlet extends Object;\n// \npublic static enum JerseyProperties.Type extends Enum<JerseyProperties.Type>;\n// Callback interface that can be implemented by beans wishing to customize Jersey's ResourceConfig before it is used.\n@FunctionalInterface public interface ResourceConfigCustomizer;\n", "des": "Auto-configuration for Jersey."}
{"index": 1946, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jms\n\n// Configure DefaultJmsListenerContainerFactory with sensible defaults.\npublic final class DefaultJmsListenerContainerFactoryConfigurer extends Object;\n// Auto-configuration for Spring JMS.\n@AutoConfiguration @ConditionalOnClass({jakarta.jms.Message.class,org.springframework.jms.core.JmsTemplate.class}) @ConditionalOnBean(jakarta.jms.ConnectionFactory.class) @EnableConfigurationProperties(JmsProperties.class) @Import(org.springframework.boot.autoconfigure.jms.JmsAnnotationDrivenConfiguration.class) public class JmsAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) protected static class JmsAutoConfiguration.JmsTemplateConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(org.springframework.jms.core.JmsMessagingTemplate.class) @Import(JmsTemplateConfiguration.class) protected static class JmsAutoConfiguration.MessagingTemplateConfiguration extends Object;\n// Factory to create a JmsPoolConnectionFactory from properties defined in JmsPoolConnectionFactoryProperties.\npublic class JmsPoolConnectionFactoryFactory extends Object;\n// Configuration properties for connection factory pooling.\npublic class JmsPoolConnectionFactoryProperties extends Object;\n// Configuration properties for JMS.\n@ConfigurationProperties(prefix=\"spring.jms\") public class JmsProperties extends Object;\n// Translate the acknowledge modes defined on the Session.\npublic static enum JmsProperties.AcknowledgeMode extends Enum<JmsProperties.AcknowledgeMode>;\n// \npublic static class JmsProperties.Cache extends Object;\n// \npublic static enum JmsProperties.DeliveryMode extends Enum<JmsProperties.DeliveryMode>;\n// \npublic static class JmsProperties.Listener extends Object;\n// \npublic static class JmsProperties.Template extends Object;\n// Auto-configuration for JMS provided from JNDI.\n@AutoConfiguration(before=JmsAutoConfiguration.class) @ConditionalOnClass(org.springframework.jms.core.JmsTemplate.class) @ConditionalOnMissingBean(jakarta.jms.ConnectionFactory.class) @Conditional(org.springframework.boot.autoconfigure.jms.JndiConnectionFactoryAutoConfiguration.JndiOrPropertyCondition.class) @EnableConfigurationProperties(JmsProperties.class) public class JndiConnectionFactoryAutoConfiguration extends Object;\n", "des": "Auto-configuration for JMS."}
{"index": 1947, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package activemq\n\n// Auto-configuration to integrate with an ActiveMQ broker.\n@AutoConfiguration(before=JmsAutoConfiguration.class, after=JndiConnectionFactoryAutoConfiguration.class) @ConditionalOnClass({jakarta.jms.ConnectionFactory.class,org.apache.activemq.ActiveMQConnectionFactory.class}) @ConditionalOnMissingBean(jakarta.jms.ConnectionFactory.class) @EnableConfigurationProperties({ActiveMQProperties.class,JmsProperties.class}) @Import({org.springframework.boot.autoconfigure.jms.activemq.ActiveMQXAConnectionFactoryConfiguration.class,org.springframework.boot.autoconfigure.jms.activemq.ActiveMQConnectionFactoryConfiguration.class}) public class ActiveMQAutoConfiguration extends Object;\n// Callback interface that can be implemented by beans wishing to customize the ActiveMQConnectionFactory whilst retaining default auto-configuration.\n@FunctionalInterface public interface ActiveMQConnectionFactoryCustomizer;\n// Configuration properties for ActiveMQ.\n@ConfigurationProperties(prefix=\"spring.activemq\") public class ActiveMQProperties extends Object;\n// \npublic static class ActiveMQProperties.Packages extends Object;\n", "des": "Auto-configuration for ActiveMQ."}
{"index": 1948, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package artemis\n\n// Auto-configuration to integrate with an Artemis broker.\n@AutoConfiguration(before=JmsAutoConfiguration.class, after=JndiConnectionFactoryAutoConfiguration.class) @ConditionalOnClass({jakarta.jms.ConnectionFactory.class,org.apache.activemq.artemis.jms.client.ActiveMQConnectionFactory.class}) @ConditionalOnMissingBean(jakarta.jms.ConnectionFactory.class) @EnableConfigurationProperties({ArtemisProperties.class,JmsProperties.class}) @Import({org.springframework.boot.autoconfigure.jms.artemis.ArtemisEmbeddedServerConfiguration.class,org.springframework.boot.autoconfigure.jms.artemis.ArtemisXAConnectionFactoryConfiguration.class,org.springframework.boot.autoconfigure.jms.artemis.ArtemisConnectionFactoryConfiguration.class}) public class ArtemisAutoConfiguration extends Object;\n// Callback interface that can be implemented by beans wishing to customize the Artemis JMS server Configuration before it is used by an auto-configured EmbeddedActiveMQ instance.\n@FunctionalInterface public interface ArtemisConfigurationCustomizer;\n// Define the mode in which Artemis can operate.\npublic enum ArtemisMode extends Enum<ArtemisMode>;\n// A no-op implementation of the BindingRegistry.\npublic class ArtemisNoOpBindingRegistry extends Object implements org.apache.activemq.artemis.spi.core.naming.BindingRegistry;\n// Configuration properties for Artemis.\n@ConfigurationProperties(prefix=\"spring.artemis\") public class ArtemisProperties extends Object;\n// Configuration for an embedded Artemis server.\npublic static class ArtemisProperties.Embedded extends Object;\n", "des": "Auto-configuration for Artemis."}
{"index": 1949, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jmx\n\n// Auto-configuration to enable/disable Spring's @EnableMBeanExport mechanism based on configuration properties.\n@AutoConfiguration @EnableConfigurationProperties(JmxProperties.class) @ConditionalOnClass(org.springframework.jmx.export.MBeanExporter.class) @ConditionalOnProperty(prefix=\"spring.jmx\", name=\"enabled\", havingValue=\"true\") public class JmxAutoConfiguration extends Object;\n// Configuration properties for JMX.\n@ConfigurationProperties(prefix=\"spring.jmx\") public class JmxProperties extends Object;\n// Extension of MetadataNamingStrategy that supports a parent ApplicationContext.\npublic class ParentAwareNamingStrategy extends org.springframework.jmx.export.naming.MetadataNamingStrategy implements org.springframework.context.ApplicationContextAware;\n", "des": "Auto-configuration for JMX."}
{"index": 1950, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jooq\n\n// Callback interface that can be implemented by beans wishing to customize the DefaultConfiguration whilst retaining default auto-configuration.\n@FunctionalInterface public interface DefaultConfigurationCustomizer;\n// Auto-configuration for JOOQ.\n@AutoConfiguration(after={DataSourceAutoConfiguration.class,TransactionAutoConfiguration.class}) @ConditionalOnClass(org.jooq.DSLContext.class) @ConditionalOnBean(javax.sql.DataSource.class) public class JooqAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnMissingBean(org.jooq.DSLContext.class) @EnableConfigurationProperties(JooqProperties.class) public static class JooqAutoConfiguration.DslContextConfiguration extends Object;\n// Transforms SQLException into a Spring-specific DataAccessException.\npublic class JooqExceptionTranslator extends Object implements org.jooq.ExecuteListener;\n// Configuration properties for the JOOQ database library.\n@ConfigurationProperties(prefix=\"spring.jooq\") public class JooqProperties extends Object;\n// Allows Spring Transaction to be used with JOOQ.\npublic class SpringTransactionProvider extends Object implements org.jooq.TransactionProvider;\n", "des": "Auto-configuration for JOOQ."}
{"index": 1951, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jsonb\n\n// Auto-configuration for JSON-B.\n@AutoConfiguration @ConditionalOnClass(jakarta.json.bind.Jsonb.class) @ConditionalOnResource(resources={\"classpath:META-INF/services/jakarta.json.bind.spi.JsonbProvider\",\"classpath:META-INF/services/jakarta.json.spi.JsonProvider\"}) public class JsonbAutoConfiguration extends Object;\n", "des": "Auto-configuration for JSON-B."}
{"index": 1952, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package kafka\n\n// Configure ConcurrentKafkaListenerContainerFactory with sensible defaults.\npublic class ConcurrentKafkaListenerContainerFactoryConfigurer extends Object;\n// Callback interface for customizing DefaultKafkaConsumerFactory beans.\n@FunctionalInterface public interface DefaultKafkaConsumerFactoryCustomizer;\n// Callback interface for customizing DefaultKafkaProducerFactory beans.\n@FunctionalInterface public interface DefaultKafkaProducerFactoryCustomizer;\n// Auto-configuration for Apache Kafka.\n@AutoConfiguration @ConditionalOnClass(org.springframework.kafka.core.KafkaTemplate.class) @EnableConfigurationProperties(KafkaProperties.class) @Import({org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration.class,org.springframework.boot.autoconfigure.kafka.KafkaStreamsAnnotationDrivenConfiguration.class}) public class KafkaAutoConfiguration extends Object;\n// Details required to establish a connection to a Kafka service.\npublic interface KafkaConnectionDetails extends ConnectionDetails;\n// Configuration properties for Spring for Apache Kafka.\n@ConfigurationProperties(prefix=\"spring.kafka\") public class KafkaProperties extends Object;\n// \npublic static class KafkaProperties.Admin extends Object;\n// \npublic static class KafkaProperties.Cleanup extends Object;\n// \npublic static class KafkaProperties.Consumer extends Object;\n// \npublic static enum KafkaProperties.IsolationLevel extends Enum<KafkaProperties.IsolationLevel>;\n// \npublic static class KafkaProperties.Jaas extends Object;\n// \npublic static class KafkaProperties.Listener extends Object;\n// \npublic static enum KafkaProperties.Listener.Type extends Enum<KafkaProperties.Listener.Type>;\n// \npublic static class KafkaProperties.Producer extends Object;\n// \npublic static class KafkaProperties.Retry extends Object;\n// Properties for non-blocking, topic-based retries.\npublic static class KafkaProperties.Retry.Topic extends Object;\n// \npublic static class KafkaProperties.Security extends Object;\n// \npublic static class KafkaProperties.Ssl extends Object;\n// High (and some medium) priority Streams properties and a general properties bucket.\npublic static class KafkaProperties.Streams extends Object;\n// \npublic static class KafkaProperties.Template extends Object;\n", "des": "Auto-configuration for Apache Kafka."}
{"index": 1953, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package ldap\n\n// Auto-configuration for LDAP.\n@AutoConfiguration @ConditionalOnClass(org.springframework.ldap.core.ContextSource.class) @EnableConfigurationProperties(LdapProperties.class) public class LdapAutoConfiguration extends Object;\n// Configuration properties for LDAP.\n@ConfigurationProperties(prefix=\"spring.ldap\") public class LdapProperties extends Object;\n// settings.\npublic static class LdapProperties.Template extends Object;\n", "des": "Auto-configuration for LDAP."}
{"index": 1954, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package embedded\n\n// Auto-configuration for Embedded LDAP.\n@AutoConfiguration(before=LdapAutoConfiguration.class) @EnableConfigurationProperties({LdapProperties.class,EmbeddedLdapProperties.class}) @ConditionalOnClass(com.unboundid.ldap.listener.InMemoryDirectoryServer.class) @Conditional(org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration.EmbeddedLdapCondition.class) @ImportRuntimeHints(org.springframework.boot.autoconfigure.ldap.embedded.EmbeddedLdapAutoConfiguration.EmbeddedLdapAutoConfigurationRuntimeHints.class) public class EmbeddedLdapAutoConfiguration extends Object;\n// Configuration properties for Embedded LDAP.\n@ConfigurationProperties(prefix=\"spring.ldap.embedded\") public class EmbeddedLdapProperties extends Object;\n// \npublic static class EmbeddedLdapProperties.Credential extends Object;\n// \npublic static class EmbeddedLdapProperties.Validation extends Object;\n", "des": "Auto-configuration for embedded LDAP."}
{"index": 1955, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package liquibase\n\n// A custom SpringLiquibase extension that closes the underlying DataSource once the database has been migrated.\npublic class DataSourceClosingSpringLiquibase extends liquibase.integration.spring.SpringLiquibase implements org.springframework.beans.factory.DisposableBean;\n// Auto-configuration for Liquibase.\n@AutoConfiguration(after={DataSourceAutoConfiguration.class,HibernateJpaAutoConfiguration.class}) @ConditionalOnClass({liquibase.integration.spring.SpringLiquibase.class,liquibase.change.DatabaseChange.class}) @ConditionalOnProperty(prefix=\"spring.liquibase\", name=\"enabled\", matchIfMissing=true) @Conditional(org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration.LiquibaseDataSourceCondition.class) @Import(org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer.class) @ImportRuntimeHints(org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration.LiquibaseAutoConfigurationRuntimeHints.class) public class LiquibaseAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(org.springframework.jdbc.core.ConnectionCallback.class) @ConditionalOnMissingBean(liquibase.integration.spring.SpringLiquibase.class) @EnableConfigurationProperties(LiquibaseProperties.class) public static class LiquibaseAutoConfiguration.LiquibaseConfiguration extends Object;\n// Details required for Liquibase to establish a connection to an SQL service using JDBC.\npublic interface LiquibaseConnectionDetails extends ConnectionDetails;\n// Qualifier annotation for a DataSource to be injected in to Liquibase.\n@Target({FIELD,METHOD,PARAMETER,TYPE,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Qualifier public @interface LiquibaseDataSource;\n// Configuration properties to configure SpringLiquibase.\n@ConfigurationProperties(prefix=\"spring.liquibase\", ignoreUnknownFields=false) public class LiquibaseProperties extends Object;\n", "des": "Auto-configuration for Liquibase."}
{"index": 1956, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package logging\n\n// ApplicationContextInitializer that writes the ConditionEvaluationReport to the log.\npublic class ConditionEvaluationReportLoggingListener extends Object implements org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>;\n// A condition evaluation report message that can logged or printed.\npublic class ConditionEvaluationReportMessage extends Object;\n", "des": "Auto-configuration for logging."}
{"index": 1957, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package mail\n\n// Configuration properties for email support.\n@ConfigurationProperties(prefix=\"spring.mail\") public class MailProperties extends Object;\n// Auto configuration for email support.\n@AutoConfiguration @ConditionalOnClass({jakarta.mail.internet.MimeMessage.class,jakarta.activation.MimeType.class,org.springframework.mail.MailSender.class}) @ConditionalOnMissingBean(org.springframework.mail.MailSender.class) @Conditional(org.springframework.boot.autoconfigure.mail.MailSenderAutoConfiguration.MailSenderCondition.class) @EnableConfigurationProperties(MailProperties.class) @Import({org.springframework.boot.autoconfigure.mail.MailSenderJndiConfiguration.class,org.springframework.boot.autoconfigure.mail.MailSenderPropertiesConfiguration.class}) public class MailSenderAutoConfiguration extends Object;\n// Auto configuration for testing mail service connectivity on startup.\n@AutoConfiguration(after=MailSenderAutoConfiguration.class) @ConditionalOnProperty(prefix=\"spring.mail\", value=\"test-connection\") @ConditionalOnSingleCandidate(org.springframework.mail.javamail.JavaMailSenderImpl.class) public class MailSenderValidatorAutoConfiguration extends Object;\n", "des": "Auto-configuration for email support."}
{"index": 1958, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package mongo\n\n// Auto-configuration for Mongo.\n@AutoConfiguration @ConditionalOnClass(com.mongodb.client.MongoClient.class) @EnableConfigurationProperties(MongoProperties.class) @ConditionalOnMissingBean(type=\"org.springframework.data.mongodb.MongoDatabaseFactory\") public class MongoAutoConfiguration extends Object;\n// A factory for a blocking MongoClient.\npublic class MongoClientFactory extends MongoClientFactorySupport<com.mongodb.client.MongoClient>;\n// Base class for setup that is common to MongoDB client factories.\npublic abstract class MongoClientFactorySupport<T> extends Object;\n// Callback interface that can be implemented by beans wishing to customize the MongoClientSettings through a MongoClientSettings.Builder whilst retaining default auto-configuration.\n@FunctionalInterface public interface MongoClientSettingsBuilderCustomizer;\n// Details required to establish a connection to a MongoDB service.\npublic interface MongoConnectionDetails extends ConnectionDetails;\n// GridFS configuration.\npublic static interface MongoConnectionDetails.GridFs;\n// Configuration properties for Mongo.\n@ConfigurationProperties(prefix=\"spring.data.mongodb\") public class MongoProperties extends Object;\n// \npublic static class MongoProperties.Gridfs extends Object;\n// \npublic static class MongoProperties.Ssl extends Object;\n// \n@Deprecated(since=\"3.1.0\", forRemoval=true) public class MongoPropertiesClientSettingsBuilderCustomizer extends Object implements MongoClientSettingsBuilderCustomizer, org.springframework.core.Ordered;\n// Auto-configuration for Reactive Mongo.\n@AutoConfiguration @ConditionalOnClass({com.mongodb.reactivestreams.client.MongoClient.class,reactor.core.publisher.Flux.class}) @EnableConfigurationProperties(MongoProperties.class) public class MongoReactiveAutoConfiguration extends Object;\n// Adapts MongoProperties to MongoConnectionDetails.\npublic class PropertiesMongoConnectionDetails extends Object implements MongoConnectionDetails;\n// A factory for a reactive MongoClient.\npublic class ReactiveMongoClientFactory extends MongoClientFactorySupport<com.mongodb.reactivestreams.client.MongoClient>;\n// A MongoClientSettingsBuilderCustomizer that applies standard settings to a MongoClientSettings.\npublic class StandardMongoClientSettingsBuilderCustomizer extends Object implements MongoClientSettingsBuilderCustomizer, org.springframework.core.Ordered;\n", "des": "Auto-configuration for MongoDB."}
{"index": 1959, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package mustache\n\n// Auto-configuration for Mustache.\n@AutoConfiguration @ConditionalOnClass(com.samskivert.mustache.Mustache.class) @EnableConfigurationProperties(MustacheProperties.class) @Import({org.springframework.boot.autoconfigure.mustache.MustacheServletWebConfiguration.class,org.springframework.boot.autoconfigure.mustache.MustacheReactiveWebConfiguration.class}) public class MustacheAutoConfiguration extends Object;\n// @ConfigurationProperties for Mustache.\n@ConfigurationProperties(prefix=\"spring.mustache\") public class MustacheProperties extends Object;\n// \npublic static class MustacheProperties.Reactive extends Object;\n// \npublic static class MustacheProperties.Servlet extends Object;\n// Mustache TemplateLoader implementation that uses a prefix, suffix and the Spring Resource abstraction to load a template from a file, classpath, URL etc.\npublic class MustacheResourceTemplateLoader extends Object implements com.samskivert.mustache.Mustache.TemplateLoader, org.springframework.context.ResourceLoaderAware;\n// TemplateAvailabilityProvider that provides availability information for Mustache view templates.\npublic class MustacheTemplateAvailabilityProvider extends Object implements TemplateAvailabilityProvider;\n", "des": "Auto-configuration for Mustache."}
{"index": 1960, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package neo4j\n\n// Callback interface that can be implemented by beans wishing to customize the Config through a Config.ConfigBuilder whilst retaining default auto-configuration.\n@FunctionalInterface public interface ConfigBuilderCustomizer;\n// Auto-configuration for Neo4j.\n@AutoConfiguration @ConditionalOnClass(org.neo4j.driver.Driver.class) @EnableConfigurationProperties(Neo4jProperties.class) public class Neo4jAutoConfiguration extends Object;\n// Details required to establish a connection to a Neo4j service.\npublic interface Neo4jConnectionDetails extends ConnectionDetails;\n// Configuration properties for Neo4j.\n@ConfigurationProperties(prefix=\"spring.neo4j\") public class Neo4jProperties extends Object;\n// \npublic static class Neo4jProperties.Authentication extends Object;\n// \npublic static class Neo4jProperties.Pool extends Object;\n// \npublic static class Neo4jProperties.Security extends Object;\n// \npublic static enum Neo4jProperties.Security.TrustStrategy extends Enum<Neo4jProperties.Security.TrustStrategy>;\n", "des": "Auto-configuration for Neo4j."}
{"index": 1961, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package netty\n\n// Auto-configuration for Netty.\n@AutoConfiguration @ConditionalOnClass(io.netty.util.NettyRuntime.class) @EnableConfigurationProperties(NettyProperties.class) public class NettyAutoConfiguration extends Object;\n// @ConfigurationProperties for the Netty engine.\n@ConfigurationProperties(prefix=\"spring.netty\") public class NettyProperties extends Object;\n// \npublic static enum NettyProperties.LeakDetection extends Enum<NettyProperties.LeakDetection>;\n", "des": "Auto-configuration for the Netty library."}
{"index": 1962, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jpa\n\n// Callback interface that can be used to customize the auto-configured EntityManagerFactoryBuilder.\n@FunctionalInterface public interface EntityManagerFactoryBuilderCustomizer;\n// BeanFactoryPostProcessor that can be used to dynamically declare that all EntityManagerFactory beans should \"depend on\" one or more specific beans.\npublic class EntityManagerFactoryDependsOnPostProcessor extends AbstractDependsOnBeanFactoryPostProcessor;\n// Auto-configuration for Hibernate JPA.\n@AutoConfiguration(after=DataSourceAutoConfiguration.class, before=TransactionAutoConfiguration.class) @ConditionalOnClass({org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.class,jakarta.persistence.EntityManager.class,org.hibernate.engine.spi.SessionImplementor.class}) @EnableConfigurationProperties(JpaProperties.class) @Import(org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration.class) public class HibernateJpaAutoConfiguration extends Object;\n// Configuration properties for Hibernate.\n@ConfigurationProperties(\"spring.jpa.hibernate\") public class HibernateProperties extends Object;\n// \npublic static class HibernateProperties.Naming extends Object;\n// Callback interface that can be implemented by beans wishing to customize the Hibernate properties before it is used by an auto-configured EntityManagerFactory.\n@FunctionalInterface public interface HibernatePropertiesCustomizer;\n// Settings to apply when configuring Hibernate.\npublic class HibernateSettings extends Object;\n// Base Auto-configuration for JPA.\n@Configuration(proxyBeanMethods=false) @EnableConfigurationProperties(JpaProperties.class) public abstract class JpaBaseConfiguration extends Object;\n", "des": "Auto-configuration for JPA and Spring ORM."}
{"index": 1963, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package quartz\n\n// Define the supported Quartz JobStore.\npublic enum JobStoreType extends Enum<JobStoreType>;\n// Auto-configuration for Quartz Scheduler.\n@AutoConfiguration(after={DataSourceAutoConfiguration.class,HibernateJpaAutoConfiguration.class,LiquibaseAutoConfiguration.class,FlywayAutoConfiguration.class}) @ConditionalOnClass({org.quartz.Scheduler.class,org.springframework.scheduling.quartz.SchedulerFactoryBean.class,org.springframework.transaction.PlatformTransactionManager.class}) @EnableConfigurationProperties(QuartzProperties.class) public class QuartzAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnSingleCandidate(javax.sql.DataSource.class) @ConditionalOnProperty(prefix=\"spring.quartz\", name=\"job-store-type\", havingValue=\"jdbc\") @Import(org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer.class) protected static class QuartzAutoConfiguration.JdbcStoreTypeConfiguration extends Object;\n// Qualifier annotation for a DataSource to be injected into Quartz auto-configuration.\n@Target({FIELD,METHOD,PARAMETER,TYPE,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Qualifier public @interface QuartzDataSource;\n// DataSourceScriptDatabaseInitializer for the Quartz Scheduler database.\npublic class QuartzDataSourceScriptDatabaseInitializer extends org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer;\n// Configuration properties for the Quartz Scheduler integration.\n@ConfigurationProperties(\"spring.quartz\") public class QuartzProperties extends Object;\n// \npublic static class QuartzProperties.Jdbc extends Object;\n// Qualifier annotation for a TransactionManager to be injected into Quartz auto-configuration.\n@Target({FIELD,METHOD,PARAMETER,TYPE,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Qualifier public @interface QuartzTransactionManager;\n// Callback interface that can be implemented by beans wishing to customize the Quartz SchedulerFactoryBean before it is fully initialized, in particular to tune its configuration.\n@FunctionalInterface public interface SchedulerFactoryBeanCustomizer;\n", "des": "Auto-configuration for Quartz Scheduler."}
{"index": 1964, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package r2dbc\n\n// Callback interface that can be implemented by beans wishing to customize the ConnectionFactoryOptions through a ConnectionFactoryOptions.Builder whilst retaining default auto-configuration.\n@FunctionalInterface public interface ConnectionFactoryOptionsBuilderCustomizer;\n// Auto-configuration for R2DBC.\n@AutoConfiguration(before={DataSourceAutoConfiguration.class,SqlInitializationAutoConfiguration.class}) @ConditionalOnClass(io.r2dbc.spi.ConnectionFactory.class) @ConditionalOnResource(resources=\"classpath:META-INF/services/io.r2dbc.spi.ConnectionFactoryProvider\") @EnableConfigurationProperties(R2dbcProperties.class) @Import({org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations.PoolConfiguration.class,org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations.GenericConfiguration.class,org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryDependentConfiguration.class}) public class R2dbcAutoConfiguration extends Object;\n// Details required to establish a connection to an SQL service using R2DBC.\npublic interface R2dbcConnectionDetails extends ConnectionDetails;\n// Configuration properties for R2DBC.\n@ConfigurationProperties(prefix=\"spring.r2dbc\") public class R2dbcProperties extends Object;\n// \npublic static class R2dbcProperties.Pool extends Object;\n// Auto-configuration for R2dbcTransactionManager.\n@AutoConfiguration(before=TransactionAutoConfiguration.class) @ConditionalOnClass({org.springframework.r2dbc.connection.R2dbcTransactionManager.class,org.springframework.transaction.ReactiveTransactionManager.class}) @ConditionalOnSingleCandidate(io.r2dbc.spi.ConnectionFactory.class) @AutoConfigureOrder(2147483647) public class R2dbcTransactionManagerAutoConfiguration extends Object;\n", "des": "Auto-Configuration for R2DBC."}
{"index": 1965, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package netty\n\n// Configurations for Reactor Netty.\npublic final class ReactorNettyConfigurations extends Object;\n// \n@Configuration(proxyBeanMethods=false) @EnableConfigurationProperties(ReactorNettyProperties.class) public static class ReactorNettyConfigurations.ReactorResourceFactoryConfiguration extends Object;\n// Configuration properties for Reactor Netty.\n@ConfigurationProperties(prefix=\"spring.reactor.netty\") public class ReactorNettyProperties extends Object;\n", "des": "Auto-configuration for Reactor Netty."}
{"index": 1966, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package rsocket\n\n// Callback interface that can be used to customize a RSocketMessageHandler.\n@FunctionalInterface public interface RSocketMessageHandlerCustomizer;\n// Auto-configuration for Spring RSocket support in Spring Messaging.\n@AutoConfiguration(after=RSocketStrategiesAutoConfiguration.class) @ConditionalOnClass({org.springframework.messaging.rsocket.RSocketRequester.class,io.rsocket.RSocket.class,io.rsocket.transport.netty.server.TcpServerTransport.class}) public class RSocketMessagingAutoConfiguration extends Object;\n// properties for RSocket support.\n@ConfigurationProperties(\"spring.rsocket\") public class RSocketProperties extends Object;\n// \npublic static class RSocketProperties.Server extends Object;\n// Auto-configuration for RSocketRequester.\n@AutoConfiguration(after=RSocketStrategiesAutoConfiguration.class) @ConditionalOnClass({org.springframework.messaging.rsocket.RSocketRequester.class,io.rsocket.RSocket.class,reactor.netty.http.server.HttpServer.class,io.rsocket.transport.netty.server.TcpServerTransport.class}) public class RSocketRequesterAutoConfiguration extends Object;\n// Auto-configuration for RSocket servers.\n@AutoConfiguration(after=RSocketStrategiesAutoConfiguration.class) @ConditionalOnClass({io.rsocket.core.RSocketServer.class,org.springframework.messaging.rsocket.RSocketStrategies.class,reactor.netty.http.server.HttpServer.class,io.rsocket.transport.netty.server.TcpServerTransport.class}) @ConditionalOnBean(org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler.class) @EnableConfigurationProperties(RSocketProperties.class) public class RSocketServerAutoConfiguration extends Object;\n// Auto-configuration for RSocketStrategies.\n@AutoConfiguration(after=JacksonAutoConfiguration.class) @ConditionalOnClass({io.rsocket.RSocket.class,org.springframework.messaging.rsocket.RSocketStrategies.class,io.netty.buffer.PooledByteBufAllocator.class}) public class RSocketStrategiesAutoConfiguration extends Object;\n", "des": "Auto-configuration for RSocket."}
{"index": 1967, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package security\n\n// @Conditional that only matches when web security is available and the user has not defined their own configuration.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition.class) public @interface ConditionalOnDefaultWebSecurity;\n// Automatically adds Spring Security's integration with Spring Data.\n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(org.springframework.security.data.repository.query.SecurityEvaluationContextExtension.class) public class SecurityDataConfiguration extends Object;\n// Configuration properties for Spring Security.\n@ConfigurationProperties(prefix=\"spring.security\") public class SecurityProperties extends Object;\n// \npublic static class SecurityProperties.Filter extends Object;\n// \npublic static class SecurityProperties.User extends Object;\n// Common locations for static resources.\npublic enum StaticResourceLocation extends Enum<StaticResourceLocation>;\n", "des": "Auto-configuration for Spring Security."}
{"index": 1968, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package client\n\n// Condition that matches if any spring.security.oauth2.client.registration properties are defined.\npublic class ClientsConfiguredCondition extends SpringBootCondition;\n// OAuth 2.0 client properties.\n@ConfigurationProperties(prefix=\"spring.security.oauth2.client\") public class OAuth2ClientProperties extends Object implements org.springframework.beans.factory.InitializingBean;\n// \npublic static class OAuth2ClientProperties.Provider extends Object;\n// A single client registration.\npublic static class OAuth2ClientProperties.Registration extends Object;\n// Maps OAuth2ClientProperties to ClientRegistrations.\npublic final class OAuth2ClientPropertiesMapper extends Object;\n// \n@Deprecated(since=\"3.1.0\", forRemoval=true) public final class OAuth2ClientPropertiesRegistrationAdapter extends Object;\n", "des": "Support for Spring Security's OAuth 2 client."}
{"index": 1969, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n// Auto-configuration for Spring Security's Reactive OAuth2 client.\n@AutoConfiguration(before=ReactiveSecurityAutoConfiguration.class) @EnableConfigurationProperties(OAuth2ClientProperties.class) @Conditional(org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientAutoConfiguration.NonServletApplicationCondition.class) @ConditionalOnClass({reactor.core.publisher.Flux.class,org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity.class,org.springframework.security.oauth2.client.registration.ClientRegistration.class}) @Import({org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientConfigurations.ReactiveClientRegistrationRepositoryConfiguration.class,org.springframework.boot.autoconfigure.security.oauth2.client.reactive.ReactiveOAuth2ClientConfigurations.ReactiveOAuth2ClientConfiguration.class}) public class ReactiveOAuth2ClientAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Security's Reactive OAuth 2 client."}
{"index": 1970, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n// Auto-configuration for OAuth client support.\n@AutoConfiguration(before=SecurityAutoConfiguration.class) @ConditionalOnClass({org.springframework.security.config.annotation.web.configuration.EnableWebSecurity.class,org.springframework.security.oauth2.client.registration.ClientRegistration.class}) @ConditionalOnWebApplication(type=SERVLET) @Import({org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientRegistrationRepositoryConfiguration.class,org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2WebSecurityConfiguration.class}) public class OAuth2ClientAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Security's OAuth 2 client."}
{"index": 1971, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package resource\n\n// Condition for creating JwtDecoder by oidc issuer location.\npublic class IssuerUriCondition extends SpringBootCondition;\n// Condition for creating a jwt decoder using a public key value.\npublic class KeyValueCondition extends SpringBootCondition;\n// OAuth 2.0 resource server properties.\n@ConfigurationProperties(prefix=\"spring.security.oauth2.resourceserver\") public class OAuth2ResourceServerProperties extends Object;\n// \npublic static class OAuth2ResourceServerProperties.Jwt extends Object;\n// \npublic static class OAuth2ResourceServerProperties.Opaquetoken extends Object;\n", "des": "Support for Spring Security's OAuth2 resource server."}
{"index": 1972, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n// Callback interface for the customization of the NimbusReactiveJwtDecoder.JwkSetUriReactiveJwtDecoderBuilder used to create the auto-configured ReactiveJwtDecoder for a JWK set URI that has been configured directly or obtained through an issuer URI.\n@FunctionalInterface public interface JwkSetUriReactiveJwtDecoderBuilderCustomizer;\n// Auto-configuration for Reactive OAuth2 resource server support.\n@AutoConfiguration(before={ReactiveSecurityAutoConfiguration.class,ReactiveUserDetailsServiceAutoConfiguration.class}) @EnableConfigurationProperties(OAuth2ResourceServerProperties.class) @ConditionalOnClass(org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity.class) @ConditionalOnWebApplication(type=REACTIVE) @Import({org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerConfiguration.JwtConfiguration.class,org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerConfiguration.OpaqueTokenConfiguration.class}) public class ReactiveOAuth2ResourceServerAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Security's Reactive OAuth2 resource server."}
{"index": 1973, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n// Callback interface for the customization of the NimbusJwtDecoder.JwkSetUriJwtDecoderBuilder used to create the auto-configured JwtDecoder for a JWK set URI that has been configured directly or obtained through an issuer URI.\n@FunctionalInterface public interface JwkSetUriJwtDecoderBuilderCustomizer;\n// Auto-configuration for OAuth2 resource server support.\n@AutoConfiguration(before={SecurityAutoConfiguration.class,UserDetailsServiceAutoConfiguration.class}) @EnableConfigurationProperties(OAuth2ResourceServerProperties.class) @ConditionalOnClass(org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken.class) @ConditionalOnWebApplication(type=SERVLET) @Import({org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration.JwtConfiguration.class,org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.Oauth2ResourceServerConfiguration.OpaqueTokenConfiguration.class}) public class OAuth2ResourceServerAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Security's OAuth2 resource server."}
{"index": 1974, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n// Auto-configuration for OAuth2 authorization server support.\n@AutoConfiguration(before={OAuth2ResourceServerAutoConfiguration.class,SecurityAutoConfiguration.class,UserDetailsServiceAutoConfiguration.class}) @ConditionalOnClass(org.springframework.security.oauth2.server.authorization.OAuth2Authorization.class) @ConditionalOnWebApplication(type=SERVLET) @Import({org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerConfiguration.class,org.springframework.boot.autoconfigure.security.oauth2.server.servlet.OAuth2AuthorizationServerWebSecurityConfiguration.class}) public class OAuth2AuthorizationServerAutoConfiguration extends Object;\n// Auto-configuration for JWT support for endpoints of the OAuth2 authorization server that require it (e.g.\n@AutoConfiguration(after=UserDetailsServiceAutoConfiguration.class) @ConditionalOnClass(org.springframework.security.oauth2.server.authorization.OAuth2Authorization.class) @ConditionalOnWebApplication(type=SERVLET) public class OAuth2AuthorizationServerJwtAutoConfiguration extends Object;\n// OAuth 2.0 Authorization Server properties.\n@ConfigurationProperties(prefix=\"spring.security.oauth2.authorizationserver\") public class OAuth2AuthorizationServerProperties extends Object implements org.springframework.beans.factory.InitializingBean;\n// A registered client of the Authorization Server.\npublic static class OAuth2AuthorizationServerProperties.Client extends Object;\n// Authorization Server endpoints.\npublic static class OAuth2AuthorizationServerProperties.Endpoint extends Object;\n// OpenID Connect 1.0 endpoints.\npublic static class OAuth2AuthorizationServerProperties.OidcEndpoint extends Object;\n// Client registration information.\npublic static class OAuth2AuthorizationServerProperties.Registration extends Object;\n// Token settings of the registered client.\npublic static class OAuth2AuthorizationServerProperties.Token extends Object;\n", "des": "Auto-configuration for Spring Security's OAuth2 authorization server."}
{"index": 1975, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n// Factory that can be used to create a ServerWebExchangeMatcher for commonly used paths.\npublic final class PathRequest extends Object;\n// Auto-configuration for Spring Security in a reactive application.\n@AutoConfiguration @EnableConfigurationProperties(SecurityProperties.class) @ConditionalOnClass({reactor.core.publisher.Flux.class,org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity.class,org.springframework.security.web.server.WebFilterChainProxy.class,org.springframework.web.reactive.config.WebFluxConfigurer.class}) public class ReactiveSecurityAutoConfiguration extends Object;\n// Default user @Configuration for a reactive web application.\n@AutoConfiguration(after=RSocketMessagingAutoConfiguration.class) @ConditionalOnClass(org.springframework.security.authentication.ReactiveAuthenticationManager.class) @ConditionalOnMissingBean(value={org.springframework.security.authentication.ReactiveAuthenticationManager.class,org.springframework.security.core.userdetails.ReactiveUserDetailsService.class,org.springframework.security.authentication.ReactiveAuthenticationManagerResolver.class}, type={\"org.springframework.security.oauth2.jwt.ReactiveJwtDecoder\",\"org.springframework.security.oauth2.server.resource.introspection.ReactiveOpaqueTokenIntrospector\"}) @Conditional(org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration.ReactiveUserDetailsServiceCondition.class) @EnableConfigurationProperties(SecurityProperties.class) public class ReactiveUserDetailsServiceAutoConfiguration extends Object;\n// Used to create a ServerWebExchangeMatcher for static resources in commonly used locations.\npublic final class StaticResourceRequest extends Object;\n// The server web exchange matcher used to match against resource locations.\npublic static final class StaticResourceRequest.StaticResourceServerWebExchange extends Object implements org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher;\n", "des": "Auto-configuration for reactive Spring Security."}
{"index": 1976, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package rsocket\n\n// Auto-configuration for Spring Security for an RSocket server.\n@AutoConfiguration @EnableRSocketSecurity @ConditionalOnClass(org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor.class) public class RSocketSecurityAutoConfiguration extends Object;\n", "des": "Auto-configuration for RSocket support in Spring Security."}
{"index": 1977, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package saml2\n\n// Auto-configuration for Spring Security's SAML 2.0 authentication support.\n@AutoConfiguration(before=SecurityAutoConfiguration.class) @ConditionalOnClass(org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository.class) @ConditionalOnWebApplication(type=SERVLET) @Import({org.springframework.boot.autoconfigure.security.saml2.Saml2RelyingPartyRegistrationConfiguration.class,org.springframework.boot.autoconfigure.security.saml2.Saml2LoginConfiguration.class}) @EnableConfigurationProperties(Saml2RelyingPartyProperties.class) public class Saml2RelyingPartyAutoConfiguration extends Object;\n// SAML2 relying party properties.\n@ConfigurationProperties(\"spring.security.saml2.relyingparty\") public class Saml2RelyingPartyProperties extends Object;\n// Represents a remote Identity Provider.\npublic static class Saml2RelyingPartyProperties.AssertingParty extends Object;\n// Single sign on details for an Identity Provider.\npublic static class Saml2RelyingPartyProperties.AssertingParty.Singlesignon extends Object;\n// Verification details for an Identity Provider.\npublic static class Saml2RelyingPartyProperties.AssertingParty.Verification extends Object;\n// \npublic static class Saml2RelyingPartyProperties.AssertingParty.Verification.Credential extends Object;\n// \npublic static class Saml2RelyingPartyProperties.Decryption extends Object;\n// \npublic static class Saml2RelyingPartyProperties.Decryption.Credential extends Object;\n// Represents a SAML Relying Party.\npublic static class Saml2RelyingPartyProperties.Registration extends Object;\n// \npublic static class Saml2RelyingPartyProperties.Registration.Acs extends Object;\n// \npublic static class Saml2RelyingPartyProperties.Registration.Signing extends Object;\n// \npublic static class Saml2RelyingPartyProperties.Registration.Signing.Credential extends Object;\n// Single logout details.\npublic static class Saml2RelyingPartyProperties.Singlelogout extends Object;\n", "des": "Auto-configuration for Spring Security's SAML 2.0."}
{"index": 1978, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n// RequestMatcherProvider that provides an AntPathRequestMatcher.\npublic class AntPathRequestMatcherProvider extends Object implements RequestMatcherProvider;\n// Factory that can be used to create a RequestMatcher for commonly used paths.\npublic final class PathRequest extends Object;\n// The request matcher used to match against h2 console path.\npublic static final class PathRequest.H2ConsoleRequestMatcher extends org.springframework.boot.security.servlet.ApplicationContextRequestMatcher<H2ConsoleProperties>;\n// Interface that can be used to provide a RequestMatcher that can be used with Spring Security.\n@FunctionalInterface public interface RequestMatcherProvider;\n// Auto-configuration for Spring Security.\n@AutoConfiguration(before=UserDetailsServiceAutoConfiguration.class) @ConditionalOnClass(org.springframework.security.authentication.DefaultAuthenticationEventPublisher.class) @EnableConfigurationProperties(SecurityProperties.class) @Import({org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration.class,SecurityDataConfiguration.class}) public class SecurityAutoConfiguration extends Object;\n// Auto-configuration for Spring Security's Filter.\n@AutoConfiguration(after=SecurityAutoConfiguration.class) @ConditionalOnWebApplication(type=SERVLET) @EnableConfigurationProperties(SecurityProperties.class) @ConditionalOnClass({org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer.class,org.springframework.security.config.http.SessionCreationPolicy.class}) public class SecurityFilterAutoConfiguration extends Object;\n// Used to create a RequestMatcher for static resources in commonly used locations.\npublic final class StaticResourceRequest extends Object;\n// The request matcher used to match against resource Locations.\npublic static final class StaticResourceRequest.StaticResourceRequestMatcher extends org.springframework.boot.security.servlet.ApplicationContextRequestMatcher<DispatcherServletPath>;\n", "des": "Auto-configuration for Servlet-based Spring Security."}
{"index": 1979, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package sendgrid\n\n// Auto-configuration for SendGrid.\n@AutoConfiguration @ConditionalOnClass(com.sendgrid.SendGrid.class) @ConditionalOnProperty(prefix=\"spring.sendgrid\", value=\"api-key\") @EnableConfigurationProperties(SendGridProperties.class) public class SendGridAutoConfiguration extends Object;\n// @ConfigurationProperties for SendGrid.\n@ConfigurationProperties(prefix=\"spring.sendgrid\") public class SendGridProperties extends Object;\n// \npublic static class SendGridProperties.Proxy extends Object;\n", "des": "Auto-configuration for SendGrid."}
{"index": 1980, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package connection\n\n// Base interface for types that provide the details required to establish a connection to a remote service.\npublic interface ConnectionDetails;\n// A registry of ConnectionDetailsFactory instances.\npublic class ConnectionDetailsFactories extends Object;\n// A factory to create ConnectionDetails from a given source.\npublic interface ConnectionDetailsFactory<S,D extends ConnectionDetails>;\n// RuntimeException thrown when a ConnectionDetailsFactory could not be found.\npublic class ConnectionDetailsFactoryNotFoundException extends RuntimeException;\n// RuntimeException thrown when required ConnectionDetails could not be found.\npublic class ConnectionDetailsNotFoundException extends RuntimeException;\n", "des": "Support for service connections that affect auto-configuration."}
{"index": 1981, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package session\n\n// Callback interface that can be implemented by beans wishing to customize the DefaultCookieSerializer configuration.\n@FunctionalInterface public interface DefaultCookieSerializerCustomizer;\n// Configuration properties for Hazelcast backed Spring Session.\n@ConfigurationProperties(prefix=\"spring.session.hazelcast\") public class HazelcastSessionProperties extends Object;\n// DataSourceScriptDatabaseInitializer for the Spring Session JDBC database.\npublic class JdbcSessionDataSourceScriptDatabaseInitializer extends org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer;\n// Configuration properties for JDBC backed Spring Session.\n@ConfigurationProperties(prefix=\"spring.session.jdbc\") public class JdbcSessionProperties extends Object;\n// Configuration properties for Mongo-backed Spring Session.\n@ConfigurationProperties(prefix=\"spring.session.mongodb\") public class MongoSessionProperties extends Object;\n// Configuration properties for Redis backed Spring Session.\n@ConfigurationProperties(prefix=\"spring.session.redis\") public class RedisSessionProperties extends Object;\n// Strategies for configuring and validating Redis.\npublic static enum RedisSessionProperties.ConfigureAction extends Enum<RedisSessionProperties.ConfigureAction>;\n// Type of Redis session repository to auto-configure.\npublic static enum RedisSessionProperties.RepositoryType extends Enum<RedisSessionProperties.RepositoryType>;\n// Auto-configuration for Spring Session.\n@AutoConfiguration(after={DataSourceAutoConfiguration.class,HazelcastAutoConfiguration.class,JdbcTemplateAutoConfiguration.class,MongoDataAutoConfiguration.class,MongoReactiveDataAutoConfiguration.class,RedisAutoConfiguration.class,RedisReactiveAutoConfiguration.class,WebSessionIdResolverAutoConfiguration.class}, before={HttpHandlerAutoConfiguration.class,WebFluxAutoConfiguration.class}) @ConditionalOnClass(org.springframework.session.Session.class) @ConditionalOnWebApplication @EnableConfigurationProperties({ServerProperties.class,SessionProperties.class,WebFluxProperties.class}) public class SessionAutoConfiguration extends Object;\n// Configuration properties for Spring Session.\n@ConfigurationProperties(prefix=\"spring.session\") public class SessionProperties extends Object;\n// Servlet-related properties.\npublic static class SessionProperties.Servlet extends Object;\n", "des": "Auto-configuration for Spring Session."}
{"index": 1982, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package init\n\n// Condition that checks if the database initialization of a particular component should be considered.\npublic class OnDatabaseInitializationCondition extends SpringBootCondition;\n// DataSourceScriptDatabaseInitializer for the primary SQL database.\n@ImportRuntimeHints(org.springframework.boot.autoconfigure.sql.init.SqlInitializationScriptsRuntimeHints.class) public class SqlDataSourceScriptDatabaseInitializer extends org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer;\n// Auto-configuration for initializing an SQL database.\n@AutoConfiguration @EnableConfigurationProperties(SqlInitializationProperties.class) @Import({org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer.class,org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration.class,org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration.class}) @ConditionalOnProperty(prefix=\"spring.sql.init\", name=\"enabled\", matchIfMissing=true) @Conditional(org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration.SqlInitializationModeCondition.class) public class SqlInitializationAutoConfiguration extends Object;\n// Configuration properties for initializing an SQL database.\n@ConfigurationProperties(\"spring.sql.init\") public class SqlInitializationProperties extends Object;\n// R2dbcScriptDatabaseInitializer for the primary SQL database.\n@ImportRuntimeHints(org.springframework.boot.autoconfigure.sql.init.SqlInitializationScriptsRuntimeHints.class) public class SqlR2dbcScriptDatabaseInitializer extends org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializer;\n", "des": "Auto-configuration for basic script-based initialization of an SQL database."}
{"index": 1983, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package ssl\n\n// SslBundleProperties for Java keystores.\npublic class JksSslBundleProperties extends SslBundleProperties;\n// Store properties.\npublic static class JksSslBundleProperties.Store extends Object;\n// SslBundleProperties for PEM-encoded certificates and private keys.\npublic class PemSslBundleProperties extends SslBundleProperties;\n// Store properties.\npublic static class PemSslBundleProperties.Store extends Object;\n// SslBundle backed by JksSslBundleProperties or PemSslBundleProperties.\npublic final class PropertiesSslBundle extends Object implements org.springframework.boot.ssl.SslBundle;\n// Auto-configuration for SSL.\n@AutoConfiguration @EnableConfigurationProperties(SslProperties.class) public class SslAutoConfiguration extends Object;\n// Base class for SSL Bundle properties.\npublic abstract class SslBundleProperties extends Object;\n// \npublic static class SslBundleProperties.Key extends Object;\n// \npublic static class SslBundleProperties.Options extends Object;\n// Interface to be implemented by types that register SslBundle instances with an SslBundleRegistry.\n@FunctionalInterface public interface SslBundleRegistrar;\n// Properties for centralized SSL trust material configuration.\n@ConfigurationProperties(prefix=\"spring.ssl\") public class SslProperties extends Object;\n// Properties to define SSL Bundles.\npublic static class SslProperties.Bundles extends Object;\n", "des": "Auto-configuration for SSL bundles."}
{"index": 1984, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package task\n\n// Auto-configuration for TaskExecutor.\n@ConditionalOnClass(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.class) @AutoConfiguration @EnableConfigurationProperties(TaskExecutionProperties.class) public class TaskExecutionAutoConfiguration extends Object;\n// Configuration properties for task execution.\n@ConfigurationProperties(\"spring.task.execution\") public class TaskExecutionProperties extends Object;\n// \npublic static class TaskExecutionProperties.Pool extends Object;\n// \npublic static class TaskExecutionProperties.Shutdown extends Object;\n// Auto-configuration for TaskScheduler.\n@ConditionalOnClass(org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.class) @AutoConfiguration(after=TaskExecutionAutoConfiguration.class) @EnableConfigurationProperties(TaskSchedulingProperties.class) public class TaskSchedulingAutoConfiguration extends Object;\n// Configuration properties for task scheduling.\n@ConfigurationProperties(\"spring.task.scheduling\") public class TaskSchedulingProperties extends Object;\n// \npublic static class TaskSchedulingProperties.Pool extends Object;\n// \npublic static class TaskSchedulingProperties.Shutdown extends Object;\n", "des": "Auto-configuration for task execution and scheduling."}
{"index": 1985, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package template\n\n// Base class for @ConfigurationProperties of a AbstractTemplateViewResolver.\npublic abstract class AbstractTemplateViewResolverProperties extends AbstractViewResolverProperties;\n// Base class for @ConfigurationProperties of a ViewResolver.\npublic abstract class AbstractViewResolverProperties extends Object;\n// Abstract base class for TemplateAvailabilityProvider implementations that find templates from paths.\npublic abstract class PathBasedTemplateAvailabilityProvider extends Object implements TemplateAvailabilityProvider;\n// \nprotected abstract static class PathBasedTemplateAvailabilityProvider.TemplateAvailabilityProperties extends Object;\n// Indicates the availability of view templates for a particular templating engine such as FreeMarker or Thymeleaf.\n@FunctionalInterface public interface TemplateAvailabilityProvider;\n// Collection of TemplateAvailabilityProvider beans that can be used to check which (if any) templating engine supports a given view.\npublic class TemplateAvailabilityProviders extends Object;\n// Contains a location that templates can be loaded from.\npublic class TemplateLocation extends Object;\n", "des": "Base classes for template Auto-configuration."}
{"index": 1986, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package thymeleaf\n\n// Auto-configuration for Thymeleaf.\n@AutoConfiguration(after={WebMvcAutoConfiguration.class,WebFluxAutoConfiguration.class}) @EnableConfigurationProperties(ThymeleafProperties.class) @ConditionalOnClass({org.thymeleaf.templatemode.TemplateMode.class,org.thymeleaf.spring6.SpringTemplateEngine.class}) @Import({org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations.ReactiveTemplateEngineConfiguration.class,org.springframework.boot.autoconfigure.thymeleaf.TemplateEngineConfigurations.DefaultTemplateEngineConfiguration.class}) public class ThymeleafAutoConfiguration extends Object;\n// Properties for Thymeleaf.\n@ConfigurationProperties(prefix=\"spring.thymeleaf\") public class ThymeleafProperties extends Object;\n// \npublic static class ThymeleafProperties.Reactive extends Object;\n// \npublic static class ThymeleafProperties.Servlet extends Object;\n// TemplateAvailabilityProvider that provides availability information for Thymeleaf view templates.\npublic class ThymeleafTemplateAvailabilityProvider extends Object implements TemplateAvailabilityProvider;\n", "des": "Auto-configuration for Thymeleaf."}
{"index": 1987, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package transaction\n\n// Callback interface that can be implemented by beans wishing to customize PlatformTransactionManagers whilst retaining default auto-configuration.\n@FunctionalInterface public interface PlatformTransactionManagerCustomizer<T extends org.springframework.transaction.PlatformTransactionManager>;\n// Auto-configuration for Spring transaction.\n@AutoConfiguration @ConditionalOnClass(org.springframework.transaction.PlatformTransactionManager.class) @EnableConfigurationProperties(TransactionProperties.class) public class TransactionAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnBean(org.springframework.transaction.TransactionManager.class) @ConditionalOnMissingBean(org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration.class) public static class TransactionAutoConfiguration.EnableTransactionManagementConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @EnableTransactionManagement(proxyTargetClass=true) @ConditionalOnProperty(prefix=\"spring.aop\", name=\"proxy-target-class\", havingValue=\"true\", matchIfMissing=true) public static class TransactionAutoConfiguration.EnableTransactionManagementConfiguration.CglibAutoProxyConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @EnableTransactionManagement(proxyTargetClass=false) @ConditionalOnProperty(prefix=\"spring.aop\", name=\"proxy-target-class\", havingValue=\"false\") public static class TransactionAutoConfiguration.EnableTransactionManagementConfiguration.JdkDynamicAutoProxyConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnSingleCandidate(org.springframework.transaction.PlatformTransactionManager.class) public static class TransactionAutoConfiguration.TransactionTemplateConfiguration extends Object;\n// A collection of PlatformTransactionManagerCustomizer.\npublic class TransactionManagerCustomizers extends Object;\n// Configuration properties that can be applied to an AbstractPlatformTransactionManager.\n@ConfigurationProperties(prefix=\"spring.transaction\") public class TransactionProperties extends Object implements PlatformTransactionManagerCustomizer<org.springframework.transaction.support.AbstractPlatformTransactionManager>;\n", "des": "Auto-configuration for transaction support."}
{"index": 1988, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package jta\n\n// Auto-configuration for JTA.\n@AutoConfiguration(before={XADataSourceAutoConfiguration.class,ActiveMQAutoConfiguration.class,ArtemisAutoConfiguration.class,HibernateJpaAutoConfiguration.class,TransactionAutoConfiguration.class}) @ConditionalOnClass(jakarta.transaction.Transaction.class) @ConditionalOnProperty(prefix=\"spring.jta\", value=\"enabled\", matchIfMissing=true) @Import(org.springframework.boot.autoconfigure.transaction.jta.JndiJtaConfiguration.class) public class JtaAutoConfiguration extends Object;\n", "des": "Auto-configuration for JTA."}
{"index": 1989, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package validation\n\n// Auto-configuration to configure the validation infrastructure.\n@AutoConfiguration @ConditionalOnClass(jakarta.validation.executable.ExecutableValidator.class) @ConditionalOnResource(resources=\"classpath:META-INF/services/jakarta.validation.spi.ValidationProvider\") @Import(org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor.class) public class ValidationAutoConfiguration extends Object;\n// Callback interface that can be used to customize Configuration.\n@FunctionalInterface public interface ValidationConfigurationCustomizer;\n// Validator implementation that delegates calls to another Validator.\npublic class ValidatorAdapter extends Object implements org.springframework.validation.SmartValidator, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n", "des": "Auto-configuration for (JSR-303) Validation."}
{"index": 1990, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package web\n\n// @Conditional that checks whether the Spring resource handling chain is enabled.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition.class) public @interface ConditionalOnEnabledResourceChain;\n// Configuration properties for web error handling.\npublic class ErrorProperties extends Object;\n// Include error attributes options.\npublic static enum ErrorProperties.IncludeAttribute extends Enum<ErrorProperties.IncludeAttribute>;\n// Include Stacktrace attribute options.\npublic static enum ErrorProperties.IncludeStacktrace extends Enum<ErrorProperties.IncludeStacktrace>;\n// \npublic static class ErrorProperties.Whitelabel extends Object;\n// @ConfigurationProperties for a web server (e.g.\n@ConfigurationProperties(prefix=\"server\", ignoreUnknownFields=true) public class ServerProperties extends Object;\n// Strategies for supporting forward headers.\npublic static enum ServerProperties.ForwardHeadersStrategy extends Enum<ServerProperties.ForwardHeadersStrategy>;\n// Jetty properties.\npublic static class ServerProperties.Jetty extends Object;\n// Jetty access log properties.\npublic static class ServerProperties.Jetty.Accesslog extends Object;\n// Log format for Jetty access logs.\npublic static enum ServerProperties.Jetty.Accesslog.FORMAT extends Enum<ServerProperties.Jetty.Accesslog.FORMAT>;\n// Jetty thread properties.\npublic static class ServerProperties.Jetty.Threads extends Object;\n// Netty properties.\npublic static class ServerProperties.Netty extends Object;\n// Reactive server properties.\npublic static class ServerProperties.Reactive extends Object;\n// \npublic static class ServerProperties.Reactive.Session extends Object;\n// Servlet server properties.\npublic static class ServerProperties.Servlet extends Object;\n// Tomcat properties.\npublic static class ServerProperties.Tomcat extends Object;\n// Tomcat access log properties.\npublic static class ServerProperties.Tomcat.Accesslog extends Object;\n// \npublic static class ServerProperties.Tomcat.Mbeanregistry extends Object;\n// \npublic static class ServerProperties.Tomcat.Remoteip extends Object;\n// Tomcat static resource properties.\npublic static class ServerProperties.Tomcat.Resource extends Object;\n", "des": "Auto-configuration for common web concerns."}
{"index": 1991, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package client\n\n// Auto-configuration for RestTemplate.\n@AutoConfiguration(after=HttpMessageConvertersAutoConfiguration.class) @ConditionalOnClass(org.springframework.web.client.RestTemplate.class) @Conditional(org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration.NotReactiveWebApplicationCondition.class) public class RestTemplateAutoConfiguration extends Object;\n// Configure RestTemplateBuilder with sensible defaults.\npublic final class RestTemplateBuilderConfigurer extends Object;\n", "des": "Auto-configuration for web clients."}
{"index": 1992, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package embedded\n\n// Auto-configuration for embedded servlet and reactive web servers customizations.\n@AutoConfiguration @ConditionalOnNotWarDeployment @ConditionalOnWebApplication @EnableConfigurationProperties(ServerProperties.class) public class EmbeddedWebServerFactoryCustomizerAutoConfiguration extends Object;\n// Nested configuration if Jetty is being used.\n@Configuration(proxyBeanMethods=false) @ConditionalOnClass({org.eclipse.jetty.server.Server.class,org.eclipse.jetty.util.Loader.class,org.eclipse.jetty.webapp.WebAppContext.class}) public static class EmbeddedWebServerFactoryCustomizerAutoConfiguration.JettyWebServerFactoryCustomizerConfiguration extends Object;\n// Nested configuration if Netty is being used.\n@Configuration(proxyBeanMethods=false) @ConditionalOnClass(reactor.netty.http.server.HttpServer.class) public static class EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration extends Object;\n// Nested configuration if Tomcat is being used.\n@Configuration(proxyBeanMethods=false) @ConditionalOnClass({org.apache.catalina.startup.Tomcat.class,org.apache.coyote.UpgradeProtocol.class}) public static class EmbeddedWebServerFactoryCustomizerAutoConfiguration.TomcatWebServerFactoryCustomizerConfiguration extends Object;\n// Nested configuration if Undertow is being used.\n@Configuration(proxyBeanMethods=false) @ConditionalOnClass({io.undertow.Undertow.class,org.xnio.SslClientAuthMode.class}) public static class EmbeddedWebServerFactoryCustomizerAutoConfiguration.UndertowWebServerFactoryCustomizerConfiguration extends Object;\n// Customization for Jetty-specific features common for both Servlet and Reactive servers.\npublic class JettyWebServerFactoryCustomizer extends Object implements org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.embedded.jetty.ConfigurableJettyWebServerFactory>, org.springframework.core.Ordered;\n", "des": "Configuration for embedded reactive and servlet web servers."}
{"index": 1993, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package format\n\n// Formatters for dates, times, and date-times.\npublic class DateTimeFormatters extends Object;\n// FormattingConversionService dedicated to web applications for formatting and converting values to/from the web.\npublic class WebConversionService extends org.springframework.format.support.DefaultFormattingConversionService;\n", "des": "Support classes for web-specific formatting."}
{"index": 1994, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n// Auto-configuration for HttpHandler.\n@AutoConfiguration(after=WebFluxAutoConfiguration.class) @ConditionalOnClass({org.springframework.web.reactive.DispatcherHandler.class,org.springframework.http.server.reactive.HttpHandler.class}) @ConditionalOnWebApplication(type=REACTIVE) @ConditionalOnMissingBean(org.springframework.http.server.reactive.HttpHandler.class) @AutoConfigureOrder(-2147483638) public class HttpHandlerAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) public static class HttpHandlerAutoConfiguration.AnnotationConfig extends Object;\n// Auto-configuration for multipart support in Spring WebFlux.\n@AutoConfiguration @ConditionalOnClass({org.springframework.http.codec.multipart.DefaultPartHttpMessageReader.class,org.springframework.web.reactive.config.WebFluxConfigurer.class}) @ConditionalOnWebApplication(type=REACTIVE) @EnableConfigurationProperties(ReactiveMultipartProperties.class) public class ReactiveMultipartAutoConfiguration extends Object;\n// Configuration properties for configuring multipart support in Spring Webflux.\n@ConfigurationProperties(prefix=\"spring.webflux.multipart\") public class ReactiveMultipartProperties extends Object;\n// Auto-configuration for a reactive web server.\n@AutoConfigureOrder(-2147483648) @AutoConfiguration @ConditionalOnClass(org.springframework.http.ReactiveHttpInputMessage.class) @ConditionalOnWebApplication(type=REACTIVE) @EnableConfigurationProperties(ServerProperties.class) @Import({BeanPostProcessorsRegistrar.class,org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration.EmbeddedTomcat.class,org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration.EmbeddedJetty.class,org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration.EmbeddedUndertow.class,org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration.EmbeddedNetty.class}) public class ReactiveWebServerFactoryAutoConfiguration extends Object;\n", "des": "Auto-configuration for reactive web servers and Spring WebFlux."}
{"index": 1995, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package error\n\n// Abstract base class for ErrorWebExceptionHandler implementations.\npublic abstract class AbstractErrorWebExceptionHandler extends Object implements org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler, org.springframework.beans.factory.InitializingBean;\n// Basic global WebExceptionHandler, rendering ErrorAttributes.\npublic class DefaultErrorWebExceptionHandler extends AbstractErrorWebExceptionHandler;\n// Auto-configuration to render errors through a WebFlux WebExceptionHandler.\n@AutoConfiguration(before=WebFluxAutoConfiguration.class) @ConditionalOnWebApplication(type=REACTIVE) @ConditionalOnClass(org.springframework.web.reactive.config.WebFluxConfigurer.class) @EnableConfigurationProperties({ServerProperties.class,WebProperties.class}) public class ErrorWebFluxAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring WebFlux error handling."}
{"index": 1996, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package client\n\n// Auto-configuration for ClientHttpConnector.\n@AutoConfiguration @ConditionalOnClass(org.springframework.web.reactive.function.client.WebClient.class) @AutoConfigureAfter(SslAutoConfiguration.class) @Import({org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration.ReactorNetty.class,org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration.JettyClient.class,org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration.HttpClient5.class,org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration.JdkClient.class}) public class ClientHttpConnectorAutoConfiguration extends Object;\n// Mapper that allows for custom modification of a HttpClient before it is used as the basis for a ReactorClientHttpConnector.\n@FunctionalInterface public interface ReactorNettyHttpClientMapper;\n// Auto-configuration for WebClient.\n@AutoConfiguration(after={CodecsAutoConfiguration.class,ClientHttpConnectorAutoConfiguration.class}) @ConditionalOnClass(org.springframework.web.reactive.function.client.WebClient.class) public class WebClientAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnBean(org.springframework.boot.web.codec.CodecCustomizer.class) protected static class WebClientAutoConfiguration.WebClientCodecsConfiguration extends Object;\n// WebClientCustomizer that configures codecs for the HTTP client.\npublic class WebClientCodecCustomizer extends Object implements org.springframework.boot.web.reactive.function.client.WebClientCustomizer;\n// Interface that can be used to apply SSL configuration to a WebClient.Builder.\npublic interface WebClientSsl;\n", "des": "Auto-configuration for Spring Framework's functional web client."}
{"index": 1997, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n// @Conditional that only matches when no Filter beans of the specified type are contained in the BeanFactory.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @ConditionalOnMissingBean(parameterizedContainer=org.springframework.boot.web.servlet.FilterRegistrationBean.class) public @interface ConditionalOnMissingFilterBean;\n// Default implementation of JerseyApplicationPath that derives the path from JerseyProperties or the @ApplicationPath annotation.\npublic class DefaultJerseyApplicationPath extends Object implements JerseyApplicationPath;\n// Auto-configuration for the Spring DispatcherServlet.\n@AutoConfigureOrder(-2147483648) @AutoConfiguration(after=ServletWebServerFactoryAutoConfiguration.class) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnClass(org.springframework.web.servlet.DispatcherServlet.class) public class DispatcherServletAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @Conditional(org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration.DefaultDispatcherServletCondition.class) @ConditionalOnClass(jakarta.servlet.ServletRegistration.class) @EnableConfigurationProperties(WebMvcProperties.class) protected static class DispatcherServletAutoConfiguration.DispatcherServletConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @Conditional(org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration.DispatcherServletRegistrationCondition.class) @ConditionalOnClass(jakarta.servlet.ServletRegistration.class) @EnableConfigurationProperties(WebMvcProperties.class) @Import(DispatcherServletConfiguration.class) protected static class DispatcherServletAutoConfiguration.DispatcherServletRegistrationConfiguration extends Object;\n// Interface that can be used by auto-configurations that need path details for the default DispatcherServlet.\n@FunctionalInterface public interface DispatcherServletPath;\n// ServletRegistrationBean for the auto-configured DispatcherServlet.\npublic class DispatcherServletRegistrationBean extends org.springframework.boot.web.servlet.ServletRegistrationBean<org.springframework.web.servlet.DispatcherServlet> implements DispatcherServletPath;\n", "des": "Auto-configuration for servlet web servers and Spring MVC."}
{"index": 1998, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package error\n\n// Abstract base class for error @Controller implementations.\npublic abstract class AbstractErrorController extends Object implements org.springframework.boot.web.servlet.error.ErrorController;\n// Basic global error @Controller, rendering ErrorAttributes.\n@Controller @RequestMapping(\"${server.error.path:${error.path:/error}}\") public class BasicErrorController extends AbstractErrorController;\n// Default ErrorViewResolver implementation that attempts to resolve error views using well known conventions.\npublic class DefaultErrorViewResolver extends Object implements ErrorViewResolver, org.springframework.core.Ordered;\n// Auto-configuration to render errors through an MVC error controller.\n@AutoConfiguration(before=WebMvcAutoConfiguration.class) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnClass({jakarta.servlet.Servlet.class,org.springframework.web.servlet.DispatcherServlet.class}) @EnableConfigurationProperties({ServerProperties.class,WebMvcProperties.class}) public class ErrorMvcAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @ConditionalOnProperty(prefix=\"server.error.whitelabel\", name=\"enabled\", matchIfMissing=true) @Conditional(org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration.ErrorTemplateMissingCondition.class) protected static class ErrorMvcAutoConfiguration.WhitelabelErrorViewConfiguration extends Object;\n// Interface that can be implemented by beans that resolve error views.\n@FunctionalInterface public interface ErrorViewResolver;\n", "des": "Auto-configuration for Spring MVC error handling."}
{"index": 1999, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package webservices\n\n// Auto-configuration for Spring Web Services.\n@AutoConfiguration(after=ServletWebServerFactoryAutoConfiguration.class) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnClass(org.springframework.ws.transport.http.MessageDispatcherServlet.class) @ConditionalOnMissingBean(org.springframework.ws.config.annotation.WsConfigurationSupport.class) @EnableConfigurationProperties(WebServicesProperties.class) public class WebServicesAutoConfiguration extends Object;\n// \n@Configuration(proxyBeanMethods=false) @EnableWs protected static class WebServicesAutoConfiguration.WsConfiguration extends Object;\n// @ConfigurationProperties for Spring Web Services.\n@ConfigurationProperties(prefix=\"spring.webservices\") public class WebServicesProperties extends Object;\n// \npublic static class WebServicesProperties.Servlet extends Object;\n", "des": "Auto-configuration for Spring Web Services."}
{"index": 2000, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package client\n\n// Auto-configuration for WebServiceTemplate.\n@AutoConfiguration @ConditionalOnClass({org.springframework.ws.client.core.WebServiceTemplate.class,org.springframework.oxm.Unmarshaller.class,org.springframework.oxm.Marshaller.class}) public class WebServiceTemplateAutoConfiguration extends Object;\n", "des": "Auto-configuration for Spring Web Services Clients."}
{"index": 2001, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package reactive\n\n// WebSocket customizer for JettyReactiveWebServerFactory.\npublic class JettyWebSocketReactiveWebServerCustomizer extends Object implements org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.embedded.jetty.JettyReactiveWebServerFactory>, org.springframework.core.Ordered;\n// WebSocket customizer for TomcatReactiveWebServerFactory.\npublic class TomcatWebSocketReactiveWebServerCustomizer extends Object implements org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.embedded.tomcat.TomcatReactiveWebServerFactory>, org.springframework.core.Ordered;\n// Auto-configuration for WebSocket reactive server in Tomcat, Jetty or Undertow.\n@AutoConfiguration(before=ReactiveWebServerFactoryAutoConfiguration.class) @ConditionalOnClass({jakarta.servlet.Servlet.class,jakarta.websocket.server.ServerContainer.class}) @ConditionalOnWebApplication(type=REACTIVE) public class WebSocketReactiveAutoConfiguration extends Object;\n", "des": "Auto-configuration for WebSocket support in reactive web servers."}
{"index": 2002, "repo": "spring-boot-autoconfigure-3.1.1", "code": "package servlet\n\n// WebSocket customizer for JettyServletWebServerFactory.\npublic class JettyWebSocketServletWebServerCustomizer extends Object implements org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.embedded.jetty.JettyServletWebServerFactory>, org.springframework.core.Ordered;\n// WebSocket customizer for TomcatServletWebServerFactory.\npublic class TomcatWebSocketServletWebServerCustomizer extends Object implements org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.embedded.tomcat.TomcatServletWebServerFactory>, org.springframework.core.Ordered;\n// WebSocket customizer for UndertowServletWebServerFactory.\npublic class UndertowWebSocketServletWebServerCustomizer extends Object implements org.springframework.boot.web.server.WebServerFactoryCustomizer<org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory>, org.springframework.core.Ordered;\n// Auto-configuration for WebSocket-based messaging.\n@AutoConfiguration(after=JacksonAutoConfiguration.class) @ConditionalOnWebApplication(type=SERVLET) @ConditionalOnClass(org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer.class) public class WebSocketMessagingAutoConfiguration extends Object;\n// Auto configuration for WebSocket servlet server in embedded Tomcat, Jetty or Undertow.\n@AutoConfiguration(before=ServletWebServerFactoryAutoConfiguration.class) @ConditionalOnClass({jakarta.servlet.Servlet.class,jakarta.websocket.server.ServerContainer.class}) @ConditionalOnWebApplication(type=SERVLET) public class WebSocketServletAutoConfiguration extends Object;\n", "des": "Auto-configuration for WebSocket support in servlet web servers."}
{"index": 2003, "repo": "spring-integration-ws-6.1.2", "code": "package ws\n\n// \npublic abstract class AbstractWebServiceInboundGateway extends org.springframework.integration.gateway.MessagingGatewaySupport implements org.springframework.ws.server.endpoint.MessageEndpoint, org.springframework.integration.context.OrderlyShutdownCapable;\n// Base class for outbound Web Service-invoking Messaging Gateways.\npublic abstract class AbstractWebServiceOutboundGateway extends org.springframework.integration.handler.AbstractReplyProducingMessageHandler;\n// A HeaderMapper implementation for mapping to and from a SoapHeader.\npublic class DefaultSoapHeaderMapper extends org.springframework.integration.mapping.AbstractHeaderMapper<org.springframework.ws.soap.SoapMessage> implements SoapHeaderMapper;\n// \npublic class MarshallingWebServiceInboundGateway extends AbstractWebServiceInboundGateway;\n// An outbound Messaging Gateway for invoking Web Services that also supports marshalling and unmarshalling of the request and response messages.\npublic class MarshallingWebServiceOutboundGateway extends AbstractWebServiceOutboundGateway;\n// The WebServiceException extension to indicate that the server endpoint is temporary unavailable.\n@SoapFault(faultCode=RECEIVER) public class ServiceUnavailableException extends org.springframework.ws.WebServiceException;\n// \npublic class SimpleWebServiceInboundGateway extends AbstractWebServiceInboundGateway;\n// An outbound Messaging Gateway for invoking a Web Service.\npublic class SimpleWebServiceOutboundGateway extends AbstractWebServiceOutboundGateway;\n// A convenience interface that extends RequestReplyHeaderMapper, parameterized with SoapHeader.\npublic interface SoapHeaderMapper extends org.springframework.integration.mapping.RequestReplyHeaderMapper<org.springframework.ws.soap.SoapMessage>;\n// Pre-defined header names to be used when storing or retrieving Web Service properties to/from integration Message Headers.\npublic abstract class WebServiceHeaders extends Object;\n", "des": "Provides several inbound and outbound Web Service components."}
{"index": 2004, "repo": "spring-integration-ws-6.1.2", "code": "package config\n\n// \npublic class WebServiceHeaderEnricherParser extends org.springframework.integration.config.xml.HeaderEnricherParserSupport;\n// \npublic class WebServiceInboundGatewayParser extends org.springframework.integration.config.xml.AbstractInboundGatewayParser;\n// Parser for the <outbound-gateway/> element in the 'ws' namespace.\npublic class WebServiceOutboundGatewayParser extends org.springframework.integration.config.xml.AbstractOutboundGatewayParser;\n// The IntegrationConfigurationInitializer implementation for the WebService module.\npublic class WsIntegrationConfigurationInitializer extends Object implements org.springframework.integration.config.IntegrationConfigurationInitializer;\n// \npublic class WsNamespaceHandler extends org.springframework.integration.config.xml.AbstractIntegrationNamespaceHandler;\n", "des": "Contains parser classes for the Web Services namespace support."}
{"index": 2005, "repo": "spring-integration-ws-6.1.2", "code": "package dsl\n\n// Base MessagingGatewaySpec for web services.\npublic abstract class BaseWsInboundGatewaySpec<S extends BaseWsInboundGatewaySpec<S,E>,E extends AbstractWebServiceInboundGateway> extends org.springframework.integration.dsl.MessagingGatewaySpec<S,E>;\n// The base MessageHandlerSpec for AbstractWebServiceOutboundGateways.\npublic abstract class BaseWsOutboundGatewaySpec<S extends BaseWsOutboundGatewaySpec<S,E>,E extends AbstractWebServiceOutboundGateway> extends org.springframework.integration.dsl.MessageHandlerSpec<S,E>;\n// The spec for a MarshallingWebServiceInboundGateway.\npublic class MarshallingWsInboundGatewaySpec extends BaseWsInboundGatewaySpec<MarshallingWsInboundGatewaySpec,MarshallingWebServiceInboundGateway>;\n// The spec for a MarshallingWebServiceOutboundGateway.\npublic class MarshallingWsOutboundGatewaySpec extends BaseWsOutboundGatewaySpec<MarshallingWsOutboundGatewaySpec,MarshallingWebServiceOutboundGateway>;\n// Spec for a MarshallingWebServiceOutboundGateway where an external WebServiceTemplate is not provided.\npublic static class MarshallingWsOutboundGatewaySpec.MarshallingWsOutboundGatewayNoTemplateSpec extends BaseWsOutboundGatewaySpec<MarshallingWsOutboundGatewaySpec.MarshallingWsOutboundGatewayNoTemplateSpec,MarshallingWebServiceOutboundGateway>;\n// The spec for a SimpleWebServiceInboundGateway.\npublic class SimpleWsInboundGatewaySpec extends BaseWsInboundGatewaySpec<SimpleWsInboundGatewaySpec,SimpleWebServiceInboundGateway>;\n// The spec for a SimpleWebServiceOutboundGateway.\npublic class SimpleWsOutboundGatewaySpec extends BaseWsOutboundGatewaySpec<SimpleWsOutboundGatewaySpec,SimpleWebServiceOutboundGateway>;\n// Spec for a SimpleWebServiceOutboundGateway where an external WebServiceTemplate is not provided.\npublic static class SimpleWsOutboundGatewaySpec.SimpleWsOutboundGatewayNoTemplateSpec extends BaseWsOutboundGatewaySpec<SimpleWsOutboundGatewaySpec.SimpleWsOutboundGatewayNoTemplateSpec,SimpleWebServiceOutboundGateway>;\n// Factory class for web service components.\npublic final class Ws extends Object;\n", "des": "Contains classes for DSL support."}
{"index": 2006, "repo": "spring-boot-devtools-3.1.1", "code": "package devtools\n\n// Application that can be used to establish a link to remotely running Spring Boot code.\npublic final class RemoteSpringApplication extends Object;\n", "des": "Spring Boot developer tools."}
{"index": 2007, "repo": "spring-boot-devtools-3.1.1", "code": "package autoconfigure\n\n// Auto-configuration for DevTools-specific DataSource configuration.\n@Conditional({OnEnabledDevToolsCondition.class,org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration.DevToolsDataSourceCondition.class}) @AutoConfiguration(after=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration.class) @Import(org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration.DatabaseShutdownExecutorEntityManagerFactoryDependsOnPostProcessor.class) public class DevToolsDataSourceAutoConfiguration extends Object;\n// Configuration properties for developer tools.\n@ConfigurationProperties(prefix=\"spring.devtools\") public class DevToolsProperties extends Object;\n// LiveReload properties.\npublic static class DevToolsProperties.Livereload extends Object;\n// Restart properties.\npublic static class DevToolsProperties.Restart extends Object;\n// Auto-configuration for DevTools-specific R2DBC configuration.\n@ConditionalOnClass(io.r2dbc.spi.ConnectionFactory.class) @Conditional({OnEnabledDevToolsCondition.class,org.springframework.boot.devtools.autoconfigure.DevToolsR2dbcAutoConfiguration.DevToolsConnectionFactoryCondition.class}) @AutoConfiguration(after=org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration.class) public class DevToolsR2dbcAutoConfiguration extends Object;\n// Auto-configuration for local development support.\n@AutoConfiguration @ConditionalOnInitializedRestarter @EnableConfigurationProperties(DevToolsProperties.class) public class LocalDevToolsAutoConfiguration extends Object;\n// A condition that checks if DevTools should be enabled.\npublic class OnEnabledDevToolsCondition extends org.springframework.boot.autoconfigure.condition.SpringBootCondition;\n// Manages an optional LiveReloadServer.\npublic class OptionalLiveReloadServer extends Object implements org.springframework.beans.factory.InitializingBean;\n", "des": "Auto-configuration for spring-boot-devtools."}
{"index": 2008, "repo": "spring-boot-devtools-3.1.1", "code": "package classpath\n\n// ApplicationEvent containing details of a classpath change.\npublic class ClassPathChangedEvent extends org.springframework.context.ApplicationEvent;\n// Provides access to entries on the classpath that refer to directories.\npublic class ClassPathDirectories extends Object implements Iterable<File>;\n// Encapsulates a FileSystemWatcher to watch the local classpath directories for changes.\npublic class ClassPathFileSystemWatcher extends Object implements org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean, org.springframework.context.ApplicationContextAware;\n// Strategy interface used to determine when a changed classpath file should trigger a full application restart.\n@FunctionalInterface public interface ClassPathRestartStrategy;\n// Ant style pattern based ClassPathRestartStrategy.\npublic class PatternClassPathRestartStrategy extends Object implements ClassPathRestartStrategy;\n", "des": "Support for classpath monitoring."}
{"index": 2009, "repo": "spring-boot-devtools-3.1.1", "code": "package env\n\n// EnvironmentPostProcessor to add devtools properties from the user's home directory.\npublic class DevToolsHomePropertiesPostProcessor extends Object implements org.springframework.boot.env.EnvironmentPostProcessor;\n// EnvironmentPostProcessor to add properties that make sense when working at development time.\n@Order(2147483647) public class DevToolsPropertyDefaultsPostProcessor extends Object implements org.springframework.boot.env.EnvironmentPostProcessor;\n", "des": "DevTools classes relating to Spring Framework's Environment."}
{"index": 2010, "repo": "spring-boot-devtools-3.1.1", "code": "package filewatch\n\n// A single file that has changed.\npublic final class ChangedFile extends Object;\n// Change types.\npublic static enum ChangedFile.Type extends Enum<ChangedFile.Type>;\n// A collections of files from a specific source directory that have changed.\npublic final class ChangedFiles extends Object implements Iterable<ChangedFile>;\n// Callback interface when file changes are detected.\n@FunctionalInterface public interface FileChangeListener;\n// Watches specific directories for file changes.\npublic class FileSystemWatcher extends Object;\n// Factory used to create new FileSystemWatcher instances.\n@FunctionalInterface public interface FileSystemWatcherFactory;\n// Repository used by FileSystemWatcher to save file/directory snapshots across restarts.\npublic interface SnapshotStateRepository;\n", "des": "Class to watch the local filesystem for changes."}
{"index": 2011, "repo": "spring-boot-devtools-3.1.1", "code": "package livereload\n\n// A livereload server.\npublic class LiveReloadServer extends Object;\n", "des": "Support for the livereload protocol."}
{"index": 2012, "repo": "spring-boot-devtools-3.1.1", "code": "package logger\n\n// Devtools deferred logging support.\npublic final class DevToolsLogFactory extends Object;\n", "des": "Devtools specific logging concerns."}
{"index": 2013, "repo": "spring-boot-devtools-3.1.1", "code": "package client\n\n// Listens and pushes any classpath updates to a remote endpoint.\npublic class ClassPathChangeUploader extends Object implements org.springframework.context.ApplicationListener<ClassPathChangedEvent>;\n// ClientHttpRequestInterceptor to populate arbitrary HTTP headers with a value.\npublic class HttpHeaderInterceptor extends Object implements org.springframework.http.client.ClientHttpRequestInterceptor;\n// Configuration used to connect to remote Spring Boot applications.\n@Configuration(proxyBeanMethods=false) @EnableConfigurationProperties(DevToolsProperties.class) public class RemoteClientConfiguration extends Object implements org.springframework.beans.factory.InitializingBean;\n", "des": "Client support for a remotely running Spring Boot application."}
{"index": 2014, "repo": "spring-boot-devtools-3.1.1", "code": "package server\n\n// Provides access control for a Dispatcher.\n@FunctionalInterface public interface AccessManager;\n// Dispatcher used to route incoming remote server requests to a Handler.\npublic class Dispatcher extends Object;\n// Servlet filter providing integration with the remote server Dispatcher.\npublic class DispatcherFilter extends Object implements jakarta.servlet.Filter;\n// A single handler that is able to process an incoming remote server request.\n@FunctionalInterface public interface Handler;\n// Interface to provide a mapping between a ServerHttpRequest and a Handler.\n@FunctionalInterface public interface HandlerMapper;\n// AccessManager that checks for the presence of an HTTP header secret.\npublic class HttpHeaderAccessManager extends Object implements AccessManager;\n// Handler that responds with a specific HttpStatus.\npublic class HttpStatusHandler extends Object implements Handler;\n// HandlerMapper implementation that maps incoming URLs.\npublic class UrlHandlerMapper extends Object implements HandlerMapper;\n", "des": "Server support for a remotely running Spring Boot application."}
{"index": 2015, "repo": "spring-boot-devtools-3.1.1", "code": "package restart\n\n// Utility to determine if a Java agent based reloader (e.g.\npublic abstract class AgentReloader extends Object;\n// @Conditional that only matches when the RestartInitializer has been applied with non null URLs.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Conditional(org.springframework.boot.devtools.restart.OnInitializedRestarterCondition.class) public @interface ConditionalOnInitializedRestarter;\n// Default RestartInitializer that only enable initial restart when running a standard \"main\" method.\npublic class DefaultRestartInitializer extends Object implements RestartInitializer;\n// Strategy used to handle launch failures.\n@FunctionalInterface public interface FailureHandler;\n// Various outcomes for the handler.\npublic static enum FailureHandler.Outcome extends Enum<FailureHandler.Outcome>;\n// ApplicationListener to initialize the Restarter.\npublic class RestartApplicationListener extends Object implements org.springframework.context.ApplicationListener<org.springframework.context.ApplicationEvent>, org.springframework.core.Ordered;\n// Allows a running application to be restarted with an updated classpath.\npublic class Restarter extends Object;\n// Strategy interface used to initialize a Restarter.\n@FunctionalInterface public interface RestartInitializer;\n// Listener that is notified of application restarts.\n@FunctionalInterface public interface RestartListener;\n// Restart @Scope Annotation used to indicate that a bean should remain between restarts.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Scope(\"restart\") public @interface RestartScope;\n// Support for a 'restart' Scope that allows beans to remain between restarts.\npublic class RestartScopeInitializer extends Object implements org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>;\n", "des": "Application restart support."}
{"index": 2016, "repo": "spring-boot-devtools-3.1.1", "code": "package classloader\n\n// A single file that may be served from a ClassLoader.\npublic class ClassLoaderFile extends Object implements Serializable;\n// The kinds of class load files.\npublic static enum ClassLoaderFile.Kind extends Enum<ClassLoaderFile.Kind>;\n// A container for files that may be served from a ClassLoader.\n@FunctionalInterface public interface ClassLoaderFileRepository;\n// ClassLoaderFileRepository that maintains a collection of ClassLoaderFile items grouped by source directories.\npublic class ClassLoaderFiles extends Object implements ClassLoaderFileRepository, Serializable;\n// An individual source directory that is being managed by the collection.\npublic static class ClassLoaderFiles.SourceDirectory extends Object implements Serializable;\n// URLStreamHandler for the contents of a ClassLoaderFile.\npublic class ClassLoaderFileURLStreamHandler extends URLStreamHandler;\n// Disposable ClassLoader used to support application restarting.\npublic class RestartClassLoader extends URLClassLoader implements org.springframework.core.SmartClassLoader;\n", "des": "Classloaders used for reload support."}
{"index": 2017, "repo": "spring-boot-devtools-3.1.1", "code": "package server\n\n// Default implementation of SourceDirectoryUrlFilter that attempts to match URLs using common naming conventions.\npublic class DefaultSourceDirectoryUrlFilter extends Object implements SourceDirectoryUrlFilter;\n// An HTTP server that can be used to upload updated ClassLoaderFiles and trigger restarts.\npublic class HttpRestartServer extends Object;\n// Adapts HttpRestartServer to a Handler.\npublic class HttpRestartServerHandler extends Object implements Handler;\n// Server used to restart the current application with updated ClassLoaderFiles.\npublic class RestartServer extends Object;\n// Filter URLs based on a source directory name.\n@FunctionalInterface public interface SourceDirectoryUrlFilter;\n", "des": "Remote restart server."}
{"index": 2018, "repo": "spring-boot-devtools-3.1.1", "code": "package settings\n\n// DevTools settings loaded from /META-INF/spring-devtools.properties files.\npublic class DevToolsSettings extends Object;\n", "des": "Classes for loading DevTools settings."}
{"index": 2019, "repo": "spring-boot-devtools-3.1.1", "code": "package system\n\n// Utility to deduce if DevTools should be enabled in the current context.\npublic final class DevToolsEnablementDeducer extends Object;\n", "des": "Devtools system support classes."}
{"index": 2020, "repo": "spring-boot-devtools-3.1.1", "code": "package client\n\n// TunnelConnection implementation that uses HTTP to transfer data.\npublic class HttpTunnelConnection extends Object implements TunnelConnection;\n// The client side component of a socket tunnel.\npublic class TunnelClient extends Object implements org.springframework.beans.factory.SmartInitializingSingleton;\n// Listener that can be used to receive TunnelClient events.\npublic interface TunnelClientListener;\n// Interface used to manage socket tunnel connections.\n@FunctionalInterface public interface TunnelConnection;\n", "des": "Client side TCP tunnel support."}
{"index": 2021, "repo": "spring-boot-devtools-3.1.1", "code": "package payload\n\n// Encapsulates a payload data sent over a HTTP tunnel.\npublic class HttpTunnelPayload extends Object;\n// Utility class that forwards HttpTunnelPayload instances to a destination channel, respecting sequence order.\npublic class HttpTunnelPayloadForwarder extends Object;\n", "des": "Classes to deal with payloads sent over an HTTP tunnel."}
{"index": 2022, "repo": "spring-boot-devtools-3.1.1", "code": "package server\n\n// A server that can be used to tunnel TCP traffic over HTTP.\npublic class HttpTunnelServer extends Object;\n// Encapsulates an HTTP request/response pair.\nprotected static class HttpTunnelServer.HttpConnection extends Object;\n// Adapts a HttpTunnelServer to a Handler.\npublic class HttpTunnelServerHandler extends Object implements Handler;\n// Strategy interface to provide access to a port (which may change if an existing connection is closed).\n@FunctionalInterface public interface PortProvider;\n// Socket based TargetServerConnection.\npublic class SocketTargetServerConnection extends Object implements TargetServerConnection;\n// PortProvider for a static port that won't change.\npublic class StaticPortProvider extends Object implements PortProvider;\n// Manages the connection to the ultimate tunnel target server.\n@FunctionalInterface public interface TargetServerConnection;\n", "des": "Server side TCP tunnel support."}
{"index": 2023, "repo": "spring-messaging-6.0.11", "code": "package messaging\n\n// A generic message representation with headers and body.\npublic interface Message<T>;\n// Defines methods for sending messages.\n@FunctionalInterface public interface MessageChannel;\n// Exception that indicates an error occurred during message delivery.\npublic class MessageDeliveryException extends MessagingException;\n// Simple contract for handling a Message.\n@FunctionalInterface public interface MessageHandler;\n// Exception that indicates an error occurred during message handling.\npublic class MessageHandlingException extends MessagingException;\n// The headers for a Message.\npublic class MessageHeaders extends Object implements Map<String,Object>, Serializable;\n// The base exception for any failures related to messaging.\npublic class MessagingException extends org.springframework.core.NestedRuntimeException;\n// A MessageChannel from which messages may be actively received through polling.\npublic interface PollableChannel extends MessageChannel;\n// Reactive contract for handling a Message.\n@FunctionalInterface public interface ReactiveMessageHandler;\n// A MessageChannel that maintains a registry of subscribers and invokes them to handle messages sent through this channel.\npublic interface SubscribableChannel extends MessageChannel;\n", "des": "Support for working with messaging APIs and protocols."}
{"index": 2024, "repo": "spring-messaging-6.0.11", "code": "package converter\n\n// Common base class for plain JSON converters, e.g.\npublic abstract class AbstractJsonMessageConverter extends AbstractMessageConverter;\n// Abstract base class for SmartMessageConverter implementations including support for common properties and a partial implementation of the conversion methods, mainly to check if the converter supports the conversion based on the payload class and MIME type.\npublic abstract class AbstractMessageConverter extends Object implements SmartMessageConverter;\n// A MessageConverter that supports MIME type \"application/octet-stream\" with the payload converted to and from a byte[].\npublic class ByteArrayMessageConverter extends AbstractMessageConverter;\n// A MessageConverter that delegates to a list of registered converters to be invoked until one of them returns a non-null result.\npublic class CompositeMessageConverter extends Object implements SmartMessageConverter;\n// Resolve the content type for a message.\n@FunctionalInterface public interface ContentTypeResolver;\n// A default ContentTypeResolver that checks the MessageHeaders.CONTENT_TYPE header or falls back to a default value.\npublic class DefaultContentTypeResolver extends Object implements ContentTypeResolver;\n// An extension of the SimpleMessageConverter that uses a ConversionService to convert the payload of the message to the requested type.\npublic class GenericMessageConverter extends SimpleMessageConverter;\n// Implementation of MessageConverter that can read and write JSON using Google Gson.\npublic class GsonMessageConverter extends AbstractJsonMessageConverter;\n// Implementation of MessageConverter that can read and write JSON using the JSON Binding API.\npublic class JsonbMessageConverter extends AbstractJsonMessageConverter;\n// Implementation of MessageConverter that can read and write JSON using kotlinx.serialization.\npublic class KotlinSerializationJsonMessageConverter extends AbstractJsonMessageConverter;\n// A Jackson 2 based MessageConverter implementation.\npublic class MappingJackson2MessageConverter extends AbstractMessageConverter;\n// Implementation of MessageConverter that can read and write XML using Spring's Marshaller and Unmarshaller abstractions.\npublic class MarshallingMessageConverter extends AbstractMessageConverter;\n// An exception raised by MessageConverter implementations.\npublic class MessageConversionException extends MessagingException;\n// A converter to turn the payload of a Message from serialized form to a typed Object and vice versa.\npublic interface MessageConverter;\n", "des": "Provides support for message conversion."}
{"index": 2025, "repo": "spring-messaging-6.0.11", "code": "package core\n\n// An extension of AbstractMessagingTemplate that adds operations for sending messages to a resolvable destination name.\npublic abstract class AbstractDestinationResolvingMessagingTemplate<D> extends AbstractMessagingTemplate<D> implements DestinationResolvingMessageSendingOperations<D>, DestinationResolvingMessageReceivingOperations<D>, DestinationResolvingMessageRequestReplyOperations<D>;\n// An extension of AbstractMessageSendingTemplate that adds support for receive style operations as defined by MessageReceivingOperations.\npublic abstract class AbstractMessageReceivingTemplate<D> extends AbstractMessageSendingTemplate<D> implements MessageReceivingOperations<D>;\n// Abstract base class for implementations of MessageSendingOperations.\npublic abstract class AbstractMessageSendingTemplate<D> extends Object implements MessageSendingOperations<D>;\n// An extension of AbstractMessageReceivingTemplate that adds support for request-reply style operations as defined by MessageRequestReplyOperations.\npublic abstract class AbstractMessagingTemplate<D> extends AbstractMessageReceivingTemplate<D> implements MessageRequestReplyOperations<D>;\n// An implementation of DestinationResolver that interprets a destination name as the bean name of a MessageChannel and looks up the bean in the configured BeanFactory.\npublic class BeanFactoryMessageChannelDestinationResolver extends Object implements DestinationResolver<MessageChannel>, org.springframework.beans.factory.BeanFactoryAware;\n// DestinationResolver implementation that proxies a target DestinationResolver, caching its CachingDestinationResolverProxy.resolveDestination(java.lang.String) results.\npublic class CachingDestinationResolverProxy<D> extends Object implements DestinationResolver<D>, org.springframework.beans.factory.InitializingBean;\n// Thrown by a DestinationResolver when it cannot resolve a destination.\npublic class DestinationResolutionException extends MessagingException;\n// Strategy for resolving a String destination name to an actual destination of type <D>.\n@FunctionalInterface public interface DestinationResolver<D>;\n// Extends MessageReceivingOperations and adds operations for receiving messages from a destination specified as a (resolvable) String name.\npublic interface DestinationResolvingMessageReceivingOperations<D> extends MessageReceivingOperations<D>;\n// Extends MessageRequestReplyOperations and adds operations for sending and receiving messages to and from a destination specified as a (resolvable) String name.\npublic interface DestinationResolvingMessageRequestReplyOperations<D> extends MessageRequestReplyOperations<D>;\n", "des": "Defines interfaces and implementation classes for messaging templates."}
{"index": 2026, "repo": "spring-messaging-6.0.11", "code": "package handler\n\n// Base class for MessageCondition's that pre-declares abstract methods AbstractMessageCondition.getContent() and AbstractMessageCondition.getToStringInfix() in order to provide implementations of AbstractMessageCondition.equals(Object), AbstractMessageCondition.hashCode(), and AbstractMessageCondition.toString().\npublic abstract class AbstractMessageCondition<T extends AbstractMessageCondition<T>> extends Object implements MessageCondition<T>;\n// Composite MessageCondition that delegates to other message conditions.\npublic class CompositeMessageCondition extends Object implements MessageCondition<CompositeMessageCondition>;\n// MessageCondition to match the destination header of a Message against one or more patterns through a RouteMatcher.\npublic class DestinationPatternsMessageCondition extends AbstractMessageCondition<DestinationPatternsMessageCondition>;\n// Encapsulates information about a handler method consisting of a method and a bean.\npublic class HandlerMethod extends Object;\n// Contract for mapping conditions to messages.\npublic interface MessageCondition<T>;\n// Represents a Spring-managed bean with cross-cutting functionality to be applied to one or more Spring beans with annotation-based message handling methods.\npublic interface MessagingAdviceBean extends org.springframework.core.Ordered;\n", "des": "Basic abstractions for working with message handler methods."}
{"index": 2027, "repo": "spring-messaging-6.0.11", "code": "package annotation\n\n// Annotation that indicates a method parameter should be bound to a template variable in a destination template string.\n@Target(PARAMETER) @Retention(RUNTIME) @Documented public @interface DestinationVariable;\n// Annotation which indicates that a method parameter should be bound to a message header.\n@Target(PARAMETER) @Retention(RUNTIME) @Documented public @interface Header;\n// Annotation which indicates that a method parameter should be bound to the headers of a message.\n@Target(PARAMETER) @Retention(RUNTIME) @Documented public @interface Headers;\n// Annotation for handling exceptions thrown from message-handling methods within a specific handler class.\n@Target(METHOD) @Retention(RUNTIME) @Documented @Reflective(MessageMappingReflectiveProcessor.class) public @interface MessageExceptionHandler;\n// Annotation for mapping a Message onto a message-handling method by matching the declared patterns to a destination extracted from the message.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Reflective(MessageMappingReflectiveProcessor.class) public @interface MessageMapping;\n// ReflectiveProcessor implementation for types annotated with @MessageMapping, @SubscribeMapping and @MessageExceptionHandler.\npublic class MessageMappingReflectiveProcessor extends Object implements org.springframework.aot.hint.annotation.ReflectiveProcessor;\n// Annotation that binds a method parameter to the payload of a message.\n@Target({PARAMETER,METHOD}) @Retention(RUNTIME) @Documented public @interface Payload;\n// Annotation that indicates a method's return value should be converted to a Message if necessary and sent to the specified destination.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented public @interface SendTo;\n// Common annotation value constants.\npublic interface ValueConstants;\n", "des": "Annotations and support classes for handling messages."}
{"index": 2028, "repo": "spring-messaging-6.0.11", "code": "package reactive\n\n// Abstract base class to resolve method arguments from a named value, e.g.\npublic abstract class AbstractNamedValueMethodArgumentResolver extends Object implements SyncHandlerMethodArgumentResolver;\n// Represents a named value declaration.\nprotected static class AbstractNamedValueMethodArgumentResolver.NamedValueInfo extends Object;\n// No-op resolver for method arguments of type Continuation.\npublic class ContinuationHandlerMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n// Resolve for @DestinationVariable method parameters.\npublic class DestinationVariableMethodArgumentResolver extends AbstractNamedValueMethodArgumentResolver;\n// Resolver for @Header arguments.\npublic class HeaderMethodArgumentResolver extends AbstractNamedValueMethodArgumentResolver;\n// Argument resolver for headers.\npublic class HeadersMethodArgumentResolver extends Object implements SyncHandlerMethodArgumentResolver;\n// Extension of AbstractMethodMessageHandler for reactive, non-blocking handling of messages via @MessageMapping methods.\npublic class MessageMappingMessageHandler extends AbstractMethodMessageHandler<CompositeMessageCondition> implements org.springframework.context.EmbeddedValueResolverAware;\n// A resolver to extract and decode the payload of a message using a Decoder, where the payload is expected to be a Publisher of DataBuffer.\npublic class PayloadMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n", "des": "Support classes for working with annotated message-handling methods with non-blocking, reactive contracts."}
{"index": 2029, "repo": "spring-messaging-6.0.11", "code": "package support\n\n// Abstract base class to resolve method arguments from a named value, e.g.\npublic abstract class AbstractNamedValueMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n// Represents a named value declaration.\nprotected static class AbstractNamedValueMethodArgumentResolver.NamedValueInfo extends Object;\n// A subclass of AbstractExceptionHandlerMethodResolver that looks for MessageExceptionHandler-annotated methods in a given class.\npublic class AnnotationExceptionHandlerMethodResolver extends AbstractExceptionHandlerMethodResolver;\n// The default MessageHandlerMethodFactory implementation creating an InvocableHandlerMethod with the necessary HandlerMethodArgumentResolver instances to detect and process most of the use cases defined by MessageMapping.\npublic class DefaultMessageHandlerMethodFactory extends Object implements MessageHandlerMethodFactory, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean;\n// Resolve for @DestinationVariable method parameters.\npublic class DestinationVariableMethodArgumentResolver extends AbstractNamedValueMethodArgumentResolver;\n// Resolver for @Header arguments.\npublic class HeaderMethodArgumentResolver extends AbstractNamedValueMethodArgumentResolver;\n// Argument resolver for headers.\npublic class HeadersMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n// A factory for InvocableHandlerMethod that is suitable to process an incoming Message\npublic interface MessageHandlerMethodFactory;\n// HandlerMethodArgumentResolver for Message method arguments.\npublic class MessageMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n// Exception to be thrown when a method argument fails validation perhaps as a result of @Valid style validation, or perhaps because it is required.\npublic class MethodArgumentNotValidException extends MethodArgumentResolutionException;\n// Exception that indicates that a method argument has not the expected type.\npublic class MethodArgumentTypeMismatchException extends MethodArgumentResolutionException;\n// A resolver to extract and convert the payload of a message using a MessageConverter.\npublic class PayloadMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n", "des": "Support classes for working with annotated message-handling methods."}
{"index": 2030, "repo": "spring-messaging-6.0.11", "code": "package invocation\n\n// Convenient base class for AsyncHandlerMethodReturnValueHandler implementations that support only asynchronous (Future-like) return values and merely serve as adapters of such types to Spring's ListenableFuture.\npublic abstract class AbstractAsyncReturnValueHandler extends Object implements AsyncHandlerMethodReturnValueHandler;\n// Cache exception handling method mappings and provide options to look up a method that should handle an exception.\npublic abstract class AbstractExceptionHandlerMethodResolver extends Object;\n// Abstract base class for HandlerMethod-based message handling.\npublic abstract class AbstractMethodMessageHandler<T> extends Object implements MessageHandler, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean;\n// An extension of HandlerMethodReturnValueHandler for handling async, Future-like return value types that support success and error callbacks.\npublic interface AsyncHandlerMethodReturnValueHandler extends HandlerMethodReturnValueHandler;\n// Support for CompletableFuture (and as of 4.3.7 also CompletionStage) as a return value type.\npublic class CompletableFutureReturnValueHandler extends AbstractAsyncReturnValueHandler;\n// Strategy interface for resolving method parameters into argument values in the context of a given Message.\npublic interface HandlerMethodArgumentResolver;\n// Resolves method parameters by delegating to a list of registered HandlerMethodArgumentResolvers.\npublic class HandlerMethodArgumentResolverComposite extends Object implements HandlerMethodArgumentResolver;\n// Strategy interface to handle the value returned from the invocation of a method handling a Message.\npublic interface HandlerMethodReturnValueHandler;\n// A HandlerMethodReturnValueHandler that wraps and delegates to others.\npublic class HandlerMethodReturnValueHandlerComposite extends Object implements AsyncHandlerMethodReturnValueHandler;\n// Extension of HandlerMethod that invokes the underlying method with argument values resolved from the current HTTP request through a list of HandlerMethodArgumentResolver.\npublic class InvocableHandlerMethod extends HandlerMethod;\n// \n@Deprecated(since=\"6.0\") public class ListenableFutureReturnValueHandler extends AbstractAsyncReturnValueHandler;\n// Common exception resulting from the invocation of HandlerMethodArgumentResolver.\npublic class MethodArgumentResolutionException extends MessagingException;\n// Support for single-value reactive types (like Mono or Single) as a return value type.\npublic class ReactiveReturnValueHandler extends AbstractAsyncReturnValueHandler;\n", "des": "Common infrastructure for invoking message handler methods."}
{"index": 2031, "repo": "spring-messaging-6.0.11", "code": "package reactive\n\n// Base class for a return value handler that encodes return values to Flux<DataBuffer> through the configured Encoders.\npublic abstract class AbstractEncoderMethodReturnValueHandler extends Object implements HandlerMethodReturnValueHandler;\n// Abstract base class for reactive HandlerMethod-based message handling.\npublic abstract class AbstractMethodMessageHandler<T> extends Object implements ReactiveMessageHandler, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.BeanNameAware;\n// Assist with configuration for handler method argument resolvers.\npublic class ArgumentResolverConfigurer extends Object;\n// Strategy interface for resolving method parameters into argument values in the context of a given Message.\npublic interface HandlerMethodArgumentResolver;\n// Resolves method parameters by delegating to a list of registered HandlerMethodArgumentResolvers.\npublic class HandlerMethodArgumentResolverComposite extends Object implements HandlerMethodArgumentResolver;\n// Handle the return value from the invocation of an annotated Message handling method.\npublic interface HandlerMethodReturnValueHandler;\n// A HandlerMethodReturnValueHandler that wraps and delegates to others.\npublic class HandlerMethodReturnValueHandlerComposite extends Object implements HandlerMethodReturnValueHandler;\n// Extension of HandlerMethod that invokes the underlying method with argument values resolved from the current HTTP request through a list of HandlerMethodArgumentResolver.\npublic class InvocableHandlerMethod extends HandlerMethod;\n// Assist with configuration for handler method return value handlers.\npublic class ReturnValueHandlerConfigurer extends Object;\n// An extension of HandlerMethodArgumentResolver for implementations that are synchronous in nature and do not block to resolve values.\npublic interface SyncHandlerMethodArgumentResolver extends HandlerMethodArgumentResolver;\n", "des": "Common infrastructure for invoking message handler methods with non-blocking, and reactive contracts."}
{"index": 2032, "repo": "spring-messaging-6.0.11", "code": "package rsocket\n\n// Default MetadataExtractor implementation that relies on Decoders to deserialize the content of metadata entries.\npublic class DefaultMetadataExtractor extends Object implements MetadataExtractor, MetadataExtractorRegistry;\n// Strategy to extract a map of value(s) from Payload metadata, which could be composite metadata with multiple entries.\npublic interface MetadataExtractor;\n// Stores registrations of extractors for metadata entries.\npublic interface MetadataExtractorRegistry;\n// Static utility methods to create Payload from DataBuffers and vice versa.\npublic abstract class PayloadUtils extends Object;\n// Strategy to apply configuration to an RSocketConnector.\n@FunctionalInterface public interface RSocketConnectorConfigurer;\n// A thin wrapper around a sending RSocket with a fluent API accepting and returning higher level Objects for input and for output, along with methods to prepare routing and other metadata.\npublic interface RSocketRequester extends reactor.core.Disposable;\n// Builder to create a requester by connecting to a server.\npublic static interface RSocketRequester.Builder;\n// Spec for providing additional composite metadata entries.\npublic static interface RSocketRequester.MetadataSpec<S extends RSocketRequester.MetadataSpec<S>>;\n// Spec to declare the input for an RSocket request.\npublic static interface RSocketRequester.RequestSpec extends RSocketRequester.MetadataSpec<RSocketRequester.RequestSpec>, RSocketRequester.RetrieveSpec;\n// Spec to declare the expected output for an RSocket request.\npublic static interface RSocketRequester.RetrieveSpec;\n// Access to strategies for use by RSocket requester and responder components.\npublic interface RSocketStrategies;\n// The builder options for creating RSocketStrategies.\npublic static interface RSocketStrategies.Builder;\n", "des": "Support for the RSocket protocol."}
{"index": 2033, "repo": "spring-messaging-6.0.11", "code": "package annotation\n\n// Annotation to map the initial ConnectionSetupPayload and subsequent metadata pushes onto a handler method.\n@Target(METHOD) @Retention(RUNTIME) @Documented public @interface ConnectMapping;\n", "des": "Annotations and support classes for handling RSocket streams."}
{"index": 2034, "repo": "spring-messaging-6.0.11", "code": "package support\n\n// A condition to assist with mapping onto handler methods based on the RSocket frame type.\npublic class RSocketFrameTypeMessageCondition extends AbstractMessageCondition<RSocketFrameTypeMessageCondition>;\n// Extension of MessageMappingMessageHandler for handling RSocket requests with @ConnectMapping and @MessageMapping methods.\npublic class RSocketMessageHandler extends MessageMappingMessageHandler;\n// Extension of AbstractEncoderMethodReturnValueHandler that handles encoded content by wrapping data buffers as RSocket payloads and by passing those through the RSocketPayloadReturnValueHandler.RESPONSE_HEADER header.\npublic class RSocketPayloadReturnValueHandler extends AbstractEncoderMethodReturnValueHandler;\n// Resolves arguments of type RSocket that can be used for making requests to the remote peer.\npublic class RSocketRequesterMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n", "des": "Support classes for working with annotated RSocket stream handling methods."}
{"index": 2035, "repo": "spring-messaging-6.0.11", "code": "package service\n\n// RSocketServiceArgumentResolver for a @DestinationVariable annotated argument.\npublic class DestinationVariableArgumentResolver extends Object implements RSocketServiceArgumentResolver;\n// RSocketServiceArgumentResolver for metadata entries.\npublic class MetadataArgumentResolver extends Object implements RSocketServiceArgumentResolver;\n// RSocketServiceArgumentResolver for @Payload annotated arguments.\npublic class PayloadArgumentResolver extends Object implements RSocketServiceArgumentResolver;\n// Annotation to declare a method on an RSocket service interface as an RSocket endpoint.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Reflective(org.springframework.messaging.rsocket.service.RSocketExchangeReflectiveProcessor.class) public @interface RSocketExchange;\n// Container for RSocket request values extracted from an @RSocketExchange-annotated method and argument values passed to it.\npublic final class RSocketRequestValues extends Object;\n// Builder for RSocketRequestValues.\npublic static final class RSocketRequestValues.Builder extends Object;\n// Resolve an argument from an @RSocketExchange-annotated method to one or more RSocket request values.\npublic interface RSocketServiceArgumentResolver;\n// Factory for creating a client proxy given an RSocket service interface with @RSocketExchange methods.\npublic final class RSocketServiceProxyFactory extends Object;\n// Builder to create an RSocketServiceProxyFactory.\npublic static final class RSocketServiceProxyFactory.Builder extends Object;\n", "des": "Annotations to declare an RSocket service contract with request methods along with a proxy factory backed by an RSocketRequester."}
{"index": 2036, "repo": "spring-messaging-6.0.11", "code": "package simp\n\n// A wrapper class for access to attributes associated with a SiMP session (e.g.\npublic class SimpAttributes extends Object;\n// Holder class to expose SiMP attributes associated with a session (e.g.\npublic abstract class SimpAttributesContextHolder extends Object;\n// Holds the shared logger named \"org.springframework.web.SimpLogging\" to use for STOMP over WebSocket messaging when logging for \"org.springframework.messaging.simp\" is off but logging for \"org.springframework.web\" is on.\npublic abstract class SimpLogging extends Object;\n// A base class for working with message headers in simple messaging protocols that support basic messaging patterns.\npublic class SimpMessageHeaderAccessor extends NativeMessageHeaderAccessor;\n// MessageCondition for SImple Messaging Protocols.\npublic class SimpMessageMappingInfo extends Object implements MessageCondition<SimpMessageMappingInfo>;\n// A specialization of MessageSendingOperations with methods for use with the Spring Framework support for Simple Messaging Protocols (like STOMP).\npublic interface SimpMessageSendingOperations extends MessageSendingOperations<String>;\n// A generic representation of different kinds of messages found in simple messaging protocols like STOMP.\npublic enum SimpMessageType extends Enum<SimpMessageType>;\n// MessageCondition that matches by the message type obtained via SimpMessageHeaderAccessor.getMessageType(Map).\npublic class SimpMessageTypeMessageCondition extends AbstractMessageCondition<SimpMessageTypeMessageCondition>;\n// An implementation of SimpMessageSendingOperations.\npublic class SimpMessagingTemplate extends AbstractMessageSendingTemplate<String> implements SimpMessageSendingOperations;\n// A Scope implementation exposing the attributes of a SiMP session (e.g.\npublic class SimpSessionScope extends Object implements org.springframework.beans.factory.config.Scope;\n", "des": "Generic support for Simple Messaging Protocols including protocols such as STOMP."}
{"index": 2037, "repo": "spring-messaging-6.0.11", "code": "package annotation\n\n// Indicates the return value of a message-handling method should be sent as a Message to the specified destination(s) further prepended with \"/user/{username}\" where the user name is extracted from the headers of the input message being handled.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented public @interface SendToUser;\n// Annotation for mapping subscription messages onto specific handler methods based on the destination of a subscription.\n@Target(METHOD) @Retention(RUNTIME) @Documented @Reflective(MessageMappingReflectiveProcessor.class) public @interface SubscribeMapping;\n", "des": "Annotations and for handling messages from SImple Messaging Protocols such as STOMP."}
{"index": 2038, "repo": "spring-messaging-6.0.11", "code": "package support\n\n// MessagingException thrown when a session is missing.\npublic class MissingSessionUserException extends MessagingException;\n// Resolver for arguments of type Principal, including Optional<Principal>.\npublic class PrincipalMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n// A HandlerMethodReturnValueHandler for sending to destinations specified in a SendTo or SendToUser method-level annotations.\npublic class SendToMethodReturnValueHandler extends Object implements HandlerMethodReturnValueHandler;\n// A handler for messages delegating to @MessageMapping and @SubscribeMapping annotated methods.\npublic class SimpAnnotationMethodMessageHandler extends AbstractMethodMessageHandler<SimpMessageMappingInfo> implements org.springframework.context.EmbeddedValueResolverAware, org.springframework.context.SmartLifecycle;\n// HandlerMethodReturnValueHandler for replying directly to a subscription.\npublic class SubscriptionMethodReturnValueHandler extends Object implements HandlerMethodReturnValueHandler;\n", "des": "Support classes for handling messages from simple messaging protocols (like STOMP)."}
{"index": 2039, "repo": "spring-messaging-6.0.11", "code": "package broker\n\n// Abstract base class for a MessageHandler that broker messages to registered subscribers.\npublic abstract class AbstractBrokerMessageHandler extends Object implements MessageHandler, org.springframework.context.ApplicationEventPublisherAware, org.springframework.context.SmartLifecycle;\n// Abstract base class for implementations of SubscriptionRegistry that looks up information in messages but delegates to abstract methods for the actual storage and retrieval.\npublic abstract class AbstractSubscriptionRegistry extends Object implements SubscriptionRegistry;\n// Event raised when a broker's availability changes.\npublic class BrokerAvailabilityEvent extends org.springframework.context.ApplicationEvent;\n// Implementation of SubscriptionRegistry that stores subscriptions in memory and uses a PathMatcher for matching destinations.\npublic class DefaultSubscriptionRegistry extends AbstractSubscriptionRegistry;\n// Decorator for an ExecutorSubscribableChannel that ensures messages are processed in the order they were published to the channel.\npublic class OrderedMessageChannelDecorator extends Object implements MessageChannel;\n// A \"simple\" message broker that recognizes the message types defined in SimpMessageType, keeps track of subscriptions with the help of a SubscriptionRegistry, and sends messages to subscribers.\npublic class SimpleBrokerMessageHandler extends AbstractBrokerMessageHandler;\n// A registry of subscription by session that allows looking up subscriptions.\npublic interface SubscriptionRegistry;\n", "des": "Provides a \"simple\" message broker implementation along with an abstract base class and other supporting types such as a registry for subscriptions."}
{"index": 2040, "repo": "spring-messaging-6.0.11", "code": "package config\n\n// Base class for message broker registration classes.\npublic abstract class AbstractBrokerRegistration extends Object;\n// Provides essential configuration for handling messages with simple messaging protocols such as STOMP.\npublic abstract class AbstractMessageBrokerConfiguration extends Object implements org.springframework.context.ApplicationContextAware;\n// A registration class for customizing the configuration for a MessageChannel.\npublic class ChannelRegistration extends Object;\n// A registry for configuring message broker options.\npublic class MessageBrokerRegistry extends Object;\n// Registration class for configuring a SimpleBrokerMessageHandler.\npublic class SimpleBrokerRegistration extends AbstractBrokerRegistration;\n// Registration class for configuring a StompBrokerRelayMessageHandler.\npublic class StompBrokerRelayRegistration extends AbstractBrokerRegistration;\n// A registration class for customizing the properties of ThreadPoolTaskExecutor.\npublic class TaskExecutorRegistration extends Object;\n", "des": "Configuration support for WebSocket messaging using higher level messaging protocols."}
{"index": 2041, "repo": "spring-messaging-6.0.11", "code": "package stomp\n\n// An extension of StompDecoder that buffers content remaining in the input ByteBuffer after the parent class has read all (complete) STOMP frames from it.\npublic class BufferingStompDecoder extends Object;\n// A StompSession that implements TcpConnectionHandler in order to send and receive messages.\npublic interface ConnectionHandlingStompSession extends StompSession, StompTcpConnectionHandler<byte[]>;\n// Raised when the connection for a STOMP session is lost rather than closed.\npublic class ConnectionLostException extends RuntimeException;\n// Default implementation of ConnectionHandlingStompSession.\npublic class DefaultStompSession extends Object implements ConnectionHandlingStompSession;\n// A STOMP over TCP client, configurable with either ReactorNettyTcpClient or ReactorNetty2TcpClient.\npublic class ReactorNettyTcpStompClient extends StompClientSupport;\n// A MessageHandler that handles messages by forwarding them to a STOMP broker.\npublic class StompBrokerRelayMessageHandler extends AbstractBrokerMessageHandler;\n// Contract for access to session counters.\npublic static interface StompBrokerRelayMessageHandler.Stats;\n// Base class for STOMP client implementations.\npublic abstract class StompClientSupport extends Object;\n// Represents a STOMP command.\npublic enum StompCommand extends Enum<StompCommand>;\n// Raised after a failure to encode or decode a STOMP message.\npublic class StompConversionException extends org.springframework.core.NestedRuntimeException;\n// Decodes one or more STOMP frames contained in a ByteBuffer.\npublic class StompDecoder extends Object;\n// An encoder for STOMP frames.\npublic class StompEncoder extends Object;\n// Contract to handle a STOMP frame.\npublic interface StompFrameHandler;\n// A MessageHeaderAccessor to use when creating a Message from a decoded STOMP frame, or when encoding a Message to a STOMP frame.\npublic class StompHeaderAccessor extends SimpMessageHeaderAccessor;\n// Represents STOMP frame headers.\npublic class StompHeaders extends Object implements org.springframework.util.MultiValueMap<String,String>, Serializable;\n", "des": "Generic support for simple messaging protocols (like STOMP)."}
{"index": 2042, "repo": "spring-messaging-6.0.11", "code": "package user\n\n// A default implementation of UserDestinationResolver that relies on a SimpUserRegistry to find active sessions for a user.\npublic class DefaultUserDestinationResolver extends Object implements UserDestinationResolver;\n// A Principal can also implement this contract when getName() isn't globally unique and therefore not suited for use with \"user\" destinations.\npublic interface DestinationUserNameProvider;\n// SimpUserRegistry that looks up users in a \"local\" user registry as well as a set of \"remote\" user registries.\npublic class MultiServerUserRegistry extends Object implements SimpUserRegistry, org.springframework.context.event.SmartApplicationListener;\n// Represents a session of connected user.\npublic interface SimpSession;\n// Represents a subscription within a user session.\npublic interface SimpSubscription;\n// A strategy for matching subscriptions.\n@FunctionalInterface public interface SimpSubscriptionMatcher;\n// Represents a connected user.\npublic interface SimpUser;\n// A registry of currently connected users.\npublic interface SimpUserRegistry;\n// MessageHandler with support for \"user\" destinations.\npublic class UserDestinationMessageHandler extends Object implements MessageHandler, org.springframework.context.SmartLifecycle;\n// A strategy for resolving a \"user\" destination by translating it to one or more actual destinations one per active user session.\n@FunctionalInterface public interface UserDestinationResolver;\n// Contains the result from parsing a \"user\" destination from a source message and translating it to target destinations (one per active user session).\npublic class UserDestinationResult extends Object;\n// MessageHandler that handles user registry broadcasts from other application servers and periodically broadcasts the content of the local user registry.\npublic class UserRegistryMessageHandler extends Object implements MessageHandler, org.springframework.context.ApplicationListener<BrokerAvailabilityEvent>;\n", "des": "Support for handling messages to \"user\" destinations (i.e."}
{"index": 2043, "repo": "spring-messaging-6.0.11", "code": "package support\n\n// A base HeaderMapper implementation.\npublic abstract class AbstractHeaderMapper<T> extends Object implements HeaderMapper<T>;\n// Abstract base class for MessageChannel implementations.\npublic abstract class AbstractMessageChannel extends Object implements MessageChannel, InterceptableChannel, org.springframework.beans.factory.BeanNameAware;\n// Abstract base class for SubscribableChannel implementations.\npublic abstract class AbstractSubscribableChannel extends AbstractMessageChannel implements SubscribableChannel;\n// Interface for interceptors that are able to view and/or modify the Messages being sent-to and/or received-from a MessageChannel.\npublic interface ChannelInterceptor;\n// A GenericMessage with a Throwable payload.\npublic class ErrorMessage extends GenericMessage<Throwable>;\n// An extension of ChannelInterceptor with callbacks to intercept the asynchronous sending of a Message to a specific subscriber through an Executor.\npublic interface ExecutorChannelInterceptor extends ChannelInterceptor;\n// A SubscribableChannel that sends messages to each of its subscribers.\npublic class ExecutorSubscribableChannel extends AbstractSubscribableChannel;\n// An implementation of Message with a generic payload.\npublic class GenericMessage<T> extends Object implements Message<T>, Serializable;\n// Generic strategy interface for mapping MessageHeaders to and from other types of objects.\npublic interface HeaderMapper<T>;\n// A MessageHeaderInitializer to customize the strategy for ID and TIMESTAMP message header generation.\npublic class IdTimestampMessageHeaderInitializer extends Object implements MessageHeaderInitializer;\n// A simpler interceptor that calls MessageHeaderAccessor.setImmutable() on the headers of messages passed through the preSend method.\npublic class ImmutableMessageChannelInterceptor extends Object implements ChannelInterceptor;\n// A MessageChannel that maintains a list ChannelInterceptors and allows interception of message sending.\npublic interface InterceptableChannel;\n// A builder for creating a GenericMessage (or ErrorMessage if the payload is of type Throwable).\npublic final class MessageBuilder<T> extends Object;\n// Extension of the Runnable interface with methods to obtain the MessageHandler and Message to be handled.\npublic interface MessageHandlingRunnable extends Runnable;\n// Wrapper around MessageHeaders that provides extra features such as strongly typed accessors for specific headers, the ability to leave headers in a Message mutable, and the option to suppress automatic generation of id and timestamp headers.\npublic class MessageHeaderAccessor extends Object;\n", "des": "Provides implementations of Message along with a MessageBuilder and MessageHeaderAccessor for building and working with messages and message headers, as well as various MessageChannel implementations and channel interceptor support."}
{"index": 2044, "repo": "spring-messaging-6.0.11", "code": "package tcp\n\n// A simple strategy for making reconnect attempts at a fixed interval.\npublic class FixedIntervalReconnectStrategy extends Object implements ReconnectStrategy;\n// A contract to determine the frequency of reconnect attempts after connection failure.\n@FunctionalInterface public interface ReconnectStrategy;\n// A contract for sending messages and managing a TCP connection.\npublic interface TcpConnection<P> extends Closeable;\n// A contract for managing lifecycle events for a TCP connection including the handling of incoming messages.\npublic interface TcpConnectionHandler<P>;\n// A contract for establishing TCP connections.\npublic interface TcpOperations<P>;\n", "des": "Contains abstractions and implementation classes for establishing TCP connections via TcpOperations, handling messages via TcpConnectionHandler, as well as sending messages via TcpConnection."}
{"index": 2045, "repo": "spring-messaging-6.0.11", "code": "package reactor\n\n// Convenient base class for ReactorNettyCodec implementations that need to work with NIO ByteBuffers.\npublic abstract class AbstractNioBufferReactorNettyCodec<P> extends Object implements ReactorNettyCodec<P>;\n// Reactor Netty based implementation of TcpOperations.\npublic class ReactorNetty2TcpClient<P> extends Object implements TcpOperations<P>;\n// Reactor Netty based implementation of TcpConnection.\npublic class ReactorNetty2TcpConnection<P> extends Object implements TcpConnection<P>;\n// Simple holder for a decoding Function and an encoding BiConsumer to use with Reactor Netty.\npublic interface ReactorNettyCodec<P>;\n// Reactor Netty based implementation of TcpOperations.\npublic class ReactorNettyTcpClient<P> extends Object implements TcpOperations<P>;\n// Reactor Netty based implementation of TcpConnection.\npublic class ReactorNettyTcpConnection<P> extends Object implements TcpConnection<P>;\n// Contract to encode and decode a Message to and from a ByteBuffer allowing a higher-level protocol (e.g.\npublic interface TcpMessageCodec<P>;\n", "des": "Contains support for TCP messaging based on Reactor."}
{"index": 2046, "repo": "spring-boot-loader-3.1.1", "code": "package loader\n\n// Base class for executable archive Launchers.\npublic abstract class ExecutableArchiveLauncher extends Launcher;\n// Launcher for JAR based archives.\npublic class JarLauncher extends ExecutableArchiveLauncher;\n// ClassLoader used by the Launcher.\npublic class LaunchedURLClassLoader extends URLClassLoader;\n// Base class for launchers that can start an application with a fully configured classpath backed by one or more Archives.\npublic abstract class Launcher extends Object;\n// Utility class that is used by Launchers to call a main method.\npublic class MainMethodRunner extends Object;\n// Launcher for archives with user-configured classpath and main class through a properties file.\npublic class PropertiesLauncher extends Launcher;\n// Launcher for WAR based archives.\npublic class WarLauncher extends ExecutableArchiveLauncher;\n", "des": "System that allows self-contained JAR/WAR archives to be launched using java -jar."}
{"index": 2047, "repo": "spring-boot-loader-3.1.1", "code": "package archive\n\n// An archive that can be launched by the Launcher.\npublic interface Archive extends Iterable<Archive.Entry>, AutoCloseable;\n// Represents a single entry in the archive.\npublic static interface Archive.Entry;\n// Strategy interface to filter Entries.\n@FunctionalInterface public static interface Archive.EntryFilter;\n// Archive implementation backed by an exploded archive directory.\npublic class ExplodedArchive extends Object implements Archive;\n// Archive implementation backed by a JarFile.\npublic class JarFileArchive extends Object implements Archive;\n", "des": "Abstraction over logical Archives be they backed by a JAR file or unpacked into a directory."}
{"index": 2048, "repo": "spring-boot-loader-3.1.1", "code": "package data\n\n// Interface that provides read-only random access to some underlying data.\npublic interface RandomAccessData;\n// RandomAccessData implementation backed by a RandomAccessFile.\npublic class RandomAccessDataFile extends Object implements RandomAccessData;\n", "des": "Classes and interfaces to allow random access to a block of data."}
{"index": 2049, "repo": "spring-boot-loader-3.1.1", "code": "package jar\n\n// URLStreamHandler for Spring Boot loader JarFiles.\npublic class Handler extends URLStreamHandler;\n// Extended variant of JarFile that behaves in the same way but offers the following additional functionality.\npublic class JarFile extends JarFile implements Iterable<JarEntry>;\n", "des": "Support for loading and manipulating JAR/WAR files."}
{"index": 2050, "repo": "spring-boot-loader-3.1.1", "code": "package jarmode\n\n// Interface registered in spring.factories to provides extended 'jarmode' support.\npublic interface JarMode;\n// Delegate class used to launch the fat jar in a specific mode.\npublic final class JarModeLauncher extends Object;\n", "des": "Support for launching the JAR using jarmode."}
{"index": 2051, "repo": "spring-boot-loader-3.1.1", "code": "package util\n\n// Helper class for resolving placeholders in texts.\npublic abstract class SystemPropertyUtils extends Object;\n", "des": "Utilities used by Spring Boot's JAR loading."}
{"index": 2052, "repo": "spring-ws-security-4.0.5", "code": "package security\n\n// Interceptor base class for interceptors that handle WS-Security.\npublic abstract class AbstractWsSecurityInterceptor extends Object implements org.springframework.ws.soap.server.SoapEndpointInterceptor, org.springframework.ws.client.support.interceptor.ClientInterceptor;\n// Exception indicating that something went wrong during WS-Security executions.\npublic abstract class WsSecurityException extends org.springframework.ws.WebServiceException;\n// Exception indicating that a WS-Security executions should result in a SOAP Fault.\npublic abstract class WsSecurityFaultException extends WsSecurityException;\n// Exception indicating that something went wrong during the securement of a message.\npublic abstract class WsSecuritySecurementException extends WsSecurityException;\n// Exception indicating that something went wrong during the validation of a message.\npublic abstract class WsSecurityValidationException extends WsSecurityException;\n", "des": "Provides WS-Security implementation classes."}
{"index": 2053, "repo": "spring-ws-security-4.0.5", "code": "package callback\n\n// Abstract implementation of a CallbackHandler.\npublic abstract class AbstractCallbackHandler extends Object implements CallbackHandler;\n// Represents a chain of CallbackHandlers.\npublic class CallbackHandlerChain extends AbstractCallbackHandler;\n// Underlying security services instantiate and pass a CleanupCallback to the handle method of a CallbackHandler to clean up security state.\npublic class CleanupCallback extends Object implements Callback, Serializable;\n", "des": "Contains generic CallbackHandler implementations."}
{"index": 2054, "repo": "spring-ws-security-4.0.5", "code": "package support\n\n// Spring factory bean for an array of KeyManagers.\npublic class KeyManagersFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<KeyManager[]>, org.springframework.beans.factory.InitializingBean;\n// Spring factory bean for a KeyStore.\npublic class KeyStoreFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<KeyStore>, org.springframework.beans.factory.InitializingBean;\n// Generic utility methods for dealing with KeyStore objects.\npublic abstract class KeyStoreUtils extends Object;\n// Generic utility methods for Spring Security\npublic abstract class SpringSecurityUtils extends Object;\n// Spring factory bean for an array of TrustManagers.\npublic class TrustManagersFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<TrustManager[]>, org.springframework.beans.factory.InitializingBean;\n", "des": "Contains support classes for handling WS-Security messages."}
{"index": 2055, "repo": "spring-ws-security-4.0.5", "code": "package wss4j2\n\n// WSS4J-specific version of the WsSecurityFaultException.\npublic class Wss4jSecurityFaultException extends WsSecurityFaultException;\n// A WS-Security endpoint interceptor based on Apache's WSS4J.\npublic class Wss4jSecurityInterceptor extends AbstractWsSecurityInterceptor implements org.springframework.beans.factory.InitializingBean;\n// WSS4J-specific version of the WsSecuritySecurementException.\npublic class Wss4jSecuritySecurementException extends WsSecuritySecurementException;\n// WSS4J-specific version of the WsSecurityValidationException.\npublic class Wss4jSecurityValidationException extends WsSecurityValidationException;\n", "des": "Contains classes for using the Apache WSS4J 2.0 WS-Security implementation within Spring-WS."}
{"index": 2056, "repo": "spring-ws-security-4.0.5", "code": "package callback\n\n// Abstract base class for CallbackHandler implementations that handle WSPasswordCallback callbacks.\npublic abstract class AbstractWsPasswordCallbackHandler extends AbstractCallbackHandler;\n// Callback handler that uses Java Security KeyStores to handle cryptographic callbacks.\npublic class KeyStoreCallbackHandler extends AbstractWsPasswordCallbackHandler implements org.springframework.beans.factory.InitializingBean;\n// Simple callback handler that validates passwords against a in-memory Properties object.\npublic class SimplePasswordValidationCallbackHandler extends AbstractWsPasswordCallbackHandler implements org.springframework.beans.factory.InitializingBean;\n// Callback handler that validates a plain text or digest password using an Spring Security UserDetailsService.\npublic class SpringSecurityPasswordValidationCallbackHandler extends AbstractWsPasswordCallbackHandler implements org.springframework.beans.factory.InitializingBean;\n// Underlying security services instantiate and pass a UsernameTokenPrincipalCallback to the handle method of a CallbackHandler to pass a security WSUsernameTokenPrincipal.\npublic class UsernameTokenPrincipalCallback extends Object implements Callback, Serializable;\n", "des": "Contains CallbackHandler implementations for WSS4J 2.0."}
{"index": 2057, "repo": "spring-ws-security-4.0.5", "code": "package support\n\n// Spring factory bean for a WSS4J Crypto.\npublic class CryptoFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<org.apache.wss4j.common.crypto.Crypto>, org.springframework.beans.factory.InitializingBean;\n", "des": "Contains support classes for working with WSS4J 2.0."}
{"index": 2058, "repo": "slf4j-ext-2.0.7", "code": "package agent\n\n// All recognized options in the string passed to the java agent.\npublic class AgentOptions extends Object;\n// Entry point for slf4j-ext when used as a Java agent.\npublic class AgentPremain extends Object;\n", "des": "\"-javaagent\" routines for SLF4J."}
{"index": 2059, "repo": "slf4j-ext-2.0.7", "code": "package cal10n\n\n// A logger specialized in localized logging.\npublic class LocLogger extends LoggerWrapper implements Logger;\n// This class is essentially a wrapper around an LoggerFactory producing LocLogger instances.\npublic class LocLoggerFactory extends Object;\n", "des": "SLF4J API extensions"}
{"index": 2060, "repo": "slf4j-ext-2.0.7", "code": "package ext\n\n// A helper class wrapping an Logger instance preserving location information if the wrapped instance supports it.\npublic class LoggerWrapper extends Object implements Logger;\n// A utility that provides standard mechanisms for logging certain kinds of activities.\npublic class XLogger extends LoggerWrapper implements Logger;\n// \npublic static enum XLogger.Level extends Enum<XLogger.Level>;\n// This class is essentially a wrapper around an LoggerFactory producing XLogger instances.\npublic class XLoggerFactory extends Object;\n", "des": "Localized logging using the CAL10N API."}
{"index": 2061, "repo": "slf4j-ext-2.0.7", "code": "package instrumentation\n\n// Helper methods for Javassist functionality.\npublic class JavassistHelper extends Object;\n// LogTransformer does the work of analyzing each class, and if appropriate add log statements to each method to allow logging entry/exit.\npublic class LogTransformer extends Object implements ClassFileTransformer;\n// Builder provides a flexible way of configuring some of many options on the parent class instead of providing many constructors.\npublic static class LogTransformer.Builder extends Object;\n// \npublic class ToStringHelper extends Object;\n", "des": "Java instrumentation routines for SLF4J."}
{"index": 2062, "repo": "slf4j-ext-2.0.7", "code": "package profiler\n\n// An enum of supported time units.\npublic enum DurationUnit extends Enum<DurationUnit>;\n// A poor man's profiler to measure the time elapsed performing some lengthy task.\npublic class Profiler extends Object implements TimeInstrument;\n// A minimalist registry of profilers.\npublic class ProfilerRegistry extends Object;\n// \npublic class SpacePadder extends Object;\n// A very basic TimeInstrument which can be started and stopped once and only once.\npublic class StopWatch extends Object implements TimeInstrument;\n// This interface sets the methods that must be implemented by Profiler and StopWatch classes.\npublic interface TimeInstrument;\n", "des": "Poor man's profiler API"}
{"index": 2063, "repo": "spring-webmvc-6.0.11", "code": "package servlet\n\n// Extends HandlerInterceptor with a callback method invoked after the start of asynchronous request handling.\npublic interface AsyncHandlerInterceptor extends HandlerInterceptor;\n// Central dispatcher for HTTP request handlers/controllers, e.g.\npublic class DispatcherServlet extends FrameworkServlet;\n// A FlashMap provides a way for one request to store attributes intended for use in another.\npublic final class FlashMap extends HashMap<String,Object> implements Comparable<FlashMap>;\n// A strategy interface for retrieving and saving FlashMap instances.\npublic interface FlashMapManager;\n// Base servlet for Spring's web framework.\npublic abstract class FrameworkServlet extends HttpServletBean implements org.springframework.context.ApplicationContextAware;\n// MVC framework SPI, allowing parameterization of the core MVC workflow.\npublic interface HandlerAdapter;\n// Interface to be implemented by objects that can resolve exceptions thrown during handler mapping or execution, in the typical case to error views.\npublic interface HandlerExceptionResolver;\n// Handler execution chain, consisting of handler object and any handler interceptors.\npublic class HandlerExecutionChain extends Object;\n// Workflow interface that allows for customized handler execution chains.\npublic interface HandlerInterceptor;\n// Interface to be implemented by objects that define a mapping between requests and handler objects.\npublic interface HandlerMapping;\n// Simple extension of HttpServlet which treats its config parameters (init-param entries within the servlet tag in web.xml) as bean properties.\npublic abstract class HttpServletBean extends HttpServlet implements org.springframework.core.env.EnvironmentCapable, org.springframework.context.EnvironmentAware;\n// Extension of LocaleResolver that adds support for a rich locale context (potentially including locale and time zone information).\npublic interface LocaleContextResolver extends LocaleResolver;\n// Interface for web-based locale resolution strategies that allows for both locale resolution via the request and locale modification via request and response.\npublic interface LocaleResolver;\n// Holder for both Model and View in the web MVC framework.\npublic class ModelAndView extends Object;\n// Exception to be thrown on error conditions that should forward to a specific view with a specific model.\npublic class ModelAndViewDefiningException extends ServletException;\n// By default, when the DispatcherServlet can't find a handler for a request it sends a 404 response.\npublic class NoHandlerFoundException extends ServletException implements org.springframework.web.ErrorResponse;\n", "des": "Provides servlets that integrate with the application context infrastructure, and the core interfaces and classes for the Spring web MVC framework."}
{"index": 2064, "repo": "spring-webmvc-6.0.11", "code": "package config\n\n// BeanDefinitionParser that parses a cors element in order to set the CORS configuration in the various {AbstractHandlerMapping} beans created by AnnotationDrivenBeanDefinitionParser, ResourcesBeanDefinitionParser and ViewControllerBeanDefinitionParser.\npublic class CorsBeanDefinitionParser extends Object implements org.springframework.beans.factory.xml.BeanDefinitionParser;\n// Parse the <mvc:freemarker-configurer> MVC namespace element and register FreeMarkerConfigurer bean.\npublic class FreeMarkerConfigurerBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser;\n// Parse the <mvc:groovy-configurer> MVC namespace element and register a GroovyConfigurer bean.\npublic class GroovyMarkupConfigurerBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;\n// NamespaceHandler for Spring MVC configuration namespace.\npublic class MvcNamespaceHandler extends org.springframework.beans.factory.xml.NamespaceHandlerSupport;\n// Convenience methods for use in MVC namespace BeanDefinitionParsers.\npublic abstract class MvcNamespaceUtils extends Object;\n// Parse the <mvc:script-template-configurer> MVC namespace element and register a ScriptTemplateConfigurer bean.\npublic class ScriptTemplateConfigurerBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser;\n// Parses the view-resolvers MVC namespace element and registers ViewResolver bean definitions.\npublic class ViewResolversBeanDefinitionParser extends Object implements org.springframework.beans.factory.xml.BeanDefinitionParser;\n", "des": "Defines the XML configuration namespace for Spring MVC."}
{"index": 2065, "repo": "spring-webmvc-6.0.11", "code": "package annotation\n\n// Helps with configuring options for asynchronous request processing.\npublic class AsyncSupportConfigurer extends Object;\n// Creates a ContentNegotiationManager and configures it with one or more ContentNegotiationStrategy instances.\npublic class ContentNegotiationConfigurer extends Object;\n// Assists with the creation of a CorsConfiguration instance for a given URL path pattern.\npublic class CorsRegistration extends Object;\n// Assists with the registration of global, URL pattern based CorsConfiguration mappings.\npublic class CorsRegistry extends Object;\n// Configures a request handler for serving static resources by forwarding the request to the Servlet container's \"default\" Servlet.\npublic class DefaultServletHandlerConfigurer extends Object;\n// A subclass of WebMvcConfigurationSupport that detects and delegates to all beans of type WebMvcConfigurer allowing them to customize the configuration provided by WebMvcConfigurationSupport.\n@Configuration(proxyBeanMethods=false) public class DelegatingWebMvcConfiguration extends WebMvcConfigurationSupport;\n// Adding this annotation to an @Configuration class imports the Spring MVC configuration from WebMvcConfigurationSupport, e.g.:\n@Retention(RUNTIME) @Target(TYPE) @Documented @Import(DelegatingWebMvcConfiguration.class) public @interface EnableWebMvc;\n// Assists with the creation of a MappedInterceptor.\npublic class InterceptorRegistration extends Object;\n// Helps with configuring a list of mapped interceptors.\npublic class InterceptorRegistry extends Object;\n// Configure path matching options.\npublic class PathMatchConfigurer extends Object;\n// Assist with the registration of a single redirect view controller.\npublic class RedirectViewControllerRegistration extends Object;\n// Assists with the registration of resource resolvers and transformers.\npublic class ResourceChainRegistration extends Object;\n// Encapsulates information required to create a resource handler.\npublic class ResourceHandlerRegistration extends Object;\n// Stores registrations of resource handlers for serving static resources such as images, css files and others through Spring MVC including setting cache headers optimized for efficient loading in a web browser.\npublic class ResourceHandlerRegistry extends Object;\n// Assist with configuring a UrlBasedViewResolver.\npublic class UrlBasedViewResolverRegistration extends Object;\n// Assist with the registration of a single view controller.\npublic class ViewControllerRegistration extends Object;\n", "des": "Annotation-based setup for Spring MVC."}
{"index": 2066, "repo": "spring-webmvc-6.0.11", "code": "package function\n\n// Asynchronous subtype of ServerResponse that exposes the future response.\npublic interface AsyncServerResponse extends ServerResponse;\n// Entity-specific subtype of ServerResponse that exposes entity data.\npublic interface EntityResponse<T> extends ServerResponse;\n// Defines a builder for EntityResponse.\npublic static interface EntityResponse.Builder<T>;\n// Represents a function that filters a handler function.\n@FunctionalInterface public interface HandlerFilterFunction<T extends ServerResponse,R extends ServerResponse>;\n// Represents a function that handles a request.\n@FunctionalInterface public interface HandlerFunction<T extends ServerResponse>;\n// Rendering-specific subtype of ServerResponse that exposes model and template data.\npublic interface RenderingResponse extends ServerResponse;\n// Defines a builder for RenderingResponse.\npublic static interface RenderingResponse.Builder;\n// Represents a function that evaluates on a given ServerRequest.\n@FunctionalInterface public interface RequestPredicate;\n// Implementations of RequestPredicate that implement various useful request matching operations, such as matching based on path, HTTP method, etc.\npublic abstract class RequestPredicates extends Object;\n// Receives notifications from the logical structure of request predicates.\npublic static interface RequestPredicates.Visitor;\n// Represents a function that routes to a handler function.\n@FunctionalInterface public interface RouterFunction<T extends ServerResponse>;\n// Central entry point to Spring's functional web framework. Exposes routing functionality, such as to create a RouterFunction using a discoverable builder-style API, to create a RouterFunction given a RequestPredicate and HandlerFunction, and to do further subrouting on an existing routing function.\npublic abstract class RouterFunctions extends Object;\n// Represents a discoverable builder for router functions.\npublic static interface RouterFunctions.Builder;\n// Receives notifications from the logical structure of router functions.\npublic static interface RouterFunctions.Visitor;\n// Represents a server-side HTTP request, as handled by a HandlerFunction.\npublic interface ServerRequest;\n// Defines a builder for a request.\npublic static interface ServerRequest.Builder;\n// Represents the headers of the HTTP request.\npublic static interface ServerRequest.Headers;\n// Represents a typed server-side HTTP response, as returned by a handler function or filter function.\npublic interface ServerResponse;\n", "des": "Provides the types that make up Spring's functional web framework for Servlet environments."}
{"index": 2067, "repo": "spring-webmvc-6.0.11", "code": "package support\n\n// HandlerAdapter implementation that supports HandlerFunctions.\npublic class HandlerFunctionAdapter extends Object implements HandlerAdapter, org.springframework.core.Ordered;\n// HandlerMapping implementation that supports RouterFunctions.\npublic class RouterFunctionMapping extends AbstractHandlerMapping implements org.springframework.beans.factory.InitializingBean;\n", "des": "Classes supporting the org.springframework.web.servlet.function package."}
{"index": 2068, "repo": "spring-webmvc-6.0.11", "code": "package handler\n\n// Abstract implementation of the HandlerMapping interface, detecting URL mappings for handler beans through introspection of all defined beans in the application context.\npublic abstract class AbstractDetectingUrlHandlerMapping extends AbstractUrlHandlerMapping;\n// Abstract base class for HandlerExceptionResolver implementations.\npublic abstract class AbstractHandlerExceptionResolver extends Object implements HandlerExceptionResolver, org.springframework.core.Ordered;\n// Abstract base class for HandlerMapping implementations.\npublic abstract class AbstractHandlerMapping extends org.springframework.web.context.support.WebApplicationObjectSupport implements HandlerMapping, org.springframework.core.Ordered, org.springframework.beans.factory.BeanNameAware;\n// Abstract base class for HandlerExceptionResolver implementations that support handling exceptions from handlers of type HandlerMethod.\npublic abstract class AbstractHandlerMethodExceptionResolver extends AbstractHandlerExceptionResolver;\n// Abstract base class for HandlerMapping implementations that define a mapping between a request and a HandlerMethod.\npublic abstract class AbstractHandlerMethodMapping<T> extends AbstractHandlerMapping implements org.springframework.beans.factory.InitializingBean;\n// Abstract base class for URL-mapped HandlerMapping implementations.\npublic abstract class AbstractUrlHandlerMapping extends AbstractHandlerMapping implements MatchableHandlerMapping;\n// Implementation of the HandlerMapping interface that maps from URLs to beans with names that start with a slash (\"/\"), similar to how Struts maps URLs to action names.\npublic class BeanNameUrlHandlerMapping extends AbstractDetectingUrlHandlerMapping;\n// Interceptor that places the configured ConversionService in request scope so it's available during request processing.\npublic class ConversionServiceExposingInterceptor extends Object implements HandlerInterceptor;\n// ServletWebRequest subclass that is aware of DispatcherServlet's request context, such as the Locale determined by the configured LocaleResolver.\npublic class DispatcherServletWebRequest extends org.springframework.web.context.request.ServletWebRequest;\n// A HandlerExceptionResolver that delegates to a list of other HandlerExceptionResolvers.\npublic class HandlerExceptionResolverComposite extends Object implements HandlerExceptionResolver, org.springframework.core.Ordered;\n", "des": "Provides standard HandlerMapping implementations, including abstract base classes for custom implementations."}
{"index": 2069, "repo": "spring-webmvc-6.0.11", "code": "package i18n\n\n// Abstract base class for LocaleContextResolver implementations.\npublic abstract class AbstractLocaleContextResolver extends AbstractLocaleResolver implements LocaleContextResolver;\n// Abstract base class for LocaleResolver implementations.\npublic abstract class AbstractLocaleResolver extends Object implements LocaleResolver;\n// LocaleResolver implementation that looks for a match between locales in the Accept-Language header and a list of configured supported locales.\npublic class AcceptHeaderLocaleResolver extends AbstractLocaleResolver;\n// LocaleResolver implementation that uses a cookie sent back to the user in case of a custom setting, with a fallback to the configured default locale, the request's Accept-Language header, or the default locale for the server.\npublic class CookieLocaleResolver extends AbstractLocaleContextResolver;\n// LocaleResolver implementation that always returns a fixed default locale and optionally time zone.\npublic class FixedLocaleResolver extends AbstractLocaleContextResolver;\n// Interceptor that allows for changing the current locale on every request, via a configurable request parameter (default parameter name: \"locale\").\npublic class LocaleChangeInterceptor extends Object implements HandlerInterceptor;\n// LocaleResolver implementation that uses a locale attribute in the user's session in case of a custom setting, with a fallback to the configured default locale, the request's Accept-Language header, or the default locale for the server.\npublic class SessionLocaleResolver extends AbstractLocaleContextResolver;\n", "des": "Locale support classes for Spring's web MVC framework."}
{"index": 2070, "repo": "spring-webmvc-6.0.11", "code": "package mvc\n\n// Convenient superclass for controller implementations, using the Template Method design pattern.\npublic abstract class AbstractController extends WebContentGenerator implements Controller;\n// Abstract base class for Controllers that return a view name based on the request URL.\npublic abstract class AbstractUrlViewController extends AbstractController;\n// Base Controller interface, representing a component that receives HttpServletRequest and HttpServletResponse instances just like a HttpServlet but is able to participate in an MVC workflow.\n@FunctionalInterface public interface Controller;\n// Adapter to use the plain HttpRequestHandler interface with the generic DispatcherServlet.\npublic class HttpRequestHandlerAdapter extends Object implements HandlerAdapter;\n// \n@Deprecated public interface LastModified;\n// Trivial controller that always returns a pre-configured view and optionally sets the response status code.\npublic class ParameterizableViewController extends AbstractController;\n// Spring Controller implementation that forwards to a named servlet, i.e.\npublic class ServletForwardingController extends AbstractController implements org.springframework.beans.factory.BeanNameAware;\n// Spring Controller implementation that wraps a servlet instance which it manages internally.\npublic class ServletWrappingController extends AbstractController implements org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// Adapter to use the plain Controller workflow interface with the generic DispatcherServlet.\npublic class SimpleControllerHandlerAdapter extends Object implements HandlerAdapter;\n// Simple Controller implementation that transforms the virtual path of a URL into a view name and returns that view.\npublic class UrlFilenameViewController extends AbstractUrlViewController;\n// Handler interceptor that checks the request for supported methods and a required session and prepares the response by applying the configured cache settings.\npublic class WebContentInterceptor extends WebContentGenerator implements HandlerInterceptor;\n", "des": "Standard controller implementations for the Servlet MVC framework that comes with Spring."}
{"index": 2071, "repo": "spring-webmvc-6.0.11", "code": "package annotation\n\n// SPI for resolving custom return values from a specific handler method.\npublic interface ModelAndViewResolver;\n// A HandlerExceptionResolver that uses the @ResponseStatus annotation to map exceptions to HTTP status codes.\npublic class ResponseStatusExceptionResolver extends AbstractHandlerExceptionResolver implements org.springframework.context.MessageSourceAware;\n", "des": "Support package for annotation-based Servlet MVC controllers."}
{"index": 2072, "repo": "spring-webmvc-6.0.11", "code": "package condition\n\n// A base class for RequestCondition types providing implementations of AbstractRequestCondition.equals(Object), AbstractRequestCondition.hashCode(), and AbstractRequestCondition.toString().\npublic abstract class AbstractRequestCondition<T extends AbstractRequestCondition<T>> extends Object implements RequestCondition<T>;\n// Implements the RequestCondition contract by delegating to multiple RequestCondition types and using a logical conjunction (' && ') to ensure all conditions match a given request.\npublic class CompositeRequestCondition extends AbstractRequestCondition<CompositeRequestCondition>;\n// A logical disjunction (' || ') request condition to match a request's 'Content-Type' header to a list of media type expressions.\npublic final class ConsumesRequestCondition extends AbstractRequestCondition<ConsumesRequestCondition>;\n// A logical conjunction (' && ') request condition that matches a request against a set of header expressions with syntax defined in RequestMapping.headers().\npublic final class HeadersRequestCondition extends AbstractRequestCondition<HeadersRequestCondition>;\n// A contract for media type expressions (e.g.\npublic interface MediaTypeExpression;\n// A contract for \"name!=value\" style expression used to specify request parameters and request header conditions in @RequestMapping.\npublic interface NameValueExpression<T>;\n// A logical conjunction (' && ') request condition that matches a request against a set parameter expressions with syntax defined in RequestMapping.params().\npublic final class ParamsRequestCondition extends AbstractRequestCondition<ParamsRequestCondition>;\n// A logical disjunction (' || ') request condition that matches a request against a set of URL path patterns.\npublic final class PathPatternsRequestCondition extends AbstractRequestCondition<PathPatternsRequestCondition>;\n// A logical disjunction (' || ') request condition that matches a request against a set of URL path patterns.\npublic class PatternsRequestCondition extends AbstractRequestCondition<PatternsRequestCondition>;\n// A logical disjunction (' || ') request condition to match a request's 'Accept' header to a list of media type expressions.\npublic final class ProducesRequestCondition extends AbstractRequestCondition<ProducesRequestCondition>;\n// Contract for request mapping conditions.\npublic interface RequestCondition<T>;\n// A holder for a RequestCondition useful when the type of the request condition is not known ahead of time, e.g.\npublic final class RequestConditionHolder extends AbstractRequestCondition<RequestConditionHolder>;\n", "des": "Common MVC logic for matching incoming requests based on conditions."}
{"index": 2073, "repo": "spring-webmvc-6.0.11", "code": "package method\n\n// Abstract base class for HandlerAdapter implementations that support handlers of type HandlerMethod.\npublic abstract class AbstractHandlerMethodAdapter extends WebContentGenerator implements HandlerAdapter, org.springframework.core.Ordered;\n// Request mapping information.\npublic final class RequestMappingInfo extends Object implements RequestCondition<RequestMappingInfo>;\n// Defines a builder for creating a RequestMappingInfo.\npublic static interface RequestMappingInfo.Builder;\n// Container for configuration options used for request mapping purposes.\npublic static class RequestMappingInfo.BuilderConfiguration extends Object;\n// Abstract base class for classes for which RequestMappingInfo defines the mapping between a request and a handler method.\npublic abstract class RequestMappingInfoHandlerMapping extends AbstractHandlerMethodMapping<RequestMappingInfo>;\n// A HandlerMethodMappingNamingStrategy for RequestMappingInfo-based handler method mappings.\npublic class RequestMappingInfoHandlerMethodMappingNamingStrategy extends Object implements HandlerMethodMappingNamingStrategy<RequestMappingInfo>;\n", "des": "Servlet-based infrastructure for handler method processing, building on the org.springframework.web.method package."}
{"index": 2074, "repo": "spring-webmvc-6.0.11", "code": "package annotation\n\n// A convenient base class for ResponseBodyAdvice implementations that customize the response before JSON serialization with AbstractJackson2HttpMessageConverter's concrete subclasses.\npublic abstract class AbstractMappingJacksonResponseBodyAdvice extends Object implements ResponseBodyAdvice<Object>;\n// A base class for resolving method argument values by reading from the body of a request with HttpMessageConverters.\npublic abstract class AbstractMessageConverterMethodArgumentResolver extends Object implements org.springframework.web.method.support.HandlerMethodArgumentResolver;\n// Extends AbstractMessageConverterMethodArgumentResolver with the ability to handle method return values by writing to the response with HttpMessageConverters.\npublic abstract class AbstractMessageConverterMethodProcessor extends AbstractMessageConverterMethodArgumentResolver implements org.springframework.web.method.support.HandlerMethodReturnValueHandler;\n// Handles return values of type WebAsyncTask.\npublic class AsyncTaskMethodReturnValueHandler extends Object implements org.springframework.web.method.support.HandlerMethodReturnValueHandler;\n// Handles return values of type Callable.\npublic class CallableMethodReturnValueHandler extends Object implements org.springframework.web.method.support.HandlerMethodReturnValueHandler;\n// No-op resolver for method arguments of type Continuation.\npublic class ContinuationHandlerMethodArgumentResolver extends Object implements org.springframework.web.method.support.HandlerMethodArgumentResolver;\n// Handler for return values of type DeferredResult, ListenableFuture, and CompletionStage.\npublic class DeferredResultMethodReturnValueHandler extends Object implements org.springframework.web.method.support.HandlerMethodReturnValueHandler;\n// An AbstractHandlerMethodExceptionResolver that resolves exceptions through @ExceptionHandler methods.\npublic class ExceptionHandlerExceptionResolver extends AbstractHandlerMethodExceptionResolver implements org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean;\n// Subclass of ServletRequestDataBinder that adds URI template variables to the values used for data binding.\npublic class ExtendedServletRequestDataBinder extends org.springframework.web.bind.ServletRequestDataBinder;\n// Resolves HttpEntity and RequestEntity method argument values, as well as return values of type HttpEntity, ResponseEntity, ErrorResponse and ProblemDetail.\npublic class HttpEntityMethodProcessor extends AbstractMessageConverterMethodProcessor;\n// Handles HttpHeaders return values.\npublic class HttpHeadersReturnValueHandler extends Object implements org.springframework.web.method.support.HandlerMethodReturnValueHandler;\n", "des": "MVC infrastructure for annotation-based handler method processing, building on the org.springframework.web.method.annotation package."}
{"index": 2075, "repo": "spring-webmvc-6.0.11", "code": "package support\n\n// The default implementation of the HandlerExceptionResolver interface, resolving standard Spring MVC exceptions and translating them to corresponding HTTP status codes.\npublic class DefaultHandlerExceptionResolver extends AbstractHandlerExceptionResolver;\n// A specialization of the Model interface that controllers can use to select attributes for a redirect scenario.\npublic interface RedirectAttributes extends org.springframework.ui.Model;\n// A ModelMap implementation of RedirectAttributes that formats values as Strings using a DataBinder.\npublic class RedirectAttributesModelMap extends org.springframework.ui.ModelMap implements RedirectAttributes;\n", "des": "Support package for MVC controllers."}
{"index": 2076, "repo": "spring-webmvc-6.0.11", "code": "package resource\n\n// Base class for ResourceResolver implementations.\npublic abstract class AbstractResourceResolver extends Object implements ResourceResolver;\n// Abstract base class for VersionStrategy implementations.\npublic abstract class AbstractVersionStrategy extends Object implements VersionStrategy;\n// File name-based VersionPathStrategy, e.g.\nprotected static class AbstractVersionStrategy.FileNameVersionPathStrategy extends Object implements VersionPathStrategy;\n// A prefix-based VersionPathStrategy, e.g.\nprotected static class AbstractVersionStrategy.PrefixVersionPathStrategy extends Object implements VersionPathStrategy;\n// A ResourceResolver that resolves resources from a Cache or otherwise delegates to the resolver chain and saves the result in the cache.\npublic class CachingResourceResolver extends AbstractResourceResolver;\n// A ResourceTransformer that checks a Cache to see if a previously transformed resource exists in the cache and returns it if found, and otherwise delegates to the resolver chain and saves the result in the cache.\npublic class CachingResourceTransformer extends Object implements ResourceTransformer;\n// A VersionStrategy that calculates a Hex MD5 hash from the content of the resource and appends it to the file name, e.g.\npublic class ContentVersionStrategy extends AbstractVersionStrategy;\n// A ResourceTransformer implementation that modifies links in a CSS file to match the public URL paths that should be exposed to clients (e.g.\npublic class CssLinkResourceTransformer extends ResourceTransformerSupport;\n// Abstract base class for CssLinkResourceTransformer.LinkParser implementations.\nprotected abstract static class CssLinkResourceTransformer.AbstractLinkParser extends Object implements CssLinkResourceTransformer.LinkParser;\n// Extract content chunks that represent links.\n@FunctionalInterface protected static interface CssLinkResourceTransformer.LinkParser;\n// An HttpRequestHandler for serving static files using the Servlet container's \"default\" Servlet.\npublic class DefaultServletHttpRequestHandler extends Object implements org.springframework.web.HttpRequestHandler, org.springframework.web.context.ServletContextAware;\n// Resolver that delegates to the chain, and if a resource is found, it then attempts to find an encoded (e.g.\npublic class EncodedResourceResolver extends AbstractResourceResolver;\n// A VersionStrategy that relies on a fixed version applied as a request path prefix, e.g.\npublic class FixedVersionStrategy extends AbstractVersionStrategy;\n", "des": "Support classes for serving static resources."}
{"index": 2077, "repo": "spring-webmvc-6.0.11", "code": "package support\n\n// WebApplicationInitializer to register a DispatcherServlet and use Java-based Spring configuration.\npublic abstract class AbstractAnnotationConfigDispatcherServletInitializer extends AbstractDispatcherServletInitializer;\n// Base class for WebApplicationInitializer implementations that register a DispatcherServlet in the servlet context.\npublic abstract class AbstractDispatcherServletInitializer extends org.springframework.web.context.AbstractContextLoaderInitializer;\n// A base class for FlashMapManager implementations.\npublic abstract class AbstractFlashMapManager extends Object implements FlashMapManager;\n// Simple adapter to expose the bind status of a field or object.\npublic class BindStatus extends Object;\n// JSP-aware (and JSTL-aware) subclass of RequestContext, allowing for population of the context from a jakarta.servlet.jsp.PageContext.\npublic class JspAwareRequestContext extends RequestContext;\n// Helper class for preparing JSTL views, in particular for exposing a JSTL localization context.\npublic abstract class JstlUtils extends Object;\n// Context holder for request-specific state, like current web application context, current locale, current theme, and potential binding errors.\npublic class RequestContext extends Object;\n// Utility class for easy access to request-specific state which has been set by the DispatcherServlet.\npublic abstract class RequestContextUtils extends Object;\n// A contract for inspecting and potentially modifying request data values such as URL query parameters or form field values before they are rendered by a view or before a redirect.\npublic interface RequestDataValueProcessor;\n// UriComponentsBuilder with additional static factory methods to create links based on the current HttpServletRequest.\npublic class ServletUriComponentsBuilder extends org.springframework.web.util.UriComponentsBuilder;\n// Store and retrieve FlashMap instances to and from the HTTP session.\npublic class SessionFlashMapManager extends AbstractFlashMapManager;\n// Convenient superclass for any kind of web content generator, like AbstractController and WebContentInterceptor.\npublic abstract class WebContentGenerator extends org.springframework.web.context.support.WebApplicationObjectSupport;\n", "des": "Support classes for Spring's web MVC framework."}
{"index": 2078, "repo": "spring-webmvc-6.0.11", "code": "package tags\n\n// Allows implementing tag to utilize nested spring:argument tags.\npublic interface ArgumentAware;\n// The <argument> tag is based on the JSTL fmt:param tag.\npublic class ArgumentTag extends BodyTagSupport;\n// This <hasBindErrors> tag provides an Errors instance in case of bind errors.\npublic class BindErrorsTag extends HtmlEscapingAwareTag;\n// The <bind> tag supports evaluation of binding errors for a certain bean or bean property.\npublic class BindTag extends HtmlEscapingAwareTag implements EditorAwareTag;\n// Interface to be implemented by JSP tags that expose a PropertyEditor for a property that they are currently bound to.\npublic interface EditorAwareTag;\n// The <escapeBody> tag is used to escape its enclosed body content, applying HTML escaping and/or JavaScript escaping.\npublic class EscapeBodyTag extends HtmlEscapingAwareTag implements BodyTag;\n// The <eval> tag evaluates a Spring expression (SpEL) and either prints the result or assigns it to a variable.\npublic class EvalTag extends HtmlEscapingAwareTag;\n// The <htmlEscape> tag sets default HTML escape value for the current page.\npublic class HtmlEscapeTag extends RequestContextAwareTag;\n// Superclass for tags that output content that might get HTML-escaped.\npublic abstract class HtmlEscapingAwareTag extends RequestContextAwareTag;\n// The <message> tag looks up a message in the scope of this page.\npublic class MessageTag extends HtmlEscapingAwareTag implements ArgumentAware;\n// The <nestedPath> tag supports and assists with nested beans or bean properties in the model.\npublic class NestedPathTag extends TagSupport implements TryCatchFinally;\n// Bean used to pass name-value pair parameters from a ParamTag to a ParamAware tag.\npublic class Param extends Object;\n// Allows implementing tag to utilize nested spring:param tags.\npublic interface ParamAware;\n// The <param> tag collects name-value parameters and passes them to a ParamAware ancestor in the tag hierarchy.\npublic class ParamTag extends BodyTagSupport;\n// Superclass for all tags that require a RequestContext.\npublic abstract class RequestContextAwareTag extends TagSupport implements TryCatchFinally;\n// \n@Deprecated(since=\"6.0\") public class ThemeTag extends MessageTag;\n", "des": "This package contains Spring's JSP standard tag library for JSP 2.0+."}
{"index": 2079, "repo": "spring-webmvc-6.0.11", "code": "package form\n\n// Abstract base class to provide common methods for implementing databinding-aware JSP tags for rendering an HTML 'input' element with a 'type' of 'checkbox' or 'radio'.\npublic abstract class AbstractCheckedElementTag extends AbstractHtmlInputElementTag;\n// Base tag for all data-binding aware JSP form tags.\npublic abstract class AbstractDataBoundFormElementTag extends AbstractFormTag implements EditorAwareTag;\n// Base class for all JSP form tags.\npublic abstract class AbstractFormTag extends HtmlEscapingAwareTag;\n// Convenient superclass for many html tags that render content using the databinding features of the AbstractHtmlElementTag.\npublic abstract class AbstractHtmlElementBodyTag extends AbstractHtmlElementTag implements BodyTag;\n// Base class for databinding-aware JSP tags that render HTML element.\npublic abstract class AbstractHtmlElementTag extends AbstractDataBoundFormElementTag implements DynamicAttributes;\n// Base class for databinding-aware JSP tags that render HTML form input element.\npublic abstract class AbstractHtmlInputElementTag extends AbstractHtmlElementTag;\n// Abstract base class to provide common methods for implementing databinding-aware JSP tags for rendering multiple HTML 'input' elements with a 'type' of 'checkbox' or 'radio'.\npublic abstract class AbstractMultiCheckedElementTag extends AbstractCheckedElementTag;\n// Abstract base class to provide common methods for implementing databinding-aware JSP tags for rendering a single HTML 'input' element with a 'type' of 'checkbox' or 'radio'.\npublic abstract class AbstractSingleCheckedElementTag extends AbstractCheckedElementTag;\n// The <button> tag renders a form field label in an HTML 'button' tag.\npublic class ButtonTag extends AbstractHtmlElementTag;\n// The <checkboxes> tag renders multiple HTML 'input' tags with type 'checkbox'.\npublic class CheckboxesTag extends AbstractMultiCheckedElementTag;\n// The <checkbox> tag renders an HTML 'input' tag with type 'checkbox'.\npublic class CheckboxTag extends AbstractSingleCheckedElementTag;\n// The <errors> tag renders field errors in an HTML 'span' tag.\npublic class ErrorsTag extends AbstractHtmlElementBodyTag implements BodyTag;\n// The <form> tag renders an HTML 'form' tag and exposes a binding path to inner tags for binding.\npublic class FormTag extends AbstractHtmlElementTag;\n", "des": "Spring's form tag library for JSP views in Spring's Web MVC framework."}
{"index": 2080, "repo": "spring-webmvc-6.0.11", "code": "package theme\n\n// \n@Deprecated(since=\"6.0\") public abstract class AbstractThemeResolver extends Object implements ThemeResolver;\n// \n@Deprecated(since=\"6.0\") public class CookieThemeResolver extends org.springframework.web.util.CookieGenerator implements ThemeResolver;\n// \n@Deprecated(since=\"6.0\") public class FixedThemeResolver extends AbstractThemeResolver;\n// \n@Deprecated(since=\"6.0\") public class SessionThemeResolver extends AbstractThemeResolver;\n// \n@Deprecated(since=\"6.0\") public class ThemeChangeInterceptor extends Object implements HandlerInterceptor;\n", "des": "Theme support classes for Spring's web MVC framework."}
{"index": 2081, "repo": "spring-webmvc-6.0.11", "code": "package view\n\n// Convenient base class for ViewResolver implementations.\npublic abstract class AbstractCachingViewResolver extends org.springframework.web.context.support.WebApplicationObjectSupport implements ViewResolver;\n// Filter that determines if view should be cached.\n@FunctionalInterface public static interface AbstractCachingViewResolver.CacheFilter;\n// Adapter base class for template-based view technologies such as FreeMarker, with the ability to use request and session attributes in their model and the option to expose helper objects for Spring's FreeMarker macro library.\npublic abstract class AbstractTemplateView extends AbstractUrlBasedView;\n// Abstract base class for template view resolvers, in particular for FreeMarker views.\npublic abstract class AbstractTemplateViewResolver extends UrlBasedViewResolver;\n// Abstract base class for URL-based views.\npublic abstract class AbstractUrlBasedView extends AbstractView implements org.springframework.beans.factory.InitializingBean;\n// Abstract base class for View implementations.\npublic abstract class AbstractView extends org.springframework.web.context.support.WebApplicationObjectSupport implements View, org.springframework.beans.factory.BeanNameAware;\n// A simple implementation of ViewResolver that interprets a view name as a bean name in the current application context, i.e.\npublic class BeanNameViewResolver extends org.springframework.web.context.support.WebApplicationObjectSupport implements ViewResolver, org.springframework.core.Ordered;\n// Implementation of ViewResolver that resolves a view based on the request file name or Accept header.\npublic class ContentNegotiatingViewResolver extends org.springframework.web.context.support.WebApplicationObjectSupport implements ViewResolver, org.springframework.core.Ordered, org.springframework.beans.factory.InitializingBean;\n// RequestToViewNameTranslator that simply transforms the URI of the incoming request into a view name.\npublic class DefaultRequestToViewNameTranslator extends Object implements RequestToViewNameTranslator;\n// Wrapper for a JSP or other resource within the same web application.\npublic class InternalResourceView extends AbstractUrlBasedView;\n// Convenient subclass of UrlBasedViewResolver that supports InternalResourceView (i.e.\npublic class InternalResourceViewResolver extends UrlBasedViewResolver;\n", "des": "Provides standard View and ViewResolver implementations, including abstract base classes for custom implementations."}
{"index": 2082, "repo": "spring-webmvc-6.0.11", "code": "package document\n\n// Abstract superclass for PDF views that operate on an existing document with an AcroForm.\npublic abstract class AbstractPdfStamperView extends AbstractUrlBasedView;\n// Abstract superclass for PDF views.\npublic abstract class AbstractPdfView extends AbstractView;\n// Convenient superclass for Excel document views in traditional XLS format.\npublic abstract class AbstractXlsView extends AbstractView;\n// Convenient superclass for Excel document views in the Office 2007 XLSX format, using POI's streaming variant.\npublic abstract class AbstractXlsxStreamingView extends AbstractXlsxView;\n// Convenient superclass for Excel document views in the Office 2007 XLSX format (as supported by POI-OOXML).\npublic abstract class AbstractXlsxView extends AbstractXlsView;\n", "des": "Support classes for document generation, providing View implementations for PDF and Excel."}
{"index": 2083, "repo": "spring-webmvc-6.0.11", "code": "package feed\n\n// Abstract superclass for Atom Feed views, using the ROME package.\npublic abstract class AbstractAtomFeedView extends AbstractFeedView<com.rometools.rome.feed.atom.Feed>;\n// Abstract base class for Atom and RSS Feed views, using the ROME package.\npublic abstract class AbstractFeedView<T extends com.rometools.rome.feed.WireFeed> extends AbstractView;\n// Abstract superclass for RSS Feed views, using the ROME package.\npublic abstract class AbstractRssFeedView extends AbstractFeedView<com.rometools.rome.feed.rss.Channel>;\n", "des": "Support classes for feed generation, providing View implementations for Atom and RSS."}
{"index": 2084, "repo": "spring-webmvc-6.0.11", "code": "package freemarker\n\n// Interface to be implemented by objects that configure and manage a FreeMarker Configuration object in a web environment.\npublic interface FreeMarkerConfig;\n// JavaBean to configure FreeMarker for web usage, via the \"configLocation\" and/or \"freemarkerSettings\" and/or \"templateLoaderPath\" properties.\npublic class FreeMarkerConfigurer extends org.springframework.ui.freemarker.FreeMarkerConfigurationFactory implements FreeMarkerConfig, org.springframework.beans.factory.InitializingBean, org.springframework.context.ResourceLoaderAware;\n// View using the FreeMarker template engine.\npublic class FreeMarkerView extends AbstractTemplateView;\n// Convenience subclass of UrlBasedViewResolver that supports FreeMarkerView (i.e.\npublic class FreeMarkerViewResolver extends AbstractTemplateViewResolver;\n", "des": "Support classes for the integration of FreeMarker as Spring web view technology."}
{"index": 2085, "repo": "spring-webmvc-6.0.11", "code": "package groovy\n\n// Interface to be implemented by objects that configure and manage a Groovy MarkupTemplateEngine for automatic lookup in a web environment.\npublic interface GroovyMarkupConfig;\n// An extension of Groovy's TemplateConfiguration and an implementation of Spring MVC's GroovyMarkupConfig for creating a MarkupTemplateEngine for use in a web application.\npublic class GroovyMarkupConfigurer extends groovy.text.markup.TemplateConfiguration implements GroovyMarkupConfig, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean;\n// An AbstractTemplateView subclass based on Groovy XML/XHTML markup templates.\npublic class GroovyMarkupView extends AbstractTemplateView;\n// Convenience subclass of AbstractTemplateViewResolver that supports GroovyMarkupView (i.e.\npublic class GroovyMarkupViewResolver extends AbstractTemplateViewResolver;\n", "des": "Support classes for the integration of Groovy Templates as Spring web view technology."}
{"index": 2086, "repo": "spring-webmvc-6.0.11", "code": "package json\n\n// Abstract base class for Jackson based and content type independent AbstractView implementations.\npublic abstract class AbstractJackson2View extends AbstractView;\n// Spring MVC View that renders JSON content by serializing the model for the current request using Jackson 2's ObjectMapper.\npublic class MappingJackson2JsonView extends AbstractJackson2View;\n", "des": "Support classes for providing a View implementation based on JSON serialization."}
{"index": 2087, "repo": "spring-webmvc-6.0.11", "code": "package script\n\n// Context passed to ScriptTemplateView render function in order to make the application context, the locale, the template loader and the url available on scripting side.\npublic class RenderingContext extends Object;\n// Interface to be implemented by objects that configure and manage a JSR-223 ScriptEngine for automatic lookup in a web environment.\npublic interface ScriptTemplateConfig;\n// An implementation of Spring MVC's ScriptTemplateConfig for creating a ScriptEngine for use in a web application.\npublic class ScriptTemplateConfigurer extends Object implements ScriptTemplateConfig;\n// An AbstractUrlBasedView subclass designed to run any template library based on a JSR-223 script engine.\npublic class ScriptTemplateView extends AbstractUrlBasedView;\n// Convenience subclass of UrlBasedViewResolver that supports ScriptTemplateView and custom subclasses of it.\npublic class ScriptTemplateViewResolver extends UrlBasedViewResolver;\n", "des": "Support classes for views based on the JSR-223 script engine abstraction (as included in Java 6+), e.g."}
{"index": 2088, "repo": "spring-webmvc-6.0.11", "code": "package xml\n\n// Spring MVC View that renders XML content by serializing the model for the current request using Jackson 2's XmlMapper.\npublic class MappingJackson2XmlView extends AbstractJackson2View;\n// Spring-MVC View that allows for response context to be rendered as the result of marshalling by a Marshaller.\npublic class MarshallingView extends AbstractView;\n", "des": "Support classes for providing a View implementation based on XML Marshalling."}
{"index": 2089, "repo": "spring-webmvc-6.0.11", "code": "package xslt\n\n// XSLT-driven View that allows for response context to be rendered as the result of an XSLT transformation.\npublic class XsltView extends AbstractUrlBasedView;\n// ViewResolver implementation that resolves instances of XsltView by translating the supplied view name into the URL of the XSLT stylesheet.\npublic class XsltViewResolver extends UrlBasedViewResolver;\n", "des": "Support classes for XSLT, providing a View implementation for XSLT stylesheets."}
{"index": 2090, "repo": "spring-webflux-6.0.11", "code": "package reactive\n\n// Context to assist with binding request data onto Objects and provide access to a shared Model with controller-specific attributes.\npublic class BindingContext extends Object;\n// Central dispatcher for HTTP request handlers/controllers.\npublic class DispatcherHandler extends Object implements org.springframework.web.server.WebHandler, org.springframework.web.cors.reactive.PreFlightRequestHandler, org.springframework.context.ApplicationContextAware;\n// Contract to map a Throwable to a HandlerResult.\npublic interface DispatchExceptionHandler;\n// Contract to abstract the details of invoking a handler of a given type.\npublic interface HandlerAdapter;\n// Interface to be implemented by objects that define a mapping between requests and handler objects.\npublic interface HandlerMapping;\n// Represent the result of the invocation of a handler or a handler method.\npublic class HandlerResult extends Object;\n// Process the HandlerResult, usually returned by a HandlerAdapter.\npublic interface HandlerResultHandler;\n", "des": "Top-level package for the spring-webflux module that contains DispatcherHandler, the main entry point for WebFlux server endpoint processing including key contracts used to map requests to handlers, invoke them, and process the result."}
{"index": 2091, "repo": "spring-webflux-6.0.11", "code": "package accept\n\n// Resolver that always resolves to a fixed list of media types.\npublic class FixedContentTypeResolver extends Object implements RequestedContentTypeResolver;\n// Resolver that looks at the 'Accept' header of the request.\npublic class HeaderContentTypeResolver extends Object implements RequestedContentTypeResolver;\n// Resolver that checks a query parameter and uses it to look up a matching MediaType.\npublic class ParameterContentTypeResolver extends Object implements RequestedContentTypeResolver;\n// Strategy to resolve the requested media types for a ServerWebExchange.\npublic interface RequestedContentTypeResolver;\n// Builder for a composite RequestedContentTypeResolver that delegates to other resolvers each implementing a different strategy to determine the requested content type -- e.g.\npublic class RequestedContentTypeResolverBuilder extends Object;\n// Helper to create and configure ParameterContentTypeResolver.\npublic static class RequestedContentTypeResolverBuilder.ParameterResolverConfigurer extends Object;\n", "des": "RequestedContentTypeResolver strategy and implementations to resolve the requested content type for a given request."}
{"index": 2092, "repo": "spring-webflux-6.0.11", "code": "package config\n\n// Assists with the creation of a CorsConfiguration instance for a given URL path pattern.\npublic class CorsRegistration extends Object;\n// Assists with the registration of global, URL pattern based CorsConfiguration mappings.\npublic class CorsRegistry extends Object;\n// A subclass of WebFluxConfigurationSupport that detects and delegates to all beans of type WebFluxConfigurer allowing them to customize the configuration provided by WebFluxConfigurationSupport.\n@Configuration(proxyBeanMethods=false) public class DelegatingWebFluxConfiguration extends WebFluxConfigurationSupport;\n// Adding this annotation to an @Configuration class imports the Spring WebFlux configuration from WebFluxConfigurationSupport that enables use of annotated controllers and functional endpoints.\n@Retention(RUNTIME) @Target(TYPE) @Documented @Import(DelegatingWebFluxConfiguration.class) public @interface EnableWebFlux;\n// Assist with configuring HandlerMapping's with path matching options.\npublic class PathMatchConfigurer extends Object;\n// Assists with the registration of resource resolvers and transformers.\npublic class ResourceChainRegistration extends Object;\n// Assist with creating and configuring a static resources handler.\npublic class ResourceHandlerRegistration extends Object;\n// Stores registrations of resource handlers for serving static resources such as images, css files and others through Spring WebFlux including setting cache headers optimized for efficient loading in a web browser.\npublic class ResourceHandlerRegistry extends Object;\n// Assist with configuring properties of a UrlBasedViewResolver.\npublic class UrlBasedViewResolverRegistration extends Object;\n// Assist with the configuration of a chain of ViewResolver's supporting different template mechanisms.\npublic class ViewResolverRegistry extends Object;\n// The main class for Spring WebFlux configuration.\npublic class WebFluxConfigurationSupport extends Object implements org.springframework.context.ApplicationContextAware;\n// Defines callback methods to customize the configuration for WebFlux applications enabled via @EnableWebFlux.\npublic interface WebFluxConfigurer;\n// A WebFluxConfigurer that delegates to one or more others.\npublic class WebFluxConfigurerComposite extends Object implements WebFluxConfigurer;\n", "des": "Spring WebFlux configuration infrastructure."}
{"index": 2093, "repo": "spring-webflux-6.0.11", "code": "package function\n\n// A function that can extract data from a ReactiveHttpInputMessage body.\n@FunctionalInterface public interface BodyExtractor<T,M extends org.springframework.http.ReactiveHttpInputMessage>;\n// Defines the context used during the extraction.\npublic static interface BodyExtractor.Context;\n// Static factory methods for BodyExtractor implementations.\npublic abstract class BodyExtractors extends Object;\n// A combination of functions that can populate a ReactiveHttpOutputMessage body.\n@FunctionalInterface public interface BodyInserter<T,M extends org.springframework.http.ReactiveHttpOutputMessage>;\n// Defines the context used during the insertion.\npublic static interface BodyInserter.Context;\n// Static factory methods for BodyInserter implementations.\npublic abstract class BodyInserters extends Object;\n// Extension of BodyInserter that allows for adding form data or multipart form data.\npublic static interface BodyInserters.FormInserter<T> extends BodyInserter<org.springframework.util.MultiValueMap<String,T>,org.springframework.http.client.reactive.ClientHttpRequest>;\n// Extension of BodyInserters.FormInserter that allows for adding asynchronous parts.\npublic static interface BodyInserters.MultipartInserter extends BodyInserters.FormInserter<Object>;\n// Exception thrown to indicate that a Content-Type is not supported.\npublic class UnsupportedMediaTypeException extends org.springframework.core.NestedRuntimeException;\n", "des": "Provides a foundation for both the reactive client and server subpackages."}
{"index": 2094, "repo": "spring-webflux-6.0.11", "code": "package client\n\n// Documented KeyValues for the HTTP client observations.\npublic enum ClientHttpObservationDocumentation extends Enum<ClientHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation;\n// \npublic static enum ClientHttpObservationDocumentation.HighCardinalityKeyNames extends Enum<ClientHttpObservationDocumentation.HighCardinalityKeyNames> implements io.micrometer.common.docs.KeyName;\n// \npublic static enum ClientHttpObservationDocumentation.LowCardinalityKeyNames extends Enum<ClientHttpObservationDocumentation.LowCardinalityKeyNames> implements io.micrometer.common.docs.KeyName;\n// Represents a typed, immutable, client-side HTTP request, as executed by the ExchangeFunction.\npublic interface ClientRequest;\n// Defines a builder for a request.\npublic static interface ClientRequest.Builder;\n// Context that holds information for metadata collection during the HTTP client exchange observations.\npublic class ClientRequestObservationContext extends io.micrometer.observation.transport.RequestReplySenderContext<ClientRequest.Builder,ClientResponse>;\n// Interface for an ObservationConvention related to HTTP client exchange observations.\npublic interface ClientRequestObservationConvention extends io.micrometer.observation.ObservationConvention<ClientRequestObservationContext>;\n// Represents an HTTP response, as returned by WebClient and also ExchangeFunction.\npublic interface ClientResponse;\n// Defines a builder for a response.\npublic static interface ClientResponse.Builder;\n// Represents the headers of the HTTP response.\npublic static interface ClientResponse.Headers;\n// Default implementation for a ClientRequestObservationConvention, extracting information from the ClientRequestObservationContext.\npublic class DefaultClientRequestObservationConvention extends Object implements ClientRequestObservationConvention;\n// Represents a function that filters an exchange function.\n@FunctionalInterface public interface ExchangeFilterFunction;\n// Static factory methods providing access to built-in implementations of ExchangeFilterFunction for basic authentication, error handling, etc.\npublic abstract class ExchangeFilterFunctions extends Object;\n// \n@Deprecated public static final class ExchangeFilterFunctions.Credentials extends Object;\n// Represents a function that exchanges a request for a (delayed) ClientResponse.\n@FunctionalInterface public interface ExchangeFunction;\n// Static factory methods to create an ExchangeFunction.\npublic abstract class ExchangeFunctions extends Object;\n", "des": "Provides a reactive WebClient that builds on top of the org.springframework.http.client.reactive reactive HTTP adapter layer."}
{"index": 2095, "repo": "spring-webflux-6.0.11", "code": "package support\n\n// Implementation of the ClientResponse interface that can be subclassed to adapt the request in a exchange filter function.\npublic class ClientResponseWrapper extends Object implements ClientResponse;\n// Implementation of the Headers interface that can be subclassed to adapt the headers in a exchange filter function.\npublic static class ClientResponseWrapper.HeadersWrapper extends Object implements ClientResponse.Headers;\n// HttpClientAdapter that enables an HttpServiceProxyFactory to use WebClient for request execution.\npublic final class WebClientAdapter extends Object implements org.springframework.web.service.invoker.HttpClientAdapter;\n", "des": "Classes supporting the org.springframework.web.reactive.function.client package."}
{"index": 2096, "repo": "spring-webflux-6.0.11", "code": "package server\n\n// Entity-specific subtype of ServerResponse that exposes entity data.\npublic interface EntityResponse<T> extends ServerResponse;\n// Defines a builder for EntityResponse.\npublic static interface EntityResponse.Builder<T>;\n// Represents a function that filters a handler function.\n@FunctionalInterface public interface HandlerFilterFunction<T extends ServerResponse,R extends ServerResponse>;\n// Represents a function that handles a request.\n@FunctionalInterface public interface HandlerFunction<T extends ServerResponse>;\n// Defines the strategies to be used for processing HandlerFunctions.\npublic interface HandlerStrategies;\n// A mutable builder for a HandlerStrategies.\npublic static interface HandlerStrategies.Builder;\n// Rendering-specific subtype of ServerResponse that exposes model and template data.\npublic interface RenderingResponse extends ServerResponse;\n// Defines a builder for RenderingResponse.\npublic static interface RenderingResponse.Builder;\n// Represents a function that evaluates on a given ServerRequest.\n@FunctionalInterface public interface RequestPredicate;\n// Implementations of RequestPredicate that implement various useful request matching operations, such as matching based on path, HTTP method, etc.\npublic abstract class RequestPredicates extends Object;\n// Receives notifications from the logical structure of request predicates.\npublic static interface RequestPredicates.Visitor;\n// Represents a function that routes to a handler function.\n@FunctionalInterface public interface RouterFunction<T extends ServerResponse>;\n// Central entry point to Spring's functional web framework. Exposes routing functionality, such as to create a RouterFunction using a discoverable builder-style API, to create a RouterFunction given a RequestPredicate and HandlerFunction, and to do further subrouting on an existing routing function.\npublic abstract class RouterFunctions extends Object;\n// Represents a discoverable builder for router functions.\npublic static interface RouterFunctions.Builder;\n// Receives notifications from the logical structure of router functions.\npublic static interface RouterFunctions.Visitor;\n// Represents a server-side HTTP request, as handled by a HandlerFunction.\npublic interface ServerRequest;\n// Defines a builder for a request.\npublic static interface ServerRequest.Builder;\n// Represents the headers of the HTTP request.\npublic static interface ServerRequest.Headers;\n", "des": "Provides the types that make up Spring's functional web framework for Reactive environments."}
{"index": 2097, "repo": "spring-webflux-6.0.11", "code": "package support\n\n// HandlerAdapter implementation that supports HandlerFunctions.\npublic class HandlerFunctionAdapter extends Object implements HandlerAdapter;\n// HandlerMapping implementation that supports RouterFunctions.\npublic class RouterFunctionMapping extends AbstractHandlerMapping implements org.springframework.beans.factory.InitializingBean;\n// Implementation of the ServerRequest interface that can be subclassed to adapt the request in a handler filter function.\npublic class ServerRequestWrapper extends Object implements ServerRequest;\n// Implementation of the Headers interface that can be subclassed to adapt the headers in a handler filter function.\npublic static class ServerRequestWrapper.HeadersWrapper extends Object implements ServerRequest.Headers;\n// HandlerResultHandler implementation that supports ServerResponses.\npublic class ServerResponseResultHandler extends Object implements HandlerResultHandler, org.springframework.beans.factory.InitializingBean, org.springframework.core.Ordered;\n", "des": "Classes supporting the org.springframework.web.reactive.function.server package."}
{"index": 2098, "repo": "spring-webflux-6.0.11", "code": "package handler\n\n// Abstract base class for HandlerMapping implementations.\npublic abstract class AbstractHandlerMapping extends org.springframework.context.support.ApplicationObjectSupport implements HandlerMapping, org.springframework.core.Ordered, org.springframework.beans.factory.BeanNameAware;\n// Abstract base class for URL-mapped HandlerMapping implementations.\npublic abstract class AbstractUrlHandlerMapping extends AbstractHandlerMapping;\n// Implementation of the HandlerMapping interface to map from URLs to request handler beans.\npublic class SimpleUrlHandlerMapping extends AbstractUrlHandlerMapping;\n// Common WebFlux exception handler that detects instances of ResponseStatusException (inherited from the base class) as well as exceptions annotated with @ResponseStatus by determining the HTTP status for them and updating the status of the response accordingly.\npublic class WebFluxResponseStatusExceptionHandler extends org.springframework.web.server.handler.ResponseStatusExceptionHandler;\n", "des": "Provides HandlerMapping implementations including abstract base classes."}
{"index": 2099, "repo": "spring-webflux-6.0.11", "code": "package resource\n\n// Abstract base class for filename suffix based VersionStrategy implementations, e.g.\npublic abstract class AbstractFileNameVersionStrategy extends Object implements VersionStrategy;\n// Abstract base class for VersionStrategy implementations that insert a prefix into the URL path, e.g.\npublic abstract class AbstractPrefixVersionStrategy extends Object implements VersionStrategy;\n// Base ResourceResolver providing consistent logging.\npublic abstract class AbstractResourceResolver extends Object implements ResourceResolver;\n// A ResourceResolver that resolves resources from a Cache or otherwise delegates to the resolver chain and caches the result.\npublic class CachingResourceResolver extends AbstractResourceResolver;\n// A ResourceTransformer that checks a Cache to see if a previously transformed resource exists in the cache and returns it if found, or otherwise delegates to the resolver chain and caches the result.\npublic class CachingResourceTransformer extends Object implements ResourceTransformer;\n// A VersionStrategy that calculates a Hex MD5 hash from the content of the resource and appends it to the file name, e.g.\npublic class ContentVersionStrategy extends AbstractFileNameVersionStrategy;\n// A ResourceTransformer implementation that modifies links in a CSS file to match the public URL paths that should be exposed to clients (e.g.\npublic class CssLinkResourceTransformer extends ResourceTransformerSupport;\n// Abstract base class for CssLinkResourceTransformer.LinkParser implementations.\nprotected abstract static class CssLinkResourceTransformer.AbstractLinkParser extends Object implements CssLinkResourceTransformer.LinkParser;\n// Extract content chunks that represent links.\n@FunctionalInterface protected static interface CssLinkResourceTransformer.LinkParser;\n// Resolver that delegates to the chain, and if a resource is found, it then attempts to find an encoded (e.g.\npublic class EncodedResourceResolver extends AbstractResourceResolver;\n// A VersionStrategy that relies on a fixed version applied as a request path prefix, e.g.\npublic class FixedVersionStrategy extends AbstractPrefixVersionStrategy;\n// Extended interface for a Resource to be written to an HTTP response.\npublic interface HttpResource extends org.springframework.core.io.Resource;\n// A simple ResourceResolver that tries to find a resource under the given locations matching to the request path.\npublic class PathResourceResolver extends AbstractResourceResolver;\n// A strategy for resolving a request to a server-side resource.\npublic interface ResourceResolver;\n", "des": "Support classes for serving static resources."}
{"index": 2100, "repo": "spring-webflux-6.0.11", "code": "package result\n\n// Base class for HandlerResultHandler with support for content negotiation and access to a ReactiveAdapter registry.\npublic abstract class HandlerResultHandlerSupport extends Object implements org.springframework.core.Ordered;\n// HandlerAdapter that allows using the plain WebHandler contract with the generic DispatcherHandler.\npublic class SimpleHandlerAdapter extends Object implements HandlerAdapter;\n", "des": "Support for various programming model styles including the invocation of different types of handlers, e.g."}
{"index": 2101, "repo": "spring-webflux-6.0.11", "code": "package condition\n\n// A base class for RequestCondition types providing implementations of AbstractRequestCondition.equals(Object), AbstractRequestCondition.hashCode(), and AbstractRequestCondition.toString().\npublic abstract class AbstractRequestCondition<T extends AbstractRequestCondition<T>> extends Object implements RequestCondition<T>;\n// Implements the RequestCondition contract by delegating to multiple RequestCondition types and using a logical conjunction (' && ') to ensure all conditions match a given request.\npublic class CompositeRequestCondition extends AbstractRequestCondition<CompositeRequestCondition>;\n// A logical disjunction (' || ') request condition to match a request's 'Content-Type' header to a list of media type expressions.\npublic final class ConsumesRequestCondition extends AbstractRequestCondition<ConsumesRequestCondition>;\n// A logical conjunction (' && ') request condition that matches a request against a set of header expressions with syntax defined in RequestMapping.headers().\npublic final class HeadersRequestCondition extends AbstractRequestCondition<HeadersRequestCondition>;\n// A contract for media type expressions (e.g.\npublic interface MediaTypeExpression;\n// A contract for \"name!=value\" style expression used to specify request parameters and request header conditions in @RequestMapping.\npublic interface NameValueExpression<T>;\n// A logical conjunction (' && ') request condition that matches a request against a set parameter expressions with syntax defined in RequestMapping.params().\npublic final class ParamsRequestCondition extends AbstractRequestCondition<ParamsRequestCondition>;\n// A logical disjunction (' || ') request condition that matches a request against a set of URL path patterns.\npublic final class PatternsRequestCondition extends AbstractRequestCondition<PatternsRequestCondition>;\n// A logical disjunction (' || ') request condition to match a request's 'Accept' header to a list of media type expressions.\npublic final class ProducesRequestCondition extends AbstractRequestCondition<ProducesRequestCondition>;\n// Contract for request mapping conditions.\npublic interface RequestCondition<T>;\n// A holder for a RequestCondition useful when the type of the request condition is not known ahead of time, e.g.\npublic final class RequestConditionHolder extends AbstractRequestCondition<RequestConditionHolder>;\n// A logical disjunction (' || ') request condition that matches a request against a set of RequestMethods.\npublic final class RequestMethodsRequestCondition extends AbstractRequestCondition<RequestMethodsRequestCondition>;\n", "des": "RequestCondition and implementations for matching requests based on different criteria."}
{"index": 2102, "repo": "spring-webflux-6.0.11", "code": "package method\n\n// Abstract base class for HandlerMapping implementations that define a mapping between a request and a HandlerMethod.\npublic abstract class AbstractHandlerMethodMapping<T> extends AbstractHandlerMapping implements org.springframework.beans.factory.InitializingBean;\n// Strategy to resolve the argument value for a method parameter in the context of the current HTTP request.\npublic interface HandlerMethodArgumentResolver;\n// Base class for HandlerMethodArgumentResolver implementations with access to a ReactiveAdapterRegistry and methods to check for method parameter support.\npublic abstract class HandlerMethodArgumentResolverSupport extends Object implements HandlerMethodArgumentResolver;\n// Extension of HandlerMethod that invokes the underlying method with argument values resolved from the current HTTP request through a list of HandlerMethodArgumentResolver.\npublic class InvocableHandlerMethod extends org.springframework.web.method.HandlerMethod;\n// Request mapping information.\npublic final class RequestMappingInfo extends Object implements RequestCondition<RequestMappingInfo>;\n// Defines a builder for creating a RequestMappingInfo.\npublic static interface RequestMappingInfo.Builder;\n// Container for configuration options used for request mapping purposes.\npublic static class RequestMappingInfo.BuilderConfiguration extends Object;\n// Abstract base class for classes for which RequestMappingInfo defines the mapping between a request and a handler method.\npublic abstract class RequestMappingInfoHandlerMapping extends AbstractHandlerMethodMapping<RequestMappingInfo>;\n// An extension of HandlerMethodArgumentResolver for implementations that are synchronous in nature and do not block to resolve values.\npublic interface SyncHandlerMethodArgumentResolver extends HandlerMethodArgumentResolver;\n// Extension of HandlerMethod that invokes the underlying method via InvocableHandlerMethod but uses sync argument resolvers only and thus can return directly a HandlerResult with no async wrappers.\npublic class SyncInvocableHandlerMethod extends org.springframework.web.method.HandlerMethod;\n", "des": "Infrastructure for handler method processing."}
{"index": 2103, "repo": "spring-webflux-6.0.11", "code": "package annotation\n\n// Abstract base class for argument resolvers that resolve method arguments by reading the request body with an HttpMessageReader.\npublic abstract class AbstractMessageReaderArgumentResolver extends HandlerMethodArgumentResolverSupport;\n// Abstract base class for result handlers that handle return values by writing to the response with HttpMessageWriter.\npublic abstract class AbstractMessageWriterResultHandler extends HandlerResultHandlerSupport;\n// Abstract base class for resolving method arguments from a named value.\npublic abstract class AbstractNamedValueArgumentResolver extends HandlerMethodArgumentResolverSupport;\n// Represents the information about a named value, including name, whether it's required and a default value.\nprotected static class AbstractNamedValueArgumentResolver.NamedValueInfo extends Object;\n// An extension of AbstractNamedValueArgumentResolver for named value resolvers that are synchronous and yet non-blocking.\npublic abstract class AbstractNamedValueSyncArgumentResolver extends AbstractNamedValueArgumentResolver implements SyncHandlerMethodArgumentResolver;\n// Helps to configure resolvers for Controller method arguments.\npublic class ArgumentResolverConfigurer extends Object;\n// No-op resolver for method arguments of type Continuation.\npublic class ContinuationHandlerMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n// Resolve method arguments annotated with @CookieValue.\npublic class CookieValueMethodArgumentResolver extends AbstractNamedValueSyncArgumentResolver;\n// Resolve Errors or BindingResult method arguments.\npublic class ErrorsMethodArgumentResolver extends HandlerMethodArgumentResolverSupport;\n// Resolves method arguments annotated with @Value.\npublic class ExpressionValueMethodArgumentResolver extends AbstractNamedValueSyncArgumentResolver;\n// Resolves method arguments of type HttpEntity or RequestEntity by reading the body of the request through a compatible HttpMessageReader.\npublic class HttpEntityMethodArgumentResolver extends AbstractMessageReaderArgumentResolver;\n// Resolves arguments of type Map annotated with @MatrixVariable where the annotation does not specify a name.\npublic class MatrixVariableMapMethodArgumentResolver extends HandlerMethodArgumentResolverSupport implements SyncHandlerMethodArgumentResolver;\n// Resolves arguments annotated with @MatrixVariable.\npublic class MatrixVariableMethodArgumentResolver extends AbstractNamedValueSyncArgumentResolver;\n// Resolve @ModelAttribute annotated method arguments.\npublic class ModelAttributeMethodArgumentResolver extends HandlerMethodArgumentResolverSupport;\n// Resolver for a controller method argument of type Model that can also be resolved as a Map.\npublic class ModelMethodArgumentResolver extends HandlerMethodArgumentResolverSupport implements SyncHandlerMethodArgumentResolver;\n", "des": "Infrastructure for annotation-based handler method processing."}
{"index": 2104, "repo": "spring-webflux-6.0.11", "code": "package view\n\n// Abstract base class for URL-based views.\npublic abstract class AbstractUrlBasedView extends AbstractView implements org.springframework.beans.factory.InitializingBean;\n// Base class for View implementations.\npublic abstract class AbstractView extends Object implements View, org.springframework.beans.factory.BeanNameAware, org.springframework.context.ApplicationContextAware;\n// Simple adapter to expose the bind status of a field or object.\npublic class BindStatus extends Object;\n// View that writes model attribute(s) with an HttpMessageWriter.\npublic class HttpMessageWriterView extends Object implements View;\n// View that redirects to an absolute or context relative URL.\npublic class RedirectView extends AbstractUrlBasedView;\n// Public API for HTML rendering.\npublic interface Rendering;\n// Defines a builder for Rendering.\npublic static interface Rendering.Builder<B extends Rendering.Builder<B>>;\n// Extends Rendering.Builder with extra options for redirect scenarios.\npublic static interface Rendering.RedirectBuilder extends Rendering.Builder<Rendering.RedirectBuilder>;\n// Context holder for request-specific state, like the MessageSource to use, current locale, binding errors, etc.\npublic class RequestContext extends Object;\n// A contract for inspecting and potentially modifying request data values such as URL query parameters or form field values before they are rendered by a view or before a redirect.\npublic interface RequestDataValueProcessor;\n// A ViewResolver that allows direct resolution of symbolic view names to URLs without explicit mapping definitions.\npublic class UrlBasedViewResolver extends ViewResolverSupport implements ViewResolver, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean;\n// Contract to render HandlerResult to the HTTP response.\npublic interface View;\n// HandlerResultHandler that encapsulates the view resolution algorithm supporting the following return types: Void or no value -- default view name String -- view name unless @ModelAttribute-annotated View -- View to render with Model -- attributes to add to the model Map -- attributes to add to the model Rendering -- use case driven API for view resolution @ModelAttribute -- attribute for the model Non-simple value -- attribute for the model\npublic class ViewResolutionResultHandler extends HandlerResultHandlerSupport implements HandlerResultHandler, org.springframework.core.Ordered;\n", "des": "Support for result handling through view resolution."}
{"index": 2105, "repo": "spring-webflux-6.0.11", "code": "package freemarker\n\n// Interface to be implemented by objects that configure and manage a FreeMarker Configuration object in a web environment.\npublic interface FreeMarkerConfig;\n// Configures FreeMarker for web usage via the \"configLocation\" and/or \"freemarkerSettings\" and/or \"templateLoaderPath\" properties.\npublic class FreeMarkerConfigurer extends org.springframework.ui.freemarker.FreeMarkerConfigurationFactory implements FreeMarkerConfig, org.springframework.beans.factory.InitializingBean, org.springframework.context.ResourceLoaderAware;\n// A View implementation that uses the FreeMarker template engine.\npublic class FreeMarkerView extends AbstractUrlBasedView;\n// A ViewResolver for resolving FreeMarkerView instances, i.e.\npublic class FreeMarkerViewResolver extends UrlBasedViewResolver;\n", "des": "Support classes for the integration of FreeMarker as Spring web view technology."}
{"index": 2106, "repo": "spring-webflux-6.0.11", "code": "package script\n\n// Context passed to ScriptTemplateView render function in order to make the application context, the locale, the template loader and the url available on scripting side.\npublic class RenderingContext extends Object;\n// Interface to be implemented by objects that configure and manage a JSR-223 ScriptEngine for automatic lookup in a web environment.\npublic interface ScriptTemplateConfig;\n// An implementation of the Spring WebFlux ScriptTemplateConfig for creating a ScriptEngine for use in a web application.\npublic class ScriptTemplateConfigurer extends Object implements ScriptTemplateConfig;\n// An AbstractUrlBasedView subclass designed to run any template library based on a JSR-223 script engine.\npublic class ScriptTemplateView extends AbstractUrlBasedView;\n// Convenience subclass of UrlBasedViewResolver that supports ScriptTemplateView and custom subclasses of it.\npublic class ScriptTemplateViewResolver extends UrlBasedViewResolver;\n", "des": "Support classes for views based on the JSR-223 script engine abstraction (as included in Java 6+), e.g."}
{"index": 2107, "repo": "spring-webflux-6.0.11", "code": "package socket\n\n// Representation of WebSocket \"close\" status codes and reasons.\npublic final class CloseStatus extends Object;\n// Simple container of information related to the handshake request that started the WebSocketSession session.\npublic class HandshakeInfo extends Object;\n// Handler for a WebSocket session.\npublic interface WebSocketHandler;\n// Representation of a WebSocket message.\npublic class WebSocketMessage extends Object;\n// WebSocket message types.\npublic static enum WebSocketMessage.Type extends Enum<WebSocketMessage.Type>;\n// Represents a WebSocket session.\npublic interface WebSocketSession;\n", "des": "Abstractions and support classes for reactive WebSocket interactions."}
{"index": 2108, "repo": "spring-webflux-6.0.11", "code": "package adapter\n\n// Base class for WebSocketSession implementations that bridge between event-listener WebSocket APIs (e.g.\npublic abstract class AbstractListenerWebSocketSession<T> extends AbstractWebSocketSession<T> implements Subscriber<Void>;\n// Convenient base class for WebSocketSession implementations that holds common fields and exposes accessors.\npublic abstract class AbstractWebSocketSession<T> extends Object implements WebSocketSession;\n// WebSocketHandler decorator that enriches the context of the target handler.\npublic final class ContextWebSocketHandler extends Object implements WebSocketHandler;\n// Jetty @WebSocket handler that delegates events to a reactive WebSocketHandler and its session.\n@WebSocket public class JettyWebSocketHandlerAdapter extends Object;\n// Spring WebSocketSession implementation that adapts to a Jetty WebSocket Session.\npublic class JettyWebSocketSession extends AbstractListenerWebSocketSession<org.eclipse.jetty.websocket.api.Session>;\n// Base class for Netty-based WebSocketSession adapters that provides convenience methods to convert Netty WebSocketFrames to and from WebSocketMessages.\npublic abstract class Netty5WebSocketSessionSupport<T> extends AbstractWebSocketSession<T>;\n// Base class for Netty-based WebSocketSession adapters that provides convenience methods to convert Netty WebSocketFrames to and from WebSocketMessages.\npublic abstract class NettyWebSocketSessionSupport<T> extends AbstractWebSocketSession<T>;\n// WebSocketSession implementation for use with the Reactor Netty's (Netty 5) NettyInbound and NettyOutbound.\npublic class ReactorNetty2WebSocketSession extends Netty5WebSocketSessionSupport<ReactorNetty2WebSocketSession.WebSocketConnection>;\n// Simple container for NettyInbound and NettyOutbound.\npublic static class ReactorNetty2WebSocketSession.WebSocketConnection extends Object;\n// WebSocketSession implementation for use with the Reactor Netty's NettyInbound and NettyOutbound.\npublic class ReactorNettyWebSocketSession extends NettyWebSocketSessionSupport<ReactorNettyWebSocketSession.WebSocketConnection>;\n// Simple container for NettyInbound and NettyOutbound.\npublic static class ReactorNettyWebSocketSession.WebSocketConnection extends Object;\n// Adapter for the Jakarta WebSocket API (JSR-356) that delegates events to a reactive WebSocketHandler and its session.\npublic class StandardWebSocketHandlerAdapter extends Endpoint;\n", "des": "Classes adapting Spring's Reactive WebSocket API to and from WebSocket runtimes."}
{"index": 2109, "repo": "spring-webflux-6.0.11", "code": "package client\n\n// \n@Deprecated(since=\"6.0.3\", forRemoval=true) public class JettyWebSocketClient extends Object implements WebSocketClient, org.springframework.context.Lifecycle;\n// WebSocketClient implementation for use with Reactor Netty for Netty 5.\npublic class ReactorNetty2WebSocketClient extends Object implements WebSocketClient;\n// WebSocketClient implementation for use with Reactor Netty.\npublic class ReactorNettyWebSocketClient extends Object implements WebSocketClient;\n// WebSocketClient implementation for use with the Jakarta WebSocket API.\npublic class StandardWebSocketClient extends Object implements WebSocketClient;\n// WebSocketClient implementation for use with Tomcat, based on the Jakarta WebSocket API.\npublic class TomcatWebSocketClient extends StandardWebSocketClient;\n// Undertow based implementation of WebSocketClient.\npublic class UndertowWebSocketClient extends Object implements WebSocketClient;\n// Contract for reactive-style handling of a WebSocket session.\npublic interface WebSocketClient;\n", "des": "Client support for WebSocket interactions."}
{"index": 2110, "repo": "spring-webflux-6.0.11", "code": "package server\n\n// A strategy for upgrading an HTTP request to a WebSocket session depending on the underlying network runtime.\npublic interface RequestUpgradeStrategy;\n// A service to delegate WebSocket-related HTTP requests to.\npublic interface WebSocketService;\n", "des": "Server support for WebSocket interactions."}
{"index": 2111, "repo": "spring-webflux-6.0.11", "code": "package support\n\n// WebSocketService implementation that handles a WebSocket HTTP handshake request by delegating to a RequestUpgradeStrategy which is either auto-detected (no-arg constructor) from the classpath but can also be explicitly configured.\npublic class HandshakeWebSocketService extends Object implements WebSocketService, org.springframework.context.Lifecycle;\n// HandlerAdapter that allows DispatcherHandler to support handlers of type WebSocketHandler with such handlers mapped to URL patterns via SimpleUrlHandlerMapping.\n@ImportRuntimeHints(org.springframework.web.reactive.socket.server.support.HandshakeWebSocketServiceRuntimeHints.class) public class WebSocketHandlerAdapter extends Object implements HandlerAdapter, org.springframework.core.Ordered;\n// A predicate for use with AbstractUrlHandlerMapping.setHandlerPredicate(java.util.function.BiPredicate<java.lang.Object, org.springframework.web.server.ServerWebExchange>) to ensure only WebSocket handshake requests are matched to handlers of type WebSocketHandler.\npublic class WebSocketUpgradeHandlerPredicate extends Object implements BiPredicate<Object,org.springframework.web.server.ServerWebExchange>;\n", "des": "Server-side support classes for WebSocket requests."}
{"index": 2112, "repo": "spring-webflux-6.0.11", "code": "package upgrade\n\n// A WebSocket RequestUpgradeStrategy for Jetty 11.\npublic class JettyRequestUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n// A WebSocket RequestUpgradeStrategy for Reactor Netty for Netty 5.\npublic class ReactorNetty2RequestUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n// A WebSocket RequestUpgradeStrategy for Reactor Netty.\npublic class ReactorNettyRequestUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n// A WebSocket RequestUpgradeStrategy for the Jakarta WebSocket API 2.1+.\npublic class StandardWebSocketUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n// A WebSocket RequestUpgradeStrategy for Apache Tomcat.\npublic class TomcatRequestUpgradeStrategy extends StandardWebSocketUpgradeStrategy;\n// A WebSocket RequestUpgradeStrategy for Undertow.\npublic class UndertowRequestUpgradeStrategy extends Object implements RequestUpgradeStrategy;\n", "des": "Holds implementations of RequestUpgradeStrategy."}
{"index": 2113, "repo": "spring-retry-2.0.2", "code": "package retry\n\n// \npublic class ExhaustedRetryException extends RetryException;\n// Callback for stateful retry after all tries are exhausted.\npublic interface RecoveryCallback<T>;\n// Callback interface for an operation that can be retried using a RetryOperations.\npublic interface RetryCallback<T,E extends Throwable>;\n// Low-level access to ongoing retry operation.\npublic interface RetryContext extends org.springframework.core.AttributeAccessor;\n// \npublic class RetryException extends org.springframework.core.NestedRuntimeException;\n// Interface for listener that can be used to add behaviour to a retry.\npublic interface RetryListener;\n// Defines the basic set of operations implemented by RetryOperations to execute operations with configurable retry behaviour.\npublic interface RetryOperations;\n// A RetryPolicy is responsible for allocating and managing resources needed by RetryOperations.\npublic interface RetryPolicy extends Serializable;\n// Stateful retry is characterised by having to recognise the items that are being processed, so this interface is used primarily to provide a cache key in between failed attempts.\npublic interface RetryState;\n// Interface for statistics reporting of retry attempts.\npublic interface RetryStatistics;\n// \npublic class TerminatedRetryException extends RetryException;\n", "des": "Infrastructure implementations of retry concerns."}
{"index": 2114, "repo": "spring-retry-2.0.2", "code": "package backoff\n\n// \npublic interface BackOffContext extends Serializable;\n// Exception class signifiying that an attempt to back off using a BackOffPolicy was interrupted, most likely by an InterruptedException during a call to Thread.sleep(long).\npublic class BackOffInterruptedException extends RetryException;\n// Strategy interface to control back off between attempts in a single retry operation.\npublic interface BackOffPolicy;\n// Fluent API for creating a BackOffPolicy based on given attributes.\npublic class BackOffPolicyBuilder extends Object;\n// Implementation of BackOffPolicy that increases the back off period for each retry attempt in a given set up to a limit.\npublic class ExponentialBackOffPolicy extends Object implements SleepingBackOffPolicy<ExponentialBackOffPolicy>;\n// Implementation of ExponentialBackOffPolicy that chooses a random multiple of the interval that would come from a simple deterministic exponential.\npublic class ExponentialRandomBackOffPolicy extends ExponentialBackOffPolicy;\n// Implementation of BackOffPolicy that pauses for a fixed period of time before continuing.\npublic class FixedBackOffPolicy extends StatelessBackOffPolicy implements SleepingBackOffPolicy<FixedBackOffPolicy>;\n// Implementation of BackOffPolicy that performs a no-op and as such all retry operation in a given set proceed one after the other with no pause.\npublic class NoBackOffPolicy extends StatelessBackOffPolicy;\n// \n@Deprecated public class ObjectWaitSleeper extends Object implements Sleeper;\n// Strategy interface for backoff policies to delegate the pausing of execution.\npublic interface Sleeper extends Serializable;\n// A interface which can be mixed in by BackOffPolicys indicating that they sleep when backing off.\npublic interface SleepingBackOffPolicy<T extends SleepingBackOffPolicy<T>> extends BackOffPolicy;\n// Simple base class for BackOffPolicy implementations that maintain no state across invocations.\npublic abstract class StatelessBackOffPolicy extends Object implements BackOffPolicy;\n// Simple Sleeper implementation that just blocks the current Thread with sleep period.\npublic class ThreadWaitSleeper extends Object implements Sleeper;\n// Implementation of BackOffPolicy that pauses for a random period of time before continuing.\npublic class UniformRandomBackOffPolicy extends StatelessBackOffPolicy implements SleepingBackOffPolicy<UniformRandomBackOffPolicy>;\n", "des": "Infrastructure implementations of retry backoff concerns."}
{"index": 2115, "repo": "spring-retry-2.0.2", "code": "package context\n\n// \npublic class RetryContextSupport extends org.springframework.core.AttributeAccessorSupport implements RetryContext;\n", "des": "Infrastructure implementations of retry context concerns."}
{"index": 2116, "repo": "spring-retry-2.0.2", "code": "package interceptor\n\n// \npublic class FixedKeyGenerator extends Object implements MethodArgumentsKeyGenerator;\n// Interface that allows method parameters to be identified and tagged by a unique key.\npublic interface MethodArgumentsKeyGenerator;\n// Strategy interface for recovery action when processing of an item fails.\npublic interface MethodInvocationRecoverer<T>;\n// Callback class for a Spring AOP reflective `MethodInvocation` that can be retried using a RetryOperations.\npublic abstract class MethodInvocationRetryCallback<T,E extends Throwable> extends Object implements RetryCallback<T,E>;\n// Strategy interface to distinguish new arguments from ones that have been processed before, e.g.\npublic interface NewMethodArgumentsIdentifier;\n// Marker interface for proxies that are providing retryable behaviour.\npublic interface Retryable;\n// Simplified facade to make it easier and simpler to build a StatefulRetryOperationsInterceptor or (stateless) RetryOperationsInterceptor by providing a fluent interface to defining the behavior on error.\npublic abstract class RetryInterceptorBuilder<T extends org.aopalliance.intercept.MethodInterceptor> extends Object;\n// \npublic static class RetryInterceptorBuilder.CircuitBreakerInterceptorBuilder extends RetryInterceptorBuilder<StatefulRetryOperationsInterceptor>;\n// \npublic static class RetryInterceptorBuilder.StatefulRetryInterceptorBuilder extends RetryInterceptorBuilder<StatefulRetryOperationsInterceptor>;\n// \npublic static class RetryInterceptorBuilder.StatelessRetryInterceptorBuilder extends RetryInterceptorBuilder<RetryOperationsInterceptor>;\n// A MethodInterceptor that can be used to automatically retry calls to a method on a service if it fails.\npublic class RetryOperationsInterceptor extends Object implements org.aopalliance.intercept.MethodInterceptor;\n// A MethodInterceptor that can be used to automatically retry calls to a method on a service if it fails.\npublic class StatefulRetryOperationsInterceptor extends Object implements org.aopalliance.intercept.MethodInterceptor;\n", "des": "Infrastructure implementations of retry aop concerns."}
{"index": 2117, "repo": "spring-retry-2.0.2", "code": "package listener\n\n// Empty method implementation of RetryListener with focus on the AOP reflective method invocations providing convenience retry listener type-safe (with a `MethodInvocationRetryCallback` callback parameter) specific methods.\npublic class MethodInvocationRetryListenerSupport extends Object implements RetryListener;\n// \n@Deprecated(since=\"2.0.1\", forRemoval=true) public class RetryListenerSupport extends Object implements RetryListener;\n", "des": "Infrastructure implementations of retry interceptor concerns."}
{"index": 2118, "repo": "spring-retry-2.0.2", "code": "package policy\n\n// A RetryPolicy that always permits a retry.\npublic class AlwaysRetryPolicy extends NeverRetryPolicy;\n// A policy, that is based on BinaryExceptionClassifier.\npublic class BinaryExceptionClassifierRetryPolicy extends Object implements RetryPolicy;\n// \npublic class CircuitBreakerRetryPolicy extends Object implements RetryPolicy;\n// A RetryPolicy that composes a list of other policies and delegates calls to them in order.\npublic class CompositeRetryPolicy extends Object implements RetryPolicy;\n// A RetryPolicy that dynamically adapts to one of a set of injected policies according to the value of the latest exception.\npublic class ExceptionClassifierRetryPolicy extends Object implements RetryPolicy;\n// Subclass of SimpleRetryPolicy that delegates to super.canRetry() and, if true, further evaluates an expression against the last thrown exception.\npublic class ExpressionRetryPolicy extends SimpleRetryPolicy implements org.springframework.beans.factory.BeanFactoryAware;\n// Map-based implementation of RetryContextCache.\npublic class MapRetryContextCache extends Object implements RetryContextCache;\n// Simple retry policy that is aware only about attempt count and retries a fixed number of times.\npublic class MaxAttemptsRetryPolicy extends Object implements RetryPolicy;\n// A RetryPolicy that allows the first attempt but never permits a retry.\npublic class NeverRetryPolicy extends Object implements RetryPolicy;\n// Exception that indicates that a cache limit was exceeded.\npublic class RetryCacheCapacityExceededException extends RetryException;\n// Simple map-like abstraction for stateful retry policies to use when storing and retrieving RetryContext instances.\npublic interface RetryContextCache;\n// Simple retry policy that retries a fixed number of times for a set of named exceptions (and subclasses).\npublic class SimpleRetryPolicy extends Object implements RetryPolicy;\n// Map-based implementation of RetryContextCache.\npublic class SoftReferenceMapRetryContextCache extends Object implements RetryContextCache;\n// A RetryPolicy that allows a retry only if it hasn't timed out.\npublic class TimeoutRetryPolicy extends Object implements RetryPolicy;\n", "des": "Infrastructure implementations of retry policy concerns."}
{"index": 2119, "repo": "spring-retry-2.0.2", "code": "package support\n\n// A root object containing the method arguments to use in expression evaluation.\npublic class Args extends Object;\n// \npublic class DefaultRetryState extends Object implements RetryState;\n// The results of a simulation.\npublic class RetrySimulation extends Object;\n// \npublic static class RetrySimulation.SleepSequence extends Object;\n// A RetrySimulator is a tool for exercising retry + backoff operations.\npublic class RetrySimulator extends Object;\n// Global variable support for retry clients.\npublic final class RetrySynchronizationManager extends Object;\n// Template class that simplifies the execution of operations with retry semantics.\npublic class RetryTemplate extends Object implements RetryOperations;\n// Builder that provides a fluent API to configure new instances of RetryTemplate.\npublic class RetryTemplateBuilder extends Object;\n", "des": "Infrastructure implementations of retry support concerns."}
{"index": 2120, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package dsl\n\n// Entry point to Spring Boot's Gradle DSL.\npublic class SpringBootExtension extends Object;\n", "des": "Spring Boot Gradle DSL."}
{"index": 2121, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package plugin\n\n// Task for resolving the name of the application's main class.\n@DisableCachingByDefault(because=\"Not worth caching\") public class ResolveMainClassName extends DefaultTask;\n// Gradle plugin for Spring Boot AOT.\npublic class SpringBootAotPlugin extends Object implements Plugin<Project>;\n// Gradle plugin for Spring Boot.\npublic class SpringBootPlugin extends Object implements Plugin<Project>;\n", "des": "Central classes for the Spring Boot Gradle plugin."}
{"index": 2122, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package aot\n\n// Specialization of JavaExec to be used as a base class for tasks that perform ahead-of-time processing.\n@DisableCachingByDefault(because=\"Cacheability can only be determined by a concrete implementation\") public abstract class AbstractAot extends JavaExec;\n// Custom JavaExec task for ahead-of-time processing of a Spring Boot application.\n@CacheableTask public abstract class ProcessAot extends AbstractAot;\n// Custom JavaExec task for ahead-of-time processing of a Spring Boot application's tests.\n@CacheableTask public class ProcessTestAot extends AbstractAot;\n", "des": "Support for ahead-of-time processing of an application built with Gradle."}
{"index": 2123, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package buildinfo\n\n// Task for generating a build-info.properties file from a Project.\n@DisableCachingByDefault(because=\"Not worth caching\") public abstract class BuildInfo extends DefaultTask;\n// The properties that are written into the build-info.properties file.\npublic abstract class BuildInfoProperties extends Object implements Serializable;\n", "des": "Support for producing build info for consumption by Spring Boot's actuator."}
{"index": 2124, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package bundling\n\n// A Spring Boot \"fat\" archive task.\npublic interface BootArchive extends Task;\n// A Task for bundling an application into an OCI image using a buildpack.\n@DisableCachingByDefault public abstract class BootBuildImage extends DefaultTask;\n// A custom Jar task that produces a Spring Boot executable jar.\n@DisableCachingByDefault(because=\"Not worth caching\") public abstract class BootJar extends Jar implements BootArchive;\n// A custom War task that produces a Spring Boot executable war.\n@DisableCachingByDefault(because=\"Not worth caching\") public abstract class BootWar extends War implements BootArchive;\n// Configuration for an image building cache.\npublic class CacheSpec extends Object;\n// Configuration for an image building cache stored in a Docker volume.\npublic abstract static class CacheSpec.VolumeCacheSpec extends Object;\n// Encapsulates Docker configuration options.\npublic abstract class DockerSpec extends Object;\n// Encapsulates Docker registry authentication configuration options.\npublic abstract static class DockerSpec.DockerRegistrySpec extends Object;\n// Encapsulates the configuration of the launch script for an executable jar or war.\npublic class LaunchScriptConfiguration extends Object implements Serializable;\n// Encapsulates the configuration for a layered archive.\npublic abstract class LayeredSpec extends Object;\n// An LayeredSpec.IntoLayersSpec that controls the layers to which application classes and resources belong.\npublic static class LayeredSpec.ApplicationSpec extends LayeredSpec.IntoLayersSpec<LayeredSpec.IntoLayerSpec>;\n// Spec that controls the dependencies that should be part of a particular layer.\npublic static class LayeredSpec.DependenciesIntoLayerSpec extends LayeredSpec.IntoLayerSpec;\n// An LayeredSpec.IntoLayersSpec that controls the layers to which dependencies belong.\npublic static class LayeredSpec.DependenciesSpec extends LayeredSpec.IntoLayersSpec<LayeredSpec.DependenciesIntoLayerSpec> implements Serializable;\n// Spec that controls the content that should be part of a particular layer.\npublic static class LayeredSpec.IntoLayerSpec extends Object implements Serializable;\n// Base class for specs that control the layers to which a category of content should belong.\npublic abstract static class LayeredSpec.IntoLayersSpec<S extends LayeredSpec.IntoLayerSpec> extends Object implements Serializable;\n", "des": "Support for creating executable jars and wars."}
{"index": 2125, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package run\n\n// Custom JavaExec task for running a Spring Boot application.\n@DisableCachingByDefault(because=\"Application should always run\") public abstract class BootRun extends JavaExec;\n", "des": "Support for running Spring Boot applications."}
{"index": 2126, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "package util\n\n// Extracts version information for a Class.\npublic final class VersionExtractor extends Object;\n", "des": "Shared utility classes."}
{"index": 2127, "repo": "spring-context-support-6.0.11", "code": "package caffeine\n\n// Spring Cache adapter implementation on top of a Caffeine Cache instance.\npublic class CaffeineCache extends org.springframework.cache.support.AbstractValueAdaptingCache;\n// CacheManager implementation that lazily builds CaffeineCache instances for each CaffeineCacheManager.getCache(java.lang.String) request.\npublic class CaffeineCacheManager extends Object implements org.springframework.cache.CacheManager;\n", "des": "Support classes for the open source cache in Caffeine library, allowing to set up Caffeine caches within Spring's cache abstraction."}
{"index": 2128, "repo": "spring-context-support-6.0.11", "code": "package jcache\n\n// Cache implementation on top of a javax.cache.Cache instance.\npublic class JCacheCache extends org.springframework.cache.support.AbstractValueAdaptingCache;\n// CacheManager implementation backed by a JCache javax.cache.CacheManager.\npublic class JCacheCacheManager extends AbstractTransactionSupportingCacheManager;\n// FactoryBean for a JCache javax.cache.CacheManager, obtaining a pre-defined CacheManager by name through the standard JCache javax.cache.Caching class.\npublic class JCacheManagerFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<javax.cache.CacheManager>, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n", "des": "Implementation package for JSR-107 (javax.cache aka \"JCache\") based caches."}
{"index": 2129, "repo": "spring-context-support-6.0.11", "code": "package config\n\n// Abstract JSR-107 specific @Configuration class providing common structure for enabling JSR-107 annotation-driven cache management capability.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractJCacheConfiguration extends org.springframework.cache.annotation.AbstractCachingConfiguration;\n// Extension of CachingConfigurer for the JSR-107 implementation.\npublic interface JCacheConfigurer extends org.springframework.cache.annotation.CachingConfigurer;\n// \n@Deprecated(since=\"6.0\") public class JCacheConfigurerSupport extends org.springframework.cache.annotation.CachingConfigurerSupport implements JCacheConfigurer;\n// @Configuration class that registers the Spring infrastructure beans necessary to enable proxy-based annotation-driven JSR-107 cache management.\n@Configuration(proxyBeanMethods=false) @Role(2) public class ProxyJCacheConfiguration extends AbstractJCacheConfiguration;\n", "des": "Support package for declarative JSR-107 caching configuration."}
{"index": 2130, "repo": "spring-context-support-6.0.11", "code": "package interceptor\n\n// Abstract implementation of JCacheOperationSource that caches attributes for methods and implements a fallback policy: 1.\npublic abstract class AbstractFallbackJCacheOperationSource extends Object implements JCacheOperationSource;\n// Implementation of the JCacheOperationSource interface that reads the JSR-107 CacheResult, CachePut, CacheRemove and CacheRemoveAll annotations.\npublic abstract class AnnotationJCacheOperationSource extends AbstractFallbackJCacheOperationSource;\n// Advisor driven by a JCacheOperationSource, used to include a cache advice bean for methods that are cacheable.\npublic class BeanFactoryJCacheOperationSourceAdvisor extends org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor;\n// The default JCacheOperationSource implementation delegating default operations to configurable services with sensible defaults when not present.\npublic class DefaultJCacheOperationSource extends AnnotationJCacheOperationSource implements org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.SmartInitializingSingleton;\n// Base class for JSR-107 caching aspects, such as the JCacheInterceptor or an AspectJ aspect.\npublic class JCacheAspectSupport extends org.springframework.cache.interceptor.AbstractCacheInvoker implements org.springframework.beans.factory.InitializingBean;\n// AOP Alliance MethodInterceptor for declarative cache management using JSR-107 caching annotations.\npublic class JCacheInterceptor extends JCacheAspectSupport implements org.aopalliance.intercept.MethodInterceptor, Serializable;\n// Model the base of JSR-107 cache operation through an interface contract.\npublic interface JCacheOperation<A extends Annotation> extends org.springframework.cache.interceptor.BasicOperation, javax.cache.annotation.CacheMethodDetails<A>;\n// Interface used by JCacheInterceptor.\npublic interface JCacheOperationSource;\n// \n@Deprecated(since=\"6.0.10\", forRemoval=true) public abstract class JCacheOperationSourcePointcut extends org.springframework.aop.support.StaticMethodMatcherPointcut implements Serializable;\n// A simple CacheResolver that resolves the exception cache based on a configurable CacheManager and the name of the cache: CacheResultOperation.getExceptionCacheName().\npublic class SimpleExceptionCacheResolver extends org.springframework.cache.interceptor.AbstractCacheResolver;\n", "des": "AOP-based solution for declarative caching demarcation using JSR-107 annotations."}
{"index": 2131, "repo": "spring-context-support-6.0.11", "code": "package transaction\n\n// Base class for CacheManager implementations that want to support built-in awareness of Spring-managed transactions.\npublic abstract class AbstractTransactionSupportingCacheManager extends org.springframework.cache.support.AbstractCacheManager;\n// Cache decorator which synchronizes its TransactionAwareCacheDecorator.put(java.lang.Object, java.lang.Object), TransactionAwareCacheDecorator.evict(java.lang.Object) and TransactionAwareCacheDecorator.clear() operations with Spring-managed transactions (through Spring's TransactionSynchronizationManager), performing the actual cache put/evict/clear operation only in the after-commit phase of a successful transaction.\npublic class TransactionAwareCacheDecorator extends Object implements org.springframework.cache.Cache;\n// Proxy for a target CacheManager, exposing transaction-aware Cache objects which synchronize their Cache.put(java.lang.Object, java.lang.Object) operations with Spring-managed transactions (through Spring's TransactionSynchronizationManager), performing the actual cache put operation only in the after-commit phase of a successful transaction.\npublic class TransactionAwareCacheManagerProxy extends Object implements org.springframework.cache.CacheManager, org.springframework.beans.factory.InitializingBean;\n", "des": "Transaction-aware decorators for the org.springframework.cache package."}
{"index": 2132, "repo": "spring-context-support-6.0.11", "code": "package mail\n\n// Exception thrown on failed authentication.\npublic class MailAuthenticationException extends MailException;\n// Base class for all mail exceptions.\npublic abstract class MailException extends org.springframework.core.NestedRuntimeException;\n// This is a common interface for mail messages, allowing a user to set key values required in assembling a mail message, without needing to know if the underlying message is a simple text message or a more sophisticated MIME message.\npublic interface MailMessage;\n// Exception thrown if illegal message properties are encountered.\npublic class MailParseException extends MailException;\n// Exception to be thrown by user code if a mail cannot be prepared properly, for example when a FreeMarker template cannot be rendered for the mail text.\npublic class MailPreparationException extends MailException;\n// This interface defines a strategy for sending simple mails.\npublic interface MailSender;\n// Exception thrown when a mail sending error is encountered.\npublic class MailSendException extends MailException;\n// Models a simple mail message, including data such as the from, to, cc, subject, and text fields.\npublic class SimpleMailMessage extends Object implements MailMessage, Serializable;\n", "des": "Spring's generic mail infrastructure."}
{"index": 2133, "repo": "spring-context-support-6.0.11", "code": "package javamail\n\n// Spring-configurable FileTypeMap implementation that will read MIME type to file extension mappings from a standard JavaMail MIME type mapping file, using a standard MimetypesFileTypeMap underneath.\npublic class ConfigurableMimeFileTypeMap extends FileTypeMap implements org.springframework.beans.factory.InitializingBean;\n// Editor for java.mail.internet.InternetAddress, to directly populate an InternetAddress property.\npublic class InternetAddressEditor extends PropertyEditorSupport;\n// Extended MailSender interface for JavaMail, supporting MIME messages both as direct arguments and through preparation callbacks.\npublic interface JavaMailSender extends MailSender;\n// Production implementation of the JavaMailSender interface, supporting both JavaMail MimeMessages and Spring SimpleMailMessages.\npublic class JavaMailSenderImpl extends Object implements JavaMailSender;\n// Implementation of the MailMessage interface for a JavaMail MIME message, to let message population code interact with a simple message or a MIME message through a common interface.\npublic class MimeMailMessage extends Object implements MailMessage;\n// Helper class for populating a MimeMessage.\npublic class MimeMessageHelper extends Object;\n// Callback interface for the preparation of JavaMail MIME messages.\n@FunctionalInterface public interface MimeMessagePreparator;\n", "des": "JavaMail support for Spring's mail infrastructure."}
{"index": 2134, "repo": "spring-context-support-6.0.11", "code": "package quartz\n\n// JobFactory implementation that supports Runnable objects as well as standard Quartz Job instances.\npublic class AdaptableJobFactory extends Object implements JobFactory;\n// A Spring FactoryBean for creating a Quartz CronTrigger instance, supporting bean-style usage for trigger configuration.\npublic class CronTriggerFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<CronTrigger>, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean;\n// Simple Quartz Job adapter that delegates to a given Runnable instance.\npublic class DelegatingJob extends Object implements Job;\n// A Spring FactoryBean for creating a Quartz JobDetail instance, supporting bean-style usage for JobDetail configuration.\npublic class JobDetailFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<JobDetail>, org.springframework.beans.factory.BeanNameAware, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean;\n// Unchecked exception that wraps an exception thrown from a target method.\npublic class JobMethodInvocationFailedException extends org.springframework.core.NestedRuntimeException;\n// Subclass of Quartz's JobStoreCMT class that delegates to a Spring-managed DataSource instead of using a Quartz-managed JDBC connection pool.\npublic class LocalDataSourceJobStore extends JobStoreCMT;\n// Quartz ThreadPool adapter that delegates to a Spring-managed Executor instance, specified on SchedulerFactoryBean.\npublic class LocalTaskExecutorThreadPool extends Object implements ThreadPool;\n// FactoryBean that exposes a JobDetail object which delegates job execution to a specified (static or non-static) method.\npublic class MethodInvokingJobDetailFactoryBean extends org.springframework.beans.support.ArgumentConvertingMethodInvoker implements org.springframework.beans.factory.FactoryBean<JobDetail>, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean;\n// Quartz Job implementation that invokes a specified method.\npublic static class MethodInvokingJobDetailFactoryBean.MethodInvokingJob extends QuartzJobBean;\n", "des": "Support classes for the open source scheduler Quartz, allowing to set up Quartz Schedulers, JobDetails and Triggers as beans in a Spring context."}
{"index": 2135, "repo": "spring-context-support-6.0.11", "code": "package freemarker\n\n// Factory that configures a FreeMarker Configuration.\npublic class FreeMarkerConfigurationFactory extends Object;\n// Factory bean that creates a FreeMarker Configuration and provides it as bean reference.\npublic class FreeMarkerConfigurationFactoryBean extends FreeMarkerConfigurationFactory implements org.springframework.beans.factory.FactoryBean<freemarker.template.Configuration>, org.springframework.beans.factory.InitializingBean, org.springframework.context.ResourceLoaderAware;\n// Utility class for working with FreeMarker.\npublic abstract class FreeMarkerTemplateUtils extends Object;\n// FreeMarker TemplateLoader adapter that loads via a Spring ResourceLoader.\npublic class SpringTemplateLoader extends Object implements freemarker.cache.TemplateLoader;\n", "des": "Support classes for setting up FreeMarker within a Spring application context."}
{"index": 2136, "repo": "wicket-core-10.0.0-M1", "code": "package wicket\n\n// Base class for all Wicket applications.\npublic abstract class Application extends Object implements ISessionStore.UnboundListener, IEventSink, IMetadataContext<Object,Application>;\n// ListenerCollection for IApplicationListeners\npublic class ApplicationListenerCollection extends org.apache.wicket.util.listener.ListenerCollection<IApplicationListener> implements IApplicationListener;\n// This class allows a tag attribute of a component to be modified dynamically with a value obtained from a model object.\npublic class AttributeModifier extends Behavior implements org.apache.wicket.util.io.IClusterable;\n// Special attribute value markers.\npublic static enum AttributeModifier.MarkerValue extends Enum<AttributeModifier.MarkerValue>;\n// ListenerCollection for IBehaviorInstantiationListeners\npublic class BehaviorInstantiationListenerCollection extends org.apache.wicket.util.listener.ListenerCollection<IBehaviorInstantiationListener> implements IBehaviorInstantiationListener;\n// \npublic enum ChildToDequeueType extends Enum<ChildToDequeueType>;\n// An AttributeModifier specialized in managing the CSS class attribute\npublic abstract class ClassAttributeModifier extends AttributeAppender;\n// Component serves as the highest level abstract base class for all components.\npublic abstract class Component extends Object implements org.apache.wicket.util.io.IClusterable, IConverterLocator, IRequestableComponent, IHeaderContributor, org.apache.wicket.util.IHierarchical<Component>, IEventSink, IEventSource, IMetadataContext<Serializable,Component>, IFeedbackContributor;\n// Implementation of IConverterLocator interface, which locates converters for a given type.\npublic class ConverterLocator extends Object implements IConverterLocator;\n// If an exception is thrown when a page is being rendered this mapper will decide which error page to show depending on the exception type and application configuration\npublic class DefaultExceptionMapper extends Object implements org.apache.wicket.request.IExceptionMapper;\n// Wicket's default implementation for the mapper context\npublic class DefaultMapperContext extends Object implements IMapperContext;\n// An implementation of IMarkupIdGenerator that uses the Session to generate sequence numbers for the component markup ids.\npublic class DefaultMarkupIdGenerator extends Object implements IMarkupIdGenerator;\n", "des": "The core Wicket package."}
{"index": 2137, "repo": "wicket-core-10.0.0-M1", "code": "package authorization\n\n// A class for constructing singleton constants that represent a given component action that needs to be authorized.\npublic class Action extends org.apache.wicket.util.lang.EnumeratedType;\n// Base class for exceptions thrown as a result of authorization failure.\npublic abstract class AuthorizationException extends WicketRuntimeException;\n// Authorization strategies specify aspect-like constraints on significant actions taken by the framework in a given application.\npublic interface IAuthorizationStrategy;\n// \npublic static class IAuthorizationStrategy.AllowAllAuthorizationStrategy extends Object implements IAuthorizationStrategy;\n// Interface to code that is called to handle unauthorized component instantiations.\n@FunctionalInterface public interface IUnauthorizedComponentInstantiationListener;\n// A listener that is notified when a request to some resource is not allowed.\n@FunctionalInterface public interface IUnauthorizedResourceRequestListener;\n// Exception that is thrown when an action is not authorized.\npublic class UnauthorizedActionException extends AuthorizationException;\n// Exception that is thrown when the creation of a component is not allowed.\npublic class UnauthorizedInstantiationException extends AuthorizationException;\n", "des": "Contains classes that allow the user to specify authorization constraints via IAuthorizationStrategy."}
{"index": 2138, "repo": "wicket-core-10.0.0-M1", "code": "package lang\n\n// This class parses expressions to lookup or set a value on the object that is given.\npublic final class PropertyResolver extends Object;\n// \npublic abstract static class PropertyResolver.AbstractGetAndSet extends Object implements PropertyResolver.IGetAndSet;\n// A wrapper for another PropertyResolver.IPropertyLocator that caches results of PropertyResolver.CachingPropertyLocator.get(Class, String).\npublic static class PropertyResolver.CachingPropertyLocator extends Object implements PropertyResolver.IPropertyLocator;\n// Default locator supporting Java Beans properties, maps, lists and method invocations.\npublic static class PropertyResolver.DefaultPropertyLocator extends Object implements PropertyResolver.IPropertyLocator;\n// A property to get and set.\npublic static interface PropertyResolver.IGetAndSet;\n// A locator of properties.\npublic static interface PropertyResolver.IPropertyLocator;\n// \npublic class PropertyResolverConverter extends Object implements org.apache.wicket.util.io.IClusterable;\n// Object (de)serialization utilities.\npublic class WicketObjects extends Object;\n// Interface that enables users to plugin the way object sizes are calculated with Wicket.\npublic static interface WicketObjects.IObjectSizeOfStrategy;\n// WicketObjects.IObjectSizeOfStrategy that works by serializing the object to an instance of ByteCountingOutputStream, which records the number of bytes written to it.\npublic static final class WicketObjects.SerializingObjectSizeOfStrategy extends Object implements WicketObjects.IObjectSizeOfStrategy;\n", "des": "Java utilities."}
{"index": 2139, "repo": "wicket-core-10.0.0-M1", "code": "package locator\n\n// A ResourceNameIterator that doesn't find any resources.\npublic final class EmptyResourceNameIterator extends ResourceNameIterator;\n// Iterate over a set of extensions.\npublic class ExtensionResourceNameIterator extends Object implements Iterator<String>;\n// Contains the logic to locate a resource based on a path, style (see Session), variation, locale and extension strings.\npublic interface IResourceNameIterator extends Iterator<String>;\n// Interface for code that locates resources, taking into account variations for locale and style.\npublic interface IResourceStreamLocator;\n// Given a Locale it'll iterate over all possible combinations of the attrs making up the Locale.\npublic class LocaleResourceNameIterator extends Object implements Iterator<String>;\n// OSGI specific resource stream factory\npublic class OsgiResourceStreamLocator extends ResourceStreamLocator;\n// Contains the logic to locate a resource based on a path, style (see Session), variation, locale and extension strings.\npublic class ResourceNameIterator extends Object implements IResourceNameIterator;\n// Locates Wicket resources.\npublic class ResourceStreamLocator extends Object implements IResourceStreamLocator;\n// Iterate over all possible combinations of style and variation\npublic class StyleAndVariationResourceNameIterator extends Object implements Iterator<String>;\n", "des": "Locators for finding/ loading resources."}
{"index": 2140, "repo": "wicket-core-10.0.0-M1", "code": "package string\n\n// A helper class for rendering components and pages.\npublic class ComponentRenderer extends Object;\n// \npublic class ComponentStrings extends Object;\n// Utility methods for CSS.\npublic final class CssUtils extends Object;\n// Strips comments and whitespace from javascript\npublic class JavaScriptStripper extends Object;\n// Provide some helpers to write javascript related tags to the response object.\npublic class JavaScriptUtils extends Object;\n", "des": "String utilities."}
{"index": 2141, "repo": "wicket-core-10.0.0-M1", "code": "package feedback\n\n// Filter for accepting feedback messages for a particular component.\npublic class ComponentFeedbackMessageFilter extends Object implements IFeedbackMessageFilter;\n// Filter for child-of relationship\npublic class ContainerFeedbackMessageFilter extends Object implements IFeedbackMessageFilter;\n// The default message filter used to cleanup feedback messages.\npublic class DefaultCleanupFeedbackMessageFilter extends Object implements IFeedbackMessageFilter;\n// Filter for accepting feedback messages with minimum level.\npublic class ErrorLevelFeedbackMessageFilter extends Object implements IFeedbackMessageFilter;\n// Filter for accepting feedback messages of a certain error level.\npublic class ExactLevelFeedbackMessageFilter extends Object implements IFeedbackMessageFilter;\n// Collects feedback messages from all the places where they can be stored.\npublic class FeedbackCollector extends Object;\n// Postpone calling IFeedback.beforeRender() after other components.\npublic class FeedbackDelay extends Object implements Serializable, AutoCloseable;\n// Represents a generic message meant for the end-user/ pages.\npublic class FeedbackMessage extends Object implements IDetachable;\n// Holds list of feedback messages.\npublic final class FeedbackMessages extends Object implements org.apache.wicket.util.io.IClusterable, Iterable<FeedbackMessage>;\n// Model for extracting feedback messages.\npublic class FeedbackMessagesModel extends Object implements IModel<List<FeedbackMessage>>;\n// A specialized feedback panel that only displays messages from inside a fence defined by a container component.\npublic class FencedFeedbackPanel extends FeedbackPanel;\n// Interface for components that present some kind of feedback to the user, normally based on the feedback messages attached to various components on a given page.\npublic interface IFeedback;\n// Implementations of this interface can contribute feedback messages\npublic interface IFeedbackContributor;\n// Interface for filtering feedback messages.\n@FunctionalInterface public interface IFeedbackMessageFilter extends org.apache.wicket.util.io.IClusterable, Predicate<FeedbackMessage>;\n", "des": "Classes related to showing user feedback, generally as the result of form submission and/or validation."}
{"index": 2142, "repo": "wicket-core-10.0.0-M1", "code": "package markup\n\n// A base implementation of IMarkupFragment.\npublic abstract class AbstractMarkupFragment extends Object implements IMarkupFragment;\n// This is a base MarkupParser specifically for (X)HTML.\npublic abstract class AbstractMarkupParser extends Object;\n// A subclass of MarkupElement which represents a \"significant\" markup tag, such as a component open tag.\npublic class ComponentTag extends MarkupElement;\n// Factory that creates component during markup root container's initialization.\npublic static interface ComponentTag.IAutoComponentFactory;\n// Because Component has a reference to its parents, which eventually is the Page, keeping a \"copy\" of a component is very expensive.\npublic class ContainerInfo extends Object;\n// Wicket default implementation for the cache key used to reference the cached markup resource stream.\npublic class DefaultMarkupCacheKeyProvider extends Object implements IMarkupCacheKeyProvider;\n// Wicket default implementation for loading the markup resource stream associated with a MarkupContainer.\npublic class DefaultMarkupResourceStreamProvider extends Object implements IMarkupResourceStreamProvider;\n// \npublic class HtmlSpecialTag extends MarkupElement;\n// Each Wicket application has a single IMarkupCache associated with it (see MarkupSettings).\npublic interface IMarkupCache;\n// To be implemented by MarkupContainers that wish to implement their own algorithms for the markup cache key.\npublic interface IMarkupCacheKeyProvider;\n// Any list of MarkupElements.\npublic interface IMarkupFragment extends Iterable<MarkupElement>;\n// To be implemented by MarkupContainer which wish to implement their own algorithms for loading the markup resource stream.\npublic interface IMarkupResourceStreamProvider;\n// The content of a markup file, consisting of a list of markup elements.\npublic class Markup extends AbstractMarkupFragment;\n// This is Wicket's default IMarkupCache implementation.\npublic class MarkupCache extends Object implements IMarkupCache;\n// \npublic static class MarkupCache.DefaultCacheImplementation<K,V> extends Object implements MarkupCache.ICache<K,V>;\n// MarkupCache allows you to implement you own cache implementation.\npublic static interface MarkupCache.ICache<K,V>;\n// Base class for different kinds of markup elements.\npublic abstract class MarkupElement extends Object;\n// Runtime exception that is thrown when markup parsing fails.\npublic final class MarkupException extends WicketRuntimeException;\n", "des": "Base package for markup."}
{"index": 2143, "repo": "wicket-core-10.0.0-M1", "code": "package html\n\n// To be used for the crossOrigin attribute\npublic enum CrossOrigin extends Enum<CrossOrigin>;\n// This is simply a helper implementation of IHeaderResponse that really delegates all of its method calls to the IHeaderResponse that is passed into the constructor.\npublic abstract class DecoratingHeaderResponse extends Object implements IHeaderResponse;\n// A WebMarkupContainer with typesafe getters and setters for the model and its underlying object\npublic class GenericWebMarkupContainer<T> extends WebMarkupContainer implements IGenericComponent<T,GenericWebMarkupContainer<T>>;\n// A WebPage with typesafe getters and setters for the model and its underlying object\npublic class GenericWebPage<T> extends WebPage implements IGenericComponent<T,GenericWebPage<T>>;\n// For each wicket:head tag a HeaderPartContainer is created and added to the HtmlHeaderContainer which has been added to the Page.\npublic final class HeaderPartContainer extends WebMarkupContainer implements IComponentResolver;\n// A collection of IHeaderResponseDecorators.\npublic class HeaderResponseDecoratorCollection extends Object implements IHeaderResponseDecorator;\n// Behavior which renders HTML5 attributes.\npublic class HTML5Attributes extends Behavior;\n// A listener to instantiations of FormComponents to add HTML5 attributes.\npublic static class HTML5Attributes.InstantiationListener extends Object implements IComponentInstantiationListener;\n// An interface to be implemented by Behaviors, IAjaxCallListeners.\npublic interface IComponentAwareHeaderContributor extends org.apache.wicket.util.io.IClusterable;\n// An interface to be implemented by application level listeners or other entities that wish to contribute to the header section of the page.\npublic interface IHeaderContributor extends org.apache.wicket.util.io.IClusterable;\n// Setting an IHeaderResponseDecorator on an application allows you to wrap any IHeaderResponse created by Wicket in a separate implementation that adds functionality to it when used by all IHeaderContributor components or behaviors.\npublic interface IHeaderResponseDecorator;\n// Guards lazily loaded package resources against unwanted access.\npublic interface IPackageResourceGuard;\n// HTML5 helper\npublic class MarkupUtil extends Object;\n// Default implementation of IPackageResourceGuard.\npublic class PackageResourceGuard extends Object implements IPackageResourceGuard;\n", "des": "Base package of HTML markup."}
{"index": 2144, "repo": "wicket-core-10.0.0-M1", "code": "package basic\n\n// <wicket:enclosure> is nice and prevents that users have to add boilerplate to their application.\npublic class EnclosureContainer extends WebMarkupContainer;\n// A Label component that is used to render an enum value.\npublic class EnumLabel<T extends Enum<T>> extends WebComponent implements IGenericComponent<T,EnumLabel<T>>;\n// A Label component replaces its body with the String version of its model object returned by getModelObjectAsString().\npublic class Label extends WebComponent;\n// A MultiLineLabel component replaces its body with the model object.\npublic class MultiLineLabel extends WebComponent;\n", "des": "Basic HTML components."}
{"index": 2145, "repo": "wicket-core-10.0.0-M1", "code": "package border\n\n// This is a simple Container component which can be used to build Border like components.\npublic class Body extends WebMarkupContainer;\n// A border component has associated markup which is drawn and determines placement of markup and/or components nested within the border component.\npublic abstract class Border extends WebMarkupContainer implements IComponentResolver, IQueueRegion;\n// This is a behavior implementation that can be used if you have markup that should be around a component.\npublic class BorderBehavior extends Behavior;\n// Whereas a Panel replaces the body markup with the associated markup file, a BorderPanel assumes a that Body component renders the body markup including any number of Wicket Components.\npublic abstract class BorderPanel extends Panel;\n", "des": "Border components."}
{"index": 2146, "repo": "wicket-core-10.0.0-M1", "code": "package form\n\n// Base class for all Javascript-based \"select-all\" checkboxes.\npublic abstract class AbstractCheckSelector extends LabeledWebMarkupContainer implements IHeaderContributor;\n// Abstract base class for all choice (html select) options.\npublic abstract class AbstractChoice<T,E> extends FormComponent<T>;\n// An enumeration of possible positions of the label for a choice\npublic static enum AbstractChoice.LabelPosition extends Enum<AbstractChoice.LabelPosition>;\n// Abstract base class for single-select choices.\npublic abstract class AbstractSingleSelectChoice<T> extends AbstractChoice<T,T>;\n// Abstract class for links that are capable of submitting a form.\npublic abstract class AbstractSubmitLink extends AbstractLink implements IFormSubmittingComponent;\n// Abstract base class for TextArea and TextField.\npublic abstract class AbstractTextComponent<T> extends FormComponent<T>;\n// Text components that implement this interface are know to be able to provide a pattern for formatting output and parsing input.\npublic static interface AbstractTextComponent.ITextFormatProvider;\n// Resolver that implements the wicket:for attribute functionality.\npublic class AutoLabelResolver extends Object implements IComponentResolver;\n// Component that is attached to the <label> tag and takes care of writing out the label text as well as setting classes on the <label> tag\nprotected static class AutoLabelResolver.AutoLabel extends TransparentWebMarkupContainer;\n// Marker used to track whether or not a form component has an associated auto label by its mere presense as well as some attributes of the component across requests.\npublic static final class AutoLabelResolver.AutoLabelMarker extends Object implements Serializable;\n// Markup filter that identifies tags with the wicket:for attribute.\npublic class AutoLabelTagHandler extends AbstractMarkupFilter;\n// Resolver that provides the <wicket:label> tag, which will output a FormComponent's label without requiring a manual extra component such as Label or FormComponentLabel.\npublic class AutoLabelTextResolver extends Object implements IComponentResolver;\n// A form button.\npublic class Button extends FormComponent<String> implements IFormSubmittingComponent;\n// Component representing a single checkbox choice in a org.apache.wicket.markup.html.form.CheckGroup.\npublic class Check<T> extends LabeledWebMarkupContainer implements IGenericComponent<T,Check<T>>;\n", "des": "HTML Forms and form components."}
{"index": 2147, "repo": "wicket-core-10.0.0-M1", "code": "package upload\n\n// Description of file properties as in browser client side.\npublic class FileDescription extends Object implements Serializable;\n// OnChangeAjaxBehavior that streams back to server properties of the selected file(s) (at client side), before uploading it (them).\npublic abstract class FilesSelectedBehavior extends OnChangeAjaxBehavior;\n// Model for file uploads.\npublic class FileUpload extends Object;\n// Form component that corresponds to a <input type=\"file\">.\npublic class FileUploadField extends FormComponent<List<FileUpload>>;\n// Form component that allows the user to select multiple files to upload via a single <input type=\"file\"/> field.\npublic class MultiFileUploadField extends FormComponentPanel<Collection<FileUpload>>;\n", "des": "Support for upload forms (using multipart requests)."}
{"index": 2148, "repo": "wicket-core-10.0.0-M1", "code": "package validation\n\n// Base class for IFormValidators.\npublic abstract class AbstractFormValidator extends Behavior implements IFormValidator;\n// Validates that the input of two form components is identical.\npublic class EqualInputValidator extends AbstractFormValidator;\n// Validates that the input of two form components is identical.\npublic class EqualPasswordInputValidator extends EqualInputValidator;\n// A border that can be placed around a form component to indicate when the bordered child/children has a validation error.\npublic class FormComponentFeedbackBorder extends Border implements IFeedback;\n// A panel that hides or shows itself depending on whether there are feedback messages for a given message filter.\npublic class FormComponentFeedbackIndicator extends Panel implements IFeedback;\n// Adapts IFormValidator to Behavior\npublic class FormValidatorAdapter extends Behavior implements IFormValidator;\n// Interface that represents validators that check multiple components.\npublic interface IFormValidator extends org.apache.wicket.util.io.IClusterable;\n", "des": "Support for form validation."}
{"index": 2149, "repo": "wicket-core-10.0.0-M1", "code": "package image\n\n// Provides a context-relative image.\npublic class ContextImage extends WebComponent;\n// A behavior that converts the provider url fragment to a context-relative url.\npublic class ContextPathGenerator extends Behavior;\n// A component to display external images.\npublic class ExternalImage extends WebComponent;\n// A component which displays external images within a picture tag.\npublic class ExternalSource extends ExternalImage;\n// An Image component displays localizable image resources.\npublic class Image extends WebComponent implements IRequestListener;\n// The inline image is used to embed the complete image content within a HTML document.\npublic class InlineImage extends WebComponent;\n// A subclass of Image that always adds random noise to the url every request to prevent the browser from caching the image.\npublic class NonCachingImage extends Image;\n// A component which displays localizable image resources within source and image elements as responsive image.\npublic class Picture extends WebMarkupContainer;\n// A component which displays localizable image resources within a picture tag.\npublic class Source extends Image;\n", "des": "Image components."}
{"index": 2150, "repo": "wicket-core-10.0.0-M1", "code": "package resource\n\n// An ImageResource subclass for dynamic images that come from database BLOB fields.\npublic abstract class BlobImageResource extends DynamicImageResource;\n// A DynamicImageResource subclass that holds a BufferedImage generated by code elsewhere.\npublic class BufferedDynamicImageResource extends DynamicImageResource;\n// Automatically generates a basic button image.\npublic class DefaultButtonImageResource extends RenderedDynamicImageResource;\n// A factory which creates default button images.\npublic class DefaultButtonImageResourceFactory extends Object implements IResourceFactory;\n// THIS CLASS IS INTENDED FOR INTERNAL USE IN IMPLEMENTING LOCALE SENSITIVE COMPONENTS THAT USE IMAGE RESOURCES AND SHOULD NOT BE USED DIRECTLY BY END-USERS.\npublic final class LocalizedImageResource extends Object implements org.apache.wicket.util.io.IClusterable;\n// A DynamicImageResource subclass that allows easy rendering of regeneratable (unbuffered) dynamic images.\npublic abstract class RenderedDynamicImageResource extends DynamicImageResource;\n", "des": "Resource support for image components."}
{"index": 2151, "repo": "wicket-core-10.0.0-M1", "code": "package include\n\n// Component that includes/ renders the import result of an URL, much like JSP include.\npublic class Include extends WebComponent implements IGenericComponent<String,Include>;\n", "des": "Components for including content from non-Wicket sources."}
{"index": 2152, "repo": "wicket-core-10.0.0-M1", "code": "package link\n\n// Base class that that contains functionality for rendering disabled links.\npublic abstract class AbstractLink extends WebMarkupContainer;\n// Renders a stable link which can be cached in a web browser and used at a later time.\npublic class BookmarkablePageLink<T> extends Link<T>;\n// A client-side image map implementation which allows you to \"attach\" the map to any existing Image component.\npublic class ClientSideImageMap extends Panel;\n// A behavior to add attribute \"disabled\" to a Link component when it is disabled.\npublic class DisabledAttributeLinkBehavior extends Behavior;\n// A link that streams a file to the client.\npublic class DownloadLink extends Link<File>;\n// A simple anchor link (<a href=\"http://url\">) pointing to any URL.\npublic class ExternalLink extends AbstractLink;\n// Implementation of an inline frame component.\npublic class InlineFrame extends WebMarkupContainer implements IRequestListener;\n// Implementation of a hyperlink component.\npublic abstract class Link<T> extends AbstractLink implements IRequestListener, IGenericComponent<T,Link<T>>;\n// Closes a popup window and cleans up any related session page map for the popup.\npublic class PopupCloseLink<T> extends Link<T>;\n// ClosePopupPage closes the popup window.\npublic static final class PopupCloseLink.ClosePopupPage extends WebPage;\n// A popup specification can be used as a property of the Linkclasses to specify that the link should be rendered with an onClick javascript event handler that opens a new window with the links' URL.\npublic class PopupSettings extends Object implements org.apache.wicket.util.io.IClusterable;\n// A link to any ResourceReference.\npublic class ResourceLink<T> extends Link<T> implements IRequestListener;\n// This link is stateless that means that the url to this link could generate a new page before the link onClick is called.\npublic abstract class StatelessLink<T> extends Link<T>;\n", "des": "Link components."}
{"index": 2153, "repo": "wicket-core-10.0.0-M1", "code": "package list\n\n// A very simple Item.\npublic class AbstractItem extends WebMarkupContainer;\n// Container that holds components in a ListView.\npublic class ListItem<T> extends LoopItem implements IGenericComponent<T,ListItem<T>>;\n// Model for list items.\npublic class ListItemModel<T> extends Object implements IModel<T>;\n// A ListView is a repeater that makes it easy to display/work with Lists.\npublic abstract class ListView<T> extends AbstractRepeater;\n// A very simple loop component whose model is an Integer defining the number of iterations the loop should render.\npublic abstract class Loop extends AbstractRepeater;\n// A very simple Item.\npublic class LoopItem extends AbstractItem;\n// ListItem that adds class=\"odd\" or class=\"even\" html attribute depending on its index.\npublic class OddEvenListItem<T> extends ListItem<T>;\n// PageableListView is similar to ListView but provides in addition pageable views.\npublic abstract class PageableListView<T> extends ListView<T> implements IPageableItems;\n// Simple ListVew subclass that wraps its item models in a CompoundPropertyModel.\npublic abstract class PropertyListView<T> extends ListView<T>;\n", "des": "List components for tabular data and such."}
{"index": 2154, "repo": "wicket-core-10.0.0-M1", "code": "package pages\n\n// A parent page for all pages that are used to show an error to the user.\npublic abstract class AbstractErrorPage extends WebPage;\n// Page expired error page.\npublic class AccessDeniedPage extends AbstractErrorPage;\n// Form for posting JavaScript properties.\npublic class BrowserInfoForm extends GenericPanel<ClientProperties>;\n// This page uses a form post right after the page has loaded in the browser, using JavaScript or alternative means to detect and pass on settings to the embedded form.\npublic class BrowserInfoPage extends WebPage;\n// Shows a runtime exception on a nice HTML page.\npublic class ExceptionErrorPage extends AbstractErrorPage;\n// Internal error display page.\npublic class InternalErrorPage extends AbstractErrorPage;\n// Page expired error page.\npublic class PageExpiredErrorPage extends AbstractErrorPage;\n// Page that let the browser redirect.\npublic class RedirectPage extends WebPage;\n", "des": "Default special purpose pages for error and feedback support."}
{"index": 2155, "repo": "wicket-core-10.0.0-M1", "code": "package panel\n\n// Implements boilerplate as needed by many markup sourcing strategies.\npublic abstract class AbstractMarkupSourcingStrategy extends Object implements IMarkupSourcingStrategy;\n// Boilerplate for a markup sourcing strategy which retrieves the markup from associated markup files.\npublic abstract class AssociatedMarkupSourcingStrategy extends AbstractMarkupSourcingStrategy;\n// The Border component's markup sourcing strategy\npublic class BorderMarkupSourcingStrategy extends AssociatedMarkupSourcingStrategy;\n// Convenience feedback panel that filters the feedback messages based on the component given in the constructor.\npublic class ComponentFeedbackPanel extends FeedbackPanel;\n// This is a no-op sourcing strategy implementing the default behavior for most components.\npublic final class DefaultMarkupSourcingStrategy extends AbstractMarkupSourcingStrategy;\n// Panel that does absolutely nothing and that can be used to display an empty block.\npublic final class EmptyPanel extends Panel;\n// A panel that displays FeedbackMessages in a list view.\npublic class FeedbackPanel extends Panel implements IFeedback;\n// Usually you either have a markup file or a xml tag with wicket:id=\"myComponent\" to associate markup with a component.\npublic class Fragment extends WebMarkupContainer implements IQueueRegion;\n// A markup sourcing strategy suitable for Fragment components.\npublic class FragmentMarkupSourcingStrategy extends AbstractMarkupSourcingStrategy;\n// A Panel with typesafe getters and setters for the model and its underlying object\npublic class GenericPanel<T> extends Panel implements IGenericComponent<T,GenericPanel<T>>;\n// Markup sourcing strategies determine whether a Component behaves like a \"Panel\" pulling its Markup from an associated Markup file, or like a Fragment pulling it from a another components Markup.\npublic interface IMarkupSourcingStrategy;\n// A panel is a reusable component that holds markup and other components.\npublic abstract class Panel extends WebMarkupContainer implements IQueueRegion;\n// The Panel components markup sourcing strategy.\npublic class PanelMarkupSourcingStrategy extends AssociatedMarkupSourcingStrategy;\n", "des": "Panel components."}
{"index": 2156, "repo": "wicket-core-10.0.0-M1", "code": "package parser\n\n// Base class for markup filters\npublic abstract class AbstractMarkupFilter extends Object implements IMarkupFilter;\n// Wicket uses a streaming XML parser to read the markup.\npublic interface IMarkupFilter;\n// The interface of a streaming XML parser as required by Wicket.\npublic interface IXmlPullParser;\n// The last element found\npublic static enum IXmlPullParser.HttpTagType extends Enum<IXmlPullParser.HttpTagType>;\n// Stack to push and pop HTML elements asserting its structure.\npublic class TagStack extends Object;\n// A fairly shallow markup pull parser which parses a markup string of a given type of markup (for example, html, xml, vxml or wml) into ComponentTag and RawMarkup tokens.\npublic final class XmlPullParser extends Object implements IXmlPullParser;\n// A subclass of MarkupElement which represents a tag including namespace and its optional attributes.\npublic class XmlTag extends Object;\n// Enumerated type for different kinds of component tags.\npublic static enum XmlTag.TagType extends Enum<XmlTag.TagType>;\n", "des": "The default parsing engine of Wicket."}
{"index": 2157, "repo": "wicket-core-10.0.0-M1", "code": "package filter\n\n// This is a markup inline filter.\npublic final class EnclosureHandler extends AbstractMarkupFilter implements IComponentResolver;\n// Handler that sets unique tag id for every inline script and style element in <wicket:head>, unless the element already has one.\npublic class HeadForceTagIdHandler extends AbstractMarkupFilter;\n// This is a markup inline filter.\npublic final class HtmlHandler extends AbstractMarkupFilter;\n// This is a markup inline filter.\npublic final class HtmlHeaderSectionHandler extends AbstractMarkupFilter;\n// This is a markup inline filter which by default is not added to the list of markup filter.\npublic final class HtmlProblemFinder extends AbstractMarkupFilter;\n// This is a markup inline filter.\npublic final class InlineEnclosureHandler extends AbstractMarkupFilter implements IComponentResolver;\n// MarkupFilter that expands certain open-close tag as separate open and close tags.\npublic class OpenCloseTagExpander extends AbstractMarkupFilter;\n// The purpose of this filter is to make all \"href\", \"src\" and \"background\" attributes found in the markup which contain a relative URL like \"myDir/myPage.gif\" actually resolve in the output HTML, by prefixing them with with an appropriate path to make the link work properly, even if the current page is being displayed at a mounted URL or whatever.\npublic final class RelativePathPrefixHandler extends AbstractMarkupFilter implements IComponentResolver;\n// This is the root of all filters, which retrieves the next xml element from the xml parser.\npublic final class RootMarkupFilter extends AbstractMarkupFilter;\n// An IMarkupFilter that wraps the body of all <style> elements and <script> elements which are plain JavaScript in CDATA blocks.\npublic final class StyleAndScriptIdentifier extends AbstractMarkupFilter;\n// This markup filter warns if a wicket:container tag has an attribute besides wicket:id.\npublic class WicketContainerTagHandler extends AbstractMarkupFilter;\n// This is a markup inline filter.\npublic class WicketLinkTagHandler extends AbstractMarkupFilter implements IComponentResolver;\n// This is a markup inline filter and a component resolver.\npublic final class WicketMessageTagHandler extends AbstractMarkupFilter implements IComponentResolver;\n// Attribute localizing behavior.\npublic static class WicketMessageTagHandler.AttributeLocalizer extends Behavior;\n", "des": "Default parsing extensions."}
{"index": 2158, "repo": "wicket-core-10.0.0-M1", "code": "package resolver\n\n// The AutoLinkResolver is responsible to handle automatic link resolution.\npublic final class AutoLinkResolver extends Object implements IComponentResolver;\n// Abstract implementation that has a helper method for creating a resource reference.\npublic abstract static class AutoLinkResolver.AbstractAutolinkResolverDelegate extends Object implements AutoLinkResolver.IAutolinkResolverDelegate;\n// Autolink components delegate component resolution to their parent components.\npublic static final class AutoLinkResolver.AutolinkBookmarkablePageLink<T> extends BookmarkablePageLink<T> implements IComponentResolver;\n// Interface to delegate the actual resolving of auto components to.\npublic static interface AutoLinkResolver.IAutolinkResolverDelegate;\n// Encapsulates different aspects of a path.\npublic static final class AutoLinkResolver.PathInfo extends Object;\n// Utility class for IComponentResolvers\npublic class ComponentResolvers extends Object;\n// \npublic static interface ComponentResolvers.ResolverFilter;\n// This is a tag resolver which handles <head> and <wicket:head>tags.\npublic class HtmlHeaderResolver extends Object implements IComponentResolver;\n// IComponentResolvers are responsible for mapping component names to Wicket components.\npublic interface IComponentResolver extends org.apache.wicket.util.io.IClusterable;\n// This is a tag resolver which handles <wicket:container> Sometimes adding components in certain ways may lead to output of invalid markup.\npublic class WicketContainerResolver extends Object implements IComponentResolver;\n// This is a tag resolver which handles <wicket:message key=\"myKey\">Default Text</wicket:message>.\npublic class WicketMessageResolver extends Object implements IComponentResolver;\n", "des": "Resolvers implement the IComponentResolver interface and must be registered with the application."}
{"index": 2159, "repo": "wicket-core-10.0.0-M1", "code": "package transformer\n\n// This abstract container provides the means to post-process the markup generated by its child components (excluding the containers tag)\npublic abstract class AbstractOutputTransformerContainer extends MarkupContainer implements ITransformer;\n// A Behavior which can be added to any component.\npublic abstract class AbstractTransformerBehavior extends Behavior implements ITransformer;\n// A common interface to be implemented by AbstractOutputTransformerContainers and AbstractTransformerBehaviors which post-process the output markup of a component.\n@FunctionalInterface public interface ITransformer;\n// An implementation of an output transformer which does nothing.\npublic class NoopOutputTransformerContainer extends AbstractOutputTransformerContainer;\n// A container which output markup will be processes by a XSLT processor prior to writing the output into the web response.\npublic class XsltOutputTransformerContainer extends AbstractOutputTransformerContainer;\n// A processor to XSLT transform the output generated by a Component.\npublic class XsltTransformer extends Object implements ITransformer;\n// An IBehavior which can be added to any component except ListView.\npublic class XsltTransformerBehavior extends AbstractTransformerBehavior;\n", "des": "Transformers are able to post-process (transform) the output generated by a Component."}
{"index": 2160, "repo": "wicket-core-10.0.0-M1", "code": "package model\n\n// Serves as a base class for different kinds of property models.\npublic abstract class AbstractPropertyModel<T> extends ChainingModel<T> implements IObjectClassAwareModel<T>, IPropertyReflectionAwareModel<T>;\n// This model and its subclasses support chaining of IModels.\npublic class ChainingModel<T> extends Object implements IModel<T>;\n// Quick detachable model that is implements the IComponentAssignedModel and the IModel interfaces.\npublic class ComponentDetachableModel<T> extends Object implements IComponentAssignedModel<T>;\n// Quick model that is implements the IComponentAssignedModel and the IModel interfaces.\npublic class ComponentModel<T> extends Object implements IModel<T>, IComponentAssignedModel<T>;\n// A model that references a property by name on the current model of the component it is bound to.\npublic class ComponentPropertyModel<T> extends Object implements IComponentAssignedModel<T>;\n// A simple compound model which uses the component's name as the property expression to retrieve properties on the nested model object.\npublic class CompoundPropertyModel<T> extends ChainingModel<T> implements IComponentInheritedModel<T>;\n// Models that wish to substitute themselves with a wrapper when they are bound to a component (either through IModel parameter in a constructor or via a call to Component.setDefaultModel(IModel)) should implement this interface.\npublic interface IComponentAssignedModel<T> extends IModel<T>;\n// This is a marker interface for models that can be inherited from components higher in the hierarchy.\npublic interface IComponentInheritedModel<T> extends IModel<T>;\n// Interface to logic for detaching transient information from a detachable model.\npublic interface IDetachable extends org.apache.wicket.util.io.IClusterable;\n// A IModel wraps the actual model Object used by a Component.\n@FunctionalInterface public interface IModel<T> extends IDetachable;\n// Implementations of this interface compare model object.\n@FunctionalInterface public interface IModelComparator extends org.apache.wicket.util.io.IClusterable;\n// Interface implemented by model that can provide class of the model object.\npublic interface IObjectClassAwareModel<T> extends IModel<T>;\n", "des": "Core model support for Wicket components."}
{"index": 2161, "repo": "wicket-core-10.0.0-M1", "code": "package http\n\n// Base class that collects request and session information for request logging to enable rich information about the events that transpired during a single request.\npublic abstract class AbstractRequestLogger extends Object implements IRequestLogger;\n// This listener adds Enclosures to AjaxTarget, where the child controller of the said Enclosure is already added.\npublic class AjaxEnclosureListener extends Object implements AjaxRequestTarget.IListener;\n// Subclass of WebResponse that buffers the actions and performs those on another response.\npublic class BufferedWebResponse extends org.apache.wicket.request.http.WebResponse implements IMetaDataBufferingWebResponse;\n// Description of various user agent (browser) properties.\npublic class ClientProperties extends Object implements org.apache.wicket.util.io.IClusterable;\n// Factory that creates application objects based on the class name specified in the ContextParamWebApplicationFactory.APP_CLASS_PARAM context variable.\npublic class ContextParamWebApplicationFactory extends Object implements IWebApplicationFactory;\n// Default resource isolation policy used in ResourceIsolationRequestCycleListener, based on https://web.dev/fetch-metadata/.\npublic class FetchMetadataResourceIsolationPolicy extends Object implements IResourceIsolationPolicy;\n// Any kind of response that buffers meta data such as cookies and headers and can unbuffer it into another response\npublic interface IMetaDataBufferingWebResponse;\n// An interface providing access to multipart content uploads of a WebRequest\npublic interface IMultipartWebRequest;\n// Interface for the request logger and viewer.\npublic interface IRequestLogger;\n// This interface can be implemented in a custom session object.\npublic static interface IRequestLogger.ISessionLogInfo;\n// This class hold the information one request of a session has.\npublic static class IRequestLogger.RequestData extends Object implements org.apache.wicket.util.io.IClusterable;\n// This class hold the information one request of a session has.\npublic static class IRequestLogger.SessionData extends Object implements org.apache.wicket.util.io.IClusterable, Comparable<IRequestLogger.SessionData>;\n// Interface for the resource isolation policies.\n@FunctionalInterface public interface IResourceIsolationPolicy;\n// Indicates the outcome for a resource isolation policy for a request.\npublic static enum IResourceIsolationPolicy.ResourceIsolationOutcome extends Enum<IResourceIsolationPolicy.ResourceIsolationOutcome>;\n", "des": "HTTP implementation."}
{"index": 2162, "repo": "wicket-core-10.0.0-M1", "code": "package request\n\n// Default client info object for web applications.\npublic class WebClientInfo extends ClientInfo;\n", "des": "This package contains http (web) protocol dependent implementations of request processing strategies."}
{"index": 2163, "repo": "wicket-core-10.0.0-M1", "code": "package servlet\n\n// A factory of HttpServletRequest wrappers.\npublic abstract class AbstractRequestWrapperFactory extends Object;\n// Represents additional error attributes present in a ServletRequest when the servlet container is handling an error or a forward to an error page mapped by error-page element in web.xml.\npublic class ErrorAttributes extends Object;\n// A very simple manager for web filter factories.\npublic class FilterFactoryManager extends Object implements Iterable<AbstractRequestWrapperFactory>;\n// Represents additional attributes present in a ServletRequest when the servlet container is handling a forward to another path than the initially requested one.\npublic class ForwardAttributes extends Object;\n// Servlet specific WebRequest subclass for multipart content uploads.\npublic abstract class MultipartServletWebRequest extends ServletWebRequest implements IMultipartWebRequest;\n// Servlet specific WebRequest subclass for multipart content uploads.\npublic class MultipartServletWebRequestImpl extends MultipartServletWebRequest;\n// Distinct IO exceptions from the those triggered while responding a request.\npublic class ResponseIOException extends WicketRuntimeException implements IWicketInternalException;\n// Sets ServletRequest.isSecure() to true if ServletRequest.getRemoteAddr() matches one of the securedRemoteAddresses of this filter.\npublic class SecuredRemoteAddressRequestWrapperFactory extends AbstractRequestWrapperFactory;\n// \npublic static class SecuredRemoteAddressRequestWrapperFactory.Config extends Object;\n// WebRequest subclass that wraps a HttpServletRequest object.\npublic class ServletWebRequest extends org.apache.wicket.request.http.WebRequest;\n// WebResponse that wraps a ServletWebResponse.\npublic class ServletWebResponse extends org.apache.wicket.request.http.WebResponse;\n// Holds information about an upload, also has useful querying methods.\npublic class UploadInfo extends Object implements org.apache.wicket.util.io.IClusterable;\n// This filter can be used to make the Wicket WebSession instances available to non-wicket servlets.\npublic class WicketSessionFilter extends Object implements jakarta.servlet.Filter;\n// See XForwardedFilter\npublic class XForwardedRequestWrapper extends jakarta.servlet.http.HttpServletRequestWrapper;\n// Request wrapper factory to integrate \"X-Forwarded-For\" and \"X-Forwarded-Proto\" HTTP headers.\npublic class XForwardedRequestWrapperFactory extends AbstractRequestWrapperFactory;\n", "des": "Java Servlet specific implementation of Wicket http classes."}
{"index": 2164, "repo": "wicket-core-10.0.0-M1", "code": "package resource\n\n// Thrown when a circular dependency is detected between resources.\npublic final class CircularDependencyException extends WicketRuntimeException;\n// Used to apply several ICssCompressor to the CSS compression. Usage:\npublic class CompositeCssCompressor extends Object implements IScopeAwareTextResourceProcessor, ICssCompressor;\n// Used to apply several IJavaScriptCompressor to the javascript compression. Usage:\npublic class CompositeJavaScriptCompressor extends Object implements IScopeAwareTextResourceProcessor, IJavaScriptCompressor;\n// A helper class that contributes all required JavaScript resources needed for Wicket Ajax functionality\npublic class CoreLibrariesContributor extends Object;\n// This compressor is used to replace URLs within CSS files with URLs created from PackageResourceReferences that belongs to their corresponding resources (e.g images).The scope of the CSS file is used to create the PackageResourceReferences.\npublic class CssUrlReplacer extends Object implements IScopeAwareTextResourceProcessor, ICssCompressor;\n// Gets the actual path for a jar file system\npublic class FileSystemJarPathService extends Object implements FileSystemPathService;\n// Gets the actual path for a specific file system.\npublic interface FileSystemPathService;\n// Used to provide resources based on the on Java NIO FileSystem API. For more information see FileSystemResourceReference\npublic class FileSystemResource extends AbstractResource;\n// This resource reference is used to provide a reference to a resource based on Java NIO FileSystem API. To implement a mime type detection refer to the documentation of Files.probeContentType(Path) and provide an implementation for java.nio.file.spi.FileTypeDetector in the META-INF/services folder for jars or in the /WEB-INF/classes/META-INF/services folder for webapps You can optionally override FileSystemResourceReference.getFileSystemResource() to provide an inline mime type detection, which is preferred to the default detection. Example:\npublic class FileSystemResourceReference extends ResourceReference;\n// To be implemented by listeners interested in PropertiesFactory events fired after a change to the properties has been detected\n@FunctionalInterface public interface IPropertiesChangeListener;\n// Implementations are responsible for locating Properties objects, which are a thin wrapper around ValueMap and is used to locate localized messages.\npublic interface IPropertiesFactory;\n// environment required for properties factory\npublic interface IPropertiesFactoryContext;\n// Property loaders as used by PropertiesFactory to load properties\npublic interface IPropertiesLoader;\n", "des": "Locale aware resouce loaders."}
{"index": 2165, "repo": "wicket-core-10.0.0-M1", "code": "package response\n\n// Response used to capture output as a byte array\npublic class ByteArrayResponse extends org.apache.wicket.request.Response;\n// Response implementation that discards all output.\npublic class NullResponse extends org.apache.wicket.request.Response;\n// Response object that writes to an AppendingStringBuffer.\npublic class StringResponse extends org.apache.wicket.request.Response;\n", "des": "Several response implementations."}
{"index": 2166, "repo": "wicket-core-10.0.0-M1", "code": "package cookies\n\n// This class provides default values that are used by CookieUtils class when it creates cookies.\npublic class CookieDefaults extends Object implements org.apache.wicket.util.io.IClusterable;\n// \npublic static enum CookieDefaults.SameSite extends Enum<CookieDefaults.SameSite>;\n// Helper class to simplify Cookie handling.\npublic class CookieUtils extends Object;\n", "des": "Persistence support for forms."}
{"index": 2167, "repo": "wicket-core-10.0.0-M1", "code": "package template\n\n// Decorates a TextTemplate with CSS tags.\npublic final class CssTemplate extends TextTemplateDecorator;\n// Decorates a TextTemplate with JavaScript tags.\npublic final class JavaScriptTemplate extends TextTemplateDecorator;\n// A String resource that can be appended to.\npublic class PackageTextTemplate extends TextTemplate;\n// Represents a text template that can do variable interpolation.\npublic abstract class TextTemplate extends org.apache.wicket.util.resource.AbstractStringResourceStream;\n// Provides the ability to 'decorate' the actual template contents before it is contributed to the header.\npublic abstract class TextTemplateDecorator extends TextTemplate;\n", "des": "Resource extensions that make working with header contributions easier and more maintainable."}
{"index": 2168, "repo": "wicket-core-10.0.0-M1", "code": "package tester\n\n// A helper class to ease unit testing of Wicket applications without the need for a servlet container.\npublic class BaseWicketTester extends Object;\n// A page that is used as the automatically created page for BaseWicketTester.startComponentInPage(Class) and the other variations.\npublic static class BaseWicketTester.StartComponentInPage extends WebPage;\n// This is a utility class.\npublic final class DiffUtil extends Object;\n// A dummy home page, as required by WicketTester.\npublic class DummyHomePage extends WebPage;\n// A dummy Panel Component.\npublic class DummyPanelPage extends WebPage;\n// A helper class for testing validation and submission of FormComponents.\npublic class FormTester extends Object;\n// A Result class.\npublic class Result extends Object;\n// Tag tester is used to test that a generated markup tag contains the correct attributes, values etc.\npublic class TagTester extends Object;\n// Base class for tests which require comparing wicket response with a file.\npublic abstract class WicketTestCase extends Object;\n// A helper class to ease unit testing of Wicket applications without the need for a servlet container.\npublic class WicketTester extends BaseWicketTester;\n// Manages WicketTester instance\npublic class WicketTesterExtension extends Object implements org.junit.jupiter.api.extension.BeforeTestExecutionCallback, org.junit.jupiter.api.extension.AfterTestExecutionCallback, org.junit.jupiter.api.extension.TestExecutionExceptionHandler;\n// A WicketTester-specific helper class.\npublic class WicketTesterHelper extends Object;\n// ComponentData class.\npublic static class WicketTesterHelper.ComponentData extends Object implements org.apache.wicket.util.io.IClusterable;\n", "des": "A package with utility classes to ease unit testing of Wicket applications without the need for a servlet container."}
{"index": 2169, "repo": "wicket-core-10.0.0-M1", "code": "package validation\n\n// A compound IValidator.\npublic class CompoundValidator<T> extends Behavior implements IValidator<T>;\n// Interface representing a message source that stores messages by key and can perform variable substitution.\npublic interface IErrorMessageSource;\n// Marker interface for validators that will accept a null value.\npublic interface INullAcceptingValidator<T> extends IValidator<T>;\n// Interface representing any object that can be validated.\npublic interface IValidatable<T>;\n// Interface representing a validation error.\npublic interface IValidationError extends org.apache.wicket.util.io.IClusterable;\n// Interface representing a validator that can validate an IValidatable object.\n@FunctionalInterface public interface IValidator<T> extends org.apache.wicket.util.io.IClusterable;\n// An IValidationError implementation that just keeps a Serializable error message.\npublic class RawValidationError extends Object implements IValidationError;\n// This implementation of IValidatable is meant to be used outside of Wicket.\npublic class Validatable<T> extends Object implements IValidatable<T>;\n// A versatile implementation of IValidationError that supports message resolution from IErrorMessageSource, default message (if none of the keys matched), and variable substitution.\npublic final class ValidationError extends Object implements IValidationError;\n// Adapts IValidator to Behavior\npublic class ValidatorAdapter<T> extends Behavior implements IValidator<T>;\n", "des": "This package provides interfaces for Wicket's validation support."}
{"index": 2170, "repo": "wicket-core-10.0.0-M1", "code": "package validator\n\n// Base class for validators that check if a given value falls within [min,max] range.\npublic abstract class AbstractRangeValidator<R extends Comparable<? super R> & Serializable,V extends Serializable> extends Behavior implements IValidator<V>;\n// Validator mode\npublic static enum AbstractRangeValidator.Mode extends Enum<AbstractRangeValidator.Mode>;\n// Checks if a credit card number is valid.\npublic class CreditCardValidator extends Object implements IValidator<String>;\n// \npublic static enum CreditCardValidator.CreditCard extends Enum<CreditCardValidator.CreditCard>;\n// Validator for checking if a given date falls within [min,max] range.\npublic class DateValidator extends RangeValidator<Date>;\n// Validator for checking the form/pattern of email addresses.\npublic class EmailAddressValidator extends PatternValidator;\n// Validates an IValidatable by matching the value against a regular expression pattern.\npublic class PatternValidator extends Object implements IValidator<String>;\n// Validator for checking if a given value falls within [min,max] range.\npublic class RangeValidator<Z extends Comparable<? super Z> & Serializable> extends AbstractRangeValidator<Z,Z>;\n// Validator for checking if length of a string falls within [min,max] range.\npublic class StringValidator extends AbstractRangeValidator<Integer,String>;\n// Validator for checking URLs.\npublic class UrlValidator extends Object implements IValidator<String>;\n", "des": "This package provides an implementation of Wicket's validation support."}
{"index": 2171, "repo": "wicket-spring-10.0.0-M1", "code": "package annot\n\n// IFieldValueFactory that uses LazyInitProxyFactory to create proxies for Spring dependencies based on the SpringBean annotation applied to a field.\npublic class AnnotProxyFieldValueFactory extends Object implements org.apache.wicket.injection.IFieldValueFactory;\n// Annotation used to tag a field as a placeholder for a spring bean.\n@Retention(RUNTIME) @Target(FIELD) @Documented public @interface SpringBean;\n// IComponentInstantiationListener that injects component and behavior properties annotated with SpringBean annotations.\npublic class SpringComponentInjector extends org.apache.wicket.injection.Injector implements org.apache.wicket.application.IComponentInstantiationListener, org.apache.wicket.IBehaviorInstantiationListener;\n", "des": "This package contains all the classes to make your wicket components and other pojos @SpringBean annotation aware."}
{"index": 2172, "repo": "spring-security-web-6.1.2", "code": "package web\n\n// Used by ExceptionTranslationFilter to commence an authentication scheme.\npublic interface AuthenticationEntryPoint;\n// Simple implementation of RedirectStrategy which is the default used throughout the framework.\npublic class DefaultRedirectStrategy extends Object implements RedirectStrategy;\n// Standard implementation of SecurityFilterChain.\npublic final class DefaultSecurityFilterChain extends Object implements SecurityFilterChain;\n// Delegates Filter requests to a list of Spring-managed filter beans.\npublic class FilterChainProxy extends org.springframework.web.filter.GenericFilterBean;\n// A strategy for decorating the provided filter chain with one that accounts for the SecurityFilterChain for a given request.\npublic static interface FilterChainProxy.FilterChainDecorator;\n// \npublic static interface FilterChainProxy.FilterChainValidator;\n// A FilterChainProxy.FilterChainDecorator that uses the FilterChainProxy.VirtualFilterChain\npublic static final class FilterChainProxy.VirtualFilterChainDecorator extends Object implements FilterChainProxy.FilterChainDecorator;\n// Holds objects associated with a HTTP filter.\npublic class FilterInvocation extends Object;\n// A FilterChainProxy.FilterChainDecorator that wraps the chain in before and after observations\npublic final class ObservationFilterChainDecorator extends Object implements FilterChainProxy.FilterChainDecorator;\n// PortMapper implementations provide callers with information about which HTTP ports are associated with which HTTPS ports on the system, and vice versa.\npublic interface PortMapper;\n// Concrete implementation of PortMapper that obtains HTTP:HTTPS pairs from the application context.\npublic class PortMapperImpl extends Object implements PortMapper;\n// A PortResolver determines the port a web request was received on.\npublic interface PortResolver;\n// Concrete implementation of PortResolver that obtains the port from ServletRequest.getServerPort().\npublic class PortResolverImpl extends Object implements PortResolver;\n// Encapsulates the redirection logic for all classes in the framework which perform redirects.\npublic interface RedirectStrategy;\n// Filter that redirects requests that match RequestMatcher to the specified URL.\npublic final class RequestMatcherRedirectFilter extends org.springframework.web.filter.OncePerRequestFilter;\n// Defines a filter chain which is capable of being matched against an HttpServletRequest.\npublic interface SecurityFilterChain;\n// Well-known keys which are used to store Spring Security information in request or session scope.\npublic final class WebAttributes extends Object;\n", "des": "Spring Security's web security module."}
{"index": 2173, "repo": "spring-security-web-6.1.2", "code": "package access\n\n// Used by ExceptionTranslationFilter to handle an AccessDeniedException.\npublic interface AccessDeniedHandler;\n// Base implementation of AccessDeniedHandler.\npublic class AccessDeniedHandlerImpl extends Object implements AccessDeniedHandler;\n// An implementation of WebInvocationPrivilegeEvaluator which delegates the checks to an instance of AuthorizationManager\npublic final class AuthorizationManagerWebInvocationPrivilegeEvaluator extends Object implements WebInvocationPrivilegeEvaluator, org.springframework.web.context.ServletContextAware;\n// \npublic final class CompositeAccessDeniedHandler extends Object implements AccessDeniedHandler;\n// \n@Deprecated public class DefaultWebInvocationPrivilegeEvaluator extends Object implements WebInvocationPrivilegeEvaluator, org.springframework.web.context.ServletContextAware;\n// An AccessDeniedHandler that delegates to other AccessDeniedHandler instances based upon the type of AccessDeniedException passed into DelegatingAccessDeniedHandler.handle(HttpServletRequest, HttpServletResponse, AccessDeniedException).\npublic final class DelegatingAccessDeniedHandler extends Object implements AccessDeniedHandler;\n// Handles any AccessDeniedException and AuthenticationException thrown within the filter chain.\npublic class ExceptionTranslationFilter extends org.springframework.web.filter.GenericFilterBean implements org.springframework.context.MessageSourceAware;\n// \npublic final class ObservationMarkingAccessDeniedHandler extends Object implements AccessDeniedHandler;\n// An AccessDeniedHandler that delegates to other AccessDeniedHandler instances based upon the type of HttpServletRequest passed into RequestMatcherDelegatingAccessDeniedHandler.handle(HttpServletRequest, HttpServletResponse, AccessDeniedException).\npublic final class RequestMatcherDelegatingAccessDeniedHandler extends Object implements AccessDeniedHandler;\n// A WebInvocationPrivilegeEvaluator which delegates to a list of WebInvocationPrivilegeEvaluator based on a RequestMatcher evaluation\npublic final class RequestMatcherDelegatingWebInvocationPrivilegeEvaluator extends Object implements WebInvocationPrivilegeEvaluator, org.springframework.web.context.ServletContextAware;\n// Allows users to determine whether they have privileges for a given web URI.\npublic interface WebInvocationPrivilegeEvaluator;\n", "des": "Access-control related classes and packages."}
{"index": 2174, "repo": "spring-security-web-6.1.2", "code": "package channel\n\n// \npublic abstract class AbstractRetryEntryPoint extends Object implements ChannelEntryPoint;\n// Decides whether a web channel provides sufficient security.\npublic interface ChannelDecisionManager;\n// Implementation of ChannelDecisionManager.\npublic class ChannelDecisionManagerImpl extends Object implements ChannelDecisionManager, org.springframework.beans.factory.InitializingBean;\n// May be used by a ChannelProcessor to launch a web channel.\npublic interface ChannelEntryPoint;\n// Ensures a web request is delivered over the required channel.\npublic class ChannelProcessingFilter extends org.springframework.web.filter.GenericFilterBean;\n// Decides whether a web channel meets a specific security condition.\npublic interface ChannelProcessor;\n// Ensures channel security is inactive by review of HttpServletRequest.isSecure() responses.\npublic class InsecureChannelProcessor extends Object implements org.springframework.beans.factory.InitializingBean, ChannelProcessor;\n// Commences an insecure channel by retrying the original request using HTTP.\npublic class RetryWithHttpEntryPoint extends AbstractRetryEntryPoint;\n// Commences a secure channel by retrying the original request using HTTPS.\npublic class RetryWithHttpsEntryPoint extends AbstractRetryEntryPoint;\n// Ensures channel security is active by review of HttpServletRequest.isSecure() responses.\npublic class SecureChannelProcessor extends Object implements org.springframework.beans.factory.InitializingBean, ChannelProcessor;\n", "des": "Classes that ensure web requests are received over required transport channels."}
{"index": 2175, "repo": "spring-security-web-6.1.2", "code": "package expression\n\n// A SecurityExpressionHandler that uses a RequestAuthorizationContext to create a WebSecurityExpressionRoot.\npublic class DefaultHttpSecurityExpressionHandler extends org.springframework.security.access.expression.AbstractSecurityExpressionHandler<RequestAuthorizationContext> implements org.springframework.security.access.expression.SecurityExpressionHandler<RequestAuthorizationContext>;\n// \npublic class DefaultWebSecurityExpressionHandler extends org.springframework.security.access.expression.AbstractSecurityExpressionHandler<FilterInvocation> implements org.springframework.security.access.expression.SecurityExpressionHandler<FilterInvocation>;\n// Expression-based FilterInvocationSecurityMetadataSource.\npublic final class ExpressionBasedFilterInvocationSecurityMetadataSource extends DefaultFilterInvocationSecurityMetadataSource;\n// An expression-based AuthorizationManager that determines the access by evaluating the provided expression.\npublic final class WebExpressionAuthorizationManager extends Object implements org.springframework.security.authorization.AuthorizationManager<RequestAuthorizationContext>;\n// \n@Deprecated public class WebExpressionVoter extends Object implements org.springframework.security.access.AccessDecisionVoter<FilterInvocation>;\n// \npublic class WebSecurityExpressionRoot extends org.springframework.security.access.expression.SecurityExpressionRoot;\n", "des": "Implementation of web security expressions."}
{"index": 2176, "repo": "spring-security-web-6.1.2", "code": "package intercept\n\n// An authorization filter that restricts access to the URL using AuthorizationManager.\npublic class AuthorizationFilter extends org.springframework.web.filter.GenericFilterBean;\n// Default implementation of FilterInvocationDefinitionSource.\npublic class DefaultFilterInvocationSecurityMetadataSource extends Object implements FilterInvocationSecurityMetadataSource;\n// Marker interface for SecurityMetadataSource implementations that are designed to perform lookups keyed on FilterInvocations.\npublic interface FilterInvocationSecurityMetadataSource extends org.springframework.security.access.SecurityMetadataSource;\n// \n@Deprecated public class FilterSecurityInterceptor extends org.springframework.security.access.intercept.AbstractSecurityInterceptor implements jakarta.servlet.Filter;\n// An HttpServletRequest authorization context.\npublic final class RequestAuthorizationContext extends Object;\n// \npublic class RequestKey extends Object;\n// An AuthorizationManager which delegates to a specific AuthorizationManager based on a RequestMatcher evaluation.\npublic final class RequestMatcherDelegatingAuthorizationManager extends Object implements org.springframework.security.authorization.AuthorizationManager<jakarta.servlet.http.HttpServletRequest>;\n// A builder for RequestMatcherDelegatingAuthorizationManager.\npublic static final class RequestMatcherDelegatingAuthorizationManager.Builder extends Object;\n", "des": "Enforcement of security for HTTP requests, typically by the URL requested."}
{"index": 2177, "repo": "spring-security-web-6.1.2", "code": "package authentication\n\n// Abstract processor of browser-based HTTP-based authentication requests.\npublic abstract class AbstractAuthenticationProcessingFilter extends org.springframework.web.filter.GenericFilterBean implements org.springframework.context.ApplicationEventPublisherAware, org.springframework.context.MessageSourceAware;\n// Base class containing the logic used by strategies which handle redirection to a URL and are passed an Authentication object as part of the contract.\npublic abstract class AbstractAuthenticationTargetUrlRequestHandler extends Object;\n// Detects if there is no Authentication object in the SecurityContextHolder, and populates it with one if needed.\npublic class AnonymousAuthenticationFilter extends org.springframework.web.filter.GenericFilterBean implements org.springframework.beans.factory.InitializingBean;\n// A strategy used for converting from a HttpServletRequest to an Authentication of particular type.\npublic interface AuthenticationConverter;\n// Adapts a AuthenticationEntryPoint into a AuthenticationFailureHandler\npublic class AuthenticationEntryPointFailureHandler extends Object implements AuthenticationFailureHandler;\n// Strategy used to handle a failed authentication attempt.\npublic interface AuthenticationFailureHandler;\n// A Filter that performs authentication of a particular request.\npublic class AuthenticationFilter extends org.springframework.web.filter.OncePerRequestFilter;\n// Strategy used to handle a successful user authentication.\npublic interface AuthenticationSuccessHandler;\n// An AuthenticationEntryPoint which selects a concrete AuthenticationEntryPoint based on a RequestMatcher evaluation.\npublic class DelegatingAuthenticationEntryPoint extends Object implements AuthenticationEntryPoint, org.springframework.beans.factory.InitializingBean;\n// An AuthenticationFailureHandler that delegates to other AuthenticationFailureHandler instances based upon the type of AuthenticationException passed into DelegatingAuthenticationFailureHandler.onAuthenticationFailure(HttpServletRequest, HttpServletResponse, AuthenticationException) .\npublic class DelegatingAuthenticationFailureHandler extends Object implements AuthenticationFailureHandler;\n// Uses the internal map of exceptions types to URLs to determine the destination on authentication failure.\npublic class ExceptionMappingAuthenticationFailureHandler extends SimpleUrlAuthenticationFailureHandler;\n// Forward Authentication Failure Handler\npublic class ForwardAuthenticationFailureHandler extends Object implements AuthenticationFailureHandler;\n// Forward Authentication Success Handler\npublic class ForwardAuthenticationSuccessHandler extends Object implements AuthenticationSuccessHandler;\n", "des": "Authentication processing mechanisms, which respond to the submission of authentication credentials using various protocols (eg BASIC, CAS, form login etc)."}
{"index": 2178, "repo": "spring-security-web-6.1.2", "code": "package logout\n\n// Performs a logout through all the LogoutHandler implementations.\npublic final class CompositeLogoutHandler extends Object implements LogoutHandler;\n// A logout handler which clears either - A defined list of cookie names, using the context path as the cookie path OR - A given list of Cookies\npublic final class CookieClearingLogoutHandler extends Object implements LogoutHandler;\n// Delegates to logout handlers based on matched request matchers\npublic class DelegatingLogoutSuccessHandler extends Object implements LogoutSuccessHandler;\n// LogoutSuccessHandler implementation that will perform a request dispatcher \"forward\" to the specified target URL.\npublic class ForwardLogoutSuccessHandler extends Object implements LogoutSuccessHandler;\n// \npublic final class HeaderWriterLogoutHandler extends Object implements LogoutHandler;\n// Implementation of the LogoutSuccessHandler.\npublic class HttpStatusReturningLogoutSuccessHandler extends Object implements LogoutSuccessHandler;\n// Logs a principal out.\npublic class LogoutFilter extends org.springframework.web.filter.GenericFilterBean;\n// Indicates a class that is able to participate in logout handling.\npublic interface LogoutHandler;\n// A logout handler which publishes LogoutSuccessEvent\npublic final class LogoutSuccessEventPublishingLogoutHandler extends Object implements LogoutHandler, org.springframework.context.ApplicationEventPublisherAware;\n// Strategy that is called after a successful logout by the LogoutFilter, to handle redirection or forwarding to the appropriate destination.\npublic interface LogoutSuccessHandler;\n// Performs a logout by modifying the SecurityContextHolder.\npublic class SecurityContextLogoutHandler extends Object implements LogoutHandler;\n// Handles the navigation on logout by delegating to the AbstractAuthenticationTargetUrlRequestHandler base class logic.\npublic class SimpleUrlLogoutSuccessHandler extends AbstractAuthenticationTargetUrlRequestHandler implements LogoutSuccessHandler;\n", "des": "Logout functionality based around a filter which handles a specific logout URL."}
{"index": 2179, "repo": "spring-security-web-6.1.2", "code": "package preauth\n\n// Base class for processing filters that handle pre-authenticated authentication requests, where it is assumed that the principal has already been authenticated by an external system.\npublic abstract class AbstractPreAuthenticatedProcessingFilter extends org.springframework.web.filter.GenericFilterBean implements org.springframework.context.ApplicationEventPublisherAware;\n// Processes a pre-authenticated authentication request.\npublic class PreAuthenticatedAuthenticationProvider extends Object implements org.springframework.security.authentication.AuthenticationProvider, org.springframework.beans.factory.InitializingBean, org.springframework.core.Ordered;\n// Authentication implementation for pre-authenticated authentication.\npublic class PreAuthenticatedAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken;\n// \npublic class PreAuthenticatedCredentialsNotFoundException extends org.springframework.security.core.AuthenticationException;\n// This AuthenticationUserDetailsService implementation creates a UserDetails object based solely on the information contained in the given PreAuthenticatedAuthenticationToken.\npublic class PreAuthenticatedGrantedAuthoritiesUserDetailsService extends Object implements org.springframework.security.core.userdetails.AuthenticationUserDetailsService<PreAuthenticatedAuthenticationToken>;\n// This WebAuthenticationDetails implementation allows for storing a list of pre-authenticated Granted Authorities.\npublic class PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails extends WebAuthenticationDetails implements org.springframework.security.core.authority.GrantedAuthoritiesContainer;\n// A simple pre-authenticated filter which obtains the username from request attributes, for use with SSO systems such as Stanford WebAuth or Shibboleth.\npublic class RequestAttributeAuthenticationFilter extends AbstractPreAuthenticatedProcessingFilter;\n// A simple pre-authenticated filter which obtains the username from a request header, for use with systems such as CA Siteminder.\npublic class RequestHeaderAuthenticationFilter extends AbstractPreAuthenticatedProcessingFilter;\n", "des": "Support for \"pre-authenticated\" scenarios, where Spring Security assumes the incoming request has already been authenticated by some externally configured system."}
{"index": 2180, "repo": "spring-security-web-6.1.2", "code": "package j2ee\n\n// Implementation of AuthenticationDetailsSource which converts the user's J2EE roles (as obtained by calling HttpServletRequest.isUserInRole(String)) into GrantedAuthoritys and stores these in the authentication details object.\npublic class J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource extends Object implements org.springframework.security.authentication.AuthenticationDetailsSource<jakarta.servlet.http.HttpServletRequest,PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails>, org.springframework.beans.factory.InitializingBean;\n// This AbstractPreAuthenticatedProcessingFilter implementation is based on the J2EE container-based authentication mechanism.\npublic class J2eePreAuthenticatedProcessingFilter extends AbstractPreAuthenticatedProcessingFilter;\n// This MappableAttributesRetriever implementation reads the list of defined J2EE roles from a web.xml file and returns these from { WebXmlMappableAttributesRetriever.getMappableAttributes().\npublic class WebXmlMappableAttributesRetriever extends Object implements org.springframework.context.ResourceLoaderAware, org.springframework.security.core.authority.mapping.MappableAttributesRetriever, org.springframework.beans.factory.InitializingBean;\n", "des": "Pre-authentication support for container-authenticated requests."}
{"index": 2181, "repo": "spring-security-web-6.1.2", "code": "package websphere\n\n// This AbstractPreAuthenticatedProcessingFilter implementation is based on WebSphere authentication.\npublic class WebSpherePreAuthenticatedProcessingFilter extends AbstractPreAuthenticatedProcessingFilter;\n// This AuthenticationDetailsSource implementation will set the pre-authenticated granted authorities based on the WebSphere groups for the current WebSphere user, mapped using the configured Attributes2GrantedAuthoritiesMapper.\npublic class WebSpherePreAuthenticatedWebAuthenticationDetailsSource extends Object implements org.springframework.security.authentication.AuthenticationDetailsSource<jakarta.servlet.http.HttpServletRequest,PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails>;\n", "des": "Websphere-specific pre-authentication classes."}
{"index": 2182, "repo": "spring-security-web-6.1.2", "code": "package x509\n\n// Obtains the principal from a certificate using a regular expression match against the Subject (as returned by a call to X509Certificate.getSubjectDN()).\npublic class SubjectDnX509PrincipalExtractor extends Object implements X509PrincipalExtractor, org.springframework.context.MessageSourceAware;\n// \npublic class X509AuthenticationFilter extends AbstractPreAuthenticatedProcessingFilter;\n// Obtains the principal from an X509Certificate for use within the framework.\npublic interface X509PrincipalExtractor;\n", "des": "X.509 client certificate authentication support."}
{"index": 2183, "repo": "spring-security-web-6.1.2", "code": "package rememberme\n\n// Base class for RememberMeServices implementations.\npublic abstract class AbstractRememberMeServices extends Object implements RememberMeServices, org.springframework.beans.factory.InitializingBean, LogoutHandler, org.springframework.context.MessageSourceAware;\n// \npublic class CookieTheftException extends RememberMeAuthenticationException;\n// Simple PersistentTokenRepository implementation backed by a Map.\npublic class InMemoryTokenRepositoryImpl extends Object implements PersistentTokenRepository;\n// Exception thrown by a RememberMeServices implementation to indicate that a submitted cookie is of an invalid format or has expired.\npublic class InvalidCookieException extends RememberMeAuthenticationException;\n// JDBC based persistent login token repository implementation.\npublic class JdbcTokenRepositoryImpl extends org.springframework.jdbc.core.support.JdbcDaoSupport implements PersistentTokenRepository;\n// \npublic class PersistentRememberMeToken extends Object;\n// RememberMeServices implementation based on Barry Jaspan's Improved Persistent Login Cookie Best Practice.\npublic class PersistentTokenBasedRememberMeServices extends AbstractRememberMeServices;\n// The abstraction used by PersistentTokenBasedRememberMeServices to store the persistent login tokens for a user.\npublic interface PersistentTokenRepository;\n// This exception is thrown when an Authentication exception occurs while using the remember-me authentication.\npublic class RememberMeAuthenticationException extends org.springframework.security.core.AuthenticationException;\n// Detects if there is no Authentication object in the SecurityContext, and populates the context with a remember-me authentication token if a RememberMeServices implementation so requests.\npublic class RememberMeAuthenticationFilter extends org.springframework.web.filter.GenericFilterBean implements org.springframework.context.ApplicationEventPublisherAware;\n// Identifies previously remembered users by a Base-64 encoded cookie.\npublic class TokenBasedRememberMeServices extends AbstractRememberMeServices;\n// \npublic static enum TokenBasedRememberMeServices.RememberMeTokenAlgorithm extends Enum<TokenBasedRememberMeServices.RememberMeTokenAlgorithm>;\n", "des": "Support for remembering a user between different web sessions."}
{"index": 2184, "repo": "spring-security-web-6.1.2", "code": "package session\n\n// A base class for performing session fixation protection.\npublic abstract class AbstractSessionFixationProtectionStrategy extends Object implements SessionAuthenticationStrategy, org.springframework.context.ApplicationEventPublisherAware;\n// \nprotected static final class AbstractSessionFixationProtectionStrategy.NullEventPublisher extends Object implements org.springframework.context.ApplicationEventPublisher;\n// Uses HttpServletRequest.changeSessionId() to protect against session fixation attacks.\npublic final class ChangeSessionIdAuthenticationStrategy extends AbstractSessionFixationProtectionStrategy;\n// A SessionAuthenticationStrategy that accepts multiple SessionAuthenticationStrategy implementations to delegate to.\npublic class CompositeSessionAuthenticationStrategy extends Object implements SessionAuthenticationStrategy;\n// Strategy which handles concurrent session-control.\npublic class ConcurrentSessionControlAuthenticationStrategy extends Object implements org.springframework.context.MessageSourceAware, SessionAuthenticationStrategy;\n// \npublic final class NullAuthenticatedSessionStrategy extends Object implements SessionAuthenticationStrategy;\n// Strategy used to register a user with the SessionRegistry after successful Authentication.\npublic class RegisterSessionAuthenticationStrategy extends Object implements SessionAuthenticationStrategy;\n// Thrown by an SessionAuthenticationStrategy to indicate that an authentication object is not valid for the current session, typically because the same user has exceeded the number of sessions they are allowed to have concurrently.\npublic class SessionAuthenticationException extends org.springframework.security.core.AuthenticationException;\n// Allows pluggable support for HttpSession-related behaviour when an authentication occurs.\npublic interface SessionAuthenticationStrategy;\n// Indicates a session ID was changed for the purposes of session fixation protection.\npublic class SessionFixationProtectionEvent extends org.springframework.security.authentication.event.AbstractAuthenticationEvent;\n// Uses HttpServletRequest.invalidate() to protect against session fixation attacks.\npublic class SessionFixationProtectionStrategy extends AbstractSessionFixationProtectionStrategy;\n", "des": "Strategy interface and implementations for handling session-related behaviour for a newly authenticated user."}
{"index": 2185, "repo": "spring-security-web-6.1.2", "code": "package switchuser\n\n// Application event which indicates that a user context switch.\npublic class AuthenticationSwitchUserEvent extends org.springframework.security.authentication.event.AbstractAuthenticationEvent;\n// Allows subclasses to modify the GrantedAuthority list that will be assigned to the principal when they assume the identity of a different principal.\npublic interface SwitchUserAuthorityChanger;\n// Switch User processing filter responsible for user context switching.\npublic class SwitchUserFilter extends org.springframework.web.filter.GenericFilterBean implements org.springframework.context.ApplicationEventPublisherAware, org.springframework.context.MessageSourceAware;\n// Custom GrantedAuthority used by SwitchUserFilter\npublic final class SwitchUserGrantedAuthority extends Object implements org.springframework.security.core.GrantedAuthority;\n", "des": "Provides HTTP-based \"switch user\" (su) capabilities."}
{"index": 2186, "repo": "spring-security-web-6.1.2", "code": "package ui\n\n// For internal use with namespace configuration in the case where a user doesn't configure a login page.\npublic class DefaultLoginPageGeneratingFilter extends org.springframework.web.filter.GenericFilterBean;\n// Generates a default log out page.\npublic class DefaultLogoutPageGeneratingFilter extends org.springframework.web.filter.OncePerRequestFilter;\n", "des": "Authentication user-interface rendering code."}
{"index": 2187, "repo": "spring-security-web-6.1.2", "code": "package www\n\n// Converts from a HttpServletRequest to UsernamePasswordAuthenticationToken that can be authenticated.\npublic class BasicAuthenticationConverter extends Object implements AuthenticationConverter;\n// Used by the ExceptionTranslationFilter to commence authentication via the BasicAuthenticationFilter.\npublic class BasicAuthenticationEntryPoint extends Object implements AuthenticationEntryPoint, org.springframework.beans.factory.InitializingBean;\n// Processes a HTTP request's BASIC authorization headers, putting the result into the SecurityContextHolder.\npublic class BasicAuthenticationFilter extends org.springframework.web.filter.OncePerRequestFilter;\n// Used by the SecurityEnforcementFilter to commence authentication via the DigestAuthenticationFilter.\npublic class DigestAuthenticationEntryPoint extends Object implements AuthenticationEntryPoint, org.springframework.beans.factory.InitializingBean, org.springframework.core.Ordered;\n// Processes a HTTP request's Digest authorization headers, putting the result into the SecurityContextHolder.\npublic class DigestAuthenticationFilter extends org.springframework.web.filter.GenericFilterBean implements org.springframework.context.MessageSourceAware;\n// Thrown if an authentication request is rejected because the digest nonce has expired.\npublic class NonceExpiredException extends org.springframework.security.core.AuthenticationException;\n", "des": "WWW-Authenticate based authentication mechanism implementations: Basic and Digest authentication."}
{"index": 2188, "repo": "spring-security-web-6.1.2", "code": "package context\n\n// Registers the DelegatingFilterProxy to use the springSecurityFilterChain before any other registered Filter.\npublic abstract class AbstractSecurityWebApplicationInitializer extends Object implements org.springframework.web.WebApplicationInitializer;\n// \npublic final class DelegatingSecurityContextRepository extends Object implements SecurityContextRepository;\n// \n@Deprecated public final class HttpRequestResponseHolder extends Object;\n// A SecurityContextRepository implementation which stores the security context in the HttpSession between requests.\npublic class HttpSessionSecurityContextRepository extends Object implements SecurityContextRepository;\n// \npublic final class NullSecurityContextRepository extends Object implements SecurityContextRepository;\n// Stores the SecurityContext on a ServletRequest.setAttribute(String, Object) so that it can be restored when different dispatch types occur.\npublic final class RequestAttributeSecurityContextRepository extends Object implements SecurityContextRepository;\n// \n@Deprecated public abstract class SaveContextOnUpdateOrErrorResponseWrapper extends OnCommittedResponseWrapper;\n// A Filter that uses the SecurityContextRepository to obtain the SecurityContext and set it on the SecurityContextHolder.\npublic class SecurityContextHolderFilter extends org.springframework.web.filter.GenericFilterBean;\n// \n@Deprecated public class SecurityContextPersistenceFilter extends org.springframework.web.filter.GenericFilterBean;\n// Strategy used for persisting a SecurityContext between requests.\npublic interface SecurityContextRepository;\n", "des": "Classes which are responsible for maintaining the security context between HTTP requests."}
{"index": 2189, "repo": "spring-security-web-6.1.2", "code": "package jaasapi\n\n// A Filter which attempts to obtain a JAAS Subject and continue the FilterChain running as that Subject.\npublic class JaasApiIntegrationFilter extends org.springframework.web.filter.GenericFilterBean;\n", "des": "Makes a JAAS Subject available as the current Subject."}
{"index": 2190, "repo": "spring-security-web-6.1.2", "code": "package jackson2\n\n// Jackson module for spring-security-web.\npublic class WebJackson2Module extends com.fasterxml.jackson.databind.module.SimpleModule;\n// Jackson module for spring-security-web related to servlet.\npublic class WebServletJackson2Module extends com.fasterxml.jackson.databind.module.SimpleModule;\n", "des": "Mix-in classes to provide Jackson serialization support."}
{"index": 2191, "repo": "spring-security-web-6.1.2", "code": "package savedrequest\n\n// An Implementation of RequestCache which saves the original request URI in a cookie.\npublic class CookieRequestCache extends Object implements RequestCache;\n// Represents central information from a HttpServletRequest.\npublic class DefaultSavedRequest extends Object implements SavedRequest;\n// \npublic static class DefaultSavedRequest.Builder extends Object;\n// Adapter that wraps an Enumeration around a Java 2 collection Iterator.\npublic class Enumerator<T> extends Object implements Enumeration<T>;\n// Utility class to generate HTTP dates.\npublic final class FastHttpDateFormat extends Object;\n// RequestCache which stores the SavedRequest in the HttpSession.\npublic class HttpSessionRequestCache extends Object implements RequestCache;\n// Null implementation of RequestCache.\npublic class NullRequestCache extends Object implements RequestCache;\n// Implements \"saved request\" logic, allowing a single request to be retrieved and restarted after redirecting to an authentication mechanism.\npublic interface RequestCache;\n// Responsible for reconstituting the saved request if one is cached and it matches the current request.\npublic class RequestCacheAwareFilter extends org.springframework.web.filter.GenericFilterBean;\n// Stores off the values of a cookie in a serializable holder\npublic class SavedCookie extends Object implements Serializable;\n// Encapsulates the functionality required of a cached request for both an authentication mechanism (typically form-based login) to redirect to the original URL and for a RequestCache to build a wrapped request, reproducing the original request data.\npublic interface SavedRequest extends Serializable;\n// A Bean implementation of SavedRequest\npublic class SimpleSavedRequest extends Object implements SavedRequest;\n", "des": "Classes related to the caching of an HttpServletRequest which requires authentication."}
{"index": 2192, "repo": "spring-security-web-6.1.2", "code": "package servletapi\n\n// A Filter which populates the ServletRequest with a request wrapper which implements the servlet API security methods.\npublic class SecurityContextHolderAwareRequestFilter extends org.springframework.web.filter.GenericFilterBean;\n// A Spring Security-aware HttpServletRequestWrapper, which uses the SecurityContext-defined Authentication object to implement the servlet API security methods: SecurityContextHolderAwareRequestWrapper.getUserPrincipal() SecurityContextHolderAwareRequestWrapper.isUserInRole(String) HttpServletRequestWrapper.getRemoteUser().\npublic class SecurityContextHolderAwareRequestWrapper extends jakarta.servlet.http.HttpServletRequestWrapper;\n", "des": "Populates a Servlet request with a new Spring Security compliant HttpServletRequestWrapper."}
{"index": 2193, "repo": "spring-security-web-6.1.2", "code": "package session\n\n// Filter required by concurrent session handling package.\npublic class ConcurrentSessionFilter extends org.springframework.web.filter.GenericFilterBean;\n// Disables encoding URLs using the HttpServletResponse to prevent including the session id in URLs which is not considered URL because the session id can be leaked in things like HTTP access logs.\npublic class DisableEncodeUrlFilter extends org.springframework.web.filter.OncePerRequestFilter;\n// Eagerly creates HttpSession if it does not already exist.\npublic class ForceEagerSessionCreationFilter extends org.springframework.web.filter.OncePerRequestFilter;\n// Published by the HttpSessionEventPublisher when an HttpSession is created by the container\npublic class HttpSessionCreatedEvent extends org.springframework.security.core.session.SessionCreationEvent;\n// Published by the HttpSessionEventPublisher when a HttpSession is removed from the container\npublic class HttpSessionDestroyedEvent extends org.springframework.security.core.session.SessionDestroyedEvent;\n// Declared in web.xml as\npublic class HttpSessionEventPublisher extends Object implements jakarta.servlet.http.HttpSessionListener, jakarta.servlet.http.HttpSessionIdListener;\n// Published by the HttpSessionEventPublisher when an HttpSession ID is changed.\npublic class HttpSessionIdChangedEvent extends org.springframework.security.core.session.SessionIdChangedEvent;\n// An adapter of InvalidSessionStrategy to AccessDeniedHandler\npublic final class InvalidSessionAccessDeniedHandler extends Object implements AccessDeniedHandler;\n// Determines the behaviour of the SessionManagementFilter when an invalid session Id is submitted and detected in the SessionManagementFilter.\npublic interface InvalidSessionStrategy;\n// Performs a redirect to the original request URL when an invalid requested session is detected by the SessionManagementFilter.\npublic final class RequestedUrlRedirectInvalidSessionStrategy extends Object implements InvalidSessionStrategy;\n// An event for when a SessionInformation is expired.\npublic final class SessionInformationExpiredEvent extends org.springframework.context.ApplicationEvent;\n// Determines the behaviour of the ConcurrentSessionFilter when an expired session is detected in the ConcurrentSessionFilter.\npublic interface SessionInformationExpiredStrategy;\n", "des": "Session management filters, HttpSession events and publisher classes."}
{"index": 2194, "repo": "spring-security-web-6.1.2", "code": "package util\n\n// Base class for response wrappers which encapsulate the logic for handling an event when the HttpServletResponse is committed.\npublic abstract class OnCommittedResponseWrapper extends jakarta.servlet.http.HttpServletResponseWrapper;\n// Internal class for building redirect URLs.\npublic class RedirectUrlBuilder extends Object;\n// Internal utility for escaping characters in HTML strings.\npublic abstract class TextEscapeUtils extends Object;\n// Handler for analyzing Throwable instances.\npublic class ThrowableAnalyzer extends Object;\n// Interface for handlers extracting the cause out of a specific Throwable type.\npublic interface ThrowableCauseExtractor;\n// Provides static methods for composing URLs.\npublic final class UrlUtils extends Object;\n", "des": "Web utility classes."}
{"index": 2195, "repo": "spring-data-commons-3.1.2", "code": "package annotation\n\n// Annotation to define how Spring Data shall access values of persistent properties.\n@Documented @Target({ANNOTATION_TYPE,TYPE,FIELD,METHOD}) @Retention(RUNTIME) public @interface AccessType;\n// \npublic static enum AccessType.Type extends Enum<AccessType.Type>;\n// Declares a field as the one representing the principal that created the entity containing the field.\n@Retention(RUNTIME) @Target({FIELD,METHOD,ANNOTATION_TYPE}) public @interface CreatedBy;\n// Declares a field as the one representing the date the entity containing the field was created.\n@Retention(RUNTIME) @Target({FIELD,METHOD,ANNOTATION_TYPE}) public @interface CreatedDate;\n// Demarcates an identifier.\n@Retention(RUNTIME) @Target({FIELD,METHOD,ANNOTATION_TYPE}) public @interface Id;\n// Annotation for persistent entities to indicate the class is designed in immutable way.\n@Target(TYPE) @Retention(RUNTIME) public @interface Immutable;\n// Declares a field as the one representing the principal that recently modified the entity containing the field.\n@Retention(RUNTIME) @Target({FIELD,METHOD,ANNOTATION_TYPE}) public @interface LastModifiedBy;\n// Declares a field as the one representing the date the entity containing the field was recently modified.\n@Retention(RUNTIME) @Target({FIELD,METHOD,ANNOTATION_TYPE}) public @interface LastModifiedDate;\n// \n@Retention(RUNTIME) @Target({CONSTRUCTOR,ANNOTATION_TYPE}) @Deprecated public @interface PersistenceConstructor;\n// Marker annotation to declare a constructor or factory method annotation as factory/preferred constructor annotation.\n@Retention(RUNTIME) @Target({CONSTRUCTOR,METHOD,ANNOTATION_TYPE}) public @interface PersistenceCreator;\n// Annotation to generally identify persistent types, fields and parameters.\n@Indexed @Retention(RUNTIME) @Reflective @Target({TYPE,FIELD,PARAMETER}) public @interface Persistent;\n// Meta-Annotation to mark a store specific annotation as a query annotation.\n@Retention(RUNTIME) @Target(ANNOTATION_TYPE) public @interface QueryAnnotation;\n// Marks a field to be read-only for the mapping framework and therefore will not be persisted.\n@Retention(RUNTIME) @Target({FIELD,METHOD,ANNOTATION_TYPE}) public @interface ReadOnlyProperty;\n", "des": "Core annotations being used by Spring Data."}
{"index": 2196, "repo": "spring-data-commons-3.1.2", "code": "package aot\n\n// The context in which the AOT processing happens.\npublic interface AotContext;\n// Interface defining introspection methods for bean definitions.\npublic static interface AotContext.IntrospectedBeanDefinition;\n// Type-based introspector to resolve Class from a type name and to introspect the bean factory for presence of beans.\npublic static interface AotContext.TypeIntrospector;\n// BeanFactoryInitializationAotProcessor implementation used to encapsulate common data infrastructure concerns and preprocess the ConfigurableListableBeanFactory ahead of the AOT compilation in order to prepare the Spring Data BeanDefinitions for AOT processing.\npublic class ManagedTypesBeanFactoryInitializationAotProcessor extends Object implements BeanFactoryInitializationAotProcessor;\n// BeanRegistrationAotProcessor handling module ManagedTypes instances.\npublic class ManagedTypesBeanRegistrationAotProcessor extends Object implements BeanRegistrationAotProcessor;\n// \npublic class PublicMethodReflectiveProcessor extends SimpleReflectiveProcessor;\n// Extension to BeanRegistrationAotContribution that bases its contribution on a RegisteredBean.\npublic interface RegisteredBeanAotContribution extends BeanRegistrationAotContribution;\n", "des": "Support for registering the need for reflection, resources, java serialization and proxies at runtime for Ahead of Time compilation."}
{"index": 2197, "repo": "spring-data-commons-3.1.2", "code": "package auditing\n\n// Interface to abstract the ways setting the auditing information can be implemented.\npublic interface AuditableBeanWrapper<T>;\n// A factory to lookup AuditableBeanWrappers.\npublic interface AuditableBeanWrapperFactory;\n// Auditing handler to mark entity objects created and modified.\npublic class AuditingHandler extends AuditingHandlerSupport implements InitializingBean;\n// Support class to implement auditing handlers.\npublic abstract class AuditingHandlerSupport extends Object;\n// Default DateTimeProvider simply creating new LocalDateTime instances for each method call.\npublic enum CurrentDateTimeProvider extends Enum<CurrentDateTimeProvider> implements DateTimeProvider;\n// SPI to calculate the current time to be used when auditing.\npublic interface DateTimeProvider;\n// AuditingHandler extension that uses PersistentEntity.isNew(Object) to expose a generic IsNewAwareAuditingHandler.markAudited(Object) method that will route calls to AuditingHandler.markCreated(Object) or AuditingHandler.markModified(Object) based on the IsNewStrategy determined from the factory.\npublic class IsNewAwareAuditingHandler extends AuditingHandler;\n// AuditableBeanWrapperFactory that will create am AuditableBeanWrapper using mapping information obtained from a MappingContext to detect auditing configuration and eventually invoking setting the auditing values.\npublic class MappingAuditableBeanWrapperFactory extends Object;\n// Auditing handler to mark entity objects created and modified.\npublic class ReactiveAuditingHandler extends AuditingHandlerSupport;\n// AuditingHandler extension that uses PersistentEntity.isNew(Object) to expose a generic ReactiveIsNewAwareAuditingHandler.markAudited(Object) method that will route calls to ReactiveAuditingHandler.markCreated(Object) or ReactiveAuditingHandler.markModified(Object) based on the IsNewStrategy determined from the factory.\npublic class ReactiveIsNewAwareAuditingHandler extends ReactiveAuditingHandler;\n", "des": "General support for entity auditing."}
{"index": 2198, "repo": "spring-data-commons-3.1.2", "code": "package config\n\n// Default implementation for AuditingConfiguration.\npublic class AnnotationAuditingConfiguration extends Object implements AuditingConfiguration;\n// A ImportBeanDefinitionRegistrar that serves as a base class for store specific implementations for configuring audit support.\npublic abstract class AuditingBeanDefinitionRegistrarSupport extends Object implements ImportBeanDefinitionRegistrar;\n// Configuration information for auditing.\npublic interface AuditingConfiguration;\n// BeanDefinitionParser that parses an AuditingHandler BeanDefinition\npublic class AuditingHandlerBeanDefinitionParser extends AbstractSingleBeanDefinitionParser;\n// AuditingHandlerBeanDefinitionParser that will register am IsNewAwareAuditingHandler.\npublic class IsNewAwareAuditingHandlerBeanDefinitionParser extends AuditingHandlerBeanDefinitionParser;\n", "des": "Types to abstract authentication concepts."}
{"index": 2199, "repo": "spring-data-commons-3.1.2", "code": "package config\n\n// Helper to create BeanComponentDefinition more easily.\npublic class BeanComponentDefinitionBuilder extends Object;\n// Helper class to centralize common functionality that needs to be used in various places of the configuration implementation.\npublic interface ConfigurationUtils;\n// Utility methods for BeanDefinitionParser implementations.\npublic abstract class ParsingUtils extends Object;\n// Parser to populate the given ClassPathScanningCandidateComponentProvider with TypeFilters parsed from the given Element's children.\npublic class TypeFilterParser extends Object;\n// \npublic static enum TypeFilterParser.Type extends Enum<TypeFilterParser.Type>;\n", "des": "Basic support for creating custom Spring namespaces and JavaConfig."}
{"index": 2200, "repo": "spring-data-commons-3.1.2", "code": "package convert\n\n// TypeInformationMapper implementation that can be either set up using a MappingContext or manually set up Map of String aliases to types.\npublic class ConfigurableTypeInformationMapper extends Object implements TypeInformationMapper;\n// API to easily set up GenericConverter instances using Java 8 lambdas, mostly in bidirectional fashion for easy registration as custom type converters of the Spring Data mapping subsystem.\npublic interface ConverterBuilder;\n// A ConverterBuilder aware of both a reading and writing converter.\npublic static interface ConverterBuilder.ConverterAware extends ConverterBuilder, ConverterBuilder.ReadingConverterAware, ConverterBuilder.WritingConverterAware;\n// Exposes a reading converter.\npublic static interface ConverterBuilder.ReadingConverterAware;\n// Interface to represent an intermediate setup step of ConverterBuilder.ConverterAware defining a reading converter first.\npublic static interface ConverterBuilder.ReadingConverterBuilder<T,S> extends ConverterBuilder, ConverterBuilder.ReadingConverterAware;\n// Exposes a writing converter.\npublic static interface ConverterBuilder.WritingConverterAware;\n// Interface to represent an intermediate setup step of ConverterBuilder.ConverterAware defining a writing converter first.\npublic static interface ConverterBuilder.WritingConverterBuilder<S,T> extends ConverterBuilder, ConverterBuilder.WritingConverterAware;\n// Value object to capture custom conversion.\npublic class CustomConversions extends Object;\n// Value object holding the actual CustomConversions.StoreConversions and custom converters configured for registration.\nprotected static class CustomConversions.ConverterConfiguration extends Object;\n// Value class tying together a CustomConversions.ConverterRegistration and its origin to allow fine grained registration based on store supported types.\nprotected static class CustomConversions.ConverterRegistrationIntent extends Object;\n// \nprotected static enum CustomConversions.ConverterRegistrationIntent.ConverterOrigin extends Enum<CustomConversions.ConverterRegistrationIntent.ConverterOrigin>;\n// Value type to capture store-specific extensions to the CustomConversions.\npublic static class CustomConversions.StoreConversions extends Object;\n// Default implementation of TypeMapper.\npublic class DefaultTypeMapper<S> extends Object implements TypeMapper<S>, BeanClassLoaderAware;\n// Spring Converter to create instances of the given DTO type from the source value handed into the conversion.\npublic class DtoInstantiatingConverter extends Object implements Converter<Object,Object>;\n", "des": "General purpose conversion framework to read objects from a data store abstraction and write it back."}
{"index": 2201, "repo": "spring-data-commons-3.1.2", "code": "package crossstore\n\n// Interface representing the set of changes in an entity.\npublic interface ChangeSet;\n// Interface introduced to objects exposing ChangeSet information\npublic interface ChangeSetBacked;\n// \npublic class ChangeSetBackedTransactionSynchronization extends Object implements TransactionSynchronization;\n// Interface to be implemented by classes that can synchronize between data stores and ChangeSets.\npublic interface ChangeSetPersister<K>;\n// Exception thrown in alternate control flow if getPersistentState finds no entity data.\npublic static class ChangeSetPersister.NotFoundException extends Exception;\n// Simple ChangeSet implementation backed by a HashMap.\npublic class HashMapChangeSet extends Object implements ChangeSet;\n", "des": "Support for cross-store persistence."}
{"index": 2202, "repo": "spring-data-commons-3.1.2", "code": "package domain\n\n// Convenience base class for aggregate roots that exposes a AbstractAggregateRoot.registerEvent(Object) to capture domain events and expose them via AbstractAggregateRoot.domainEvents().\npublic class AbstractAggregateRoot<A extends AbstractAggregateRoot<A>> extends Object;\n// Abstract Java Bean implementation of Pageable.\npublic abstract class AbstractPageRequest extends Object implements Pageable, Serializable;\n// Annotation to be used on a method of a Spring Data managed aggregate to get invoked after the events of an aggregate have been published.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) public @interface AfterDomainEventPublication;\n// Interface for auditable entities.\npublic interface Auditable<U,ID,T extends TemporalAccessor> extends Persistable<ID>;\n// Interface for components that are aware of the application's current auditor.\npublic interface AuditorAware<T>;\n// DomainEvents can be used on methods of aggregate roots managed by Spring Data repositories to publish the events returned by that method as Spring application events.\n@Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) public @interface DomainEvents;\n// Support for query by example (QBE).\npublic interface Example<T>;\n// Specification for property path matching to use in query by example (QBE).\npublic interface ExampleMatcher;\n// A generic property matcher that specifies string matching and case sensitivity.\npublic static class ExampleMatcher.GenericPropertyMatcher extends Object;\n// Predefined property matchers to create a ExampleMatcher.GenericPropertyMatcher.\npublic static class ExampleMatcher.GenericPropertyMatchers extends Object;\n// Callback to configure a matcher.\npublic static interface ExampleMatcher.MatcherConfigurer<T>;\n// The match modes to expose so that clients can find about how to concatenate the predicates.\npublic static enum ExampleMatcher.MatchMode extends Enum<ExampleMatcher.MatchMode>;\n// \npublic static enum ExampleMatcher.NoOpPropertyValueTransformer extends Enum<ExampleMatcher.NoOpPropertyValueTransformer> implements ExampleMatcher.PropertyValueTransformer;\n// Null handling for creating criterion out of an Example.\npublic static enum ExampleMatcher.NullHandler extends Enum<ExampleMatcher.NullHandler>;\n// Define specific property handling for a Dot-Path.\npublic static class ExampleMatcher.PropertySpecifier extends Object;\n", "des": "Central domain abstractions especially to be used in combination with the Repository abstraction."}
{"index": 2203, "repo": "spring-data-commons-3.1.2", "code": "package jaxb\n\n// XmlAdapter to convert Sort.Order instances into SpringDataJaxb.OrderDtos and vice versa.\npublic class OrderAdapter extends jakarta.xml.bind.annotation.adapters.XmlAdapter<SpringDataJaxb.OrderDto,Sort.Order>;\n// XmlAdapter to convert Page instances into SpringDataJaxb.PageDto instances and vice versa.\npublic class PageAdapter extends jakarta.xml.bind.annotation.adapters.XmlAdapter<SpringDataJaxb.PageDto,Page<Object>>;\n// XmlAdapter to convert Sort instances into SpringDataJaxb.SortDto instances and vice versa.\npublic class SortAdapter extends jakarta.xml.bind.annotation.adapters.XmlAdapter<SpringDataJaxb.SortDto,Sort>;\n// Helper class containing utility methods to implement JAXB XmlAdapters as well as the DTO types to be marshalled by JAXB.\npublic abstract class SpringDataJaxb extends Object;\n// The DTO for Sort.Order.\npublic static class SpringDataJaxb.OrderDto extends Object;\n// The DTO for Page.\npublic static class SpringDataJaxb.PageDto extends org.springframework.hateoas.RepresentationModel;\n// The DTO for Pageables/PageRequests.\npublic static class SpringDataJaxb.PageRequestDto extends Object;\n// The DTO for Sort.\npublic static class SpringDataJaxb.SortDto extends Object;\n", "des": "Central domain abstractions especially to be used in combination with the Repository abstraction."}
{"index": 2204, "repo": "spring-data-commons-3.1.2", "code": "package geo\n\n// Represents a geospatial box value\npublic class Box extends Object implements Shape;\n// Represents a geospatial circle value\npublic class Circle extends Object implements Shape;\n// Value object to create custom Metrics on the fly.\npublic class CustomMetric extends Object implements Metric;\n// Value object to represent distances in a given metric.\npublic final class Distance extends Object implements Serializable, Comparable<Distance>;\n// Custom module to deserialize the geo-spatial value objects using Jackson 2.\npublic class GeoModule extends com.fasterxml.jackson.databind.module.SimpleModule;\n// Custom Page to carry the average distance retrieved from the GeoResults the GeoPage is set up from.\npublic class GeoPage<T> extends PageImpl<GeoResult<T>>;\n// Value object capturing some arbitrary object plus a distance.\npublic final class GeoResult<T> extends Object implements Serializable;\n// Value object to capture GeoResults as well as the average distance they have.\npublic class GeoResults<T> extends Object implements Iterable<GeoResult<T>>, Serializable;\n// Interface for Metrics that can be applied to a base scale.\npublic interface Metric extends Serializable;\n// Commonly used Metrics.\npublic enum Metrics extends Enum<Metrics> implements Metric;\n// Represents a geospatial point value.\npublic class Point extends Object implements Serializable;\n// Simple value object to represent a Polygon.\npublic class Polygon extends Object implements Iterable<Point>, Shape;\n// Common interface for all shapes.\npublic interface Shape extends Serializable;\n", "des": "Value types representing geo-spatial concepts."}
{"index": 2205, "repo": "spring-data-commons-3.1.2", "code": "package format\n\n// Converter to create Distance instances from String representations.\npublic enum DistanceFormatter extends Enum<DistanceFormatter> implements Converter<String,Distance>, Formatter<Distance>;\n// Converter to parse two comma-separated doubles into a Point.\npublic enum PointFormatter extends Enum<PointFormatter> implements Converter<String,Point>, Formatter<Point>;\n", "des": "Formatters for geo-spatial types."}
{"index": 2206, "repo": "spring-data-commons-3.1.2", "code": "package history\n\n// A RevisionMetadata implementation that inspects the given object for fields with the configured annotations and returns the field's values on calls to AnnotationRevisionMetadata.getRevisionInstant(), AnnotationRevisionMetadata.getRevisionInstant() and AnnotationRevisionMetadata.getRevisionNumber().\npublic class AnnotationRevisionMetadata<N extends Number & Comparable<N>> extends Object implements RevisionMetadata<N>;\n// Wrapper to contain RevisionMetadata as well as the revisioned entity.\npublic final class Revision<N extends Number & Comparable<N>,T> extends Object implements Comparable<Revision<N,?>>;\n// Metadata about a revision.\npublic interface RevisionMetadata<N extends Number & Comparable<N>>;\n// The type of a Revision.\npublic static enum RevisionMetadata.RevisionType extends Enum<RevisionMetadata.RevisionType>;\n// Simple wrapper class for a List of Revisions allowing to canonically access the latest revision.\npublic class Revisions<N extends Number & Comparable<N>,T> extends Object implements Streamable<Revision<N,T>>;\n// A dedicated Sort implementation that allows the definition of the ordering of revisions independently of the property name the revision number is held in.\npublic class RevisionSort extends Sort;\n", "des": "Basic interfaces and value objects for histography API."}
{"index": 2207, "repo": "spring-data-commons-3.1.2", "code": "package mapping\n\n// Access options when using PersistentPropertyPathAccessor to get and set properties.\npublic class AccessOptions extends Object;\n// Access options for getting values for property paths.\npublic static class AccessOptions.GetOptions extends Object;\n// How to handle null values during a PersistentPropertyPath traversal.\npublic static enum AccessOptions.GetOptions.GetNulls extends Enum<AccessOptions.GetOptions.GetNulls>;\n// Access options for setting values for property paths.\npublic static class AccessOptions.SetOptions extends Object;\n// How to propagate setting values that cross collection and map properties.\npublic static enum AccessOptions.SetOptions.Propagation extends Enum<AccessOptions.SetOptions.Propagation>;\n// How to handle intermediate null values when setting\npublic static enum AccessOptions.SetOptions.SetNulls extends Enum<AccessOptions.SetOptions.SetNulls>;\n// A container object which may or may not contain a type alias value.\npublic final class Alias extends Object;\n// Value object to capture Associations.\npublic class Association<P extends PersistentProperty<P>> extends Object;\n// Callback interface to implement functionality to be applied to a collection of Associations.\npublic interface AssociationHandler<P extends PersistentProperty<P>>;\n// Value object to encapsulate the factory method to be used when mapping persistent data to objects.\npublic final class FactoryMethod<T,P extends PersistentProperty<P>> extends Object;\n// Interface for a component allowing the access of identifier values.\npublic interface IdentifierAccessor;\n// Metadata describing a mechanism to create instances of persistent types.\npublic interface InstanceCreatorMetadata<P extends PersistentProperty<P>>;\n// \npublic class MappingException extends RuntimeException;\n// Value object to represent constructor parameters.\npublic class Parameter<T,P extends PersistentProperty<P>> extends Object;\n// Represents a persistent entity.\npublic interface PersistentEntity<T,P extends PersistentProperty<P>> extends Iterable<P>;\n// \npublic interface PersistentProperty<P extends PersistentProperty<P>>;\n// Domain service to allow accessing and setting PersistentPropertys of an entity.\npublic interface PersistentPropertyAccessor<T>;\n// Abstraction of a path of PersistentPropertys.\npublic interface PersistentPropertyPath<P extends PersistentProperty<P>> extends Streamable<P>;\n", "des": "Base package for the mapping subsystem."}
{"index": 2208, "repo": "spring-data-commons-3.1.2", "code": "package callback\n\n// Marker interface for entity callbacks to be implemented in specific callback subtypes.\n@Reflective(PublicMethodReflectiveProcessor.class) public interface EntityCallback<T>;\n// Interface to be implemented by objects that can manage a number of EntityCallback objects and invoke these with a specific entity.\npublic interface EntityCallbacks;\n// Interface to be implemented by objects that can manage a number of EntityCallback objects and invoke these with a specific entity.\npublic interface ReactiveEntityCallbacks;\n", "des": "Mapping callback API and implementation base classes."}
{"index": 2209, "repo": "spring-data-commons-3.1.2", "code": "package context\n\n// Base class to build mapping metadata and thus create instances of PersistentEntity and PersistentProperty.\npublic abstract class AbstractMappingContext<E extends MutablePersistentEntity<?,P>,P extends PersistentProperty<P>> extends Object implements MappingContext<E,P>, ApplicationEventPublisherAware, ApplicationContextAware, InitializingBean;\n// Exception to indicate a source path couldn't be resolved into a PersistentPropertyPath completely.\npublic class InvalidPersistentPropertyPath extends MappingException;\n// This interface defines the overall context including all known PersistentEntity instances and methods to obtain instances on demand. it is used internally to establish associations between entities and also at runtime to obtain entities by name.\npublic interface MappingContext<E extends PersistentEntity<?,P>,P extends PersistentProperty<P>>;\n// Base implementation of an ApplicationEvent refering to a PersistentEntity.\npublic class MappingContextEvent<E extends PersistentEntity<?,P>,P extends PersistentProperty<P>> extends ApplicationEvent;\n// Value object to access PersistentEntity instances managed by MappingContexts.\npublic class PersistentEntities extends Object implements Streamable<PersistentEntity<?,? extends PersistentProperty<?>>>;\n", "des": "Mapping context API and implementation base classes."}
{"index": 2210, "repo": "spring-data-commons-3.1.2", "code": "package model\n\n// Simple implementation of PersistentProperty.\npublic abstract class AbstractPersistentProperty<P extends PersistentProperty<P>> extends Object implements PersistentProperty<P>;\n// Special PersistentProperty that takes annotations at a property into account.\npublic abstract class AnnotationBasedPersistentProperty<P extends PersistentProperty<P>> extends AbstractPersistentProperty<P>;\n// Simple value object to capture information of PersistentEntitys.\npublic class BasicPersistentEntity<T,P extends PersistentProperty<P>> extends Object implements MutablePersistentEntity<T,P>;\n// PersistentPropertyAccessorFactory that uses a BeanWrapper.\npublic enum BeanWrapperPropertyAccessorFactory extends Enum<BeanWrapperPropertyAccessorFactory> implements PersistentPropertyAccessorFactory;\n// FieldNamingStrategy that abbreviates field names by using the very first letter of the camel case parts of the PersistentProperty's name.\npublic class CamelCaseAbbreviatingFieldNamingStrategy extends CamelCaseSplittingFieldNamingStrategy;\n// Configurable FieldNamingStrategy that splits up camel-case property names and reconcatenates them using a configured delimiter.\npublic class CamelCaseSplittingFieldNamingStrategy extends Object implements FieldNamingStrategy;\n// A factory that can generate byte code to speed-up dynamic property access.\npublic class ClassGeneratingPropertyAccessorFactory extends Object implements PersistentPropertyAccessorFactory;\n// PersistentPropertyAccessor that potentially converts the value handed to ConvertingPropertyAccessor.setProperty(PersistentProperty, Object) to the type of the PersistentProperty using a ConversionService.\npublic class ConvertingPropertyAccessor<T> extends Object;\n// ParameterValueProvider implementation that evaluates the Parameters key against SpelExpressionParser and EvaluationContext.\npublic class DefaultSpELExpressionEvaluator extends Object implements SpELExpressionEvaluator;\n// SPI to abstract strategies to create instances for PersistentEntitys.\npublic interface EntityInstantiator;\n// Simple value object allowing access to EntityInstantiator instances for a given type falling back to a default one.\npublic class EntityInstantiators extends Object;\n// SPI to determine how to name document fields in cases the field name is not manually defined.\npublic interface FieldNamingStrategy;\n// Default implementation of IdentifierAccessor.\npublic class IdPropertyIdentifierAccessor extends TargetAwareIdentifierAccessor;\n", "des": "Core implementation of the mapping subsystem's model."}
{"index": 2211, "repo": "spring-data-commons-3.1.2", "code": "package projection\n\n// Helper value to abstract an accessor.\npublic final class Accessor extends Object;\n// Method interceptor to invoke default methods on the repository proxy.\npublic class DefaultMethodInvokingMethodInterceptor extends Object implements MethodInterceptor;\n// Descriptor for a top-level mapped type representing a view onto a domain type structure.\npublic class EntityProjection<M,D> extends Object implements Streamable<EntityProjection.PropertyProjection<?,?>>;\n// Descriptor for a property-level type along its potential projection that is held within a Collection-like or Map-like container.\npublic static class EntityProjection.ContainerPropertyProjection<M,D> extends EntityProjection.PropertyProjection<M,D>;\n// Projection type.\npublic static enum EntityProjection.ProjectionType extends Enum<EntityProjection.ProjectionType>;\n// Descriptor for a property-level type along its potential projection.\npublic static class EntityProjection.PropertyProjection<M,D> extends EntityProjection<M,D>;\n// This class is introspects the returned type in the context of a domain type for all reachable properties (w/o cycles) to determine which property paths are subject to projection.\npublic class EntityProjectionIntrospector extends Object;\n// Represents a predicate (boolean-valued function) of a target type and its underlying type.\npublic static interface EntityProjectionIntrospector.ProjectionPredicate;\n// SPI to create MethodInterceptor instances based on the given source object and the target type to produce.\npublic interface MethodInterceptorFactory;\n// A factory to create projecting instances for other objects usually used to allow easy creation of representation projections to define which properties of a domain objects shall be exported in which way.\npublic interface ProjectionFactory;\n// Information about a projection type.\npublic interface ProjectionInformation;\n// A ProxyProjectionFactory that adds support to use Value-annotated methods on a projection interface to evaluate the contained SpEL expression to define the outcome of the method call.\npublic class SpelAwareProxyProjectionFactory extends Object implements BeanFactoryAware;\n// \nprotected static class SpelAwareProxyProjectionFactory.SpelAwareProjectionInformation extends Object;\n// Extension of TargetClassAware to be able to ignore the getter on JSON rendering.\npublic interface TargetAware extends TargetClassAware, RawTargetAccess;\n", "des": "Projection subsystem."}
{"index": 2212, "repo": "spring-data-commons-3.1.2", "code": "package querydsl\n\n// Strategy interface to abstract the ways to translate an plain domain class into a EntityPath.\npublic interface EntityPathResolver;\n// Interface to allow execution of QueryDsl Predicate instances.\npublic interface ListQuerydslPredicateExecutor<T> extends QuerydslPredicateExecutor<T>;\n// Basic Java Bean implementation of Pageable with support for QueryDSL.\npublic class QPageRequest extends AbstractPageRequest;\n// Sort option for queries that wraps a Querydsl OrderSpecifier.\npublic class QSort extends Sort implements Serializable;\n// Interface to allow execution of QueryDsl Predicate instances.\npublic interface QuerydslPredicateExecutor<T>;\n// RepositoryInvoker that is aware of a QuerydslPredicateExecutor and Predicate to be executed for all flavors of findAll(…).\npublic class QuerydslRepositoryInvokerAdapter extends Object implements RepositoryInvoker;\n// Utility class for Querydsl.\npublic abstract class QuerydslUtils extends Object;\n// Interface to issue queries using Querydsl Predicate instances.\npublic interface ReactiveQuerydslPredicateExecutor<T>;\n// Simple implementation of EntityPathResolver to lookup a query class by reflection and using the static field of the same type.\npublic class SimpleEntityPathResolver extends Object implements EntityPathResolver;\n", "des": "Querydsl integration support classes."}
{"index": 2213, "repo": "spring-data-commons-3.1.2", "code": "package binding\n\n// MultiValueBinding creates a Predicate out of given Path and collection value.\n@FunctionalInterface public interface MultiValueBinding<T extends com.querydsl.core.types.Path<? extends S>,S>;\n// OptionalValueBinding creates a Predicate out of given Path and value.\n@FunctionalInterface public interface OptionalValueBinding<T extends com.querydsl.core.types.Path<? extends S>,S>;\n// A component that will customize QuerydslBindings for the given entity path.\npublic interface QuerydslBinderCustomizer<T extends com.querydsl.core.types.EntityPath<?>>;\n// A component for QuerydslBindings customization acting as default customizer the given entity path regardless of the domain type.\npublic interface QuerydslBinderCustomizerDefaults extends QuerydslBinderCustomizer<com.querydsl.core.types.EntityPath<?>>;\n// QuerydslBindings allows definition of path specific bindings.\npublic class QuerydslBindings extends Object;\n// Factory to create QuerydslBindings using an EntityPathResolver.\npublic class QuerydslBindingsFactory extends Object implements ApplicationContextAware;\n// Annotation to customize the binding of HTTP request parameters to a Querydsl Predicate in Spring MVC handler methods.\n@Target({PARAMETER,TYPE}) @Retention(RUNTIME) public @interface QuerydslPredicate;\n// Builder assembling Predicate out of PropertyValues.\npublic class QuerydslPredicateBuilder extends Object;\n// SingleValueBinding creates a Predicate out of given Path and value.\n@FunctionalInterface public interface SingleValueBinding<T extends com.querydsl.core.types.Path<? extends S>,S>;\n", "des": "Base classes to implement CDI support for repositories."}
{"index": 2214, "repo": "spring-data-commons-3.1.2", "code": "package repository\n\n// Interface for generic CRUD operations on a repository for a specific type.\n@NoRepositoryBean public interface CrudRepository<T,ID> extends Repository<T,ID>;\n// Interface for generic CRUD operations on a repository for a specific type.\n@NoRepositoryBean public interface ListCrudRepository<T,ID> extends CrudRepository<T,ID>;\n// Repository fragment to provide methods to retrieve entities using the pagination and sorting abstraction.\n@NoRepositoryBean public interface ListPagingAndSortingRepository<T,ID> extends PagingAndSortingRepository<T,ID>;\n// Annotation to exclude repository interfaces from being picked up and thus in consequence getting an instance being created.\n@Retention(RUNTIME) @Target(TYPE) @Documented public @interface NoRepositoryBean;\n// Repository fragment to provide methods to retrieve entities using the pagination and sorting abstraction.\n@NoRepositoryBean public interface PagingAndSortingRepository<T,ID> extends Repository<T,ID>;\n// Central repository marker interface.\n@Indexed public interface Repository<T,ID>;\n// Annotation to demarcate interfaces a repository proxy shall be created for.\n@Indexed @Documented @Retention(RUNTIME) @Target(TYPE) @Inherited public @interface RepositoryDefinition;\n", "des": "Central interfaces for repository abstraction."}
{"index": 2215, "repo": "spring-data-commons-3.1.2", "code": "package cdi\n\n// Base class for Bean wrappers.\npublic abstract class CdiRepositoryBean<T> extends Object implements jakarta.enterprise.inject.spi.Bean<T>, jakarta.enterprise.inject.spi.PassivationCapable;\n// Interface containing the configurable options for the Spring Data repository subsystem using CDI.\npublic interface CdiRepositoryConfiguration;\n// Context for CDI repositories.\npublic class CdiRepositoryContext extends Object;\n// Base class for Extension implementations that create instances for Spring Data repositories.\npublic abstract class CdiRepositoryExtensionSupport extends Object implements jakarta.enterprise.inject.spi.Extension;\n// Annotation to mark repository interfaces to be instantiated eagerly in a CDI context.\n@Documented @Retention(RUNTIME) @Target({TYPE,ANNOTATION_TYPE}) @Inherited public @interface Eager;\n", "des": "Base classes to implement CDI support for repositories."}
{"index": 2216, "repo": "spring-data-commons-3.1.2", "code": "package config\n\n// Annotation based RepositoryConfigurationSource.\npublic class AnnotationRepositoryConfigurationSource extends RepositoryConfigurationSourceSupport;\n// AotContext specific to Spring Data Repository infrastructure.\npublic interface AotRepositoryContext extends AotContext;\n// Enumeration to define in which way repositories are bootstrapped.\npublic enum BootstrapMode extends Enum<BootstrapMode>;\n// Detects the custom implementation for a Repository instance.\npublic class CustomRepositoryImplementationDetector extends Object;\n// Placeholder class to be used in @Enable annotation's repositoryBaseClass attribute.\npublic final class DefaultRepositoryBaseClass extends Object;\n// Default implementation of RepositoryConfiguration.\npublic class DefaultRepositoryConfiguration<T extends RepositoryConfigurationSource> extends Object implements RepositoryConfiguration<T>;\n// Value object for a discovered Repository fragment interface.\npublic class FragmentMetadata extends Object;\n// Expresses configuration to be used to detect implementation classes for repositories and repository fragments.\npublic interface ImplementationDetectionConfiguration;\n// Configuration that's used to lookup an implementation type for a repository or fragment interface.\npublic interface ImplementationLookupConfiguration extends ImplementationDetectionConfiguration;\n// Builder to create a BeanDefinition for a NamedQueries instance using properties.\npublic class NamedQueriesBeanDefinitionBuilder extends Object;\n// BeanDefinitionParser to create BeanDefinitions of NamedQueries instances looking up a Properties file fom the given location.\npublic class NamedQueriesBeanDefinitionParser extends Object implements BeanDefinitionParser;\n// Factory been to create PersistentEntities from a MappingContext.\npublic class PersistentEntitiesFactoryBean extends Object implements FactoryBean<PersistentEntities>;\n// Factory bean to create PropertiesBasedNamedQueries.\npublic class PropertiesBasedNamedQueriesFactoryBean extends PropertiesLoaderSupport implements FactoryBean<PropertiesBasedNamedQueries>, InitializingBean;\n// Base class to implement repository namespaces.\npublic class RepositoryBeanDefinitionParser extends Object implements BeanDefinitionParser;\n// Base class to implement ImportBeanDefinitionRegistrars to enable repository\npublic abstract class RepositoryBeanDefinitionRegistrarSupport extends Object implements ImportBeanDefinitionRegistrar, ResourceLoaderAware, EnvironmentAware;\n// Configuration information for a single repository instance.\npublic interface RepositoryConfiguration<T extends RepositoryConfigurationSource>;\n// Delegate for configuration integration to reuse the general way of detecting repositories.\npublic class RepositoryConfigurationDelegate extends Object;\n// SPI to implement store specific extension to the repository bean definition registration process.\npublic interface RepositoryConfigurationExtension;\n", "des": "Support classes for repository namespace and JavaConfig integration."}
{"index": 2217, "repo": "spring-data-commons-3.1.2", "code": "package core\n\n// Meta-information about the CRUD methods of a repository.\npublic interface CrudMethods;\n// Extension of EntityMetadata to add functionality to query information of entity instances.\npublic interface EntityInformation<T,ID> extends EntityMetadata<T>;\n// Metadata for entity types.\npublic interface EntityMetadata<T>;\n// Abstraction of a map of NamedQueries that can be looked up by their names.\npublic interface NamedQueries;\n// Exception thrown in the context of repository creation.\npublic class RepositoryCreationException extends InvalidDataAccessApiUsageException;\n// Additional repository specific information\npublic interface RepositoryInformation extends RepositoryMetadata;\n// Common base class for RepositoryInformation that delays resolution of RepositoryMetadata and the repository base to the latest possible time.\npublic abstract class RepositoryInformationSupport extends Object implements RepositoryInformation;\n// Metadata for repository interfaces.\npublic interface RepositoryMetadata;\n", "des": "Core abstractions for repository implementation."}
{"index": 2218, "repo": "spring-data-commons-3.1.2", "code": "package support\n\n// Base class for implementations of EntityInformation.\npublic abstract class AbstractEntityInformation<T,ID> extends Object implements EntityInformation<T,ID>;\n// Base class for RepositoryMetadata implementations.\npublic abstract class AbstractRepositoryMetadata extends Object implements RepositoryMetadata;\n// RepositoryMetadata implementation inspecting the given repository interface for a RepositoryDefinition annotation.\npublic class AnnotationRepositoryMetadata extends AbstractRepositoryMetadata;\n// Default implementation to discover CRUD methods based on the given RepositoryMetadata.\npublic class DefaultCrudMethods extends Object implements CrudMethods;\n// Default implementation of RepositoryMetadata.\npublic class DefaultRepositoryMetadata extends AbstractRepositoryMetadata;\n// Useful base class to implement custom EntityInformations and delegate execution of standard methods from EntityInformation to a special implementation.\npublic class DelegatingEntityInformation<T,ID> extends Object implements EntityInformation<T,ID>;\n// RepositoryProxyPostProcessor to register a MethodInterceptor to intercept CrudRepository.save(Object) and CrudRepository.delete(Object) methods and publish events potentially exposed via a method annotated with DomainEvents.\npublic class EventPublishingRepositoryProxyPostProcessor extends Object implements RepositoryProxyPostProcessor;\n// Exception thrown during repository creation or repository method invocation when invoking a repository method on a fragment without an implementation.\npublic class FragmentNotImplementedException extends RepositoryCreationException;\n// Exception thrown during repository creation when a the repository has custom methods that are not backed by a fragment or if no fragment could be found for a repository method invocation.\npublic class IncompleteRepositoryCompositionException extends RepositoryCreationException;\n// Interceptor enforcing required return value and method parameter constraints declared on repository query methods.\npublic class MethodInvocationValidator extends Object implements MethodInterceptor;\n// Strategy interface providing predicates to resolve a method called on a composite to its implementation method.\n@FunctionalInterface public interface MethodLookup;\n// Value object representing an invoked Method.\npublic static final class MethodLookup.InvokedMethod extends Object;\n// A method predicate to be applied on the MethodLookup.InvokedMethod and method candidate.\n@FunctionalInterface public static interface MethodLookup.MethodPredicate extends BiPredicate<MethodLookup.InvokedMethod,Method>;\n// RepositoryProxyPostProcessor to register a PersistenceExceptionTranslationInterceptor on the repository proxy.\npublic class PersistenceExceptionTranslationRepositoryProxyPostProcessor extends Object implements RepositoryProxyPostProcessor;\n", "des": "Base classes to implement repositories for various data stores."}
{"index": 2219, "repo": "spring-data-commons-3.1.2", "code": "package history\n\n// A repository which can access entities held in a variety of Revisions.\n@NoRepositoryBean public interface RevisionRepository<T,ID,N extends Number & Comparable<N>> extends Repository<T,ID>;\n", "des": "API for repositories using historiography."}
{"index": 2220, "repo": "spring-data-commons-3.1.2", "code": "package support\n\n// Information about a revision entity which is the class carrying revision information for an entity.\npublic interface RevisionEntityInformation;\n", "des": "Value objects to implement core repository interfaces for historiography."}
{"index": 2221, "repo": "spring-data-commons-3.1.2", "code": "package init\n\n// Base class for FactoryBeans creating ResourceReaderRepositoryPopulators.\npublic abstract class AbstractRepositoryPopulatorFactoryBean extends AbstractFactoryBean<ResourceReaderRepositoryPopulator> implements ApplicationListener<ContextRefreshedEvent>, ApplicationContextAware;\n// FactoryBean to set up a ResourceReaderRepositoryPopulator with a Jackson2ResourceReader.\npublic class Jackson2RepositoryPopulatorFactoryBean extends AbstractRepositoryPopulatorFactoryBean;\n// A ResourceReader using Jackson to read JSON into objects.\npublic class Jackson2ResourceReader extends Object implements ResourceReader;\n// ApplicationEvent being thrown after a RepositoryPopulator has finished populating the Repositories available in the ApplicationContext.\npublic class RepositoriesPopulatedEvent extends ApplicationEvent;\n// Interface for components that will populate the Spring Data repositories with objects.\npublic interface RepositoryPopulator;\n// \npublic interface ResourceReader;\n// \npublic static enum ResourceReader.Type extends Enum<ResourceReader.Type>;\n// A RepositoryPopulator using a ResourceReader to read objects from the configured Resources.\npublic class ResourceReaderRepositoryPopulator extends Object implements RepositoryPopulator, ApplicationEventPublisherAware;\n// FactoryBean to create a ResourceReaderRepositoryPopulator using an Unmarshaller.\npublic class UnmarshallerRepositoryPopulatorFactoryBean extends AbstractRepositoryPopulatorFactoryBean;\n// \npublic class UnmarshallingResourceReader extends Object implements ResourceReader;\n", "des": "Support for repository initialization using XML and JSON."}
{"index": 2222, "repo": "spring-data-commons-3.1.2", "code": "package query\n\n// Default implementation of Parameters.\npublic final class DefaultParameters extends Parameters<DefaultParameters,Parameter>;\n// An QueryMethodEvaluationContextProvider that assembles an EvaluationContext from a list of EvaluationContextExtension instances.\npublic class ExtensionAwareQueryMethodEvaluationContextProvider extends Object implements QueryMethodEvaluationContextProvider;\n// Fluent interface to define and run a query along with projection and sorting and.\npublic interface FluentQuery<T>;\n// Fetchable extension FluentQuery allowing to materialize results from the underlying query.\npublic static interface FluentQuery.FetchableFluentQuery<T> extends FluentQuery<T>;\n// Reactive extension FluentQuery allowing to materialize results from the underlying query.\npublic static interface FluentQuery.ReactiveFluentQuery<T> extends FluentQuery<T>;\n// Interface to allow execution of Query by Example Example instances.\npublic interface ListQueryByExampleExecutor<T> extends QueryByExampleExecutor<T>;\n// Annotation to bind method parameters to a query via a named parameter.\n@Target(PARAMETER) @Retention(RUNTIME) @Documented public @interface Param;\n// Class to abstract a single parameter of a query method.\npublic class Parameter extends Object;\n// Interface to access method parameters.\npublic interface ParameterAccessor extends Iterable<Object>;\n// Exception to be thrown when trying to access a Parameter with an invalid index inside a Parameters instance.\npublic class ParameterOutOfBoundsException extends RuntimeException;\n// Abstracts method parameters that have to be bound to query parameters or applied to the query independently.\npublic abstract class Parameters<S extends Parameters<S,T>,T extends Parameter> extends Object implements Streamable<T>;\n// ParameterAccessor implementation using a Parameters instance to find special parameters.\npublic class ParametersParameterAccessor extends Object implements ParameterAccessor;\n// Interface to allow execution of Query by Example Example instances.\npublic interface QueryByExampleExecutor<T>;\n// Exception to be thrown if a query cannot be created from a Method.\npublic final class QueryCreationException extends RepositoryCreationException;\n// Strategy interface for which way to lookup RepositoryQuerys.\npublic interface QueryLookupStrategy;\n// \npublic static enum QueryLookupStrategy.Key extends Enum<QueryLookupStrategy.Key>;\n// Abstraction of a method that is designated to execute a finder query.\npublic class QueryMethod extends Object;\n", "des": "Support classes to work with query methods."}
{"index": 2223, "repo": "spring-data-commons-3.1.2", "code": "package parser\n\n// Base class for query creators that create criteria based queries from a PartTree.\npublic abstract class AbstractQueryCreator<T,S> extends Object;\n// A single part of a method name that has to be transformed into a query part.\npublic class Part extends Object;\n// The various types of ignore case that are supported.\npublic static enum Part.IgnoreCaseType extends Enum<Part.IgnoreCaseType>;\n// The type of a method name part.\npublic static enum Part.Type extends Enum<Part.Type>;\n// Class to parse a String into a tree or PartTree.OrParts consisting of simple Part instances in turn.\npublic class PartTree extends Object implements Streamable<PartTree.OrPart>;\n// A part of the parsed source that results from splitting up the resource around Or keywords.\npublic static class PartTree.OrPart extends Object implements Streamable<Part>;\n", "des": "Support classes for parsing queries from method names."}
{"index": 2224, "repo": "spring-data-commons-3.1.2", "code": "package reactive\n\n// Interface for generic CRUD operations on a repository for a specific type.\n@NoRepositoryBean public interface ReactiveCrudRepository<T,ID> extends Repository<T,ID>;\n// Repository fragment to provide methods to retrieve entities using the sorting abstraction.\n@NoRepositoryBean public interface ReactiveSortingRepository<T,ID> extends Repository<T,ID>;\n// Interface for generic CRUD operations on a repository for a specific type.\n@NoRepositoryBean public interface RxJava3CrudRepository<T,ID> extends Repository<T,ID>;\n// Repository fragment to provide methods to retrieve entities using the sorting abstraction.\n@NoRepositoryBean public interface RxJava3SortingRepository<T,ID> extends Repository<T,ID>;\n", "des": "Support for reactive repositories."}
{"index": 2225, "repo": "spring-data-commons-3.1.2", "code": "package support\n\n// Default implementation of RepositoryInvokerFactory to inspect the requested repository type and create a matching RepositoryInvoker that suits the repository best.\npublic class DefaultRepositoryInvokerFactory extends Object implements RepositoryInvokerFactory;\n// Converter to convert arbitrary input into domain classes managed by Spring Data CrudRepositorys.\npublic class DomainClassConverter<T extends ConversionService & ConverterRegistry> extends Object implements ConditionalGenericConverter, ApplicationContextAware;\n// Exception to represent a failed attempt to convert a source value into a query method parameter.\npublic class QueryMethodParameterConversionException extends RuntimeException;\n// Wrapper class to access repository instances obtained from a ListableBeanFactory.\npublic class Repositories extends Object implements Iterable<Class<?>>;\n// Meta-information about the methods a repository exposes.\npublic interface RepositoryInvocationInformation;\n// API to invoke (CRUD) methods on Spring Data repository instances independently of the base interface they expose.\npublic interface RepositoryInvoker extends RepositoryInvocationInformation;\n// Interface for a factory to create RepositoryInvoker instances for repositories managing a particular domain type.\npublic interface RepositoryInvokerFactory;\n", "des": "Support classes for integration of the repository programming model with 3rd party frameworks."}
{"index": 2226, "repo": "spring-data-commons-3.1.2", "code": "package util\n\n// Utility class to work with classes.\npublic abstract class ClassUtils extends Object;\n// Converters to potentially wrap the execution of a repository method into a variety of wrapper types potentially being available on the classpath.\npublic abstract class QueryExecutionConverters extends Object;\n// \npublic static interface QueryExecutionConverters.ExecutionAdapter;\n// \npublic static interface QueryExecutionConverters.ThrowingSupplier;\n// \npublic static final class QueryExecutionConverters.WrapperType extends Object;\n// Conversion support for reactive wrapper types.\npublic abstract class ReactiveWrapperConverters extends Object;\n// \n@Deprecated(since=\"3.0\", forRemoval=true) public abstract class ReactiveWrappers extends Object;\n// \n@Deprecated(since=\"3.0\", forRemoval=true) public static enum ReactiveWrappers.ReactiveLibrary extends Enum<ReactiveWrappers.ReactiveLibrary>;\n// Simple constants holder.\npublic abstract class TxUtils extends Object;\n", "des": "Utility classes for repository implementations."}
{"index": 2227, "repo": "spring-data-commons-3.1.2", "code": "package spi\n\n// SPI to allow adding a set of properties and function definitions accessible via the root of an EvaluationContext provided by an ExtensionAwareQueryMethodEvaluationContextProvider.\npublic interface EvaluationContextExtension extends ExtensionIdAware;\n// Marker interface for Spring Data EvaluationContext extensions.\npublic interface ExtensionIdAware;\n// Value object to represent a function.\npublic class Function extends Object;\n// SPI to resolve a EvaluationContextExtension to make it accessible via the root of an EvaluationContext provided by a ExtensionAwareQueryMethodEvaluationContextProvider.\npublic interface ReactiveEvaluationContextExtension extends ExtensionIdAware;\n", "des": "Service provider interfaces to extend the query execution mechanism."}
{"index": 2228, "repo": "spring-data-commons-3.1.2", "code": "package support\n\n// Accessor for the ExampleMatcher to use in modules that support query by example (QBE) querying.\npublic class ExampleMatcherAccessor extends Object;\n// Strategy interface to determine whether a given entity is to be considered new.\npublic interface IsNewStrategy;\n// Support for query execution using Pageable.\npublic abstract class PageableExecutionUtils extends Object;\n// IsNewStrategy that invokes Persistable.isNew() on the given object.\npublic enum PersistableIsNewStrategy extends Enum<PersistableIsNewStrategy> implements IsNewStrategy;\n// An Iterator over multiple Windows obtained via a window function, that keeps track of the current ScrollPosition allowing scrolling across all result elements.\npublic class WindowIterator<T> extends Object implements Iterator<T>;\n// Builder API to construct a WindowIterator.\npublic static class WindowIterator.WindowIteratorBuilder<T> extends Object;\n", "des": "Core support classes."}
{"index": 2229, "repo": "spring-data-commons-3.1.2", "code": "package transaction\n\n// \n@Deprecated public class ChainedTransactionManager extends Object implements PlatformTransactionManager;\n", "des": "Contains advanced support for transactions, e.g. a best-effort delegating transaction manager."}
{"index": 2230, "repo": "spring-data-commons-3.1.2", "code": "package type\n\n// \n@Deprecated public interface MethodsMetadata extends ClassMetadata;\n", "des": "Core support package for type introspection."}
{"index": 2231, "repo": "spring-data-commons-3.1.2", "code": "package classreading\n\n// \n@Deprecated public interface MethodsMetadataReader extends MetadataReader;\n// \n@Deprecated public class MethodsMetadataReaderFactory extends SimpleMetadataReaderFactory;\n", "des": "Support classes for reading annotation and class-level metadata."}
{"index": 2232, "repo": "spring-data-commons-3.1.2", "code": "package util\n\n// Scanner to find types with annotations on the classpath.\npublic class AnnotatedTypeScanner extends Object implements ResourceLoaderAware, EnvironmentAware;\n// A ReflectionUtils.FieldCallback that will inspect each field for a given annotation.\npublic class AnnotationDetectionFieldCallback extends Object implements ReflectionUtils.FieldCallback;\n// ReflectionUtils.MethodCallback to find annotations of a given type.\npublic class AnnotationDetectionMethodCallback<A extends Annotation> extends Object implements ReflectionUtils.MethodCallback;\n// Simple helper to allow lenient lookup of beans of a given type from a ListableBeanFactory.\npublic abstract class BeanLookup extends Object;\n// \npublic interface CastUtils;\n// \n@Deprecated(since=\"3.0\", forRemoval=true) public class ClassTypeInformation<S> extends Object;\n// A CloseableIterator serves as a bridging data structure for the underlying data store specific results that can be wrapped in a Java 8 java.util.stream.Stream.\npublic interface CloseableIterator<T> extends Iterator<T>, Closeable;\n// An SPI to register custom collection types.\npublic interface CustomCollectionRegistrar;\n// Central API to expose information about custom collections present for Spring Data.\npublic class CustomCollections extends Object;\n// Custom extension of BeanWrapperImpl that falls back to direct field access in case the object or type being wrapped does not use accessor methods.\npublic class DirectFieldAccessFallbackBeanWrapper extends BeanWrapperImpl;\n// Reflection utility methods specific to Kotlin reflection.\npublic final class KotlinReflectionUtils extends Object;\n// Simple value type to delay the creation of an object using a Supplier returning the produced object for subsequent lookups.\npublic class Lazy<T> extends Object implements Supplier<T>;\n// API to record method invocations via method references on a proxy.\npublic class MethodInvocationRecorder extends Object;\n// \npublic static interface MethodInvocationRecorder.PropertyNameDetectionStrategy;\n// \npublic static class MethodInvocationRecorder.Recorded<T> extends Object;\n// \npublic static interface MethodInvocationRecorder.Recorded.ToCollectionConverter<T,S> extends Function<T,Collection<S>>;\n// \npublic static interface MethodInvocationRecorder.Recorded.ToMapConverter<T,S> extends Function<T,Map<?,S>>;\n", "des": "Core utility APIs such as a type information framework to resolve generic types."}
{"index": 2233, "repo": "spring-data-commons-3.1.2", "code": "package web\n\n// Extension of PageableHandlerMethodArgumentResolver that also supports enhancing URIs using Spring HATEOAS support.\npublic class HateoasPageableHandlerMethodArgumentResolver extends PageableHandlerMethodArgumentResolver implements org.springframework.hateoas.server.mvc.UriComponentsContributor;\n// Extension of SortHandlerMethodArgumentResolver that also supports enhancing URIs using Spring HATEOAS support.\npublic class HateoasSortHandlerMethodArgumentResolver extends SortHandlerMethodArgumentResolver implements org.springframework.hateoas.server.mvc.UriComponentsContributor;\n// Annotation to explicitly declare a JSON Path expression on a projection interface.\n@Documented @Retention(RUNTIME) @Target({METHOD,ANNOTATION_TYPE}) public @interface JsonPath;\n// MethodInterceptorFactory to create a MethodInterceptor that will\npublic class JsonProjectingMethodInterceptorFactory extends Object implements MethodInterceptorFactory;\n// Argument resolver to extract a Pageable object from a NativeWebRequest for a particular MethodParameter.\npublic interface PageableArgumentResolver extends HandlerMethodArgumentResolver;\n// Annotation to set defaults when injecting a Pageable into a controller method.\n@Documented @Retention(RUNTIME) @Target(PARAMETER) public @interface PageableDefault;\n// Extracts paging information from web requests and thus allows injecting Pageable instances into controller methods.\npublic class PageableHandlerMethodArgumentResolver extends PageableHandlerMethodArgumentResolverSupport implements PageableArgumentResolver;\n// Base class providing methods for handler method argument resolvers to create paging information from web requests and thus allows injecting Pageable instances into controller methods.\npublic abstract class PageableHandlerMethodArgumentResolverSupport extends Object;\n// RepresentationModelAssembler to easily convert Page instances into PagedModel.\npublic class PagedResourcesAssembler<T> extends Object implements org.springframework.hateoas.server.RepresentationModelAssembler<Page<T>,org.springframework.hateoas.PagedModel<org.springframework.hateoas.EntityModel<T>>>;\n// HandlerMethodArgumentResolver to allow injection of PagedResourcesAssembler into Spring MVC controller methods.\npublic class PagedResourcesAssemblerArgumentResolver extends Object implements HandlerMethodArgumentResolver;\n", "des": "Integration with Spring MVC."}
{"index": 2234, "repo": "spring-data-commons-3.1.2", "code": "package config\n\n// Annotation to automatically register the following beans for usage with Spring MVC.\n@Retention(RUNTIME) @Target({TYPE,ANNOTATION_TYPE}) @Inherited @Import({SpringDataWebConfigurationImportSelector.class,QuerydslActivator.class}) public @interface EnableSpringDataWebSupport;\n// Import selector to register QuerydslWebConfiguration as configuration class if Querydsl is on the classpath.\npublic static class EnableSpringDataWebSupport.QuerydslActivator extends Object implements ImportSelector;\n// Import selector to import the appropriate configuration class depending on whether Spring HATEOAS is present on the classpath.\npublic static class EnableSpringDataWebSupport.SpringDataWebConfigurationImportSelector extends Object implements ImportSelector, ResourceLoaderAware;\n// JavaConfig class to register PagedResourcesAssembler, PagedResourcesAssemblerArgumentResolver, SlicedResourcesAssembler and SlicedResourcesAssemblerArgumentResolver.\n@Configuration(proxyBeanMethods=false) public class HateoasAwareSpringDataWebConfiguration extends SpringDataWebConfiguration;\n// Callback interface that can be implemented by beans wishing to customize the PageableHandlerMethodArgumentResolver configuration.\n@FunctionalInterface public interface PageableHandlerMethodArgumentResolverCustomizer;\n// Configuration class to register a BeanPostProcessor to augment RequestMappingHandlerAdapter with a ProxyingHandlerMethodArgumentResolver.\n@Configuration(proxyBeanMethods=false) public class ProjectingArgumentResolverRegistrar extends Object;\n// Querydsl-specific web configuration for Spring Data.\n@Configuration(proxyBeanMethods=false) public class QuerydslWebConfiguration extends Object implements WebMvcConfigurer;\n// Querydsl-specific web configuration for Spring Data.\n@Configuration(proxyBeanMethods=false) public class ReactiveQuerydslWebConfiguration extends Object implements WebFluxConfigurer;\n// Callback interface that can be implemented by beans wishing to customize the SortHandlerMethodArgumentResolver configuration.\npublic interface SortHandlerMethodArgumentResolverCustomizer;\n// JavaConfig class to export Jackson specific configuration.\npublic class SpringDataJacksonConfiguration extends Object implements SpringDataJacksonModules;\n// Marker interface to describe configuration classes that ship Jackson modules that are supposed to be added to the Jackson ObjectMapper configured for EnableSpringDataWebSupport.\npublic interface SpringDataJacksonModules;\n", "des": "Spring Data web configuration."}
{"index": 2235, "repo": "spring-data-commons-3.1.2", "code": "package querydsl\n\n// HandlerMethodArgumentResolver to allow injection of Predicate into Spring MVC controller methods.\npublic class QuerydslPredicateArgumentResolver extends QuerydslPredicateArgumentResolverSupport implements HandlerMethodArgumentResolver;\n// HandlerMethodArgumentResolver to allow injection of Predicate into Spring MVC controller methods.\npublic abstract class QuerydslPredicateArgumentResolverSupport extends Object;\n// HandlerMethodArgumentResolver to allow injection of Predicate into Spring WebFlux controller methods.\npublic class ReactiveQuerydslPredicateArgumentResolver extends QuerydslPredicateArgumentResolverSupport implements SyncHandlerMethodArgumentResolver;\n", "des": "Querydsl-specific web support."}
{"index": 2236, "repo": "spring-security-acl-6.1.2", "code": "package acls\n\n// Given a domain object instance passed as a method argument, ensures the principal has appropriate permission as indicated by the AclService.\npublic class AclEntryVoter extends org.springframework.security.access.vote.AbstractAclVoter;\n// Batch loads ACLs for collections of objects to allow optimised filtering.\npublic class AclPermissionCacheOptimizer extends Object implements org.springframework.security.access.PermissionCacheOptimizer;\n// Used by Spring Security's expression-based access control implementation to evaluate permissions for a particular object using the ACL module.\npublic class AclPermissionEvaluator extends Object implements org.springframework.security.access.PermissionEvaluator;\n", "des": "The Spring Security ACL package which implements instance-based security for domain objects."}
{"index": 2237, "repo": "spring-security-acl-6.1.2", "code": "package afterinvocation\n\n// Abstract AfterInvocationProvider which provides commonly-used ACL-related services.\npublic abstract class AbstractAclProvider extends Object implements org.springframework.security.access.AfterInvocationProvider;\n// Given a Collection of domain object instances returned from a secure object invocation, remove any Collection elements the principal does not have appropriate permission to access as defined by the AclService.\npublic class AclEntryAfterInvocationCollectionFilteringProvider extends AbstractAclProvider;\n// Given a domain object instance returned from a secure object invocation, ensures the principal has appropriate permission as defined by the AclService.\npublic class AclEntryAfterInvocationProvider extends AbstractAclProvider implements org.springframework.context.MessageSourceAware;\n", "des": "After-invocation providers for collection and array filtering."}
{"index": 2238, "repo": "spring-security-acl-6.1.2", "code": "package domain\n\n// Provides an abstract superclass for Permission implementations.\npublic abstract class AbstractPermission extends Object implements Permission;\n// An immutable default implementation of AccessControlEntry.\npublic class AccessControlEntryImpl extends Object implements AccessControlEntry, AuditableAccessControlEntry;\n// Strategy used by AclImpl to determine whether a principal is permitted to call adminstrative methods on the AclImpl.\npublic interface AclAuthorizationStrategy;\n// Default implementation of AclAuthorizationStrategy.\npublic class AclAuthorizationStrategyImpl extends Object implements AclAuthorizationStrategy;\n// Utility methods for displaying ACL information.\npublic abstract class AclFormattingUtils extends Object;\n// Base implementation of Acl.\npublic class AclImpl extends Object implements Acl, MutableAcl, AuditableAcl, OwnershipAcl;\n// Used by AclImpl to log audit events.\npublic interface AuditLogger;\n// A set of standard permissions.\npublic class BasePermission extends AbstractPermission;\n// A basic implementation of AuditLogger.\npublic class ConsoleAuditLogger extends Object implements AuditLogger;\n// Represents a Permission that is constructed at runtime from other permissions.\npublic class CumulativePermission extends AbstractPermission;\n// Default implementation of PermissionFactory.\npublic class DefaultPermissionFactory extends Object implements PermissionFactory;\n// \npublic class DefaultPermissionGrantingStrategy extends Object implements PermissionGrantingStrategy;\n// Represents a GrantedAuthority as a Sid.\npublic class GrantedAuthoritySid extends Object implements Sid;\n// Thrown if an ACL identity could not be extracted from an object.\npublic class IdentityUnavailableException extends RuntimeException;\n// Simple implementation of ObjectIdentity.\npublic class ObjectIdentityImpl extends Object implements ObjectIdentity;\n// Basic implementation of ObjectIdentityRetrievalStrategy and ObjectIdentityGenerator that uses the constructors of ObjectIdentityImpl to create the ObjectIdentity.\npublic class ObjectIdentityRetrievalStrategyImpl extends Object implements ObjectIdentityRetrievalStrategy, ObjectIdentityGenerator;\n// Provides a simple mechanism to retrieve Permission instances from integer masks.\npublic interface PermissionFactory;\n// Represents an Authentication.getPrincipal() as a Sid.\npublic class PrincipalSid extends Object implements Sid;\n// Basic implementation of SidRetrievalStrategy that creates a Sid for the principal, as well as every granted authority the principal holds.\npublic class SidRetrievalStrategyImpl extends Object implements SidRetrievalStrategy;\n// Simple implementation of AclCache that delegates to Cache implementation.\npublic class SpringCacheBasedAclCache extends Object implements AclCache;\n", "des": "Basic implementation of access control lists (ACLs) interfaces."}
{"index": 2239, "repo": "spring-security-acl-6.1.2", "code": "package jdbc\n\n// Performs lookups in a manner that is compatible with ANSI SQL.\npublic class BasicLookupStrategy extends Object implements LookupStrategy;\n// Simple JDBC-based implementation of AclService.\npublic class JdbcAclService extends Object implements AclService;\n// Provides a base JDBC implementation of MutableAclService.\npublic class JdbcMutableAclService extends JdbcAclService implements MutableAclService;\n// Performs lookups for AclService.\npublic interface LookupStrategy;\n", "des": "JDBC-based persistence of ACL information"}
{"index": 2240, "repo": "spring-security-acl-6.1.2", "code": "package model\n\n// Represents an individual permission assignment within an Acl.\npublic interface AccessControlEntry extends Serializable;\n// Represents an access control list (ACL) for a domain object.\npublic interface Acl extends Serializable;\n// A caching layer for JdbcAclService.\npublic interface AclCache;\n// Abstract base class for Acl data operations.\npublic abstract class AclDataAccessException extends RuntimeException;\n// Provides retrieval of Acl instances.\npublic interface AclService;\n// Thrown if an Acl entry already exists for the object.\npublic class AlreadyExistsException extends AclDataAccessException;\n// Represents an ACE that provides auditing information.\npublic interface AuditableAccessControlEntry extends AccessControlEntry;\n// A mutable ACL that provides audit capabilities.\npublic interface AuditableAcl extends MutableAcl;\n// Thrown if an Acl cannot be deleted because children Acls exist.\npublic class ChildrenExistException extends AclDataAccessException;\n// A mutable Acl.\npublic interface MutableAcl extends Acl;\n// Provides support for creating and storing Acl instances.\npublic interface MutableAclService extends AclService;\n// Thrown if an ACL-related object cannot be found.\npublic class NotFoundException extends AclDataAccessException;\n// Represents the identity of an individual domain object instance.\npublic interface ObjectIdentity extends Serializable;\n// Strategy which creates an ObjectIdentity from an object identifier (such as a primary key) and type information.\npublic interface ObjectIdentityGenerator;\n// Strategy interface that provides the ability to determine which ObjectIdentity will be returned for a particular domain object\npublic interface ObjectIdentityRetrievalStrategy;\n// A mutable ACL that provides ownership capabilities.\npublic interface OwnershipAcl extends MutableAcl;\n// Represents a permission granted to a Sid for a given domain object.\npublic interface Permission extends Serializable;\n// Allow customization of the logic for determining whether a permission or permissions are granted to a particular sid or sids by an Acl.\npublic interface PermissionGrantingStrategy;\n// A security identity recognised by the ACL system.\npublic interface Sid extends Serializable;\n// Strategy interface that provides an ability to determine the Sid instances applicable for an Authentication.\npublic interface SidRetrievalStrategy;\n// Thrown if an Acl cannot perform an operation because it only loaded a subset of Sids and the caller has requested details for an unloaded Sid .\npublic class UnloadedSidException extends AclDataAccessException;\n", "des": "Interfaces and shared classes to manage access control lists (ACLs) for domain object instances."}
{"index": 2241, "repo": "spring-data-keyvalue-3.1.2", "code": "package annotation\n\n// Marker interface for methods with Persistent annotations indicating the presence of a dedicated keyspace the entity should reside in.\n@Documented @Retention(RUNTIME) @Target({METHOD,TYPE}) public @interface KeySpace;\n", "des": "Key-Value annotations for declarative keyspace configuration."}
{"index": 2242, "repo": "spring-data-keyvalue-3.1.2", "code": "package core\n\n// Base implementation of KeyValueAdapter holds QueryEngine to delegate find and count execution to.\npublic abstract class AbstractKeyValueAdapter extends Object implements KeyValueAdapter;\n// Resolves the criteria object from given KeyValueQuery.\npublic interface CriteriaAccessor<T>;\n// Forwards CloseableIterator invocations to the configured Iterator delegate.\npublic class ForwardingCloseableIterator<T> extends Object implements CloseableIterator<T>;\n// API for components generating identifiers.\npublic interface IdentifierGenerator;\n// Converter capable of transforming a given Iterable into a collection type.\npublic final class IterableConverter extends Object;\n// KeyValueAdapter unifies access and shields the underlying key/value specific implementation.\npublic interface KeyValueAdapter extends DisposableBean;\n// Generic callback interface for code that operates on a KeyValueAdapter.\npublic interface KeyValueCallback<T>;\n// Interface that specifies a basic set of key/value operations.\npublic interface KeyValueOperations extends DisposableBean;\n// Simple PersistenceExceptionTranslator implementation for key/value stores that converts the given runtime exception to an appropriate exception from the org.springframework.dao hierarchy.\npublic class KeyValuePersistenceExceptionTranslator extends Object implements PersistenceExceptionTranslator;\n// Basic implementation of KeyValueOperations.\npublic class KeyValueTemplate extends Object implements KeyValueOperations, ApplicationEventPublisherAware;\n// Base implementation for accessing and executing KeyValueQuery against a KeyValueAdapter.\npublic abstract class QueryEngine<ADAPTER extends KeyValueAdapter,CRITERIA,SORT> extends Object;\n// Resolves the Sort object from given KeyValueQuery and potentially converts it into a store specific representation that can be used by the QueryEngine implementation.\npublic interface SortAccessor<T>;\n// SpelCriteria allows to pass on a SpelExpression and EvaluationContext to the actual query processor.\npublic class SpelCriteria extends Object;\n// Comparator implementation using SpelExpression.\npublic class SpelPropertyComparator<T> extends Object implements Comparator<T>;\n// SortAccessor implementation capable of creating SpelPropertyComparator.\npublic class SpelSortAccessor extends Object implements SortAccessor<Comparator<?>>;\n// Normal superclass when we can't distinguish anything more specific than \"something went wrong with the underlying resource\".\npublic class UncategorizedKeyValueException extends UncategorizedDataAccessException;\n", "des": "Core key/value implementation."}
{"index": 2243, "repo": "spring-data-keyvalue-3.1.2", "code": "package event\n\n// KeyValueEvent gets published for operations executed by eg.\npublic class KeyValueEvent<T> extends ApplicationEvent;\n// KeyValueEvent after removing an object by with a given key.\npublic static class KeyValueEvent.AfterDeleteEvent<T> extends KeyValueEvent<T>;\n// KeyValueEvent after removing all elements in a given keyspace.\npublic static class KeyValueEvent.AfterDropKeySpaceEvent<T> extends KeyValueEvent<T>;\n// KeyValueEvent after loading an object by its key.\npublic static class KeyValueEvent.AfterGetEvent<T> extends KeyValueEvent<T>;\n// KeyValueEvent after inserting an object by with a given key.\npublic static class KeyValueEvent.AfterInsertEvent<T> extends KeyValueEvent<T>;\n// KeyValueEvent after updating an object by with a given key.\npublic static class KeyValueEvent.AfterUpdateEvent<T> extends KeyValueEvent<T>;\n// KeyValueEvent before removing an object by with a given key.\npublic static class KeyValueEvent.BeforeDeleteEvent<T> extends KeyValueEvent<T>;\n// KeyValueEvent before removing all elements in a given keyspace.\npublic static class KeyValueEvent.BeforeDropKeySpaceEvent<T> extends KeyValueEvent<T>;\n// KeyValueEvent raised before loading an object by its key.\npublic static class KeyValueEvent.BeforeGetEvent<T> extends KeyValueEvent<T>;\n// KeyValueEvent before inserting an object by with a given key.\npublic static class KeyValueEvent.BeforeInsertEvent<T> extends KeyValueEvent<T>;\n// KeyValueEvent before updating an object by with a given key.\npublic static class KeyValueEvent.BeforeUpdateEvent<T> extends KeyValueEvent<T>;\n", "des": "Support classes for key-value events, like standard persistence lifecycle events."}
{"index": 2244, "repo": "spring-data-keyvalue-3.1.2", "code": "package mapping\n\n// AnnotationBasedKeySpaceResolver looks up Persistent and checks for presence of either meta or direct usage of KeySpace.\npublic enum AnnotationBasedKeySpaceResolver extends Enum<AnnotationBasedKeySpaceResolver> implements KeySpaceResolver;\n// KeyValuePersistentEntity implementation that adds specific meta-data such as the keySpace.\npublic class BasicKeyValuePersistentEntity<T,P extends KeyValuePersistentProperty<P>> extends BasicPersistentEntity<T,P> implements KeyValuePersistentEntity<T,P>;\n// Most trivial implementation of KeySpaceResolver returning the Class.getName().\npublic enum ClassNameKeySpaceResolver extends Enum<ClassNameKeySpaceResolver> implements KeySpaceResolver;\n// KeySpaceResolver determines the keyspace a given type is assigned to.\npublic interface KeySpaceResolver;\n// \npublic interface KeyValuePersistentEntity<T,P extends KeyValuePersistentProperty<P>> extends MutablePersistentEntity<T,P>;\n// Most trivial implementation of PersistentProperty.\npublic class KeyValuePersistentProperty<P extends KeyValuePersistentProperty<P>> extends AnnotationBasedPersistentProperty<P>;\n// KeySpaceResolver prefixing the keyspace with a static prefix after determining the keyspace from a delegate KeySpaceResolver.\npublic class PrefixKeyspaceResolver extends Object implements KeySpaceResolver;\n", "des": "Infrastructure for the Key-Value mapping subsystem and keyspace resolution."}
{"index": 2245, "repo": "spring-data-keyvalue-3.1.2", "code": "package context\n\n// Default implementation of a MappingContext using KeyValuePersistentEntity and KeyValuePersistentProperty as primary abstractions.\npublic class KeyValueMappingContext<E extends KeyValuePersistentEntity<?,P>,P extends KeyValuePersistentProperty<P>> extends AbstractMappingContext<E,P>;\n", "des": "Infrastructure for the Key-Value mapping context."}
{"index": 2246, "repo": "spring-data-keyvalue-3.1.2", "code": "package query\n\n// \npublic class KeyValueQuery<T> extends Object;\n", "des": "Key/value specific query and abstractions."}
{"index": 2247, "repo": "spring-data-keyvalue-3.1.2", "code": "package repository\n\n// \npublic interface KeyValueRepository<T,ID> extends ListCrudRepository<T,ID>, ListPagingAndSortingRepository<T,ID>;\n", "des": "Key/value specific repository implementation."}
{"index": 2248, "repo": "spring-data-keyvalue-3.1.2", "code": "package config\n\n// RepositoryConfigurationExtension for KeyValueRepository.\npublic abstract class KeyValueRepositoryConfigurationExtension extends RepositoryConfigurationExtensionSupport;\n// Annotation to customize the query creator type to be used for a specific store.\n@Documented @Retention(RUNTIME) @Target(ANNOTATION_TYPE) public @interface QueryCreatorType;\n", "des": "Support infrastructure for the configuration of key/value specific repositories."}
{"index": 2249, "repo": "spring-data-keyvalue-3.1.2", "code": "package query\n\n// KeyValuePartTreeQuery implementation deriving queries from PartTree using a predefined AbstractQueryCreator that caches the once created query.\npublic class CachingKeyValuePartTreeQuery extends KeyValuePartTreeQuery;\n// RepositoryQuery implementation deriving queries from PartTree using a predefined AbstractQueryCreator.\npublic class KeyValuePartTreeQuery extends Object implements RepositoryQuery;\n// Factory class for obtaining AbstractQueryCreator instances for a given PartTree and ParameterAccessor.\npublic static interface KeyValuePartTreeQuery.QueryCreatorFactory<T extends AbstractQueryCreator<?,?>>;\n// AbstractQueryCreator to create SpelExpression based KeyValueQuerys.\npublic class SpelQueryCreator extends AbstractQueryCreator<KeyValueQuery<SpelExpression>,String>;\n", "des": "Query derivation mechanism for key/value specific repositories providing a generic SpEL based implementation."}
{"index": 2250, "repo": "spring-data-keyvalue-3.1.2", "code": "package support\n\n// RepositoryFactorySupport specific of handing KeyValueRepository.\npublic class KeyValueRepositoryFactory extends RepositoryFactorySupport;\n// FactoryBean to create KeyValueRepository.\npublic class KeyValueRepositoryFactoryBean<T extends Repository<S,ID>,S,ID> extends RepositoryFactoryBeanSupport<T,S,ID>;\n// QuerydslPredicateExecutor capable of applying Predicates using CollQuery.\npublic class QuerydslKeyValuePredicateExecutor<T> extends Object implements ListQuerydslPredicateExecutor<T>;\n// \n@Deprecated public class QuerydslKeyValueRepository<T,ID> extends SimpleKeyValueRepository<T,ID> implements QuerydslPredicateExecutor<T>;\n// Simple KeyValueRepository implementation.\npublic class SimpleKeyValueRepository<T,ID> extends Object implements KeyValueRepository<T,ID>;\n", "des": "Support infrastructure for query derivation of key/value specific repositories."}
{"index": 2251, "repo": "spring-data-keyvalue-3.1.2", "code": "package map\n\n// KeyValueAdapter implementation for Map.\npublic class MapKeyValueAdapter extends AbstractKeyValueAdapter;\n", "des": "Repository implementation backed by generic Map instances."}
{"index": 2252, "repo": "spring-data-keyvalue-3.1.2", "code": "package config\n\n// Annotation to activate Map repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(MapRepositoriesRegistrar.class) @QueryCreatorType(value=SpelQueryCreator.class, repositoryQueryType=CachingKeyValuePartTreeQuery.class) public @interface EnableMapRepositories;\n// Map specific RepositoryBeanDefinitionRegistrarSupport implementation.\npublic class MapRepositoriesRegistrar extends RepositoryBeanDefinitionRegistrarSupport;\n// \npublic class MapRepositoryConfigurationExtension extends KeyValueRepositoryConfigurationExtension;\n", "des": "Support infrastructure for the configuration of Map repositories."}
{"index": 2253, "repo": "spring-batch-test-5.0.2", "code": "package test\n\n// \n@Deprecated(since=\"5.0\", forRemoval=true) public abstract class AssertFile extends Object;\n// \n@Deprecated(since=\"5.0\", forRemoval=true) public class DataSourceInitializer extends Object implements org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n// Convenience class for accessing ExecutionContext values from job and step executions.\npublic class ExecutionContextTestUtils extends Object;\n// Utility class for testing batch jobs.\npublic class JobLauncherTestUtils extends Object;\n// Convenience class for creating and removing JobExecution instances from a database.\npublic class JobRepositoryTestUtils extends Object;\n// A TestExecutionListener that sets up job-scope context for dependency injection into unit tests.\npublic class JobScopeTestExecutionListener extends Object implements org.springframework.test.context.TestExecutionListener;\n// Utility class for creating and manipulating JobScope in unit tests.\npublic class JobScopeTestUtils extends Object;\n// Convenience methods for creating test instances of JobExecution, JobInstance and StepExecution.\npublic class MetaDataInstanceFactory extends Object;\n// Utility class for executing steps outside of a Job.\npublic class StepRunner extends Object;\n// A TestExecutionListener that sets up step-scope context for dependency injection into unit tests.\npublic class StepScopeTestExecutionListener extends Object implements org.springframework.test.context.TestExecutionListener;\n// Utility class for creating and manipulating StepScope in unit tests.\npublic class StepScopeTestUtils extends Object;\n", "des": "Utility classes for batch job/step testing."}
{"index": 2254, "repo": "spring-batch-test-5.0.2", "code": "package context\n\n// BeanPostProcessor implementation that injects a job bean into JobLauncherTestUtils if there is a unique job bean.\npublic class BatchTestContextBeanPostProcessor extends Object implements org.springframework.beans.factory.config.BeanPostProcessor;\n// ContextCustomizer implementation that adds batch test utility classes (JobLauncherTestUtils and JobRepositoryTestUtils) as beans in the test context.\npublic class BatchTestContextCustomizer extends Object implements org.springframework.test.context.ContextCustomizer;\n// Factory for BatchTestContextCustomizer.\npublic class BatchTestContextCustomizerFactory extends Object implements org.springframework.test.context.ContextCustomizerFactory;\n// Annotation that can be specified on a test class that runs Spring Batch based tests.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @TestExecutionListeners(listeners={StepScopeTestExecutionListener.class,JobScopeTestExecutionListener.class}, mergeMode=MERGE_WITH_DEFAULTS) @ExtendWith(org.springframework.test.context.junit.jupiter.SpringExtension.class) public @interface SpringBatchTest;\n", "des": "APIs for the configuration of Spring Batch test support."}
{"index": 2255, "repo": "spring-vault-core-3.0.4", "code": "package vault\n\n// The Spring Vault specific NestedRuntimeException implementation.\npublic class VaultException extends NestedRuntimeException;\n", "des": "Spring support for Hashicorp Vault."}
{"index": 2256, "repo": "spring-vault-core-3.0.4", "code": "package annotation\n\n// Annotation providing a convenient and declarative mechanism for adding a VaultPropertySource to Spring's Environment.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Repeatable(VaultPropertySources.class) @Import(org.springframework.vault.annotation.VaultPropertySourceRegistrar.class) public @interface VaultPropertySource;\n// \npublic static enum VaultPropertySource.Renewal extends Enum<VaultPropertySource.Renewal>;\n// Container annotation that aggregates several VaultPropertySource annotations.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(org.springframework.vault.annotation.VaultPropertySourceRegistrar.class) public @interface VaultPropertySources;\n", "des": "Annotation support for the Spring Vault."}
{"index": 2257, "repo": "spring-vault-core-3.0.4", "code": "package authentication\n\n// \n@Deprecated(since=\"2.2\", forRemoval=true) public class AppIdAuthentication extends Object implements ClientAuthentication, AuthenticationStepsFactory;\n// \n@Deprecated(since=\"2.2\", forRemoval=true) public class AppIdAuthenticationOptions extends Object;\n// Builder for AppIdAuthenticationOptions.\npublic static class AppIdAuthenticationOptions.AppIdAuthenticationOptionsBuilder extends Object;\n// \n@Deprecated(since=\"2.2\", forRemoval=true) @FunctionalInterface public interface AppIdUserIdMechanism;\n// AppRole implementation of ClientAuthentication.\npublic class AppRoleAuthentication extends Object implements ClientAuthentication, AuthenticationStepsFactory;\n// Authentication options for AppRoleAuthentication.\npublic class AppRoleAuthenticationOptions extends Object;\n// Builder for AppRoleAuthenticationOptions.\npublic static class AppRoleAuthenticationOptions.AppRoleAuthenticationOptionsBuilder extends Object;\n// RoleId type encapsulating how the roleId is actually obtained.\npublic static interface AppRoleAuthenticationOptions.RoleId;\n// SecretId type encapsulating how the secretId is actually obtained.\npublic static interface AppRoleAuthenticationOptions.SecretId;\n// Publisher for AuthenticationEvents.\npublic abstract class AuthenticationEventPublisher extends Object;\n// Authentication DSL allowing flow composition to create a VaultToken.\npublic class AuthenticationSteps extends Object;\n// Value object representing a HTTP request.\npublic static class AuthenticationSteps.HttpRequest<T> extends Object;\n// Builder for AuthenticationSteps.HttpRequest.\npublic static class AuthenticationSteps.HttpRequestBuilder extends Object;\n// Intermediate authentication step with authentication flow operators represented as node.\npublic static class AuthenticationSteps.Node<T> extends Object;\n// A tuple of two things.\npublic static class AuthenticationSteps.Pair<L,R> extends Object;\n// Synchronous executor for AuthenticationSteps using RestOperations to login using authentication flows.\npublic class AuthenticationStepsExecutor extends Object implements ClientAuthentication;\n// Factory interface for components that create AuthenticationSteps.\n@FunctionalInterface public interface AuthenticationStepsFactory;\n// VaultTokenSupplier using AuthenticationSteps to create an authentication flow emitting VaultToken.\npublic class AuthenticationStepsOperator extends Object implements VaultTokenSupplier;\n// AWS-EC2 login implementation.\npublic class AwsEc2Authentication extends Object implements ClientAuthentication, AuthenticationStepsFactory;\n// Authentication options for AwsEc2Authentication.\npublic class AwsEc2AuthenticationOptions extends Object;\n", "des": "Support for authentication and session management."}
{"index": 2258, "repo": "spring-vault-core-3.0.4", "code": "package event\n\n// Event published after logging into Vault.\npublic class AfterLoginEvent extends AuthenticationEvent;\n// Event published after renewing a login token.\npublic class AfterLoginTokenRenewedEvent extends AuthenticationEvent;\n// Event published after revoking a login token.\npublic class AfterLoginTokenRevocationEvent extends AuthenticationEvent;\n// Generic event class for authentication error events.\npublic class AuthenticationErrorEvent extends ApplicationEvent;\n// Listener for Vault exceptional AuthenticationEvents.\n@FunctionalInterface public interface AuthenticationErrorListener;\n// Abstract base class for authentication events.\npublic abstract class AuthenticationEvent extends ApplicationEvent;\n// Listener for Vault AuthenticationEvents.\n@FunctionalInterface public interface AuthenticationListener;\n// Event published before renewing a login token.\npublic class BeforeLoginTokenRenewedEvent extends AuthenticationEvent;\n// Event published before revoking a login token.\npublic class BeforeLoginTokenRevocationEvent extends AuthenticationEvent;\n// Event published before renewing a login token.\npublic class LoginFailedEvent extends AuthenticationErrorEvent;\n// Event published when dropping an expired login token.\npublic class LoginTokenExpiredEvent extends AuthenticationEvent;\n// Generic event class for authentication error events.\npublic class LoginTokenRenewalFailedEvent extends AuthenticationErrorEvent;\n// Generic event class for authentication error events.\npublic class LoginTokenRevocationFailedEvent extends AuthenticationErrorEvent;\n", "des": "Support classes for authentication application events."}
{"index": 2259, "repo": "spring-vault-core-3.0.4", "code": "package client\n\n// Factory for ClientHttpConnector that supports ReactorClientHttpConnector and JettyClientHttpConnector.\npublic class ClientHttpConnectorFactory extends Object;\n// Utility methods to create ClientHttpRequestFactory using Apache Http Components.\npublic static class ClientHttpConnectorFactory.HttpComponents extends Object;\n// ClientHttpRequestFactory using the JDK's HttpClient.\npublic static class ClientHttpConnectorFactory.JdkHttpClient extends Object;\n// Utility methods to create ClientHttpRequestFactory using the Jetty Client.\npublic static class ClientHttpConnectorFactory.JettyClient extends Object;\n// ClientHttpConnector for Reactor Netty.\npublic static class ClientHttpConnectorFactory.ReactorNetty extends Object;\n// Factory for ClientHttpRequestFactory that supports Apache HTTP Components, OkHttp, Netty and the JDK HTTP client (in that order).\npublic class ClientHttpRequestFactoryFactory extends Object;\n// Utilities to create a ClientHttpRequestFactory for Apache Http Components.\npublic static class ClientHttpRequestFactoryFactory.HttpComponents extends Object;\n// Utilities to create a ClientHttpRequestFactory for the OkHttpClient.\npublic static class ClientHttpRequestFactoryFactory.OkHttp3 extends Object;\n// Vault Client factory to create WebClient configured to the needs of accessing Vault.\npublic class ReactiveVaultClients extends Object;\n// Component that provides reactively a VaultEndpoint.\n@FunctionalInterface public interface ReactiveVaultEndpointProvider;\n// Builder that can be used to configure and create a RestTemplate.\npublic class RestTemplateBuilder extends Object;\n// Callback interface that can be used to customize a RestTemplate.\n@FunctionalInterface public interface RestTemplateCustomizer;\n// Factory interface that produces a RestTemplate object.\n@FunctionalInterface public interface RestTemplateFactory;\n// Callback interface that can be used to customize the ClientHttpRequest sent from a RestTemplate.\n@FunctionalInterface public interface RestTemplateRequestCustomizer<T extends ClientHttpRequest>;\n// VaultEndpointProvider returning a static VaultEndpoint.\npublic class SimpleVaultEndpointProvider extends Object implements VaultEndpointProvider;\n// Vault Client factory to create RestTemplate configured to the needs of accessing Vault.\npublic class VaultClients extends Object;\n// \npublic static class VaultClients.PrefixAwareUriBuilderFactory extends DefaultUriBuilderFactory;\n// Value object that defines Vault connection coordinates.\npublic class VaultEndpoint extends Object implements Serializable;\n// Component that provides a VaultEndpoint.\n@FunctionalInterface public interface VaultEndpointProvider;\n", "des": "Spring Vault Client abstraction."}
{"index": 2260, "repo": "spring-vault-core-3.0.4", "code": "package config\n\n// Base class for Spring Vault configuration using JavaConfig for a reactive infrastructure.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractReactiveVaultConfiguration extends AbstractVaultConfiguration;\n// Base class for Spring Vault configuration using JavaConfig.\n@Configuration(proxyBeanMethods=false) public abstract class AbstractVaultConfiguration extends Object implements ApplicationContextAware;\n// Wrapper for ClientHttpRequestFactory to not expose the bean globally.\npublic static class AbstractVaultConfiguration.ClientFactoryWrapper extends Object implements InitializingBean, DisposableBean;\n// Wrapper to keep ThreadPoolTaskScheduler local to Spring Vault and to not expose the bean globally.\npublic static class AbstractVaultConfiguration.TaskSchedulerWrapper extends Object implements InitializingBean, DisposableBean;\n// Configuration using Spring's Environment to configure Spring Vault endpoint, SSL options and authentication options.\n@Configuration public class EnvironmentVaultConfiguration extends AbstractVaultConfiguration implements ApplicationContextAware;\n", "des": "Spring configuration for Vault."}
{"index": 2261, "repo": "spring-vault-core-3.0.4", "code": "package core\n\n// Interface that specifies a basic set of Vault operations executed on a reactive infrastructure, implemented by ReactiveVaultTemplate.\npublic interface ReactiveVaultOperations;\n// This class encapsulates main Vault interaction.\npublic class ReactiveVaultTemplate extends Object implements ReactiveVaultOperations;\n// A callback for executing arbitrary operations on RestOperations.\n@FunctionalInterface public interface RestOperationsCallback<T>;\n// An exception which is used in case that no secret is found from Vault server.\npublic class SecretNotFoundException extends VaultException;\n// Interface that specifies kv metadata related operations.\npublic interface VaultKeyValueMetadataOperations;\n// Interface that specifies a basic set of Vault operations using Vault's Key/Value secret backend.\npublic interface VaultKeyValueOperations extends VaultKeyValueOperationsSupport;\n// Interface that specifies a basic set of Vault operations using Vault's Key/Value secret backend.\npublic interface VaultKeyValueOperationsSupport;\n// Enumeration of supported Key/Value backend API versions.\npublic static enum VaultKeyValueOperationsSupport.KeyValueBackend extends Enum<VaultKeyValueOperationsSupport.KeyValueBackend>;\n// Interface that specifies a basic set of Vault operations, implemented by VaultTemplate.\npublic interface VaultOperations;\n// Interface that specifies PKI backend-related operations.\npublic interface VaultPkiOperations;\n// \npublic static enum VaultPkiOperations.Encoding extends Enum<VaultPkiOperations.Encoding>;\n// Default implementation of VaultPkiOperations.\npublic class VaultPkiTemplate extends Object implements VaultPkiOperations;\n// Interface that specifies a basic set of administrative Vault operations.\npublic interface VaultSysOperations;\n// Default implementation of VaultSysOperations.\npublic class VaultSysTemplate extends Object implements VaultSysOperations;\n// This class encapsulates main Vault interaction.\npublic class VaultTemplate extends Object implements InitializingBean, VaultOperations, DisposableBean;\n// Interface that specifies token-related operations.\npublic interface VaultTokenOperations;\n// Default implementation of VaultTokenOperations.\npublic class VaultTokenTemplate extends Object implements VaultTokenOperations;\n// Interface that specifies operations using the transform backend.\npublic interface VaultTransformOperations;\n// Default implementation of VaultTransformOperations.\npublic class VaultTransformTemplate extends Object implements VaultTransformOperations;\n// Interface that specifies operations using the transit backend.\npublic interface VaultTransitOperations;\n// Default implementation of VaultTransitOperations.\npublic class VaultTransitTemplate extends Object implements VaultTransitOperations;\n", "des": "Vault core support."}
{"index": 2262, "repo": "spring-vault-core-3.0.4", "code": "package env\n\n// PropertySource that requests renewable secrets from SecretLeaseContainer.\npublic class LeaseAwareVaultPropertySource extends EnumerablePropertySource<VaultOperations>;\n// PropertySource that reads keys and values from a VaultTemplate and path.\npublic class VaultPropertySource extends EnumerablePropertySource<VaultOperations>;\n// Exception throws when a VaultPropertySource could not load its properties.\npublic class VaultPropertySourceNotFoundException extends VaultException;\n", "des": "Spring Vault's environment abstraction consisting property source support."}
{"index": 2263, "repo": "spring-vault-core-3.0.4", "code": "package lease\n\n// Version-specific endpoint implementations that use either legacy or sys/leases endpoints.\npublic enum LeaseEndpoints extends Enum<LeaseEndpoints>;\n// Event-based container to request secrets from Vault and renew the associated Lease.\npublic class SecretLeaseContainer extends SecretLeaseEventPublisher implements InitializingBean, DisposableBean;\n// Publisher for SecretLeaseEvents.\npublic class SecretLeaseEventPublisher extends Object implements InitializingBean;\n// Simple LeaseErrorListener implementation to log errors.\npublic static enum SecretLeaseEventPublisher.LoggingErrorListener extends Enum<SecretLeaseEventPublisher.LoggingErrorListener> implements LeaseErrorListener;\n", "des": "The core package implementing lease renewal and secret rotation."}
{"index": 2264, "repo": "spring-vault-core-3.0.4", "code": "package domain\n\n// A lease abstracting the lease Id, duration and its renewability.\npublic class Lease extends Object;\n// Represents a requested secret from a specific Vault path associated with a lease RequestedSecret.Mode.\npublic class RequestedSecret extends Object;\n// \npublic static enum RequestedSecret.Mode extends Enum<RequestedSecret.Mode>;\n", "des": "Lease domain classes."}
{"index": 2265, "repo": "spring-vault-core-3.0.4", "code": "package event\n\n// Event published after renewing a Lease for a RequestedSecret.\npublic class AfterSecretLeaseRenewedEvent extends SecretLeaseEvent;\n// Event published after revoking a Lease for a RequestedSecret.\npublic class AfterSecretLeaseRevocationEvent extends SecretLeaseEvent;\n// Event published before revoking a Lease for a RequestedSecret.\npublic class BeforeSecretLeaseRevocationEvent extends SecretLeaseEvent;\n// Listener for Vault exceptional SecretLeaseEvents.\n@FunctionalInterface public interface LeaseErrorListener;\n// Listener for Vault SecretLeaseEvents.\n@FunctionalInterface public interface LeaseListener;\n// Empty listener adapter implementing LeaseListener and LeaseErrorListener.\npublic abstract class LeaseListenerAdapter extends Object implements LeaseListener, LeaseErrorListener;\n// Event published after obtaining secrets potentially associated with a Lease.\npublic class SecretLeaseCreatedEvent extends SecretLeaseEvent;\n// Event published when caught an Exception during secret retrieval and lease interaction.\npublic class SecretLeaseErrorEvent extends SecretLeaseEvent;\n// Abstract base class for Lease based events associated with RequestedSecret.\npublic abstract class SecretLeaseEvent extends ApplicationEvent;\n// Event published after an expired Lease for a RequestedSecret was observed.\npublic class SecretLeaseExpiredEvent extends SecretLeaseEvent;\n// Event published after rotating secrets.\npublic class SecretLeaseRotatedEvent extends SecretLeaseCreatedEvent;\n// Event published after secrets could not be found for a RequestedSecret.\npublic class SecretNotFoundEvent extends SecretLeaseEvent;\n", "des": "Support classes for lease application events."}
{"index": 2266, "repo": "spring-vault-core-3.0.4", "code": "package util\n\n// Key-Value utility to retrieve secrets from a versioned key-value backend.\npublic class KeyValueDelegate extends Object;\n// \npublic static class KeyValueDelegate.MountInfo extends Object;\n// Strategy interface to transform properties to a new key-value Map in a functional style.\n@FunctionalInterface public interface PropertyTransformer;\n// Implementations of PropertyTransformer that provide various useful property transformation operations, prefixing, etc.\npublic abstract class PropertyTransformers extends Object;\n// PropertyTransformer that adds a prefix to each key name.\npublic static class PropertyTransformers.KeyPrefixPropertyTransformer extends Object implements PropertyTransformer;\n// PropertyTransformer that passes the given properties through without returning changed properties.\npublic static class PropertyTransformers.NoOpPropertyTransformer extends Object implements PropertyTransformer;\n", "des": "Property transformer classes for Spring Vault core support."}
{"index": 2267, "repo": "spring-vault-core-3.0.4", "code": "package configuration\n\n// Annotation to activate Vault repositories.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Inherited @Import(VaultRepositoriesRegistrar.class) @QueryCreatorType(value=VaultQueryCreator.class, repositoryQueryType=VaultPartTreeQuery.class) public @interface EnableVaultRepositories;\n// Vault specific ImportBeanDefinitionRegistrar.\npublic class VaultRepositoriesRegistrar extends RepositoryBeanDefinitionRegistrarSupport;\n// RepositoryConfigurationExtension for Vault.\npublic class VaultRepositoryConfigurationExtension extends KeyValueRepositoryConfigurationExtension;\n", "des": "Support infrastructure for the configuration of Vault specific repositories."}
{"index": 2268, "repo": "spring-vault-core-3.0.4", "code": "package convert\n\n// Base class for VaultConverter implementations.\npublic abstract class AbstractVaultConverter extends Object implements VaultConverter, InitializingBean;\n// Default implementation of VaultTypeMapper allowing configuration of the key to lookup and store type information in SecretDocument.\npublic class DefaultVaultTypeMapper extends DefaultTypeMapper<Map<String,Object>> implements VaultTypeMapper;\n// VaultConverter that uses a MappingContext to do sophisticated mapping of domain objects to SecretDocument.\npublic class MappingVaultConverter extends AbstractVaultConverter;\n// Vault database exchange object containing data before/after it's exchanged with Vault.\npublic class SecretDocument extends Object;\n// Central Vault-specific converter interface.\npublic interface VaultConverter extends EntityConverter<VaultPersistentEntity<?>,VaultPersistentProperty,Object,SecretDocument>;\n// Value object to capture custom conversion.\npublic class VaultCustomConversions extends CustomConversions;\n// Vault-specific TypeMapper exposing that SecretDocuments might contain a type key.\npublic interface VaultTypeMapper extends TypeMapper<Map<String,Object>>;\n", "des": "Spring Vault specific converter infrastructure."}
{"index": 2269, "repo": "spring-vault-core-3.0.4", "code": "package core\n\n// VaultEntityInformation implementation using a VaultPersistentEntity instance to lookup the necessary information.\npublic class MappingVaultEntityInformation<T,ID> extends PersistentEntityInformation<T,ID> implements VaultEntityInformation<T,ID>;\n// Vault-specific EntityInformation.\npublic interface VaultEntityInformation<T,ID> extends EntityInformation<T,ID>;\n// Vault-specific KeyValueAdapter.\npublic class VaultKeyValueAdapter extends AbstractKeyValueAdapter;\n// Vault-specific KeyValueTemplate.\npublic class VaultKeyValueTemplate extends KeyValueTemplate;\n", "des": "Spring Vault core repository implementation."}
{"index": 2270, "repo": "spring-vault-core-3.0.4", "code": "package mapping\n\n// VaultPersistentEntity implementation.\npublic class BasicVaultPersistentEntity<T> extends BasicKeyValuePersistentEntity<T,VaultPersistentProperty> implements VaultPersistentEntity<T>;\n// Secret marks objects as aggregate roots to be stored in Vault.\n@Documented @Inherited @Retention(RUNTIME) @Target(TYPE) @KeySpace public @interface Secret;\n// Mapping context for Vault-specific entities.\npublic class VaultMappingContext extends KeyValueMappingContext<VaultPersistentEntity<?>,VaultPersistentProperty>;\n// Vault specific PersistentEntity.\npublic interface VaultPersistentEntity<T> extends KeyValuePersistentEntity<T,VaultPersistentProperty>;\n// Vault-specific KeyValuePersistentProperty.\npublic class VaultPersistentProperty extends KeyValuePersistentProperty<VaultPersistentProperty>;\n// Simple constant holder for a SimpleTypeHolder enriched with Vault-specific simple (JSON) types.\npublic abstract class VaultSimpleTypes extends Object;\n", "des": "Infrastructure for the Vault JSON-to-object mapping subsystem."}
{"index": 2271, "repo": "spring-vault-core-3.0.4", "code": "package query\n\n// Vault-specific KeyValuePartTreeQuery.\npublic class VaultPartTreeQuery extends KeyValuePartTreeQuery;\n// Vault query consisting of a single Predicate.\npublic class VaultQuery extends Object;\n// Query creator for Vault queries.\npublic class VaultQueryCreator extends AbstractQueryCreator<KeyValueQuery<VaultQuery>,VaultQuery>;\n", "des": "Query derivation mechanism for Vault specific repositories."}
{"index": 2272, "repo": "spring-vault-core-3.0.4", "code": "package support\n\n// RepositoryFactorySupport specific of handing Vault KeyValueRepository.\npublic class VaultRepositoryFactory extends KeyValueRepositoryFactory;\n// Adapter for Springs FactoryBean interface to allow easy setup of VaultRepositoryFactory via Spring configuration.\npublic class VaultRepositoryFactoryBean<T extends Repository<S,ID>,S,ID extends Serializable> extends KeyValueRepositoryFactoryBean<T,S,ID>;\n// \npublic class VaultRevisionMetadata extends Object implements RevisionMetadata<Integer>;\n// Vault-based RevisionRepository providing revision metadata for versioned secrets.\npublic class VaultRevisionRepository<T> extends Object implements RevisionRepository<T,String,Integer>;\n", "des": "Support infrastructure for query derivation of Vault specific repositories."}
{"index": 2273, "repo": "spring-vault-core-3.0.4", "code": "package security\n\n// Vault-based BytesEncryptor using Vault's transit backend.\npublic class VaultBytesEncryptor extends Object implements BytesEncryptor;\n// Random byte generator using Vault's transit backend to generate high-quality random bytes of the configured length.\npublic class VaultBytesKeyGenerator extends Object implements BytesKeyGenerator;\n", "des": "Integration with Spring Security."}
{"index": 2274, "repo": "spring-vault-core-3.0.4", "code": "package support\n\n// Supporting class for computation results allowing introspection of the result value.\npublic abstract class AbstractResult<V> extends Object;\n// Value object representing a certificate consisting of the certificate and the issuer certificate.\npublic class Certificate extends Object;\n// Value object representing a certificate bundle consisting of a private key, the certificate and the issuer certificate.\npublic class CertificateBundle extends Certificate;\n// Value object representing cipher text with an optional VaultTransitContext.\npublic class Ciphertext extends Object;\n// Client options for Vault.\npublic class ClientOptions extends Object;\n// Utility to parse a Go format duration into Duration.\npublic class DurationParser extends Object;\n// Value object representing Hmac digest.\npublic class Hmac extends Object;\n// Flattens a hierarchical Map of objects into a property Map.\npublic abstract class JsonMapFlattener extends Object;\n// Strategy interface to control whether to retain or drop a Lease after a failure.\n@FunctionalInterface public interface LeaseStrategy;\n// Represents a PEM object that is internally decoded to a DER object.\npublic class PemObject extends Object;\n// Value object representing plain text with an optional VaultTransitContext.\npublic class Plaintext extends Object;\n// Value object representing a Vault policy associated with Policy.Rules.\npublic class Policy extends Object;\n// Built-in Vault capabilities.\npublic static enum Policy.BuiltinCapabilities extends Enum<Policy.BuiltinCapabilities> implements Policy.Capability;\n// Capability interface representing capability literals.\npublic static interface Policy.Capability;\n// Value object representing a rule for a certain path.\npublic static class Policy.Rule extends Object;\n// Builder for a Policy.Rule.\npublic static class Policy.Rule.RuleBuilder extends Object;\n// A exported raw key inside Vault's transit backend.\npublic interface RawTransitKey;\n// Value object representing a Signature.\npublic class Signature extends Object;\n// Value object representing the result of a Signature validation.\npublic class SignatureValidation extends Object;\n// SSL configuration.\npublic class SslConfiguration extends Object;\n// Configuration for a key in a keystore.\npublic static class SslConfiguration.KeyConfiguration extends Object;\n// Configuration for a key store/trust store.\npublic static class SslConfiguration.KeyStoreConfiguration extends Object;\n// Value object representing cipher text with an optional VaultTransformContext.\npublic class TransformCiphertext extends Object;\n", "des": "Classes supporting the Vault packages, such as value objects."}
{"index": 2275, "repo": "spring-data-elasticsearch-5.1.2", "code": "package elc\n\n// Class to combine an Elasticsearch Aggregate with its name.\npublic class Aggregation extends Object;\n// Extension of the ElasticsearchClient class that implements AutoCloseable.\npublic class AutoCloseableElasticsearchClient extends co.elastic.clients.elasticsearch.ElasticsearchClient implements AutoCloseable;\n// base class for a template that uses one of the ElasticsearchClient's child clients like ElasticsearchClusterClient or ElasticsearchIndicesClient.\npublic abstract class ChildTemplate<T extends co.elastic.clients.transport.Transport,CLIENT extends co.elastic.clients.ApiClient<T,CLIENT>> extends Object;\n// Callback interface to be used with ChildTemplate.execute(ClientCallback) for operating directly on the client.\n@FunctionalInterface public static interface ChildTemplate.ClientCallback<CLIENT,RESULT>;\n// Implementation of the ClusterOperations interface using en ElasticsearchClusterClient.\npublic class ClusterTemplate extends ChildTemplate<co.elastic.clients.transport.ElasticsearchTransport,co.elastic.clients.elasticsearch.cluster.ElasticsearchClusterClient> implements ClusterOperations;\n// \npublic class CriteriaQueryException extends UncategorizedDataAccessException;\n// AggregationContainer for a Aggregation that holds Elasticsearch data.\npublic class ElasticsearchAggregation extends Object implements AggregationContainer<Aggregation>;\n// AggregationsContainer implementation for the Elasticsearch aggregations.\npublic class ElasticsearchAggregations extends Object implements AggregationsContainer<List<ElasticsearchAggregation>>;\n// \npublic class ElasticsearchClientBeanDefinitionParser extends AbstractBeanDefinitionParser;\n// ElasticsearchClientFactoryBean\npublic class ElasticsearchClientFactoryBean extends Object implements FactoryBean<co.elastic.clients.elasticsearch.ElasticsearchClient>, InitializingBean, DisposableBean;\n// Utility class to create the different Elasticsearch clients\npublic final class ElasticsearchClients extends Object;\n// ClientConfiguration.ClientConfigurationCallback to configure the Elasticsearch RestClient's Http client with a HttpAsyncClientBuilder\npublic static interface ElasticsearchClients.ElasticsearchHttpClientConfigurationCallback extends ClientConfiguration.ClientConfigurationCallback<org.apache.http.impl.nio.client.HttpAsyncClientBuilder>;\n// ClientConfiguration.ClientConfigurationCallback to configure the RestClient client with a RestClientBuilder\npublic static interface ElasticsearchClients.ElasticsearchRestClientConfigurationCallback extends ClientConfiguration.ClientConfigurationCallback<org.elasticsearch.client.RestClientBuilder>;\n// Base class for a @Configuration class to set up the Elasticsearch connection using the Elasticsearch Client.\npublic abstract class ElasticsearchConfiguration extends ElasticsearchConfigurationSupport;\n", "des": "This package contains classes that use the new Elasticsearch client library (co.elastic.clients:elasticsearch-java) to access Elasticsearch."}
{"index": 2276, "repo": "spring-data-elasticsearch-5.1.2", "code": "package erhlc\n\n// \n@Deprecated public abstract class AbstractElasticsearchConfiguration extends ElasticsearchConfigurationSupport;\n// \n@Deprecated public abstract class AbstractReactiveElasticsearchConfiguration extends ElasticsearchConfigurationSupport;\n// \n@Deprecated public class DefaultReactiveClusterOperations extends Object implements ReactiveClusterOperations;\n// \n@Deprecated public class DefaultReactiveElasticsearchClient extends Object implements ReactiveElasticsearchClient, ReactiveElasticsearchClient.Indices, ReactiveElasticsearchClient.Cluster;\n// \n@Deprecated public final class DocumentAdapters extends Object;\n// \n@Deprecated public class ElasticsearchAggregation extends Object implements AggregationContainer<org.elasticsearch.search.aggregations.Aggregation>;\n// \n@Deprecated public class ElasticsearchAggregations extends Object implements AggregationsContainer<org.elasticsearch.search.aggregations.Aggregations>;\n// \n@Deprecated public class ElasticsearchClusterOperations extends Object;\n// \n@Deprecated public class ElasticsearchExceptionTranslator extends Object implements PersistenceExceptionTranslator;\n// \n@Deprecated public class ElasticsearchRestTemplate extends AbstractElasticsearchTemplate;\n// Callback interface to be used with ElasticsearchRestTemplate.execute(ClientCallback) for operating directly on RestHighLevelClient.\n@FunctionalInterface public static interface ElasticsearchRestTemplate.ClientCallback<T>;\n// \n@Deprecated public class HighlightQueryBuilder extends Object;\n// \n@Deprecated public interface HostProvider<T extends HostProvider<T>>;\n// Value object accumulating information about an Elasticsearch cluster.\npublic static class HostProvider.ClusterInformation extends Object;\n// HostProvider.Verification allows to influence the lookup strategy for active hosts.\npublic static enum HostProvider.Verification extends Enum<HostProvider.Verification>;\n// \n@Deprecated public class NamedXContents extends Object;\n// \n@Deprecated public class NativeSearchQuery extends BaseQuery;\n// \n@Deprecated public class NativeSearchQueryBuilder extends BaseQueryBuilder<NativeSearchQuery,NativeSearchQueryBuilder>;\n// \n@Deprecated public interface ReactiveElasticsearchClient;\n// Encapsulation of methods for accessing the Cluster API.\npublic static interface ReactiveElasticsearchClient.Cluster;\n// Encapsulation of methods for accessing the Indices API.\npublic static interface ReactiveElasticsearchClient.Indices;\n// Low level callback interface operating upon WebClient to send commands towards elasticsearch.\npublic static interface ReactiveElasticsearchClient.ReactiveElasticsearchClientCallback<T>;\n", "des": "This package contains classes that use the old Elasticsearch 7 libraries to access Elasticsearch either directly by using the RestHighLevelClient or indirectly by using code copied from Elasticsearch libraries (reactive implementation)."}
{"index": 2277, "repo": "spring-data-elasticsearch-5.1.2", "code": "package cluster\n\n// Information about the cluster health.\npublic class ClusterHealth extends Object;\n// \npublic static final class ClusterHealth.ClusterHealthBuilder extends Object;\n// Elasticsearch operations on cluster level.\npublic interface ClusterOperations;\n// Reactive Elasticsearch operations on cluster level.\npublic interface ReactiveClusterOperations;\n", "des": "Interfaces and classes related to Elasticsearch cluster information and management."}
{"index": 2278, "repo": "spring-data-elasticsearch-5.1.2", "code": "package document\n\n// A representation of a Elasticsearch document as extended Map.\npublic interface Document extends StringObjectMap<Document>;\n// class that holds explanations returned from an Elasticsearch search.\npublic class Explanation extends Object;\n// meta data returned for nested inner hits.\npublic class NestedMetaData extends Object;\n// Extension to Document exposing search response related data.\npublic interface SearchDocument extends Document;\n// SearchDocument implementation using a Document delegate.\npublic class SearchDocumentAdapter extends Object implements SearchDocument;\n// This represents the complete search response from Elasticsearch, including the returned documents.\npublic class SearchDocumentResponse extends Object;\n// A function to convert a SearchDocument async into an entity.\n@FunctionalInterface public static interface SearchDocumentResponse.EntityCreator<T> extends Function<SearchDocument,CompletableFuture<T>>;\n", "des": "Classes related to the Document structure of Elasticsearch documents and search responses."}
{"index": 2279, "repo": "spring-data-elasticsearch-5.1.2", "code": "package event\n\n// Callback being invoked after a domain object is materialized from a Document when reading results.\n@FunctionalInterface public interface AfterConvertCallback<T> extends EntityCallback<T>;\n// Callback being invoked after a Document is read from Elasticsearch and before it is converted into a domain object.\n@FunctionalInterface public interface AfterLoadCallback<T> extends EntityCallback<Document>;\n// Entity callback triggered after save of an entity.\n@FunctionalInterface public interface AfterSaveCallback<T> extends EntityCallback<T>;\n// EntityCallback to populate auditing related fields on an entity about to be saved.\npublic class AuditingEntityCallback extends Object implements BeforeConvertCallback<Object>, Ordered;\n// Callback being invoked before a domain object is converted to be persisted.\n@FunctionalInterface public interface BeforeConvertCallback<T> extends EntityCallback<T>;\n// Callback being invoked after a domain object is materialized from a Document when reading results.\n@FunctionalInterface public interface ReactiveAfterConvertCallback<T> extends EntityCallback<T>;\n// Callback being invoked after a Document is read from Elasticsearch and before it is converted into a domain object.\n@FunctionalInterface public interface ReactiveAfterLoadCallback<T> extends EntityCallback<Document>;\n// Entity callback triggered after save of an entity.\n@FunctionalInterface public interface ReactiveAfterSaveCallback<T> extends EntityCallback<T>;\n// EntityCallback to populate auditing related fields on an entity about to be saved.\npublic class ReactiveAuditingEntityCallback extends Object implements ReactiveBeforeConvertCallback<Object>, Ordered;\n// Callback being invoked before a domain object is converted to be persisted.\n@FunctionalInterface public interface ReactiveBeforeConvertCallback<T> extends EntityCallback<T>;\n", "des": "classes and interfaces related to Spring Data Elasticsearch events and callbacks."}
{"index": 2280, "repo": "spring-data-elasticsearch-5.1.2", "code": "package index\n\n// A single action to be contained in AliasActions.\npublic abstract class AliasAction extends Object;\n// AliasAction to add an alias.\npublic static class AliasAction.Add extends AliasAction;\n// AliasAction to remove an alias.\npublic static class AliasAction.Remove extends AliasAction;\n// AliasAction to remove an index.\npublic static class AliasAction.RemoveIndex extends AliasAction;\n// Value class capturing the arguments for an AliasAction.\npublic class AliasActionParameters extends Object;\n// \npublic static final class AliasActionParameters.Builder extends Object;\n// Class to define to actions to execute in alias management functions.\npublic class AliasActions extends Object;\n// value object to describe alias information.\npublic class AliasData extends Object;\n// A component template to be used in a component template request.\npublic record ComponentTemplateRequestData(Settings settings, Document mapping, AliasActions aliasActions, Boolean allowAutoCreate) extends Record;\n// \npublic static final class ComponentTemplateRequestData.Builder extends Object;\n// \npublic record DeleteComponentTemplateRequest(String templateName) extends Record;\n// \npublic record DeleteIndexTemplateRequest(String templateName) extends Record;\n// \npublic class DeleteTemplateRequest extends Object;\n// \npublic record ExistsComponentTemplateRequest(String templateName) extends Record;\n// \npublic record ExistsIndexTemplateRequest(String templateName) extends Record;\n// \npublic class ExistsTemplateRequest extends Object;\n// \npublic record GetComponentTemplateRequest(String templateName) extends Record;\n// \npublic record GetIndexTemplateRequest(String templateName) extends Record;\n// \npublic class GetTemplateRequest extends Object;\n// \npublic class MappingBuilder extends Object;\n// A class to hold the mapping parameters that might be set on Field or InnerField annotation.\npublic final class MappingParameters extends Object;\n// \npublic record PutComponentTemplateRequest(String name, Long version, Boolean create, Duration masterTimeout, ComponentTemplateRequestData template) extends Record;\n// \npublic static final class PutComponentTemplateRequest.Builder extends Object;\n// \npublic record PutIndexTemplateRequest(String name, String[] indexPatterns, Settings settings, Document mapping, AliasActions aliasActions, List<String> composedOf) extends Record;\n// \npublic static class PutIndexTemplateRequest.Builder extends Object;\n", "des": "Classes related to Elasticsearch index management."}
{"index": 2281, "repo": "spring-data-elasticsearch-5.1.2", "code": "package highlight\n\n// \npublic class Highlight extends Object;\n// \npublic abstract class HighlightCommonParameters extends Object;\n// \npublic abstract static class HighlightCommonParameters.HighlightCommonParametersBuilder<SELF extends HighlightCommonParameters.HighlightCommonParametersBuilder<SELF>> extends Object;\n// \npublic class HighlightField extends Object;\n// \npublic class HighlightFieldParameters extends HighlightCommonParameters;\n// \npublic static final class HighlightFieldParameters.HighlightFieldParametersBuilder extends HighlightCommonParameters.HighlightCommonParametersBuilder<HighlightFieldParameters.HighlightFieldParametersBuilder>;\n// \npublic class HighlightParameters extends HighlightCommonParameters;\n// \npublic static final class HighlightParameters.HighlightParametersBuilder extends HighlightCommonParameters.HighlightCommonParametersBuilder<HighlightParameters.HighlightParametersBuilder>;\n", "des": "classes to define highlight settings parameters of a query"}
{"index": 2282, "repo": "spring-data-elasticsearch-5.1.2", "code": "package routing\n\n// Default implementation of the RoutingResolver interface.\npublic class DefaultRoutingResolver extends Object implements RoutingResolver;\n// \npublic interface RoutingResolver;\n", "des": "classes/interfaces for specification and implementation of Elasticsearch routing."}
{"index": 2283, "repo": "spring-data-elasticsearch-5.1.2", "code": "package script\n\n// This interfaces defines the operations to access the Elasticsearch script API.\npublic interface ReactiveScriptOperations;\n// \npublic record Script(String id, String language, String source) extends Record;\n// \npublic static final class Script.ScriptBuilder extends Object;\n// This interfaces defines the operations to access the Elasticsearch script API.\npublic interface ScriptOperations;\n", "des": "Classes and interfaces to access to script API of Elasticsearch (https://www.elastic.co/guide/en/elasticsearch/reference/8.5/script-apis.html)."}
{"index": 2284, "repo": "spring-data-elasticsearch-5.1.2", "code": "package repository\n\n// \n@NoRepositoryBean public interface ElasticsearchRepository<T,ID> extends PagingAndSortingRepository<T,ID>, CrudRepository<T,ID>;\n// Elasticsearch specific Repository interface with reactive support.\n@NoRepositoryBean public interface ReactiveElasticsearchRepository<T,ID> extends ReactiveSortingRepository<T,ID>, ReactiveCrudRepository<T,ID>;\n", "des": "infrastructure to define the Elasticsearch mapping for an index."}
{"index": 2285, "repo": "jcl-over-slf4j-2.0.7", "code": "package logging\n\n// A simple logging interface abstracting logging APIs.\npublic interface Log;\n// An exception that is thrown only if a suitable LogFactory or Log instance cannot be created by the corresponding factory methods.\npublic class LogConfigurationException extends RuntimeException;\n// Factory for creating Log instances, which always delegates to an instance of SLF4JLogFactory.\npublic abstract class LogFactory extends Object;\n", "des": "Jakarta Commons Logging implemented over SLF4J."}
{"index": 2286, "repo": "jcl-over-slf4j-2.0.7", "code": "package impl\n\n// Trivial implementation of Log that throws away all messages.\npublic class NoOpLog extends Object implements Log, Serializable;\n// Simple implementation of Log that sends all enabled log messages, for all defined loggers, to System.err.\npublic class SimpleLog extends Object implements Log, Serializable;\n// Implementation of org.apache.commons.logging.Log interface which delegates all processing to a wrapped org.slf4j.Logger instance.\npublic class SLF4JLocationAwareLog extends Object implements Log, Serializable;\n// Implementation of org.apache.commons.logging.Log interface which delegates all processing to a wrapped org.slf4j.Logger instance.\npublic class SLF4JLog extends Object implements Log, Serializable;\n// Concrete subclass of LogFactory which always delegates to the org.slf4j.LoggerFactory class.\npublic class SLF4JLogFactory extends LogFactory;\n", "des": "SLF4J based implementation of commons-logging wrapper APIs."}
{"index": 2287, "repo": "spring-boot-3.1.1", "code": "package boot\n\n// Provides access to the arguments that were used to run a SpringApplication.\npublic interface ApplicationArguments;\n// Strategy interface for creating the ConfigurableApplicationContext used by a SpringApplication.\n@FunctionalInterface public interface ApplicationContextFactory;\n// Interface used to indicate that a bean should run when it is contained within a SpringApplication.\n@FunctionalInterface public interface ApplicationRunner;\n// Interface class for writing a banner programmatically.\n@FunctionalInterface public interface Banner;\n// An enumeration of possible values for configuring the Banner.\npublic static enum Banner.Mode extends Enum<Banner.Mode>;\n// A simple bootstrap context that is available during startup and Environment post-processing up to the point that the ApplicationContext is prepared.\npublic interface BootstrapContext;\n// ApplicationEvent published by a BootstrapContext when it's closed.\npublic class BootstrapContextClosedEvent extends org.springframework.context.ApplicationEvent;\n// A simple object registry that is available during startup and Environment post-processing up to the point that the ApplicationContext is prepared.\npublic interface BootstrapRegistry;\n// Supplier used to provide the actual instance when needed.\n@FunctionalInterface public static interface BootstrapRegistry.InstanceSupplier<T>;\n// The scope of an instance.\npublic static enum BootstrapRegistry.Scope extends Enum<BootstrapRegistry.Scope>;\n// Callback interface that can be used to initialize a BootstrapRegistry before it is used.\n@FunctionalInterface public interface BootstrapRegistryInitializer;\n// Interface used to indicate that a bean should run when it is contained within a SpringApplication.\n@FunctionalInterface public interface CommandLineRunner;\n// A BootstrapContext that also provides configuration methods through the BootstrapRegistry interface.\npublic interface ConfigurableBootstrapContext extends BootstrapRegistry, BootstrapContext;\n// Default implementation of ApplicationArguments.\npublic class DefaultApplicationArguments extends Object implements ApplicationArguments;\n// Default ConfigurableBootstrapContext implementation.\npublic class DefaultBootstrapContext extends Object implements ConfigurableBootstrapContext;\n// MapPropertySource containing default properties contributed directly to a SpringApplication.\npublic class DefaultPropertiesPropertySource extends org.springframework.core.env.MapPropertySource;\n// Event fired when an application exit code has been determined from an ExitCodeGenerator.\npublic class ExitCodeEvent extends org.springframework.context.ApplicationEvent;\n", "des": "Core Spring Boot classes."}
{"index": 2288, "repo": "spring-boot-3.1.1", "code": "package admin\n\n// An MBean contract to control and monitor a running SpringApplication over JMX.\npublic interface SpringApplicationAdminMXBean;\n// Register a SpringApplicationAdminMXBean implementation to the platform MBeanServer.\npublic class SpringApplicationAdminMXBeanRegistrar extends Object implements org.springframework.context.ApplicationContextAware, org.springframework.context.event.GenericApplicationListener, org.springframework.context.EnvironmentAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean;\n", "des": "Administration support for Spring Boot applications."}
{"index": 2289, "repo": "spring-boot-3.1.1", "code": "package ansi\n\n// AnsiElement implementation for ANSI 8-bit foreground or background color codes.\npublic final class Ansi8BitColor extends Object implements AnsiElement;\n// Ansi background colors.\npublic enum AnsiBackground extends Enum<AnsiBackground> implements AnsiElement;\n// Ansi colors.\npublic enum AnsiColor extends Enum<AnsiColor> implements AnsiElement;\n// An ANSI encodable element.\npublic interface AnsiElement;\n// Generates ANSI encoded output, automatically attempting to detect if the terminal supports ANSI.\npublic abstract class AnsiOutput extends Object;\n// Possible values to pass to AnsiOutput.setEnabled(org.springframework.boot.ansi.AnsiOutput.Enabled).\npublic static enum AnsiOutput.Enabled extends Enum<AnsiOutput.Enabled>;\n// PropertyResolver for AnsiStyle, AnsiColor, AnsiBackground and Ansi8BitColor elements.\npublic class AnsiPropertySource extends org.springframework.core.env.PropertySource<AnsiElement>;\n// Ansi styles.\npublic enum AnsiStyle extends Enum<AnsiStyle> implements AnsiElement;\n", "des": "Support classes to provide ANSI color output."}
{"index": 2290, "repo": "spring-boot-3.1.1", "code": "package availability\n\n// Provides availability state information for the application.\npublic interface ApplicationAvailability;\n// Bean that provides an ApplicationAvailability implementation by listening for change events.\npublic class ApplicationAvailabilityBean extends Object implements ApplicationAvailability, org.springframework.context.ApplicationListener<AvailabilityChangeEvent<?>>;\n// ApplicationEvent sent when the AvailabilityState of the application changes.\npublic class AvailabilityChangeEvent<S extends AvailabilityState> extends org.springframework.context.PayloadApplicationEvent<S>;\n// Tagging interface used on ApplicationAvailability states.\npublic interface AvailabilityState;\n// \"Liveness\" state of the application.\npublic enum LivenessState extends Enum<LivenessState> implements AvailabilityState;\n// \"Readiness\" state of the application.\npublic enum ReadinessState extends Enum<ReadinessState> implements AvailabilityState;\n", "des": "Support for describing the availability of Spring Boot applications."}
{"index": 2291, "repo": "spring-boot-3.1.1", "code": "package builder\n\n// ApplicationContextInitializer for setting the parent context.\npublic class ParentContextApplicationContextInitializer extends Object implements org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>, org.springframework.core.Ordered;\n// ApplicationEvent fired when a parent context is available.\npublic static class ParentContextApplicationContextInitializer.ParentContextAvailableEvent extends org.springframework.context.ApplicationEvent;\n// Listener that closes the application context if its parent is closed.\npublic class ParentContextCloserApplicationListener extends Object implements org.springframework.context.ApplicationListener<ParentContextApplicationContextInitializer.ParentContextAvailableEvent>, org.springframework.context.ApplicationContextAware, org.springframework.core.Ordered;\n// ApplicationListener to close the context.\nprotected static class ParentContextCloserApplicationListener.ContextCloserListener extends Object implements org.springframework.context.ApplicationListener<org.springframework.context.event.ContextClosedEvent>;\n// Builder for SpringApplication and ApplicationContext instances with convenient fluent API and context hierarchy support.\npublic class SpringApplicationBuilder extends Object;\n", "des": "Fluent 'builder' style API to construct a SpringApplication."}
{"index": 2292, "repo": "spring-boot-3.1.1", "code": "package cloud\n\n// An EnvironmentPostProcessor that knows where to find VCAP (a.k.a.\npublic class CloudFoundryVcapEnvironmentPostProcessor extends Object implements EnvironmentPostProcessor, org.springframework.core.Ordered;\n// Simple detection for well known cloud platforms.\npublic enum CloudPlatform extends Enum<CloudPlatform>;\n", "des": "Low level support for Cloud deployments."}
{"index": 2293, "repo": "spring-boot-3.1.1", "code": "package context\n\n// An ApplicationListener that saves application PID into file.\npublic class ApplicationPidFileWriter extends Object implements org.springframework.context.ApplicationListener<SpringApplicationEvent>, org.springframework.core.Ordered;\n// ApplicationContextInitializer to report warnings for common misconfiguration mistakes.\npublic class ConfigurationWarningsApplicationContextInitializer extends Object implements org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>;\n// A single check that can be applied.\n@FunctionalInterface protected static interface ConfigurationWarningsApplicationContextInitializer.Check;\n// ConfigurationWarningsApplicationContextInitializer.Check for @ComponentScan on problematic package.\nprotected static class ConfigurationWarningsApplicationContextInitializer.ComponentScanPackageCheck extends Object implements ConfigurationWarningsApplicationContextInitializer.Check;\n// BeanDefinitionRegistryPostProcessor to report warnings.\nprotected static final class ConfigurationWarningsApplicationContextInitializer.ConfigurationWarningsPostProcessor extends Object implements org.springframework.core.PriorityOrdered, org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor;\n// ApplicationContextInitializer that sets the Spring ApplicationContext ID.\npublic class ContextIdApplicationContextInitializer extends Object implements org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>, org.springframework.core.Ordered;\n// An ApplicationListener that halts application startup if the system file encoding does not match an expected value set in the environment.\npublic class FileEncodingApplicationListener extends Object implements org.springframework.context.ApplicationListener<ApplicationEnvironmentPreparedEvent>, org.springframework.core.Ordered;\n// Provides exclusion TypeFilters that are loaded from the BeanFactory and automatically applied to SpringBootApplication scanning.\npublic class TypeExcludeFilter extends Object implements org.springframework.core.type.filter.TypeFilter, org.springframework.beans.factory.BeanFactoryAware;\n", "des": "Classes related to Spring's ApplicationContext."}
{"index": 2294, "repo": "spring-boot-3.1.1", "code": "package annotation\n\n// A set of @Configuration classes that can be registered in ApplicationContext.\npublic abstract class Configurations extends Object;\n// Interface that can be implemented by ImportSelector and ImportBeanDefinitionRegistrar implementations when they can determine imports early.\n@FunctionalInterface public interface DeterminableImports;\n// Contains @Configuration import candidates, usually auto-configurations.\npublic final class ImportCandidates extends Object implements Iterable<String>;\n// Configurations representing user-defined @Configuration classes (i.e.\npublic class UserConfigurations extends Configurations implements org.springframework.core.PriorityOrdered;\n", "des": "Classes related to Spring's ApplicationContext annotations."}
{"index": 2295, "repo": "spring-boot-3.1.1", "code": "package config\n\n// An ApplicationListener that configures AnsiOutput depending on the value of the property spring.output.ansi.enabled.\npublic class AnsiOutputApplicationListener extends Object implements org.springframework.context.ApplicationListener<ApplicationEnvironmentPreparedEvent>, org.springframework.core.Ordered;\n// Configuration data that has been loaded from a ConfigDataResource and may ultimately contribute property sources to Spring's Environment.\npublic final class ConfigData extends Object;\n// Option flags that can be applied.\npublic static enum ConfigData.Option extends Enum<ConfigData.Option>;\n// A set of ConfigData.Option flags.\npublic static final class ConfigData.Options extends Object;\n// Strategy interface used to supply ConfigData.Options for a given PropertySource.\n@FunctionalInterface public static interface ConfigData.PropertySourceOptions;\n// EnvironmentPostProcessor that loads and applies ConfigData to Spring's Environment.\npublic class ConfigDataEnvironmentPostProcessor extends Object implements EnvironmentPostProcessor, org.springframework.core.Ordered;\n// EventListener to listen to Environment updates triggered by the ConfigDataEnvironmentPostProcessor.\npublic interface ConfigDataEnvironmentUpdateListener extends EventListener;\n// Abstract base class for configuration data exceptions.\npublic abstract class ConfigDataException extends RuntimeException;\n// Strategy class that can be used to load ConfigData for a given ConfigDataResource.\npublic interface ConfigDataLoader<R extends ConfigDataResource>;\n// Context provided to ConfigDataLoader methods.\npublic interface ConfigDataLoaderContext;\n// A user specified location that can be resolved to one or more config data resources.\npublic final class ConfigDataLocation extends Object implements OriginProvider;\n// ConfigDataNotFoundException thrown when a ConfigDataLocation cannot be found.\npublic class ConfigDataLocationNotFoundException extends ConfigDataNotFoundException;\n// Strategy interface used to resolve locations into one or more resources.\npublic interface ConfigDataLocationResolver<R extends ConfigDataResource>;\n// Context provided to ConfigDataLocationResolver methods.\npublic interface ConfigDataLocationResolverContext;\n// Action to take when an uncaught ConfigDataNotFoundException is thrown.\npublic enum ConfigDataNotFoundAction extends Enum<ConfigDataNotFoundAction>;\n// ConfigDataNotFoundException thrown when a ConfigData cannot be found.\npublic abstract class ConfigDataNotFoundException extends ConfigDataException implements OriginProvider;\n", "des": "External configuration support allowing 'application.properties' to be loaded and used within a Spring Boot application."}
{"index": 2296, "repo": "spring-boot-3.1.1", "code": "package event\n\n// Event published when a SpringApplication is starting up and the ApplicationContext is prepared and ApplicationContextInitializers have been called but before any bean definitions are loaded.\npublic class ApplicationContextInitializedEvent extends SpringApplicationEvent;\n// Event published when a SpringApplication is starting up and the Environment is first available for inspection and modification.\npublic class ApplicationEnvironmentPreparedEvent extends SpringApplicationEvent;\n// Event published by a SpringApplication when it fails to start.\npublic class ApplicationFailedEvent extends SpringApplicationEvent;\n// Event published as when a SpringApplication is starting up and the ApplicationContext is fully prepared but not refreshed.\npublic class ApplicationPreparedEvent extends SpringApplicationEvent;\n// Event published as late as conceivably possible to indicate that the application is ready to service requests.\npublic class ApplicationReadyEvent extends SpringApplicationEvent;\n// Event published once the application context has been refreshed but before any application and command line runners have been called.\npublic class ApplicationStartedEvent extends SpringApplicationEvent;\n// Event published as early as conceivably possible as soon as a SpringApplication has been started - before the Environment or ApplicationContext is available, but after the ApplicationListeners have been registered.\npublic class ApplicationStartingEvent extends SpringApplicationEvent;\n// Base class for ApplicationEvent related to a SpringApplication.\npublic abstract class SpringApplicationEvent extends org.springframework.context.ApplicationEvent;\n", "des": "ApplicationEvents triggered by Spring Boot."}
{"index": 2297, "repo": "spring-boot-3.1.1", "code": "package logging\n\n// An ApplicationListener that configures the LoggingSystem.\npublic class LoggingApplicationListener extends Object implements org.springframework.context.event.GenericApplicationListener;\n", "des": "Logging integration with Spring's Application Context."}
{"index": 2298, "repo": "spring-boot-3.1.1", "code": "package buffering\n\n// ApplicationStartup implementation that buffers steps and records their timestamp as well as their processing time.\npublic class BufferingApplicationStartup extends Object implements org.springframework.core.metrics.ApplicationStartup;\n// Represent the timeline of steps recorded by BufferingApplicationStartup.\npublic class StartupTimeline extends Object;\n// Event on the current StartupTimeline.\npublic static class StartupTimeline.TimelineEvent extends Object;\n", "des": "ApplicationStartup implementation for buffering steps and measuring their processing time."}
{"index": 2299, "repo": "spring-boot-3.1.1", "code": "package properties\n\n// Bean to record and provide bound @ConfigurationProperties.\npublic class BoundConfigurationProperties extends Object;\n// Annotation for externalized configuration.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented @Indexed public @interface ConfigurationProperties;\n// Provides access to @ConfigurationProperties bean details, regardless of if the annotation was used directly or on a @Bean factory method.\npublic final class ConfigurationPropertiesBean extends Object;\n// \n@Deprecated(since=\"3.0.8\", forRemoval=true) public static enum ConfigurationPropertiesBean.BindMethod extends Enum<ConfigurationPropertiesBean.BindMethod>;\n// Exception thrown when @ConfigurationProperties binding fails.\npublic class ConfigurationPropertiesBindException extends org.springframework.beans.factory.BeanCreationException;\n// Allows additional functionality to be applied to the BindHandler used by the ConfigurationPropertiesBindingPostProcessor.\n@FunctionalInterface public interface ConfigurationPropertiesBindHandlerAdvisor;\n// Qualifier for beans that are needed to configure the binding of @ConfigurationProperties (e.g.\n@Qualifier(\"org.springframework.boot.context.properties.ConfigurationPropertiesBinding\") @Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented public @interface ConfigurationPropertiesBinding;\n// BeanPostProcessor to bind PropertySources to beans annotated with @ConfigurationProperties.\npublic class ConfigurationPropertiesBindingPostProcessor extends Object implements org.springframework.beans.factory.config.BeanPostProcessor, org.springframework.core.PriorityOrdered, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean;\n// Configures the base packages used when scanning for @ConfigurationProperties classes.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Import(org.springframework.boot.context.properties.ConfigurationPropertiesScanRegistrar.class) @EnableConfigurationProperties public @interface ConfigurationPropertiesScan;\n// \n@Target({CONSTRUCTOR,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented @Deprecated(since=\"3.0.0\", forRemoval=true) @ConstructorBinding public @interface ConstructorBinding;\n// Helper class to programmatically bind configuration properties that use constructor injection.\npublic abstract class ConstructorBound extends Object;\n", "des": "Support for external configuration properties."}
{"index": 2300, "repo": "spring-boot-3.1.1", "code": "package bind\n\n// Abstract base class for BindHandler implementations.\npublic abstract class AbstractBindHandler extends Object implements BindHandler;\n// Source that can be bound by a Binder.\npublic final class Bindable<T> extends Object;\n// Restrictions that can be applied when binding values.\npublic static enum Bindable.BindRestriction extends Enum<Bindable.BindRestriction>;\n// RuntimeHintsRegistrar that can be used to register ReflectionHints for Bindable types, discovering any nested type it may expose through a property.\npublic class BindableRuntimeHintsRegistrar extends Object implements org.springframework.aot.hint.RuntimeHintsRegistrar;\n// Strategy interface used to determine a specific constructor to use when binding.\n@FunctionalInterface public interface BindConstructorProvider;\n// Context information for use by BindHandlers.\npublic interface BindContext;\n// A container object which Binds objects from one or more ConfigurationPropertySources.\npublic class Binder extends Object;\n// Exception thrown when binding fails.\npublic class BindException extends RuntimeException implements OriginProvider;\n// Callback interface that can be used to handle additional logic during element binding.\npublic interface BindHandler;\n// Configuration property binding methods.\npublic enum BindMethod extends Enum<BindMethod>;\n// A container object to return the result of a Binder bind operation.\npublic final class BindResult<T> extends Object;\n// BindHandler that can be used to track bound configuration properties.\npublic class BoundPropertiesTrackingBindHandler extends AbstractBindHandler;\n// Annotation that can be used to indicate which constructor to use when binding configuration properties using constructor arguments rather than by calling setters.\n@Target({CONSTRUCTOR,ANNOTATION_TYPE}) @Retention(RUNTIME) @Documented public @interface ConstructorBinding;\n// Internal utility to help when dealing with data object property names.\npublic abstract class DataObjectPropertyName extends Object;\n// Annotation that can be used to specify the default value when binding to an immutable property.\n@Retention(RUNTIME) @Target({PARAMETER,RECORD_COMPONENT}) @Documented public @interface DefaultValue;\n// Annotation that can be used to specify the name when binding to an immutable property.\n@Retention(RUNTIME) @Target(PARAMETER) @Documented public @interface Name;\n", "des": "Support for @ConfigurationProperties binding."}
{"index": 2301, "repo": "spring-boot-3.1.1", "code": "package handler\n\n// BindHandler that can be used to ignore binding errors.\npublic class IgnoreErrorsBindHandler extends AbstractBindHandler;\n// BindHandler that can be used to ignore top-level ConverterNotFoundExceptions.\npublic class IgnoreTopLevelConverterNotFoundBindHandler extends AbstractBindHandler;\n// BindHandler to enforce that all configuration properties under the root name have been bound.\npublic class NoUnboundElementsBindHandler extends AbstractBindHandler;\n", "des": "General BindHandler implementations."}
{"index": 2302, "repo": "spring-boot-3.1.1", "code": "package validation\n\n// Error thrown when validation fails during a bind operation.\npublic class BindValidationException extends RuntimeException;\n// BindHandler to apply Validators to bound results.\npublic class ValidationBindHandler extends AbstractBindHandler;\n// A collection of ObjectErrors caused by bind validation failures.\npublic class ValidationErrors extends Object implements Iterable<org.springframework.validation.ObjectError>;\n", "des": "Binding validation support."}
{"index": 2303, "repo": "spring-boot-3.1.1", "code": "package source\n\n// A single configuration property obtained from a ConfigurationPropertySource consisting of a name, value and optional origin.\npublic final class ConfigurationProperty extends Object implements OriginProvider, Comparable<ConfigurationProperty>;\n// Interface that can be used to control configuration property source caches.\npublic interface ConfigurationPropertyCaching;\n// A configuration property name composed of elements separated by dots.\npublic final class ConfigurationPropertyName extends Object implements Comparable<ConfigurationPropertyName>;\n// The various forms that a non-indexed element value can take.\npublic static enum ConfigurationPropertyName.Form extends Enum<ConfigurationPropertyName.Form>;\n// Maintains a mapping of ConfigurationPropertyName aliases.\npublic final class ConfigurationPropertyNameAliases extends Object implements Iterable<ConfigurationPropertyName>;\n// A source of ConfigurationProperties.\n@FunctionalInterface public interface ConfigurationPropertySource;\n// Provides access to ConfigurationPropertySources.\npublic final class ConfigurationPropertySources extends Object;\n// The state of content from a ConfigurationPropertySource.\npublic enum ConfigurationPropertyState extends Enum<ConfigurationPropertyState>;\n// Exception thrown when ConfigurationPropertyName has invalid characters.\npublic class InvalidConfigurationPropertyNameException extends RuntimeException;\n// Exception thrown when a configuration property value is invalid.\npublic class InvalidConfigurationPropertyValueException extends RuntimeException;\n// A ConfigurationPropertySource with a fully Iterable set of entries.\npublic interface IterableConfigurationPropertySource extends ConfigurationPropertySource, Iterable<ConfigurationPropertyName>;\n// A ConfigurationPropertySource backed by a Map and using standard name mapping rules.\npublic class MapConfigurationPropertySource extends Object implements IterableConfigurationPropertySource;\n// Exception thrown when more than one mutually exclusive configuration property has been configured.\npublic class MutuallyExclusiveConfigurationPropertiesException extends RuntimeException;\n// Function used to determine if a ConfigurationPropertySource should be included when determining unbound elements.\npublic class UnboundElementsSourceFilter extends Object implements Function<ConfigurationPropertySource,Boolean>;\n", "des": "Sources for external configuration properties."}
{"index": 2304, "repo": "spring-boot-3.1.1", "code": "package convert\n\n// A specialization of FormattingConversionService configured by default with converters and formatters appropriate for most Spring Boot applications.\npublic class ApplicationConversionService extends org.springframework.format.support.FormattingConversionService;\n// Annotation that can be used to change the default unit used when converting a DataSize.\n@Target({FIELD,PARAMETER}) @Retention(RUNTIME) @Documented public @interface DataSizeUnit;\n// Declares a field or method parameter should be converted to collection using the specified delimiter.\n@Documented @Retention(RUNTIME) @Target({METHOD,FIELD,PARAMETER,ANNOTATION_TYPE}) public @interface Delimiter;\n// Annotation that can be used to indicate the format to use when converting a Duration.\n@Target({FIELD,PARAMETER}) @Retention(RUNTIME) @Documented public @interface DurationFormat;\n// Duration format styles.\npublic enum DurationStyle extends Enum<DurationStyle>;\n// Annotation that can be used to change the default unit used when converting a Duration.\n@Target({FIELD,PARAMETER}) @Retention(RUNTIME) @Documented public @interface DurationUnit;\n// Annotation that can be used to indicate the format to use when converting a Period.\n@Target({FIELD,PARAMETER}) @Retention(RUNTIME) @Documented public @interface PeriodFormat;\n// A standard set of Period units.\npublic enum PeriodStyle extends Enum<PeriodStyle>;\n// Annotation that can be used to change the default unit used when converting a Period.\n@Target({FIELD,PARAMETER}) @Retention(RUNTIME) @Documented public @interface PeriodUnit;\n", "des": "Support for type conversion."}
{"index": 2305, "repo": "spring-boot-3.1.1", "code": "package diagnostics\n\n// Abstract base class for most FailureAnalyzer implementations.\npublic abstract class AbstractFailureAnalyzer<T extends Throwable> extends Object implements FailureAnalyzer;\n// The result of analyzing a failure.\npublic class FailureAnalysis extends Object;\n// Reports a FailureAnalysis to the user.\n@FunctionalInterface public interface FailureAnalysisReporter;\n// A FailureAnalyzer is used to analyze a failure and provide diagnostic information that can be displayed to the user.\n@FunctionalInterface public interface FailureAnalyzer;\n// FailureAnalysisReporter that logs the failure analysis.\npublic final class LoggingFailureAnalysisReporter extends Object implements FailureAnalysisReporter;\n", "des": "Support for failure analysis and reporting."}
{"index": 2306, "repo": "spring-boot-3.1.1", "code": "package analyzer\n\n// Abstract base class for a FailureAnalyzer that handles some kind of injection failure.\npublic abstract class AbstractInjectionFailureAnalyzer<T extends Throwable> extends AbstractFailureAnalyzer<T>;\n// An AbstractFailureAnalyzer that performs analysis of failures caused by a BeanNotOfRequiredTypeException.\npublic class BeanNotOfRequiredTypeFailureAnalyzer extends AbstractFailureAnalyzer<org.springframework.beans.factory.BeanNotOfRequiredTypeException>;\n", "des": "Internal FailureAnalyzer implementations."}
{"index": 2307, "repo": "spring-boot-3.1.1", "code": "package env\n\n// PropertySource backed by a directory tree that contains files for each value.\npublic class ConfigTreePropertySource extends org.springframework.core.env.EnumerablePropertySource<Path> implements OriginLookup<String>;\n// Property source options.\npublic static enum ConfigTreePropertySource.Option extends Enum<ConfigTreePropertySource.Option>;\n// A value returned from the property source which exposes the contents of the property file.\npublic static interface ConfigTreePropertySource.Value extends CharSequence, org.springframework.core.io.InputStreamSource;\n// Allows for customization of the application's Environment prior to the application context being refreshed.\n@FunctionalInterface public interface EnvironmentPostProcessor;\n// SmartApplicationListener used to trigger EnvironmentPostProcessors registered in the spring.factories file.\npublic class EnvironmentPostProcessorApplicationListener extends Object implements org.springframework.context.event.SmartApplicationListener, org.springframework.core.Ordered;\n// Factory interface used by the EnvironmentPostProcessorApplicationListener to create the EnvironmentPostProcessor instances.\n@FunctionalInterface public interface EnvironmentPostProcessorsFactory;\n// OriginLookup backed by a Map containing OriginTrackedValues.\npublic final class OriginTrackedMapPropertySource extends org.springframework.core.env.MapPropertySource implements OriginLookup<String>;\n// Strategy to load '.properties' files into a PropertySource.\npublic class PropertiesPropertySourceLoader extends Object implements PropertySourceLoader;\n// Strategy interface located through SpringFactoriesLoader and used to load a PropertySource.\npublic interface PropertySourceLoader;\n// PropertySource that returns a random value for any property that starts with \"random.\".\npublic class RandomValuePropertySource extends org.springframework.core.env.PropertySource<Random>;\n// EnvironmentPostProcessor to add the RandomValuePropertySource.\npublic class RandomValuePropertySourceEnvironmentPostProcessor extends Object implements EnvironmentPostProcessor, org.springframework.core.Ordered;\n// An EnvironmentPostProcessor that parses JSON from spring.application.json or equivalently SPRING_APPLICATION_JSON and adds it as a map property source to the Environment.\npublic class SpringApplicationJsonEnvironmentPostProcessor extends Object implements EnvironmentPostProcessor, org.springframework.core.Ordered;\n", "des": "Spring Environment support."}
{"index": 2308, "repo": "spring-boot-3.1.1", "code": "package info\n\n// Provide build-related information such as group and artifact.\n@ImportRuntimeHints(org.springframework.boot.info.BuildProperties.BuildPropertiesRuntimeHints.class) public class BuildProperties extends InfoProperties;\n// Provide git-related information such as commit id and time.\n@ImportRuntimeHints(org.springframework.boot.info.GitProperties.GitPropertiesRuntimeHints.class) public class GitProperties extends InfoProperties;\n// Base class for components exposing unstructured data with dedicated methods for well known keys.\npublic class InfoProperties extends Object implements Iterable<InfoProperties.Entry>;\n// Property entry.\npublic static final class InfoProperties.Entry extends Object;\n// Information about the Java environment the application is running in.\npublic class JavaInfo extends Object;\n// Information about the Java Runtime Environment the application is running in.\npublic static class JavaInfo.JavaRuntimeEnvironmentInfo extends Object;\n// Information about the Java Vendor of the Java Runtime the application is running in.\npublic static class JavaInfo.JavaVendorInfo extends Object;\n// Information about the Java Virtual Machine the application is running in.\npublic static class JavaInfo.JavaVirtualMachineInfo extends Object;\n// Information about the Operating System the application is running on.\npublic class OsInfo extends Object;\n", "des": "Support for providing information about an application."}
{"index": 2309, "repo": "spring-boot-3.1.1", "code": "package jackson\n\n// @Component that provides JsonSerializer, JsonDeserializer or KeyDeserializer implementations to be registered with Jackson when JsonComponentModule is in use.\n@Target(TYPE) @Retention(RUNTIME) @Documented @Component public @interface JsonComponent;\n// The various scopes under which a serializer/deserializer can be registered.\npublic static enum JsonComponent.Scope extends Enum<JsonComponent.Scope>;\n// Spring Bean and Jackson Module to register @JsonComponent annotated beans.\npublic class JsonComponentModule extends com.fasterxml.jackson.databind.module.SimpleModule implements org.springframework.beans.factory.BeanFactoryAware, org.springframework.beans.factory.InitializingBean;\n// Provides a mixin class implementation that registers with Jackson when using JsonMixinModule.\n@Target(TYPE) @Retention(RUNTIME) @Documented public @interface JsonMixin;\n// Spring Bean and Jackson Module to find and register @JsonMixin-annotated classes.\npublic class JsonMixinModule extends com.fasterxml.jackson.databind.module.SimpleModule;\n// Provide the mapping of json mixin class to consider.\npublic final class JsonMixinModuleEntries extends Object;\n// Builder for JsonMixinModuleEntries.\npublic static class JsonMixinModuleEntries.Builder extends Object;\n// Helper base class for JsonDeserializer implementations that deserialize objects.\npublic abstract class JsonObjectDeserializer<T> extends com.fasterxml.jackson.databind.JsonDeserializer<T>;\n// Helper base class for JsonSerializer implementations that serialize objects.\npublic abstract class JsonObjectSerializer<T> extends com.fasterxml.jackson.databind.JsonSerializer<T>;\n", "des": "Custom enhancements and support for the Jackson project."}
{"index": 2310, "repo": "spring-boot-3.1.1", "code": "package jdbc\n\n// Enumeration of common database drivers.\npublic enum DatabaseDriver extends Enum<DatabaseDriver>;\n// Convenience class for building a DataSource.\npublic final class DataSourceBuilder<T extends DataSource> extends Object;\n// Unwraps a DataSource that may have been proxied or wrapped in a custom Wrapper such as DelegatingDataSource.\npublic final class DataSourceUnwrapper extends Object;\n// Connection details for embedded databases.\npublic enum EmbeddedDatabaseConnection extends Enum<EmbeddedDatabaseConnection>;\n// An enumeration of the available schema management options.\npublic enum SchemaManagement extends Enum<SchemaManagement>;\n// Strategy interface to determine the SchemaManagement of a DataSource.\n@FunctionalInterface public interface SchemaManagementProvider;\n// RuntimeException thrown from DataSourceBuilder when an unsupported property is used.\npublic class UnsupportedDataSourcePropertyException extends RuntimeException;\n// Strategy interface used to wrap an XADataSource enrolling it with a JTA TransactionManager.\n@FunctionalInterface public interface XADataSourceWrapper;\n", "des": "Support for Java Database Connectivity (JDBC)."}
{"index": 2311, "repo": "spring-boot-3.1.1", "code": "package init\n\n// InitializingBean that performs DataSource initialization using schema (DDL) and data (DML) scripts.\npublic class DataSourceScriptDatabaseInitializer extends AbstractScriptDatabaseInitializer;\n// Utility class that can resolve placeholder text with the actual DatabaseDriver platform.\npublic class PlatformPlaceholderDatabaseDriverResolver extends Object;\n", "des": "Support for initialization of an SQL database using a JDBC DataSource."}
{"index": 2312, "repo": "spring-boot-3.1.1", "code": "package metadata\n\n// A base DataSourcePoolMetadata implementation.\npublic abstract class AbstractDataSourcePoolMetadata<T extends DataSource> extends Object implements DataSourcePoolMetadata;\n// DataSourcePoolMetadata for an Apache Commons DBCP2 DataSource.\npublic class CommonsDbcp2DataSourcePoolMetadata extends AbstractDataSourcePoolMetadata<org.apache.commons.dbcp2.BasicDataSource>;\n// A DataSourcePoolMetadataProvider implementation that returns the first DataSourcePoolMetadata that is found by one of its delegate.\npublic class CompositeDataSourcePoolMetadataProvider extends Object implements DataSourcePoolMetadataProvider;\n// Provides access meta-data that is commonly available from most pooled DataSource implementations.\npublic interface DataSourcePoolMetadata;\n// Provide a DataSourcePoolMetadata based on a DataSource.\n@FunctionalInterface public interface DataSourcePoolMetadataProvider;\n// DataSourcePoolMetadata for a Hikari DataSource.\npublic class HikariDataSourcePoolMetadata extends AbstractDataSourcePoolMetadata<com.zaxxer.hikari.HikariDataSource>;\n// DataSourcePoolMetadata for an Oracle UCP DataSource.\npublic class OracleUcpDataSourcePoolMetadata extends AbstractDataSourcePoolMetadata<oracle.ucp.jdbc.PoolDataSource>;\n// DataSourcePoolMetadata for a Tomcat DataSource.\npublic class TomcatDataSourcePoolMetadata extends AbstractDataSourcePoolMetadata<org.apache.tomcat.jdbc.pool.DataSource>;\n", "des": "Support for accessing JDBC DataSource metadata."}
{"index": 2313, "repo": "spring-boot-3.1.1", "code": "package jms\n\n// Strategy interface used to wrap a JMS XAConnectionFactory enrolling it with a JTA TransactionManager.\n@FunctionalInterface public interface XAConnectionFactoryWrapper;\n", "des": "Support for Java Message Service (JMS)."}
{"index": 2314, "repo": "spring-boot-3.1.1", "code": "package json\n\n// Base class for parsers wrapped or implemented in this package.\npublic abstract class AbstractJsonParser extends Object implements JsonParser;\n// Really basic JSON parser for when you have nothing else available.\npublic class BasicJsonParser extends AbstractJsonParser;\n// Thin wrapper to adapt Gson to a JsonParser.\npublic class GsonJsonParser extends AbstractJsonParser;\n// Thin wrapper to adapt Jackson 2 ObjectMapper to JsonParser.\npublic class JacksonJsonParser extends AbstractJsonParser;\n// IllegalArgumentException thrown when source JSON is invalid.\npublic class JsonParseException extends IllegalArgumentException;\n// Parser that can read JSON formatted strings into Maps or Lists.\npublic interface JsonParser;\n// Factory to create a JsonParser.\npublic abstract class JsonParserFactory extends Object;\n", "des": "Support for parsing JSON."}
{"index": 2315, "repo": "spring-boot-3.1.1", "code": "package logging\n\n// Abstract base class for LoggingSystem implementations.\npublic abstract class AbstractLoggingSystem extends LoggingSystem;\n// Maintains a mapping between native levels and LogLevel.\nprotected static class AbstractLoggingSystem.LogLevels<T> extends Object;\n// Deferred Log that can be used to store messages that shouldn't be written until the logging system is fully initialized.\npublic class DeferredLog extends Object implements org.apache.commons.logging.Log;\n// Factory that can be used to create multiple DeferredLog instances that will switch over when appropriate.\n@FunctionalInterface public interface DeferredLogFactory;\n// A DeferredLogFactory implementation that manages a collection DeferredLog instances.\npublic class DeferredLogs extends Object implements DeferredLogFactory;\n// A reference to a log output file.\npublic class LogFile extends Object;\n// Immutable class that represents the configuration of a LoggingSystem's logger.\npublic final class LoggerConfiguration extends Object;\n// Supported logger configurations scopes.\npublic static enum LoggerConfiguration.ConfigurationScope extends Enum<LoggerConfiguration.ConfigurationScope>;\n// Logger level configuration.\npublic static final class LoggerConfiguration.LevelConfiguration extends Object;\n// A single logger group.\npublic final class LoggerGroup extends Object;\n// Logger groups configured through the Spring Environment.\npublic final class LoggerGroups extends Object implements Iterable<LoggerGroup>;\n// Context passed to the LoggingSystem during initialization.\npublic class LoggingInitializationContext extends Object;\n// Common abstraction over logging systems.\npublic abstract class LoggingSystem extends Object;\n// Factory class used by LoggingSystem.get(ClassLoader) to find an actual implementation.\npublic interface LoggingSystemFactory;\n// Utility to set system properties that can later be used by log configuration files.\npublic class LoggingSystemProperties extends Object;\n// Logging levels supported by a LoggingSystem.\npublic enum LogLevel extends Enum<LogLevel>;\n", "des": "Support and abstractions across several logging libraries."}
{"index": 2316, "repo": "spring-boot-3.1.1", "code": "package java\n\n// LoggingSystem for java.util.logging.\npublic class JavaLoggingSystem extends AbstractLoggingSystem;\n// LoggingSystemFactory that returns JavaLoggingSystem if possible.\n@Order(2147483647) public static class JavaLoggingSystem.Factory extends Object implements LoggingSystemFactory;\n// Simple 'Java Logging' Formatter.\npublic class SimpleFormatter extends Formatter;\n", "des": "Support for 'Java Util Logging'."}
{"index": 2317, "repo": "spring-boot-3.1.1", "code": "package log4j2\n\n// Log4j2 LogEventPatternConverter colors output using the AnsiOutput class.\n@Plugin(name=\"color\", category=\"Converter\") public final class ColorConverter extends org.apache.logging.log4j.core.pattern.LogEventPatternConverter;\n// ThrowablePatternConverter that adds some additional whitespace around the stack trace.\n@Plugin(name=\"ExtendedWhitespaceThrowablePatternConverter\", category=\"Converter\") public final class ExtendedWhitespaceThrowablePatternConverter extends org.apache.logging.log4j.core.pattern.ThrowablePatternConverter;\n// LoggingSystem for Log4j 2.\npublic class Log4J2LoggingSystem extends AbstractLoggingSystem;\n// LoggingSystemFactory that returns Log4J2LoggingSystem if possible.\n@Order(2147483647) public static class Log4J2LoggingSystem.Factory extends Object implements LoggingSystemFactory;\n// Spring Boot ConfigurationFactory that customizes Log4J2's default configuration to: Prevent logger warnings from being printed when the application first starts.\n@Plugin(name=\"SpringBootConfigurationFactory\", category=\"ConfigurationFactory\") public class SpringBootConfigurationFactory extends org.apache.logging.log4j.core.config.ConfigurationFactory;\n// Spring Boot PropertySource that disables Log4j2's shutdown hook.\npublic class SpringBootPropertySource extends Object implements org.apache.logging.log4j.util.PropertySource;\n// ThrowablePatternConverter that adds some additional whitespace around the stack trace.\n@Plugin(name=\"WhitespaceThrowablePatternConverter\", category=\"Converter\") public final class WhitespaceThrowablePatternConverter extends org.apache.logging.log4j.core.pattern.ThrowablePatternConverter;\n", "des": "Support for the Log4j 2 logging library."}
{"index": 2318, "repo": "spring-boot-3.1.1", "code": "package logback\n\n// Logback CompositeConverter colors output using the AnsiOutput class.\npublic class ColorConverter extends ch.qos.logback.core.pattern.CompositeConverter<ch.qos.logback.classic.spi.ILoggingEvent>;\n// ExtendedThrowableProxyConverter that adds some additional whitespace around the stack trace.\npublic class ExtendedWhitespaceThrowableProxyConverter extends ch.qos.logback.classic.pattern.ExtendedThrowableProxyConverter;\n// LoggingSystem for logback.\npublic class LogbackLoggingSystem extends AbstractLoggingSystem implements org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor;\n// LoggingSystemFactory that returns LogbackLoggingSystem if possible.\n@Order(2147483647) public static class LogbackLoggingSystem.Factory extends Object implements LoggingSystemFactory;\n// LoggingSystemProperties for Logback.\npublic class LogbackLoggingSystemProperties extends LoggingSystemProperties;\n// Logback Configurator, registered through META-INF/services, that sets the root log level to Level.INFO.\npublic class RootLogLevelConfigurator extends ch.qos.logback.core.spi.ContextAwareBase implements ch.qos.logback.classic.spi.Configurator;\n// ThrowableProxyConverter that adds some additional whitespace around the stack trace.\npublic class WhitespaceThrowableProxyConverter extends ch.qos.logback.classic.pattern.ThrowableProxyConverter;\n", "des": "Support for the Logback logging library."}
{"index": 2319, "repo": "spring-boot-3.1.1", "code": "package origin\n\n// Interface that uniquely represents the origin of an item.\npublic interface Origin;\n// An interface that may be implemented by an object that can lookup Origin information from a given key.\n@FunctionalInterface public interface OriginLookup<K>;\n// Interface to provide access to the origin of an item.\n@FunctionalInterface public interface OriginProvider;\n// Decorator that can be used to add Origin information to a Resource or WritableResource.\npublic class OriginTrackedResource extends Object implements org.springframework.core.io.Resource, OriginProvider;\n// Variant of OriginTrackedResource for WritableResource instances.\npublic static class OriginTrackedResource.OriginTrackedWritableResource extends OriginTrackedResource implements org.springframework.core.io.WritableResource;\n// A wrapper for an Object value and Origin.\npublic class OriginTrackedValue extends Object implements OriginProvider;\n// Origin from a PropertySource.\npublic class PropertySourceOrigin extends Object implements Origin;\n// Origin for an item loaded from the system environment.\npublic class SystemEnvironmentOrigin extends Object implements Origin;\n// Origin for an item loaded from a text resource.\npublic class TextResourceOrigin extends Object implements Origin;\n// A location (line and column number) within the resource.\npublic static final class TextResourceOrigin.Location extends Object;\n", "des": "Support for item origin tracking."}
{"index": 2320, "repo": "spring-boot-3.1.1", "code": "package jpa\n\n// Convenient builder for JPA EntityManagerFactory instances.\npublic class EntityManagerFactoryBuilder extends Object;\n", "des": "JPA Support classes."}
{"index": 2321, "repo": "spring-boot-3.1.1", "code": "package hibernate\n\n// Hibernate ImplicitNamingStrategy that follows Spring recommended naming conventions.\npublic class SpringImplicitNamingStrategy extends org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl;\n// Generic Hibernate AbstractJtaPlatform implementation that simply resolves the JTA UserTransaction and TransactionManager from the Spring-configured JtaTransactionManager implementation.\npublic class SpringJtaPlatform extends org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform;\n", "des": "Hibernate Support classes."}
{"index": 2322, "repo": "spring-boot-3.1.1", "code": "package r2dbc\n\n// Builder for ConnectionFactory.\npublic final class ConnectionFactoryBuilder extends Object;\n// Connection details for embedded databases compatible with R2DBC.\npublic enum EmbeddedDatabaseConnection extends Enum<EmbeddedDatabaseConnection>;\n// ConnectionFactory capable of providing access to the ConnectionFactoryOptions from which it was built.\npublic class OptionsCapableConnectionFactory extends Object implements io.r2dbc.spi.Wrapped<io.r2dbc.spi.ConnectionFactory>, io.r2dbc.spi.ConnectionFactory;\n", "des": "Support for R2DBC connectivity."}
{"index": 2323, "repo": "spring-boot-3.1.1", "code": "package init\n\n// An InitializingBean that initializes a database represented by an R2DBC ConnectionFactory.\npublic class R2dbcScriptDatabaseInitializer extends AbstractScriptDatabaseInitializer;\n", "des": "Support for initialization of an SQL database using an R2DBC ConnectionFactory."}
{"index": 2324, "repo": "spring-boot-3.1.1", "code": "package reactor\n\n// EnvironmentPostProcessor to enable the Reactor Debug Agent if available.\npublic class DebugAgentEnvironmentPostProcessor extends Object implements EnvironmentPostProcessor, org.springframework.core.Ordered;\n", "des": "Support classes for Reactor integration."}
{"index": 2325, "repo": "spring-boot-3.1.1", "code": "package context\n\n// ApplicationContextInitializer that sets Environment properties for the ports that RSocketServer servers are actually listening on.\npublic class RSocketPortInfoApplicationContextInitializer extends Object implements org.springframework.context.ApplicationContextInitializer<org.springframework.context.ConfigurableApplicationContext>;\n// Bootstrap an RSocketServer and start it with the application context.\npublic class RSocketServerBootstrap extends Object implements org.springframework.context.ApplicationEventPublisherAware, org.springframework.context.SmartLifecycle;\n// Event to be published after the application context is refreshed and the RSocketServer is ready.\npublic class RSocketServerInitializedEvent extends org.springframework.context.ApplicationEvent;\n", "des": "RSocket integrations with Spring Framework's ApplicationContext."}
{"index": 2326, "repo": "spring-boot-3.1.1", "code": "package messaging\n\n// Callback interface that can be used to customize codecs configuration for an RSocket client and/or server with RSocketStrategies.\n@FunctionalInterface public interface RSocketStrategiesCustomizer;\n", "des": "Support for RSocket-based messaging."}
{"index": 2327, "repo": "spring-boot-3.1.1", "code": "package netty\n\n// RSocketServer that is based on a Reactor Netty server.\npublic class NettyRSocketServer extends Object implements RSocketServer;\n// RSocketServerFactory that can be used to create RSocketServers backed by Netty.\npublic class NettyRSocketServerFactory extends Object implements RSocketServerFactory, ConfigurableRSocketServerFactory;\n", "des": "Reactor Netty based RSocket server implementation."}
{"index": 2328, "repo": "spring-boot-3.1.1", "code": "package server\n\n// A configurable RSocketServerFactory.\npublic interface ConfigurableRSocketServerFactory;\n// Simple interface that represents a fully configured RSocket server.\npublic interface RSocketServer;\n// Choice of transport protocol for the RSocket server.\npublic static enum RSocketServer.Transport extends Enum<RSocketServer.Transport>;\n// Callback interface that can be used to customize a RSocketServer.\n@FunctionalInterface public interface RSocketServerCustomizer;\n// Exceptions thrown by an RSocket server.\npublic class RSocketServerException extends RuntimeException;\n// Factory interface that can be used to create a reactive RSocketServer.\n@FunctionalInterface public interface RSocketServerFactory;\n", "des": "Support for RSocket servers."}
{"index": 2329, "repo": "spring-boot-3.1.1", "code": "package reactive\n\n// ApplicationContext backed ServerWebExchangeMatcher.\npublic abstract class ApplicationContextServerWebExchangeMatcher<C> extends Object implements org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher;\n", "des": "Classes and utilities for reactive Spring Security."}
{"index": 2330, "repo": "spring-boot-3.1.1", "code": "package servlet\n\n// ApplicationContext backed RequestMatcher.\npublic abstract class ApplicationContextRequestMatcher<C> extends Object implements org.springframework.security.web.util.matcher.RequestMatcher;\n", "des": "Classes and utilities for Servlet-based Spring Security."}
{"index": 2331, "repo": "spring-boot-3.1.1", "code": "package init\n\n// Base class for an InitializingBean that performs SQL database initialization using schema (DDL) and data (DML) scripts.\npublic abstract class AbstractScriptDatabaseInitializer extends Object implements org.springframework.context.ResourceLoaderAware, org.springframework.beans.factory.InitializingBean;\n// Scripts to be used to initialize the database.\npublic static class AbstractScriptDatabaseInitializer.Scripts extends Object implements Iterable<org.springframework.core.io.Resource>;\n// Supported database initialization modes.\npublic enum DatabaseInitializationMode extends Enum<DatabaseInitializationMode>;\n// Settings for initializing an SQL database.\npublic class DatabaseInitializationSettings extends Object;\n", "des": "Support for initialization of an SQL database."}
{"index": 2332, "repo": "spring-boot-3.1.1", "code": "package dependency\n\n// Base class for DatabaseInitializerDetectors that detect database initializer beans by type.\npublic abstract class AbstractBeansOfTypeDatabaseInitializerDetector extends Object implements DatabaseInitializerDetector;\n// Base class for DependsOnDatabaseInitializationDetectors that detect by type beans that depend upon database initialization.\npublic abstract class AbstractBeansOfTypeDependsOnDatabaseInitializationDetector extends Object implements DependsOnDatabaseInitializationDetector;\n// Configures beans that depend upon SQL database initialization with dependencies upon beans that perform database initialization.\npublic class DatabaseInitializationDependencyConfigurer extends Object implements org.springframework.context.annotation.ImportBeanDefinitionRegistrar;\n// Detects beans that initialize an SQL database.\npublic interface DatabaseInitializerDetector extends org.springframework.core.Ordered;\n// Indicate that a bean's creation and initialization depends upon database initialization having completed.\n@Target({TYPE,METHOD}) @Retention(RUNTIME) @Documented public @interface DependsOnDatabaseInitialization;\n// Detects beans that depend on database initialization.\npublic interface DependsOnDatabaseInitializationDetector;\n", "des": "Infrastructure for establishing database initialization bean dependencies."}
{"index": 2333, "repo": "spring-boot-3.1.1", "code": "package ssl\n\n// Default SslBundleRegistry implementation.\npublic class DefaultSslBundleRegistry extends Object implements SslBundleRegistry, SslBundles;\n// Exception indicating that an SslBundle was referenced with a name that does not match any registered bundle.\npublic class NoSuchSslBundleException extends RuntimeException;\n// A bundle of trust material that can be used to establish an SSL connection.\npublic interface SslBundle;\n// A reference to a single key obtained via SslBundle.\npublic interface SslBundleKey;\n// Interface that can be used to register an SslBundle for a given name.\npublic interface SslBundleRegistry;\n// A managed set of SslBundle instances that can be retrieved by name.\npublic interface SslBundles;\n// A bundle of key and trust managers that can be used to establish an SSL connection.\npublic interface SslManagerBundle;\n// Configuration options that should be applied when establishing an SSL connection.\npublic interface SslOptions;\n// A bundle of key and trust stores that can be used to establish an SSL connection.\npublic interface SslStoreBundle;\n", "des": "Management of trust material that can be used to establish an SSL connection."}
{"index": 2334, "repo": "spring-boot-3.1.1", "code": "package jks\n\n// SslStoreBundle backed by a Java keystore.\npublic class JksSslStoreBundle extends Object implements SslStoreBundle;\n// Details for an individual trust or key store in a JksSslStoreBundle.\npublic record JksSslStoreDetails(String type, String provider, String location, String password) extends Record;\n", "des": "SSL trust material provider for Java KeyStores."}
{"index": 2335, "repo": "spring-boot-3.1.1", "code": "package pem\n\n// SslStoreBundle backed by PEM-encoded certificates and private keys.\npublic class PemSslStoreBundle extends Object implements SslStoreBundle;\n// Details for an individual trust or key store in a PemSslStoreBundle.\npublic record PemSslStoreDetails(String type, String certificate, String privateKey, String privateKeyPassword) extends Record;\n", "des": "SSL trust material provider for PEM-encoded certificates."}
{"index": 2336, "repo": "spring-boot-3.1.1", "code": "package system\n\n// Provides access to the application home directory.\npublic class ApplicationHome extends Object;\n// An application process ID.\npublic class ApplicationPid extends Object;\n// Provides access to an application specific temporary directory.\npublic class ApplicationTemp extends Object;\n// Known Java versions.\npublic enum JavaVersion extends Enum<JavaVersion>;\n// Access to system properties.\npublic final class SystemProperties extends Object;\n", "des": "General system support classes."}
{"index": 2337, "repo": "spring-boot-3.1.1", "code": "package task\n\n// Builder that can be used to configure and create a TaskExecutor.\npublic class TaskExecutorBuilder extends Object;\n// Callback interface that can be used to customize a ThreadPoolTaskExecutor.\n@FunctionalInterface public interface TaskExecutorCustomizer;\n// Builder that can be used to configure and create a TaskScheduler.\npublic class TaskSchedulerBuilder extends Object;\n// Callback interface that can be used to customize a ThreadPoolTaskScheduler.\n@FunctionalInterface public interface TaskSchedulerCustomizer;\n", "des": "Utilities and classes related to task execution and scheduling."}
{"index": 2338, "repo": "spring-boot-3.1.1", "code": "package classreading\n\n// Caching implementation of the MetadataReaderFactory interface backed by a ConcurrentReferenceHashMap, caching MetadataReader per Spring Resource handle (i.e.\npublic class ConcurrentReferenceCachingMetadataReaderFactory extends org.springframework.core.type.classreading.SimpleMetadataReaderFactory;\n", "des": "Support classes for reading annotation and class-level metadata."}
{"index": 2339, "repo": "spring-boot-3.1.1", "code": "package util\n\n// Simple factory used to instantiate objects by injecting available parameters.\npublic class Instantiator<T> extends Object;\n// Callback used to register available parameters.\npublic static interface Instantiator.AvailableParameters;\n// Strategy for handling a failure that occurs when instantiating a type.\npublic static interface Instantiator.FailureHandler;\n// Utility that can be used to invoke lambdas in a safe way.\npublic final class LambdaSafe extends Object;\n// Represents a single callback that can be invoked in a lambda safe way.\npublic static final class LambdaSafe.Callback<C,A> extends LambdaSafe.LambdaSafeCallback<C,A,LambdaSafe.Callback<C,A>>;\n// Represents a collection of callbacks that can be invoked in a lambda safe way.\npublic static final class LambdaSafe.Callbacks<C,A> extends LambdaSafe.LambdaSafeCallback<C,A,LambdaSafe.Callbacks<C,A>>;\n// The result of a callback which may be a value, null or absent entirely if the callback wasn't suitable.\npublic static final class LambdaSafe.InvocationResult<R> extends Object;\n// Abstract base class for lambda safe callbacks.\nprotected abstract static class LambdaSafe.LambdaSafeCallback<C,A,SELF extends LambdaSafe.LambdaSafeCallback<C,A,SELF>> extends Object;\n", "des": "Contains miscellaneous utility classes."}
{"index": 2340, "repo": "spring-boot-3.1.1", "code": "package validation\n\n// ObjectFactory that can be used to create a MessageInterpolator.\npublic class MessageInterpolatorFactory extends Object implements org.springframework.beans.factory.ObjectFactory<jakarta.validation.MessageInterpolator>;\n", "des": "Utilities and classes related to validation."}
{"index": 2341, "repo": "spring-boot-3.1.1", "code": "package beanvalidation\n\n// Custom MethodValidationPostProcessor that applies exclusion filters.\npublic class FilteredMethodValidationPostProcessor extends org.springframework.validation.beanvalidation.MethodValidationPostProcessor;\n// A filter for excluding types from method validation.\npublic interface MethodValidationExcludeFilter;\n", "des": "Utilities and classes related to bean validation."}
