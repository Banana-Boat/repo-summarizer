{"index": 8759, "repo": "spring-boot-loader-3.1.1", "code": "public interface JarMode {\n\t// Returns if this accepts and can run the given mode.\n\tboolean accepts(String mode);\n\t// Run the jar in the given mode.\n\tvoid run(String mode, String[] args);\n}", "des": "Interface registered in spring.factories to provides extended 'jarmode' support."}
{"index": 8760, "repo": "spring-boot-loader-3.1.1", "code": "public interface RandomAccessData {\n\t// Returns an InputStream that can be used to read the underlying data.\n\tInputStream getInputStream();\n\t// Returns the size of the data.\n\tlong getSize();\n\t// Returns a new RandomAccessData for a specific subsection of this data.\n\tRandomAccessData getSubsection(long offset, long length);\n\t// Reads all the data and returns it as a byte array.\n\tbyte[] read();\n\t// Reads the length bytes of data starting at the given offset.\n\tbyte[] read(long offset, long length);\n}", "des": "Interface that provides read-only random access to some underlying data."}
{"index": 8761, "repo": "spring-boot-loader-3.1.1", "code": "public class WarLauncher extends ExecutableArchiveLauncher {\n\t// Return the path prefix for entries in the archive.\n\tprotected String getArchiveEntryPathPrefix();\n\t// Determine if the specified entry is a nested item that should be added to the classpath.\n\tboolean isNestedArchive(Archive.Entry entry);\n\t// Return if post-processing needs to be applied to the archives.\n\tprotected boolean isPostProcessingClassPathArchives();\n\tstatic void main(String[] args);\n}", "des": "Launcher for WAR based archives."}
{"index": 8762, "repo": "spring-ws-security-4.0.5", "code": "public abstract class AbstractCallbackHandler extends Object implements CallbackHandler {\n\t// Iterates over the given callbacks, and calls handleInternal for each of them.\n\tfinal void handle(Callback[] callbacks);\n\t// Template method that should be implemented by subclasses.\n\tprotected abstract void handleInternal(Callback callback);\n}", "des": "Abstract implementation of a CallbackHandler."}
{"index": 8763, "repo": "spring-ws-security-4.0.5", "code": "public abstract class KeyStoreUtils extends Object {\n\t// Loads the key store indicated by system properties.\n\tstatic KeyStore loadDefaultKeyStore();\n\t// Loads a default trust store.\n\tstatic KeyStore loadDefaultTrustStore();\n}", "des": "Generic utility methods for dealing with KeyStore objects."}
{"index": 8764, "repo": "spring-ws-security-4.0.5", "code": "public class SimplePasswordValidationCallbackHandler extends AbstractWsPasswordCallbackHandler implements org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\t// Invoked when the callback has a WSPasswordCallback.USERNAME_TOKEN usage.\n\tvoid handleUsernameToken(org.apache.wss4j.common.ext.WSPasswordCallback callback);\n\t// Sets the users to validate against.\n\tvoid setUsers(Properties users);\n\tvoid setUsersMap(Map<String,String> users);\n}", "des": "Simple callback handler that validates passwords against a in-memory Properties object."}
{"index": 8765, "repo": "spring-ws-security-4.0.5", "code": "public abstract class WsSecurityFaultException extends WsSecurityException {\n\t// Returns the fault actor for the exception.\n\tString getFaultActor();\n\t// Returns the fault code for the exception.\n\tQName getFaultCode();\n\t// Returns the fault string for the exception.\n\tString getFaultString();\n}", "des": "Exception indicating that a WS-Security executions should result in a SOAP Fault."}
{"index": 8766, "repo": "slf4j-ext-2.0.7", "code": "public enum DurationUnit extends Enum<DurationUnit> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DurationUnit valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DurationUnit[] values();\n}", "des": "An enum of supported time units."}
{"index": 8767, "repo": "slf4j-ext-2.0.7", "code": "public class JavassistHelper extends Object {\n\t// Return javassist source snippet which lists all the parameters and their values.\n\tstatic String getSignature(javassist.CtBehavior method);\n\t// Create a javassist source snippet which either is empty (for anything which does not return a value) or an explanatory text around the $_ javassist return value variable.\n\tstatic String returnValue(javassist.CtBehavior method);\n}", "des": "Helper methods for Javassist functionality."}
{"index": 8768, "repo": "slf4j-ext-2.0.7", "code": "public class LocLogger extends LoggerWrapper implements Logger {\n\t// Log a localized message at the DEBUG level.\n\tvoid debug(Enum<?> key, Object... args);\n\t// Log a localized message at the ERROR level.\n\tvoid error(Enum<?> key, Object... args);\n\t// Log a localized message at the INFO level.\n\tvoid info(Enum<?> key, Object... args);\n\t// Log a localized message at the TRACE level.\n\tvoid trace(Enum<?> key, Object... args);\n\t// Log a localized message at the WARN level.\n\tvoid warn(Enum<?> key, Object... args);\n}", "des": "A logger specialized in localized logging."}
{"index": 8769, "repo": "slf4j-ext-2.0.7", "code": "public class LocLoggerFactory extends Object {\n\t// Get a new LocLogger instance by class.\n\tLocLogger getLocLogger(Class<?> clazz);\n\t// Get an LocLogger instance by name.\n\tLocLogger getLocLogger(String name);\n}", "des": "This class is essentially a wrapper around an LoggerFactory producing LocLogger instances."}
{"index": 8770, "repo": "slf4j-ext-2.0.7", "code": "public class XLoggerFactory extends Object {\n\t// Get a new XLogger instance by class.\n\tstatic XLogger getXLogger(Class<?> clazz);\n\t// Get an XLogger instance by name.\n\tstatic XLogger getXLogger(String name);\n}", "des": "This class is essentially a wrapper around an LoggerFactory producing XLogger instances."}
{"index": 8771, "repo": "spring-webmvc-6.0.11", "code": "public abstract class AbstractLocaleContextResolver extends AbstractLocaleResolver implements LocaleContextResolver {\n\t// Get the default TimeZone that this resolver is supposed to fall back to, if any.\n\tTimeZone getDefaultTimeZone();\n\t// Set a default TimeZone that this resolver will return if no other time zone is found.\n\tvoid setDefaultTimeZone(TimeZone defaultTimeZone);\n}", "des": "Abstract base class for LocaleContextResolver implementations."}
{"index": 8772, "repo": "spring-webmvc-6.0.11", "code": "public abstract class AbstractLocaleResolver extends Object implements LocaleResolver {\n\t// Get the default Locale that this resolver is supposed to fall back to, if any.\n\tprotected Locale getDefaultLocale();\n\t// Set a default Locale that this resolver will return if no other locale is found.\n\tvoid setDefaultLocale(Locale defaultLocale);\n}", "des": "Abstract base class for LocaleResolver implementations."}
{"index": 8773, "repo": "spring-webmvc-6.0.11", "code": "public abstract class AbstractRequestCondition<T extends AbstractRequestCondition<T>> extends Object implements RequestCondition<T> {\n\tboolean equals(Object other);\n\t// Return the discrete items a request condition is composed of.\n\tprotected abstract Collection<?> getContent();\n\t// The notation to use when printing discrete items of content.\n\tprotected abstract String getToStringInfix();\n\t// Indicates whether this condition is empty, i.e.\n\tboolean isEmpty();\n}", "des": "A base class for RequestCondition types providing implementations of AbstractRequestCondition.equals(Object), AbstractRequestCondition.hashCode(), and AbstractRequestCondition.toString()."}
{"index": 8774, "repo": "spring-webmvc-6.0.11", "code": "public abstract class AbstractVersionStrategy extends Object implements VersionStrategy {\n\t// Add a version to the given request path.\n\tString addVersion(String requestPath, String version);\n\t// Extract the resource version from the request path.\n\tString extractVersion(String requestPath);\n\tVersionPathStrategy getVersionPathStrategy();\n\t// Remove the version from the request path.\n\tString removeVersion(String requestPath, String version);\n}", "des": "Abstract base class for VersionStrategy implementations."}
{"index": 8775, "repo": "spring-webmvc-6.0.11", "code": "protected static class AbstractVersionStrategy.FileNameVersionPathStrategy extends Object implements VersionPathStrategy {\n\t// Add a version to the given request path.\n\tString addVersion(String requestPath, String version);\n\t// Extract the resource version from the request path.\n\tString extractVersion(String requestPath);\n\t// Remove the version from the request path.\n\tString removeVersion(String requestPath, String version);\n}", "des": "File name-based VersionPathStrategy, e.g."}
{"index": 8776, "repo": "spring-webmvc-6.0.11", "code": "protected static class AbstractVersionStrategy.PrefixVersionPathStrategy extends Object implements VersionPathStrategy {\n\t// Add a version to the given request path.\n\tString addVersion(String path, String version);\n\t// Extract the resource version from the request path.\n\tString extractVersion(String requestPath);\n\t// Remove the version from the request path.\n\tString removeVersion(String requestPath, String version);\n}", "des": "A prefix-based VersionPathStrategy, e.g."}
{"index": 8777, "repo": "spring-webmvc-6.0.11", "code": "public abstract class AbstractXlsxStreamingView extends AbstractXlsxView {\n\t// This implementation creates a SXSSFWorkbook for streaming the XLSX format.\n\tprotected org.apache.poi.xssf.streaming.SXSSFWorkbook createWorkbook(Map<String,Object> model, HttpServletRequest request);\n\t// This implementation disposes of the SXSSFWorkbook when done with rendering.\n\tprotected void renderWorkbook(org.apache.poi.ss.usermodel.Workbook workbook, HttpServletResponse response);\n}", "des": "Convenient superclass for Excel document views in the Office 2007 XLSX format, using POI's streaming variant."}
{"index": 8778, "repo": "spring-webmvc-6.0.11", "code": "public interface AsyncServerResponse extends ServerResponse {\n\t// Blocks indefinitely until the future response is obtained.\n\tServerResponse block();\n\t// Create a AsyncServerResponse with the given asynchronous response.\n\tstatic AsyncServerResponse create(Object asyncResponse);\n\t// Create a (built) response with the given asynchronous response.\n\tstatic AsyncServerResponse create(Object asyncResponse, Duration timeout);\n}", "des": "Asynchronous subtype of ServerResponse that exposes the future response."}
{"index": 8779, "repo": "spring-webmvc-6.0.11", "code": "public class BeanNameViewResolver extends org.springframework.web.context.support.WebApplicationObjectSupport implements ViewResolver, org.springframework.core.Ordered {\n\tint getOrder();\n\t// Resolve the given view by name.\n\tView resolveViewName(String viewName, Locale locale);\n\t// Specify the order value for this ViewResolver bean.\n\tvoid setOrder(int order);\n}", "des": "A simple implementation of ViewResolver that interprets a view name as a bean name in the current application context, i.e."}
{"index": 8780, "repo": "spring-webmvc-6.0.11", "code": "public class BindErrorsTag extends HtmlEscapingAwareTag {\n\tint doEndTag();\n\tvoid doFinally();\n\t// Called by doStartTag to perform the actual work.\n\tprotected final int doStartTagInternal();\n\t// Retrieve the Errors instance that this tag is currently bound to.\n\tfinal org.springframework.validation.Errors getErrors();\n\t// Return the name of the bean that this tag checks.\n\tString getName();\n\t// Set the name of the bean that this tag should check.\n\tvoid setName(String name);\n}", "des": "This <hasBindErrors> tag provides an Errors instance in case of bind errors."}
{"index": 8781, "repo": "spring-webmvc-6.0.11", "code": "public class CachingResourceTransformer extends Object implements ResourceTransformer {\n\t// Return the configured Cache.\n\torg.springframework.cache.Cache getCache();\n\t// Transform the given resource.\n\torg.springframework.core.io.Resource transform(HttpServletRequest request, org.springframework.core.io.Resource resource, ResourceTransformerChain transformerChain);\n}", "des": "A ResourceTransformer that checks a Cache to see if a previously transformed resource exists in the cache and returns it if found, and otherwise delegates to the resolver chain and saves the result in the cache."}
{"index": 8782, "repo": "spring-webmvc-6.0.11", "code": "public class CheckboxesTag extends AbstractMultiCheckedElementTag {\n\t// Return the type of the HTML input element to generate: \"checkbox\" or \"radio\".\n\tprotected String getInputType();\n\t// Renders the 'input type=\"radio\"' element with the configured AbstractMultiCheckedElementTag.setItems(Object) values.\n\tprotected int writeTagContent(TagWriter tagWriter);\n}", "des": "The <checkboxes> tag renders multiple HTML 'input' tags with type 'checkbox'."}
{"index": 8783, "repo": "spring-webmvc-6.0.11", "code": "public class CheckboxTag extends AbstractSingleCheckedElementTag {\n\t// Return the type of the HTML input element to generate: \"checkbox\" or \"radio\".\n\tprotected String getInputType();\n\t// Renders the 'input(radio)' element with the configured value.\n\tprotected int writeTagContent(TagWriter tagWriter);\n\t// Write the details for the given primary tag: i.e.\n\tprotected void writeTagDetails(TagWriter tagWriter);\n}", "des": "The <checkbox> tag renders an HTML 'input' tag with type 'checkbox'."}
{"index": 8784, "repo": "spring-webmvc-6.0.11", "code": "public class CorsRegistry extends Object {\n\t// Enable cross-origin request handling for the specified path pattern.\n\tCorsRegistration addMapping(String pathPattern);\n\t// Return the registered CorsConfiguration objects, keyed by path pattern.\n\tprotected Map<String,org.springframework.web.cors.CorsConfiguration> getCorsConfigurations();\n}", "des": "Assists with the registration of global, URL pattern based CorsConfiguration mappings."}
{"index": 8785, "repo": "spring-webmvc-6.0.11", "code": "public class DefaultServletHandlerConfigurer extends Object {\n\t// Return a handler mapping instance ordered at Ordered.LOWEST_PRECEDENCE containing the DefaultServletHttpRequestHandler instance mapped to \"/**\"; or null if default servlet handling was not enabled.\n\tprotected SimpleUrlHandlerMapping buildHandlerMapping();\n\t// Enable forwarding to the \"default\" Servlet.\n\tvoid enable();\n\t// Enable forwarding to the \"default\" Servlet identified by the given name.\n\tvoid enable(String defaultServletName);\n}", "des": "Configures a request handler for serving static resources by forwarding the request to the Servlet container's \"default\" Servlet."}
{"index": 8786, "repo": "spring-webmvc-6.0.11", "code": "public interface EntityResponse<T> extends ServerResponse {\n\t// Return the entity that makes up this response.\n\tT entity();\n\t// Create a builder with the given object.\n\tstatic <T> EntityResponse.Builder<T> fromObject(T t);\n\t// Create a builder with the given object and type reference.\n\tstatic <T> EntityResponse.Builder<T> fromObject(T t, org.springframework.core.ParameterizedTypeReference<T> entityType);\n}", "des": "Entity-specific subtype of ServerResponse that exposes entity data."}
{"index": 8787, "repo": "spring-webmvc-6.0.11", "code": "public interface FlashMapManager {\n\t// Find a FlashMap saved by a previous request that matches to the current request, remove it from underlying storage, and also remove other expired FlashMap instances.\n\tFlashMap retrieveAndUpdate(HttpServletRequest request, HttpServletResponse response);\n\t// Save the given FlashMap, in some underlying storage and set the start of its expiration period.\n\tvoid saveOutputFlashMap(FlashMap flashMap, HttpServletRequest request, HttpServletResponse response);\n}", "des": "A strategy interface for retrieving and saving FlashMap instances."}
{"index": 8788, "repo": "spring-webmvc-6.0.11", "code": "public class FreeMarkerViewResolver extends AbstractTemplateViewResolver {\n\t// Instantiate the specified view class.\n\tprotected AbstractUrlBasedView instantiateView();\n\t// Requires FreeMarkerView.\n\tprotected Class<?> requiredViewClass();\n}", "des": "Convenience subclass of UrlBasedViewResolver that supports FreeMarkerView (i.e."}
{"index": 8789, "repo": "spring-webmvc-6.0.11", "code": "public class GroovyMarkupViewResolver extends AbstractTemplateViewResolver {\n\t// This resolver supports i18n, so cache keys should contain the locale.\n\tprotected Object getCacheKey(String viewName, Locale locale);\n\t// Instantiate the specified view class.\n\tprotected AbstractUrlBasedView instantiateView();\n\t// Return the required type of view for this resolver.\n\tprotected Class<?> requiredViewClass();\n}", "des": "Convenience subclass of AbstractTemplateViewResolver that supports GroovyMarkupView (i.e."}
{"index": 8790, "repo": "spring-webmvc-6.0.11", "code": "public interface HandlerAdapter {\n\t// Deprecated. as of 5.3.9 along with LastModified.\n\tlong getLastModified(HttpServletRequest request, Object handler);\n\t// Use the given handler to handle this request.\n\tModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler);\n\t// Given a handler instance, return whether this HandlerAdapter can support it.\n\tboolean supports(Object handler);\n}", "des": "MVC framework SPI, allowing parameterization of the core MVC workflow."}
{"index": 8791, "repo": "spring-webmvc-6.0.11", "code": "public interface HandlerMapping {\n\t// Return a handler and any interceptors for this request.\n\tHandlerExecutionChain getHandler(HttpServletRequest request);\n\t// Whether this HandlerMapping instance has been enabled to use parsed PathPatterns in which case the DispatcherServlet automatically parses the RequestPath to make it available for access in HandlerMappings, HandlerInterceptors, and other components.\n\tdefault boolean usesPathPatterns();\n}", "des": "Interface to be implemented by objects that define a mapping between requests and handler objects."}
{"index": 8792, "repo": "spring-webmvc-6.0.11", "code": "public class HiddenInputTag extends AbstractHtmlElementTag {\n\t// Get the value of the 'disabled' attribute.\n\tboolean isDisabled();\n\t// Flags \"type\" as an illegal dynamic attribute.\n\tprotected boolean isValidDynamicAttribute(String localName, Object value);\n\t// Set the value of the 'disabled' attribute.\n\tvoid setDisabled(boolean disabled);\n\t// Writes the HTML 'input' tag to the supplied TagWriter including the databound value.\n\tprotected int writeTagContent(TagWriter tagWriter);\n}", "des": "The <hidden> tag renders an HTML 'input' tag with type 'hidden' using the bound value."}
{"index": 8793, "repo": "spring-webmvc-6.0.11", "code": "public class HtmlEscapeTag extends RequestContextAwareTag {\n\t// Called by doStartTag to perform the actual work.\n\tprotected int doStartTagInternal();\n\t// Set the default value for HTML escaping, to be put into the current PageContext.\n\tvoid setDefaultHtmlEscape(boolean defaultHtmlEscape);\n}", "des": "The <htmlEscape> tag sets default HTML escape value for the current page."}
{"index": 8794, "repo": "spring-webmvc-6.0.11", "code": "public class HttpRequestHandlerAdapter extends Object implements HandlerAdapter {\n\t// Same contract as for HttpServlet's getLastModified method.\n\tlong getLastModified(HttpServletRequest request, Object handler);\n\t// Use the given handler to handle this request.\n\tModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler);\n\t// Given a handler instance, return whether this HandlerAdapter can support it.\n\tboolean supports(Object handler);\n}", "des": "Adapter to use the plain HttpRequestHandler interface with the generic DispatcherServlet."}
{"index": 8795, "repo": "spring-webmvc-6.0.11", "code": "public class InterceptorRegistry extends Object {\n\t// Adds the provided HandlerInterceptor.\n\tInterceptorRegistration addInterceptor(HandlerInterceptor interceptor);\n\t// Adds the provided WebRequestInterceptor.\n\tInterceptorRegistration addWebRequestInterceptor(org.springframework.web.context.request.WebRequestInterceptor interceptor);\n\t// Return all registered interceptors.\n\tprotected List<Object> getInterceptors();\n}", "des": "Helps with configuring a list of mapped interceptors."}
{"index": 8796, "repo": "spring-webmvc-6.0.11", "code": "public class JstlView extends InternalResourceView {\n\t// Exposes a JSTL LocalizationContext for Spring's locale and MessageSource.\n\tprotected void exposeHelpers(HttpServletRequest request);\n\t// Wraps the MessageSource with a JSTL-aware MessageSource that is aware of JSTL's jakarta.servlet.jsp.jstl.fmt.localizationContext context-param.\n\tprotected void initServletContext(ServletContext servletContext);\n}", "des": "Specialization of InternalResourceView for JSTL pages, i.e."}
{"index": 8797, "repo": "spring-webmvc-6.0.11", "code": "public interface LocaleResolver {\n\t// Resolve the current locale via the given request.\n\tLocale resolveLocale(HttpServletRequest request);\n\t// Set the current locale to the given one.\n\tvoid setLocale(HttpServletRequest request, HttpServletResponse response, Locale locale);\n}", "des": "Interface for web-based locale resolution strategies that allows for both locale resolution via the request and locale modification via request and response."}
{"index": 8798, "repo": "spring-webmvc-6.0.11", "code": "public class MappingJackson2XmlView extends AbstractJackson2View {\n\t// Filter out undesired attributes from the given model.\n\tprotected Object filterModel(Map<String,Object> model);\n\t// Set the attribute in the model that should be rendered by this view.\n\tvoid setModelKey(String modelKey);\n}", "des": "Spring MVC View that renders XML content by serializing the model for the current request using Jackson 2's XmlMapper."}
{"index": 8799, "repo": "spring-webmvc-6.0.11", "code": "public interface MatchableHandlerMapping extends HandlerMapping {\n\t// Return the parser of this HandlerMapping, if configured in which case pre-parsed patterns are used.\n\tdefault org.springframework.web.util.pattern.PathPatternParser getPatternParser();\n\t// Determine whether the request matches the given pattern.\n\tRequestMatchResult match(HttpServletRequest request, String pattern);\n}", "des": "Additional interface that a HandlerMapping can implement to expose a request matching API aligned with its internal request matching configuration and implementation."}
{"index": 8800, "repo": "spring-webmvc-6.0.11", "code": "public static interface MvcUriComponentsBuilder.MethodInvocationInfo {\n\t// Return the argument values.\n\tObject[] getArgumentValues();\n\t// Return the controller method.\n\tMethod getControllerMethod();\n\t// Return the controller types.\n\tClass<?> getControllerType();\n}", "des": "Method invocation information."}
{"index": 8801, "repo": "spring-webmvc-6.0.11", "code": "public class NestedPathTag extends TagSupport implements TryCatchFinally {\n\tvoid doCatch(Throwable throwable);\n\t// Reset any previous nestedPath value.\n\tint doEndTag();\n\tvoid doFinally();\n\tint doStartTag();\n\t// Return the path that this tag applies to.\n\tString getPath();\n\t// Set the path that this tag should apply.\n\tvoid setPath(String path);\n}", "des": "The <nestedPath> tag supports and assists with nested beans or bean properties in the model."}
{"index": 8802, "repo": "spring-webmvc-6.0.11", "code": "public class NoHandlerFoundException extends ServletException implements org.springframework.web.ErrorResponse {\n\torg.springframework.http.ProblemDetail getBody();\n\t// Return headers to use for the response.\n\torg.springframework.http.HttpHeaders getHeaders();\n\tString getHttpMethod();\n\t// Return the headers of the request.\n\torg.springframework.http.HttpHeaders getRequestHeaders();\n\tString getRequestURL();\n\torg.springframework.http.HttpStatusCode getStatusCode();\n}", "des": "By default, when the DispatcherServlet can't find a handler for a request it sends a 404 response."}
{"index": 8803, "repo": "spring-webmvc-6.0.11", "code": "public class Param extends Object {\n\t// Return the raw parameter name.\n\tString getName();\n\t// Return the raw parameter value.\n\tString getValue();\n\t// Set the raw name of the parameter.\n\tvoid setName(String name);\n\t// Set the raw value of the parameter.\n\tvoid setValue(String value);\n}", "des": "Bean used to pass name-value pair parameters from a ParamTag to a ParamAware tag."}
{"index": 8804, "repo": "spring-webmvc-6.0.11", "code": "public class ParamTag extends BodyTagSupport {\n\tint doEndTag();\n\tvoid release();\n\t// Set the name of the parameter (required).\n\tvoid setName(String name);\n\t// Set the value of the parameter (optional).\n\tvoid setValue(String value);\n}", "des": "The <param> tag collects name-value parameters and passes them to a ParamAware ancestor in the tag hierarchy."}
{"index": 8805, "repo": "spring-webmvc-6.0.11", "code": "public class RadioButtonTag extends AbstractSingleCheckedElementTag {\n\t// Return the type of the HTML input element to generate: \"checkbox\" or \"radio\".\n\tprotected String getInputType();\n\t// Write the details for the given primary tag: i.e.\n\tprotected void writeTagDetails(TagWriter tagWriter);\n}", "des": "The <radiobutton> tag renders an HTML 'input' tag with type 'radio'."}
{"index": 8806, "repo": "spring-webmvc-6.0.11", "code": "public class RenderingContext extends Object {\n\t// Return the application context.\n\torg.springframework.context.ApplicationContext getApplicationContext();\n\t// Return the locale of the rendered template.\n\tLocale getLocale();\n\t// Return a function that takes a template path as input and returns the template content as a String.\n\tFunction<String,String> getTemplateLoader();\n\t// Return the URL of the rendered template.\n\tString getUrl();\n}", "des": "Context passed to ScriptTemplateView render function in order to make the application context, the locale, the template loader and the url available on scripting side."}
{"index": 8807, "repo": "spring-webmvc-6.0.11", "code": "public interface RenderingResponse extends ServerResponse {\n\t// Create a builder with the given template name.\n\tstatic RenderingResponse.Builder create(String name);\n\t// Create a builder with the template name, status code, headers and model of the given response.\n\tstatic RenderingResponse.Builder from(RenderingResponse other);\n\t// Return the unmodifiable model map.\n\tMap<String,Object> model();\n\t// Return the name of the template to be rendered.\n\tString name();\n}", "des": "Rendering-specific subtype of ServerResponse that exposes model and template data."}
{"index": 8808, "repo": "spring-webmvc-6.0.11", "code": "public interface RequestCondition<T> {\n\t// Combine this condition with another such as conditions from a type-level and method-level @RequestMapping annotation.\n\tT combine(T other);\n\t// Compare this condition to another condition in the context of a specific request.\n\tint compareTo(T other, HttpServletRequest request);\n\t// Check if the condition matches the request returning a potentially new instance created for the current request.\n\tT getMatchingCondition(HttpServletRequest request);\n}", "des": "Contract for request mapping conditions."}
{"index": 8809, "repo": "spring-webmvc-6.0.11", "code": "public abstract class RequestContextAwareTag extends TagSupport implements TryCatchFinally {\n\tvoid doCatch(Throwable throwable);\n\tvoid doFinally();\n\t// Create and expose the current RequestContext.\n\tfinal int doStartTag();\n\t// Called by doStartTag to perform the actual work.\n\tprotected abstract int doStartTagInternal();\n\t// Return the current RequestContext.\n\tprotected final RequestContext getRequestContext();\n}", "des": "Superclass for all tags that require a RequestContext."}
{"index": 8810, "repo": "spring-webmvc-6.0.11", "code": "public class ResourceChainRegistration extends Object {\n\t// Add a resource resolver to the chain.\n\tResourceChainRegistration addResolver(ResourceResolver resolver);\n\t// Add a resource transformer to the chain.\n\tResourceChainRegistration addTransformer(ResourceTransformer transformer);\n\tprotected List<ResourceResolver> getResourceResolvers();\n\tprotected List<ResourceTransformer> getResourceTransformers();\n}", "des": "Assists with the registration of resource resolvers and transformers."}
{"index": 8811, "repo": "spring-webmvc-6.0.11", "code": "public interface ResourceTransformerChain {\n\t// Return the ResourceResolverChain that was used to resolve the Resource being transformed.\n\tResourceResolverChain getResolverChain();\n\t// Transform the given resource.\n\torg.springframework.core.io.Resource transform(HttpServletRequest request, org.springframework.core.io.Resource resource);\n}", "des": "A contract for invoking a chain of ResourceTransformers where each resolver is given a reference to the chain allowing it to delegate when necessary."}
{"index": 8812, "repo": "spring-webmvc-6.0.11", "code": "public class ScriptTemplateViewResolver extends UrlBasedViewResolver {\n\t// Instantiate the specified view class.\n\tprotected AbstractUrlBasedView instantiateView();\n\t// Return the required type of view for this resolver.\n\tprotected Class<?> requiredViewClass();\n}", "des": "Convenience subclass of UrlBasedViewResolver that supports ScriptTemplateView and custom subclasses of it."}
{"index": 8813, "repo": "spring-webmvc-6.0.11", "code": "public class SessionFlashMapManager extends AbstractFlashMapManager {\n\t// Exposes the best available session mutex.\n\tprotected Object getFlashMapsMutex(HttpServletRequest request);\n\t// Retrieves saved FlashMap instances from the HTTP session, if any.\n\tprotected List<FlashMap> retrieveFlashMaps(HttpServletRequest request);\n\t// Saves the given FlashMap instances in the HTTP session.\n\tprotected void updateFlashMaps(List<FlashMap> flashMaps, HttpServletRequest request, HttpServletResponse response);\n}", "des": "Store and retrieve FlashMap instances to and from the HTTP session."}
{"index": 8814, "repo": "spring-webmvc-6.0.11", "code": "public class SimpleControllerHandlerAdapter extends Object implements HandlerAdapter {\n\t// Same contract as for HttpServlet's getLastModified method.\n\tlong getLastModified(HttpServletRequest request, Object handler);\n\t// Use the given handler to handle this request.\n\tModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler);\n\t// Given a handler instance, return whether this HandlerAdapter can support it.\n\tboolean supports(Object handler);\n}", "des": "Adapter to use the plain Controller workflow interface with the generic DispatcherServlet."}
{"index": 8815, "repo": "spring-webmvc-6.0.11", "code": "public class SimpleServletHandlerAdapter extends Object implements HandlerAdapter {\n\t// Same contract as for HttpServlet's getLastModified method.\n\tlong getLastModified(HttpServletRequest request, Object handler);\n\t// Use the given handler to handle this request.\n\tModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler);\n\t// Given a handler instance, return whether this HandlerAdapter can support it.\n\tboolean supports(Object handler);\n}", "des": "Adapter to use the Servlet interface with the generic DispatcherServlet."}
{"index": 8816, "repo": "spring-webmvc-6.0.11", "code": "public class TransformTag extends HtmlEscapingAwareTag {\n\t// Called by doStartTag to perform the actual work.\n\tprotected final int doStartTagInternal();\n\t// Set the scope to export the variable to.\n\tvoid setScope(String scope);\n\t// Set the value to transform, using the appropriate PropertyEditor from the enclosing BindTag.\n\tvoid setValue(Object value);\n\t// Set PageContext attribute name under which to expose a variable that contains the result of the transformation.\n\tvoid setVar(String var);\n}", "des": "The <transform> tag provides transformation for reference data values from controllers and other objects inside a spring:bind tag (or a data-bound form element tag from Spring's form tag library)."}
{"index": 8817, "repo": "spring-webmvc-6.0.11", "code": "public interface VersionPathStrategy {\n\t// Add a version to the given request path.\n\tString addVersion(String requestPath, String version);\n\t// Extract the resource version from the request path.\n\tString extractVersion(String requestPath);\n\t// Remove the version from the request path.\n\tString removeVersion(String requestPath, String version);\n}", "des": "A strategy for extracting and embedding a resource version in its URL path."}
{"index": 8818, "repo": "spring-webmvc-6.0.11", "code": "public interface View {\n\t// Return the content type of the view, if predetermined.\n\tdefault String getContentType();\n\t// Render the view given the specified model.\n\tvoid render(Map<String,?> model, HttpServletRequest request, HttpServletResponse response);\n}", "des": "MVC View for a web interaction."}
{"index": 8819, "repo": "spring-webmvc-6.0.11", "code": "public class ViewControllerRegistration extends Object {\n\tprotected String getUrlPath();\n\tprotected ParameterizableViewController getViewController();\n\tprotected void setApplicationContext(org.springframework.context.ApplicationContext applicationContext);\n\t// Set the status code to set on the response.\n\tViewControllerRegistration setStatusCode(org.springframework.http.HttpStatusCode statusCode);\n\t// Set the view name to return.\n\tvoid setViewName(String viewName);\n}", "des": "Assist with the registration of a single view controller."}
{"index": 8820, "repo": "spring-cloud-config-client-4.0.3", "code": "public static enum ConfigClientProperties.MultipleUriStrategy extends Enum<ConfigClientProperties.MultipleUriStrategy> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ConfigClientProperties.MultipleUriStrategy valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ConfigClientProperties.MultipleUriStrategy[] values();\n}", "des": "Enumerates possible strategies to use when multiple URLs are provided and an error occurs."}
{"index": 8821, "repo": "spring-webflux-6.0.11", "code": "public abstract class AbstractFileNameVersionStrategy extends Object implements VersionStrategy {\n\t// Add a version to the given request path.\n\tString addVersion(String requestPath, String version);\n\t// Extract the resource version from the request path.\n\tString extractVersion(String requestPath);\n\t// Remove the version from the request path.\n\tString removeVersion(String requestPath, String version);\n}", "des": "Abstract base class for filename suffix based VersionStrategy implementations, e.g."}
{"index": 8822, "repo": "spring-webflux-6.0.11", "code": "public abstract class AbstractPrefixVersionStrategy extends Object implements VersionStrategy {\n\t// Add a version to the given request path.\n\tString addVersion(String path, String version);\n\t// Extract the resource version from the request path.\n\tString extractVersion(String requestPath);\n\t// Remove the version from the request path.\n\tString removeVersion(String requestPath, String version);\n}", "des": "Abstract base class for VersionStrategy implementations that insert a prefix into the URL path, e.g."}
{"index": 8823, "repo": "spring-webflux-6.0.11", "code": "public abstract class AbstractRequestCondition<T extends AbstractRequestCondition<T>> extends Object implements RequestCondition<T> {\n\tboolean equals(Object other);\n\t// Return the discrete items a request condition is composed of.\n\tprotected abstract Collection<?> getContent();\n\t// The notation to use when printing discrete items of content.\n\tprotected abstract String getToStringInfix();\n\t// Indicates whether this condition is empty, i.e.\n\tboolean isEmpty();\n}", "des": "A base class for RequestCondition types providing implementations of AbstractRequestCondition.equals(Object), AbstractRequestCondition.hashCode(), and AbstractRequestCondition.toString()."}
{"index": 8824, "repo": "spring-webflux-6.0.11", "code": "public abstract class AbstractUrlBasedView extends AbstractView implements org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\t// Check whether the resource for the configured URL actually exists.\n\tabstract boolean checkResourceExists(Locale locale);\n\t// Return the URL of the resource that this view wraps.\n\tString getUrl();\n\t// Set the URL of the resource that this view wraps.\n\tvoid setUrl(String url);\n}", "des": "Abstract base class for URL-based views."}
{"index": 8825, "repo": "spring-webflux-6.0.11", "code": "public static interface BodyExtractor.Context {\n\t// Return the map of hints to use to customize body extraction.\n\tMap<String,Object> hints();\n\t// Return the HttpMessageReaders to be used for body extraction.\n\tList<org.springframework.http.codec.HttpMessageReader<?>> messageReaders();\n\t// Optionally return the ServerHttpResponse, if present.\n\tOptional<org.springframework.http.server.reactive.ServerHttpResponse> serverResponse();\n}", "des": "Defines the context used during the extraction."}
{"index": 8826, "repo": "spring-webflux-6.0.11", "code": "public static interface BodyInserter.Context {\n\t// Return the map of hints to use for response body conversion.\n\tMap<String,Object> hints();\n\t// Return the HttpMessageWriters to be used for response body conversion.\n\tList<org.springframework.http.codec.HttpMessageWriter<?>> messageWriters();\n\t// Optionally return the ServerHttpRequest, if present.\n\tOptional<org.springframework.http.server.reactive.ServerHttpRequest> serverRequest();\n}", "des": "Defines the context used during the insertion."}
{"index": 8827, "repo": "spring-webflux-6.0.11", "code": "public static interface BodyInserters.FormInserter<T> extends BodyInserter<org.springframework.util.MultiValueMap<String,T>,org.springframework.http.client.reactive.ClientHttpRequest> {\n\t// Adds the specified key-value pair to the form.\n\tBodyInserters.FormInserter<T> with(String key, T value);\n\t// Adds the specified values to the form.\n\tBodyInserters.FormInserter<T> with(org.springframework.util.MultiValueMap<String,T> values);\n}", "des": "Extension of BodyInserter that allows for adding form data or multipart form data."}
{"index": 8828, "repo": "spring-webflux-6.0.11", "code": "public class CachingResourceTransformer extends Object implements ResourceTransformer {\n\t// Return the configured Cache.\n\torg.springframework.cache.Cache getCache();\n\t// Transform the given resource.\n\treactor.core.publisher.Mono<org.springframework.core.io.Resource> transform(org.springframework.web.server.ServerWebExchange exchange, org.springframework.core.io.Resource resource, ResourceTransformerChain transformerChain);\n}", "des": "A ResourceTransformer that checks a Cache to see if a previously transformed resource exists in the cache and returns it if found, or otherwise delegates to the resolver chain and caches the result."}
{"index": 8829, "repo": "spring-webflux-6.0.11", "code": "public enum ClientHttpObservationDocumentation extends Enum<ClientHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ClientHttpObservationDocumentation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ClientHttpObservationDocumentation[] values();\n}", "des": "Documented KeyValues for the HTTP client observations."}
{"index": 8830, "repo": "spring-webflux-6.0.11", "code": "public class ContinuationHandlerMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver {\n\t// Resolve the value for the method parameter.\n\treactor.core.publisher.Mono<Object> resolveArgument(org.springframework.core.MethodParameter parameter, BindingContext bindingContext, org.springframework.web.server.ServerWebExchange exchange);\n\t// Whether this resolver supports the given method parameter.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "No-op resolver for method arguments of type Continuation."}
{"index": 8831, "repo": "spring-webflux-6.0.11", "code": "public class CorsRegistry extends Object {\n\t// Enable cross-origin request handling for the specified path pattern.\n\tCorsRegistration addMapping(String pathPattern);\n\t// Return the registered CorsConfiguration objects, keyed by path pattern.\n\tprotected Map<String,org.springframework.web.cors.CorsConfiguration> getCorsConfigurations();\n}", "des": "Assists with the registration of global, URL pattern based CorsConfiguration mappings."}
{"index": 8832, "repo": "spring-webflux-6.0.11", "code": "public class ErrorsMethodArgumentResolver extends HandlerMethodArgumentResolverSupport {\n\t// Resolve the value for the method parameter.\n\treactor.core.publisher.Mono<Object> resolveArgument(org.springframework.core.MethodParameter parameter, BindingContext context, org.springframework.web.server.ServerWebExchange exchange);\n\t// Whether this resolver supports the given method parameter.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Resolve Errors or BindingResult method arguments."}
{"index": 8833, "repo": "spring-webflux-6.0.11", "code": "@FunctionalInterface public interface ExchangeFunction {\n\t// Exchange the given request for a ClientResponse promise.\n\treactor.core.publisher.Mono<ClientResponse> exchange(ClientRequest request);\n\t// Filter the exchange function with the given ExchangeFilterFunction, resulting in a filtered ExchangeFunction.\n\tdefault ExchangeFunction filter(ExchangeFilterFunction filter);\n}", "des": "Represents a function that exchanges a request for a (delayed) ClientResponse."}
{"index": 8834, "repo": "spring-webflux-6.0.11", "code": "public abstract class ExchangeFunctions extends Object {\n\t// Create an ExchangeFunction with the given ClientHttpConnector.\n\tstatic ExchangeFunction create(org.springframework.http.client.reactive.ClientHttpConnector connector);\n\t// Create an ExchangeFunction with the given ClientHttpConnector and ExchangeStrategies.\n\tstatic ExchangeFunction create(org.springframework.http.client.reactive.ClientHttpConnector connector, ExchangeStrategies strategies);\n}", "des": "Static factory methods to create an ExchangeFunction."}
{"index": 8835, "repo": "spring-webflux-6.0.11", "code": "public static interface ExchangeStrategies.Builder {\n\t// Builds the ExchangeStrategies.\n\tExchangeStrategies build();\n\t// Customize the list of client-side HTTP message readers and writers.\n\tExchangeStrategies.Builder codecs(Consumer<org.springframework.http.codec.ClientCodecConfigurer> consumer);\n}", "des": "A mutable builder for an ExchangeStrategies."}
{"index": 8836, "repo": "spring-webflux-6.0.11", "code": "public class FixedContentTypeResolver extends Object implements RequestedContentTypeResolver {\n\t// Return the configured list of media types.\n\tList<org.springframework.http.MediaType> getContentTypes();\n\t// Resolve the given request to a list of requested media types.\n\tList<org.springframework.http.MediaType> resolveMediaTypes(org.springframework.web.server.ServerWebExchange exchange);\n}", "des": "Resolver that always resolves to a fixed list of media types."}
{"index": 8837, "repo": "spring-webflux-6.0.11", "code": "public class FreeMarkerViewResolver extends UrlBasedViewResolver {\n\t// Instantiate the specified view class.\n\tprotected AbstractUrlBasedView instantiateView();\n\t// Requires FreeMarkerView.\n\tprotected Class<?> requiredViewClass();\n}", "des": "A ViewResolver for resolving FreeMarkerView instances, i.e."}
{"index": 8838, "repo": "spring-webflux-6.0.11", "code": "public interface HandlerAdapter {\n\t// Handle the request with the given handler, previously checked via supports(Object).\n\treactor.core.publisher.Mono<HandlerResult> handle(org.springframework.web.server.ServerWebExchange exchange, Object handler);\n\t// Whether this HandlerAdapter supports the given handler.\n\tboolean supports(Object handler);\n}", "des": "Contract to abstract the details of invoking a handler of a given type."}
{"index": 8839, "repo": "spring-webflux-6.0.11", "code": "public class HandlerFunctionAdapter extends Object implements HandlerAdapter {\n\t// Handle the request with the given handler, previously checked via HandlerAdapter.supports(Object).\n\treactor.core.publisher.Mono<HandlerResult> handle(org.springframework.web.server.ServerWebExchange exchange, Object handler);\n\t// Whether this HandlerAdapter supports the given handler.\n\tboolean supports(Object handler);\n}", "des": "HandlerAdapter implementation that supports HandlerFunctions."}
{"index": 8840, "repo": "spring-webflux-6.0.11", "code": "public interface HandlerMethodArgumentResolver {\n\t// Resolve the value for the method parameter.\n\treactor.core.publisher.Mono<Object> resolveArgument(org.springframework.core.MethodParameter parameter, BindingContext bindingContext, org.springframework.web.server.ServerWebExchange exchange);\n\t// Whether this resolver supports the given method parameter.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Strategy to resolve the argument value for a method parameter in the context of the current HTTP request."}
{"index": 8841, "repo": "spring-webflux-6.0.11", "code": "public interface HandlerResultHandler {\n\t// Process the given result modifying response headers and/or writing data to the response.\n\treactor.core.publisher.Mono<Void> handleResult(org.springframework.web.server.ServerWebExchange exchange, HandlerResult result);\n\t// Whether this handler supports the given HandlerResult.\n\tboolean supports(HandlerResult result);\n}", "des": "Process the HandlerResult, usually returned by a HandlerAdapter."}
{"index": 8842, "repo": "spring-webflux-6.0.11", "code": "public class HttpEntityMethodArgumentResolver extends AbstractMessageReaderArgumentResolver {\n\t// Resolve the value for the method parameter.\n\treactor.core.publisher.Mono<Object> resolveArgument(org.springframework.core.MethodParameter parameter, BindingContext bindingContext, org.springframework.web.server.ServerWebExchange exchange);\n\t// Whether this resolver supports the given method parameter.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Resolves method arguments of type HttpEntity or RequestEntity by reading the body of the request through a compatible HttpMessageReader."}
{"index": 8843, "repo": "spring-webflux-6.0.11", "code": "public class ModelMethodArgumentResolver extends HandlerMethodArgumentResolverSupport implements SyncHandlerMethodArgumentResolver {\n\t// Resolve the value for the method parameter synchronously.\n\tObject resolveArgumentValue(org.springframework.core.MethodParameter parameter, BindingContext context, org.springframework.web.server.ServerWebExchange exchange);\n\t// Whether this resolver supports the given method parameter.\n\tboolean supportsParameter(org.springframework.core.MethodParameter param);\n}", "des": "Resolver for a controller method argument of type Model that can also be resolved as a Map."}
{"index": 8844, "repo": "spring-webflux-6.0.11", "code": "public class ParameterContentTypeResolver extends Object implements RequestedContentTypeResolver {\n\tString getParameterName();\n\t// Resolve the given request to a list of requested media types.\n\tList<org.springframework.http.MediaType> resolveMediaTypes(org.springframework.web.server.ServerWebExchange exchange);\n\t// Set the name of the parameter to use to determine requested media types.\n\tvoid setParameterName(String parameterName);\n}", "des": "Resolver that checks a query parameter and uses it to look up a matching MediaType."}
{"index": 8845, "repo": "spring-webflux-6.0.11", "code": "public class PrincipalMethodArgumentResolver extends HandlerMethodArgumentResolverSupport {\n\t// Resolve the value for the method parameter.\n\treactor.core.publisher.Mono<Object> resolveArgument(org.springframework.core.MethodParameter parameter, BindingContext context, org.springframework.web.server.ServerWebExchange exchange);\n\t// Whether this resolver supports the given method parameter.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Resolves method argument value of type Principal."}
{"index": 8846, "repo": "spring-webflux-6.0.11", "code": "public static interface Rendering.RedirectBuilder extends Rendering.Builder<Rendering.RedirectBuilder> {\n\t// Whether to the provided redirect URL should be prepended with the application context path (if any).\n\tRendering.RedirectBuilder contextRelative(boolean contextRelative);\n\t// Whether to append the query string of the current URL to the target redirect URL or not.\n\tRendering.RedirectBuilder propagateQuery(boolean propagate);\n}", "des": "Extends Rendering.Builder with extra options for redirect scenarios."}
{"index": 8847, "repo": "spring-webflux-6.0.11", "code": "public class RenderingContext extends Object {\n\t// Return the application context.\n\torg.springframework.context.ApplicationContext getApplicationContext();\n\t// Return the locale of the rendered template.\n\tLocale getLocale();\n\t// Return a function that takes a template path as input and returns the template content as a String.\n\tFunction<String,String> getTemplateLoader();\n\t// Return the URL of the rendered template.\n\tString getUrl();\n}", "des": "Context passed to ScriptTemplateView render function in order to make the application context, the locale, the template loader and the url available on scripting side."}
{"index": 8848, "repo": "spring-webflux-6.0.11", "code": "public interface RenderingResponse extends ServerResponse {\n\t// Create a builder with the given template name.\n\tstatic RenderingResponse.Builder create(String name);\n\t// Create a builder with the template name, status code, headers and model of the given response.\n\tstatic RenderingResponse.Builder from(RenderingResponse other);\n\t// Return the unmodifiable model map.\n\tMap<String,Object> model();\n\t// Return the name of the template to be rendered.\n\tString name();\n}", "des": "Rendering-specific subtype of ServerResponse that exposes model and template data."}
{"index": 8849, "repo": "spring-webflux-6.0.11", "code": "public class RequestBodyMethodArgumentResolver extends AbstractMessageReaderArgumentResolver {\n\t// Resolve the value for the method parameter.\n\treactor.core.publisher.Mono<Object> resolveArgument(org.springframework.core.MethodParameter param, BindingContext bindingContext, org.springframework.web.server.ServerWebExchange exchange);\n\t// Whether this resolver supports the given method parameter.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Resolves method arguments annotated with @RequestBody by reading the body of the request through a compatible HttpMessageReader."}
{"index": 8850, "repo": "spring-webflux-6.0.11", "code": "public class ResourceChainRegistration extends Object {\n\t// Add a resource resolver to the chain.\n\tResourceChainRegistration addResolver(ResourceResolver resolver);\n\t// Add a resource transformer to the chain.\n\tResourceChainRegistration addTransformer(ResourceTransformer transformer);\n\tprotected List<ResourceResolver> getResourceResolvers();\n\tprotected List<ResourceTransformer> getResourceTransformers();\n}", "des": "Assists with the registration of resource resolvers and transformers."}
{"index": 8851, "repo": "spring-webflux-6.0.11", "code": "public interface ResourceTransformerChain {\n\t// Return the ResourceResolverChain that was used to resolve the Resource being transformed.\n\tResourceResolverChain getResolverChain();\n\t// Transform the given resource.\n\treactor.core.publisher.Mono<org.springframework.core.io.Resource> transform(org.springframework.web.server.ServerWebExchange exchange, org.springframework.core.io.Resource resource);\n}", "des": "A contract for invoking a chain of ResourceTransformers where each resolver is given a reference to the chain allowing it to delegate when necessary."}
{"index": 8852, "repo": "spring-webflux-6.0.11", "code": "public class ResponseBodyResultHandler extends AbstractMessageWriterResultHandler implements HandlerResultHandler {\n\t// Process the given result modifying response headers and/or writing data to the response.\n\treactor.core.publisher.Mono<Void> handleResult(org.springframework.web.server.ServerWebExchange exchange, HandlerResult result);\n\t// Whether this handler supports the given HandlerResult.\n\tboolean supports(HandlerResult result);\n}", "des": "HandlerResultHandler that handles return values from methods annotated with @ResponseBody writing to the body of the request or response with an HttpMessageWriter."}
{"index": 8853, "repo": "spring-webflux-6.0.11", "code": "public class ResponseEntityResultHandler extends AbstractMessageWriterResultHandler implements HandlerResultHandler {\n\t// Process the given result modifying response headers and/or writing data to the response.\n\treactor.core.publisher.Mono<Void> handleResult(org.springframework.web.server.ServerWebExchange exchange, HandlerResult result);\n\t// Whether this handler supports the given HandlerResult.\n\tboolean supports(HandlerResult result);\n}", "des": "Handles return values of type HttpEntity, ResponseEntity, HttpHeaders, ErrorResponse, and ProblemDetail."}
{"index": 8854, "repo": "spring-webflux-6.0.11", "code": "public class ScriptTemplateViewResolver extends UrlBasedViewResolver {\n\t// Instantiate the specified view class.\n\tprotected AbstractUrlBasedView instantiateView();\n\t// Return the required type of view for this resolver.\n\tprotected Class<?> requiredViewClass();\n}", "des": "Convenience subclass of UrlBasedViewResolver that supports ScriptTemplateView and custom subclasses of it."}
{"index": 8855, "repo": "spring-webflux-6.0.11", "code": "public static interface ServerResponse.Context {\n\t// Return the HttpMessageWriters to be used for response body conversion.\n\tList<org.springframework.http.codec.HttpMessageWriter<?>> messageWriters();\n\t// Return the ViewResolvers to be used for view name resolution.\n\tList<ViewResolver> viewResolvers();\n}", "des": "Defines the context used during the ServerResponse.writeTo(ServerWebExchange, Context)."}
{"index": 8856, "repo": "spring-webflux-6.0.11", "code": "public class SessionStatusMethodArgumentResolver extends Object implements SyncHandlerMethodArgumentResolver {\n\t// Resolve the value for the method parameter synchronously.\n\tObject resolveArgumentValue(org.springframework.core.MethodParameter parameter, BindingContext bindingContext, org.springframework.web.server.ServerWebExchange exchange);\n\t// Whether this resolver supports the given method parameter.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Resolver for a SessionStatus argument obtaining it from the BindingContext."}
{"index": 8857, "repo": "spring-webflux-6.0.11", "code": "public class SimpleHandlerAdapter extends Object implements HandlerAdapter {\n\t// Handle the request with the given handler, previously checked via HandlerAdapter.supports(Object).\n\treactor.core.publisher.Mono<HandlerResult> handle(org.springframework.web.server.ServerWebExchange exchange, Object handler);\n\t// Whether this HandlerAdapter supports the given handler.\n\tboolean supports(Object handler);\n}", "des": "HandlerAdapter that allows using the plain WebHandler contract with the generic DispatcherHandler."}
{"index": 8858, "repo": "spring-webflux-6.0.11", "code": "public class TomcatWebSocketSession extends StandardWebSocketSession {\n\t// Whether the underlying WebSocket API has flow control and can suspend and resume the receiving of messages.\n\tprotected boolean canSuspendReceiving();\n\t// Resume receiving new message(s) after demand is generated by the downstream Subscriber.\n\tprotected void resumeReceiving();\n\t// Suspend receiving until received message(s) are processed and more demand is generated by the downstream Subscriber.\n\tprotected void suspendReceiving();\n}", "des": "Spring WebSocketSession adapter for Tomcat's Session."}
{"index": 8859, "repo": "spring-webflux-6.0.11", "code": "public interface VersionStrategy {\n\t// Add a version to the given request path.\n\tString addVersion(String requestPath, String version);\n\t// Extract the resource version from the request path.\n\tString extractVersion(String requestPath);\n\t// Determine the version for the given resource.\n\treactor.core.publisher.Mono<String> getResourceVersion(org.springframework.core.io.Resource resource);\n\t// Remove the version from the request path.\n\tString removeVersion(String requestPath, String version);\n}", "des": "A strategy to determine the version of a static resource and to apply and/or extract it from the URL path."}
{"index": 8860, "repo": "spring-webflux-6.0.11", "code": "public interface View {\n\t// Return the list of media types this View supports, or an empty list.\n\tdefault List<org.springframework.http.MediaType> getSupportedMediaTypes();\n\t// Whether this View does render by performing a redirect.\n\tdefault boolean isRedirectView();\n\t// Render the view based on the given HandlerResult.\n\treactor.core.publisher.Mono<Void> render(Map<String,?> model, org.springframework.http.MediaType contentType, org.springframework.web.server.ServerWebExchange exchange);\n}", "des": "Contract to render HandlerResult to the HTTP response."}
{"index": 8861, "repo": "spring-webflux-6.0.11", "code": "public class WebClientRequestException extends WebClientException {\n\t// Return the HTTP request headers.\n\torg.springframework.http.HttpHeaders getHeaders();\n\t// Return the HTTP request method.\n\torg.springframework.http.HttpMethod getMethod();\n\t// Return the request URI.\n\tURI getUri();\n}", "des": "Exceptions that contain actual HTTP request data."}
{"index": 8862, "repo": "spring-webflux-6.0.11", "code": "public class WebSessionMethodArgumentResolver extends HandlerMethodArgumentResolverSupport {\n\t// Resolve the value for the method parameter.\n\treactor.core.publisher.Mono<Object> resolveArgument(org.springframework.core.MethodParameter parameter, BindingContext context, org.springframework.web.server.ServerWebExchange exchange);\n\t// Whether this resolver supports the given method parameter.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Resolves method argument value of type WebSession."}
{"index": 8863, "repo": "spring-webflux-6.0.11", "code": "public interface WebSocketClient {\n\t// A variant of execute(URI, WebSocketHandler) with custom headers.\n\treactor.core.publisher.Mono<Void> execute(URI url, org.springframework.http.HttpHeaders headers, WebSocketHandler handler);\n\t// Execute a handshake request to the given url and handle the resulting WebSocket session with the given handler.\n\treactor.core.publisher.Mono<Void> execute(URI url, WebSocketHandler handler);\n}", "des": "Contract for reactive-style handling of a WebSocket session."}
{"index": 8864, "repo": "spring-webflux-6.0.11", "code": "public interface WebSocketHandler {\n\t// Return the list of sub-protocols supported by this handler.\n\tdefault List<String> getSubProtocols();\n\t// Invoked when a new WebSocket connection is established, and allows handling of the session.\n\treactor.core.publisher.Mono<Void> handle(WebSocketSession session);\n}", "des": "Handler for a WebSocket session."}
{"index": 8865, "repo": "spring-webflux-6.0.11", "code": "public static enum WebSocketMessage.Type extends Enum<WebSocketMessage.Type> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic WebSocketMessage.Type valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic WebSocketMessage.Type[] values();\n}", "des": "WebSocket message types."}
{"index": 8866, "repo": "spring-retry-2.0.2", "code": "public class AnnotationMethodResolver extends Object implements MethodResolver {\n\t// Find a single Method on the given Class that contains the annotation type for which this resolver is searching.\n\tMethod findMethod(Class<?> clazz);\n\t// Find a single Method on the Class of the given candidate object that contains the annotation type for which this resolver is searching.\n\tMethod findMethod(Object candidate);\n}", "des": "MethodResolver implementation that finds a single Method on the given Class that contains the specified annotation type."}
{"index": 8867, "repo": "spring-retry-2.0.2", "code": "public interface BackOffPolicy {\n\t// Back off/pause in an implementation-specific fashion.\n\tvoid backOff(BackOffContext backOffContext);\n\t// Start a new block of back off operations.\n\tBackOffContext start(RetryContext context);\n}", "des": "Strategy interface to control back off between attempts in a single retry operation."}
{"index": 8868, "repo": "spring-retry-2.0.2", "code": "public class BackToBackPatternClassifier<C,T> extends Object implements Classifier<C,T> {\n\t// Classify the input and map to a String, then take that and put it into a pattern matcher to match to an output value.\n\tT classify(C classifiable);\n\t// A convenience method for creating a pattern matching classifier for the matcher component.\n\tvoid setMatcherMap(Map<String,T> map);\n\t// A convenience method of creating a router classifier based on a plain old Java Object.\n\tvoid setRouterDelegate(Object delegate);\n}", "des": "A special purpose Classifier with easy configuration options for mapping from one arbitrary type of object to another via a pattern matcher."}
{"index": 8869, "repo": "spring-retry-2.0.2", "code": "public class BinaryExceptionClassifierRetryPolicy extends Object implements RetryPolicy {\n\tboolean canRetry(RetryContext context);\n\tvoid close(RetryContext status);\n\tBinaryExceptionClassifier getExceptionClassifier();\n\t// Acquire resources needed for the retry operation.\n\tRetryContext open(RetryContext parent);\n\t// Called once per retry attempt, after the callback fails.\n\tvoid registerThrowable(RetryContext context, Throwable throwable);\n}", "des": "A policy, that is based on BinaryExceptionClassifier."}
{"index": 8870, "repo": "spring-retry-2.0.2", "code": "public class ClassifierAdapter<C,T> extends Object implements Classifier<C,T> {\n\t// Classify the given object and return an object of a different type, possibly an enumerated type.\n\tT classify(C classifiable);\n\t// Search for the Classifier annotation on a method in the supplied delegate and use that to create a Classifier from the parameter type to the return type.\n\tfinal void setDelegate(Object delegate);\n\tvoid setDelegate(Classifier<C,T> delegate);\n}", "des": "Wrapper for an object to adapt it to the Classifier interface."}
{"index": 8871, "repo": "spring-retry-2.0.2", "code": "public class ExpressionRetryPolicy extends SimpleRetryPolicy implements org.springframework.beans.factory.BeanFactoryAware {\n\t// Test for retryable operation based on the status.\n\tboolean canRetry(RetryContext context);\n\t// Check if the expression is a template\n\tstatic boolean isTemplate(String expression);\n\tvoid setBeanFactory(org.springframework.beans.factory.BeanFactory beanFactory);\n\tExpressionRetryPolicy withBeanFactory(org.springframework.beans.factory.BeanFactory beanFactory);\n}", "des": "Subclass of SimpleRetryPolicy that delegates to super.canRetry() and, if true, further evaluates an expression against the last thrown exception."}
{"index": 8872, "repo": "spring-retry-2.0.2", "code": "public interface MethodResolver {\n\t// Find a single Method on the given Class that matches this resolver's criteria.\n\tMethod findMethod(Class<?> clazz);\n\t// Find a single Method on the provided Object that matches this resolver's criteria.\n\tMethod findMethod(Object candidate);\n}", "des": "Strategy interface for detecting a single Method on a Class."}
{"index": 8873, "repo": "spring-retry-2.0.2", "code": "public class NeverRetryPolicy extends Object implements RetryPolicy {\n\t// Returns false after the first exception.\n\tboolean canRetry(RetryContext context);\n\t// Do nothing.\n\tvoid close(RetryContext context);\n\t// Return a context that can respond to early termination requests, but does nothing else.\n\tRetryContext open(RetryContext parent);\n\t// Make the throwable available for downstream use through the context.\n\tvoid registerThrowable(RetryContext context, Throwable throwable);\n}", "des": "A RetryPolicy that allows the first attempt but never permits a retry."}
{"index": 8874, "repo": "spring-retry-2.0.2", "code": "public class PatternMatchingClassifier<T> extends Object implements Classifier<String,T> {\n\t// Classify the input by matching it against the patterns provided in setPatternMap(Map).\n\tT classify(String classifiable);\n\t// A map from pattern to value\n\tvoid setPatternMap(Map<String,T> values);\n}", "des": "A Classifier that maps from String patterns with wildcards to a set of values of a given type."}
{"index": 8875, "repo": "spring-retry-2.0.2", "code": "public interface RetryPolicy extends Serializable {\n\tboolean canRetry(RetryContext context);\n\tvoid close(RetryContext context);\n\t// Acquire resources needed for the retry operation.\n\tRetryContext open(RetryContext parent);\n\t// Called once per retry attempt, after the callback fails.\n\tvoid registerThrowable(RetryContext context, Throwable throwable);\n}", "des": "A RetryPolicy is responsible for allocating and managing resources needed by RetryOperations."}
{"index": 8876, "repo": "spring-retry-2.0.2", "code": "public class RetrySimulator extends Object {\n\t// Execute the simulator for a give # of iterations.\n\tRetrySimulation executeSimulation(int numSimulations);\n\t// Execute a single simulation\n\tList<Long> executeSingleSimulation();\n}", "des": "A RetrySimulator is a tool for exercising retry + backoff operations."}
{"index": 8877, "repo": "spring-retry-2.0.2", "code": "public interface RetryState {\n\t// Key representing the state for a retry attempt.\n\tObject getKey();\n\t// Indicate whether a cache lookup can be avoided.\n\tboolean isForceRefresh();\n\t// Check whether this exception requires a rollback.\n\tboolean rollbackFor(Throwable exception);\n}", "des": "Stateful retry is characterised by having to recognise the items that are being processed, so this interface is used primarily to provide a cache key in between failed attempts."}
{"index": 8878, "repo": "spring-retry-2.0.2", "code": "public final class RetrySynchronizationManager extends Object {\n\t// Clear the current context at the end of a batch - should only be used by RetryOperations implementations.\n\tstatic RetryContext clear();\n\t// Public accessor for the locally enclosing RetryContext.\n\tstatic RetryContext getContext();\n\t// Method for registering a context - should only be used by RetryOperations implementations to ensure that getContext() always returns the correct value.\n\tstatic RetryContext register(RetryContext context);\n}", "des": "Global variable support for retry clients."}
{"index": 8879, "repo": "spring-retry-2.0.2", "code": "public abstract class StatelessBackOffPolicy extends Object implements BackOffPolicy {\n\t// Delegates directly to the doBackOff() method without passing on the BackOffContext argument which is not needed for stateless implementations.\n\tfinal void backOff(BackOffContext backOffContext);\n\t// Sub-classes should implement this method to perform the actual back off.\n\tprotected abstract void doBackOff();\n\t// Returns 'null'.\n\tBackOffContext start(RetryContext status);\n}", "des": "Simple base class for BackOffPolicy implementations that maintain no state across invocations."}
{"index": 8880, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "@DisableCachingByDefault(because=\"Application should always run\") public abstract class BootRun extends JavaExec {\n\tvoid exec();\n\t// Returns the property for whether the JVM's launch should be optimized.\n\tabstract Property<Boolean> getOptimizedLaunch();\n\t// Adds the source directories of the given sourceSet's resources to the start of the classpath in place of the output's resources directory.\n\tvoid sourceResources(SourceSet sourceSet);\n}", "des": "Custom JavaExec task for running a Spring Boot application."}
{"index": 8881, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "public static class LayeredSpec.DependenciesIntoLayerSpec extends LayeredSpec.IntoLayerSpec {\n\t// Configures the layer to exclude project dependencies.\n\tvoid excludeProjectDependencies();\n\t// Configures the layer to include project dependencies.\n\tvoid includeProjectDependencies();\n}", "des": "Spec that controls the dependencies that should be part of a particular layer."}
{"index": 8882, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "public static class LayeredSpec.IntoLayerSpec extends Object implements Serializable {\n\t// Adds patterns that control the content that is excluded from the layer.\n\tvoid exclude(String... patterns);\n\t// Adds patterns that control the content that is included in the layer.\n\tvoid include(String... patterns);\n}", "des": "Spec that controls the content that should be part of a particular layer."}
{"index": 8883, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "@CacheableTask public class ProcessTestAot extends AbstractAot {\n\tvoid exec();\n\t// Returns the classpath roots that should be scanned for test classes to process.\n\tfinal FileCollection getClasspathRoots();\n\t// Sets the classpath roots that should be scanned for test classes to process.\n\tvoid setClasspathRoots(FileCollection classpathRoots);\n}", "des": "Custom JavaExec task for ahead-of-time processing of a Spring Boot application's tests."}
{"index": 8884, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "public class SpringBootExtension extends Object {\n\t// Creates a new BuildInfo task named bootBuildInfo and configures the Java plugin's classes task to depend upon it.\n\tvoid buildInfo();\n\t// Creates a new BuildInfo task named bootBuildInfo and configures the Java plugin's classes task to depend upon it.\n\tvoid buildInfo(Action<BuildInfo> configurer);\n\t// Returns the fully-qualified name of the application's main class.\n\tProperty<String> getMainClass();\n}", "des": "Entry point to Spring Boot's Gradle DSL."}
{"index": 8885, "repo": "spring-boot-gradle-plugin-3.1.1", "code": "public enum ZipCompression extends Enum<ZipCompression> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ZipCompression valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ZipCompression[] values();\n}", "des": "An enumeration of supported compression options for an entry in a ZIP archive."}
{"index": 8886, "repo": "spring-context-support-6.0.11", "code": "public abstract class AbstractTransactionSupportingCacheManager extends org.springframework.cache.support.AbstractCacheManager {\n\tprotected org.springframework.cache.Cache decorateCache(org.springframework.cache.Cache cache);\n\t// Return whether this CacheManager has been configured to be transaction-aware.\n\tboolean isTransactionAware();\n\t// Set whether this CacheManager should expose transaction-aware Cache objects.\n\tvoid setTransactionAware(boolean transactionAware);\n}", "des": "Base class for CacheManager implementations that want to support built-in awareness of Spring-managed transactions."}
{"index": 8887, "repo": "spring-context-support-6.0.11", "code": "public class AdaptableJobFactory extends Object implements JobFactory {\n\t// Adapt the given job object to the Quartz Job interface.\n\tprotected Job adaptJob(Object jobObject);\n\t// Create an instance of the specified job class.\n\tprotected Object createJobInstance(TriggerFiredBundle bundle);\n\tJob newJob(TriggerFiredBundle bundle, Scheduler scheduler);\n}", "des": "JobFactory implementation that supports Runnable objects as well as standard Quartz Job instances."}
{"index": 8888, "repo": "spring-context-support-6.0.11", "code": "public class BeanFactoryJCacheOperationSourceAdvisor extends org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor {\n\torg.springframework.aop.Pointcut getPointcut();\n\t// Set the cache operation attribute source which is used to find cache attributes.\n\tvoid setCacheOperationSource(JCacheOperationSource cacheOperationSource);\n\t// Set the ClassFilter to use for this pointcut.\n\tvoid setClassFilter(org.springframework.aop.ClassFilter classFilter);\n}", "des": "Advisor driven by a JCacheOperationSource, used to include a cache advice bean for methods that are cacheable."}
{"index": 8889, "repo": "spring-context-support-6.0.11", "code": "public class DelegatingJob extends Object implements Job {\n\t// Delegates execution to the underlying Runnable.\n\tvoid execute(JobExecutionContext context);\n\t// Return the wrapped Runnable implementation.\n\tfinal Runnable getDelegate();\n}", "des": "Simple Quartz Job adapter that delegates to a given Runnable instance."}
{"index": 8890, "repo": "spring-context-support-6.0.11", "code": "public interface JCacheOperation<A extends Annotation> extends org.springframework.cache.interceptor.BasicOperation, javax.cache.annotation.CacheMethodDetails<A> {\n\t// Return the CacheInvocationParameter instances based on the specified method arguments.\n\tjavax.cache.annotation.CacheInvocationParameter[] getAllParameters(Object... values);\n\t// Return the CacheResolver instance to use to resolve the cache to use for this operation.\n\torg.springframework.cache.interceptor.CacheResolver getCacheResolver();\n}", "des": "Model the base of JSR-107 cache operation through an interface contract."}
{"index": 8891, "repo": "spring-context-support-6.0.11", "code": "public interface MailSender {\n\t// Send the given simple mail message.\n\tvoid send(SimpleMailMessage simpleMessage);\n\t// Send the given array of simple mail messages in batch.\n\tvoid send(SimpleMailMessage... simpleMessages);\n}", "des": "This interface defines a strategy for sending simple mails."}
{"index": 8892, "repo": "spring-context-support-6.0.11", "code": "public class MailSendException extends MailException {\n\t// Return a Map with the failed messages as keys, and the thrown exceptions as values.\n\tfinal Map<Object,Exception> getFailedMessages();\n\tString getMessage();\n\t// Return an array with thrown message exceptions.\n\tfinal Exception[] getMessageExceptions();\n\tvoid printStackTrace(PrintStream ps);\n\tvoid printStackTrace(PrintWriter pw);\n}", "des": "Exception thrown when a mail sending error is encountered."}
{"index": 8893, "repo": "spring-context-support-6.0.11", "code": "public static class MethodInvokingJobDetailFactoryBean.MethodInvokingJob extends QuartzJobBean {\n\t// Invoke the method via the MethodInvoker.\n\tprotected void executeInternal(JobExecutionContext context);\n\t// Set the MethodInvoker to use.\n\tvoid setMethodInvoker(org.springframework.util.MethodInvoker methodInvoker);\n}", "des": "Quartz Job implementation that invokes a specified method."}
{"index": 8894, "repo": "spring-context-support-6.0.11", "code": "public abstract class QuartzJobBean extends Object implements Job {\n\t// This implementation applies the passed-in job data map as bean property values, and delegates to executeInternal afterwards.\n\tfinal void execute(JobExecutionContext context);\n\t// Execute the actual job.\n\tprotected abstract void executeInternal(JobExecutionContext context);\n}", "des": "Simple implementation of the Quartz Job interface, applying the passed-in JobDataMap and also the SchedulerContext as bean property values."}
{"index": 8895, "repo": "wicket-core-10.0.0-M1", "code": "public static enum AbstractChoice.LabelPosition extends Enum<AbstractChoice.LabelPosition> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AbstractChoice.LabelPosition valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AbstractChoice.LabelPosition[] values();\n}", "des": "An enumeration of possible positions of the label for a choice"}
{"index": 8896, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class AbstractClassResolver extends Object implements IClassResolver {\n\t// Tries to load all the resources by the name that is given.\n\tIterator<URL> getResources(String name);\n\t// Resolves a class by name (which may or may not involve loading it; thus the name class *resolver* not *loader*).\n\tfinal Class<?> resolveClass(String className);\n}", "des": "An abstract implementation of a IClassResolver which uses a ClassLoader for resolving classes."}
{"index": 8897, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class AbstractErrorPage extends WebPage {\n\t// Override this method and return true if your page is used to display Wicket errors.\n\tboolean isErrorPage();\n\tboolean isVersioned();\n\t// Render to the web response whatever the component wants to contribute to the head section.\n\tvoid renderHead(IHeaderResponse response);\n}", "des": "A parent page for all pages that are used to show an error to the user."}
{"index": 8898, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class AbstractJceCrypt extends Object implements org.apache.wicket.util.crypt.ICrypt {\n\t// Decrypts an encrypted byte array.\n\tprotected abstract byte[] decrypt(byte[] encrypted);\n\t// Decrypts a string into a string.\n\tfinal String decryptUrlSafe(String text);\n\t// Encrypts the given text into a byte array.\n\tprotected abstract byte[] encrypt(byte[] plainBytes);\n\t// Encrypt a string into a string using URL safe Base64 encoding.\n\tfinal String encryptUrlSafe(String plainText);\n}", "des": "Base class for JCE based ICrypt implementations."}
{"index": 8899, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class AbstractKeyInSessionCryptFactory<T extends org.apache.wicket.util.io.IClusterable> extends Object implements org.apache.wicket.util.crypt.ICryptFactory {\n\tprotected abstract org.apache.wicket.util.crypt.ICrypt createCrypt(T key);\n\t// Generates the secret key for a new crypt.\n\tprotected abstract T generateKey(Session session);\n\t// Creates a new crypt for the current user session.\n\torg.apache.wicket.util.crypt.ICrypt newCrypt();\n}", "des": "Base class to implement crypt factories that store crypt into user session."}
{"index": 8900, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class AbstractLink extends WebMarkupContainer {\n\t// Alters the tag so that the link renders as disabled.\n\tprotected void disableLink(ComponentTag tag);\n\tIModel<?> getBody();\n\t// Renders this link's body.\n\tvoid onComponentTagBody(MarkupStream markupStream, ComponentTag openTag);\n\t// Called to allow a component to detach resources after use.\n\tprotected void onDetach();\n\t// Sets the link's body model\n\tAbstractLink setBody(IModel<?> bodyModel);\n}", "des": "Base class that that contains functionality for rendering disabled links."}
{"index": 8901, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class AbstractObjectChecker extends Object implements IObjectChecker {\n\t// Checks an object that it meets some requirements before serializing it\n\tIObjectChecker.Result check(Object object);\n\t// The implementations should make the specific check on the object.\n\tprotected IObjectChecker.Result doCheck(Object object);\n\tList<Class<?>> getExclusions();\n}", "des": "A base class for IObjectChecker implementations which handles the logic for checking type exclusions."}
{"index": 8902, "repo": "wicket-core-10.0.0-M1", "code": "public static enum AbstractRangeValidator.Mode extends Enum<AbstractRangeValidator.Mode> {\n\tString getVariation();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AbstractRangeValidator.Mode valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AbstractRangeValidator.Mode[] values();\n}", "des": "Validator mode"}
{"index": 8903, "repo": "wicket-core-10.0.0-M1", "code": "public static enum AbstractResource.ContentRangeType extends Enum<AbstractResource.ContentRangeType> {\n\tString getTypeName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AbstractResource.ContentRangeType valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AbstractResource.ContentRangeType[] values();\n}", "des": "All available content range types."}
{"index": 8904, "repo": "wicket-core-10.0.0-M1", "code": "public abstract static class AbstractResource.WriteCallback extends Object {\n\t// Write the resource data to response.\n\tabstract void writeData(IResource.Attributes attributes);\n\t// Convenience method to write an InputStream to response.\n\tprotected void writeStream(IResource.Attributes attributes, InputStream stream);\n}", "des": "Callback invoked when resource data needs to be written to response."}
{"index": 8905, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class AbstractSubmitLink extends AbstractLink implements IFormSubmittingComponent {\n\t// Returns whether form should be processed the default way.\n\tboolean getDefaultFormProcessing();\n\t// Returns the form this component submits.\n\tForm<?> getForm();\n\t// Returns the name that is unique to this component, at least within the form.\n\tString getInputName();\n\t// Sets the defaultFormProcessing property.\n\tfinal AbstractSubmitLink setDefaultFormProcessing(boolean defaultFormProcessing);\n}", "des": "Abstract class for links that are capable of submitting a form."}
{"index": 8906, "repo": "wicket-core-10.0.0-M1", "code": "public class ActionAuthorizationStrategy extends IAuthorizationStrategy.AllowAllAuthorizationStrategy {\n\t// Adds an action authorizer.\n\tvoid addActionAuthorizer(IActionAuthorizer authorizer);\n\t// Gets whether the given action is permitted.\n\tboolean isActionAuthorized(Component component, Action action);\n}", "des": "An authorization strategy which allows the use of a command pattern for users that want to authorize a variety of different types of actions throughout an application."}
{"index": 8907, "repo": "wicket-core-10.0.0-M1", "code": "public class AESCrypt extends AbstractJceCrypt {\n\t// Decrypts an encrypted byte array.\n\tprotected byte[] decrypt(byte[] encrypted);\n\t// Encrypts the given text into a byte array.\n\tprotected byte[] encrypt(byte[] plainBytes);\n}", "des": "AES based ICrypt encrypt and decrypt strings such as passwords or URL segments."}
{"index": 8908, "repo": "wicket-core-10.0.0-M1", "code": "public enum AjaxAttributeName extends Enum<AjaxAttributeName> {\n\t// the json parameter name\n\tString jsonName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AjaxAttributeName valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AjaxAttributeName[] values();\n}", "des": "ajax attribute names"}
{"index": 8909, "repo": "wicket-core-10.0.0-M1", "code": "public static enum AjaxChannel.Type extends Enum<AjaxChannel.Type> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AjaxChannel.Type valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AjaxChannel.Type[] values();\n}", "des": "The type of an AjaxChannel"}
{"index": 8910, "repo": "wicket-core-10.0.0-M1", "code": "public class AjaxEnclosureListener extends Object implements AjaxRequestTarget.IListener {\n\t// Check if a given component is the controlling child of a given enclosure\n\tstatic boolean isControllerOfEnclosure(Component component, Enclosure enclosure);\n\t// Try to find Enclosures that have their controllers added already, and add them to the target.\n\tvoid onBeforeRespond(Map<String,Component> map, AjaxRequestTarget target);\n}", "des": "This listener adds Enclosures to AjaxTarget, where the child controller of the said Enclosure is already added."}
{"index": 8911, "repo": "wicket-core-10.0.0-M1", "code": "public class AjaxPagingNavigationBehavior extends AjaxEventBehavior {\n\t// Called any time a component that has this handler registered is rendering the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n\t// The ajax event handler.\n\tprotected void onEvent(AjaxRequestTarget target);\n}", "des": "Ajax behavior for the paging navigation links."}
{"index": 8912, "repo": "wicket-core-10.0.0-M1", "code": "public class AjaxPreventSubmitBehavior extends AjaxEventBehavior {\n\t// Listener method for the ajax event\n\tprotected final void onEvent(AjaxRequestTarget target);\n\t// Gives a chance to the specializations to modify the attributes.\n\tprotected void updateAjaxAttributes(AjaxRequestAttributes attributes);\n}", "des": "An Ajax behavior that could be used to prevent the form submit when the user presses the ENTER key while in an HTML <input type=\"text\" > field."}
{"index": 8913, "repo": "wicket-core-10.0.0-M1", "code": "public static enum AjaxRequestAttributes.EventPropagation extends Enum<AjaxRequestAttributes.EventPropagation> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AjaxRequestAttributes.EventPropagation valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AjaxRequestAttributes.EventPropagation[] values();\n}", "des": "The JavaScript event propagation type"}
{"index": 8914, "repo": "wicket-core-10.0.0-M1", "code": "public static enum AjaxRequestAttributes.Method extends Enum<AjaxRequestAttributes.Method> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AjaxRequestAttributes.Method valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AjaxRequestAttributes.Method[] values();\n}", "des": "The method to be used when submitting a form"}
{"index": 8915, "repo": "wicket-core-10.0.0-M1", "code": "public static interface AjaxRequestTarget.IListener {\n\t// Triggered after the target has written components.\n\tdefault void onAfterRespond(Map<String,Component> map, AjaxRequestTarget target);\n\t// Triggered before the target begins writing components.\n\tdefault void onBeforeRespond(Map<String,Component> map, AjaxRequestTarget target);\n\t// Triggered for every Ajax behavior.\n\tdefault void updateAjaxAttributes(AbstractDefaultAjaxBehavior behavior, AjaxRequestAttributes attributes);\n}", "des": "An AjaxRequestTarget listener that can be used to respond to various target-related events"}
{"index": 8916, "repo": "wicket-core-10.0.0-M1", "code": "public class AjaxUtils extends Object {\n\t// Runs action if current request is of type \"AJAX\".\n\tstatic void executeIfAjax(org.danekja.java.util.function.serializable.SerializableConsumer<AjaxRequestTarget> ajaxAction);\n\t// Runs action if current request is of type \"AJAX\" or a Websockets request.\n\tstatic void executeIfAjaxOrWebSockets(org.danekja.java.util.function.serializable.SerializableConsumer<IPartialPageRequestHandler> ajaxAction);\n}", "des": "Some AJAX related utility functions."}
{"index": 8917, "repo": "wicket-core-10.0.0-M1", "code": "public class ApplicationListenerCollection extends org.apache.wicket.util.listener.ListenerCollection<IApplicationListener> implements IApplicationListener {\n\t// Called after application instance has been initialized\n\tvoid onAfterInitialized(Application application);\n\t// Called before application instance is destroyed\n\tvoid onBeforeDestroyed(Application application);\n}", "des": "ListenerCollection for IApplicationListeners"}
{"index": 8918, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class ArrayIteratorAdapter<T> extends Object implements Iterator<IModel<T>> {\n\tboolean hasNext();\n\t// This method is used to wrap the provided object with an implementation of IModel.\n\tprotected abstract IModel<T> model(T object);\n\tIModel<T> next();\n\tvoid remove();\n\t// Resets the iterator position back to the beginning of the array\n\tvoid reset();\n}", "des": "Iterator over an array."}
{"index": 8919, "repo": "wicket-core-10.0.0-M1", "code": "public class AsynchronousPageStore extends DelegatingPageStore {\n\t// Stores the page-\n\tvoid addPage(IPageContext context, IManageablePage page);\n\t// Destroy the store.\n\tvoid destroy();\n\t// Restores a page from storage.\n\tIManageablePage getPage(IPageContext context, int pageId);\n\t// All pages should be removed from storage for the given context.\n\tvoid removeAllPages(IPageContext context);\n\t// Removes a page from storage.\n\tvoid removePage(IPageContext context, IManageablePage page);\n}", "des": "Facade for IPageStore moving AsynchronousPageStore.addPage(IPageContext, IManageablePage) to a worker thread."}
{"index": 8920, "repo": "wicket-core-10.0.0-M1", "code": "public class AttributeAppender extends AttributeModifier {\n\t// Gets the separator used by attribute appenders and prependers.\n\tString getSeparator();\n\t// Gets the value that should replace the current attribute value.\n\tprotected Serializable newValue(String currentValue, String appendValue);\n\t// Sets the separator used by attribute appenders and prependers.\n\tAttributeAppender setSeparator(String separator);\n}", "des": "AttributeModifier that appends the given value, rather than replace it."}
{"index": 8921, "repo": "wicket-core-10.0.0-M1", "code": "public static enum AttributeModifier.MarkerValue extends Enum<AttributeModifier.MarkerValue> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AttributeModifier.MarkerValue valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AttributeModifier.MarkerValue[] values();\n}", "des": "Special attribute value markers."}
{"index": 8922, "repo": "wicket-core-10.0.0-M1", "code": "public static final class AutoLinkResolver.AutolinkBookmarkablePageLink<T> extends BookmarkablePageLink<T> implements IComponentResolver {\n\t// Gets the url to use for this link.\n\tprotected CharSequence getURL();\n\t// Try to resolve a component.\n\tComponent resolve(MarkupContainer container, MarkupStream markupStream, ComponentTag tag);\n}", "des": "Autolink components delegate component resolution to their parent components."}
{"index": 8923, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class BlobImageResource extends DynamicImageResource {\n\t// Gets the BLOB (Binary Large OBject) that holds the raw image data.\n\tprotected abstract Blob getBlob(IResource.Attributes attributes);\n\t// Get image data for our dynamic image resource.\n\tprotected byte[] getImageData(IResource.Attributes attributes);\n}", "des": "An ImageResource subclass for dynamic images that come from database BLOB fields."}
{"index": 8924, "repo": "wicket-core-10.0.0-M1", "code": "public class BorderBehavior extends Behavior {\n\t// Called when a component that has this behavior coupled was rendered.\n\tvoid afterRender(Component component);\n\t// Called when a component is about to render.\n\tvoid beforeRender(Component component);\n}", "des": "This is a behavior implementation that can be used if you have markup that should be around a component."}
{"index": 8925, "repo": "wicket-core-10.0.0-M1", "code": "public class BorderMarkupSourcingStrategy extends AssociatedMarkupSourcingStrategy {\n\t// Return null and thus use Border.getMarkup(child) to provide the Markup\n\tIMarkupFragment getMarkup(MarkupContainer container, Component child);\n\t// Skip the components body which is expected to be raw markup only (no wicket components).\n\tvoid onComponentTagBody(Component component, MarkupStream markupStream, ComponentTag openTag);\n}", "des": "The Border component's markup sourcing strategy"}
{"index": 8926, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class BorderPanel extends Panel {\n\t// Provide easy access to the Body component.\n\tfinal Body getBodyContainer();\n\t// Create a new body container identified by id in the panel's markup\n\tfinal Body newBodyContainer(String id);\n\t// If Component.getMarkupSourcingStrategy() returns null, this method will be called.\n\tprotected IMarkupSourcingStrategy newMarkupSourcingStrategy();\n\t// Sets the body container\n\tfinal Body setBodyContainer(Body body);\n}", "des": "Whereas a Panel replaces the body markup with the associated markup file, a BorderPanel assumes a that Body component renders the body markup including any number of Wicket Components."}
{"index": 8927, "repo": "wicket-core-10.0.0-M1", "code": "public enum Broadcast extends Enum<Broadcast> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Broadcast valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Broadcast[] values();\n}", "des": "Defines the event broadcast type."}
{"index": 8928, "repo": "wicket-core-10.0.0-M1", "code": "public class BrowserInfoForm extends GenericPanel<ClientProperties> {\n\tprotected void afterSubmit();\n\t// Creates the form\n\tprotected Form<ClientProperties> createForm(String componentId, IModel<ClientProperties> properties);\n\tString getFormMarkupId();\n\t// Render to the web response whatever the component wants to contribute to the head section.\n\tvoid renderHead(IHeaderResponse response);\n}", "des": "Form for posting JavaScript properties."}
{"index": 8929, "repo": "wicket-core-10.0.0-M1", "code": "public class BundleStringResourceLoader extends Object implements IStringResourceLoader {\n\t// Get the value via a Java ResourceBundle\n\tfinal String loadStringResource(Class<?> clazz, String key, Locale locale, String style, String variation);\n\t// Get the requested string resource from the underlying resource bundle.\n\tfinal String loadStringResource(Component component, String key, Locale locale, String style, String variation);\n}", "des": "Implementation of a string resource loader that sits on top of the ordinary Java resource bundle mechanism."}
{"index": 8930, "repo": "wicket-core-10.0.0-M1", "code": "public class CachingResourceVersion extends Object implements IResourceVersion {\n\t// get unique string identifying the version of the resource\n\tString getVersion(IStaticCacheableResource resource);\n\t// a pattern that matches returned versions\n\tPattern getVersionPattern();\n\t// remove cacheable resource from cache\n\tvoid invalidate(IStaticCacheableResource resource);\n\tvoid invalidateAll();\n}", "des": "Caches the results of a delegating IResourceVersion instance in a member variable."}
{"index": 8931, "repo": "wicket-core-10.0.0-M1", "code": "public class ChainingModel<T> extends Object implements IModel<T> {\n\t// Unsets this property model's instance variables and detaches the model.\n\tvoid detach();\n\tIModel<?> getChainedModel();\n\tfinal Object getInnermostModelOrObject();\n\t// Gets the model object.\n\tT getObject();\n\tfinal Object getTarget();\n\t// Sets the model object.\n\tvoid setObject(T object);\n\t// Sets a new target - object or model\n\tprotected final ChainingModel<T> setTarget(Object modelObject);\n}", "des": "This model and its subclasses support chaining of IModels."}
{"index": 8932, "repo": "wicket-core-10.0.0-M1", "code": "public class CharSequenceResource extends BaseDataResource<CharSequence> {\n\tprotected Charset getCharset();\n\tprotected Long getLength(CharSequence data);\n\t// Sets the character set used for reading this resource.\n\tvoid setCharset(Charset charset);\n\t// Writes the given data to the response\n\tprotected void writeData(org.apache.wicket.request.Response response, CharSequence data);\n}", "des": "An IResource for CharSequences."}
{"index": 8933, "repo": "wicket-core-10.0.0-M1", "code": "public class CheckBox extends FormComponent<Boolean> {\n\t// Checks if the form component's 'required' requirement is met by first checking FormComponent.isRequired() to see if it has to check for requirement.\n\tboolean checkRequired();\n\t// Factory method for converters to be used by this component, returns null by default.\n\tprotected org.apache.wicket.util.convert.IConverter<?> createConverter(Class<?> type);\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n}", "des": "HTML checkbox input component."}
{"index": 8934, "repo": "wicket-core-10.0.0-M1", "code": "public class CheckGroup<T> extends FormComponent<Collection<T>> {\n\t// Subclasses should overwrite this if the conversion is not done through the type field and the IConverter.\n\tprotected Collection<T> convertValue(String[] values);\n\tprotected String getModelValue();\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n\t// See FormComponent.updateCollectionModel(FormComponent) for details on how the model is updated.\n\tvoid updateModel();\n}", "des": "Component used to connect instances of Check components into a group."}
{"index": 8935, "repo": "wicket-core-10.0.0-M1", "code": "public class CheckGroupSelector extends AbstractCheckSelector {\n\t// Find all checkboxes in the containing form with the same input name as the CheckGroup .\n\tprotected CharSequence getFindCheckboxesFunction();\n\t// Gets whether this component is enabled.\n\tboolean isEnabled();\n\t// Called on all visible components before any component is rendered.\n\tprotected void onBeforeRender();\n}", "des": "Selects and deselects all Check components under the same CheckGroup as itself."}
{"index": 8936, "repo": "wicket-core-10.0.0-M1", "code": "public class CheckingObjectOutputStream extends ObjectOutputStream {\n\tvoid close();\n\t// Gets whether we can execute the tests.\n\tstatic boolean isAvailable();\n\tvoid reset();\n\t// Dump with indentation.\n\tprotected final String toPrettyPrintedStack(String type);\n\tprotected final void writeObjectOverride(Object obj);\n}", "des": "Checks an object tree during serialization for wrong state by delegating the work to the used IObjectCheckers."}
{"index": 8937, "repo": "wicket-core-10.0.0-M1", "code": "public class ChildFirstHeaderRenderStrategy extends AbstractHeaderRenderStrategy {\n\t// Render the child hierarchy headers.\n\tprotected void renderChildHeaders(HtmlHeaderContainer headerContainer, Component rootComponent);\n\t// Implements the render strategy\n\tvoid renderHeader(HtmlHeaderContainer headerContainer, HtmlHeaderContainer.HeaderStreamState headerStreamState, Component rootComponent);\n}", "des": "This a header render strategy implements a child->parent->root sequence, which is inverse to how it was until Wicket 1.5."}
{"index": 8938, "repo": "wicket-core-10.0.0-M1", "code": "public class ChoiceRenderer<T> extends Object implements IChoiceRenderer<T>, org.apache.wicket.util.io.IClusterable {\n\t// Get the value for displaying to an end user.\n\tObject getDisplayValue(T object);\n\t// This method is called to get the id value of an object (used as the value attribute of a choice element) The id can be extracted from the object like a primary key, or if the list is stable you could just return a toString of the index.\n\tString getIdValue(T object, int index);\n}", "des": "Renders one choice."}
{"index": 8939, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class ClassAttributeModifier extends AttributeAppender {\n\t// Gets the value that should replace the current attribute value.\n\tprotected Serializable newValue(String currentValue, String appendValue);\n\t// Callback to update the CSS class values for a tag.\n\tprotected abstract Set<String> update(Set<String> oldClasses);\n}", "des": "An AttributeModifier specialized in managing the CSS class attribute"}
{"index": 8940, "repo": "wicket-core-10.0.0-M1", "code": "public class ClassStringResourceLoader extends ComponentStringResourceLoader {\n\t// Get the string resource for the given combination of component class, resource key, locale and style.\n\tString loadStringResource(Class<?> clazz, String key, Locale locale, String style, String variation);\n\t// Get the string resource for the given combination of component, resource key, locale and style.\n\tString loadStringResource(Component component, String key, Locale locale, String style, String variation);\n}", "des": "This string resource loader attempts to find a single resource bundle that has the same name and location as the clazz provided in the constructor."}
{"index": 8941, "repo": "wicket-core-10.0.0-M1", "code": "public class ComponentPropertyModel<T> extends Object implements IComponentAssignedModel<T> {\n\t// Gets the model object.\n\tT getObject();\n\t// Sets the model object.\n\tfinal void setObject(T object);\n\t// This method is called when the component gets its model assigned.\n\tIWrapModel<T> wrapOnAssignment(Component component);\n}", "des": "A model that references a property by name on the current model of the component it is bound to."}
{"index": 8942, "repo": "wicket-core-10.0.0-M1", "code": "public class ComponentRenderingRequestHandler extends Object implements IComponentRequestHandler {\n\tvoid detach(org.apache.wicket.request.IRequestCycle requestCycle);\n\t// Returns the component instance.\n\tIRequestableComponent getComponent();\n\t// Returns the page relative path to the component instance.\n\tfinal String getComponentPath();\n\tvoid respond(org.apache.wicket.request.IRequestCycle requestCycle);\n}", "des": "Request handler that renders a component"}
{"index": 8943, "repo": "wicket-core-10.0.0-M1", "code": "public class CompositeCssCompressor extends Object implements IScopeAwareTextResourceProcessor, ICssCompressor {\n\t// Adds a ICssCompressor to the list of delegates.\n\tCompositeCssCompressor add(ICssCompressor compressor);\n\t// Remove comments and white spaces from the text resource\n\tString compress(String original);\n\t// Compresses the given original content in the order of compressors.\n\tString process(String input, Class<?> scope, String name);\n}", "des": "Used to apply several ICssCompressor to the CSS compression. Usage:"}
{"index": 8944, "repo": "wicket-core-10.0.0-M1", "code": "public class CompositeJavaScriptCompressor extends Object implements IScopeAwareTextResourceProcessor, IJavaScriptCompressor {\n\t// Adds a IJavaScriptCompressor to the list of delegates.\n\tCompositeJavaScriptCompressor add(IJavaScriptCompressor compressor);\n\t// Remove comments and white spaces from the text resource\n\tString compress(String original);\n\t// Compresses the given original content in the order of compressors.\n\tString process(String input, Class<?> scope, String name);\n}", "des": "Used to apply several IJavaScriptCompressor to the javascript compression. Usage:"}
{"index": 8945, "repo": "wicket-core-10.0.0-M1", "code": "public enum ContentDisposition extends Enum<ContentDisposition> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ContentDisposition valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ContentDisposition[] values();\n}", "des": "Represents content disposition of a resource"}
{"index": 8946, "repo": "wicket-core-10.0.0-M1", "code": "public class ContextParamWebApplicationFactory extends Object implements IWebApplicationFactory {\n\t// Instantiates the application instance.\n\tprotected WebApplication createApplication(String applicationClassName);\n\t// Create application object\n\tWebApplication createApplication(WicketFilter filter);\n\t// Called when the filter instance that used this factory is destroyed\n\tvoid destroy(WicketFilter filter);\n}", "des": "Factory that creates application objects based on the class name specified in the ContextParamWebApplicationFactory.APP_CLASS_PARAM context variable."}
{"index": 8947, "repo": "wicket-core-10.0.0-M1", "code": "public class ContextPathGenerator extends Behavior {\n\t// Allows the behavior to detach any state it has attached during request processing.\n\tvoid detach(Component component);\n\t// Called any time a component that has this behavior registered is rendering the component tag.\n\tvoid onComponentTag(Component component, ComponentTag tag);\n}", "des": "A behavior that converts the provider url fragment to a context-relative url."}
{"index": 8948, "repo": "wicket-core-10.0.0-M1", "code": "public class CoreLibrariesContributor extends Object {\n\t// Contributes the backing library plus the implementation of Wicket.Event.\n\tstatic void contribute(Application application, IHeaderResponse response);\n\t// Contributes the Ajax backing library plus wicket-event.js and wicket-ajax.js implementations.\n\tstatic void contributeAjax(Application application, IHeaderResponse response);\n}", "des": "A helper class that contributes all required JavaScript resources needed for Wicket Ajax functionality"}
{"index": 8949, "repo": "wicket-core-10.0.0-M1", "code": "public enum CrossOrigin extends Enum<CrossOrigin> {\n\t// Gets the real name for the cors option\n\tString getRealName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CrossOrigin valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CrossOrigin[] values();\n}", "des": "To be used for the crossOrigin attribute"}
{"index": 8950, "repo": "wicket-core-10.0.0-M1", "code": "public class CryptingPageStore extends DelegatingPageStore {\n\t// Stores the page-\n\tvoid addPage(IPageContext context, IManageablePage page);\n\t// Supports asynchronous add if the delegate supports it.\n\tboolean canBeAsynchronous(IPageContext context);\n\t// Restores a page from storage.\n\tIManageablePage getPage(IPageContext context, int id);\n\t// Create a new ICrypter.\n\tprotected ICrypter newCrypter();\n\t// Pages are always serialized, so versioning is supported.\n\tboolean supportsVersioning();\n}", "des": "A store that encrypts all pages before delegating and vice versa."}
{"index": 8951, "repo": "wicket-core-10.0.0-M1", "code": "public enum CSPDirectiveSrcValue extends Enum<CSPDirectiveSrcValue> implements CSPRenderable {\n\tString getValue();\n\t// Renders the value that should be put in the CSP header.\n\tString render(ContentSecurityPolicySettings settings, RequestCycle cycle);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CSPDirectiveSrcValue valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CSPDirectiveSrcValue[] values();\n}", "des": "An enum holding the default values for -src directives including the mandatory single quotes"}
{"index": 8952, "repo": "wicket-core-10.0.0-M1", "code": "public enum CSPHeaderMode extends Enum<CSPHeaderMode> {\n\tString getHeader();\n\tString getLegacyHeader();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CSPHeaderMode valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CSPHeaderMode[] values();\n}", "des": "Defines the possible headers for a CSP directive."}
{"index": 8953, "repo": "wicket-core-10.0.0-M1", "code": "public interface CSPRenderable {\n\t// Checks if the CSPRenderable represents a valid value for a -src directive.\n\tdefault void checkValidityForSrc();\n\t// Renders the value that should be put in the CSP header.\n\tString render(ContentSecurityPolicySettings settings, RequestCycle cycle);\n}", "des": "CSPRenderable describes a directive that is part of a Content-Security-Policy (CSP in short)."}
{"index": 8954, "repo": "wicket-core-10.0.0-M1", "code": "public final class CssTemplate extends TextTemplateDecorator {\n\t// Retrieves the String to put after the actual template contents, for example:\n\tString getAfterTemplateContents();\n\t// Retrieves the String to put before the actual template contents, for example:\n\tString getBeforeTemplateContents();\n\t// Retrieves the String resource.\n\tString getString();\n\t// This class decorates another TextTemplate class and so does not allow interpolation.\n\tTextTemplate interpolate(Map<String,?> variables);\n}", "des": "Decorates a TextTemplate with CSS tags."}
{"index": 8955, "repo": "wicket-core-10.0.0-M1", "code": "public class CssUrlReplacer extends Object implements IScopeAwareTextResourceProcessor, ICssCompressor {\n\t// Remove comments and white spaces from the text resource\n\tString compress(String original);\n\t// Gets excluded css file names\n\tCollection<String> getExcludes();\n\t// Replaces the URLs of CSS resources with Wicket representatives.\n\tString process(String input, Class<?> scope, String name);\n\t// Sets a list of css file names to be excluded\n\tvoid setExcludes(Collection<String> excludes);\n}", "des": "This compressor is used to replace URLs within CSS files with URLs created from PackageResourceReferences that belongs to their corresponding resources (e.g images).The scope of the CSS file is used to create the PackageResourceReferences."}
{"index": 8956, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class DataViewBase<T> extends AbstractPageableView<T> {\n\t// Returns an iterator over models for items in the current page\n\tprotected final Iterator<IModel<T>> getItemModels(long offset, long count);\n\tprotected final IDataProvider<T> internalGetDataProvider();\n\tprotected final long internalGetItemCount();\n\t// Called to allow a component to detach resources after use.\n\tprotected void onDetach();\n}", "des": "Base class for data views."}
{"index": 8957, "repo": "wicket-core-10.0.0-M1", "code": "public class DefaultPageContext extends Object implements IPageContext {\n\t// Get data from the current request cycle.\n\t<T> T getRequestData(MetaDataKey<T> key, Supplier<T> defaultValue);\n\t// Get an attribute from the session.\n\t<T extends Serializable>T getSessionAttribute(String key, Supplier<T> defaultValue);\n\t// Get metadata from the session.\n\t<T extends Serializable>T getSessionData(MetaDataKey<T> key, Supplier<T> defaultValue);\n\t// Get the identifier of the session.\n\tString getSessionId(boolean bind);\n}", "des": "Default page context using RequestCycle.getRequest() and Session.get()."}
{"index": 8958, "repo": "wicket-core-10.0.0-M1", "code": "public class DefaultPageLockManager extends Object implements IPageLockManager {\n\tDuration getTimeout(int pageId);\n\t// Acquire a lock to a page\n\tvoid lockPage(int pageId);\n\t// Unlocks all pages locked by this thread\n\tvoid unlockAllPages();\n\t// Unlocks a single page locked by the current thread.\n\tvoid unlockPage(int pageId);\n}", "des": "Default IPageLockManager that holds a map of locks in the current session."}
{"index": 8959, "repo": "wicket-core-10.0.0-M1", "code": "public class DeflatedJavaSerializer extends JavaSerializer {\n\t// Creates the Deflater.\n\tprotected Deflater createDeflater();\n\t// Gets a new instance of an ObjectInputStream with the provided InputStream.\n\tprotected ObjectInputStream newObjectInputStream(InputStream in);\n\t// Gets a new instance of an ObjectOutputStream with the provided OutputStream.\n\tprotected ObjectOutputStream newObjectOutputStream(OutputStream out);\n}", "des": "A JavaSerializer that deflates the outputstream on the fly, reducing page store size by up to a factor 8."}
{"index": 8960, "repo": "wicket-core-10.0.0-M1", "code": "public final class DiffUtil extends Object {\n\t// Replace the expected result file with the current output.\n\tstatic void replaceExpectedResultFile(String document, Class<?> clazz, String file);\n\t// Compare the output generated by Wicket (\"document\") with the a previously generated file which contains the expected result.\n\tstatic boolean validatePage(String document, Class<?> clazz, String file, boolean failWithAssert);\n}", "des": "This is a utility class."}
{"index": 8961, "repo": "wicket-core-10.0.0-M1", "code": "public class DummyPanelPage extends WebPage {\n\t// Creates the panel under test\n\tprotected Panel getTestPanel(String id);\n\t// This method is meant to be used as an alternative to initialize components.\n\tprotected void onInitialize();\n}", "des": "A dummy Panel Component."}
{"index": 8962, "repo": "wicket-core-10.0.0-M1", "code": "public final class EnclosureHandler extends AbstractMarkupFilter implements IComponentResolver {\n\t// Invoked when a ComponentTag was found.\n\tprotected final MarkupElement onComponentTag(ComponentTag tag);\n\t// Try to resolve a component.\n\tComponent resolve(MarkupContainer container, MarkupStream markupStream, ComponentTag tag);\n}", "des": "This is a markup inline filter."}
{"index": 8963, "repo": "wicket-core-10.0.0-M1", "code": "public class EnumLabel<T extends Enum<T>> extends WebComponent implements IGenericComponent<T,EnumLabel<T>> {\n\tprotected String nullValue();\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n\t// Processes the body.\n\tvoid onComponentTagBody(MarkupStream markupStream, ComponentTag openTag);\n\t// Converts enum value into a resource key that should be used to lookup the text the label will display\n\tprotected String resourceKey(T value);\n}", "des": "A Label component that is used to render an enum value."}
{"index": 8964, "repo": "wicket-core-10.0.0-M1", "code": "public class ErrorAttributes extends Object {\n\t// Gets exception.\n\tThrowable getException();\n\t// Gets exceptionType.\n\tClass<? extends Throwable> getExceptionType();\n\t// Gets message.\n\tString getMessage();\n\t// Gets requestUri.\n\tString getRequestUri();\n\t// Gets servletName.\n\tString getServletName();\n\t// Gets statusCode.\n\tInteger getStatusCode();\n\t// Factory for creating instances of this class.\n\tstatic ErrorAttributes of(jakarta.servlet.http.HttpServletRequest request, String filterPrefix);\n}", "des": "Represents additional error attributes present in a ServletRequest when the servlet container is handling an error or a forward to an error page mapped by error-page element in web.xml."}
{"index": 8965, "repo": "wicket-core-10.0.0-M1", "code": "public class ExceptionErrorPage extends AbstractErrorPage {\n\t// Converts a Throwable to a string.\n\tString getErrorMessage(Throwable throwable);\n\t// Converts a Throwable to a string.\n\tString getStackTrace(Throwable throwable);\n\t// Get access to the exception\n\tThrowable getThrowable();\n\t// Subclasses can override this to set there headers when the Page is being served.\n\tprotected void setHeaders(org.apache.wicket.request.http.WebResponse response);\n}", "des": "Shows a runtime exception on a nice HTML page."}
{"index": 8966, "repo": "wicket-core-10.0.0-M1", "code": "public static enum ExceptionSettings.AjaxErrorStrategy extends Enum<ExceptionSettings.AjaxErrorStrategy> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ExceptionSettings.AjaxErrorStrategy valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ExceptionSettings.AjaxErrorStrategy[] values();\n}", "des": "How to handle errors while processing an Ajax request"}
{"index": 8967, "repo": "wicket-core-10.0.0-M1", "code": "public static enum ExceptionSettings.NotRenderableErrorStrategy extends Enum<ExceptionSettings.NotRenderableErrorStrategy> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ExceptionSettings.NotRenderableErrorStrategy valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ExceptionSettings.NotRenderableErrorStrategy[] values();\n}", "des": "A strategy defining what to do when a component that will not render its markup tag (because of setRenderBodyOnly(true) or used with <wicket:xyz>) is also asked to output a markup id or placeholder tag"}
{"index": 8968, "repo": "wicket-core-10.0.0-M1", "code": "public static enum ExceptionSettings.ThreadDumpStrategy extends Enum<ExceptionSettings.ThreadDumpStrategy> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ExceptionSettings.ThreadDumpStrategy valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ExceptionSettings.ThreadDumpStrategy[] values();\n}", "des": "Which threads' stacktrace to dump when a page lock timeout occurs"}
{"index": 8969, "repo": "wicket-core-10.0.0-M1", "code": "public class ExternalSource extends ExternalImage {\n\t// Unsupported for source tag\n\tfinal CrossOrigin getCrossOrigin();\n\t// Gets the media attribute information\n\tString getMedia();\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n\t// Unsupported for source tag\n\tvoid setCrossOrigin(CrossOrigin crossorigin);\n\t// Sets the media attribute information\n\tvoid setMedia(String media);\n}", "des": "A component which displays external images within a picture tag."}
{"index": 8970, "repo": "wicket-core-10.0.0-M1", "code": "public class FeedbackDelay extends Object implements Serializable, AutoCloseable {\n\t// Prepares all postponed feedbacks for render.\n\tvoid beforeRender();\n\t// Close any delays.\n\tvoid close();\n\t// Get the current delay.\n\tstatic Optional<FeedbackDelay> get(RequestCycle cycle);\n\t// Postpone Component.beforeRender() on the given feedback.\n\tFeedbackDelay postpone(IFeedback feedback);\n}", "des": "Postpone calling IFeedback.beforeRender() after other components."}
{"index": 8971, "repo": "wicket-core-10.0.0-M1", "code": "public class FetchMetadataResourceIsolationPolicy extends Object implements IResourceIsolationPolicy {\n\t// Is the given request allowed.\n\tIResourceIsolationPolicy.ResourceIsolationOutcome isRequestAllowed(jakarta.servlet.http.HttpServletRequest request, IRequestablePage targetPage);\n\t// Set vary headers to avoid caching responses processed by Fetch Metadata.\n\tvoid setHeaders(jakarta.servlet.http.HttpServletResponse response);\n}", "des": "Default resource isolation policy used in ResourceIsolationRequestCycleListener, based on https://web.dev/fetch-metadata/."}
{"index": 8972, "repo": "wicket-core-10.0.0-M1", "code": "public class FileSystemJarPathService extends Object implements FileSystemPathService {\n\t// Gets the actual path for a specific file system to work on\n\tPath getPath(URI uri, Map<String,String> env);\n\t// Checks if the file system path service is responsible to handle the given URI\n\tboolean isResponsible(URI uri);\n}", "des": "Gets the actual path for a jar file system"}
{"index": 8973, "repo": "wicket-core-10.0.0-M1", "code": "public interface FileSystemPathService {\n\t// Gets the actual path for a specific file system to work on\n\tPath getPath(URI uri, Map<String,String> env);\n\t// Checks if the file system path service is responsible to handle the given URI\n\tboolean isResponsible(URI uri);\n}", "des": "Gets the actual path for a specific file system."}
{"index": 8974, "repo": "wicket-core-10.0.0-M1", "code": "public class FilteredHeaderItem extends HeaderItem implements IWrappedHeaderItem {\n\tboolean equals(Object o);\n\tList<HeaderItem> getDependencies();\n\tString getFilterName();\n\tIterable<? extends HeaderItem> getProvidedResources();\n\tIterable<?> getRenderTokens();\n\tHeaderItem getWrapped();\n\t// Renders the HeaderItem to the response.\n\tvoid render(org.apache.wicket.request.Response response);\n\t// Wraps an existing HeaderItem\n\tFilteredHeaderItem wrap(HeaderItem item);\n}", "des": "HeaderItem that specifies the filter it belongs to."}
{"index": 8975, "repo": "wicket-core-10.0.0-M1", "code": "public class FixedCSPValue extends Object implements CSPRenderable {\n\t// Checks if the CSPRenderable represents a valid value for a -src directive.\n\tvoid checkValidityForSrc();\n\t// Renders the value that should be put in the CSP header.\n\tString render(ContentSecurityPolicySettings settings, RequestCycle cycle);\n}", "des": "A simple CSP value that renders the string specified."}
{"index": 8976, "repo": "wicket-core-10.0.0-M1", "code": "public static enum Form.MethodMismatchResponse extends Enum<Form.MethodMismatchResponse> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Form.MethodMismatchResponse valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Form.MethodMismatchResponse[] values();\n}", "des": "Response when a submission method mismatch is detected"}
{"index": 8977, "repo": "wicket-core-10.0.0-M1", "code": "public class FormComponentFeedbackIndicator extends Panel implements IFeedback {\n\tprotected IFeedbackMessageFilter getFeedbackMessageFilter();\n\t// Set the component's visibility according to the existence (or not) of feedback messages\n\tvoid onConfigure();\n\t// This method is meant to be used as an alternative to initialize components.\n\tprotected void onInitialize();\n\tvoid setIndicatorFor(Component component);\n}", "des": "A panel that hides or shows itself depending on whether there are feedback messages for a given message filter."}
{"index": 8978, "repo": "wicket-core-10.0.0-M1", "code": "public class FormComponentLabel extends WebMarkupContainer {\n\t// Returns LabeledWebMarkupContainer bound to this label.\n\tLabeledWebMarkupContainer getFormComponent();\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n}", "des": "A component that represents HTML <label> tag."}
{"index": 8979, "repo": "wicket-core-10.0.0-M1", "code": "public class ForwardAttributes extends Object {\n\t// Gets contextPath.\n\tString getContextPath();\n\tString getPathInfo();\n\t// Gets the query string.\n\tString getQueryString();\n\t// Gets requestUri.\n\tString getRequestUri();\n\t// Gets servletPath.\n\tString getServletPath();\n\t// Factory for creating instances of this class.\n\tstatic ForwardAttributes of(jakarta.servlet.http.HttpServletRequest request, String filterPrefix);\n}", "des": "Represents additional attributes present in a ServletRequest when the servlet container is handling a forward to another path than the initially requested one."}
{"index": 8980, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class GenericBaseModel<T> extends Object implements IObjectClassAwareModel<T> {\n\t// Creates a serializable version of the object.\n\tprotected abstract T createSerializableVersionOf(T object);\n\t// Detaches model after use.\n\tvoid detach();\n\tboolean equals(Object obj);\n\t// Gets the model object.\n\tT getObject();\n\t// Returns the class of model object\n\tClass<T> getObjectClass();\n\t// Set the model object.\n\tvoid setObject(T object);\n}", "des": "Base class for models that contain instances that do not appear to be serializable and cannot thus use Model directly."}
{"index": 8981, "repo": "wicket-core-10.0.0-M1", "code": "public final class HeaderPartContainer extends WebMarkupContainer implements IComponentResolver {\n\t// Get the scope of the header part\n\tfinal String getScope();\n\t// The tag must be resolved against the panel and not against the page\n\tfinal Component resolve(MarkupContainer container, MarkupStream markupStream, ComponentTag tag);\n}", "des": "For each wicket:head tag a HeaderPartContainer is created and added to the HtmlHeaderContainer which has been added to the Page."}
{"index": 8982, "repo": "wicket-core-10.0.0-M1", "code": "public class HeaderResponseContainer extends WebMarkupContainer {\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n\t// Handle the container's body.\n\tvoid onComponentTagBody(MarkupStream markupStream, ComponentTag openTag);\n}", "des": "A container that renders the content that was bucketed into a certain bucket by FilteringHeaderResponse."}
{"index": 8983, "repo": "wicket-core-10.0.0-M1", "code": "public class HomePageMapper extends MountedMapper {\n\t// Use this mapper as a last option.\n\tint getCompatibilityScore(org.apache.wicket.request.Request request);\n\t// Matches only when there are no segments/indexed parameters\n\tprotected AbstractBookmarkableMapper.UrlInfo parseRequest(org.apache.wicket.request.Request request);\n}", "des": "A mapper that is used when a request to the home page (\"/\") is made"}
{"index": 8984, "repo": "wicket-core-10.0.0-M1", "code": "public final class HtmlHandler extends AbstractMarkupFilter {\n\t// Compare tag name including namespace\n\tstatic boolean hasEqualTagName(ComponentTag tag1, ComponentTag tag2);\n\t// Invoked when a ComponentTag was found.\n\tprotected MarkupElement onComponentTag(ComponentTag tag);\n\t// Called after all filters have been processed.\n\tvoid postProcess(Markup markup);\n\t// Gets whether this tag does not require a closing tag.\n\tstatic boolean requiresCloseTag(String name);\n}", "des": "This is a markup inline filter."}
{"index": 8985, "repo": "wicket-core-10.0.0-M1", "code": "public class HtmlHeaderResolver extends Object implements IComponentResolver {\n\t// Return a new HtmlHeaderContainer\n\tprotected HtmlHeaderContainer newHtmlHeaderContainer(String id, ComponentTag tag);\n\t// Try to resolve a component.\n\tComponent resolve(MarkupContainer container, MarkupStream markupStream, ComponentTag tag);\n}", "des": "This is a tag resolver which handles <head> and <wicket:head>tags."}
{"index": 8986, "repo": "wicket-core-10.0.0-M1", "code": "public class HttpsConfig extends Object {\n\tint getHttpPort();\n\tint getHttpsPort();\n\tboolean isPreferStateful();\n\t// Sets http port\n\tvoid setHttpPort(int httpPort);\n\t// Sets https port\n\tvoid setHttpsPort(int httpsPort);\n\t// Sets whether or not a new session is created before redirecting from http to https\n\tvoid setPreferStateful(boolean preferStateful);\n}", "des": "Configuration for http-https switching"}
{"index": 8987, "repo": "wicket-core-10.0.0-M1", "code": "public interface IActionAuthorizer extends org.apache.wicket.util.io.IClusterable {\n\t// Gets whether this action is authorized.\n\tboolean authorizeAction(Component component);\n\t// Gets the action that this authorizer authorizes.\n\tAction getAction();\n}", "des": "A way to provide authorization for a specific component action."}
{"index": 8988, "repo": "wicket-core-10.0.0-M1", "code": "public interface IApplicationListener {\n\t// Called after application instance has been initialized\n\tdefault void onAfterInitialized(Application application);\n\t// Called before application instance is destroyed\n\tdefault void onBeforeDestroyed(Application application);\n}", "des": "Application lifecycle listener"}
{"index": 8989, "repo": "wicket-core-10.0.0-M1", "code": "public interface IAuthenticationStrategy {\n\t// If \"rememberMe\" is enabled, then load the saved credentials (e.g.\n\tString[] load();\n\t// When the user logs out (session invalidation), then remove username and password from the persistence store\n\tvoid remove();\n\t// If \"rememberMe\" is enabled and login was successful, then store the given credentials in the persistence store (e.g.\n\tvoid save(String credential, String... extraCredentials);\n}", "des": "The interface of an authentication strategy which is accessible via Application.getSecuritySettings()."}
{"index": 8990, "repo": "wicket-core-10.0.0-M1", "code": "public interface IClassResolver {\n\t// Returns the ClassLoader to be used for resolving classes\n\tClassLoader getClassLoader();\n\t// Tries to load all the resources by the name that is given.\n\tIterator<URL> getResources(String name);\n\t// Resolves a class by name (which may or may not involve loading it; thus the name class *resolver* not *loader*).\n\tClass<?> resolveClass(String classname);\n}", "des": "An interface to code which finds classes and resources"}
{"index": 8991, "repo": "wicket-core-10.0.0-M1", "code": "public interface IComponentRequestHandler extends org.apache.wicket.request.IRequestHandler {\n\t// Returns the component instance.\n\tIRequestableComponent getComponent();\n\t// Returns the page relative path to the component instance.\n\tString getComponentPath();\n}", "des": "Request handler that works with a component."}
{"index": 8992, "repo": "wicket-core-10.0.0-M1", "code": "public interface IDataProvider<T> extends IDetachable {\n\t// Detaches model after use.\n\tdefault void detach();\n\t// Gets an iterator for the subset of total data\n\tIterator<? extends T> iterator(long first, long count);\n\t// Callback used by the consumer of this data provider to wrap objects retrieved from iterator(long, long) with a model (usually a detachable one).\n\tIModel<T> model(T object);\n\t// Gets total number of items in the collection represented by the DataProvider\n\tlong size();\n}", "des": "Interface used to provide data to data views."}
{"index": 8993, "repo": "wicket-core-10.0.0-M1", "code": "public interface IDetachListener {\n\t// Called when the application is being destroyed.\n\tdefault void onDestroyListener();\n\t// Called when component is being detached via a call to Component.detach().\n\tdefault void onDetach(Component component);\n}", "des": "Listens to Component.detach() calls."}
{"index": 8994, "repo": "wicket-core-10.0.0-M1", "code": "public interface IEvent<T> {\n\t// Stops the broadcast of this event any deeper into the hierarchy of the current sink\n\tvoid dontBroadcastDeeper();\n\tT getPayload();\n\tIEventSource getSource();\n\tBroadcast getType();\n\t// Stops any further broadcast of this event\n\tvoid stop();\n}", "des": "An event"}
{"index": 8995, "repo": "wicket-core-10.0.0-M1", "code": "public interface IFormSubmittingComponent extends IFormSubmitter {\n\t// Returns the name that is unique to this component, at least within the form.\n\tString getInputName();\n\t// Sets the defaultFormProcessing property.\n\tComponent setDefaultFormProcessing(boolean defaultFormProcessing);\n}", "des": "Interface that must be implemented by components that are able to submit form."}
{"index": 8996, "repo": "wicket-core-10.0.0-M1", "code": "public interface IMarkupFilter {\n\t// IMarkupFilters are usually chained with the last filter retrieving the elements from the XML parser.\n\tIMarkupFilter getNextFilter();\n\t// Get the next MarkupElement from the parent MarkupFilter and handle it if the specific filter criteria are met.\n\tMarkupElement nextElement();\n\t// Called after all filters have been processed.\n\tvoid postProcess(Markup markup);\n\t// Set parent filter.\n\tvoid setNextFilter(IMarkupFilter parent);\n}", "des": "Wicket uses a streaming XML parser to read the markup."}
{"index": 8997, "repo": "wicket-core-10.0.0-M1", "code": "public interface IMarkupFragment extends Iterable<MarkupElement> {\n\t// Finds a markup fragment that spans a tag\n\tIMarkupFragment find(String wicketId);\n\t// Get the MarkupElement at the index provided.\n\tMarkupElement get(int index);\n\t// Get the underlying markup resource stream, which might contain more than just the markup portion represented by the IMarkupFragment.\n\tMarkupResourceStream getMarkupResourceStream();\n\t// The number of markup elements.\n\tint size();\n\tString toString(boolean markupOnly);\n}", "des": "Any list of MarkupElements."}
{"index": 8998, "repo": "wicket-core-10.0.0-M1", "code": "public class Include extends WebComponent implements IGenericComponent<String,Include> {\n\tCharset getCharset();\n\t// Imports the contents of the url of the model object.\n\tprotected String importAsString();\n\t// Processes the body.\n\tvoid onComponentTagBody(MarkupStream markupStream, ComponentTag openTag);\n}", "des": "Component that includes/ renders the import result of an URL, much like JSP include."}
{"index": 8999, "repo": "wicket-core-10.0.0-M1", "code": "public class InitializerStringResourceLoader extends ComponentStringResourceLoader {\n\t// Get the string resource for the given combination of component class, resource key, locale and style.\n\tString loadStringResource(Class<?> clazz, String key, Locale locale, String style, String variation);\n\t// Get the string resource for the given combination of component, resource key, locale and style.\n\tString loadStringResource(Component component, String key, Locale locale, String style, String variation);\n}", "des": "This is one of Wicket's default string resource loaders."}
{"index": 9000, "repo": "wicket-core-10.0.0-M1", "code": "public final class InlineEnclosureHandler extends AbstractMarkupFilter implements IComponentResolver {\n\t// Invoked when a ComponentTag was found.\n\tprotected MarkupElement onComponentTag(ComponentTag tag);\n\t// Try to resolve a component.\n\tComponent resolve(MarkupContainer container, MarkupStream markupStream, ComponentTag tag);\n}", "des": "This is a markup inline filter."}
{"index": 9001, "repo": "wicket-core-10.0.0-M1", "code": "public class InlineFrame extends WebMarkupContainer implements IRequestListener {\n\t// Returns whether the component can be stateless.\n\tprotected boolean getStatelessHint();\n\t// Gets the url to use for this link.\n\tprotected CharSequence getURL();\n\t// Handles this frame's tag.\n\tprotected void onComponentTag(ComponentTag tag);\n\t// Called when a request is received.\n\tfinal void onRequest();\n\t// Does invocation of this listener render the page.\n\tboolean rendersPage();\n}", "des": "Implementation of an inline frame component."}
{"index": 9002, "repo": "wicket-core-10.0.0-M1", "code": "public static interface InMemoryPageStore.IMemoryData extends Iterable<IManageablePage> {\n\t// Add a page.\n\tvoid add(IManageablePage page);\n\t// Get a page.\n\tIManageablePage get(int id);\n\t// Remove a page.\n\tIManageablePage remove(int pageId);\n}", "des": "Pages kept in memory for a session."}
{"index": 9003, "repo": "wicket-core-10.0.0-M1", "code": "protected static class InMemoryPageStore.MemoryData extends Object implements InMemoryPageStore.IMemoryData {\n\t// Add a page.\n\tvoid add(IManageablePage page);\n\t// Get a page.\n\tIManageablePage get(int pageId);\n\tIterator<IManageablePage> iterator();\n\t// Remove a page.\n\tIManageablePage remove(int pageId);\n\tprotected void removeOldest();\n}", "des": "List based implementation."}
{"index": 9004, "repo": "wicket-core-10.0.0-M1", "code": "protected static class InMemoryPageStore.SizeLimitedData extends InMemoryPageStore.MemoryData {\n\t// Add a page.\n\tvoid add(IManageablePage page);\n\t// Remove a page.\n\tIManageablePage remove(int pageId);\n}", "des": "Limit pages by size."}
{"index": 9005, "repo": "wicket-core-10.0.0-M1", "code": "public interface IPageable extends org.apache.wicket.util.io.IClusterable {\n\tlong getCurrentPage();\n\t// Gets the total number of pages this pageable object has.\n\tlong getPageCount();\n\t// Sets the a page that should be rendered (page number is zero-based)\n\tvoid setCurrentPage(long page);\n}", "des": "Components that implement this interface will be pageable, they should return the pagecount so that an object/component knows how many pages it can use for the setCurrentPage method."}
{"index": 9006, "repo": "wicket-core-10.0.0-M1", "code": "public interface IPageableItems extends IPageable {\n\t// Gets the total number of items this object has.\n\tlong getItemCount();\n\t// maximum number of visible items per page\n\tlong getItemsPerPage();\n\t// set the maximum number of visible items per page\n\tvoid setItemsPerPage(long itemsPerPage);\n}", "des": "represents a countable amount of items that can be paginated."}
{"index": 9007, "repo": "wicket-core-10.0.0-M1", "code": "public interface IPageAndComponentProvider extends IPageProvider {\n\t// Returns component on specified page with given path.\n\tIRequestableComponent getComponent();\n\t// Returns the page relative component path.\n\tString getComponentPath();\n}", "des": "Extension of IPageProvider that is also capable of providing a Component belonging to the page."}
{"index": 9008, "repo": "wicket-core-10.0.0-M1", "code": "public interface IPageContext {\n\t// Get data from the current request cycle.\n\t<T> T getRequestData(MetaDataKey<T> key, Supplier<T> defaultValue);\n\t// Get an attribute from the session.\n\t<T extends Serializable>T getSessionAttribute(String key, Supplier<T> defaultValue);\n\t// Get metadata from the session.\n\t<T extends Serializable>T getSessionData(MetaDataKey<T> key, Supplier<T> defaultValue);\n\t// Get the identifier of the session.\n\tString getSessionId(boolean bind);\n}", "des": "Context of a IManageablePage when it is stored in an IPageStore, decoupling it from request cycle and session."}
{"index": 9009, "repo": "wicket-core-10.0.0-M1", "code": "public interface IPageFactory {\n\t// Checks whether a page can be instantiated using a bookmarkable URL.\n\t<C extends IRequestablePage>boolean isBookmarkable(Class<C> pageClass);\n\t// Creates a new page using a page class.\n\t<C extends IRequestablePage>C newPage(Class<C> pageClass);\n\t// Creates a new Page, passing PageParameters to the Page constructor if such a constructor exists.\n\t<C extends IRequestablePage>C newPage(Class<C> pageClass, org.apache.wicket.request.mapper.parameter.PageParameters parameters);\n}", "des": "A factory class that creates Pages."}
{"index": 9010, "repo": "wicket-core-10.0.0-M1", "code": "public interface IPageLockManager extends Serializable {\n\t// Acquire a lock to a page\n\tvoid lockPage(int pageId);\n\t// Unlocks all pages locked by this thread\n\tvoid unlockAllPages();\n\t// Unlocks a single page locked by the current thread.\n\tvoid unlockPage(int pageId);\n}", "des": "Lock manager for PageAccessSynchronizer responsible for locking and unlocking pages for the duration of a request."}
{"index": 9011, "repo": "wicket-core-10.0.0-M1", "code": "public interface IPageSource {\n\t// Returns existing page instance if the page exists.\n\tIRequestablePage getPageInstance(int pageId);\n\t// Creates new page instance of page with given class.\n\tIRequestablePage newPageInstance(Class<? extends IRequestablePage> pageClass, org.apache.wicket.request.mapper.parameter.PageParameters pageParameters);\n}", "des": "Interface for objects that are capable of getting and creating page instance."}
{"index": 9012, "repo": "wicket-core-10.0.0-M1", "code": "public interface IPersistedPage extends Serializable {\n\t// Id of page.\n\tint getPageId();\n\t// Size of page.\n\torg.apache.wicket.util.lang.Bytes getPageSize();\n\t// Type of page.\n\tString getPageType();\n}", "des": "Information about a page persisted in an IPersistentPageStore."}
{"index": 9013, "repo": "wicket-core-10.0.0-M1", "code": "public interface IPropertiesFactory {\n\t// Add a listener which will be called when a change to the underlying resource stream (e.g.\n\tvoid addListener(IPropertiesChangeListener listener);\n\t// Remove all cached properties.\n\tvoid clearCache();\n\t// Load the properties associated with the path\n\tProperties load(Class<?> clazz, String path);\n}", "des": "Implementations are responsible for locating Properties objects, which are a thin wrapper around ValueMap and is used to locate localized messages."}
{"index": 9014, "repo": "wicket-core-10.0.0-M1", "code": "public interface IPropertiesLoader {\n\tString getFileExtension();\n\t// Load the properties into a java.util.Properties object\n\tProperties loadJavaProperties(InputStream inputStream);\n\t// Load the properties into a ValueMap.\n\torg.apache.wicket.util.value.ValueMap loadWicketProperties(InputStream inputStream);\n}", "des": "Property loaders as used by PropertiesFactory to load properties"}
{"index": 9015, "repo": "wicket-core-10.0.0-M1", "code": "public interface IPropertyReflectionAwareModel<T> extends IModel<T> {\n\t// Returns the field of model property or null if the field doesn't exist.\n\tField getPropertyField();\n\t// Returns the getter method of model property or null if the method doesn't exist.\n\tMethod getPropertyGetter();\n\t// Returns the setter method of model property or null if the method doesn't exist.\n\tMethod getPropertySetter();\n}", "des": "Optional interface implemented by models that are able to provide reflection information about object property they interact with."}
{"index": 9016, "repo": "wicket-core-10.0.0-M1", "code": "public interface IQueueRegion {\n\t// Starts component dequeueing on this IQueueRegion.\n\tvoid dequeue();\n\t// Returns the markup to use for queuing.\n\tIMarkupFragment getRegionMarkup();\n\t// Creates a new DequeueContext that will be used to dequeue children of this region.\n\tDequeueContext newDequeueContext();\n}", "des": "Demarcates components that act as a root can dequeue children."}
{"index": 9017, "repo": "wicket-core-10.0.0-M1", "code": "public interface IRequestListener extends org.apache.wicket.util.io.IClusterable {\n\t// Called when a request is received.\n\tvoid onRequest();\n\t// Does invocation of this listener render the page.\n\tdefault boolean rendersPage();\n}", "des": "Interface to be implemented by Components or Behaviors that listen for requests from the client browser."}
{"index": 9018, "repo": "wicket-core-10.0.0-M1", "code": "public static class IResource.Attributes extends Object {\n\t// Returns additional parameters extracted from the request.\n\torg.apache.wicket.request.mapper.parameter.PageParameters getParameters();\n\t// Returns current request.\n\torg.apache.wicket.request.Request getRequest();\n\t// Returns current response.\n\torg.apache.wicket.request.Response getResponse();\n}", "des": "Attributes that are provided to resource in the IResource.respond(Attributes) method."}
{"index": 9019, "repo": "wicket-core-10.0.0-M1", "code": "public interface IResourceCachingStrategy {\n\t// Clears any stateful information\n\tvoid clearCache();\n\t// decorate resource response\n\tvoid decorateResponse(AbstractResource.ResourceResponse response, IStaticCacheableResource resource);\n\t// add caching related information to filename + parameters\n\tvoid decorateUrl(ResourceUrl url, IStaticCacheableResource resource);\n\t// Removes caching related information from filename + parameters.\n\tvoid undecorateUrl(ResourceUrl url);\n}", "des": "caching strategy for cacheable resources"}
{"index": 9020, "repo": "wicket-core-10.0.0-M1", "code": "@FunctionalInterface public interface IResourceIsolationPolicy {\n\t// Is the given request allowed.\n\tIResourceIsolationPolicy.ResourceIsolationOutcome isRequestAllowed(jakarta.servlet.http.HttpServletRequest request, IRequestablePage targetPage);\n\t// Set possible response headers.\n\tdefault void setHeaders(jakarta.servlet.http.HttpServletResponse response);\n}", "des": "Interface for the resource isolation policies."}
{"index": 9021, "repo": "wicket-core-10.0.0-M1", "code": "public static enum IResourceIsolationPolicy.ResourceIsolationOutcome extends Enum<IResourceIsolationPolicy.ResourceIsolationOutcome> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic IResourceIsolationPolicy.ResourceIsolationOutcome valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic IResourceIsolationPolicy.ResourceIsolationOutcome[] values();\n}", "des": "Indicates the outcome for a resource isolation policy for a request."}
{"index": 9022, "repo": "wicket-core-10.0.0-M1", "code": "public interface IResourceNameIterator extends Iterator<String> {\n\t// Get the exact filename extension used for the latest resource path.\n\tString getExtension();\n\t// Get the exact Locale which has been used for the latest resource path.\n\tLocale getLocale();\n\t// Get the exact Style which has been used for the latest resource path.\n\tString getStyle();\n\t// Get the exact Variation which has been used for the latest resource path.\n\tString getVariation();\n}", "des": "Contains the logic to locate a resource based on a path, style (see Session), variation, locale and extension strings."}
{"index": 9023, "repo": "wicket-core-10.0.0-M1", "code": "public interface IResourceVersion {\n\t// get unique string identifying the version of the resource\n\tString getVersion(IStaticCacheableResource resource);\n\t// a pattern that matches returned versions\n\tPattern getVersionPattern();\n}", "des": "Provides a version string for a cacheable resource specified by IStaticCacheableResource"}
{"index": 9024, "repo": "wicket-core-10.0.0-M1", "code": "public interface ISecureRandomSupplier {\n\t// Returns the actual SecureRandom being used as source.\n\tSecureRandom getRandom();\n\t// Returns a url-base64 encoded string with random content, base on length bytes.\n\tdefault String getRandomBase64(int length);\n\t// Returns a byte array with random bytes of the given length.\n\tdefault byte[] getRandomBytes(int length);\n}", "des": "Supplies the Wicket application with random bytes."}
{"index": 9025, "repo": "wicket-core-10.0.0-M1", "code": "public interface ISerializer {\n\t// Reconstructs the object from its serialized state\n\tObject deserialize(byte[] data);\n\t// Converts the object to byte array\n\tbyte[] serialize(Object object);\n}", "des": "A serializer that can be used to convert an object to byte array and back"}
{"index": 9026, "repo": "wicket-core-10.0.0-M1", "code": "public interface ISessionListener {\n\t// Called when a new instance of session is created\n\tdefault void onCreated(Session session);\n\t// Informs the listener that session with specific id has been unbound.\n\tdefault void onUnbound(String sessionId);\n}", "des": "Session listener"}
{"index": 9027, "repo": "wicket-core-10.0.0-M1", "code": "public class IsoPropertiesFilePropertiesLoader extends Object implements IPropertiesLoader {\n\tfinal String getFileExtension();\n\t// Load the properties into a java.util.Properties object\n\tProperties loadJavaProperties(InputStream in);\n\t// Load the properties into a ValueMap.\n\torg.apache.wicket.util.value.ValueMap loadWicketProperties(InputStream inputStream);\n}", "des": "Load properties from properties file."}
{"index": 9028, "repo": "wicket-core-10.0.0-M1", "code": "public interface IStaticCacheableResource extends IResource {\n\t// get unique caching key for the resource stream produced by getResourceStream()\n\tSerializable getCacheKey();\n\t// get static resource stream which will be unique to the related caching key getCacheKey()\n\torg.apache.wicket.util.resource.IResourceStream getResourceStream();\n\t// controls whether caching of the resource is enabled or disabled\n\tboolean isCachingEnabled();\n}", "des": "static resource which does not change for the lifetime of the application and should be considered a candidate for long-term caching."}
{"index": 9029, "repo": "wicket-core-10.0.0-M1", "code": "public interface IStringResourceLoader {\n\t// Get the string resource for the given combination of component class, resource key, locale and style.\n\tString loadStringResource(Class<?> clazz, String key, Locale locale, String style, String variation);\n\t// Get the string resource for the given combination of component, resource key, locale and style.\n\tString loadStringResource(Component component, String key, Locale locale, String style, String variation);\n}", "des": "The string resource loader interface allows a strategy pattern to be applied to the loading of resource strings for an application."}
{"index": 9030, "repo": "wicket-core-10.0.0-M1", "code": "public interface IValidatable<T> {\n\t// Reports an error against this IValidatable's value.\n\tvoid error(IValidationError error);\n\t// Returns the model of the component being validated\n\tIModel<T> getModel();\n\t// Retrieves the value to be validated.\n\tT getValue();\n\t// Queries the current state of this IValidatable instance.\n\tboolean isValid();\n}", "des": "Interface representing any object that can be validated."}
{"index": 9031, "repo": "wicket-core-10.0.0-M1", "code": "public interface IWebApplicationFactory {\n\t// Create application object\n\tWebApplication createApplication(WicketFilter filter);\n\t// Called when the filter instance that used this factory is destroyed\n\tvoid destroy(WicketFilter filter);\n}", "des": "A factory interface used by wicket filter to create application objects."}
{"index": 9032, "repo": "wicket-core-10.0.0-M1", "code": "public interface IWrapModel<T> extends IModel<T> {\n\t// Calls getWrappedModel().detach();\n\tdefault void detach();\n\t// Gets the model object.\n\tdefault T getObject();\n\t// Gets the wrapped model.\n\tIModel<?> getWrappedModel();\n\t// Sets the model object.\n\tdefault void setObject(T object);\n}", "des": "A marker interface that represents a model that serves as a wrapper for another."}
{"index": 9033, "repo": "wicket-core-10.0.0-M1", "code": "public static enum IXmlPullParser.HttpTagType extends Enum<IXmlPullParser.HttpTagType> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic IXmlPullParser.HttpTagType valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic IXmlPullParser.HttpTagType[] values();\n}", "des": "The last element found"}
{"index": 9034, "repo": "wicket-core-10.0.0-M1", "code": "public final class JavaScriptTemplate extends TextTemplateDecorator {\n\t// Retrieves the String to put after the actual template contents, for example:\n\tString getAfterTemplateContents();\n\t// Retrieves the String to put before the actual template contents, for example:\n\tString getBeforeTemplateContents();\n\t// Retrieves the String resource.\n\tString getString();\n\t// This class decorates another TextTemplate class and so does not allow interpolation.\n\tTextTemplate interpolate(Map<String,?> variables);\n}", "des": "Decorates a TextTemplate with JavaScript tags."}
{"index": 9035, "repo": "wicket-core-10.0.0-M1", "code": "public class Label extends WebComponent {\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n\t// Processes the body.\n\tvoid onComponentTagBody(MarkupStream markupStream, ComponentTag openTag);\n}", "des": "A Label component replaces its body with the String version of its model object returned by getModelObjectAsString()."}
{"index": 9036, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class LabeledWebMarkupContainer extends WebMarkupContainer implements ILabelProvider<String> {\n\t// The value will be made available to the validator property by means of ${label}.\n\tIModel<String> getLabel();\n\t// Called to allow a component to detach resources after use.\n\tprotected void onDetach();\n\t// Provide internal setter.\n\tLabeledWebMarkupContainer setLabel(IModel<String> labelModel);\n}", "des": "Default implementation of ILabelProvider."}
{"index": 9037, "repo": "wicket-core-10.0.0-M1", "code": "public class LambdaChoiceRenderer<T> extends Object implements IChoiceRenderer<T> {\n\t// Get the value for displaying to an end user.\n\tObject getDisplayValue(T object);\n\t// This method is called to get the id value of an object (used as the value attribute of a choice element) The id can be extracted from the object like a primary key, or if the list is stable you could just return a toString of the index.\n\tString getIdValue(T object, int index);\n}", "des": "Renders one choice."}
{"index": 9038, "repo": "wicket-core-10.0.0-M1", "code": "public class LastModifiedResourceVersion extends Object implements IResourceVersion {\n\t// get unique string identifying the version of the resource\n\tString getVersion(IStaticCacheableResource resource);\n\t// a pattern that matches returned versions\n\tPattern getVersionPattern();\n}", "des": "Uses the last modified timestamp of a IStaticCacheableResource converted to milliseconds as a version string."}
{"index": 9039, "repo": "wicket-core-10.0.0-M1", "code": "public class ListChoice<T> extends DropDownChoice<T> {\n\t// Gets the maximum number of rows to display.\n\tfinal int getMaxRows();\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n\t// Sets the maximum number of rows to display.\n\tfinal ListChoice<T> setMaxRows(int maxRows);\n}", "des": "Essentially a drop down choice that doesn't drop down."}
{"index": 9040, "repo": "wicket-core-10.0.0-M1", "code": "public class ListItemModel<T> extends Object implements IModel<T> {\n\t// Gets the model object.\n\tT getObject();\n\t// Sets the model object.\n\tvoid setObject(T object);\n}", "des": "Model for list items."}
{"index": 9041, "repo": "wicket-core-10.0.0-M1", "code": "public class LoopItem extends AbstractItem {\n\t// Gets the index of the listItem in the parent listView.\n\tfinal int getIndex();\n\t// Sets the index of this item\n\tfinal void setIndex(int index);\n}", "des": "A very simple Item."}
{"index": 9042, "repo": "wicket-core-10.0.0-M1", "code": "public class MapperUtils extends Object {\n\t// Extracts the PageComponentInfo from the URL.\n\tstatic org.apache.wicket.request.mapper.info.PageComponentInfo getPageComponentInfo(org.apache.wicket.request.Url url);\n\t// Attempts to parse a Url.QueryParameter which may hold PageComponentInfo.\n\tstatic org.apache.wicket.request.mapper.info.PageComponentInfo parsePageComponentInfoParameter(org.apache.wicket.request.Url.QueryParameter parameter);\n}", "des": "Utility class that performs common functions used by IRequestMappers."}
{"index": 9043, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class MarkupElement extends Object {\n\t// Gets whether this element closes the given element.\n\tboolean closes(MarkupElement open);\n\t// This is not an implementation of equals because we don't care about hashCodes for MarkupElements yet.\n\tabstract boolean equalTo(MarkupElement element);\n\tabstract CharSequence toCharSequence();\n\t// Gets a string representation.\n\tabstract String toUserDebugString();\n}", "des": "Base class for different kinds of markup elements."}
{"index": 9044, "repo": "wicket-core-10.0.0-M1", "code": "public static enum MediaComponent.Cors extends Enum<MediaComponent.Cors> {\n\t// Gets the real name for the cors option\n\tString getRealName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic MediaComponent.Cors valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic MediaComponent.Cors[] values();\n}", "des": "To be used for the crossorigin attribute"}
{"index": 9045, "repo": "wicket-core-10.0.0-M1", "code": "public static enum MediaComponent.Preload extends Enum<MediaComponent.Preload> {\n\t// Gets the real name for the preload option\n\tString getRealName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic MediaComponent.Preload valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic MediaComponent.Preload[] values();\n}", "des": "To be used for the preload attribute"}
{"index": 9046, "repo": "wicket-core-10.0.0-M1", "code": "public class MessageDigestResourceVersion extends Object implements IResourceVersion {\n\t// compute digest for resource stream\n\tprotected byte[] computeDigest(InputStream inputStream);\n\t// get instance of message digest provider from JCA\n\tprotected MessageDigest getMessageDigest();\n\t// get unique string identifying the version of the resource\n\tString getVersion(IStaticCacheableResource resource);\n\t// a pattern that matches returned versions\n\tPattern getVersionPattern();\n}", "des": "computes the message digest of a IStaticCacheableResource and uses it as a version string"}
{"index": 9047, "repo": "wicket-core-10.0.0-M1", "code": "public class MultiLineLabel extends WebComponent {\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n\t// Processes the body.\n\tvoid onComponentTagBody(MarkupStream markupStream, ComponentTag openTag);\n}", "des": "A MultiLineLabel component replaces its body with the model object."}
{"index": 9048, "repo": "wicket-core-10.0.0-M1", "code": "public class NestedFolders extends Object {\n\t// Get a nested folder for the given name.\n\tFile get(String name, boolean create);\n\t// Get all files inside.\n\tSet<File> getAll();\n\tFile getBase();\n\t// Remove a nested folder.\n\tvoid remove(String name);\n}", "des": "Keep files in a nested filed structure to minimize amount of directory entries (inodes) in a single directory."}
{"index": 9049, "repo": "wicket-core-10.0.0-M1", "code": "public class NestedStringResourceLoader extends Object implements IStringResourceLoader {\n\t// Get the string resource for the given combination of component class, resource key, locale and style.\n\tString loadStringResource(Class<?> clazz, String key, Locale locale, String style, String variation);\n\t// Get the string resource for the given combination of component, resource key, locale and style.\n\tString loadStringResource(Component component, String key, Locale locale, String style, String variation);\n}", "des": "Creates a nested string resource loader which resolves nested keys. Example:"}
{"index": 9050, "repo": "wicket-core-10.0.0-M1", "code": "public class NoOpAuthenticationStrategy extends Object implements IAuthenticationStrategy {\n\t// If \"rememberMe\" is enabled, then load the saved credentials (e.g.\n\tString[] load();\n\t// When the user logs out (session invalidation), then remove username and password from the persistence store\n\tvoid remove();\n\t// If \"rememberMe\" is enabled and login was successful, then store the given credentials in the persistence store (e.g.\n\tvoid save(String credential, String... extraCredentials);\n}", "des": "A no-op implementation."}
{"index": 9051, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class OnChangeAjaxBehavior extends AjaxFormComponentUpdatingBehavior {\n\t// Creates an OnChangeAjaxBehavior based on lambda expressions\n\tstatic OnChangeAjaxBehavior onChange(org.danekja.java.util.function.serializable.SerializableConsumer<AjaxRequestTarget> onChange);\n\t// Gives a chance to the specializations to modify the attributes.\n\tprotected void updateAjaxAttributes(AjaxRequestAttributes attributes);\n}", "des": "A behavior that updates the hosting FormComponent's model via Ajax when value of the component is changed."}
{"index": 9052, "repo": "wicket-core-10.0.0-M1", "code": "public class OnDomReadyHeaderItem extends AbstractCspHeaderItem {\n\tboolean equals(Object o);\n\t// Creates a OnDomReadyHeaderItem for the script.\n\tstatic OnDomReadyHeaderItem forScript(CharSequence javaScript);\n\tList<HeaderItem> getDependencies();\n\tCharSequence getJavaScript();\n\tIterable<?> getRenderTokens();\n\t// Renders the HeaderItem to the response.\n\tvoid render(org.apache.wicket.request.Response response);\n}", "des": "HeaderItem for scripts that need to be executed directly after the DOM has been built, but before external resources, such as images, are loaded."}
{"index": 9053, "repo": "wicket-core-10.0.0-M1", "code": "public class OnLoadHeaderItem extends AbstractCspHeaderItem {\n\tboolean equals(Object o);\n\t// Creates a OnLoadHeaderItem for the script.\n\tstatic OnLoadHeaderItem forScript(CharSequence javaScript);\n\tList<HeaderItem> getDependencies();\n\tCharSequence getJavaScript();\n\tIterable<?> getRenderTokens();\n\t// Renders the HeaderItem to the response.\n\tvoid render(org.apache.wicket.request.Response response);\n}", "des": "HeaderItem for scripts that need to be executed after the entire page is loaded."}
{"index": 9054, "repo": "wicket-core-10.0.0-M1", "code": "public class OpenCloseTagExpander extends AbstractMarkupFilter {\n\t// Allows subclasses to easily expand the list of tag which needs to be expanded.\n\tprotected boolean contains(String name);\n\t// Get the next xml element from the markup.\n\tMarkupElement nextElement();\n\t// Invoked when a ComponentTag was found.\n\tprotected MarkupElement onComponentTag(ComponentTag tag);\n\t// Can be subclassed to do other things.\n\tprotected boolean onFound(ComponentTag tag);\n}", "des": "MarkupFilter that expands certain open-close tag as separate open and close tags."}
{"index": 9055, "repo": "wicket-core-10.0.0-M1", "code": "public class OutputMarkupContainerClassNameBehavior extends Behavior {\n\t// Specifies whether or not this behavior is temporary.\n\tboolean isTemporary(Component component);\n\t// Called any time a component that has this behavior registered is rendering the component tag.\n\tvoid onComponentTag(Component component, ComponentTag tag);\n}", "des": "A behavior that applies to MarkupContainers with associated markup."}
{"index": 9056, "repo": "wicket-core-10.0.0-M1", "code": "public class PackageStringResourceLoader extends ComponentStringResourceLoader {\n\t// Gets the properties file filename (without extension)\n\tString getFilename();\n\t// Get the string resource for the given combination of component class, resource key, locale and style.\n\tString loadStringResource(Class<?> clazz, String key, Locale locale, String style, String variation);\n\t// Sets the properties filename (without extension)\n\tvoid setFilename(String filename);\n}", "des": "This is one of Wicket's default string resource loaders."}
{"index": 9057, "repo": "wicket-core-10.0.0-M1", "code": "public class PackageTextTemplate extends TextTemplate {\n\t// Retrieves the String resource.\n\tString getString();\n\t// Interpolates a Map of variables with the content and replaces the content with the result.\n\tfinal TextTemplate interpolate(Map<String,?> variables);\n\tvoid setEncoding(String encoding);\n\tvoid setLocale(Locale locale);\n\tvoid setStyle(String style);\n\tvoid setVariation(String variation);\n}", "des": "A String resource that can be appended to."}
{"index": 9058, "repo": "wicket-core-10.0.0-M1", "code": "public class PageAccessSynchronizer extends Object implements Serializable {\n\t// Wraps a page manager with this synchronizer\n\tIPageManager adapt(IPageManager manager);\n\t// Acquire a lock to a page\n\tvoid lockPage(int pageId);\n\t// Unlocks all pages locked by this thread\n\tvoid unlockAllPages();\n\t// Unlocks a single page locked by the current thread.\n\tvoid unlockPage(int pageId);\n}", "des": "Synchronizes access to page instances from multiple threads"}
{"index": 9059, "repo": "wicket-core-10.0.0-M1", "code": "public class PageAndComponentProvider extends PageProvider implements IPageAndComponentProvider {\n\t// Returns component on specified page with given path.\n\tIRequestableComponent getComponent();\n\t// Returns the page relative component path.\n\tString getComponentPath();\n}", "des": "Extension of PageProvider that is also capable of providing a Component belonging to the page."}
{"index": 9060, "repo": "wicket-core-10.0.0-M1", "code": "public class PageRequestHandlerTracker extends Object implements IRequestCycleListener {\n\t// retrieves first handler from the request cycle\n\tstatic IPageRequestHandler getFirstHandler(RequestCycle cycle);\n\t// retrieves last handler from request cycle\n\tstatic IPageRequestHandler getLastHandler(RequestCycle cycle);\n\t// Called when an IRequestHandler is resolved and will be executed.\n\tvoid onRequestHandlerResolved(RequestCycle cycle, org.apache.wicket.request.IRequestHandler handler);\n}", "des": "Registers and retrieves first and last executed IPageRequestHandler in a request cycle."}
{"index": 9061, "repo": "wicket-core-10.0.0-M1", "code": "public static class PageWindowManager.FileWindow extends Object implements IPersistedPage, Serializable {\n\tint getFilePartOffset();\n\tint getFilePartSize();\n\t// Id of page.\n\tint getPageId();\n\t// Size of page.\n\torg.apache.wicket.util.lang.Bytes getPageSize();\n\t// Type of page.\n\tString getPageType();\n}", "des": "Contains information about a page inside the file."}
{"index": 9062, "repo": "wicket-core-10.0.0-M1", "code": "public class PagingNavigationIncrementLink<T> extends Link<T> {\n\t// Determines the next page number for the pageable component.\n\tfinal long getPageNumber();\n\tboolean isFirst();\n\tboolean isLast();\n\t// Returns true if the page link links to the given page.\n\tboolean linksTo(Page page);\n\t// Called when a link is clicked.\n\tvoid onClick();\n}", "des": "An incremental link to a page of a PageableListView."}
{"index": 9063, "repo": "wicket-core-10.0.0-M1", "code": "public class PagingNavigationLink<T> extends Link<T> {\n\t// Allows the link to cull the page number to the valid range before it is retrieved from the link\n\tprotected long cullPageNumber(long pageNumber);\n\t// Get pageNumber.\n\tfinal long getPageNumber();\n\tfinal boolean isFirst();\n\tfinal boolean isLast();\n\t// Returns true if this PageableListView navigation link links to the given page.\n\tfinal boolean linksTo(Page page);\n\t// Called when a link is clicked.\n\tvoid onClick();\n}", "des": "A link to a page of a PageableListView."}
{"index": 9064, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class Panel extends WebMarkupContainer implements IQueueRegion {\n\t// Returns the markup inside <wicket:panel> tag.\n\tIMarkupFragment getRegionMarkup();\n\t// If Component.getMarkupSourcingStrategy() returns null, this method will be called.\n\tprotected IMarkupSourcingStrategy newMarkupSourcingStrategy();\n}", "des": "A panel is a reusable component that holds markup and other components."}
{"index": 9065, "repo": "wicket-core-10.0.0-M1", "code": "public class PriorityHeaderItem extends HeaderItem implements IWrappedHeaderItem {\n\tboolean equals(Object o);\n\tList<HeaderItem> getDependencies();\n\tIterable<? extends HeaderItem> getProvidedResources();\n\tIterable<?> getRenderTokens();\n\tHeaderItem getWrapped();\n\t// Renders the HeaderItem to the response.\n\tvoid render(org.apache.wicket.request.Response response);\n\t// Wraps an existing HeaderItem\n\tPriorityHeaderItem wrap(HeaderItem item);\n}", "des": "HeaderItem that has priority over other header items."}
{"index": 9066, "repo": "wicket-core-10.0.0-M1", "code": "public final class Properties extends Object {\n\t// Get direct access to all values from the properties file.\n\tfinal org.apache.wicket.util.value.ValueMap getAll();\n\t// Get the property value identified by its 'key'.\n\tfinal String getString(String key);\n}", "des": "Kind of like java.util.Properties but based on Wicket's ValueMap and thus benefiting from all its nice build-in type converters and without parent properties."}
{"index": 9067, "repo": "wicket-core-10.0.0-M1", "code": "public class RadioGroup<T> extends FormComponent<T> {\n\t// Subclasses should overwrite this if the conversion is not done through the type field and the IConverter.\n\tprotected T convertValue(String[] input);\n\tprotected String getModelValue();\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n}", "des": "Component used to connect instances of Radio components into a group."}
{"index": 9068, "repo": "wicket-core-10.0.0-M1", "code": "public class RawMarkup extends MarkupElement {\n\t// Compare with a given object\n\tboolean equals(Object o);\n\t// This is not an implementation of equals because we don't care about hashCodes for MarkupElements yet.\n\tboolean equalTo(MarkupElement element);\n\tCharSequence toCharSequence();\n\t// Gets a string representation.\n\tString toUserDebugString();\n}", "des": "This class is for framework purposes only, which is why the class is (default) protected."}
{"index": 9069, "repo": "wicket-core-10.0.0-M1", "code": "public final class RelativePathPrefixHandler extends AbstractMarkupFilter implements IComponentResolver {\n\t// Invoked when a ComponentTag was found.\n\tprotected final MarkupElement onComponentTag(ComponentTag tag);\n\t// Called after all filters have been processed.\n\tvoid postProcess(Markup markup);\n\t// Try to resolve a component.\n\tComponent resolve(MarkupContainer container, MarkupStream markupStream, ComponentTag tag);\n}", "des": "The purpose of this filter is to make all \"href\", \"src\" and \"background\" attributes found in the markup which contain a relative URL like \"myDir/myPage.gif\" actually resolve in the output HTML, by prefixing them with with an appropriate path to make the link work properly, even if the current page is being displayed at a mounted URL or whatever."}
{"index": 9070, "repo": "wicket-core-10.0.0-M1", "code": "public class RelativeURICSPValue extends Object implements CSPRenderable {\n\t// Checks if the CSPRenderable represents a valid value for a -src directive.\n\tvoid checkValidityForSrc();\n\t// Renders the value that should be put in the CSP header.\n\tString render(ContentSecurityPolicySettings settings, RequestCycle cycle);\n}", "des": "A CSP value that renders an URI relative to the context root of the Wicket application."}
{"index": 9071, "repo": "wicket-core-10.0.0-M1", "code": "public static enum RenderPageRequestHandler.RedirectPolicy extends Enum<RenderPageRequestHandler.RedirectPolicy> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic RenderPageRequestHandler.RedirectPolicy valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic RenderPageRequestHandler.RedirectPolicy[] values();\n}", "des": "Determines whether Wicket does a redirect when rendering a page"}
{"index": 9072, "repo": "wicket-core-10.0.0-M1", "code": "public class RepeatingView extends AbstractRepeater {\n\t// Generates a unique id string.\n\tString newChildId();\n\t// Callback to let the repeater know it should populate itself with its items.\n\tprotected void onPopulate();\n\t// Returns an iterator for the collection of child components to be rendered.\n\tprotected Iterator<? extends Component> renderIterator();\n}", "des": "A repeater view that renders all of its children, using its body markup, in the order they were added."}
{"index": 9073, "repo": "wicket-core-10.0.0-M1", "code": "public class RequestCycleCachedResourceVersion extends Object implements IResourceVersion {\n\t// get unique string identifying the version of the resource\n\tString getVersion(IStaticCacheableResource resource);\n\t// a pattern that matches returned versions\n\tPattern getVersionPattern();\n}", "des": "Caches the results of a delegating IResourceVersion instance for the lifetime of the current http request."}
{"index": 9074, "repo": "wicket-core-10.0.0-M1", "code": "public static enum RequestCycleSettings.RenderStrategy extends Enum<RequestCycleSettings.RenderStrategy> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic RequestCycleSettings.RenderStrategy valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic RequestCycleSettings.RenderStrategy[] values();\n}", "des": "Enum type for different render strategies"}
{"index": 9075, "repo": "wicket-core-10.0.0-M1", "code": "public class RequestSettingRequestHandler extends Object implements org.apache.wicket.request.IRequestHandlerDelegate {\n\tvoid detach(org.apache.wicket.request.IRequestCycle requestCycle);\n\t// Returns the request handler to which responding will be delegated.\n\torg.apache.wicket.request.IRequestHandler getDelegateHandler();\n\t// Returns the request that will be set before responding.\n\torg.apache.wicket.request.Request getRequest();\n\tvoid respond(org.apache.wicket.request.IRequestCycle requestCycle);\n}", "des": "A IRequestHandler that sets the current Request before delegating the responding to a wrapped request handler."}
{"index": 9076, "repo": "wicket-core-10.0.0-M1", "code": "public class ResourceBundleReference extends ResourceReference implements IResourceBundle {\n\t// Adds the HeaderItems that this bundle provides.\n\tvoid addProvidedResources(HeaderItem... items);\n\tResourceReference getBundleReference();\n\tList<HeaderItem> getDependencies();\n\tIterable<? extends HeaderItem> getProvidedResources();\n\t// Returns the resource.\n\tIResource getResource();\n}", "des": "A resource reference that wraps another resource to make it into a bundle."}
{"index": 9077, "repo": "wicket-core-10.0.0-M1", "code": "public static enum ResourceIsolationRequestCycleListener.CsrfAction extends Enum<ResourceIsolationRequestCycleListener.CsrfAction> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ResourceIsolationRequestCycleListener.CsrfAction valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ResourceIsolationRequestCycleListener.CsrfAction[] values();\n}", "des": "The action to perform when the outcome of the resource isolation policy is DISALLOWED or UNKNOWN."}
{"index": 9078, "repo": "wicket-core-10.0.0-M1", "code": "public class ResourceLink<T> extends Link<T> implements IRequestListener {\n\t// For ResourceReferences this link is stateless.\n\tprotected boolean getStatelessHint();\n\t// Gets the url to use for this link.\n\tprotected final CharSequence getURL();\n\t// Called when a link is clicked.\n\tvoid onClick();\n\t// THIS METHOD IS NOT PART OF THE WICKET API.\n\tfinal void onRequest();\n\t// Does invocation of this listener render the page.\n\tboolean rendersPage();\n}", "des": "A link to any ResourceReference."}
{"index": 9079, "repo": "wicket-core-10.0.0-M1", "code": "public class ResourceModel extends Object implements IComponentAssignedModel<String> {\n\t// Gets the model object.\n\tString getObject();\n\t// Sets the model object.\n\tfinal void setObject(String object);\n\t// This method is called when the component gets its model assigned.\n\tIWrapModel<String> wrapOnAssignment(Component component);\n}", "des": "A model that represents a localized resource string."}
{"index": 9080, "repo": "wicket-core-10.0.0-M1", "code": "public static class ResourceReference.Key extends Object implements Serializable {\n\tboolean equals(Object obj);\n\t// Gets locale.\n\tfinal Locale getLocale();\n\t// Gets name.\n\tfinal String getName();\n\t// Gets scope.\n\tfinal String getScope();\n\tfinal Class<?> getScopeClass();\n\t// Gets style.\n\tfinal String getStyle();\n\t// Gets variation.\n\tfinal String getVariation();\n}", "des": "A (re-usable) data store for all relevant ResourceReference data"}
{"index": 9081, "repo": "wicket-core-10.0.0-M1", "code": "public class Result extends Object {\n\t// Returns a Result which failed.\n\tstatic Result fail(String message);\n\t// Retrieves the error message.\n\tString getMessage();\n\t// Returns a Result which passed.\n\tstatic Result pass();\n\t// Returns true if the Result was a failure.\n\tboolean wasFailed();\n}", "des": "A Result class."}
{"index": 9082, "repo": "wicket-core-10.0.0-M1", "code": "public final class RootMarkupFilter extends AbstractMarkupFilter {\n\t// IMarkupFilters are usually chained with the last filter retrieving the elements from the XML parser.\n\tfinal IMarkupFilter getNextFilter();\n\t// Skip all xml elements until the next tag.\n\tfinal MarkupElement nextElement();\n\t// Noop\n\tprotected MarkupElement onComponentTag(ComponentTag tag);\n\t// Noop\n\tfinal void postProcess(Markup markup);\n\t// This is the root filter.\n\tfinal void setNextFilter(IMarkupFilter parent);\n}", "des": "This is the root of all filters, which retrieves the next xml element from the xml parser."}
{"index": 9083, "repo": "wicket-core-10.0.0-M1", "code": "public enum Scheme extends Enum<Scheme> {\n\tabstract int getPort(HttpsConfig config);\n\t// Checks if two schemes are compatible.\n\tboolean isCompatibleWith(Scheme other);\n\tString urlName();\n\tabstract boolean usesStandardPort(HttpsConfig config);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Scheme valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Scheme[] values();\n}", "des": "Url scheme"}
{"index": 9084, "repo": "wicket-core-10.0.0-M1", "code": "public class SecurePackageResourceGuard extends PackageResourceGuard {\n\t// Whether the provided absolute path is accepted.\n\tboolean accept(String path);\n\tvoid addPattern(String pattern);\n\tvoid clearCache();\n\t// Gets the current list of pattern.\n\tList<SecurePackageResourceGuard.SearchPattern> getPattern();\n\t// Sets pattern.\n\tvoid setPattern(List<SecurePackageResourceGuard.SearchPattern> pattern);\n}", "des": "This is a resource guard which by default denies access to all resources and thus is more secure."}
{"index": 9085, "repo": "wicket-core-10.0.0-M1", "code": "public final class SerializedPage extends Object implements IManageablePage {\n\t// Detaches model after use.\n\tvoid detach();\n\tbyte[] getData();\n\tint getPageId();\n\tString getPageType();\n\t// Gets whether the page is stateless.\n\tboolean isPageStateless();\n\t// Sets whether or not the page is allowed to change its page id.\n\tboolean setFreezePageId(boolean freeze);\n}", "des": "A wrapper around a serialized page."}
{"index": 9086, "repo": "wicket-core-10.0.0-M1", "code": "public class SerializingPageStore extends DelegatingPageStore {\n\t// Stores the page-\n\tvoid addPage(IPageContext context, IManageablePage page);\n\t// Supports asynchronous add if the delegate supports it.\n\tboolean canBeAsynchronous(IPageContext context);\n\t// Restores a page from storage.\n\tIManageablePage getPage(IPageContext context, int id);\n\t// Versioning is supported, since pages are always serialized.\n\tboolean supportsVersioning();\n}", "des": "A store that serializes all pages before delegating and vice versa."}
{"index": 9087, "repo": "wicket-core-10.0.0-M1", "code": "public class SessionListenerCollection extends org.apache.wicket.util.listener.ListenerCollection<ISessionListener> implements ISessionListener {\n\t// Called when a new instance of session is created\n\tvoid onCreated(Session session);\n\t// Informs the listener that session with specific id has been unbound.\n\tvoid onUnbound(String sessionId);\n}", "des": "ListenerCollection for ISessionListeners"}
{"index": 9088, "repo": "wicket-core-10.0.0-M1", "code": "public class SharedResourceReference extends ResourceReference {\n\t// Can be used to disable registering certain resource references in ResourceReferenceRegistry.\n\tboolean canBeRegistered();\n\t// Returns the resource.\n\tIResource getResource();\n}", "des": "A ResourceReference which should be used to lookup a IResource from the globally registered ones (also known as application shared resources)."}
{"index": 9089, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class SimplePageAuthorizationStrategy extends AbstractPageAuthorizationStrategy {\n\t// Gets whether the current user/session is authorized to instantiate a page class which extends or implements the supertype (base class or tagging interface) passed to the constructor.\n\tprotected abstract boolean isAuthorized();\n\t// Whether to page may be created.\n\tprotected <T extends Page>boolean isPageAuthorized(Class<T> pageClass);\n}", "des": "A very simple authorization strategy that takes a supertype (a base class or tagging interface) and performs a simple authorization check by calling the abstract method isAuthorized() whenever a Page class that extends or implements the supertype is about to be instantiated."}
{"index": 9090, "repo": "wicket-core-10.0.0-M1", "code": "public class Source extends Image {\n\t// Unsupported for source tag\n\tfinal CrossOrigin getCrossOrigin();\n\t// Gets the media attribute information\n\tString getMedia();\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n\t// Unsupported for source tag\n\tvoid setCrossOrigin(CrossOrigin crossorigin);\n\t// Sets the media attribute information\n\tvoid setMedia(String media);\n}", "des": "A component which displays localizable image resources within a picture tag."}
{"index": 9091, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class StatelessLink<T> extends Link<T> {\n\t// Returns whether the component can be stateless.\n\tprotected boolean getStatelessHint();\n\t// Gets the url to use for this link.\n\tprotected CharSequence getURL();\n}", "des": "This link is stateless that means that the url to this link could generate a new page before the link onClick is called."}
{"index": 9092, "repo": "wicket-core-10.0.0-M1", "code": "public class StaticResourceVersion extends Object implements IResourceVersion {\n\t// get unique string identifying the version of the resource\n\tString getVersion(IStaticCacheableResource resource);\n\t// a pattern that matches returned versions\n\tPattern getVersionPattern();\n}", "des": "provides a static version string for all package resources"}
{"index": 9093, "repo": "wicket-core-10.0.0-M1", "code": "public class StringHeaderItem extends HeaderItem {\n\tboolean equals(Object o);\n\t// Creates a StringHeaderItem for the snippet.\n\tstatic StringHeaderItem forString(CharSequence string);\n\tIterable<?> getRenderTokens();\n\tCharSequence getString();\n\t// Renders the HeaderItem to the response.\n\tvoid render(org.apache.wicket.request.Response response);\n}", "des": "Free form HeaderItem."}
{"index": 9094, "repo": "wicket-core-10.0.0-M1", "code": "public final class StyleAndScriptIdentifier extends AbstractMarkupFilter {\n\t// Invoked when a ComponentTag was found.\n\tprotected final MarkupElement onComponentTag(ComponentTag tag);\n\t// Called after all filters have been processed.\n\tvoid postProcess(Markup markup);\n}", "des": "An IMarkupFilter that wraps the body of all <style> elements and <script> elements which are plain JavaScript in CDATA blocks."}
{"index": 9095, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class StyleAttributeModifier extends AttributeAppender {\n\t// Gets the value that should replace the current attribute value.\n\tprotected Serializable newValue(String currentValue, String appendValue);\n\t// Callback to update the CSS class values for a tag.\n\tprotected abstract Map<String,String> update(Map<String,String> oldStyles);\n}", "des": "An AttributeModifier specialized in managing the CSS style attribute"}
{"index": 9096, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class SubresourceHeaderResponse extends DecoratingHeaderResponse {\n\t// Configure the item Subresource.\n\tprotected abstract void configure(ISubresourceHeaderItem item);\n\t// Renders the given HeaderItem to the response if none of its tokens has been rendered before.\n\tvoid render(HeaderItem item);\n}", "des": "Add Subresource integrity and crossOrigin to all ISubresourceHeaderItems."}
{"index": 9097, "repo": "wicket-core-10.0.0-M1", "code": "public class TagStack extends Object {\n\t// Assert that tag has no mismatch error.\n\tvoid assertValidInStack(ComponentTag tag);\n\t// Configure this stack to call log.debug at operations\n\tvoid debug();\n\tComponentTag getNotClosedTag();\n\t// Compare tag name including namespace\n\tstatic boolean hasEqualTagName(ComponentTag tag1, ComponentTag tag2);\n\t// Gets whether this tag does not require a closing tag.\n\tstatic boolean requiresCloseTag(String name);\n}", "des": "Stack to push and pop HTML elements asserting its structure."}
{"index": 9098, "repo": "wicket-core-10.0.0-M1", "code": "public class TextField<T> extends AbstractTextComponent<T> {\n\t// Subclass should override this method if this textfield is mapped on a different input type as text.\n\tprotected String[] getInputTypes();\n\t// Processes the component tag.\n\tprotected void onComponentTag(ComponentTag tag);\n}", "des": "A simple text field."}
{"index": 9099, "repo": "wicket-core-10.0.0-M1", "code": "public abstract class TextTemplate extends org.apache.wicket.util.resource.AbstractStringResourceStream {\n\tString asString();\n\t// Interpolates the Map of variables with the content and returns the resulting String without replacing the content.\n\tString asString(Map<String,?> variables);\n\t// Retrieves the String resource.\n\tabstract String getString();\n\t// Interpolates values into this TextTemplate.\n\tabstract TextTemplate interpolate(Map<String,?> variables);\n}", "des": "Represents a text template that can do variable interpolation."}
{"index": 9100, "repo": "wicket-core-10.0.0-M1", "code": "public class ThrottlingSettings extends Object implements org.apache.wicket.util.io.IClusterable {\n\tDuration getDelay();\n\t// This id is used by the client-side throttling code to keep track of the various event throttles.\n\tString getId();\n\t// If it is set to true, then the timer is reset each time the throttle function gets called.\n\tboolean getPostponeTimerOnUpdate();\n\tvoid setDelay(Duration delay);\n\tvoid setPostponeTimerOnUpdate(boolean postponeTimerOnUpdate);\n}", "des": "Class to keep track of throttling settings."}
{"index": 9101, "repo": "wicket-core-10.0.0-M1", "code": "public static enum Track.Kind extends Enum<Track.Kind> {\n\t// The real name of the kind\n\tString getRealName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Track.Kind valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Track.Kind[] values();\n}", "des": "To be used for the kind attribute"}
{"index": 9102, "repo": "wicket-core-10.0.0-M1", "code": "public class TransparentWebMarkupContainer extends WebMarkupContainer implements IComponentResolver {\n\t// Search the child component for the given tag.\n\tprotected Component findChildComponent(ComponentTag tag);\n\t// THIS METHOD IS NOT PART OF THE WICKET PUBLIC API.\n\tvoid internalRenderHead(HtmlHeaderContainer container);\n\t// Try to resolve a component.\n\tComponent resolve(MarkupContainer container, MarkupStream markupStream, ComponentTag tag);\n}", "des": "A simple \"transparent\" markup container."}
{"index": 9103, "repo": "wicket-core-10.0.0-M1", "code": "public class UtfPropertiesFilePropertiesLoader extends Object implements IPropertiesLoader {\n\tfinal String getFileExtension();\n\t// Load the properties into a java.util.Properties object\n\tProperties loadJavaProperties(InputStream in);\n\t// Load the properties into a ValueMap.\n\torg.apache.wicket.util.value.ValueMap loadWicketProperties(InputStream inputStream);\n}", "des": "Load properties from properties file via a Reader, which allows to provide the charset and thus the encoding can be different than ISO 8859-1."}
{"index": 9104, "repo": "wicket-core-10.0.0-M1", "code": "public class ValidationErrorFeedback extends Object implements org.apache.wicket.util.io.IClusterable {\n\t// Gets error.\n\tIValidationError getError();\n\t// Gets message.\n\tSerializable getMessage();\n}", "des": "This class is the parameter to Component.error(Serializable) instead of the generated error string itself (when FormComponent.error(IValidationError) is called)."}
{"index": 9105, "repo": "wicket-core-10.0.0-M1", "code": "public class ValidatorAdapter<T> extends Behavior implements IValidator<T> {\n\t// Gets adapted validator\n\tIValidator<T> getValidator();\n\t// Validates the IValidatable instance.\n\tvoid validate(IValidatable<T> validatable);\n}", "des": "Adapts IValidator to Behavior"}
{"index": 9106, "repo": "wicket-core-10.0.0-M1", "code": "public class ValidatorStringResourceLoader extends ComponentStringResourceLoader {\n\t// Get the string resource for the given combination of component class, resource key, locale and style.\n\tString loadStringResource(Class<?> clazz, String key, Locale locale, String style, String variation);\n\t// Get the string resource for the given combination of component, resource key, locale and style.\n\tString loadStringResource(Component component, String key, Locale locale, String style, String variation);\n}", "des": "This is one of Wicket's default string resource loaders."}
{"index": 9107, "repo": "wicket-core-10.0.0-M1", "code": "public class WebClientInfo extends ClientInfo {\n\t// Gets the client properties object.\n\tfinal ClientProperties getProperties();\n\t// Returns the IP address from HttpServletRequest.getRemoteAddr().\n\tprotected String getRemoteAddr(RequestCycle requestCycle);\n\t// returns the user agent string.\n\tfinal String getUserAgent();\n}", "des": "Default client info object for web applications."}
{"index": 9108, "repo": "wicket-core-10.0.0-M1", "code": "public class WicketLinkTagHandler extends AbstractMarkupFilter implements IComponentResolver {\n\t// Analyze the tag.\n\tprotected boolean analyzeAutolinkCondition(ComponentTag tag);\n\t// Invoked when a ComponentTag was found.\n\tprotected final MarkupElement onComponentTag(ComponentTag tag);\n\t// Try to resolve a component.\n\tComponent resolve(MarkupContainer container, MarkupStream markupStream, ComponentTag tag);\n\t// Set the default value for autolinking\n\tvoid setAutomaticLinking(boolean enable);\n}", "des": "This is a markup inline filter."}
{"index": 9109, "repo": "wicket-core-10.0.0-M1", "code": "public final class WicketMessageTagHandler extends AbstractMarkupFilter implements IComponentResolver {\n\t// Invoked when a ComponentTag was found.\n\tprotected final MarkupElement onComponentTag(ComponentTag tag);\n\t// Try to resolve a component.\n\tComponent resolve(MarkupContainer container, MarkupStream markupStream, ComponentTag tag);\n}", "des": "This is a markup inline filter and a component resolver."}
{"index": 9110, "repo": "wicket-core-10.0.0-M1", "code": "public final class WicketTagIdentifier extends AbstractMarkupFilter {\n\t// Get the next tag from the next MarkupFilter in the chain and search for Wicket specific tags.\n\tprotected MarkupElement onComponentTag(ComponentTag tag);\n\t// Register a new well known wicket tag name (e.g.\n\tstatic void registerWellKnownTagName(String name);\n}", "des": "This is a markup inline filter."}
{"index": 9111, "repo": "wicket-core-10.0.0-M1", "code": "public class XmlFilePropertiesLoader extends Object implements IPropertiesLoader {\n\tfinal String getFileExtension();\n\t// Load the properties into a java.util.Properties object\n\tProperties loadJavaProperties(InputStream in);\n\t// Load the properties into a ValueMap.\n\torg.apache.wicket.util.value.ValueMap loadWicketProperties(InputStream inputStream);\n}", "des": "Load properties from XML file"}
{"index": 9112, "repo": "wicket-core-10.0.0-M1", "code": "public static enum XmlTag.TagType extends Enum<XmlTag.TagType> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic XmlTag.TagType valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic XmlTag.TagType[] values();\n}", "des": "Enumerated type for different kinds of component tags."}
{"index": 9113, "repo": "wicket-core-10.0.0-M1", "code": "public class XsltTransformerBehavior extends AbstractTransformerBehavior {\n\t// Bind this handler to the given component.\n\tvoid bind(Component component);\n\t// Called any time a component that has this behavior registered is rendering the component tag.\n\tvoid onComponentTag(Component component, ComponentTag tag);\n\t// Will be invoked after all child components have been processed to allow for transforming the markup generated.\n\tCharSequence transform(Component component, CharSequence output);\n}", "des": "An IBehavior which can be added to any component except ListView."}
{"index": 9114, "repo": "spring-security-messaging-6.1.2", "code": "public final class MessageAuthorizationContext<T> extends Object {\n\t// Returns the HttpServletRequest.\n\torg.springframework.messaging.Message<T> getMessage();\n\t// Returns the extracted variable values where the key is the variable name and the value is the variable value.\n\tMap<String,String> getVariables();\n}", "des": "An Message authorization context."}
{"index": 9115, "repo": "wicket-spring-10.0.0-M1", "code": "public class FieldBeansCollector extends Object {\n\t// Adds compatible bean to the field.\n\tvoid addBean(String beanName, Object bean);\n\t// Returns an instance containing all the beans collected for the field and compatible with the type of the field.\n\tObject getBeansToInject();\n\tFieldBeansCollector.FieldType getFieldType();\n}", "des": "Convenience class to extract information about the type and generics of a field to inject."}
{"index": 9116, "repo": "spring-security-web-6.1.2", "code": "public class AccessDeniedHandlerImpl extends Object implements AccessDeniedHandler {\n\t// Handles an access denied failure.\n\tvoid handle(jakarta.servlet.http.HttpServletRequest request, jakarta.servlet.http.HttpServletResponse response, org.springframework.security.access.AccessDeniedException accessDeniedException);\n\t// The error page to use.\n\tvoid setErrorPage(String errorPage);\n}", "des": "Base implementation of AccessDeniedHandler."}
{"index": 9117, "repo": "spring-security-web-6.1.2", "code": "public final class AndRequestMatcher extends Object implements RequestMatcher {\n\t// Returns a RequestMatcher.MatchResult for this HttpServletRequest.\n\tRequestMatcher.MatchResult matcher(jakarta.servlet.http.HttpServletRequest request);\n\t// Decides whether the rule implemented by the strategy matches the supplied request.\n\tboolean matches(jakarta.servlet.http.HttpServletRequest request);\n}", "des": "RequestMatcher that will return true if all of the passed in RequestMatcher instances match."}
{"index": 9118, "repo": "spring-security-web-6.1.2", "code": "public interface ChannelDecisionManager {\n\t// Decided whether the presented FilterInvocation provides the appropriate level of channel security based on the requested list of ConfigAttributes.\n\tvoid decide(FilterInvocation invocation, Collection<org.springframework.security.access.ConfigAttribute> config);\n\t// Indicates whether this ChannelDecisionManager is able to process the passed ConfigAttribute.\n\tboolean supports(org.springframework.security.access.ConfigAttribute attribute);\n}", "des": "Decides whether a web channel provides sufficient security."}
{"index": 9119, "repo": "spring-security-web-6.1.2", "code": "public interface ChannelProcessor {\n\t// Decided whether the presented FilterInvocation provides the appropriate level of channel security based on the requested list of ConfigAttributes.\n\tvoid decide(FilterInvocation invocation, Collection<org.springframework.security.access.ConfigAttribute> config);\n\t// Indicates whether this ChannelProcessor is able to process the passed ConfigAttribute.\n\tboolean supports(org.springframework.security.access.ConfigAttribute attribute);\n}", "des": "Decides whether a web channel meets a specific security condition."}
{"index": 9120, "repo": "spring-security-web-6.1.2", "code": "public static enum ClearSiteDataHeaderWriter.Directive extends Enum<ClearSiteDataHeaderWriter.Directive> {\n\tString getHeaderValue();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ClearSiteDataHeaderWriter.Directive valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ClearSiteDataHeaderWriter.Directive[] values();\n}", "des": "Represents the directive values expected by the ClearSiteDataHeaderWriter."}
{"index": 9121, "repo": "spring-security-web-6.1.2", "code": "public static enum ClearSiteDataServerHttpHeadersWriter.Directive extends Enum<ClearSiteDataServerHttpHeadersWriter.Directive> {\n\tString getHeaderValue();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ClearSiteDataServerHttpHeadersWriter.Directive valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ClearSiteDataServerHttpHeadersWriter.Directive[] values();\n}", "des": "Represents the directive values expected by the ClearSiteDataServerHttpHeadersWriter"}
{"index": 9122, "repo": "spring-security-web-6.1.2", "code": "public final class CrossOriginEmbedderPolicyHeaderWriter extends Object implements HeaderWriter {\n\t// Sets the CrossOriginEmbedderPolicyHeaderWriter.CrossOriginEmbedderPolicy value to be used in the Cross-Origin-Embedder-Policy header\n\tvoid setPolicy(CrossOriginEmbedderPolicyHeaderWriter.CrossOriginEmbedderPolicy embedderPolicy);\n\t// Create a Header instance.\n\tvoid writeHeaders(jakarta.servlet.http.HttpServletRequest request, jakarta.servlet.http.HttpServletResponse response);\n}", "des": "Inserts Cross-Origin-Embedder-Policy header."}
{"index": 9123, "repo": "spring-security-web-6.1.2", "code": "public final class CrossOriginOpenerPolicyHeaderWriter extends Object implements HeaderWriter {\n\t// Sets the CrossOriginOpenerPolicyHeaderWriter.CrossOriginOpenerPolicy value to be used in the Cross-Origin-Opener-Policy header\n\tvoid setPolicy(CrossOriginOpenerPolicyHeaderWriter.CrossOriginOpenerPolicy openerPolicy);\n\t// Create a Header instance.\n\tvoid writeHeaders(jakarta.servlet.http.HttpServletRequest request, jakarta.servlet.http.HttpServletResponse response);\n}", "des": "Inserts the Cross-Origin-Opener-Policy header"}
{"index": 9124, "repo": "spring-security-web-6.1.2", "code": "public final class CrossOriginResourcePolicyHeaderWriter extends Object implements HeaderWriter {\n\t// Sets the CrossOriginResourcePolicyHeaderWriter.CrossOriginResourcePolicy value to be used in the Cross-Origin-Resource-Policy header\n\tvoid setPolicy(CrossOriginResourcePolicyHeaderWriter.CrossOriginResourcePolicy resourcePolicy);\n\t// Create a Header instance.\n\tvoid writeHeaders(jakarta.servlet.http.HttpServletRequest request, jakarta.servlet.http.HttpServletResponse response);\n}", "des": "Inserts Cross-Origin-Resource-Policy header"}
{"index": 9125, "repo": "spring-security-web-6.1.2", "code": "public interface CsrfToken extends Serializable {\n\t// Gets the HTTP header that the CSRF is populated on the response and can be placed on requests instead of the parameter.\n\tString getHeaderName();\n\t// Gets the HTTP parameter name that should contain the token.\n\tString getParameterName();\n\t// Gets the token value.\n\tString getToken();\n}", "des": "Provides the information about an expected CSRF token."}
{"index": 9126, "repo": "spring-security-web-6.1.2", "code": "public class CsrfTokenRequestAttributeHandler extends Object implements CsrfTokenRequestHandler {\n\t// Handles a request using a CsrfToken.\n\tvoid handle(jakarta.servlet.http.HttpServletRequest request, jakarta.servlet.http.HttpServletResponse response, Supplier<CsrfToken> deferredCsrfToken);\n\t// The CsrfToken is available as a request attribute named CsrfToken.class.getName().\n\tfinal void setCsrfRequestAttributeName(String csrfRequestAttributeName);\n}", "des": "An implementation of the CsrfTokenRequestHandler interface that is capable of making the CsrfToken available as a request attribute and resolving the token value as either a header or parameter value of the request."}
{"index": 9127, "repo": "spring-security-web-6.1.2", "code": "@FunctionalInterface public interface CsrfTokenRequestHandler extends CsrfTokenRequestResolver {\n\t// Handles a request using a CsrfToken.\n\tvoid handle(jakarta.servlet.http.HttpServletRequest request, jakarta.servlet.http.HttpServletResponse response, Supplier<CsrfToken> csrfToken);\n\t// Returns the token value resolved from the provided HttpServletRequest and CsrfToken or null if not available.\n\tdefault String resolveCsrfTokenValue(jakarta.servlet.http.HttpServletRequest request, CsrfToken csrfToken);\n}", "des": "A callback interface that is used to make the CsrfToken created by the CsrfTokenRepository available as a request attribute."}
{"index": 9128, "repo": "spring-security-web-6.1.2", "code": "public final class DefaultCsrfToken extends Object implements CsrfToken {\n\t// Gets the HTTP header that the CSRF is populated on the response and can be placed on requests instead of the parameter.\n\tString getHeaderName();\n\t// Gets the HTTP parameter name that should contain the token.\n\tString getParameterName();\n\t// Gets the token value.\n\tString getToken();\n}", "des": "A CSRF token that is used to protect against CSRF attacks."}
{"index": 9129, "repo": "spring-security-web-6.1.2", "code": "public final class DefaultCsrfToken extends Object implements CsrfToken {\n\tboolean equals(Object obj);\n\t// Gets the HTTP header that the CSRF is populated on the response and can be placed on requests instead of the parameter.\n\tString getHeaderName();\n\t// Gets the HTTP parameter name that should contain the token.\n\tString getParameterName();\n\t// Gets the token value.\n\tString getToken();\n}", "des": "A CSRF token that is used to protect against CSRF attacks."}
{"index": 9130, "repo": "spring-security-web-6.1.2", "code": "public class DefaultServerRedirectStrategy extends Object implements ServerRedirectStrategy {\n\t// Performs a redirect based upon the provided ServerWebExchange and URI\n\treactor.core.publisher.Mono<Void> sendRedirect(org.springframework.web.server.ServerWebExchange exchange, URI location);\n\t// Sets if the location is relative to the context.\n\tvoid setContextRelative(boolean contextRelative);\n\t// The HttpStatus to use for the redirect.\n\tvoid setHttpStatus(org.springframework.http.HttpStatus httpStatus);\n}", "des": "The default ServerRedirectStrategy to use."}
{"index": 9131, "repo": "spring-security-web-6.1.2", "code": "public interface DeferredCsrfToken {\n\t// Gets the CsrfToken\n\tCsrfToken get();\n\t// Returns true if get() refers to a generated CsrfToken or false if it already existed.\n\tboolean isGenerated();\n}", "des": "An interface that allows delayed access to a CsrfToken that may be generated."}
{"index": 9132, "repo": "spring-security-web-6.1.2", "code": "public class DelegatingServerAuthenticationEntryPoint extends Object implements ServerAuthenticationEntryPoint {\n\t// Initiates the authentication flow\n\treactor.core.publisher.Mono<Void> commence(org.springframework.web.server.ServerWebExchange exchange, org.springframework.security.core.AuthenticationException ex);\n\t// EntryPoint which is used when no RequestMatcher returned true\n\tvoid setDefaultEntryPoint(ServerAuthenticationEntryPoint defaultEntryPoint);\n}", "des": "A ServerAuthenticationEntryPoint which delegates to multiple ServerAuthenticationEntryPoint based on a ServerWebExchangeMatcher"}
{"index": 9133, "repo": "spring-security-web-6.1.2", "code": "public class ELRequestMatcher extends Object implements RequestMatcher {\n\t// Subclasses can override this methode if they want to use a different EL root context\n\torg.springframework.expression.EvaluationContext createELContext(jakarta.servlet.http.HttpServletRequest request);\n\t// Decides whether the rule implemented by the strategy matches the supplied request.\n\tboolean matches(jakarta.servlet.http.HttpServletRequest request);\n}", "des": "A RequestMatcher implementation which uses a SpEL expression"}
{"index": 9134, "repo": "spring-security-web-6.1.2", "code": "public class Enumerator<T> extends Object implements Enumeration<T> {\n\t// Tests if this enumeration contains more elements.\n\tboolean hasMoreElements();\n\t// Returns the next element of this enumeration if this enumeration has at least one more element to provide.\n\tT nextElement();\n}", "des": "Adapter that wraps an Enumeration around a Java 2 collection Iterator."}
{"index": 9135, "repo": "spring-security-web-6.1.2", "code": "public final class FastHttpDateFormat extends Object {\n\t// Formats a specified date to HTTP format.\n\tstatic String formatDate(long value, DateFormat threadLocalformat);\n\t// Gets the current date in HTTP format.\n\tstatic String getCurrentDate();\n\t// Tries to parse the given date as an HTTP date.\n\tstatic long parseDate(String value, DateFormat[] threadLocalformats);\n}", "des": "Utility class to generate HTTP dates."}
{"index": 9136, "repo": "spring-security-web-6.1.2", "code": "public final class FeaturePolicyHeaderWriter extends Object implements HeaderWriter {\n\t// Set the security policy directive(s) to be used in the response header.\n\tvoid setPolicyDirectives(String policyDirectives);\n\t// Create a Header instance.\n\tvoid writeHeaders(jakarta.servlet.http.HttpServletRequest request, jakarta.servlet.http.HttpServletResponse response);\n}", "des": "Provides support for Feature Policy."}
{"index": 9137, "repo": "spring-security-web-6.1.2", "code": "public final class FeaturePolicyServerHttpHeadersWriter extends Object implements ServerHttpHeadersWriter {\n\t// Set the policy directive(s) to be used in the response header.\n\tvoid setPolicyDirectives(String policyDirectives);\n\t// Write the headers to the response.\n\treactor.core.publisher.Mono<Void> writeHttpHeaders(org.springframework.web.server.ServerWebExchange exchange);\n}", "des": "Writes the Feature-Policy response header with configured policy directives."}
{"index": 9138, "repo": "spring-security-web-6.1.2", "code": "public static interface FilterChainProxy.FilterChainDecorator {\n\t// Provide a new FilterChain that accounts for needed security considerations when there are no security filters.\n\tdefault jakarta.servlet.FilterChain decorate(jakarta.servlet.FilterChain original);\n\t// Provide a new FilterChain that accounts for the provided filters as well as teh original filter chain.\n\tjakarta.servlet.FilterChain decorate(jakarta.servlet.FilterChain original, List<jakarta.servlet.Filter> filters);\n}", "des": "A strategy for decorating the provided filter chain with one that accounts for the SecurityFilterChain for a given request."}
{"index": 9139, "repo": "spring-security-web-6.1.2", "code": "public class FilterInvocation extends Object {\n\tjakarta.servlet.FilterChain getChain();\n\t// Indicates the URL that the user agent used for this request.\n\tString getFullRequestUrl();\n\tjakarta.servlet.http.HttpServletRequest getHttpRequest();\n\tjakarta.servlet.http.HttpServletResponse getHttpResponse();\n\tjakarta.servlet.http.HttpServletRequest getRequest();\n\t// Obtains the web application-specific fragment of the URL.\n\tString getRequestUrl();\n\tjakarta.servlet.http.HttpServletResponse getResponse();\n}", "des": "Holds objects associated with a HTTP filter."}
{"index": 9140, "repo": "spring-security-web-6.1.2", "code": "public final class Header extends Object {\n\tboolean equals(Object obj);\n\t// Gets the name of the header.\n\tString getName();\n\t// Gets the values of the header.\n\tList<String> getValues();\n}", "des": "Represents a Header to be added to the HttpServletResponse"}
{"index": 9141, "repo": "spring-security-web-6.1.2", "code": "public class HttpBasicServerAuthenticationEntryPoint extends Object implements ServerAuthenticationEntryPoint {\n\t// Initiates the authentication flow\n\treactor.core.publisher.Mono<Void> commence(org.springframework.web.server.ServerWebExchange exchange, org.springframework.security.core.AuthenticationException ex);\n\t// Sets the realm to be used\n\tvoid setRealm(String realm);\n}", "des": "Prompts a user for HTTP Basic authentication."}
{"index": 9142, "repo": "spring-security-web-6.1.2", "code": "public interface HttpFirewall {\n\t// Provides the request object which will be passed through the filter chain.\n\tFirewalledRequest getFirewalledRequest(jakarta.servlet.http.HttpServletRequest request);\n\t// Provides the response which will be passed through the filter chain.\n\tjakarta.servlet.http.HttpServletResponse getFirewalledResponse(jakarta.servlet.http.HttpServletResponse response);\n}", "des": "Interface which can be used to reject potentially dangerous requests and/or wrap them to control their behaviour."}
{"index": 9143, "repo": "spring-security-web-6.1.2", "code": "public class J2eePreAuthenticatedProcessingFilter extends AbstractPreAuthenticatedProcessingFilter {\n\t// For J2EE container-based authentication there is no generic way to retrieve the credentials, as such this method returns a fixed dummy value.\n\tprotected Object getPreAuthenticatedCredentials(jakarta.servlet.http.HttpServletRequest httpRequest);\n\t// Return the J2EE user name.\n\tprotected Object getPreAuthenticatedPrincipal(jakarta.servlet.http.HttpServletRequest httpRequest);\n}", "des": "This AbstractPreAuthenticatedProcessingFilter implementation is based on the J2EE container-based authentication mechanism."}
{"index": 9144, "repo": "spring-security-web-6.1.2", "code": "public class MatcherSecurityWebFilterChain extends Object implements SecurityWebFilterChain {\n\t// The WebFilter to use\n\treactor.core.publisher.Flux<org.springframework.web.server.WebFilter> getWebFilters();\n\t// Determines if this SecurityWebFilterChain matches the provided ServerWebExchange\n\treactor.core.publisher.Mono<Boolean> matches(org.springframework.web.server.ServerWebExchange exchange);\n}", "des": "A SecurityWebFilterChain that leverages a ServerWebExchangeMatcher to determine which WebFilter to execute."}
{"index": 9145, "repo": "spring-security-web-6.1.2", "code": "public static final class MvcRequestMatcher.Builder extends Object {\n\t// Creates an MvcRequestMatcher that uses the provided pattern to match\n\tMvcRequestMatcher pattern(String pattern);\n\t// Creates an MvcRequestMatcher that uses the provided pattern and HTTP method to match\n\tMvcRequestMatcher pattern(org.springframework.http.HttpMethod method, String pattern);\n\t// Sets the servlet path to be used by the MvcRequestMatcher generated by this builder\n\tMvcRequestMatcher.Builder servletPath(String servletPath);\n}", "des": "A builder for MvcRequestMatcher"}
{"index": 9146, "repo": "spring-security-web-6.1.2", "code": "public final class OrRequestMatcher extends Object implements RequestMatcher {\n\t// Returns a RequestMatcher.MatchResult for this HttpServletRequest.\n\tRequestMatcher.MatchResult matcher(jakarta.servlet.http.HttpServletRequest request);\n\t// Decides whether the rule implemented by the strategy matches the supplied request.\n\tboolean matches(jakarta.servlet.http.HttpServletRequest request);\n}", "des": "RequestMatcher that will return true if any of the passed in RequestMatcher instances match."}
{"index": 9147, "repo": "spring-security-web-6.1.2", "code": "public final class PermissionsPolicyHeaderWriter extends Object implements HeaderWriter {\n\t// Sets the policy to be used in the response header.\n\tvoid setPolicy(String policy);\n\t// Create a Header instance.\n\tvoid writeHeaders(jakarta.servlet.http.HttpServletRequest request, jakarta.servlet.http.HttpServletResponse response);\n}", "des": "Provides support for Permisisons Policy."}
{"index": 9148, "repo": "spring-security-web-6.1.2", "code": "public final class PermissionsPolicyServerHttpHeadersWriter extends Object implements ServerHttpHeadersWriter {\n\t// Set the policy to be used in the response header.\n\tvoid setPolicy(String policy);\n\t// Write the headers to the response.\n\treactor.core.publisher.Mono<Void> writeHttpHeaders(org.springframework.web.server.ServerWebExchange exchange);\n}", "des": "Writes the Permissions-Policy response header with configured policy directives."}
{"index": 9149, "repo": "spring-security-web-6.1.2", "code": "public interface PortMapper {\n\t// Locates the HTTP port associated with the specified HTTPS port.\n\tInteger lookupHttpPort(Integer httpsPort);\n\t// Locates the HTTPS port associated with the specified HTTP port.\n\tInteger lookupHttpsPort(Integer httpPort);\n}", "des": "PortMapper implementations provide callers with information about which HTTP ports are associated with which HTTPS ports on the system, and vice versa."}
{"index": 9150, "repo": "spring-security-web-6.1.2", "code": "public class PreAuthenticatedAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken {\n\t// Get the credentials\n\tObject getCredentials();\n\t// Get the principal\n\tObject getPrincipal();\n}", "des": "Authentication implementation for pre-authenticated authentication."}
{"index": 9151, "repo": "spring-security-web-6.1.2", "code": "public class RedirectServerAuthenticationFailureHandler extends Object implements ServerAuthenticationFailureHandler {\n\t// Invoked when authentication attempt fails\n\treactor.core.publisher.Mono<Void> onAuthenticationFailure(WebFilterExchange webFilterExchange, org.springframework.security.core.AuthenticationException exception);\n\t// Sets the RedirectStrategy to use.\n\tvoid setRedirectStrategy(ServerRedirectStrategy redirectStrategy);\n}", "des": "Performs a redirect to a specified location."}
{"index": 9152, "repo": "spring-security-web-6.1.2", "code": "public class RedirectServerLogoutSuccessHandler extends Object implements ServerLogoutSuccessHandler {\n\t// Invoked after log out was successful\n\treactor.core.publisher.Mono<Void> onLogoutSuccess(WebFilterExchange exchange, org.springframework.security.core.Authentication authentication);\n\t// The URL to redirect to after successfully logging out.\n\tvoid setLogoutSuccessUrl(URI logoutSuccessUrl);\n}", "des": "Performs a redirect on log out success."}
{"index": 9153, "repo": "spring-security-web-6.1.2", "code": "public class ReferrerPolicyHeaderWriter extends Object implements HeaderWriter {\n\t// Sets the policy to be used in the response header.\n\tvoid setPolicy(ReferrerPolicyHeaderWriter.ReferrerPolicy policy);\n\t// Create a Header instance.\n\tvoid writeHeaders(jakarta.servlet.http.HttpServletRequest request, jakarta.servlet.http.HttpServletResponse response);\n}", "des": "Provides support for Referrer Policy."}
{"index": 9154, "repo": "spring-security-web-6.1.2", "code": "public final class ReferrerPolicyServerHttpHeadersWriter extends Object implements ServerHttpHeadersWriter {\n\t// Set the policy to be used in the response header.\n\tvoid setPolicy(ReferrerPolicyServerHttpHeadersWriter.ReferrerPolicy policy);\n\t// Write the headers to the response.\n\treactor.core.publisher.Mono<Void> writeHttpHeaders(org.springframework.web.server.ServerWebExchange exchange);\n}", "des": "Writes the Referrer-Policy response header."}
{"index": 9155, "repo": "spring-security-web-6.1.2", "code": "public final class RequestAuthorizationContext extends Object {\n\t// Returns the HttpServletRequest.\n\tjakarta.servlet.http.HttpServletRequest getRequest();\n\t// Returns the extracted variable values where the key is the variable name and the value is the variable value.\n\tMap<String,String> getVariables();\n}", "des": "An HttpServletRequest authorization context."}
{"index": 9156, "repo": "spring-security-web-6.1.2", "code": "public interface RequestMatcher {\n\t// Returns a MatchResult for this RequestMatcher The default implementation returns Collections.emptyMap() when RequestMatcher.MatchResult.getVariables() is invoked.\n\tdefault RequestMatcher.MatchResult matcher(jakarta.servlet.http.HttpServletRequest request);\n\t// Decides whether the rule implemented by the strategy matches the supplied request.\n\tboolean matches(jakarta.servlet.http.HttpServletRequest request);\n}", "des": "Simple strategy to match an HttpServletRequest."}
{"index": 9157, "repo": "spring-security-web-6.1.2", "code": "public static final class RequestMatcherDelegatingAuthenticationManagerResolver.Builder extends Object {\n\t// Maps a RequestMatcher to an AuthorizationManager.\n\tRequestMatcherDelegatingAuthenticationManagerResolver.Builder add(RequestMatcher matcher, org.springframework.security.authentication.AuthenticationManager manager);\n\t// Creates a RequestMatcherDelegatingAuthenticationManagerResolver instance.\n\tRequestMatcherDelegatingAuthenticationManagerResolver build();\n}", "des": "A builder for RequestMatcherDelegatingAuthenticationManagerResolver."}
{"index": 9158, "repo": "spring-security-web-6.1.2", "code": "public class SavedCookie extends Object implements Serializable {\n\t// Deprecated, for removal: This API element is subject to removal in a future version.\n\tString getComment();\n\tjakarta.servlet.http.Cookie getCookie();\n\tString getDomain();\n\tint getMaxAge();\n\tString getName();\n\tString getPath();\n\tString getValue();\n\t// Deprecated, for removal: This API element is subject to removal in a future version.\n\tint getVersion();\n\tboolean isSecure();\n}", "des": "Stores off the values of a cookie in a serializable holder"}
{"index": 9159, "repo": "spring-security-web-6.1.2", "code": "public class SecurityContextServerLogoutHandler extends Object implements ServerLogoutHandler {\n\t// Invoked when log out is requested\n\treactor.core.publisher.Mono<Void> logout(WebFilterExchange exchange, org.springframework.security.core.Authentication authentication);\n\t// Sets the ServerSecurityContextRepository that should be used for logging out.\n\tvoid setSecurityContextRepository(ServerSecurityContextRepository securityContextRepository);\n}", "des": "A ServerLogoutHandler which removes the SecurityContext using the provided ServerSecurityContextRepository"}
{"index": 9160, "repo": "spring-security-web-6.1.2", "code": "public interface SecurityWebFilterChain {\n\t// The WebFilter to use\n\treactor.core.publisher.Flux<org.springframework.web.server.WebFilter> getWebFilters();\n\t// Determines if this SecurityWebFilterChain matches the provided ServerWebExchange\n\treactor.core.publisher.Mono<Boolean> matches(org.springframework.web.server.ServerWebExchange exchange);\n}", "des": "Defines a filter chain which is capable of being matched against a ServerWebExchange in order to decide whether it applies to that request."}
{"index": 9161, "repo": "spring-security-web-6.1.2", "code": "public class ServerAuthenticationEntryPointFailureHandler extends Object implements ServerAuthenticationFailureHandler {\n\t// Invoked when authentication attempt fails\n\treactor.core.publisher.Mono<Void> onAuthenticationFailure(WebFilterExchange webFilterExchange, org.springframework.security.core.AuthenticationException exception);\n\t// Set whether to rethrow AuthenticationServiceExceptions (defaults to true)\n\tvoid setRethrowAuthenticationServiceException(boolean rethrowAuthenticationServiceException);\n}", "des": "Adapts a ServerAuthenticationEntryPoint into a ServerAuthenticationFailureHandler"}
{"index": 9162, "repo": "spring-security-web-6.1.2", "code": "public interface ServerSecurityContextRepository {\n\t// Loads the SecurityContext associated with the ServerWebExchange\n\treactor.core.publisher.Mono<org.springframework.security.core.context.SecurityContext> load(org.springframework.web.server.ServerWebExchange exchange);\n\t// Saves the SecurityContext\n\treactor.core.publisher.Mono<Void> save(org.springframework.web.server.ServerWebExchange exchange, org.springframework.security.core.context.SecurityContext context);\n}", "des": "Strategy used for persisting a SecurityContext between requests."}
{"index": 9163, "repo": "spring-security-web-6.1.2", "code": "public class SessionFixationProtectionEvent extends org.springframework.security.authentication.event.AbstractAuthenticationEvent {\n\t// Getter for the session ID after it was changed.\n\tString getNewSessionId();\n\t// Getter for the session ID before it was changed.\n\tString getOldSessionId();\n}", "des": "Indicates a session ID was changed for the purposes of session fixation protection."}
{"index": 9164, "repo": "spring-security-web-6.1.2", "code": "public class SessionFixationProtectionStrategy extends AbstractSessionFixationProtectionStrategy {\n\t// Called to extract the existing attributes from the session, prior to invalidating it.\n\tprotected Map<String,Object> extractAttributes(jakarta.servlet.http.HttpSession session);\n\t// Defines whether attributes should be migrated to a new session or not.\n\tvoid setMigrateSessionAttributes(boolean migrateSessionAttributes);\n}", "des": "Uses HttpServletRequest.invalidate() to protect against session fixation attacks."}
{"index": 9165, "repo": "spring-security-web-6.1.2", "code": "public class SubjectDnX509PrincipalExtractor extends Object implements X509PrincipalExtractor, org.springframework.context.MessageSourceAware {\n\t// Returns the principal (usually a String) for the given certificate.\n\tObject extractPrincipal(X509Certificate clientCert);\n\tvoid setMessageSource(org.springframework.context.MessageSource messageSource);\n\t// Sets the regular expression which will by used to extract the user name from the certificate's Subject DN.\n\tvoid setSubjectDnRegex(String subjectDnRegex);\n}", "des": "Obtains the principal from a certificate using a regular expression match against the Subject (as returned by a call to X509Certificate.getSubjectDN())."}
{"index": 9166, "repo": "spring-security-web-6.1.2", "code": "public class WebAuthenticationDetails extends Object implements Serializable {\n\tboolean equals(Object o);\n\t// Indicates the TCP/IP address the authentication request was received from.\n\tString getRemoteAddress();\n\t// Indicates the HttpSession id the authentication request was received from.\n\tString getSessionId();\n}", "des": "A holder of selected HTTP details related to a web authentication request."}
{"index": 9167, "repo": "spring-security-web-6.1.2", "code": "public class WebFilterExchange extends Object {\n\t// The filter chain\n\torg.springframework.web.server.WebFilterChain getChain();\n\t// Get the exchange\n\torg.springframework.web.server.ServerWebExchange getExchange();\n}", "des": "A composite of the ServerWebExchange and the WebFilterChain."}
{"index": 9168, "repo": "spring-security-web-6.1.2", "code": "public class WebSpherePreAuthenticatedProcessingFilter extends AbstractPreAuthenticatedProcessingFilter {\n\t// For J2EE container-based authentication there is no generic way to retrieve the credentials, as such this method returns a fixed dummy value.\n\tprotected Object getPreAuthenticatedCredentials(jakarta.servlet.http.HttpServletRequest httpRequest);\n\t// Return the WebSphere user name.\n\tprotected Object getPreAuthenticatedPrincipal(jakarta.servlet.http.HttpServletRequest httpRequest);\n}", "des": "This AbstractPreAuthenticatedProcessingFilter implementation is based on WebSphere authentication."}
{"index": 9169, "repo": "spring-security-web-6.1.2", "code": "public static enum XFrameOptionsHeaderWriter.XFrameOptionsMode extends Enum<XFrameOptionsHeaderWriter.XFrameOptionsMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic XFrameOptionsHeaderWriter.XFrameOptionsMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic XFrameOptionsHeaderWriter.XFrameOptionsMode[] values();\n}", "des": "The possible values for the X-Frame-Options header."}
{"index": 9170, "repo": "spring-security-web-6.1.2", "code": "public class XFrameOptionsServerHttpHeadersWriter extends Object implements ServerHttpHeadersWriter {\n\t// Sets the X-Frame-Options mode.\n\tvoid setMode(XFrameOptionsServerHttpHeadersWriter.Mode mode);\n\t// Write the headers to the response.\n\treactor.core.publisher.Mono<Void> writeHttpHeaders(org.springframework.web.server.ServerWebExchange exchange);\n}", "des": "ServerHttpHeadersWriter implementation for the X-Frame-Options headers."}
{"index": 9171, "repo": "spring-security-web-6.1.2", "code": "public static enum XFrameOptionsServerHttpHeadersWriter.Mode extends Enum<XFrameOptionsServerHttpHeadersWriter.Mode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic XFrameOptionsServerHttpHeadersWriter.Mode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic XFrameOptionsServerHttpHeadersWriter.Mode[] values();\n}", "des": "The X-Frame-Options values."}
{"index": 9172, "repo": "spring-security-web-6.1.2", "code": "public final class XXssProtectionHeaderWriter extends Object implements HeaderWriter {\n\t// Sets the value of the X-XSS-PROTECTION header.\n\tvoid setHeaderValue(XXssProtectionHeaderWriter.HeaderValue headerValue);\n\t// Create a Header instance.\n\tvoid writeHeaders(jakarta.servlet.http.HttpServletRequest request, jakarta.servlet.http.HttpServletResponse response);\n}", "des": "Renders the X-XSS-Protection header."}
{"index": 9173, "repo": "spring-security-web-6.1.2", "code": "public static enum XXssProtectionHeaderWriter.HeaderValue extends Enum<XXssProtectionHeaderWriter.HeaderValue> {\n\tstatic XXssProtectionHeaderWriter.HeaderValue from(String headerValue);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic XXssProtectionHeaderWriter.HeaderValue valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic XXssProtectionHeaderWriter.HeaderValue[] values();\n}", "des": "The value of the x-xss-protection header."}
{"index": 9174, "repo": "spring-security-web-6.1.2", "code": "public class XXssProtectionServerHttpHeadersWriter extends Object implements ServerHttpHeadersWriter {\n\t// Sets the value of the X-XSS-PROTECTION header.\n\tvoid setHeaderValue(XXssProtectionServerHttpHeadersWriter.HeaderValue headerValue);\n\t// Write the headers to the response.\n\treactor.core.publisher.Mono<Void> writeHttpHeaders(org.springframework.web.server.ServerWebExchange exchange);\n}", "des": "Add the x-xss-protection header."}
{"index": 9175, "repo": "spring-security-web-6.1.2", "code": "public static enum XXssProtectionServerHttpHeadersWriter.HeaderValue extends Enum<XXssProtectionServerHttpHeadersWriter.HeaderValue> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic XXssProtectionServerHttpHeadersWriter.HeaderValue valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic XXssProtectionServerHttpHeadersWriter.HeaderValue[] values();\n}", "des": "The value of the x-xss-protection header."}
{"index": 9176, "repo": "spring-cloud-stream-4.0.0", "code": "public abstract class AbstractBindingTargetFactory<T> extends Object implements BindingTargetFactory {\n\t// Checks whether a specific binding target type can be created by this factory.\n\tfinal boolean canCreate(Class<?> clazz);\n\t// Create an input binding target that will be bound via a corresponding Binder.\n\tabstract T createInput(String name);\n\t// Create an output binding target that will be bound via a corresponding Binder.\n\tabstract T createOutput(String name);\n}", "des": "A BindingTargetFactory implementation that restricts the type of binding target to a specified class and its supertypes."}
{"index": 9177, "repo": "spring-cloud-stream-4.0.0", "code": "public static enum BindingsLifecycleController.State extends Enum<BindingsLifecycleController.State> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic BindingsLifecycleController.State valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic BindingsLifecycleController.State[] values();\n}", "des": "Binding states."}
{"index": 9178, "repo": "spring-cloud-stream-4.0.0", "code": "public interface BindingTargetFactory {\n\t// Checks whether a specific binding target type can be created by this factory.\n\tboolean canCreate(Class<?> clazz);\n\t// Create an input binding target that will be bound via a corresponding Binder.\n\tObject createInput(String name);\n\t// Create an output binding target that will be bound via a corresponding Binder.\n\tObject createOutput(String name);\n}", "des": "Defines methods to create/configure the binding targets defined by org.springframework.cloud.stream.annotation.EnableBinding."}
{"index": 9179, "repo": "spring-cloud-stream-4.0.0", "code": "public final class DynamicDestinationsBindable extends Object implements Bindable {\n\tvoid addOutputBinding(String name, Binding<?> binding);\n\t// Enumerates all the output binding names.\n\tSet<String> getOutputs();\n\t// Unbinds all the outputs associated with this instance.\n\tvoid unbindOutputs(BindingService adapter);\n}", "des": "A Bindable that stores the dynamic destination names and handles their unbinding."}
{"index": 9180, "repo": "spring-cloud-stream-4.0.0", "code": "public final class GenericsUtils extends Object {\n\t// Return the generic type of PollableSource to determine if it is appropriate for the binder.\n\tstatic boolean checkCompatiblePollableBinder(Binder binderInstance, Class<?> bindingTargetType);\n\t// For a specific class that implements or extends a parameterized type, return the parameter of that interface at a given position.\n\tstatic Class<?> getParameterType(Class<?> evaluatedClass, Class<?> interfaceClass, int position);\n}", "des": "Internal utilities for handling generics."}
{"index": 9181, "repo": "spring-cloud-stream-4.0.0", "code": "public interface MessageChannelConfigurer {\n\t// Configure the given input message channel.\n\tvoid configureInputChannel(org.springframework.messaging.MessageChannel messageChannel, String channelName);\n\t// Configure the given output message channel.\n\tvoid configureOutputChannel(org.springframework.messaging.MessageChannel messageChannel, String channelName);\n}", "des": "Interface to be implemented by the classes that configure the Bindable message channels."}
{"index": 9182, "repo": "spring-cloud-stream-4.0.0", "code": "public class MessageSourceBindingTargetFactory extends AbstractBindingTargetFactory<PollableMessageSource> {\n\t// Create an input binding target that will be bound via a corresponding Binder.\n\tPollableMessageSource createInput(String name);\n\t// Create an output binding target that will be bound via a corresponding Binder.\n\tPollableMessageSource createOutput(String name);\n}", "des": "An implementation of BindingTargetFactory for creating DefaultPollableMessageSources."}
{"index": 9183, "repo": "spring-cloud-stream-4.0.0", "code": "public class PartitionHandler extends Object {\n\t// Determine the partition to which to send this message.\n\tint determinePartition(org.springframework.messaging.Message<?> message);\n\t// Set the actual partition count (if different to the configured count).\n\tvoid setPartitionCount(int partitionCount);\n}", "des": "Utility class to determine if a binding is configured for partitioning (based on the binder properties provided in the constructor) and what partition a message should be delivered to."}
{"index": 9184, "repo": "spring-cloud-stream-4.0.0", "code": "@FunctionalInterface public interface PollableSource<H> {\n\t// Poll the consumer.\n\tboolean poll(H handler);\n\t// Poll the consumer and convert the payload to the type.\n\tdefault boolean poll(H handler, org.springframework.core.ParameterizedTypeReference<?> type);\n}", "des": "A mechanism to poll a consumer."}
{"index": 9185, "repo": "spring-cloud-stream-4.0.0", "code": "public interface ProducerDestination {\n\t// Provides the destination name.\n\tString getName();\n\t// Provides the destination name for a given partition.\n\tString getNameForPartition(int partition);\n}", "des": "Represents a ProducerDestination that provides the information about the destination that is physically provisioned through ProvisioningProvider.provisionProducerDestination(String, ProducerProperties)."}
{"index": 9186, "repo": "spring-cloud-stream-4.0.0", "code": "public interface ProvisioningProvider<C extends ConsumerProperties,P extends ProducerProperties> {\n\t// Creates the middleware destination on the physical broker for the consumer to consume data.\n\tConsumerDestination provisionConsumerDestination(String name, String group, C properties);\n\t// Creates middleware destination on the physical broker for the producer to send data.\n\tProducerDestination provisionProducerDestination(String name, P properties);\n}", "des": "Provisioning SPI that allows the users to provision destinations such as queues and topics."}
{"index": 9187, "repo": "spring-cloud-stream-4.0.0", "code": "public class SubscribableChannelBindingTargetFactory extends AbstractBindingTargetFactory<org.springframework.messaging.SubscribableChannel> {\n\t// Create an input binding target that will be bound via a corresponding Binder.\n\torg.springframework.messaging.SubscribableChannel createInput(String name);\n\t// Create an output binding target that will be bound via a corresponding Binder.\n\torg.springframework.messaging.SubscribableChannel createOutput(String name);\n}", "des": "An implementation of BindingTargetFactory for creating SubscribableChannels."}
{"index": 9188, "repo": "spring-cloud-consul-core-4.0.2", "code": "public enum SerfStatusEnum extends Enum<SerfStatusEnum> {\n\tint getCode();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SerfStatusEnum valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SerfStatusEnum[] values();\n}", "des": "Gossip pool (serf) statuses."}
{"index": 9189, "repo": "spring-data-commons-3.1.2", "code": "public abstract class AbstractEntityInformation<T,ID> extends Object implements EntityInformation<T,ID> {\n\t// Returns the actual domain class type.\n\tClass<T> getJavaType();\n\t// Returns whether the given entity is considered to be new.\n\tboolean isNew(T entity);\n}", "des": "Base class for implementations of EntityInformation."}
{"index": 9190, "repo": "spring-data-commons-3.1.2", "code": "public class AccessOptions extends Object {\n\t// Returns the default AccessOptions.GetOptions rejecting intermediate null values when accessing property paths.\n\tstatic AccessOptions.GetOptions defaultGetOptions();\n\t// Returns the default AccessOptions.SetOptions rejecting setting values when finding an intermediate property value to be null.\n\tstatic AccessOptions.SetOptions defaultSetOptions();\n}", "des": "Access options when using PersistentPropertyPathAccessor to get and set properties."}
{"index": 9191, "repo": "spring-data-commons-3.1.2", "code": "public static enum AccessOptions.GetOptions.GetNulls extends Enum<AccessOptions.GetOptions.GetNulls> {\n\tAccessOptions.SetOptions.SetNulls toNullHandling();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AccessOptions.GetOptions.GetNulls valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AccessOptions.GetOptions.GetNulls[] values();\n}", "des": "How to handle null values during a PersistentPropertyPath traversal."}
{"index": 9192, "repo": "spring-data-commons-3.1.2", "code": "public static enum AccessOptions.SetOptions.Propagation extends Enum<AccessOptions.SetOptions.Propagation> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AccessOptions.SetOptions.Propagation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AccessOptions.SetOptions.Propagation[] values();\n}", "des": "How to propagate setting values that cross collection and map properties."}
{"index": 9193, "repo": "spring-data-commons-3.1.2", "code": "public static enum AccessOptions.SetOptions.SetNulls extends Enum<AccessOptions.SetOptions.SetNulls> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AccessOptions.SetOptions.SetNulls valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AccessOptions.SetOptions.SetNulls[] values();\n}", "des": "How to handle intermediate null values when setting"}
{"index": 9194, "repo": "spring-data-commons-3.1.2", "code": "public final class Accessor extends Object {\n\t// Returns the name of the property this accessor handles.\n\tString getPropertyName();\n\t// Returns whether the accessor is a getter.\n\tboolean isGetter();\n\t// Returns whether the accessor is a setter.\n\tboolean isSetter();\n}", "des": "Helper value to abstract an accessor."}
{"index": 9195, "repo": "spring-data-commons-3.1.2", "code": "public class AnnotationAuditingConfiguration extends Object implements AuditingConfiguration {\n\t// Returns the bean name of the AuditorAware instance to be used..\n\tString getAuditorAwareRef();\n\t// Returns the bean name of the DateTimeProvider to be used.\n\tString getDateTimeProviderRef();\n\t// Returns whether the entity shall be marked as modified on creation.\n\tboolean isModifyOnCreate();\n\t// Returns whether the creation and modification dates shall be set.\n\tboolean isSetDates();\n}", "des": "Default implementation for AuditingConfiguration."}
{"index": 9196, "repo": "spring-data-commons-3.1.2", "code": "public class AnnotationDetectionMethodCallback<A extends Annotation> extends Object implements ReflectionUtils.MethodCallback {\n\tvoid doWith(Method method);\n\tA getAnnotation();\n\tMethod getMethod();\n\t// Returns the method with the configured annotation.\n\tMethod getRequiredMethod();\n\t// Returns whether an annotation was found.\n\tboolean hasFoundAnnotation();\n\t// Invokes the method using reflection.\n\t<T> T invoke(Object target, Object... args);\n}", "des": "ReflectionUtils.MethodCallback to find annotations of a given type."}
{"index": 9197, "repo": "spring-data-commons-3.1.2", "code": "public class AnnotationRepositoryMetadata extends AbstractRepositoryMetadata {\n\t// Returns the TypeInformationof the domain type the repository is declared to manage.\n\tTypeInformation<?> getDomainTypeInformation();\n\tSet<RepositoryFragment<?>> getFragments();\n\t// Returns the TypeInformation of the id type of the repository.\n\tTypeInformation<?> getIdTypeInformation();\n}", "des": "RepositoryMetadata implementation inspecting the given repository interface for a RepositoryDefinition annotation."}
{"index": 9198, "repo": "spring-data-commons-3.1.2", "code": "public interface AuditingConfiguration {\n\t// Returns the bean name of the AuditorAware instance to be used..\n\tString getAuditorAwareRef();\n\t// Returns the bean name of the DateTimeProvider to be used.\n\tString getDateTimeProviderRef();\n\t// Returns whether the entity shall be marked as modified on creation.\n\tboolean isModifyOnCreate();\n\t// Returns whether the creation and modification dates shall be set.\n\tboolean isSetDates();\n}", "des": "Configuration information for auditing."}
{"index": 9199, "repo": "spring-data-commons-3.1.2", "code": "public enum BootstrapMode extends Enum<BootstrapMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic BootstrapMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic BootstrapMode[] values();\n}", "des": "Enumeration to define in which way repositories are bootstrapped."}
{"index": 9200, "repo": "spring-data-commons-3.1.2", "code": "public class Box extends Object implements Shape {\n\tboolean equals(Object obj);\n\t// Returns the first Point making up the Box.\n\tPoint getFirst();\n\t// Returns the second Point making up the Box.\n\tPoint getSecond();\n}", "des": "Represents a geospatial box value"}
{"index": 9201, "repo": "spring-data-commons-3.1.2", "code": "public class CamelCaseSplittingFieldNamingStrategy extends Object implements FieldNamingStrategy {\n\t// Returns the field name to be used for the given PersistentProperty.\n\tString getFieldName(PersistentProperty<?> property);\n\t// Callback to prepare the uncapitalized part obtained from the split up of the camel case source.\n\tprotected String preparePart(String part);\n}", "des": "Configurable FieldNamingStrategy that splits up camel-case property names and reconcatenates them using a configured delimiter."}
{"index": 9202, "repo": "spring-data-commons-3.1.2", "code": "public interface ChangeSetPersister<K> {\n\t// Return id\n\tK getPersistentId(ChangeSetBacked entity, ChangeSet cs);\n\t// TODO how to tell when not found?\n\tvoid getPersistentState(Class<? extends ChangeSetBacked> entityClass, K key, ChangeSet changeSet);\n\t// Return key\n\tK persistState(ChangeSetBacked entity, ChangeSet cs);\n}", "des": "Interface to be implemented by classes that can synchronize between data stores and ChangeSets."}
{"index": 9203, "repo": "spring-data-commons-3.1.2", "code": "public class Circle extends Object implements Shape {\n\tboolean equals(Object o);\n\t// Returns the center of the Circle.\n\tPoint getCenter();\n\t// Returns the radius of the Circle.\n\tDistance getRadius();\n}", "des": "Represents a geospatial circle value"}
{"index": 9204, "repo": "spring-data-commons-3.1.2", "code": "public class ClassGeneratingPropertyAccessorFactory extends Object implements PersistentPropertyAccessorFactory {\n\t// Returns a PersistentPropertyAccessor for a given PersistentEntity and bean.\n\t<T> PersistentPropertyAccessor<T> getPropertyAccessor(PersistentEntity<?,?> entity, T bean);\n\t// Checks whether an accessor class can be generated.\n\tboolean isSupported(PersistentEntity<?,?> entity);\n}", "des": "A factory that can generate byte code to speed-up dynamic property access."}
{"index": 9205, "repo": "spring-data-commons-3.1.2", "code": "public interface CloseableIterator<T> extends Iterator<T>, Closeable {\n\tvoid close();\n\t// Create a Spliterator over the elements provided by this Iterator.\n\tdefault Spliterator<T> spliterator();\n\t// Return a sequential Stream with this Iterator as its source.\n\tdefault Stream<T> stream();\n}", "des": "A CloseableIterator serves as a bridging data structure for the underlying data store specific results that can be wrapped in a Java 8 java.util.stream.Stream."}
{"index": 9206, "repo": "spring-data-commons-3.1.2", "code": "public class ConfigurableTypeInformationMapper extends Object implements TypeInformationMapper {\n\t// Returns the alias to be used for the given TypeInformation.\n\tAlias createAliasFor(TypeInformation<?> type);\n\t// Returns the actual TypeInformation to be used for the given alias.\n\tTypeInformation<?> resolveTypeFrom(Alias alias);\n}", "des": "TypeInformationMapper implementation that can be either set up using a MappingContext or manually set up Map of String aliases to types."}
{"index": 9207, "repo": "spring-data-commons-3.1.2", "code": "public enum CurrentDateTimeProvider extends Enum<CurrentDateTimeProvider> implements DateTimeProvider {\n\t// Returns the current time to be used as modification or creation date.\n\tOptional<TemporalAccessor> getNow();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic CurrentDateTimeProvider valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic CurrentDateTimeProvider[] values();\n}", "des": "Default DateTimeProvider simply creating new LocalDateTime instances for each method call."}
{"index": 9208, "repo": "spring-data-commons-3.1.2", "code": "public class CustomMetric extends Object implements Metric {\n\t// Returns the scientific abbreviation of the unit the Metric is in.\n\tString getAbbreviation();\n\t// Returns the multiplier to calculate metrics values from a base scale.\n\tdouble getMultiplier();\n}", "des": "Value object to create custom Metrics on the fly."}
{"index": 9209, "repo": "spring-data-commons-3.1.2", "code": "public class DefaultRepositoryMetadata extends AbstractRepositoryMetadata {\n\t// Returns the TypeInformationof the domain type the repository is declared to manage.\n\tTypeInformation<?> getDomainTypeInformation();\n\tSet<RepositoryFragment<?>> getFragments();\n\t// Returns the TypeInformation of the id type of the repository.\n\tTypeInformation<?> getIdTypeInformation();\n}", "des": "Default implementation of RepositoryMetadata."}
{"index": 9210, "repo": "spring-data-commons-3.1.2", "code": "public class DelegatingEntityInformation<T,ID> extends Object implements EntityInformation<T,ID> {\n\t// Returns the id of the given entity or null if none can be obtained.\n\tID getId(T entity);\n\t// Returns the type of the id of the entity.\n\tClass<ID> getIdType();\n\t// Returns the actual domain class type.\n\tClass<T> getJavaType();\n\t// Returns whether the given entity is considered to be new.\n\tboolean isNew(T entity);\n}", "des": "Useful base class to implement custom EntityInformations and delegate execution of standard methods from EntityInformation to a special implementation."}
{"index": 9211, "repo": "spring-data-commons-3.1.2", "code": "public enum DistanceFormatter extends Enum<DistanceFormatter> implements Converter<String,Distance>, Formatter<Distance> {\n\tfinal Distance convert(String source);\n\tDistance parse(String text, Locale locale);\n\tString print(Distance distance, Locale locale);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic DistanceFormatter valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic DistanceFormatter[] values();\n}", "des": "Converter to create Distance instances from String representations."}
{"index": 9212, "repo": "spring-data-commons-3.1.2", "code": "public interface EntityConverter<E extends PersistentEntity<?,P>,P extends PersistentProperty<P>,T,S> extends EntityReader<T,S>, EntityWriter<T,S> {\n\t// Returns the underlying ConversionService used by the converter.\n\tConversionService getConversionService();\n\t// Returns the underlying MappingContext used by the converter.\n\tMappingContext<? extends E,P> getMappingContext();\n}", "des": "Combined EntityReader and EntityWriter and add the ability to access a MappingContext and ConversionService."}
{"index": 9213, "repo": "spring-data-commons-3.1.2", "code": "public interface EntityInformation<T,ID> extends EntityMetadata<T> {\n\t// Returns the id of the given entity or null if none can be obtained.\n\tID getId(T entity);\n\t// Returns the type of the id of the entity.\n\tClass<ID> getIdType();\n\t// Returns the identifier of the given entity.\n\tdefault ID getRequiredId(T entity);\n\t// Returns whether the given entity is considered to be new.\n\tboolean isNew(T entity);\n}", "des": "Extension of EntityMetadata to add functionality to query information of entity instances."}
{"index": 9214, "repo": "spring-data-commons-3.1.2", "code": "public interface EvaluationContextExtension extends ExtensionIdAware {\n\t// Return the functions exposed by the extension.\n\tdefault Map<String,Function> getFunctions();\n\t// Return the properties exposed by the extension.\n\tdefault Map<String,Object> getProperties();\n\t// Return the root object to be exposed by the extension.\n\tdefault Object getRootObject();\n}", "des": "SPI to allow adding a set of properties and function definitions accessible via the root of an EvaluationContext provided by an ExtensionAwareQueryMethodEvaluationContextProvider."}
{"index": 9215, "repo": "spring-data-commons-3.1.2", "code": "@FunctionalInterface public interface EvaluationContextProvider {\n\t// Return a EvaluationContext built using the given parameter values.\n\tEvaluationContext getEvaluationContext(Object rootObject);\n\t// Return a tailored EvaluationContext built using the given parameter values and considering expression dependencies.\n\tdefault EvaluationContext getEvaluationContext(Object rootObject, ExpressionDependencies dependencies);\n}", "des": "Provides a way to access a centrally defined potentially shared StandardEvaluationContext."}
{"index": 9216, "repo": "spring-data-commons-3.1.2", "code": "public interface Example<T> {\n\t// Get the ExampleMatcher used.\n\tExampleMatcher getMatcher();\n\t// Get the example used.\n\tT getProbe();\n\t// Get the actual type for the probe used.\n\tdefault Class<T> getProbeType();\n\t// Create a new Example including all non-null properties by default.\n\tstatic <T> Example<T> of(T probe);\n\t// Create a new Example using the given ExampleMatcher.\n\tstatic <T> Example<T> of(T probe, ExampleMatcher matcher);\n}", "des": "Support for query by example (QBE)."}
{"index": 9217, "repo": "spring-data-commons-3.1.2", "code": "public static enum ExampleMatcher.MatchMode extends Enum<ExampleMatcher.MatchMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ExampleMatcher.MatchMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ExampleMatcher.MatchMode[] values();\n}", "des": "The match modes to expose so that clients can find about how to concatenate the predicates."}
{"index": 9218, "repo": "spring-data-commons-3.1.2", "code": "public static enum ExampleMatcher.NullHandler extends Enum<ExampleMatcher.NullHandler> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ExampleMatcher.NullHandler valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ExampleMatcher.NullHandler[] values();\n}", "des": "Null handling for creating criterion out of an Example."}
{"index": 9219, "repo": "spring-data-commons-3.1.2", "code": "public static enum ExampleMatcher.StringMatcher extends Enum<ExampleMatcher.StringMatcher> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ExampleMatcher.StringMatcher valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ExampleMatcher.StringMatcher[] values();\n}", "des": "Match modes for treatment of String values."}
{"index": 9220, "repo": "spring-data-commons-3.1.2", "code": "public class ExtensionAwareEvaluationContextProvider extends Object implements EvaluationContextProvider {\n\t// Return a EvaluationContext built using the given parameter values.\n\tStandardEvaluationContext getEvaluationContext(Object rootObject);\n\t// Return a tailored EvaluationContext built using the given parameter values and considering expression dependencies.\n\tStandardEvaluationContext getEvaluationContext(Object rootObject, ExpressionDependencies dependencies);\n}", "des": "An EvaluationContextProvider that assembles an EvaluationContext from a list of EvaluationContextExtension instances."}
{"index": 9221, "repo": "spring-data-commons-3.1.2", "code": "public final class FactoryMethod<T,P extends PersistentProperty<P>> extends Object {\n\t// Returns the underlying Constructor.\n\tMethod getFactoryMethod();\n\t// Returns the Parameters of the executable.\n\tList<Parameter<Object,P>> getParameters();\n\t// Returns whether the given PersistentProperty is referenced in a creator argument of the PersistentEntity backing this InstanceCreatorMetadataSupport.\n\tboolean isCreatorParameter(PersistentProperty<?> property);\n}", "des": "Value object to encapsulate the factory method to be used when mapping persistent data to objects."}
{"index": 9222, "repo": "spring-data-commons-3.1.2", "code": "public class GeoResults<T> extends Object implements Iterable<GeoResult<T>>, Serializable {\n\tboolean equals(Object o);\n\t// Returns the average distance of all GeoResults in this list.\n\tDistance getAverageDistance();\n\t// Returns the actual content of the GeoResults.\n\tList<GeoResult<T>> getContent();\n\tIterator<GeoResult<T>> iterator();\n}", "des": "Value object to capture GeoResults as well as the average distance they have."}
{"index": 9223, "repo": "spring-data-commons-3.1.2", "code": "public interface IdentifierAccessor {\n\t// Returns the value of the identifier.\n\tObject getIdentifier();\n\t// Returns the identifier of the underlying instance.\n\tdefault Object getRequiredIdentifier();\n}", "des": "Interface for a component allowing the access of identifier values."}
{"index": 9224, "repo": "spring-data-commons-3.1.2", "code": "public class InstantiationAwarePropertyAccessor<T> extends Object implements PersistentPropertyAccessor<T> {\n\t// Returns the underlying bean.\n\tT getBean();\n\t// Returns the value of the given PersistentProperty of the underlying bean instance.\n\tObject getProperty(PersistentProperty<?> property);\n\t// Sets the given PersistentProperty to the given value.\n\tvoid setProperty(PersistentProperty<?> property, Object value);\n}", "des": "A PersistentPropertyAccessor that will use an entity's PersistenceCreator to create a new instance of it to apply a new value for a given PersistentProperty."}
{"index": 9225, "repo": "spring-data-commons-3.1.2", "code": "public class InstantiationAwarePropertyAccessorFactory extends Object implements PersistentPropertyAccessorFactory {\n\t// Returns a PersistentPropertyAccessor for a given PersistentEntity and bean.\n\t<T> PersistentPropertyAccessor<T> getPropertyAccessor(PersistentEntity<?,?> entity, T bean);\n\t// Returns whether given PersistentEntity is supported by this PersistentPropertyAccessorFactory.\n\tboolean isSupported(PersistentEntity<?,?> entity);\n}", "des": "Delegating PersistentPropertyAccessorFactory decorating the PersistentPropertyAccessors created with an InstantiationAwarePropertyAccessor to allow the handling of purely immutable types."}
{"index": 9226, "repo": "spring-data-commons-3.1.2", "code": "public class InvalidPersistentPropertyPath extends MappingException {\n\t// Returns the part of the source path until which the source property path could be resolved.\n\tString getResolvedPath();\n\t// Returns the source property path.\n\tString getSource();\n\t// Returns the type the source property path was attempted to be resolved on.\n\tTypeInformation<?> getType();\n\t// Returns the segment of the source property path that could not be resolved.\n\tString getUnresolvableSegment();\n}", "des": "Exception to indicate a source path couldn't be resolved into a PersistentPropertyPath completely."}
{"index": 9227, "repo": "spring-data-commons-3.1.2", "code": "public class IsNewAwareAuditingHandler extends AuditingHandler {\n\t// Factory method that creates a new IsNewAwareAuditingHandler for the given MappingContext.\n\tstatic IsNewAwareAuditingHandler from(MappingContext<?,?> mappingContext);\n\t// Marks the given object created or modified based on PersistentEntity.isNew(Object).\n\tObject markAudited(Object object);\n}", "des": "AuditingHandler extension that uses PersistentEntity.isNew(Object) to expose a generic IsNewAwareAuditingHandler.markAudited(Object) method that will route calls to AuditingHandler.markCreated(Object) or AuditingHandler.markModified(Object) based on the IsNewStrategy determined from the factory."}
{"index": 9228, "repo": "spring-data-commons-3.1.2", "code": "public class Jackson2ResourceReader extends Object implements ResourceReader {\n\t// Reads a single or Collection of target objects from the given Resource.\n\tObject readFrom(Resource resource, ClassLoader classLoader);\n\t// Configures the JSON document's key to lookup the type to instantiate the object.\n\tvoid setTypeKey(String typeKey);\n}", "des": "A ResourceReader using Jackson to read JSON into objects."}
{"index": 9229, "repo": "spring-data-commons-3.1.2", "code": "public class JsonProjectingMethodInterceptorFactory extends Object implements MethodInterceptorFactory {\n\t// Returns the MethodInterceptor to be used for the given source object and target type.\n\tMethodInterceptor createMethodInterceptor(Object source, Class<?> targetType);\n\t// Returns whether the current factory is supposed to be used to create a MethodInterceptor for proxy of the given target type.\n\tboolean supports(Object source, Class<?> targetType);\n}", "des": "MethodInterceptorFactory to create a MethodInterceptor that will"}
{"index": 9230, "repo": "spring-data-commons-3.1.2", "code": "@NoRepositoryBean public interface ListCrudRepository<T,ID> extends CrudRepository<T,ID> {\n\t// Returns all instances of the type.\n\tList<T> findAll();\n\t// Returns all instances of the type T with the given IDs.\n\tList<T> findAllById(Iterable<ID> ids);\n\t// Saves all given entities.\n\t<S extends T>List<S> saveAll(Iterable<S> entities);\n}", "des": "Interface for generic CRUD operations on a repository for a specific type."}
{"index": 9231, "repo": "spring-data-commons-3.1.2", "code": "public interface ListQueryByExampleExecutor<T> extends QueryByExampleExecutor<T> {\n\t// Returns all entities matching the given Example.\n\t<S extends T>List<S> findAll(Example<S> example);\n\t// Returns all entities matching the given Example applying the given Sort.\n\t<S extends T>List<S> findAll(Example<S> example, Sort sort);\n}", "des": "Interface to allow execution of Query by Example Example instances."}
{"index": 9232, "repo": "spring-data-commons-3.1.2", "code": "public class MappingContextEvent<E extends PersistentEntity<?,P>,P extends PersistentProperty<P>> extends ApplicationEvent {\n\t// Returns the PersistentEntity the event was created for.\n\tE getPersistentEntity();\n\t// Returns whether the MappingContextEvent was triggered by the given MappingContext.\n\tboolean wasEmittedBy(MappingContext<?,?> context);\n}", "des": "Base implementation of an ApplicationEvent refering to a PersistentEntity."}
{"index": 9233, "repo": "spring-data-commons-3.1.2", "code": "public class MappingContextTypeInformationMapper extends Object implements TypeInformationMapper {\n\t// Returns the alias to be used for the given TypeInformation.\n\tAlias createAliasFor(TypeInformation<?> type);\n\t// Returns the actual TypeInformation to be used for the given alias.\n\tTypeInformation<?> resolveTypeFrom(Alias alias);\n}", "des": "TypeInformationMapper implementation that can be either set up using a MappingContext or manually set up Map of String aliases to types."}
{"index": 9234, "repo": "spring-data-commons-3.1.2", "code": "public class MappingInstantiationException extends RuntimeException {\n\t// Deprecated. since 3.0, use getEntityCreator() instead.\n\tOptional<Constructor<?>> getConstructor();\n\t// The constructor arguments used to invoke the constructor.\n\tList<Object> getConstructorArguments();\n\t// The entity creator used during the instantiation attempt.\n\tOptional<InstanceCreatorMetadata<?>> getEntityCreator();\n\t// Returns the type of the entity that was attempted to instantiate.\n\tOptional<Class<?>> getEntityType();\n}", "des": "Exception being thrown in case an entity could not be instantiated in the process of a to-object-mapping."}
{"index": 9235, "repo": "spring-data-commons-3.1.2", "code": "public interface MethodInterceptorFactory {\n\t// Returns the MethodInterceptor to be used for the given source object and target type.\n\tMethodInterceptor createMethodInterceptor(Object source, Class<?> targetType);\n\t// Returns whether the current factory is supposed to be used to create a MethodInterceptor for proxy of the given target type.\n\tboolean supports(Object source, Class<?> targetType);\n}", "des": "SPI to create MethodInterceptor instances based on the given source object and the target type to produce."}
{"index": 9236, "repo": "spring-data-commons-3.1.2", "code": "@FunctionalInterface public interface MethodLookup {\n\t// Returns a composed MethodLookup that represents a concatenation of this predicate and another.\n\tdefault MethodLookup and(MethodLookup other);\n\t// Return an ordered List of MethodLookup.MethodPredicate.\n\tList<MethodLookup.MethodPredicate> getLookups();\n}", "des": "Strategy interface providing predicates to resolve a method called on a composite to its implementation method."}
{"index": 9237, "repo": "spring-data-commons-3.1.2", "code": "public interface Metric extends Serializable {\n\t// Returns the scientific abbreviation of the unit the Metric is in.\n\tString getAbbreviation();\n\t// Returns the multiplier to calculate metrics values from a base scale.\n\tdouble getMultiplier();\n}", "des": "Interface for Metrics that can be applied to a base scale."}
{"index": 9238, "repo": "spring-data-commons-3.1.2", "code": "public enum Metrics extends Enum<Metrics> implements Metric {\n\t// Returns the scientific abbreviation of the unit the Metric is in.\n\tString getAbbreviation();\n\t// Returns the multiplier to calculate metrics values from a base scale.\n\tdouble getMultiplier();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Metrics valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Metrics[] values();\n}", "des": "Commonly used Metrics."}
{"index": 9239, "repo": "spring-data-commons-3.1.2", "code": "public interface NamedQueries {\n\t// Returns the named query with the given name.\n\tString getQuery(String queryName);\n\t// Returns whether the map contains a named query for the given name.\n\tboolean hasQuery(String queryName);\n}", "des": "Abstraction of a map of NamedQueries that can be looked up by their names."}
{"index": 9240, "repo": "spring-data-commons-3.1.2", "code": "public class NamedQueriesBeanDefinitionBuilder extends Object {\n\t// Builds a new BeanDefinition from the given source.\n\tBeanDefinition build(Object source);\n\t// Sets the (comma-separated) locations to load the properties files from to back the NamedQueries instance.\n\tvoid setLocations(String locations);\n}", "des": "Builder to create a BeanDefinition for a NamedQueries instance using properties."}
{"index": 9241, "repo": "spring-data-commons-3.1.2", "code": "public class NullableWrapper extends Object {\n\t// Returns the backing value.\n\tObject getValue();\n\t// Returns the type of the contained value.\n\tClass<?> getValueType();\n}", "des": "Simple value object to wrap a nullable delegate."}
{"index": 9242, "repo": "spring-data-commons-3.1.2", "code": "public final class OffsetScrollPosition extends Object implements ScrollPosition {\n\t// Returns a new OffsetScrollPosition that has been advanced by the given value.\n\tOffsetScrollPosition advanceBy(long delta);\n\tboolean equals(Object o);\n\t// The zero or positive offset.\n\tlong getOffset();\n\t// Returns whether the current scroll position is the initial one.\n\tboolean isInitial();\n\t// Returns the position function to calculate.\n\tstatic IntFunction<OffsetScrollPosition> positionFunction(long startOffset);\n}", "des": "A ScrollPosition based on the offsets within query results."}
{"index": 9243, "repo": "spring-data-commons-3.1.2", "code": "public interface Page<T> extends Slice<T> {\n\t// Creates a new empty Page.\n\tstatic <T> Page<T> empty();\n\t// Creates a new empty Page for the given Pageable.\n\tstatic <T> Page<T> empty(Pageable pageable);\n\t// Returns the total amount of elements.\n\tlong getTotalElements();\n\t// Returns the number of total pages.\n\tint getTotalPages();\n\t// Returns a new Page with the content of the current one mapped by the given Function.\n\t<U> Page<U> map(Function<? super T,? extends U> converter);\n}", "des": "A page is a sublist of a list of objects."}
{"index": 9244, "repo": "spring-data-commons-3.1.2", "code": "@NoRepositoryBean public interface PagingAndSortingRepository<T,ID> extends Repository<T,ID> {\n\t// Returns a Page of entities meeting the paging restriction provided in the Pageable object.\n\tPage<T> findAll(Pageable pageable);\n\t// Returns all entities sorted by the given options.\n\tIterable<T> findAll(Sort sort);\n}", "des": "Repository fragment to provide methods to retrieve entities using the pagination and sorting abstraction."}
{"index": 9245, "repo": "spring-data-commons-3.1.2", "code": "public final class Pair<S,T> extends Object {\n\tboolean equals(Object o);\n\t// Returns the first element of the Pair.\n\tS getFirst();\n\t// Returns the second element of the Pair.\n\tT getSecond();\n\t// Creates a new Pair for the given elements.\n\tstatic <S, T> Pair<S,T> of(S first, T second);\n\t// A collector to create a Map from a Stream of Pairs.\n\tstatic <S, T> Collector<Pair<S,T>,?,Map<S,T>> toMap();\n}", "des": "A tuple of things."}
{"index": 9246, "repo": "spring-data-commons-3.1.2", "code": "public abstract class ParsingUtils extends Object {\n\t// Reconcatenates the given camel-case source String using the given delimiter.\n\tstatic String reconcatenateCamelCase(String source, String delimiter);\n\t// Splits up the given camel-case String.\n\tstatic List<String> splitCamelCase(String source);\n\t// Splits up the given camel-case String and returns the parts in lower case.\n\tstatic List<String> splitCamelCaseToLower(String source);\n}", "des": "Utility methods for String parsing."}
{"index": 9247, "repo": "spring-data-commons-3.1.2", "code": "public class Part extends Object {\n\tboolean equals(Object o);\n\t// Returns how many method parameters are bound by this part.\n\tint getNumberOfArguments();\n\tPropertyPath getProperty();\n\tPart.Type getType();\n\t// Returns whether the PropertyPath referenced should be matched ignoring case.\n\tPart.IgnoreCaseType shouldIgnoreCase();\n}", "des": "A single part of a method name that has to be transformed into a query part."}
{"index": 9248, "repo": "spring-data-commons-3.1.2", "code": "public static enum Part.IgnoreCaseType extends Enum<Part.IgnoreCaseType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Part.IgnoreCaseType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Part.IgnoreCaseType[] values();\n}", "des": "The various types of ignore case that are supported."}
{"index": 9249, "repo": "spring-data-commons-3.1.2", "code": "public interface Persistable<ID> {\n\t// Returns the id of the entity.\n\tID getId();\n\t// Returns if the Persistable is new or was persisted already.\n\tboolean isNew();\n}", "des": "Simple interface for entities."}
{"index": 9250, "repo": "spring-data-commons-3.1.2", "code": "public enum PersistableIsNewStrategy extends Enum<PersistableIsNewStrategy> implements IsNewStrategy {\n\t// Returns whether the given entity is new, i.e. has never been persisted before or not.\n\tboolean isNew(Object entity);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PersistableIsNewStrategy valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PersistableIsNewStrategy[] values();\n}", "des": "IsNewStrategy that invokes Persistable.isNew() on the given object."}
{"index": 9251, "repo": "spring-data-commons-3.1.2", "code": "public class PersistentEntityInformation<T,ID> extends Object implements EntityInformation<T,ID> {\n\t// Returns the id of the given entity or null if none can be obtained.\n\tID getId(T entity);\n\t// Returns the type of the id of the entity.\n\tClass<ID> getIdType();\n\t// Returns the actual domain class type.\n\tClass<T> getJavaType();\n\t// Returns whether the given entity is considered to be new.\n\tboolean isNew(T entity);\n}", "des": "EntityInformation implementation that uses a PersistentEntity to obtain id type information and uses a IdentifierAccessor to access the property value if requested."}
{"index": 9252, "repo": "spring-data-commons-3.1.2", "code": "public interface PersistentPropertyAccessor<T> {\n\t// Returns the underlying bean.\n\tT getBean();\n\t// Returns the value of the given PersistentProperty of the underlying bean instance.\n\tObject getProperty(PersistentProperty<?> property);\n\t// Sets the given PersistentProperty to the given value.\n\tvoid setProperty(PersistentProperty<?> property, Object value);\n}", "des": "Domain service to allow accessing and setting PersistentPropertys of an entity."}
{"index": 9253, "repo": "spring-data-commons-3.1.2", "code": "public interface PersistentPropertyAccessorFactory {\n\t// Returns a PersistentPropertyAccessor for a given PersistentEntity and bean.\n\t<T> PersistentPropertyAccessor<T> getPropertyAccessor(PersistentEntity<?,?> entity, T bean);\n\t// Returns whether given PersistentEntity is supported by this PersistentPropertyAccessorFactory.\n\tboolean isSupported(PersistentEntity<?,?> entity);\n}", "des": "Factory to create PersistentPropertyAccessor for a given PersistentEntity and bean instance."}
{"index": 9254, "repo": "spring-data-commons-3.1.2", "code": "public class Point extends Object implements Serializable {\n\tboolean equals(Object obj);\n\t// Returns the x-coordinate of the Point.\n\tdouble getX();\n\t// Returns the y-coordinate of the Point.\n\tdouble getY();\n}", "des": "Represents a geospatial point value."}
{"index": 9255, "repo": "spring-data-commons-3.1.2", "code": "public enum PointFormatter extends Enum<PointFormatter> implements Converter<String,Point>, Formatter<Point> {\n\tPoint convert(String source);\n\tPoint parse(String text, Locale locale);\n\tString print(Point point, Locale locale);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PointFormatter valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PointFormatter[] values();\n}", "des": "Converter to parse two comma-separated doubles into a Point."}
{"index": 9256, "repo": "spring-data-commons-3.1.2", "code": "public interface Predicates {\n\t// Whether to not consider a Constructor.\n\tstatic boolean isExcluded(Constructor<?> candidate);\n\t// A Predicate that yields always false.\n\tstatic <T> Predicate<T> isFalse();\n\t// Whether to consider a Constructor.\n\tstatic boolean isIncluded(Constructor<?> candidate);\n\t// A Predicate that yields always true.\n\tstatic <T> Predicate<T> isTrue();\n\t// Returns a Predicate that represents the logical negation of predicate.\n\tstatic <T> Predicate<T> negate(Predicate<T> predicate);\n}", "des": "Utility methods to work with Predicates."}
{"index": 9257, "repo": "spring-data-commons-3.1.2", "code": "public interface PreferredConstructorDiscoverer {\n\t// Discovers the PreferredConstructor for the given type.\n\tstatic <T, P extends PersistentProperty<P>>PreferredConstructor<T,P> discover(Class<T> type);\n\t// Discovers the PreferredConstructorDiscoverer for the given PersistentEntity.\n\tstatic <T, P extends PersistentProperty<P>>PreferredConstructor<T,P> discover(PersistentEntity<T,P> entity);\n}", "des": "Helper class to find a PreferredConstructor."}
{"index": 9258, "repo": "spring-data-commons-3.1.2", "code": "public static enum PreferredConstructorDiscoverer.Discoverers extends Enum<PreferredConstructorDiscoverer.Discoverers> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PreferredConstructorDiscoverer.Discoverers valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PreferredConstructorDiscoverer.Discoverers[] values();\n}", "des": "Helper class to find a PreferredConstructor."}
{"index": 9259, "repo": "spring-data-commons-3.1.2", "code": "public interface ProjectionInformation {\n\t// Returns the properties that will be consumed by the projection type.\n\tList<PropertyDescriptor> getInputProperties();\n\t// Returns the projection type.\n\tClass<?> getType();\n\t// Returns whether supplying values for the properties returned via getInputProperties() is sufficient to create a working proxy instance.\n\tboolean isClosed();\n}", "des": "Information about a projection type."}
{"index": 9260, "repo": "spring-data-commons-3.1.2", "code": "public class PropertiesBasedNamedQueries extends Object implements NamedQueries {\n\t// Returns the named query with the given name.\n\tString getQuery(String queryName);\n\t// Returns whether the map contains a named query for the given name.\n\tboolean hasQuery(String queryName);\n}", "des": "NamedQueries implementation backed by a Properties instance."}
{"index": 9261, "repo": "spring-data-commons-3.1.2", "code": "public abstract class ProxyUtils extends Object {\n\t// Returns the user class for the given type.\n\tstatic Class<?> getUserClass(Class<?> type);\n\t// Returns the user class for the given source object.\n\tstatic Class<?> getUserClass(Object source);\n}", "des": "Proxy type detection utilities, extensible via ProxyUtils.ProxyDetector registered via Spring factories."}
{"index": 9262, "repo": "spring-data-commons-3.1.2", "code": "public class QuerydslPredicateBuilder extends Object {\n\t// Creates a Querydsl Predicate for the given values, QuerydslBindings on the given TypeInformation.\n\tcom.querydsl.core.types.Predicate getPredicate(TypeInformation<?> type, MultiValueMap<String,?> values, QuerydslBindings bindings);\n\t// Returns whether the given Predicate represents an empty predicate instance.\n\tstatic boolean isEmpty(com.querydsl.core.types.Predicate predicate);\n}", "des": "Builder assembling Predicate out of PropertyValues."}
{"index": 9263, "repo": "spring-data-commons-3.1.2", "code": "public interface QueryMethodEvaluationContextProvider {\n\t// Returns an EvaluationContext built using the given Parameters and parameter values.\n\t<T extends Parameters<?, ?>>EvaluationContext getEvaluationContext(T parameters, Object[] parameterValues);\n\t// Returns an EvaluationContext built using the given Parameters and parameter values.\n\t<T extends Parameters<?, ?>>EvaluationContext getEvaluationContext(T parameters, Object[] parameterValues, ExpressionDependencies dependencies);\n}", "des": "Provides a way to access a centrally defined potentially shared EvaluationContext."}
{"index": 9264, "repo": "spring-data-commons-3.1.2", "code": "public class QueryMethodParameterConversionException extends RuntimeException {\n\t// Returns the MethodParameter we tried to convert the source value for.\n\tMethodParameter getParameter();\n\t// Returns the source value that we failed converting.\n\tObject getSource();\n}", "des": "Exception to represent a failed attempt to convert a source value into a query method parameter."}
{"index": 9265, "repo": "spring-data-commons-3.1.2", "code": "public class ReactiveIsNewAwareAuditingHandler extends ReactiveAuditingHandler {\n\t// Factory method that creates a new ReactiveIsNewAwareAuditingHandler for the given MappingContext.\n\tstatic ReactiveIsNewAwareAuditingHandler from(MappingContext<?,?> mappingContext);\n\t// Marks the given object created or modified based on PersistentEntity.isNew(Object).\n\treactor.core.publisher.Mono<Object> markAudited(Object object);\n}", "des": "AuditingHandler extension that uses PersistentEntity.isNew(Object) to expose a generic ReactiveIsNewAwareAuditingHandler.markAudited(Object) method that will route calls to ReactiveAuditingHandler.markCreated(Object) or ReactiveAuditingHandler.markModified(Object) based on the IsNewStrategy determined from the factory."}
{"index": 9266, "repo": "spring-data-commons-3.1.2", "code": "public static enum ReactiveWrappers.ReactiveLibrary extends Enum<ReactiveWrappers.ReactiveLibrary> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ReactiveWrappers.ReactiveLibrary valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ReactiveWrappers.ReactiveLibrary[] values();\n}", "des": "Enumeration of supported reactive libraries."}
{"index": 9267, "repo": "spring-data-commons-3.1.2", "code": "public interface RepositoryInvocationInformation {\n\t// Returns whether the repository has a method to delete objects.\n\tboolean hasDeleteMethod();\n\t// Returns whether the repository has a method to find all objects.\n\tboolean hasFindAllMethod();\n\t// Returns whether the repository has a method to find a single object.\n\tboolean hasFindOneMethod();\n\t// Returns whether the repository has a method to save objects.\n\tboolean hasSaveMethod();\n}", "des": "Meta-information about the methods a repository exposes."}
{"index": 9268, "repo": "spring-data-commons-3.1.2", "code": "public interface RepositoryQuery {\n\t// Executes the RepositoryQuery with the given parameters.\n\tObject execute(Object[] parameters);\n\t// Returns the related QueryMethod.\n\tQueryMethod getQueryMethod();\n}", "des": "Interface for a query abstraction."}
{"index": 9269, "repo": "spring-data-commons-3.1.2", "code": "public static enum RevisionMetadata.RevisionType extends Enum<RevisionMetadata.RevisionType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RevisionMetadata.RevisionType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RevisionMetadata.RevisionType[] values();\n}", "des": "The type of a Revision."}
{"index": 9270, "repo": "spring-data-commons-3.1.2", "code": "public class RevisionSort extends Sort {\n\t// Creates a RevisionSort with ascending order for the revision number property, i.e. more recent revisions will come last.\n\tstatic RevisionSort asc();\n\t// Creates a RevisionSort with descending order for the revision number property, i.e. more recent revisions will come first.\n\tstatic RevisionSort desc();\n\t// Returns in which direction to sort revisions for the given Sort instance.\n\tstatic Sort.Direction getRevisionDirection(Sort sort);\n}", "des": "A dedicated Sort implementation that allows the definition of the ordering of revisions independently of the property name the revision number is held in."}
{"index": 9271, "repo": "spring-data-commons-3.1.2", "code": "public static enum ScrollPosition.Direction extends Enum<ScrollPosition.Direction> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ScrollPosition.Direction valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ScrollPosition.Direction[] values();\n}", "des": "Keyset scrolling direction."}
{"index": 9272, "repo": "spring-data-commons-3.1.2", "code": "public class SimpleTypeInformationMapper extends Object implements TypeInformationMapper, BeanClassLoaderAware {\n\t// Turn the given type information into the String representation that shall be stored.\n\tAlias createAliasFor(TypeInformation<?> type);\n\t// Returns the TypeInformation that shall be used when the given String value is found as type hint.\n\tTypeInformation<?> resolveTypeFrom(Alias alias);\n\tvoid setBeanClassLoader(ClassLoader classLoader);\n}", "des": "Basic TypeInformationMapper implementation that interprets the alias handles as fully qualified class name and tries to load a class with the given name to build TypeInformation."}
{"index": 9273, "repo": "spring-data-commons-3.1.2", "code": "public static enum Sort.NullHandling extends Enum<Sort.NullHandling> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Sort.NullHandling valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Sort.NullHandling[] values();\n}", "des": "Enumeration for null handling hints that can be used in Sort.Order expressions."}
{"index": 9274, "repo": "spring-data-commons-3.1.2", "code": "public class SpelEvaluator extends Object {\n\t// Evaluate all the SpEL expressions in SpelQueryContext.SpelExtractor based on values provided as an argument.\n\tMap<String,Object> evaluate(Object[] values);\n\t// Returns the query string produced by the intermediate SpEL expression collection step.\n\tString getQueryString();\n}", "des": "Evaluates SpEL expressions as extracted by the SpelQueryContext.SpelExtractor based on parameter information from a method and parameter values from a method call."}
{"index": 9275, "repo": "spring-data-commons-3.1.2", "code": "public class SpELExpressionParameterValueProvider<P extends PersistentProperty<P>> extends Object implements ParameterValueProvider<P> {\n\t// Returns the value to be used for the given Parameter (usually when entity instances are created).\n\t<T> T getParameterValue(Parameter<T,P> parameter);\n\t// Hook to allow to massage the value resulting from the Spel expression evaluation.\n\tprotected <T> T potentiallyConvertSpelValue(Object object, Parameter<T,P> parameter);\n}", "des": "ParameterValueProvider that can be used to front a ParameterValueProvider delegate to prefer a SpEL expression evaluation over directly resolving the parameter value with the delegate."}
{"index": 9276, "repo": "spring-data-commons-3.1.2", "code": "public abstract class SpringDataJaxb extends Object {\n\t// Marshals each of the elements of the given Iterable using the given XmlAdapter.\n\tstatic <T, S> List<S> marshal(Iterable<T> source, jakarta.xml.bind.annotation.adapters.XmlAdapter<S,T> adapter);\n\t// Unmarshals each element of the given Collection using the given XmlAdapter.\n\tstatic <T, S> List<T> unmarshal(Collection<S> source, jakarta.xml.bind.annotation.adapters.XmlAdapter<S,T> adapter);\n}", "des": "Helper class containing utility methods to implement JAXB XmlAdapters as well as the DTO types to be marshalled by JAXB."}
{"index": 9277, "repo": "spring-data-commons-3.1.2", "code": "public interface TargetAware extends TargetClassAware, RawTargetAccess {\n\t// Re-declaration of Spring Framework 4.3's DecoratingProxy.getDecoratedClass() so that we can exclude it from Jackson serialization.\n\tClass<?> getDecoratedClass();\n\t// Returns the proxy target.\n\tObject getTarget();\n\t// Returns the type of the proxy target.\n\tClass<?> getTargetClass();\n}", "des": "Extension of TargetClassAware to be able to ignore the getter on JSON rendering."}
{"index": 9278, "repo": "spring-data-commons-3.1.2", "code": "public interface TypeAliasAccessor<S> {\n\t// Reads the type alias to be used from the given source.\n\tAlias readAliasFrom(S source);\n\t// Writes the given type alias to the given sink.\n\tvoid writeTypeTo(S sink, Object alias);\n}", "des": "Interface to abstract implementations of how to access a type alias from a given source or sink."}
{"index": 9279, "repo": "spring-data-commons-3.1.2", "code": "public class TypeFilterParser extends Object {\n\t// Creates a TypeFilter instance from the given Element and ClassLoader.\n\tprotected TypeFilter createTypeFilter(Element element, ClassLoader classLoader);\n\t// Returns all TypeFilter declared in nested elements of the given Element.\n\tCollection<TypeFilter> parseTypeFilters(Element element, TypeFilterParser.Type type);\n}", "des": "Parser to populate the given ClassPathScanningCandidateComponentProvider with TypeFilters parsed from the given Element's children."}
{"index": 9280, "repo": "spring-data-commons-3.1.2", "code": "public interface TypeInformationMapper {\n\t// Returns the alias to be used for the given TypeInformation.\n\tAlias createAliasFor(TypeInformation<?> type);\n\t// Returns the actual TypeInformation to be used for the given alias.\n\tTypeInformation<?> resolveTypeFrom(Alias alias);\n}", "des": "Interface to abstract the mapping from a type alias to the actual type."}
{"index": 9281, "repo": "spring-security-acl-6.1.2", "code": "public abstract class AbstractPermission extends Object implements Permission {\n\tfinal boolean equals(Object obj);\n\t// Returns the bits that represents the permission.\n\tfinal int getMask();\n\t// Returns a 32-character long bit pattern String representing this permission.\n\tString getPattern();\n}", "des": "Provides an abstract superclass for Permission implementations."}
{"index": 9282, "repo": "spring-security-acl-6.1.2", "code": "public interface AccessControlEntry extends Serializable {\n\tAcl getAcl();\n\t// Obtains an identifier that represents this ACE.\n\tSerializable getId();\n\tPermission getPermission();\n\tSid getSid();\n\t// Indicates the permission is being granted to the relevant Sid.\n\tboolean isGranting();\n}", "des": "Represents an individual permission assignment within an Acl."}
{"index": 9283, "repo": "spring-security-acl-6.1.2", "code": "public class AccessControlEntryImpl extends Object implements AccessControlEntry, AuditableAccessControlEntry {\n\tboolean equals(Object arg0);\n\tAcl getAcl();\n\t// Obtains an identifier that represents this ACE.\n\tSerializable getId();\n\tPermission getPermission();\n\tSid getSid();\n\tboolean isAuditFailure();\n\tboolean isAuditSuccess();\n\t// Indicates the permission is being granted to the relevant Sid.\n\tboolean isGranting();\n}", "des": "An immutable default implementation of AccessControlEntry."}
{"index": 9284, "repo": "spring-security-acl-6.1.2", "code": "public interface MutableAclService extends AclService {\n\t// Creates an empty Acl object in the database.\n\tMutableAcl createAcl(ObjectIdentity objectIdentity);\n\t// Removes the specified entry from the database.\n\tvoid deleteAcl(ObjectIdentity objectIdentity, boolean deleteChildren);\n\t// Changes an existing Acl in the database.\n\tMutableAcl updateAcl(MutableAcl acl);\n}", "des": "Provides support for creating and storing Acl instances."}
{"index": 9285, "repo": "spring-security-acl-6.1.2", "code": "public interface ObjectIdentity extends Serializable {\n\tboolean equals(Object obj);\n\t// Obtains the actual identifier.\n\tSerializable getIdentifier();\n\t// Obtains the \"type\" metadata for the domain object.\n\tString getType();\n}", "des": "Represents the identity of an individual domain object instance."}
{"index": 9286, "repo": "spring-security-acl-6.1.2", "code": "public class ObjectIdentityImpl extends Object implements ObjectIdentity {\n\t// Important so caching operates properly.\n\tboolean equals(Object obj);\n\t// Obtains the actual identifier.\n\tSerializable getIdentifier();\n\t// Obtains the \"type\" metadata for the domain object.\n\tString getType();\n}", "des": "Simple implementation of ObjectIdentity."}
{"index": 9287, "repo": "spring-security-acl-6.1.2", "code": "public interface Permission extends Serializable {\n\t// Returns the bits that represents the permission.\n\tint getMask();\n\t// Returns a 32-character long bit pattern String representing this permission.\n\tString getPattern();\n}", "des": "Represents a permission granted to a Sid for a given domain object."}
{"index": 9288, "repo": "spring-data-keyvalue-3.1.2", "code": "public enum AnnotationBasedKeySpaceResolver extends Enum<AnnotationBasedKeySpaceResolver> implements KeySpaceResolver {\n\t// Determine the keySpace to use for a given type.\n\tString resolveKeySpace(Class<?> type);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AnnotationBasedKeySpaceResolver valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AnnotationBasedKeySpaceResolver[] values();\n}", "des": "AnnotationBasedKeySpaceResolver looks up Persistent and checks for presence of either meta or direct usage of KeySpace."}
{"index": 9289, "repo": "spring-data-keyvalue-3.1.2", "code": "public enum ClassNameKeySpaceResolver extends Enum<ClassNameKeySpaceResolver> implements KeySpaceResolver {\n\t// Determine the keySpace to use for a given type.\n\tString resolveKeySpace(Class<?> type);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ClassNameKeySpaceResolver valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ClassNameKeySpaceResolver[] values();\n}", "des": "Most trivial implementation of KeySpaceResolver returning the Class.getName()."}
{"index": 9290, "repo": "spring-data-keyvalue-3.1.2", "code": "public static class KeyValueEvent.AfterDeleteEvent<T> extends KeyValueEvent<T> {\n\tObject getKey();\n\t// Get the value of the element the KeyValueEvent refers to.\n\tT getPayload();\n\tObject getSource();\n\t// Get the type of the element the KeyValueEvent refers to.\n\tClass<? extends T> getType();\n}", "des": "KeyValueEvent after removing an object by with a given key."}
{"index": 9291, "repo": "spring-data-keyvalue-3.1.2", "code": "public static class KeyValueEvent.AfterGetEvent<T> extends KeyValueEvent<T> {\n\tObject getKey();\n\t// Get the value of the element the KeyValueEvent refers to.\n\tT getPayload();\n\tObject getSource();\n\t// Get the type of the element the KeyValueEvent refers to.\n\tClass<? extends T> getType();\n}", "des": "KeyValueEvent after loading an object by its key."}
{"index": 9292, "repo": "spring-data-keyvalue-3.1.2", "code": "public static class KeyValueEvent.AfterInsertEvent<T> extends KeyValueEvent<T> {\n\tObject getKey();\n\t// Get the value of the element the KeyValueEvent refers to.\n\tT getPayload();\n\tObject getSource();\n\t// Get the type of the element the KeyValueEvent refers to.\n\tClass<? extends T> getType();\n}", "des": "KeyValueEvent after inserting an object by with a given key."}
{"index": 9293, "repo": "spring-data-keyvalue-3.1.2", "code": "public static class KeyValueEvent.AfterUpdateEvent<T> extends KeyValueEvent<T> {\n\t// Get the current value.\n\tT after();\n\t// Get the value before update.\n\tObject before();\n\tObject getKey();\n\t// Get the value of the element the KeyValueEvent refers to.\n\tT getPayload();\n\tObject getSource();\n\t// Get the type of the element the KeyValueEvent refers to.\n\tClass<? extends T> getType();\n}", "des": "KeyValueEvent after updating an object by with a given key."}
{"index": 9294, "repo": "spring-data-keyvalue-3.1.2", "code": "public static class KeyValueEvent.BeforeInsertEvent<T> extends KeyValueEvent<T> {\n\tObject getKey();\n\t// Get the value of the element the KeyValueEvent refers to.\n\tT getPayload();\n\tObject getSource();\n\t// Get the type of the element the KeyValueEvent refers to.\n\tClass<? extends T> getType();\n}", "des": "KeyValueEvent before inserting an object by with a given key."}
{"index": 9295, "repo": "spring-data-keyvalue-3.1.2", "code": "public static class KeyValueEvent.BeforeUpdateEvent<T> extends KeyValueEvent<T> {\n\tObject getKey();\n\t// Get the value of the element the KeyValueEvent refers to.\n\tT getPayload();\n\tObject getSource();\n\t// Get the type of the element the KeyValueEvent refers to.\n\tClass<? extends T> getType();\n}", "des": "KeyValueEvent before updating an object by with a given key."}
{"index": 9296, "repo": "spring-security-test-6.1.2", "code": "public final class SecurityMockMvcConfigurers extends Object {\n\t// Configures the MockMvcBuilder for use with Spring Security.\n\tstatic org.springframework.test.web.servlet.setup.MockMvcConfigurer springSecurity();\n\t// Configures the MockMvcBuilder for use with Spring Security.\n\tstatic org.springframework.test.web.servlet.setup.MockMvcConfigurer springSecurity(jakarta.servlet.Filter springSecurityFilterChain);\n}", "des": "Provides Security related MockMvcConfigurer implementations."}
{"index": 9297, "repo": "spring-security-test-6.1.2", "code": "public final class SecurityMockMvcResultMatchers extends Object {\n\t// ResultMatcher that verifies that a specified user is authenticated.\n\tstatic SecurityMockMvcResultMatchers.AuthenticatedMatcher authenticated();\n\t// ResultMatcher that verifies that no user is authenticated.\n\tstatic org.springframework.test.web.servlet.ResultMatcher unauthenticated();\n}", "des": "Security related MockMvc ResultMatchers."}
{"index": 9298, "repo": "spring-security-test-6.1.2", "code": "public enum TestExecutionEvent extends Enum<TestExecutionEvent> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TestExecutionEvent valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TestExecutionEvent[] values();\n}", "des": "Represents the events on the methods of TestExecutionListener"}
{"index": 9299, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public abstract class AbstractSettings extends Object implements Serializable {\n\tboolean equals(Object obj);\n\t// Returns a configuration setting.\n\t<T> T getSetting(String name);\n\t// Returns a Map of the configuration settings.\n\tMap<String,Object> getSettings();\n}", "des": "Base implementation for configuration settings."}
{"index": 9300, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "protected abstract static class AbstractSettings.AbstractBuilder<T extends AbstractSettings,B extends AbstractSettings.AbstractBuilder<T,B>> extends Object {\n\tabstract T build();\n\tprotected final Map<String,Object> getSettings();\n\tprotected final B getThis();\n\t// Sets a configuration setting.\n\tB setting(String name, Object value);\n\t// A Consumer of the configuration settings Map allowing the ability to add, replace, or remove.\n\tB settings(Consumer<Map<String,Object>> settingsConsumer);\n}", "des": "A builder for subclasses of AbstractSettings."}
{"index": 9301, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public interface AuthorizationServerContext {\n\t// Returns the AuthorizationServerSettings.\n\tAuthorizationServerSettings getAuthorizationServerSettings();\n\t// Returns the URL of the Authorization Server's issuer identifier.\n\tString getIssuer();\n}", "des": "A context that holds information of the Authorization Server runtime environment."}
{"index": 9302, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public final class AuthorizationServerContextHolder extends Object {\n\t// Returns the AuthorizationServerContext bound to the current thread.\n\tstatic AuthorizationServerContext getContext();\n\t// Reset the AuthorizationServerContext bound to the current thread.\n\tstatic void resetContext();\n\t// Bind the given AuthorizationServerContext to the current thread.\n\tstatic void setContext(AuthorizationServerContext authorizationServerContext);\n}", "des": "A holder of the AuthorizationServerContext that associates it with the current thread using a ThreadLocal."}
{"index": 9303, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public interface Context {\n\t// Returns the value of the attribute associated to the key.\n\tdefault <V> V get(Class<V> key);\n\t// Returns the value of the attribute associated to the key.\n\t<V> V get(Object key);\n\t// Returns true if an attribute associated to the key exists, false otherwise.\n\tboolean hasKey(Object key);\n}", "des": "A facility for holding information associated to a specific context."}
{"index": 9304, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public final class DefaultOAuth2TokenContext extends Object implements OAuth2TokenContext {\n\t// Returns a new DefaultOAuth2TokenContext.Builder.\n\tstatic DefaultOAuth2TokenContext.Builder builder();\n\t// Returns the value of the attribute associated to the key.\n\t<V> V get(Object key);\n\t// Returns true if an attribute associated to the key exists, false otherwise.\n\tboolean hasKey(Object key);\n}", "des": "Default implementation of OAuth2TokenContext."}
{"index": 9305, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public final class InMemoryRegisteredClientRepository extends Object implements RegisteredClientRepository {\n\t// Returns the registered client identified by the provided clientId, or null if not found.\n\tRegisteredClient findByClientId(String clientId);\n\t// Returns the registered client identified by the provided id, or null if not found.\n\tRegisteredClient findById(String id);\n\t// Saves the registered client.\n\tvoid save(RegisteredClient registeredClient);\n}", "des": "A RegisteredClientRepository that stores RegisteredClient(s) in-memory."}
{"index": 9306, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public class OAuth2AuthorizationCodeAuthenticationToken extends OAuth2AuthorizationGrantAuthenticationToken {\n\t// Returns the authorization code.\n\tString getCode();\n\t// Returns the redirect uri.\n\tString getRedirectUri();\n}", "des": "An Authentication implementation used for the OAuth 2.0 Authorization Code Grant."}
{"index": 9307, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public interface OAuth2AuthorizationConsentService {\n\t// Returns the OAuth2AuthorizationConsent identified by the provided registeredClientId and principalName, or null if not found.\n\tOAuth2AuthorizationConsent findById(String registeredClientId, String principalName);\n\t// Removes the OAuth2AuthorizationConsent.\n\tvoid remove(OAuth2AuthorizationConsent authorizationConsent);\n\t// Saves the OAuth2AuthorizationConsent.\n\tvoid save(OAuth2AuthorizationConsent authorizationConsent);\n}", "des": "Implementations of this interface are responsible for the management of OAuth 2.0 Authorization Consent(s)."}
{"index": 9308, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public class OAuth2AuthorizationGrantAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken {\n\t// Returns the additional parameters.\n\tMap<String,Object> getAdditionalParameters();\n\tObject getCredentials();\n\t// Returns the authorization grant type.\n\torg.springframework.security.oauth2.core.AuthorizationGrantType getGrantType();\n\tObject getPrincipal();\n}", "des": "Base implementation of an Authentication representing an OAuth 2.0 Authorization Grant."}
{"index": 9309, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public final class OAuth2AuthorizationServerMetadata extends AbstractOAuth2AuthorizationServerMetadata {\n\t// Constructs a new OAuth2AuthorizationServerMetadata.Builder with empty claims.\n\tstatic OAuth2AuthorizationServerMetadata.Builder builder();\n\t// Constructs a new OAuth2AuthorizationServerMetadata.Builder with the provided claims.\n\tstatic OAuth2AuthorizationServerMetadata.Builder withClaims(Map<String,Object> claims);\n}", "des": "A representation of an OAuth 2.0 Authorization Server Metadata response, which is returned from an OAuth 2.0 Authorization Server's Metadata Endpoint, and contains a set of claims about the Authorization Server's configuration."}
{"index": 9310, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public interface OAuth2AuthorizationService {\n\t// Returns the OAuth2Authorization identified by the provided id, or null if not found.\n\tOAuth2Authorization findById(String id);\n\t// Returns the OAuth2Authorization containing the provided token, or null if not found.\n\tOAuth2Authorization findByToken(String token, OAuth2TokenType tokenType);\n\t// Removes the OAuth2Authorization.\n\tvoid remove(OAuth2Authorization authorization);\n\t// Saves the OAuth2Authorization.\n\tvoid save(OAuth2Authorization authorization);\n}", "des": "Implementations of this interface are responsible for the management of OAuth 2.0 Authorization(s)."}
{"index": 9311, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public class OAuth2DeviceAuthorizationConsentAuthenticationToken extends OAuth2AuthorizationConsentAuthenticationToken {\n\t// Returns the requested scopes.\n\tSet<String> getRequestedScopes();\n\t// Returns the user code.\n\tString getUserCode();\n}", "des": "An Authentication implementation for the Device Authorization Consent used in the OAuth 2.0 Device Authorization Grant."}
{"index": 9312, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public class OAuth2DeviceVerificationAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken {\n\t// Returns the additional parameters.\n\tMap<String,Object> getAdditionalParameters();\n\t// Returns the client identifier.\n\tString getClientId();\n\tObject getCredentials();\n\tObject getPrincipal();\n\t// Returns the user code.\n\tString getUserCode();\n}", "des": "An Authentication implementation for the Device Verification Request (submission of the user code) used in the OAuth 2.0 Device Authorization Grant."}
{"index": 9313, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public class OAuth2RefreshTokenAuthenticationToken extends OAuth2AuthorizationGrantAuthenticationToken {\n\t// Returns the refresh token.\n\tString getRefreshToken();\n\t// Returns the requested scope(s).\n\tSet<String> getScopes();\n}", "des": "An Authentication implementation used for the OAuth 2.0 Refresh Token Grant."}
{"index": 9314, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public class OAuth2TokenIntrospectionAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken {\n\t// Returns the additional parameters.\n\tMap<String,Object> getAdditionalParameters();\n\tObject getCredentials();\n\tObject getPrincipal();\n\t// Returns the token.\n\tString getToken();\n\t// Returns the token claims.\n\tOAuth2TokenIntrospection getTokenClaims();\n\t// Returns the token type hint.\n\tString getTokenTypeHint();\n}", "des": "An Authentication implementation used for OAuth 2.0 Token Introspection."}
{"index": 9315, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public class OAuth2TokenRevocationAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken {\n\tObject getCredentials();\n\tObject getPrincipal();\n\t// Returns the token.\n\tString getToken();\n\t// Returns the token type hint.\n\tString getTokenTypeHint();\n}", "des": "An Authentication implementation used for OAuth 2.0 Token Revocation."}
{"index": 9316, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public final class OidcClientRegistration extends Object implements OidcClientMetadataClaimAccessor, Serializable {\n\t// Constructs a new OidcClientRegistration.Builder with empty claims.\n\tstatic OidcClientRegistration.Builder builder();\n\t// Returns the metadata as claims.\n\tMap<String,Object> getClaims();\n\t// Constructs a new OidcClientRegistration.Builder with the provided claims.\n\tstatic OidcClientRegistration.Builder withClaims(Map<String,Object> claims);\n}", "des": "A representation of an OpenID Client Registration Request and Response, which is sent to and returned from the Client Registration Endpoint, and contains a set of claims about the Client's Registration information."}
{"index": 9317, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public class OidcClientRegistrationAuthenticationToken extends org.springframework.security.authentication.AbstractAuthenticationToken {\n\t// Returns the client identifier.\n\tString getClientId();\n\t// Returns the client registration.\n\tOidcClientRegistration getClientRegistration();\n\tObject getCredentials();\n\tObject getPrincipal();\n}", "des": "An Authentication implementation used for OpenID Connect 1.0 Dynamic Client Registration (and Configuration) Endpoint."}
{"index": 9318, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public final class OidcProviderConfiguration extends AbstractOAuth2AuthorizationServerMetadata implements OidcProviderMetadataClaimAccessor {\n\t// Constructs a new OidcProviderConfiguration.Builder with empty claims.\n\tstatic OidcProviderConfiguration.Builder builder();\n\t// Constructs a new OidcProviderConfiguration.Builder with the provided claims.\n\tstatic OidcProviderConfiguration.Builder withClaims(Map<String,Object> claims);\n}", "des": "A representation of an OpenID Provider Configuration Response, which is returned from an Issuer's Discovery Endpoint, and contains a set of claims about the OpenID Provider's configuration."}
{"index": 9319, "repo": "spring-security-oauth2-authorization-server-1.1.1", "code": "public interface RegisteredClientRepository {\n\t// Returns the registered client identified by the provided clientId, or null if not found.\n\tRegisteredClient findByClientId(String clientId);\n\t// Returns the registered client identified by the provided id, or null if not found.\n\tRegisteredClient findById(String id);\n\t// Saves the registered client.\n\tvoid save(RegisteredClient registeredClient);\n}", "des": "A repository for OAuth 2.0 RegisteredClient(s)."}
{"index": 9320, "repo": "spring-vault-core-3.0.4", "code": "public abstract class AbstractResult<V> extends Object {\n\t// Return the result or throw a VaultException if the operation completed with an error.\n\tV get();\n\tprotected abstract V get0();\n\t// Returns the cause of the failed operation if the operation completed with an error.\n\tException getCause();\n\t// Returns true if and only if the batch operation was completed successfully.\n\tboolean isSuccessful();\n}", "des": "Supporting class for computation results allowing introspection of the result value."}
{"index": 9321, "repo": "spring-vault-core-3.0.4", "code": "public abstract class AbstractVaultConverter extends Object implements VaultConverter, InitializingBean {\n\tvoid afterPropertiesSet();\n\tConversionService getConversionService();\n\t// Registers the given custom conversions with the converter.\n\tvoid setCustomConversions(CustomConversions conversions);\n\t// Registers EntityInstantiators to customize entity instantiation.\n\tvoid setInstantiators(EntityInstantiators instantiators);\n}", "des": "Base class for VaultConverter implementations."}
{"index": 9322, "repo": "spring-vault-core-3.0.4", "code": "public class AppRoleAuthentication extends Object implements ClientAuthentication, AuthenticationStepsFactory {\n\t// Creates a AuthenticationSteps for AppRole authentication given AppRoleAuthenticationOptions.\n\tstatic AuthenticationSteps createAuthenticationSteps(AppRoleAuthenticationOptions options);\n\t// Get the AuthenticationSteps describing an authentication flow.\n\tAuthenticationSteps getAuthenticationSteps();\n\t// Return a VaultToken.\n\tVaultToken login();\n}", "des": "AppRole implementation of ClientAuthentication."}
{"index": 9323, "repo": "spring-vault-core-3.0.4", "code": "public abstract class AuthenticationEventPublisher extends Object {\n\t// Add a AuthenticationListener.\n\tvoid addAuthenticationListener(AuthenticationListener listener);\n\t// Add a AuthenticationErrorListener.\n\tvoid addErrorListener(AuthenticationErrorListener listener);\n\t// Remove a AuthenticationListener.\n\tvoid removeAuthenticationListener(AuthenticationListener listener);\n\t// Remove a AuthenticationErrorListener.\n\tvoid removeErrorListener(AuthenticationErrorListener listener);\n}", "des": "Publisher for AuthenticationEvents."}
{"index": 9324, "repo": "spring-vault-core-3.0.4", "code": "public static class AuthenticationSteps.Pair<L,R> extends Object {\n\tboolean equals(Object o);\n\t// Type-safe way to get the fist object of this AuthenticationSteps.Pair.\n\tL getLeft();\n\t// Type-safe way to get the second object of this AuthenticationSteps.Pair.\n\tR getRight();\n\t// Create a new AuthenticationSteps.Pair given left and right values.\n\tstatic <L, R> AuthenticationSteps.Pair<L,R> of(L left, R right);\n}", "des": "A tuple of two things."}
{"index": 9325, "repo": "spring-vault-core-3.0.4", "code": "public static class AwsEc2AuthenticationOptions.Nonce extends Object {\n\t// Create a new generated AwsEc2AuthenticationOptions.Nonce using UUID.\n\tstatic AwsEc2AuthenticationOptions.Nonce generated();\n\tchar[] getValue();\n\t// Create a wrapped AwsEc2AuthenticationOptions.Nonce given a nonce value.\n\tstatic AwsEc2AuthenticationOptions.Nonce provided(char[] nonce);\n}", "des": "Value object for an authentication nonce."}
{"index": 9326, "repo": "spring-vault-core-3.0.4", "code": "public class CachingVaultTokenSupplier extends Object implements VaultTokenSupplier, ReactiveSessionManager {\n\t// Return a VaultToken.\n\tMono<VaultToken> getVaultToken();\n\t// Creates a new CachingVaultTokenSupplier given a delegate supplier.\n\tstatic CachingVaultTokenSupplier of(VaultTokenSupplier delegate);\n}", "des": "Default implementation of VaultTokenSupplier caching the VaultToken from a delegate VaultTokenSupplier."}
{"index": 9327, "repo": "spring-vault-core-3.0.4", "code": "public class Ciphertext extends Object {\n\tboolean equals(Object o);\n\tString getCiphertext();\n\tVaultTransitContext getContext();\n\t// Factory method to create Ciphertext from the given ciphertext.\n\tstatic Ciphertext of(String ciphertext);\n\t// Create a new Ciphertext object from this ciphertext associated with the given VaultTransitContext.\n\tCiphertext with(VaultTransitContext context);\n}", "des": "Value object representing cipher text with an optional VaultTransitContext."}
{"index": 9328, "repo": "spring-vault-core-3.0.4", "code": "@FunctionalInterface public interface CredentialSupplier extends Supplier<String> {\n\t// Retrieve a cached CredentialSupplier that obtains the credential early and reuses the token for each get() call.\n\tdefault CredentialSupplier cached();\n\t// Get a credential to be used with an authentication mechanism.\n\tString get();\n}", "des": "Interface to obtain an arbitrary credential that is uses in ClientAuthentication or AuthenticationSteps methods."}
{"index": 9329, "repo": "spring-vault-core-3.0.4", "code": "public class CubbyholeAuthentication extends Object implements ClientAuthentication, AuthenticationStepsFactory {\n\t// Creates a AuthenticationSteps for cubbyhole authentication given CubbyholeAuthenticationOptions.\n\tstatic AuthenticationSteps createAuthenticationSteps(CubbyholeAuthenticationOptions options);\n\t// Get the AuthenticationSteps describing an authentication flow.\n\tAuthenticationSteps getAuthenticationSteps();\n\t// Return a VaultToken.\n\tVaultToken login();\n}", "des": "Cubbyhole ClientAuthentication implementation."}
{"index": 9330, "repo": "spring-vault-core-3.0.4", "code": "public class DurationParser extends Object {\n\t// Format a Duration into the Go format representation.\n\tstatic String formatDuration(Duration duration);\n\t// Parse a Go format duration into a Duration object.\n\tstatic Duration parseDuration(String duration);\n}", "des": "Utility to parse a Go format duration into Duration."}
{"index": 9331, "repo": "spring-vault-core-3.0.4", "code": "@FunctionalInterface public interface GcpCredentialSupplier extends Supplier<com.google.api.client.googleapis.auth.oauth2.GoogleCredential> {\n\t// Exception-safe helper to get GoogleCredential from getCredential().\n\tdefault com.google.api.client.googleapis.auth.oauth2.GoogleCredential get();\n\t// Get a GoogleCredential for GCP IAM authentication via JWT signing.\n\tcom.google.api.client.googleapis.auth.oauth2.GoogleCredential getCredential();\n}", "des": "Interface to obtain a GoogleCredential for GCP IAM authentication."}
{"index": 9332, "repo": "spring-vault-core-3.0.4", "code": "@FunctionalInterface public interface GoogleCredentialsSupplier extends Supplier<com.google.auth.oauth2.GoogleCredentials> {\n\t// Exception-safe helper to get ServiceAccountCredentials from getCredentials().\n\tdefault com.google.auth.oauth2.GoogleCredentials get();\n\t// Get a GoogleCredentials for GCP IAM credentials authentication via JWT signing.\n\tcom.google.auth.oauth2.GoogleCredentials getCredentials();\n}", "des": "Interface to obtain a ServiceAccountCredentials for GCP IAM credentials authentication."}
{"index": 9333, "repo": "spring-vault-core-3.0.4", "code": "public abstract class JsonMapFlattener extends Object {\n\t// Flatten a hierarchical Map into a flat Map with key names using property dot notation.\n\tstatic Map<String,Object> flatten(Map<String,? extends Object> inputMap);\n\t// Flatten a hierarchical Map into a flat Map with key names using property dot notation.\n\tstatic Map<String,String> flattenToStringMap(Map<String,? extends Object> inputMap);\n}", "des": "Flattens a hierarchical Map of objects into a property Map."}
{"index": 9334, "repo": "spring-vault-core-3.0.4", "code": "public class KeyValueDelegate extends Object {\n\tKeyValueDelegate.MountInfo getMountInfo(String path);\n\t// Read a secret from a key-value backend.\n\tVaultResponse getSecret(String path);\n\t// Determine whether the path belongs to a versioned Key-Value mount.\n\tboolean isVersioned(String path);\n}", "des": "Key-Value utility to retrieve secrets from a versioned key-value backend."}
{"index": 9335, "repo": "spring-vault-core-3.0.4", "code": "public class KubernetesAuthentication extends Object implements ClientAuthentication, AuthenticationStepsFactory {\n\t// Creates a AuthenticationSteps for kubernetes authentication given KubernetesAuthenticationOptions.\n\tstatic AuthenticationSteps createAuthenticationSteps(KubernetesAuthenticationOptions options);\n\t// Get the AuthenticationSteps describing an authentication flow.\n\tAuthenticationSteps getAuthenticationSteps();\n\t// Return a VaultToken.\n\tVaultToken login();\n}", "des": "Kubernetes implementation of ClientAuthentication."}
{"index": 9336, "repo": "spring-vault-core-3.0.4", "code": "public class Lease extends Object {\n\tboolean equals(Object o);\n\t// Create a new non-renewable Lease, without a leaseId and specified duration.\n\tstatic Lease fromTimeToLive(Duration leaseDuration);\n\tDuration getLeaseDuration();\n\tString getLeaseId();\n\tboolean hasLeaseId();\n\tboolean isRenewable();\n\t// Factory method to return a non-renewable, zero-duration Lease.\n\tstatic Lease none();\n\t// Create a new Lease.\n\tstatic Lease of(String leaseId, Duration leaseDuration, boolean renewable);\n}", "des": "A lease abstracting the lease Id, duration and its renewability."}
{"index": 9337, "repo": "spring-vault-core-3.0.4", "code": "public enum LeaseEndpoints extends Enum<LeaseEndpoints> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic LeaseEndpoints valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic LeaseEndpoints[] values();\n}", "des": "Version-specific endpoint implementations that use either legacy or sys/leases endpoints."}
{"index": 9338, "repo": "spring-vault-core-3.0.4", "code": "public abstract class LeaseListenerAdapter extends Object implements LeaseListener, LeaseErrorListener {\n\t// Callback for a SecretLeaseEvent.\n\tvoid onLeaseError(SecretLeaseEvent leaseEvent, Exception exception);\n\t// Callback for a SecretLeaseEvent\n\tvoid onLeaseEvent(SecretLeaseEvent leaseEvent);\n}", "des": "Empty listener adapter implementing LeaseListener and LeaseErrorListener."}
{"index": 9339, "repo": "spring-vault-core-3.0.4", "code": "@FunctionalInterface public interface LeaseStrategy {\n\t// Predefined strategy to drop leases on error.\n\tstatic LeaseStrategy dropOnError();\n\t// Predefined strategy to retain leases on error.\n\tstatic LeaseStrategy retainOnError();\n\t// Predefined strategy to retain leases on I/O errors.\n\tstatic LeaseStrategy retainOnIoError();\n\t// Return true to drop the lease after error happened.\n\tboolean shouldDrop(Throwable error);\n}", "des": "Strategy interface to control whether to retain or drop a Lease after a failure."}
{"index": 9340, "repo": "spring-vault-core-3.0.4", "code": "public static class LifecycleAwareSessionManagerSupport.FixedTimeoutRefreshTrigger extends Object implements LifecycleAwareSessionManagerSupport.RefreshTrigger {\n\t// Returns the minimum TTL duration to consider a token valid after renewal.\n\tDuration getValidTtlThreshold(LoginToken loginToken);\n\t// Determine the next execution time according to the given trigger context.\n\tDate nextExecutionTime(LoginToken loginToken);\n}", "des": "LifecycleAwareSessionManagerSupport.RefreshTrigger implementation using a fixed timeout to schedule renewal before a LoginToken expires."}
{"index": 9341, "repo": "spring-vault-core-3.0.4", "code": "public static interface LifecycleAwareSessionManagerSupport.RefreshTrigger {\n\t// Returns the minimum TTL duration to consider a token valid after renewal.\n\tDuration getValidTtlThreshold(LoginToken loginToken);\n\t// Determine the next execution time according to the given trigger context.\n\tDate nextExecutionTime(LoginToken loginToken);\n}", "des": "Common interface for trigger objects that determine the next execution time of a refresh task."}
{"index": 9342, "repo": "spring-vault-core-3.0.4", "code": "public class PcfAuthentication extends Object implements ClientAuthentication, AuthenticationStepsFactory {\n\t// Creates a AuthenticationSteps for pcf authentication given PcfAuthenticationOptions.\n\tstatic AuthenticationSteps createAuthenticationSteps(PcfAuthenticationOptions options);\n\t// Get the AuthenticationSteps describing an authentication flow.\n\tAuthenticationSteps getAuthenticationSteps();\n\t// Return a VaultToken.\n\tVaultToken login();\n}", "des": "PCF implementation of ClientAuthentication."}
{"index": 9343, "repo": "spring-vault-core-3.0.4", "code": "@FunctionalInterface public interface PropertyTransformer {\n\t// Return a composed transformer function that first applies this filter, and then applies the after transformer.\n\tdefault PropertyTransformer andThen(PropertyTransformer after);\n\t// Transform properties by creating a new map using the transformed property set.\n\tMap<String,Object> transformProperties(Map<String,? extends Object> input);\n}", "des": "Strategy interface to transform properties to a new key-value Map in a functional style."}
{"index": 9344, "repo": "spring-vault-core-3.0.4", "code": "public static class PropertyTransformers.KeyPrefixPropertyTransformer extends Object implements PropertyTransformer {\n\t// Create a new PropertyTransformers.KeyPrefixPropertyTransformer that adds a prefix to each key name.\n\tstatic PropertyTransformer forPrefix(String propertyNamePrefix);\n\tString getPropertyNamePrefix();\n\t// Transform properties by creating a new map using the transformed property set.\n\tMap<String,Object> transformProperties(Map<String,? extends Object> input);\n}", "des": "PropertyTransformer that adds a prefix to each key name."}
{"index": 9345, "repo": "spring-vault-core-3.0.4", "code": "public class RequestedSecret extends Object {\n\tboolean equals(Object o);\n\t// Create a RequestedSecret given RequestedSecret.Mode at path.\n\tstatic RequestedSecret from(RequestedSecret.Mode mode, String path);\n\tRequestedSecret.Mode getMode();\n\tString getPath();\n\t// Create a renewable RequestedSecret at path.\n\tstatic RequestedSecret renewable(String path);\n\t// Create a rotating RequestedSecret at path.\n\tstatic RequestedSecret rotating(String path);\n}", "des": "Represents a requested secret from a specific Vault path associated with a lease RequestedSecret.Mode."}
{"index": 9346, "repo": "spring-vault-core-3.0.4", "code": "@FunctionalInterface public interface RestTemplateFactory {\n\t// Create a RestTemplate instance.\n\tdefault RestTemplate create();\n\t// Create a RestTemplate instance by applying customizer to the underlying RestTemplateBuilder.\n\tRestTemplate create(Consumer<RestTemplateBuilder> customizer);\n}", "des": "Factory interface that produces a RestTemplate object."}
{"index": 9347, "repo": "spring-vault-core-3.0.4", "code": "public class SignatureValidation extends Object {\n\tboolean equals(Object o);\n\t// Factory method to create a SignatureValidation object representing a failed signature validation.\n\tstatic SignatureValidation invalid();\n\tboolean isValid();\n\t// Factory method to create a SignatureValidation object representing a successfully validated signature.\n\tstatic SignatureValidation valid();\n}", "des": "Value object representing the result of a Signature validation."}
{"index": 9348, "repo": "spring-vault-core-3.0.4", "code": "public class SimpleVaultEndpointProvider extends Object implements VaultEndpointProvider {\n\t// Provides access to VaultEndpoint.\n\tVaultEndpoint getVaultEndpoint();\n\t// Creates a new VaultEndpointProvider given VaultEndpoint.\n\tstatic VaultEndpointProvider of(VaultEndpoint endpoint);\n}", "des": "VaultEndpointProvider returning a static VaultEndpoint."}
{"index": 9349, "repo": "spring-vault-core-3.0.4", "code": "public static class SslConfiguration.KeyConfiguration extends Object {\n\tString getKeyAlias();\n\tchar[] getKeyPassword();\n\t// Create a SslConfiguration.KeyConfiguration to configure a specific key within a KeyStore.\n\tstatic SslConfiguration.KeyConfiguration of(char[] keyPassword, String keyAlias);\n\t// Create an unconfigured, empty SslConfiguration.KeyConfiguration.\n\tstatic SslConfiguration.KeyConfiguration unconfigured();\n}", "des": "Configuration for a key in a keystore."}
{"index": 9350, "repo": "spring-vault-core-3.0.4", "code": "public class TokenAuthentication extends Object implements ClientAuthentication, AuthenticationStepsFactory {\n\t// Creates a AuthenticationSteps for token authentication given VaultToken.\n\tstatic AuthenticationSteps createAuthenticationSteps(VaultToken token, boolean selfLookup);\n\t// Get the AuthenticationSteps describing an authentication flow.\n\tAuthenticationSteps getAuthenticationSteps();\n\t// Return a VaultToken.\n\tVaultToken login();\n}", "des": "Static Token-based ClientAuthentication method."}
{"index": 9351, "repo": "spring-vault-core-3.0.4", "code": "public class TransformCiphertext extends Object {\n\tboolean equals(Object o);\n\tString getCiphertext();\n\tVaultTransformContext getContext();\n\t// Factory method to create TransformCiphertext from the given ciphertext.\n\tstatic TransformCiphertext of(String ciphertext);\n\t// Create a new TransformCiphertext object from this ciphertext associated with the given VaultTransformContext.\n\tTransformCiphertext with(VaultTransformContext context);\n}", "des": "Value object representing cipher text with an optional VaultTransformContext."}
{"index": 9352, "repo": "spring-vault-core-3.0.4", "code": "public enum TransitKeyType extends Enum<TransitKeyType> {\n\tString getValue();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TransitKeyType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TransitKeyType[] values();\n}", "des": "Enumeration to specify the type of the transit key."}
{"index": 9353, "repo": "spring-vault-core-3.0.4", "code": "public enum UnwrappingEndpoints extends Enum<UnwrappingEndpoints> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic UnwrappingEndpoints valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic UnwrappingEndpoints[] values();\n}", "des": "Version-specific endpoint implementations for response unwrapping."}
{"index": 9354, "repo": "spring-vault-core-3.0.4", "code": "public class UsernamePasswordAuthentication extends Object implements ClientAuthentication, AuthenticationStepsFactory {\n\t// Creates a AuthenticationSteps for username/password authentication given UsernamePasswordAuthenticationOptions.\n\tstatic AuthenticationSteps createAuthenticationSteps(UsernamePasswordAuthenticationOptions options);\n\t// Get the AuthenticationSteps describing an authentication flow.\n\tAuthenticationSteps getAuthenticationSteps();\n\t// Return a VaultToken.\n\tVaultToken login();\n}", "des": "Username and password implementation of ClientAuthentication."}
{"index": 9355, "repo": "spring-vault-core-3.0.4", "code": "public interface VaultKeyValueMetadataOperations {\n\t// Permanently delete the key metadata and all version data for the specified key.\n\tvoid delete(String path);\n\t// Retrieve the metadata and versions for the secret at the specified path.\n\tVaultMetadataResponse get(String path);\n\t// Update the secret metadata, or creates new metadata if not present.\n\tvoid put(String path, VaultMetadataRequest body);\n}", "des": "Interface that specifies kv metadata related operations."}
{"index": 9356, "repo": "spring-vault-core-3.0.4", "code": "public interface VaultKeyValueOperations extends VaultKeyValueOperationsSupport {\n\t// Read the secret at path.\n\tVaultResponse get(String path);\n\t// Read the secret at path.\n\t<T> VaultResponseSupport<T> get(String path, Class<T> responseType);\n\t// Update the secret at path without removing the existing secrets.\n\tboolean patch(String path, Map<String,?> patch);\n\t// Write the secret at path.\n\tvoid put(String path, Object body);\n}", "des": "Interface that specifies a basic set of Vault operations using Vault's Key/Value secret backend."}
{"index": 9357, "repo": "spring-vault-core-3.0.4", "code": "public interface VaultKeyValueOperationsSupport {\n\t// Delete the secret at path.\n\tvoid delete(String path);\n\t// Read the secret at path.\n\tObject get(String path);\n\tVaultKeyValueOperationsSupport.KeyValueBackend getApiVersion();\n\t// Enumerate keys from a Vault path.\n\tList<String> list(String path);\n}", "des": "Interface that specifies a basic set of Vault operations using Vault's Key/Value secret backend."}
{"index": 9358, "repo": "spring-vault-core-3.0.4", "code": "public class VaultSignRequest extends Object {\n\tstatic VaultSignRequest.VaultSignRequestBuilder builder();\n\t// Create a new VaultSignRequest given Plaintext.\n\tstatic VaultSignRequest create(Plaintext input);\n\t// Deprecated. since 2.4, use getSignatureAlgorithm() instead.\n\tString getAlgorithm();\n\tString getHashAlgorithm();\n\tPlaintext getPlaintext();\n\tString getSignatureAlgorithm();\n}", "des": "Request for a signature creation request."}
{"index": 9359, "repo": "spring-vault-core-3.0.4", "code": "public class VaultToken extends Object {\n\tboolean equals(Object o);\n\tString getToken();\n\t// Create a new VaultToken.\n\tstatic VaultToken of(char[] token);\n\t// Create a new VaultToken.\n\tstatic VaultToken of(String token);\n\tchar[] toCharArray();\n}", "des": "Value object for a Vault token."}
{"index": 9360, "repo": "spring-vault-core-3.0.4", "code": "public static class VaultTransformContext.VaultTransformRequestBuilder extends Object {\n\t// Build a new VaultTransformContext instance.\n\tVaultTransformContext build();\n\t// Configure a transformation to be used with the transform operation.\n\tVaultTransformContext.VaultTransformRequestBuilder transformation(String transformation);\n\t// Configure the tweak value for a transform operation.\n\tVaultTransformContext.VaultTransformRequestBuilder tweak(byte[] tweak);\n}", "des": "Builder for VaultTransformContext."}
{"index": 9361, "repo": "spring-vault-core-3.0.4", "code": "public class VaultTransitContext extends Object {\n\tstatic VaultTransitContext.VaultTransitRequestBuilder builder();\n\tstatic VaultTransitContext empty();\n\tboolean equals(Object o);\n\t// Create a VaultTransitContext given context bytes.\n\tstatic VaultTransitContext fromContext(byte[] context);\n\t// Create a VaultTransitContext given nonce bytes.\n\tstatic VaultTransitContext fromNonce(byte[] nonce);\n\tbyte[] getContext();\n\tint getKeyVersion();\n\tbyte[] getNonce();\n}", "des": "Transit backend encryption/decryption/rewrapping context."}
{"index": 9362, "repo": "spring-vault-core-3.0.4", "code": "@FunctionalInterface public interface WebClientFactory {\n\t// Create a WebClient instance.\n\tdefault WebClient create();\n\t// Create a WebClient instance by applying customizer to the underlying WebClientBuilder.\n\tWebClient create(Consumer<WebClientBuilder> customizer);\n}", "des": "Factory interface that produces a WebClient object."}
{"index": 9363, "repo": "spring-data-elasticsearch-5.1.2", "code": "protected static interface AbstractReactiveElasticsearchTemplate.SearchDocumentCallback<T> {\n\t// converts a SearchDocument to an entity\n\treactor.core.publisher.Mono<T> toEntity(SearchDocument searchDocument);\n\t// converts a SearchDocument into a SearchHit\n\treactor.core.publisher.Mono<SearchHit<T>> toSearchHit(SearchDocument searchDocument);\n}", "des": "Callback to convert a SearchDocument into different other classes"}
{"index": 9364, "repo": "spring-data-elasticsearch-5.1.2", "code": "public record ActiveShardCount(int value) extends Record {\n\t// Indicates whether some other object is \"equal to\" this one.\n\tfinal boolean equals(Object o);\n\t// Returns the value of the value record component.\n\tint value();\n}", "des": "Class corresponding to the Elasticsearch class, but in the org.springframework.data.elasticsearch package"}
{"index": 9365, "repo": "spring-data-elasticsearch-5.1.2", "code": "public class BulkOptions extends Object {\n\t// Create a new BulkOptions.BulkOptionsBuilder to build BulkOptions.\n\tstatic BulkOptions.BulkOptionsBuilder builder();\n\t// Return default BulkOptions.\n\tstatic BulkOptions defaultOptions();\n\tString getPipeline();\n\tRefreshPolicy getRefreshPolicy();\n\tString getRoutingId();\n\tDuration getTimeout();\n\tActiveShardCount getWaitForActiveShards();\n}", "des": "Options that may be passed to an DocumentOperations.bulkIndex(List, BulkOptions, IndexCoordinates) or DocumentOperations.bulkUpdate(List, BulkOptions, IndexCoordinates) call."}
{"index": 9366, "repo": "spring-data-elasticsearch-5.1.2", "code": "public enum CompletionContextType extends Enum<CompletionContextType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic CompletionContextType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic CompletionContextType[] values();\n}", "des": "Based on reference doc - https://www.elastic.co/guide/en/elasticsearch/reference/current/suggester-context.html"}
{"index": 9367, "repo": "spring-data-elasticsearch-5.1.2", "code": "public static enum Criteria.Operator extends Enum<Criteria.Operator> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Criteria.Operator valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Criteria.Operator[] values();\n}", "des": "Operator to join the entries of the criteria chain"}
{"index": 9368, "repo": "spring-data-elasticsearch-5.1.2", "code": "public enum DateFormat extends Enum<DateFormat> {\n\tString getPattern();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic DateFormat valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic DateFormat[] values();\n}", "des": "Values based on Elasticsearch reference documentation."}
{"index": 9369, "repo": "spring-data-elasticsearch-5.1.2", "code": "public interface DateFormatter {\n\t// Formats a TemporalAccessor into a String.\n\tString format(TemporalAccessor accessor);\n\t// Parses a String into a TemporalAccessor.\n\t<T extends TemporalAccessor>T parse(String input, Class<T> type);\n}", "des": "Interface to convert from and to TemporalAccessors."}
{"index": 9370, "repo": "spring-data-elasticsearch-5.1.2", "code": "public class DefaultRoutingResolver extends Object implements RoutingResolver {\n\t// returns the routing when no entity is available.\n\tString getRouting();\n\t// Returns the routing for a bean.\n\t<T> String getRouting(T bean);\n}", "des": "Default implementation of the RoutingResolver interface."}
{"index": 9371, "repo": "spring-data-elasticsearch-5.1.2", "code": "public record DocValueField(String field, String format) extends Record {\n\t// Indicates whether some other object is \"equal to\" this one.\n\tfinal boolean equals(Object o);\n\t// Returns the value of the field record component.\n\tString field();\n\t// Returns the value of the format record component.\n\tString format();\n}", "des": "Record defining a docvalue_field to be used in a query."}
{"index": 9372, "repo": "spring-data-elasticsearch-5.1.2", "code": "public enum Dynamic extends Enum<Dynamic> {\n\tString getMappedName();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Dynamic valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Dynamic[] values();\n}", "des": "Values for the dynamic mapping parameter."}
{"index": 9373, "repo": "spring-data-elasticsearch-5.1.2", "code": "public interface ElasticsearchTypeMapper extends TypeMapper<Map<String,Object>> {\n\tdefault boolean containsTypeInformation(Map<String,Object> source);\n\t// Creates a new default ElasticsearchTypeMapper.\n\tstatic ElasticsearchTypeMapper create(MappingContext<? extends ElasticsearchPersistentEntity<?>,ElasticsearchPersistentProperty> mappingContext);\n\tString getTypeKey();\n\t// Returns whether the given key is the type key.\n\tboolean isTypeKey(String key);\n}", "des": "Elasticsearch specific TypeMapper definition."}
{"index": 9374, "repo": "spring-data-elasticsearch-5.1.2", "code": "@ReadingConverter public static enum GeoConverters.MapToPointConverter extends Enum<GeoConverters.MapToPointConverter> implements Converter<Map<String,Object>,Point> {\n\tPoint convert(Map<String,Object> source);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic GeoConverters.MapToPointConverter valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic GeoConverters.MapToPointConverter[] values();\n}", "des": "Converter to read a Point from Map using lat/long properties."}
{"index": 9375, "repo": "spring-data-elasticsearch-5.1.2", "code": "@WritingConverter public static enum GeoConverters.PointToMapConverter extends Enum<GeoConverters.PointToMapConverter> implements Converter<Point,Map<String,Object>> {\n\tMap<String,Object> convert(Point source);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic GeoConverters.PointToMapConverter valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic GeoConverters.PointToMapConverter[] values();\n}", "des": "Converter to write a Point to Map using lat/long properties."}
{"index": 9376, "repo": "spring-data-elasticsearch-5.1.2", "code": "public interface GeoJson<T extends Iterable<?>> {\n\t// The value of the coordinates member is always an Iterable.\n\tT getCoordinates();\n\t// String value representing the type of the GeoJson object.\n\tString getType();\n\tstatic GeoJson<?> of(String json);\n\tdefault String toJson();\n}", "des": "Interface definition for structures defined in GeoJSON format. copied from Spring Data Mongodb"}
{"index": 9377, "repo": "spring-data-elasticsearch-5.1.2", "code": "public class GeoJsonGeometryCollection extends Object implements GeoJson<Iterable<GeoJson<?>>> {\n\tboolean equals(Object o);\n\t// The value of the coordinates member is always an Iterable.\n\tIterable<GeoJson<?>> getCoordinates();\n\tList<GeoJson<?>> getGeometries();\n\t// String value representing the type of the GeoJson object.\n\tString getType();\n\t// Creates a new GeoJsonGeometryCollection for the given GeoJson instances.\n\tstatic GeoJsonGeometryCollection of(List<GeoJson<?>> geometries);\n}", "des": "Defines a GeoJsonGeometryCollection that consists of a List of GeoJson objects. Copied from Spring Data Mongodb"}
{"index": 9378, "repo": "spring-data-elasticsearch-5.1.2", "code": "public class GeoJsonMultiPolygon extends Object implements GeoJson<Iterable<GeoJsonPolygon>> {\n\tboolean equals(Object o);\n\t// The value of the coordinates member is always an Iterable.\n\tList<GeoJsonPolygon> getCoordinates();\n\t// String value representing the type of the GeoJson object.\n\tString getType();\n\t// Creates a new GeoJsonMultiPolygon for the given GeoJsonPolygons.\n\tstatic GeoJsonMultiPolygon of(List<GeoJsonPolygon> polygons);\n}", "des": "GeoJsonMultiPolygon is defined as a list of GeoJsonPolygons. Copied fro Spring Data Mongodb."}
{"index": 9379, "repo": "spring-data-elasticsearch-5.1.2", "code": "public static enum HostProvider.Verification extends Enum<HostProvider.Verification> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic HostProvider.Verification valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic HostProvider.Verification[] values();\n}", "des": "HostProvider.Verification allows to influence the lookup strategy for active hosts."}
{"index": 9380, "repo": "spring-data-elasticsearch-5.1.2", "code": "public static enum IndexQuery.OpType extends Enum<IndexQuery.OpType> {\n\tString getEsName();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic IndexQuery.OpType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic IndexQuery.OpType[] values();\n}", "des": "OpType for the index operation."}
{"index": 9381, "repo": "spring-data-elasticsearch-5.1.2", "code": "public final class MappingParameters extends Object {\n\t// extracts the mapping parameters from the relevant annotations.\n\tstatic MappingParameters from(Annotation annotation);\n\tboolean isStore();\n\t// writes the different fields to an ObjectNode.\n\tvoid writeTypeAndParametersTo(com.fasterxml.jackson.databind.node.ObjectNode objectNode);\n}", "des": "A class to hold the mapping parameters that might be set on Field or InnerField annotation."}
{"index": 9382, "repo": "spring-data-elasticsearch-5.1.2", "code": "public interface PropertyValueConverter {\n\t// Converts an elasticsearch property value to a property value.\n\tObject read(Object value);\n\t// Converts a property value to an elasticsearch value.\n\tObject write(Object value);\n}", "des": "Interface defining methods to convert the value of an entity-property to a value in Elasticsearch and back."}
{"index": 9383, "repo": "spring-data-elasticsearch-5.1.2", "code": "public static record Query.IdWithRouting(String id, String routing) extends Record {\n\t// Indicates whether some other object is \"equal to\" this one.\n\tfinal boolean equals(Object o);\n\t// Returns the value of the id record component.\n\tString id();\n\t// Returns the value of the routing record component.\n\tString routing();\n}", "des": "Value class combining an id with a routing value."}
{"index": 9384, "repo": "spring-data-elasticsearch-5.1.2", "code": "public static record Query.PointInTime(String id, Duration keepAlive) extends Record {\n\t// Indicates whether some other object is \"equal to\" this one.\n\tfinal boolean equals(Object o);\n\t// Returns the value of the id record component.\n\tString id();\n\t// Returns the value of the keepAlive record component.\n\tDuration keepAlive();\n}", "des": "Desscribes the point in time parameters for a query"}
{"index": 9385, "repo": "spring-data-elasticsearch-5.1.2", "code": "public abstract class ReactiveResourceUtil extends Object {\n\t// loads a Document initialized with data from a given resource path.\n\tstatic reactor.core.publisher.Mono<Document> loadDocument(String path, String annotation);\n\t// Read a ClassPathResource into a reactor.core.publisher.Mono<String>.\n\tstatic reactor.core.publisher.Mono<String> readFileFromClasspath(String url);\n}", "des": "Utility to reactively read Resources."}
{"index": 9386, "repo": "spring-data-elasticsearch-5.1.2", "code": "public interface ReactiveScriptOperations {\n\t// Deletes the script with the given name\n\treactor.core.publisher.Mono<Boolean> deleteScript(String name);\n\t// Gest the script with the given name.\n\treactor.core.publisher.Mono<Script> getScript(String name);\n\t// Stores the given script in the Elasticsearch cluster.\n\treactor.core.publisher.Mono<Boolean> putScript(Script script);\n}", "des": "This interfaces defines the operations to access the Elasticsearch script API."}
{"index": 9387, "repo": "spring-data-elasticsearch-5.1.2", "code": "public enum RefreshPolicy extends Enum<RefreshPolicy> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RefreshPolicy valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RefreshPolicy[] values();\n}", "des": "Enum defining the refresh policy."}
{"index": 9388, "repo": "spring-data-elasticsearch-5.1.2", "code": "public interface ScriptOperations {\n\t// Deletes the script with the given name\n\tboolean deleteScript(String name);\n\t// Gest the script with the given name.\n\tScript getScript(String name);\n\t// Stores the given script in the Elasticsearch cluster.\n\tboolean putScript(Script script);\n}", "des": "This interfaces defines the operations to access the Elasticsearch script API."}
{"index": 9389, "repo": "spring-data-elasticsearch-5.1.2", "code": "public enum ScriptType extends Enum<ScriptType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ScriptType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ScriptType[] values();\n}", "des": "Define script types for update queries."}
{"index": 9390, "repo": "spring-data-elasticsearch-5.1.2", "code": "public record SeqNoPrimaryTerm(long sequenceNumber, long primaryTerm) extends Record {\n\t// Indicates whether some other object is \"equal to\" this one.\n\tfinal boolean equals(Object o);\n\t// Returns the value of the primaryTerm record component.\n\tlong primaryTerm();\n\t// Returns the value of the sequenceNumber record component.\n\tlong sequenceNumber();\n}", "des": "A container for seq_no and primary_term values."}
{"index": 9391, "repo": "spring-data-elasticsearch-5.1.2", "code": "public class Settings extends DefaultStringObjectMap<Settings> {\n\t// flattens the nested structure (JSON fields index/foo/bar/: value) into a flat structure (index.foo.bar: value)\n\tSettings flatten();\n\tObject get(Object key);\n\t// Merges some other settings onto this one.\n\tvoid merge(Settings other);\n\t// Creates a Settings object from the given JSON String\n\tstatic Settings parse(String json);\n}", "des": "class defining the settings for an index."}
{"index": 9392, "repo": "spring-data-elasticsearch-5.1.2", "code": "public enum TotalHitsRelation extends Enum<TotalHitsRelation> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TotalHitsRelation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TotalHitsRelation[] values();\n}", "des": "Enum to represent the relation that Elasticsearch returns for the totalHits value"}
{"index": 9393, "repo": "spring-data-elasticsearch-5.1.2", "code": "public enum WriteTypeHint extends Enum<WriteTypeHint> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic WriteTypeHint valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic WriteTypeHint[] values();\n}", "des": "Defines if type hints should be written."}
{"index": 9394, "repo": "spring-boot-3.1.1", "code": "public abstract class AbstractBeansOfTypeDatabaseInitializerDetector extends Object implements DatabaseInitializerDetector {\n\t// Detect beans defined in the given beanFactory that initialize a DataSource.\n\tSet<String> detect(org.springframework.beans.factory.config.ConfigurableListableBeanFactory beanFactory);\n\t// Returns the bean types that should be detected as being database initializers.\n\tprotected abstract Set<Class<?>> getDatabaseInitializerBeanTypes();\n}", "des": "Base class for DatabaseInitializerDetectors that detect database initializer beans by type."}
{"index": 9395, "repo": "spring-boot-3.1.1", "code": "public abstract class AbstractInjectionFailureAnalyzer<T extends Throwable> extends AbstractFailureAnalyzer<T> {\n\t// Returns an analysis of the given rootFailure, or null if no analysis was possible.\n\tprotected final FailureAnalysis analyze(Throwable rootFailure, T cause);\n\t// Returns an analysis of the given rootFailure, or null if no analysis was possible.\n\tprotected abstract FailureAnalysis analyze(Throwable rootFailure, T cause, String description);\n}", "des": "Abstract base class for a FailureAnalyzer that handles some kind of injection failure."}
{"index": 9396, "repo": "spring-boot-3.1.1", "code": "public final class Ansi8BitColor extends Object implements AnsiElement {\n\t// Return a background ANSI color code instance for the given code.\n\tstatic Ansi8BitColor background(int code);\n\tboolean equals(Object obj);\n\t// Return a foreground ANSI color code instance for the given code.\n\tstatic Ansi8BitColor foreground(int code);\n}", "des": "AnsiElement implementation for ANSI 8-bit foreground or background color codes."}
{"index": 9397, "repo": "spring-boot-3.1.1", "code": "public enum AnsiBackground extends Enum<AnsiBackground> implements AnsiElement {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AnsiBackground valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AnsiBackground[] values();\n}", "des": "Ansi background colors."}
{"index": 9398, "repo": "spring-boot-3.1.1", "code": "public enum AnsiColor extends Enum<AnsiColor> implements AnsiElement {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AnsiColor valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AnsiColor[] values();\n}", "des": "Ansi colors."}
{"index": 9399, "repo": "spring-boot-3.1.1", "code": "public static enum AnsiOutput.Enabled extends Enum<AnsiOutput.Enabled> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AnsiOutput.Enabled valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AnsiOutput.Enabled[] values();\n}", "des": "Possible values to pass to AnsiOutput.setEnabled(org.springframework.boot.ansi.AnsiOutput.Enabled)."}
{"index": 9400, "repo": "spring-boot-3.1.1", "code": "public enum AnsiStyle extends Enum<AnsiStyle> implements AnsiElement {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AnsiStyle valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AnsiStyle[] values();\n}", "des": "Ansi styles."}
{"index": 9401, "repo": "spring-boot-3.1.1", "code": "public class ApplicationEnvironmentPreparedEvent extends SpringApplicationEvent {\n\t// Return the bootstrap context.\n\tConfigurableBootstrapContext getBootstrapContext();\n\t// Return the environment.\n\torg.springframework.core.env.ConfigurableEnvironment getEnvironment();\n}", "des": "Event published when a SpringApplication is starting up and the Environment is first available for inspection and modification."}
{"index": 9402, "repo": "spring-boot-3.1.1", "code": "public class ApplicationFailedEvent extends SpringApplicationEvent {\n\t// Return the application context.\n\torg.springframework.context.ConfigurableApplicationContext getApplicationContext();\n\t// Return the exception that caused the failure.\n\tThrowable getException();\n}", "des": "Event published by a SpringApplication when it fails to start."}
{"index": 9403, "repo": "spring-boot-3.1.1", "code": "public class ApplicationHome extends Object {\n\t// Returns the application home directory.\n\tFile getDir();\n\t// Returns the underlying source used to find the home directory.\n\tFile getSource();\n}", "des": "Provides access to the application home directory."}
{"index": 9404, "repo": "spring-boot-3.1.1", "code": "public class ApplicationReadyEvent extends SpringApplicationEvent {\n\t// Return the application context.\n\torg.springframework.context.ConfigurableApplicationContext getApplicationContext();\n\t// Return the time taken for the application to be ready to service requests, or null if unknown.\n\tDuration getTimeTaken();\n}", "des": "Event published as late as conceivably possible to indicate that the application is ready to service requests."}
{"index": 9405, "repo": "spring-boot-3.1.1", "code": "public class ApplicationStartedEvent extends SpringApplicationEvent {\n\t// Return the application context.\n\torg.springframework.context.ConfigurableApplicationContext getApplicationContext();\n\t// Return the time taken to start the application, or null if unknown.\n\tDuration getTimeTaken();\n}", "des": "Event published once the application context has been refreshed but before any application and command line runners have been called."}
{"index": 9406, "repo": "spring-boot-3.1.1", "code": "public class ApplicationTemp extends Object {\n\t// Return the directory to be used for application specific temp files.\n\tFile getDir();\n\t// Return a subdirectory of the application temp.\n\tFile getDir(String subDir);\n}", "des": "Provides access to an application specific temporary directory."}
{"index": 9407, "repo": "spring-boot-3.1.1", "code": "public static enum Banner.Mode extends Enum<Banner.Mode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Banner.Mode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Banner.Mode[] values();\n}", "des": "An enumeration of possible values for configuring the Banner."}
{"index": 9408, "repo": "spring-boot-3.1.1", "code": "public class BasicJsonParser extends AbstractJsonParser {\n\t// Parse the specified JSON string into a List.\n\tList<Object> parseList(String json);\n\t// Parse the specified JSON string into a Map.\n\tMap<String,Object> parseMap(String json);\n}", "des": "Really basic JSON parser for when you have nothing else available."}
{"index": 9409, "repo": "spring-boot-3.1.1", "code": "public static enum Bindable.BindRestriction extends Enum<Bindable.BindRestriction> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Bindable.BindRestriction valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Bindable.BindRestriction[] values();\n}", "des": "Restrictions that can be applied when binding values."}
{"index": 9410, "repo": "spring-boot-3.1.1", "code": "@FunctionalInterface public interface BindConstructorProvider {\n\t// Return the bind constructor to use for the given type, or null if constructor binding is not supported.\n\tdefault Constructor<?> getBindConstructor(Class<?> type, boolean isNestedConstructorBinding);\n\t// Return the bind constructor to use for the given bindable, or null if constructor binding is not supported.\n\tConstructor<?> getBindConstructor(Bindable<?> bindable, boolean isNestedConstructorBinding);\n}", "des": "Strategy interface used to determine a specific constructor to use when binding."}
{"index": 9411, "repo": "spring-boot-3.1.1", "code": "public interface BindContext {\n\t// Return the source binder that is performing the bind operation.\n\tBinder getBinder();\n\t// Return the ConfigurationProperty actually being bound or null if the property has not yet been determined.\n\tConfigurationProperty getConfigurationProperty();\n\t// Return the current depth of the binding.\n\tint getDepth();\n\t// Return an Iterable of the sources being used by the Binder.\n\tIterable<ConfigurationPropertySource> getSources();\n}", "des": "Context information for use by BindHandlers."}
{"index": 9412, "repo": "spring-boot-3.1.1", "code": "public class BindException extends RuntimeException implements OriginProvider {\n\t// Return the name of the configuration property being bound.\n\tConfigurationPropertyName getName();\n\t// Return the source origin or null if the origin is not known.\n\tOrigin getOrigin();\n\t// Return the configuration property name of the item that was being bound.\n\tConfigurationProperty getProperty();\n\t// Return the target being bound.\n\tBindable<?> getTarget();\n}", "des": "Exception thrown when binding fails."}
{"index": 9413, "repo": "spring-boot-3.1.1", "code": "public enum BindMethod extends Enum<BindMethod> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic BindMethod valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic BindMethod[] values();\n}", "des": "Configuration property binding methods."}
{"index": 9414, "repo": "spring-boot-3.1.1", "code": "public class BootstrapContextClosedEvent extends org.springframework.context.ApplicationEvent {\n\t// Return the prepared application context.\n\torg.springframework.context.ConfigurableApplicationContext getApplicationContext();\n\t// Return the BootstrapContext that was closed.\n\tBootstrapContext getBootstrapContext();\n}", "des": "ApplicationEvent published by a BootstrapContext when it's closed."}
{"index": 9415, "repo": "spring-boot-3.1.1", "code": "public static enum BootstrapRegistry.Scope extends Enum<BootstrapRegistry.Scope> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic BootstrapRegistry.Scope valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic BootstrapRegistry.Scope[] values();\n}", "des": "The scope of an instance."}
{"index": 9416, "repo": "spring-boot-3.1.1", "code": "public class BoundConfigurationProperties extends Object {\n\t// Get the configuration property bound to the given name.\n\tConfigurationProperty get(ConfigurationPropertyName name);\n\t// Return the BoundConfigurationProperties from the given ApplicationContext if it is available.\n\tstatic BoundConfigurationProperties get(org.springframework.context.ApplicationContext context);\n\t// Get all bound properties.\n\tMap<ConfigurationPropertyName,ConfigurationProperty> getAll();\n}", "des": "Bean to record and provide bound @ConfigurationProperties."}
{"index": 9417, "repo": "spring-boot-3.1.1", "code": "@ImportRuntimeHints(org.springframework.boot.info.BuildProperties.BuildPropertiesRuntimeHints.class) public class BuildProperties extends InfoProperties {\n\t// Return the artifactId of the project or null.\n\tString getArtifact();\n\t// Return the groupId of the project or null.\n\tString getGroup();\n\t// Return the name of the project or null.\n\tString getName();\n\t// Return the timestamp of the build or null.\n\tInstant getTime();\n\t// Return the version of the project or null.\n\tString getVersion();\n}", "des": "Provide build-related information such as group and artifact."}
{"index": 9418, "repo": "spring-boot-3.1.1", "code": "public final class ConfigData extends Object {\n\t// Return the config data options that apply to the given source.\n\tConfigData.Options getOptions(org.springframework.core.env.PropertySource<?> propertySource);\n\t// Return the configuration data property sources in ascending priority order.\n\tList<org.springframework.core.env.PropertySource<?>> getPropertySources();\n}", "des": "Configuration data that has been loaded from a ConfigDataResource and may ultimately contribute property sources to Spring's Environment."}
{"index": 9419, "repo": "spring-boot-3.1.1", "code": "public static enum ConfigData.Option extends Enum<ConfigData.Option> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ConfigData.Option valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ConfigData.Option[] values();\n}", "des": "Option flags that can be applied."}
{"index": 9420, "repo": "spring-boot-3.1.1", "code": "public interface ConfigDataEnvironmentUpdateListener extends EventListener {\n\t// Called when a new PropertySource is added to the Environment.\n\tdefault void onPropertySourceAdded(org.springframework.core.env.PropertySource<?> propertySource, ConfigDataLocation location, ConfigDataResource resource);\n\t// Called when Environment profiles are set.\n\tdefault void onSetProfiles(Profiles profiles);\n}", "des": "EventListener to listen to Environment updates triggered by the ConfigDataEnvironmentPostProcessor."}
{"index": 9421, "repo": "spring-boot-3.1.1", "code": "public interface ConfigDataLoader<R extends ConfigDataResource> {\n\t// Returns if the specified resource can be loaded by this instance.\n\tdefault boolean isLoadable(ConfigDataLoaderContext context, R resource);\n\t// Load ConfigData for the given resource.\n\tConfigData load(ConfigDataLoaderContext context, R resource);\n}", "des": "Strategy class that can be used to load ConfigData for a given ConfigDataResource."}
{"index": 9422, "repo": "spring-boot-3.1.1", "code": "public class ConfigDataLocationNotFoundException extends ConfigDataNotFoundException {\n\t// Return the location that could not be found.\n\tConfigDataLocation getLocation();\n\t// Return the source origin or null if the origin is not known.\n\tOrigin getOrigin();\n\t// Return a description of actual referenced item that could not be found.\n\tString getReferenceDescription();\n}", "des": "ConfigDataNotFoundException thrown when a ConfigDataLocation cannot be found."}
{"index": 9423, "repo": "spring-boot-3.1.1", "code": "public interface ConfigDataLocationResolverContext {\n\t// Provides access to a binder that can be used to obtain previously contributed values.\n\tBinder getBinder();\n\t// Provides access to the ConfigurableBootstrapContext shared across all EnvironmentPostProcessors.\n\tConfigurableBootstrapContext getBootstrapContext();\n\t// Provides access to the parent ConfigDataResource that triggered the resolve or null if there is no available parent.\n\tConfigDataResource getParent();\n}", "des": "Context provided to ConfigDataLocationResolver methods."}
{"index": 9424, "repo": "spring-boot-3.1.1", "code": "public enum ConfigDataNotFoundAction extends Enum<ConfigDataNotFoundAction> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ConfigDataNotFoundAction valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ConfigDataNotFoundAction[] values();\n}", "des": "Action to take when an uncaught ConfigDataNotFoundException is thrown."}
{"index": 9425, "repo": "spring-boot-3.1.1", "code": "public class ConfigTreeConfigDataLocationResolver extends Object implements ConfigDataLocationResolver<ConfigTreeConfigDataResource> {\n\t// Returns if the specified location address can be resolved by this resolver.\n\tboolean isResolvable(ConfigDataLocationResolverContext context, ConfigDataLocation location);\n\t// Resolve a ConfigDataLocation into one or more ConfigDataResource instances.\n\tList<ConfigTreeConfigDataResource> resolve(ConfigDataLocationResolverContext context, ConfigDataLocation location);\n}", "des": "ConfigDataLocationResolver for config tree locations."}
{"index": 9426, "repo": "spring-boot-3.1.1", "code": "public class ConfigTreePropertySource extends org.springframework.core.env.EnumerablePropertySource<Path> implements OriginLookup<String> {\n\t// Return the origin of the given key or null if the origin cannot be determined.\n\tOrigin getOrigin(String name);\n\tConfigTreePropertySource.Value getProperty(String name);\n\tString[] getPropertyNames();\n\t// Return true if this lookup is immutable and has contents that will never change.\n\tboolean isImmutable();\n}", "des": "PropertySource backed by a directory tree that contains files for each value."}
{"index": 9427, "repo": "spring-boot-3.1.1", "code": "public static enum ConfigTreePropertySource.Option extends Enum<ConfigTreePropertySource.Option> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ConfigTreePropertySource.Option valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ConfigTreePropertySource.Option[] values();\n}", "des": "Property source options."}
{"index": 9428, "repo": "spring-boot-3.1.1", "code": "public class ConfigurationPropertiesBindException extends org.springframework.beans.factory.BeanCreationException {\n\t// Return the configuration properties annotation that triggered the binding.\n\tConfigurationProperties getAnnotation();\n\t// Return the bean type that was being bound.\n\tClass<?> getBeanType();\n}", "des": "Exception thrown when @ConfigurationProperties binding fails."}
{"index": 9429, "repo": "spring-boot-3.1.1", "code": "public static enum ConfigurationPropertyName.Form extends Enum<ConfigurationPropertyName.Form> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ConfigurationPropertyName.Form valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ConfigurationPropertyName.Form[] values();\n}", "des": "The various forms that a non-indexed element value can take."}
{"index": 9430, "repo": "spring-boot-3.1.1", "code": "public enum ConfigurationPropertyState extends Enum<ConfigurationPropertyState> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ConfigurationPropertyState valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ConfigurationPropertyState[] values();\n}", "des": "The state of content from a ConfigurationPropertySource."}
{"index": 9431, "repo": "spring-boot-3.1.1", "code": "public static enum Cookie.SameSite extends Enum<Cookie.SameSite> {\n\tString attributeValue();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Cookie.SameSite valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Cookie.SameSite[] values();\n}", "des": "SameSite values."}
{"index": 9432, "repo": "spring-boot-3.1.1", "code": "public enum DatabaseInitializationMode extends Enum<DatabaseInitializationMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic DatabaseInitializationMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic DatabaseInitializationMode[] values();\n}", "des": "Supported database initialization modes."}
{"index": 9433, "repo": "spring-boot-3.1.1", "code": "public final class DataSourceUnwrapper extends Object {\n\t// Return an object that implements the given target type, unwrapping delegate or proxy if necessary using the specified unwrapInterface.\n\tstatic <I, T extends I>T unwrap(DataSource dataSource, Class<I> unwrapInterface, Class<T> target);\n\t// Return an object that implements the given target type, unwrapping delegate or proxy if necessary.\n\tstatic <T> T unwrap(DataSource dataSource, Class<T> target);\n}", "des": "Unwraps a DataSource that may have been proxied or wrapped in a custom Wrapper such as DelegatingDataSource."}
{"index": 9434, "repo": "spring-boot-3.1.1", "code": "public class DefaultSslBundleRegistry extends Object implements SslBundleRegistry, SslBundles {\n\t// Return an SslBundle with the provided name.\n\tSslBundle getBundle(String name);\n\t// Register a named SslBundle.\n\tvoid registerBundle(String name, SslBundle bundle);\n}", "des": "Default SslBundleRegistry implementation."}
{"index": 9435, "repo": "spring-boot-3.1.1", "code": "@FunctionalInterface public interface DeferredLogFactory {\n\t// Create a new DeferredLog for the given destination.\n\tdefault org.apache.commons.logging.Log getLog(Class<?> destination);\n\t// Create a new DeferredLog for the given destination.\n\torg.apache.commons.logging.Log getLog(Supplier<org.apache.commons.logging.Log> destination);\n\t// Create a new DeferredLog for the given destination.\n\tdefault org.apache.commons.logging.Log getLog(org.apache.commons.logging.Log destination);\n}", "des": "Factory that can be used to create multiple DeferredLog instances that will switch over when appropriate."}
{"index": 9436, "repo": "spring-boot-3.1.1", "code": "public enum DispatcherType extends Enum<DispatcherType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic DispatcherType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic DispatcherType[] values();\n}", "des": "Enumeration of filter dispatcher types, identical to DispatcherType and used in configuration as the servlet API may not be present."}
{"index": 9437, "repo": "spring-boot-3.1.1", "code": "public static enum Encoding.Type extends Enum<Encoding.Type> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Encoding.Type valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Encoding.Type[] values();\n}", "des": "Type of HTTP message to consider for encoding configuration."}
{"index": 9438, "repo": "spring-boot-3.1.1", "code": "public static enum ErrorAttributeOptions.Include extends Enum<ErrorAttributeOptions.Include> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ErrorAttributeOptions.Include valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ErrorAttributeOptions.Include[] values();\n}", "des": "Error attributes that can be included in an error response."}
{"index": 9439, "repo": "spring-boot-3.1.1", "code": "public interface ErrorAttributes {\n\t// Return the underlying cause of the error or null if the error cannot be extracted.\n\tThrowable getError(org.springframework.web.context.request.WebRequest webRequest);\n\t// Returns a Map of the error attributes.\n\tdefault Map<String,Object> getErrorAttributes(org.springframework.web.context.request.WebRequest webRequest, ErrorAttributeOptions options);\n}", "des": "Provides access to error attributes which can be logged or presented to the user."}
{"index": 9440, "repo": "spring-boot-3.1.1", "code": "public class FailureAnalysis extends Object {\n\t// Returns the action, if any, to be taken to address the failure.\n\tString getAction();\n\t// Returns the cause of the failure.\n\tThrowable getCause();\n\t// Returns a description of the failure.\n\tString getDescription();\n}", "des": "The result of analyzing a failure."}
{"index": 9441, "repo": "spring-boot-3.1.1", "code": "public class FilterRegistrationBean<T extends jakarta.servlet.Filter> extends AbstractFilterRegistrationBean<T> {\n\t// Return the Filter to be registered.\n\tT getFilter();\n\t// Set the filter to be registered.\n\tvoid setFilter(T filter);\n}", "des": "A ServletContextInitializer to register Filters in a Servlet 3.0+ container."}
{"index": 9442, "repo": "spring-boot-3.1.1", "code": "@ImportRuntimeHints(org.springframework.boot.info.GitProperties.GitPropertiesRuntimeHints.class) public class GitProperties extends InfoProperties {\n\t// Return the name of the branch or null.\n\tString getBranch();\n\t// Return the full id of the commit or null.\n\tString getCommitId();\n\t// Return the timestamp of the commit or null.\n\tInstant getCommitTime();\n\t// Return the abbreviated id of the commit or null.\n\tString getShortCommitId();\n}", "des": "Provide git-related information such as commit id and time."}
{"index": 9443, "repo": "spring-boot-3.1.1", "code": "public enum GracefulShutdownResult extends Enum<GracefulShutdownResult> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic GracefulShutdownResult valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic GracefulShutdownResult[] values();\n}", "des": "The result of a graceful shutdown request."}
{"index": 9444, "repo": "spring-boot-3.1.1", "code": "public class GsonJsonParser extends AbstractJsonParser {\n\t// Parse the specified JSON string into a List.\n\tList<Object> parseList(String json);\n\t// Parse the specified JSON string into a Map.\n\tMap<String,Object> parseMap(String json);\n}", "des": "Thin wrapper to adapt Gson to a JsonParser."}
{"index": 9445, "repo": "spring-boot-3.1.1", "code": "public final class ImportCandidates extends Object implements Iterable<String> {\n\t// Returns the list of loaded import candidates.\n\tList<String> getCandidates();\n\tIterator<String> iterator();\n\t// Loads the names of import candidates from the classpath.\n\tstatic ImportCandidates load(Class<?> annotation, ClassLoader classLoader);\n}", "des": "Contains @Configuration import candidates, usually auto-configurations."}
{"index": 9446, "repo": "spring-boot-3.1.1", "code": "public class InactiveConfigDataAccessException extends ConfigDataException {\n\t// Return the ConfigDataResource of the property source or null if the source was not loaded from ConfigData.\n\tConfigDataResource getLocation();\n\t// Return the origin or the property or null.\n\tOrigin getOrigin();\n\t// Return the name of the property.\n\tString getPropertyName();\n\t// Return the inactive property source that contained the property.\n\torg.springframework.core.env.PropertySource<?> getPropertySource();\n}", "des": "Exception thrown when an attempt is made to resolve a property against an inactive ConfigData property source."}
{"index": 9447, "repo": "spring-boot-3.1.1", "code": "public class InfoProperties extends Object implements Iterable<InfoProperties.Entry> {\n\t// Return the value of the specified property or null.\n\tString get(String key);\n\t// Return the value of the specified property as an Instant or null if the value is not a valid Long representation of an epoch time.\n\tInstant getInstant(String key);\n\tIterator<InfoProperties.Entry> iterator();\n\t// Return a PropertySource of this instance.\n\torg.springframework.core.env.PropertySource<?> toPropertySource();\n}", "des": "Base class for components exposing unstructured data with dedicated methods for well known keys."}
{"index": 9448, "repo": "spring-boot-3.1.1", "code": "public class Instantiator<T> extends Object {\n\t// Instantiate the given set of class name, injecting constructor arguments as necessary.\n\tList<T> instantiate(ClassLoader classLoader, Collection<String> names);\n\t// Instantiate the given set of class name, injecting constructor arguments as necessary.\n\tList<T> instantiate(Collection<String> names);\n\t// Instantiate the given set of classes, injecting constructor arguments as necessary.\n\tList<T> instantiateTypes(Collection<Class<?>> types);\n}", "des": "Simple factory used to instantiate objects by injecting available parameters."}
{"index": 9449, "repo": "spring-boot-3.1.1", "code": "public static interface Instantiator.AvailableParameters {\n\t// Add a parameter with an instance value.\n\tvoid add(Class<?> type, Object instance);\n\t// Add a parameter with an instance factory.\n\tvoid add(Class<?> type, Function<Class<?>,Object> factory);\n}", "des": "Callback used to register available parameters."}
{"index": 9450, "repo": "spring-boot-3.1.1", "code": "public class InvalidConfigDataPropertyException extends ConfigDataException {\n\t// Return the ConfigDataResource of the invalid property or null if the source was not loaded from ConfigData.\n\tConfigDataResource getLocation();\n\t// Return source property that caused the exception.\n\tConfigurationProperty getProperty();\n\t// Return the replacement property that should be used instead or null if not replacement is available.\n\tConfigurationPropertyName getReplacement();\n}", "des": "Exception thrown if an invalid property is found when processing config data."}
{"index": 9451, "repo": "spring-boot-3.1.1", "code": "public class InvalidConfigurationPropertyValueException extends RuntimeException {\n\t// Return the name of the property.\n\tString getName();\n\t// Return the reason why the value is invalid.\n\tString getReason();\n\t// Return the invalid value, can be null.\n\tObject getValue();\n}", "des": "Exception thrown when a configuration property value is invalid."}
{"index": 9452, "repo": "spring-boot-3.1.1", "code": "public class JacksonJsonParser extends AbstractJsonParser {\n\t// Parse the specified JSON string into a List.\n\tList<Object> parseList(String json);\n\t// Parse the specified JSON string into a Map.\n\tMap<String,Object> parseMap(String json);\n}", "des": "Thin wrapper to adapt Jackson 2 ObjectMapper to JsonParser."}
{"index": 9453, "repo": "spring-boot-3.1.1", "code": "public class JettyWebServer extends Object implements WebServer {\n\t// Return the port this server is listening on.\n\tint getPort();\n\t// Returns access to the underlying Jetty Server.\n\torg.eclipse.jetty.server.Server getServer();\n\t// Initiates a graceful shutdown of the web server.\n\tvoid shutDownGracefully(GracefulShutdownCallback callback);\n\t// Starts the web server.\n\tvoid start();\n\t// Stops the web server.\n\tvoid stop();\n}", "des": "WebServer that can be used to control a Jetty web server."}
{"index": 9454, "repo": "spring-boot-3.1.1", "code": "public class JksSslStoreBundle extends Object implements SslStoreBundle {\n\t// Return a key store generated from the trust material or null.\n\tKeyStore getKeyStore();\n\t// Return the password for the key in the key store or null.\n\tString getKeyStorePassword();\n\t// Return a trust store generated from the trust material or null.\n\tKeyStore getTrustStore();\n}", "des": "SslStoreBundle backed by a Java keystore."}
{"index": 9455, "repo": "spring-boot-3.1.1", "code": "public static enum JsonComponent.Scope extends Enum<JsonComponent.Scope> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic JsonComponent.Scope valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic JsonComponent.Scope[] values();\n}", "des": "The various scopes under which a serializer/deserializer can be registered."}
{"index": 9456, "repo": "spring-boot-3.1.1", "code": "public static class JsonMixinModuleEntries.Builder extends Object {\n\t// Add a mapping for the specified classes.\n\tJsonMixinModuleEntries.Builder and(Class<?> type, Class<?> mixinClass);\n\t// Add a mapping for the specified class names.\n\tJsonMixinModuleEntries.Builder and(String typeClassName, String mixinClassName);\n}", "des": "Builder for JsonMixinModuleEntries."}
{"index": 9457, "repo": "spring-boot-3.1.1", "code": "public interface JsonParser {\n\t// Parse the specified JSON string into a List.\n\tList<Object> parseList(String json);\n\t// Parse the specified JSON string into a Map.\n\tMap<String,Object> parseMap(String json);\n}", "des": "Parser that can read JSON formatted strings into Maps or Lists."}
{"index": 9458, "repo": "spring-boot-3.1.1", "code": "public class Jsp extends Object {\n\t// Return the class name of the servlet to use for JSPs.\n\tString getClassName();\n\t// Return the init parameters used to configure the JSP servlet.\n\tMap<String,String> getInitParameters();\n\t// Return whether the JSP servlet is registered.\n\tboolean getRegistered();\n\tvoid setClassName(String className);\n\tvoid setInitParameters(Map<String,String> initParameters);\n\tvoid setRegistered(boolean registered);\n}", "des": "Configuration for the server's JSP servlet."}
{"index": 9459, "repo": "spring-boot-3.1.1", "code": "public static final class LambdaSafe.Callback<C,A> extends LambdaSafe.LambdaSafeCallback<C,A,LambdaSafe.Callback<C,A>> {\n\t// Invoke the callback instance where the callback method returns void.\n\tvoid invoke(Consumer<C> invoker);\n\t// Invoke the callback instance where the callback method returns a result.\n\t<R> LambdaSafe.InvocationResult<R> invokeAnd(Function<C,R> invoker);\n}", "des": "Represents a single callback that can be invoked in a lambda safe way."}
{"index": 9460, "repo": "spring-boot-3.1.1", "code": "public static final class LambdaSafe.Callbacks<C,A> extends LambdaSafe.LambdaSafeCallback<C,A,LambdaSafe.Callbacks<C,A>> {\n\t// Invoke the callback instances where the callback method returns void.\n\tvoid invoke(Consumer<C> invoker);\n\t// Invoke the callback instances where the callback method returns a result.\n\t<R> Stream<R> invokeAnd(Function<C,R> invoker);\n}", "des": "Represents a collection of callbacks that can be invoked in a lambda safe way."}
{"index": 9461, "repo": "spring-boot-3.1.1", "code": "protected abstract static class LambdaSafe.LambdaSafeCallback<C,A,SELF extends LambdaSafe.LambdaSafeCallback<C,A,SELF>> extends Object {\n\tprotected final <R> LambdaSafe.InvocationResult<R> invoke(C callbackInstance, Supplier<R> supplier);\n\t// Use the specified logger source to report any lambda failures.\n\tSELF withLogger(Class<?> loggerSource);\n\t// Use the specified logger to report any lambda failures.\n\tSELF withLogger(org.apache.commons.logging.Log logger);\n}", "des": "Abstract base class for lambda safe callbacks."}
{"index": 9462, "repo": "spring-boot-3.1.1", "code": "@FunctionalInterface public interface LazyInitializationExcludeFilter {\n\t// Factory method that creates a filter for the given bean types.\n\tstatic LazyInitializationExcludeFilter forBeanTypes(Class<?>... types);\n\t// Returns true if the specified bean definition should be excluded from having lazy-init automatically set.\n\tboolean isExcluded(String beanName, org.springframework.beans.factory.config.BeanDefinition beanDefinition, Class<?> beanType);\n}", "des": "Filter that can be used to exclude beans definitions from having their lazy-init set by the LazyInitializationBeanFactoryPostProcessor."}
{"index": 9463, "repo": "spring-boot-3.1.1", "code": "public enum LivenessState extends Enum<LivenessState> implements AvailabilityState {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic LivenessState valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic LivenessState[] values();\n}", "des": "\"Liveness\" state of the application."}
{"index": 9464, "repo": "spring-boot-3.1.1", "code": "public class LogFile extends Object {\n\t// Apply log file details to LOG_PATH and LOG_FILE map entries.\n\tvoid applyTo(Properties properties);\n\t// Apply log file details to LOG_PATH and LOG_FILE system properties.\n\tvoid applyToSystemProperties();\n\t// Get a LogFile from the given Spring Environment.\n\tstatic LogFile get(org.springframework.core.env.PropertyResolver propertyResolver);\n}", "des": "A reference to a log output file."}
{"index": 9465, "repo": "spring-boot-3.1.1", "code": "public static enum LoggerConfiguration.ConfigurationScope extends Enum<LoggerConfiguration.ConfigurationScope> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic LoggerConfiguration.ConfigurationScope valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic LoggerConfiguration.ConfigurationScope[] values();\n}", "des": "Supported logger configurations scopes."}
{"index": 9466, "repo": "spring-boot-3.1.1", "code": "public interface LoggingSystemFactory {\n\t// Return a LoggingSystemFactory backed by spring.factories.\n\tstatic LoggingSystemFactory fromSpringFactories();\n\t// Return a logging system implementation or null if no logging system is available.\n\tLoggingSystem getLoggingSystem(ClassLoader classLoader);\n}", "des": "Factory class used by LoggingSystem.get(ClassLoader) to find an actual implementation."}
{"index": 9467, "repo": "spring-boot-3.1.1", "code": "public class MutuallyExclusiveConfigurationPropertiesException extends RuntimeException {\n\t// Return the names of the properties that have been configured.\n\tSet<String> getConfiguredNames();\n\t// Return the names of the properties that are mutually exclusive.\n\tSet<String> getMutuallyExclusiveNames();\n\t// Throw a new MutuallyExclusiveConfigurationPropertiesException if multiple non-null values are defined in a set of entries.\n\tstatic void throwIfMultipleNonNullValuesIn(Consumer<Map<String,Object>> entries);\n}", "des": "Exception thrown when more than one mutually exclusive configuration property has been configured."}
{"index": 9468, "repo": "spring-boot-3.1.1", "code": "public class NettyRSocketServer extends Object implements RSocketServer {\n\t// Return the address this server is listening on.\n\tInetSocketAddress address();\n\t// Starts the RSocket server.\n\tvoid start();\n\t// Stops the RSocket server.\n\tvoid stop();\n}", "des": "RSocketServer that is based on a Reactor Netty server."}
{"index": 9469, "repo": "spring-boot-3.1.1", "code": "public class NettyWebServer extends Object implements WebServer {\n\t// Return the port this server is listening on.\n\tint getPort();\n\tvoid setRouteProviders(List<NettyRouteProvider> routeProviders);\n\t// Initiates a graceful shutdown of the web server.\n\tvoid shutDownGracefully(GracefulShutdownCallback callback);\n\t// Starts the web server.\n\tvoid start();\n\t// Stops the web server.\n\tvoid stop();\n}", "des": "WebServer that can be used to control a Reactor Netty web server."}
{"index": 9470, "repo": "spring-boot-3.1.1", "code": "public interface Origin {\n\t// Find the Origin that an object originated from.\n\tstatic Origin from(Object source);\n\t// Return the parent origin for this instance if there is one.\n\tdefault Origin getParent();\n\t// Find the parents of the Origin that an object originated from.\n\tstatic List<Origin> parentsFrom(Object source);\n}", "des": "Interface that uniquely represents the origin of an item."}
{"index": 9471, "repo": "spring-boot-3.1.1", "code": "public final class OriginTrackedMapPropertySource extends org.springframework.core.env.MapPropertySource implements OriginLookup<String> {\n\t// Return the origin of the given key or null if the origin cannot be determined.\n\tOrigin getOrigin(String name);\n\tObject getProperty(String name);\n\t// Return true if this lookup is immutable and has contents that will never change.\n\tboolean isImmutable();\n}", "des": "OriginLookup backed by a Map containing OriginTrackedValues."}
{"index": 9472, "repo": "spring-boot-3.1.1", "code": "public class OriginTrackedValue extends Object implements OriginProvider {\n\tboolean equals(Object obj);\n\t// Return the source origin or null if the origin is not known.\n\tOrigin getOrigin();\n\t// Return the tracked value.\n\tObject getValue();\n\tstatic OriginTrackedValue of(Object value);\n\t// Create an OriginTrackedValue containing the specified value and origin.\n\tstatic OriginTrackedValue of(Object value, Origin origin);\n}", "des": "A wrapper for an Object value and Origin."}
{"index": 9473, "repo": "spring-boot-3.1.1", "code": "public class PemSslStoreBundle extends Object implements SslStoreBundle {\n\t// Return a key store generated from the trust material or null.\n\tKeyStore getKeyStore();\n\t// Return the password for the key in the key store or null.\n\tString getKeyStorePassword();\n\t// Return a trust store generated from the trust material or null.\n\tKeyStore getTrustStore();\n}", "des": "SslStoreBundle backed by PEM-encoded certificates and private keys."}
{"index": 9474, "repo": "spring-boot-3.1.1", "code": "public class Profiles extends Object implements Iterable<String> {\n\t// Return the accepted profiles.\n\tList<String> getAccepted();\n\t// Return the active profiles.\n\tList<String> getActive();\n\t// Return the default profiles.\n\tList<String> getDefault();\n\t// Return if the given profile is active.\n\tboolean isAccepted(String profile);\n\t// Return an iterator for all accepted profiles.\n\tIterator<String> iterator();\n}", "des": "Provides access to environment profiles that have either been set directly on the Environment or will be set based on configuration data property values."}
{"index": 9475, "repo": "spring-boot-3.1.1", "code": "public class PropertiesPropertySourceLoader extends Object implements PropertySourceLoader {\n\t// Returns the file extensions that the loader supports (excluding the '.').\n\tString[] getFileExtensions();\n\t// Load the resource into one or more property sources.\n\tList<org.springframework.core.env.PropertySource<?>> load(String name, org.springframework.core.io.Resource resource);\n}", "des": "Strategy to load '.properties' files into a PropertySource."}
{"index": 9476, "repo": "spring-boot-3.1.1", "code": "public interface PropertySourceLoader {\n\t// Returns the file extensions that the loader supports (excluding the '.').\n\tString[] getFileExtensions();\n\t// Load the resource into one or more property sources.\n\tList<org.springframework.core.env.PropertySource<?>> load(String name, org.springframework.core.io.Resource resource);\n}", "des": "Strategy interface located through SpringFactoriesLoader and used to load a PropertySource."}
{"index": 9477, "repo": "spring-boot-3.1.1", "code": "public class PropertySourceOrigin extends Object implements Origin {\n\t// Get an Origin for the given PropertySource and propertyName.\n\tstatic Origin get(org.springframework.core.env.PropertySource<?> propertySource, String name);\n\t// Return the property name that was used when obtaining the original value from the property source.\n\tString getPropertyName();\n\t// Return the origin PropertySource.\n\torg.springframework.core.env.PropertySource<?> getPropertySource();\n}", "des": "Origin from a PropertySource."}
{"index": 9478, "repo": "spring-boot-3.1.1", "code": "public class R2dbcScriptDatabaseInitializer extends AbstractScriptDatabaseInitializer {\n\t// Returns whether the database that is to be initialized is embedded.\n\tprotected boolean isEmbeddedDatabase();\n\t// Initialize the database by running the given scripts.\n\tprotected void runScripts(AbstractScriptDatabaseInitializer.Scripts scripts);\n}", "des": "An InitializingBean that initializes a database represented by an R2DBC ConnectionFactory."}
{"index": 9479, "repo": "spring-boot-3.1.1", "code": "public enum ReadinessState extends Enum<ReadinessState> implements AvailabilityState {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ReadinessState valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ReadinessState[] values();\n}", "des": "\"Readiness\" state of the application."}
{"index": 9480, "repo": "spring-boot-3.1.1", "code": "public interface RSocketServer {\n\t// Return the address this server is listening on.\n\tInetSocketAddress address();\n\t// Starts the RSocket server.\n\tvoid start();\n\t// Stops the RSocket server.\n\tvoid stop();\n}", "des": "Simple interface that represents a fully configured RSocket server."}
{"index": 9481, "repo": "spring-boot-3.1.1", "code": "public static enum RSocketServer.Transport extends Enum<RSocketServer.Transport> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RSocketServer.Transport valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RSocketServer.Transport[] values();\n}", "des": "Choice of transport protocol for the RSocket server."}
{"index": 9482, "repo": "spring-boot-3.1.1", "code": "public class RSocketServerInitializedEvent extends org.springframework.context.ApplicationEvent {\n\t// Access the RSocketServer.\n\tRSocketServer getServer();\n\t// Access the source of the event (an RSocketServer).\n\tRSocketServer getSource();\n}", "des": "Event to be published after the application context is refreshed and the RSocketServer is ready."}
{"index": 9483, "repo": "spring-boot-3.1.1", "code": "public enum SchemaManagement extends Enum<SchemaManagement> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SchemaManagement valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SchemaManagement[] values();\n}", "des": "An enumeration of the available schema management options."}
{"index": 9484, "repo": "spring-boot-3.1.1", "code": "public static class Session.Cookie extends Cookie {\n\t// Deprecated, for removal: This API element is subject to removal in a future version. since 3.0.0 without replacement\n\tString getComment();\n\t// Deprecated, for removal: This API element is subject to removal in a future version.\n\tvoid setComment(String comment);\n}", "des": "Session cookie properties."}
{"index": 9485, "repo": "spring-boot-3.1.1", "code": "public static enum Session.SessionTrackingMode extends Enum<Session.SessionTrackingMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Session.SessionTrackingMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Session.SessionTrackingMode[] values();\n}", "des": "Available session tracking modes (mirrors SessionTrackingMode."}
{"index": 9486, "repo": "spring-boot-3.1.1", "code": "public enum Shutdown extends Enum<Shutdown> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Shutdown valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Shutdown[] values();\n}", "des": "Configuration for shutting down a WebServer."}
{"index": 9487, "repo": "spring-boot-3.1.1", "code": "public static class SpringApplication.Augmented extends Object {\n\t// Run the application using the given args.\n\tSpringApplication.Running run(String... args);\n\t// Return a new SpringApplication.Augmented instance with additional sources that should be applied when the application runs.\n\tSpringApplication.Augmented with(Class<?>... sources);\n}", "des": "Used to configure and run an augmented SpringApplication where additional configuration should be applied."}
{"index": 9488, "repo": "spring-boot-3.1.1", "code": "public interface SpringApplicationAdminMXBean {\n\t// Return the value of the specified key from the application Environment.\n\tString getProperty(String key);\n\t// Specify if the application runs in an embedded web container.\n\tboolean isEmbeddedWebApplication();\n\t// Specify if the application has fully started and is now ready.\n\tboolean isReady();\n\t// Shutdown the application.\n\tvoid shutdown();\n}", "des": "An MBean contract to control and monitor a running SpringApplication over JMX."}
{"index": 9489, "repo": "spring-boot-3.1.1", "code": "public interface SpringApplicationShutdownHandlers {\n\t// Add an action to the handlers that will be run when the JVM exits.\n\tvoid add(Runnable action);\n\t// Remove a previously added an action so that it no longer runs when the JVM exits.\n\tvoid remove(Runnable action);\n}", "des": "Interface that can be used to add or remove code that should run when the JVM is shutdown."}
{"index": 9490, "repo": "spring-boot-3.1.1", "code": "public static enum Ssl.ClientAuth extends Enum<Ssl.ClientAuth> {\n\t// Map an optional Ssl.ClientAuth value to a different type.\n\tstatic <R> R map(Ssl.ClientAuth clientAuth, R none, R want, R need);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Ssl.ClientAuth valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Ssl.ClientAuth[] values();\n}", "des": "Client authentication types."}
{"index": 9491, "repo": "spring-boot-3.1.1", "code": "public interface SslStoreBundle {\n\t// Return a key store generated from the trust material or null.\n\tKeyStore getKeyStore();\n\t// Return the password for the key in the key store or null.\n\tString getKeyStorePassword();\n\t// Return a trust store generated from the trust material or null.\n\tKeyStore getTrustStore();\n\t// Factory method to create a new SslStoreBundle instance.\n\tstatic SslStoreBundle of(KeyStore keyStore, String keyStorePassword, KeyStore trustStore);\n}", "des": "A bundle of key and trust stores that can be used to establish an SSL connection."}
{"index": 9492, "repo": "spring-boot-3.1.1", "code": "public class StandardConfigDataResource extends ConfigDataResource {\n\tboolean equals(Object obj);\n\t// Return the profile or null if the resource is not profile specific.\n\tString getProfile();\n\t// Return the underlying Spring Resource being loaded.\n\torg.springframework.core.io.Resource getResource();\n}", "des": "ConfigDataResource backed by a Resource."}
{"index": 9493, "repo": "spring-boot-3.1.1", "code": "public class StartupTimeline extends Object {\n\t// Return the recorded events.\n\tList<StartupTimeline.TimelineEvent> getEvents();\n\t// Return the start time of this timeline.\n\tInstant getStartTime();\n}", "des": "Represent the timeline of steps recorded by BufferingApplicationStartup."}
{"index": 9494, "repo": "spring-boot-3.1.1", "code": "public static class StartupTimeline.TimelineEvent extends Object {\n\t// Return the duration of this event, i.e.\n\tDuration getDuration();\n\t// Return the end time of this event.\n\tInstant getEndTime();\n\t// Return the start time of this event.\n\tInstant getStartTime();\n\t// Return the StartupStep information for this event.\n\torg.springframework.core.metrics.StartupStep getStartupStep();\n}", "des": "Event on the current StartupTimeline."}
{"index": 9495, "repo": "spring-boot-3.1.1", "code": "public class TextResourceOrigin extends Object implements Origin {\n\tboolean equals(Object obj);\n\t// Return the location of the property within the source (if known).\n\tTextResourceOrigin.Location getLocation();\n\t// Return the parent origin for this instance if there is one.\n\tOrigin getParent();\n\t// Return the resource where the property originated.\n\torg.springframework.core.io.Resource getResource();\n}", "des": "Origin for an item loaded from a text resource."}
{"index": 9496, "repo": "spring-boot-3.1.1", "code": "public static final class TextResourceOrigin.Location extends Object {\n\tboolean equals(Object obj);\n\t// Return the column of the text resource where the property originated.\n\tint getColumn();\n\t// Return the line of the text resource where the property originated.\n\tint getLine();\n}", "des": "A location (line and column number) within the resource."}
{"index": 9497, "repo": "spring-boot-3.1.1", "code": "public class TomcatWebServer extends Object implements WebServer {\n\t// Return the port this server is listening on.\n\tint getPort();\n\t// Returns access to the underlying Tomcat server.\n\torg.apache.catalina.startup.Tomcat getTomcat();\n\t// Initiates a graceful shutdown of the web server.\n\tvoid shutDownGracefully(GracefulShutdownCallback callback);\n\t// Starts the web server.\n\tvoid start();\n\t// Stops the web server.\n\tvoid stop();\n}", "des": "WebServer that can be used to control a Tomcat web server."}
{"index": 9498, "repo": "spring-boot-3.1.1", "code": "public class UndertowWebServer extends Object implements WebServer {\n\tprotected io.undertow.server.HttpHandler createHttpHandler();\n\t// Return the port this server is listening on.\n\tint getPort();\n\tprotected String getStartLogMessage();\n\t// Initiates a graceful shutdown of the web server.\n\tvoid shutDownGracefully(GracefulShutdownCallback callback);\n\t// Starts the web server.\n\tvoid start();\n\t// Stops the web server.\n\tvoid stop();\n}", "des": "WebServer that can be used to control an Undertow web server."}
{"index": 9499, "repo": "spring-boot-3.1.1", "code": "public enum WebApplicationType extends Enum<WebApplicationType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic WebApplicationType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic WebApplicationType[] values();\n}", "des": "An enumeration of possible types of web application."}
{"index": 9500, "repo": "spring-boot-3.1.1", "code": "public interface WebServer {\n\t// Return the port this server is listening on.\n\tint getPort();\n\t// Initiates a graceful shutdown of the web server.\n\tdefault void shutDownGracefully(GracefulShutdownCallback callback);\n\t// Starts the web server.\n\tvoid start();\n\t// Stops the web server.\n\tvoid stop();\n}", "des": "Simple interface that represents a fully configured web server (for example Tomcat, Jetty, Netty)."}
{"index": 9501, "repo": "spring-boot-3.1.1", "code": "public abstract class WebServerInitializedEvent extends org.springframework.context.ApplicationEvent {\n\t// Access the application context that the server was created in.\n\tabstract WebServerApplicationContext getApplicationContext();\n\t// Access the source of the event (an WebServer).\n\tWebServer getSource();\n\t// Access the WebServer.\n\tWebServer getWebServer();\n}", "des": "Event to be published when the WebServer is ready."}
{"index": 9502, "repo": "spring-boot-3.1.1", "code": "public class YamlPropertySourceLoader extends Object implements PropertySourceLoader {\n\t// Returns the file extensions that the loader supports (excluding the '.').\n\tString[] getFileExtensions();\n\t// Load the resource into one or more property sources.\n\tList<org.springframework.core.env.PropertySource<?>> load(String name, org.springframework.core.io.Resource resource);\n}", "des": "Strategy to load '.yml' (or '.yaml') files into a PropertySource."}
{"index": 9503, "repo": "camel-base-4.0.0-RC1", "code": "public interface PropertiesParser {\n\t// While parsing the uri using parseUri method each parsed property found invokes this callback.\n\tString parseProperty(String key, String value, PropertiesLookup properties);\n\t// Parses the string and replaces the property placeholders with values from the given properties.\n\tString parseUri(String text, PropertiesLookup properties, boolean fallback, boolean keepUnresolvedOptional, boolean nestedPlaceholder);\n}", "des": "A parser to parse properties for a given input"}
{"index": 9504, "repo": "spring-security-crypto-6.1.2", "code": "public final class AesBytesEncryptor extends Object implements BytesEncryptor {\n\t// Decrypt the byte array.\n\tbyte[] decrypt(byte[] encryptedBytes);\n\t// Encrypt the byte array.\n\tbyte[] encrypt(byte[] bytes);\n}", "des": "Encryptor that uses AES encryption."}
{"index": 9505, "repo": "spring-security-crypto-6.1.2", "code": "public class BCryptPasswordEncoder extends Object implements PasswordEncoder {\n\t// Encode the raw password.\n\tString encode(CharSequence rawPassword);\n\t// Verify the encoded password obtained from storage matches the submitted raw password after it too is encoded.\n\tboolean matches(CharSequence rawPassword, String encodedPassword);\n\t// Returns true if the encoded password should be encoded again for better security, else false.\n\tboolean upgradeEncoding(String encodedPassword);\n}", "des": "Implementation of PasswordEncoder that uses the BCrypt strong hashing function."}
{"index": 9506, "repo": "spring-security-crypto-6.1.2", "code": "public static enum BCryptPasswordEncoder.BCryptVersion extends Enum<BCryptPasswordEncoder.BCryptVersion> {\n\tString getVersion();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic BCryptPasswordEncoder.BCryptVersion valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic BCryptPasswordEncoder.BCryptVersion[] values();\n}", "des": "Stores the default bcrypt version for use in configuration."}
{"index": 9507, "repo": "spring-security-crypto-6.1.2", "code": "public class BouncyCastleAesCbcBytesEncryptor extends Object {\n\t// Decrypt the byte array.\n\tbyte[] decrypt(byte[] encryptedBytes);\n\t// Encrypt the byte array.\n\tbyte[] encrypt(byte[] bytes);\n}", "des": "An Encryptor equivalent to AesBytesEncryptor using AesBytesEncryptor.CipherAlgorithm.CBC that uses Bouncy Castle instead of JCE."}
{"index": 9508, "repo": "spring-security-crypto-6.1.2", "code": "public class BouncyCastleAesGcmBytesEncryptor extends Object {\n\t// Decrypt the byte array.\n\tbyte[] decrypt(byte[] encryptedBytes);\n\t// Encrypt the byte array.\n\tbyte[] encrypt(byte[] bytes);\n}", "des": "An Encryptor equivalent to AesBytesEncryptor using AesBytesEncryptor.CipherAlgorithm.GCM that uses Bouncy Castle instead of JCE."}
{"index": 9509, "repo": "spring-security-crypto-6.1.2", "code": "public interface BytesEncryptor {\n\t// Decrypt the byte array.\n\tbyte[] decrypt(byte[] encryptedByteArray);\n\t// Encrypt the byte array.\n\tbyte[] encrypt(byte[] byteArray);\n}", "des": "Service interface for symmetric data encryption."}
{"index": 9510, "repo": "spring-security-crypto-6.1.2", "code": "public interface BytesKeyGenerator {\n\t// Generate a new key.\n\tbyte[] generateKey();\n\t// Get the length, in bytes, of keys created by this generator.\n\tint getKeyLength();\n}", "des": "A generator for unique byte array-based keys."}
{"index": 9511, "repo": "spring-security-crypto-6.1.2", "code": "public final class EncodingUtils extends Object {\n\t// Combine the individual byte arrays into one array.\n\tstatic byte[] concatenate(byte[]... arrays);\n\t// Extract a sub array of bytes out of the byte array.\n\tstatic byte[] subArray(byte[] array, int beginIndex, int endIndex);\n}", "des": "Static helper for encoding data."}
{"index": 9512, "repo": "spring-security-crypto-6.1.2", "code": "public interface PasswordEncoder {\n\t// Encode the raw password.\n\tString encode(CharSequence rawPassword);\n\t// Verify the encoded password obtained from storage matches the submitted raw password after it too is encoded.\n\tboolean matches(CharSequence rawPassword, String encodedPassword);\n\t// Returns true if the encoded password should be encoded again for better security, else false.\n\tdefault boolean upgradeEncoding(String encodedPassword);\n}", "des": "Service interface for encoding passwords."}
{"index": 9513, "repo": "spring-security-crypto-6.1.2", "code": "public static enum Pbkdf2PasswordEncoder.SecretKeyFactoryAlgorithm extends Enum<Pbkdf2PasswordEncoder.SecretKeyFactoryAlgorithm> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Pbkdf2PasswordEncoder.SecretKeyFactoryAlgorithm valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Pbkdf2PasswordEncoder.SecretKeyFactoryAlgorithm[] values();\n}", "des": "The Algorithm used for creating the SecretKeyFactory"}
{"index": 9514, "repo": "spring-security-crypto-6.1.2", "code": "public interface TextEncryptor {\n\t// Decrypt the encrypted text string.\n\tString decrypt(String encryptedText);\n\t// Encrypt the raw text string.\n\tString encrypt(String text);\n}", "des": "Service interface for symmetric encryption of text strings."}
{"index": 9515, "repo": "spring-security-crypto-6.1.2", "code": "public final class Utf8 extends Object {\n\t// Decode the bytes in UTF-8 form into a String.\n\tstatic String decode(byte[] bytes);\n\t// Get the bytes of the String in UTF-8 encoded form.\n\tstatic byte[] encode(CharSequence string);\n}", "des": "UTF-8 Charset encoder/decoder."}
{"index": 9516, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum CompressionType extends Enum<CompressionType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic CompressionType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic CompressionType[] values();\n}", "des": "The compression type that can be specified on a Producer."}
{"index": 9517, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum ConsumerCryptoFailureAction extends Enum<ConsumerCryptoFailureAction> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ConsumerCryptoFailureAction valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ConsumerCryptoFailureAction[] values();\n}", "des": "The action a consumer should take when a consumer receives a message that it cannot decrypt."}
{"index": 9518, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public interface ConsumerEventListener extends Serializable {\n\t// Notified when the consumer group is changed, and the consumer becomes the active consumer.\n\tvoid becameActive(Consumer<?> consumer, int partitionId);\n\t// Notified when the consumer group is changed, and the consumer is still inactive or becomes inactive.\n\tvoid becameInactive(Consumer<?> consumer, int partitionId);\n}", "des": "Listener on the consumer state changes."}
{"index": 9519, "repo": "pulsar-client-api-3.0.0", "code": "public interface GenericObject {\n\t// Return the internal native representation of the Object, like a AVRO GenericRecord, a String or a byte[].\n\tObject getNativeObject();\n\t// Return the schema tyoe.\n\tSchemaType getSchemaType();\n}", "des": "This is an abstraction over the logical value that is store into a Message."}
{"index": 9520, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public interface GenericRecordBuilder {\n\t// Build a generic record.\n\tGenericRecord build();\n\t// Clears the value of the given field.\n\tGenericRecordBuilder clear(String fieldName);\n\t// Clears the value of the given field.\n\tGenericRecordBuilder clear(Field field);\n\t// Sets the value of a field.\n\tGenericRecordBuilder set(String fieldName, Object value);\n\t// Sets the value of a field.\n\tGenericRecordBuilder set(Field field, Object value);\n}", "des": "Generic Record Builder to build a GenericRecord."}
{"index": 9521, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public interface GenericSchema<T extends GenericRecord> extends Schema<T> {\n\t// Returns the list of fields.\n\tList<Field> getFields();\n\t// Create a builder to build GenericRecord.\n\tGenericRecordBuilder newRecordBuilder();\n\tstatic GenericSchema of(SchemaInfo schemaInfo);\n\tstatic GenericSchema of(SchemaInfo schemaInfo, boolean useProvidedSchemaAsReaderSchema);\n}", "des": "A schema that serializes and deserializes between GenericRecord and bytes."}
{"index": 9522, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum HashingScheme extends Enum<HashingScheme> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic HashingScheme valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic HashingScheme[] values();\n}", "des": "Standard hashing functions available when choosing the partition to use for a particular message."}
{"index": 9523, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum KeySharedMode extends Enum<KeySharedMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic KeySharedMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic KeySharedMode[] values();\n}", "des": "KeyShared mode of KeyShared subscription."}
{"index": 9524, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public class KeyValue<K,V> extends Object {\n\t// Decode the value into a key/value pair.\n\tstatic <K, V> KeyValue<K,V> decode(byte[] data, KeyValue.KeyValueDecoder<K,V> decoder);\n\t// Encode a key and value pair into a bytes array.\n\tstatic <K, V> byte[] encode(K key, Schema<K> keyWriter, V value, Schema<V> valueWriter);\n\tboolean equals(Object obj);\n\tK getKey();\n\tV getValue();\n}", "des": "A simple KeyValue class."}
{"index": 9525, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum KeyValueEncodingType extends Enum<KeyValueEncodingType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic KeyValueEncodingType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic KeyValueEncodingType[] values();\n}", "des": "Encoding types of supported KeyValueSchema for Pulsar messages."}
{"index": 9526, "repo": "pulsar-client-api-3.0.0", "code": "public interface KeyValueSchema<K,V> extends Schema<KeyValue<K,V>> {\n\t// Get the Schema of the Key.\n\tSchema<K> getKeySchema();\n\t// Get the KeyValueEncodingType.\n\tKeyValueEncodingType getKeyValueEncodingType();\n\t// Get the Schema of the Value.\n\tSchema<V> getValueSchema();\n}", "des": "This interface models a Schema that is composed of two parts."}
{"index": 9527, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public interface MessageId extends Comparable<MessageId>, Serializable {\n\t// De-serialize a message id from a byte array.\n\tstatic MessageId fromByteArray(byte[] data);\n\t// De-serialize a message id from a byte array with its topic information attached.\n\tstatic MessageId fromByteArrayWithTopic(byte[] data, String topicName);\n\t// Serialize the message ID into a byte array.\n\tbyte[] toByteArray();\n}", "des": "Opaque unique identifier of a single message"}
{"index": 9528, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public interface MessageListener<T> extends Serializable {\n\t// Get the notification when a topic is terminated.\n\tdefault void reachedEndOfTopic(Consumer<T> consumer);\n\t// This method is called whenever a new message is received.\n\tvoid received(Consumer<T> consumer, Message<T> msg);\n}", "des": "A listener that will be called in order for every message received."}
{"index": 9529, "repo": "pulsar-client-api-3.0.0", "code": "public interface MessagePayload {\n\t// Copy the bytes of the payload into the byte array.\n\tbyte[] copiedBuffer();\n\t// Release the resources if necessary.\n\tdefault void release();\n}", "des": "The abstraction of a message's payload."}
{"index": 9530, "repo": "pulsar-client-api-3.0.0", "code": "public interface MessagePayloadFactory {\n\t// Create a payload whose underlying buffer refers to a byte array.\n\tMessagePayload wrap(byte[] bytes);\n\t// Create a payload whose underlying buffer refers to a NIO buffer.\n\tMessagePayload wrap(ByteBuffer buffer);\n}", "des": "The factory class of MessagePayload."}
{"index": 9531, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public interface MessageRouter extends Serializable {\n\t// Deprecated. since 1.22.0.\n\tdefault int choosePartition(Message<?> msg);\n\t// Choose a partition based on msg and the topic metadata.\n\tdefault int choosePartition(Message<?> msg, TopicMetadata metadata);\n}", "des": "Interface for custom message router that can be passed to a producer to select the partition that a particular messsage should be published on."}
{"index": 9532, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum MessageRoutingMode extends Enum<MessageRoutingMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic MessageRoutingMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic MessageRoutingMode[] values();\n}", "des": "Default routing mode for messages to partition."}
{"index": 9533, "repo": "pulsar-client-api-3.0.0", "code": "public enum ProducerAccessMode extends Enum<ProducerAccessMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ProducerAccessMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ProducerAccessMode[] values();\n}", "des": "The type of access to the topic that the producer requires."}
{"index": 9534, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum ProducerCryptoFailureAction extends Enum<ProducerCryptoFailureAction> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ProducerCryptoFailureAction valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ProducerCryptoFailureAction[] values();\n}", "des": "The action the producer will take in case of encryption failures."}
{"index": 9535, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum ProxyProtocol extends Enum<ProxyProtocol> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ProxyProtocol valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ProxyProtocol[] values();\n}", "des": "Protcol type to determine type of proxy routing when client connects to proxy using {@link ClientBuilder::proxyServiceUrl}."}
{"index": 9536, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public interface ReaderInterceptor<T> {\n\t// This is called just before the message is returned by Reader.readNext(), ReaderListener.received(Reader, Message) or the CompletableFuture returned by Reader.readNextAsync() completes.\n\tMessage<T> beforeRead(Reader<T> reader, Message<T> message);\n\t// Close the interceptor.\n\tvoid close();\n\t// This method is called when partitions of the topic (partitioned-topic) changes.\n\tdefault void onPartitionsChange(String topicName, int partitions);\n}", "des": "Reader interceptor."}
{"index": 9537, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public interface ReaderListener<T> extends Serializable {\n\t// Get the notification when a topic is terminated.\n\tdefault void reachedEndOfTopic(Reader<T> reader);\n\t// This method is called whenever a new message is received.\n\tvoid received(Reader<T> reader, Message<T> msg);\n}", "des": "A listener that will be called in order for every message received."}
{"index": 9538, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum RegexSubscriptionMode extends Enum<RegexSubscriptionMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RegexSubscriptionMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RegexSubscriptionMode[] values();\n}", "des": "When subscribing to topics using a regular expression, one can specify to only pick a certain type of topics."}
{"index": 9539, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public interface SchemaInfo {\n\tstatic SchemaInfo.SchemaInfoBuilder builder();\n\tString getName();\n\t// Additional properties of the schema definition (implementation defined).\n\tMap<String,String> getProperties();\n\t// The schema data in AVRO JSON format.\n\tbyte[] getSchema();\n\tString getSchemaDefinition();\n\t// The created time of schema.\n\tlong getTimestamp();\n\t// The type of schema (AVRO, JSON, PROTOBUF, etc..).\n\tSchemaType getType();\n}", "des": "Information about the schema."}
{"index": 9540, "repo": "pulsar-client-api-3.0.0", "code": "@Private @Stable public interface SchemaInfoProvider {\n\t// Retrieve the latest schema info.\n\tCompletableFuture<SchemaInfo> getLatestSchema();\n\t// Retrieve the schema info of a given schemaVersion.\n\tCompletableFuture<SchemaInfo> getSchemaByVersion(byte[] schemaVersion);\n\t// Retrieve the topic name.\n\tString getTopicName();\n}", "des": "Schema Provider."}
{"index": 9541, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public interface ServiceUrlProvider extends AutoCloseable {\n\t// Close the resource that the provider allocated.\n\tdefault void close();\n\t// Get the current service URL the Pulsar client should connect to.\n\tString getServiceUrl();\n\t// Initialize the service url provider with Pulsar client instance.\n\tvoid initialize(PulsarClient client);\n}", "des": "The provider to provide the service url."}
{"index": 9542, "repo": "pulsar-client-api-3.0.0", "code": "public enum SizeUnit extends Enum<SizeUnit> {\n\tlong toBytes(long value);\n\tlong toGigaBytes(long value);\n\tlong toKiloBytes(long value);\n\tlong toMegaBytes(long value);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SizeUnit valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SizeUnit[] values();\n}", "des": "Size unit converter."}
{"index": 9543, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum SubscriptionInitialPosition extends Enum<SubscriptionInitialPosition> {\n\tfinal int getValue();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SubscriptionInitialPosition valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SubscriptionInitialPosition[] values();\n}", "des": "When creating a consumer, if the subscription does not exist, a new subscription will be created."}
{"index": 9544, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum SubscriptionMode extends Enum<SubscriptionMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SubscriptionMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SubscriptionMode[] values();\n}", "des": "Types of subscription mode supported by Pulsar."}
{"index": 9545, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Stable public enum SubscriptionType extends Enum<SubscriptionType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SubscriptionType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SubscriptionType[] values();\n}", "des": "Types of subscription supported by Pulsar."}
{"index": 9546, "repo": "pulsar-client-api-3.0.0", "code": "public interface TopicConsumerBuilder<T> {\n\t// Complete the configuration of the topic specific options and return control back to the ConsumerBuilder instance.\n\tConsumerBuilder<T> build();\n\t// Configure the priority level of this topic.\n\tTopicConsumerBuilder<T> priorityLevel(int priorityLevel);\n}", "des": "TopicConsumerBuilder is used to configure topic specific options to override those set at the ConsumerBuilder level."}
{"index": 9547, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Evolving public interface Transaction {\n\t// Abort the transaction.\n\tCompletableFuture<Void> abort();\n\t// Commit the transaction.\n\tCompletableFuture<Void> commit();\n\t// Get transaction state.\n\tTransaction.State getState();\n\t// Get TxnID of the transaction.\n\tTxnID getTxnID();\n}", "des": "The class represents a transaction within Pulsar."}
{"index": 9548, "repo": "pulsar-client-api-3.0.0", "code": "@Public @Evolving public interface TransactionBuilder {\n\t// Build the transaction with the configured settings.\n\tCompletableFuture<Transaction> build();\n\t// Configure the maximum amount of time that the transaction coordinator will for a transaction to be completed by the client before proactively aborting the ongoing transaction.\n\tTransactionBuilder withTransactionTimeout(long timeout, TimeUnit timeoutUnit);\n}", "des": "The builder to build a transaction for Pulsar."}
{"index": 9549, "repo": "pulsar-client-api-3.0.0", "code": "public static enum TransactionCoordinatorClient.State extends Enum<TransactionCoordinatorClient.State> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TransactionCoordinatorClient.State valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TransactionCoordinatorClient.State[] values();\n}", "des": "State of the transaction coordinator client."}
{"index": 9550, "repo": "spring-batch-core-5.0.2", "code": "public class ApplicationContextJobFactory extends Object implements JobFactory {\n\t// Create an ApplicationContext from the factory provided and pull out a bean with the name given during initialization.\n\tfinal Job createJob();\n\t// Return the name of the instance passed in on initialization.\n\tString getJobName();\n}", "des": "A JobFactory that creates its own ApplicationContext and pulls a bean out when asked to create a Job."}
{"index": 9551, "repo": "spring-batch-core-5.0.2", "code": "public enum BatchJobObservation extends Enum<BatchJobObservation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic BatchJobObservation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic BatchJobObservation[] values();\n}", "des": "Observation created around a Job execution."}
{"index": 9552, "repo": "spring-batch-core-5.0.2", "code": "public enum BatchStepObservation extends Enum<BatchStepObservation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic BatchStepObservation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic BatchStepObservation[] values();\n}", "des": "Observation created around a step execution."}
{"index": 9553, "repo": "spring-batch-core-5.0.2", "code": "public class CallableTaskletAdapter extends Object implements Tasklet, org.springframework.beans.factory.InitializingBean {\n\t// Assert that the callable is set.\n\tvoid afterPropertiesSet();\n\t// Execute the provided Callable and return its RepeatStatus.\n\tRepeatStatus execute(StepContribution contribution, ChunkContext chunkContext);\n\t// Public setter for the Callable.\n\tvoid setCallable(Callable<RepeatStatus> callable);\n}", "des": "Adapts a Callable<RepeatStatus> to the Tasklet interface."}
{"index": 9554, "repo": "spring-batch-core-5.0.2", "code": "public interface ChunkListener extends StepListener {\n\t// Callback after the chunk is executed, outside the transaction.\n\tdefault void afterChunk(ChunkContext context);\n\t// Callback after a chunk has been marked for rollback.\n\tdefault void afterChunkError(ChunkContext context);\n\t// Callback before the chunk is executed, but inside the transaction.\n\tdefault void beforeChunk(ChunkContext context);\n}", "des": "Listener interface for the lifecycle of a chunk."}
{"index": 9555, "repo": "spring-batch-core-5.0.2", "code": "public class ChunkOrientedTasklet<I> extends Object implements Tasklet {\n\t// Given the current context in the form of a step contribution, do whatever is necessary to process this unit inside a transaction.\n\tRepeatStatus execute(StepContribution contribution, ChunkContext chunkContext);\n\t// Flag to indicate that items should be buffered once read.\n\tvoid setBuffering(boolean buffering);\n}", "des": "A Tasklet implementing variations on read-process-write item handling."}
{"index": 9556, "repo": "spring-batch-core-5.0.2", "code": "public class CompositeJobParametersValidator extends Object implements JobParametersValidator, org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\t// Public setter for the validators\n\tvoid setValidators(List<JobParametersValidator> validators);\n\t// Validates the JobParameters according to the injected JobParameterValidators Validation stops and exception is thrown on first validation error\n\tvoid validate(JobParameters parameters);\n}", "des": "Composite JobParametersValidator that passes the job parameters through a sequence of injected JobParametersValidators"}
{"index": 9557, "repo": "spring-batch-core-5.0.2", "code": "public class DecisionState extends AbstractState {\n\t// Handle some business or processing logic and return a status that can be used to drive a flow to the next State.\n\tFlowExecutionStatus handle(FlowExecutor executor);\n\t// Inquire as to whether a State is an end state.\n\tboolean isEndState();\n}", "des": "State that requires a decider to make the status decision."}
{"index": 9558, "repo": "spring-batch-core-5.0.2", "code": "public class DefaultExecutionContextSerializer extends Object implements ExecutionContextSerializer {\n\t// Deserializes an execution context from the provided InputStream.\n\tMap<String,Object> deserialize(InputStream inputStream);\n\t// Serializes an execution context to the provided OutputStream.\n\tvoid serialize(Map<String,Object> context, OutputStream out);\n}", "des": "An implementation of the ExecutionContextSerializer that produces/consumes Base64 content."}
{"index": 9559, "repo": "spring-batch-core-5.0.2", "code": "public class DefaultItemFailureHandler extends ItemListenerSupport<Object,Object> {\n\t// Called if an error occurs while trying to read.\n\tvoid onReadError(Exception ex);\n\t// Called if an error occurs while trying to write.\n\tvoid onWriteError(Exception ex, Chunk<? extends Object> item);\n}", "des": "Default implementation of the ItemListenerSupport class that writes all exceptions via commons logging."}
{"index": 9560, "repo": "spring-batch-core-5.0.2", "code": "public class EndState extends AbstractState {\n\tprotected String getCode();\n\tprotected FlowExecutionStatus getStatus();\n\t// Return the FlowExecutionStatus stored.\n\tFlowExecutionStatus handle(FlowExecutor executor);\n\tprotected boolean isAbandon();\n\t// Inquire as to whether a State is an end state.\n\tboolean isEndState();\n\t// Performs any logic to update the exit status for the current flow.\n\tprotected void setExitStatus(FlowExecutor executor, String code);\n}", "des": "State implementation for ending a job if it is in progress and continuing if just starting."}
{"index": 9561, "repo": "spring-batch-core-5.0.2", "code": "public class Entity extends Object implements Serializable {\n\t// Attempt to establish identity based on id if both exist.\n\tboolean equals(Object other);\n\tLong getId();\n\tInteger getVersion();\n\t// Increment the version number.\n\tvoid incrementVersion();\n\tvoid setId(Long id);\n\t// Public setter for the version.\n\tvoid setVersion(Integer version);\n}", "des": "Batch Domain Entity class."}
{"index": 9562, "repo": "spring-batch-core-5.0.2", "code": "public class ExceptionClassifierSkipPolicy extends Object implements SkipPolicy {\n\t// The classifier that will be used to choose a delegate policy.\n\tvoid setExceptionClassifier(org.springframework.classify.SubclassClassifier<Throwable,SkipPolicy> classifier);\n\t// Setter for policy map.\n\tvoid setPolicyMap(Map<Class<? extends Throwable>,SkipPolicy> policyMap);\n\t// Consult the classifier and find a delegate policy, and then use that to determine the outcome.\n\tboolean shouldSkip(Throwable t, long skipCount);\n}", "des": "A SkipPolicy that depends on an exception classifier to make its decision, and then delegates to the classifier result."}
{"index": 9563, "repo": "spring-batch-core-5.0.2", "code": "public class ExecutionContextPromotionListener extends Object implements StepExecutionListener, org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\t// Give a listener a chance to modify the exit status from a step.\n\tExitStatus afterStep(StepExecution stepExecution);\n\tvoid setKeys(String[] keys);\n\tvoid setStatuses(String[] statuses);\n\t// If set to TRUE, the listener will throw an exception if any 'key' is not found in the Step ExecutionContext.\n\tvoid setStrict(boolean strict);\n}", "des": "This class can be used to automatically promote items from the Step ExecutionContext to the Job ExecutionContext at the end of a step."}
{"index": 9564, "repo": "spring-batch-core-5.0.2", "code": "public class FlowExecutionStatus extends Object implements Comparable<FlowExecutionStatus> {\n\t// Create an ordering on FlowExecutionStatus instances by comparing their statuses.\n\tint compareTo(FlowExecutionStatus other);\n\t// Check the equality of the statuses.\n\tboolean equals(Object object);\n\tString getName();\n\tboolean isEnd();\n\tboolean isFail();\n\tboolean isStop();\n}", "des": "Represents the status of FlowExecution."}
{"index": 9565, "repo": "spring-batch-core-5.0.2", "code": "public class FlowJob extends AbstractJob {\n\t// Extension point for subclasses allowing them to concentrate on processing logic and ignore listeners and repository calls.\n\tprotected void doExecute(JobExecution execution);\n\t// Retrieve the step with the given name.\n\tStep getStep(String stepName);\n\t// Retrieve the step names.\n\tCollection<String> getStepNames();\n\t// Public setter for the flow.\n\tvoid setFlow(Flow flow);\n}", "des": "Implementation of the Job interface that allows for complex flows of steps, rather than requiring sequential execution."}
{"index": 9566, "repo": "spring-batch-core-5.0.2", "code": "public class FlowState extends AbstractState implements FlowHolder {\n\tCollection<Flow> getFlows();\n\t// Handle some business or processing logic and return a status that can be used to drive a flow to the next State.\n\tFlowExecutionStatus handle(FlowExecutor executor);\n\t// Inquire as to whether a State is an end state.\n\tboolean isEndState();\n}", "des": "State that delegates to a Flow"}
{"index": 9567, "repo": "spring-batch-core-5.0.2", "code": "public class FlowStep extends AbstractStep {\n\t// Ensure that the flow is set.\n\tvoid afterPropertiesSet();\n\t// Delegate to the flow provided for the execution of the step.\n\tprotected void doExecute(StepExecution stepExecution);\n\t// Public setter for the flow.\n\tvoid setFlow(Flow flow);\n}", "des": "A Step implementation that delegates to a Flow."}
{"index": 9568, "repo": "spring-batch-core-5.0.2", "code": "public class FlowStepBuilder extends StepBuilderHelper<FlowStepBuilder> {\n\t// Build a step that executes the flow provided, normally composed of other steps.\n\tStep build();\n\t// Provide a flow to execute during the step.\n\tFlowStepBuilder flow(Flow flow);\n\tprotected FlowStepBuilder self();\n}", "des": "A step builder for FlowStep instances."}
{"index": 9569, "repo": "spring-batch-core-5.0.2", "code": "public interface ItemProcessListener<T,S> extends StepListener {\n\t// Called after ItemProcessor.process(Object) returns.\n\tdefault void afterProcess(T item, S result);\n\t// Called before ItemProcessor.process(Object).\n\tdefault void beforeProcess(T item);\n\t// Called if an exception was thrown from ItemProcessor.process(Object).\n\tdefault void onProcessError(T item, Exception e);\n}", "des": "Listener interface for the processing of an item."}
{"index": 9570, "repo": "spring-batch-core-5.0.2", "code": "public interface ItemReadListener<T> extends StepListener {\n\t// Called after ItemReader.read().\n\tdefault void afterRead(T item);\n\t// Called before ItemReader.read()\n\tdefault void beforeRead();\n\t// Called if an error occurs while trying to read.\n\tdefault void onReadError(Exception ex);\n}", "des": "Listener interface around the reading of an item."}
{"index": 9571, "repo": "spring-batch-core-5.0.2", "code": "public interface ItemWriteListener<S> extends StepListener {\n\t// Called after ItemWriter.write(Chunk).\n\tdefault void afterWrite(Chunk<? extends S> items);\n\t// Called before ItemWriter.write(Chunk)\n\tdefault void beforeWrite(Chunk<? extends S> items);\n\t// Called if an error occurs while trying to write.\n\tdefault void onWriteError(Exception exception, Chunk<? extends S> items);\n}", "des": "Listener interface for the writing of items."}
{"index": 9572, "repo": "spring-batch-core-5.0.2", "code": "public class JobBuilder extends JobBuilderHelper<JobBuilder> {\n\t// Create a new job builder that will execute a step or sequence of steps.\n\tJobFlowBuilder flow(Step step);\n\t// Create a new job builder that will execute a flow.\n\tJobFlowBuilder start(Flow flow);\n\t// Create a new job builder that will execute a step or sequence of steps.\n\tSimpleJobBuilder start(Step step);\n}", "des": "Convenience for building jobs of various kinds."}
{"index": 9573, "repo": "spring-batch-core-5.0.2", "code": "public interface JobExecutionListener {\n\t// Callback after completion of a job.\n\tdefault void afterJob(JobExecution jobExecution);\n\t// Callback before a job executes.\n\tdefault void beforeJob(JobExecution jobExecution);\n}", "des": "Provide callbacks at specific points in the lifecycle of a Job."}
{"index": 9574, "repo": "spring-batch-core-5.0.2", "code": "public class JobExecutionListenerParser extends AbstractListenerParser {\n\t// Gets the bean class.\n\tprotected Class<? extends AbstractListenerFactoryBean<?>> getBeanClass();\n\t// Gets the metadata values.\n\tprotected ListenerMetaData[] getMetaDataValues();\n}", "des": "Parser for a step listener element."}
{"index": 9575, "repo": "spring-batch-core-5.0.2", "code": "public class JobFactoryRegistrationListener extends Object {\n\t// Take the JobFactory provided and register it with the JobRegistry.\n\tvoid bind(JobFactory jobFactory, Map<String,?> params);\n\t// Public setter for a JobRegistry to use for all the bind and unbind events.\n\tvoid setJobRegistry(JobRegistry jobRegistry);\n\t// Take the provided JobFactory and unregister it with the JobRegistry.\n\tvoid unbind(JobFactory jobFactory, Map<String,?> params);\n}", "des": "Generic service that can bind and unbind a JobFactory in a JobRegistry."}
{"index": 9576, "repo": "spring-batch-core-5.0.2", "code": "public interface JobParametersConverter {\n\t// Get a new JobParameters instance.\n\tJobParameters getJobParameters(Properties properties);\n\t// The inverse operation: get a Properties instance.\n\tProperties getProperties(JobParameters params);\n}", "des": "A factory for JobParameters instances."}
{"index": 9577, "repo": "spring-batch-core-5.0.2", "code": "public interface JobRegistry extends ListableJobLocator {\n\t// Registers a Job at runtime.\n\tvoid register(JobFactory jobFactory);\n\t// Unregisters a previously registered Job.\n\tvoid unregister(String jobName);\n}", "des": "A runtime service registry interface for registering job configurations by name."}
{"index": 9578, "repo": "spring-batch-core-5.0.2", "code": "public class JobStepBuilder extends StepBuilderHelper<JobStepBuilder> {\n\t// Build a step from the job provided.\n\tStep build();\n\t// Provide a job to execute during the step.\n\tJobStepBuilder job(Job job);\n\t// Add a job launcher.\n\tJobStepBuilder launcher(JobLauncher jobLauncher);\n\t// Provide a job parameters extractor.\n\tJobStepBuilder parametersExtractor(JobParametersExtractor jobParametersExtractor);\n\tprotected JobStepBuilder self();\n}", "des": "A step builder for JobStep instances."}
{"index": 9579, "repo": "spring-batch-core-5.0.2", "code": "public class JsonJobParametersConverter extends DefaultJobParametersConverter {\n\t// Decode a job parameter from a string.\n\tprotected JobParameter decode(String encodedJobParameter);\n\t// Encode a job parameter to a string.\n\tprotected String encode(JobParameter<?> jobParameter);\n}", "des": "Converter for JobParameters instances that uses a JSON naming convention for converting job parameters."}
{"index": 9580, "repo": "spring-batch-core-5.0.2", "code": "public class MapJobRegistry extends Object implements JobRegistry {\n\t// Locates a Job at runtime.\n\tJob getJob(String name);\n\t// Provides an unmodifiable view of the job names.\n\tSet<String> getJobNames();\n\t// Registers a Job at runtime.\n\tvoid register(JobFactory jobFactory);\n\t// Unregisters a previously registered Job.\n\tvoid unregister(String name);\n}", "des": "Simple, thread-safe, map-based implementation of JobRegistry."}
{"index": 9581, "repo": "spring-batch-core-5.0.2", "code": "public class MapStepRegistry extends Object implements StepRegistry {\n\t// Returns the Step of the specified job based on its name.\n\tStep getStep(String jobName, String stepName);\n\t// Registers all the step instances of the given job.\n\tvoid register(String jobName, Collection<Step> steps);\n\t// Unregisters all the steps instances of the given job.\n\tvoid unregisterStepsFromJob(String jobName);\n}", "des": "Simple map-based implementation of StepRegistry."}
{"index": 9582, "repo": "spring-batch-core-5.0.2", "code": "public class MethodInvokingTaskletAdapter extends AbstractMethodInvokingDelegator<Object> implements Tasklet {\n\t// Delegate execution to the target object and translate the return value to an ExitStatus by invoking a method in the delegate POJO.\n\tRepeatStatus execute(StepContribution contribution, ChunkContext chunkContext);\n\t// If the result is an ExitStatus already just return that, otherwise return ExitStatus.COMPLETED.\n\tprotected ExitStatus mapResult(Object result);\n}", "des": "A Tasklet that wraps a method in a POJO."}
{"index": 9583, "repo": "spring-batch-core-5.0.2", "code": "public class MultiResourcePartitioner extends Object implements Partitioner {\n\t// Assign the filename of each of the injected resources to an ExecutionContext.\n\tMap<String,ExecutionContext> partition(int gridSize);\n\t// The name of the key for the file name in each ExecutionContext.\n\tvoid setKeyName(String keyName);\n\t// The resources to assign to each partition.\n\tvoid setResources(org.springframework.core.io.Resource[] resources);\n}", "des": "Implementation of Partitioner that locates multiple resources and associates their file names with execution context keys."}
{"index": 9584, "repo": "spring-batch-core-5.0.2", "code": "public class ReferenceJobFactory extends Object implements JobFactory {\n\t// Return the instance that was passed in on initialization.\n\tfinal Job createJob();\n\t// Return the name of the instance that was passed in on initialization.\n\tString getJobName();\n}", "des": "A JobFactory that keeps a reference to a Job."}
{"index": 9585, "repo": "spring-batch-core-5.0.2", "code": "public class RunIdIncrementer extends Object implements JobParametersIncrementer {\n\t// Increment the run.id parameter (starting with 1).\n\tJobParameters getNext(JobParameters parameters);\n\t// The name of the run id in the job parameters.\n\tvoid setKey(String key);\n}", "des": "This incrementer increments a \"run.id\" parameter of type Long from the given job parameters."}
{"index": 9586, "repo": "spring-batch-core-5.0.2", "code": "public static class SimpleFlowFactoryBean.DelegateState extends AbstractState implements FlowHolder {\n\tCollection<Flow> getFlows();\n\t// Gets the current state.\n\tState getState();\n\t// Handle some business or processing logic and return a status that can be used to drive a flow to the next State.\n\tFlowExecutionStatus handle(FlowExecutor executor);\n\t// Inquire as to whether a State is an end state.\n\tboolean isEndState();\n}", "des": "A State that proxies a delegate and changes its name but leaves its behavior unchanged."}
{"index": 9587, "repo": "spring-batch-core-5.0.2", "code": "public class SimpleJvmExitCodeMapper extends Object implements ExitCodeMapper {\n\tMap<String,Integer> getMapping();\n\t// Get the operating system exit status that matches a certain Batch Framework exit code\n\tint intValue(String exitCode);\n\t// Supply the ExitCodeMappings\n\tvoid setMapping(Map<String,Integer> exitCodeMap);\n}", "des": "An implementation of ExitCodeMapper that can be configured through a map from batch exit codes (String) to integer results."}
{"index": 9588, "repo": "spring-batch-core-5.0.2", "code": "public interface SkipListener<T,S> extends StepListener {\n\t// This item failed on processing with the given exception, and a skip was called for.\n\tdefault void onSkipInProcess(T item, Throwable t);\n\t// Callback for a failure on read that is legal and, consequently, is not going to be re-thrown.\n\tdefault void onSkipInRead(Throwable t);\n\t// This item failed on write with the given exception, and a skip was called for.\n\tdefault void onSkipInWrite(S item, Throwable t);\n}", "des": "Interface for listener to skipped items."}
{"index": 9589, "repo": "spring-batch-core-5.0.2", "code": "public abstract class StepContextRepeatCallback extends Object implements RepeatCallback {\n\t// Do the work required for this chunk of the step.\n\tabstract RepeatStatus doInChunkContext(RepeatContext context, ChunkContext chunkContext);\n\t// Manage the StepContext lifecycle.\n\tRepeatStatus doInIteration(RepeatContext context);\n}", "des": "Convenient base class for clients who need to do something in a repeat callback inside a Step."}
{"index": 9590, "repo": "spring-batch-core-5.0.2", "code": "public interface StepExecutionListener extends StepListener {\n\t// Give a listener a chance to modify the exit status from a step.\n\tdefault ExitStatus afterStep(StepExecution stepExecution);\n\t// Initialize the state of the listener with the StepExecution from the current scope.\n\tdefault void beforeStep(StepExecution stepExecution);\n}", "des": "Listener interface for the lifecycle of a Step."}
{"index": 9591, "repo": "spring-batch-core-5.0.2", "code": "public interface StepExecutionSplitter {\n\t// The name of the step configuration that will be executed remotely.\n\tString getStepName();\n\t// Partition the provided StepExecution into a set of parallel executable instances with the same parent JobExecution.\n\tSet<StepExecution> split(StepExecution stepExecution, int gridSize);\n}", "des": "Strategy interface for generating input contexts for a partitioned step execution independent from the fabric they are going to run on."}
{"index": 9592, "repo": "spring-batch-core-5.0.2", "code": "public class StepListenerParser extends AbstractListenerParser {\n\t// Gets the bean class.\n\tprotected Class<? extends AbstractListenerFactoryBean<?>> getBeanClass();\n\t// Gets the metadata values.\n\tprotected ListenerMetaData[] getMetaDataValues();\n\tvoid handleListenersElement(Element stepElement, org.springframework.beans.factory.config.BeanDefinition beanDefinition, org.springframework.beans.factory.xml.ParserContext parserContext);\n}", "des": "Parser for a step listener element."}
{"index": 9593, "repo": "spring-batch-core-5.0.2", "code": "public class StepLocatorStepFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<Step> {\n\tStep getObject();\n\t// Tell clients that we are a factory for Step instances.\n\tClass<? extends Step> getObjectType();\n\t// Always return true as optimization for bean factory.\n\tboolean isSingleton();\n\tvoid setStepLocator(StepLocator stepLocator);\n\tvoid setStepName(String stepName);\n}", "des": "Convenience factory for Step instances given a StepLocator."}
{"index": 9594, "repo": "spring-batch-core-5.0.2", "code": "public interface StepRegistry {\n\t// Returns the Step of the specified job based on its name.\n\tStep getStep(String jobName, String stepName);\n\t// Registers all the step instances of the given job.\n\tvoid register(String jobName, Collection<Step> steps);\n\t// Unregisters all the steps instances of the given job.\n\tvoid unregisterStepsFromJob(String jobName);\n}", "des": "Registry keeping track of all the Step instances defined in a Job."}
{"index": 9595, "repo": "spring-batch-core-5.0.2", "code": "public class StepState extends AbstractState implements StepLocator, StepHolder {\n\tStep getStep();\n\tStep getStep(String stepName);\n\tCollection<String> getStepNames();\n\t// Handle some business or processing logic and return a status that can be used to drive a flow to the next State.\n\tFlowExecutionStatus handle(FlowExecutor executor);\n\t// Inquire as to whether a State is an end state.\n\tboolean isEndState();\n}", "des": "State implementation that delegates to a FlowExecutor to execute the specified Step."}
{"index": 9596, "repo": "spring-batch-core-5.0.2", "code": "public class TaskExecutorJobLauncher extends SimpleJobLauncher {\n\t// Ensure the required dependencies of a JobRepository have been set.\n\tvoid afterPropertiesSet();\n\t// Run the provided job with the given JobParameters.\n\tJobExecution run(Job job, JobParameters jobParameters);\n\t// Set the JobRepository.\n\tvoid setJobRepository(JobRepository jobRepository);\n\t// Set the TaskExecutor.\n\tvoid setTaskExecutor(org.springframework.core.task.TaskExecutor taskExecutor);\n}", "des": "Implementation of the JobLauncher interface based on a TaskExecutor."}
{"index": 9597, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "public enum AccessLevel extends Enum<AccessLevel> {\n\t// Returns if the access level should allow access to the specified ID.\n\tboolean isAccessAllowed(String id);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AccessLevel valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AccessLevel[] values();\n}", "des": "The specific access level granted to the cloud foundry user that's calling the endpoints."}
{"index": 9598, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "public class CloudFoundryAuthorizationException extends RuntimeException {\n\t// Return the reason why the authorization exception was thrown.\n\tCloudFoundryAuthorizationException.Reason getReason();\n\t// Return the status code that should be returned to the client.\n\torg.springframework.http.HttpStatus getStatusCode();\n}", "des": "Authorization exceptions thrown to limit access to the endpoints."}
{"index": 9599, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "public static enum CloudFoundryAuthorizationException.Reason extends Enum<CloudFoundryAuthorizationException.Reason> {\n\torg.springframework.http.HttpStatus getStatus();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic CloudFoundryAuthorizationException.Reason valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic CloudFoundryAuthorizationException.Reason[] values();\n}", "des": "Reasons why the exception can be thrown."}
{"index": 9600, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "public enum EndpointExposure extends Enum<EndpointExposure> {\n\t// Return the default set of include patterns.\n\tString[] getDefaultIncludes();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic EndpointExposure valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic EndpointExposure[] values();\n}", "des": "Technologies that can be used to expose an endpoint."}
{"index": 9601, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "public enum InfoContributorFallback extends Enum<InfoContributorFallback> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic InfoContributorFallback valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic InfoContributorFallback[] values();\n}", "des": "Controls the fallback behavior when the primary property that controls whether an info contributor is enabled is not set."}
{"index": 9602, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "public enum ManagementContextType extends Enum<ManagementContextType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ManagementContextType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ManagementContextType[] values();\n}", "des": "Enumeration of management context types."}
{"index": 9603, "repo": "spring-boot-actuator-autoconfigure-3.1.1", "code": "public final class MeterValue extends Object {\n\t// Return the underlying value in form suitable to apply to the given meter type.\n\tDouble getValue(io.micrometer.core.instrument.Meter.Type meterType);\n\t// Return a new MeterValue instance for the given double value.\n\tstatic MeterValue valueOf(double value);\n\t// Return a new MeterValue instance for the given String value.\n\tstatic MeterValue valueOf(String value);\n}", "des": "A meter value that is used when configuring micrometer."}
{"index": 9604, "repo": "spring-security-core-6.1.2", "code": "public class AnonymousAuthenticationToken extends AbstractAuthenticationToken implements Serializable {\n\tboolean equals(Object obj);\n\t// Always returns an empty String\n\tObject getCredentials();\n\tint getKeyHash();\n\t// The identity of the principal being authenticated.\n\tObject getPrincipal();\n}", "des": "Represents an anonymous Authentication."}
{"index": 9605, "repo": "spring-security-core-6.1.2", "code": "public class AuthenticatedReactiveAuthorizationManager<T> extends Object implements ReactiveAuthorizationManager<T> {\n\t// Gets an instance of AuthenticatedReactiveAuthorizationManager\n\tstatic <T> AuthenticatedReactiveAuthorizationManager<T> authenticated();\n\t// Determines if access is granted for a specific authentication and object.\n\treactor.core.publisher.Mono<AuthorizationDecision> check(reactor.core.publisher.Mono<Authentication> authentication, T object);\n}", "des": "A ReactiveAuthorizationManager that determines if the current user is authenticated."}
{"index": 9606, "repo": "spring-security-core-6.1.2", "code": "public interface AuthenticationProvider {\n\t// Performs authentication with the same contract as AuthenticationManager.authenticate(Authentication) .\n\tAuthentication authenticate(Authentication authentication);\n\t// Returns true if this AuthenticationProvider supports the indicated Authentication object.\n\tboolean supports(Class<?> authentication);\n}", "des": "Indicates a class can process a specific Authentication implementation."}
{"index": 9607, "repo": "spring-security-core-6.1.2", "code": "public final class AuthoritiesAuthorizationManager extends Object implements AuthorizationManager<Collection<String>> {\n\t// Determines if the current user is authorized by evaluating if the Authentication contains any of specified authorities.\n\tAuthorityAuthorizationDecision check(Supplier<Authentication> authentication, Collection<String> authorities);\n\t// Sets the RoleHierarchy to be used.\n\tvoid setRoleHierarchy(RoleHierarchy roleHierarchy);\n}", "des": "An AuthorizationManager that determines if the current user is authorized by evaluating if the Authentication contains any of the specified authorities."}
{"index": 9608, "repo": "spring-security-core-6.1.2", "code": "public class AuthorizationEvent extends org.springframework.context.ApplicationEvent {\n\t// Get the principal requiring access\n\tSupplier<Authentication> getAuthentication();\n\t// Get the response to the princpal's request\n\tAuthorizationDecision getAuthorizationDecision();\n\t// Get the object to which access was requested\n\tObject getObject();\n}", "des": "A parent class for AuthorizationGrantedEvent and AuthorizationDeniedEvent."}
{"index": 9609, "repo": "spring-security-core-6.1.2", "code": "public enum AuthorizationInterceptorsOrder extends Enum<AuthorizationInterceptorsOrder> {\n\tint getOrder();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AuthorizationInterceptorsOrder valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AuthorizationInterceptorsOrder[] values();\n}", "des": "Ordering of Spring Security's authorization Advisors"}
{"index": 9610, "repo": "spring-security-core-6.1.2", "code": "@FunctionalInterface public interface AuthorizationManager<T> {\n\t// Determines if access is granted for a specific authentication and object.\n\tAuthorizationDecision check(Supplier<Authentication> authentication, T object);\n\t// Determines if access should be granted for a specific authentication and object.\n\tdefault void verify(Supplier<Authentication> authentication, T object);\n}", "des": "An Authorization manager which can determine if an Authentication has access to a specific object."}
{"index": 9611, "repo": "spring-security-core-6.1.2", "code": "public class DefaultJaasAuthenticationProvider extends AbstractJaasAuthenticationProvider {\n\t// Validates the required properties are set.\n\tvoid afterPropertiesSet();\n\t// Creates a LoginContext using the Configuration that was specified in setConfiguration(Configuration).\n\tprotected LoginContext createLoginContext(CallbackHandler handler);\n\tprotected Configuration getConfiguration();\n\t// Sets the Configuration to use for Authentication.\n\tvoid setConfiguration(Configuration configuration);\n}", "des": "Creates a LoginContext using the Configuration provided to it."}
{"index": 9612, "repo": "spring-security-core-6.1.2", "code": "public class DefaultToken extends Object implements Token {\n\tboolean equals(Object obj);\n\t// Obtains the extended information associated within the token, which was presented when the token was first created.\n\tString getExtendedInformation();\n\t// Obtains the randomised, secure key assigned to this token.\n\tString getKey();\n\t// The time the token key was initially created is available from this method.\n\tlong getKeyCreationTime();\n}", "des": "The default implementation of Token."}
{"index": 9613, "repo": "spring-security-core-6.1.2", "code": "public final class DelegatingSecurityContextRunnable extends Object implements Runnable {\n\t// Factory method for creating a DelegatingSecurityContextRunnable.\n\tstatic Runnable create(Runnable delegate, SecurityContext securityContext);\n\tvoid run();\n\t// Sets the SecurityContextHolderStrategy to use.\n\tvoid setSecurityContextHolderStrategy(SecurityContextHolderStrategy securityContextHolderStrategy);\n}", "des": "Wraps a delegate Runnable with logic for setting up a SecurityContext before invoking the delegate Runnable and then removing the SecurityContext after the delegate has completed."}
{"index": 9614, "repo": "spring-security-core-6.1.2", "code": "public final class FieldUtils extends Object {\n\t// Attempts to locate the specified field on the class.\n\tstatic Field getField(Class<?> clazz, String fieldName);\n\t// Returns the value of a (nested) field on a bean.\n\tstatic Object getFieldValue(Object bean, String fieldName);\n\tstatic Object getProtectedFieldValue(String protectedField, Object object);\n\tstatic void setProtectedFieldValue(String protectedField, Object object, Object newValue);\n}", "des": "Offers static methods for directly manipulating fields."}
{"index": 9615, "repo": "spring-security-core-6.1.2", "code": "public final class Jsr250AuthorizationManager extends Object implements AuthorizationManager<org.aopalliance.intercept.MethodInvocation> {\n\t// Determine if an Authentication has access to a method by evaluating the DenyAll, PermitAll, and RolesAllowed annotations that MethodInvocation specifies.\n\tAuthorizationDecision check(Supplier<Authentication> authentication, org.aopalliance.intercept.MethodInvocation methodInvocation);\n\t// Sets the role prefix.\n\tvoid setRolePrefix(String rolePrefix);\n}", "des": "An AuthorizationManager which can determine if an Authentication may invoke the MethodInvocation by evaluating if the Authentication contains a specified authority from the JSR-250 security annotations."}
{"index": 9616, "repo": "spring-security-core-6.1.2", "code": "public class MapReactiveUserDetailsService extends Object implements ReactiveUserDetailsService, ReactiveUserDetailsPasswordService {\n\t// Find the UserDetails by username.\n\treactor.core.publisher.Mono<UserDetails> findByUsername(String username);\n\t// Modify the specified user's password.\n\treactor.core.publisher.Mono<UserDetails> updatePassword(UserDetails user, String newPassword);\n}", "des": "A Map based implementation of ReactiveUserDetailsService"}
{"index": 9617, "repo": "spring-security-core-6.1.2", "code": "public final class MethodExpressionAuthorizationManager extends Object implements AuthorizationManager<org.aopalliance.intercept.MethodInvocation> {\n\t// Determines the access by evaluating the provided expression.\n\tAuthorizationDecision check(Supplier<Authentication> authentication, org.aopalliance.intercept.MethodInvocation context);\n\t// Sets the SecurityExpressionHandler to be used.\n\tvoid setExpressionHandler(SecurityExpressionHandler<org.aopalliance.intercept.MethodInvocation> expressionHandler);\n}", "des": "An expression-based AuthorizationManager that determines the access by evaluating the provided expression against the MethodInvocation."}
{"index": 9618, "repo": "spring-security-core-6.1.2", "code": "public class MethodInvocationResult extends Object {\n\t// Return the already-invoked MethodInvocation\n\torg.aopalliance.intercept.MethodInvocation getMethodInvocation();\n\t// Return the result of the already-invoked MethodInvocation\n\tObject getResult();\n}", "des": "A context object that contains a MethodInvocation and the result of that MethodInvocation."}
{"index": 9619, "repo": "spring-security-core-6.1.2", "code": "public class NullUserCache extends Object implements UserCache {\n\t// Obtains a UserDetails from the cache.\n\tUserDetails getUserFromCache(String username);\n\t// Places a UserDetails in the cache.\n\tvoid putUserInCache(UserDetails user);\n\t// Removes the specified user from the cache.\n\tvoid removeUserFromCache(String username);\n}", "des": "Does not perform any caching."}
{"index": 9620, "repo": "spring-security-core-6.1.2", "code": "public final class ObservationAuthorizationManager<T> extends Object implements AuthorizationManager<T> {\n\t// Determines if access is granted for a specific authentication and object.\n\tAuthorizationDecision check(Supplier<Authentication> authentication, T object);\n\t// Use the provided convention for reporting observation data\n\tvoid setObservationConvention(io.micrometer.observation.ObservationConvention<AuthorizationObservationContext<?>> convention);\n}", "des": "An AuthorizationManager that observes the authorization"}
{"index": 9621, "repo": "spring-security-core-6.1.2", "code": "public class ObservationReactiveAuthenticationManager extends Object implements ReactiveAuthenticationManager {\n\t// Attempts to authenticate the provided Authentication\n\treactor.core.publisher.Mono<Authentication> authenticate(Authentication authentication);\n\t// Use the provided convention for reporting observation data\n\tvoid setObservationConvention(io.micrometer.observation.ObservationConvention<AuthenticationObservationContext> convention);\n}", "des": "An ReactiveAuthenticationManager that observes the authentication"}
{"index": 9622, "repo": "spring-security-core-6.1.2", "code": "public final class PostAuthorizeAuthorizationManager extends Object implements AuthorizationManager<MethodInvocationResult> {\n\t// Determine if an Authentication has access to the returned object by evaluating the PostAuthorize annotation that the MethodInvocation specifies.\n\tAuthorizationDecision check(Supplier<Authentication> authentication, MethodInvocationResult mi);\n\t// Use this the MethodSecurityExpressionHandler.\n\tvoid setExpressionHandler(MethodSecurityExpressionHandler expressionHandler);\n}", "des": "An AuthorizationManager which can determine if an Authentication may return the result from an invoked MethodInvocation by evaluating an expression from the PostAuthorize annotation."}
{"index": 9623, "repo": "spring-security-core-6.1.2", "code": "public class ReactiveAuthenticationManagerAdapter extends Object implements ReactiveAuthenticationManager {\n\t// Attempts to authenticate the provided Authentication\n\treactor.core.publisher.Mono<Authentication> authenticate(Authentication token);\n\t// Set a scheduler that will be published on to perform the authentication logic.\n\tvoid setScheduler(reactor.core.scheduler.Scheduler scheduler);\n}", "des": "Adapts an AuthenticationManager to the reactive APIs."}
{"index": 9624, "repo": "spring-security-core-6.1.2", "code": "public interface ReactiveAuthorizationManager<T> {\n\t// Determines if access is granted for a specific authentication and object.\n\treactor.core.publisher.Mono<AuthorizationDecision> check(reactor.core.publisher.Mono<Authentication> authentication, T object);\n\t// Determines if access should be granted for a specific authentication and object\n\tdefault reactor.core.publisher.Mono<Void> verify(reactor.core.publisher.Mono<Authentication> authentication, T object);\n}", "des": "A reactive authorization manager which can determine if an Authentication has access to a specific object."}
{"index": 9625, "repo": "spring-security-core-6.1.2", "code": "public class RememberMeAuthenticationToken extends AbstractAuthenticationToken {\n\tboolean equals(Object obj);\n\t// Always returns an empty String\n\tObject getCredentials();\n\tint getKeyHash();\n\t// The identity of the principal being authenticated.\n\tObject getPrincipal();\n}", "des": "Represents a remembered Authentication."}
{"index": 9626, "repo": "spring-security-core-6.1.2", "code": "public class RoleHierarchyImpl extends Object implements RoleHierarchy {\n\t// Returns an array of all reachable authorities.\n\tCollection<GrantedAuthority> getReachableGrantedAuthorities(Collection<? extends GrantedAuthority> authorities);\n\t// Set the role hierarchy and pre-calculate for every role the set of all reachable roles, i.e.\n\tvoid setHierarchy(String roleHierarchyStringRepresentation);\n}", "des": "This class defines a role hierarchy for use with various access checking components."}
{"index": 9627, "repo": "spring-security-core-6.1.2", "code": "public final class RsaKeyConverters extends Object {\n\t// Construct a Converter for converting a PEM-encoded PKCS#8 RSA Private Key into a RSAPrivateKey.\n\tstatic org.springframework.core.convert.converter.Converter<InputStream,RSAPrivateKey> pkcs8();\n\t// Construct a Converter for converting a PEM-encoded X.509 RSA Public Key or X.509 Certificate into a RSAPublicKey.\n\tstatic org.springframework.core.convert.converter.Converter<InputStream,RSAPublicKey> x509();\n}", "des": "Used for creating Key converter instances"}
{"index": 9628, "repo": "spring-security-core-6.1.2", "code": "public class SecureRandomFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<SecureRandom> {\n\tSecureRandom getObject();\n\tClass<SecureRandom> getObjectType();\n\tboolean isSingleton();\n\t// Allows the Pseudo Random Number Generator (PRNG) algorithm to be nominated.\n\tvoid setAlgorithm(String algorithm);\n\t// Allows the user to specify a resource which will act as a seed for the SecureRandom instance.\n\tvoid setSeed(org.springframework.core.io.Resource seed);\n}", "des": "Creates a SecureRandom instance."}
{"index": 9629, "repo": "spring-security-core-6.1.2", "code": "public interface SecurityContext extends Serializable {\n\t// Obtains the currently authenticated principal, or an authentication request token.\n\tAuthentication getAuthentication();\n\t// Changes the currently authenticated principal, or removes the authentication information.\n\tvoid setAuthentication(Authentication authentication);\n}", "des": "Interface defining the minimum security information associated with the current thread of execution."}
{"index": 9630, "repo": "spring-security-core-6.1.2", "code": "public class SecurityContextChangedEvent extends org.springframework.context.ApplicationEvent {\n\t// Get the SecurityContext set on the SecurityContextHolder as of this event\n\tSecurityContext getNewContext();\n\t// Get the SecurityContext set on the SecurityContextHolder immediately previous to this event\n\tSecurityContext getOldContext();\n\t// Say whether the event is a context-clearing event.\n\tboolean isCleared();\n}", "des": "An event that represents a change in SecurityContext"}
{"index": 9631, "repo": "spring-security-core-6.1.2", "code": "public class SecurityContextImpl extends Object implements SecurityContext {\n\tboolean equals(Object obj);\n\t// Obtains the currently authenticated principal, or an authentication request token.\n\tAuthentication getAuthentication();\n\t// Changes the currently authenticated principal, or removes the authentication information.\n\tvoid setAuthentication(Authentication authentication);\n}", "des": "Base implementation of SecurityContext."}
{"index": 9632, "repo": "spring-security-core-6.1.2", "code": "public abstract class SessionIdChangedEvent extends AbstractSessionEvent {\n\t// Returns the new session ID.\n\tabstract String getNewSessionId();\n\t// Returns the old session ID.\n\tabstract String getOldSessionId();\n}", "des": "Generic \"session ID changed\" event which indicates that a session identifier (potentially represented by a security context) has changed."}
{"index": 9633, "repo": "spring-security-core-6.1.2", "code": "public abstract class Sha512DigestUtils extends Object {\n\t// Calculates the SHA digest and returns the value as a byte[].\n\tstatic byte[] sha(byte[] data);\n\t// Calculates the SHA digest and returns the value as a byte[].\n\tstatic byte[] sha(String data);\n\t// Calculates the SHA digest and returns the value as a hex string.\n\tstatic String shaHex(byte[] data);\n\t// Calculates the SHA digest and returns the value as a hex string.\n\tstatic String shaHex(String data);\n}", "des": "Provides SHA512 digest methods."}
{"index": 9634, "repo": "spring-security-core-6.1.2", "code": "public class SpringCacheBasedUserCache extends Object implements UserCache {\n\t// Obtains a UserDetails from the cache.\n\tUserDetails getUserFromCache(String username);\n\t// Places a UserDetails in the cache.\n\tvoid putUserInCache(UserDetails user);\n\t// Removes the specified user from the cache.\n\tvoid removeUserFromCache(String username);\n\tvoid removeUserFromCache(UserDetails user);\n}", "des": "Caches UserDetails instances in a Spring defined Cache."}
{"index": 9635, "repo": "spring-security-core-6.1.2", "code": "public class TestingAuthenticationProvider extends Object implements AuthenticationProvider {\n\t// Performs authentication with the same contract as AuthenticationManager.authenticate(Authentication) .\n\tAuthentication authenticate(Authentication authentication);\n\t// Returns true if this AuthenticationProvider supports the indicated Authentication object.\n\tboolean supports(Class<?> authentication);\n}", "des": "An AuthenticationProvider implementation for the TestingAuthenticationToken."}
{"index": 9636, "repo": "spring-security-core-6.1.2", "code": "public class TestingAuthenticationToken extends AbstractAuthenticationToken {\n\t// The credentials that prove the principal is correct.\n\tObject getCredentials();\n\t// The identity of the principal being authenticated.\n\tObject getPrincipal();\n}", "des": "An Authentication implementation that is designed for use whilst unit testing."}
{"index": 9637, "repo": "spring-security-core-6.1.2", "code": "public interface Token {\n\t// Obtains the extended information associated within the token, which was presented when the token was first created.\n\tString getExtendedInformation();\n\t// Obtains the randomised, secure key assigned to this token.\n\tString getKey();\n\t// The time the token key was initially created is available from this method.\n\tlong getKeyCreationTime();\n}", "des": "A token issued by TokenService."}
{"index": 9638, "repo": "spring-security-core-6.1.2", "code": "public interface TokenService {\n\t// Forces the allocation of a new Token.\n\tToken allocateToken(String extendedInformation);\n\t// Permits verification the Token.getKey() was issued by this TokenService and reconstructs the corresponding Token.\n\tToken verifyToken(String key);\n}", "des": "Provides a mechanism to allocate and rebuild secure, randomised tokens."}
{"index": 9639, "repo": "spring-security-core-6.1.2", "code": "public class UserAttribute extends Object {\n\tvoid addAuthority(GrantedAuthority newAuthority);\n\tList<GrantedAuthority> getAuthorities();\n\tString getPassword();\n\tboolean isEnabled();\n\tboolean isValid();\n\t// Set all authorities for this user.\n\tvoid setAuthorities(List<GrantedAuthority> authorities);\n\t// Set all authorities for this user from String values.\n\tvoid setAuthoritiesAsString(List<String> authoritiesAsStrings);\n\tvoid setEnabled(boolean enabled);\n\tvoid setPassword(String password);\n}", "des": "Used by InMemoryUserDetailsManager to temporarily store the attributes associated with a user."}
{"index": 9640, "repo": "spring-security-core-6.1.2", "code": "public interface UserCache {\n\t// Obtains a UserDetails from the cache.\n\tUserDetails getUserFromCache(String username);\n\t// Places a UserDetails in the cache.\n\tvoid putUserInCache(UserDetails user);\n\t// Removes the specified user from the cache.\n\tvoid removeUserFromCache(String username);\n}", "des": "Provides a cache of UserDetails objects."}
{"index": 9641, "repo": "pulsar-common-3.0.0", "code": "public enum ActionType extends Enum<ActionType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ActionType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ActionType[] values();\n}", "des": "Pulsar event action type."}
{"index": 9642, "repo": "pulsar-common-3.0.0", "code": "public class AppendBrokerTimestampMetadataInterceptor extends Object implements BrokerEntryMetadataInterceptor {\n\t// Called by ManagedLedger to intercept adding an entry.\n\tBrokerEntryMetadata intercept(BrokerEntryMetadata brokerMetadata);\n\t// Called by ManagedLedger to intercept adding an entry with numberOfMessages.\n\tBrokerEntryMetadata interceptWithNumberOfMessages(BrokerEntryMetadata brokerMetadata, int numberOfMessages);\n}", "des": "A plugin interface that allows you to intercept the client requests to the Pulsar brokers and add timestamp from broker side metadata for each entry."}
{"index": 9643, "repo": "pulsar-common-3.0.0", "code": "@LimitedPrivate @Stable public interface BrokerEntryMetadataInterceptor {\n\t// Called by ManagedLedger to intercept adding an entry.\n\tBrokerEntryMetadata intercept(BrokerEntryMetadata brokerMetadata);\n\t// Called by ManagedLedger to intercept adding an entry with numberOfMessages.\n\tBrokerEntryMetadata interceptWithNumberOfMessages(BrokerEntryMetadata brokerMetadata, int numberOfMessages);\n}", "des": "A plugin interface that allows you to intercept the client requests to the Pulsar brokers and add metadata for each entry from broker side."}
{"index": 9644, "repo": "pulsar-common-3.0.0", "code": "public static enum Commands.ChecksumType extends Enum<Commands.ChecksumType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Commands.ChecksumType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Commands.ChecksumType[] values();\n}", "des": "Definition of possible checksum types."}
{"index": 9645, "repo": "pulsar-common-3.0.0", "code": "public class CompletableFutureCancellationHandler extends Object {\n\t// Attaches the cancellation handler to handle cancels and timeouts.\n\tvoid attachToFuture(CompletableFuture<?> future);\n\t// Creates a new CompletableFuture and attaches the cancellation handler to handle cancels and timeouts.\n\t<T> CompletableFuture<T> createFuture();\n\t// Set the action to run when the future gets cancelled or timeouts.\n\tvoid setCancelAction(Runnable cancelAction);\n}", "des": "Implements cancellation and timeout support for CompletableFutures."}
{"index": 9646, "repo": "pulsar-common-3.0.0", "code": "public interface CompressionCodec {\n\t// Decompress a buffer.\n\tio.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf encoded, int uncompressedSize);\n\t// Compress a buffer.\n\tio.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf raw);\n}", "des": "Generic compression codec interface."}
{"index": 9647, "repo": "pulsar-common-3.0.0", "code": "public class CompressionCodecLZ4 extends Object implements CompressionCodec {\n\t// Decompress a buffer.\n\tio.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf encoded, int uncompressedLength);\n\t// Compress a buffer.\n\tio.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf source);\n}", "des": "LZ4 Compression."}
{"index": 9648, "repo": "pulsar-common-3.0.0", "code": "public class CompressionCodecNone extends Object implements CompressionCodec {\n\t// Decompress a buffer.\n\tio.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf encoded, int uncompressedSize);\n\t// Compress a buffer.\n\tio.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf raw);\n}", "des": "No compression."}
{"index": 9649, "repo": "pulsar-common-3.0.0", "code": "public class CompressionCodecSnappy extends Object implements CompressionCodec {\n\t// Decompress a buffer.\n\tio.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf encoded, int uncompressedLength);\n\t// Compress a buffer.\n\tio.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf source);\n}", "des": "Snappy Compression."}
{"index": 9650, "repo": "pulsar-common-3.0.0", "code": "public class CompressionCodecZLib extends Object implements CompressionCodec {\n\t// Decompress a buffer.\n\tio.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf encoded, int uncompressedLength);\n\t// Compress a buffer.\n\tio.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf source);\n}", "des": "ZLib Compression."}
{"index": 9651, "repo": "pulsar-common-3.0.0", "code": "public class CompressionCodecZstd extends Object implements CompressionCodec {\n\t// Decompress a buffer.\n\tio.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf encoded, int uncompressedLength);\n\t// Compress a buffer.\n\tio.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf source);\n}", "des": "Zstandard Compression."}
{"index": 9652, "repo": "pulsar-common-3.0.0", "code": "public enum DomainType extends Enum<DomainType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic DomainType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic DomainType[] values();\n}", "des": "Domain types differentiated by Mozilla Public Suffix List."}
{"index": 9653, "repo": "pulsar-common-3.0.0", "code": "public enum EventType extends Enum<EventType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic EventType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic EventType[] values();\n}", "des": "Pulsar system event type."}
{"index": 9654, "repo": "pulsar-common-3.0.0", "code": "public class JvmG1GCMetricsLogger extends Object implements JvmGCMetricsLogger {\n\t// JvmGCMetricsLogger should update the metrics with GC specific dimensions and value.\n\tvoid logMetrics(Metrics metrics);\n\t// It will be triggered by JvmMetrics periodically to refresh stats at interval (default = 1 min).\n\tvoid refresh();\n}", "des": "Logger for the JVM G1 GC metrics."}
{"index": 9655, "repo": "pulsar-common-3.0.0", "code": "public interface JvmGCMetricsLogger {\n\t// JvmGCMetricsLogger should update the metrics with GC specific dimensions and value.\n\tvoid logMetrics(Metrics metrics);\n\t// It will be triggered by JvmMetrics periodically to refresh stats at interval (default = 1 min).\n\tvoid refresh();\n}", "des": "JvmGCMetricsLogger can be implemented for each specific GC type which retrieves GC count and pause time and logs it into metrics."}
{"index": 9656, "repo": "pulsar-common-3.0.0", "code": "public static enum KeyStoreSSLContext.Mode extends Enum<KeyStoreSSLContext.Mode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic KeyStoreSSLContext.Mode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic KeyStoreSSLContext.Mode[] values();\n}", "des": "Connection Mode for TLS."}
{"index": 9657, "repo": "pulsar-common-3.0.0", "code": "public class LookupData extends Object {\n\tString getBrokerUrl();\n\t// Deprecated.\n\tString getBrokerUrlSsl();\n\tString getBrokerUrlTls();\n\tString getHttpUrl();\n\tString getHttpUrlTls();\n\t// Deprecated.\n\tString getNativeUrl();\n\tvoid setHttpUrlTls(String httpUrlTls);\n}", "des": "This class encapsulates lookup data."}
{"index": 9658, "repo": "pulsar-common-3.0.0", "code": "public enum NamespaceOperation extends Enum<NamespaceOperation> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic NamespaceOperation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic NamespaceOperation[] values();\n}", "des": "Namespace authorization operations."}
{"index": 9659, "repo": "pulsar-common-3.0.0", "code": "public class NetSslContextBuilder extends SslContextAutoRefreshBuilder<SSLContext> {\n\t// Returns cached SSLContext.\n\tSSLContext getSslContext();\n\t// Returns whether the key files modified after a refresh time, and context need update.\n\tboolean needUpdate();\n\t// updates and returns cached SSLContext.\n\tSSLContext update();\n}", "des": "Similar to `DefaultSslContextBuilder`, which build `javax.net.ssl.SSLContext` for web service."}
{"index": 9660, "repo": "pulsar-common-3.0.0", "code": "public final class NettyChannelUtil extends Object {\n\t// Write and flush the message to the channel and the close the channel.\n\tstatic void writeAndFlushWithClosePromise(io.netty.channel.ChannelOutboundInvoker ctx, io.netty.buffer.ByteBuf msg);\n\t// Write and flush the message to the channel.\n\tstatic void writeAndFlushWithVoidPromise(io.netty.channel.ChannelOutboundInvoker ctx, io.netty.buffer.ByteBuf msg);\n}", "des": "Contains utility methods for working with Netty Channels."}
{"index": 9661, "repo": "pulsar-common-3.0.0", "code": "public class NettyClientSslContextRefresher extends SslContextAutoRefreshBuilder<io.netty.handler.ssl.SslContext> {\n\t// Returns cached SSLContext.\n\tio.netty.handler.ssl.SslContext getSslContext();\n\t// Returns whether the key files modified after a refresh time, and context need update.\n\tboolean needUpdate();\n\t// updates and returns cached SSLContext.\n\tio.netty.handler.ssl.SslContext update();\n}", "des": "SSL context builder for Netty Client side."}
{"index": 9662, "repo": "pulsar-common-3.0.0", "code": "public class NettyFutureUtil extends Object {\n\t// Converts a Netty Future to CompletableFuture.\n\tstatic <V> CompletableFuture<V> toCompletableFuture(io.netty.util.concurrent.Future<V> future);\n\t// Converts a Netty Future to CompletableFuture with Void type.\n\tstatic CompletableFuture<Void> toCompletableFutureVoid(io.netty.util.concurrent.Future<?> future);\n}", "des": "Contains utility methods for working with Netty Futures."}
{"index": 9663, "repo": "pulsar-common-3.0.0", "code": "public class NettyServerSslContextBuilder extends SslContextAutoRefreshBuilder<io.netty.handler.ssl.SslContext> {\n\t// Returns cached SSLContext.\n\tio.netty.handler.ssl.SslContext getSslContext();\n\t// Returns whether the key files modified after a refresh time, and context need update.\n\tboolean needUpdate();\n\t// updates and returns cached SSLContext.\n\tio.netty.handler.ssl.SslContext update();\n}", "des": "SSL context builder for Netty Server side."}
{"index": 9664, "repo": "pulsar-common-3.0.0", "code": "public class NettySSLContextAutoRefreshBuilder extends SslContextAutoRefreshBuilder<KeyStoreSSLContext> {\n\t// Returns cached SSLContext.\n\tKeyStoreSSLContext getSslContext();\n\t// Returns whether the key files modified after a refresh time, and context need update.\n\tboolean needUpdate();\n\t// updates and returns cached SSLContext.\n\tKeyStoreSSLContext update();\n}", "des": "SSL context builder for Netty."}
{"index": 9665, "repo": "pulsar-common-3.0.0", "code": "public enum PolicyName extends Enum<PolicyName> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PolicyName valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PolicyName[] values();\n}", "des": "PolicyName authorization operations."}
{"index": 9666, "repo": "pulsar-common-3.0.0", "code": "public enum PolicyOperation extends Enum<PolicyOperation> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PolicyOperation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PolicyOperation[] values();\n}", "des": "PolicyOperation authorization operations."}
{"index": 9667, "repo": "pulsar-common-3.0.0", "code": "public class SchemaData extends Object {\n\t// Convert a schema info to a schema data.\n\tstatic SchemaData fromSchemaInfo(SchemaInfo schemaInfo);\n\t// Convert a schema data to a schema info.\n\tSchemaInfo toSchemaInfo();\n}", "des": "Schema data."}
{"index": 9668, "repo": "pulsar-common-3.0.0", "code": "public interface ServiceUnitId {\n\t// Return the namespace object that this ServiceUnitId belongs to.\n\tNamespaceName getNamespaceObject();\n\t// Check whether a fully-qualified topic is included in this ServiceUnitId object.\n\tboolean includes(TopicName topicName);\n}", "des": "Basic interface for service unit's identification."}
{"index": 9669, "repo": "pulsar-common-3.0.0", "code": "public class ServiceURI extends Object {\n\t// Create a service uri instance from a uri string.\n\tstatic ServiceURI create(String uriStr);\n\t// Create a service uri instance from a URI instance.\n\tstatic ServiceURI create(URI uri);\n\tString[] getServiceHosts();\n\tString[] getServiceInfos();\n\tString getServiceScheme();\n\t// Create a new URI from the service URI which only specifies one of the hosts.\n\tString selectOne();\n}", "des": "ServiceURI represents service uri within pulsar cluster."}
{"index": 9670, "repo": "pulsar-common-3.0.0", "code": "public abstract class SslContextAutoRefreshBuilder<T> extends Object {\n\t// It updates SSLContext at every configured refresh time and returns updated SSLContext.\n\tT get();\n\t// Returns cached SSLContext.\n\tprotected abstract T getSslContext();\n\t// Returns whether the key files modified after a refresh time, and context need update.\n\tprotected abstract boolean needUpdate();\n\t// updates and returns cached SSLContext.\n\tprotected abstract T update();\n}", "des": "Auto refresher and builder of SSLContext."}
{"index": 9671, "repo": "pulsar-common-3.0.0", "code": "public class SSLContextValidatorEngine extends Object {\n\t// Check if the given ByteBuffer capacity.\n\tstatic ByteBuffer ensureCapacity(ByteBuffer existingBuffer, int newLength);\n\t// Validates TLS handshake up to TLSv1.2.\n\tstatic void validate(SSLContextValidatorEngine.SSLEngineProvider clientSslEngineSupplier, SSLContextValidatorEngine.SSLEngineProvider serverSslEngineSupplier);\n}", "des": "SSLContextValidatorEngine to validate 2 SSlContext."}
{"index": 9672, "repo": "pulsar-common-3.0.0", "code": "public static enum SystemResourceUsage.ResourceType extends Enum<SystemResourceUsage.ResourceType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SystemResourceUsage.ResourceType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SystemResourceUsage.ResourceType[] values();\n}", "des": "Definition of possible resource types."}
{"index": 9673, "repo": "pulsar-common-3.0.0", "code": "public enum TenantOperation extends Enum<TenantOperation> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TenantOperation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TenantOperation[] values();\n}", "des": "Tenant authorization operations."}
{"index": 9674, "repo": "pulsar-common-3.0.0", "code": "public interface TopicCompactionStrategy<T> {\n\t// Returns the schema object for this strategy.\n\tSchema<T> getSchema();\n\tstatic TopicCompactionStrategy load(String topicCompactionStrategyClassName);\n\t// Tests if the compaction needs to keep the left(previous message) compared to the right(current message) for the same key.\n\tboolean shouldKeepLeft(T prev, T cur);\n}", "des": "Defines a custom strategy to compact messages in a topic."}
{"index": 9675, "repo": "pulsar-common-3.0.0", "code": "public enum TopicOperation extends Enum<TopicOperation> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TopicOperation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TopicOperation[] values();\n}", "des": "Topic authorization operations."}
{"index": 9676, "repo": "camel-api-4.0.0-RC1", "code": "public interface AsyncCallback extends Runnable {\n\t// This method is invoked once the Exchange is done.\n\tvoid done(boolean doneSync);\n\t// Optimized for the reactive executor engine to be able to schedule this callback in its engine.\n\tdefault void run();\n}", "des": "The callback interface for an AsyncProcessor so that it can notify you when an Exchange is done."}
{"index": 9677, "repo": "camel-api-4.0.0-RC1", "code": "public interface BatchConsumer extends Consumer {\n\t// Whether processing the batch is still allowed.\n\tboolean isBatchAllowed();\n\t// Processes the list of Exchange objects in a batch.\n\tint processBatch(Queue<Object> exchanges);\n\t// Sets a maximum number of messages as a limit to poll at each polling.\n\tvoid setMaxMessagesPerPoll(int maxMessagesPerPoll);\n}", "des": "A consumer of a batch of message exchanges from an Endpoint"}
{"index": 9678, "repo": "camel-api-4.0.0-RC1", "code": "public interface BeanProcessorFactory {\n\t// Creates the bean processor from the existing bean instance\n\tProcessor createBeanProcessor(CamelContext camelContext, Object bean, Method method);\n\t// Creates the bean processor from a given set of parameters that can refer to the bean via an existing bean, a reference to a bean, or its class name etc.\n\tProcessor createBeanProcessor(CamelContext camelContext, Object bean, String beanType, Class<?> beanClass, String ref, String method, BeanScope scope);\n}", "des": "Factory for creating a Processor that can invoke a method on a bean and supporting using Camel bean parameter bindings."}
{"index": 9679, "repo": "camel-api-4.0.0-RC1", "code": "public interface BinaryPredicate extends Predicate {\n\t// Gets the left hand side expression\n\tExpression getLeft();\n\t// Gets the operator\n\tString getOperator();\n\t// Gets the right hand side expression\n\tExpression getRight();\n\t// Evaluates the predicate on the message exchange and returns null if this exchange matches the predicate.\n\tString matchesReturningFailureMessage(Exchange exchange);\n}", "des": "A predicate which evaluates a binary expression."}
{"index": 9680, "repo": "camel-api-4.0.0-RC1", "code": "public static enum Breakpoint.State extends Enum<Breakpoint.State> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Breakpoint.State valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Breakpoint.State[] values();\n}", "des": "State of the breakpoint as either active or suspended."}
{"index": 9681, "repo": "camel-api-4.0.0-RC1", "code": "public interface Cacheable {\n\t// Adds an offset key and value to the cache\n\tboolean add(OffsetKey<?> key, Offset<?> offset);\n\t// Gets the cache in resume adapters and objects that cache their data\n\tResumeCache<?> getCache();\n\t// Gets the for this cache instance\n\tdefault Cacheable.FillPolicy getFillPolicy();\n\t// Sets the cache in resume adapters and objects that cache their data\n\tvoid setCache(ResumeCache<?> cache);\n}", "des": "Used to identify objects that can cache their resume state or data"}
{"index": 9682, "repo": "camel-api-4.0.0-RC1", "code": "public static enum Cacheable.FillPolicy extends Enum<Cacheable.FillPolicy> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Cacheable.FillPolicy valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Cacheable.FillPolicy[] values();\n}", "des": "The cache fill policy can be used to determine how this cache should be filled with data."}
{"index": 9683, "repo": "camel-api-4.0.0-RC1", "code": "public interface CamelBeanPostProcessorInjector {\n\t// Field injection\n\tvoid onFieldInject(Field field, Object bean, String beanName);\n\t// Method injection\n\tvoid onMethodInject(Method method, Object bean, String beanName);\n}", "des": "Used for custom injection when doing CamelBeanPostProcessor bean post-processing."}
{"index": 9684, "repo": "camel-api-4.0.0-RC1", "code": "public interface CamelContextAware {\n\t// Get the CamelContext\n\tCamelContext getCamelContext();\n\t// Injects the CamelContext\n\tvoid setCamelContext(CamelContext camelContext);\n\t// Set the CamelContext context if the object is an instance of CamelContextAware.\n\tstatic <T> T trySetCamelContext(T object, CamelContext camelContext);\n}", "des": "An interface to represent an object which wishes to be injected with the CamelContext"}
{"index": 9685, "repo": "camel-api-4.0.0-RC1", "code": "@FunctionalInterface public interface CamelContextCustomizer extends Ordered, Comparable<CamelContextCustomizer> {\n\tdefault int compareTo(CamelContextCustomizer other);\n\t// Configure the CamelContext.\n\tvoid configure(CamelContext camelContext);\n\t// Gets the order.\n\tdefault int getOrder();\n}", "des": "To apply custom configurations to CamelContext instances."}
{"index": 9686, "repo": "camel-api-4.0.0-RC1", "code": "public interface CamelContextNameStrategy {\n\t// Gets the name\n\tString getName();\n\t// Gets the next calculated name, if this strategy is not using fixed names.\n\tString getNextName();\n\t// Whether the name will be fixed, or allow re-calculation such as by using an unique counter.\n\tboolean isFixedName();\n}", "des": "Strategy for assigning name to a CamelContext."}
{"index": 9687, "repo": "camel-api-4.0.0-RC1", "code": "public class CamelExchangeException extends CamelException {\n\t// Creates an exception message with the provided details.\n\tstatic String createExceptionMessage(String message, Exchange exchange, Throwable cause);\n\t// Returns the exchange which caused the exception\n\tExchange getExchange();\n}", "des": "An exception caused by a specific message Exchange"}
{"index": 9688, "repo": "camel-api-4.0.0-RC1", "code": "public interface CamelInternalProcessorAdvice<T> {\n\t// Callback executed after processing a step in the route.\n\tvoid after(Exchange exchange, T data);\n\t// Callback executed before processing a step in the route.\n\tT before(Exchange exchange);\n\t// Whether this advice has state or not.\n\tdefault boolean hasState();\n}", "des": "An advice (before and after) to execute cross cutting functionality in the Camel routing engine."}
{"index": 9689, "repo": "camel-api-4.0.0-RC1", "code": "public interface CamelPreemptiveClusterView extends CamelClusterView {\n\t// Check if the view is disabled.\n\tboolean isDisabled();\n\t// Enable or disables a view.\n\tvoid setDisabled(boolean disabled);\n}", "des": "A CamelPreemptiveClusterView is a CamelClusterView that can be externally disabled by another controller."}
{"index": 9690, "repo": "camel-api-4.0.0-RC1", "code": "public enum Category extends Enum<Category> {\n\t// Returns the string representation of this value\n\tString getValue();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Category valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Category[] values();\n}", "des": "This enum set various categories options into the UriEndpoint."}
{"index": 9691, "repo": "camel-api-4.0.0-RC1", "code": "public class CipherSuitesParameters extends Object {\n\t// Returns a live reference to the list of cipher suite names.\n\tList<String> getCipherSuite();\n\t// Sets the cipher suite.\n\tvoid setCipherSuite(List<String> cipherSuite);\n}", "des": "Represents a list of TLS/SSL cipher suite names."}
{"index": 9692, "repo": "camel-api-4.0.0-RC1", "code": "public enum ClientAuthentication extends Enum<ClientAuthentication> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ClientAuthentication valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ClientAuthentication[] values();\n}", "des": "Represents the options for the client authentication settings of a server socket."}
{"index": 9693, "repo": "camel-api-4.0.0-RC1", "code": "public interface ComponentAware {\n\t// Get the Component\n\tComponent getComponent();\n\t// Get the Component as the specified type.\n\tdefault <T extends Component>T getComponent(Class<T> type);\n\t// Injects the Component\n\tvoid setComponent(Component component);\n}", "des": "An interface to represent an object which wishes to be injected with a Component."}
{"index": 9694, "repo": "camel-api-4.0.0-RC1", "code": "@FunctionalInterface public static interface ComponentCustomizer.Policy extends BiPredicate<String,Component> {\n\t// A simple allow-all policy.\n\tstatic ComponentCustomizer.Policy any();\n\t// A simple deny-all policy.\n\tstatic ComponentCustomizer.Policy none();\n}", "des": "Used as additional filer mechanism to control if customizers need to be applied or not."}
{"index": 9695, "repo": "camel-api-4.0.0-RC1", "code": "public static interface ComponentVerifierExtension.Result extends Serializable {\n\t// Collection of errors happened for the verification.\n\tList<ComponentVerifierExtension.VerificationError> getErrors();\n\t// Scope of the verification.\n\tComponentVerifierExtension.Scope getScope();\n\t// Result of the validation as status.\n\tComponentVerifierExtension.Result.Status getStatus();\n}", "des": "The result of a verification"}
{"index": 9696, "repo": "camel-api-4.0.0-RC1", "code": "public static enum ComponentVerifierExtension.Result.Status extends Enum<ComponentVerifierExtension.Result.Status> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ComponentVerifierExtension.Result.Status valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ComponentVerifierExtension.Result.Status[] values();\n}", "des": "Status of the verification"}
{"index": 9697, "repo": "camel-api-4.0.0-RC1", "code": "public static interface ComponentVerifierExtension.VerificationError.Attribute extends Serializable {\n\t// Bean style accessor to name; This is required for framework like Jackson using bean convention for object serialization.\n\tdefault String getName();\n\t// Name of the attribute.\n\tString name();\n}", "des": "Interface defining an attribute which is a key for the detailed error messages."}
{"index": 9698, "repo": "camel-api-4.0.0-RC1", "code": "public static interface ComponentVerifierExtension.VerificationError.Code extends Serializable {\n\t// Bean style accessor to name.\n\tdefault String getName();\n\t// Name of the code.\n\tString name();\n}", "des": "Interface defining an error code."}
{"index": 9699, "repo": "camel-api-4.0.0-RC1", "code": "public interface Condition {\n\t// Does the condition match\n\tboolean matchEvent(Exchange exchange, CamelEvent.ExchangeEvent event);\n\t// Does the condition match\n\tboolean matchProcess(Exchange exchange, Processor processor, NamedNode definition);\n}", "des": "A condition to define when a given Exchange matches when is being routed."}
{"index": 9700, "repo": "camel-api-4.0.0-RC1", "code": "public interface ConsumerListener<C,P> {\n\t// This is an event that runs after data consumption.\n\tboolean afterConsume(C consumePayload);\n\t// This is an event that runs after data processing.\n\tboolean afterProcess(P processingPayload);\n\t// This sets the predicate responsible for evaluating whether the processing can resume or not.\n\tvoid setResumableCheck(Predicate<?> afterConsumeEval);\n}", "des": "An interface for listening to consumer events and allow proxying between a consumer predicate and the Camel component."}
{"index": 9701, "repo": "camel-api-4.0.0-RC1", "code": "public interface ConsumerListenerAware<T extends ConsumerListener<?,?>> {\n\t// Gets the ConsumerListener instance\n\tT getConsumerListener();\n\t// Injects the ConsumerListener instance into the object\n\tvoid setConsumerListener(T consumerListener);\n}", "des": "An interface to represent an object which wishes to support listening for consumer events using the ConsumerListener."}
{"index": 9702, "repo": "camel-api-4.0.0-RC1", "code": "public interface ContentTypeAware {\n\t// The content type.\n\tString getContentType();\n\t// Sets the content type.\n\tvoid setContentType(String contentType);\n}", "des": "Represents an object that can have an associated content type."}
{"index": 9703, "repo": "camel-api-4.0.0-RC1", "code": "public interface DataFormat extends Service {\n\t// Marshals the object to the given Stream.\n\tvoid marshal(Exchange exchange, Object graph, OutputStream stream);\n\t// Unmarshals the given stream into an object.\n\tObject unmarshal(Exchange exchange, InputStream stream);\n}", "des": "Represents a data format used to marshal objects to and from streams such as Java Serialization or using JAXB2 to encode/decode objects using XML or using SOAP encoding."}
{"index": 9704, "repo": "camel-api-4.0.0-RC1", "code": "@FunctionalInterface public static interface DataFormatCustomizer.Policy extends BiPredicate<String,DataFormat> {\n\t// A simple allow-all policy.\n\tstatic DataFormatCustomizer.Policy any();\n\t// A simple deny-all policy.\n\tstatic DataFormatCustomizer.Policy none();\n}", "des": "Used as additional filer mechanism to control if customizers need to be applied or not."}
{"index": 9705, "repo": "camel-api-4.0.0-RC1", "code": "public interface DataTypeAware {\n\t// Get the data type of the message.\n\tDataType getDataType();\n\t// Whether any data type has been configured\n\tboolean hasDataType();\n\t// Set the message body with data type.\n\tvoid setBody(Object body, DataType type);\n\t// Set the data type of the message.\n\tvoid setDataType(DataType type);\n}", "des": "Allows Message to store a DataType which represents the data type of the Message."}
{"index": 9706, "repo": "camel-api-4.0.0-RC1", "code": "public interface DevConsoleResolver extends CamelContextAware, StaticService {\n\t// Lookup existing resolved DevConsole.\n\tOptional<DevConsole> lookupDevConsole(String id);\n\t// Resolves the given DevConsole.\n\tDevConsole resolveDevConsole(String id);\n}", "des": "A pluggable strategy for resolving dev consoles in a loosely coupled manner"}
{"index": 9707, "repo": "camel-api-4.0.0-RC1", "code": "public interface EndpointConsumerResolver {\n\t// Resolves this object as an endpoint.\n\tEndpoint resolve(CamelContext context);\n\t// Resolves this object as an endpoint.\n\t<T extends Endpoint>T resolve(CamelContext context, Class<T> endpointType);\n}", "des": "An interface to represent an object that can be resolved as a consumer Endpoint"}
{"index": 9708, "repo": "camel-api-4.0.0-RC1", "code": "public interface EndpointProducerResolver {\n\t// Resolves this object as an endpoint.\n\tEndpoint resolve(CamelContext context);\n\t// Resolves this object as an endpoint.\n\t<T extends Endpoint>T resolve(CamelContext context, Class<T> endpointType);\n}", "des": "An interface to represent an object that can be resolved as a producer Endpoint"}
{"index": 9709, "repo": "camel-api-4.0.0-RC1", "code": "public interface ErrorHandlerAware {\n\t// Gets the error handler\n\tProcessor getErrorHandler();\n\t// Sets the error handler\n\tvoid setErrorHandler(Processor errorHandler);\n}", "des": "An interface for Processor aware of its ErrorHandler which are wrapped via the Channel during route initialization, or specially used by RecipientList EIP annotation."}
{"index": 9710, "repo": "camel-api-4.0.0-RC1", "code": "public interface ErrorHandlerFactory {\n\t// Clones this factory so each route has its private builder to use, to avoid changes from one route to influence the others.\n\tErrorHandlerFactory cloneBuilder();\n\t// Whether this error handler supports transacted exchanges.\n\tboolean supportTransacted();\n}", "des": "Factory for creating ErrorHandlers."}
{"index": 9711, "repo": "camel-api-4.0.0-RC1", "code": "public interface ErrorHandlerRedeliveryCustomizer {\n\t// Allows to change the output of the error handler which are used when optimising the JMX instrumentation to use either an advice or wrapped processor when calling a processor.\n\tvoid changeOutput(Processor output);\n\t// Determines if redelivery is enabled by checking if any of the redelivery policy settings may allow redeliveries.\n\tboolean determineIfRedeliveryIsEnabled();\n\t// Returns the output processor\n\tProcessor getOutput();\n}", "des": "Customizer for ErrorHandler which supports redeliveries."}
{"index": 9712, "repo": "camel-api-4.0.0-RC1", "code": "public interface ExceptionHandler {\n\t// Handles the given exception\n\tvoid handleException(String message, Throwable exception);\n\t// Handles the given exception\n\tvoid handleException(String message, Exchange exchange, Throwable exception);\n\t// Handles the given exception\n\tvoid handleException(Throwable exception);\n}", "des": "A Strategy pattern for handling exceptions; particularly in asynchronous processes such as consumers."}
{"index": 9713, "repo": "camel-api-4.0.0-RC1", "code": "public enum ExchangePattern extends Enum<ExchangePattern> {\n\tstatic ExchangePattern asEnum(String value);\n\t// Return true if there can be an IN message\n\tboolean isInCapable();\n\t// Return true if there can be an OUT message\n\tboolean isOutCapable();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ExchangePattern valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ExchangePattern[] values();\n}", "des": "Represents the kind of message exchange pattern"}
{"index": 9714, "repo": "camel-api-4.0.0-RC1", "code": "public enum ExchangePropertyKey extends Enum<ExchangePropertyKey> {\n\tstatic ExchangePropertyKey asExchangePropertyKey(String name);\n\tString getName();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ExchangePropertyKey valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ExchangePropertyKey[] values();\n}", "des": "An enum of common and known keys for exchange properties used by camel-core."}
{"index": 9715, "repo": "camel-api-4.0.0-RC1", "code": "public interface Expression {\n\t// Returns the value of the expression on the given exchange\n\t<T> T evaluate(Exchange exchange, Class<T> type);\n\t// Initialize the expression with the given camel context\n\tdefault void init(CamelContext context);\n}", "des": "An expression provides a plugin strategy for evaluating expressions on a message exchange."}
{"index": 9716, "repo": "camel-api-4.0.0-RC1", "code": "public interface ExpressionResultTypeAware {\n\t// Gets the expression or predicate as text\n\tString getExpressionText();\n\t// Gets the result type\n\tClass<?> getResultType();\n}", "des": "Represents an Expression or Predicate that supports a result type."}
{"index": 9717, "repo": "camel-api-4.0.0-RC1", "code": "public class HashicorpVaultConfiguration extends VaultConfiguration {\n\t// Engine to look at hashicorp vault\n\tString getEngine();\n\t// Host to access hashicorp vault\n\tString getHost();\n\t// Port to access hashicorp vault\n\tString getPort();\n\t// Scheme to access hashicorp vault\n\tString getScheme();\n\t// Token to access hashicorp vault\n\tString getToken();\n\tvoid setEngine(String engine);\n\tvoid setHost(String host);\n\tvoid setPort(String port);\n\tvoid setScheme(String scheme);\n\tvoid setToken(String token);\n}", "des": "Configuration for access to Hashicorp Vault Secrets."}
{"index": 9718, "repo": "camel-api-4.0.0-RC1", "code": "public interface HeaderFilterStrategy {\n\t// Applies filtering logic to Camel Message header that is going to be copied to target message such as CXF and JMS message.\n\tboolean applyFilterToCamelHeaders(String headerName, Object headerValue, Exchange exchange);\n\t// Applies filtering logic to an external message header such as CXF and JMS message that is going to be copied to Camel message header.\n\tboolean applyFilterToExternalHeaders(String headerName, Object headerValue, Exchange exchange);\n}", "des": "Interface to allow plug-able implementation to filter header to and from Camel message."}
{"index": 9719, "repo": "camel-api-4.0.0-RC1", "code": "public static enum HeaderFilterStrategy.Direction extends Enum<HeaderFilterStrategy.Direction> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic HeaderFilterStrategy.Direction valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic HeaderFilterStrategy.Direction[] values();\n}", "des": "The direction is either IN or OUT."}
{"index": 9720, "repo": "camel-api-4.0.0-RC1", "code": "public interface HeaderFilterStrategyAware {\n\t// Gets the header filter strategy used\n\tHeaderFilterStrategy getHeaderFilterStrategy();\n\t// Sets the header filter strategy to use\n\tvoid setHeaderFilterStrategy(HeaderFilterStrategy strategy);\n}", "des": "An interface to represent an object which can make use of injected HeaderFilterStrategy."}
{"index": 9721, "repo": "camel-api-4.0.0-RC1", "code": "public interface HeadersMapFactory {\n\t// Whether the created Map are case insensitive or not.\n\tboolean isCaseInsensitive();\n\t// Whether the given Map implementation is created by this factory?\n\tboolean isInstanceOf(Map<String,Object> map);\n\t// Creates a new empty Map\n\tMap<String,Object> newMap();\n\t// Creates a new Map and copies over all the content from the existing map.\n\tMap<String,Object> newMap(Map<String,Object> map);\n}", "des": "Factory to create the Map implementation to use for storing headers on Message."}
{"index": 9722, "repo": "camel-api-4.0.0-RC1", "code": "public interface HealthCheckAware {\n\t// Gets the HealthCheck\n\tHealthCheck getHealthCheck();\n\t// Injects the HealthCheck\n\tvoid setHealthCheck(HealthCheck healthCheck);\n}", "des": "An interface to represent an object which wishes to be injected with the HealthCheck"}
{"index": 9723, "repo": "camel-api-4.0.0-RC1", "code": "public interface HealthCheckRepository extends HasId, HasHealthChecks {\n\t// Returns the check identified by the given id if available.\n\tdefault Optional<HealthCheck> getCheck(String id);\n\t// Set if the checks associated to this repository is enabled or not.\n\tboolean isEnabled();\n\t// Set if the checks associated to this repository is enabled or not.\n\tvoid setEnabled(boolean enabled);\n}", "des": "A repository for health checks."}
{"index": 9724, "repo": "camel-api-4.0.0-RC1", "code": "public interface HealthCheckResolver extends CamelContextAware {\n\t// Resolves the given HealthCheck.\n\tHealthCheck resolveHealthCheck(String id);\n\t// Resolves the given HealthCheckRepository.\n\tHealthCheckRepository resolveHealthCheckRepository(String id);\n}", "des": "A pluggable strategy for resolving health checks in a loosely coupled manner"}
{"index": 9725, "repo": "camel-api-4.0.0-RC1", "code": "public interface HttpResponseAware {\n\t// The HTTP status code\n\tint getHttpResponseCode();\n\t// The HTTP status line\n\tString getHttpResponseStatus();\n\t// Sets the HTTP status code\n\tvoid setHttpResponseCode(int code);\n\t// Sets the HTTP status line\n\tvoid setHttpResponseStatus(String status);\n}", "des": "Represents an object which is aware of HTTP responses."}
{"index": 9726, "repo": "camel-api-4.0.0-RC1", "code": "public interface IdAware extends HasId {\n\t// Sets the id which has been auto generated\n\tdefault void setGeneratedId(String id);\n\t// Sets the id\n\tvoid setId(String id);\n}", "des": "To allow objects to be injected with an id, such as EIP Processors which has been defined from Camel routes."}
{"index": 9727, "repo": "camel-api-4.0.0-RC1", "code": "public interface IsSingleton {\n\t// Whether this class supports being singleton or not.\n\tboolean isSingleton();\n\t// Test if the given instance is a singleton or not.\n\tstatic boolean test(Object instance);\n}", "des": "Used for defining if a given class is singleton or not."}
{"index": 9728, "repo": "camel-api-4.0.0-RC1", "code": "@FunctionalInterface public static interface LanguageCustomizer.Policy extends BiPredicate<String,Language> {\n\t// A simple allow-all policy.\n\tstatic LanguageCustomizer.Policy any();\n\t// A simple deny-all policy.\n\tstatic LanguageCustomizer.Policy none();\n}", "des": "Used as additional filer mechanism to control if customizers need to be applied or not."}
{"index": 9729, "repo": "camel-api-4.0.0-RC1", "code": "public interface LineNumberAware {\n\t// The line number of this entity.\n\tint getLineNumber();\n\t// The location of the entity.\n\tString getLocation();\n\t// Sets the line number of this entity.\n\tvoid setLineNumber(int lineNumber);\n\t// Sets the location of the entity (source file name, i.e.\n\tvoid setLocation(String location);\n\t// Set the LineNumberAware if the object is an instance of LineNumberAware.\n\tstatic <T> T trySetLineNumberAware(T object, LineNumberAware source);\n}", "des": "An entity that can point to a given line number from a source Resource such as YAML and XML DSL parsers."}
{"index": 9730, "repo": "camel-api-4.0.0-RC1", "code": "public interface LoadablePropertiesSource extends PropertiesSource {\n\t// Loads the properties from the source\n\tProperties loadProperties();\n\t// Loads the properties from the source filtering them out according to a predicate.\n\tProperties loadProperties(Predicate<String> filter);\n\t// Re-loads the properties from the file location\n\tvoid reloadProperties(String location);\n}", "des": "A source for properties that can be loaded all at once during initialization, such as loading .properties files."}
{"index": 9731, "repo": "camel-api-4.0.0-RC1", "code": "public interface LocalBeanRepositoryAware {\n\t// Gets the local bean repository (if any in use)\n\tBeanRepository getLocalBeanRepository();\n\t// Sets a special local bean repository (ie thread local) that take precedence and will use first, if a bean exists.\n\tvoid setLocalBeanRepository(BeanRepository repository);\n}", "des": "Allows a BeanRepository to temporary have a local repository take precedence, such as when creating route templates to give more flexibility."}
{"index": 9732, "repo": "camel-api-4.0.0-RC1", "code": "public enum LoggingLevel extends Enum<LoggingLevel> {\n\t// Is the given logging level equal or higher than the current level.\n\tboolean isEnabled(LoggingLevel level);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic LoggingLevel valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic LoggingLevel[] values();\n}", "des": "Used to configure the logging levels"}
{"index": 9733, "repo": "camel-api-4.0.0-RC1", "code": "public enum ManagementMBeansLevel extends Enum<ManagementMBeansLevel> {\n\tboolean isProcessors();\n\tboolean isRoutes();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ManagementMBeansLevel valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ManagementMBeansLevel[] values();\n}", "des": "Level of mbeans for registration"}
{"index": 9734, "repo": "camel-api-4.0.0-RC1", "code": "public enum ManagementStatisticsLevel extends Enum<ManagementStatisticsLevel> {\n\tboolean isDefaultOrExtended();\n\tboolean isExtended();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ManagementStatisticsLevel valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ManagementStatisticsLevel[] values();\n}", "des": "Level of granularity for performance statistics enabled"}
{"index": 9735, "repo": "camel-api-4.0.0-RC1", "code": "public interface ManagementStrategyFactory {\n\t// Creates the ManagementStrategy.\n\tManagementStrategy create(CamelContext context, Map<String,Object> properties);\n\t// Creates the associated LifecycleStrategy that the management strategy uses.\n\tLifecycleStrategy createLifecycle(CamelContext context);\n\t// Setup the management on the CamelContext.\n\tvoid setupManagement(CamelContext camelContext, ManagementStrategy strategy, LifecycleStrategy lifecycle);\n}", "des": "Service Factory for ManagementStrategy"}
{"index": 9736, "repo": "camel-api-4.0.0-RC1", "code": "public enum MessageTrait extends Enum<MessageTrait> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic MessageTrait valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic MessageTrait[] values();\n}", "des": "Message traits are runtime traits that can be associated with a message (for instance, the redelivery state, a data type, etc)."}
{"index": 9737, "repo": "camel-api-4.0.0-RC1", "code": "public interface ModelToXMLDumper {\n\t// Dumps the definition as XML\n\tString dumpModelAsXml(CamelContext context, NamedNode definition);\n\t// Dumps the definition as XML\n\tString dumpModelAsXml(CamelContext context, NamedNode definition, boolean resolvePlaceholders);\n}", "des": "SPI for dumping model definitions into XML representation."}
{"index": 9738, "repo": "camel-api-4.0.0-RC1", "code": "public interface ModelToYAMLDumper {\n\t// Dumps the definition as YAML\n\tString dumpModelAsYaml(CamelContext context, NamedNode definition);\n\t// Dumps the definition as YAML\n\tString dumpModelAsYaml(CamelContext context, NamedNode definition, boolean resolvePlaceholders, boolean uriAsParameters);\n}", "des": "SPI for dumping model definitions into YAML representation."}
{"index": 9739, "repo": "camel-api-4.0.0-RC1", "code": "public interface NamedRoute {\n\t// Gets the route endpoint url.\n\tString getEndpointUrl();\n\t// Gets the route input\n\tNamedNode getInput();\n\t// Gets the route id.\n\tString getRouteId();\n\t// Is the route created from Rest DSL\n\tboolean isCreatedFromRest();\n\t// Is the route created from template;\n\tboolean isCreatedFromTemplate();\n}", "des": "Represents a node in the routes which is identified as a route."}
{"index": 9740, "repo": "camel-api-4.0.0-RC1", "code": "public interface NamespaceAware {\n\t// Gets the XML Namespaces\n\tMap<String,String> getNamespaces();\n\t// Injects the XML Namespaces of prefix -> uri mappings\n\tvoid setNamespaces(Map<String,String> namespaces);\n}", "des": "Represents an object which is aware of the namespaces in which its used such as XPath and XQuery type expressions so that the current namespace context can be injected"}
{"index": 9741, "repo": "camel-api-4.0.0-RC1", "code": "public interface Navigate<T> {\n\t// Are there more outputs?\n\tboolean hasNext();\n\t// Next group of outputs\n\tList<T> next();\n}", "des": "Implementations support navigating a graph where you can traverse forward and each next returns a List of outputs of type T that can contain 0..n nodes."}
{"index": 9742, "repo": "camel-api-4.0.0-RC1", "code": "public interface NotifyBuilderMatcher {\n\t// Whether the predicate matches\n\tboolean notifyBuilderMatches();\n\t// When an exchange was received\n\tvoid notifyBuilderOnExchange(Exchange exchange);\n\t// Reset state\n\tvoid notifyBuilderReset();\n}", "des": "Allows to be used in combination with NotifyBuilder as external predicate implementations to compute if the exchange matches."}
{"index": 9743, "repo": "camel-api-4.0.0-RC1", "code": "public interface Offset<T> extends Serializable {\n\t// Gets the offset value\n\tT getValue();\n\t// Gets the offset value converting it to the given type\n\tdefault <V> V getValue(Class<V> tClass);\n\t// Serializes this offset into a buffer of bytes\n\tdefault ByteBuffer serialize();\n\t// Sets the current offset value\n\tvoid update(T offset);\n}", "des": "Generic offset without a concrete type"}
{"index": 9744, "repo": "camel-api-4.0.0-RC1", "code": "public interface OffsetKey<K> extends Serializable {\n\t// Gets the key value\n\tK getValue();\n\t// Serializes this offset into a buffer of bytes\n\tdefault ByteBuffer serialize();\n\t// Sets the key value\n\tvoid setValue(K key);\n}", "des": "An interface to represent offset keys (addressable for an offset)"}
{"index": 9745, "repo": "camel-api-4.0.0-RC1", "code": "public interface OptimisticLockingAggregationRepository extends AggregationRepository {\n\t// Add the given Exchange under the correlation key.\n\tExchange add(CamelContext camelContext, String key, Exchange oldExchange, Exchange newExchange);\n\t// Removes the given Exchange when both the supplied key and Exchange are present in the repository.\n\tvoid remove(CamelContext camelContext, String key, Exchange exchange);\n}", "des": "A specialized AggregationRepository which also supports optimistic locking."}
{"index": 9746, "repo": "camel-api-4.0.0-RC1", "code": "public interface PeriodTaskResolver {\n\t// Creates a new class instance using the key to lookup\n\tOptional<Object> newInstance(String key);\n\t// Creates a new class instance using the key to lookup\n\t<T> Optional<T> newInstance(String key, Class<T> type);\n}", "des": "Finder to find PeriodicTask tasks."}
{"index": 9747, "repo": "camel-api-4.0.0-RC1", "code": "public interface PeriodTaskScheduler {\n\t// Gets an existing task by a given type, assuming there is only one task of the given type.\n\t<T> T getTaskByType(Class<T> type);\n\t// Schedules the period task.\n\tvoid schedulePeriodTask(Runnable task, long period);\n}", "des": "A shared scheduler to run small period tasks, such as updating internal statistics, or for custom components to have a background task."}
{"index": 9748, "repo": "camel-api-4.0.0-RC1", "code": "public interface PluginManager {\n\t// Allows installation of custom plugins to the Camel context.\n\t<T> void addContextPlugin(Class<T> type, T module);\n\t// Gets a plugin of the given type.\n\t<T> T getContextPlugin(Class<T> type);\n\t// Allows lazy installation of custom plugins to the Camel context.\n\t<T> void lazyAddContextPlugin(Class<T> type, Supplier<T> module);\n}", "des": "A manager for internal plugins."}
{"index": 9749, "repo": "camel-api-4.0.0-RC1", "code": "public interface Policy {\n\t// Hook invoked before the wrap.\n\tvoid beforeWrap(Route route, NamedNode definition);\n\t// Wraps any applicable interceptors around the given processor.\n\tProcessor wrap(Route route, Processor processor);\n}", "des": "A strategy capable of applying interceptors to a processor."}
{"index": 9750, "repo": "camel-api-4.0.0-RC1", "code": "public interface PollingConsumer extends Consumer {\n\t// Waits until a message is available and then returns it.\n\tExchange receive();\n\t// Attempts to receive a message exchange, waiting up to the given timeout to expire if a message is not yet available.\n\tExchange receive(long timeout);\n\t// Attempts to receive a message exchange immediately without waiting and returning null if a message exchange is not available yet.\n\tExchange receiveNoWait();\n}", "des": "Represents a Polling Consumer where the caller polls for messages when it is ready."}
{"index": 9751, "repo": "camel-api-4.0.0-RC1", "code": "public interface PollingConsumerPollingStrategy {\n\t// Callback invoked after the poll.\n\tvoid afterPoll();\n\t// Callback invoked before the poll.\n\tlong beforePoll(long timeout);\n\t// Callback invoked when the consumer is initialized such as when the PollingConsumer starts.\n\tvoid onInit();\n}", "des": "Strategy that allows Consumers to influence the PollingConsumer."}
{"index": 9752, "repo": "camel-api-4.0.0-RC1", "code": "public interface PollingConsumerPollStrategy {\n\t// Called when poll is about to begin\n\tboolean begin(Consumer consumer, Endpoint endpoint);\n\t// Called when poll is completed successfully\n\tvoid commit(Consumer consumer, Endpoint endpoint, int polledMessages);\n\t// Called when poll failed\n\tboolean rollback(Consumer consumer, Endpoint endpoint, int retryCounter, Exception cause);\n}", "des": "Strategy for a PollingConsumer when polling an Endpoint."}
{"index": 9753, "repo": "camel-api-4.0.0-RC1", "code": "public static interface PooledObjectFactory.Statistics {\n\t// Number of exchanges acquired (reused) when using pooled factory.\n\tlong getAcquiredCounter();\n\t// Number of new exchanges created.\n\tlong getCreatedCounter();\n\t// Number of exchanges discarded (thrown away) such as if no space in cache pool.\n\tlong getDiscardedCounter();\n\t// Number of exchanges released back to pool\n\tlong getReleasedCounter();\n\t// Reset the counters\n\tvoid reset();\n}", "des": "Utilization statistics of the this factory."}
{"index": 9754, "repo": "camel-api-4.0.0-RC1", "code": "public interface Predicate {\n\t// Initialize the predicate with the given camel context\n\tdefault void init(CamelContext context);\n\t// Initialize as a predicate with the given camel context\n\tdefault void initPredicate(CamelContext context);\n\t// Evaluates the predicate on the message exchange and returns true if this exchange matches the predicate\n\tboolean matches(Exchange exchange);\n}", "des": "Evaluates a binary predicate on the message exchange."}
{"index": 9755, "repo": "camel-api-4.0.0-RC1", "code": "public interface ProcessorFactory {\n\t// Creates the child processor.\n\tProcessor createChildProcessor(Route route, NamedNode definition, boolean mandatory);\n\t// Creates a processor by the name of the definition.\n\tProcessor createProcessor(CamelContext camelContext, String definitionName, Object[] args);\n\t// Creates the processor.\n\tProcessor createProcessor(Route route, NamedNode definition);\n}", "des": "A factory to create Processor based on the definition."}
{"index": 9756, "repo": "camel-api-4.0.0-RC1", "code": "public interface PropertiesFunction {\n\t// Applies the function.\n\tString apply(String remainder);\n\t// Name of the function which is used as name: to let the properties component know it is a function.\n\tString getName();\n\t// Whether the value should be looked up as a regular properties first, before applying this function.\n\tdefault boolean lookupFirst(String remainder);\n}", "des": "A function that is applied instead of looking up a property placeholder."}
{"index": 9757, "repo": "camel-api-4.0.0-RC1", "code": "public interface PropertiesSource {\n\t// Name of properties source\n\tString getName();\n\t// Gets the property with the name\n\tString getProperty(String name);\n}", "des": "A source for properties."}
{"index": 9758, "repo": "camel-api-4.0.0-RC1", "code": "public interface PropertiesSourceFactory {\n\t// New classpath based PropertiesSource\n\tPropertiesSource newClasspathPropertiesSource(String location);\n\t// New file based PropertiesSource\n\tPropertiesSource newFilePropertiesSource(String location);\n\t// New ref based PropertiesSource\n\tPropertiesSource newRefPropertiesSource(String ref);\n}", "des": "Factory for creating out of the box PropertiesSource."}
{"index": 9759, "repo": "camel-api-4.0.0-RC1", "code": "public enum RedeliveryTraitPayload extends Enum<RedeliveryTraitPayload> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RedeliveryTraitPayload valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RedeliveryTraitPayload[] values();\n}", "des": "Some messages can carry redelivery details which might affect routing (i.e; JMS messages)."}
{"index": 9760, "repo": "camel-api-4.0.0-RC1", "code": "public interface ReloadStrategy extends StaticService, CamelContextAware {\n\t// Number of reloads failed.\n\tint getFailedCounter();\n\t// Number of reloads succeeded.\n\tint getReloadCounter();\n\t// Trigger reload.\n\tvoid onReload(Object source);\n\t// Reset the counters.\n\tvoid resetCounters();\n}", "des": "SPI strategy for reloading."}
{"index": 9761, "repo": "camel-api-4.0.0-RC1", "code": "public interface ResourceAware {\n\t// Gets the Resource.\n\tResource getResource();\n\t// Sets the Resource.\n\tvoid setResource(Resource resource);\n\t// Set the Resource resource if the object is an instance of ResourceAware.\n\tstatic <T> T trySetResource(T object, Resource resource);\n}", "des": "An interface to represent an object which wishes to be injected with the Resource"}
{"index": 9762, "repo": "camel-api-4.0.0-RC1", "code": "public interface ResourceReloadStrategy extends ReloadStrategy {\n\t// Gets the resource listener that is triggered on reload.\n\tResourceReload getResourceReload();\n\t// Sets the resource listener to trigger on reload.\n\tvoid setResourceReload(ResourceReload listener);\n}", "des": "SPI strategy for reloading Resource in an existing running CamelContext"}
{"index": 9763, "repo": "camel-api-4.0.0-RC1", "code": "public interface ResourceResolver extends StaticService, CamelContextAware {\n\t// The supported resource scheme.\n\tString getSupportedScheme();\n\t// Resolve a Resource from a give uri.\n\tResource resolve(String location);\n}", "des": "SPI for loading resources."}
{"index": 9764, "repo": "camel-api-4.0.0-RC1", "code": "public interface Resumable {\n\t// Gets the last offset\n\tOffset<?> getLastOffset();\n\t// Gets the offset key (i.e.: the addressable part of the resumable object)\n\tOffsetKey<?> getOffsetKey();\n}", "des": "This provides an interface for resumable objects."}
{"index": 9765, "repo": "camel-api-4.0.0-RC1", "code": "public interface ResumeAware<T extends ResumeStrategy> {\n\t// Allows the implementation to provide custom adapter factories.\n\tdefault String adapterFactoryService();\n\t// Gets the ResumeStrategy instance\n\tT getResumeStrategy();\n\t// Injects the ResumeStrategy instance into the object\n\tvoid setResumeStrategy(T resumeStrategy);\n}", "des": "An interface to represent an object which wishes to support resume operations using a ResumeStrategy."}
{"index": 9766, "repo": "camel-api-4.0.0-RC1", "code": "public interface ResumeStrategyConfigurationBuilder<T extends ResumeStrategyConfigurationBuilder,Y extends ResumeStrategyConfiguration> {\n\t// Builds the resume strategy configuration\n\tY build();\n\t// Sets the Cacheable.FillPolicy for the cache used in the strategy\n\tT withCacheFillPolicy(Cacheable.FillPolicy cacheFillPolicy);\n\t// Sets the local resume cache instance to use in the strategy\n\tT withResumeCache(ResumeCache<?> resumeCache);\n}", "des": "Provides a basic interface for implementing component-specific configuration builder"}
{"index": 9767, "repo": "camel-api-4.0.0-RC1", "code": "public interface RouteAware {\n\t// Gets the Route\n\tRoute getRoute();\n\t// Injects the Route\n\tvoid setRoute(Route route);\n}", "des": "An interface to represent an object which wishes to be injected with a Route such as Consumer which is the consumer for a route."}
{"index": 9768, "repo": "camel-api-4.0.0-RC1", "code": "public interface RouteConfigurationsBuilder {\n\t// Adds the route configurations from this builder to the CamelContext.\n\tvoid addRouteConfigurationsToCamelContext(CamelContext context);\n\t// Adds or updates the route configurations from this builder to the CamelContext.\n\tvoid updateRouteConfigurationsToCamelContext(CamelContext context);\n}", "des": "A route configurations builder is capable of building route configurations using the builder and model classes."}
{"index": 9769, "repo": "camel-api-4.0.0-RC1", "code": "public interface RouteError {\n\t// Gets the error.\n\tThrowable getException();\n\t// Gets the phase associated with the error.\n\tRouteError.Phase getPhase();\n\t// Whether the route is regarded as unhealthy.\n\tboolean isUnhealthy();\n}", "des": "The last error that happened during changing the route lifecycle, i.e."}
{"index": 9770, "repo": "camel-api-4.0.0-RC1", "code": "public interface RouteIdAware {\n\t// Gets the route id\n\tString getRouteId();\n\t// Sets the route id\n\tvoid setRouteId(String routeId);\n}", "des": "To allow objects to be injected with the route id"}
{"index": 9771, "repo": "camel-api-4.0.0-RC1", "code": "public interface RoutesBuilder {\n\t// Adds the routes from this Route Builder to the CamelContext.\n\tvoid addRoutesToCamelContext(CamelContext context);\n\t// Adds the templated routes from this Route Builder to the CamelContext.\n\tvoid addTemplatedRoutesToCamelContext(CamelContext context);\n\t// Adds or updates the routes from this Route Builder to the CamelContext.\n\tSet<String> updateRoutesToCamelContext(CamelContext context);\n}", "des": "A routes builder is capable of building routes using the builder and model classes."}
{"index": 9772, "repo": "camel-api-4.0.0-RC1", "code": "public interface RoutesBuilderLoader extends StaticService, CamelContextAware {\n\t// The supported file extension.\n\tString getSupportedExtension();\n\t// Loads RoutesBuilder from Resource.\n\tRoutesBuilder loadRoutesBuilder(Resource resource);\n\t// Pre-parses the RoutesBuilder from Resource.\n\tdefault void preParseRoute(Resource resource);\n}", "des": "SPI for loading RoutesBuilder from a Resource."}
{"index": 9773, "repo": "camel-api-4.0.0-RC1", "code": "public interface RouteStartupOrder {\n\t// Gets the input to this route\n\tConsumer getInput();\n\t// Gets the route\n\tRoute getRoute();\n\t// Gets the services to this route.\n\tList<Service> getServices();\n\t// Get the order this route should be started.\n\tint getStartupOrder();\n}", "des": "Information about a route to be started where we want to control the order in which they are started by CamelContext."}
{"index": 9774, "repo": "camel-api-4.0.0-RC1", "code": "public interface RouteTemplateParameterSource {\n\t// The parameters for the given route\n\tMap<String,Object> parameters(String routeId);\n\t// Gets the route id's as a set.\n\tSet<String> routeIds();\n}", "des": "Source for parameters used when creating routes from route templates."}
{"index": 9775, "repo": "camel-api-4.0.0-RC1", "code": "public class RuntimeCamelException extends RuntimeException {\n\t// Wraps the caused exception in a RuntimeCamelException if its not already such an exception.\n\tstatic RuntimeCamelException wrapRuntimeCamelException(Throwable e);\n\t// Wraps the caused exception in a RuntimeCamelException if its not already a runtime exception.\n\tstatic RuntimeException wrapRuntimeException(Throwable e);\n}", "des": "Base class for all Camel unchecked exceptions."}
{"index": 9776, "repo": "camel-api-4.0.0-RC1", "code": "public static interface RuntimeEndpointRegistry.Statistic {\n\t// Whether the endpoint is used as input our output\n\tString getDirection();\n\t// Usage of the endpoint, such as how many messages it has received / sent to\n\tlong getHits();\n\t// The route id (if the endpoint is associated with a route)\n\tString getRouteId();\n\t// The endpoint uri\n\tString getUri();\n}", "des": "Statistics gathered about the endpoint."}
{"index": 9777, "repo": "camel-api-4.0.0-RC1", "code": "public interface ScheduledPollConsumerScheduler extends ShutdownableService, CamelContextAware {\n\t// Whether the scheduler has been started.\n\tboolean isSchedulerStarted();\n\t// Initializes this ScheduledPollConsumerScheduler with the associated Consumer.\n\tvoid onInit(Consumer consumer);\n\t// Schedules the task to run.\n\tvoid scheduleTask(Runnable task);\n\t// Starts the scheduler.\n\tvoid startScheduler();\n\t// Attempts to unschedules the last task which was scheduled.\n\tvoid unscheduleTask();\n}", "des": "A pluggable scheduler for org.apache.camel.support.ScheduledPollConsumer consumers."}
{"index": 9778, "repo": "camel-api-4.0.0-RC1", "code": "public class SecureSocketProtocolsParameters extends Object {\n\t// Returns a live reference to the list of secure socket protocol names.\n\tList<String> getSecureSocketProtocol();\n\t// Sets the list of secure socket protocol names.\n\tvoid setSecureSocketProtocol(List<String> secureSocketProtocol);\n}", "des": "Represents a list of TLS/SSL cipher suite names."}
{"index": 9779, "repo": "camel-api-4.0.0-RC1", "code": "@FunctionalInterface public interface Serializable {\n\t// Serializes this offset into a buffer of bytes\n\tByteBuffer serialize();\n\t// Serializes this offset into a buffer of bytes\n\tdefault ByteBuffer serialize(Object obj);\n}", "des": "An interface that represents resumable objects that can be serialized to a medium"}
{"index": 9780, "repo": "camel-api-4.0.0-RC1", "code": "public interface Service extends AutoCloseable {\n\t// Optional build phase which is executed by frameworks that supports pre-building projects (pre-compile) which allows special optimizations such as camel-quarkus.\n\tdefault void build();\n\t// Delegates to stop() so it can be used in try-with-resources expression.\n\tdefault void close();\n\t// Initialize the service\n\tdefault void init();\n\t// Starts the service\n\tvoid start();\n\t// Stops the service\n\tvoid stop();\n}", "des": "Represents the core lifecycle API for services which can be initialized, started and stopped"}
{"index": 9781, "repo": "camel-api-4.0.0-RC1", "code": "public interface ServiceChooserAware {\n\t// Get the ServiceChooser\n\tServiceChooser getServiceChooser();\n\t// Injects the ServiceChooser\n\tvoid setServiceChooser(ServiceChooser serviceChooser);\n}", "des": "An interface to represent an object which wishes to be injected with a ServiceChooser"}
{"index": 9782, "repo": "camel-api-4.0.0-RC1", "code": "public interface ServiceDiscoveryAware {\n\t// Get the ServiceDiscovery\n\tServiceDiscovery getServiceDiscovery();\n\t// Injects the ServiceDiscovery\n\tvoid setServiceDiscovery(ServiceDiscovery serviceDiscovery);\n}", "des": "An interface to represent an object which wishes to be injected with a ServiceDiscovery"}
{"index": 9783, "repo": "camel-api-4.0.0-RC1", "code": "public interface ServiceFilterAware {\n\t// Get the ServiceFilter\n\tServiceFilter getServiceFilter();\n\t// Injects the ServiceFilter\n\tvoid setServiceFilter(ServiceFilter serviceFilter);\n}", "des": "An interface to represent an object which wishes to be injected with a ServiceFilter"}
{"index": 9784, "repo": "camel-api-4.0.0-RC1", "code": "public interface SharedInternalProcessor extends Processor {\n\t// Processes the message exchange\n\tdefault void process(Exchange exchange);\n\t// Asynchronous API\n\tboolean process(Exchange exchange, AsyncCallback originalCallback, AsyncProcessor processor, Processor resultProcessor);\n\t// Synchronous API\n\tvoid process(Exchange exchange, AsyncProcessor processor, Processor resultProcessor);\n}", "des": "A Shared (thread safe) internal Processor that Camel routing engine used during routing for cross cutting functionality such as: Execute UnitOfWork Keeping track which route currently is being routed Execute RoutePolicy Gather JMX performance statics Tracing Debugging Message History Stream Caching Transformer ..."}
{"index": 9785, "repo": "camel-api-4.0.0-RC1", "code": "public interface ShutdownAware extends ShutdownPrepared {\n\t// To defer shutdown during first phase of shutdown.\n\tboolean deferShutdown(ShutdownRunningTask shutdownRunningTask);\n\t// Gets the number of pending exchanges.\n\tint getPendingExchangesSize();\n}", "des": "Allows Consumer to fine grained control on shutdown which mostly have to cater for in-memory based components."}
{"index": 9786, "repo": "camel-api-4.0.0-RC1", "code": "public enum ShutdownRoute extends Enum<ShutdownRoute> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ShutdownRoute valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ShutdownRoute[] values();\n}", "des": "Represents the options available when shutting down routes."}
{"index": 9787, "repo": "camel-api-4.0.0-RC1", "code": "public enum ShutdownRunningTask extends Enum<ShutdownRunningTask> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ShutdownRunningTask valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ShutdownRunningTask[] values();\n}", "des": "Represents the kind of options for what to do with the current task when shutting down."}
{"index": 9788, "repo": "camel-api-4.0.0-RC1", "code": "public interface SSLContextParametersAware extends CamelContextAware {\n\t// Determine if the implementing object is using global SSL context parameters.\n\tboolean isUseGlobalSslContextParameters();\n\t// Returns the global SSLContextParameters if enabled on the implementing object, null otherwise.\n\tdefault SSLContextParameters retrieveGlobalSslContextParameters();\n\t// Enable usage of global SSL context parameters.\n\tvoid setUseGlobalSslContextParameters(boolean useGlobalSslContextParameters);\n}", "des": "Indicates that an object is able to use the global SSLContextParameters if configured."}
{"index": 9789, "repo": "camel-api-4.0.0-RC1", "code": "public interface StartupListener {\n\t// Callback invoked when the CamelContext has been fully started.\n\tdefault void onCamelContextFullyStarted(CamelContext context, boolean alreadyStarted);\n\t// Callback invoked when the CamelContext is about to be fully started (not started yet).\n\tvoid onCamelContextStarted(CamelContext context, boolean alreadyStarted);\n\t// Callback invoked when the CamelContext is being started.\n\tdefault void onCamelContextStarting(CamelContext context, boolean alreadyStarted);\n}", "des": "Allows objects to be notified when CamelContext has almost done all work when starting."}
{"index": 9790, "repo": "camel-api-4.0.0-RC1", "code": "public interface StartupStep {\n\t// Ends the step.\n\tvoid endStep();\n\t// Gets the begin time (optional).\n\tlong getBeginTime();\n\t// Description of the step\n\tString getDescription();\n\t// The id of the step\n\tint getId();\n\t// The step level (sub step of previous steps)\n\tint getLevel();\n\t// Name of the step\n\tString getName();\n\t// The id of the parent step\n\tint getParentId();\n\t// The source class type of the step\n\tString getType();\n}", "des": "Recording state of steps during startup to capture execution time, and being able to emit events to diagnostic tools such as Java Flight Recorder."}
{"index": 9791, "repo": "camel-api-4.0.0-RC1", "code": "public enum StartupSummaryLevel extends Enum<StartupSummaryLevel> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic StartupSummaryLevel valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic StartupSummaryLevel[] values();\n}", "des": "Controls the level of information logged during startup (and shutdown) of CamelContext."}
{"index": 9792, "repo": "camel-api-4.0.0-RC1", "code": "public interface StateRepository<K,V> extends Service {\n\t// Gets the state value for the given key.\n\tV getState(K key);\n\t// Sets the state value for the given key.\n\tvoid setState(K key, V value);\n}", "des": "This StateRepository holds a set of key/value pairs for defining a particular state of a component."}
{"index": 9793, "repo": "camel-api-4.0.0-RC1", "code": "public interface StaticExpression extends Expression {\n\t// Gets the constant value\n\tObject getValue();\n\t// Sets the constant value\n\tvoid setValue(Object value);\n}", "des": "Marked if the Expression or Predicate is based from a constant value (ie is static)."}
{"index": 9794, "repo": "camel-api-4.0.0-RC1", "code": "public interface StreamCache {\n\t// Create a copy of the stream.\n\tStreamCache copy(Exchange exchange);\n\t// Whether this StreamCache is in memory only or spooled to persistent storage such as files.\n\tboolean inMemory();\n\t// Gets the length of the cached stream.\n\tlong length();\n\t// Read position\n\tlong position();\n\t// Resets the StreamCache for a new stream consumption.\n\tvoid reset();\n\t// Writes the stream to the given output\n\tvoid writeTo(OutputStream os);\n}", "des": "Tagging interface to indicate that a type is capable of caching the underlying data stream."}
{"index": 9795, "repo": "camel-api-4.0.0-RC1", "code": "public static enum StreamCachingStrategy.SpoolUsedHeapMemoryLimit extends Enum<StreamCachingStrategy.SpoolUsedHeapMemoryLimit> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic StreamCachingStrategy.SpoolUsedHeapMemoryLimit valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic StreamCachingStrategy.SpoolUsedHeapMemoryLimit[] values();\n}", "des": "Used for selecting if the memory limit is committed or maximum heap memory setting."}
{"index": 9796, "repo": "camel-api-4.0.0-RC1", "code": "public interface SuspendableService extends Service {\n\t// Tests whether the service is suspended or not.\n\tboolean isSuspended();\n\t// Resumes the service.\n\tvoid resume();\n\t// Suspends the service.\n\tvoid suspend();\n}", "des": "A Service which is also capable of suspending and resuming."}
{"index": 9797, "repo": "camel-api-4.0.0-RC1", "code": "public interface Synchronization {\n\t// Get an optional SynchronizationRouteAware for this synchronization\n\tdefault SynchronizationRouteAware getRouteSynchronization();\n\t// Called when the processing of the message exchange is complete\n\tvoid onComplete(Exchange exchange);\n\t// Called when the processing of the message exchange has failed for some reason.\n\tvoid onFailure(Exchange exchange);\n}", "des": "Provides a hook for custom Processor or Component instances to respond to completed or failed processing of an Exchange rather like Spring's TransactionSynchronization"}
{"index": 9798, "repo": "camel-api-4.0.0-RC1", "code": "public interface SynchronizationRouteAware {\n\t// Invoked after the Exchange has been routed by the given route.\n\tvoid onAfterRoute(Route route, Exchange exchange);\n\t// Invoked before the Exchange is being routed by the given route.\n\tvoid onBeforeRoute(Route route, Exchange exchange);\n}", "des": "An extension to Synchronization which provides route awareness capabilities."}
{"index": 9799, "repo": "camel-api-4.0.0-RC1", "code": "public interface SynchronizationVetoable extends Synchronization {\n\t// Whether or not handover this synchronization is allowed.\n\tboolean allowHandover();\n\t// A method to perform optional housekeeping when a Synchronization is being handed over.\n\tvoid beforeHandover(Exchange target);\n}", "des": "A vetoable Synchronization."}
{"index": 9800, "repo": "camel-api-4.0.0-RC1", "code": "public interface ThreadPoolFactory {\n\t// Creates a new cached thread pool\n\tExecutorService newCachedThreadPool(ThreadFactory threadFactory);\n\t// Create a scheduled thread pool using the given thread pool profile\n\tScheduledExecutorService newScheduledThreadPool(ThreadPoolProfile profile, ThreadFactory threadFactory);\n\t// Create a thread pool using the given thread pool profile\n\tExecutorService newThreadPool(ThreadPoolProfile profile, ThreadFactory threadFactory);\n}", "des": "Creates ExecutorService and ScheduledExecutorService objects that work with a thread pool for a given ThreadPoolProfile and ThreadFactory."}
{"index": 9801, "repo": "camel-api-4.0.0-RC1", "code": "public class TypeConversionException extends RuntimeCamelException {\n\t// Returns an error message for type conversion failed.\n\tstatic String createMessage(Object value, Class<?> type, Throwable cause);\n\t// Returns the required from type.\n\tClass<?> getFromType();\n\t// Returns the required to type\n\tClass<?> getToType();\n\t// Returns the value which could not be converted\n\tObject getValue();\n}", "des": "Exception when failing during type conversion."}
{"index": 9802, "repo": "camel-api-4.0.0-RC1", "code": "public enum TypeConverterExists extends Enum<TypeConverterExists> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TypeConverterExists valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TypeConverterExists[] values();\n}", "des": "What to do if attempting to add a duplicate type converter"}
{"index": 9803, "repo": "camel-api-4.0.0-RC1", "code": "public interface UnitOfWorkFactory extends AfterPropertiesConfigured {\n\t// Callback invoked after the element have configured its properties.\n\tdefault void afterPropertiesConfigured(CamelContext camelContext);\n\t// Creates a new UnitOfWork\n\tUnitOfWork createUnitOfWork(Exchange exchange);\n}", "des": "Factory to create UnitOfWork."}
{"index": 9804, "repo": "camel-api-4.0.0-RC1", "code": "public interface UuidGenerator {\n\t// Generates an UUID string representation to be used as exchange id.\n\tdefault String generateExchangeUuid();\n\t// Generates an UUID string representation.\n\tString generateUuid();\n}", "des": "Generator to generate UUID strings."}
{"index": 9805, "repo": "camel-api-4.0.0-RC1", "code": "public enum WaitForTaskToComplete extends Enum<WaitForTaskToComplete> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic WaitForTaskToComplete valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic WaitForTaskToComplete[] values();\n}", "des": "Represent the kinds of options for wait for tasks to complete."}
{"index": 9806, "repo": "camel-api-4.0.0-RC1", "code": "public interface WrappedFile<T> {\n\t// Gets the content of the file.\n\tObject getBody();\n\t// Gets the file.\n\tT getFile();\n}", "des": "Wraps a file."}
{"index": 9807, "repo": "camel-api-4.0.0-RC1", "code": "public interface WritableHealthCheckRepository extends HealthCheckRepository {\n\t// Adds a HealthCheck to the repository.\n\tvoid addHealthCheck(HealthCheck healthCheck);\n\t// Removes a HealthCheck from the repository.\n\tvoid removeHealthCheck(HealthCheck healthCheck);\n}", "des": "An interface to represent an object which wishes to be injected with the HealthCheck"}
{"index": 9808, "repo": "spring-rabbit-3.0.6", "code": "public static enum AbstractConnectionFactory.AddressShuffleMode extends Enum<AbstractConnectionFactory.AddressShuffleMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AbstractConnectionFactory.AddressShuffleMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AbstractConnectionFactory.AddressShuffleMode[] values();\n}", "des": "The mode used to shuffle the addresses."}
{"index": 9809, "repo": "spring-rabbit-3.0.6", "code": "protected static class AmqpAppender.AmqpManager extends org.apache.logging.log4j.core.appender.AbstractManager {\n\t// Configure the RabbitConnectionFactoryBean.\n\tprotected void configureRabbitConnectionFactory(RabbitConnectionFactoryBean factoryBean);\n\t// Create the ConnectionFactory.\n\tprotected com.rabbitmq.client.ConnectionFactory createRabbitConnectionFactory();\n\tprotected boolean releaseSub(long timeout, TimeUnit timeUnit);\n\tprotected void setUpExchangeDeclaration();\n}", "des": "Manager class for the appender."}
{"index": 9810, "repo": "spring-rabbit-3.0.6", "code": "public class BatchingRabbitTemplate extends RabbitTemplate {\n\t// Perform additional start actions.\n\tvoid doStart();\n\t// Perform additional stop actions.\n\tvoid doStop();\n\t// Flush any partial in-progress batches.\n\tvoid flush();\n\tboolean isRunning();\n\t// Send a message to a specific exchange with a specific routing key.\n\tvoid send(String exchange, String routingKey, org.springframework.amqp.core.Message message, CorrelationData correlationData);\n}", "des": "A RabbitTemplate that permits batching individual messages into a larger message."}
{"index": 9811, "repo": "spring-rabbit-3.0.6", "code": "public class BrokerEvent extends org.springframework.amqp.event.AmqpEvent {\n\t// Properties of the event MessageProperties.getHeaders().\n\tMap<String,Object> getEventProperties();\n\t// The event type (MessageProperties.getReceivedRoutingKey()).\n\tString getEventType();\n\t// The complete MessageProperties from the event representing the event.\n\torg.springframework.amqp.core.MessageProperties getMessageProperties();\n}", "des": "Represents a broker event generated by the Event Exchange Plugin (https://www.rabbitmq.com/event-exchange.html)."}
{"index": 9812, "repo": "spring-rabbit-3.0.6", "code": "public static enum CachingConnectionFactory.CacheMode extends Enum<CachingConnectionFactory.CacheMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic CachingConnectionFactory.CacheMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic CachingConnectionFactory.CacheMode[] values();\n}", "des": "The cache mode."}
{"index": 9813, "repo": "spring-rabbit-3.0.6", "code": "public static enum CachingConnectionFactory.ConfirmType extends Enum<CachingConnectionFactory.ConfirmType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic CachingConnectionFactory.ConfirmType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic CachingConnectionFactory.ConfirmType[] values();\n}", "des": "The type of publisher confirms to use."}
{"index": 9814, "repo": "spring-rabbit-3.0.6", "code": "@FunctionalInterface public interface ChannelListener {\n\t// Called when a new channel is created.\n\tvoid onCreate(com.rabbitmq.client.Channel channel, boolean transactional);\n\t// Called when the underlying RabbitMQ channel is closed for any reason.\n\tdefault void onShutDown(com.rabbitmq.client.ShutdownSignalException signal);\n}", "des": "A listener for new channel creation and destruction."}
{"index": 9815, "repo": "spring-rabbit-3.0.6", "code": "public interface ChannelProxy extends com.rabbitmq.client.Channel, org.springframework.aop.RawTargetAccess {\n\t// Return the target Channel of this proxy.\n\tcom.rabbitmq.client.Channel getTargetChannel();\n\t// Return true if confirms are selected on this channel.\n\tdefault boolean isConfirmSelected();\n\t// Return true if publisher confirms are enabled.\n\tdefault boolean isPublisherConfirms();\n\t// Return whether this channel has transactions enabled txSelect().\n\tboolean isTransactional();\n}", "des": "Subinterface of Channel to be implemented by Channel proxies."}
{"index": 9816, "repo": "spring-rabbit-3.0.6", "code": "public static class ConditionalRejectingErrorHandler.DefaultExceptionStrategy extends Object implements FatalExceptionStrategy {\n\tboolean isFatal(Throwable t);\n\t// Subclasses can override this to add custom exceptions.\n\tprotected boolean isUserCauseFatal(Throwable cause);\n\t// Log the fatal ListenerExecutionFailedException at WARN level, excluding stack trace.\n\tprotected void logFatalException(ListenerExecutionFailedException t, Throwable cause);\n}", "des": "Default implementation of FatalExceptionStrategy."}
{"index": 9817, "repo": "spring-rabbit-3.0.6", "code": "@FunctionalInterface public interface ConnectionListener {\n\t// Called when a connection is closed.\n\tdefault void onClose(Connection connection);\n\t// Called when a new connection is established.\n\tvoid onCreate(Connection connection);\n\t// Called when a connection couldn't be established.\n\tdefault void onFailed(Exception exception);\n\t// Called when a connection is force closed.\n\tdefault void onShutDown(com.rabbitmq.client.ShutdownSignalException signal);\n}", "des": "A listener for connection creation and closing."}
{"index": 9818, "repo": "spring-rabbit-3.0.6", "code": "public class ConsumeOkEvent extends org.springframework.amqp.event.AmqpEvent {\n\t// Obtain the consumer tag assigned to the consumer.\n\tString getConsumerTag();\n\t// Obtain the queue name a consumer has been subscribed.\n\tString getQueue();\n}", "des": "An AmqpEvent emitted by the listener container when consumer is subscribed to the queue."}
{"index": 9819, "repo": "spring-rabbit-3.0.6", "code": "public final class DeclareExchangeConnectionListener extends Object implements ConnectionListener {\n\t// Called when a connection is closed.\n\tvoid onClose(Connection connection);\n\t// Called when a new connection is established.\n\tvoid onCreate(Connection connection);\n}", "des": "A ConnectionListener that will declare a single exchange when the connection is established."}
{"index": 9820, "repo": "spring-rabbit-3.0.6", "code": "public class Delivery extends Object {\n\t// Retrieve the message body.\n\tbyte[] getBody();\n\t// Retrieve the consumer tag.\n\tString getConsumerTag();\n\t// Retrieve the message envelope.\n\tcom.rabbitmq.client.Envelope getEnvelope();\n\t// Retrieve the message properties.\n\tcom.rabbitmq.client.AMQP.BasicProperties getProperties();\n\t// Retrieve the queue.\n\tString getQueue();\n}", "des": "Encapsulates an arbitrary message - simple \"bean\" holder structure."}
{"index": 9821, "repo": "spring-rabbit-3.0.6", "code": "public static enum ListenerContainerFactoryBean.Type extends Enum<ListenerContainerFactoryBean.Type> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ListenerContainerFactoryBean.Type valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ListenerContainerFactoryBean.Type[] values();\n}", "des": "The container type."}
{"index": 9822, "repo": "spring-rabbit-3.0.6", "code": "public class ListenerContainerIdleEvent extends org.springframework.amqp.event.AmqpEvent {\n\t// How long the container has been idle.\n\tlong getIdleTime();\n\t// The id of the listener (if @RabbitListener) or the container bean name.\n\tString getListenerId();\n\t// The queues the container is listening to.\n\tString[] getQueueNames();\n}", "des": "An event that is emitted when a container is idle if the container is configured to do so."}
{"index": 9823, "repo": "spring-rabbit-3.0.6", "code": "@FunctionalInterface public interface MessageBatchRecoverer extends MessageRecoverer {\n\t// Callback for message batch that was consumed but failed all retry attempts.\n\tvoid recover(List<org.springframework.amqp.core.Message> messages, Throwable cause);\n\t// Callback for message that was consumed but failed all retry attempts.\n\tdefault void recover(org.springframework.amqp.core.Message message, Throwable cause);\n}", "des": "A retry recoverer for use with a batch listener."}
{"index": 9824, "repo": "spring-rabbit-3.0.6", "code": "public abstract class RabbitFuture<T> extends CompletableFuture<T> {\n\tboolean cancel(boolean mayInterruptIfRunning);\n\t// When confirms are enabled contains a CompletableFuture for the confirmation.\n\tCompletableFuture<Boolean> getConfirm();\n\t// When confirms are enabled and a nack is received, contains the cause for the nack, if any.\n\tString getNackCause();\n}", "des": "Base class for CompletableFutures returned by AsyncRabbitTemplate."}
{"index": 9825, "repo": "spring-rabbit-3.0.6", "code": "@FunctionalInterface public interface RabbitListenerContainerFactory<C extends MessageListenerContainer> {\n\t// Create a MessageListenerContainer with no MessageListener or queues; the listener must be added later before the container is started.\n\tdefault C createListenerContainer();\n\t// Create a MessageListenerContainer for the given RabbitListenerEndpoint.\n\tC createListenerContainer(RabbitListenerEndpoint endpoint);\n}", "des": "Factory of MessageListenerContainers."}
{"index": 9826, "repo": "spring-rabbit-3.0.6", "code": "public enum RabbitListenerObservation extends Enum<RabbitListenerObservation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RabbitListenerObservation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RabbitListenerObservation[] values();\n}", "des": "Spring Rabbit Observation for listeners."}
{"index": 9827, "repo": "spring-rabbit-3.0.6", "code": "public static enum RabbitListenerObservation.ListenerLowCardinalityTags extends Enum<RabbitListenerObservation.ListenerLowCardinalityTags> implements io.micrometer.common.docs.KeyName {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RabbitListenerObservation.ListenerLowCardinalityTags valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RabbitListenerObservation.ListenerLowCardinalityTags[] values();\n}", "des": "Low cardinality tags."}
{"index": 9828, "repo": "spring-rabbit-3.0.6", "code": "public enum RabbitTemplateObservation extends Enum<RabbitTemplateObservation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RabbitTemplateObservation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RabbitTemplateObservation[] values();\n}", "des": "Spring RabbitMQ Observation for RabbitTemplate."}
{"index": 9829, "repo": "spring-rabbit-3.0.6", "code": "public static enum RabbitTemplateObservation.TemplateLowCardinalityTags extends Enum<RabbitTemplateObservation.TemplateLowCardinalityTags> implements io.micrometer.common.docs.KeyName {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RabbitTemplateObservation.TemplateLowCardinalityTags valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RabbitTemplateObservation.TemplateLowCardinalityTags[] values();\n}", "des": "Low cardinality tags."}
{"index": 9830, "repo": "spring-rabbit-3.0.6", "code": "public class RepublishMessageRecovererWithConfirms extends RepublishMessageRecoverer {\n\t// Send the message.\n\tprotected void doSend(String exchange, String routingKey, org.springframework.amqp.core.Message message);\n\t// Set the confirm timeout; default 10 seconds.\n\tvoid setConfirmTimeout(long confirmTimeout);\n}", "des": "A RepublishMessageRecoverer supporting publisher confirms and returns."}
{"index": 9831, "repo": "spring-rabbit-3.0.6", "code": "@FunctionalInterface public interface ShutDownChannelListener extends ChannelListener {\n\t// Called when a new channel is created.\n\tdefault void onCreate(com.rabbitmq.client.Channel channel, boolean transactional);\n\t// Called when the underlying RabbitMQ channel is closed for any reason.\n\tvoid onShutDown(com.rabbitmq.client.ShutdownSignalException signal);\n}", "des": "Functional sub interface enabling a lambda for the onShutDown method."}
{"index": 9832, "repo": "spring-rabbit-3.0.6", "code": "public class WebFluxNodeLocator extends Object implements NodeLocator<org.springframework.web.reactive.function.client.WebClient> {\n\t// Create a client instance.\n\torg.springframework.web.reactive.function.client.WebClient createClient(String username, String password);\n\t// Retrieve a map of queue properties using the RabbitMQ Management REST API.\n\tMap<String,Object> restCall(org.springframework.web.reactive.function.client.WebClient client, String baseUri, String vhost, String queue);\n}", "des": "A NodeLocator using the Spring WebFlux WebClient."}
{"index": 9833, "repo": "wicket-util-10.0.0-M1", "code": "public abstract class AbstractConverter<C> extends Object implements IConverter<C> {\n\t// Converts the given value to a string.\n\tString convertToString(C value, Locale locale);\n\tprotected abstract Class<C> getTargetType();\n\t// Creates a conversion exception for throwing\n\tprotected ConversionException newConversionException(String message, Object value, Locale locale);\n\t// Parses a value using one of the java.util.text format classes.\n\tprotected C parse(Format format, Object value, Locale locale);\n}", "des": "Base class for locale aware type converters."}
{"index": 9834, "repo": "wicket-util-10.0.0-M1", "code": "public abstract class AbstractCrypt extends Object implements ICrypt {\n\t// Crypts the given byte array\n\tprotected abstract byte[] crypt(byte[] input, int mode);\n\t// Decrypts a string into a string.\n\tfinal String decryptUrlSafe(String text);\n\t// Encrypt a string into a string using URL safe Base64 encoding.\n\tfinal String encryptUrlSafe(String plainText);\n\t// Get encryption private key\n\tString getKey();\n\t// Set encryption private key\n\tvoid setKey(String key);\n}", "des": "Abstract base class for JCE based ICrypt implementations."}
{"index": 9835, "repo": "wicket-util-10.0.0-M1", "code": "public abstract class AbstractDateConverter<D extends Date> extends AbstractConverter<D> {\n\t// Converts the given String value\n\tD convertToObject(String value, Locale locale);\n\t// Converts the given value to a string.\n\tString convertToString(D value, Locale locale);\n\t// Creates a new instance of D out of the passed date(time) as long\n\tprotected abstract D createDateLike(long date);\n\tDateFormat getDateFormat(Locale locale);\n}", "des": "A base class for all Date related converters"}
{"index": 9836, "repo": "wicket-util-10.0.0-M1", "code": "public abstract class AbstractNumberConverter<N extends Number> extends AbstractConverter<N> {\n\t// Converts the given value to a string.\n\tString convertToString(N value, Locale locale);\n\tNumberFormat getNumberFormat(Locale locale);\n\t// Creates a new NumberFormat for the given locale.\n\tprotected abstract NumberFormat newNumberFormat(Locale locale);\n\t// Parses a value as a String and returns a Number.\n\tprotected BigDecimal parse(Object value, BigDecimal min, BigDecimal max, Locale locale);\n}", "des": "Base class for all number converters."}
{"index": 9837, "repo": "wicket-util-10.0.0-M1", "code": "public class AddDelta extends Delta {\n\t// Accepts a visitor.\n\tvoid accept(RevisionVisitor visitor);\n\t// Applies this delta as a patch to the given text.\n\tvoid applyTo(List<Object> target);\n\t// Converts this delta into its RCS style string representation.\n\tvoid toRCSString(StringBuilder s, String EOL);\n\t// Converts this delta into its Unix diff style string representation.\n\tvoid toString(StringBuilder s);\n\t// Verifies that this delta can be used to patch the given text.\n\tvoid verify(List<Object> target);\n}", "des": "Holds an add-delta between to revisions of a text."}
{"index": 9838, "repo": "wicket-util-10.0.0-M1", "code": "public final class AttributeMap extends ValueMap {\n\t// Put a boolean attribute, removing it if value is false or using the key as value otherwise, i.e.\n\tboolean putAttribute(String key, boolean value);\n\t// Put a string attribute, removing it if the string is empty (nor null).\n\tString putAttribute(String key, CharSequence value);\n\t// Representation as encoded markup attributes.\n\tCharSequence toCharSequence();\n}", "des": "Map of values, extending ValueMap with methods for generating (HTML) markup attributes."}
{"index": 9839, "repo": "wicket-util-10.0.0-M1", "code": "public class ByteArrayOutputStream extends OutputStream {\n\t// Closing a ByteArrayOutputStream has no effect.\n\tvoid close();\n\tvoid reset();\n\t// Gets the size.\n\tint size();\n\t// Writes to a byte array.\n\tbyte[] toByteArray();\n\t// This as a string using the provided encoding.\n\tString toString(String enc);\n\tvoid write(byte[] b, int off, int len);\n\t// Calls the write(byte[]) method.\n\tvoid write(int b);\n\t// Write to the given output stream.\n\tvoid writeTo(OutputStream out);\n}", "des": "This class implements an output stream in which the data is written into a byte array."}
{"index": 9840, "repo": "wicket-util-10.0.0-M1", "code": "public class ByteOrderMark extends Object implements Serializable {\n\t// Indicates if this BOM's bytes equals another.\n\tboolean equals(Object obj);\n\t// The byte at the specified position.\n\tint get(int pos);\n\t// Return a copy of the BOM's bytes.\n\tbyte[] getBytes();\n\t// Return the name of the Charset the BOM represents.\n\tString getCharsetName();\n\t// Return the length of the BOM's bytes.\n\tint length();\n}", "des": "Byte Order Mark (BOM) representation - see BOMInputStream."}
{"index": 9841, "repo": "wicket-util-10.0.0-M1", "code": "public class CalendarConverter extends Object implements IConverter<Calendar> {\n\t// Converts the given String value\n\tCalendar convertToObject(String value, Locale locale);\n\t// Converts the given value to a string.\n\tString convertToString(Calendar value, Locale locale);\n}", "des": "Converts to Calendar."}
{"index": 9842, "repo": "wicket-util-10.0.0-M1", "code": "public final class Classes extends Object {\n\t// Gets the name of the given class or null if the class is null.\n\tstatic String name(Class<?> c);\n\t// Takes a Class and a relative path to a class and returns any class at that relative path.\n\tstatic Class<?> relativeClass(Class<?> scope, String path);\n\t// Gets the simple name (without the package) of the given class or null if the class is null.\n\tstatic String simpleName(Class<?> c);\n}", "des": "Utilities for dealing with classes."}
{"index": 9843, "repo": "wicket-util-10.0.0-M1", "code": "public class ClassMetaCache<T> extends Object {\n\t// Gets value from cache or returns null if not in cache\n\tT get(Class<?> key);\n\t// Puts value into cache\n\tT put(Class<?> key, T value);\n}", "des": "This class wraps a WeakHashMap that holds one ConcurrentHashMap per ClassLoader."}
{"index": 9844, "repo": "wicket-util-10.0.0-M1", "code": "public class ClassVisitFilter extends Object implements IVisitFilter {\n\t// Controls whether or not the object's children will be visited\n\tboolean visitChildren(Object object);\n\t// Controls whether or not the object will be visited\n\tboolean visitObject(Object object);\n}", "des": "IVisitFilter that restricts visitors to only visiting objects of the specified class"}
{"index": 9845, "repo": "wicket-util-10.0.0-M1", "code": "public class Connections extends Object {\n\t// Closes a connection\n\tstatic void close(URLConnection connection);\n\t// Closes a connection, ignoring any exceptions if they occur\n\tstatic void closeQuietly(URLConnection connection);\n\t// Gets last modified date of the given URL\n\tstatic Instant getLastModified(URL url);\n}", "des": "URLConnection related utilities"}
{"index": 9846, "repo": "wicket-util-10.0.0-M1", "code": "public class CustomEntityResolver extends Object implements EntityResolver {\n\t// get default instances of custom entity resolver with preloaded well-known entities\n\tstatic CustomEntityResolver getPreloaded();\n\t// add custom entity resolver\n\tvoid put(CustomEntityResolver.EntityKey key, CustomEntityResolver.EntityLocator locator);\n\tInputSource resolveEntity(String id, String url);\n}", "des": "entity resolver that tries to locate a document type definition (DTD) using a set of custom entity resolvers"}
{"index": 9847, "repo": "wicket-util-10.0.0-M1", "code": "public abstract class EnumeratedType extends StringValue {\n\t// Gets the enumerated type values for a given subclass of EnumeratedType.\n\tstatic List<EnumeratedType> getValues(Class<? extends EnumeratedType> c);\n\t// Method to ensure that == works after deserialization\n\tObject readResolve();\n}", "des": "A base class for defining enumerated types."}
{"index": 9848, "repo": "wicket-util-10.0.0-M1", "code": "public static class Exceptions.Visit<T> extends Object {\n\t// Stops visit\n\tvoid stop();\n\t// Stops visit with specified resut\n\tvoid stop(T result);\n}", "des": "Represents a visit"}
{"index": 9849, "repo": "wicket-util-10.0.0-M1", "code": "public class FileResourceStream extends AbstractResourceStream implements IFixedLocationResourceStream {\n\t// Closes this resource.\n\tvoid close();\n\t// Gets the mime type of this resource\n\tString getContentType();\n\tFile getFile();\n\t// Gets the resource stream.\n\tInputStream getInputStream();\n\t// Gets the last time this modifiable thing changed.\n\tInstant lastModifiedTime();\n\t// Gets the size of this resource\n\tBytes length();\n\tString locationAsString();\n}", "des": "A FileResourceStream is an IResource implementation for files."}
{"index": 9850, "repo": "wicket-util-10.0.0-M1", "code": "public class FileSystemResourceStream extends AbstractResourceStream implements IFixedLocationResourceStream {\n\t// Closes the resource.\n\tvoid close();\n\t// Gets the mime type of this resource\n\tString getContentType();\n\t// Gets the resource stream.\n\tInputStream getInputStream();\n\tfinal Path getPath();\n\t// Gets the last time this modifiable thing changed.\n\tInstant lastModifiedTime();\n\t// Gets the size of this resource\n\tBytes length();\n\tString locationAsString();\n}", "des": "A FileSystemResourceStream is an IResourceStream implementation for Java NIO paths."}
{"index": 9851, "repo": "wicket-util-10.0.0-M1", "code": "public final class FloatingPointGroup extends Group {\n\tdouble getDouble(Matcher matcher);\n\t// Gets double by parsing the String matched by this capturing group.\n\tdouble getDouble(Matcher matcher, double defaultValue);\n\tfloat getFloat(Matcher matcher);\n\t// Gets float by parsing the String matched by this capturing group.\n\tfloat getFloat(Matcher matcher, float defaultValue);\n}", "des": "A Group that captures floating point values (doubles and floats)."}
{"index": 9852, "repo": "wicket-util-10.0.0-M1", "code": "public interface IConverter<C> extends IClusterable {\n\t// Converts the given String value\n\tC convertToObject(String value, Locale locale);\n\t// Converts the given value to a string.\n\tString convertToString(C value, Locale locale);\n}", "des": "Converts input to output and vice versa."}
{"index": 9853, "repo": "wicket-util-10.0.0-M1", "code": "public interface ICrypt {\n\t// Decrypts a string using URL and filename safe Base64 decoding.\n\tString decryptUrlSafe(String text);\n\t// Encrypts a string using URL and filename safe Base64 encoding.\n\tString encryptUrlSafe(String plainText);\n}", "des": "Encryption and decryption implementations are accessed through this interface."}
{"index": 9854, "repo": "wicket-util-10.0.0-M1", "code": "public interface IFileCleaner {\n\t// Call this method to stop the cleaner and to free all allocated resources by it\n\tvoid destroy();\n\t// Track the specified file, using the provided marker, deleting the file when the marker instance is garbage collected.\n\tvoid track(File file, Object marker);\n\t// Track the specified file, using the provided marker, deleting the file when the marker instance is garbage collected.\n\tvoid track(File file, Object marker, org.apache.commons.io.FileDeleteStrategy deleteStrategy);\n}", "des": "Keeps track of files awaiting deletion, and deletes them when an associated marker object is reclaimed by the garbage collector."}
{"index": 9855, "repo": "wicket-util-10.0.0-M1", "code": "public final class IntegerGroup extends Group {\n\tint getInt(Matcher matcher);\n\t// Gets an int by parsing the String matched by this capturing group.\n\tint getInt(Matcher matcher, int defaultValue);\n\tlong getLong(Matcher matcher);\n\t// Gets a long by parsing the String matched by this capturing group.\n\tlong getLong(Matcher matcher, long defaultValue);\n}", "des": "A Group that captures integer values (positive and negative whole numbers, not Java ints)."}
{"index": 9856, "repo": "wicket-util-10.0.0-M1", "code": "public final class IntegerVariableAssignmentParser extends MetaPatternParser {\n\t// Gets the int part (eg the '9' from 'x = 9').\n\tint getIntValue();\n\t// Gets the int part as a long.\n\tlong getLongValue();\n\t// Gets the variable part (eg the 'x' from 'x = 9').\n\tString getVariable();\n}", "des": "Parses integer variable assignments, such as \"x = 9\" or \"x=9\"."}
{"index": 9857, "repo": "wicket-util-10.0.0-M1", "code": "public interface IVisit<R> {\n\t// Prevents the visitor from visiting any children of the object currently visited\n\tvoid dontGoDeeper();\n\t// Stops the visit/traversal\n\tvoid stop();\n\t// Stops the visit/traversal and returns result\n\tvoid stop(R result);\n}", "des": "Allows visitors to control the visit/traversal"}
{"index": 9858, "repo": "wicket-util-10.0.0-M1", "code": "public interface IVisitFilter {\n\t// Controls whether or not the object's children will be visited\n\tboolean visitChildren(Object object);\n\t// Controls whether or not the object will be visited\n\tboolean visitObject(Object object);\n}", "des": "A filter that can be used to restrict the types of objects visited by the visitor"}
{"index": 9859, "repo": "wicket-util-10.0.0-M1", "code": "public class ListParser extends MetaPatternParser {\n\t// Gets the parsed values.\n\tfinal List<String> getValues();\n\t// Parse the input and add the elements to an internal list to be accessed by\n\tfinal boolean matches();\n}", "des": "Parses an arbitrary list format with a pattern for list entries and a pattern for list separators."}
{"index": 9860, "repo": "wicket-util-10.0.0-M1", "code": "public class MapVariableInterpolator extends VariableInterpolator {\n\t// Retrieves a value for a variable name during interpolation.\n\tprotected String getValue(String variableName);\n\t// Interpolates a String with the arguments defined in the given Map.\n\tstatic String interpolate(String string, Map<?,?> variables);\n\t// Sets the Map of variables.\n\tfinal void setVariables(Map<?,?> variables);\n}", "des": "Interpolates variables into a String from a Map."}
{"index": 9861, "repo": "wicket-util-10.0.0-M1", "code": "public class MaskConverter<C> extends Object implements IConverter<C> {\n\t// Converts a string to an object using MaskFormatter.stringToValue(String).\n\tC convertToObject(String value, Locale locale);\n\t// Converts the value to a string using MaskFormatter.valueToString(Object).\n\tString convertToString(C value, Locale locale);\n}", "des": "A converter that takes a mask into account."}
{"index": 9862, "repo": "wicket-util-10.0.0-M1", "code": "public abstract class MetaPatternParser extends Object {\n\t// Advance parsing to the next element.\n\tprotected final boolean advance(MetaPattern pattern);\n\t// Whether the internal cursor has advanced to the end of the input.\n\tfinal boolean atEnd();\n\t// Gets the matcher.\n\tfinal Matcher matcher();\n\t// Whether the matcher matches the pattern.\n\tboolean matches();\n\tvoid setPattern(MetaPattern pattern);\n}", "des": "Base class for various MetaPattern based parsers."}
{"index": 9863, "repo": "wicket-util-10.0.0-M1", "code": "public class MultiMap<K,V> extends HashMap<K,List<V>> {\n\t// Adds value to the specified key\n\tvoid addValue(K key, V value);\n\t// Gets the first value in the value list\n\tV getFirstValue(K key);\n\t// Removes value from the specified key\n\tvoid removeValue(K key, V value);\n\t// Replaces all existing values with the specified value.\n\tvoid replaceValues(K key, V value);\n}", "des": "A simple multimap"}
{"index": 9864, "repo": "wicket-util-10.0.0-M1", "code": "public class NoCrypt extends Object implements ICrypt {\n\t// Decrypts a string into a string.\n\tfinal String decryptUrlSafe(String text);\n\t// Encrypt a string into a string\n\tfinal String encryptUrlSafe(String plainText);\n}", "des": "Due to legal reasons in some countries the JRE is shipped without a security provider."}
{"index": 9865, "repo": "wicket-util-10.0.0-M1", "code": "public abstract class PathNode extends Object {\n\t// Is this a bootstrap node?\n\tboolean isBootstrap();\n\t// Is this node a Snake node?\n\tabstract boolean isSnake();\n\t// Skips sequences of DiffNodes until a Snake or bootstrap node is found, or the end of the path is reached.\n\tfinal PathNode previousSnake();\n}", "des": "A node in a diffpath."}
{"index": 9866, "repo": "wicket-util-10.0.0-M1", "code": "public class PrependingStringBuffer extends Object {\n\tboolean equals(Object obj);\n\t// Returns the size of this PrependingStringBuffer\n\tint length();\n\t// Prepends one char to this PrependingStringBuffer\n\tPrependingStringBuffer prepend(char ch);\n\t// Prepends the string to this PrependingStringBuffer\n\tPrependingStringBuffer prepend(String str);\n}", "des": "This is a prepending stringbuffer optimized for constantly prepending strings to the front of the buffer."}
{"index": 9867, "repo": "wicket-util-10.0.0-M1", "code": "public class StringBufferResourceStream extends AbstractStringResourceStream {\n\t// Adds to this string buffer resource\n\tStringBufferResourceStream append(CharSequence s);\n\t// Clears the string buffer resource.\n\tStringBufferResourceStream clear();\n\tprotected String getString();\n\t// Prepends to this string buffer resource\n\tStringBufferResourceStream prepend(CharSequence s);\n}", "des": "A string resource that can be appended to."}
{"index": 9868, "repo": "wicket-util-10.0.0-M1", "code": "public final class TagNameParser extends MetaPatternParser {\n\t// Gets the tag name part (eg 'form' in 'html:form' or 'form')\n\tString getName();\n\t// Get the namespace part (eg 'html' in 'html:form') converted to all lower case characters.\n\tString getNamespace();\n}", "des": "Parses XML tag names and attribute names which may include optional namespaces like \"namespace:name\" or \"name\"."}
{"index": 9869, "repo": "wicket-util-10.0.0-M1", "code": "public class Threads extends Object {\n\t// Creates a dump of all the threads' state and stack traces similar to what JVM produces when signal SIGQUIT is send to the process on Unix machine.\n\tstatic void dumpAllThreads(org.slf4j.Logger logger);\n\t// Creates a dump of the threads' state and stack traces similar to the one that the JVM produces when signal SIGQUIT is send to the process on Unix machine.\n\tstatic void dumpSingleThread(org.slf4j.Logger logger, Thread thread);\n}", "des": "A utility class for dealing with Threads."}
{"index": 9870, "repo": "wicket-util-10.0.0-M1", "code": "public class ToString extends Object {\n\t// Converts an array of Object to a string Use the value of the line.separator system property the line separator.\n\tstatic String arrayToString(Object[] o);\n\t// Converts an array of Object to a string using the given line separator.\n\tstatic String arrayToString(Object[] o, String EOL);\n\t// Breaks a string into an array of strings.\n\tstatic String[] stringToArray(String value);\n\t// Place a string image of the object in a StringBuffer.\n\tvoid toString(StringBuilder s);\n}", "des": "This class delegates handling of the to a StringBuilder based version."}
{"index": 9871, "repo": "wicket-util-10.0.0-M1", "code": "public final class VariableAssignmentParser extends MetaPatternParser {\n\t// Gets the key part (eg 'foo' in 'foo=bar').\n\tString getKey();\n\t// Gets the value part (eg 'bar' in 'foo=bar').\n\tString getValue();\n}", "des": "Parses key value assignment statements like \"foo=bar\" but also supporting namespaces like \"wicket:foo=bar\"."}
{"index": 9872, "repo": "wicket-util-10.0.0-M1", "code": "public final class XmlReader extends Reader {\n\tvoid close();\n\t// Return the encoding used while reading the markup file.\n\tfinal String getEncoding();\n\t// Reads and parses markup from a resource such as file.\n\tvoid init();\n\tint read(char[] buf, int from, int to);\n}", "des": "This is a simple XmlReader."}
{"index": 9873, "repo": "wicket-util-10.0.0-M1", "code": "public class XSLTResourceStream extends AbstractResourceStream {\n\t// Closes the resource.\n\tvoid close();\n\t// Returns always null\n\tString getContentType();\n\t// Gets the resource stream.\n\tInputStream getInputStream();\n\tprotected Map<Object,Object> getParameters();\n\t// Returns always null\n\tInstant lastModifiedTime();\n\t// Gets the size of this resource\n\tBytes length();\n}", "des": "IResourceStream that applies XSLT on an input IResourceStream."}
{"index": 9874, "repo": "wicket-util-10.0.0-M1", "code": "public class ZipResourceStream extends AbstractResourceStream {\n\t// Closes the resource.\n\tvoid close();\n\t// Gets the mime type of this resource\n\tString getContentType();\n\t// Gets the resource stream.\n\tInputStream getInputStream();\n\t// Gets the last time this modifiable thing changed.\n\tInstant lastModifiedTime();\n\t// Gets the size of this resource\n\tBytes length();\n}", "des": "An IResourceStream that ZIPs a directory's contents on the fly"}
{"index": 9875, "repo": "spring-cloud-context-3.1.7", "code": "public interface ScopeCache {\n\t// Clears the cache and returns all objects in an unmodifiable collection.\n\tCollection<Object> clear();\n\t// Gets the named object from the cache.\n\tObject get(String name);\n\t// Put a value in the cache if the key is not already used.\n\tObject put(String name, Object value);\n\t// Removes the object with this name from the cache.\n\tObject remove(String name);\n}", "des": "A special-purpose cache interface specifically for the GenericScope to use to manage cached bean instances."}
{"index": 9876, "repo": "spring-cloud-context-3.1.7", "code": "public class StandardScopeCache extends Object implements ScopeCache {\n\t// Clears the cache and returns all objects in an unmodifiable collection.\n\tCollection<Object> clear();\n\t// Gets the named object from the cache.\n\tObject get(String name);\n\t// Put a value in the cache if the key is not already used.\n\tObject put(String name, Object value);\n\t// Removes the object with this name from the cache.\n\tObject remove(String name);\n}", "des": "A simple cache implementation backed by a concurrent map."}
{"index": 9877, "repo": "wicket-request-10.0.0-M1", "code": "public final class AbortWithHttpErrorCodeException extends ResetResponseException {\n\t// Gets the error code.\n\tint getErrorCode();\n\t// Gets the error message\n\tString getMessage();\n}", "des": "Causes Wicket to abort processing and set the specified HTTP error code, with the provided message if specified."}
{"index": 9878, "repo": "wicket-request-10.0.0-M1", "code": "public class CombinedRequestParametersAdapter extends Object implements IRequestParameters {\n\t// Returns immutable set of all available parameter names.\n\tSet<String> getParameterNames();\n\t// Returns single value for parameter with specified name.\n\torg.apache.wicket.util.string.StringValue getParameterValue(String name);\n\t// Returns list of values for parameter with specified name.\n\tList<org.apache.wicket.util.string.StringValue> getParameterValues(String name);\n}", "des": "IRequestParameters implementation that combines other IRequestParameterss."}
{"index": 9879, "repo": "wicket-request-10.0.0-M1", "code": "public class EmptyRequestParameters extends Object implements IRequestParameters {\n\t// Returns immutable set of all available parameter names.\n\tSet<String> getParameterNames();\n\t// Returns single value for parameter with specified name.\n\torg.apache.wicket.util.string.StringValue getParameterValue(String name);\n\t// Returns list of values for parameter with specified name.\n\tList<org.apache.wicket.util.string.StringValue> getParameterValues(String name);\n}", "des": "Read only empty IRequestParameters."}
{"index": 9880, "repo": "wicket-request-10.0.0-M1", "code": "public final class ErrorCodeRequestHandler extends Object implements IRequestHandler {\n\t// Gets the servlet error code.\n\tfinal int getErrorCode();\n\t// Gets the optional message to send to the client.\n\tfinal String getMessage();\n\t// Respond by sending the set errorCode and optionally the message to the browser.\n\tvoid respond(IRequestCycle requestCycle);\n}", "des": "Response target that is to be used in a servlet environment to send an error code and optionally a message."}
{"index": 9881, "repo": "wicket-request-10.0.0-M1", "code": "public interface ICompoundRequestMapper extends IRequestMapper, Iterable<IRequestMapper> {\n\t// Registers a IRequestMapper\n\tICompoundRequestMapper add(IRequestMapper mapper);\n\t// Unregisters a IRequestMapper\n\tICompoundRequestMapper remove(IRequestMapper mapper);\n}", "des": "Mapper that delegates the mapping to a contained IRequestMappers with the highest compatibility score."}
{"index": 9882, "repo": "wicket-request-10.0.0-M1", "code": "public interface IIndexedParameters {\n\t// Removes all indexed parameters.\n\tIIndexedParameters clearIndexed();\n\torg.apache.wicket.util.string.StringValue get(int index);\n\t// Removes indexed parameter on given index\n\tIIndexedParameters remove(int index);\n\t// Sets the indexed parameter on given index\n\tIIndexedParameters set(int index, Object object);\n}", "des": "Container for parameters that are identified by their index"}
{"index": 9883, "repo": "wicket-request-10.0.0-M1", "code": "public static enum INamedParameters.Type extends Enum<INamedParameters.Type> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic INamedParameters.Type valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic INamedParameters.Type[] values();\n}", "des": "A hint where the parameter is read/parsed from."}
{"index": 9884, "repo": "wicket-request-10.0.0-M1", "code": "public interface IPageParametersEncoder {\n\t// Decodes the given URL to PageParameters.\n\tPageParameters decodePageParameters(Url url);\n\t// Encode the given PageParameters instance into URL.\n\tUrl encodePageParameters(PageParameters pageParameters);\n}", "des": "Encoder that can encode and decode PageParameters to/from URL."}
{"index": 9885, "repo": "wicket-request-10.0.0-M1", "code": "@FunctionalInterface public interface IRequestHandler {\n\t// This method is called at the end of a request cycle to indicate that processing is done and that cleaning up of the subject(s) of this target may be done.\n\tdefault void detach(IRequestCycle requestCycle);\n\t// Generates a response.\n\tvoid respond(IRequestCycle requestCycle);\n}", "des": "A request handler is the base entity that is the subject of a request."}
{"index": 9886, "repo": "wicket-request-10.0.0-M1", "code": "public interface IRequestMapper {\n\t// Returns the score representing how compatible this request mapper is to processing the given request.\n\tint getCompatibilityScore(Request request);\n\t// Returns the Url for given IRequestHandler or null if the request handler is not recognized.\n\tUrl mapHandler(IRequestHandler requestHandler);\n\t// Returns IRequestHandler for the request or null if the Url is not recognized.\n\tIRequestHandler mapRequest(Request request);\n}", "des": "Maps IRequestHandler(s) into Url(s) and Request(s) to IRequestHandler(s)."}
{"index": 9887, "repo": "wicket-request-10.0.0-M1", "code": "public interface IRequestParameters {\n\t// Returns immutable set of all available parameter names.\n\tSet<String> getParameterNames();\n\t// Returns single value for parameter with specified name.\n\torg.apache.wicket.util.string.StringValue getParameterValue(String name);\n\t// Returns list of values for parameter with specified name.\n\tList<org.apache.wicket.util.string.StringValue> getParameterValues(String name);\n}", "des": "Represents request parameters."}
{"index": 9888, "repo": "wicket-request-10.0.0-M1", "code": "public interface IUrlRenderer {\n\t// Renders the passed url as full/absolute.\n\tString renderFullUrl(Url url, Url baseUrl);\n\t// Renders the passed url as relative to a base url.\n\tString renderRelativeUrl(Url url, Url baseUrl);\n}", "des": "An interface that a Url can implement if it knows how to render itself as full url or relative to a base url"}
{"index": 9889, "repo": "wicket-request-10.0.0-M1", "code": "public interface IWritableRequestParameters extends IRequestParameters {\n\t// Clears all parameters.\n\tvoid reset();\n\t// Sets the values for given parameter.\n\tvoid setParameterValues(String key, List<org.apache.wicket.util.string.StringValue> values);\n}", "des": "Request parameters that can be modified."}
{"index": 9890, "repo": "wicket-request-10.0.0-M1", "code": "public class PageParametersEncoder extends Object implements IPageParametersEncoder {\n\t// Decodes the given URL to PageParameters.\n\tPageParameters decodePageParameters(Url url);\n\t// Encode the given PageParameters instance into URL.\n\tUrl encodePageParameters(PageParameters pageParameters);\n}", "des": "Simple encoder with direct indexed/named parameters mapping."}
{"index": 9891, "repo": "wicket-request-10.0.0-M1", "code": "public class TextRequestHandler extends Object implements IRequestHandler {\n\t// Gets the string property.\n\tString getString();\n\t// Responds by sending the string property.\n\tvoid respond(IRequestCycle requestCycle);\n}", "des": "Request target that responds by sending its string property."}
{"index": 9892, "repo": "wicket-request-10.0.0-M1", "code": "public static final class Url.QueryParameter extends Object implements Serializable {\n\tboolean equals(Object obj);\n\t// Returns query parameter name.\n\tString getName();\n\t// Returns query parameter value.\n\tString getValue();\n\tString toString(Charset charset);\n}", "des": "Represents a single query parameter"}
{"index": 9893, "repo": "wicket-request-10.0.0-M1", "code": "public static enum Url.StringMode extends Enum<Url.StringMode> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Url.StringMode valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Url.StringMode[] values();\n}", "des": "Modes with which urls can be stringized"}
{"index": 9894, "repo": "wicket-request-10.0.0-M1", "code": "public class UrlPathPageParametersEncoder extends Object implements IPageParametersEncoder {\n\t// Decodes the given URL to PageParameters.\n\tPageParameters decodePageParameters(Url url);\n\t// Encode the given PageParameters instance into URL.\n\tUrl encodePageParameters(PageParameters params);\n}", "des": "Encodes page parameters into Url path fragments instead of the query string like the default PageParametersEncoder."}
{"index": 9895, "repo": "wicket-request-10.0.0-M1", "code": "public class UrlRequestParametersAdapter extends Object implements IRequestParameters {\n\t// Returns immutable set of all available parameter names.\n\tSet<String> getParameterNames();\n\t// Returns single value for parameter with specified name.\n\torg.apache.wicket.util.string.StringValue getParameterValue(String name);\n\t// Returns list of values for parameter with specified name.\n\tList<org.apache.wicket.util.string.StringValue> getParameterValues(String name);\n}", "des": "Utility class that expresses query parameters from Url as IRequestParameters."}
{"index": 9896, "repo": "wicket-request-10.0.0-M1", "code": "public class UrlUtils extends Object {\n\t// Checks if the url is relative or absolute\n\tstatic boolean isRelative(String url);\n\t// Makes sure the path starts with a slash and does not end with a slash.\n\tstatic String normalizePath(String path);\n\t// Rewrites a relative url to be context relative, leaves absolute urls same.\n\tstatic String rewriteToContextRelative(String url, IRequestCycle requestCycle);\n}", "des": "Various url utilities"}
{"index": 9897, "repo": "wicket-request-10.0.0-M1", "code": "public static enum WebResponse.CacheScope extends Enum<WebResponse.CacheScope> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic WebResponse.CacheScope valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic WebResponse.CacheScope[] values();\n}", "des": "caching scope for data"}
{"index": 9898, "repo": "shiro-web-2.0.0-alpha-2", "code": "public static enum Cookie.SameSiteOptions extends Enum<Cookie.SameSiteOptions> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Cookie.SameSiteOptions valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Cookie.SameSiteOptions[] values();\n}", "des": "The SameSite attribute of the Set-Cookie HTTP response header allows you to declare if your cookie should be restricted to a first-party or same-site context."}
{"index": 9899, "repo": "shiro-web-2.0.0-alpha-2", "code": "public enum DefaultFilter extends Enum<DefaultFilter> {\n\tstatic Map<String,javax.servlet.Filter> createInstanceMap(javax.servlet.FilterConfig config);\n\tClass<? extends javax.servlet.Filter> getFilterClass();\n\tjavax.servlet.Filter newInstance();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DefaultFilter valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DefaultFilter[] values();\n}", "des": "Enum representing all of the default Shiro Filter instances available to web applications."}
{"index": 9900, "repo": "shiro-web-2.0.0-alpha-2", "code": "public class EnvironmentLoaderListener extends EnvironmentLoader implements javax.servlet.ServletContextListener {\n\t// Destroys any previously created/bound WebEnvironment instance created by the contextInitialized(javax.servlet.ServletContextEvent) method.\n\tvoid contextDestroyed(javax.servlet.ServletContextEvent sce);\n\t// Initializes the Shiro WebEnvironment and binds it to the ServletContext at application startup for future reference.\n\tvoid contextInitialized(javax.servlet.ServletContextEvent sce);\n}", "des": "Bootstrap listener to startup and shutdown the web application's Shiro WebEnvironment at ServletContext startup and shutdown respectively."}
{"index": 9901, "repo": "shiro-web-2.0.0-alpha-2", "code": "public interface IpSource {\n\t// Returns a set of strings representing IP address representing IPv4 or IPv6 ranges / CIDRs.\n\tCollection<String> getAuthorizedIps();\n\t// Returns a set of strings representing IP address representing IPv4 or IPv6 ranges / CIDRs.\n\tCollection<String> getDeniedIps();\n}", "des": "Represents a source of information for IP restrictions (see IpFilter)"}
{"index": 9902, "repo": "shiro-web-2.0.0-alpha-2", "code": "public abstract class NameableFilter extends AbstractFilter implements org.apache.shiro.lang.util.Nameable {\n\t// Returns the filter's name.\n\tprotected String getName();\n\t// Sets the filter's name.\n\tvoid setName(String name);\n\t// Returns a StringBuilder instance with the name, or if the name is null, just the super.toStringBuilder() instance.\n\tprotected StringBuilder toStringBuilder();\n}", "des": "Allows a filter to be named via JavaBeans-compatible NameableFilter.getName()/NameableFilter.setName(String) methods."}
{"index": 9903, "repo": "shiro-web-2.0.0-alpha-2", "code": "public interface NamedFilterList extends List<javax.servlet.Filter> {\n\t// Returns the configuration-unique name assigned to this Filter list.\n\tString getName();\n\t// Returns a new FilterChain instance that will first execute this list's Filters (in list order) and end with the execution of the given filterChain instance.\n\tjavax.servlet.FilterChain proxy(javax.servlet.FilterChain filterChain);\n}", "des": "A NamedFilterList is a List of Filter instances that is uniquely identified by a name."}
{"index": 9904, "repo": "shiro-web-2.0.0-alpha-2", "code": "public interface RequestPairSource {\n\t// Returns the incoming ServletRequest associated with the component.\n\tjavax.servlet.ServletRequest getServletRequest();\n\t// Returns the outgoing ServletResponse paired with the incoming servletRequest.\n\tjavax.servlet.ServletResponse getServletResponse();\n}", "des": "A RequestPairSource is a component that can supply a ServletRequest and ServletResponse pair associated with a currently executing request."}
{"index": 9905, "repo": "shiro-web-2.0.0-alpha-2", "code": "public class WebSessionKey extends org.apache.shiro.session.mgt.DefaultSessionKey implements RequestPairSource {\n\t// Returns the incoming ServletRequest associated with the component.\n\tjavax.servlet.ServletRequest getServletRequest();\n\t// Returns the outgoing ServletResponse paired with the incoming servletRequest.\n\tjavax.servlet.ServletResponse getServletResponse();\n}", "des": "A SessionKey implementation that also retains the ServletRequest and ServletResponse associated with the web request that is performing the session lookup."}
{"index": 9906, "repo": "shiro-web-2.0.0-alpha-2", "code": "public interface WebSubject extends org.apache.shiro.subject.Subject, RequestPairSource {\n\t// Returns the ServletRequest accessible when the Subject instance was created.\n\tjavax.servlet.ServletRequest getServletRequest();\n\t// Returns the ServletResponse accessible when the Subject instance was created.\n\tjavax.servlet.ServletResponse getServletResponse();\n}", "des": "A WebSubject represents a Subject instance that was acquired as a result of an incoming ServletRequest."}
{"index": 9907, "repo": "spring-data-cassandra-4.1.2", "code": "public class AddColumnSpecification extends ColumnTypeChangeSpecification {\n\t// Create a new AddColumnSpecification for the given name and DataType.\n\tstatic AddColumnSpecification addColumn(com.datastax.oss.driver.api.core.CqlIdentifier name, com.datastax.oss.driver.api.core.type.DataType type);\n\t// Create a new AddColumnSpecification for the given name and DataType.\n\tstatic AddColumnSpecification addColumn(String name, com.datastax.oss.driver.api.core.type.DataType type);\n}", "des": "Value object representing a specification to add a column."}
{"index": 9908, "repo": "spring-data-cassandra-4.1.2", "code": "public class AlterKeyspaceSpecification extends KeyspaceOptionsSpecification<AlterKeyspaceSpecification> {\n\t// Entry point into the AlterKeyspaceSpecification's fluent API given name to alter a keyspace.\n\tstatic AlterKeyspaceSpecification alterKeyspace(com.datastax.oss.driver.api.core.CqlIdentifier name);\n\t// Entry point into the AlterKeyspaceSpecification's fluent API given name to alter a keyspace.\n\tstatic AlterKeyspaceSpecification alterKeyspace(String name);\n}", "des": "Object to configure a ALTER KEYSPACE specification."}
{"index": 9909, "repo": "spring-data-cassandra-4.1.2", "code": "public interface CassandraColumnType extends ColumnType {\n\t// Returns the DataType associated with this column type.\n\tcom.datastax.oss.driver.api.core.type.DataType getDataType();\n\t// Returns whether the associated DataType is a TupleType.\n\tdefault boolean isTupleType();\n\t// Returns whether the associated DataType is a UserDefinedType.\n\tdefault boolean isUserDefinedType();\n}", "des": "Descriptor for a Cassandra column type exposing a DataType."}
{"index": 9910, "repo": "spring-data-cassandra-4.1.2", "code": "public class CassandraCqlTemplateFactoryBean extends Object implements FactoryBean<CqlTemplate>, InitializingBean {\n\tvoid afterPropertiesSet();\n\tCqlTemplate getObject();\n\tClass<CqlTemplate> getObjectType();\n\tboolean isSingleton();\n\t// Sets the Cassandra CqlSession to use.\n\tvoid setSession(com.datastax.oss.driver.api.core.CqlSession session);\n\t// Sets the Cassandra SessionFactory to use.\n\tvoid setSessionFactory(SessionFactory sessionFactory);\n}", "des": "Factory for configuring a CqlTemplate."}
{"index": 9911, "repo": "spring-data-cassandra-4.1.2", "code": "public class CassandraExceptionTranslator extends Object implements CqlExceptionTranslator {\n\t// Build a message String for the given DriverException.\n\tprotected String buildMessage(String task, String cql, RuntimeException ex);\n\t// Translate the given RuntimeException into a generic DataAccessException.\n\tDataAccessException translate(String task, String cql, RuntimeException exception);\n\tDataAccessException translateExceptionIfPossible(RuntimeException exception);\n}", "des": "Simple PersistenceExceptionTranslator for Cassandra."}
{"index": 9912, "repo": "spring-data-cassandra-4.1.2", "code": "public class CassandraPersistentEntitySchemaDropper extends Object {\n\t// Drop tables that exist in the keyspace.\n\tvoid dropTables(boolean dropUnused);\n\t// Drop user types that exist in the keyspace.\n\tvoid dropUserTypes(boolean dropUnused);\n}", "des": "Schema drop support for Cassandra based on CassandraMappingContext and CassandraPersistentEntity."}
{"index": 9913, "repo": "spring-data-cassandra-4.1.2", "code": "@NoRepositoryBean public interface CassandraRepository<T,ID> extends ListCrudRepository<T,ID> {\n\t// Returns a Slice of entities meeting the paging restriction provided in the Pageable object.\n\tSlice<T> findAll(Pageable pageable);\n\tList<T> findAllById(Iterable<ID> ids);\n\t// Inserts the given entities.\n\t<S extends T>List<S> insert(Iterable<S> entities);\n\t// Inserts the given entity.\n\t<S extends T>S insert(S entity);\n}", "des": "Cassandra-specific extension of the CrudRepository interface that allows the specification of a type for the identity of the @Table (or @Persistable) type."}
{"index": 9914, "repo": "spring-data-cassandra-4.1.2", "code": "public class CassandraSchemaElementExistsException extends NonTransientDataAccessException {\n\t// Deprecated.\n\tString getElementName();\n\t// Deprecated.\n\tCassandraSchemaElementExistsException.ElementType getElementType();\n}", "des": "Spring data access exception for when Cassandra schema element being created already exists."}
{"index": 9915, "repo": "spring-data-cassandra-4.1.2", "code": "public static enum CassandraType.Name extends Enum<CassandraType.Name> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic CassandraType.Name valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic CassandraType.Name[] values();\n}", "des": "Cassandra Protocol types."}
{"index": 9916, "repo": "spring-data-cassandra-4.1.2", "code": "public interface CassandraValueProvider extends PropertyValueProvider<CassandraPersistentProperty> {\n\t// Returns whether the underlying source.\n\tObject getSource();\n\t// Returns whether the underlying source contains a data source for the given CassandraPersistentProperty.\n\tboolean hasProperty(CassandraPersistentProperty property);\n}", "des": "PropertyValueProvider for CassandraPersistentProperty."}
{"index": 9917, "repo": "spring-data-cassandra-4.1.2", "code": "public abstract class ColumnName extends Object {\n\tboolean equals(Object obj);\n\t// Create a ColumnName given CqlIdentifier.\n\tstatic ColumnName from(com.datastax.oss.driver.api.core.CqlIdentifier cqlIdentifier);\n\t// Create a ColumnName given a string columnName.\n\tstatic ColumnName from(String columnName);\n\tabstract Optional<String> getColumnName();\n\tabstract Optional<com.datastax.oss.driver.api.core.CqlIdentifier> getCqlIdentifier();\n\t// Represent the column name as CQL.\n\tabstract String toCql();\n}", "des": "Value object representing a column name."}
{"index": 9918, "repo": "spring-data-cassandra-4.1.2", "code": "public interface ColumnTypeResolver {\n\t// Resolve a ColumnType from a value.\n\tColumnType resolve(Object value);\n\t// Resolve a CassandraColumnType from a CassandraPersistentProperty.\n\tdefault CassandraColumnType resolve(CassandraPersistentProperty property);\n\t// Resolve a CassandraColumnType from a CassandraType annotation.\n\tCassandraColumnType resolve(CassandraType annotation);\n\t// Resolve a CassandraColumnType from TypeInformation.\n\tCassandraColumnType resolve(TypeInformation<?> typeInformation);\n}", "des": "Resolves ColumnType for properties, TypeInformation, and values."}
{"index": 9919, "repo": "spring-data-cassandra-4.1.2", "code": "public class CompositeKeyspacePopulator extends Object implements KeyspacePopulator {\n\t// Add one or more populators to the list of delegates.\n\tvoid addPopulators(KeyspacePopulator... populators);\n\t// Populate, initialize, or clean up the database using the provided CqlSession connection.\n\tvoid populate(com.datastax.oss.driver.api.core.CqlSession session);\n\t// Specify one or more populators to delegate to.\n\tvoid setPopulators(KeyspacePopulator... populators);\n}", "des": "Composite KeyspacePopulator that delegates to a list of given KeyspacePopulator implementations, executing all scripts."}
{"index": 9920, "repo": "spring-data-cassandra-4.1.2", "code": "public enum CompressionType extends Enum<CompressionType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic CompressionType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic CompressionType[] values();\n}", "des": "Simple enumeration for the various compression types."}
{"index": 9921, "repo": "spring-data-cassandra-4.1.2", "code": "public static enum CreateIndexSpecification.ColumnFunction extends Enum<CreateIndexSpecification.ColumnFunction> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic CreateIndexSpecification.ColumnFunction valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic CreateIndexSpecification.ColumnFunction[] values();\n}", "des": "Column functions to specify indexing behavior."}
{"index": 9922, "repo": "spring-data-cassandra-4.1.2", "code": "public interface CriteriaDefinition {\n\t// Get the identifying key.\n\tColumnName getColumnName();\n\t// Get CriteriaDefinition.Predicate.\n\tCriteriaDefinition.Predicate getPredicate();\n}", "des": "Criteria definition for a ColumnName exposing a CriteriaDefinition.Predicate."}
{"index": 9923, "repo": "spring-data-cassandra-4.1.2", "code": "public static enum CriteriaDefinition.Operators extends Enum<CriteriaDefinition.Operators> implements CriteriaDefinition.Operator {\n\tstatic Optional<CriteriaDefinition.Operators> from(String operator);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic CriteriaDefinition.Operators valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic CriteriaDefinition.Operators[] values();\n}", "des": "Commonly used CQL operators."}
{"index": 9924, "repo": "spring-data-cassandra-4.1.2", "code": "public class DeleteOptions extends WriteOptions {\n\t// Create a new DeleteOptions.DeleteOptionsBuilder.\n\tstatic DeleteOptions.DeleteOptionsBuilder builder();\n\t// Create default DeleteOptions.\n\tstatic DeleteOptions empty();\n\tboolean equals(Object o);\n\tFilter getIfCondition();\n\tboolean isIfExists();\n\t// Create a new DeleteOptions.DeleteOptionsBuilder to mutate properties of this DeleteOptions.\n\tDeleteOptions.DeleteOptionsBuilder mutate();\n}", "des": "Extension to WriteOptions for use with DELETE operations."}
{"index": 9925, "repo": "spring-data-cassandra-4.1.2", "code": "public class DropColumnSpecification extends ColumnChangeSpecification {\n\t// Create a new DropColumnSpecification for the given name.\n\tstatic DropColumnSpecification dropColumn(com.datastax.oss.driver.api.core.CqlIdentifier name);\n\t// Create a new DropColumnSpecification for the given name.\n\tstatic DropColumnSpecification dropColumn(String name);\n}", "des": "Value object representing a specification to drop a column."}
{"index": 9926, "repo": "spring-data-cassandra-4.1.2", "code": "public class DropIndexSpecification extends IndexNameSpecification<DropIndexSpecification> {\n\t// Create a new DropIndexSpecification for the given indexName.\n\tstatic DropIndexSpecification dropIndex(com.datastax.oss.driver.api.core.CqlIdentifier indexName);\n\t// Create a new DropIndexSpecification for the given indexName.\n\tstatic DropIndexSpecification dropIndex(String indexName);\n}", "des": "Value object representing a DROP INDEX specification."}
{"index": 9927, "repo": "spring-data-cassandra-4.1.2", "code": "public static enum Embedded.OnEmpty extends Enum<Embedded.OnEmpty> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Embedded.OnEmpty valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Embedded.OnEmpty[] values();\n}", "des": "Load strategy to be used Embedded.onEmpty()."}
{"index": 9928, "repo": "spring-data-cassandra-4.1.2", "code": "public class EntityMapping extends Object {\n\tboolean equals(Object obj);\n\tString getEntityClassName();\n\t// Deprecated. since 3.0.\n\tString getForceQuote();\n\tMap<String,PropertyMapping> getPropertyMappings();\n\tString getTableName();\n\tvoid setEntityClassName(String entityClassName);\n\t// Deprecated.\n\tvoid setForceQuote(String forceQuote);\n\tvoid setPropertyMappings(Map<String,PropertyMapping> propertyMappings);\n\tvoid setTableName(String tableName);\n}", "des": "Mapping information for an individual entity class."}
{"index": 9929, "repo": "spring-data-cassandra-4.1.2", "code": "public static interface ExecutableDeleteOperation.DeleteWithTable {\n\t// Explicitly set the name of the table on which to execute the delete.\n\tExecutableDeleteOperation.DeleteWithQuery inTable(com.datastax.oss.driver.api.core.CqlIdentifier table);\n\t// Explicitly set the name of the table on which to execute the delete.\n\tdefault ExecutableDeleteOperation.DeleteWithQuery inTable(String table);\n}", "des": "Table override (optional)."}
{"index": 9930, "repo": "spring-data-cassandra-4.1.2", "code": "public static interface ExecutableInsertOperation.InsertWithTable<T> extends ExecutableInsertOperation.InsertWithOptions<T> {\n\t// Explicitly set the name of the table.\n\tExecutableInsertOperation.InsertWithOptions<T> inTable(com.datastax.oss.driver.api.core.CqlIdentifier table);\n\t// Explicitly set the name of the table.\n\tdefault ExecutableInsertOperation.InsertWithOptions<T> inTable(String table);\n}", "des": "Table override (optional)."}
{"index": 9931, "repo": "spring-data-cassandra-4.1.2", "code": "public static interface ExecutableSelectOperation.SelectWithTable<T> extends ExecutableSelectOperation.SelectWithQuery<T> {\n\t// Explicitly set the name of the table on which to execute the query.\n\tExecutableSelectOperation.SelectWithProjection<T> inTable(com.datastax.oss.driver.api.core.CqlIdentifier table);\n\t// Explicitly set the name of the table on which to execute the query.\n\tdefault ExecutableSelectOperation.SelectWithProjection<T> inTable(String table);\n}", "des": "Table override (optional)."}
{"index": 9932, "repo": "spring-data-cassandra-4.1.2", "code": "public static interface ExecutableUpdateOperation.UpdateWithTable {\n\t// Explicitly set the name of the table on which to execute the update.\n\tExecutableUpdateOperation.UpdateWithQuery inTable(com.datastax.oss.driver.api.core.CqlIdentifier table);\n\t// Explicitly set the name of the table on which to execute the update.\n\tdefault ExecutableUpdateOperation.UpdateWithQuery inTable(String table);\n}", "des": "Table override (optional)."}
{"index": 9933, "repo": "spring-data-cassandra-4.1.2", "code": "public class FieldSpecification extends Object {\n\t// Create a new FieldSpecification given name and DataType.\n\tstatic FieldSpecification of(com.datastax.oss.driver.api.core.CqlIdentifier name, com.datastax.oss.driver.api.core.type.DataType type);\n\t// Create a new FieldSpecification for the given name and DataType\n\tstatic FieldSpecification of(String name, com.datastax.oss.driver.api.core.type.DataType type);\n\tString toCql();\n\tStringBuilder toCql(StringBuilder cql);\n}", "des": "Base value object class to specify user type fields."}
{"index": 9934, "repo": "spring-data-cassandra-4.1.2", "code": "@FunctionalInterface public interface Filter extends Streamable<CriteriaDefinition> {\n\t// Create a simple Filter given CriteriaDefinitions.\n\tstatic Filter from(Iterable<? extends CriteriaDefinition> criteriaDefinitions);\n\t// Create a simple Filter given CriteriaDefinitions.\n\tstatic Filter from(CriteriaDefinition... criteriaDefinitions);\n\tIterable<CriteriaDefinition> getCriteriaDefinitions();\n\tdefault Iterator<CriteriaDefinition> iterator();\n}", "des": "Filter consisting of CriteriaDefinitions to be used with SELECT, UPDATE and DELETE queries."}
{"index": 9935, "repo": "spring-data-cassandra-4.1.2", "code": "public class IdInterfaceExceptions extends MappingException {\n\tvoid add(IdInterfaceException e);\n\t// Returns the number of exceptions aggregated in this exception.\n\tint getCount();\n\t// Returns a list of the IdInterfaceExceptions aggregated within.\n\tCollection<MappingException> getExceptions();\n\tString getIdInterfaceName();\n\tString getMessage();\n\t// Returns a list of the IdInterfaceException messages aggregated within.\n\tCollection<String> getMessages();\n}", "des": "Aggregator of multiple violations for convenience when verifying id interfaces."}
{"index": 9936, "repo": "spring-data-cassandra-4.1.2", "code": "public class IncorrectResultSetColumnCountException extends DataRetrievalFailureException {\n\t// Return the actual column count.\n\tint getActualCount();\n\t// Return the expected column count.\n\tint getExpectedCount();\n}", "des": "Data access exception thrown when a result set did not have the correct column count, for example when expecting a single column but getting 0 or more than 1 columns."}
{"index": 9937, "repo": "spring-data-cassandra-4.1.2", "code": "public interface IndexDescriptor {\n\tcom.datastax.oss.driver.api.core.CqlIdentifier getColumnName();\n\t// Returns the name of the index.\n\tcom.datastax.oss.driver.api.core.CqlIdentifier getName();\n\t// Returns the table name for the index\n\tcom.datastax.oss.driver.api.core.CqlIdentifier getTableName();\n\tString getUsing();\n\tboolean isCustom();\n}", "des": "Describes an index."}
{"index": 9938, "repo": "spring-data-cassandra-4.1.2", "code": "public class InsertOptions extends WriteOptions {\n\t// Create a new InsertOptions.InsertOptionsBuilder.\n\tstatic InsertOptions.InsertOptionsBuilder builder();\n\t// Create default InsertOptions.\n\tstatic InsertOptions empty();\n\tboolean equals(Object o);\n\tboolean isIfNotExists();\n\tboolean isInsertNulls();\n\t// Create a new InsertOptions.InsertOptionsBuilder to mutate properties of this InsertOptions.\n\tInsertOptions.InsertOptionsBuilder mutate();\n}", "des": "Extension to WriteOptions for use with INSERT operations."}
{"index": 9939, "repo": "spring-data-cassandra-4.1.2", "code": "public enum KeyspaceAction extends Enum<KeyspaceAction> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic KeyspaceAction valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic KeyspaceAction[] values();\n}", "des": "Available actions for Keyspace Specifications."}
{"index": 9940, "repo": "spring-data-cassandra-4.1.2", "code": "public interface KeyspaceDescriptor {\n\t// Returns the name of the table.\n\tcom.datastax.oss.driver.api.core.CqlIdentifier getName();\n\t// Returns an unmodifiable Map of keyspace options.\n\tMap<String,Object> getOptions();\n}", "des": "Describes a Keyspace."}
{"index": 9941, "repo": "spring-data-cassandra-4.1.2", "code": "public static enum KeyspaceOption.ReplicationStrategy extends Enum<KeyspaceOption.ReplicationStrategy> {\n\tString getValue();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic KeyspaceOption.ReplicationStrategy valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic KeyspaceOption.ReplicationStrategy[] values();\n}", "des": "Known Replication Strategy options."}
{"index": 9942, "repo": "spring-data-cassandra-4.1.2", "code": "public abstract class KeyspaceOptionsSpecification<T extends KeyspaceOptionsSpecification<T>> extends KeyspaceActionSpecification {\n\tboolean equals(Object o);\n\tMap<String,Object> getOptions();\n\t// Adds the given option by name to this keyspaces's options.\n\tT with(String name, Object value, boolean escape, boolean quote);\n\t// Convenience method that calls with(option, null).\n\tT with(KeyspaceOption option);\n\t// Sets the given table option.\n\tT with(KeyspaceOption option, Object value);\n}", "des": "Abstract builder class to support the construction of table specifications that have table options, that is, those options normally specified by WITH ... AND ...."}
{"index": 9943, "repo": "spring-data-cassandra-4.1.2", "code": "public class MapIdFactory extends Object {\n\t// Produces an implementation of the given id interface type using the type's class loader.\n\tstatic <T> T id(Class<T> idInterface);\n\t// Produces an implementation of the given class loader.\n\tstatic <T> T id(Class<T> idInterface, ClassLoader loader);\n}", "des": "Factory class for producing implementations of given id interfaces."}
{"index": 9944, "repo": "spring-data-cassandra-4.1.2", "code": "public class MappingCassandraEntityInformation<T,ID> extends PersistentEntityInformation<T,ID> implements CassandraEntityInformation<T,ID> {\n\tID getId(T entity);\n\t// Returns the attribute that the id will be persisted to.\n\tString getIdAttribute();\n\tClass<ID> getIdType();\n\t// Returns the name of the table the entity shall be persisted to.\n\tcom.datastax.oss.driver.api.core.CqlIdentifier getTableName();\n}", "des": "CassandraEntityInformation implementation using a CassandraPersistentEntity instance to lookup the necessary information."}
{"index": 9945, "repo": "spring-data-cassandra-4.1.2", "code": "public final class ObservableReactiveSessionFactory extends Object {\n\t// Wrap the CqlSession with a CqlSessionObservationInterceptor.\n\tstatic ReactiveSession wrap(ReactiveSession session, io.micrometer.observation.ObservationRegistry observationRegistry);\n\t// Wrap the CqlSession with a CqlSessionObservationInterceptor.\n\tstatic ReactiveSession wrap(ReactiveSession session, String remoteServiceName, io.micrometer.observation.ObservationRegistry observationRegistry);\n}", "des": "Factory to wrap a ReactiveSession with ObservableReactiveSession."}
{"index": 9946, "repo": "spring-data-cassandra-4.1.2", "code": "public enum Ordering extends Enum<Ordering> {\n\t// Returns the CQL keyword of this Ordering.\n\tString cql();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Ordering valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Ordering[] values();\n}", "des": "Enum for Cassandra primary key column ordering."}
{"index": 9947, "repo": "spring-data-cassandra-4.1.2", "code": "public enum PrimaryKeyType extends Enum<PrimaryKeyType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PrimaryKeyType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PrimaryKeyType[] values();\n}", "des": "Values representing primary key column types."}
{"index": 9948, "repo": "spring-data-cassandra-4.1.2", "code": "public class PropertyMapping extends Object {\n\tboolean equals(Object o);\n\tString getColumnName();\n\t// Deprecated.\n\tString getForceQuote();\n\tString getPropertyName();\n\tvoid setColumnName(String columnName);\n\t// Deprecated.\n\tvoid setForceQuote(String forceQuote);\n}", "des": "Mapping between a persistent entity's property and its column."}
{"index": 9949, "repo": "spring-data-cassandra-4.1.2", "code": "public static enum Query.Idempotency extends Enum<Query.Idempotency> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Query.Idempotency valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Query.Idempotency[] values();\n}", "des": "Enumeration to define statement idempotency."}
{"index": 9950, "repo": "spring-data-cassandra-4.1.2", "code": "protected static class QueryMapper.Field extends Object {\n\t// Returns the key to be used in the mapped document eventually.\n\tColumnName getMappedKey();\n\t// Returns the underlying CassandraPersistentProperty backing the field.\n\tOptional<CassandraPersistentProperty> getProperty();\n\t// Returns a new QueryMapper.Field with the given name.\n\tQueryMapper.Field with(ColumnName name);\n}", "des": "Value object to represent a field and its meta-information."}
{"index": 9951, "repo": "spring-data-cassandra-4.1.2", "code": "protected static class QueryMapper.MetadataBackedField extends QueryMapper.Field {\n\t// Returns the key to be used in the mapped document eventually.\n\tColumnName getMappedKey();\n\t// Returns the underlying CassandraPersistentProperty backing the field.\n\tOptional<CassandraPersistentProperty> getProperty();\n\t// Returns a new QueryMapper.Field with the given name.\n\tQueryMapper.MetadataBackedField with(ColumnName name);\n}", "des": "Extension of QueryMapper.Field to be backed with mapping metadata."}
{"index": 9952, "repo": "spring-data-cassandra-4.1.2", "code": "public static interface ReactiveDeleteOperation.DeleteWithTable {\n\t// Explicitly set the name of the table on which to perform the delete.\n\tReactiveDeleteOperation.DeleteWithQuery inTable(com.datastax.oss.driver.api.core.CqlIdentifier table);\n\t// Explicitly set the name of the table on which to perform the delete.\n\tdefault ReactiveDeleteOperation.DeleteWithQuery inTable(String table);\n}", "des": "Table override (optional)."}
{"index": 9953, "repo": "spring-data-cassandra-4.1.2", "code": "public static interface ReactiveInsertOperation.InsertWithTable<T> extends ReactiveInsertOperation.InsertWithOptions<T> {\n\t// Explicitly set the name of the table.\n\tReactiveInsertOperation.InsertWithOptions<T> inTable(com.datastax.oss.driver.api.core.CqlIdentifier table);\n\t// Explicitly set the name of the table.\n\tdefault ReactiveInsertOperation.InsertWithOptions<T> inTable(String table);\n}", "des": "Table override (optional)."}
{"index": 9954, "repo": "spring-data-cassandra-4.1.2", "code": "public static interface ReactiveSelectOperation.SelectWithTable<T> extends ReactiveSelectOperation.SelectWithQuery<T> {\n\t// Explicitly set the name of the table on which to perform the query.\n\tReactiveSelectOperation.SelectWithProjection<T> inTable(com.datastax.oss.driver.api.core.CqlIdentifier table);\n\t// Explicitly set the name of the table on which to perform the query.\n\tdefault ReactiveSelectOperation.SelectWithProjection<T> inTable(String table);\n}", "des": "Table override (optional)."}
{"index": 9955, "repo": "spring-data-cassandra-4.1.2", "code": "public static interface ReactiveSelectOperation.TerminatingSelect<T> {\n\t// Get all matching elements.\n\treactor.core.publisher.Flux<T> all();\n\t// Get the number of matching elements.\n\treactor.core.publisher.Mono<Long> count();\n\t// Check for the presence of matching elements.\n\treactor.core.publisher.Mono<Boolean> exists();\n\t// Get the first result or no result.\n\treactor.core.publisher.Mono<T> first();\n\t// Get exactly zero or one result.\n\treactor.core.publisher.Mono<T> one();\n}", "des": "Trigger SELECT execution by calling one of the terminating methods."}
{"index": 9956, "repo": "spring-data-cassandra-4.1.2", "code": "public static interface ReactiveUpdateOperation.UpdateWithTable {\n\t// Explicitly set the name of the table to on which to perform the update.\n\tReactiveUpdateOperation.UpdateWithQuery inTable(com.datastax.oss.driver.api.core.CqlIdentifier table);\n\t// Explicitly set the name of the table on which to perform the update.\n\tdefault ReactiveUpdateOperation.UpdateWithQuery inTable(String table);\n}", "des": "Table override (optional)."}
{"index": 9957, "repo": "spring-data-cassandra-4.1.2", "code": "public enum RowToArrayConverter extends Enum<RowToArrayConverter> implements Converter<com.datastax.oss.driver.api.core.cql.Row,Object[]> {\n\tObject[] convert(com.datastax.oss.driver.api.core.cql.Row row);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RowToArrayConverter valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RowToArrayConverter[] values();\n}", "des": "Converter to convert Row to Object array."}
{"index": 9958, "repo": "spring-data-cassandra-4.1.2", "code": "@ReadingConverter public enum RowToListConverter extends Enum<RowToListConverter> implements Converter<com.datastax.oss.driver.api.core.cql.Row,List<Object>> {\n\tList<Object> convert(com.datastax.oss.driver.api.core.cql.Row row);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RowToListConverter valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RowToListConverter[] values();\n}", "des": "Converter to convert Rows to a List of Object representation."}
{"index": 9959, "repo": "spring-data-cassandra-4.1.2", "code": "@ReadingConverter public enum RowToMapConverter extends Enum<RowToMapConverter> implements Converter<com.datastax.oss.driver.api.core.cql.Row,Map<String,Object>> {\n\tMap<String,Object> convert(com.datastax.oss.driver.api.core.cql.Row row);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RowToMapConverter valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RowToMapConverter[] values();\n}", "des": "Converter to convert Rows to a Map of String/Object representation."}
{"index": 9960, "repo": "spring-data-cassandra-4.1.2", "code": "public class RowValueProvider extends Object implements CassandraValueProvider {\n\t<T> T getPropertyValue(CassandraPersistentProperty property);\n\t// Returns whether the underlying source.\n\tObject getSource();\n\t// Returns whether the underlying source contains a data source for the given CassandraPersistentProperty.\n\tboolean hasProperty(CassandraPersistentProperty property);\n}", "des": "CassandraValueProvider to read property values from a Row."}
{"index": 9961, "repo": "spring-data-cassandra-4.1.2", "code": "public enum SchemaAction extends Enum<SchemaAction> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SchemaAction valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SchemaAction[] values();\n}", "des": "Enum identifying any schema actions to take at startup."}
{"index": 9962, "repo": "spring-data-cassandra-4.1.2", "code": "public class SimplePreparedStatementCreator extends Object implements PreparedStatementCreator, CqlProvider {\n\t// Create a statement in this session.\n\tcom.datastax.oss.driver.api.core.cql.PreparedStatement createPreparedStatement(com.datastax.oss.driver.api.core.CqlSession session);\n\t// Return the CQL string for this object, i.e. typically the CQL used for creating statements.\n\tString getCql();\n}", "des": "Trivial implementation of PreparedStatementCreator."}
{"index": 9963, "repo": "spring-data-cassandra-4.1.2", "code": "public class SnakeCaseNamingStrategy extends Object implements NamingStrategy {\n\t// Uses PersistentProperty.getName() and separates camel case parts with '_'.\n\tString getColumnName(CassandraPersistentProperty property);\n\t// Uses Class.getSimpleName() and separates camel case parts with '_'.\n\tString getTableName(CassandraPersistentEntity<?> entity);\n\t// Uses Class.getSimpleName() and separates camel case parts with '_'.\n\tString getUserDefinedTypeName(CassandraPersistentEntity<?> entity);\n}", "des": "Naming strategy that renders CamelCase name parts to snake_case."}
{"index": 9964, "repo": "spring-data-cassandra-4.1.2", "code": "public static enum StatementBuilder.ParameterHandling extends Enum<StatementBuilder.ParameterHandling> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic StatementBuilder.ParameterHandling valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic StatementBuilder.ParameterHandling[] values();\n}", "des": "Enumeration to represent how parameters are rendered."}
{"index": 9965, "repo": "spring-data-cassandra-4.1.2", "code": "public static enum TableOption.KeyCachingOption extends Enum<TableOption.KeyCachingOption> {\n\tString getValue();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TableOption.KeyCachingOption valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TableOption.KeyCachingOption[] values();\n}", "des": "Known KeyCaching Options"}
{"index": 9966, "repo": "spring-data-cassandra-4.1.2", "code": "public abstract class TableOptionsSpecification<T extends TableOptionsSpecification<T>> extends TableNameSpecification {\n\tMap<String,Object> getOptions();\n\t// Adds the given option by name to this table's options.\n\tT with(String name, Object value, boolean escape, boolean quote);\n\t// Convenience method that calls with(option, null).\n\tT with(TableOption option);\n\t// Sets the given table option.\n\tT with(TableOption option, Object value);\n}", "des": "Abstract builder class to support the construction of table specifications that have table options, that is, those options normally specified by WITH ... AND ...."}
{"index": 9967, "repo": "spring-data-cassandra-4.1.2", "code": "@FunctionalInterface public interface TermFactory {\n\t// Check whether the term factory accepts Collection values to be created as Term.\n\tdefault boolean canBindCollection();\n\t// Create a Term for the given value.\n\tcom.datastax.oss.driver.api.querybuilder.term.Term create(Object value);\n}", "des": "Factory for Term objects encapsulating a binding value."}
{"index": 9968, "repo": "spring-data-cassandra-4.1.2", "code": "public class TransformingNamingStrategy extends Object implements NamingStrategy {\n\t// Create a column name from the given property.\n\tString getColumnName(CassandraPersistentProperty property);\n\t// Create a table name from the given CassandraPersistentEntity.\n\tString getTableName(CassandraPersistentEntity<?> entity);\n\t// Create a user-defined type name from the given CassandraPersistentEntity.\n\tString getUserDefinedTypeName(CassandraPersistentEntity<?> entity);\n}", "des": "NamingStrategy that applies a transformation Function after invoking a delegate NamingStrategy."}
{"index": 9969, "repo": "spring-data-cassandra-4.1.2", "code": "public class TupleValueProvider extends Object implements CassandraValueProvider {\n\t<T> T getPropertyValue(CassandraPersistentProperty property);\n\t// Returns whether the underlying source.\n\tObject getSource();\n\t// Returns whether the underlying source contains a data source for the given CassandraPersistentProperty.\n\tboolean hasProperty(CassandraPersistentProperty property);\n}", "des": "CassandraValueProvider to read property values from a TupleValue."}
{"index": 9970, "repo": "spring-data-cassandra-4.1.2", "code": "public class UdtValueProvider extends Object implements CassandraValueProvider {\n\t<T> T getPropertyValue(CassandraPersistentProperty property);\n\t// Returns whether the underlying source.\n\tObject getSource();\n\t// Returns whether the underlying source contains a data source for the given CassandraPersistentProperty.\n\tboolean hasProperty(CassandraPersistentProperty property);\n}", "des": "CassandraValueProvider to read property values from a UdtValue."}
{"index": 9971, "repo": "spring-data-cassandra-4.1.2", "code": "public static interface Update.RemoveFromBuilder {\n\t// Remove all entries matching value from a set, list or map (map key).\n\tUpdate value(Object value);\n\t// Remove all entries matching values from a set, list or map (map key).\n\tUpdate values(Iterable<? extends Object> values);\n\t// Remove all entries matching values from a set, list or map (map key).\n\tdefault Update values(Object... values);\n}", "des": "Builder to remove a single element/multiple elements from a collection associated with a ColumnName."}
{"index": 9972, "repo": "spring-data-cassandra-4.1.2", "code": "public static interface Update.SetBuilder {\n\t// Create a Update.SetValueBuilder to set a value at a numeric index.\n\tUpdate.SetValueBuilder atIndex(int index);\n\t// Create a Update.SetValueBuilder to set a value at index.\n\tUpdate.SetValueBuilder atKey(Object key);\n}", "des": "Builder to associate a single value with a collection at a given index at ColumnName."}
{"index": 9973, "repo": "spring-data-cassandra-4.1.2", "code": "public class UpdateOptions extends WriteOptions {\n\t// Create a new UpdateOptions.UpdateOptionsBuilder.\n\tstatic UpdateOptions.UpdateOptionsBuilder builder();\n\t// Create default UpdateOptions.\n\tstatic UpdateOptions empty();\n\tboolean equals(Object o);\n\tFilter getIfCondition();\n\tboolean isIfExists();\n\t// Create a new UpdateOptions.UpdateOptionsBuilder to mutate properties of this UpdateOptions.\n\tUpdateOptions.UpdateOptionsBuilder mutate();\n}", "des": "Extension to WriteOptions for use with UPDATE operations."}
{"index": 9974, "repo": "spring-data-cassandra-4.1.2", "code": "public class UserTypeSpecification<T extends UserTypeSpecification<T>> extends UserTypeNameSpecification {\n\t// Adds an ADD to the list of field changes.\n\tT field(com.datastax.oss.driver.api.core.CqlIdentifier name, com.datastax.oss.driver.api.core.type.DataType type);\n\t// Adds the given field to the type.\n\tT field(String name, com.datastax.oss.driver.api.core.type.DataType type);\n\tList<FieldSpecification> getFields();\n}", "des": "Object to support the configuration of user type specifications that have columns."}
{"index": 9975, "repo": "spring-data-cassandra-4.1.2", "code": "public class VerifierMappingExceptions extends MappingException {\n\t// Returns a list of the MappingExceptions aggregated within.\n\tCollection<MappingException> getMappingExceptions();\n\tString getMessage();\n\t// Returns a list of the MappingException messages aggregated within.\n\tCollection<String> getMessages();\n}", "des": "Aggregator of multiple MappingException for convenience when verifying persistent entities."}
{"index": 9976, "repo": "spring-data-cassandra-4.1.2", "code": "public class WriteOptions extends QueryOptions {\n\t// Create a new WriteOptions.WriteOptionsBuilder.\n\tstatic WriteOptions.WriteOptionsBuilder builder();\n\t// Create default WriteOptions.\n\tstatic WriteOptions empty();\n\tboolean equals(Object o);\n\tLong getTimestamp();\n\tDuration getTtl();\n\t// Create a new WriteOptions.WriteOptionsBuilder to mutate properties of this WriteOptions.\n\tWriteOptions.WriteOptionsBuilder mutate();\n}", "des": "Cassandra Write Options are an extension to QueryOptions for write operations."}
{"index": 9977, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "@Named @Singleton public class DefaultModelReader extends Object implements ModelReader {\n\t// Reads the model from the specified file.\n\tModel read(File input, Map<String,?> options);\n\t// Reads the model from the specified byte stream.\n\tModel read(InputStream input, Map<String,?> options);\n\t// Reads the model from the specified character reader.\n\tModel read(Reader input, Map<String,?> options);\n}", "des": "Handles deserialization of a model from some kind of textual format like XML."}
{"index": 9978, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public class FileModelSource extends FileSource implements ModelSource2 {\n\tboolean equals(Object obj);\n\t// Returns location of the POM, never null.\n\tURI getLocationURI();\n\t// Deprecated. instead use FileSource.getFile()\n\tFile getPomFile();\n\t// Returns model source identified by a path relative to this model source POM.\n\tModelSource2 getRelatedSource(String relPath);\n}", "des": "Wraps an ordinary File as a model source."}
{"index": 9979, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "@Named(\"file\") @Singleton public class FileProfileActivator extends Object implements ProfileActivator {\n\t// Determines whether the specified profile is active in the given activator context.\n\tboolean isActive(Profile profile, ProfileActivationContext context, ModelProblemCollector problems);\n\t// Determines whether specified activation method is present in configuration or not.\n\tboolean presentInConfig(Profile profile, ProfileActivationContext context, ModelProblemCollector problems);\n}", "des": "Determines profile activation based on the existence/absence of some file."}
{"index": 9980, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public interface ModelBuildingEvent {\n\t// Gets the model being built.\n\tModel getModel();\n\t// Gets the container used to collect problems that were encountered while processing the event.\n\tModelProblemCollector getProblems();\n\t// Gets the model building request being processed.\n\tModelBuildingRequest getRequest();\n}", "des": "Holds data relevant for a model building event."}
{"index": 9981, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public class ModelBuildingException extends Exception {\n\t// Gets the model that could not be built properly.\n\tModel getModel();\n\t// Gets the identifier of the POM whose effective model could not be built.\n\tString getModelId();\n\t// Gets the problems that caused this exception.\n\tList<ModelProblem> getProblems();\n\t// Gets the interim result of the model building up to the point where it failed.\n\tModelBuildingResult getResult();\n}", "des": "Signals one ore more errors during model building."}
{"index": 9982, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public class ModelParseException extends IOException {\n\t// Gets the one-based index of the column containing the error.\n\tint getColumnNumber();\n\t// Gets the one-based index of the line containing the error.\n\tint getLineNumber();\n}", "des": "Signals a failure to parse the POM due to invalid syntax (e.g."}
{"index": 9983, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public static enum ModelProblem.Severity extends Enum<ModelProblem.Severity> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ModelProblem.Severity valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ModelProblem.Severity[] values();\n}", "des": "The different severity levels for a problem, in decreasing order."}
{"index": 9984, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public static enum ModelProblem.Version extends Enum<ModelProblem.Version> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ModelProblem.Version valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ModelProblem.Version[] values();\n}", "des": "Version"}
{"index": 9985, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public interface ModelReader {\n\t// Reads the model from the specified file.\n\tModel read(File input, Map<String,?> options);\n\t// Reads the model from the specified byte stream.\n\tModel read(InputStream input, Map<String,?> options);\n\t// Reads the model from the specified character reader.\n\tModel read(Reader input, Map<String,?> options);\n}", "des": "Handles deserialization of a model from some kind of textual format like XML."}
{"index": 9986, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public interface ModelSource2 extends ModelSource {\n\t// Returns location of the POM, never null.\n\tURI getLocationURI();\n\t// Returns model source identified by a path relative to this model source POM.\n\tModelSource2 getRelatedSource(String relPath);\n}", "des": "Provides access to the contents of a POM independently of the backing store (e.g."}
{"index": 9987, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "@Named(\"os\") @Singleton public class OperatingSystemProfileActivator extends Object implements ProfileActivator {\n\t// Determines whether the specified profile is active in the given activator context.\n\tboolean isActive(Profile profile, ProfileActivationContext context, ModelProblemCollector problems);\n\t// Determines whether specified activation method is present in configuration or not.\n\tboolean presentInConfig(Profile profile, ProfileActivationContext context, ModelProblemCollector problems);\n}", "des": "Determines profile activation based on the operating system of the current runtime platform."}
{"index": 9988, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public interface ProfileActivator {\n\t// Determines whether the specified profile is active in the given activator context.\n\tboolean isActive(Profile profile, ProfileActivationContext context, ModelProblemCollector problems);\n\t// Determines whether specified activation method is present in configuration or not.\n\tboolean presentInConfig(Profile profile, ProfileActivationContext context, ModelProblemCollector problems);\n}", "des": "Determines whether a profile should be activated."}
{"index": 9989, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "@Named(\"property\") @Singleton public class PropertyProfileActivator extends Object implements ProfileActivator {\n\t// Determines whether the specified profile is active in the given activator context.\n\tboolean isActive(Profile profile, ProfileActivationContext context, ModelProblemCollector problems);\n\t// Determines whether specified activation method is present in configuration or not.\n\tboolean presentInConfig(Profile profile, ProfileActivationContext context, ModelProblemCollector problems);\n}", "des": "Determines profile activation based on the existence or value of some execution property."}
{"index": 9990, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public interface TransformerContext {\n\t// Get the model from the reactor based on the groupId and artifactId, will be used for reactor dependencies\n\tModel getRawModel(String groupId, String artifactId);\n\t// Get the model based on the path, will be used to resolve the parent based on relativePath\n\tModel getRawModel(Path pomFile);\n\t// Get the value of the commandline argument -Dkey=value\n\tString getUserProperty(String key);\n}", "des": "Context used to transform a pom file."}
{"index": 9991, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public interface TransformerContextBuilder {\n\t// The immutable transformerContext, can be used after the buildplan is finished.\n\tTransformerContext build();\n\t// This method is used to initialize the TransformerContext\n\tTransformerContext initialize(ModelBuildingRequest request, ModelProblemCollector problems);\n}", "des": "The transformerContextBuilder is responsible for initializing the TransformerContext."}
{"index": 9992, "repo": "maven-model-builder-4.0.0-alpha-7", "code": "public class UnresolvableModelException extends Exception {\n\t// Gets the artifact id of the unresolvable model.\n\tString getArtifactId();\n\t// Gets the group id of the unresolvable model.\n\tString getGroupId();\n\t// Gets the version of the unresolvable model.\n\tString getVersion();\n}", "des": "Signals an error when resolving the path to an external model."}
{"index": 9993, "repo": "spring-data-jdbc-3.1.2", "code": "public enum JdbcColumnTypes extends Enum<JdbcColumnTypes> {\n\tabstract Class<?> resolvePrimitiveType(Class<?> type);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic JdbcColumnTypes valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic JdbcColumnTypes[] values();\n}", "des": "Utility that determines the necessary type conversions between Java types used in the domain model and types compatible with JDBC drivers."}
{"index": 9994, "repo": "spring-data-jdbc-3.1.2", "code": "public class JdbcIdentifierBuilder extends Object {\n\tIdentifier build();\n\tstatic JdbcIdentifierBuilder empty();\n\t// Creates ParentKeys with backreference for the given path and value of the parents id.\n\tstatic JdbcIdentifierBuilder forBackReferences(JdbcConverter converter, PersistentPropertyPathExtension path, Object value);\n\t// Adds a qualifier to the identifier to build.\n\tJdbcIdentifierBuilder withQualifier(PersistentPropertyPathExtension path, Object value);\n}", "des": "Builder for Identifier."}
{"index": 9995, "repo": "spring-data-jdbc-3.1.2", "code": "public interface JdbcTypeFactory {\n\t// Converts the provided value in a Array instance.\n\tArray createArray(Object[] value);\n\t// An implementation used in places where a proper JdbcTypeFactory can not be provided but an instance needs to be provided anyway, mostly for providing backward compatibility.\n\tstatic JdbcTypeFactory unsupported();\n}", "des": "Allows the creation of instances of database dependent types, e.g."}
{"index": 9996, "repo": "spring-data-jdbc-3.1.2", "code": "public class MyBatisContext extends Object {\n\t// Returns a value for the given key.\n\tObject get(String key);\n\t// The domain type of the entity to query or act upon.\n\tClass getDomainType();\n\t// The ID of the entity to query/act upon.\n\tObject getId();\n\t// The Identifier for a path to query.\n\tIdentifier getIdentifier();\n\t// The entity to act upon.\n\tObject getInstance();\n}", "des": "MyBatisContext instances get passed to MyBatis mapped statements as arguments, making Ids, instances, domainType and other attributes available to the statements."}
{"index": 9997, "repo": "spring-r2dbc-6.0.11", "code": "public class BadSqlGrammarException extends org.springframework.dao.InvalidDataAccessResourceUsageException {\n\t// Return the wrapped R2dbcException.\n\tR2dbcException getR2dbcException();\n\t// Return the SQL that caused the problem.\n\tString getSql();\n}", "des": "Exception thrown when SQL specified is invalid."}
{"index": 9998, "repo": "spring-r2dbc-6.0.11", "code": "public abstract static class Bindings.Binding extends Object {\n\t// Apply the binding to a BindTarget.\n\tabstract void apply(BindTarget bindTarget);\n\t// Return the associated BindMarker.\n\tBindMarker getBindMarker();\n\t// Return the binding value.\n\tabstract Object getValue();\n\t// Return whether the binding has a value associated with it.\n\tabstract boolean hasValue();\n\t// Return whether the binding is empty.\n\tboolean isNull();\n}", "des": "Base class for value objects representing a value or a NULL binding."}
{"index": 9999, "repo": "spring-r2dbc-6.0.11", "code": "public interface BindMarker {\n\t// Bind the given value to the Statement using the underlying binding strategy.\n\tvoid bind(BindTarget bindTarget, Object value);\n\t// Bind a null value to the Statement using the underlying binding strategy.\n\tvoid bindNull(BindTarget bindTarget, Class<?> valueType);\n\t// Return the database-specific placeholder for a given substitution.\n\tString getPlaceholder();\n}", "des": "A bind marker represents a single bindable parameter within a query."}
{"index": 10000, "repo": "spring-r2dbc-6.0.11", "code": "@FunctionalInterface public interface BindMarkers {\n\t// Create a new BindMarker.\n\tBindMarker next();\n\t// Create a new BindMarker that accepts a hint.\n\tdefault BindMarker next(String hint);\n}", "des": "Bind markers represent placeholders in SQL queries for substitution for an actual parameter."}
{"index": 10001, "repo": "spring-r2dbc-6.0.11", "code": "public interface BindTarget {\n\t// Bind a value to an index.\n\tvoid bind(int index, Object value);\n\t// Bind a value.\n\tvoid bind(String identifier, Object value);\n\t// Bind a null value.\n\tvoid bindNull(int index, Class<?> type);\n\t// Bind a null value.\n\tvoid bindNull(String identifier, Class<?> type);\n}", "des": "Target to apply bindings to."}
{"index": 10002, "repo": "spring-r2dbc-6.0.11", "code": "public class CompositeDatabasePopulator extends Object implements DatabasePopulator {\n\t// Add one or more populators to the list of delegates.\n\tvoid addPopulators(DatabasePopulator... populators);\n\t// Populate, initialize, or clean up the database using the provided R2DBC Connection.\n\treactor.core.publisher.Mono<Void> populate(Connection connection);\n\t// Specify one or more populators to delegate to.\n\tvoid setPopulators(DatabasePopulator... populators);\n}", "des": "Composite DatabasePopulator that delegates to a list of given DatabasePopulator implementations, executing all scripts."}
{"index": 10003, "repo": "spring-r2dbc-6.0.11", "code": "public interface ConnectionAccessor {\n\t// Execute a callback Function within a Connection scope.\n\t<T> reactor.core.publisher.Mono<T> inConnection(Function<Connection,reactor.core.publisher.Mono<T>> action);\n\t// Execute a callback Function within a Connection scope.\n\t<T> reactor.core.publisher.Flux<T> inConnectionMany(Function<Connection,reactor.core.publisher.Flux<T>> action);\n}", "des": "Interface declaring methods that accept callback Function to operate within the scope of a Connection."}
{"index": 10004, "repo": "spring-r2dbc-6.0.11", "code": "@FunctionalInterface public interface DatabasePopulator {\n\t// Populate, initialize, or clean up the database using the provided R2DBC Connection.\n\treactor.core.publisher.Mono<Void> populate(Connection connection);\n\t// Execute the given DatabasePopulator against the given ConnectionFactory.\n\tdefault reactor.core.publisher.Mono<Void> populate(ConnectionFactory connectionFactory);\n}", "des": "Strategy used to populate, initialize, or clean up a database."}
{"index": 10005, "repo": "spring-r2dbc-6.0.11", "code": "public interface PreparedOperation<T> extends QueryOperation {\n\t// Apply bindings to the supplied BindTarget.\n\tvoid bindTo(BindTarget target);\n\t// Get the underlying query source.\n\tT getSource();\n}", "des": "Extension to QueryOperation for a prepared SQL query Supplier with bound parameters."}
{"index": 10006, "repo": "spring-r2dbc-6.0.11", "code": "public interface RowsFetchSpec<T> {\n\t// Get all matching elements.\n\treactor.core.publisher.Flux<T> all();\n\t// Get the first or no result.\n\treactor.core.publisher.Mono<T> first();\n\t// Get exactly zero or one result.\n\treactor.core.publisher.Mono<T> one();\n}", "des": "Contract for fetching tabular results."}
{"index": 10007, "repo": "spring-r2dbc-6.0.11", "code": "@FunctionalInterface public interface StatementFilterFunction {\n\t// Return a composed filter function that first applies this filter and then applies the given afterFilter.\n\tdefault StatementFilterFunction andThen(StatementFilterFunction afterFilter);\n\t// Apply this filter to the given Statement and ExecuteFunction.\n\tPublisher<? extends Result> filter(Statement statement, ExecuteFunction next);\n}", "des": "Represents a function that filters an ExecuteFunction."}
{"index": 10008, "repo": "spring-r2dbc-6.0.11", "code": "public class UncategorizedR2dbcException extends org.springframework.dao.UncategorizedDataAccessException {\n\t// Return the wrapped R2dbcException.\n\tR2dbcException getR2dbcException();\n\t// Return the SQL that led to the problem (if known).\n\tString getSql();\n}", "des": "Exception thrown when we can't classify a R2dbcException into one of our generic data access exceptions."}
{"index": 10009, "repo": "maven-compat-4.0.0-alpha-7", "code": "public class ActivationFile extends Object implements Serializable {\n\t// Get the name of the file that should exist to activate a profile.\n\tString getExists();\n\t// Get the name of the file that should be missing to activate a profile.\n\tString getMissing();\n\t// Set the name of the file that should exist to activate a profile.\n\tvoid setExists(String exists);\n\t// Set the name of the file that should be missing to activate a profile.\n\tvoid setMissing(String missing);\n}", "des": "This is the file specification used to activate a profile."}
{"index": 10010, "repo": "maven-compat-4.0.0-alpha-7", "code": "public class ActivationProperty extends Object implements Serializable {\n\t// Get the name of the property to be used to activate a profile.\n\tString getName();\n\t// Get the value of the property to be used to activate a profile.\n\tString getValue();\n\t// Set the name of the property to be used to activate a profile.\n\tvoid setName(String name);\n\t// Set the value of the property to be used to activate a profile.\n\tvoid setValue(String value);\n}", "des": "This is the property specification used to activate a profile."}
{"index": 10011, "repo": "maven-compat-4.0.0-alpha-7", "code": "public interface ArtifactDeployer {\n\t// Deploy an artifact from a particular file.\n\tvoid deploy(File source, Artifact artifact, ArtifactRepository deploymentRepository, ArtifactRepository localRepository);\n\t// Deprecated. to be removed before 2.0 after the install/deploy plugins use the alternate method\n\tvoid deploy(String basedir, String finalName, Artifact artifact, ArtifactRepository deploymentRepository, ArtifactRepository localRepository);\n}", "des": "ArtifactDeployer"}
{"index": 10012, "repo": "maven-compat-4.0.0-alpha-7", "code": "public class MetadataGraph extends Object {\n\tvoid addNode(MetadataGraphNode node);\n\t// find a node by the GAV (metadata)\n\tMetadataGraphNode findNode(MavenArtifactMetadata md);\n\t// getter\n\tMetadataGraphNode getEntry();\n\t// getter\n\tCollection<MetadataGraphNode> getNodes();\n}", "des": "This is the main graph data structure used by the RepositorySystem to present tree and graph objects."}
{"index": 10013, "repo": "maven-compat-4.0.0-alpha-7", "code": "public enum MetadataResolutionRequestTypeEnum extends Enum<MetadataResolutionRequestTypeEnum> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic MetadataResolutionRequestTypeEnum valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic MetadataResolutionRequestTypeEnum[] values();\n}", "des": "MetadataResolutionRequestTypeEnum"}
{"index": 10014, "repo": "maven-compat-4.0.0-alpha-7", "code": "public class ParamdocXpp3Writer extends Object {\n\t// Method setFileComment.\n\tvoid setFileComment(String fileComment);\n\t// Method write.\n\tvoid write(OutputStream stream, ExpressionDocumentation expressionDocumentation);\n\t// Method write.\n\tvoid write(Writer writer, ExpressionDocumentation expressionDocumentation);\n}", "des": "Class ParamdocXpp3Writer."}
{"index": 10015, "repo": "maven-compat-4.0.0-alpha-7", "code": "public class ProfilesXpp3Writer extends Object {\n\t// Method setFileComment.\n\tvoid setFileComment(String fileComment);\n\t// Method write.\n\tvoid write(OutputStream stream, ProfilesRoot profilesRoot);\n\t// Method write.\n\tvoid write(Writer writer, ProfilesRoot profilesRoot);\n}", "des": "Class ProfilesXpp3Writer."}
{"index": 10016, "repo": "maven-plugin-api-4.0.0-alpha-7", "code": "public abstract class AbstractMojo extends Object implements Mojo, ContextEnabled {\n\t// Deprecated. Use SLF4J directly\n\tLog getLog();\n\tMap getPluginContext();\n\t// Deprecated. Use SLF4J directly\n\tvoid setLog(Log log);\n\t// Set a new shared context Map to a mojo before executing it.\n\tvoid setPluginContext(Map pluginContext);\n}", "des": "Abstract class to provide most of the infrastructure required to implement a Mojo except for the execute method. The implementation should have a Mojo annotation with the name of the goal:"}
{"index": 10017, "repo": "maven-plugin-api-4.0.0-alpha-7", "code": "public interface Mojo {\n\t// Perform whatever build-process behavior this Mojo implements. This is the main trigger for the Mojo inside the Maven system, and allows the Mojo to communicate errors.\n\tvoid execute();\n\t// Deprecated. Use SLF4J directly\n\tLog getLog();\n\t// Deprecated. Use SLF4J directly\n\tvoid setLog(Log log);\n}", "des": "This interface forms the contract required for Mojos to interact with the Maven infrastructure. It features an execute() method, which triggers the Mojo's build-process behavior, and can throw a MojoExecutionException or MojoFailureException if error conditions occur. Also included is the setLog(...) method, which simply allows Maven to inject a logging mechanism which will allow the Mojo to communicate to the outside world through standard Maven channels."}
{"index": 10018, "repo": "spring-session-core-3.1.1", "code": "public interface CookieSerializer {\n\t// Reads all the matching cookies from the HttpServletRequest.\n\tList<String> readCookieValues(jakarta.servlet.http.HttpServletRequest request);\n\t// Writes a given CookieSerializer.CookieValue to the provided HttpServletResponse.\n\tvoid writeCookieValue(CookieSerializer.CookieValue cookieValue);\n}", "des": "Strategy for reading and writing a cookie value to the HttpServletResponse."}
{"index": 10019, "repo": "spring-session-core-3.1.1", "code": "public static class CookieSerializer.CookieValue extends Object {\n\t// Get the cookie max age.\n\tint getCookieMaxAge();\n\t// The value to be written.\n\tString getCookieValue();\n\t// Gets the request to use.\n\tjakarta.servlet.http.HttpServletRequest getRequest();\n\t// Gets the response to write to.\n\tjakarta.servlet.http.HttpServletResponse getResponse();\n\t// Set the cookie max age.\n\tvoid setCookieMaxAge(int cookieMaxAge);\n}", "des": "Contains the information necessary to write a value to the HttpServletResponse."}
{"index": 10020, "repo": "spring-session-core-3.1.1", "code": "public enum FlushMode extends Enum<FlushMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic FlushMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic FlushMode[] values();\n}", "des": "Supported modes of writing the session to session store."}
{"index": 10021, "repo": "spring-session-core-3.1.1", "code": "public enum SaveMode extends Enum<SaveMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SaveMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SaveMode[] values();\n}", "des": "Supported modes of tracking and saving session changes to session store."}
{"index": 10022, "repo": "spring-session-core-3.1.1", "code": "public interface SessionRepository<S extends Session> {\n\t// Creates a new Session that is capable of being persisted by this SessionRepository.\n\tS createSession();\n\t// Deletes the Session with the given Session.getId() or does nothing if the Session is not found.\n\tvoid deleteById(String id);\n\t// Gets the Session by the Session.getId() or null if no Session is found.\n\tS findById(String id);\n\t// Ensures the Session created by createSession() is saved.\n\tvoid save(S session);\n}", "des": "A repository interface for managing Session instances."}
{"index": 10023, "repo": "spring-data-jpa-3.1.2", "code": "@MappedSuperclass public abstract class AbstractPersistable<PK extends Serializable> extends Object implements Persistable<PK> {\n\tboolean equals(Object obj);\n\tPK getId();\n\t// Must be Transient in order to ensure that no JPA provider complains because of a missing setter.\n\tboolean isNew();\n\t// Sets the id of the entity.\n\tprotected void setId(PK id);\n}", "des": "Abstract base class for entities."}
{"index": 10024, "repo": "spring-data-jpa-3.1.2", "code": "public static class BeanDefinitionUtils.EntityManagerFactoryBeanDefinition extends Object {\n\tboolean equals(Object o);\n\t// Returns the BeanDefinition for the EntityManagerFactory.\n\tBeanDefinition getBeanDefinition();\n\t// Returns the underlying BeanFactory.\n\tBeanFactory getBeanFactory();\n\t// Returns the bean name of the BeanDefinition for the EntityManagerFactory.\n\tString getBeanName();\n}", "des": "Value object to represent a BeanDefinition for an EntityManagerFactory with a dedicated bean name."}
{"index": 10025, "repo": "spring-data-jpa-3.1.2", "code": "public class DelegatingQueryRewriter extends Object implements QueryRewriter {\n\t// Rewrite the assembled query with the given Pageable.\n\tString rewrite(String query, Pageable pageRequest);\n\t// Rewrite the assembled query with the given Sort.\n\tString rewrite(String query, Sort sort);\n}", "des": "Delegating QueryRewriter that delegates rewrite calls to a delegate provided by a Supplier."}
{"index": 10026, "repo": "spring-data-jpa-3.1.2", "code": "public static enum EntityGraph.EntityGraphType extends Enum<EntityGraph.EntityGraphType> {\n\tString getKey();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic EntityGraph.EntityGraphType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic EntityGraph.EntityGraphType[] values();\n}", "des": "Enum for JPA 2.1 EntityGraph types."}
{"index": 10027, "repo": "spring-data-jpa-3.1.2", "code": "public class JpaEntityGraph extends Object {\n\t// Returns the attribute node names to be used for this JpaEntityGraph.\n\tList<String> getAttributePaths();\n\t// Returns the name of the EntityGraph configuration to use.\n\tString getName();\n\t// Returns the EntityGraph.EntityGraphType of the EntityGraph to use.\n\tEntityGraph.EntityGraphType getType();\n\t// Return true if this JpaEntityGraph needs to be generated on-the-fly.\n\tboolean isAdHocEntityGraph();\n}", "des": "EntityGraph configuration for JPA 2.1 EntityGraphs."}
{"index": 10028, "repo": "spring-data-jpa-3.1.2", "code": "public abstract class JpaEntityInformationSupport<T,ID> extends AbstractEntityInformation<T,ID> implements JpaEntityInformation<T,ID> {\n\t// Creates a JpaEntityInformation for the given domain class and EntityManager.\n\tstatic <T> JpaEntityInformation<T,?> getEntityInformation(Class<T> domainClass, jakarta.persistence.EntityManager em);\n\t// Returns the name of the entity.\n\tString getEntityName();\n}", "des": "Base class for JpaEntityInformation implementations to share common method implementations."}
{"index": 10029, "repo": "spring-data-jpa-3.1.2", "code": "public abstract class JpaQueryExecution extends Object {\n\t// Method to implement AbstractStringBasedJpaQuery executions by single enum values.\n\tprotected abstract Object doExecute(AbstractJpaQuery query, JpaParametersParameterAccessor accessor);\n\t// Executes the given AbstractStringBasedJpaQuery with the given ParameterBinder.\n\tObject execute(AbstractJpaQuery query, JpaParametersParameterAccessor accessor);\n}", "des": "Set of classes to contain query execution strategies."}
{"index": 10030, "repo": "spring-data-jpa-3.1.2", "code": "@NoRepositoryBean public interface JpaRepositoryImplementation<T,ID> extends JpaRepository<T,ID>, JpaSpecificationExecutor<T> {\n\t// Configures the EscapeCharacter to be used with the repository.\n\tdefault void setEscapeCharacter(EscapeCharacter escapeCharacter);\n\t// Configures the CrudMethodMetadata to be used with the repository.\n\tvoid setRepositoryMethodMetadata(CrudMethodMetadata crudMethodMetadata);\n}", "des": "SPI interface to be implemented by JpaRepository implementations."}
{"index": 10031, "repo": "spring-data-jpa-3.1.2", "code": "public static class JpaSort.Path<T,S> extends Object {\n\t// Collects the given Attribute and returning a new JpaSort.Path pointing to the attribute type.\n\t<A extends jakarta.persistence.metamodel.Attribute<S, U>, U>JpaSort.Path<S,U> dot(A attribute);\n\t// Collects the given PluralAttribute and returning a new JpaSort.Path pointing to the attribute type.\n\t<P extends jakarta.persistence.metamodel.PluralAttribute<S, ?, U>, U>JpaSort.Path<S,U> dot(P attribute);\n}", "des": "Value object to abstract a collection of Attributes."}
{"index": 10032, "repo": "spring-data-jpa-3.1.2", "code": "public final class JSqlParserUtils extends Object {\n\t// Generates a count function call, based on the countFields.\n\tstatic net.sf.jsqlparser.expression.Function getJSqlCount(List<String> countFields, boolean distinct);\n\t// Generates a lower function call, based on the column.\n\tstatic net.sf.jsqlparser.expression.Function getJSqlLower(String column);\n}", "des": "A utility class for JSqlParser."}
{"index": 10033, "repo": "spring-data-jpa-3.1.2", "code": "public class Meta extends Object {\n\tString getComment();\n\tboolean hasValues();\n\t// Add a comment to the query that is propagated to the profile log.\n\tvoid setComment(String comment);\n\t// Get Iterable of set meta values.\n\tIterable<Map.Entry<String,Object>> values();\n}", "des": "Value object to hold metadata about repository methods."}
{"index": 10034, "repo": "spring-data-jpa-3.1.2", "code": "public class PartTreeJpaQuery extends AbstractJpaQuery {\n\t// Creates a TypedQuery for counting using the given values.\n\tjakarta.persistence.TypedQuery<Long> doCreateCountQuery(JpaParametersParameterAccessor accessor);\n\t// Creates a Query instance for the given values.\n\tjakarta.persistence.Query doCreateQuery(JpaParametersParameterAccessor accessor);\n\tprotected JpaQueryExecution getExecution();\n}", "des": "A AbstractJpaQuery implementation based on a PartTree."}
{"index": 10035, "repo": "spring-data-jpa-3.1.2", "code": "public interface ProxyIdAccessor {\n\t// Returns the identifier of the given entity by leniently inspecting it for the identifier value.\n\tObject getIdentifierFrom(Object entity);\n\t// Returns whether the ProxyIdAccessor should be used for the given entity.\n\tboolean shouldUseAccessorFor(Object entity);\n}", "des": "Interface for a persistence provider specific accessor of identifiers held in proxies."}
{"index": 10036, "repo": "spring-data-jpa-3.1.2", "code": "public interface QueryExtractor {\n\t// Returns whether the extractor is able to extract the original query string from a given Query.\n\tboolean canExtractQuery();\n\t// Reverse engineers the query string from the Query object.\n\tString extractQueryString(jakarta.persistence.Query query);\n}", "des": "Interface to hide different implementations to extract the original JPA query string from a Query."}
{"index": 10037, "repo": "spring-data-jpa-3.1.2", "code": "@FunctionalInterface public interface QueryRewriter {\n\t// Rewrite the assembled query with the given Pageable.\n\tdefault String rewrite(String query, Pageable pageRequest);\n\t// Rewrite the assembled query with the given Sort.\n\tString rewrite(String query, Sort sort);\n}", "des": "Callback to rewrite a query and apply sorting and pagination settings that cannot be applied based on a regularly detectable scheme."}
{"index": 10038, "repo": "spring-data-jpa-3.1.2", "code": "public interface QueryRewriterProvider {\n\t// Obtain an instance of QueryRewriter for a JpaQueryMethod.\n\tQueryRewriter getQueryRewriter(JpaQueryMethod method);\n\t// Return a simple QueryRewriterProvider that uses BeanUtils.instantiateClass(Class) to obtain a QueryRewriter instance.\n\tstatic QueryRewriterProvider simple();\n}", "des": "Provide a QueryRewriter based upon the JpaQueryMethod."}
{"index": 10039, "repo": "spring-integration-http-6.1.2", "code": "public class FileCopyingMultipartFileReader extends Object implements MultipartFileReader<org.springframework.web.multipart.MultipartFile> {\n\t// Read MultipartFile content.\n\torg.springframework.web.multipart.MultipartFile readMultipartFile(org.springframework.web.multipart.MultipartFile multipartFile);\n\t// Specify the prefix to use for temporary files.\n\tvoid setPrefix(String prefix);\n\t// Specify the suffix to use for temporary files.\n\tvoid setSuffix(String suffix);\n}", "des": "MultipartFileReader implementation that copies the MultipartFile's content to a new temporary File in the specified directory."}
{"index": 10040, "repo": "spring-integration-http-6.1.2", "code": "public class SimpleMultipartFileReader extends Object implements MultipartFileReader<Object> {\n\t// Read MultipartFile content.\n\tObject readMultipartFile(org.springframework.web.multipart.MultipartFile multipartFile);\n\t// Specify the default charset name to use when converting multipart file content into Strings if the multipart itself does not provide a charset.\n\tvoid setDefaultMultipartCharset(String defaultCharset);\n}", "des": "MultipartFileReader implementation that does not maintain metadata from the original MultipartFile instance."}
{"index": 10041, "repo": "spring-integration-ftp-6.1.2", "code": "public class FtpInboundChannelAdapterSpec extends org.springframework.integration.file.dsl.RemoteFileInboundChannelAdapterSpec<org.apache.commons.net.ftp.FTPFile,FtpInboundChannelAdapterSpec,FtpInboundFileSynchronizingMessageSource> {\n\t// Specify a simple pattern to match remote files.\n\tFtpInboundChannelAdapterSpec patternFilter(String pattern);\n\t// Specify a regular expression to match remote files.\n\tFtpInboundChannelAdapterSpec regexFilter(String regex);\n}", "des": "A RemoteFileInboundChannelAdapterSpec for an FtpInboundFileSynchronizingMessageSource."}
{"index": 10042, "repo": "spring-integration-ftp-6.1.2", "code": "public static enum FtpRemoteFileTemplate.ExistsMode extends Enum<FtpRemoteFileTemplate.ExistsMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic FtpRemoteFileTemplate.ExistsMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic FtpRemoteFileTemplate.ExistsMode[] values();\n}", "des": "The FtpRemoteFileTemplate.exists(String) operation mode."}
{"index": 10043, "repo": "spring-integration-ftp-6.1.2", "code": "public class FtpStreamingInboundChannelAdapterSpec extends org.springframework.integration.file.dsl.RemoteFileStreamingInboundChannelAdapterSpec<org.apache.commons.net.ftp.FTPFile,FtpStreamingInboundChannelAdapterSpec,FtpStreamingMessageSource> {\n\t// Specify a simple pattern to match remote files (e.g.\n\tFtpStreamingInboundChannelAdapterSpec patternFilter(String pattern);\n\t// Specify a regular expression to match remote files (e.g.\n\tFtpStreamingInboundChannelAdapterSpec regexFilter(String regex);\n}", "des": "A RemoteFileStreamingInboundChannelAdapterSpec for a FtpStreamingMessageSource."}
{"index": 10044, "repo": "spring-batch-infrastructure-5.0.2", "code": "public abstract class AbstractJpaQueryProvider extends Object implements JpaQueryProvider, org.springframework.beans.factory.InitializingBean {\n\t// Getter for EntityManager\n\tprotected jakarta.persistence.EntityManager getEntityManager();\n\t// Public setter to override the entityManager that was created by this HibernateQueryProvider.\n\tvoid setEntityManager(jakarta.persistence.EntityManager entityManager);\n}", "des": "Abstract JPA Query Provider to serve as a base class for all JPA Query providers."}
{"index": 10045, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class AmqpItemReader<T> extends Object implements ItemReader<T> {\n\t// Reads a piece of input data and advance to the next one.\n\tT read();\n\t// Establish the itemType for the reader.\n\tvoid setItemType(Class<? extends T> itemType);\n}", "des": "AMQP ItemReader implementation using an AmqpTemplate to receive and/or convert messages."}
{"index": 10046, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class AmqpItemReaderBuilder<T> extends Object {\n\t// Establish the amqpTemplate to be used by the AmqpItemReader.\n\tAmqpItemReaderBuilder<T> amqpTemplate(org.springframework.amqp.core.AmqpTemplate amqpTemplate);\n\t// Validates and builds a AmqpItemReader.\n\tAmqpItemReader<T> build();\n\t// Establish the itemType for the reader.\n\tAmqpItemReaderBuilder<T> itemType(Class<? extends T> itemType);\n}", "des": "A builder implementation for the AmqpItemReader"}
{"index": 10047, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class AmqpItemWriterBuilder<T> extends Object {\n\t// Establish the amqpTemplate to be used by the AmqpItemWriter.\n\tAmqpItemWriterBuilder<T> amqpTemplate(org.springframework.amqp.core.AmqpTemplate amqpTemplate);\n\t// Validates and builds a AmqpItemWriter.\n\tAmqpItemWriter<T> build();\n}", "des": "A builder implementation for the AmqpItemWriter"}
{"index": 10048, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class AnnotationMethodResolver extends Object implements MethodResolver {\n\t// Find a single Method on the given Class that contains the annotation type for which this resolver is searching.\n\tMethod findMethod(Class<?> clazz);\n\t// Find a single Method on the Class of the given candidate object that contains the annotation type for which this resolver is searching.\n\tMethod findMethod(Object candidate);\n}", "des": "MethodResolver implementation that finds a single Method on the given Class that contains the specified annotation type."}
{"index": 10049, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class AvroItemReader<T> extends AbstractItemCountingItemStreamItemReader<T> {\n\t// Close the resources opened in AbstractItemCountingItemStreamItemReader.doOpen().\n\tprotected void doClose();\n\t// Open resources necessary to start reading input.\n\tprotected void doOpen();\n\t// Read next item from input.\n\tprotected T doRead();\n\t// Disable or enable reading an embedded Avro schema.\n\tvoid setEmbeddedSchema(boolean embeddedSchema);\n}", "des": "An ItemReader that deserializes data from a Resource containing serialized Avro objects."}
{"index": 10050, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class AvroItemWriter<T> extends AbstractItemStreamItemWriter<T> {\n\t// No-op.\n\tvoid close();\n\t// No-op.\n\tvoid open(ExecutionContext executionContext);\n\t// Process the supplied data element.\n\tvoid write(Chunk<? extends T> items);\n}", "des": "An ItemWriter that serializes data to an WritableResource using Avro."}
{"index": 10051, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class AvroItemWriterBuilder<T> extends Object {\n\t// Build an instance of AvroItemWriter.\n\tAvroItemWriter<T> build();\n\t// The name used to calculate the key within the ExecutionContext.\n\tAvroItemWriterBuilder<T> name(String name);\n\tAvroItemWriterBuilder<T> resource(org.springframework.core.io.WritableResource resource);\n\tAvroItemWriterBuilder<T> schema(String schemaString);\n\tAvroItemWriterBuilder<T> schema(org.springframework.core.io.Resource schema);\n\tAvroItemWriterBuilder<T> type(Class<T> type);\n}", "des": "A builder implementation for the AvroItemWriter."}
{"index": 10052, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class ClassifierCompositeItemProcessor<I,O> extends Object implements ItemProcessor<I,O> {\n\t// Delegates to injected ItemProcessor instances according to the classification by the Classifier.\n\tO process(I item);\n\t// Establishes the classifier that will determine which ItemProcessor to use.\n\tvoid setClassifier(org.springframework.classify.Classifier<? super I,ItemProcessor<?,? extends O>> classifier);\n}", "des": "Calls one of a collection of ItemProcessors, based on a router pattern implemented through the provided Classifier."}
{"index": 10053, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class ClassifierCompositeItemProcessorBuilder<I,O> extends Object {\n\t// Returns a fully constructed ClassifierCompositeItemProcessor.\n\tClassifierCompositeItemProcessor<I,O> build();\n\t// Establishes the classifier that will determine which ItemProcessor to use.\n\tClassifierCompositeItemProcessorBuilder<I,O> classifier(org.springframework.classify.Classifier<? super I,ItemProcessor<?,? extends O>> classifier);\n}", "des": "Creates a fully qualified ClassifierCompositeItemProcessor."}
{"index": 10054, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class ClassifierCompositeItemWriterBuilder<T> extends Object {\n\t// Returns a fully constructed ClassifierCompositeItemWriter.\n\tClassifierCompositeItemWriter<T> build();\n\t// Establish the classifier to be used for the selection of which ItemWriter to use.\n\tClassifierCompositeItemWriterBuilder<T> classifier(org.springframework.classify.Classifier<T,ItemWriter<? super T>> classifier);\n}", "des": "Creates a fully qualified ClassifierCompositeItemWriter."}
{"index": 10055, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class CompletionPolicySupport extends Object implements CompletionPolicy {\n\t// Always true.\n\tboolean isComplete(RepeatContext context);\n\t// If exit status is not continuable return true, otherwise delegate to isComplete(RepeatContext).\n\tboolean isComplete(RepeatContext context, RepeatStatus result);\n\t// Build a new RepeatContextSupport and return it.\n\tRepeatContext start(RepeatContext context);\n\t// Increment the context so the counter is up to date.\n\tvoid update(RepeatContext context);\n}", "des": "Very simple base class for CompletionPolicy implementations."}
{"index": 10056, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class CompositeItemProcessor<I,O> extends Object implements ItemProcessor<I,O>, org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\t// Process the provided item, returning a potentially modified or new item for continued processing.\n\tO process(I item);\n\t// Establishes the ItemProcessor delegates that will work on the item to be processed.\n\tvoid setDelegates(List<? extends ItemProcessor<?,?>> delegates);\n}", "des": "Composite ItemProcessor that passes the item through a sequence of injected ItemTransformers (return value of previous transformation is the entry value of the next). Note the user is responsible for injecting a chain of ItemProcessors that conforms to declared input and output types."}
{"index": 10057, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class CompositeItemProcessorBuilder<I,O> extends Object {\n\t// Returns a fully constructed CompositeItemProcessor.\n\tCompositeItemProcessor<I,O> build();\n\t// Establishes the ItemProcessor delegates that will work on the item to be processed.\n\tCompositeItemProcessorBuilder<I,O> delegates(List<? extends ItemProcessor<?,?>> delegates);\n\t// Establishes the ItemProcessor delegates that will work on the item to be processed.\n\tCompositeItemProcessorBuilder<I,O> delegates(ItemProcessor<?,?>... delegates);\n}", "des": "Creates a fully qualified CompositeItemProcessorBuilder."}
{"index": 10058, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class Db2PagingQueryProvider extends SqlWindowingPagingQueryProvider {\n\t// Method generating the query string to be used for retrieving the first page.\n\tString generateFirstPageQuery(int pageSize);\n\t// Method generating the query string to be used for retrieving the pages following the first page.\n\tString generateRemainingPagesQuery(int pageSize);\n\tprotected Object getSubQueryAlias();\n}", "des": "DB2 implementation of a PagingQueryProvider using database specific features."}
{"index": 10059, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class DefaultFieldSetFactory extends Object implements FieldSetFactory {\n\t// Create a FieldSet with anonymous tokens.\n\tFieldSet create(String[] values);\n\t// Create a FieldSet with named tokens.\n\tFieldSet create(String[] values, String[] names);\n\t// The DateFormat to use for parsing numbers.\n\tvoid setDateFormat(DateFormat dateFormat);\n\t// The NumberFormat to use for parsing numbers.\n\tvoid setNumberFormat(NumberFormat numberFormat);\n}", "des": "Default implementation of FieldSetFactory with no special knowledge of the FieldSet required."}
{"index": 10060, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class DefaultMailErrorHandler extends Object implements MailErrorHandler {\n\t// Wraps the input exception with a runtime MailException.\n\tvoid handle(org.springframework.mail.MailMessage message, Exception exception);\n\t// The limit for the size of message that will be copied to the exception message.\n\tvoid setMaxMessageLength(int maxMessageLength);\n}", "des": "This MailErrorHandler implementation simply rethrows the exception it receives."}
{"index": 10061, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class DefaultPropertyEditorRegistrar extends Object implements org.springframework.beans.PropertyEditorRegistrar {\n\t// Register the custom editors with the given registry.\n\tvoid registerCustomEditors(org.springframework.beans.PropertyEditorRegistry registry);\n\t// Specify the custom editors to register.\n\tvoid setCustomEditors(Map<? extends Object,? extends PropertyEditor> customEditors);\n}", "des": "A re-usable PropertyEditorRegistrar that can be used wherever one needs to register custom PropertyEditor instances with a PropertyEditorRegistry (like a bean wrapper, or a type converter)."}
{"index": 10062, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class DefaultResultCompletionPolicy extends CompletionPolicySupport {\n\t// Always false.\n\tboolean isComplete(RepeatContext context);\n\t// True if the result is null, or a RepeatStatus indicating completion.\n\tboolean isComplete(RepeatContext context, RepeatStatus result);\n}", "des": "Very simple CompletionPolicy that bases its decision on the result of a batch operation."}
{"index": 10063, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class DelimitedLineAggregator<T> extends ExtractorLineAggregator<T> {\n\t// Aggregate provided fields into single String.\n\tString doAggregate(Object[] fields);\n\t// Public setter for the delimiter.\n\tvoid setDelimiter(String delimiter);\n}", "des": "A LineAggregator implementation that converts an object into a delimited list of strings."}
{"index": 10064, "repo": "spring-batch-infrastructure-5.0.2", "code": "public abstract class ExtractorLineAggregator<T> extends Object implements LineAggregator<T> {\n\t// Extract fields from the given item using the FieldExtractor and then aggregate them.\n\tString aggregate(T item);\n\t// Aggregate provided fields into single String.\n\tprotected abstract String doAggregate(Object[] fields);\n\t// Public setter for the field extractor responsible for splitting an input object up into an array of objects.\n\tvoid setFieldExtractor(FieldExtractor<T> fieldExtractor);\n}", "des": "An abstract LineAggregator implementation that utilizes a FieldExtractor to convert the incoming object to an array of its parts."}
{"index": 10065, "repo": "spring-batch-infrastructure-5.0.2", "code": "public interface FieldSetFactory {\n\t// Create a FieldSet with anonymous tokens.\n\tFieldSet create(String[] values);\n\t// Create a FieldSet with named tokens.\n\tFieldSet create(String[] values, String[] names);\n}", "des": "Factory interface for creating FieldSet instances."}
{"index": 10066, "repo": "spring-batch-infrastructure-5.0.2", "code": "public final class FileUtils extends Object {\n\t// Create a new file if it doesn't already exist.\n\tstatic boolean createNewFile(File file);\n\t// Set up output file for batch processing.\n\tstatic void setUpOutputFile(File file, boolean restarted, boolean append, boolean overwriteOutputFile);\n}", "des": "Utility methods for files used in batch processing."}
{"index": 10067, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class FixedLengthTokenizer extends AbstractLineTokenizer {\n\t// Yields the tokens resulting from the splitting of the supplied line.\n\tprotected List<String> doTokenize(String line);\n\t// Set the column ranges.\n\tvoid setColumns(Range... ranges);\n}", "des": "Tokenizer used to process data obtained from files with fixed-length format."}
{"index": 10068, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class FlatFileItemWriter<T> extends AbstractFileItemWriter<T> {\n\t// Assert that mandatory properties (lineAggregator) are set.\n\tvoid afterPropertiesSet();\n\t// Write out a string of items followed by a \"new line\", where the format of the new line separator is determined by the underlying operating system.\n\tString doWrite(Chunk<? extends T> items);\n\t// Public setter for the LineAggregator.\n\tvoid setLineAggregator(LineAggregator<T> lineAggregator);\n}", "des": "This class is an item writer that writes data to a file or stream."}
{"index": 10069, "repo": "spring-batch-infrastructure-5.0.2", "code": "public interface FragmentEventReader extends XMLEventReader {\n\t// Tells the event reader the current fragment has been processed.\n\tvoid markFragmentProcessed();\n\t// Tells the event reader its cursor position is exactly before the fragment.\n\tvoid markStartFragment();\n\t// Reset the state of the fragment reader - make it forget it assumptions about current position of cursor (e.g.\n\tvoid reset();\n}", "des": "Interface for event readers which support treating XML fragments as standalone XML documents by wrapping the fragments with StartDocument and EndDocument events."}
{"index": 10070, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class GsonJsonObjectMarshaller<T> extends Object implements JsonObjectMarshaller<T> {\n\t// Marshal an object into a json representation.\n\tString marshal(T item);\n\t// Set the Gson object to use.\n\tvoid setGson(com.google.gson.Gson gson);\n}", "des": "A json object marshaller that uses Google Gson to marshal an object into a json representation."}
{"index": 10071, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class GsonJsonObjectReader<T> extends Object implements JsonObjectReader<T> {\n\t// Close the input resource.\n\tvoid close();\n\t// Open the Json resource for reading.\n\tvoid open(org.springframework.core.io.Resource resource);\n\t// Read the next object in the Json resource if any.\n\tT read();\n\t// Set the object mapper to use to map Json objects to domain objects.\n\tvoid setMapper(com.google.gson.Gson mapper);\n}", "des": "Implementation of JsonObjectReader based on Google Gson."}
{"index": 10072, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class H2PagingQueryProvider extends AbstractSqlPagingQueryProvider {\n\t// Method generating the query string to be used for retrieving the first page.\n\tString generateFirstPageQuery(int pageSize);\n\t// Method generating the query string to be used for retrieving the pages following the first page.\n\tString generateRemainingPagesQuery(int pageSize);\n}", "des": "H2 implementation of a PagingQueryProvider using database specific features."}
{"index": 10073, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class HanaPagingQueryProvider extends AbstractSqlPagingQueryProvider {\n\t// Method generating the query string to be used for retrieving the first page.\n\tString generateFirstPageQuery(int pageSize);\n\t// Method generating the query string to be used for retrieving the pages following the first page.\n\tString generateRemainingPagesQuery(int pageSize);\n}", "des": "SAP HANA implementation of a PagingQueryProvider using database specific features."}
{"index": 10074, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class HsqlPagingQueryProvider extends AbstractSqlPagingQueryProvider {\n\t// Method generating the query string to be used for retrieving the first page.\n\tString generateFirstPageQuery(int pageSize);\n\t// Method generating the query string to be used for retrieving the pages following the first page.\n\tString generateRemainingPagesQuery(int pageSize);\n}", "des": "HSQLDB implementation of a PagingQueryProvider using database specific features."}
{"index": 10075, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class IncorrectLineLengthException extends FlatFileFormatException {\n\t// Retrieves the actual length that was recorded for this exception.\n\tint getActualLength();\n\t// Retrieves the expected length that was recorded for this exception.\n\tint getExpectedLength();\n}", "des": "Exception indicating that the line size expected is different from what is expected."}
{"index": 10076, "repo": "spring-batch-infrastructure-5.0.2", "code": "public interface ItemStream {\n\t// If any resources are needed for the stream to operate they need to be destroyed here.\n\tdefault void close();\n\t// Open the stream for the provided ExecutionContext.\n\tdefault void open(ExecutionContext executionContext);\n\t// Indicates that the execution context provided during open is about to be saved.\n\tdefault void update(ExecutionContext executionContext);\n}", "des": "Marker interface defining a contract for periodically storing state and restoring from that state should an error occur."}
{"index": 10077, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class JacksonJsonObjectMarshaller<T> extends Object implements JsonObjectMarshaller<T> {\n\t// Marshal an object into a json representation.\n\tString marshal(T item);\n\t// Set the ObjectMapper to use.\n\tvoid setObjectMapper(com.fasterxml.jackson.databind.ObjectMapper objectMapper);\n}", "des": "A json object marshaller that uses Jackson to marshal an object into a json representation."}
{"index": 10078, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class JacksonJsonObjectReader<T> extends Object implements JsonObjectReader<T> {\n\t// Close the input resource.\n\tvoid close();\n\t// Open the Json resource for reading.\n\tvoid open(org.springframework.core.io.Resource resource);\n\t// Read the next object in the Json resource if any.\n\tT read();\n\t// Set the object mapper to use to map Json objects to domain objects.\n\tvoid setMapper(com.fasterxml.jackson.databind.ObjectMapper mapper);\n}", "des": "Implementation of JsonObjectReader based on Jackson."}
{"index": 10079, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class JmsItemReader<T> extends Object implements ItemReader<T>, org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\t// Reads a piece of input data and advance to the next one.\n\tT read();\n\t// Set the expected type of incoming message payloads.\n\tvoid setItemType(Class<? extends T> itemType);\n\t// Setter for JMS template.\n\tvoid setJmsTemplate(org.springframework.jms.core.JmsOperations jmsTemplate);\n}", "des": "An ItemReader for JMS using a JmsTemplate."}
{"index": 10080, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class JmsItemReaderBuilder<T> extends Object {\n\t// Returns a fully constructed JmsItemReader.\n\tJmsItemReader<T> build();\n\t// Set the expected type of incoming message payloads.\n\tJmsItemReaderBuilder<T> itemType(Class<? extends T> itemType);\n\t// Establish the JMS template that will be used by the JmsItemReader.\n\tJmsItemReaderBuilder<T> jmsTemplate(org.springframework.jms.core.JmsOperations jmsTemplate);\n}", "des": "Creates a fully qualified JmsItemReader."}
{"index": 10081, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class JmsItemWriter<T> extends Object implements ItemWriter<T> {\n\t// Setter for JMS template.\n\tvoid setJmsTemplate(org.springframework.jms.core.JmsOperations jmsTemplate);\n\t// Send the items one-by-one to the default destination of the JMS template.\n\tvoid write(Chunk<? extends T> items);\n}", "des": "An ItemWriter for JMS using a JmsTemplate."}
{"index": 10082, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class JmsItemWriterBuilder<T> extends Object {\n\t// Returns a fully constructed JmsItemWriter.\n\tJmsItemWriter<T> build();\n\t// Establish the JMS template that will be used by the JmsItemWriter.\n\tJmsItemWriterBuilder<T> jmsTemplate(org.springframework.jms.core.JmsOperations jmsTemplate);\n}", "des": "Creates a fully qualified JmsItemWriter."}
{"index": 10083, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class JpaItemWriterBuilder<T> extends Object {\n\t// Returns a fully built JpaItemWriter.\n\tJpaItemWriter<T> build();\n\t// The JPA EntityManagerFactory to obtain an entity manager from.\n\tJpaItemWriterBuilder<T> entityManagerFactory(jakarta.persistence.EntityManagerFactory entityManagerFactory);\n\t// Set whether the entity manager should perform a persist instead of a merge.\n\tJpaItemWriterBuilder<T> usePersist(boolean usePersist);\n}", "des": "A builder for the JpaItemWriter."}
{"index": 10084, "repo": "spring-batch-infrastructure-5.0.2", "code": "public interface JpaQueryProvider {\n\t// Create the query object.\n\tjakarta.persistence.Query createQuery();\n\t// Provide an EntityManager for the query to be built.\n\tvoid setEntityManager(jakarta.persistence.EntityManager entityManager);\n}", "des": "Interface defining the functionality to be provided for generating queries for use with JPA ItemReaders or other custom built artifacts."}
{"index": 10085, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class JsonFileItemWriter<T> extends AbstractFileItemWriter<T> {\n\t// Assert that mandatory properties (jsonObjectMarshaller) are set.\n\tvoid afterPropertiesSet();\n\t// Write out a string of items followed by a \"new line\", where the format of the new line separator is determined by the underlying operating system.\n\tString doWrite(Chunk<? extends T> items);\n\t// Set the JsonObjectMarshaller to use to marshal object to json.\n\tvoid setJsonObjectMarshaller(JsonObjectMarshaller<T> jsonObjectMarshaller);\n}", "des": "Item writer that writes data in json format to an output file."}
{"index": 10086, "repo": "spring-batch-infrastructure-5.0.2", "code": "public interface JsonObjectReader<T> {\n\t// Close the input resource.\n\tdefault void close();\n\t// Open the Json resource for reading.\n\tdefault void open(org.springframework.core.io.Resource resource);\n\t// Read the next object in the Json resource if any.\n\tT read();\n}", "des": "Strategy interface for Json readers."}
{"index": 10087, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class LogOrRethrowExceptionHandler extends Object implements ExceptionHandler {\n\t// Classify the throwables and decide whether to rethrow based on the result.\n\tvoid handleException(RepeatContext context, Throwable throwable);\n\t// Setter for the Classifier used by this handler.\n\tvoid setExceptionClassifier(org.springframework.classify.Classifier<Throwable,LogOrRethrowExceptionHandler.Level> exceptionClassifier);\n}", "des": "Implementation of ExceptionHandler based on an Classifier."}
{"index": 10088, "repo": "spring-batch-infrastructure-5.0.2", "code": "public static enum LogOrRethrowExceptionHandler.Level extends Enum<LogOrRethrowExceptionHandler.Level> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic LogOrRethrowExceptionHandler.Level valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic LogOrRethrowExceptionHandler.Level[] values();\n}", "des": "Logging levels for the handler."}
{"index": 10089, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class MariaDBPagingQueryProvider extends AbstractSqlPagingQueryProvider {\n\t// Method generating the query string to be used for retrieving the first page.\n\tString generateFirstPageQuery(int pageSize);\n\t// Method generating the query string to be used for retrieving the pages following the first page.\n\tString generateRemainingPagesQuery(int pageSize);\n}", "des": "MariaDB implementation of a PagingQueryProvider using database specific features."}
{"index": 10090, "repo": "spring-batch-infrastructure-5.0.2", "code": "public interface MethodResolver {\n\t// Find a single Method on the given Class that matches this resolver's criteria.\n\tMethod findMethod(Class<?> clazz);\n\t// Find a single Method on the provided Object that matches this resolver's criteria.\n\tMethod findMethod(Object candidate);\n}", "des": "Strategy interface for detecting a single Method on a Class."}
{"index": 10091, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class MySqlPagingQueryProvider extends AbstractSqlPagingQueryProvider {\n\t// Method generating the query string to be used for retrieving the first page.\n\tString generateFirstPageQuery(int pageSize);\n\t// Method generating the query string to be used for retrieving the pages following the first page.\n\tString generateRemainingPagesQuery(int pageSize);\n}", "des": "MySQL implementation of a PagingQueryProvider using database specific features."}
{"index": 10092, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class OraclePagingQueryProvider extends AbstractSqlPagingQueryProvider {\n\t// Method generating the query string to be used for retrieving the first page.\n\tString generateFirstPageQuery(int pageSize);\n\t// Method generating the query string to be used for retrieving the pages following the first page.\n\tString generateRemainingPagesQuery(int pageSize);\n}", "des": "Oracle implementation of a PagingQueryProvider using database specific features."}
{"index": 10093, "repo": "spring-batch-infrastructure-5.0.2", "code": "public enum Order extends Enum<Order> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Order valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Order[] values();\n}", "des": "The direction of the sort in an ORDER BY clause."}
{"index": 10094, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class PostgresPagingQueryProvider extends AbstractSqlPagingQueryProvider {\n\t// Method generating the query string to be used for retrieving the first page.\n\tString generateFirstPageQuery(int pageSize);\n\t// Method generating the query string to be used for retrieving the pages following the first page.\n\tString generateRemainingPagesQuery(int pageSize);\n}", "des": "Postgres implementation of a PagingQueryProvider using database specific features."}
{"index": 10095, "repo": "spring-batch-infrastructure-5.0.2", "code": "public final class PropertiesConverter extends Object {\n\t// Convert a Properties object to a String.\n\tstatic String propertiesToString(Properties propertiesToParse);\n\t// Parse a String to a Properties object.\n\tstatic Properties stringToProperties(String stringToParse);\n}", "des": "Utility to convert a Properties object to a String and back."}
{"index": 10096, "repo": "spring-batch-infrastructure-5.0.2", "code": "public interface RecordSeparatorPolicy {\n\t// Signal the end of a record based on the content of the current record.\n\tboolean isEndOfRecord(String record);\n\t// Give the policy a chance to post-process a complete record, e.g.\n\tString postProcess(String record);\n\t// Pre-process a record before another line is appended, in the case of a multi-line record.\n\tString preProcess(String record);\n}", "des": "Policy for text file-based input sources to determine the end of a record, e.g."}
{"index": 10097, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class RecursiveCollectionLineAggregator<T> extends Object implements LineAggregator<Collection<T>> {\n\t// Create a string from the value provided.\n\tString aggregate(Collection<T> items);\n\t// Public setter for the LineAggregator to use on single items, that are not Strings.\n\tvoid setDelegate(LineAggregator<T> delegate);\n}", "des": "An implementation of LineAggregator that concatenates a collection of items of a common type with the system line separator."}
{"index": 10098, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class RegexLineTokenizer extends AbstractLineTokenizer {\n\tprotected List<String> doTokenize(String line);\n\t// Sets the regex pattern to use.\n\tvoid setPattern(Pattern pattern);\n\t// Sets the regular expression to use.\n\tvoid setRegex(String regex);\n}", "des": "Line-tokenizer using a regular expression to filter out data (by using matching and non-matching groups)."}
{"index": 10099, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class RepeatContextCounter extends Object {\n\tint getCount();\n\t// Increment by 1.\n\tfinal void increment();\n\t// Increment the counter.\n\tfinal void increment(int delta);\n}", "des": "Helper class for policies that need to count the number of occurrences of some event (e.g."}
{"index": 10100, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class RepeatOperationsInterceptor extends Object implements org.aopalliance.intercept.MethodInterceptor {\n\t// Invoke the proceeding method call repeatedly, according to the properties of the injected RepeatOperations.\n\tObject invoke(org.aopalliance.intercept.MethodInvocation invocation);\n\t// Setter for the RepeatOperations.\n\tvoid setRepeatOperations(RepeatOperations batchTemplate);\n}", "des": "A MethodInterceptor that can be used to automatically repeat calls to a method on a service."}
{"index": 10101, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class SimpleCompletionPolicy extends DefaultResultCompletionPolicy {\n\tint getChunkSize();\n\t// Terminate if the chunk size has been reached.\n\tboolean isComplete(RepeatContext context);\n\t// Terminate if the chunk size has been reached, or the result is null.\n\tboolean isComplete(RepeatContext context, RepeatStatus result);\n\tvoid setChunkSize(int chunkSize);\n\t// Reset the counter.\n\tRepeatContext start(RepeatContext context);\n\t// Increment the counter in the context.\n\tvoid update(RepeatContext context);\n}", "des": "Policy for terminating a batch after a fixed number of operations."}
{"index": 10102, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class SimpleMailMessageItemWriterBuilder extends Object {\n\t// Returns a fully constructed SimpleMailMessageItemWriter.\n\tSimpleMailMessageItemWriter build();\n\t// The handler for failed messages.\n\tSimpleMailMessageItemWriterBuilder mailErrorHandler(MailErrorHandler mailErrorHandler);\n\t// A MailSender to be used to send messages in SimpleMailMessageItemWriter.write(Chunk).\n\tSimpleMailMessageItemWriterBuilder mailSender(org.springframework.mail.MailSender mailSender);\n}", "des": "Creates a fully qualified SimpleMailMessageItemWriter."}
{"index": 10103, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class SimpleRecordSeparatorPolicy extends Object implements RecordSeparatorPolicy {\n\t// Always returns true.\n\tboolean isEndOfRecord(String line);\n\t// Pass the record through.\n\tString postProcess(String record);\n\t// Pass the line through.\n\tString preProcess(String line);\n}", "des": "Simplest possible RecordSeparatorPolicy - treats all lines as record endings."}
{"index": 10104, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class SingleItemPeekableItemReaderBuilder<T> extends Object {\n\t// Returns a fully constructed SingleItemPeekableItemReader.\n\tSingleItemPeekableItemReader<T> build();\n\t// The item reader to use as a delegate.\n\tSingleItemPeekableItemReaderBuilder<T> delegate(ItemReader<T> delegate);\n}", "des": "Creates a fully qualified SingleItemPeekeableItemReader."}
{"index": 10105, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class SkipWrapper<T> extends Object {\n\t// Public getter for the exception.\n\tThrowable getException();\n\t// Public getter for the item.\n\tT getItem();\n}", "des": "Wrapper for an item and its exception if it failed processing."}
{"index": 10106, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class SqlitePagingQueryProvider extends AbstractSqlPagingQueryProvider {\n\t// Method generating the query string to be used for retrieving the first page.\n\tString generateFirstPageQuery(int pageSize);\n\t// Method generating the query string to be used for retrieving the pages following the first page.\n\tString generateRemainingPagesQuery(int pageSize);\n}", "des": "SQLite implementation of a PagingQueryProvider using database specific features."}
{"index": 10107, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class SqlServerPagingQueryProvider extends SqlWindowingPagingQueryProvider {\n\t// Method generating the query string to be used for retrieving the first page.\n\tString generateFirstPageQuery(int pageSize);\n\t// Method generating the query string to be used for retrieving the pages following the first page.\n\tString generateRemainingPagesQuery(int pageSize);\n\tprotected Object getSubQueryAlias();\n}", "des": "SQL Server implementation of a PagingQueryProvider using database specific features."}
{"index": 10108, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class SybasePagingQueryProvider extends SqlWindowingPagingQueryProvider {\n\t// Method generating the query string to be used for retrieving the first page.\n\tString generateFirstPageQuery(int pageSize);\n\t// Method generating the query string to be used for retrieving the pages following the first page.\n\tString generateRemainingPagesQuery(int pageSize);\n\tprotected Object getSubQueryAlias();\n}", "des": "Sybase implementation of a PagingQueryProvider using database specific features."}
{"index": 10109, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class SynchronizedItemStreamReaderBuilder<T> extends Object {\n\t// Returns a fully constructed SynchronizedItemStreamReader.\n\tSynchronizedItemStreamReader<T> build();\n\t// The item stream reader to use as a delegate.\n\tSynchronizedItemStreamReaderBuilder<T> delegate(ItemStreamReader<T> delegate);\n}", "des": "Creates a fully qualified SynchronizedItemStreamReader."}
{"index": 10110, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class SynchronizedItemStreamWriterBuilder<T> extends Object {\n\t// Returns a fully constructed SynchronizedItemStreamWriter.\n\tSynchronizedItemStreamWriter<T> build();\n\t// Set the delegate ItemStreamWriter.\n\tSynchronizedItemStreamWriterBuilder<T> delegate(ItemStreamWriter<T> delegate);\n}", "des": "Creates a fully qualified SynchronizedItemStreamWriter."}
{"index": 10111, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class SystemPropertyInitializer extends Object implements org.springframework.beans.factory.InitializingBean {\n\t// Sets the System property with the provided name and default value.\n\tvoid afterPropertiesSet();\n\t// Mandatory property specifying the default value of the System property.\n\tvoid setDefaultValue(String defaultValue);\n\t// Set the key name for the System property that is created.\n\tvoid setKeyName(String keyName);\n}", "des": "Helper class that sets up a System property with a default value."}
{"index": 10112, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class TimeoutTerminationPolicy extends CompletionPolicySupport {\n\t// Check the timeout and complete gracefully if it has expires.\n\tboolean isComplete(RepeatContext context);\n\t// Start the clock on the timeout.\n\tRepeatContext start(RepeatContext context);\n}", "des": "Termination policy that times out after a fixed period."}
{"index": 10113, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class TransactionAwareBufferedWriter extends Writer {\n\tvoid close();\n\tvoid flush();\n\t// Convenience method for clients to determine if there is any unflushed data.\n\tlong getBufferSize();\n\tvoid setEncoding(String encoding);\n\t// Flag to indicate that changes should be force-synced to disk on flush.\n\tvoid setForceSync(boolean forceSync);\n\tvoid write(char[] cbuf, int off, int len);\n\tvoid write(String str, int off, int len);\n}", "des": "Wrapper for a FileChannel that delays actually writing to or closing the buffer if a transaction is active."}
{"index": 10114, "repo": "spring-batch-infrastructure-5.0.2", "code": "public class ValidatingItemProcessor<T> extends Object implements ItemProcessor<T,T>, org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\t// Validate the item and return it unmodified\n\tT process(T item);\n\t// Should the processor filter invalid records instead of skipping them?\n\tvoid setFilter(boolean filter);\n\t// Set the validator used to validate each item.\n\tvoid setValidator(Validator<? super T> validator);\n}", "des": "Simple implementation of ItemProcessor that validates input and returns it without modifications."}
{"index": 10115, "repo": "spring-beans-6.0.11", "code": "public abstract class AbstractComponentDefinition extends Object implements ComponentDefinition {\n\t// Returns an empty array.\n\tBeanDefinition[] getBeanDefinitions();\n\t// Returns an empty array.\n\tBeanReference[] getBeanReferences();\n\t// Delegates to ComponentDefinition.getName().\n\tString getDescription();\n\t// Returns an empty array.\n\tBeanDefinition[] getInnerBeanDefinitions();\n}", "des": "Base implementation of ComponentDefinition that provides a basic implementation of AbstractComponentDefinition.getDescription() which delegates to ComponentDefinition.getName()."}
{"index": 10116, "repo": "spring-beans-6.0.11", "code": "public class AliasDefinition extends Object implements BeanMetadataElement {\n\t// Return the alias registered for the bean.\n\tfinal String getAlias();\n\t// Return the canonical name of the bean.\n\tfinal String getBeanName();\n\t// Return the configuration source Object for this metadata element (may be null).\n\tfinal Object getSource();\n}", "des": "Representation of an alias that has been registered during the parsing process."}
{"index": 10117, "repo": "spring-beans-6.0.11", "code": "public interface AnnotatedBeanDefinition extends BeanDefinition {\n\t// Obtain metadata for this bean definition's factory method, if any.\n\torg.springframework.core.type.MethodMetadata getFactoryMethodMetadata();\n\t// Obtain the annotation metadata (as well as basic class metadata) for this bean definition's bean class.\n\torg.springframework.core.type.AnnotationMetadata getMetadata();\n}", "des": "Extended BeanDefinition interface that exposes AnnotationMetadata about its bean class - without requiring the class to be loaded yet."}
{"index": 10118, "repo": "spring-beans-6.0.11", "code": "public class AnnotatedGenericBeanDefinition extends GenericBeanDefinition implements AnnotatedBeanDefinition {\n\t// Obtain metadata for this bean definition's factory method, if any.\n\tfinal org.springframework.core.type.MethodMetadata getFactoryMethodMetadata();\n\t// Obtain the annotation metadata (as well as basic class metadata) for this bean definition's bean class.\n\tfinal org.springframework.core.type.AnnotationMetadata getMetadata();\n}", "des": "Extension of the GenericBeanDefinition class, adding support for annotation metadata exposed through the AnnotatedBeanDefinition interface."}
{"index": 10119, "repo": "spring-beans-6.0.11", "code": "public class AnnotationBeanWiringInfoResolver extends Object implements BeanWiringInfoResolver {\n\t// Build the BeanWiringInfo for the given Configurable annotation.\n\tprotected BeanWiringInfo buildWiringInfo(Object beanInstance, Configurable annotation);\n\t// Determine the default bean name for the specified bean instance.\n\tprotected String getDefaultBeanName(Object beanInstance);\n\t// Resolve the BeanWiringInfo for the given bean instance.\n\tBeanWiringInfo resolveWiringInfo(Object beanInstance);\n}", "des": "BeanWiringInfoResolver that uses the Configurable annotation to identify which classes need autowiring."}
{"index": 10120, "repo": "spring-beans-6.0.11", "code": "public static enum AotServices.Source extends Enum<AotServices.Source> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AotServices.Source valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AotServices.Source[] values();\n}", "des": "Sources from which services were obtained."}
{"index": 10121, "repo": "spring-beans-6.0.11", "code": "public enum Autowire extends Enum<Autowire> {\n\t// Return whether this represents an actual autowiring value.\n\tboolean isAutowire();\n\tint value();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Autowire valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Autowire[] values();\n}", "des": "Enumeration determining autowiring status: that is, whether a bean should have its dependencies automatically injected by the Spring container using setter injection."}
{"index": 10122, "repo": "spring-beans-6.0.11", "code": "public class BeanDefinitionOverrideException extends BeanDefinitionStoreException {\n\t// Return the newly registered bean definition.\n\tBeanDefinition getBeanDefinition();\n\t// Return the name of the bean.\n\tString getBeanName();\n\t// Return the existing bean definition for the same name.\n\tBeanDefinition getExistingDefinition();\n\t// Return the description of the resource that the bean definition came from.\n\tString getResourceDescription();\n}", "des": "Subclass of BeanDefinitionStoreException indicating an invalid override attempt: typically registering a new definition for the same bean name while DefaultListableBeanFactory.isAllowBeanDefinitionOverriding() is false."}
{"index": 10123, "repo": "spring-beans-6.0.11", "code": "public class BeanDefinitionStoreException extends FatalBeanException {\n\t// Return the name of the bean, if available.\n\tString getBeanName();\n\t// Return the description of the resource that the bean definition came from, if available.\n\tString getResourceDescription();\n}", "des": "Exception thrown when a BeanFactory encounters an invalid bean definition: e.g."}
{"index": 10124, "repo": "spring-beans-6.0.11", "code": "public interface BeanFactoryInitializationCode {\n\t// Add an initializer method call.\n\tvoid addInitializer(org.springframework.aot.generate.MethodReference methodReference);\n\t// Get the GeneratedMethods used by the initializing code.\n\torg.springframework.aot.generate.GeneratedMethods getMethods();\n}", "des": "Interface that can be used to configure the code that will be generated to perform bean factory initialization."}
{"index": 10125, "repo": "spring-beans-6.0.11", "code": "public class BeanInstantiationException extends FatalBeanException {\n\t// Return the offending bean class (never null).\n\tClass<?> getBeanClass();\n\t// Return the delegate for bean construction purposes, if known.\n\tMethod getConstructingMethod();\n\t// Return the offending constructor, if known.\n\tConstructor<?> getConstructor();\n}", "des": "Exception thrown when instantiation of a bean failed."}
{"index": 10126, "repo": "spring-beans-6.0.11", "code": "public class BeanMetadataAttribute extends Object implements BeanMetadataElement {\n\tboolean equals(Object other);\n\t// Return the name of the attribute.\n\tString getName();\n\t// Return the configuration source Object for this metadata element (may be null).\n\tObject getSource();\n\t// Return the value of the attribute.\n\tObject getValue();\n\t// Set the configuration source Object for this metadata element.\n\tvoid setSource(Object source);\n}", "des": "Holder for a key-value style attribute that is part of a bean definition."}
{"index": 10127, "repo": "spring-beans-6.0.11", "code": "public class BeanNotOfRequiredTypeException extends BeansException {\n\t// Return the actual type of the instance found.\n\tClass<?> getActualType();\n\t// Return the name of the instance that was of the wrong type.\n\tString getBeanName();\n\t// Return the expected type for the bean.\n\tClass<?> getRequiredType();\n}", "des": "Thrown when a bean doesn't match the expected type."}
{"index": 10128, "repo": "spring-beans-6.0.11", "code": "@FunctionalInterface public interface BeanRegistrationAotProcessor {\n\t// Return if the bean instance associated with this processor should be excluded from AOT processing itself.\n\tdefault boolean isBeanExcludedFromAotProcessing();\n\t// Process the given RegisteredBean instance ahead-of-time and return a contribution or null.\n\tBeanRegistrationAotContribution processAheadOfTime(RegisteredBean registeredBean);\n}", "des": "AOT processor that makes bean registration contributions by processing RegisteredBean instances."}
{"index": 10129, "repo": "spring-beans-6.0.11", "code": "public interface BeanRegistrationCode {\n\t// Add an instance post processor method call to the registration code.\n\tvoid addInstancePostProcessor(org.springframework.aot.generate.MethodReference methodReference);\n\t// Return the name of the class being used for registrations.\n\torg.springframework.javapoet.ClassName getClassName();\n\t// Return a GeneratedMethods being used by the registrations code.\n\torg.springframework.aot.generate.GeneratedMethods getMethods();\n}", "des": "Interface that can be used to configure the code that will be generated to perform registration of a single bean."}
{"index": 10130, "repo": "spring-beans-6.0.11", "code": "public interface BeanRegistrationsCode {\n\t// Return the name of the class being used for registrations.\n\torg.springframework.javapoet.ClassName getClassName();\n\t// Return a GeneratedMethods being used by the registrations code.\n\torg.springframework.aot.generate.GeneratedMethods getMethods();\n}", "des": "Interface that can be used to configure the code that will be generated to register beans."}
{"index": 10131, "repo": "spring-beans-6.0.11", "code": "public class CannotLoadBeanClassException extends FatalBeanException {\n\t// Return the name of the class we were trying to load.\n\tString getBeanClassName();\n\t// Return the name of the bean requested.\n\tString getBeanName();\n\t// Return the description of the resource that the bean definition came from.\n\tString getResourceDescription();\n}", "des": "Exception thrown when the BeanFactory cannot load the specified class of a given bean."}
{"index": 10132, "repo": "spring-beans-6.0.11", "code": "public class ChildBeanDefinition extends AbstractBeanDefinition {\n\t// Clone this bean definition.\n\tAbstractBeanDefinition cloneBeanDefinition();\n\tboolean equals(Object other);\n\t// Return the name of the parent definition of this bean definition, if any.\n\tString getParentName();\n\t// Set the name of the parent definition of this bean definition, if any.\n\tvoid setParentName(String parentName);\n\t// Validate this bean definition.\n\tvoid validate();\n}", "des": "Bean definition for beans which inherit settings from their parent."}
{"index": 10133, "repo": "spring-beans-6.0.11", "code": "public class CompositeComponentDefinition extends AbstractComponentDefinition {\n\t// Add the given component as nested element of this composite component.\n\tvoid addNestedComponent(ComponentDefinition component);\n\t// Get the user-visible name of this ComponentDefinition.\n\tString getName();\n\t// Return the nested components that this composite component holds.\n\tComponentDefinition[] getNestedComponents();\n\t// Return the configuration source Object for this metadata element (may be null).\n\tObject getSource();\n}", "des": "ComponentDefinition implementation that holds one or more nested ComponentDefinition instances, aggregating them into a named group of components."}
{"index": 10134, "repo": "spring-beans-6.0.11", "code": "public class CustomDateEditor extends PropertyEditorSupport {\n\t// Format the Date as String, using the specified DateFormat.\n\tString getAsText();\n\t// Parse the Date from the given text, using the specified DateFormat.\n\tvoid setAsText(String text);\n}", "des": "Property editor for java.util.Date, supporting a custom java.text.DateFormat."}
{"index": 10135, "repo": "spring-beans-6.0.11", "code": "public class CustomNumberEditor extends PropertyEditorSupport {\n\t// Format the Number as String, using the specified NumberFormat.\n\tString getAsText();\n\t// Parse the Number from the given text, using the specified NumberFormat.\n\tvoid setAsText(String text);\n\t// Coerce a Number value into the required target class, if necessary.\n\tvoid setValue(Object value);\n}", "des": "Property editor for any Number subclass such as Short, Integer, Long, BigInteger, Float, Double, BigDecimal."}
{"index": 10136, "repo": "spring-beans-6.0.11", "code": "public interface DestructionAwareBeanPostProcessor extends BeanPostProcessor {\n\t// Apply this BeanPostProcessor to the given bean instance before its destruction, e.g.\n\tvoid postProcessBeforeDestruction(Object bean, String beanName);\n\t// Determine whether the given bean instance requires destruction by this post-processor.\n\tdefault boolean requiresDestruction(Object bean);\n}", "des": "Subinterface of BeanPostProcessor that adds a before-destruction callback."}
{"index": 10137, "repo": "spring-beans-6.0.11", "code": "public interface FactoryBean<T> {\n\t// Return an instance (possibly shared or independent) of the object managed by this factory.\n\tT getObject();\n\t// Return the type of object that this FactoryBean creates, or null if not known in advance.\n\tClass<?> getObjectType();\n\t// Is the object managed by this factory a singleton? That is, will getObject() always return the same object (a reference that can be cached)?\n\tdefault boolean isSingleton();\n}", "des": "Interface to be implemented by objects used within a BeanFactory which are themselves factories for individual objects."}
{"index": 10138, "repo": "spring-beans-6.0.11", "code": "public class FailFastProblemReporter extends Object implements ProblemReporter {\n\t// Throws a BeanDefinitionParsingException detailing the error that has occurred.\n\tvoid error(Problem problem);\n\t// Throws a BeanDefinitionParsingException detailing the error that has occurred.\n\tvoid fatal(Problem problem);\n\t// Set the logger that is to be used to report warnings.\n\tvoid setLogger(org.apache.commons.logging.Log logger);\n\t// Writes the supplied Problem to the Log at WARN level.\n\tvoid warning(Problem problem);\n}", "des": "Simple ProblemReporter implementation that exhibits fail-fast behavior when errors are encountered."}
{"index": 10139, "repo": "spring-beans-6.0.11", "code": "public class GenericBeanDefinition extends AbstractBeanDefinition {\n\t// Clone this bean definition.\n\tAbstractBeanDefinition cloneBeanDefinition();\n\tboolean equals(Object other);\n\t// Return the name of the parent definition of this bean definition, if any.\n\tString getParentName();\n\t// Set the name of the parent definition of this bean definition, if any.\n\tvoid setParentName(String parentName);\n}", "des": "GenericBeanDefinition is a one-stop shop for declarative bean definition purposes."}
{"index": 10140, "repo": "spring-beans-6.0.11", "code": "public interface HierarchicalBeanFactory extends BeanFactory {\n\t// Return whether the local bean factory contains a bean of the given name, ignoring beans defined in ancestor contexts.\n\tboolean containsLocalBean(String name);\n\t// Return the parent bean factory, or null if there is none.\n\tBeanFactory getParentBeanFactory();\n}", "des": "Sub-interface implemented by bean factories that can be part of a hierarchy."}
{"index": 10141, "repo": "spring-beans-6.0.11", "code": "public class ImportDefinition extends Object implements BeanMetadataElement {\n\tfinal org.springframework.core.io.Resource[] getActualResources();\n\t// Return the location of the imported resource.\n\tfinal String getImportedResource();\n\t// Return the configuration source Object for this metadata element (may be null).\n\tfinal Object getSource();\n}", "des": "Representation of an import that has been processed during the parsing process."}
{"index": 10142, "repo": "spring-beans-6.0.11", "code": "public class InvalidPropertyException extends FatalBeanException {\n\t// Return the offending bean class.\n\tClass<?> getBeanClass();\n\t// Return the name of the offending property.\n\tString getPropertyName();\n}", "des": "Exception thrown when referring to an invalid bean property."}
{"index": 10143, "repo": "spring-beans-6.0.11", "code": "public class Location extends Object {\n\t// Get the resource with which this location is associated.\n\torg.springframework.core.io.Resource getResource();\n\t// Get the actual location within the associated resource (may be null).\n\tObject getSource();\n}", "des": "Class that models an arbitrary location in a resource."}
{"index": 10144, "repo": "spring-beans-6.0.11", "code": "public class LookupOverride extends MethodOverride {\n\tboolean equals(Object other);\n\t// Return the name of the bean that should be returned by this method.\n\tString getBeanName();\n\t// Match the specified method by Method reference or method name.\n\tboolean matches(Method method);\n}", "des": "Represents an override of a method that looks up an object in the same IoC context, either by bean name or by bean type (based on the declared method return type)."}
{"index": 10145, "repo": "spring-beans-6.0.11", "code": "public interface Mergeable {\n\t// Is merging enabled for this particular instance?\n\tboolean isMergeEnabled();\n\t// Merge the current value set with that of the supplied object.\n\tObject merge(Object parent);\n}", "des": "Interface representing an object whose value set can be merged with that of a parent object."}
{"index": 10146, "repo": "spring-beans-6.0.11", "code": "public interface MergedBeanDefinitionPostProcessor extends BeanPostProcessor {\n\t// Post-process the given merged bean definition for the specified bean.\n\tvoid postProcessMergedBeanDefinition(RootBeanDefinition beanDefinition, Class<?> beanType, String beanName);\n\t// A notification that the bean definition for the specified name has been reset, and that this post-processor should clear any metadata for the affected bean.\n\tdefault void resetBeanDefinition(String beanName);\n}", "des": "Post-processor callback interface for merged bean definitions at runtime."}
{"index": 10147, "repo": "spring-beans-6.0.11", "code": "public class NamedBeanHolder<T> extends Object implements NamedBean {\n\t// Return the corresponding bean instance.\n\tT getBeanInstance();\n\t// Return the name of the bean.\n\tString getBeanName();\n}", "des": "A simple holder for a given bean name plus bean instance."}
{"index": 10148, "repo": "spring-beans-6.0.11", "code": "public class NoUniqueBeanDefinitionException extends NoSuchBeanDefinitionException {\n\t// Return the names of all beans found when only one matching bean was expected.\n\tCollection<String> getBeanNamesFound();\n\t// Return the number of beans found when only one matching bean was expected.\n\tint getNumberOfBeansFound();\n}", "des": "Exception thrown when a BeanFactory is asked for a bean instance for which multiple matching candidates have been found when only one matching bean was expected."}
{"index": 10149, "repo": "spring-beans-6.0.11", "code": "public final class ParameterResolutionDelegate extends Object {\n\t// Determine if the supplied Parameter can potentially be autowired from an AutowireCapableBeanFactory.\n\tstatic boolean isAutowirable(Parameter parameter, int parameterIndex);\n\t// Resolve the dependency for the supplied Parameter from the supplied AutowireCapableBeanFactory.\n\tstatic Object resolveDependency(Parameter parameter, int parameterIndex, Class<?> containingClass, AutowireCapableBeanFactory beanFactory);\n}", "des": "Public delegate for resolving autowirable parameters on externally managed constructors and methods."}
{"index": 10150, "repo": "spring-beans-6.0.11", "code": "public final class ParseState extends Object {\n\t// Return the ParseState.Entry currently at the top of the ArrayDeque or null if the ArrayDeque is empty.\n\tParseState.Entry peek();\n\t// Remove an ParseState.Entry from the ArrayDeque.\n\tvoid pop();\n\t// Add a new ParseState.Entry to the ArrayDeque.\n\tvoid push(ParseState.Entry entry);\n\t// Create a new instance of ParseState which is an independent snapshot of this instance.\n\tParseState snapshot();\n}", "des": "Simple ArrayDeque-based structure for tracking the logical position during a parsing process."}
{"index": 10151, "repo": "spring-beans-6.0.11", "code": "public interface ProblemReporter {\n\t// Called when an error is encountered during the parsing process.\n\tvoid error(Problem problem);\n\t// Called when a fatal error is encountered during the parsing process.\n\tvoid fatal(Problem problem);\n\t// Called when a warning is raised during the parsing process.\n\tvoid warning(Problem problem);\n}", "des": "SPI interface allowing tools and other external processes to handle errors and warnings reported during bean definition parsing."}
{"index": 10152, "repo": "spring-beans-6.0.11", "code": "public class PropertiesEditor extends PropertyEditorSupport {\n\t// Convert String into Properties, considering it as properties content.\n\tvoid setAsText(String text);\n\t// Take Properties as-is; convert Map into Properties.\n\tvoid setValue(Object value);\n}", "des": "Custom PropertyEditor for Properties objects."}
{"index": 10153, "repo": "spring-beans-6.0.11", "code": "public abstract class PropertyAccessException extends BeansException {\n\t// Return a corresponding error code for this type of exception.\n\tabstract String getErrorCode();\n\t// Return the PropertyChangeEvent that resulted in the problem.\n\tPropertyChangeEvent getPropertyChangeEvent();\n\t// Return the name of the affected property, if available.\n\tString getPropertyName();\n\t// Return the affected value that was about to be set, if any.\n\tObject getValue();\n}", "des": "Superclass for exceptions related to a property access, such as type mismatch or invocation target exception."}
{"index": 10154, "repo": "spring-beans-6.0.11", "code": "public final class PropertyAccessorFactory extends Object {\n\t// Obtain a BeanWrapper for the given target object, accessing properties in JavaBeans style.\n\tstatic BeanWrapper forBeanPropertyAccess(Object target);\n\t// Obtain a PropertyAccessor for the given target object, accessing properties in direct field style.\n\tstatic ConfigurablePropertyAccessor forDirectFieldAccess(Object target);\n}", "des": "Simple factory facade for obtaining PropertyAccessor instances, in particular for BeanWrapper instances."}
{"index": 10155, "repo": "spring-beans-6.0.11", "code": "public class PropertyComparator<T> extends Object implements Comparator<T> {\n\tint compare(T o1, T o2);\n\t// Return the SortDefinition that this comparator uses.\n\tfinal SortDefinition getSortDefinition();\n\t// Sort the given source according to the given sort definition.\n\tstatic void sort(Object[] source, SortDefinition sortDefinition);\n\t// Sort the given List according to the given sort definition.\n\tstatic void sort(List<?> source, SortDefinition sortDefinition);\n}", "des": "PropertyComparator performs a comparison of two beans, evaluating the specified bean property via a BeanWrapper."}
{"index": 10156, "repo": "spring-beans-6.0.11", "code": "public class ReplaceOverride extends MethodOverride {\n\t// Add a fragment of a class string, like \"Exception\" or \"java.lang.Exc\", to identify a parameter type.\n\tvoid addTypeIdentifier(String identifier);\n\tboolean equals(Object other);\n\t// Return the name of the bean implementing MethodReplacer.\n\tString getMethodReplacerBeanName();\n\t// Subclasses must override this to indicate whether they match the given method.\n\tboolean matches(Method method);\n}", "des": "Extension of MethodOverride that represents an arbitrary override of a method by the IoC container."}
{"index": 10157, "repo": "spring-beans-6.0.11", "code": "public class RuntimeBeanNameReference extends Object implements BeanReference {\n\tboolean equals(Object other);\n\t// Return the target bean name that this reference points to (never null).\n\tString getBeanName();\n\t// Return the configuration source Object for this metadata element (may be null).\n\tObject getSource();\n\t// Set the configuration source Object for this metadata element.\n\tvoid setSource(Object source);\n}", "des": "Immutable placeholder class used for a property value object when it's a reference to another bean name in the factory, to be resolved at runtime."}
{"index": 10158, "repo": "spring-beans-6.0.11", "code": "public class ServiceFactoryBean extends AbstractServiceLoaderBasedFactoryBean implements BeanClassLoaderAware {\n\t// Determine the actual object to expose for the given ServiceLoader.\n\tprotected Object getObjectToExpose(ServiceLoader<?> serviceLoader);\n\t// This abstract method declaration mirrors the method in the FactoryBean interface, for a consistent offering of abstract template methods.\n\tClass<?> getObjectType();\n}", "des": "FactoryBean that exposes the 'primary' service for the configured service class, obtained through the JDK 1.6 ServiceLoader facility."}
{"index": 10159, "repo": "spring-beans-6.0.11", "code": "public class ServiceListFactoryBean extends AbstractServiceLoaderBasedFactoryBean implements BeanClassLoaderAware {\n\t// Determine the actual object to expose for the given ServiceLoader.\n\tprotected Object getObjectToExpose(ServiceLoader<?> serviceLoader);\n\t// This abstract method declaration mirrors the method in the FactoryBean interface, for a consistent offering of abstract template methods.\n\tClass<?> getObjectType();\n}", "des": "FactoryBean that exposes all services for the configured service class, represented as a List of service objects, obtained through the JDK 1.6 ServiceLoader facility."}
{"index": 10160, "repo": "spring-beans-6.0.11", "code": "public class ServiceLoaderFactoryBean extends AbstractServiceLoaderBasedFactoryBean implements BeanClassLoaderAware {\n\t// Determine the actual object to expose for the given ServiceLoader.\n\tprotected Object getObjectToExpose(ServiceLoader<?> serviceLoader);\n\t// This abstract method declaration mirrors the method in the FactoryBean interface, for a consistent offering of abstract template methods.\n\tClass<?> getObjectType();\n}", "des": "FactoryBean that exposes the JDK 1.6 ServiceLoader for the configured service class."}
{"index": 10161, "repo": "spring-beans-6.0.11", "code": "public interface SmartFactoryBean<T> extends FactoryBean<T> {\n\t// Does this FactoryBean expect eager initialization, that is, eagerly initialize itself as well as expect eager initialization of its singleton object (if any)?\n\tdefault boolean isEagerInit();\n\t// Is the object managed by this factory a prototype? That is, will FactoryBean.getObject() always return an independent instance?\n\tdefault boolean isPrototype();\n}", "des": "Extension of the FactoryBean interface."}
{"index": 10162, "repo": "spring-beans-6.0.11", "code": "public interface SortDefinition {\n\t// Return the name of the bean property to compare.\n\tString getProperty();\n\t// Return whether to sort ascending (true) or descending (false).\n\tboolean isAscending();\n\t// Return whether upper and lower case in String values should be ignored.\n\tboolean isIgnoreCase();\n}", "des": "Definition for sorting bean instances by a property."}
{"index": 10163, "repo": "spring-beans-6.0.11", "code": "public static enum YamlProcessor.ResolutionMethod extends Enum<YamlProcessor.ResolutionMethod> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic YamlProcessor.ResolutionMethod valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic YamlProcessor.ResolutionMethod[] values();\n}", "des": "Method to use for resolving resources."}
{"index": 10164, "repo": "spring-jms-6.0.11", "code": "public interface CachingDestinationResolver extends DestinationResolver {\n\t// Clear the entire destination cache.\n\tvoid clearCache();\n\t// Remove the destination with the given name from the cache (if cached by this resolver in the first place).\n\tvoid removeFromCache(String destinationName);\n}", "des": "Extension of the DestinationResolver interface, exposing methods for clearing the cache."}
{"index": 10165, "repo": "spring-jms-6.0.11", "code": "public class ChainedExceptionListener extends Object implements ExceptionListener {\n\t// Add an ExceptionListener to the chained delegate list.\n\tfinal void addDelegate(ExceptionListener listener);\n\t// Return all registered ExceptionListener delegates (as array).\n\tfinal ExceptionListener[] getDelegates();\n\tvoid onException(JMSException ex);\n}", "des": "Implementation of the JMS ExceptionListener interface that supports chaining, allowing the addition of multiple ExceptionListener instances in order."}
{"index": 10166, "repo": "spring-jms-6.0.11", "code": "public class DynamicDestinationResolver extends Object implements DestinationResolver {\n\t// Resolve the specified destination name as a dynamic destination.\n\tDestination resolveDestinationName(Session session, String destinationName, boolean pubSubDomain);\n\t// Resolve the given destination name to a Queue.\n\tprotected Queue resolveQueue(Session session, String queueName);\n\t// Resolve the given destination name to a Topic.\n\tprotected Topic resolveTopic(Session session, String topicName);\n}", "des": "Simple DestinationResolver implementation resolving destination names as dynamic destinations."}
{"index": 10167, "repo": "spring-jms-6.0.11", "code": "public abstract class JmsException extends org.springframework.core.NestedRuntimeException {\n\t// Convenience method to get the vendor specific error code if the root cause was an instance of JMSException.\n\tString getErrorCode();\n\t// Return the detail message, including the message from the linked exception if there is one.\n\tString getMessage();\n}", "des": "Base class for exception thrown by the framework whenever it encounters a problem related to JMS."}
{"index": 10168, "repo": "spring-jms-6.0.11", "code": "public interface JmsListenerEndpoint {\n\t// Return the id of this endpoint.\n\tString getId();\n\t// Set up the specified message listener container with the model defined by this endpoint.\n\tvoid setupListenerContainer(MessageListenerContainer listenerContainer);\n}", "des": "Model for a JMS listener endpoint."}
{"index": 10169, "repo": "spring-jms-6.0.11", "code": "public interface MessageConverter {\n\t// Convert from a JMS Message to a Java object.\n\tObject fromMessage(Message message);\n\t// Convert a Java object to a JMS Message using the supplied session to create the message object.\n\tMessage toMessage(Object object, Session session);\n}", "des": "Strategy interface that specifies a converter between Java objects and JMS messages."}
{"index": 10170, "repo": "spring-jms-6.0.11", "code": "public enum MessageType extends Enum<MessageType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic MessageType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic MessageType[] values();\n}", "des": "Constants that indicate a target message type to convert to: a TextMessage, a BytesMessage, a MapMessage or an ObjectMessage."}
{"index": 10171, "repo": "spring-jms-6.0.11", "code": "public class SimpleJmsHeaderMapper extends org.springframework.messaging.support.AbstractHeaderMapper<Message> implements JmsHeaderMapper {\n\t// Add the outbound prefix if necessary.\n\tprotected String fromHeaderName(String headerName);\n\tvoid fromHeaders(org.springframework.messaging.MessageHeaders headers, Message jmsMessage);\n\t// Add the inbound prefix if necessary.\n\tprotected String toHeaderName(String propertyName);\n\torg.springframework.messaging.MessageHeaders toHeaders(Message jmsMessage);\n}", "des": "Simple implementation of JmsHeaderMapper."}
{"index": 10172, "repo": "spring-security-ldap-6.1.2", "code": "public class BindAuthenticator extends AbstractLdapAuthenticator {\n\t// Authenticates as a user and obtains additional user information from the directory.\n\torg.springframework.ldap.core.DirContextOperations authenticate(org.springframework.security.core.Authentication authentication);\n\t// Allows subclasses to inspect the exception thrown by an attempt to bind with a particular DN.\n\tprotected void handleBindException(String userDn, String username, Throwable cause);\n}", "des": "An authenticator which binds as a user."}
{"index": 10173, "repo": "spring-security-ldap-6.1.2", "code": "public interface EmbeddedLdapServerContainer {\n\t// Returns the embedded LDAP server port.\n\tint getPort();\n\t// The embedded LDAP server port to connect to.\n\tvoid setPort(int port);\n}", "des": "Provides lifecycle services for an embedded LDAP server."}
{"index": 10174, "repo": "spring-security-ldap-6.1.2", "code": "public class NestedLdapAuthoritiesPopulator extends DefaultLdapAuthoritiesPopulator {\n\tSet<org.springframework.security.core.GrantedAuthority> getGroupMembershipRoles(String userDn, String username);\n\t// Sets the attribute names to retrieve for each ldap groups.\n\tvoid setAttributeNames(Set<String> attributeNames);\n\t// How far should a nested search go.\n\tvoid setMaxSearchDepth(int maxSearchDepth);\n}", "des": "A LDAP authority populator that can recursively search static nested groups."}
{"index": 10175, "repo": "spring-security-ldap-6.1.2", "code": "public class PasswordPolicyControl extends Object implements Control {\n\t// Retrieves the ASN.1 BER encoded value of the LDAP control.\n\tbyte[] getEncodedValue();\n\t// Returns the OID of the Password Policy Control (\"1.3.6.1.4.1.42.2.27.8.5.1\").\n\tString getID();\n\t// Returns whether the control is critical for the client.\n\tboolean isCritical();\n}", "des": "A Password Policy request control."}
{"index": 10176, "repo": "spring-security-ldap-6.1.2", "code": "public enum PasswordPolicyErrorStatus extends Enum<PasswordPolicyErrorStatus> {\n\tString getDefaultMessage();\n\tString getErrorCode();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PasswordPolicyErrorStatus valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PasswordPolicyErrorStatus[] values();\n}", "des": "Defines status codes for use with PasswordPolicyException, with error codes (for message source lookup) and default messages."}
{"index": 10177, "repo": "spring-security-ldap-6.1.2", "code": "public class SpringSecurityAuthenticationSource extends Object implements org.springframework.ldap.core.AuthenticationSource {\n\tString getCredentials();\n\t// Get the principals of the logged in user, in this case the distinguished name.\n\tString getPrincipal();\n\t// Sets the SecurityContextHolderStrategy to use.\n\tvoid setSecurityContextHolderStrategy(org.springframework.security.core.context.SecurityContextHolderStrategy securityContextHolderStrategy);\n}", "des": "An AuthenticationSource to retrieve authentication information stored in Spring Security's SecurityContextHolder."}
{"index": 10178, "repo": "spring-expression-6.0.11", "code": "public class BooleanLiteral extends Literal {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tBooleanTypedValue getLiteralValue();\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Represents the literal values TRUE and FALSE."}
{"index": 10179, "repo": "spring-expression-6.0.11", "code": "public class ConstructorReference extends SpelNodeImpl {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\t// Implements getValue() - delegating to the code for building an array or a simple type.\n\tTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n\t// Return the string form of this AST node.\n\tString toStringAST();\n}", "des": "Represents the invocation of a constructor."}
{"index": 10180, "repo": "spring-expression-6.0.11", "code": "public class Elvis extends SpelNodeImpl {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\t// Evaluate the condition and if not null, return it.\n\tTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n\t// Return the string form of this AST node.\n\tString toStringAST();\n}", "des": "Represents the elvis operator ?:."}
{"index": 10181, "repo": "spring-expression-6.0.11", "code": "public interface ExpressionParser {\n\t// Parse the expression string and return an Expression object you can use for repeated evaluation.\n\tExpression parseExpression(String expressionString);\n\t// Parse the expression string and return an Expression object you can use for repeated evaluation.\n\tExpression parseExpression(String expressionString, ParserContext context);\n}", "des": "Parses expression strings into compiled expressions that can be evaluated."}
{"index": 10182, "repo": "spring-expression-6.0.11", "code": "public class FloatLiteral extends Literal {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tTypedValue getLiteralValue();\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Expression language AST node that represents a float literal."}
{"index": 10183, "repo": "spring-expression-6.0.11", "code": "public class FunctionReference extends SpelNodeImpl {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n\t// Return the string form of this AST node.\n\tString toStringAST();\n}", "des": "A function reference is of the form \"#someFunction(a,b,c)\"."}
{"index": 10184, "repo": "spring-expression-6.0.11", "code": "public class InlineMap extends SpelNodeImpl {\n\tMap<Object,Object> getConstantValue();\n\tTypedValue getValueInternal(ExpressionState expressionState);\n\t// Return whether this list is a constant value.\n\tboolean isConstant();\n\t// Return the string form of this AST node.\n\tString toStringAST();\n}", "des": "Represent a map in an expression, e.g."}
{"index": 10185, "repo": "spring-expression-6.0.11", "code": "public class IntLiteral extends Literal {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tTypedValue getLiteralValue();\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Expression language AST node that represents an integer literal."}
{"index": 10186, "repo": "spring-expression-6.0.11", "code": "public class LongLiteral extends Literal {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tTypedValue getLiteralValue();\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Expression language AST node that represents a long integer literal."}
{"index": 10187, "repo": "spring-expression-6.0.11", "code": "public class NullLiteral extends Literal {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tTypedValue getLiteralValue();\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Expression language AST node that represents null."}
{"index": 10188, "repo": "spring-expression-6.0.11", "code": "public class OpAnd extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Represents the boolean AND operation."}
{"index": 10189, "repo": "spring-expression-6.0.11", "code": "public class OpDivide extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Implements division operator."}
{"index": 10190, "repo": "spring-expression-6.0.11", "code": "public class OpEQ extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tBooleanTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Implements the equality operator."}
{"index": 10191, "repo": "spring-expression-6.0.11", "code": "public enum Operation extends Enum<Operation> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Operation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Operation[] values();\n}", "des": "Supported operations that an OperatorOverloader can implement for any pair of operands."}
{"index": 10192, "repo": "spring-expression-6.0.11", "code": "public class OperatorInstanceof extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\t// Compare the left operand to see it is an instance of the type specified as the right operand.\n\tBooleanTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "The operator 'instanceof' checks if an object is of the class specified in the right-hand operand, in the same way that instanceof does in Java."}
{"index": 10193, "repo": "spring-expression-6.0.11", "code": "public class OperatorNot extends SpelNodeImpl {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tBooleanTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n\t// Return the string form of this AST node.\n\tString toStringAST();\n}", "des": "Represents a NOT operation."}
{"index": 10194, "repo": "spring-expression-6.0.11", "code": "public interface OperatorOverloader {\n\t// Execute the specified operation on two operands, returning a result.\n\tObject operate(Operation operation, Object leftOperand, Object rightOperand);\n\t// Return true if the operator overloader supports the specified operation between the two operands and so should be invoked to handle it.\n\tboolean overridesOperation(Operation operation, Object leftOperand, Object rightOperand);\n}", "des": "By default the mathematical operators Operation support simple types like numbers."}
{"index": 10195, "repo": "spring-expression-6.0.11", "code": "public class OpGE extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tBooleanTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Implements greater-than-or-equal operator."}
{"index": 10196, "repo": "spring-expression-6.0.11", "code": "public class OpGT extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tBooleanTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Implements the greater-than operator."}
{"index": 10197, "repo": "spring-expression-6.0.11", "code": "public class OpLE extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tBooleanTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Implements the less-than-or-equal operator."}
{"index": 10198, "repo": "spring-expression-6.0.11", "code": "public class OpLT extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tBooleanTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Implements the less-than operator."}
{"index": 10199, "repo": "spring-expression-6.0.11", "code": "public class OpMinus extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tSpelNodeImpl getRightOperand();\n\tTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n\t// String format for all operators is the same '(' [operand] [operator] [operand] ')'.\n\tString toStringAST();\n}", "des": "The minus operator supports: subtraction of numbers subtraction of an int from a string of one character (effectively decreasing that character), so 'd'-3='a'"}
{"index": 10200, "repo": "spring-expression-6.0.11", "code": "public class OpModulus extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Implements the modulus operator."}
{"index": 10201, "repo": "spring-expression-6.0.11", "code": "public class OpMultiply extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\t// Implements the multiply operator directly here for certain types of supported operands and otherwise delegates to any registered overloader for types not supported here.\n\tTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Implements the multiply operator."}
{"index": 10202, "repo": "spring-expression-6.0.11", "code": "public class OpNE extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tBooleanTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Implements the not-equal operator."}
{"index": 10203, "repo": "spring-expression-6.0.11", "code": "public class OpOr extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tBooleanTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Represents the boolean OR operation."}
{"index": 10204, "repo": "spring-expression-6.0.11", "code": "public class OpPlus extends Operator {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tSpelNodeImpl getRightOperand();\n\tTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n\t// String format for all operators is the same '(' [operand] [operator] [operand] ')'.\n\tString toStringAST();\n}", "des": "The plus operator will: add numbers concatenate strings"}
{"index": 10205, "repo": "spring-expression-6.0.11", "code": "public interface ParserContext {\n\t// For template expressions, returns the prefix that identifies the start of an expression block within a string.\n\tString getExpressionPrefix();\n\t// For template expressions, return the prefix that identifies the end of an expression block within a string.\n\tString getExpressionSuffix();\n\t// Whether the expression being parsed is a template.\n\tboolean isTemplate();\n}", "des": "Input provided to an expression parser that can influence an expression parsing/compilation routine."}
{"index": 10206, "repo": "spring-expression-6.0.11", "code": "public class RealLiteral extends Literal {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tTypedValue getLiteralValue();\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Expression language AST node that represents a real literal."}
{"index": 10207, "repo": "spring-expression-6.0.11", "code": "public enum SpelCompilerMode extends Enum<SpelCompilerMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SpelCompilerMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SpelCompilerMode[] values();\n}", "des": "Captures the possible configuration settings for a compiler that can be used when evaluating expressions."}
{"index": 10208, "repo": "spring-expression-6.0.11", "code": "public class SpelEvaluationException extends EvaluationException {\n\t// Return the message inserts.\n\tObject[] getInserts();\n\t// Return the message code.\n\tSpelMessage getMessageCode();\n\t// Set the position in the related expression which gave rise to this exception.\n\tvoid setPosition(int position);\n}", "des": "Root exception for Spring EL related exceptions."}
{"index": 10209, "repo": "spring-expression-6.0.11", "code": "public enum SpelMessage extends Enum<SpelMessage> {\n\t// Produce a complete message including the prefix and with the inserts applied to the message.\n\tString formatMessage(Object... inserts);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SpelMessage valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SpelMessage[] values();\n}", "des": "Contains all the messages that can be produced by the Spring Expression Language."}
{"index": 10210, "repo": "spring-expression-6.0.11", "code": "public static enum SpelMessage.Kind extends Enum<SpelMessage.Kind> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SpelMessage.Kind valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SpelMessage.Kind[] values();\n}", "des": "Message kinds."}
{"index": 10211, "repo": "spring-expression-6.0.11", "code": "public class SpelParseException extends ParseException {\n\t// Return the message inserts.\n\tObject[] getInserts();\n\t// Return the message code.\n\tSpelMessage getMessageCode();\n}", "des": "Root exception for Spring EL related exceptions."}
{"index": 10212, "repo": "spring-expression-6.0.11", "code": "public class StandardOperatorOverloader extends Object implements OperatorOverloader {\n\t// Execute the specified operation on two operands, returning a result.\n\tObject operate(Operation operation, Object leftOperand, Object rightOperand);\n\t// Return true if the operator overloader supports the specified operation between the two operands and so should be invoked to handle it.\n\tboolean overridesOperation(Operation operation, Object leftOperand, Object rightOperand);\n}", "des": "Standard implementation of OperatorOverloader."}
{"index": 10213, "repo": "spring-expression-6.0.11", "code": "public class StandardTypeComparator extends Object implements TypeComparator {\n\t// Return true if the comparator can compare these two objects.\n\tboolean canCompare(Object left, Object right);\n\t// Compare two given objects.\n\tint compare(Object left, Object right);\n}", "des": "A basic TypeComparator implementation: supports comparison of Number types as well as types implementing Comparable."}
{"index": 10214, "repo": "spring-expression-6.0.11", "code": "public class StringLiteral extends Literal {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tTypedValue getLiteralValue();\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n}", "des": "Expression language AST node that represents a string literal."}
{"index": 10215, "repo": "spring-expression-6.0.11", "code": "public class TemplateParserContext extends Object implements ParserContext {\n\t// For template expressions, returns the prefix that identifies the start of an expression block within a string.\n\tfinal String getExpressionPrefix();\n\t// For template expressions, return the prefix that identifies the end of an expression block within a string.\n\tfinal String getExpressionSuffix();\n\t// Whether the expression being parsed is a template.\n\tfinal boolean isTemplate();\n}", "des": "Configurable ParserContext implementation for template parsing."}
{"index": 10216, "repo": "spring-expression-6.0.11", "code": "public class Ternary extends SpelNodeImpl {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\t// Evaluate the condition and if true evaluate the first alternative, otherwise evaluate the second alternative.\n\tTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n\t// Return the string form of this AST node.\n\tString toStringAST();\n}", "des": "Represents a ternary expression, for example: \"someCheck()?true:false\"."}
{"index": 10217, "repo": "spring-expression-6.0.11", "code": "public enum TypeCode extends Enum<TypeCode> {\n\tstatic TypeCode forClass(Class<?> clazz);\n\tstatic TypeCode forName(String name);\n\tClass<?> getType();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TypeCode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TypeCode[] values();\n}", "des": "Captures primitive types and their corresponding class objects, plus one special TypeCode.OBJECT entry that represents all reference (non-primitive) types."}
{"index": 10218, "repo": "spring-expression-6.0.11", "code": "public interface TypeComparator {\n\t// Return true if the comparator can compare these two objects.\n\tboolean canCompare(Object firstObject, Object secondObject);\n\t// Compare two given objects.\n\tint compare(Object firstObject, Object secondObject);\n}", "des": "Instances of a type comparator should be able to compare pairs of objects for equality."}
{"index": 10219, "repo": "spring-expression-6.0.11", "code": "public class TypeReference extends SpelNodeImpl {\n\t// Generate the bytecode for this node into the supplied visitor.\n\tvoid generateCode(org.springframework.asm.MethodVisitor mv, CodeFlow cf);\n\tTypedValue getValueInternal(ExpressionState state);\n\t// Check whether a node can be compiled to bytecode.\n\tboolean isCompilable();\n\t// Return the string form of this AST node.\n\tString toStringAST();\n}", "des": "Represents a reference to a type, for example \"T(String)\" or \"T(com.example.Foo)\"."}
{"index": 10220, "repo": "spring-expression-6.0.11", "code": "public interface ValueRef {\n\t// Returns the value this ValueRef points to, it should not require expression component re-evaluation.\n\tTypedValue getValue();\n\t// Indicates whether calling setValue(Object) is supported.\n\tboolean isWritable();\n\t// Sets the value this ValueRef points to, it should not require expression component re-evaluation.\n\tvoid setValue(Object newValue);\n}", "des": "Represents a reference to a value."}
{"index": 10221, "repo": "spring-expression-6.0.11", "code": "public static class ValueRef.NullValueRef extends Object implements ValueRef {\n\t// Returns the value this ValueRef points to, it should not require expression component re-evaluation.\n\tTypedValue getValue();\n\t// Indicates whether calling setValue(Object) is supported.\n\tboolean isWritable();\n\t// Sets the value this ValueRef points to, it should not require expression component re-evaluation.\n\tvoid setValue(Object newValue);\n}", "des": "A ValueRef for the null value."}
{"index": 10222, "repo": "spring-expression-6.0.11", "code": "public static class ValueRef.TypedValueHolderValueRef extends Object implements ValueRef {\n\t// Returns the value this ValueRef points to, it should not require expression component re-evaluation.\n\tTypedValue getValue();\n\t// Indicates whether calling setValue(Object) is supported.\n\tboolean isWritable();\n\t// Sets the value this ValueRef points to, it should not require expression component re-evaluation.\n\tvoid setValue(Object newValue);\n}", "des": "A ValueRef holder for a single value, which cannot be set."}
{"index": 10223, "repo": "maven-artifact-4.0.0-alpha-7", "code": "public interface ArtifactHandler {\n\t// Get the classifier associated to the dependency type.\n\tString getClassifier();\n\tString getDirectory();\n\t// Get the file extension associated to the file represented by the dependency type.\n\tString getExtension();\n\tString getLanguage();\n\tString getPackaging();\n\tboolean isAddedToClasspath();\n\tboolean isIncludesDependencies();\n}", "des": "An artifact handler defines for a dependency type, defined as Plexus role: extension and classifier, to be able to download the file, information on how to use the artifact: whether to add it to the classpath, or to take into account its dependencies."}
{"index": 10224, "repo": "maven-artifact-4.0.0-alpha-7", "code": "public class MultipleArtifactsNotFoundException extends ArtifactResolutionException {\n\t// artifacts that could NOT be resolved\n\tList<Artifact> getMissingArtifacts();\n\t// artifacts that could be resolved\n\tList<Artifact> getResolvedArtifacts();\n}", "des": "Exception caused when one or more artifacts can not be resolved because they are not found in the local or remote repositories."}
{"index": 10225, "repo": "spring-amqp-3.0.6", "code": "public abstract class AbstractDecompressingPostProcessor extends Object implements MessagePostProcessor, org.springframework.core.Ordered {\n\t// Get the stream.\n\tprotected abstract InputStream getDecompressorStream(InputStream stream);\n\t// Get the encoding.\n\tprotected abstract String getEncoding();\n\tint getOrder();\n\t// Change (or replace) the message.\n\tMessage postProcessMessage(Message message);\n\t// Set the order.\n\tprotected void setOrder(int order);\n}", "des": "Base class for post processors that decompress the message body if the MessageProperties.SPRING_AUTO_DECOMPRESS header is true or to optionally always decompress if the content encoding matches AbstractDecompressingPostProcessor.getEncoding(), or starts with AbstractDecompressingPostProcessor.getEncoding() + \":\", in which case the encoding following the colon becomes the final content encoding of the decompressed message."}
{"index": 10226, "repo": "spring-amqp-3.0.6", "code": "public abstract class AbstractDeflaterPostProcessor extends AbstractCompressingPostProcessor {\n\t// Get the deflater compression level.\n\tint getLevel();\n\t// Set the deflater compression level.\n\tvoid setLevel(int level);\n}", "des": "Base class for post processors based on Deflater."}
{"index": 10227, "repo": "spring-amqp-3.0.6", "code": "public abstract class AllowedListDeserializingMessageConverter extends AbstractMessageConverter {\n\t// Add package/class patterns to the allowed list.\n\tvoid addAllowedListPatterns(String... patterns);\n\tprotected void checkAllowedList(Class<?> clazz);\n\t// Set simple patterns for allowable packages/classes for deserialization.\n\tvoid setAllowedListPatterns(List<String> patterns);\n}", "des": "MessageConverters that potentially use Java deserialization."}
{"index": 10228, "repo": "spring-amqp-3.0.6", "code": "public interface BatchMessageListener extends MessageListener {\n\t// Delivers a single message.\n\tdefault void onMessage(Message message);\n\t// Delivers a batch of messages.\n\tvoid onMessageBatch(List<Message> messages);\n}", "des": "Used to receive a batch of messages if the container supports it."}
{"index": 10229, "repo": "spring-amqp-3.0.6", "code": "public static enum Binding.DestinationType extends Enum<Binding.DestinationType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Binding.DestinationType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Binding.DestinationType[] values();\n}", "des": "The binding destination."}
{"index": 10230, "repo": "spring-amqp-3.0.6", "code": "public class DeflaterPostProcessor extends AbstractDeflaterPostProcessor {\n\t// Get the stream.\n\tprotected OutputStream getCompressorStream(OutputStream zipped);\n\t// Get the encoding.\n\tprotected String getEncoding();\n}", "des": "A post processor that uses a DeflaterOutputStream to compress the message body."}
{"index": 10231, "repo": "spring-amqp-3.0.6", "code": "public class GUnzipPostProcessor extends AbstractDecompressingPostProcessor {\n\t// Get the stream.\n\tprotected InputStream getDecompressorStream(InputStream zipped);\n\t// Get the encoding.\n\tprotected String getEncoding();\n}", "des": "A post processor that uses a GZIPInputStream to decompress the message body."}
{"index": 10232, "repo": "spring-amqp-3.0.6", "code": "public class GZipPostProcessor extends AbstractDeflaterPostProcessor {\n\t// Get the stream.\n\tprotected OutputStream getCompressorStream(OutputStream zipped);\n\t// Get the encoding.\n\tprotected String getEncoding();\n}", "des": "A post processor that uses a GZIPOutputStream to compress the message body."}
{"index": 10233, "repo": "spring-amqp-3.0.6", "code": "public class InflaterPostProcessor extends AbstractDecompressingPostProcessor {\n\t// Get the stream.\n\tprotected InputStream getDecompressorStream(InputStream zipped);\n\t// Get the encoding.\n\tprotected String getEncoding();\n}", "des": "A post processor that uses a InflaterInputStream to decompress the message body."}
{"index": 10234, "repo": "spring-amqp-3.0.6", "code": "public static enum Jackson2JavaTypeMapper.TypePrecedence extends Enum<Jackson2JavaTypeMapper.TypePrecedence> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Jackson2JavaTypeMapper.TypePrecedence valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Jackson2JavaTypeMapper.TypePrecedence[] values();\n}", "des": "The precedence for type conversion - inferred from the method parameter or message headers."}
{"index": 10235, "repo": "spring-amqp-3.0.6", "code": "public class Message extends Object implements Serializable {\n\tboolean equals(Object obj);\n\tbyte[] getBody();\n\tMessageProperties getMessageProperties();\n\t// Set the encoding to use in toString() when converting the body if there is no contentEncoding message property present.\n\tstatic void setDefaultEncoding(String encoding);\n\t// Set the maximum length of a test message body to render as a String in toString().\n\tstatic void setMaxBodyLength(int length);\n}", "des": "The 0-8 and 0-9-1 AMQP specifications do not define an Message class or interface."}
{"index": 10236, "repo": "spring-amqp-3.0.6", "code": "public interface MessageConverter {\n\t// Convert from a Message to a Java object.\n\tObject fromMessage(Message message);\n\t// Convert a Java object to a Message.\n\tMessage toMessage(Object object, MessageProperties messageProperties);\n\t// Convert a Java object to a Message.\n\tdefault Message toMessage(Object object, MessageProperties messageProperties, Type genericType);\n}", "des": "Message converter interface."}
{"index": 10237, "repo": "spring-amqp-3.0.6", "code": "public enum MessageDeliveryMode extends Enum<MessageDeliveryMode> {\n\tstatic MessageDeliveryMode fromInt(int modeAsNumber);\n\tstatic int toInt(MessageDeliveryMode mode);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic MessageDeliveryMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic MessageDeliveryMode[] values();\n}", "des": "Enumeration for the message delivery mode."}
{"index": 10238, "repo": "spring-amqp-3.0.6", "code": "@FunctionalInterface public interface MessageListener {\n\t// Called by the container to inform the listener of its acknowledgement mode.\n\tdefault void containerAckMode(AcknowledgeMode mode);\n\t// Return true if this listener is request/reply and the replies are async.\n\tdefault boolean isAsyncReplies();\n\t// Delivers a single message.\n\tvoid onMessage(Message message);\n\t// Delivers a batch of messages.\n\tdefault void onMessageBatch(List<Message> messages);\n}", "des": "Listener interface to receive asynchronous delivery of Amqp Messages."}
{"index": 10239, "repo": "spring-amqp-3.0.6", "code": "@FunctionalInterface public interface MessagePostProcessor {\n\t// Change (or replace) the message.\n\tMessage postProcessMessage(Message message);\n\t// Change (or replace) the message and/or change its correlation data.\n\tdefault Message postProcessMessage(Message message, Correlation correlation);\n\t// Change (or replace) the message and/or change its correlation data.\n\tdefault Message postProcessMessage(Message message, Correlation correlation, String exchange, String routingKey);\n}", "des": "Used in several places in the framework, such as AmqpTemplate#convertAndSend(Object, MessagePostProcessor) where it can be used to add/modify headers or properties after the message conversion has been performed."}
{"index": 10240, "repo": "spring-amqp-3.0.6", "code": "public static enum QueueBuilder.LeaderLocator extends Enum<QueueBuilder.LeaderLocator> {\n\t// Return the value.\n\tString getValue();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic QueueBuilder.LeaderLocator valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic QueueBuilder.LeaderLocator[] values();\n}", "des": "Locate the queue leader."}
{"index": 10241, "repo": "spring-amqp-3.0.6", "code": "public static enum QueueBuilder.Overflow extends Enum<QueueBuilder.Overflow> {\n\t// Return the value.\n\tString getValue();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic QueueBuilder.Overflow valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic QueueBuilder.Overflow[] values();\n}", "des": "Overflow argument values."}
{"index": 10242, "repo": "spring-amqp-3.0.6", "code": "public class RemoteInvocationAwareMessageConverterAdapter extends Object implements MessageConverter {\n\t// Convert from a Message to a Java object.\n\tObject fromMessage(Message message);\n\t// Convert a Java object to a Message.\n\tMessage toMessage(Object object, MessageProperties messageProperties);\n}", "des": "A delegating adapter that unwraps RemoteInvocationResult after invoking the delegate to convert from a message."}
{"index": 10243, "repo": "spring-amqp-3.0.6", "code": "public class ReturnedMessage extends Object {\n\t// Get the exchange.\n\tString getExchange();\n\t// Get the message.\n\tMessage getMessage();\n\t// Get the reply code.\n\tint getReplyCode();\n\t// Get the reply text.\n\tString getReplyText();\n\t// Get the routing key.\n\tString getRoutingKey();\n}", "des": "Returned message and its metadata."}
{"index": 10244, "repo": "spring-amqp-3.0.6", "code": "public final class SendRetryContextAccessor extends Object {\n\t// Retrieve the Address from the context.\n\tstatic Address getAddress(org.springframework.retry.RetryContext context);\n\t// Retrieve the Message from the context.\n\tstatic Message getMessage(org.springframework.retry.RetryContext context);\n}", "des": "Type safe accessor for retried message sending."}
{"index": 10245, "repo": "spring-amqp-3.0.6", "code": "public class UnzipPostProcessor extends AbstractDecompressingPostProcessor {\n\t// Get the stream.\n\tprotected InputStream getDecompressorStream(InputStream zipped);\n\t// Get the encoding.\n\tprotected String getEncoding();\n}", "des": "A post processor that uses a ZipInputStream to decompress the message body."}
{"index": 10246, "repo": "spring-amqp-3.0.6", "code": "public class ZipPostProcessor extends AbstractDeflaterPostProcessor {\n\t// Get the stream.\n\tprotected OutputStream getCompressorStream(OutputStream zipped);\n\t// Get the encoding.\n\tprotected String getEncoding();\n}", "des": "A post processor that uses a ZipOutputStream to compress the message body."}
{"index": 10247, "repo": "spring-security-oauth2-core-6.1.2", "code": "public abstract class AbstractOAuth2Token extends Object implements OAuth2Token, Serializable {\n\tboolean equals(Object obj);\n\t// Returns the expiration time on or after which the token MUST NOT be accepted.\n\tInstant getExpiresAt();\n\t// Returns the time at which the token was issued.\n\tInstant getIssuedAt();\n\t// Returns the token value.\n\tString getTokenValue();\n}", "des": "Base class for OAuth 2.0 Token implementations."}
{"index": 10248, "repo": "spring-security-oauth2-core-6.1.2", "code": "public interface AddressStandardClaim {\n\t// Returns the country.\n\tString getCountry();\n\t// Returns the full mailing address, formatted for display.\n\tString getFormatted();\n\t// Returns the city or locality.\n\tString getLocality();\n\t// Returns the zip code or postal code.\n\tString getPostalCode();\n\t// Returns the state, province, prefecture, or region.\n\tString getRegion();\n\t// Returns the full street address, which may include house number, street name, P.O.\n\tString getStreetAddress();\n}", "des": "The Address Claim represents a physical mailing address defined by the OpenID Connect Core 1.0 specification that can be returned either in the UserInfo Response or the ID Token."}
{"index": 10249, "repo": "spring-security-oauth2-core-6.1.2", "code": "public final class ClaimConversionService extends org.springframework.core.convert.support.GenericConversionService {\n\t// Adds the converters that provide type conversion for claim values to the provided ConverterRegistry.\n\tstatic void addConverters(org.springframework.core.convert.converter.ConverterRegistry converterRegistry);\n\t// Returns a shared instance of ClaimConversionService.\n\tstatic ClaimConversionService getSharedInstance();\n}", "des": "A ConversionService configured with converters that provide type conversion for claim values."}
{"index": 10250, "repo": "spring-security-oauth2-core-6.1.2", "code": "public final class DefaultOAuth2AuthenticatedPrincipal extends Object implements OAuth2AuthenticatedPrincipal, Serializable {\n\t// Gets the attributes of the OAuth 2.0 token in map form.\n\tMap<String,Object> getAttributes();\n\t// Get the Collection of GrantedAuthoritys associated with this OAuth 2.0 token\n\tCollection<? extends org.springframework.security.core.GrantedAuthority> getAuthorities();\n\tString getName();\n}", "des": "A domain object that wraps the attributes of an OAuth 2.0 token."}
{"index": 10251, "repo": "spring-security-oauth2-core-6.1.2", "code": "public class DefaultOAuth2User extends Object implements OAuth2User, Serializable {\n\tboolean equals(Object obj);\n\t// Get the OAuth 2.0 token attributes\n\tMap<String,Object> getAttributes();\n\t// Get the Collection of GrantedAuthoritys associated with this OAuth 2.0 token\n\tCollection<? extends org.springframework.security.core.GrantedAuthority> getAuthorities();\n\tString getName();\n}", "des": "The default implementation of an OAuth2User."}
{"index": 10252, "repo": "spring-security-oauth2-core-6.1.2", "code": "public class DefaultOidcUser extends DefaultOAuth2User implements OidcUser {\n\t// Returns the claims about the user.\n\tMap<String,Object> getClaims();\n\t// Returns the ID Token containing claims about the user.\n\tOidcIdToken getIdToken();\n\t// Returns the UserInfo containing claims about the user.\n\tOidcUserInfo getUserInfo();\n}", "des": "The default implementation of an OidcUser."}
{"index": 10253, "repo": "spring-security-oauth2-core-6.1.2", "code": "public class OAuth2AccessToken extends AbstractOAuth2Token {\n\t// Returns the scope(s) associated to the token.\n\tSet<String> getScopes();\n\t// Returns the token type.\n\tOAuth2AccessToken.TokenType getTokenType();\n}", "des": "An implementation of an AbstractOAuth2Token representing an OAuth 2.0 Access Token."}
{"index": 10254, "repo": "spring-security-oauth2-core-6.1.2", "code": "public interface OAuth2AuthenticatedPrincipal extends org.springframework.security.core.AuthenticatedPrincipal {\n\t// Get the OAuth 2.0 token attribute by name\n\tdefault <A> A getAttribute(String name);\n\t// Get the OAuth 2.0 token attributes\n\tMap<String,Object> getAttributes();\n\t// Get the Collection of GrantedAuthoritys associated with this OAuth 2.0 token\n\tCollection<? extends org.springframework.security.core.GrantedAuthority> getAuthorities();\n}", "des": "An AuthenticatedPrincipal that represents the principal associated with an OAuth 2.0 token."}
{"index": 10255, "repo": "spring-security-oauth2-core-6.1.2", "code": "public final class OAuth2AuthorizationExchange extends Object {\n\t// Returns the Authorization Request.\n\tOAuth2AuthorizationRequest getAuthorizationRequest();\n\t// Returns the Authorization Response.\n\tOAuth2AuthorizationResponse getAuthorizationResponse();\n}", "des": "An \"exchange\" of an OAuth 2.0 Authorization Request and Response for the authorization code grant type."}
{"index": 10256, "repo": "spring-security-oauth2-core-6.1.2", "code": "public class OAuth2Error extends Object implements Serializable {\n\t// Returns the error description.\n\tfinal String getDescription();\n\t// Returns the error code.\n\tfinal String getErrorCode();\n\t// Returns the error uri.\n\tfinal String getUri();\n}", "des": "A representation of an OAuth 2.0 Error."}
{"index": 10257, "repo": "spring-security-oauth2-core-6.1.2", "code": "public interface OAuth2Token {\n\t// Returns the expiration time on or after which the token MUST NOT be accepted.\n\tdefault Instant getExpiresAt();\n\t// Returns the time at which the token was issued.\n\tdefault Instant getIssuedAt();\n\t// Returns the token value.\n\tString getTokenValue();\n}", "des": "Core interface representing an OAuth 2.0 Token."}
{"index": 10258, "repo": "spring-security-oauth2-core-6.1.2", "code": "public class OidcIdToken extends AbstractOAuth2Token implements IdTokenClaimAccessor {\n\t// Returns a set of claims that may be used for assertions.\n\tMap<String,Object> getClaims();\n\t// Create a OidcIdToken.Builder based on the given token value\n\tstatic OidcIdToken.Builder withTokenValue(String tokenValue);\n}", "des": "An implementation of an AbstractOAuth2Token representing an OpenID Connect Core 1.0 ID Token."}
{"index": 10259, "repo": "spring-security-oauth2-core-6.1.2", "code": "public interface OidcUser extends OAuth2User, IdTokenClaimAccessor {\n\t// Returns the claims about the user.\n\tMap<String,Object> getClaims();\n\t// Returns the ID Token containing claims about the user.\n\tOidcIdToken getIdToken();\n\t// Returns the UserInfo containing claims about the user.\n\tOidcUserInfo getUserInfo();\n}", "des": "A representation of a user Principal that is registered with an OpenID Connect 1.0 Provider."}
{"index": 10260, "repo": "spring-security-oauth2-core-6.1.2", "code": "public class OidcUserAuthority extends OAuth2UserAuthority {\n\tboolean equals(Object obj);\n\t// Returns the ID Token containing claims about the user.\n\tOidcIdToken getIdToken();\n\t// Returns the UserInfo containing claims about the user, may be null.\n\tOidcUserInfo getUserInfo();\n}", "des": "A GrantedAuthority that may be associated to an OidcUser."}
{"index": 10261, "repo": "spring-security-oauth2-core-6.1.2", "code": "public class OidcUserInfo extends Object implements StandardClaimAccessor, Serializable {\n\t// Create a OidcUserInfo.Builder\n\tstatic OidcUserInfo.Builder builder();\n\tboolean equals(Object obj);\n\t// Returns a set of claims that may be used for assertions.\n\tMap<String,Object> getClaims();\n}", "des": "A representation of a UserInfo Response that is returned from the OAuth 2.0 Protected Resource UserInfo Endpoint."}
{"index": 10262, "repo": "spring-integration-ip-6.1.2", "code": "public abstract class AbstractTcpConnectionSupport extends Object {\n\tint getPushbackBufferSize();\n\tboolean isPushbackCapable();\n\t// The size of the push back buffer; defaults to 1.\n\tvoid setPushbackBufferSize(int pushbackBufferSize);\n\t// Set to true to cause wrapping of the connection's input stream in a PushbackInputStream, enabling deserializers to \"unread\" data.\n\tvoid setPushbackCapable(boolean pushbackCapable);\n}", "des": "Base class for TCP Connection Support implementations."}
{"index": 10263, "repo": "spring-integration-ip-6.1.2", "code": "public class ByteArrayCrLfSerializer extends AbstractPooledBufferByteArraySerializer {\n\t// Reads the data in the inputStream to a byte[].\n\tbyte[] doDeserialize(InputStream inputStream, byte[] buffer);\n\tint fillToCrLf(InputStream inputStream, byte[] buffer);\n\t// Writes the byte[] to the stream and appends \\r\\n.\n\tvoid serialize(byte[] bytes, OutputStream outputStream);\n}", "des": "Reads data in an InputStream to a byte[]; data must be terminated by \\r\\n (not included in resulting byte[])."}
{"index": 10264, "repo": "spring-integration-ip-6.1.2", "code": "public class ByteArraySingleTerminatorSerializer extends AbstractPooledBufferByteArraySerializer {\n\t// Reads the data in the inputStream to a byte[].\n\tprotected byte[] doDeserialize(InputStream inputStream, byte[] buffer);\n\t// Writes the byte[] to the stream and appends the terminator.\n\tvoid serialize(byte[] bytes, OutputStream outputStream);\n}", "des": "Reads data in an InputStream to a byte[]; data must be terminated by a single byte (not included in resulting byte[])."}
{"index": 10265, "repo": "spring-integration-ip-6.1.2", "code": "public class ByteArrayStxEtxSerializer extends AbstractPooledBufferByteArraySerializer {\n\t// Reads the data in the inputStream to a byte[].\n\tbyte[] doDeserialize(InputStream inputStream, byte[] buffer);\n\t// Writes the byte[] to the stream, prefixed by an ASCII STX character and terminated with an ASCII ETX character.\n\tvoid serialize(byte[] bytes, OutputStream outputStream);\n}", "des": "Reads data in an InputStream to a byte[]; data must be prefixed by <stx> and terminated by <etx> (not included in resulting byte[])."}
{"index": 10266, "repo": "spring-integration-ip-6.1.2", "code": "public class DefaultTcpNetSocketFactorySupport extends Object implements TcpSocketFactorySupport {\n\t// Supplies the ServerSocketFactory to be used to create new ServerSockets.\n\tServerSocketFactory getServerSocketFactory();\n\t// Supplies the SocketFactory to be used to create new Sockets.\n\tSocketFactory getSocketFactory();\n}", "des": "Implementation of TcpSocketFactorySupport for non-SSL sockets ServerSocket and Socket."}
{"index": 10267, "repo": "spring-integration-ip-6.1.2", "code": "public class DefaultTcpNetSSLSocketFactorySupport extends Object implements TcpSocketFactorySupport {\n\t// Supplies the ServerSocketFactory to be used to create new ServerSockets.\n\tServerSocketFactory getServerSocketFactory();\n\t// Supplies the SocketFactory to be used to create new Sockets.\n\tSocketFactory getSocketFactory();\n}", "des": "Implementation of TcpSocketFactorySupport for SSL sockets SSLServerSocket and SSLSocket."}
{"index": 10268, "repo": "spring-integration-ip-6.1.2", "code": "public class DefaultTcpNioSSLConnectionSupport extends AbstractTcpConnectionSupport implements TcpNioConnectionSupport {\n\t// Creates a TcpNioSSLConnection.\n\tTcpNioConnection createNewConnection(SocketChannel socketChannel, boolean server, boolean lookupHost, org.springframework.context.ApplicationEventPublisher applicationEventPublisher, String connectionFactoryName);\n\t// Subclasses can post-process the ssl engine (set properties).\n\tprotected void postProcessSSLEngine(SSLEngine sslEngine);\n}", "des": "Implementation of TcpNioConnectionSupport for SSL NIO connections."}
{"index": 10269, "repo": "spring-integration-ip-6.1.2", "code": "public class DefaultTcpSocketSupport extends Object implements TcpSocketSupport {\n\t// No-Op.\n\tvoid postProcessServerSocket(ServerSocket serverSocket);\n\t// Enables host verification for SSL, if so configured.\n\tvoid postProcessSocket(Socket socket);\n}", "des": "Default implementation of TcpSocketSupport; makes no changes to sockets."}
{"index": 10270, "repo": "spring-integration-ip-6.1.2", "code": "public class DefaultTcpSSLContextSupport extends Object implements TcpSSLContextSupport {\n\t// Gets an SSLContext.\n\tSSLContext getSSLContext();\n\t// Set the key store type.\n\tvoid setKeyStoreType(String keyStoreType);\n\t// The protocol used in SSLContext.getInstance(String); default \"TLS\".\n\tvoid setProtocol(String protocol);\n\t// Set the trust store type.\n\tvoid setTrustStoreType(String trustStoreType);\n}", "des": "Default implementation of TcpSSLContextSupport; uses a 'TLS' (by default) SSLContext, initialized with 'JKS' keystores, managed by 'SunX509' Key and Trust managers."}
{"index": 10271, "repo": "spring-integration-ip-6.1.2", "code": "public class TcpNetClientConnectionFactorySpec extends TcpClientConnectionFactorySpec<TcpNetClientConnectionFactorySpec,TcpNetClientConnectionFactory> {\n\t// The TcpNetConnectionSupport to use to create connection objects.\n\tTcpNetClientConnectionFactorySpec connectionSupport(TcpNetConnectionSupport connectionSupport);\n\t// Set the TcpSocketFactorySupport used to create server sockets.\n\tTcpNetClientConnectionFactorySpec socketFactorySupport(TcpSocketFactorySupport tcpSocketFactorySupport);\n}", "des": "TcpClientConnectionFactorySpec for TcpNetClientConnectionFactorys."}
{"index": 10272, "repo": "spring-integration-ip-6.1.2", "code": "public class TcpNetServerConnectionFactorySpec extends TcpServerConnectionFactorySpec<TcpNetServerConnectionFactorySpec,TcpNetServerConnectionFactory> {\n\t// The TcpNetConnectionSupport to use to create connection objects.\n\tTcpNetServerConnectionFactorySpec connectionSupport(TcpNetConnectionSupport connectionSupport);\n\t// Set the TcpSocketFactorySupport used to create server sockets.\n\tTcpNetServerConnectionFactorySpec socketFactorySupport(TcpSocketFactorySupport tcpSocketFactorySupport);\n}", "des": "TcpServerConnectionFactorySpec for TcpNetServerConnectionFactorys."}
{"index": 10273, "repo": "spring-integration-ip-6.1.2", "code": "public class TcpNioClientConnectionFactorySpec extends TcpClientConnectionFactorySpec<TcpNioClientConnectionFactorySpec,TcpNioClientConnectionFactory> {\n\t// The TcpNioConnectionSupport to use.\n\tTcpNioClientConnectionFactorySpec connectionSupport(TcpNioConnectionSupport tcpNioSupport);\n\t// True to use direct buffers.\n\tTcpNioClientConnectionFactorySpec directBuffers(boolean usingDirectBuffers);\n}", "des": "TcpClientConnectionFactorySpec for TcpNioClientConnectionFactorys."}
{"index": 10274, "repo": "spring-integration-ip-6.1.2", "code": "public class TcpNioServerConnectionFactorySpec extends TcpServerConnectionFactorySpec<TcpNioServerConnectionFactorySpec,TcpNioServerConnectionFactory> {\n\t// The TcpNioConnectionSupport to use.\n\tTcpNioServerConnectionFactorySpec connectionSupport(TcpNioConnectionSupport tcpNioSupport);\n\t// True to use direct buffers.\n\tTcpNioServerConnectionFactorySpec directBuffers(boolean usingDirectBuffers);\n}", "des": "TcpServerConnectionFactorySpec for TcpNioServerConnectionFactorys."}
{"index": 10275, "repo": "spring-integration-ip-6.1.2", "code": "@FunctionalInterface public interface TcpSender {\n\t// When we are using sockets owned by a TcpListener, this method is called each time a new connection is made.\n\tvoid addNewConnection(TcpConnection connection);\n\t// When we are using sockets owned by a TcpListener, this method is called each time a connection is closed.\n\tdefault void removeDeadConnection(TcpConnection connection);\n}", "des": "An interface representing a sending client of a connection factory."}
{"index": 10276, "repo": "spring-integration-ip-6.1.2", "code": "public interface TcpServerConnectionFactory {\n\t// Return the port this server is listening on.\n\tint getPort();\n\t// Return the SocketAddress that the underlying ServerSocket is bound to.\n\tSocketAddress getServerSocketAddress();\n}", "des": "Connection factories that act as TCP servers, listening for incoming connections."}
{"index": 10277, "repo": "spring-integration-ip-6.1.2", "code": "public interface TcpSocketFactorySupport {\n\t// Supplies the ServerSocketFactory to be used to create new ServerSockets.\n\tServerSocketFactory getServerSocketFactory();\n\t// Supplies the SocketFactory to be used to create new Sockets.\n\tSocketFactory getSocketFactory();\n}", "des": "Strategy interface for supplying Socket Factories."}
{"index": 10278, "repo": "spring-integration-ip-6.1.2", "code": "public interface TcpSocketSupport {\n\t// Performs any further modifications to the server socket after the connection factory has created the socket and set any configured attributes, before invoking ServerSocket.accept().\n\tvoid postProcessServerSocket(ServerSocket serverSocket);\n\t// Performs any further modifications to the Socket after the socket has been created by a client, or accepted by a server, and after any configured atributes have been set.\n\tvoid postProcessSocket(Socket socket);\n}", "des": "Strategy interface for modifying sockets."}
{"index": 10279, "repo": "spring-orm-6.0.11", "code": "public enum Database extends Enum<Database> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Database valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Database[] values();\n}", "des": "Enumeration for common database platforms."}
{"index": 10280, "repo": "spring-orm-6.0.11", "code": "public class HibernateJdbcException extends org.springframework.dao.UncategorizedDataAccessException {\n\t// Return the SQL that led to the problem.\n\tString getSql();\n\t// Return the underlying SQLException.\n\tSQLException getSQLException();\n}", "des": "Hibernate-specific subclass of UncategorizedDataAccessException, for JDBC exceptions that Hibernate wrapped."}
{"index": 10281, "repo": "spring-orm-6.0.11", "code": "public class ObjectOptimisticLockingFailureException extends org.springframework.dao.OptimisticLockingFailureException {\n\t// Return the identifier of the object for which the locking failed.\n\tObject getIdentifier();\n\t// Return the persistent class of the object for which the locking failed.\n\tClass<?> getPersistentClass();\n\t// Return the name of the persistent class of the object for which the locking failed.\n\tString getPersistentClassName();\n}", "des": "Exception thrown on an optimistic locking violation for a mapped object."}
{"index": 10282, "repo": "spring-orm-6.0.11", "code": "public class ObjectRetrievalFailureException extends org.springframework.dao.DataRetrievalFailureException {\n\t// Return the identifier of the object that was not found.\n\tObject getIdentifier();\n\t// Return the persistent class of the object that was not found.\n\tClass<?> getPersistentClass();\n\t// Return the name of the persistent class of the object that was not found.\n\tString getPersistentClassName();\n}", "des": "Exception thrown if a mapped object could not be retrieved via its identifier."}
{"index": 10283, "repo": "spring-orm-6.0.11", "code": "public interface PersistenceUnitManager {\n\t// Obtain the default PersistenceUnitInfo from this manager.\n\tPersistenceUnitInfo obtainDefaultPersistenceUnitInfo();\n\t// Obtain the specified PersistenceUnitInfo from this manager.\n\tPersistenceUnitInfo obtainPersistenceUnitInfo(String persistenceUnitName);\n}", "des": "Interface that defines an abstraction for finding and managing JPA PersistenceUnitInfos."}
{"index": 10284, "repo": "spring-orm-6.0.11", "code": "public interface SmartPersistenceUnitInfo extends PersistenceUnitInfo {\n\t// Return a list of managed Java packages, to be introspected by the persistence provider.\n\tList<String> getManagedPackages();\n\t// Set the persistence provider's own package name, for exclusion from class transformation.\n\tvoid setPersistenceProviderPackageName(String persistenceProviderPackageName);\n}", "des": "Extension of the standard JPA PersistenceUnitInfo interface, for advanced collaboration between Spring's LocalContainerEntityManagerFactoryBean and PersistenceUnitManager implementations."}
{"index": 10285, "repo": "groovy-xml-4.0.13", "code": "public class Namespace extends Object {\n\t// Returns the QName for the given localName.\n\tgroovy.namespace.QName get(String localName);\n\t// Returns the prefix mapped to this namespace\n\tString getPrefix();\n\t// Returns the URI of this namespace\n\tString getUri();\n}", "des": "A simple helper class which acts as a factory of QName instances."}
{"index": 10286, "repo": "groovy-xml-4.0.13", "code": "public class XmlExtensions extends Object {\n\t// Makes NodeList iterable by returning a read-only Iterator which traverses over each Node.\n\tstatic Iterator<Node> iterator(NodeList nodeList);\n\t// Transforms the element to its text equivalent.\n\tstatic String serialize(Element element);\n}", "des": "This class defines all the new XML-related groovy methods which enhance the normal JDK XML classes when inside the Groovy environment."}
{"index": 10287, "repo": "spring-data-r2dbc-3.1.2", "code": "public abstract class ArrayUtils extends Object {\n\t// Create a new empty array with the given number of dimensions.\n\tstatic Class<?> getArrayClass(Class<?> componentType, int dimensions);\n\t// Determine the number of dimensions for an arrayClass.\n\tstatic int getDimensionDepth(Class<?> arrayClass);\n\t// Determine the number of dimensions for an array object.\n\tstatic int getDimensionDepth(Object value);\n}", "des": "Utilities for array interaction."}
{"index": 10288, "repo": "spring-data-r2dbc-3.1.2", "code": "public final class BindTargetBinder extends Object {\n\t// Bind a Parameter by index.\n\tvoid bind(int index, Parameter parameter);\n\t// Bind a Parameter by name.\n\tvoid bind(String name, Parameter parameter);\n}", "des": "Utility to bind Parameter to a BindTarget."}
{"index": 10289, "repo": "spring-data-r2dbc-3.1.2", "code": "public class H2Dialect extends H2Dialect implements R2dbcDialect {\n\tArrayColumns getArraySupport();\n\t// Returns the BindMarkersFactory used by this dialect.\n\tBindMarkersFactory getBindMarkersFactory();\n\t// Render a SqlIdentifier in a way suitable for registering it as a generated key with a statement through Statement#returnGeneratedValues.\n\tString renderForGeneratedValues(SqlIdentifier identifier);\n}", "des": "R2DBC dialect for H2."}
{"index": 10290, "repo": "spring-data-r2dbc-3.1.2", "code": "@WritingConverter public static enum MySqlDialect.BooleanToByteConverter extends Enum<MySqlDialect.BooleanToByteConverter> implements Converter<Boolean,Byte> {\n\tByte convert(Boolean s);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic MySqlDialect.BooleanToByteConverter valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic MySqlDialect.BooleanToByteConverter[] values();\n}", "des": "Simple singleton to convert Booleans to their Byte representation."}
{"index": 10291, "repo": "spring-data-r2dbc-3.1.2", "code": "@ReadingConverter public static enum MySqlDialect.ByteToBooleanConverter extends Enum<MySqlDialect.ByteToBooleanConverter> implements Converter<Byte,Boolean> {\n\tBoolean convert(Byte s);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic MySqlDialect.ByteToBooleanConverter valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic MySqlDialect.ByteToBooleanConverter[] values();\n}", "des": "Simple singleton to convert Bytes to their Boolean representation."}
{"index": 10292, "repo": "spring-data-r2dbc-3.1.2", "code": "public class PostgresDialect extends PostgresDialect implements R2dbcDialect {\n\tArrayColumns getArraySupport();\n\t// Returns the BindMarkersFactory used by this dialect.\n\tBindMarkersFactory getBindMarkersFactory();\n\t// Return a collection of converters for this dialect.\n\tCollection<Object> getConverters();\n\t// Return a collection of types that are natively supported by this database/driver.\n\tCollection<? extends Class<?>> getSimpleTypes();\n}", "des": "An SQL dialect for Postgres."}
{"index": 10293, "repo": "spring-data-r2dbc-3.1.2", "code": "public class R2dbcCustomConversions extends CustomConversions {\n\t// Create a new R2dbcCustomConversions from the given R2dbcDialect and converters.\n\tstatic R2dbcCustomConversions of(R2dbcDialect dialect, Object... converters);\n\t// Create a new R2dbcCustomConversions from the given R2dbcDialect and converters.\n\tstatic R2dbcCustomConversions of(R2dbcDialect dialect, Collection<?> converters);\n}", "des": "Value object to capture custom conversion."}
{"index": 10294, "repo": "spring-data-r2dbc-3.1.2", "code": "public static interface ReactiveDeleteOperation.DeleteWithTable extends ReactiveDeleteOperation.TerminatingDelete {\n\t// Explicitly set the name of the table on which to perform the delete.\n\tdefault ReactiveDeleteOperation.DeleteWithQuery from(String table);\n\t// Explicitly set the name of the table on which to perform the delete.\n\tReactiveDeleteOperation.DeleteWithQuery from(SqlIdentifier table);\n}", "des": "Table override (optional)."}
{"index": 10295, "repo": "spring-data-r2dbc-3.1.2", "code": "public static interface ReactiveInsertOperation.InsertWithTable<T> extends ReactiveInsertOperation.TerminatingInsert<T> {\n\t// Explicitly set the name of the table.\n\tdefault ReactiveInsertOperation.TerminatingInsert<T> into(String table);\n\t// Explicitly set the name of the table.\n\tReactiveInsertOperation.TerminatingInsert<T> into(SqlIdentifier table);\n}", "des": "Table override (optional)."}
{"index": 10296, "repo": "spring-data-r2dbc-3.1.2", "code": "public static interface ReactiveSelectOperation.SelectWithTable<T> extends ReactiveSelectOperation.SelectWithQuery<T> {\n\t// Explicitly set the name of the table on which to perform the query.\n\tdefault ReactiveSelectOperation.SelectWithProjection<T> from(String table);\n\t// Explicitly set the name of the table on which to perform the query.\n\tReactiveSelectOperation.SelectWithProjection<T> from(SqlIdentifier table);\n}", "des": "Table override (optional)."}
{"index": 10297, "repo": "spring-data-r2dbc-3.1.2", "code": "public static interface ReactiveSelectOperation.TerminatingSelect<T> {\n\t// Get all matching elements.\n\treactor.core.publisher.Flux<T> all();\n\t// Get the number of matching elements.\n\treactor.core.publisher.Mono<Long> count();\n\t// Check for the presence of matching elements.\n\treactor.core.publisher.Mono<Boolean> exists();\n\t// Get the first result or no result.\n\treactor.core.publisher.Mono<T> first();\n\t// Get exactly zero or one result.\n\treactor.core.publisher.Mono<T> one();\n}", "des": "Trigger SELECT execution by calling one of the terminating methods."}
{"index": 10298, "repo": "spring-data-r2dbc-3.1.2", "code": "public static interface ReactiveUpdateOperation.UpdateWithTable extends ReactiveUpdateOperation.TerminatingUpdate {\n\t// Explicitly set the name of the table on which to perform the update.\n\tdefault ReactiveUpdateOperation.UpdateWithQuery inTable(String table);\n\t// Explicitly set the name of the table on which to perform the update.\n\tReactiveUpdateOperation.UpdateWithQuery inTable(SqlIdentifier table);\n}", "des": "Table override (optional)."}
{"index": 10299, "repo": "spring-data-r2dbc-3.1.2", "code": "public class SqlServerDialect extends SqlServerDialect implements R2dbcDialect {\n\t// Returns the BindMarkersFactory used by this dialect.\n\tBindMarkersFactory getBindMarkersFactory();\n\t// Return a collection of types that are natively supported by this database/driver.\n\tCollection<? extends Class<?>> getSimpleTypes();\n}", "des": "An SQL dialect for Microsoft SQL Server."}
{"index": 10300, "repo": "spring-data-r2dbc-3.1.2", "code": "public static class StatementMapper.DeleteSpec extends Object {\n\t// Create an DELETE specification for table.\n\tstatic StatementMapper.DeleteSpec create(String table);\n\t// Create an DELETE specification for table.\n\tstatic StatementMapper.DeleteSpec create(SqlIdentifier table);\n\tCriteriaDefinition getCriteria();\n\tSqlIdentifier getTable();\n\t// Associate a Criteria with the delete and return a new StatementMapper.DeleteSpec.\n\tStatementMapper.DeleteSpec withCriteria(CriteriaDefinition criteria);\n}", "des": "DELETE specification."}
{"index": 10301, "repo": "spring-data-r2dbc-3.1.2", "code": "public class UpdateMapper extends QueryMapper {\n\t// Map a assignments object to BoundAssignments and consider value/NULL Bindings.\n\tBoundAssignments getMappedObject(BindMarkers markers, Map<SqlIdentifier,? extends Object> assignments, Table table, RelationalPersistentEntity<?> entity);\n\t// Map a Update object to BoundAssignments and consider value/NULL Bindings.\n\tBoundAssignments getMappedObject(BindMarkers markers, Update update, Table table, RelationalPersistentEntity<?> entity);\n}", "des": "A subclass of QueryMapper that maps Update to update assignments."}
{"index": 10302, "repo": "spring-integration-core-6.1.2", "code": "public abstract class AbstractCandidate extends Object implements Candidate {\n\t// Gets the identifier.\n\tString getId();\n\t// Gets the role.\n\tString getRole();\n\t// Callback method invoked when this candidate is elected leader.\n\tabstract void onGranted(Context ctx);\n\t// Callback method invoked when this candidate is no longer leader.\n\tabstract void onRevoked(Context ctx);\n}", "des": "Base implementation of a Candidate."}
{"index": 10303, "repo": "spring-integration-core-6.1.2", "code": "public abstract class AbstractFetchLimitingMessageSource<T> extends AbstractMessageSource<T> implements MessageSourceManagement {\n\t// Subclasses must implement this method.\n\tprotected Object doReceive();\n\t// Subclasses must implement this method.\n\tprotected abstract Object doReceive(int maxFetchSizeToReceive);\n\t// Return the max fetch size.\n\tint getMaxFetchSize();\n\t// Set the maximum number of objects the source should fetch if it is necessary to fetch objects.\n\tvoid setMaxFetchSize(int maxFetchSize);\n}", "des": "A message source that can limit the number of remote objects it fetches."}
{"index": 10304, "repo": "spring-integration-core-6.1.2", "code": "@FunctionalInterface public static interface AbstractHeaderMapper.HeaderMatcher {\n\t// Return true if this match should be explicitly excluded from the mapping.\n\tdefault boolean isNegated();\n\t// Specify if the given headerName matches.\n\tboolean matchHeader(String headerName);\n}", "des": "Strategy interface to determine if a given header name matches."}
{"index": 10305, "repo": "spring-integration-core-6.1.2", "code": "protected static class AbstractHeaderMapper.SinglePatternBasedHeaderMatcher extends Object implements AbstractHeaderMapper.HeaderMatcher {\n\t// Return true if this match should be explicitly excluded from the mapping.\n\tboolean isNegated();\n\t// Specify if the given headerName matches.\n\tboolean matchHeader(String headerName);\n}", "des": "A pattern-based AbstractHeaderMapper.HeaderMatcher that matches if the specified header matches the specified simple pattern."}
{"index": 10306, "repo": "spring-integration-core-6.1.2", "code": "public abstract class AbstractLeaderEvent extends org.springframework.context.ApplicationEvent {\n\t// Get the Context associated with this event.\n\tContext getContext();\n\t// Get the role of the leader.\n\tString getRole();\n}", "des": "Base ApplicationEvent class for leader based events."}
{"index": 10307, "repo": "spring-integration-core-6.1.2", "code": "protected static interface AbstractRequestHandlerAdvice.ExecutionCallback {\n\t// Call this when it is necessary to clone the invocation before calling proceed() - such as when the invocation might be called multiple times - for example in a retry advice.\n\tObject cloneAndExecute();\n\t// Call this for a normal invocation.proceed().\n\tObject execute();\n}", "des": "Called by subclasses in doInvoke() to proceed() the invocation."}
{"index": 10308, "repo": "spring-integration-core-6.1.2", "code": "public interface BytesMessageMapper extends InboundMessageMapper<byte[]>, OutboundMessageMapper<byte[]> {\n\t// Convert a provided object to the Message.\n\tdefault org.springframework.messaging.Message<?> toMessage(byte[] object);\n\t// Convert a provided object to the Message and supply with headers if necessary and provided.\n\torg.springframework.messaging.Message<?> toMessage(byte[] bytes, Map<String,Object> headers);\n}", "des": "An OutboundMessageMapper and InboundMessageMapper that maps to/from byte[]."}
{"index": 10309, "repo": "spring-integration-core-6.1.2", "code": "public interface Candidate {\n\t// Gets the identifier.\n\tString getId();\n\t// Gets the role.\n\tString getRole();\n\t// Callback method invoked when this candidate is elected leader.\n\tvoid onGranted(Context ctx);\n\t// Callback method invoked when this candidate is no longer leader.\n\tvoid onRevoked(Context ctx);\n}", "des": "Interface that defines the contract for candidates to participate in a leader election."}
{"index": 10310, "repo": "spring-integration-core-6.1.2", "code": "public class ClaimCheckInTransformer extends AbstractTransformer implements IntegrationPattern {\n\t// Subclasses must implement this method to provide the transformation logic.\n\tprotected Object doTransform(org.springframework.messaging.Message<?> message);\n\t// Subclasses may implement this method to provide component type information.\n\tString getComponentType();\n\t// Return a pattern type this component implements.\n\tIntegrationPatternType getIntegrationPatternType();\n}", "des": "Transformer that stores a Message and returns a new Message whose payload is the id of the stored Message."}
{"index": 10311, "repo": "spring-integration-core-6.1.2", "code": "public interface Codec {\n\t// Decode an object of a given type.\n\t<T> T decode(byte[] bytes, Class<T> type);\n\t// Decode an object of a given type.\n\t<T> T decode(InputStream inputStream, Class<T> type);\n\t// Encode an object to a byte array.\n\tbyte[] encode(Object object);\n\t// Encode (encode) an object to an OutputStream.\n\tvoid encode(Object object, OutputStream outputStream);\n}", "des": "Interface for classes that perform both encode (serialize) and decode (deserialize) on multiple classes."}
{"index": 10312, "repo": "spring-integration-core-6.1.2", "code": "public class CompositeCodec extends Object implements Codec {\n\t// Decode an object of a given type.\n\t<T> T decode(byte[] bytes, Class<T> type);\n\t// Decode an object of a given type.\n\t<T> T decode(InputStream inputStream, Class<T> type);\n\t// Encode an object to a byte array.\n\tbyte[] encode(Object object);\n\t// Encode (encode) an object to an OutputStream.\n\tvoid encode(Object object, OutputStream outputStream);\n}", "des": "A Codec that can delegate to one out of many Codecs, each mapped to a class."}
{"index": 10313, "repo": "spring-integration-core-6.1.2", "code": "public class CompositeExecutor extends Object implements Executor {\n\t// Execute using the primary executor.\n\tvoid execute(Runnable task);\n\t// Execute using the secondary executor.\n\tvoid execute2(Runnable task);\n}", "des": "An Executor that encapsulates two underlying executors."}
{"index": 10314, "repo": "spring-integration-core-6.1.2", "code": "public class CompoundTrigger extends Object implements org.springframework.scheduling.Trigger {\n\tInstant nextExecution(org.springframework.scheduling.TriggerContext triggerContext);\n\t// Set the override trigger; set to null to revert to using the primary trigger.\n\tvoid setOverride(org.springframework.scheduling.Trigger override);\n\t// Set the primary trigger.\n\tfinal void setPrimary(org.springframework.scheduling.Trigger primary);\n}", "des": "A Trigger that delegates the Trigger.nextExecutionTime(TriggerContext) to one of two Triggers."}
{"index": 10315, "repo": "spring-integration-core-6.1.2", "code": "public interface ConcurrentMetadataStore extends MetadataStore {\n\t// Atomically insert the key into the store.\n\tString putIfAbsent(String key, String value);\n\t// Atomically replace the value for the key in the store if the old value matches the oldValue argument.\n\tboolean replace(String key, String oldValue, String newValue);\n}", "des": "Supports atomic updates to values in the store."}
{"index": 10316, "repo": "spring-integration-core-6.1.2", "code": "@FunctionalInterface public interface Context {\n\t// Get the role for the Candidate.\n\tdefault String getRole();\n\t// Checks if the Candidate this context was passed to is the leader.\n\tboolean isLeader();\n\t// Causes the Candidate this context was passed to to relinquish leadership.\n\tdefault void yield();\n}", "des": "Interface that defines the context for candidate leadership."}
{"index": 10317, "repo": "spring-integration-core-6.1.2", "code": "public class DecodingTransformer<T> extends AbstractTransformer {\n\t// Subclasses must implement this method to provide the transformation logic.\n\tprotected T doTransform(org.springframework.messaging.Message<?> message);\n\t// Subclasses may implement this for initialization logic.\n\tprotected void onInit();\n\tvoid setEvaluationContext(org.springframework.expression.spel.support.StandardEvaluationContext evaluationContext);\n}", "des": "AbstractPayloadTransformer that delegates to a codec to decode the payload from a byte[]."}
{"index": 10318, "repo": "spring-integration-core-6.1.2", "code": "public class DefaultCandidate extends AbstractCandidate {\n\t// Callback method invoked when this candidate is elected leader.\n\tvoid onGranted(Context ctx);\n\t// Callback method invoked when this candidate is no longer leader.\n\tvoid onRevoked(Context ctx);\n\t// Voluntarily yield leadership if held.\n\tvoid yieldLeadership();\n}", "des": "Simple Candidate for leadership."}
{"index": 10319, "repo": "spring-integration-core-6.1.2", "code": "public class DefaultMessageSplitter extends AbstractMessageSplitter {\n\t// Set delimiters to use for tokenizing String values.\n\tvoid setDelimiters(String delimiters);\n\t// Subclasses must override this method to split the received Message.\n\tprotected final Object splitMessage(org.springframework.messaging.Message<?> message);\n}", "des": "The default Message Splitter implementation."}
{"index": 10320, "repo": "spring-integration-core-6.1.2", "code": "public class DirectChannel extends AbstractSubscribableChannel {\n\tprotected UnicastingDispatcher getDispatcher();\n\t// Subclasses may implement this for initialization logic.\n\tprotected void onInit();\n\t// Specify whether the channel's dispatcher should have failover enabled.\n\tvoid setFailover(boolean failover);\n\t// Specify the maximum number of subscribers supported by the channel's dispatcher.\n\tvoid setMaxSubscribers(int maxSubscribers);\n}", "des": "A channel that invokes a single subscriber for each sent Message."}
{"index": 10321, "repo": "spring-integration-core-6.1.2", "code": "public class EnricherParser extends AbstractConsumerEndpointParser {\n\t// Parse the MessageHandler.\n\tprotected org.springframework.beans.factory.support.BeanDefinitionBuilder parseHandler(Element element, org.springframework.beans.factory.xml.ParserContext parserContext);\n\t// Override to allow 'reply-channel' within a chain, for components where it makes sense (e.g.\n\tprotected boolean replyChannelInChainAllowed(Element element);\n}", "des": "Parser for the 'enricher' element."}
{"index": 10322, "repo": "spring-integration-core-6.1.2", "code": "public class ExecutorChannel extends AbstractExecutorChannel {\n\tprotected UnicastingDispatcher getDispatcher();\n\t// Subclasses may implement this for initialization logic.\n\tfinal void onInit();\n\t// Specify whether the channel's dispatcher should have failover enabled.\n\tvoid setFailover(boolean failover);\n}", "des": "An implementation of MessageChannel that delegates to an instance of UnicastingDispatcher which in turn delegates all dispatching invocations to an Executor."}
{"index": 10323, "repo": "spring-integration-core-6.1.2", "code": "public class ExpressionEvaluatingMessageHandler extends AbstractMessageHandler {\n\t// Subclasses may implement this method to provide component type information.\n\tString getComponentType();\n\tprotected void handleMessageInternal(org.springframework.messaging.Message<?> message);\n\t// Subclasses may implement this for initialization logic.\n\tprotected void onInit();\n\tvoid setComponentType(String componentType);\n}", "des": "A MessageHandler that evaluates the provided Expression expecting a void return."}
{"index": 10324, "repo": "spring-integration-core-6.1.2", "code": "public class ExpressionEvaluatingMessageListProcessor extends AbstractExpressionEvaluator implements MessageListProcessor {\n\t// Processes the Message by evaluating the expression with that Message as the root object.\n\tObject process(Collection<? extends org.springframework.messaging.Message<?>> messages);\n\t// Set the result type expected from evaluation of the expression.\n\tvoid setExpectedType(Class<?> expectedType);\n}", "des": "A base class for aggregators that evaluates a SpEL expression with the message list as the root object within the evaluation context."}
{"index": 10325, "repo": "spring-integration-core-6.1.2", "code": "public class ExpressionEvaluatingRouter extends AbstractMappingMessageRouter {\n\t// Subclasses must implement this method to return the channel keys.\n\tprotected List<Object> getChannelKeys(org.springframework.messaging.Message<?> message);\n\tboolean isRunning();\n\t// Subclasses may implement this for initialization logic.\n\tfinal void onInit();\n\tvoid start();\n\tvoid stop();\n}", "des": "A Message Router implementation that evaluates the specified SpEL expression."}
{"index": 10326, "repo": "spring-integration-core-6.1.2", "code": "public interface HeaderChannelRegistry {\n\t// Converts the channel name back to a MessageChannel (if it is registered).\n\torg.springframework.messaging.MessageChannel channelNameToChannel(String name);\n\t// Converts the channel to a name (String).\n\tObject channelToChannelName(Object channel);\n\t// Converts the channel to a name (String).\n\tObject channelToChannelName(Object channel, long timeToLive);\n\t// Cancel the scheduled reap task and run immediately; then reschedule.\n\tvoid runReaper();\n\tint size();\n}", "des": "Implementations convert a channel to a name, retaining a reference to the channel keyed by the name."}
{"index": 10327, "repo": "spring-integration-core-6.1.2", "code": "public interface HeaderPropagationAware {\n\t// Add headers that will NOT be copied from the inbound message if the handler is configured to copy headers, instead of overwriting the existing set.\n\tvoid addNotPropagatedHeaders(String... headers);\n\t// Get the header names this handler doesn't propagate.\n\tCollection<String> getNotPropagatedHeaders();\n\t// Set headers that will NOT be copied from the inbound message if the handler is configured to copy headers.\n\tvoid setNotPropagatedHeaders(String... headers);\n}", "des": "MessageHandlers implementing this interface can propagate headers from an input message to an output message."}
{"index": 10328, "repo": "spring-integration-core-6.1.2", "code": "@FunctionalInterface public interface InboundMessageMapper<T> {\n\t// Convert a provided object to the Message.\n\tdefault org.springframework.messaging.Message<?> toMessage(T object);\n\t// Convert a provided object to the Message and supply with headers if necessary and provided.\n\torg.springframework.messaging.Message<?> toMessage(T object, Map<String,Object> headers);\n}", "des": "Strategy interface for mapping from an Object to aMessage."}
{"index": 10329, "repo": "spring-integration-core-6.1.2", "code": "public interface IntegrationConsumer extends NamedComponent {\n\t// Return the consumer's handler.\n\torg.springframework.messaging.MessageHandler getHandler();\n\t// Return the input channel.\n\torg.springframework.messaging.MessageChannel getInputChannel();\n\t// Return the output channel (may be null).\n\torg.springframework.messaging.MessageChannel getOutputChannel();\n}", "des": "Message consumers implement this interface, the message handler within a consumer may or may not emit output messages."}
{"index": 10330, "repo": "spring-integration-core-6.1.2", "code": "public enum IntegrationObservation extends Enum<IntegrationObservation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic IntegrationObservation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic IntegrationObservation[] values();\n}", "des": "The ObservationDocumentation implementation for Spring Integration infrastructure."}
{"index": 10331, "repo": "spring-integration-core-6.1.2", "code": "public static enum IntegrationObservation.GatewayTags extends Enum<IntegrationObservation.GatewayTags> implements io.micrometer.common.docs.KeyName {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic IntegrationObservation.GatewayTags valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic IntegrationObservation.GatewayTags[] values();\n}", "des": "Key names for message handler observations."}
{"index": 10332, "repo": "spring-integration-core-6.1.2", "code": "public static enum IntegrationObservation.HandlerTags extends Enum<IntegrationObservation.HandlerTags> implements io.micrometer.common.docs.KeyName {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic IntegrationObservation.HandlerTags valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic IntegrationObservation.HandlerTags[] values();\n}", "des": "Key names for message handler observations."}
{"index": 10333, "repo": "spring-integration-core-6.1.2", "code": "public static enum IntegrationObservation.ProducerTags extends Enum<IntegrationObservation.ProducerTags> implements io.micrometer.common.docs.KeyName {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic IntegrationObservation.ProducerTags valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic IntegrationObservation.ProducerTags[] values();\n}", "des": "Key names for message producer observations."}
{"index": 10334, "repo": "spring-integration-core-6.1.2", "code": "public enum IntegrationPatternType extends Enum<IntegrationPatternType> {\n\tIntegrationPatternType.IntegrationPatternCategory getPatternCategory();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic IntegrationPatternType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic IntegrationPatternType[] values();\n}", "des": "The Enterprise Integration Pattern types."}
{"index": 10335, "repo": "spring-integration-core-6.1.2", "code": "public static enum IntegrationPatternType.IntegrationPatternCategory extends Enum<IntegrationPatternType.IntegrationPatternCategory> {\n\tSet<IntegrationPatternType> getPatternTypes();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic IntegrationPatternType.IntegrationPatternCategory valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic IntegrationPatternType.IntegrationPatternCategory[] values();\n}", "des": "The Enterprise Integration Pattern categories."}
{"index": 10336, "repo": "spring-integration-core-6.1.2", "code": "public class IntegrationResourceHolder extends Object implements org.springframework.transaction.support.ResourceHolder {\n\t// Add attribute to this ResourceHolder instance.\n\tvoid addAttribute(String key, Object value);\n\t// Will return an immutable Map of current attributes.\n\tMap<String,Object> getAttributes();\n\torg.springframework.messaging.Message<?> getMessage();\n\tboolean isVoid();\n\tvoid reset();\n\tvoid setMessage(org.springframework.messaging.Message<?> message);\n\tvoid unbound();\n}", "des": "An implementation of the ResourceHolder which holds an instance of the current Message and the synchronization resource."}
{"index": 10337, "repo": "spring-integration-core-6.1.2", "code": "public final class JsonHeaders extends Object {\n\t// Build a ResolvableType for provided class components.\n\tstatic org.springframework.core.ResolvableType buildResolvableType(Class<?> targetClass, Class<?> contentClass, Class<?> keyClass);\n\t// Build a ResolvableType for provided class components.\n\tstatic org.springframework.core.ResolvableType buildResolvableType(ClassLoader classLoader, Object targetClassValue, Object contentClassValue, Object keyClassValue);\n}", "des": "Pre-defined names and prefixes to be used for setting and/or retrieving JSON entries from/to Message Headers and other adapter, e.g."}
{"index": 10338, "repo": "spring-integration-core-6.1.2", "code": "public final class JsonObjectMapperProvider extends Object {\n\t// Returns true if a supported JSON implementation is on the class path.\n\tstatic boolean jsonAvailable();\n\t// Return an object mapper if available.\n\tstatic JsonObjectMapper<?,?> newInstance();\n}", "des": "Simple factory to provide JsonObjectMapper instances based on jackson-databind lib in the classpath."}
{"index": 10339, "repo": "spring-integration-core-6.1.2", "code": "public interface LeaderEventPublisher {\n\t// Publish a failure to acquire event.\n\tvoid publishOnFailedToAcquire(Object source, Context context, String role);\n\t// Publish a granted event.\n\tvoid publishOnGranted(Object source, Context context, String role);\n\t// Publish a revoked event.\n\tvoid publishOnRevoked(Object source, Context context, String role);\n}", "des": "Interface for publishing leader based application events."}
{"index": 10340, "repo": "spring-integration-core-6.1.2", "code": "public interface ListenableMetadataStore extends ConcurrentMetadataStore {\n\t// Register a listener with the metadata store.\n\tvoid addListener(MetadataStoreListener callback);\n\t// Unregister a listener.\n\tvoid removeListener(MetadataStoreListener callback);\n}", "des": "ConcurrentMetadataStore with the ability of registering MetadataStoreListener callbacks, to be invoked when changes occur in the metadata store."}
{"index": 10341, "repo": "spring-integration-core-6.1.2", "code": "public class MapToObjectTransformer extends AbstractPayloadTransformer<Map<?,?>,Object> {\n\t// Subclasses may implement this method to provide component type information.\n\tString getComponentType();\n\t// Subclasses may implement this for initialization logic.\n\tprotected void onInit();\n\tprotected Object transformPayload(Map<?,?> payload);\n}", "des": "Will transform Map to an instance of Object."}
{"index": 10342, "repo": "spring-integration-core-6.1.2", "code": "public record MessageChannelReference(String name) extends Record implements org.springframework.messaging.MessageChannel {\n\t// Indicates whether some other object is \"equal to\" this one.\n\tfinal boolean equals(Object o);\n\t// Returns the value of the name record component.\n\tString name();\n\tboolean send(org.springframework.messaging.Message<?> message);\n\tboolean send(org.springframework.messaging.Message<?> message, long timeout);\n}", "des": "An \"artificial\" MessageChannel implementation which will be unwrapped to the MessageChannel bean on the bean registration phase."}
{"index": 10343, "repo": "spring-integration-core-6.1.2", "code": "public interface MessageDispatcher {\n\t// Add a message handler.\n\tboolean addHandler(org.springframework.messaging.MessageHandler handler);\n\t// Dispatch the message.\n\tboolean dispatch(org.springframework.messaging.Message<?> message);\n\t// Return the current handler count.\n\tint getHandlerCount();\n\t// Remove a message handler.\n\tboolean removeHandler(org.springframework.messaging.MessageHandler handler);\n}", "des": "Strategy interface for dispatching messages to handlers."}
{"index": 10344, "repo": "spring-integration-core-6.1.2", "code": "public interface MessageProducer {\n\t// Return the the output channel.\n\torg.springframework.messaging.MessageChannel getOutputChannel();\n\t// Specify the MessageChannel to which produced Messages should be sent.\n\tvoid setOutputChannel(org.springframework.messaging.MessageChannel outputChannel);\n\t// Specify the bean name of the MessageChannel to which produced Messages should be sent.\n\tdefault void setOutputChannelName(String outputChannel);\n}", "des": "Base interface for any component that is capable of sending messages to a MessageChannel."}
{"index": 10345, "repo": "spring-integration-core-6.1.2", "code": "@FunctionalInterface public interface MessageSource<T> extends IntegrationPattern {\n\t// Return a pattern type this component implements.\n\tdefault IntegrationPatternType getIntegrationPatternType();\n\t// Retrieve the next available message from this source.\n\torg.springframework.messaging.Message<T> receive();\n}", "des": "Base interface for any source of Messages that can be polled."}
{"index": 10346, "repo": "spring-integration-core-6.1.2", "code": "@IntegrationManagedResource public interface MessageSourceManagement {\n\t// Return the max fetch size.\n\tint getMaxFetchSize();\n\t// Set the maximum number of objects the source should fetch if it is necessary to fetch objects.\n\tvoid setMaxFetchSize(int maxFetchSize);\n}", "des": "Message sources implementing this interface have additional properties that can be set or examined using JMX."}
{"index": 10347, "repo": "spring-integration-core-6.1.2", "code": "@ManagedResource public interface MetadataStore {\n\t// Reads a value for the given key from this MetadataStore.\n\tString get(String key);\n\t// Writes a key value pair to this MetadataStore.\n\tvoid put(String key, String value);\n\t// Remove a value for the given key from this MetadataStore.\n\tString remove(String key);\n}", "des": "Strategy interface for storing metadata from certain adapters to avoid duplicate delivery of messages, for example."}
{"index": 10348, "repo": "spring-integration-core-6.1.2", "code": "public interface MetadataStoreListener {\n\t// Invoked when a key is added to the store.\n\tvoid onAdd(String key, String value);\n\t// Invoked when a key is removed from the store.\n\tvoid onRemove(String key, String oldValue);\n\t// Invoked when a key is updated into the store.\n\tvoid onUpdate(String key, String newValue);\n}", "des": "A callback to be invoked whenever a value changes in the data store."}
{"index": 10349, "repo": "spring-integration-core-6.1.2", "code": "public abstract class MetadataStoreListenerAdapter extends Object implements MetadataStoreListener {\n\t// Invoked when a key is added to the store.\n\tvoid onAdd(String key, String value);\n\t// Invoked when a key is removed from the store.\n\tvoid onRemove(String key, String oldValue);\n\t// Invoked when a key is updated into the store.\n\tvoid onUpdate(String key, String newValue);\n}", "des": "Base implementation for a MetadataStoreListener."}
{"index": 10350, "repo": "spring-integration-core-6.1.2", "code": "public class MetadataStoreSelector extends Object implements MessageSelector {\n\tboolean accept(org.springframework.messaging.Message<?> message);\n\t// Fluent version of setCompareValues(BiPredicate).\n\tMetadataStoreSelector compareValues(BiPredicate<String,String> compareValues);\n\t// Set a BiPredicate to compare old and new values in the metadata store for the key.\n\tvoid setCompareValues(BiPredicate<String,String> compareValues);\n}", "des": "The MessageSelector implementation using a ConcurrentMetadataStore and MessageProcessor."}
{"index": 10351, "repo": "spring-integration-core-6.1.2", "code": "public class MethodInvokingRouter extends AbstractMappingMessageRouter {\n\t// Subclasses must implement this method to return the channel keys.\n\tprotected List<Object> getChannelKeys(org.springframework.messaging.Message<?> message);\n\tboolean isRunning();\n\t// Subclasses may implement this for initialization logic.\n\tfinal void onInit();\n\tvoid start();\n\tvoid stop();\n}", "des": "A Message Router that invokes the specified method on the given object."}
{"index": 10352, "repo": "spring-integration-core-6.1.2", "code": "public static interface MetricsCaptor.CounterBuilder {\n\t// Build the counter.\n\tCounterFacade build();\n\t// Add the description.\n\tMetricsCaptor.CounterBuilder description(String desc);\n\t// Add a tag.\n\tMetricsCaptor.CounterBuilder tag(String key, String value);\n}", "des": "A builder for a counter."}
{"index": 10353, "repo": "spring-integration-core-6.1.2", "code": "public static interface MetricsCaptor.GaugeBuilder {\n\t// Build the gauge.\n\tGaugeFacade build();\n\t// Add the description.\n\tMetricsCaptor.GaugeBuilder description(String desc);\n\t// Add a tag.\n\tMetricsCaptor.GaugeBuilder tag(String key, String value);\n}", "des": "A builder for a gauge."}
{"index": 10354, "repo": "spring-integration-core-6.1.2", "code": "public static interface MetricsCaptor.TimerBuilder {\n\t// Build the timer.\n\tTimerFacade build();\n\t// Add the description.\n\tMetricsCaptor.TimerBuilder description(String desc);\n\t// Add a tag.\n\tMetricsCaptor.TimerBuilder tag(String key, String value);\n}", "des": "A builder for a timer."}
{"index": 10355, "repo": "spring-integration-core-6.1.2", "code": "public class ObjectToJsonTransformer extends AbstractTransformer {\n\t// Subclasses must implement this method to provide the transformation logic.\n\tprotected Object doTransform(org.springframework.messaging.Message<?> message);\n\t// Subclasses may implement this method to provide component type information.\n\tString getComponentType();\n\t// Set the content-type header value.\n\tvoid setContentType(String contentType);\n}", "des": "Transformer implementation that converts a payload instance into a JSON string representation."}
{"index": 10356, "repo": "spring-integration-core-6.1.2", "code": "public interface OrderlyShutdownCapable {\n\t// Called after normal shutdown of schedulers, executors etc, and after the shutdown delay has elapsed, but before any forced shutdown of any remaining active scheduler/executor threads.Can optionally return the number of active messages still in process.\n\tint afterShutdown();\n\t// Called before shutdown begins.\n\tint beforeShutdown();\n}", "des": "Interface for components that wish to be considered for an orderly shutdown using management interfaces."}
{"index": 10357, "repo": "spring-integration-core-6.1.2", "code": "public final class PatternMatchUtils extends Object {\n\t// Pattern match against the supplied patterns; also supports negated ('!') patterns.\n\tstatic Boolean smartMatch(String str, String... patterns);\n\t// Pattern match against the supplied patterns ignoring case; also supports negated ('!') patterns.\n\tstatic Boolean smartMatchIgnoreCase(String str, String... patterns);\n}", "des": "Utility methods for pattern matching."}
{"index": 10358, "repo": "spring-integration-core-6.1.2", "code": "public interface Pausable extends ManageableLifecycle {\n\t// Check if the endpoint is paused.\n\tdefault boolean isPaused();\n\t// Pause the endpoint.\n\tvoid pause();\n\t// Resume the endpoint if paused.\n\tvoid resume();\n}", "des": "Endpoints implementing this interface can be paused/resumed."}
{"index": 10359, "repo": "spring-integration-core-6.1.2", "code": "public class PriorityChannel extends QueueChannel {\n\t// Subclasses must implement this method.\n\tprotected org.springframework.messaging.Message<?> doReceive(long timeout);\n\t// Subclasses must implement this method.\n\tprotected boolean doSend(org.springframework.messaging.Message<?> message, long timeout);\n\t// Obtain the remaining capacity of this channel.\n\tint getRemainingCapacity();\n}", "des": "A message channel that prioritizes messages based on a Comparator."}
{"index": 10360, "repo": "spring-integration-core-6.1.2", "code": "public interface QueueChannelOperations {\n\t// Remove all Messages from this channel.\n\tList<org.springframework.messaging.Message<?>> clear();\n\t// Obtain the current number of queued Messages in this channel.\n\tint getQueueSize();\n\t// Obtain the remaining capacity of this channel.\n\tint getRemainingCapacity();\n\t// Remove any Messages that are not accepted by the provided selector.\n\tList<org.springframework.messaging.Message<?>> purge(MessageSelector selector);\n}", "des": "Operations available on a channel that has queuing semantics."}
{"index": 10361, "repo": "spring-integration-core-6.1.2", "code": "public class ReactiveMessageSourceProducer extends MessageProducerSupport {\n\t// Take no action by default.\n\tprotected void doStart();\n\t// Configure a Duration to delay next pull request when the previous one was empty.\n\tvoid setDelayWhenEmpty(Duration delayWhenEmpty);\n}", "des": "The MessageProducerSupport to adapt a provided MessageSource into a Flux and let it be subscribed in the MessageProducerSupport.subscribeToPublisher(org.reactivestreams.Publisher<? extends org.springframework.messaging.Message<?>>)."}
{"index": 10362, "repo": "spring-integration-core-6.1.2", "code": "@FunctionalInterface public interface ReceiveMessageAdvice extends org.aopalliance.intercept.MethodInterceptor {\n\t// Subclasses can take actions based on the result of the Joinpoint.proceed(); e.g.\n\torg.springframework.messaging.Message<?> afterReceive(org.springframework.messaging.Message<?> result, Object source);\n\t// Subclasses can decide whether to Joinpoint.proceed() or not.\n\tdefault boolean beforeReceive(Object source);\n\tdefault Object invoke(org.aopalliance.intercept.MethodInvocation invocation);\n}", "des": "An AOP advice to perform hooks before and/or after a receive() contract is called."}
{"index": 10363, "repo": "spring-integration-core-6.1.2", "code": "public class ReplyProducingMessageHandlerWrapper extends AbstractReplyProducingMessageHandler implements ManageableLifecycle {\n\t// Return a pattern type this component implements.\n\tIntegrationPatternType getIntegrationPatternType();\n\t// Subclasses must implement this method to handle the request Message.\n\tprotected Object handleRequestMessage(org.springframework.messaging.Message<?> requestMessage);\n\tboolean isRunning();\n\tvoid start();\n\tvoid stop();\n}", "des": "The AbstractReplyProducingMessageHandler wrapper around raw MessageHandler for request-reply scenarios, e.g."}
{"index": 10364, "repo": "spring-integration-core-6.1.2", "code": "public class SimpleActiveIdleReceiveMessageAdvice extends Object implements ReceiveMessageAdvice {\n\t// Subclasses can take actions based on the result of the Joinpoint.proceed(); e.g.\n\torg.springframework.messaging.Message<?> afterReceive(org.springframework.messaging.Message<?> result, Object source);\n\t// Set the poll period when messages are returned.\n\tvoid setActivePollPeriod(long activePollPeriod);\n\t// Set the poll period when messages are not returned.\n\tvoid setIdlePollPeriod(long idlePollPeriod);\n}", "des": "A simple advice that polls at one rate when messages exist and another when there are no messages."}
{"index": 10365, "repo": "spring-integration-core-6.1.2", "code": "@ManagedResource public class SimplePollSkipStrategy extends Object implements PollSkipStrategy {\n\t// Resume polling at the next Trigger event.\n\tvoid reset();\n\t// Return true if this poll should be skipped.\n\tboolean skipPoll();\n\t// Skip future polls.\n\tvoid skipPolls();\n}", "des": "A simple PollSkipStrategy to be used with a PollSkipAdvice."}
{"index": 10366, "repo": "spring-integration-core-6.1.2", "code": "public static interface SimplePool.PoolItemCallback<T> {\n\t// Called by the pool when a new instance is required to populate the pool.\n\tT createForPool();\n\t// Called by the pool when an idle item is retrieved from the pool.\n\tboolean isStale(T item);\n\t// Called by the pool when an item is forcibly removed from the pool - for example when the pool size is reduced.\n\tvoid removedFromPool(T item);\n}", "des": "User of the pool provide an implementation of this interface; called during various pool operations."}
{"index": 10367, "repo": "spring-integration-core-6.1.2", "code": "public class SpelPropertyAccessorRegistrar extends Object {\n\t// Add the provided named property accessor.\n\tSpelPropertyAccessorRegistrar add(String name, org.springframework.expression.PropertyAccessor propertyAccessor);\n\t// Add the provided property accessors.\n\tSpelPropertyAccessorRegistrar add(org.springframework.expression.PropertyAccessor... propertyAccessors);\n\t// Return the registered accessors.\n\tMap<String,org.springframework.expression.PropertyAccessor> getPropertyAccessors();\n}", "des": "Utility class that keeps track of a Set of SpEL PropertyAccessors in order to register them with the \"integrationEvaluationContext\" upon initialization."}
{"index": 10368, "repo": "spring-integration-core-6.1.2", "code": "public final class UpperBound extends Object {\n\tint availablePermits();\n\t// Releases one lock on the underlying semaphore.\n\tvoid release();\n\t// Releases several locks on the underlying semaphore.\n\tvoid release(int permits);\n\t// Acquires a permit from the underlying semaphore if this UpperBound is bounded and returns true if it succeeds within the given timeout.\n\tboolean tryAcquire(long timeoutInMilliseconds);\n}", "des": "Thin wrapper around a Semaphore that allows to create a potentially unlimited upper bound to by used in buffers of messages (e.g."}
{"index": 10369, "repo": "spring-integration-core-6.1.2", "code": "public class UUIDConverter extends Object implements org.springframework.core.convert.converter.Converter<Object,UUID> {\n\t// Convert the input to a UUID using the convenience method getUUID(Object).\n\tUUID convert(Object source);\n\t// Convenient utility to convert an object to a UUID.\n\tstatic UUID getUUID(Object input);\n}", "des": "Utility to help generate UUID instances from generic objects."}
{"index": 10370, "repo": "spring-integration-amqp-6.1.2", "code": "public static enum AmqpInboundChannelAdapter.BatchMode extends Enum<AmqpInboundChannelAdapter.BatchMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AmqpInboundChannelAdapter.BatchMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AmqpInboundChannelAdapter.BatchMode[] values();\n}", "des": "Defines the payload type when the listener container is configured with consumerBatchEnabled."}
{"index": 10371, "repo": "spring-integration-amqp-6.1.2", "code": "public abstract class AmqpOutboundEndpointSpec<S extends AmqpOutboundEndpointSpec<S>> extends AmqpBaseOutboundEndpointSpec<S,AmqpOutboundEndpoint> {\n\t// Provide the header names that should be mapped to a response from a MessageHeaders.\n\tS mappedReplyHeaders(String... headers);\n\t// Wait for a publisher confirm.\n\tS waitForConfirm(boolean waitForConfirm);\n}", "des": "Base spec for outbound AMQP endpoints."}
{"index": 10372, "repo": "spring-integration-amqp-6.1.2", "code": "public class ManualAckListenerExecutionFailedException extends org.springframework.amqp.rabbit.support.ListenerExecutionFailedException {\n\t// Return the channel.\n\tcom.rabbitmq.client.Channel getChannel();\n\t// Return the delivery tag for the last failed message.\n\tlong getDeliveryTag();\n}", "des": "A ListenerExecutionFailedException enhanced with the channel and delivery tag."}
{"index": 10373, "repo": "spring-boot-maven-plugin-3.1.1", "code": "public static enum AbstractPackagerMojo.LayoutType extends Enum<AbstractPackagerMojo.LayoutType> {\n\torg.springframework.boot.loader.tools.Layout layout();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic AbstractPackagerMojo.LayoutType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic AbstractPackagerMojo.LayoutType[] values();\n}", "des": "Archive layout types."}
{"index": 10374, "repo": "spring-boot-maven-plugin-3.1.1", "code": "public abstract class BuildImageMojo extends AbstractPackagerMojo {\n\tvoid execute();\n\t// Return the type of archive that should be used when building the image.\n\tprotected AbstractPackagerMojo.LayoutType getLayout();\n\t// Return the layout factory that will be used to determine the AbstractPackagerMojo.LayoutType if no explicit layout is set.\n\tprotected org.springframework.boot.loader.tools.LayoutFactory getLayoutFactory();\n}", "des": "Package an application into an OCI image using a buildpack."}
{"index": 10375, "repo": "spring-boot-maven-plugin-3.1.1", "code": "public class Docker extends Object {\n\t// The path to TLS certificate and key files required for TLS communication with the Docker daemon.\n\tString getCertPath();\n\t// The host address of the Docker daemon.\n\tString getHost();\n\t// Whether to use the configured Docker host in the builder container.\n\tboolean isBindHostToBuilder();\n\t// Whether the Docker daemon requires TLS communication.\n\tboolean isTlsVerify();\n}", "des": "Docker configuration options."}
{"index": 10376, "repo": "spring-boot-maven-plugin-3.1.1", "code": "public static class Docker.DockerRegistry extends Object {\n\t// The email address that will be used for user authentication to the registry.\n\tString getEmail();\n\t// The password that will be used for user authentication to the registry.\n\tString getPassword();\n\t// The token that will be used for token authentication to the registry.\n\tString getToken();\n\t// The username that will be used for user authentication to the registry.\n\tString getUsername();\n}", "des": "Encapsulates Docker registry authentication configuration options."}
{"index": 10377, "repo": "spring-boot-maven-plugin-3.1.1", "code": "public class Layers extends Object {\n\t// The location of the layers configuration file.\n\tFile getConfiguration();\n\t// Whether a layers.idx file should be added to the jar.\n\tboolean isEnabled();\n\t// Whether to include the layer tools jar.\n\tboolean isIncludeLayerTools();\n\tvoid setConfiguration(File configuration);\n}", "des": "Layer configuration options."}
{"index": 10378, "repo": "spring-xml-4.0.5", "code": "public class CommonsXsdSchema extends Object implements XsdSchema {\n\t// Creates a XmlValidator based on the schema.\n\tXmlValidator createValidator();\n\tQName[] getElementNames();\n\t// Returns the wrapped Commons XmlSchema object.\n\torg.apache.ws.commons.schema.XmlSchema getSchema();\n\t// Returns the Source of the schema.\n\tSource getSource();\n\t// Returns the target namespace of this schema.\n\tString getTargetNamespace();\n}", "des": "Implementation of the XsdSchema interface that uses Apache WS-Commons XML Schema."}
{"index": 10379, "repo": "spring-xml-4.0.5", "code": "public abstract class JaxpVersion extends Object {\n\t// Gets the JAXP version.\n\tstatic int getJaxpVersion();\n\t// Convenience method to determine if the current JAXP version is at least 1.4 (packaged with JDK 1.6).\n\tstatic boolean isAtLeastJaxp14();\n}", "des": "Helper class used to find the current version of JAXP."}
{"index": 10380, "repo": "spring-xml-4.0.5", "code": "public abstract class SaxUtils extends Object {\n\t// Creates a SAX InputSource from the given resource.\n\tstatic InputSource createInputSource(org.springframework.core.io.Resource resource);\n\t// Retrieves the URL from the given resource as System ID.\n\tstatic String getSystemId(org.springframework.core.io.Resource resource);\n}", "des": "Convenient utility methods for dealing with SAX."}
{"index": 10381, "repo": "spring-xml-4.0.5", "code": "public abstract class SchemaLoaderUtils extends Object {\n\t// Retrieves the URL from the given resource as System ID.\n\tstatic String getSystemId(org.springframework.core.io.Resource resource);\n\t// Load schema from the given resource.\n\tstatic Schema loadSchema(org.springframework.core.io.Resource[] resources, String schemaLanguage);\n\t// Load schema from the given resource.\n\tstatic Schema loadSchema(org.springframework.core.io.Resource resource, String schemaLanguage);\n}", "des": "Convenient utility methods for loading of Schema objects, performing standard handling of input streams."}
{"index": 10382, "repo": "spring-xml-4.0.5", "code": "public class StringSource extends StreamSource {\n\t// Returns null.\n\tInputStream getInputStream();\n\tReader getReader();\n\t// Throws UnsupportedOperationException.\n\tvoid setInputStream(InputStream inputStream);\n\t// Throws UnsupportedOperationException.\n\tvoid setReader(Reader reader);\n}", "des": "Convenient subclass of StreamSource that reads from a StringReader."}
{"index": 10383, "repo": "spring-xml-4.0.5", "code": "public abstract class TraxUtils extends Object {\n\t// Performs the given callback operation on a Result.\n\tstatic void doWithResult(Result result, TraxUtils.ResultCallback callback);\n\t// Performs the given callback operation on a Source.\n\tstatic void doWithSource(Source source, TraxUtils.SourceCallback callback);\n\t// Returns the Document of the given DOMSource.\n\tstatic Document getDocument(DOMSource source);\n}", "des": "Convenient utility methods for dealing with TrAX."}
{"index": 10384, "repo": "spring-xml-4.0.5", "code": "public interface XmlValidator {\n\t// Validates the given Source, and returns an array of SAXParseExceptions as result.\n\tSAXParseException[] validate(Source source);\n\t// Validates the given Source and ValidationErrorHandler, and returns an array of SAXParseExceptions as result.\n\tSAXParseException[] validate(Source source, ValidationErrorHandler errorHandler);\n}", "des": "Simple processor that validates a given Source."}
{"index": 10385, "repo": "spring-xml-4.0.5", "code": "public abstract class XmlValidatorFactory extends Object {\n\t// Create a XmlValidator with the given schema resources and schema language type.\n\tstatic XmlValidator createValidator(org.springframework.core.io.Resource[] schemaResources, String schemaLanguage);\n\t// Create a XmlValidator with the given schema resource and schema language type.\n\tstatic XmlValidator createValidator(org.springframework.core.io.Resource schemaResource, String schemaLanguage);\n}", "des": "Factory for XmlValidator objects, being aware of JAXP 1.3 Validators, and JAXP 1.0 parsing capabilities."}
{"index": 10386, "repo": "spring-xml-4.0.5", "code": "public abstract class XPathExpressionFactory extends Object {\n\t// Create a compiled XPath expression using the given string.\n\tstatic XPathExpression createXPathExpression(String expression);\n\t// Create a compiled XPath expression using the given string and namespaces.\n\tstatic XPathExpression createXPathExpression(String expression, Map<String,String> namespaces);\n}", "des": "Factory for compiled XPathExpressions, being aware of JAXP 1.3+ XPath functionality, and Jaxen."}
{"index": 10387, "repo": "spring-xml-4.0.5", "code": "public class XPathExpressionFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<XPathExpression>, org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\tXPathExpression getObject();\n\tClass<? extends XPathExpression> getObjectType();\n\tboolean isSingleton();\n\t// Sets the XPath expression.\n\tvoid setExpression(String expression);\n\t// Sets the namespaces for the expressions.\n\tvoid setNamespaces(Map<String,String> namespaces);\n}", "des": "Spring FactoryBean for XPathExpression object."}
{"index": 10388, "repo": "spring-xml-4.0.5", "code": "public interface XsdSchema {\n\t// Creates a XmlValidator based on the schema.\n\tXmlValidator createValidator();\n\t// Returns the Source of the schema.\n\tSource getSource();\n\t// Returns the target namespace of this schema.\n\tString getTargetNamespace();\n}", "des": "Represents an abstraction for XSD schemas."}
{"index": 10389, "repo": "spring-xml-4.0.5", "code": "public interface XsdSchemaCollection {\n\t// Creates a XmlValidator based on the schemas contained in this collection.\n\tXmlValidator createValidator();\n\t// Returns all schemas contained in this collection.\n\tXsdSchema[] getXsdSchemas();\n}", "des": "Represents an abstraction for a collection of XSD schemas."}
{"index": 10390, "repo": "groovy-4.0.13", "code": "public abstract class AbstractReaderSource extends Object implements ReaderSource {\n\t// Returns true if the source can be restarted (i.e.\n\tboolean canReopenSource();\n\t// Cleans up any cached resources used by getLine().\n\tvoid cleanup();\n\t// Returns a line from the source, or null, if unavailable.\n\tString getLine(int lineNumber, Janitor janitor);\n}", "des": "For ReaderSources that can choose a parent class, a base that provides common functionality."}
{"index": 10391, "repo": "groovy-4.0.13", "code": "public interface AdaptingMetaClass extends MetaClass {\n\t// Returns the MetaClass that this adapter adapts\n\tMetaClass getAdaptee();\n\t// Sets the MetaClass adapted by this MetaClass\n\tvoid setAdaptee(MetaClass metaClass);\n}", "des": "An interface for MetaClass instances that \"adapt\" other MetaClass instances such as a proxy or delegating MetaClass."}
{"index": 10392, "repo": "groovy-4.0.13", "code": "public class ArrayTypeUtils extends Object {\n\t// Calculate the dimension of array\n\tstatic int dimension(Class clazz);\n\t// Calculate the dimension of array\n\tstatic int dimension(ClassNode clazz);\n\t// Get the type of array elements\n\tstatic Class elementType(Class clazz);\n\t// Get the type of array elements by the dimension\n\tstatic Class elementType(Class clazz, int dim);\n\t// Get the type of array elements\n\tstatic ClassNode elementType(ClassNode clazz);\n}", "des": "Utilities for handling array types"}
{"index": 10393, "repo": "groovy-4.0.13", "code": "public class AstStringCompiler extends Object {\n\t// Compiles the specified source code and returns its statement block and any declared types.\n\tList<ASTNode> compile(String script);\n\t// Compiles the specified source code and returns its statement block, the script class (if desired) and any declared types.\n\tList<ASTNode> compile(String script, CompilePhase compilePhase, boolean statementsOnly);\n}", "des": "This class handles converting Strings to ASTNode lists."}
{"index": 10394, "repo": "groovy-4.0.13", "code": "public enum AutoCloneStyle extends Enum<AutoCloneStyle> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AutoCloneStyle valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AutoCloneStyle[] values();\n}", "des": "Intended style to use for cloning when using the @AutoClone annotation."}
{"index": 10395, "repo": "groovy-4.0.13", "code": "public class BooleanClosureWrapper extends Object {\n\t// normal closure call\n\tboolean call(Object... args);\n\t// Bridge for a call based on a map entry.\n\t<K, V> boolean callForMap(Map.Entry<K,V> entry);\n}", "des": "Helper class for internal use only."}
{"index": 10396, "repo": "groovy-4.0.13", "code": "public class BytecodeSequence extends Statement {\n\t// Returns the singular BytecodeInstruction.\n\tBytecodeInstruction getBytecodeInstruction();\n\tList<?> getInstructions();\n\t// Delegates to the visit method used for this class.\n\tvoid visit(GroovyCodeVisitor visitor);\n}", "des": "This class represents a sequence of BytecodeInstructions or ASTNodes."}
{"index": 10397, "repo": "groovy-4.0.13", "code": "public class ClassFinder extends Object {\n\t// Returns the found classes\n\tstatic Map<String,Set<String>> find(URI classpathEntryURI, String packageName);\n\t// Returns the found classes\n\tstatic Map<String,Set<String>> find(URI classpathEntryURI, String packageName, boolean recursive);\n}", "des": "Find classes under the specified package via some classpath entry Usage:"}
{"index": 10398, "repo": "groovy-4.0.13", "code": "public static class ClassNodeResolver.LookupResult extends Object {\n\t// returns the ClassNode\n\tClassNode getClassNode();\n\t// returns the SourceUnit\n\tSourceUnit getSourceUnit();\n\t// returns true if a ClassNode is stored\n\tboolean isClassNode();\n\t// returns true if a SourceUnit is stored\n\tboolean isSourceUnit();\n}", "des": "Helper class to return either a SourceUnit or ClassNode."}
{"index": 10399, "repo": "groovy-4.0.13", "code": "public interface ClosureInvokingMethod {\n\t// Returns the original closure that this method invokes\n\tClosure getClosure();\n\t// The method name\n\tString getName();\n\t// Is it a static method?\n\tboolean isStatic();\n}", "des": "An interface for MetaMethods that invoke closures to implements."}
{"index": 10400, "repo": "groovy-4.0.13", "code": "public enum CompilePhase extends Enum<CompilePhase> {\n\t// Returns the CompilePhase for the given integer phase number.\n\tstatic CompilePhase fromPhaseNumber(int phaseNumber);\n\t// Returns the underlying integer Phase number.\n\tint getPhaseNumber();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CompilePhase valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CompilePhase[] values();\n}", "des": "The phases of the GroovyCompiler."}
{"index": 10401, "repo": "groovy-4.0.13", "code": "public class Compiler extends Object {\n\t// Compiles a single File.\n\tvoid compile(File file);\n\t// Compiles a series of Files.\n\tvoid compile(File[] files);\n\t// Compiles a series of Files from file names.\n\tvoid compile(String[] files);\n\t// Compiles a string of code.\n\tvoid compile(String name, String code);\n}", "des": "A convenience front end for getting standard compilations done."}
{"index": 10402, "repo": "groovy-4.0.13", "code": "public static enum ConcurrentReferenceHashMap.Option extends Enum<ConcurrentReferenceHashMap.Option> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ConcurrentReferenceHashMap.Option valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ConcurrentReferenceHashMap.Option[] values();\n}", "des": "Behavior-changing configuration options for the map"}
{"index": 10403, "repo": "groovy-4.0.13", "code": "public static enum ConcurrentReferenceHashMap.ReferenceType extends Enum<ConcurrentReferenceHashMap.ReferenceType> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ConcurrentReferenceHashMap.ReferenceType valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ConcurrentReferenceHashMap.ReferenceType[] values();\n}", "des": "An option specifying which Java reference type should be used to refer to a key and/or value."}
{"index": 10404, "repo": "groovy-4.0.13", "code": "public class ConfigurationException extends RuntimeException implements GroovyExceptionInterface {\n\t// Returns the causing exception, if available.\n\tThrowable getCause();\n\t// It's always fatal.\n\tboolean isFatal();\n\t// Set fatal is just ignored.\n\tvoid setFatal(boolean fatal);\n}", "des": "Thrown when configuration data is invalid."}
{"index": 10405, "repo": "groovy-4.0.13", "code": "public class ConvertedMap extends ConversionHandler {\n\tprotected boolean checkMethod(Method method);\n\t// This method is called for all Methods not defined on Object.\n\tObject invokeCustom(Object proxy, Method method, Object[] args);\n\t// Checks whether a method is a core method from java.lang.Object.\n\tstatic boolean isCoreObjectMethod(Method method);\n}", "des": "This class is a general adapter to adapt a map of closures to any Java interface."}
{"index": 10406, "repo": "groovy-4.0.13", "code": "public enum DefaultsMode extends Enum<DefaultsMode> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DefaultsMode valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DefaultsMode[] values();\n}", "des": "Intended mode to use when generating constructors to emulate default parameter values when using the TupleConstructor annotation."}
{"index": 10407, "repo": "groovy-4.0.13", "code": "public abstract class DelegatingScript extends Script {\n\tObject getDelegate();\n\t// Retrieves a property value.\n\tObject getProperty(String property);\n\t// Invoke a method (or closure in the binding) defined.\n\tObject invokeMethod(String name, Object args);\n\t// Sets the delegation target.\n\tvoid setDelegate(Object delegate);\n\t// Sets the given property to the new value.\n\tvoid setProperty(String property, Object newValue);\n}", "des": "Script that performs method invocations and property access like Closure does."}
{"index": 10408, "repo": "groovy-4.0.13", "code": "public class DoWhileStatement extends Statement implements LoopingStatement {\n\tBooleanExpression getBooleanExpression();\n\t// Gets the loop block.\n\tStatement getLoopBlock();\n\tvoid setBooleanExpression(BooleanExpression booleanExpression);\n\t// Sets the loop block.\n\tvoid setLoopBlock(Statement loopBlock);\n\tvoid visit(GroovyCodeVisitor visitor);\n}", "des": "Represents a do { ..."}
{"index": 10409, "repo": "groovy-4.0.13", "code": "public class EncodingAwareBufferedWriter extends BufferedWriter {\n\t// The encoding as returned by the underlying OutputStreamWriter.\n\tString getEncoding();\n\t// The encoding as returned by the underlying OutputStreamWriter.\n\tString getNormalizedEncoding();\n}", "des": "A buffered writer only for OutputStreamWriter that is aware of the encoding of the OutputStreamWriter."}
{"index": 10410, "repo": "groovy-4.0.13", "code": "public interface EvictableCache<K,V> extends MemoizeCache<K,V>, Map<K,V> {\n\t// Clear the cache\n\tdefault void clear();\n\t// Clear the cache\n\tMap<K,V> clearAll();\n\t// Determines if the cache contains an entry for the specified key.\n\tboolean containsKey(Object key);\n\t// Get all keys associated to cached values\n\tSet<K> keys();\n\t// Remove the cached value by the key\n\tV remove(Object key);\n\t// Get the size of the cache\n\tint size();\n\t// Get all cached values\n\tCollection<V> values();\n}", "des": "Represents an evictable memoize cache with its essential methods"}
{"index": 10411, "repo": "groovy-4.0.13", "code": "public static enum EvictableCache.EvictionStrategy extends Enum<EvictableCache.EvictionStrategy> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic EvictableCache.EvictionStrategy valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic EvictableCache.EvictionStrategy[] values();\n}", "des": "Represents an eviction strategy for the cache with limited size"}
{"index": 10412, "repo": "groovy-4.0.13", "code": "public class ExceptionMessage extends Message {\n\t// Returns the underlying Exception.\n\tException getCause();\n\t// Writes out a nicely formatted summary of the exception.\n\tvoid write(PrintWriter output, Janitor janitor);\n}", "des": "A class for error messages produced by the parser system."}
{"index": 10413, "repo": "groovy-4.0.13", "code": "public class FileReaderSource extends AbstractReaderSource {\n\tFile getFile();\n\t// Returns a new Reader on the underlying source object.\n\tReader getReader();\n\t// Returns a URI for the file of this source.\n\tURI getURI();\n}", "des": "A ReaderSource for source files."}
{"index": 10414, "repo": "groovy-4.0.13", "code": "public enum FileType extends Enum<FileType> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic FileType valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic FileType[] values();\n}", "des": "Represents particular files of interest."}
{"index": 10415, "repo": "groovy-4.0.13", "code": "public enum FileVisitResult extends Enum<FileVisitResult> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic FileVisitResult valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic FileVisitResult[] values();\n}", "des": "Represents special return values for the 'preDir', 'postDir' and 'visit'/supplied Closures used with ResourceGroovyMethods.traverse(java.io.File, java.util.Map, groovy.lang.Closure) and related methods to control subsequent traversal behavior."}
{"index": 10416, "repo": "groovy-4.0.13", "code": "public class ForStatement extends Statement implements LoopingStatement {\n\tExpression getCollectionExpression();\n\t// Gets the loop block.\n\tStatement getLoopBlock();\n\tParameter getVariable();\n\tVariableScope getVariableScope();\n\tClassNode getVariableType();\n\tvoid setCollectionExpression(Expression collectionExpression);\n\t// Sets the loop block.\n\tvoid setLoopBlock(Statement loopBlock);\n\tvoid setVariableScope(VariableScope variableScope);\n\tvoid visit(GroovyCodeVisitor visitor);\n}", "des": "Represents a standard for loop in Groovy"}
{"index": 10417, "repo": "groovy-4.0.13", "code": "public class GrabAnnotationTransformation extends ClassCodeVisitorSupport implements ASTTransformation, CompilationUnitAware {\n\tSourceUnit getSourceUnit();\n\tvoid setCompilationUnit(CompilationUnit compilationUnit);\n\t// The method is invoked when an AST Transformation is active.\n\tvoid visit(ASTNode[] nodes, SourceUnit source);\n\t// Adds the annotation to the internal target list if a match is found.\n\tvoid visitAnnotations(AnnotatedNode node);\n}", "des": "Transformation for declarative dependency management."}
{"index": 10418, "repo": "groovy-4.0.13", "code": "public class GroovyBugError extends AssertionError {\n\t// Returns the bug text to describe this error\n\tString getBugText();\n\tThrowable getCause();\n\t// Returns the detail message string of this error.\n\tString getMessage();\n\t// Sets the bug text to describe this error\n\tvoid setBugText(String msg);\n}", "des": "This class represents an error that is thrown when a bug is recognized inside the runtime."}
{"index": 10419, "repo": "groovy-4.0.13", "code": "public interface GroovyClassVisitor {\n\t// Visit a ClassNode.\n\tvoid visitClass(ClassNode node);\n\t// Visit a ConstructorNode.\n\tvoid visitConstructor(ConstructorNode node);\n\t// Visit a FieldNode.\n\tvoid visitField(FieldNode node);\n\t// Visit a MethodNode.\n\tvoid visitMethod(MethodNode node);\n\t// Visit a PropertyNode.\n\tvoid visitProperty(PropertyNode node);\n}", "des": "A special visitor for working with the structure of a class."}
{"index": 10420, "repo": "groovy-4.0.13", "code": "public class Groovydoc extends Object {\n\tboolean equals(Object o);\n\t// Get the content of groovydoc\n\tString getContent();\n\t// Get the holder of the groovydoc\n\tGroovydocHolder getHolder();\n\t// TODO Get list of groovydoc tags\n\tList<GroovydocTag> getTagList();\n\t// Tests if groovydoc is present\n\tboolean isPresent();\n}", "des": "Represents groovydoc"}
{"index": 10421, "repo": "groovy-4.0.13", "code": "public interface GroovydocHolder<T> {\n\t// Get the groovydoc\n\tGroovydoc getGroovydoc();\n\t// Get GroovydocHolder instance\n\tT getInstance();\n}", "des": "Represents Groovydoc Holder"}
{"index": 10422, "repo": "groovy-4.0.13", "code": "public interface GroovyObject {\n\t// Returns the metaclass for a given class.\n\tMetaClass getMetaClass();\n\t// Retrieves a property value.\n\tdefault Object getProperty(String propertyName);\n\t// Invokes the given method.\n\tdefault Object invokeMethod(String name, Object args);\n\t// Allows the MetaClass to be replaced with a derived implementation.\n\tvoid setMetaClass(MetaClass metaClass);\n\t// Sets the given property to the new value.\n\tdefault void setProperty(String propertyName, Object newValue);\n}", "des": "The interface implemented by all Groovy objects."}
{"index": 10423, "repo": "groovy-4.0.13", "code": "public abstract class GroovyObjectSupport extends Object implements GroovyObject {\n\t// Returns the metaclass for a given class.\n\tMetaClass getMetaClass();\n\t// Allows the MetaClass to be replaced with a derived implementation.\n\tvoid setMetaClass(MetaClass metaClass);\n}", "des": "Base class for Java objects wishing to be Groovy objects."}
{"index": 10424, "repo": "groovy-4.0.13", "code": "public class GroovyPrintStream extends PrintStream {\n\t// Prints an object Groovy style.\n\tvoid print(Object obj);\n\t// Prints an object Groovy style followed by a newline.\n\tvoid println(Object obj);\n}", "des": "A PrintStream that outputs objects in Groovy style."}
{"index": 10425, "repo": "groovy-4.0.13", "code": "public interface GroovyRunner {\n\t// Returns true if this runner is able to run the given class.\n\tboolean canRun(Class<?> scriptClass, GroovyClassLoader loader);\n\t// Runs the given class.\n\tObject run(Class<?> scriptClass, GroovyClassLoader loader);\n}", "des": "Classes which can run scripts should implement this interface."}
{"index": 10426, "repo": "groovy-4.0.13", "code": "public abstract static class GroovyTypeCheckingExtensionSupport.TypeCheckingDSL extends Script {\n\t// Retrieves a property value.\n\tObject getProperty(String property);\n\t// Invoke a method (or closure in the binding) defined.\n\tObject invokeMethod(String name, Object args);\n\t// Sets the given property to the new value.\n\tvoid setProperty(String property, Object newValue);\n}", "des": "Event handler registration: setup Registers closure that runs after the type checker finishes initialization finish Registers closure that runs after the type checker completes type checking beforeVisitClass Registers closure that runs before type checking a class afterVisitClass Registers closure that runs after having finished the visit of a type checked class beforeVisitMethod Registers closure that runs before type checking a method body afterVisitMethod Registers closure that runs after type checking a method body beforeMethodCall Registers closure that runs before the type checker starts type checking a method call afterMethodCall Registers closure that runs once the type checker has finished type checking a method call methodNotFound Registers closure that runs when it fails to find an appropriate method for a method call ambiguousMethods Registers closure that runs when the type checker cannot choose between several candidate methods onMethodSelection Registers closure that runs when it finds a method appropriate for a method call unresolvedVariable Registers closure that runs when the type checker finds an unresolved variable unresolvedProperty Registers closure that runs when the type checker cannot find a property on the receiver unresolvedAttribute Registers closure that runs when the type checker cannot find an attribute on the receiver incompatibleAssignment Registers closure that runs when the type checker thinks that the right-hand side of an assignment is incompatible with the left-hand side incompatibleReturnType Registers closure that runs when the type checker thinks that a return value is incompatibe with the return type Expression categorization: isAnnotationConstantExpression Determines if argument is an AnnotationConstantExpression isArgumentListExpression Determines if argument is an ArgumentListExpression isArrayExpression Determines if argument is an ArrayExpression isAttributeExpression Determines if argument is an AttributeExpression isBinaryExpression Determines if argument is a BinaryExpression isBitwiseNegationExpression Determines if argument is a BitwiseNegationExpression isBooleanExpression Determines if argument is a BooleanExpression isCastExpression Determines if argument is a CastExpression isClassExpression Determines if argument is a ClassExpression isClosureExpression Determines if argument is a ClosureExpression isConstantExpression Determines if argument is a ConstantExpression isConstructorCallExpression Determines if argument is a ConstructorCallExpression isDeclarationExpression Determines if argument is a DeclarationExpression isElvisOperatorExpression Determines if argument is an ElvisOperatorExpression isEmptyExpression Determines if argument is an EmptyExpression isFieldExpression Determines if argument is a FieldExpression isGStringExpression Determines if argument is a GStringExpression isLambdaExpression Determines if argument is a LambdaExpression isListExpression Determines if argument is a ListExpression isMapExpression Determines if argument is a MapExpression isMapEntryExpression Determines if argument is a MapEntryExpression isMethodCallExpression Determines if argument is a MethodCallExpression isMethodPointerExpression Determines if argument is a MethodPointerExpression isMethodReferenceExpression Determines if argument is a MethodReferenceExpression isNamedArgumentListExpression Determines if argument is a NamedArgumentListExpression isNotExpression Determines if argument is a NotExpression isPostfixExpression Determines if argument is a PostfixExpression isPrefixExpression Determines if argument is a PrefixExpression isPropertyExpression Determines if argument is a PropertyExpression isRangeExpression Determines if argument is a RangeExpression isSpreadExpression Determines if argument is a SpreadExpression isSpreadMapExpression Determines if argument is a SpreadMapExpression isStaticMethodCallExpression Determines if argument is a StaticMethodCallExpression isTernaryExpression Determines if argument is a TernaryExpression isTupleExpression Determines if argument is a TupleExpression isUnaryMinusExpression Determines if argument is a UnaryMinusExpression isUnaryPlusExpression Determines if argument is a UnaryPlusExpression isVariableExpression Determines if argument is a VariableExpression General utility: Delegates to AbstractTypeCheckingExtension Imports static members of ClassHelper Imports static members of StaticTypeCheckingSupport"}
{"index": 10427, "repo": "groovy-4.0.13", "code": "public class ImportCustomizerFactory extends AbstractFactory {\n\t// Does this factory \"Own\" its child closure.\n\tboolean isHandlesNodeChildren();\n\tObject newInstance(FactoryBuilderSupport builder, Object name, Object value, Map attributes);\n\t// Only called if it isLeaf is false and isHandlesNodeChildren is true\n\tboolean onNodeChildren(FactoryBuilderSupport builder, Object node, Closure childContent);\n}", "des": "This factory allows the generation of an import customizer."}
{"index": 10428, "repo": "groovy-4.0.13", "code": "public static enum IndyInterface.CallType extends Enum<IndyInterface.CallType> {\n\tstatic IndyInterface.CallType fromCallSiteName(String callSiteName);\n\t// Returns the name of the call site type\n\tString getCallSiteName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic IndyInterface.CallType valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic IndyInterface.CallType[] values();\n}", "des": "Enum for easy differentiation between call types"}
{"index": 10429, "repo": "groovy-4.0.13", "code": "public static enum IndyInterface.CallType extends Enum<IndyInterface.CallType> {\n\tstatic IndyInterface.CallType fromCallSiteName(String callSiteName);\n\t// Returns the name of the call site type\n\tString getCallSiteName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic IndyInterface.CallType valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic IndyInterface.CallType[] values();\n}", "des": "Enum for easy differentiation between call types"}
{"index": 10430, "repo": "groovy-4.0.13", "code": "public class InputStreamReaderSource extends AbstractReaderSource {\n\t// Returns true if the source can be restarted (ie.\n\tboolean canReopenSource();\n\t// Returns a new Reader on the underlying source object.\n\tReader getReader();\n\t// TODO: Should return the URI for this source, but we can't know what it is here.\n\tURI getURI();\n}", "des": "A ReaderSource for source strings."}
{"index": 10431, "repo": "groovy-4.0.13", "code": "public interface Interceptor {\n\t// This code is executed after the method is optionally called.\n\tObject afterInvoke(Object object, String methodName, Object[] arguments, Object result);\n\t// This code is executed before the method is optionally called.\n\tObject beforeInvoke(Object object, String methodName, Object[] arguments);\n\tboolean doInvoke();\n}", "des": "Implementers of this interface can be registered in the ProxyMetaClass for notifications about method calls for objects managed by the ProxyMetaClass."}
{"index": 10432, "repo": "groovy-4.0.13", "code": "public class IteratorClosureAdapter<T> extends Closure {\n\tList<T> asList();\n\tprotected Object doCall(T argument);\n\t// Returns the metaclass for a given class.\n\tMetaClass getMetaClass();\n\t// Allows the MetaClass to be replaced with a derived implementation.\n\tvoid setMetaClass(MetaClass metaClass);\n}", "des": "A closure which stores calls in a List so that method calls can be iterated over in a 'yield' style way"}
{"index": 10433, "repo": "groovy-4.0.13", "code": "public class Java16 extends Java10 {\n\t// Returns a handle with bound receiver to invokeSpecial the given method.\n\tObject getInvokeSpecialHandle(Method method, Object receiver);\n\t// Gives the version the plugin is made for\n\tint getVersion();\n\t// Invokes a handle produced by #getInvokeSpecialdHandle\n\tObject invokeHandle(Object handle, Object[] args);\n\tprotected void makeRecordComponents(CompileUnit cu, ClassNode classNode, Class<?> clazz);\n\tprotected MethodHandles.Lookup newLookup(Class<?> declaringClass);\n}", "des": "Additional Java 16 based functions will be added here as needed."}
{"index": 10434, "repo": "groovy-4.0.13", "code": "public class JavaStubCompilationUnit extends CompilationUnit {\n\t// Adds a source file to the unit.\n\tSourceUnit addSource(File file);\n\t// Adds a source file to the unit.\n\tSourceUnit addSource(URL url);\n\t// Synonym for compile(Phases.ALL).\n\tvoid compile();\n\t// Configures its debugging mode and classloader classpath from a given compiler configuration.\n\tvoid configure(CompilerConfiguration config);\n\tint getStubCount();\n}", "des": "Compilation unit to only generate stubs."}
{"index": 10435, "repo": "groovy-4.0.13", "code": "public interface LazyInitializable {\n\t// do initialization\n\tvoid doInit();\n\t// Check if the object is initialized.\n\tboolean isInitialized();\n\tdefault void lazyInit();\n\t// Mark the object initialized.\n\tvoid setInitialized(boolean initialized);\n}", "des": "A LazyInitializable is an object that can be initialized lazily."}
{"index": 10436, "repo": "groovy-4.0.13", "code": "public interface LoopingStatement {\n\t// Gets the loop block.\n\tStatement getLoopBlock();\n\t// Sets the loop block.\n\tvoid setLoopBlock(Statement loopBlock);\n}", "des": "This is an AST Node that provides some sort of looping mechanism."}
{"index": 10437, "repo": "groovy-4.0.13", "code": "@ThreadSafe public final class LRUCache<K,V> extends Object implements MemoizeCache<K,V> {\n\t// Remove all entries holding SoftReferences to gc-evicted objects.\n\tvoid cleanUpNullReferences();\n\t// Gets a value from the cache\n\tV get(K key);\n\t// Try to get the value from cache.\n\tV getAndPut(K key, MemoizeCache.ValueProvider<? super K,? extends V> valueProvider);\n\t// Associates the specified value with the specified key in the cache.\n\tV put(K key, V value);\n}", "des": "A cache backed by a ConcurrentLinkedHashMap"}
{"index": 10438, "repo": "groovy-4.0.13", "code": "public class ManagedConcurrentValueMap<K,V> extends Object {\n\t// Returns the value stored for the given key at the point of call.\n\tV get(K key);\n\t// Sets a new value for a given key.\n\tvoid put(K key, V value);\n\t// Sets a new bundle used for reference creation.\n\tvoid setBundle(ReferenceBundle bundle);\n}", "des": "This is a basic implementation of a map able to forget its values."}
{"index": 10439, "repo": "groovy-4.0.13", "code": "public class MapConstructorASTTransformation extends AbstractASTTransformation implements CompilationUnitAware {\n\t// If the transform is associated with a single annotation, returns a name suitable for displaying in error messages.\n\tString getAnnotationName();\n\tvoid setCompilationUnit(CompilationUnit unit);\n\t// The method is invoked when an AST Transformation is active.\n\tvoid visit(ASTNode[] nodes, SourceUnit source);\n}", "des": "Handles generation of code for the @MapConstructor annotation."}
{"index": 10440, "repo": "groovy-4.0.13", "code": "public interface MemoizeCache<K,V> {\n\t// Invoked when some of the held SoftReferences have been evicted by the garbage collector and so should be removed from the cache.\n\tvoid cleanUpNullReferences();\n\t// Gets a value from the cache\n\tV get(K key);\n\t// Try to get the value from cache.\n\tdefault V getAndPut(K key, MemoizeCache.ValueProvider<? super K,? extends V> valueProvider);\n\t// Associates the specified value with the specified key in the cache.\n\tV put(K key, V value);\n}", "des": "Represents a memoize cache with its essential methods"}
{"index": 10441, "repo": "groovy-4.0.13", "code": "public class MessageSource extends GroovyObjectSupport {\n\t// Format a message (based on MessageFormat) using the message from the resource bundles using the given code as a pattern and the given objects as arguments.\n\tString format(String code, Object[] args);\n\t// Get a raw message from the resource bundles using the given code.\n\tString getMessage(String code);\n\t// Retrieves a property value.\n\tObject getProperty(String name);\n}", "des": "Message source backed up by one or more ResourceBundle instances for simple i18n support."}
{"index": 10442, "repo": "groovy-4.0.13", "code": "public class MetaArrayLengthProperty extends MetaProperty {\n\t// Get this property from the given object.\n\tObject getProperty(Object object);\n\t// Sets the property on the given object to the new value\n\tvoid setProperty(Object object, Object newValue);\n}", "des": "Represents the length property of an array"}
{"index": 10443, "repo": "groovy-4.0.13", "code": "public class MixinInstanceMetaMethod extends MetaMethod {\n\t// Gets the class where this method is declared\n\tCachedClass getDeclaringClass();\n\t// Returns the modifiers for this method\n\tint getModifiers();\n\t// Returns the name of the method represented by this class\n\tString getName();\n\tprotected Class[] getPT();\n\t// Access the return type for this method\n\tClass getReturnType();\n\t// Invoke this method\n\tObject invoke(Object object, Object[] arguments);\n}", "des": "MetaMethod for mixed in classes"}
{"index": 10444, "repo": "groovy-4.0.13", "code": "public class NewifyASTTransformation extends ClassCodeExpressionTransformer implements ASTTransformation {\n\tstatic String extractName(String s);\n\tprotected SourceUnit getSourceUnit();\n\t// NOTE: This method does not visit Expressions within Closures, for performance and historical reasons.\n\tExpression transform(Expression expr);\n\t// The method is invoked when an AST Transformation is active.\n\tvoid visit(ASTNode[] nodes, SourceUnit source);\n}", "des": "Handles generation of code for the @Newify AST transform."}
{"index": 10445, "repo": "groovy-4.0.13", "code": "public class NewInstanceMetaMethod extends NewMetaMethod {\n\t// Returns the modifiers for this method\n\tint getModifiers();\n\t// Invoke this method\n\tObject invoke(Object object, Object[] arguments);\n\t// Returns whether this method is static.\n\tboolean isStatic();\n}", "des": "A MetaMethod implementation where the underlying method is really a static helper method on some class but it appears to be an instance method on a class."}
{"index": 10446, "repo": "groovy-4.0.13", "code": "public class NewStaticMetaMethod extends NewMetaMethod {\n\t// Returns the modifiers for this method\n\tint getModifiers();\n\t// Invoke this method\n\tObject invoke(Object object, Object[] arguments);\n\t// Returns whether this method is static.\n\tboolean isStatic();\n}", "des": "A MetaMethod implementation where the underlying method is really a static helper method on some class."}
{"index": 10447, "repo": "groovy-4.0.13", "code": "public class NullCheckASTTransformation extends AbstractASTTransformation {\n\tstatic boolean hasIncludeGenerated(ClassNode cNode);\n\tstatic ThrowStatement makeThrowStmt(String variableName);\n\t// Mark a method as already processed.\n\tstatic void markAsProcessed(MethodNode mn);\n\t// The method is invoked when an AST Transformation is active.\n\tvoid visit(ASTNode[] nodes, SourceUnit source);\n}", "des": "Handles generation of code for the @NullCheck annotation."}
{"index": 10448, "repo": "groovy-4.0.13", "code": "public static class ObjectGraphBuilder.DefaultRelationNameResolver extends Object implements ObjectGraphBuilder.RelationNameResolver {\n\t// Handles the common English regular plurals with the following rules.\n\tString resolveChildRelationName(String parentName, Object parent, String childName, Object child);\n\t// Follow the most conventional pattern, returns the parentName unchanged.\n\tString resolveParentRelationName(String parentName, Object parent, String childName, Object child);\n}", "des": "Default impl that returns parentName and childName accordingly."}
{"index": 10449, "repo": "groovy-4.0.13", "code": "public static interface ObjectGraphBuilder.RelationNameResolver {\n\t// Returns the mapping name of child -> parent\n\tString resolveChildRelationName(String parentName, Object parent, String childName, Object child);\n\t// Returns the mapping name of parent -> child\n\tString resolveParentRelationName(String parentName, Object parent, String childName, Object child);\n}", "des": "Strategy for resolving a relationship property name."}
{"index": 10450, "repo": "groovy-4.0.13", "code": "public class ObjectUtil extends Object {\n\t// Clone the specified object\n\tstatic <T> T cloneObject(T object);\n\t// Returns the method handle of cloneObject(Object)\n\tstatic MethodHandle getCloneObjectMethodHandle();\n}", "des": "Util for object's operations with checks"}
{"index": 10451, "repo": "groovy-4.0.13", "code": "public enum PackageScopeTarget extends Enum<PackageScopeTarget> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic PackageScopeTarget valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic PackageScopeTarget[] values();\n}", "des": "Intended target when @PackageScope is placed at the class level."}
{"index": 10452, "repo": "groovy-4.0.13", "code": "public abstract class ParserPluginFactory extends Object {\n\t// Deprecated.\n\tstatic ParserPluginFactory antlr2();\n\t// Creates the ANTLR 4 parser.\n\tstatic ParserPluginFactory antlr4();\n\tabstract ParserPlugin createParserPlugin();\n}", "des": "A factory of parser plugin instances."}
{"index": 10453, "repo": "groovy-4.0.13", "code": "public interface PropertyAccessInterceptor extends Interceptor {\n\t// Intercepts a getXXX call and returns a result.\n\tObject beforeGet(Object object, String property);\n\t// Intercepts a setXXX call\n\tvoid beforeSet(Object object, String property, Object newValue);\n}", "des": "An interface that adds the ability to intercept property getters/setters"}
{"index": 10454, "repo": "groovy-4.0.13", "code": "public class Proxy extends GroovyObjectSupport {\n\tObject getAdaptee();\n\t// Invokes the given method.\n\tObject invokeMethod(String name, Object args);\n\tIterator iterator();\n\tvoid setAdaptee(Object adaptee);\n\t// This method is for convenience.\n\tProxy wrap(Object adaptee);\n}", "des": "Dynamic groovy proxy for another object."}
{"index": 10455, "repo": "groovy-4.0.13", "code": "public interface ReaderSource extends HasCleanup {\n\t// Returns true if the source can be restarted (ie.\n\tboolean canReopenSource();\n\t// Cleans up any cached resources used by getLine().\n\tvoid cleanup();\n\t// Returns a line from the source, or null, if unavailable.\n\tString getLine(int lineNumber, Janitor janitor);\n\t// Returns a new Reader on the underlying source object.\n\tReader getReader();\n\t// Returns a URI for this source.\n\tURI getURI();\n}", "des": "An interface for things that can supply (and potentially resupply) a Reader on a source stream."}
{"index": 10456, "repo": "groovy-4.0.13", "code": "public class RecordCompletionASTTransformation extends AbstractASTTransformation {\n\t// If the transform is associated with a single annotation, returns a name suitable for displaying in error messages.\n\tString getAnnotationName();\n\t// The method is invoked when an AST Transformation is active.\n\tvoid visit(ASTNode[] nodes, SourceUnit source);\n}", "des": "Handles completion of code for the @RecordType annotation."}
{"index": 10457, "repo": "groovy-4.0.13", "code": "public enum RecordTypeMode extends Enum<RecordTypeMode> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic RecordTypeMode valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic RecordTypeMode[] values();\n}", "des": "Intended mode to use for records when using the @RecordType annotation (or record keyword)."}
{"index": 10458, "repo": "groovy-4.0.13", "code": "public class Reference<T> extends GroovyObjectSupport implements Serializable {\n\tT get();\n\t// Retrieves a property value.\n\tObject getProperty(String property);\n\t// Invokes the given method.\n\tObject invokeMethod(String name, Object args);\n\tvoid set(T value);\n\t// Sets the given property to the new value.\n\tvoid setProperty(String property, Object newValue);\n}", "des": "Represents a reference to a value"}
{"index": 10459, "repo": "groovy-4.0.13", "code": "public class ReflectorLoader extends ClassLoader {\n\t// helper method to define Reflector classes.\n\tClass defineClass(String name, byte[] bytecode, ProtectionDomain domain);\n\t// Tries to find a Groovy class.\n\tprotected Class findClass(String name);\n\t// try to load one of the defined Reflector classes by name.\n\tClass getLoadedClass(String name);\n\t// Loads a class per name.\n\tprotected Class loadClass(String name, boolean resolve);\n}", "des": "Reflector creation helper."}
{"index": 10460, "repo": "groovy-4.0.13", "code": "public class ReturnAdder extends Object {\n\t// Deprecated. Use visitMethod(MethodNode) instead.\n\tstatic void addReturnIfNeeded(MethodNode node);\n\t// Adds return statements to given method whenever an implicit return is detected.\n\tvoid visitMethod(MethodNode node);\n}", "des": "Utility class to add return statements."}
{"index": 10461, "repo": "groovy-4.0.13", "code": "public class ScriptRunner extends Object {\n\t// Run the script file specified by the file path\n\tstatic void runScript(File path);\n\t// Run the script file specified by the classpath\n\tstatic void runScript(String cp);\n}", "des": "The tool to simulate running script files via groovy command"}
{"index": 10462, "repo": "groovy-4.0.13", "code": "public class SealedASTTransformation extends AbstractASTTransformation {\n\t// Reports true if native sealed class information should be written into the bytecode.\n\tstatic boolean sealedNative(AnnotatedNode node);\n\t// Reports true if the Sealed annotation should not be included in the bytecode for a sealed or emulated-sealed class.\n\tstatic boolean sealedSkipAnnotation(AnnotatedNode node);\n\t// The method is invoked when an AST Transformation is active.\n\tvoid visit(ASTNode[] nodes, SourceUnit source);\n}", "des": "Handles generation of code for the @Sealed annotation."}
{"index": 10463, "repo": "groovy-4.0.13", "code": "public enum SealedMode extends Enum<SealedMode> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SealedMode valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SealedMode[] values();\n}", "des": "Intended mode to use for sealed classes when using the @Sealed annotation (or sealed keyword)."}
{"index": 10464, "repo": "groovy-4.0.13", "code": "public class SecureASTCustomizerFactory extends AbstractFactory {\n\t// Does this factory \"Own\" its child closure.\n\tboolean isHandlesNodeChildren();\n\tObject newInstance(FactoryBuilderSupport builder, Object name, Object value, Map attributes);\n\t// Only called if it isLeaf is false and isHandlesNodeChildren is true\n\tboolean onNodeChildren(FactoryBuilderSupport builder, Object node, Closure childContent);\n}", "des": "This factory allows the generation of a SecureASTCustomizer."}
{"index": 10465, "repo": "groovy-4.0.13", "code": "public class SourceText extends Object {\n\t// Returns the column in getNormalizedText() corresponding to the given line and column in the original source text.\n\tint getNormalizedColumn(int line, int column);\n\t// Returns the assertion's source text after removing line breaks.\n\tString getNormalizedText();\n}", "des": "Provides the source text for an assertion statement and translates coordinates in the original source text to coordinates relative to the assertion's (normalized) source text."}
{"index": 10466, "repo": "groovy-4.0.13", "code": "public enum StaticCompilationMetadataKeys extends Enum<StaticCompilationMetadataKeys> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic StaticCompilationMetadataKeys valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic StaticCompilationMetadataKeys[] values();\n}", "des": "Static compilation AST node metadata keys."}
{"index": 10467, "repo": "groovy-4.0.13", "code": "public class StaticCompileTransformation extends StaticTypesTransformation {\n\t// Allows subclasses to provide their own visitor.\n\tprotected StaticTypeCheckingVisitor newVisitor(SourceUnit unit, ClassNode node);\n\t// The method is invoked when an AST Transformation is active.\n\tvoid visit(ASTNode[] nodes, SourceUnit source);\n}", "des": "Handles the implementation of the CompileStatic transformation."}
{"index": 10468, "repo": "groovy-4.0.13", "code": "public enum StaticTypesMarker extends Enum<StaticTypesMarker> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic StaticTypesMarker valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic StaticTypesMarker[] values();\n}", "des": "This enumeration is used by the AST transformations which rely on static type checking, either to store or to retrieve information from AST node metadata."}
{"index": 10469, "repo": "groovy-4.0.13", "code": "public class StaticTypesTransformation extends Object implements ASTTransformation, CompilationUnitAware {\n\tprotected void addTypeCheckingExtensions(StaticTypeCheckingVisitor visitor, Expression extensions);\n\t// Allows subclasses to provide their own visitor.\n\tprotected StaticTypeCheckingVisitor newVisitor(SourceUnit unit, ClassNode node);\n\tvoid setCompilationUnit(CompilationUnit unit);\n\t// The method is invoked when an AST Transformation is active.\n\tvoid visit(ASTNode[] nodes, SourceUnit source);\n}", "des": "Handles the implementation of the TypeChecked transformation."}
{"index": 10470, "repo": "groovy-4.0.13", "code": "public class StringBufferWriter extends Writer {\n\t// Closing a StringWriter has no effect.\n\tvoid close();\n\t// Flush the stream.\n\tvoid flush();\n\t// Write a portion of an array of characters.\n\tvoid write(char[] text, int offset, int length);\n\t// Write a single character.\n\tvoid write(int c);\n\t// Write a string.\n\tvoid write(String text);\n\t// Write a portion of a string.\n\tvoid write(String text, int offset, int length);\n}", "des": "This class codes around a silly limitation of StringWriter which doesn't allow a StringBuffer to be passed in as a constructor for some bizarre reason."}
{"index": 10471, "repo": "groovy-4.0.13", "code": "public class StringReaderSource extends AbstractReaderSource {\n\t// Returns a new Reader on the underlying source object.\n\tReader getReader();\n\t// Returns a Data URI (RFC 2397) containing the literal value of this source string.\n\tURI getURI();\n}", "des": "A ReaderSource for source strings."}
{"index": 10472, "repo": "groovy-4.0.13", "code": "public class SyntaxErrorMessage extends Message {\n\t// Returns the underlying SyntaxException.\n\tSyntaxException getCause();\n\t// Writes out a nicely formatted summary of the syntax error.\n\tvoid write(PrintWriter output, Janitor janitor);\n}", "des": "A class for error messages produced by the parser system."}
{"index": 10473, "repo": "groovy-4.0.13", "code": "public class SyntaxException extends GroovyException {\n\tint getEndColumn();\n\tint getEndLine();\n\t// Retrieve the line upon which the error occurred.\n\tint getLine();\n\tString getMessage();\n\tString getOriginalMessage();\n\tString getSourceLocator();\n\t// Retrieve the column upon which the error occurred.\n\tint getStartColumn();\n\tint getStartLine();\n\tvoid setSourceLocator(String sourceLocator);\n}", "des": "Base exception indicating a syntax error."}
{"index": 10474, "repo": "groovy-4.0.13", "code": "public class ThreadManagedMetaBeanProperty extends MetaBeanProperty {\n\t// Get the getter method.\n\tMetaMethod getGetter();\n\t// Retrieves the initial value of the ThreadBound property\n\tObject getInitialValue();\n\tObject getInitialValue(Object object);\n\t// Get the setter method.\n\tMetaMethod getSetter();\n\t// Closure responsible for creating the initial value of thread-managed bean properties\n\tvoid setInitialValueCreator(Closure callable);\n}", "des": "This MetaBeanProperty will create a pseudo property whose value is bound to an object using weak references."}
{"index": 10475, "repo": "groovy-4.0.13", "code": "public class TraitTypeCheckingExtension extends AbstractTypeCheckingExtension {\n\t// This method is called by the type checker when a method call cannot be resolved.\n\tList<MethodNode> handleMissingMethod(ClassNode receiver, String name, ArgumentListExpression argumentList, ClassNode[] argumentTypes, MethodCall call);\n\t// Subclasses should implement this method whenever they need to perform special checks before the type checker starts working.\n\tvoid setup();\n}", "des": "A type checking extension that will take care of handling errors which are specific to traits."}
{"index": 10476, "repo": "groovy-4.0.13", "code": "public class TryWithResourcesASTTransformation extends Object {\n\t// Reference JLS \"14.20.3.\n\tStatement transform(TryCatchStatement tryCatchStatement);\n\t// See https://docs.oracle.com/javase/specs/jls/se9/html/jls-14.html 14.20.3.1.\n\tBinaryExpression transformResourceAccess(Expression variableAccessExpression);\n}", "des": "Transform try-with-resources to try-catch-finally Reference JLS \"14.20.3."}
{"index": 10477, "repo": "groovy-4.0.13", "code": "public final class Tuple2<T1,T2> extends Tuple {\n\tTuple2<T1,T2> clone();\n\t// Deprecated.\n\tT1 getFirst();\n\t// Deprecated.\n\tT2 getSecond();\n\tT1 getV1();\n\tT2 getV2();\n}", "des": "Represents a list of 2 typed Objects."}
{"index": 10478, "repo": "groovy-4.0.13", "code": "public final class Tuple3<T1,T2,T3> extends Tuple {\n\tTuple3<T1,T2,T3> clone();\n\t// Deprecated.\n\tT1 getFirst();\n\t// Deprecated.\n\tT2 getSecond();\n\t// Deprecated.\n\tT3 getThird();\n\tT1 getV1();\n\tT2 getV2();\n\tT3 getV3();\n}", "des": "Represents a list of 3 typed Objects."}
{"index": 10479, "repo": "groovy-4.0.13", "code": "public final class Tuple4<T1,T2,T3,T4> extends Tuple {\n\tTuple4<T1,T2,T3,T4> clone();\n\t// Deprecated.\n\tT1 getFirst();\n\t// Deprecated.\n\tT4 getFourth();\n\t// Deprecated.\n\tT2 getSecond();\n\t// Deprecated.\n\tT3 getThird();\n\tT1 getV1();\n\tT2 getV2();\n\tT3 getV3();\n\tT4 getV4();\n}", "des": "Represents a list of 4 typed Objects."}
{"index": 10480, "repo": "groovy-4.0.13", "code": "public final class Tuple5<T1,T2,T3,T4,T5> extends Tuple {\n\tTuple5<T1,T2,T3,T4,T5> clone();\n\t// Deprecated.\n\tT5 getFifth();\n\t// Deprecated.\n\tT1 getFirst();\n\t// Deprecated.\n\tT4 getFourth();\n\t// Deprecated.\n\tT2 getSecond();\n\t// Deprecated.\n\tT3 getThird();\n\tT1 getV1();\n\tT2 getV2();\n\tT3 getV3();\n\tT4 getV4();\n\tT5 getV5();\n}", "des": "Represents a list of 5 typed Objects."}
{"index": 10481, "repo": "groovy-4.0.13", "code": "public final class Tuple6<T1,T2,T3,T4,T5,T6> extends Tuple {\n\tTuple6<T1,T2,T3,T4,T5,T6> clone();\n\t// Deprecated.\n\tT5 getFifth();\n\t// Deprecated.\n\tT1 getFirst();\n\t// Deprecated.\n\tT4 getFourth();\n\t// Deprecated.\n\tT2 getSecond();\n\t// Deprecated.\n\tT6 getSixth();\n\t// Deprecated.\n\tT3 getThird();\n\tT1 getV1();\n\tT2 getV2();\n\tT3 getV3();\n\tT4 getV4();\n\tT5 getV5();\n\tT6 getV6();\n}", "des": "Represents a list of 6 typed Objects."}
{"index": 10482, "repo": "groovy-4.0.13", "code": "public final class Tuple7<T1,T2,T3,T4,T5,T6,T7> extends Tuple {\n\tTuple7<T1,T2,T3,T4,T5,T6,T7> clone();\n\t// Deprecated.\n\tT5 getFifth();\n\t// Deprecated.\n\tT1 getFirst();\n\t// Deprecated.\n\tT4 getFourth();\n\t// Deprecated.\n\tT2 getSecond();\n\t// Deprecated.\n\tT7 getSeventh();\n\t// Deprecated.\n\tT6 getSixth();\n\t// Deprecated.\n\tT3 getThird();\n\tT1 getV1();\n\tT2 getV2();\n\tT3 getV3();\n\tT4 getV4();\n\tT5 getV5();\n\tT6 getV6();\n\tT7 getV7();\n}", "des": "Represents a list of 7 typed Objects."}
{"index": 10483, "repo": "groovy-4.0.13", "code": "public final class Tuple8<T1,T2,T3,T4,T5,T6,T7,T8> extends Tuple {\n\tTuple8<T1,T2,T3,T4,T5,T6,T7,T8> clone();\n\t// Deprecated.\n\tT8 getEighth();\n\t// Deprecated.\n\tT5 getFifth();\n\t// Deprecated.\n\tT1 getFirst();\n\t// Deprecated.\n\tT4 getFourth();\n\t// Deprecated.\n\tT2 getSecond();\n\t// Deprecated.\n\tT7 getSeventh();\n\t// Deprecated.\n\tT6 getSixth();\n\t// Deprecated.\n\tT3 getThird();\n\tT1 getV1();\n\tT2 getV2();\n\tT3 getV3();\n\tT4 getV4();\n\tT5 getV5();\n\tT6 getV6();\n\tT7 getV7();\n\tT8 getV8();\n}", "des": "Represents a list of 8 typed Objects."}
{"index": 10484, "repo": "groovy-4.0.13", "code": "public enum TypeCheckingMode extends Enum<TypeCheckingMode> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic TypeCheckingMode valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic TypeCheckingMode[] values();\n}", "des": "This enumeration can be used whenever it is preferred to annotate a class as TypeChecked in general, but where only one or more methods are \"dynamic\"."}
{"index": 10485, "repo": "groovy-4.0.13", "code": "public class TypeTransformers extends Object {\n\t// Adds a type transformer applied at runtime.\n\tprotected static MethodHandle addTransformer(MethodHandle handle, int pos, Object arg, Class<?> parameter);\n\t// Apply a transformer as filter.\n\tstatic MethodHandle applyUnsharpFilter(MethodHandle handle, int pos, MethodHandle transformer);\n}", "des": "This class contains several transformers for used during method invocation."}
{"index": 10486, "repo": "groovy-4.0.13", "code": "public class URLReaderSource extends AbstractReaderSource {\n\t// Returns a new Reader on the underlying source object.\n\tReader getReader();\n\t// Returns a URI for the URL of this source.\n\tURI getURI();\n}", "des": "A ReaderSource for source files hosted at a URL."}
{"index": 10487, "repo": "groovy-4.0.13", "code": "public abstract class Utilities extends Object {\n\t// Returns the end-of-line marker.\n\tstatic String eol();\n\t// Tells if the given string is a valid Java identifier.\n\tstatic boolean isJavaIdentifier(String name);\n\t// Returns a string made up of repetitions of the specified string.\n\tstatic String repeatString(String pattern, int repeats);\n}", "des": "Various utility functions for use in the compiler."}
{"index": 10488, "repo": "groovy-4.0.13", "code": "public enum Visibility extends Enum<Visibility> {\n\tint getModifier();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Visibility valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Visibility[] values();\n}", "des": "Indicates the visibility of a node."}
{"index": 10489, "repo": "groovy-4.0.13", "code": "public class WarningMessage extends LocatedMessage {\n\t// Returns true if this message is as or more important than the specified importance level.\n\tboolean isRelevant(int importance);\n\t// Returns true if a warning would be relevant to the specified level.\n\tstatic boolean isRelevant(int actual, int limit);\n\t// Writes this message to the specified PrintWriter.\n\tvoid write(PrintWriter writer, Janitor janitor);\n}", "des": "A class for warning messages."}
{"index": 10490, "repo": "groovy-4.0.13", "code": "public class WhileStatement extends Statement implements LoopingStatement {\n\tBooleanExpression getBooleanExpression();\n\t// Gets the loop block.\n\tStatement getLoopBlock();\n\tvoid setBooleanExpression(BooleanExpression booleanExpression);\n\t// Sets the loop block.\n\tvoid setLoopBlock(Statement loopBlock);\n\tvoid visit(GroovyCodeVisitor visitor);\n}", "des": "Represents a while (condition) { ..."}
{"index": 10491, "repo": "spring-security-config-6.1.2", "code": "public abstract class AbstractSecurityBuilder<O> extends Object implements SecurityBuilder<O> {\n\t// Builds the object and returns it or null.\n\tfinal O build();\n\t// Subclasses should implement this to perform the build.\n\tprotected abstract O doBuild();\n\t// Gets the object that was built.\n\tfinal O getObject();\n}", "des": "A base SecurityBuilder that ensures the object being built is only built one time."}
{"index": 10492, "repo": "spring-security-config-6.1.2", "code": "@FunctionalInterface public interface Customizer<T> {\n\t// Performs the customizations on the input argument.\n\tvoid customize(T t);\n\t// Returns a Customizer that does not alter the input argument.\n\tstatic <T> Customizer<T> withDefaults();\n}", "des": "Callback interface that accepts a single input argument and returns no result."}
{"index": 10493, "repo": "spring-security-config-6.1.2", "code": "public final class DefaultLoginPageConfigurer<H extends HttpSecurityBuilder<H>> extends AbstractHttpConfigurer<DefaultLoginPageConfigurer<H>,H> {\n\t// Configure the SecurityBuilder by setting the necessary properties on the SecurityBuilder.\n\tvoid configure(H http);\n\t// Initialize the SecurityBuilder.\n\tvoid init(H http);\n}", "des": "Adds a Filter that will generate a login page if one is not specified otherwise when using EnableWebSecurity."}
{"index": 10494, "repo": "spring-security-config-6.1.2", "code": "@Order(100) public abstract class GlobalAuthenticationConfigurerAdapter extends Object implements SecurityConfigurer<org.springframework.security.authentication.AuthenticationManager,AuthenticationManagerBuilder> {\n\t// Configure the SecurityBuilder by setting the necessary properties on the SecurityBuilder.\n\tvoid configure(AuthenticationManagerBuilder auth);\n\t// Initialize the SecurityBuilder.\n\tvoid init(AuthenticationManagerBuilder auth);\n}", "des": "A SecurityConfigurer that can be exposed as a bean to configure the global AuthenticationManagerBuilder."}
{"index": 10495, "repo": "spring-security-config-6.1.2", "code": "public final class PasswordManagementConfigurer<B extends HttpSecurityBuilder<B>> extends AbstractHttpConfigurer<PasswordManagementConfigurer<B>,B> {\n\t// Sets the change password page.\n\tPasswordManagementConfigurer<B> changePasswordPage(String changePasswordPage);\n\t// Configure the SecurityBuilder by setting the necessary properties on the SecurityBuilder.\n\tvoid configure(B http);\n}", "des": "Adds password management support."}
{"index": 10496, "repo": "spring-security-config-6.1.2", "code": "public enum PayloadInterceptorOrder extends Enum<PayloadInterceptorOrder> implements org.springframework.core.Ordered {\n\tint getOrder();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PayloadInterceptorOrder valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PayloadInterceptorOrder[] values();\n}", "des": "The standard order for PayloadInterceptor to be sorted."}
{"index": 10497, "repo": "spring-security-config-6.1.2", "code": "public final class PortMapperConfigurer<H extends HttpSecurityBuilder<H>> extends AbstractHttpConfigurer<PortMapperConfigurer<H>,H> {\n\t// Adds a port mapping\n\tPortMapperConfigurer<H>.HttpPortMapping http(int httpPort);\n\t// Initialize the SecurityBuilder.\n\tvoid init(H http);\n\t// Allows specifying the PortMapper instance.\n\tPortMapperConfigurer<H> portMapper(org.springframework.security.web.PortMapper portMapper);\n}", "des": "Allows configuring a shared PortMapper instance used to determine the ports when redirecting between HTTP and HTTPS."}
{"index": 10498, "repo": "spring-security-config-6.1.2", "code": "public interface SecurityConfigurer<O,B extends SecurityBuilder<O>> {\n\t// Configure the SecurityBuilder by setting the necessary properties on the SecurityBuilder.\n\tvoid configure(B builder);\n\t// Initialize the SecurityBuilder.\n\tvoid init(B builder);\n}", "des": "Allows for configuring a SecurityBuilder."}
{"index": 10499, "repo": "spring-security-config-6.1.2", "code": "public enum SessionCreationPolicy extends Enum<SessionCreationPolicy> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SessionCreationPolicy valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SessionCreationPolicy[] values();\n}", "des": "Specifies the various session creation policies for Spring Security."}
{"index": 10500, "repo": "spring-security-config-6.1.2", "code": "public class UserDetailsServiceConfigurer<B extends ProviderManagerBuilder<B>,C extends UserDetailsServiceConfigurer<B,C,U>,U extends org.springframework.security.core.userdetails.UserDetailsService> extends AbstractDaoAuthenticationConfigurer<B,C,U> {\n\t// Configure the SecurityBuilder by setting the necessary properties on the SecurityBuilder.\n\tvoid configure(B builder);\n\t// Allows subclasses to initialize the UserDetailsService.\n\tprotected void initUserDetailsService();\n}", "des": "Allows configuring a UserDetailsService within a AuthenticationManagerBuilder."}
{"index": 10501, "repo": "spring-integration-xml-6.1.2", "code": "public class StringValueTestXPathMessageSelector extends AbstractXPathMessageSelector {\n\t// Evaluate the payload and return true if the value returned by the XPathExpression is equal to the valueToTestFor.\n\tboolean accept(org.springframework.messaging.Message<?> message);\n\t// Specify whether comparison of value returned by XPathExpression to test value should be case sensitive.\n\tvoid setCaseSensitive(boolean caseSensitive);\n}", "des": "XPath MessageSelector that tests if a provided value supports payloads of type Document or String."}
{"index": 10502, "repo": "spring-integration-xml-6.1.2", "code": "public class UnmarshallingTransformer extends org.springframework.integration.transformer.AbstractPayloadTransformer<Object,Object> {\n\tString getComponentType();\n\t// If true always delegate to the SourceFactory.\n\tvoid setAlwaysUseSourceFactory(boolean alwaysUseSourceFactory);\n\t// Provide the SourceFactory to be used.\n\tvoid setSourceFactory(SourceFactory sourceFactory);\n\tObject transformPayload(Object payload);\n}", "des": "An implementation of Transformer that delegates to an OXM Unmarshaller."}
{"index": 10503, "repo": "spring-integration-xml-6.1.2", "code": "public enum XPathEvaluationType extends Enum<XPathEvaluationType> {\n\tabstract Object evaluateXPath(org.springframework.xml.xpath.XPathExpression expression, Node node);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic XPathEvaluationType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic XPathEvaluationType[] values();\n}", "des": "Enumeration of different types of XPath evaluation used to indicate the type of evaluation that should be carried out using a provided XPath expression."}
{"index": 10504, "repo": "spring-cloud-openfeign-core-3.1.8", "code": "public interface AnnotatedParameterProcessor {\n\t// Retrieves the processor supported annotation type.\n\tClass<? extends Annotation> getAnnotationType();\n\t// Process the annotated parameter.\n\tboolean processArgument(AnnotatedParameterProcessor.AnnotatedParameterContext context, Annotation annotation, Method method);\n}", "des": "Feign contract method parameter processor."}
{"index": 10505, "repo": "spring-cloud-openfeign-core-3.1.8", "code": "public static interface AnnotatedParameterProcessor.AnnotatedParameterContext {\n\t// Retrieves the method metadata.\n\tfeign.MethodMetadata getMethodMetadata();\n\t// Retrieves the index of the parameter.\n\tint getParameterIndex();\n\t// Sets the parameter name.\n\tvoid setParameterName(String name);\n\t// Sets the template parameter.\n\tCollection<String> setTemplateParameter(String name, Collection<String> rest);\n}", "des": "Specifies the parameter context."}
{"index": 10506, "repo": "spring-cloud-openfeign-core-3.1.8", "code": "public class CookieValueParameterProcessor extends Object implements AnnotatedParameterProcessor {\n\t// Retrieves the processor supported annotation type.\n\tClass<? extends Annotation> getAnnotationType();\n\t// Process the annotated parameter.\n\tboolean processArgument(AnnotatedParameterProcessor.AnnotatedParameterContext context, Annotation annotation, Method method);\n}", "des": "CookieValue annotation processor."}
{"index": 10507, "repo": "spring-cloud-openfeign-core-3.1.8", "code": "public static enum FeignHttpClientProperties.Hc5Properties.PoolConcurrencyPolicy extends Enum<FeignHttpClientProperties.Hc5Properties.PoolConcurrencyPolicy> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic FeignHttpClientProperties.Hc5Properties.PoolConcurrencyPolicy valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic FeignHttpClientProperties.Hc5Properties.PoolConcurrencyPolicy[] values();\n}", "des": "Enumeration of pool concurrency policies."}
{"index": 10508, "repo": "spring-cloud-openfeign-core-3.1.8", "code": "public static enum FeignHttpClientProperties.Hc5Properties.PoolReusePolicy extends Enum<FeignHttpClientProperties.Hc5Properties.PoolReusePolicy> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic FeignHttpClientProperties.Hc5Properties.PoolReusePolicy valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic FeignHttpClientProperties.Hc5Properties.PoolReusePolicy[] values();\n}", "des": "Enumeration of pooled connection re-use policies."}
{"index": 10509, "repo": "spring-cloud-openfeign-core-3.1.8", "code": "public class MatrixVariableParameterProcessor extends Object implements AnnotatedParameterProcessor {\n\t// Retrieves the processor supported annotation type.\n\tClass<? extends Annotation> getAnnotationType();\n\t// Process the annotated parameter.\n\tboolean processArgument(AnnotatedParameterProcessor.AnnotatedParameterContext context, Annotation annotation, Method method);\n}", "des": "MatrixVariable annotation processor."}
{"index": 10510, "repo": "spring-cloud-openfeign-core-3.1.8", "code": "public class PathVariableParameterProcessor extends Object implements AnnotatedParameterProcessor {\n\t// Retrieves the processor supported annotation type.\n\tClass<? extends Annotation> getAnnotationType();\n\t// Process the annotated parameter.\n\tboolean processArgument(AnnotatedParameterProcessor.AnnotatedParameterContext context, Annotation annotation, Method method);\n}", "des": "PathVariable parameter processor."}
{"index": 10511, "repo": "spring-cloud-openfeign-core-3.1.8", "code": "public class QueryMapParameterProcessor extends Object implements AnnotatedParameterProcessor {\n\t// Retrieves the processor supported annotation type.\n\tClass<? extends Annotation> getAnnotationType();\n\t// Process the annotated parameter.\n\tboolean processArgument(AnnotatedParameterProcessor.AnnotatedParameterContext context, Annotation annotation, Method method);\n}", "des": "SpringQueryMap parameter processor."}
{"index": 10512, "repo": "spring-cloud-openfeign-core-3.1.8", "code": "public class RequestHeaderParameterProcessor extends Object implements AnnotatedParameterProcessor {\n\t// Retrieves the processor supported annotation type.\n\tClass<? extends Annotation> getAnnotationType();\n\t// Process the annotated parameter.\n\tboolean processArgument(AnnotatedParameterProcessor.AnnotatedParameterContext context, Annotation annotation, Method method);\n}", "des": "RequestHeader parameter processor."}
{"index": 10513, "repo": "spring-cloud-openfeign-core-3.1.8", "code": "public class RequestParamParameterProcessor extends Object implements AnnotatedParameterProcessor {\n\t// Retrieves the processor supported annotation type.\n\tClass<? extends Annotation> getAnnotationType();\n\t// Process the annotated parameter.\n\tboolean processArgument(AnnotatedParameterProcessor.AnnotatedParameterContext context, Annotation annotation, Method method);\n}", "des": "RequestParam parameter processor."}
{"index": 10514, "repo": "spring-cloud-openfeign-core-3.1.8", "code": "public class RequestPartParameterProcessor extends Object implements AnnotatedParameterProcessor {\n\t// Retrieves the processor supported annotation type.\n\tClass<? extends Annotation> getAnnotationType();\n\t// Process the annotated parameter.\n\tboolean processArgument(AnnotatedParameterProcessor.AnnotatedParameterContext context, Annotation annotation, Method method);\n}", "des": "RequestPart parameter processor."}
{"index": 10515, "repo": "spring-integration-redis-6.1.2", "code": "public static enum RedisLockRegistry.RedisLockType extends Enum<RedisLockRegistry.RedisLockType> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic RedisLockRegistry.RedisLockType valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic RedisLockRegistry.RedisLockType[] values();\n}", "des": "The mode in which this registry is going to work with locks."}
{"index": 10516, "repo": "spring-integration-redis-6.1.2", "code": "public class RedisMetadataStore extends Object implements org.springframework.integration.metadata.ConcurrentMetadataStore {\n\t// Retrieve the persisted value for the provided key.\n\tString get(String key);\n\t// Persists the provided key and value to Redis.\n\tvoid put(String key, String value);\n\tString putIfAbsent(String key, String value);\n\tString remove(String key);\n\tboolean replace(String key, String oldValue, String newValue);\n}", "des": "Redis implementation of ConcurrentMetadataStore."}
{"index": 10517, "repo": "plc4j-api-0.10.0", "code": "public interface PlcConnectionExtension {\n\t// define { \"item1\": \"%DB400.xxx\", \"item2\": \"xx\" } AS my_pymél_struct define %DN4ßß\" AS \"my_structure\"\n\tdefault Future<Boolean> execute(String pql);\n\t// \"%DB400.xxx\" [\"%DB400.xxx\", \"\"] { \"item1\": \"%DB400.xxx\", \"item2\": \"xx\" } Prepared Statement { \"item1\": ?, \"item2\": ? }\n\tdefault Future<PlcConnectionExtension.NewPlcResponse> query(String s, Object... args);\n}", "des": "Suggestion for new API"}
{"index": 10518, "repo": "plc4j-api-0.10.0", "code": "public interface PlcConnectionMetadata {\n\t// Indicates that the connection supports browsing.\n\tboolean canBrowse();\n\t// Indicates that the connection supports reading.\n\tboolean canRead();\n\t// Indicates that the connection supports subscription.\n\tboolean canSubscribe();\n\t// Indicates that the connection supports writing.\n\tboolean canWrite();\n}", "des": "Information about connection capabilities."}
{"index": 10519, "repo": "plc4j-api-0.10.0", "code": "public interface PlcField {\n\t// Returns the \"default\" type of the response one can expect from this field as java type.\n\tdefault Class<?> getDefaultJavaType();\n\t// Returns the number of elements to expect of the response one can expect from this field.\n\tdefault int getNumberOfElements();\n\t// Returns the \"datatype\" of the response one can expect from this field.\n\tdefault String getPlcDataType();\n}", "des": "Base type for all field types."}
{"index": 10520, "repo": "pulsar-broker-3.0.0", "code": "public class AntiAffinityGroupPolicyFilter extends Object implements BrokerFilter {\n\t// Filter out unqualified brokers based on implementation.\n\tMap<String,BrokerLookupData> filter(Map<String,BrokerLookupData> brokers, org.apache.pulsar.common.naming.ServiceUnitId serviceUnitId, LoadManagerContext context);\n\t// The broker filter name.\n\tString name();\n}", "des": "Filter by anti-affinity-group-policy."}
{"index": 10521, "repo": "pulsar-broker-3.0.0", "code": "public interface BrokerFilter {\n\t// Filter out unqualified brokers based on implementation.\n\tMap<String,BrokerLookupData> filter(Map<String,BrokerLookupData> brokers, org.apache.pulsar.common.naming.ServiceUnitId serviceUnit, LoadManagerContext context);\n\t// The broker filter name.\n\tString name();\n}", "des": "Filter out unqualified Brokers, which are not entered into LoadBalancer for decision-making."}
{"index": 10522, "repo": "pulsar-broker-3.0.0", "code": "public interface BrokerHostUsage {\n\t// Calculate the host usage information.\n\tvoid calculateBrokerHostUsage();\n\t// Returns the host usage information.\n\torg.apache.pulsar.policies.data.loadbalancer.SystemResourceUsage getBrokerHostUsage();\n}", "des": "Class that will return the broker host usage."}
{"index": 10523, "repo": "pulsar-broker-3.0.0", "code": "public class BrokerInterceptorUtils extends Object {\n\t// Retrieve the broker interceptor definition from the provided handler nar package.\n\tBrokerInterceptorDefinition getBrokerInterceptorDefinition(String narPath, String narExtractionDirectory);\n\t// Search and load the available broker interceptors.\n\tBrokerInterceptorDefinitions searchForInterceptors(String interceptorsDirectory, String narExtractionDirectory);\n}", "des": "Util class to search and load BrokerInterceptors."}
{"index": 10524, "repo": "pulsar-broker-3.0.0", "code": "public class BrokerLoadDataReporter extends Object implements LoadDataReporter<BrokerLoadData>, StateChangeListener {\n\t// Generate the load data.\n\tBrokerLoadData generateLoadData();\n\t// Handle the service unit state change.\n\tvoid handleEvent(String serviceUnit, ServiceUnitStateData data, Throwable t);\n\tprotected double percentChange(double oldValue, double newValue);\n\t// Report the load data to load data store async.\n\tCompletableFuture<Void> reportAsync(boolean force);\n\tprotected void tombstone();\n}", "des": "The broker load data reporter."}
{"index": 10525, "repo": "pulsar-broker-3.0.0", "code": "@LimitedPrivate @Stable public interface CompactorMXBean {\n\t// Get the compaction record of the topic.\n\tOptional<CompactionRecord> getCompactionRecordForTopic(String topic);\n\t// Remove metrics about this topic.\n\tvoid removeTopic(String topic);\n}", "des": "JMX Bean interface for Compactor stats."}
{"index": 10526, "repo": "pulsar-broker-3.0.0", "code": "public class ConsistentHashingStickyKeyConsumerSelector extends Object implements StickyKeyConsumerSelector {\n\t// Add a new consumer.\n\tCompletableFuture<Void> addConsumer(Consumer consumer);\n\t// Get key hash ranges handled by each consumer.\n\tMap<Consumer,List<org.apache.pulsar.client.api.Range>> getConsumerKeyHashRanges();\n\t// Remove the consumer.\n\tvoid removeConsumer(Consumer consumer);\n\t// Select a consumer by hash.\n\tConsumer select(int hash);\n}", "des": "This is a consumer selector based fixed hash range."}
{"index": 10527, "repo": "pulsar-broker-3.0.0", "code": "@Beta public interface DelayedDeliveryTrackerFactory extends AutoCloseable {\n\t// Close the factory and release all the resources.\n\tvoid close();\n\t// Initialize the factory implementation from the broker service configuration.\n\tvoid initialize(PulsarService pulsarService);\n\t// Create a new tracker instance.\n\tDelayedDeliveryTracker newTracker(PersistentDispatcherMultipleConsumers dispatcher);\n}", "des": "Factory of InMemoryDelayedDeliveryTracker objects."}
{"index": 10528, "repo": "pulsar-broker-3.0.0", "code": "public class GenericBrokerHostUsageImpl extends Object implements BrokerHostUsage {\n\t// Calculate the host usage information.\n\tvoid calculateBrokerHostUsage();\n\t// Returns the host usage information.\n\torg.apache.pulsar.policies.data.loadbalancer.SystemResourceUsage getBrokerHostUsage();\n}", "des": "Class that will return the broker host usage."}
{"index": 10529, "repo": "pulsar-broker-3.0.0", "code": "public class HashRangeAutoSplitStickyKeyConsumerSelector extends Object implements StickyKeyConsumerSelector {\n\t// Add a new consumer.\n\tCompletableFuture<Void> addConsumer(Consumer consumer);\n\t// Get key hash ranges handled by each consumer.\n\tMap<Consumer,List<org.apache.pulsar.client.api.Range>> getConsumerKeyHashRanges();\n\t// Remove the consumer.\n\tvoid removeConsumer(Consumer consumer);\n\t// Select a consumer by hash.\n\tConsumer select(int hash);\n}", "des": "This is a consumer selector based fixed hash range."}
{"index": 10530, "repo": "pulsar-broker-3.0.0", "code": "public class HashRangeExclusiveStickyKeyConsumerSelector extends Object implements StickyKeyConsumerSelector {\n\t// Add a new consumer.\n\tCompletableFuture<Void> addConsumer(Consumer consumer);\n\t// Get key hash ranges handled by each consumer.\n\tMap<Consumer,List<org.apache.pulsar.client.api.Range>> getConsumerKeyHashRanges();\n\t// Remove the consumer.\n\tvoid removeConsumer(Consumer consumer);\n\t// Select a consumer by hash.\n\tConsumer select(int hash);\n}", "des": "This is a sticky-key consumer selector based user provided range."}
{"index": 10531, "repo": "pulsar-broker-3.0.0", "code": "public class LeastResourceUsageWithWeight extends Object implements ModularLoadManagerStrategy {\n\t// Triggered when active brokers change.\n\tvoid onActiveBrokersChange(Set<String> activeBrokers);\n\t// Find a suitable broker to assign the given bundle to.\n\tOptional<String> selectBroker(Set<String> candidates, org.apache.pulsar.policies.data.loadbalancer.BundleData bundleToAssign, LoadData loadData, ServiceConfiguration conf);\n}", "des": "Placement strategy which selects a broker based on which one has the least resource usage with weight."}
{"index": 10532, "repo": "pulsar-broker-3.0.0", "code": "public class LinuxBrokerHostUsageImpl extends Object implements BrokerHostUsage {\n\t// Calculate the host usage information.\n\tvoid calculateBrokerHostUsage();\n\t// Returns the host usage information.\n\torg.apache.pulsar.policies.data.loadbalancer.SystemResourceUsage getBrokerHostUsage();\n}", "des": "Class that will return the broker host usage."}
{"index": 10533, "repo": "pulsar-broker-3.0.0", "code": "public interface LoadDataReporter<T> {\n\t// Generate the load data.\n\tT generateLoadData();\n\t// Report the load data to load data store async.\n\tCompletableFuture<Void> reportAsync(boolean force);\n}", "des": "The load data reporter, it publish the load data to load data storage."}
{"index": 10534, "repo": "pulsar-broker-3.0.0", "code": "public interface LoadManagerContext {\n\t// The broker configuration.\n\tServiceConfiguration brokerConfiguration();\n\t// Broker load data store, each component use the context to access the load data store.\n\tLoadDataStore<BrokerLoadData> brokerLoadDataStore();\n\t// The broker register.\n\tBrokerRegistry brokerRegistry();\n\t// Top bundle load data store.\n\tLoadDataStore<TopBundlesLoadData> topBundleLoadDataStore();\n}", "des": "The filter and load balance context, use for delivering context between filter, scheduler and strategy."}
{"index": 10535, "repo": "pulsar-broker-3.0.0", "code": "public interface LoadManagerScheduler extends Closeable {\n\t// Close the load manager scheduler.\n\tvoid close();\n\t// Execute the schedule task.\n\tvoid execute();\n\t// Start the load manager scheduler.\n\tvoid start();\n}", "des": "The base interface to schedule execute task in load manager."}
{"index": 10536, "repo": "pulsar-broker-3.0.0", "code": "public interface LoadSheddingStrategy {\n\t// Recommend that all of the returned bundles be unloaded.\n\tcom.google.common.collect.Multimap<String,String> findBundlesForUnloading(LoadData loadData, ServiceConfiguration conf);\n\t// Triggered when active broker changes.\n\tdefault void onActiveBrokersChange(Set<String> activeBrokers);\n}", "des": "Load management component which determines the criteria for unloading bundles."}
{"index": 10537, "repo": "pulsar-broker-3.0.0", "code": "public class MLPendingAckReplyCallBack extends Object implements PendingAckReplyCallBack {\n\t// Handle metadata entry.\n\tvoid handleMetadataEntry(PendingAckMetadataEntry pendingAckMetadataEntry);\n\t// Pending ack replay complete callback for pending ack store.\n\tvoid replayComplete();\n\t// Pending ack replay failed callback for pending ack store.\n\tvoid replayFailed(Throwable t);\n}", "des": "MLPendingAckStore reply call back."}
{"index": 10538, "repo": "pulsar-broker-3.0.0", "code": "public class MLPendingAckStoreProvider extends Object implements TransactionPendingAckStoreProvider {\n\t// Check pending ack store has been initialized before.\n\tCompletableFuture<Boolean> checkInitializedBefore(PersistentSubscription subscription);\n\tstatic void closeBufferedWriterMetrics();\n\tstatic void initBufferedWriterMetrics(String brokerAdvertisedAddress);\n\t// Open the pending ack store.\n\tCompletableFuture<PendingAckStore> newPendingAckStore(PersistentSubscription subscription);\n}", "des": "Provider is for MLPendingAckStore."}
{"index": 10539, "repo": "pulsar-broker-3.0.0", "code": "public interface ModularLoadManagerStrategy {\n\t// Create a placement strategy using the configuration.\n\tstatic ModularLoadManagerStrategy create(ServiceConfiguration conf);\n\t// Triggered when active brokers change.\n\tdefault void onActiveBrokersChange(Set<String> activeBrokers);\n\t// Find a suitable broker to assign the given bundle to.\n\tOptional<String> selectBroker(Set<String> candidates, org.apache.pulsar.policies.data.loadbalancer.BundleData bundleToAssign, LoadData loadData, ServiceConfiguration conf);\n}", "des": "Interface which serves as a component for ModularLoadManagerImpl, flexibly allowing the injection of potentially complex strategies."}
{"index": 10540, "repo": "pulsar-broker-3.0.0", "code": "public interface NamespaceBundleOwnershipListener extends Predicate<NamespaceBundle> {\n\t// Will be call after a NamespaceBundle owned by broker.\n\tvoid onLoad(NamespaceBundle bundle);\n\t// Will be call after a NamespaceBundle unloaded from broker.\n\tvoid unLoad(NamespaceBundle bundle);\n}", "des": "Listener for NamespaceBundle ownership changes."}
{"index": 10541, "repo": "pulsar-broker-3.0.0", "code": "public interface NamespaceUnloadStrategy {\n\t// Recommend that all the returned bundles be unloaded.\n\tSet<UnloadDecision> findBundlesForUnloading(LoadManagerContext context, Map<String,Long> recentlyUnloadedBundles, Map<String,Long> recentlyUnloadedBrokers);\n\t// Initializes the internals.\n\tvoid initialize(PulsarService pulsar);\n}", "des": "The namespace unload strategy."}
{"index": 10542, "repo": "pulsar-broker-3.0.0", "code": "public static enum PendingAckHandleState.State extends Enum<PendingAckHandleState.State> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PendingAckHandleState.State valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PendingAckHandleState.State[] values();\n}", "des": "The state of the pending ack handle PendingAckHandleState."}
{"index": 10543, "repo": "pulsar-broker-3.0.0", "code": "public interface PendingAckReplyCallBack {\n\t// Handle metadata entry.\n\tvoid handleMetadataEntry(PendingAckMetadataEntry pendingAckMetadataEntry);\n\t// Pending ack replay complete callback for pending ack store.\n\tvoid replayComplete();\n\t// Pending ack replay failed callback for pending ack store.\n\tvoid replayFailed(Throwable t);\n}", "des": "Call back for pending ack reply."}
{"index": 10544, "repo": "pulsar-broker-3.0.0", "code": "public interface RawMessage extends AutoCloseable {\n\tvoid close();\n\t// Get a ByteBuf which contains the headers and payload of the message.\n\tio.netty.buffer.ByteBuf getHeadersAndPayload();\n\t// Get the message ID of this message.\n\torg.apache.pulsar.client.api.MessageId getMessageId();\n\t// Get the protobuf representation of the message ID of this message.\n\torg.apache.pulsar.common.api.proto.MessageIdData getMessageIdData();\n\t// Serialize a raw message to a ByteBuf.\n\tio.netty.buffer.ByteBuf serialize();\n}", "des": "A representation of a message in a topic in its raw form (i.e."}
{"index": 10545, "repo": "pulsar-broker-3.0.0", "code": "public static enum ResourceGroup.ResourceGroupMonitoringClass extends Enum<ResourceGroup.ResourceGroupMonitoringClass> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ResourceGroup.ResourceGroupMonitoringClass valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ResourceGroup.ResourceGroupMonitoringClass[] values();\n}", "des": "Usage \"sense\" for resource groups: publish and dispatch for now; may be more later (e.g., storage-monitoring) ToDo: \"class\" is vague; is there a better term to call this?"}
{"index": 10546, "repo": "pulsar-broker-3.0.0", "code": "public static enum ResourceGroup.ResourceGroupRefTypes extends Enum<ResourceGroup.ResourceGroupRefTypes> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ResourceGroup.ResourceGroupRefTypes valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ResourceGroup.ResourceGroupRefTypes[] values();\n}", "des": "The entities that might reference RGs are tenants, namespaces (and maybe topics, later)."}
{"index": 10547, "repo": "pulsar-broker-3.0.0", "code": "public interface SchemaDataValidator {\n\t// Validate a schema data is in a valid form.\n\tvoid validate(org.apache.pulsar.common.protocol.schema.SchemaData schemaData);\n\t// Validate if the schema data is well formed.\n\tstatic void validateSchemaData(org.apache.pulsar.common.protocol.schema.SchemaData schemaData);\n}", "des": "A validator to validate the schema data is well formed."}
{"index": 10548, "repo": "pulsar-broker-3.0.0", "code": "public enum ServiceUnitState extends Enum<ServiceUnitState> {\n\tstatic boolean isActiveState(ServiceUnitState state);\n\tstatic boolean isInFlightState(ServiceUnitState state);\n\tstatic boolean isValidTransition(ServiceUnitState from, ServiceUnitState to);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ServiceUnitState valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ServiceUnitState[] values();\n}", "des": "Defines the possible states for service units."}
{"index": 10549, "repo": "pulsar-broker-3.0.0", "code": "public class SplitScheduler extends Object implements LoadManagerScheduler {\n\t// Close the load manager scheduler.\n\tvoid close();\n\t// Execute the schedule task.\n\tvoid execute();\n\t// Start the load manager scheduler.\n\tvoid start();\n}", "des": "Service Unit(e.g."}
{"index": 10550, "repo": "pulsar-broker-3.0.0", "code": "@Unstable public interface StreamingDispatcher extends Dispatcher {\n\t// Notify dispatcher can issue next read request.\n\tvoid canReadMoreEntries(boolean withBackoff);\n\tString getName();\n\t// Notify dispatcher to inform consumers reached end of topic.\n\tvoid notifyConsumersEndOfTopic();\n\t// Notify dispatcher issued read entry request has complete.\n\tvoid readEntryComplete(Entry entry, PendingReadEntryRequest ctx);\n}", "des": "A Dispatcher that'll use StreamingEntryReader to read entries from ManagedLedger."}
{"index": 10551, "repo": "pulsar-broker-3.0.0", "code": "public class ThresholdShedder extends Object implements LoadSheddingStrategy {\n\t// Recommend that all of the returned bundles be unloaded.\n\tcom.google.common.collect.Multimap<String,String> findBundlesForUnloading(LoadData loadData, ServiceConfiguration conf);\n\t// Triggered when active broker changes.\n\tvoid onActiveBrokersChange(Set<String> newBrokers);\n}", "des": "Load shedding strategy that unloads any broker that exceeds the average resource utilization of all brokers by a configured threshold."}
{"index": 10552, "repo": "pulsar-broker-3.0.0", "code": "public class TopBundleLoadDataReporter extends Object implements LoadDataReporter<TopBundlesLoadData>, StateChangeListener {\n\t// Generate the load data.\n\tTopBundlesLoadData generateLoadData();\n\t// Handle the service unit state change.\n\tvoid handleEvent(String serviceUnit, ServiceUnitStateData data, Throwable t);\n\t// Report the load data to load data store async.\n\tCompletableFuture<Void> reportAsync(boolean force);\n\tprotected void tombstone();\n}", "des": "The top k highest-loaded bundles' load data reporter."}
{"index": 10553, "repo": "pulsar-broker-3.0.0", "code": "public static enum TopicEventsListener.EventStage extends Enum<TopicEventsListener.EventStage> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TopicEventsListener.EventStage valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TopicEventsListener.EventStage[] values();\n}", "des": "Stages of events currently supported."}
{"index": 10554, "repo": "pulsar-broker-3.0.0", "code": "public static enum TopicEventsListener.TopicEvent extends Enum<TopicEventsListener.TopicEvent> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TopicEventsListener.TopicEvent valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TopicEventsListener.TopicEvent[] values();\n}", "des": "Types of events currently supported."}
{"index": 10555, "repo": "pulsar-broker-3.0.0", "code": "public static enum TopicTransactionBufferState.State extends Enum<TopicTransactionBufferState.State> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TopicTransactionBufferState.State valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TopicTransactionBufferState.State[] values();\n}", "des": "The state of the topicTransactionBuffer TopicTransactionBuffer."}
{"index": 10556, "repo": "pulsar-broker-3.0.0", "code": "@Beta public interface TransactionBufferProvider {\n\t// Construct a provider from the provided class.\n\tstatic TransactionBufferProvider newProvider(String providerClassName);\n\t// Open the persistent transaction buffer.\n\tTransactionBuffer newTransactionBuffer(Topic originTopic);\n}", "des": "A provider that provides TransactionBuffer."}
{"index": 10557, "repo": "pulsar-broker-3.0.0", "code": "public interface TransactionPendingAckStoreProvider {\n\t// Check pending ack store has been initialized before.\n\tCompletableFuture<Boolean> checkInitializedBefore(PersistentSubscription subscription);\n\t// Open the pending ack store.\n\tCompletableFuture<PendingAckStore> newPendingAckStore(PersistentSubscription subscription);\n\t// Construct a provider from the provided class.\n\tstatic TransactionPendingAckStoreProvider newProvider(String providerClassName);\n}", "des": "Provider of transaction pending ack store."}
{"index": 10558, "repo": "pulsar-broker-3.0.0", "code": "public class TransferShedder extends Object implements NamespaceUnloadStrategy {\n\t// Recommend that all the returned bundles be unloaded.\n\tSet<UnloadDecision> findBundlesForUnloading(LoadManagerContext context, Map<String,Long> recentlyUnloadedBundles, Map<String,Long> recentlyUnloadedBrokers);\n\t// Initializes the internals.\n\tvoid initialize(PulsarService pulsar);\n\tprotected boolean isLoadBalancerSheddingBundlesWithPoliciesEnabled(LoadManagerContext context, NamespaceBundle namespaceBundle);\n}", "des": "Load shedding strategy that unloads bundles from the highest loaded brokers."}
{"index": 10559, "repo": "spring-security-oauth2-resource-server-6.1.2", "code": "public abstract class AbstractOAuth2TokenAuthenticationToken<T extends org.springframework.security.oauth2.core.OAuth2Token> extends org.springframework.security.authentication.AbstractAuthenticationToken {\n\tObject getCredentials();\n\tObject getPrincipal();\n\t// Get the token bound to this Authentication.\n\tfinal T getToken();\n\t// Returns the attributes of the access token.\n\tabstract Map<String,Object> getTokenAttributes();\n}", "des": "Base class for AbstractAuthenticationToken implementations that expose common attributes between different OAuth 2.0 Access Token Formats."}
{"index": 10560, "repo": "spring-security-oauth2-resource-server-6.1.2", "code": "public final class BearerTokenError extends org.springframework.security.oauth2.core.OAuth2Error {\n\t// Return the HTTP status.\n\torg.springframework.http.HttpStatus getHttpStatus();\n\t// Return the scope.\n\tString getScope();\n}", "des": "A representation of a Bearer Token Error."}
{"index": 10561, "repo": "spring-security-oauth2-resource-server-6.1.2", "code": "public final class BearerTokenErrors extends Object {\n\t// Create a BearerTokenError caused by an invalid token\n\tstatic BearerTokenError insufficientScope(String message, String scope);\n\t// Create a BearerTokenError caused by an invalid request\n\tstatic BearerTokenError invalidRequest(String message);\n\t// Create a BearerTokenError caused by an invalid token\n\tstatic BearerTokenError invalidToken(String message);\n}", "des": "A factory for creating BearerTokenError instances that correspond to the registered Bearer Token Error Codes."}
{"index": 10562, "repo": "spring-security-oauth2-resource-server-6.1.2", "code": "@Transient public class JwtAuthenticationToken extends AbstractOAuth2TokenAuthenticationToken<org.springframework.security.oauth2.jwt.Jwt> {\n\t// The principal name which is, by default, the Jwt's subject\n\tString getName();\n\t// Returns the attributes of the access token.\n\tMap<String,Object> getTokenAttributes();\n}", "des": "An implementation of an AbstractOAuth2TokenAuthenticationToken representing a Jwt Authentication."}
{"index": 10563, "repo": "spring-ldap-core-3.1.0", "code": "public abstract class AbstractContextMapper<T> extends Object implements ContextMapper<T> {\n\t// Map a single DirContextOperation to an object.\n\tprotected abstract T doMapFromContext(DirContextOperations ctx);\n\t// Map a single LDAP Context to an object.\n\tfinal T mapFromContext(Object ctx);\n}", "des": "Abstract superclass that may be used instead of implementing ContextMapper directly."}
{"index": 10564, "repo": "spring-ldap-core-3.1.0", "code": "public class AndFilter extends BinaryLogicalFilter {\n\t// Add a query to the AND expression.\n\tAndFilter and(Filter query);\n\t// Implement this in subclass to return the logical operator, for example \"&\".\n\tprotected String getLogicalOperator();\n}", "des": "A filter for a logical AND."}
{"index": 10565, "repo": "spring-ldap-core-3.1.0", "code": "public static enum Attribute.Type extends Enum<Attribute.Type> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Attribute.Type valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Attribute.Type[] values();\n}", "des": "The Type attribute indicates whether a field is regarded as binary based or string based by the LDAP JNDI provider."}
{"index": 10566, "repo": "spring-ldap-core-3.1.0", "code": "public interface AuthenticationSource {\n\t// Get the credentials to use when creating an authenticated context.\n\tString getCredentials();\n\t// Get the principal to use when creating an authenticated context.\n\tString getPrincipal();\n}", "des": "An AuthenticationSource is responsible for providing the principal (user DN) and credentials to be used when creating a new context."}
{"index": 10567, "repo": "spring-ldap-core-3.1.0", "code": "public interface BaseLdapPathSource {\n\t// Get the base LDAP path as a LdapName.\n\tLdapName getBaseLdapName();\n\t// Deprecated. DistinguishedName and associated classes and methods are deprecated as of 2.0.\n\tDistinguishedName getBaseLdapPath();\n\t// Get the base LDAP path as a String.\n\tString getBaseLdapPathAsString();\n}", "des": "Implementations of this interface are capable of providing a base LDAP path."}
{"index": 10568, "repo": "spring-ldap-core-3.1.0", "code": "public abstract class BinaryLogicalFilter extends AbstractFilter {\n\t// Add a query to this logical operation.\n\tfinal BinaryLogicalFilter append(Filter query);\n\tfinal BinaryLogicalFilter appendAll(Collection<Filter> subQueries);\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n\t// Implement this in subclass to return the logical operator, for example \"&\".\n\tprotected abstract String getLogicalOperator();\n}", "des": "Abstract superclass for binary logical operations, that is \"AND\" and \"OR\" operations."}
{"index": 10569, "repo": "spring-ldap-core-3.1.0", "code": "public class BindOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor to manage a bind operation."}
{"index": 10570, "repo": "spring-ldap-core-3.1.0", "code": "public final class CollectingAuthenticationErrorCallback extends Object implements AuthenticationErrorCallback {\n\t// This method will be called with the authentication exception in case there is a problem with the authentication.\n\tvoid execute(Exception e);\n\tException getError();\n\t// Check whether this callback has collected an error.\n\tboolean hasError();\n}", "des": "Convenience implementation of AuthenticationErrorCallback that stores the given exception and provides a method for retrieving it."}
{"index": 10571, "repo": "spring-ldap-core-3.1.0", "code": "public abstract class CompareFilter extends AbstractFilter {\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// Override to perform special encoding in subclass.\n\tprotected String encodeValue(String value);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n\t// Implement this method in subclass to return a String representing the operator.\n\tprotected abstract String getCompareString();\n}", "des": "Abstract superclass for filters that compare values."}
{"index": 10572, "repo": "spring-ldap-core-3.1.0", "code": "public class CompensatingTransactionObject extends Object {\n\t// Get the DirContextHolder.\n\tCompensatingTransactionHolderSupport getHolder();\n\t// Set the CompensatingTransactionHolderSupport associated with the current transaction.\n\tvoid setHolder(CompensatingTransactionHolderSupport holder);\n}", "des": "Transaction object used by AbstractCompensatingTransactionManagerDelegate."}
{"index": 10573, "repo": "spring-ldap-core-3.1.0", "code": "public interface CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "Responsible for executing a single recorded operation as well as committing or rolling it back, depending on the transaction outcome."}
{"index": 10574, "repo": "spring-ldap-core-3.1.0", "code": "public interface CompensatingTransactionOperationManager {\n\t// Commit all recorded operations.\n\tvoid commit();\n\t// Indicates that the supplied operation (method name) is to be performed.\n\tvoid performOperation(Object resource, String operation, Object[] args);\n\t// Rollback all recorded operations by performing each of the recorded rollback operations.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationManager implementation records and performs operations that are to be performed within a compensating transaction."}
{"index": 10575, "repo": "spring-ldap-core-3.1.0", "code": "public interface ContainerCriteria extends LdapQuery {\n\t// Append a logical And condition to the currently built filter.\n\tConditionCriteria and(String attribute);\n\t// Append an And condition for a nested criterion.\n\tContainerCriteria and(ContainerCriteria nested);\n\t// Append a logical Or condition to the currently built filter.\n\tConditionCriteria or(String attribute);\n\t// Append an Or condition for a nested criterion.\n\tContainerCriteria or(ContainerCriteria nested);\n}", "des": "And/or filter builder support for LdapQuery."}
{"index": 10576, "repo": "spring-ldap-core-3.1.0", "code": "public interface ContextSource {\n\t// Gets a DirContext instance authenticated using the supplied principal and credentials.\n\tDirContext getContext(String principal, String credentials);\n\t// Gets a read-only DirContext.\n\tDirContext getReadOnlyContext();\n\t// Gets a read-write DirContext instance.\n\tDirContext getReadWriteContext();\n}", "des": "A ContextSource is responsible for configuring and creating DirContext instances."}
{"index": 10577, "repo": "spring-ldap-core-3.1.0", "code": "public interface ConverterManager {\n\t// Determine whether this converter manager is able to carry out a specified conversion.\n\tboolean canConvert(Class<?> fromClass, String syntax, Class<?> toClass);\n\t// Convert a given source object with an optional LDAP syntax to an instance of a given class.\n\t<T> T convert(Object source, String syntax, Class<T> toClass);\n}", "des": "A simple interface to be implemented to provide type conversion functionality."}
{"index": 10578, "repo": "spring-ldap-core-3.1.0", "code": "public class CountNameClassPairCallbackHandler extends Object implements NameClassPairCallbackHandler {\n\t// Get the number of rows that was returned by the search.\n\tint getNoOfRows();\n\t// Handle one entry.\n\tvoid handleNameClassPair(NameClassPair nameClassPair);\n}", "des": "A NameClassPairCallbackHandler for counting all returned entries."}
{"index": 10579, "repo": "spring-ldap-core-3.1.0", "code": "public class DefaultTempEntryRenamingStrategy extends Object implements TempEntryRenamingStrategy {\n\t// Get a temporary name for the current entry to be renamed to.\n\tName getTemporaryName(Name originalName);\n\t// Get the suffix that will be used for renaming temporary entries.\n\tString getTempSuffix();\n\t// Set the suffix to use for renaming temporary entries.\n\tvoid setTempSuffix(String tempSuffix);\n}", "des": "Default implementation of TempEntryRenamingStrategy."}
{"index": 10580, "repo": "spring-ldap-core-3.1.0", "code": "public abstract class DelegatingBaseLdapPathContextSourceSupport extends Object implements BaseLdapPathSource {\n\t// Get the base LDAP path as a LdapName.\n\tfinal LdapName getBaseLdapName();\n\t// Get the base LDAP path as a DistinguishedName.\n\tfinal DistinguishedName getBaseLdapPath();\n\t// Get the base LDAP path as a String.\n\tfinal String getBaseLdapPathAsString();\n\t// Get the target ContextSource.\n\tprotected abstract ContextSource getTarget();\n}", "des": "Support class to provide BaseLdapPathSource functionality to ContextSource instances that act as proxies."}
{"index": 10581, "repo": "spring-ldap-core-3.1.0", "code": "public class DigestMd5DirContextAuthenticationStrategy extends Object implements DirContextAuthenticationStrategy {\n\t// This method is responsible for post-processing the DirContext instance after it has been created.\n\tDirContext processContextAfterCreation(DirContext ctx, String userDn, String password);\n\t// This method is responsible for preparing the environment to be used when creating the DirContext instance.\n\tvoid setupEnvironment(Hashtable<String,Object> env, String userDn, String password);\n}", "des": "Authentication strategy for LDAP DIGEST-MD5 SASL mechanism."}
{"index": 10582, "repo": "spring-ldap-core-3.1.0", "code": "public interface DirContextAuthenticationStrategy {\n\t// This method is responsible for post-processing the DirContext instance after it has been created.\n\tDirContext processContextAfterCreation(DirContext ctx, String userDn, String password);\n\t// This method is responsible for preparing the environment to be used when creating the DirContext instance.\n\tvoid setupEnvironment(Hashtable<String,Object> env, String userDn, String password);\n}", "des": "A strategy to use when authenticating LDAP connections on creation."}
{"index": 10583, "repo": "spring-ldap-core-3.1.0", "code": "public class DirContextHolder extends CompensatingTransactionHolderSupport {\n\t// Return the DirContext associated with the current transaction.\n\tDirContext getCtx();\n\t// Get the actual transacted resource.\n\tprotected Object getTransactedResource();\n\t// Set the DirContext associated with the current transaction.\n\tvoid setCtx(DirContext ctx);\n}", "des": "Keeps track of the transaction DirContext."}
{"index": 10584, "repo": "spring-ldap-core-3.1.0", "code": "public interface DirContextProcessor {\n\t// Perform post-processing on the supplied DirContext.\n\tvoid postProcess(DirContext ctx);\n\t// Perform pre-processing on the supplied DirContext.\n\tvoid preProcess(DirContext ctx);\n}", "des": "Interface to be called in search by LdapTemplate before and after the actual search and enumeration traversal."}
{"index": 10585, "repo": "spring-ldap-core-3.1.0", "code": "public class DnParserImplTokenManager extends Object implements DnParserImplConstants {\n\t// Get the next Token.\n\tToken getNextToken();\n\tprotected Token jjFillToken();\n\t// Reinitialise parser.\n\tvoid ReInit(SimpleCharStream stream);\n\t// Reinitialise parser.\n\tvoid ReInit(SimpleCharStream stream, int lexState);\n\t// Set debug output.\n\tvoid setDebugStream(PrintStream ds);\n\t// Switch to specified lex state.\n\tvoid SwitchTo(int lexState);\n}", "des": "Token Manager."}
{"index": 10586, "repo": "spring-ldap-core-3.1.0", "code": "public interface Filter {\n\t// Encodes the filter to a String.\n\tString encode();\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buf);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n}", "des": "Common interface for LDAP filters."}
{"index": 10587, "repo": "spring-ldap-core-3.1.0", "code": "public class HardcodedFilter extends AbstractFilter {\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n}", "des": "Allows hard coded parts to be included in a search filter."}
{"index": 10588, "repo": "spring-ldap-core-3.1.0", "code": "public class LdapAttributes extends BasicAttributes {\n\t// Deprecated. and associated classes and methods are deprecated as of 2.0.\n\tDistinguishedName getDN();\n\t// Returns the distinguished name to which the object is bound.\n\tLdapName getName();\n\t// Deprecated. and associated classes and methods are deprecated as of 2.0.\n\tvoid setDN(DistinguishedName dn);\n\tvoid setName(Name name);\n}", "des": "Extends BasicAttributes to add specialized support for DNs."}
{"index": 10589, "repo": "spring-ldap-core-3.1.0", "code": "public static interface LdapClient.AuthenticateSpec {\n\t// Authenticate the query against the provided password\n\tvoid execute();\n\t// Authenticate the query against the provided password.\n\t<T> T execute(AuthenticatedLdapEntryContextMapper<T> mapper);\n\t// The password to use\n\tLdapClient.AuthenticateSpec password(String password);\n\t// The query to authenticate\n\tLdapClient.AuthenticateSpec query(LdapQuery query);\n}", "des": "The specifications for the LdapClient.authenticate() request."}
{"index": 10590, "repo": "spring-ldap-core-3.1.0", "code": "public static interface LdapClient.BindSpec {\n\t// The attributes to associate with this binding.\n\tLdapClient.BindSpec attributes(Attributes attributes);\n\t// Bind the name, object, and attributes together\n\tvoid execute();\n\t// The object to associate with this binding.\n\tLdapClient.BindSpec object(Object object);\n\t// Replace any existing binding with this one (equivalent to \"rebind\").\n\tLdapClient.BindSpec replaceExisting(boolean replaceExisting);\n}", "des": "The specifications for the LdapClient.bind(java.lang.String) request."}
{"index": 10591, "repo": "spring-ldap-core-3.1.0", "code": "public static interface LdapClient.ListBindingsSpec {\n\t// Return the entry's children as a list of mapped results\n\t<T> List<T> toList(ContextMapper<T> mapper);\n\t// Return the entry's children as a list of mapped results\n\t<T> List<T> toList(NameClassPairMapper<T> mapper);\n\t// Return the entry's children as a stream of mapped results.\n\t<T> Stream<T> toStream(ContextMapper<T> mapper);\n\t// Return the entry's children as a stream of mapped results.\n\t<T> Stream<T> toStream(NameClassPairMapper<T> mapper);\n}", "des": "The specifications for the LdapClient.listBindings(java.lang.String) request."}
{"index": 10592, "repo": "spring-ldap-core-3.1.0", "code": "public static interface LdapClient.ListSpec {\n\t// Return the entry's children as a list of mapped results\n\t<T> List<T> toList(NameClassPairMapper<T> mapper);\n\t// Return the entry's children as a stream of mapped results.\n\t<T> Stream<T> toStream(NameClassPairMapper<T> mapper);\n}", "des": "The specifications for the LdapClient.list(java.lang.String) request."}
{"index": 10593, "repo": "spring-ldap-core-3.1.0", "code": "public static interface LdapClient.ModifySpec {\n\t// The attribute modifications to apply to this entry\n\tLdapClient.ModifySpec attributes(ModificationItem... modifications);\n\t// Modify the name and attributes for this entry\n\tvoid execute();\n\t// The new name for this entry.\n\tLdapClient.ModifySpec name(String name);\n\t// The new name for this entry.\n\tLdapClient.ModifySpec name(Name name);\n}", "des": "The specifications for the LdapClient.modify(java.lang.String) request."}
{"index": 10594, "repo": "spring-ldap-core-3.1.0", "code": "public static interface LdapClient.UnbindSpec {\n\t// Delete the entry\n\tvoid execute();\n\t// Delete all children related to this entry\n\tLdapClient.UnbindSpec recursive(boolean recursive);\n}", "des": "The specifications for the LdapClient.unbind(java.lang.String) request."}
{"index": 10595, "repo": "spring-ldap-core-3.1.0", "code": "public interface LdapQuery {\n\t// Get the attributes to return.\n\tString[] attributes();\n\t// Get the search base.\n\tName base();\n\t// Get the count limit.\n\tInteger countLimit();\n\t// Get the filter.\n\tFilter filter();\n\t// Get the search scope.\n\tSearchScope searchScope();\n\t// Get the time limit.\n\tInteger timeLimit();\n}", "des": "Holds all information regarding a Ldap query to be performed."}
{"index": 10596, "repo": "spring-ldap-core-3.1.0", "code": "public static final class LdapTemplate.NullDirContextProcessor extends Object implements DirContextProcessor {\n\t// Perform post-processing on the supplied DirContext.\n\tvoid postProcess(DirContext ctx);\n\t// Perform pre-processing on the supplied DirContext.\n\tvoid preProcess(DirContext ctx);\n}", "des": "Do-nothing implementation of DirContextProcessor."}
{"index": 10597, "repo": "spring-ldap-core-3.1.0", "code": "public final class LdapTransactionUtils extends Object {\n\t// Get the argument as a Name.\n\tstatic Name getArgumentAsName(Object arg);\n\t// Get the first parameter in the argument list as a Name.\n\tstatic Name getFirstArgumentAsName(Object[] args);\n\t// Check whether the supplied method is a method for which transactions is supported (and which should be recorded for possible rollback later).\n\tstatic boolean isSupportedWriteTransactionOperation(String methodName);\n}", "des": "Utility methods for working with LDAP transactions."}
{"index": 10598, "repo": "spring-ldap-core-3.1.0", "code": "public class ModifyAttributesOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor to manage a modifyAttributes operation."}
{"index": 10599, "repo": "spring-ldap-core-3.1.0", "code": "public class NotFilter extends AbstractFilter {\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n}", "des": "A filter for 'not'."}
{"index": 10600, "repo": "spring-ldap-core-3.1.0", "code": "public class NotPresentFilter extends AbstractFilter {\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n}", "des": "A convenience class that combines NOT behavior with present behavior to allow the user to check for the non-existence of a attribute."}
{"index": 10601, "repo": "spring-ldap-core-3.1.0", "code": "public class NullOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor that performs nothing."}
{"index": 10602, "repo": "spring-ldap-core-3.1.0", "code": "public class OrFilter extends BinaryLogicalFilter {\n\t// Implement this in subclass to return the logical operator, for example \"&\".\n\tprotected String getLogicalOperator();\n\t// Add a query to the OR expression\n\tOrFilter or(Filter query);\n}", "des": "Filter for logical OR."}
{"index": 10603, "repo": "spring-ldap-core-3.1.0", "code": "public class PresentFilter extends AbstractFilter {\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n}", "des": "Filter that allows the user to check for the existence of a attribute."}
{"index": 10604, "repo": "spring-ldap-core-3.1.0", "code": "public class RebindOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor to manage a rebind operation."}
{"index": 10605, "repo": "spring-ldap-core-3.1.0", "code": "public class RenameOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor to manage a rename operation."}
{"index": 10606, "repo": "spring-ldap-core-3.1.0", "code": "public enum SearchScope extends Enum<SearchScope> {\n\tint getId();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SearchScope valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SearchScope[] values();\n}", "des": "Type safe definitions of search scopes."}
{"index": 10607, "repo": "spring-ldap-core-3.1.0", "code": "public class SimpleDirContextAuthenticationStrategy extends Object implements DirContextAuthenticationStrategy {\n\t// This method is responsible for post-processing the DirContext instance after it has been created.\n\tDirContext processContextAfterCreation(DirContext ctx, String userDn, String password);\n\t// This method is responsible for preparing the environment to be used when creating the DirContext instance.\n\tvoid setupEnvironment(Hashtable<String,Object> env, String userDn, String password);\n}", "des": "The default DirContextAuthenticationStrategy implementation, setting the DirContext environment up for 'SIMPLE' authentication, and specifying the user DN and password as SECURITY_PRINCIPAL and SECURITY_CREDENTIALS respectively in the authenticated environment before the context is created."}
{"index": 10608, "repo": "spring-ldap-core-3.1.0", "code": "public class SortControlDirContextProcessor extends AbstractFallbackRequestAndResponseControlDirContextProcessor {\n\t// Create an instance of the appropriate RequestControl.\n\tControl createRequestControl();\n\t// Get the result code returned by the control.\n\tint getResultCode();\n\t// Get the sort key.\n\tString getSortKey();\n\tprotected void handleResponse(Object control);\n\t// Check whether the returned values were actually sorted by the server.\n\tboolean isSorted();\n}", "des": "DirContextProcessor implementation for managing the SortControl."}
{"index": 10609, "repo": "spring-ldap-core-3.1.0", "code": "public class Token extends Object implements Serializable {\n\t// An optional attribute value of the Token.\n\tObject getValue();\n\tstatic Token newToken(int ofKind);\n\t// Returns a new Token object, by default.\n\tstatic Token newToken(int ofKind, String image);\n}", "des": "Describes the input token stream."}
{"index": 10610, "repo": "spring-ldap-core-3.1.0", "code": "public class TransactionAwareContextSourceProxy extends DelegatingBaseLdapPathContextSourceSupport implements ContextSource {\n\t// Gets a DirContext instance authenticated using the supplied principal and credentials.\n\tDirContext getContext(String principal, String credentials);\n\t// Gets a read-only DirContext.\n\tDirContext getReadOnlyContext();\n\t// Gets a read-write DirContext instance.\n\tDirContext getReadWriteContext();\n\t// Get the target ContextSource.\n\tContextSource getTarget();\n}", "des": "A proxy for ContextSource to make sure that the returned DirContext objects are aware of the surrounding transactions."}
{"index": 10611, "repo": "spring-ldap-core-3.1.0", "code": "public class UnbindOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor to manage an unbind operation."}
{"index": 10612, "repo": "spring-web-6.0.11", "code": "public abstract class AbstractWireFeedHttpMessageConverter<T extends com.rometools.rome.feed.WireFeed> extends AbstractHttpMessageConverter<T> {\n\t// Abstract template method that reads the actual object.\n\tprotected T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage);\n\t// Abstract template method that writes the actual body.\n\tprotected void writeInternal(T wireFeed, HttpOutputMessage outputMessage);\n}", "des": "Abstract base class for Atom and RSS Feed message converters, using the ROME tools project."}
{"index": 10613, "repo": "spring-web-6.0.11", "code": "public class AsyncRequestTimeoutException extends RuntimeException implements ErrorResponse {\n\t// Return the body for the response, formatted as an RFC 7807 ProblemDetail whose status should match the response status.\n\tProblemDetail getBody();\n\t// Return the HTTP status code to use for the response.\n\tHttpStatusCode getStatusCode();\n}", "des": "Exception to be thrown when an async request times out."}
{"index": 10614, "repo": "spring-web-6.0.11", "code": "public class BufferingClientHttpRequestFactory extends AbstractClientHttpRequestFactoryWrapper {\n\t// Create a new ClientHttpRequest for the specified URI and HTTP method by using the passed-on request factory.\n\tprotected ClientHttpRequest createRequest(URI uri, HttpMethod httpMethod, ClientHttpRequestFactory requestFactory);\n\t// Indicates whether the request/response exchange for the given URI and method should be buffered in memory.\n\tprotected boolean shouldBuffer(URI uri, HttpMethod httpMethod);\n}", "des": "Wrapper for a ClientHttpRequestFactory that buffers all outgoing and incoming streams in memory."}
{"index": 10615, "repo": "spring-web-6.0.11", "code": "public interface ClientCodecConfigurer extends CodecConfigurer {\n\t// Create a copy of this CodecConfigurer.\n\tClientCodecConfigurer clone();\n\t// Static factory method for a ClientCodecConfigurer.\n\tstatic ClientCodecConfigurer create();\n\t// Provides a way to customize or replace HTTP message readers and writers registered by default.\n\tClientCodecConfigurer.ClientDefaultCodecs defaultCodecs();\n}", "des": "Extension of CodecConfigurer for HTTP message reader and writer options relevant on the client side."}
{"index": 10616, "repo": "spring-web-6.0.11", "code": "public enum ClientHttpObservationDocumentation extends Enum<ClientHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ClientHttpObservationDocumentation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ClientHttpObservationDocumentation[] values();\n}", "des": "Documented KeyValues for HTTP client observations."}
{"index": 10617, "repo": "spring-web-6.0.11", "code": "public interface ClientHttpRequest extends ReactiveHttpOutputMessage {\n\t// Return a mutable map of request cookies to send to the server.\n\torg.springframework.util.MultiValueMap<String,HttpCookie> getCookies();\n\t// Return the HTTP method of the request.\n\tHttpMethod getMethod();\n\t// Return the request from the underlying HTTP library.\n\t<T> T getNativeRequest();\n\t// Return the URI of the request.\n\tURI getURI();\n}", "des": "Represents a client-side reactive HTTP request."}
{"index": 10618, "repo": "spring-web-6.0.11", "code": "public interface ClientHttpResponse extends HttpInputMessage, Closeable {\n\t// Close this response, freeing any resources created.\n\tvoid close();\n\t// Deprecated. as of 6.0, in favor of getStatusCode(); scheduled for removal in 6.2\n\tint getRawStatusCode();\n\t// Get the HTTP status code as an HttpStatusCode.\n\tHttpStatusCode getStatusCode();\n\t// Get the HTTP status text of the response.\n\tString getStatusText();\n}", "des": "Represents a client-side HTTP response."}
{"index": 10619, "repo": "spring-web-6.0.11", "code": "public class ClientRequestObservationContext extends io.micrometer.observation.transport.RequestReplySenderContext<ClientHttpRequest,ClientHttpResponse> {\n\t// Return the URI template used for the current client exchange, null if none was used.\n\tString getUriTemplate();\n\t// Set the URI template used for the current client exchange.\n\tvoid setUriTemplate(String uriTemplate);\n}", "des": "Context that holds information for metadata collection during the client HTTP exchanges observations."}
{"index": 10620, "repo": "spring-web-6.0.11", "code": "public static interface CodecConfigurer.DefaultCodecConfig {\n\t// Whether to log form data at DEBUG level, and headers at TRACE level.\n\tBoolean isEnableLoggingRequestDetails();\n\t// Get the configured limit on the number of bytes that can be buffered whenever the input stream needs to be aggregated.\n\tInteger maxInMemorySize();\n}", "des": "Exposes the values of properties configured through CodecConfigurer.defaultCodecs() that are applied to default codecs."}
{"index": 10621, "repo": "spring-web-6.0.11", "code": "public static interface CodecConfigurer.MultipartCodecs {\n\t// Add a Part Encoder, internally wrapped with EncoderHttpMessageWriter.\n\tCodecConfigurer.MultipartCodecs encoder(org.springframework.core.codec.Encoder<?> encoder);\n\t// Add a Part HttpMessageWriter.\n\tCodecConfigurer.MultipartCodecs writer(HttpMessageWriter<?> writer);\n}", "des": "Registry and container for multipart HTTP message writers."}
{"index": 10622, "repo": "spring-web-6.0.11", "code": "public class ContextLoaderListener extends ContextLoader implements ServletContextListener {\n\t// Close the root web application context.\n\tvoid contextDestroyed(ServletContextEvent event);\n\t// Initialize the root web application context.\n\tvoid contextInitialized(ServletContextEvent event);\n}", "des": "Bootstrap listener to start up and shut down Spring's root WebApplicationContext."}
{"index": 10623, "repo": "spring-web-6.0.11", "code": "public class CorsFilter extends OncePerRequestFilter {\n\t// Same contract as for doFilter, but guaranteed to be just invoked once per request within a single request thread.\n\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain);\n\t// Configure a custom CorsProcessor to use to apply the matched CorsConfiguration for a request.\n\tvoid setCorsProcessor(CorsProcessor processor);\n}", "des": "Filter to handle CORS pre-flight requests and intercept CORS simple and actual requests with a CorsProcessor, and to update the response, e.g."}
{"index": 10624, "repo": "spring-web-6.0.11", "code": "public abstract class CorsUtils extends Object {\n\t// Returns true if the request is a valid CORS one by checking Origin header presence and ensuring that origins are different.\n\tstatic boolean isCorsRequest(HttpServletRequest request);\n\t// Returns true if the request is a valid CORS pre-flight one by checking OPTIONS method with Origin and Access-Control-Request-Method headers presence.\n\tstatic boolean isPreFlightRequest(HttpServletRequest request);\n}", "des": "Utility class for CORS request handling based on the CORS W3C recommendation."}
{"index": 10625, "repo": "spring-web-6.0.11", "code": "public static enum DefaultUriBuilderFactory.EncodingMode extends Enum<DefaultUriBuilderFactory.EncodingMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic DefaultUriBuilderFactory.EncodingMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic DefaultUriBuilderFactory.EncodingMode[] values();\n}", "des": "Enum to represent multiple URI encoding strategies."}
{"index": 10626, "repo": "spring-web-6.0.11", "code": "public class ErrorsMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver {\n\t// Resolves a method parameter into an argument value from a given request.\n\tObject resolveArgument(org.springframework.core.MethodParameter parameter, ModelAndViewContainer mavContainer, NativeWebRequest webRequest, WebDataBinderFactory binderFactory);\n\t// Whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Resolves Errors method arguments."}
{"index": 10627, "repo": "spring-web-6.0.11", "code": "public class ExceptionHandlerMethodResolver extends Object {\n\t// Whether the contained type has any exception mappings.\n\tboolean hasExceptionMappings();\n\t// Find a Method to handle the given exception.\n\tMethod resolveMethod(Exception exception);\n\t// Find a Method to handle the given exception type.\n\tMethod resolveMethodByExceptionType(Class<? extends Throwable> exceptionType);\n\t// Find a Method to handle the given Throwable.\n\tMethod resolveMethodByThrowable(Throwable exception);\n}", "des": "Discovers @ExceptionHandler methods in a given class, including all of its superclasses, and helps to resolve a given Exception to the exception types supported by a given Method."}
{"index": 10628, "repo": "spring-web-6.0.11", "code": "public class ExceptionHandlingWebHandler extends WebHandlerDecorator {\n\t// Return a read-only list of the configured exception handlers.\n\tList<WebExceptionHandler> getExceptionHandlers();\n\t// Handle the web server exchange.\n\treactor.core.publisher.Mono<Void> handle(ServerWebExchange exchange);\n}", "des": "WebHandler decorator that invokes one or more WebExceptionHandlers after the delegate WebHandler."}
{"index": 10629, "repo": "spring-web-6.0.11", "code": "public interface FilePart extends Part {\n\t// Return the original filename in the client's filesystem.\n\tString filename();\n\t// Convenience method to copy the content of the file in this part to the given destination file.\n\tdefault reactor.core.publisher.Mono<Void> transferTo(File dest);\n\t// Convenience method to copy the content of the file in this part to the given destination file.\n\treactor.core.publisher.Mono<Void> transferTo(Path dest);\n}", "des": "Specialization of Part that represents an uploaded file received in a multipart request."}
{"index": 10630, "repo": "spring-web-6.0.11", "code": "public class FilteringWebHandler extends WebHandlerDecorator {\n\t// Return a read-only list of the configured filters.\n\tList<WebFilter> getFilters();\n\t// Handle the web server exchange.\n\treactor.core.publisher.Mono<Void> handle(ServerWebExchange exchange);\n}", "des": "WebHandlerDecorator that invokes a chain of WebFilters before invoking the delegate WebHandler."}
{"index": 10631, "repo": "spring-web-6.0.11", "code": "public class FixedContentNegotiationStrategy extends Object implements ContentNegotiationStrategy {\n\t// Return the configured list of media types.\n\tList<MediaType> getContentTypes();\n\t// Resolve the given request to a list of media types.\n\tList<MediaType> resolveMediaTypes(NativeWebRequest request);\n}", "des": "A ContentNegotiationStrategy that returns a fixed content type."}
{"index": 10632, "repo": "spring-web-6.0.11", "code": "public class FixedLocaleContextResolver extends Object implements LocaleContextResolver {\n\t// Resolve the current locale context via the given exchange.\n\torg.springframework.context.i18n.LocaleContext resolveLocaleContext(ServerWebExchange exchange);\n\t// Set the current locale context to the given one, potentially including a locale with associated time zone information.\n\tvoid setLocaleContext(ServerWebExchange exchange, org.springframework.context.i18n.LocaleContext localeContext);\n}", "des": "LocaleContextResolver implementation that always returns a fixed locale and optionally time zone."}
{"index": 10633, "repo": "spring-web-6.0.11", "code": "public class FormContentFilter extends OncePerRequestFilter {\n\t// Same contract as for doFilter, but guaranteed to be just invoked once per request within a single request thread.\n\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain);\n\t// The default character set to use for reading form data.\n\tvoid setCharset(Charset charset);\n\t// Set the converter to use for parsing form content.\n\tvoid setFormConverter(FormHttpMessageConverter converter);\n}", "des": "Filter that parses form data for HTTP PUT, PATCH, and DELETE requests and exposes it as Servlet request parameters."}
{"index": 10634, "repo": "spring-web-6.0.11", "code": "public interface FormPartEvent extends PartEvent {\n\t// Creates a stream with a single FormPartEven based on the given name and value.\n\tstatic reactor.core.publisher.Mono<FormPartEvent> create(String name, String value);\n\t// Creates a stream with a single FormPartEven based on the given name and value.\n\tstatic reactor.core.publisher.Mono<FormPartEvent> create(String name, String value, Consumer<HttpHeaders> headersConsumer);\n\t// Return the form field value.\n\tString value();\n}", "des": "Represents an event triggered for a form field."}
{"index": 10635, "repo": "spring-web-6.0.11", "code": "public interface HandlerMethodArgumentResolver {\n\t// Resolves a method parameter into an argument value from a given request.\n\tObject resolveArgument(org.springframework.core.MethodParameter parameter, ModelAndViewContainer mavContainer, NativeWebRequest webRequest, WebDataBinderFactory binderFactory);\n\t// Whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Strategy interface for resolving method parameters into argument values in the context of a given request."}
{"index": 10636, "repo": "spring-web-6.0.11", "code": "public class HiddenHttpMethodFilter extends OncePerRequestFilter {\n\t// Same contract as for doFilter, but guaranteed to be just invoked once per request within a single request thread.\n\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain);\n\t// Set the parameter name to look for HTTP methods.\n\tvoid setMethodParam(String methodParam);\n}", "des": "Filter that converts posted method parameters into HTTP methods, retrievable via HttpServletRequest.getMethod()."}
{"index": 10637, "repo": "spring-web-6.0.11", "code": "public class HiddenHttpMethodFilter extends Object implements WebFilter {\n\t// Transform an HTTP POST into another method based on methodParamName.\n\treactor.core.publisher.Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain);\n\t// Set the name of the form parameter with the HTTP method to use.\n\tvoid setMethodParamName(String methodParamName);\n}", "des": "Reactive WebFilter that converts posted method parameters into HTTP methods, retrievable via HttpRequest.getMethod()."}
{"index": 10638, "repo": "spring-web-6.0.11", "code": "public class HttpCookie extends Object {\n\tboolean equals(Object other);\n\t// Return the cookie name.\n\tString getName();\n\t// Return the cookie value or an empty string (never null).\n\tString getValue();\n}", "des": "Represents an HTTP cookie as a name-value pair consistent with the content of the \"Cookie\" request header."}
{"index": 10639, "repo": "spring-web-6.0.11", "code": "public class HttpEntity<T> extends Object {\n\tboolean equals(Object other);\n\t// Returns the body of this entity.\n\tT getBody();\n\t// Returns the headers of this entity.\n\tHttpHeaders getHeaders();\n\t// Indicates whether this entity has a body.\n\tboolean hasBody();\n}", "des": "Represents an HTTP request or response entity, consisting of headers and body."}
{"index": 10640, "repo": "spring-web-6.0.11", "code": "public class HttpHeadResponseDecorator extends ServerHttpResponseDecorator {\n\t// Invoke ServerHttpResponseDecorator.setComplete() without writing.\n\tfinal reactor.core.publisher.Mono<Void> writeAndFlushWith(Publisher<? extends Publisher<? extends org.springframework.core.io.buffer.DataBuffer>> body);\n\t// Consume and release the body without writing.\n\tfinal reactor.core.publisher.Mono<Void> writeWith(Publisher<? extends org.springframework.core.io.buffer.DataBuffer> body);\n}", "des": "ServerHttpResponse decorator for HTTP HEAD requests."}
{"index": 10641, "repo": "spring-web-6.0.11", "code": "public class HttpMediaTypeNotAcceptableException extends HttpMediaTypeException {\n\t// Return headers to use for the response.\n\tHttpHeaders getHeaders();\n\t// Return the HTTP status code to use for the response.\n\tHttpStatusCode getStatusCode();\n}", "des": "Exception thrown when the request handler cannot generate a response that is acceptable by the client."}
{"index": 10642, "repo": "spring-web-6.0.11", "code": "public class HttpMediaTypeNotSupportedException extends HttpMediaTypeException {\n\t// Return the HTTP request content type method that caused the failure.\n\tMediaType getContentType();\n\t// Return headers to use for the response.\n\tHttpHeaders getHeaders();\n\t// Return the HTTP status code to use for the response.\n\tHttpStatusCode getStatusCode();\n}", "des": "Exception thrown when a client POSTs, PUTs, or PATCHes content of a type not supported by request handler."}
{"index": 10643, "repo": "spring-web-6.0.11", "code": "public class HttpMessageConverterExtractor<T> extends Object implements ResponseExtractor<T> {\n\t// Extract data from the given ClientHttpResponse and return it.\n\tT extractData(ClientHttpResponse response);\n\t// Determine the Content-Type of the response based on the \"Content-Type\" header or otherwise default to MediaType.APPLICATION_OCTET_STREAM.\n\tprotected MediaType getContentType(ClientHttpResponse response);\n}", "des": "Response extractor that uses the given entity converters to convert the response into a type T."}
{"index": 10644, "repo": "spring-web-6.0.11", "code": "public interface HttpRequest extends HttpMessage {\n\t// Return the HTTP method of the request.\n\tHttpMethod getMethod();\n\t// Deprecated, for removal: This API element is subject to removal in a future version. as of Spring Framework 6.0 in favor of getMethod() and HttpMethod.name()\n\tdefault String getMethodValue();\n\t// Return the URI of the request (including a query string if any, but only if it is well-formed for a URI representation).\n\tURI getURI();\n}", "des": "Represents an HTTP request message, consisting of a method and a URI."}
{"index": 10645, "repo": "spring-web-6.0.11", "code": "public class HttpRequestWrapper extends Object implements HttpRequest {\n\t// Return the headers of the wrapped request.\n\tHttpHeaders getHeaders();\n\t// Return the method of the wrapped request.\n\tHttpMethod getMethod();\n\t// Return the wrapped request.\n\tHttpRequest getRequest();\n\t// Return the URI of the wrapped request.\n\tURI getURI();\n}", "des": "Provides a convenient implementation of the HttpRequest interface that can be overridden to adapt the request."}
{"index": 10646, "repo": "spring-web-6.0.11", "code": "public final class HttpServiceProxyFactory extends Object {\n\t// Return an empty builder, with the client to be provided to builder.\n\tstatic HttpServiceProxyFactory.Builder builder();\n\t// Return a builder that's initialized with the given client.\n\tstatic HttpServiceProxyFactory.Builder builder(HttpClientAdapter clientAdapter);\n\t// Return a proxy that implements the given HTTP service interface to perform HTTP requests and retrieve responses through an HTTP client.\n\t<S> S createClient(Class<S> serviceType);\n}", "des": "Factory to create a client proxy from an HTTP service interface with @HttpExchange methods."}
{"index": 10647, "repo": "spring-web-6.0.11", "code": "public class InitBinderDataBinderFactory extends DefaultDataBinderFactory {\n\t// Initialize a WebDataBinder with @InitBinder methods.\n\tvoid initBinder(WebDataBinder dataBinder, NativeWebRequest request);\n\t// Determine whether the given @InitBinder method should be used to initialize the given WebDataBinder instance.\n\tprotected boolean isBinderMethodApplicable(HandlerMethod initBinderMethod, WebDataBinder dataBinder);\n}", "des": "Adds initialization to a WebDataBinder via @InitBinder methods."}
{"index": 10648, "repo": "spring-web-6.0.11", "code": "public class Jackson2JsonEncoder extends AbstractJackson2Encoder {\n\t// Subclasses can use this method to customize the ObjectWriter used for writing values.\n\tprotected ObjectWriter customizeWriter(ObjectWriter writer, org.springframework.util.MimeType mimeType, org.springframework.core.ResolvableType elementType, Map<String,Object> hints);\n\t// Return the supported media type(s) for ProblemDetail.\n\tprotected List<org.springframework.util.MimeType> getMediaTypesForProblemDetail();\n}", "des": "Encode from an Object stream to a byte stream of JSON objects using Jackson 2.x."}
{"index": 10649, "repo": "spring-web-6.0.11", "code": "public class JdkHttpClientResourceFactory extends Object implements org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean {\n\tvoid afterPropertiesSet();\n\tvoid destroy();\n\t// Return the configured Executor.\n\tExecutor getExecutor();\n\t// Configure the Executor to use for HttpClient exchanges.\n\tvoid setExecutor(Executor executor);\n\t// Configure the thread prefix to initialize the executor with.\n\tvoid setThreadPrefix(String threadPrefix);\n}", "des": "Factory to manage JDK HttpClient resources such as a shared Executor within the lifecycle of a Spring ApplicationContext."}
{"index": 10650, "repo": "spring-web-6.0.11", "code": "public interface LocaleContextResolver {\n\t// Resolve the current locale context via the given exchange.\n\torg.springframework.context.i18n.LocaleContext resolveLocaleContext(ServerWebExchange exchange);\n\t// Set the current locale context to the given one, potentially including a locale with associated time zone information.\n\tvoid setLocaleContext(ServerWebExchange exchange, org.springframework.context.i18n.LocaleContext localeContext);\n}", "des": "Interface for web-based locale context resolution strategies that allows for both locale context resolution via the request and locale context modification via the HTTP exchange."}
{"index": 10651, "repo": "spring-web-6.0.11", "code": "public class LoggingCodecSupport extends Object {\n\t// Whether any logging of values being encoded or decoded is explicitly disabled regardless of log level.\n\tboolean isEnableLoggingRequestDetails();\n\t// Whether to log form data at DEBUG level, and headers at TRACE level.\n\tvoid setEnableLoggingRequestDetails(boolean enable);\n}", "des": "Base class for Encoder, Decoder, HttpMessageReader, or HttpMessageWriter that uses a logger and shows potentially sensitive request data."}
{"index": 10652, "repo": "spring-web-6.0.11", "code": "public class MappingJackson2XmlHttpMessageConverter extends AbstractJackson2HttpMessageConverter {\n\t// Return the supported media type(s) for ProblemDetail.\n\tprotected List<MediaType> getMediaTypesForProblemDetail();\n\t// Configure the main ObjectMapper to use for Object conversion.\n\tvoid setObjectMapper(ObjectMapper objectMapper);\n}", "des": "Implementation of HttpMessageConverter that can read and write XML using Jackson 2.x extension component for reading and writing XML encoded data."}
{"index": 10653, "repo": "spring-web-6.0.11", "code": "public class MappingJacksonInputMessage extends Object implements HttpInputMessage {\n\t// Return the body of the message as an input stream.\n\tInputStream getBody();\n\tClass<?> getDeserializationView();\n\t// Return the headers of this message.\n\tHttpHeaders getHeaders();\n\tvoid setDeserializationView(Class<?> deserializationView);\n}", "des": "HttpInputMessage that can eventually stores a Jackson view that will be used to deserialize the message."}
{"index": 10654, "repo": "spring-web-6.0.11", "code": "public final class MediaTypeFactory extends Object {\n\t// Determine a media type for the given file name, if possible.\n\tstatic Optional<MediaType> getMediaType(String filename);\n\t// Determine a media type for the given resource, if possible.\n\tstatic Optional<MediaType> getMediaType(org.springframework.core.io.Resource resource);\n\t// Determine the media types for the given file name, if possible.\n\tstatic List<MediaType> getMediaTypes(String filename);\n}", "des": "A factory delegate for resolving MediaType objects from Resource handles or filenames."}
{"index": 10655, "repo": "spring-web-6.0.11", "code": "public interface MediaTypeFileExtensionResolver {\n\t// Get all registered file extensions.\n\tList<String> getAllFileExtensions();\n\t// Resolve the given media type to a list of file extensions.\n\tList<String> resolveFileExtensions(MediaType mediaType);\n}", "des": "Strategy to resolve a MediaType to a list of file extensions — for example, to resolve \"application/json\" to \"json\"."}
{"index": 10656, "repo": "spring-web-6.0.11", "code": "public class MethodArgumentConversionNotSupportedException extends org.springframework.beans.ConversionNotSupportedException {\n\t// Return the name of the method argument.\n\tString getName();\n\t// Return the target method parameter.\n\torg.springframework.core.MethodParameter getParameter();\n}", "des": "A ConversionNotSupportedException raised while resolving a method argument."}
{"index": 10657, "repo": "spring-web-6.0.11", "code": "public class MethodArgumentTypeMismatchException extends org.springframework.beans.TypeMismatchException {\n\t// Return the name of the method argument.\n\tString getName();\n\t// Return the target method parameter.\n\torg.springframework.core.MethodParameter getParameter();\n}", "des": "A TypeMismatchException raised while resolving a controller method argument."}
{"index": 10658, "repo": "spring-web-6.0.11", "code": "public class MethodNotAllowedException extends ResponseStatusException {\n\t// Return HttpHeaders with an \"Allow\" header that documents the allowed HTTP methods for this URL, if available, or an empty instance otherwise.\n\tHttpHeaders getHeaders();\n\t// Return the HTTP method for the failed request.\n\tString getHttpMethod();\n\t// Deprecated. as of 6.0 in favor of getHeaders()\n\tHttpHeaders getResponseHeaders();\n\t// Return the list of supported HTTP methods.\n\tSet<HttpMethod> getSupportedMethods();\n}", "des": "Exception for errors that fit response status 405 (method not allowed)."}
{"index": 10659, "repo": "spring-web-6.0.11", "code": "public class MissingMatrixVariableException extends MissingRequestValueException {\n\tString getMessage();\n\t// Return the method parameter bound to the matrix variable.\n\tfinal org.springframework.core.MethodParameter getParameter();\n\t// Return the expected name of the matrix variable.\n\tfinal String getVariableName();\n}", "des": "ServletRequestBindingException subclass that indicates that a matrix variable expected in the method parameters of an @RequestMapping method is not present among the matrix variables extracted from the URL."}
{"index": 10660, "repo": "spring-web-6.0.11", "code": "public class MissingPathVariableException extends MissingRequestValueException {\n\tString getMessage();\n\t// Return the method parameter bound to the path variable.\n\tfinal org.springframework.core.MethodParameter getParameter();\n\t// Return the HTTP status code to use for the response.\n\tHttpStatusCode getStatusCode();\n\t// Return the expected name of the path variable.\n\tfinal String getVariableName();\n}", "des": "ServletRequestBindingException subclass that indicates that a path variable expected in the method parameters of an @RequestMapping method is not present among the URI variables extracted from the URL."}
{"index": 10661, "repo": "spring-web-6.0.11", "code": "public class MissingRequestCookieException extends MissingRequestValueException {\n\t// Return the expected name of the request cookie.\n\tfinal String getCookieName();\n\tString getMessage();\n\t// Return the method parameter bound to the request cookie.\n\tfinal org.springframework.core.MethodParameter getParameter();\n}", "des": "ServletRequestBindingException subclass that indicates that a request cookie expected in the method parameters of an @RequestMapping method is not present."}
{"index": 10662, "repo": "spring-web-6.0.11", "code": "public class MissingRequestHeaderException extends MissingRequestValueException {\n\t// Return the expected name of the request header.\n\tfinal String getHeaderName();\n\tString getMessage();\n\t// Return the method parameter bound to the request header.\n\tfinal org.springframework.core.MethodParameter getParameter();\n}", "des": "ServletRequestBindingException subclass that indicates that a request header expected in the method parameters of an @RequestMapping method is not present."}
{"index": 10663, "repo": "spring-web-6.0.11", "code": "public class MissingRequestValueException extends ServerWebInputException {\n\t// Return a label that describes the request value, e.g.\n\tString getLabel();\n\t// Return the name of the missing value, e.g.\n\tString getName();\n\t// Return the target type the value is converted when present.\n\tClass<?> getType();\n}", "des": "ServerWebInputException subclass that indicates a missing request value such as a request header, cookie value, query parameter, etc."}
{"index": 10664, "repo": "spring-web-6.0.11", "code": "public class MissingServletRequestParameterException extends MissingRequestValueException {\n\tString getMessage();\n\t// Return the name of the offending parameter.\n\tfinal String getParameterName();\n\t// Return the expected type of the offending parameter.\n\tfinal String getParameterType();\n}", "des": "ServletRequestBindingException subclass that indicates a missing parameter."}
{"index": 10665, "repo": "spring-web-6.0.11", "code": "public interface MultipartHttpServletRequest extends HttpServletRequest, MultipartRequest {\n\t// Return the headers for the specified part of the multipart request.\n\tHttpHeaders getMultipartHeaders(String paramOrFileName);\n\t// Return this request's headers as a convenient HttpHeaders instance.\n\tHttpHeaders getRequestHeaders();\n\t// Return this request's method as a convenient HttpMethod instance.\n\tHttpMethod getRequestMethod();\n}", "des": "Provides additional methods for dealing with multipart content within a servlet request, allowing to access uploaded files."}
{"index": 10666, "repo": "spring-web-6.0.11", "code": "public interface NativeWebRequest extends WebRequest {\n\t// Return the underlying native request object.\n\tObject getNativeRequest();\n\t// Return the underlying native request object, if available.\n\t<T> T getNativeRequest(Class<T> requiredType);\n\t// Return the underlying native response object, if any.\n\tObject getNativeResponse();\n\t// Return the underlying native response object, if available.\n\t<T> T getNativeResponse(Class<T> requiredType);\n}", "des": "Extension of the WebRequest interface, exposing the native request and response objects in a generic fashion."}
{"index": 10667, "repo": "spring-web-6.0.11", "code": "public class NotAcceptableStatusException extends ResponseStatusException {\n\t// Return HttpHeaders with an \"Accept\" header that documents the supported media types, if available, or an empty instance otherwise.\n\tHttpHeaders getHeaders();\n\t// Deprecated. as of 6.0 in favor of getHeaders()\n\tHttpHeaders getResponseHeaders();\n\t// Return the list of supported content types in cases when the Accept header is parsed but not supported, or an empty list otherwise.\n\tList<MediaType> getSupportedMediaTypes();\n}", "des": "Exception for errors that fit response status 406 (not acceptable)."}
{"index": 10668, "repo": "spring-web-6.0.11", "code": "public class ParameterContentNegotiationStrategy extends AbstractMappingContentNegotiationStrategy {\n\t// Extract a key from the request to use to look up media types.\n\tprotected String getMediaTypeKey(NativeWebRequest request);\n\tString getParameterName();\n\t// Set the name of the parameter to use to determine requested media types.\n\tvoid setParameterName(String parameterName);\n}", "des": "Strategy that resolves the requested content type from a query parameter."}
{"index": 10669, "repo": "spring-web-6.0.11", "code": "public interface Part {\n\t// Return the content for this part.\n\treactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> content();\n\t// Return a mono that, when subscribed to, deletes the underlying storage for this part.\n\tdefault reactor.core.publisher.Mono<Void> delete();\n\t// Return the headers associated with the part.\n\tHttpHeaders headers();\n\t// Return the name of the part in the multipart form.\n\tString name();\n}", "des": "Representation for a part in a \"multipart/form-data\" request."}
{"index": 10670, "repo": "spring-web-6.0.11", "code": "public interface PartEvent {\n\t// Return the content of this event.\n\torg.springframework.core.io.buffer.DataBuffer content();\n\t// Return the headers of the part that this event belongs to.\n\tHttpHeaders headers();\n\t// Indicates whether this is the last event of a particular part.\n\tboolean isLast();\n\t// Return the name of the event, as provided through the Content-Disposition name parameter.\n\tdefault String name();\n}", "des": "Represents an event for a \"multipart/form-data\" request."}
{"index": 10671, "repo": "spring-web-6.0.11", "code": "public static interface PathContainer.PathSegment extends PathContainer.Element {\n\t// Path parameters associated with this path segment.\n\torg.springframework.util.MultiValueMap<String,String> parameters();\n\t// Return the path segment value, decoded and sanitized, for path matching.\n\tString valueToMatch();\n\t// Expose valueToMatch() as a character array.\n\tchar[] valueToMatchAsChars();\n}", "des": "Path segment element."}
{"index": 10672, "repo": "spring-web-6.0.11", "code": "public static class PathPattern.PathMatchInfo extends Object {\n\t// Return maps of matrix variables per path segment, keyed off by URI variable name.\n\tMap<String,org.springframework.util.MultiValueMap<String,String>> getMatrixVariables();\n\t// Return the extracted URI variables.\n\tMap<String,String> getUriVariables();\n}", "des": "Holder for URI variables and path parameters (matrix variables) extracted based on the pattern for a given matched path."}
{"index": 10673, "repo": "spring-web-6.0.11", "code": "public class PatternParseException extends IllegalArgumentException {\n\tObject[] getInserts();\n\t// Return a formatted message with inserts applied.\n\tString getMessage();\n\tPatternParseException.PatternMessage getMessageType();\n\tint getPosition();\n\t// Return a detailed message that includes the original pattern text with a pointer to the error position, as well as the error message.\n\tString toDetailedString();\n}", "des": "Exception that is thrown when there is a problem with the pattern being parsed."}
{"index": 10674, "repo": "spring-web-6.0.11", "code": "public static enum PatternParseException.PatternMessage extends Enum<PatternParseException.PatternMessage> {\n\tString formatMessage(Object... inserts);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PatternParseException.PatternMessage valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PatternParseException.PatternMessage[] values();\n}", "des": "The messages that can be included in a PatternParseException when there is a parse failure."}
{"index": 10675, "repo": "spring-web-6.0.11", "code": "public class ProxyFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<Proxy>, org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\tProxy getObject();\n\tClass<?> getObjectType();\n\tboolean isSingleton();\n\t// Set the proxy host name.\n\tvoid setHostname(String hostname);\n\t// Set the proxy port.\n\tvoid setPort(int port);\n\t// Set the proxy type.\n\tvoid setType(Proxy.Type type);\n}", "des": "FactoryBean that creates a java.net.Proxy."}
{"index": 10676, "repo": "spring-web-6.0.11", "code": "public class RelativeRedirectFilter extends OncePerRequestFilter {\n\t// Same contract as for doFilter, but guaranteed to be just invoked once per request within a single request thread.\n\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain);\n\t// Return the configured redirect status.\n\tHttpStatusCode getRedirectStatus();\n\t// Set the default HTTP Status to use for redirects.\n\tvoid setRedirectStatus(HttpStatusCode status);\n}", "des": "Overrides HttpServletResponse.sendRedirect(String) and handles it by setting the HTTP status and \"Location\" headers, which keeps the Servlet container from re-writing relative redirect URLs into absolute ones."}
{"index": 10677, "repo": "spring-web-6.0.11", "code": "public class RequestPartServletServerHttpRequest extends ServletServerHttpRequest {\n\t// Return the body of the message as an input stream.\n\tInputStream getBody();\n\t// Return the headers of this message.\n\tHttpHeaders getHeaders();\n}", "des": "ServerHttpRequest implementation that accesses one part of a multipart request."}
{"index": 10678, "repo": "spring-web-6.0.11", "code": "public class RequestScope extends AbstractRequestAttributesScope {\n\t// There is no conversation id concept for a request, so this method returns null.\n\tString getConversationId();\n\t// Template method that determines the actual target scope.\n\tprotected int getScope();\n}", "des": "Request-backed Scope implementation."}
{"index": 10679, "repo": "spring-web-6.0.11", "code": "public static interface ResponseEntity.BodyBuilder extends ResponseEntity.HeadersBuilder<ResponseEntity.BodyBuilder> {\n\t// Set the body of the response entity and returns it.\n\t<T> ResponseEntity<T> body(T body);\n\t// Set the length of the body in bytes, as specified by the Content-Length header.\n\tResponseEntity.BodyBuilder contentLength(long contentLength);\n\t// Set the media type of the body, as specified by the Content-Type header.\n\tResponseEntity.BodyBuilder contentType(MediaType contentType);\n}", "des": "Defines a builder that adds a body to the response entity."}
{"index": 10680, "repo": "spring-web-6.0.11", "code": "public interface ResponseErrorHandler {\n\t// Alternative to handleError(ClientHttpResponse) with extra information providing access to the request URL and HTTP method.\n\tdefault void handleError(URI url, HttpMethod method, ClientHttpResponse response);\n\t// Handle the error in the given response.\n\tvoid handleError(ClientHttpResponse response);\n\t// Indicate whether the given response has any errors.\n\tboolean hasError(ClientHttpResponse response);\n}", "des": "Strategy interface used by the RestTemplate to determine whether a particular response has an error or not."}
{"index": 10681, "repo": "spring-web-6.0.11", "code": "public class ResponseStatusException extends ErrorResponseException {\n\t// Return headers to add to the error response, e.g.\n\tHttpHeaders getHeaders();\n\tString getMessage();\n\t// The reason explaining the exception (potentially null or empty).\n\tString getReason();\n\t// Deprecated. as of 6.0 in favor of getHeaders()\n\tHttpHeaders getResponseHeaders();\n}", "des": "Subclass of ErrorResponseException that accepts a \"reason\", and by default maps that to the \"detail\" of the ProblemDetail."}
{"index": 10682, "repo": "spring-web-6.0.11", "code": "public class RestGatewaySupport extends Object {\n\t// Returns the RestTemplate for the gateway.\n\tRestTemplate getRestTemplate();\n\t// Sets the RestTemplate for the gateway.\n\tvoid setRestTemplate(RestTemplate restTemplate);\n}", "des": "Convenient superclass for application classes that need REST access."}
{"index": 10683, "repo": "spring-web-6.0.11", "code": "public interface ServerCodecConfigurer extends CodecConfigurer {\n\t// Create a copy of this CodecConfigurer.\n\tServerCodecConfigurer clone();\n\t// Static factory method for a ServerCodecConfigurer.\n\tstatic ServerCodecConfigurer create();\n\t// Provides a way to customize or replace HTTP message readers and writers registered by default.\n\tServerCodecConfigurer.ServerDefaultCodecs defaultCodecs();\n}", "des": "Extension of CodecConfigurer for HTTP message reader and writer options relevant on the server side."}
{"index": 10684, "repo": "spring-web-6.0.11", "code": "public class ServerErrorException extends ResponseStatusException {\n\t// Return the handler method associated with the error, if any.\n\tMethod getHandlerMethod();\n\t// Return the specific method parameter associated with the error, if any.\n\torg.springframework.core.MethodParameter getMethodParameter();\n}", "des": "Exception for an HttpStatus.INTERNAL_SERVER_ERROR that exposes extra information about a controller method that failed, or a controller method argument that could not be resolved."}
{"index": 10685, "repo": "spring-web-6.0.11", "code": "public enum ServerHttpObservationDocumentation extends Enum<ServerHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ServerHttpObservationDocumentation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ServerHttpObservationDocumentation[] values();\n}", "des": "Documented KeyValues for the HTTP server observations for Servlet-based web applications."}
{"index": 10686, "repo": "spring-web-6.0.11", "code": "public enum ServerHttpObservationDocumentation extends Enum<ServerHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ServerHttpObservationDocumentation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ServerHttpObservationDocumentation[] values();\n}", "des": "Documented KeyValues for the HTTP server observations for reactive web applications."}
{"index": 10687, "repo": "spring-web-6.0.11", "code": "public class ServerHttpObservationFilter extends Object implements WebFilter {\n\t// Process the Web request and (optionally) delegate to the next WebFilter through the given WebFilterChain.\n\treactor.core.publisher.Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain);\n\t// Get the current observation context from the given request, if available.\n\tstatic Optional<ServerRequestObservationContext> findObservationContext(ServerWebExchange exchange);\n}", "des": "WebFilter that creates observations for HTTP exchanges."}
{"index": 10688, "repo": "spring-web-6.0.11", "code": "public interface ServerHttpResponse extends HttpOutputMessage, Flushable, Closeable {\n\t// Close this response, freeing any resources created.\n\tvoid close();\n\t// Ensure that the headers and the content of the response are written out.\n\tvoid flush();\n\t// Set the HTTP status code of the response.\n\tvoid setStatusCode(HttpStatusCode status);\n}", "des": "Represents a server-side HTTP response."}
{"index": 10689, "repo": "spring-web-6.0.11", "code": "public static interface ServerSentEvent.Builder<T> {\n\t// Builds the event.\n\tServerSentEvent<T> build();\n\t// Set SSE comment.\n\tServerSentEvent.Builder<T> comment(String comment);\n\t// Set the value of the data field.\n\tServerSentEvent.Builder<T> data(T data);\n\t// Set the value of the event field.\n\tServerSentEvent.Builder<T> event(String event);\n\t// Set the value of the id field.\n\tServerSentEvent.Builder<T> id(String id);\n\t// Set the value of the retry field.\n\tServerSentEvent.Builder<T> retry(Duration retry);\n}", "des": "A mutable builder for a SseEvent."}
{"index": 10690, "repo": "spring-web-6.0.11", "code": "public class ServletContextAttributeExporter extends Object implements ServletContextAware {\n\t// Set the ServletContext attributes to expose as key-value pairs.\n\tvoid setAttributes(Map<String,Object> attributes);\n\t// Set the ServletContext that this object runs in.\n\tvoid setServletContext(ServletContext servletContext);\n}", "des": "Exporter that takes Spring-defined objects and exposes them as ServletContext attributes."}
{"index": 10691, "repo": "spring-web-6.0.11", "code": "public class ServletContextAttributeFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<Object>, ServletContextAware {\n\tObject getObject();\n\tClass<?> getObjectType();\n\tboolean isSingleton();\n\t// Set the name of the ServletContext attribute to expose.\n\tvoid setAttributeName(String attributeName);\n\t// Set the ServletContext that this object runs in.\n\tvoid setServletContext(ServletContext servletContext);\n}", "des": "FactoryBean that fetches a specific, existing ServletContext attribute."}
{"index": 10692, "repo": "spring-web-6.0.11", "code": "public class ServletContextAwareProcessor extends Object implements org.springframework.beans.factory.config.BeanPostProcessor {\n\t// Returns the ServletConfig to be injected or null.\n\tprotected ServletConfig getServletConfig();\n\t// Returns the ServletContext to be injected or null.\n\tprotected ServletContext getServletContext();\n\tObject postProcessAfterInitialization(Object bean, String beanName);\n\tObject postProcessBeforeInitialization(Object bean, String beanName);\n}", "des": "BeanPostProcessor implementation that passes the ServletContext to beans that implement the ServletContextAware interface."}
{"index": 10693, "repo": "spring-web-6.0.11", "code": "public class ServletContextParameterFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<String>, ServletContextAware {\n\tString getObject();\n\tClass<String> getObjectType();\n\tboolean isSingleton();\n\t// Set the name of the ServletContext init parameter to expose.\n\tvoid setInitParamName(String initParamName);\n\t// Set the ServletContext that this object runs in.\n\tvoid setServletContext(ServletContext servletContext);\n}", "des": "FactoryBean that retrieves a specific ServletContext init parameter (that is, a \"context-param\" defined in web.xml)."}
{"index": 10694, "repo": "spring-web-6.0.11", "code": "public class ServletContextRequestLoggingFilter extends AbstractRequestLoggingFilter {\n\t// Writes a log message after the request is processed.\n\tprotected void afterRequest(HttpServletRequest request, String message);\n\t// Writes a log message before the request is processed.\n\tprotected void beforeRequest(HttpServletRequest request, String message);\n}", "des": "Simple request logging filter that writes the request URI (and optionally the query string) to the ServletContext log."}
{"index": 10695, "repo": "spring-web-6.0.11", "code": "public class ServletRequestDataBinder extends WebDataBinder {\n\t// Extension point that subclasses can use to add extra bind values for a request.\n\tprotected void addBindValues(org.springframework.beans.MutablePropertyValues mpvs, ServletRequest request);\n\t// Bind the parameters of the given request to this binder's target, also binding multipart files in case of a multipart request.\n\tvoid bind(ServletRequest request);\n\t// Treats errors as fatal.\n\tvoid closeNoCatch();\n}", "des": "Special DataBinder to perform data binding from servlet request parameters to JavaBeans, including support for multipart files."}
{"index": 10696, "repo": "spring-web-6.0.11", "code": "public interface SessionAttributeStore {\n\t// Clean up the specified attribute in the backend session.\n\tvoid cleanupAttribute(WebRequest request, String attributeName);\n\t// Retrieve the specified attribute from the backend session.\n\tObject retrieveAttribute(WebRequest request, String attributeName);\n\t// Store the supplied attribute in the backend session.\n\tvoid storeAttribute(WebRequest request, String attributeName, Object attributeValue);\n}", "des": "Strategy interface for storing model attributes in a backend session."}
{"index": 10697, "repo": "spring-web-6.0.11", "code": "public interface SessionStatus {\n\t// Return whether the current handler's session processing has been marked as complete.\n\tboolean isComplete();\n\t// Mark the current handler's session processing as complete, allowing for cleanup of session attributes.\n\tvoid setComplete();\n}", "des": "Simple interface that can be injected into handler methods, allowing them to signal that their session processing is complete."}
{"index": 10698, "repo": "spring-web-6.0.11", "code": "public class SimpleSessionStatus extends Object implements SessionStatus {\n\t// Return whether the current handler's session processing has been marked as complete.\n\tboolean isComplete();\n\t// Mark the current handler's session processing as complete, allowing for cleanup of session attributes.\n\tvoid setComplete();\n}", "des": "Simple implementation of the SessionStatus interface, keeping the complete flag as an instance variable."}
{"index": 10699, "repo": "spring-web-6.0.11", "code": "public abstract class SpringBeanAutowiringSupport extends Object {\n\t// Process @Autowired injection for the given target object, based on the current web application context.\n\tstatic void processInjectionBasedOnCurrentContext(Object target);\n\t// Process @Autowired injection for the given target object, based on the current root web application context as stored in the ServletContext.\n\tstatic void processInjectionBasedOnServletContext(Object target, ServletContext servletContext);\n}", "des": "Convenient base class for self-autowiring classes that gets constructed within a Spring-based web application."}
{"index": 10700, "repo": "spring-web-6.0.11", "code": "public interface SslInfo {\n\t// Return SSL certificates associated with the request, if any.\n\tX509Certificate[] getPeerCertificates();\n\t// Return the SSL session id, if any.\n\tString getSessionId();\n}", "des": "A holder for SSL session information."}
{"index": 10701, "repo": "spring-web-6.0.11", "code": "public class UnsatisfiedRequestParameterException extends ServerWebInputException {\n\t// Return String representations of the unsatisfied condition(s).\n\tList<String> getConditions();\n\t// Return the actual request parameters.\n\torg.springframework.util.MultiValueMap<String,String> getRequestParams();\n}", "des": "ServerWebInputException subclass that indicates an unsatisfied parameter condition, as typically expressed using an @RequestMapping annotation at the @Controller type level."}
{"index": 10702, "repo": "spring-web-6.0.11", "code": "public class UnsatisfiedServletRequestParameterException extends ServletRequestBindingException {\n\t// Return the actual parameter Map associated with the ServletRequest.\n\tfinal Map<String,String[]> getActualParams();\n\tString getMessage();\n\t// Return all parameter condition groups that have been violated.\n\tfinal List<String[]> getParamConditionGroups();\n\t// Return the parameter conditions that have been violated or the first group in case of multiple groups.\n\tfinal String[] getParamConditions();\n}", "des": "ServletRequestBindingException subclass that indicates an unsatisfied parameter condition, as typically expressed using an @RequestMapping annotation at the @Controller type level."}
{"index": 10703, "repo": "spring-web-6.0.11", "code": "public interface UriBuilderFactory extends UriTemplateHandler {\n\t// Create a URI builder with default settings.\n\tUriBuilder builder();\n\t// Initialize a builder with the given URI template.\n\tUriBuilder uriString(String uriTemplate);\n}", "des": "Factory to create UriBuilder instances with shared configuration such as a base URI, an encoding mode strategy, and others across all URI builder instances created through a factory."}
{"index": 10704, "repo": "spring-web-6.0.11", "code": "public interface UriTemplateHandler {\n\t// Expand the given URI template with an array of URI variables.\n\tURI expand(String uriTemplate, Object... uriVariables);\n\t// Expand the given URI template with a map of URI variables.\n\tURI expand(String uriTemplate, Map<String,?> uriVariables);\n}", "des": "Defines methods for expanding a URI template with variables."}
{"index": 10705, "repo": "spring-web-6.0.11", "code": "public class UrlBasedCorsConfigurationSource extends Object implements CorsConfigurationSource {\n\t// Return a CorsConfiguration based on the incoming request.\n\tCorsConfiguration getCorsConfiguration(ServerWebExchange exchange);\n\t// Register a CorsConfiguration for the specified path pattern.\n\tvoid registerCorsConfiguration(String path, CorsConfiguration config);\n\t// Set CORS configuration based on URL patterns.\n\tvoid setCorsConfigurations(Map<String,CorsConfiguration> configMap);\n}", "des": "CorsConfigurationSource that uses URL patterns to select the CorsConfiguration for a request."}
{"index": 10706, "repo": "spring-web-6.0.11", "code": "public class WebHandlerDecorator extends Object implements WebHandler {\n\t// Return the wrapped delegate.\n\tWebHandler getDelegate();\n\t// Handle the web server exchange.\n\treactor.core.publisher.Mono<Void> handle(ServerWebExchange exchange);\n}", "des": "WebHandler that decorates and delegates to another WebHandler."}
{"index": 10707, "repo": "spring-web-6.0.11", "code": "public class WebRequestDataBinder extends WebDataBinder {\n\t// Bind the parameters of the given request to this binder's target, also binding multipart files in case of a multipart request.\n\tvoid bind(WebRequest request);\n\t// Treats errors as fatal.\n\tvoid closeNoCatch();\n}", "des": "Special DataBinder to perform data binding from web request parameters to JavaBeans, including support for multipart files."}
{"index": 10708, "repo": "spring-web-6.0.11", "code": "public interface WebRequestInterceptor {\n\t// Callback after completion of request processing, that is, after rendering the view.\n\tvoid afterCompletion(WebRequest request, Exception ex);\n\t// Intercept the execution of a request handler after its successful invocation, right before view rendering (if any).\n\tvoid postHandle(WebRequest request, org.springframework.ui.ModelMap model);\n\t// Intercept the execution of a request handler before its invocation.\n\tvoid preHandle(WebRequest request);\n}", "des": "Interface for general web request interception."}
{"index": 10709, "repo": "spring-web-6.0.11", "code": "public interface WebSessionIdResolver {\n\t// Instruct the client to end the current session.\n\tvoid expireSession(ServerWebExchange exchange);\n\t// Resolve the session IDs associated with the request.\n\tList<String> resolveSessionIds(ServerWebExchange exchange);\n\t// Send the given session ID to the client.\n\tvoid setSessionId(ServerWebExchange exchange, String sessionId);\n}", "des": "Contract for session ID resolution strategies."}
{"index": 10710, "repo": "spring-web-6.0.11", "code": "public interface WebSessionStore {\n\t// Create a new WebSession.\n\treactor.core.publisher.Mono<WebSession> createWebSession();\n\t// Remove the WebSession for the specified id.\n\treactor.core.publisher.Mono<Void> removeSession(String sessionId);\n\t// Return the WebSession for the given id.\n\treactor.core.publisher.Mono<WebSession> retrieveSession(String sessionId);\n\t// Update the last accessed timestamp to \"now\".\n\treactor.core.publisher.Mono<WebSession> updateLastAccessTime(WebSession webSession);\n}", "des": "Strategy for WebSession persistence."}
{"index": 10711, "repo": "spring-web-6.0.11", "code": "public interface ZeroCopyHttpOutputMessage extends ReactiveHttpOutputMessage {\n\t// Use the given File to write the body of the message to the underlying HTTP layer.\n\tdefault reactor.core.publisher.Mono<Void> writeWith(File file, long position, long count);\n\t// Use the given Path to write the body of the message to the underlying HTTP layer.\n\treactor.core.publisher.Mono<Void> writeWith(Path file, long position, long count);\n}", "des": "Sub-interface of ReactiveOutputMessage that has support for \"zero-copy\" file transfers."}
{"index": 10712, "repo": "spring-ws-core-4.0.5", "code": "public abstract class AbstractActionMethodEndpointMapping extends AbstractActionEndpointMapping {\n\t// Returns the action value for the specified method.\n\tprotected abstract URI getActionForMethod(Method method);\n\t// Return the class or interface to use for method reflection.\n\tprotected Class<?> getEndpointClass(Object endpoint);\n\t// Helper method that registers the methods of the given bean.\n\tprotected void registerMethods(Object endpoint);\n}", "des": "Abstract base class for WS-Addressing Action-mapped EndpointMapping implementations that map to MethodEndpoints."}
{"index": 10713, "repo": "spring-ws-core-4.0.5", "code": "public abstract class AbstractAnnotationMethodEndpointMapping<T> extends AbstractMethodEndpointMapping<T> {\n\t// Returns the 'endpoint' annotation type.\n\tprotected Class<? extends Annotation> getEndpointAnnotationType();\n\t// Initializes the interceptors.\n\tprotected void initApplicationContext();\n\t// Set whether to detect endpoint beans in ancestor ApplicationContexts.\n\tvoid setDetectEndpointsInAncestorContexts(boolean detectEndpointsInAncestorContexts);\n}", "des": "Abstract base for EndpointMapping implementations that map classes tagged with an annotation."}
{"index": 10714, "repo": "spring-ws-core-4.0.5", "code": "public abstract class AbstractCachingDestinationProvider extends Object implements DestinationProvider {\n\t// Return the destination URI.\n\tfinal URI getDestination();\n\t// Abstract template method that looks up the URI.\n\tprotected abstract URI lookupDestination();\n\t// Set whether to cache resolved destinations.\n\tvoid setCache(boolean cache);\n}", "des": "Abstract base class for DestinationProvider implementations that cache destination URI."}
{"index": 10715, "repo": "spring-ws-core-4.0.5", "code": "public abstract class AbstractMimeMessage extends Object implements MimeMessage {\n\t// Add an attachment to the message, taking the content from a File.\n\tfinal Attachment addAttachment(String contentId, File file);\n\t// Add an attachment to the message, taking the content from an InputStreamSource.\n\tfinal Attachment addAttachment(String contentId, org.springframework.core.io.InputStreamSource inputStreamSource, String contentType);\n}", "des": "Abstract implementation of the MimeMessage interface."}
{"index": 10716, "repo": "spring-ws-core-4.0.5", "code": "public abstract class AbstractQNameEndpointMapping extends AbstractMapBasedEndpointMapping {\n\t// Returns the endpoint key for the given message context.\n\tprotected final String getLookupKeyForMessage(MessageContext messageContext);\n\t// Template method that resolves the qualified names from the given SOAP message.\n\tprotected abstract QName resolveQName(MessageContext messageContext);\n\t// Validates the given endpoint key.\n\tprotected boolean validateLookupKey(String key);\n}", "des": "Abstract base class for EndpointMappings that resolve qualified names as registration keys."}
{"index": 10717, "repo": "spring-ws-core-4.0.5", "code": "public interface Attachment {\n\t// Returns the content identifier of the attachment.\n\tString getContentId();\n\t// Returns the content type of the attachment.\n\tString getContentType();\n\t// Returns the data handler of the attachment.\n\tjakarta.activation.DataHandler getDataHandler();\n\t// Return an InputStream to read the contents of the attachment from.\n\tInputStream getInputStream();\n\t// Returns the size of the attachment in bytes.\n\tlong getSize();\n}", "des": "Represents an attachment to a MimeMessage"}
{"index": 10718, "repo": "spring-ws-core-4.0.5", "code": "public interface ClientInterceptor {\n\t// Callback after completion of request and response (fault) processing.\n\tvoid afterCompletion(MessageContext messageContext, Exception ex);\n\t// Processes the incoming response fault.\n\tboolean handleFault(MessageContext messageContext);\n\t// Processes the outgoing request message.\n\tboolean handleRequest(MessageContext messageContext);\n\t// Processes the incoming response message.\n\tboolean handleResponse(MessageContext messageContext);\n}", "des": "Workflow interface that allows for customized client-side message interception."}
{"index": 10719, "repo": "spring-ws-core-4.0.5", "code": "public abstract class ClientInterceptorAdapter extends Object implements ClientInterceptor {\n\t// Does nothing by default.\n\tvoid afterCompletion(MessageContext messageContext, Exception ex);\n\t// Processes the incoming response fault.\n\tboolean handleFault(MessageContext messageContext);\n\t// Processes the outgoing request message.\n\tboolean handleRequest(MessageContext messageContext);\n\t// Processes the incoming response message.\n\tboolean handleResponse(MessageContext messageContext);\n}", "des": "Default implementation of the ClientInterceptor interface, for simplified implementation of pre-only/post-only interceptors."}
{"index": 10720, "repo": "spring-ws-core-4.0.5", "code": "public class DomPoxMessage extends Object implements PoxMessage {\n\t// Returns the document underlying this message.\n\tDocument getDocument();\n\tString getFaultReason();\n\t// Returns the contents of the message as a Result.\n\tResult getPayloadResult();\n\t// Returns the contents of the message as a Source.\n\tSource getPayloadSource();\n\tboolean hasFault();\n\t// Writes the entire message to the given output stream.\n\tvoid writeTo(OutputStream outputStream);\n}", "des": "Implementation of the PoxMessage interface that is based on a DOM Document."}
{"index": 10721, "repo": "spring-ws-core-4.0.5", "code": "public interface EndpointAdapter {\n\t// Use the given endpoint to handle the request.\n\tvoid invoke(MessageContext messageContext, Object endpoint);\n\t// Does this EndpointAdapter support the given endpoint?\n\tboolean supports(Object endpoint);\n}", "des": "Interface that must be implemented for each endpoint type to handle a message request."}
{"index": 10722, "repo": "spring-ws-core-4.0.5", "code": "public class EndpointInvocationChain extends Object {\n\t// Returns the endpoint object to invoke.\n\tObject getEndpoint();\n\t// Returns the array of interceptors to apply before the handler executes.\n\tEndpointInterceptor[] getInterceptors();\n}", "des": "Endpoint invocation chain, consisting of an endpoint object and any preprocessing interceptors."}
{"index": 10723, "repo": "spring-ws-core-4.0.5", "code": "public final class EndpointReference extends Object implements Serializable {\n\tboolean equals(Object o);\n\t// Returns the address of the endpoint.\n\tURI getAddress();\n\t// Returns the reference parameters of the endpoint, as a list of Node objects.\n\tList<Node> getReferenceParameters();\n\t// Returns the reference properties of the endpoint, as a list of Node objects.\n\tList<Node> getReferenceProperties();\n}", "des": "Represents an Endpoint Reference, as defined in the WS-Addressing specification."}
{"index": 10724, "repo": "spring-ws-core-4.0.5", "code": "public interface FaultAwareWebServiceConnection extends WebServiceConnection {\n\t// Indicates whether this connection received a fault.\n\tboolean hasFault();\n\t// Deprecated. In favor of setFaultCode(QName)\n\tvoid setFault(boolean fault);\n\t// Sets a specific fault code.\n\tvoid setFaultCode(QName faultCode);\n}", "des": "Sub-interface of WebServiceConnection that is aware of any Fault messages received."}
{"index": 10725, "repo": "spring-ws-core-4.0.5", "code": "public interface FaultAwareWebServiceMessage extends WebServiceMessage {\n\t// Returns the fault code, if any.\n\tQName getFaultCode();\n\t// Returns the fault reason message.\n\tString getFaultReason();\n\t// Does this message have a fault?\n\tboolean hasFault();\n}", "des": "Sub-interface of WebServiceMessage that can contain special Fault messages."}
{"index": 10726, "repo": "spring-ws-core-4.0.5", "code": "public enum FaultCode extends Enum<FaultCode> {\n\tQName value();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic FaultCode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic FaultCode[] values();\n}", "des": "Enumeration that represents the standard SOAP Fault codes for use with the JDK 1.5+ SoapFault annotation."}
{"index": 10727, "repo": "spring-ws-core-4.0.5", "code": "public interface HeadersAwareReceiverWebServiceConnection {\n\t// Adds a response header with the given name and value.\n\tvoid addResponseHeader(String name, String value);\n\t// Returns an iteration over all the header names this request contains.\n\tIterator<String> getRequestHeaderNames();\n\t// Returns an iteration over all the string values of the specified header.\n\tIterator<String> getRequestHeaders(String name);\n}", "des": "Interface to define access to header information for certain WebServiceConnection implementations."}
{"index": 10728, "repo": "spring-ws-core-4.0.5", "code": "public abstract class MarshallingUtils extends Object {\n\t// Marshals the given object to the payload of the given message using the provided Marshaller.\n\tstatic void marshal(org.springframework.oxm.Marshaller marshaller, Object graph, WebServiceMessage message);\n\t// Unmarshals the payload of the given message using the provided Unmarshaller.\n\tstatic Object unmarshal(org.springframework.oxm.Unmarshaller unmarshaller, WebServiceMessage message);\n}", "des": "Helper class for endpoints and endpoint mappings that use marshalling."}
{"index": 10729, "repo": "spring-ws-core-4.0.5", "code": "public class MessageContextMethodArgumentResolver extends Object implements MethodArgumentResolver {\n\t// Resolves the given parameter into a method argument.\n\tMessageContext resolveArgument(MessageContext messageContext, org.springframework.core.MethodParameter parameter);\n\t// Indicates whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Implementation of MethodArgumentResolver that supports MessageContext arguments."}
{"index": 10730, "repo": "spring-ws-core-4.0.5", "code": "public class MessageEndpointAdapter extends Object implements EndpointAdapter {\n\t// Use the given endpoint to handle the request.\n\tvoid invoke(MessageContext messageContext, Object endpoint);\n\t// Does this EndpointAdapter support the given endpoint?\n\tboolean supports(Object endpoint);\n}", "des": "Adapter to use a MessageEndpoint as the endpoint for a EndpointInvocationChain."}
{"index": 10731, "repo": "spring-ws-core-4.0.5", "code": "public interface MessageIdStrategy {\n\t// Indicates whether the given MessageID value is a duplicate or not\n\tboolean isDuplicate(URI messageId);\n\t// Returns a new WS-Addressing MessageID for the given SoapMessage.\n\tURI newMessageId(SoapMessage message);\n}", "des": "Strategy interface that encapsulates the creation and validation of WS-Addressing MessageIDs."}
{"index": 10732, "repo": "spring-ws-core-4.0.5", "code": "public interface MethodArgumentResolver {\n\t// Resolves the given parameter into a method argument.\n\tObject resolveArgument(MessageContext messageContext, org.springframework.core.MethodParameter parameter);\n\t// Indicates whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Strategy interface used to resolve method parameters into arguments."}
{"index": 10733, "repo": "spring-ws-core-4.0.5", "code": "public interface MethodReturnValueHandler {\n\t// Handles the given return value.\n\tvoid handleReturnValue(MessageContext messageContext, org.springframework.core.MethodParameter returnType, Object returnValue);\n\t// Indicates whether the given method return type is supported by this handler.\n\tboolean supportsReturnType(org.springframework.core.MethodParameter returnType);\n}", "des": "Strategy interface used to handle method return values."}
{"index": 10734, "repo": "spring-ws-core-4.0.5", "code": "public class PayloadEndpointAdapter extends org.springframework.xml.transform.TransformerObjectSupport implements EndpointAdapter {\n\t// Use the given endpoint to handle the request.\n\tvoid invoke(MessageContext messageContext, Object endpoint);\n\t// Does this EndpointAdapter support the given endpoint?\n\tboolean supports(Object endpoint);\n}", "des": "Adapter to use a PayloadEndpoint as the endpoint for a EndpointInvocationChain."}
{"index": 10735, "repo": "spring-ws-core-4.0.5", "code": "public class PayloadRootAnnotationMethodEndpointMapping extends AbstractAnnotationMethodEndpointMapping<QName> {\n\t// Returns the endpoint keys for the given message context.\n\tprotected QName getLookupKeyForMessage(MessageContext messageContext);\n\t// Returns the endpoint keys for the given method.\n\tprotected List<QName> getLookupKeysForMethod(Method method);\n\t// Override the default TransformerFactory.\n\tstatic void setTransformerFactory(TransformerFactory transformerFactory);\n}", "des": "Implementation of the EndpointMapping interface that uses the PayloadRoot annotation to map methods to request payload root elements."}
{"index": 10736, "repo": "spring-ws-core-4.0.5", "code": "public class PayloadRootQNameEndpointMapping extends AbstractQNameEndpointMapping {\n\t// Template method that resolves the qualified names from the given SOAP message.\n\tprotected QName resolveQName(MessageContext messageContext);\n\t// Override the default TransformerFactory.\n\tstatic void setTransformerFactory(TransformerFactory transformerFactory);\n}", "des": "Implementation of the EndpointMapping interface to map from the qualified name of the request payload root element."}
{"index": 10737, "repo": "spring-ws-core-4.0.5", "code": "public class PayloadValidatingInterceptor extends AbstractValidatingInterceptor {\n\t// Returns the part of the request message that is to be validated.\n\tprotected Source getValidationRequestSource(WebServiceMessage request);\n\t// Returns the part of the response message that is to be validated.\n\tprotected Source getValidationResponseSource(WebServiceMessage response);\n}", "des": "Client-side interceptor that validates the contents of WebServiceMessages using a schema."}
{"index": 10738, "repo": "spring-ws-core-4.0.5", "code": "public class PayloadValidatingInterceptor extends AbstractFaultCreatingValidatingInterceptor {\n\t// Returns the payload source of the given message.\n\tprotected Source getValidationRequestSource(WebServiceMessage request);\n\t// Returns the payload source of the given message.\n\tprotected Source getValidationResponseSource(WebServiceMessage response);\n}", "des": "Interceptor that validates the contents of WebServiceMessages using a schema."}
{"index": 10739, "repo": "spring-ws-core-4.0.5", "code": "public class SaajXmlReader extends org.springframework.xml.sax.AbstractXmlReader {\n\tboolean getFeature(String name);\n\t// Parses the StAX XML reader passed at construction-time.\n\tfinal void parse(String ignored);\n\t// Parses the StAX XML reader passed at construction-time.\n\tfinal void parse(InputSource ignored);\n\tvoid setFeature(String name, boolean value);\n}", "des": "SAX XMLReader that reads from a SAAJ Node."}
{"index": 10740, "repo": "spring-ws-core-4.0.5", "code": "public class SimpleWsdl11Definition extends Object implements Wsdl11Definition, org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\t// Returns the Source of the definition.\n\tSource getSource();\n\t// Set the WSDL resource to be exposed by calls to this instances' getSource() method.\n\tvoid setWsdl(org.springframework.core.io.Resource wsdlResource);\n}", "des": "The default Wsdl11Definition implementation."}
{"index": 10741, "repo": "spring-ws-core-4.0.5", "code": "public interface Soap12Header extends SoapHeader {\n\t// Adds a new NotUnderstood SoapHeaderElement this header.\n\tSoapHeaderElement addNotUnderstoodHeaderElement(QName headerName);\n\t// Adds a new Upgrade SoapHeaderElement this header.\n\tSoapHeaderElement addUpgradeHeaderElement(String[] supportedSoapUris);\n\t// Returns an Iterator over all the header elements that should be processed for the given roles.\n\tIterator<SoapHeaderElement> examineHeaderElementsToProcess(String[] roles, boolean isUltimateReceiver);\n}", "des": "Subinterface of SoapHeader that exposes SOAP 1.2 functionality."}
{"index": 10742, "repo": "spring-ws-core-4.0.5", "code": "public class SoapEndpointInvocationChain extends EndpointInvocationChain {\n\t// Gets the actors (SOAP 1.1) or roles (SOAP 1.2) associated with an invocation of this chain and its contained interceptors and endpoint.\n\tString[] getActorsOrRoles();\n\t// Indicates whether this chain fulfills the SOAP 1.2 Ultimate Receiver role.\n\tboolean isUltimateReceiver();\n}", "des": "SOAP-specific subclass of the EndpointInvocationChain."}
{"index": 10743, "repo": "spring-ws-core-4.0.5", "code": "public interface SoapEnvelope extends SoapElement {\n\t// Returns the SoapBody.\n\tSoapBody getBody();\n\t// Returns the SoapHeader.\n\tSoapHeader getHeader();\n}", "des": "Represents the Envelope element in a SOAP message."}
{"index": 10744, "repo": "spring-ws-core-4.0.5", "code": "public class SoapFaultClientException extends WebServiceFaultException {\n\t// Returns the fault code.\n\tQName getFaultCode();\n\t// Returns the fault string or reason.\n\tString getFaultStringOrReason();\n\t// Returns the SoapFault.\n\tSoapFault getSoapFault();\n}", "des": "Thrown by SoapFaultMessageResolver when the response message has a fault."}
{"index": 10745, "repo": "spring-ws-core-4.0.5", "code": "public class SoapFaultDefinition extends Object {\n\t// Returns the fault code.\n\tQName getFaultCode();\n\t// Returns the fault string or reason text.\n\tString getFaultStringOrReason();\n\t// Gets the fault string locale.\n\tLocale getLocale();\n\t// Sets the fault code.\n\tvoid setFaultCode(QName faultCode);\n\t// Sets the fault string or reason text.\n\tvoid setFaultStringOrReason(String faultStringOrReason);\n\t// Sets the fault string locale.\n\tvoid setLocale(Locale locale);\n}", "des": "Defines properties for a SOAP Fault."}
{"index": 10746, "repo": "spring-ws-core-4.0.5", "code": "public interface SoapFaultDetail extends SoapElement {\n\t// Adds a new SoapFaultDetailElement with the specified qualified name to this detail.\n\tSoapFaultDetailElement addFaultDetailElement(QName name);\n\t// Gets an iterator over all of the SoapFaultDetailElements in this detail.\n\tIterator<SoapFaultDetailElement> getDetailEntries();\n\t// Returns a Result that represents the concents of the detail.\n\tResult getResult();\n}", "des": "Represents the detail element in a SOAP fault."}
{"index": 10747, "repo": "spring-ws-core-4.0.5", "code": "public interface SoapFaultDetailElement extends SoapElement {\n\t// Adds a new text node to this element.\n\tvoid addText(String text);\n\t// Returns a Result that allows for writing to the contents of the detail element.\n\tResult getResult();\n}", "des": "Represents the content for an individual SOAP detail entry in a SOAP Message."}
{"index": 10748, "repo": "spring-ws-core-4.0.5", "code": "public class SoapFaultMappingExceptionResolver extends AbstractSoapFaultDefinitionExceptionResolver {\n\t// Return the depth to the superclass matching.\n\tprotected int getDepth(String exceptionMapping, Exception ex);\n\t// Template method that returns the SoapFaultDefinition for the given exception.\n\tprotected SoapFaultDefinition getFaultDefinition(Object endpoint, Exception ex);\n\t// Set the mappings between exception class names and SOAP Faults.\n\tvoid setExceptionMappings(Properties mappings);\n}", "des": "Exception resolver that allows for mapping exception class names to SOAP Faults."}
{"index": 10749, "repo": "spring-ws-core-4.0.5", "code": "public class SoapHeaderElementMethodArgumentResolver extends Object implements MethodArgumentResolver {\n\t// Resolves the given parameter into a method argument.\n\tObject resolveArgument(MessageContext messageContext, org.springframework.core.MethodParameter parameter);\n\t// Indicates whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Implementation of MethodArgumentResolver that supports resolving SoapHeaderElement parameters."}
{"index": 10750, "repo": "spring-ws-core-4.0.5", "code": "public interface SoapMessageFactory extends WebServiceMessageFactory {\n\t// Creates a new, empty SoapMessage.\n\tSoapMessage createWebServiceMessage();\n\t// Reads a SoapMessage from the given input stream.\n\tSoapMessage createWebServiceMessage(InputStream inputStream);\n\t// Sets the SOAP Version used by this factory.\n\tvoid setSoapVersion(SoapVersion version);\n}", "des": "Sub-interface of WebServiceMessageFactory which contains SOAP-specific properties and methods."}
{"index": 10751, "repo": "spring-ws-core-4.0.5", "code": "public class SoapMethodArgumentResolver extends Object implements MethodArgumentResolver {\n\t// Resolves the given parameter into a method argument.\n\tObject resolveArgument(MessageContext messageContext, org.springframework.core.MethodParameter parameter);\n\t// Indicates whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Implementation of MethodArgumentResolver that supports SoapMessage, SoapBody, SoapEnvelope, and SoapHeader."}
{"index": 10752, "repo": "spring-ws-core-4.0.5", "code": "public abstract class SoapUtils extends Object {\n\t// Escapes the given SOAP action to be surrounded by quotes.\n\tstatic String escapeAction(String soapAction);\n\t// Returns the value of the action parameter in the given SOAP 1.2 content type.\n\tstatic String extractActionFromContentType(String contentType);\n\t// Replaces or adds the value of the action parameter in the given SOAP 1.2 content type.\n\tstatic String setActionInContentType(String contentType, String action);\n}", "des": "Contains various utility methods for handling SOAP messages."}
{"index": 10753, "repo": "spring-ws-core-4.0.5", "code": "public interface StreamingPayload {\n\t// Returns the qualified name of the payload.\n\tQName getName();\n\t// Writes this payload to the given XMLStreamWriter.\n\tvoid writeTo(XMLStreamWriter streamWriter);\n}", "des": "Defines the contract for payloads that can be written directly to a XMLStreamWriter."}
{"index": 10754, "repo": "spring-ws-core-4.0.5", "code": "public abstract class TransportContextHolder extends Object {\n\t// Return the TransportContext associated with the current thread, if any.\n\tstatic TransportContext getTransportContext();\n\t// Associate the given TransportContext with the current thread.\n\tstatic void setTransportContext(TransportContext transportContext);\n}", "des": "Simple holder class that associates a TransportContext instance with the current thread."}
{"index": 10755, "repo": "spring-ws-core-4.0.5", "code": "public abstract class TransportOutputStream extends OutputStream {\n\t// Adds a header with the given name and value.\n\tabstract void addHeader(String name, String value);\n\tvoid close();\n\t// Returns the output stream to write to.\n\tprotected abstract OutputStream createOutputStream();\n\tvoid flush();\n\tvoid write(byte[] b);\n\tvoid write(byte[] b, int off, int len);\n\tvoid write(int b);\n}", "des": "A TransportOutputStream is an output stream with MIME input headers."}
{"index": 10756, "repo": "spring-ws-core-4.0.5", "code": "public class UriEndpointMapping extends AbstractMapBasedEndpointMapping {\n\t// Returns the endpoint key for the given message context.\n\tprotected String getLookupKeyForMessage(MessageContext messageContext);\n\t// Indicates whether the path should be used instead of the full URI.\n\tvoid setUsePath(boolean usePath);\n\t// Validates the given endpoint key.\n\tprotected boolean validateLookupKey(String key);\n}", "des": "Implementation of the EndpointMapping interface to map from the full request URI or request URI path to endpoint beans."}
{"index": 10757, "repo": "spring-ws-core-4.0.5", "code": "public class UuidMessageIdStrategy extends Object implements MessageIdStrategy {\n\t// Returns false.\n\tboolean isDuplicate(URI messageId);\n\t// Returns a new WS-Addressing MessageID for the given SoapMessage.\n\tURI newMessageId(SoapMessage message);\n}", "des": "Implementation of the MessageIdStrategy interface that uses a UUID to generate a Message Id."}
{"index": 10758, "repo": "spring-ws-core-4.0.5", "code": "public interface WebServiceMessage {\n\t// Returns the contents of the message as a Result.\n\tResult getPayloadResult();\n\t// Returns the contents of the message as a Source.\n\tSource getPayloadSource();\n\t// Writes the entire message to the given output stream.\n\tvoid writeTo(OutputStream outputStream);\n}", "des": "Represents a protocol-agnostic XML message."}
{"index": 10759, "repo": "spring-ws-core-4.0.5", "code": "public interface WebServiceMessageFactory {\n\t// Creates a new, empty WebServiceMessage.\n\tWebServiceMessage createWebServiceMessage();\n\t// Reads a WebServiceMessage from the given input stream.\n\tWebServiceMessage createWebServiceMessage(InputStream inputStream);\n}", "des": "The WebServiceMessageFactory serves as a factory for WebServiceMessages."}
{"index": 10760, "repo": "spring-ws-core-4.0.5", "code": "public interface WebServiceMessageSender {\n\t// Create a new WebServiceConnection to the specified URI.\n\tWebServiceConnection createConnection(URI uri);\n\t// Does this WebServiceMessageSender support the supplied URI?\n\tboolean supports(URI uri);\n}", "des": "Defines the methods for classes capable of sending and receiving WebServiceMessage instances across a transport."}
{"index": 10761, "repo": "spring-ws-core-4.0.5", "code": "public abstract class WebUtils extends Object {\n\t// Extract the URL filename from the given request URL path.\n\tstatic String extractFilenameFromUrlPath(String urlPath);\n\t// Extract the full URL filename (including file extension) from the given request URL path.\n\tstatic String extractFullFilenameFromUrlPath(String urlPath);\n}", "des": "Miscellaneous utilities for web applications."}
{"index": 10762, "repo": "spring-ws-core-4.0.5", "code": "public interface WsConfigurer {\n\t// Add resolvers to support custom endpoint method argument types.\n\tvoid addArgumentResolvers(List<MethodArgumentResolver> argumentResolvers);\n\t// Add EndpointInterceptors for pre- and post-processing of endpoint method invocations.\n\tvoid addInterceptors(List<EndpointInterceptor> interceptors);\n\t// Add handlers to support custom controller method return value types.\n\tvoid addReturnValueHandlers(List<MethodReturnValueHandler> returnValueHandlers);\n}", "des": "Defines callback methods to customize the Java-based configuration for Spring Web Services enabled via @EnableWs."}
{"index": 10763, "repo": "spring-ws-core-4.0.5", "code": "public class Wsdl11DestinationProvider extends AbstractCachingDestinationProvider {\n\t// Abstract template method that looks up the URI.\n\tprotected URI lookupDestination();\n\t// Sets the XPath expression to use when extracting the service location URI from a WSDL.\n\tvoid setLocationExpression(String expression);\n\t// Sets a WSDL location from which the service destination URI will be resolved.\n\tvoid setWsdl(org.springframework.core.io.Resource wsdlResource);\n}", "des": "Implementation of the DestinationProvider that resolves a destination URI from a WSDL file."}
{"index": 10764, "repo": "spring-ws-core-4.0.5", "code": "public class Wsdl4jDefinition extends Object implements Wsdl11Definition {\n\t// Returns the WSDL4J Definition.\n\tjavax.wsdl.Definition getDefinition();\n\t// Returns the Source of the definition.\n\tSource getSource();\n\t// Set the WSDL4J Definition.\n\tvoid setDefinition(javax.wsdl.Definition definition);\n}", "des": "Implementation of the Wsdl11Definition based on WSDL4J."}
{"index": 10765, "repo": "spring-ws-core-4.0.5", "code": "public class XmlRootElementEndpointMapping extends AbstractAnnotationMethodEndpointMapping<QName> {\n\t// Returns the endpoint keys for the given message context.\n\tprotected QName getLookupKeyForMessage(MessageContext messageContext);\n\t// Returns the endpoint key for the given method.\n\tprotected QName getLookupKeyForMethod(Method method);\n\tvoid setTransformerHelper(org.springframework.xml.transform.TransformerHelper transformerHelper);\n}", "des": "Implementation of the EndpointMapping interface that uses the JAXB2 XmlRootElement annotation to map methods to request payload root elements."}
{"index": 10766, "repo": "jena-querybuilder-4.9.0", "code": "public class AbstractRewriter<T> extends Object {\n\t// Get the result from the rewriter.\n\tfinal T getResult();\n\t// Rewrite a list of triples.\n\tfinal List<Triple> rewrite(List<Triple> src);\n\t// Rewrite a variable expression list.\n\tfinal VarExprList rewrite(VarExprList lst);\n}", "des": "The base class for rewriters."}
{"index": 10767, "repo": "jena-querybuilder-4.9.0", "code": "public class CollectionQuadHolder extends Object implements QuadHolder {\n\t// Get an extended iterator over the quads this holder holds.\n\tExtendedIterator<Quad> getQuads();\n\t// This implementation does nothing.\n\tQuadHolder setValues(Map<Var,Node> values);\n}", "des": "An QuadHolder that creates quads from a collection or iterator of triples."}
{"index": 10768, "repo": "jena-querybuilder-4.9.0", "code": "public interface ConstructClause<T extends AbstractQueryBuilder<T>> {\n\t// Add a construct triple.\n\tT addConstruct(Object s, Object p, Object o);\n\t// Add a construct triple.\n\tT addConstruct(FrontsTriple t);\n\t// Add a construct triple.\n\tT addConstruct(Triple t);\n\t// Get the Construct handler for this construct clause.\n\tConstructHandler getConstructHandler();\n}", "des": "Interface that defines the ConstructClause as per http://www.w3.org/TR/2013/REC-sparql11-query-20130321/#rConstructTemplate"}
{"index": 10769, "repo": "jena-querybuilder-4.9.0", "code": "public class ConstructHandler extends Object implements Handler {\n\t// Add all the construct handlers from the handler argument to this construct.\n\tvoid addAll(ConstructHandler handler);\n\t// Add a triple to the construct statement.\n\tvoid addConstruct(Triple t);\n\t// Called by the build process for this handler to perform any adjustments to the query before the build completes.\n\tvoid build();\n\t// Set the values for variables managed by the handler implementation.\n\tvoid setVars(Map<Var,Node> values);\n}", "des": "The handler for construct clauses."}
{"index": 10770, "repo": "jena-querybuilder-4.9.0", "code": "public interface DatasetClause<T extends AbstractQueryBuilder<T>> {\n\t// Add the \"FROM\" graph name.\n\tT from(String graphName);\n\t// Add several \"FROM\" graph names.\n\tT from(Collection<String> graphName);\n\t// Add the \"FROM NAMED\" graph name.\n\tT fromNamed(String graphName);\n\t// Add several \"FROM NAMED\" graph names.\n\tT fromNamed(Collection<String> graphNames);\n\t// Get the Dataset handler for this clause.\n\tDatasetHandler getDatasetHandler();\n}", "des": "Interface that defines the DatasetClause as per http://www.w3.org/TR/2013/REC-sparql11-query-20130321/#rDatasetClause"}
{"index": 10771, "repo": "jena-querybuilder-4.9.0", "code": "public interface Handler {\n\t// Called by the build process for this handler to perform any adjustments to the query before the build completes.\n\tvoid build();\n\t// Set the values for variables managed by the handler implementation.\n\tvoid setVars(Map<Var,Node> values);\n}", "des": "The base interface for handlers."}
{"index": 10772, "repo": "jena-querybuilder-4.9.0", "code": "public class ModelQuadHolder extends Object implements QuadHolder {\n\t// Get an extended iterator over the quads this holder holds.\n\tExtendedIterator<Quad> getQuads();\n\t// This implementation does nothing.\n\tQuadHolder setValues(Map<Var,Node> values);\n}", "des": "An QuadHolder that manages extracts all statements from a model as quads."}
{"index": 10773, "repo": "jena-querybuilder-4.9.0", "code": "public enum Order extends Enum<Order> {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Order valueOf(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Order[] values();\n}", "des": "The order for the ORDER BY modifiers."}
{"index": 10774, "repo": "jena-querybuilder-4.9.0", "code": "public class PrefixHandler extends Object {\n\t// Add a prefix to the prefix mapping.\n\tvoid addPrefix(String pfx, String uri);\n\t// Add the map of prefixes to the query prefixes.\n\tvoid addPrefixes(Map<String,String> prefixes);\n\t// Add prefixes from a prefix mapping.\n\tvoid addPrefixes(PrefixMapping prefixes);\n\t// Clear the prefix mapping.\n\tvoid clearPrefixes();\n\t// Get the expression factory based on the prefix mapping.\n\tExprFactory getExprFactory();\n\t// Get the prefix mapping\n\tPrefixMapping getPrefixes();\n}", "des": "The prefix handler for the updatebuilder class"}
{"index": 10775, "repo": "jena-querybuilder-4.9.0", "code": "public class QBQuadHolder extends Object implements QuadHolder {\n\t// Get an extended iterator over the quads this holder holds.\n\tExtendedIterator<Quad> getQuads();\n\t// Apply values to the variables in the quads held by this holder.\n\tQuadHolder setValues(Map<Var,Node> values);\n}", "des": "An QuadHolder that manages AbstractQueryBuilder data."}
{"index": 10776, "repo": "jena-querybuilder-4.9.0", "code": "public class QuadCollectionHolder extends Object implements QuadHolder {\n\t// Get an extended iterator over the quads this holder holds.\n\tExtendedIterator<Quad> getQuads();\n\t// This implementation does nothing.\n\tQuadHolder setValues(Map<Var,Node> values);\n}", "des": "An QuadHolder that contains Quads from a collection or iterator.."}
{"index": 10777, "repo": "jena-querybuilder-4.9.0", "code": "public interface QuadHolder {\n\t// Get an extended iterator over the quads this holder holds.\n\tExtendedIterator<Quad> getQuads();\n\t// Apply values to the variables in the quads held by this holder.\n\tQuadHolder setValues(Map<Var,Node> values);\n}", "des": "An interface that defines a holder of quads."}
{"index": 10778, "repo": "jena-querybuilder-4.9.0", "code": "public interface SelectClause<T extends AbstractQueryBuilder<T>> {\n\t// Adds a variable to the select clause.\n\tT addVar(Object var);\n\t// Adds an expression as variable to the select statement.\n\tT addVar(String expr, Object var);\n\t// Adds an expression as variable to the select statement.\n\tT addVar(Expr expr, Object var);\n\t// Returns the select handler for this clause\n\tSelectHandler getSelectHandler();\n\tList<Var> getVars();\n}", "des": "Interface that defines the SelectClause as per http://www.w3.org/TR/2013/REC-sparql11-query-20130321/#rSelectClause"}
{"index": 10779, "repo": "jena-querybuilder-4.9.0", "code": "public class SingleQuadHolder extends Object implements QuadHolder {\n\t// Get an extended iterator over the quads this holder holds.\n\tExtendedIterator<Quad> getQuads();\n\t// Apply values to the variables in the quads held by this holder.\n\tQuadHolder setValues(Map<Var,Node> values);\n}", "des": "A QuadHolder implementation for a single quad."}
{"index": 10780, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class AbstractAuxiliaryDatabaseObject {\n\tvoid addDialectScope​(java.lang.String dialectName);\n\t// Does this database object apply to the given dialect?\n\tboolean appliesToDialect​(Dialect dialect);\n\t// Defines a simple precedence.\n\tboolean beforeTablesOnCreation();\n\tjava.util.Set getDialectScopes();\n\t// Get a unique identifier to make sure we are not exporting the same database structure multiple times.\n\tjava.lang.String getExportIdentifier();\n}", "des": "Convenience base class for AuxiliaryDatabaseObjects."}
{"index": 10781, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class AbstractExplicitParameterSpecification {\n\t// Get the type which we are expecting for a bind into this parameter based on translated contextual information.\n\tType getExpectedType();\n\t// Retrieves the column number (within the ExplicitParameterSpecification.getSourceLine()) where this parameter occurs.\n\tint getSourceColumn();\n\t// Retrieves the line number on which this parameter occurs in the source query.\n\tint getSourceLine();\n\t// Injects the expected type.\n\tvoid setExpectedType​(Type expectedType);\n}", "des": "Convenience base class for explicitly defined query parameters."}
{"index": 10782, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class AbstractLobCreator {\n\t// Wrap the given blob in a serializable wrapper.\n\tjava.sql.Blob wrap​(java.sql.Blob blob);\n\t// Wrap the given clob in a serializable wrapper.\n\tjava.sql.Clob wrap​(java.sql.Clob clob);\n\t// Wrap the given nclob in a serializable wrapper.\n\tjava.sql.NClob wrap​(java.sql.NClob nclob);\n}", "des": "Convenient base class for proxy-based LobCreator for handling wrapping."}
{"index": 10783, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class AbstractOptimizer {\n\t// Retrieves the defined increment size.\n\tint getIncrementSize();\n\t// Getter for property 'returnClass'.\n\tjava.lang.Class getReturnClass();\n}", "des": "Common support for optimizer implementations."}
{"index": 10784, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class AbstractSerializableProxy {\n\t// Initialize an AbstractLazyInitializer after deserialization.\n\tprotected void afterDeserialization​(AbstractLazyInitializer li);\n\tprotected java.lang.String getEntityName();\n\tprotected java.io.Serializable getId();\n\t// Deprecated. Use afterDeserialization(AbstractLazyInitializer) instead.\n\tprotected void setReadOnlyBeforeAttachedToSession​(AbstractLazyInitializer li);\n}", "des": "Convenience base class for the serialized form of AbstractLazyInitializer."}
{"index": 10785, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class AbstractUUIDGenerator {\n\t// Unique in a millisecond for this JVM instance (unless there are > Short.MAX_VALUE instances created in a millisecond)\n\tprotected short getCount();\n\t// Unique down to millisecond\n\tprotected short getHiTime();\n\t// Unique in a local network\n\tprotected int getIP();\n\t// Unique across JVMs on this machine (unless they load this class in the same quarter second - very unlikely)\n\tprotected int getJVM();\n\tprotected int getLoTime();\n}", "des": "The base class for identifier generators that use a UUID algorithm."}
{"index": 10786, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface AccessCallback {\n\t// Retrieve the next value from the underlying source.\n\tIntegralDataTypeHolder getNextValue();\n\t// Obtain the tenant identifier (multi-tenancy), if one, associated with this callback.\n\tjava.lang.String getTenantIdentifier();\n}", "des": "Contract for providing callback access to a DatabaseStructure, typically from the Optimizer."}
{"index": 10787, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum AccessType {\n\t// Resolve an AccessType from its external name.\n\tstatic AccessType fromExternalName​(java.lang.String externalName);\n\t// Get the corresponding externalized name for this value.\n\tjava.lang.String getExternalName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AccessType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AccessType[] values();\n}", "des": "The types of access strategies available."}
{"index": 10788, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ActivationContext {\n\t// Access the mapping metadata\n\tMetadata getMetadata();\n\t// Access the ServiceRegistry specific to the SessionFactory being built.\n\tSessionFactoryServiceRegistry getServiceRegistry();\n\t// Access the SessionFactory being built to trigger this BV activation\n\tSessionFactoryImplementor getSessionFactory();\n\t// Access the requested validation mode(s).\n\tjava.util.Set<ValidationMode> getValidationModes();\n}", "des": "Defines the context needed to call the TypeSafeActivator"}
{"index": 10789, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class AliasToBeanConstructorResultTransformer {\n\t// 2 AliasToBeanConstructorResultTransformer are considered equal if they have the same defined constructor.\n\tboolean equals​(java.lang.Object other);\n\t// Here we have an opportunity to perform transformation on the query result as a whole.\n\tjava.util.List transformList​(java.util.List collection);\n\t// Wrap the incoming tuples in a call to our configured constructor.\n\tjava.lang.Object transformTuple​(java.lang.Object[] tuple, java.lang.String[] aliases);\n}", "des": "Wraps the tuples in a constructor call."}
{"index": 10790, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class AliasToBeanResultTransformer {\n\tboolean equals​(java.lang.Object o);\n\t// When a tuple is transformed, is the result a single element of the tuple?\n\tboolean isTransformedValueATupleElement​(java.lang.String[] aliases, int tupleLength);\n\t// Tuples are the elements making up each \"row\" of the query result.\n\tjava.lang.Object transformTuple​(java.lang.Object[] tuple, java.lang.String[] aliases);\n}", "des": "Result transformer that allows to transform a result to a user specified class which will be populated via setter methods or fields matching the alias names."}
{"index": 10791, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class AliasToEntityMapResultTransformer {\n\t// When a tuple is transformed, is the result a single element of the tuple?\n\tboolean isTransformedValueATupleElement​(java.lang.String[] aliases, int tupleLength);\n\t// Tuples are the elements making up each \"row\" of the query result.\n\tjava.lang.Object transformTuple​(java.lang.Object[] tuple, java.lang.String[] aliases);\n}", "des": "ResultTransformer implementation which builds a map for each \"row\", made up of each aliased value where the alias is the map key."}
{"index": 10792, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum AnnotatedClassType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AnnotatedClassType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AnnotatedClassType[] values();\n}", "des": "Type of annotation of a class will give its type"}
{"index": 10793, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface AnyMappingDefinition.DiscriminatorMapping {\n\t// Access to the defined discriminator value (the database value) being mapped.\n\tjava.lang.Object getDiscriminatorValue();\n\t// Access to the defined entity name corresponding to the defined getDiscriminatorValue()\n\tjava.lang.String getEntityName();\n}", "des": "Models a single discriminator mapping definition"}
{"index": 10794, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface AppliedGraph {\n\t// The applied graph\n\tRootGraphImplementor<?> getGraph();\n\t// The semantic (fetch/load) under which the graph should be applied\n\tGraphSemantic getSemantic();\n}", "des": "Contract for anything a fetch/load graph can be applied"}
{"index": 10795, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ArchiveContext {\n\t// Is the archive described (and being visited) the root url for the persistence-unit?\n\tboolean isRootUrl();\n\t// Get the handler for the given entry, which generally is indicated by the entry type (a .class file, a mapping file, etc).\n\tArchiveEntryHandler obtainArchiveEntryHandler​(ArchiveEntry entry);\n}", "des": "Describes the context for visiting the entries within an archive"}
{"index": 10796, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ArchiveEntry {\n\t// Get the entry's name\n\tjava.lang.String getName();\n\t// Get the relative name of the entry within the archive.\n\tjava.lang.String getNameWithinArchive();\n\t// Get access to the stream for the entry\n\tInputStreamAccess getStreamAccess();\n}", "des": "Represent an entry in the archive."}
{"index": 10797, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class Assigned {\n\t// Configure this instance, given the value of parameters specified by the user as <param> elements.\n\tvoid configure​(Type type, java.util.Properties params, ServiceRegistry serviceRegistry);\n\t// Generate a new identifier.\n\tjava.io.Serializable generate​(SharedSessionContractImplementor session, java.lang.Object obj);\n}", "des": "assigned An IdentifierGenerator that returns the current identifier assigned to an instance."}
{"index": 10798, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class AttributePath {\n\t// Creates a new AbstractAttributeKey by appending the passed part.\n\tAttributePath append​(java.lang.String property);\n\tprotected char getDelimiter();\n\t// Access to the parent part\n\tAttributePath getParent();\n\tstatic AttributePath parse​(java.lang.String path);\n}", "des": "An attribute path is, generally speaking, the path of attribute names back to a \"root\" (which is either an entity or a persistent collection)."}
{"index": 10799, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class AttributeRole {\n\t// Creates a new AbstractAttributeKey by appending the passed part.\n\tAttributeRole append​(java.lang.String property);\n\tprotected char getDelimiter();\n\t// Access to the parent part\n\tAttributeRole getParent();\n}", "des": "An attribute role is, generally speaking, the path of attribute names back to a \"root\" (which is either an entity or a persistent collection)."}
{"index": 10800, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface AttributeSourceContainer {\n\t// Obtain this container's attribute sources.\n\tjava.util.List<AttributeSource> attributeSources();\n\tAttributePath getAttributePathBase();\n\tAttributeRole getAttributeRoleBase();\n\t// Obtain the local binding context associated with this container.\n\tLocalMetadataBuildingContext getLocalMetadataBuildingContext();\n}", "des": "Contract for a container of AttributeSource references."}
{"index": 10801, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class BasicTransformerAdapter {\n\t// Here we have an opportunity to perform transformation on the query result as a whole.\n\tjava.util.List transformList​(java.util.List list);\n\t// Tuples are the elements making up each \"row\" of the query result.\n\tjava.lang.Object transformTuple​(java.lang.Object[] tuple, java.lang.String[] aliases);\n}", "des": "Provides the basic \"noop\" impls of the ResultTransformer contract."}
{"index": 10802, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface BasicValueConverter<O,​R> {\n\t// Convert the relational form just retrieved from JDBC ResultSet into the domain form.\n\tO toDomainValue​(R relationalForm);\n\t// Convert the domain form into the relational form in preparation for storage into JDBC\n\tR toRelationalValue​(O domainForm);\n}", "des": "Support for basic-value conversions."}
{"index": 10803, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum BatchFetchStyle {\n\tstatic BatchFetchStyle byName​(java.lang.String name);\n\tstatic BatchFetchStyle interpret​(java.lang.Object setting);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic BatchFetchStyle valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic BatchFetchStyle[] values();\n}", "des": "Defines the style that should be used to perform batch loading."}
{"index": 10804, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface BatchKey {\n\t// How many statements will be in this batch?\n\tint getBatchedStatementCount();\n\t// Get the expectation pertaining to the outcome of the Batch associated with this key.\n\tExpectation getExpectation();\n}", "des": "Unique key for batch identification."}
{"index": 10805, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface BatchObserver {\n\t// Indicates explicit execution of the batch via a call to Batch.execute().\n\tvoid batchExplicitlyExecuted();\n\t// Indicates an implicit execution of the batch.\n\tvoid batchImplicitlyExecuted();\n}", "des": "An observer contract for batch events."}
{"index": 10806, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface BeanInstanceProducer {\n\t// Produce a bean instance\n\t<B> B produceBeanInstance​(java.lang.Class<B> beanType);\n\t// Produce a named bean instance\n\t<B> B produceBeanInstance​(java.lang.String name, java.lang.Class<B> beanType);\n}", "des": "Contract for producing a bean instance"}
{"index": 10807, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class BeanValidationEventListener {\n\tvoid initialize​(java.util.Map settings, ClassLoaderService classLoaderService);\n\t// Return true if the operation should be vetoed\n\tboolean onPreDelete​(PreDeleteEvent event);\n\t// Return true if the operation should be vetoed\n\tboolean onPreInsert​(PreInsertEvent event);\n\t// Return true if the operation should be vetoed\n\tboolean onPreUpdate​(PreUpdateEvent event);\n}", "des": "Event listener used to enable Bean Validation for insert/update/delete events."}
{"index": 10808, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class BetweenExpression {\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "Constrains a property to between two values"}
{"index": 10809, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface BidirectionalEntityReference {\n\t// The query space UID returned using getQuerySpaceUid() must be the same as returned by getTargetEntityReference()\n\tjava.lang.String getQuerySpaceUid();\n\t// Get the targeted EntityReference\n\tEntityReference getTargetEntityReference();\n}", "des": "Represents the circular side of a bi-directional entity association."}
{"index": 10810, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class BigIntegerType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Convert the value into a string representation, suitable for embedding in an SQL statement as a literal.\n\tjava.lang.String objectToSQLString​(java.math.BigInteger value, Dialect dialect);\n\tprotected boolean registerUnderJavaType();\n\t// Convert the value from the mapping file to a Java object.\n\tjava.math.BigInteger stringToObject​(java.lang.String string);\n}", "des": "A type that maps between a NUMERIC and BigInteger."}
{"index": 10811, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface BinaryStream {\n\t// Access to the bytes.\n\tbyte[] getBytes();\n\t// Retrieve the input stream.\n\tjava.io.InputStream getInputStream();\n\t// Retrieve the length of the input stream\n\tlong getLength();\n\t// Release any underlying resources.\n\tvoid release();\n}", "des": "Wraps a binary stream to also provide the length which is needed when binding."}
{"index": 10812, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Binder {\n\t// Bind from an InputStream\n\tBinding bind​(java.io.InputStream stream, Origin origin);\n\t// Bind from an XML source.\n\tBinding bind​(javax.xml.transform.Source source, Origin origin);\n}", "des": "Contract for performing JAXB binding."}
{"index": 10813, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class Binding<T> {\n\t// Obtain the metadata about the document's origin\n\tOrigin getOrigin();\n\t// Obtain the root JAXB bound object\n\tT getRoot();\n}", "des": "Represents a JAXB binding, as well as keeping information about the origin of the processed XML"}
{"index": 10814, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum BuiltInPropertyAccessStrategies {\n\tjava.lang.String getExternalName();\n\tPropertyAccessStrategy getStrategy();\n\tstatic BuiltInPropertyAccessStrategies interpret​(java.lang.String name);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic BuiltInPropertyAccessStrategies valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic BuiltInPropertyAccessStrategies[] values();\n}", "des": "Describes the built-in externally-nameable PropertyAccessStrategy implementations."}
{"index": 10815, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ByteCodeHelper {\n\t// Read class definition from a file.\n\tstatic byte[] readByteCode​(java.io.File file);\n\t// Reads class byte array info from the given input stream.\n\tstatic byte[] readByteCode​(java.io.InputStream inputStream);\n\t// Read class definition a zip (jar) file entry.\n\tstatic byte[] readByteCode​(java.util.zip.ZipInputStream zip);\n}", "des": "A helper for reading byte code from various input sources."}
{"index": 10816, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ByteTypeDescriptor {\n\tjava.lang.Byte fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.lang.Byte value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.lang.Byte value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.lang.Byte wrap​(X value, WrapperOptions options);\n}", "des": "Descriptor for Byte handling."}
{"index": 10817, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum CachedNaturalIdValueSource {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CachedNaturalIdValueSource valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CachedNaturalIdValueSource[] values();\n}", "des": "The type of action from which the cache call is originating."}
{"index": 10818, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface CacheEntryStructure {\n\t// Convert the previous structured form of the item back into its item form.\n\tjava.lang.Object destructure​(java.lang.Object structured, SessionFactoryImplementor factory);\n\t// Convert the cache item into its \"structured\" form.\n\tjava.lang.Object structure​(java.lang.Object item);\n}", "des": "Strategy for how cache entries are \"structured\" for storing into the cache."}
{"index": 10819, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CacheInitiator {\n\t// Obtains the service role initiated by this initiator.\n\tjava.lang.Class<CacheImplementor> getServiceInitiated();\n\t// Initiates the managed service.\n\tCacheImplementor initiateService​(SessionFactoryImplementor sessionFactory, SessionFactoryOptions sessionFactoryOptions, ServiceRegistryImplementor registry);\n}", "des": "Initiator for second level cache support"}
{"index": 10820, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum CacheModeType {\n\t// Conversion from CacheMode to CacheModeType.\n\tstatic CacheModeType fromCacheMode​(CacheMode cacheMode);\n\tCacheMode getCacheMode();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CacheModeType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CacheModeType[] values();\n}", "des": "Enumeration for the different interaction modes between the session and the Level 2 Cache."}
{"index": 10821, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Callback {\n\t// The type of callback (pre-update, pre-persist, etc) handled\n\tCallbackType getCallbackType();\n\t// Contract for performing the callback\n\tboolean performCallback​(java.lang.Object entity);\n}", "des": "Represents a JPA event callback (the method)."}
{"index": 10822, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface CascadeStyle {\n\t// For this style, should the given action be cascaded?\n\tboolean doCascade​(CascadingAction action);\n\t// Do we need to delete orphaned collection elements?\n\tboolean hasOrphanDelete();\n\t// Probably more aptly named something like doCascadeToCollectionElements(); it is however used from both the collection and to-one logic branches...\n\tboolean reallyDoCascade​(CascadingAction action);\n}", "des": "A contract for defining the aspects of cascading various persistence actions."}
{"index": 10823, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum CascadeType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CascadeType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CascadeType[] values();\n}", "des": "Cascade types (can override default JPA cascades)."}
{"index": 10824, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CastFunction {\n\t// The return type of the function.\n\tType getReturnType​(Type columnType, Mapping mapping);\n\t// Does this function have any arguments?\n\tboolean hasArguments();\n\t// If there are no arguments, are parentheses required?\n\tboolean hasParenthesesIfNoArguments();\n\t// Render the function call as SQL fragment.\n\tjava.lang.String render​(Type columnType, java.util.List args, SessionFactoryImplementor factory);\n}", "des": "ANSI-SQL style cast(foo as type) where the type is a Hibernate type"}
{"index": 10825, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CharacterArrayType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Get the names under which this type should be registered in the type registry.\n\tjava.lang.String[] getRegistrationKeys();\n}", "des": "A type that maps between VARCHAR and Character[]"}
{"index": 10826, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface CharacterStream {\n\t// Provides access to the underlying data as a Reader.\n\tjava.io.Reader asReader();\n\t// Provides access to the underlying data as a String.\n\tjava.lang.String asString();\n\t// Retrieve the number of characters.\n\tlong getLength();\n\t// Release any underlying resources.\n\tvoid release();\n}", "des": "Wraps a character stream (reader) to also provide the length (number of characters) which is needed when binding."}
{"index": 10827, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CharacterTypeDescriptor {\n\tjava.lang.Character fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.lang.Character value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.lang.Character value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.lang.Character wrap​(X value, WrapperOptions options);\n}", "des": "Descriptor for Character handling."}
{"index": 10828, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CharArrayType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Get the names under which this type should be registered in the type registry.\n\tjava.lang.String[] getRegistrationKeys();\n}", "des": "A type that maps between VARCHAR and char[]"}
{"index": 10829, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CharIndexFunction {\n\t// The return type of the function.\n\tType getReturnType​(Type columnType, Mapping mapping);\n\t// Does this function have any arguments?\n\tboolean hasArguments();\n\t// If there are no arguments, are parentheses required?\n\tboolean hasParenthesesIfNoArguments();\n\t// Render the function call as SQL fragment.\n\tjava.lang.String render​(Type columnType, java.util.List args, SessionFactoryImplementor factory);\n}", "des": "Emulation of locate() on Sybase"}
{"index": 10830, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ClassDescriptor {\n\tClassDescriptor.Categorization getCategorization();\n\t// Retrieves the class name, not the file name.\n\tjava.lang.String getName();\n\t// Retrieves access to the InputStream for the class file.\n\tInputStreamAccess getStreamAccess();\n}", "des": "Descriptor for a class file."}
{"index": 10831, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ClassLoaderAccess {\n\t// Obtain a Class reference by name\n\t<T> java.lang.Class<T> classForName​(java.lang.String name);\n\t// Locate a resource by name\n\tjava.net.URL locateResource​(java.lang.String resourceName);\n}", "des": "During the process of building this metamodel, accessing the ClassLoader is very discouraged."}
{"index": 10832, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ClassLoaderAccessDelegateImpl {\n\t// Obtain a Class reference by name\n\t<T> java.lang.Class<T> classForName​(java.lang.String name);\n\tprotected abstract ClassLoaderAccess getDelegate();\n\t// Locate a resource by name\n\tjava.net.URL locateResource​(java.lang.String resourceName);\n}", "des": "A ClassLoaderAccess implementation based on delegation"}
{"index": 10833, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ClassLoaderAccessLazyImpl {\n\t// Obtain a Class reference by name\n\t<T> java.lang.Class<T> classForName​(java.lang.String name);\n\t// Locate a resource by name\n\tjava.net.URL locateResource​(java.lang.String resourceName);\n}", "des": "A ClassLoaderAccess implementation based on lazy access to MetadataBuildingOptions"}
{"index": 10834, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ClassTypeDescriptor {\n\tjava.lang.Class fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.lang.Class value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.lang.Class value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.lang.Class wrap​(X value, WrapperOptions options);\n}", "des": "Descriptor for Class handling."}
{"index": 10835, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum Clause {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Clause valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Clause[] values();\n}", "des": "Used to indicate which query clause we are currently processing"}
{"index": 10836, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CollectionCacheEntry {\n\t// Assembles the collection from the cached state.\n\tvoid assemble​(PersistentCollection collection, CollectionPersister persister, java.lang.Object owner);\n\t// Retrieve the cached collection state.\n\tjava.io.Serializable[] getState();\n}", "des": "Cacheable representation of persistent collections"}
{"index": 10837, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CollectionKey {\n\t// Custom deserialization routine used during deserialization of a Session/PersistenceContext for increased performance.\n\tstatic CollectionKey deserialize​(java.io.ObjectInputStream ois, SessionImplementor session);\n\tboolean equals​(java.lang.Object other);\n\tjava.io.Serializable getKey();\n\tjava.lang.String getRole();\n\t// Custom serialization routine used during serialization of a Session/PersistenceContext for increased performance.\n\tvoid serialize​(java.io.ObjectOutputStream oos);\n}", "des": "Uniquely identifies a collection instance in a particular session."}
{"index": 10838, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CollectionNonStrictReadWriteAccess {\n\t// The type of access implemented\n\tAccessType getAccessType();\n\t// Called when we have finished the attempted update/delete (which may or may not have been successful), after transaction completion.\n\tvoid unlockItem​(SharedSessionContractImplementor session, java.lang.Object key, SoftLock lock);\n}", "des": "Standard support for CollectionDataAccess using the AccessType.NONSTRICT_READ_WRITE access type."}
{"index": 10839, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CollectionReturn {\n\tCollectionAliases getCollectionAliases();\n\tEntityAliases getElementEntityAliases();\n\t// Returns the class owning the collection.\n\tjava.lang.String getOwnerEntityName();\n\t// Returns the name of the property representing the collection from the getOwnerEntityName().\n\tjava.lang.String getOwnerProperty();\n}", "des": "Represents a return which names a collection role; it is used in defining a custom query for loading an entity's collection in non-fetching scenarios (i.e., loading the collection itself as the \"root\" of the result)."}
{"index": 10840, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ColumnInformation {\n\t// The simple (not qualified) column name.\n\tIdentifier getColumnIdentifier();\n\t// The column size (length).\n\tint getColumnSize();\n\t// Access to the containing table.\n\tTableInformation getContainingTableInformation();\n\t// The precision, for numeric types\n\tint getDecimalDigits();\n\t// Is the column nullable.\n\tTruthValue getNullable();\n\t// The JDBC type-code.\n\tint getTypeCode();\n\t// The database specific type name.\n\tjava.lang.String getTypeName();\n}", "des": "Provides access to information about existing table columns"}
{"index": 10841, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface CompositeNestedGeneratedValueGenerator.GenerationPlan {\n\t// Execute the value generation.\n\tvoid execute​(SharedSessionContractImplementor session, java.lang.Object incomingObject, java.lang.Object injectionContext);\n\t// Initializes this instance, in particular pre-generates SQL as necessary.\n\tdefault void initialize​(SqlStringGenerationContext context);\n}", "des": "Contract for performing the actual sub-value generation, usually injecting it into the determined context"}
{"index": 10842, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ConditionalParenthesisFunction {\n\t// If there are no arguments, are parentheses required?\n\tboolean hasParenthesesIfNoArguments();\n\t// Render the function call as SQL fragment.\n\tjava.lang.String render​(Type firstArgumentType, java.util.List arguments, SessionFactoryImplementor sessionFactory);\n}", "des": "Essentially the same as StandardSQLFunction, except that here the parentheses are not included when no arguments are given."}
{"index": 10843, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum ConnectionAcquisitionMode {\n\tstatic ConnectionAcquisitionMode interpret​(java.lang.Object setting);\n\tstatic ConnectionAcquisitionMode interpret​(java.lang.String value);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ConnectionAcquisitionMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ConnectionAcquisitionMode[] values();\n}", "des": "Indicates the manner in which JDBC Connections should be acquired."}
{"index": 10844, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ConnectionObserver {\n\t// The logical connection was closed.\n\tvoid logicalConnectionClosed();\n\t// A physical connection was obtained.\n\tvoid physicalConnectionObtained​(java.sql.Connection connection);\n\t// A physical connection was released.\n\tvoid physicalConnectionReleased();\n\t// Notification of a statement being prepared\n\tvoid statementPrepared();\n}", "des": "An observer of logical connection events."}
{"index": 10845, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ConnectionObserverAdapter {\n\t// The logical connection was closed.\n\tvoid logicalConnectionClosed();\n\t// A physical connection was obtained.\n\tvoid physicalConnectionObtained​(java.sql.Connection connection);\n\t// A physical connection was released.\n\tvoid physicalConnectionReleased();\n\t// Notification of a statement being prepared\n\tvoid statementPrepared();\n}", "des": "A no-op adapter for ConnectionObserver."}
{"index": 10846, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ConnectionProvider {\n\t// Release a connection from Hibernate use.\n\tvoid closeConnection​(java.sql.Connection conn);\n\t// Obtains a connection for Hibernate use according to the underlying strategy of this provider.\n\tjava.sql.Connection getConnection();\n\t// Does this connection provider support aggressive release of JDBC connections and re-acquisition of those connections (if need be) later?\n\tboolean supportsAggressiveRelease();\n}", "des": "A contract for obtaining JDBC connections."}
{"index": 10847, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum ConnectionReleaseMode {\n\tstatic ConnectionReleaseMode interpret​(java.lang.Object setting);\n\t// Alias for valueOf(String) using upper-case version of the incoming name.\n\tstatic ConnectionReleaseMode parse​(java.lang.String name);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ConnectionReleaseMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ConnectionReleaseMode[] values();\n}", "des": "Defines the various policies by which Hibernate might release its underlying JDBC connection."}
{"index": 10848, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ContainedBeanImplementor<B> {\n\t// Allow the container to force initialize the lifecycle-generated bean\n\tvoid initialize();\n\t// Release any resources\n\tvoid release();\n}", "des": "Release-able extension to ContainedBean."}
{"index": 10849, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ConvertFunction {\n\t// The return type of the function.\n\tType getReturnType​(Type firstArgumentType, Mapping mapping);\n\t// Does this function have any arguments?\n\tboolean hasArguments();\n\t// If there are no arguments, are parentheses required?\n\tboolean hasParenthesesIfNoArguments();\n\t// Render the function call as SQL fragment.\n\tjava.lang.String render​(Type firstArgumentType, java.util.List args, SessionFactoryImplementor factory);\n}", "des": "A Caché definition of a convert function."}
{"index": 10850, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Criterion {\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "An object-oriented representation of a query criterion that may be used as a restriction in a Criteria query."}
{"index": 10851, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CUBRIDLimitHandler {\n\t// Return processed SQL query.\n\tjava.lang.String processSql​(java.lang.String sql, RowSelection selection);\n\t// Does this handler support some form of limiting query results via a SQL clause?\n\tboolean supportsLimit();\n}", "des": "Limit handler for CUBRID"}
{"index": 10852, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CurrencyType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Convert the value into a string representation, suitable for embedding in an SQL statement as a literal.\n\tjava.lang.String objectToSQLString​(java.util.Currency value, Dialect dialect);\n\tprotected boolean registerUnderJavaType();\n}", "des": "A type that maps between VARCHAR and Currency"}
{"index": 10853, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class CurrencyTypeDescriptor {\n\tjava.util.Currency fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.util.Currency value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.util.Currency value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.util.Currency wrap​(X value, WrapperOptions options);\n}", "des": "Descriptor for Currency handling."}
{"index": 10854, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface CurrentTenantIdentifierResolver {\n\t// Resolve the current tenant identifier.\n\tjava.lang.String resolveCurrentTenantIdentifier();\n\t// Should we validate that the tenant identifier on \"current sessions\" that already exist when CurrentSessionContext.currentSession() is called matches the value returned here from resolveCurrentTenantIdentifier()?\n\tboolean validateExistingCurrentSessions();\n}", "des": "A callback registered with the SessionFactory that is responsible for resolving the current tenant identifier for use with CurrentSessionContext and SessionFactory.getCurrentSession()"}
{"index": 10855, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface CustomQuery {\n\t// A collection of descriptors describing the JDBC result set to be expected and how to map this result set.\n\tjava.util.List<Return> getCustomQueryReturns();\n\tjava.util.List<ParameterBinder> getParameterValueBinders();\n\t// Any query spaces to apply to the query execution.\n\tjava.util.Set<java.lang.String> getQuerySpaces();\n\t// The SQL query string to be performed.\n\tjava.lang.String getSQL();\n}", "des": "Extension point allowing any SQL query with named and positional parameters to be executed by Hibernate, returning managed entities, collections and simple scalar values."}
{"index": 10856, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum Database {\n\tabstract java.lang.Class<? extends Dialect> latestDialect();\n\tabstract Dialect resolveDialect​(DialectResolutionInfo info);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Database valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Database[] values();\n}", "des": "List all supported relational database systems."}
{"index": 10857, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class DataDirectOracle9Dialect {\n\t// Given a callable statement previously processed by Dialect.registerResultSetOutParameter(java.sql.CallableStatement, int), extract the ResultSet from the OUT parameter.\n\tjava.sql.ResultSet getResultSet​(java.sql.CallableStatement ps);\n\t// Registers a parameter (either OUT, or the new REF_CURSOR param type available in Java 8) capable of returning ResultSet *by position*.\n\tint registerResultSetOutParameter​(java.sql.CallableStatement statement, int col);\n}", "des": "A Dialect for accessing Oracle through DataDirect driver"}
{"index": 10858, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class DataSourceBasedMultiTenantConnectionProviderImpl {\n\t// Callback to inject the registry.\n\tvoid injectServices​(ServiceRegistryImplementor serviceRegistry);\n\tprotected javax.sql.DataSource selectAnyDataSource();\n\tprotected javax.sql.DataSource selectDataSource​(java.lang.String tenantIdentifier);\n\t// Stop phase notification\n\tvoid stop();\n}", "des": "A concrete implementation of the MultiTenantConnectionProvider contract bases on a number of reasonable assumptions."}
{"index": 10859, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class DB297Dialect {\n\t// Returns the separator to use for defining cross joins when translating HQL queries.\n\tjava.lang.String getCrossJoinSeparator();\n\tMultiTableBulkIdStrategy getDefaultMultiTableBulkIdStrategy();\n\t// Returns the SqlTypeDescriptor that should be used to handle the given JDBC type code.\n\tprotected SqlTypeDescriptor getSqlTypeDescriptorOverride​(int sqlCode);\n}", "des": "An SQL dialect for DB2 9.7."}
{"index": 10860, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class DB2UniqueDelegate {\n\t// Get the SQL ALTER TABLE command to be used to create the given UniqueKey.\n\tjava.lang.String getAlterTableToAddUniqueKeyCommand​(UniqueKey uniqueKey, Metadata metadata, SqlStringGenerationContext context);\n\t// Get the SQL ALTER TABLE command to be used to drop the given UniqueKey.\n\tjava.lang.String getAlterTableToDropUniqueKeyCommand​(UniqueKey uniqueKey, Metadata metadata, SqlStringGenerationContext context);\n}", "des": "DB2 does not allow unique constraints on nullable columns."}
{"index": 10861, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class DbTimestampType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Get the names under which this type should be registered in the type registry.\n\tjava.lang.String[] getRegistrationKeys();\n\t// Generate an initial version.\n\tjava.util.Date seed​(SharedSessionContractImplementor session);\n}", "des": "dbtimestamp: An extension of TimestampType which maps to the database's current timestamp, rather than the jvm's current timestamp."}
{"index": 10862, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface DdlTransactionIsolator {\n\t// Returns a Connection that is usable within the bounds of the prepare() and release() calls.\n\tjava.sql.Connection getIsolatedConnection();\n\torg.hibernate.tool.schema.internal.exec.JdbcContext getJdbcContext();\n\t// Deprecated. Instances should be returned from TransactionCoordinatorBuilder.buildDdlTransactionIsolator(org.hibernate.tool.schema.internal.exec.JdbcContext) already prepared for use\n\tvoid prepare();\n\tvoid release();\n}", "des": "Provides access to a Connection that is isolated from any \"current transaction\" with the designed purpose of performing DDL commands"}
{"index": 10863, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class DerbyConcatFunction {\n\t// The return type of the function.\n\tType getReturnType​(Type argumentType, Mapping mapping);\n\t// Does this function have any arguments?\n\tboolean hasArguments();\n\t// If there are no arguments, are parentheses required?\n\tboolean hasParenthesesIfNoArguments();\n\t// Render the function call as SQL fragment.\n\tjava.lang.String render​(Type argumentType, java.util.List args, SessionFactoryImplementor factory);\n}", "des": "A specialized concat() function definition in which: we translate to use the concat operator ('||') wrap dynamic parameters in CASTs to VARCHAR"}
{"index": 10864, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class DerbyTenFiveDialect {\n\t// Does this dialect support some form of limiting query results via a SQL clause?\n\tboolean supportsLimit();\n\t// Does this dialect's LIMIT support (if any) additionally support specifying an offset?\n\tboolean supportsLimitOffset();\n\t// Does this dialect support sequences?\n\tboolean supportsSequences();\n}", "des": "Hibernate Dialect for Cloudscape 10 - aka Derby."}
{"index": 10865, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class DerbyTenSixDialect {\n\t// Returns the separator to use for defining cross joins when translating HQL queries.\n\tjava.lang.String getCrossJoinSeparator();\n\t// Does this dialect support sequences?\n\tboolean supportsSequences();\n}", "des": "Hibernate Dialect for Cloudscape 10 - aka Derby."}
{"index": 10866, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface DirectAccessRegion {\n\t// Get value by key\n\tjava.lang.Object getFromCache​(java.lang.Object key, SharedSessionContractImplementor session);\n\t// Put a value by key\n\tvoid putIntoCache​(java.lang.Object key, java.lang.Object value, SharedSessionContractImplementor session);\n}", "des": "Specialized Region whose data is accessed directly (not requiring key/item wrapping, e.g."}
{"index": 10867, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class DirectAccessRegionTemplate {\n\t// Clear all data cached in the region\n\tvoid clear();\n\t// The \"end state\" contract of the region's lifecycle.\n\tvoid destroy();\n\t// Get value by key\n\tjava.lang.Object getFromCache​(java.lang.Object key, SharedSessionContractImplementor session);\n\tStorageAccess getStorageAccess();\n\t// Put a value by key\n\tvoid putIntoCache​(java.lang.Object key, java.lang.Object value, SharedSessionContractImplementor session);\n}", "des": "Bridge between DirectAccessRegion and StorageAccess"}
{"index": 10868, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface DiscriminatorMetadata {\n\t// Get the type used to resolve the actual discriminator value resulting from getSqlFragment(java.lang.String) back into a Class reference.\n\tType getResolutionType();\n\t// Get the sql fragment that is used to determine the actual discriminator value for a row.\n\tjava.lang.String getSqlFragment​(java.lang.String sqlQualificationAlias);\n}", "des": "Provides the information needed to properly handle type discrimination in HQL queries, either by 'something.class' or 'type(something)' references."}
{"index": 10869, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface DomainDataCachingConfig {\n\t// The requested AccessType\n\tAccessType getAccessType();\n\t// The NavigableRole of the thing to be cached\n\tNavigableRole getNavigableRole();\n\t// Is the data marked as being mutable?\n\tboolean isMutable();\n\t// Is the data to be cached considered versioned?\n\tboolean isVersioned();\n}", "des": "Configuration for a specific type of data to be stored in the region"}
{"index": 10870, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface DomainDataRegionBuildingContext {\n\t// The CacheKeyFactory explicitly specified as part of the bootstrap by the user, by some \"container\", etc.\n\tCacheKeysFactory getEnforcedCacheKeysFactory();\n\t// Access to the SessionFactory for which a Region is being built.\n\tSessionFactoryImplementor getSessionFactory();\n}", "des": "A \"parameter object\" for RegionFactory.buildDomainDataRegion(org.hibernate.cache.cfg.spi.DomainDataRegionConfig, org.hibernate.cache.cfg.spi.DomainDataRegionBuildingContext) calls, giving it access to information it needs."}
{"index": 10871, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class DoubleTypeDescriptor {\n\tjava.lang.Double fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.lang.Double value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.lang.Double value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.lang.Double wrap​(X value, WrapperOptions options);\n}", "des": "Descriptor for Double handling."}
{"index": 10872, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum DuplicateMappingException.Type {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DuplicateMappingException.Type valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DuplicateMappingException.Type[] values();\n}", "des": "Enumeration of the types of things that can be duplicated."}
{"index": 10873, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface DuplicationStrategy {\n\t// Are the two listener instances considered a duplication?\n\tboolean areMatch​(java.lang.Object listener, java.lang.Object original);\n\t// How should a duplication be handled?\n\tDuplicationStrategy.Action getAction();\n}", "des": "Defines listener duplication checking strategy, both in terms of when a duplication is detected (see DuplicationStrategy.areMatch(java.lang.Object, java.lang.Object)) as well as how to handle a duplication (see DuplicationStrategy.getAction())."}
{"index": 10874, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum DuplicationStrategy.Action {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DuplicationStrategy.Action valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DuplicationStrategy.Action[] values();\n}", "des": "The enumerated list of actions available on duplication match"}
{"index": 10875, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface EnhancedUserType {\n\t// Deprecated. To be removed in 5.\n\tjava.lang.Object fromXMLString​(java.lang.String xmlValue);\n\t// Return an SQL literal representation of the value\n\tjava.lang.String objectToSQLString​(java.lang.Object value);\n\t// Deprecated. To be removed in 5.\n\tjava.lang.String toXMLString​(java.lang.Object value);\n}", "des": "A custom type that may function as an identifier or discriminator type"}
{"index": 10876, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface EntityCopyObserver {\n\t// Called to clear any data stored in this EntityCopyObserver.\n\tvoid clear();\n\t// Called when more than one representation of the same persistent entity is being merged.\n\tvoid entityCopyDetected​(java.lang.Object managedEntity, java.lang.Object mergeEntity1, java.lang.Object mergeEntity2, EventSource session);\n\t// Called when the top-level merge operation is complete.\n\tvoid topLevelMergeComplete​(EventSource session);\n}", "des": "An observer for detection of multiple entity representations for a persistent entity being merged."}
{"index": 10877, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface EntityDataCachingConfig {\n\t// The list of specific subclasses of the root that are actually written to cache.\n\tjava.util.Set<NavigableRole> getCachedTypes();\n\t// Access to the comparator to be used with the entity's version.\n\tjava.util.function.Supplier<java.util.Comparator> getVersionComparatorAccess();\n\t// Mainly here to allow optimization of not having to know the actual comparator instance to use here yet.\n\tboolean isVersioned();\n}", "des": "Specialized DomainDataCachingConfig describing the requested caching config for a particular entity hierarchy's state data"}
{"index": 10878, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface EntityEntryExtraState {\n\t// Attach additional state to the core state of EntityEntry\n\tvoid addExtraState​(EntityEntryExtraState extraState);\n\t// Retrieve additional state by class type or null if no extra state of that type is present.\n\t<T extends EntityEntryExtraState>T getExtraState​(java.lang.Class<T> extraStateType);\n}", "des": "Navigation methods for extra state objects attached to EntityEntry."}
{"index": 10879, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface EntityIdentifierDescription {\n\t// Can this EntityIdentifierDescription be treated as a FetchSource and if so does it have any bidirectional entity references?\n\tboolean hasBidirectionalEntityReferences();\n\t// Can this EntityIdentifierDescription be treated as a FetchSource and if so does it have any fetches?\n\tboolean hasFetches();\n}", "des": "Descriptor for the identifier of an entity as a FetchSource (which allows for key-many-to-one handling)."}
{"index": 10880, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum EntityIdentifierNature {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic EntityIdentifierNature valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic EntityIdentifierNature[] values();\n}", "des": "Describes the possible natures of an entity-defined identifier."}
{"index": 10881, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class EntityLoader {\n\tint[][] getCompositeKeyManyToOneTargetIndices();\n\t// Return false is this loader is a batch entity loader\n\tprotected boolean isSingleRowLoader();\n\t// Deprecated. will be removed.\n\tjava.lang.Object loadByUniqueKey​(SharedSessionContractImplementor session, java.lang.Object key);\n\t// Deprecated. will be removed.\n\tjava.lang.Object loadByUniqueKey​(SharedSessionContractImplementor session, java.lang.Object key, java.lang.Boolean readOnly);\n}", "des": "Loads an entity instance using outerjoin fetching to fetch associated entities."}
{"index": 10882, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum EntityMode {\n\tjava.lang.String getExternalName();\n\t// Legacy-style entity-mode name parsing.\n\tstatic EntityMode parse​(java.lang.String entityMode);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic EntityMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic EntityMode[] values();\n}", "des": "Defines the representation modes available for entities."}
{"index": 10883, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface EntityReference {\n\t// Retrieves the EntityPersister describing the entity associated with this Return.\n\tEntityPersister getEntityPersister();\n\t// Get the description of this entity's identifier descriptor.\n\tEntityIdentifierDescription getIdentifierDescription();\n\t// Obtain the UID of the QuerySpace (specifically a EntityQuerySpace) that this EntityReference refers to.\n\tjava.lang.String getQuerySpaceUid();\n}", "des": "Represents a reference to an entity either as a return, fetch, or collection element or index."}
{"index": 10884, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface EntityReferenceAliases {\n\t// Obtain the column aliases for the select fragment columns associated with the described entity reference.\n\tEntityAliases getColumnAliases();\n\t// Obtain the table alias used for referencing the table of the EntityReference.\n\tjava.lang.String getTableAlias();\n}", "des": "Aggregates the alias/suffix information in relation to an EntityReference todo : add a contract (interface) that can be shared by entity and collection alias info objects as lhs/rhs of a join ?"}
{"index": 10885, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Expectation {\n\t// Is it acceptable to combiner this expectation with statement batching?\n\tboolean canBeBatched();\n\t// Perform any special statement preparation.\n\tint prepare​(java.sql.PreparedStatement statement);\n\t// Perform verification of the outcome of the RDBMS operation based on the type of expectation defined.\n\tvoid verifyOutcome​(int rowCount, java.sql.PreparedStatement statement, int batchPosition, java.lang.String statementSQL);\n}", "des": "Defines an expected DML operation outcome."}
{"index": 10886, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ExplicitParameterSpecification {\n\t// Retrieves the column number (within the getSourceLine()) where this parameter occurs.\n\tint getSourceColumn();\n\t// Retrieves the line number on which this parameter occurs in the source query.\n\tint getSourceLine();\n}", "des": "An additional contract for parameters which originate from parameters explicitly encountered in the source statement (HQL or native-SQL)."}
{"index": 10887, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum Fetch.Style {\n\t// Parses a style given an externalized string representation\n\tstatic Fetch.Style parse​(java.lang.String name);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Fetch.Style valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Fetch.Style[] values();\n}", "des": "The type or style of fetch."}
{"index": 10888, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum FetchMode {\n\tFetchMode getHibernateFetchMode();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic FetchMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic FetchMode[] values();\n}", "des": "Defines how the association should be fetched, compared to FetchType which defines when it should be fetched"}
{"index": 10889, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum FetchMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic FetchMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic FetchMode[] values();\n}", "des": "Represents an association fetching strategy."}
{"index": 10890, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class FetchProfile {\n\t// Adds a fetch to this profile.\n\tvoid addFetch​(java.lang.String entity, java.lang.String association, java.lang.String style);\n\tboolean equals​(java.lang.Object o);\n\t// Retrieve the fetches associated with this profile\n\tjava.util.LinkedHashSet<FetchProfile.Fetch> getFetches();\n\t// Retrieve the name of the fetch profile.\n\tjava.lang.String getName();\n\t// Retrieve the fetch profile source.\n\tMetadataSource getSource();\n}", "des": "A fetch profile allows a user to dynamically modify the fetching strategy used for particular associations at runtime, whereas that information was historically only statically defined in the metadata."}
{"index": 10891, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class FetchReturn {\n\t// Retrieves the return descriptor for the owner of this fetch.\n\tNonScalarReturn getOwner();\n\t// The name of the property on the owner which represents this association.\n\tjava.lang.String getOwnerProperty();\n}", "des": "Represents a return which names a fetched association."}
{"index": 10892, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum FetchStyle {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic FetchStyle valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic FetchStyle[] values();\n}", "des": "Enumeration of values describing HOW fetching should occur."}
{"index": 10893, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum FetchTiming {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic FetchTiming valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic FetchTiming[] values();\n}", "des": "Enumeration of values describing WHEN fetching should occur."}
{"index": 10894, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class FilterDefinition {\n\tjava.lang.String getDefaultFilterCondition();\n\t// Get the name of the filter this configuration defines.\n\tjava.lang.String getFilterName();\n\t// Get a set of the parameters defined by this configuration.\n\tjava.util.Set<java.lang.String> getParameterNames();\n\t// Retrieve the type of the named parameter defined for this filter.\n\tType getParameterType​(java.lang.String parameterName);\n\tjava.util.Map<java.lang.String,​Type> getParameterTypes();\n}", "des": "A FilterDefinition defines the global attributes of a dynamic filter."}
{"index": 10895, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class FloatTypeDescriptor {\n\tjava.lang.Float fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.lang.Float value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.lang.Float value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.lang.Float wrap​(X value, WrapperOptions options);\n}", "des": "Descriptor for Float handling."}
{"index": 10896, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum FlushModeType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic FlushModeType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic FlushModeType[] values();\n}", "des": "Enumeration extending javax.persistence flush modes."}
{"index": 10897, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum ForeignKeyDirection {\n\t// Should we cascade at this cascade point?\n\tabstract boolean cascadeNow​(org.hibernate.engine.internal.CascadePoint cascadePoint);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ForeignKeyDirection valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ForeignKeyDirection[] values();\n}", "des": "Represents directionality of the foreign key constraint"}
{"index": 10898, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum GenerationTime {\n\tGenerationTiming getEquivalent();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic GenerationTime valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic GenerationTime[] values();\n}", "des": "At what time(s) will the generation occur?"}
{"index": 10899, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum GraphSemantic {\n\tstatic GraphSemantic fromJpaHintName​(java.lang.String hintName);\n\tjava.lang.String getJakartaJpaHintName();\n\tjava.lang.String getJpaHintName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic GraphSemantic valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic GraphSemantic[] values();\n}", "des": "JPA defines 2 distinct semantics for applying an EntityGraph."}
{"index": 10900, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class H2FinalTableIdentityColumnSupport {\n\t// Provided we IdentityColumnSupport.supportsInsertSelectIdentity(), then attach the \"select identity\" clause to the insert statement.\n\tjava.lang.String appendIdentitySelectToInsert​(java.lang.String identityColumnName, java.lang.String insertString);\n\t// Does the dialect support some form of inserting and selecting the generated IDENTITY value all in the same statement.\n\tboolean supportsInsertSelectIdentity();\n}", "des": "Identity column support for H2 2+ versions"}
{"index": 10901, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface HibernateProxy {\n\t// Get the underlying lazy initialization handler.\n\tLazyInitializer getHibernateLazyInitializer();\n\t// Perform serialization-time write-replacement of this proxy.\n\tjava.lang.Object writeReplace();\n}", "des": "Marker interface for entity proxies"}
{"index": 10902, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface HibernateTypeSource {\n\t// Obtain the attribute's java type if possible.\n\tJavaTypeDescriptor getJavaType();\n\t// Obtain the supplied Hibernate type name.\n\tjava.lang.String getName();\n\t// Obtain any supplied Hibernate type parameters.\n\tjava.util.Map<java.lang.String,​java.lang.String> getParameters();\n}", "des": "Source-agnostic descriptor for explicit user-supplied Hibernate type information"}
{"index": 10903, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum IdentifierCaseStrategy {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic IdentifierCaseStrategy valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic IdentifierCaseStrategy[] values();\n}", "des": "An enumeration of the way DatabaseMetaData might store and return identifiers"}
{"index": 10904, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class IdentifierEqExpression {\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "An identifier constraint"}
{"index": 10905, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface IdentifierSource {\n\t// Obtain the identifier generator source.\n\tIdentifierGeneratorDefinition getIdentifierGeneratorDescriptor();\n\t// Obtain the nature of this identifier source.\n\tEntityIdentifierNature getNature();\n}", "des": "Contract describing source of identifier information for the entity."}
{"index": 10906, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface IdentifierSourceAggregatedComposite {\n\t// Obtain the source descriptor for the identifier attribute.\n\tSingularAttributeSourceEmbedded getIdentifierAttributeSource();\n\t// Obtain the mapping of attributes annotated with MapsId.\n\tjava.util.List<MapsIdSource> getMapsIdSources();\n}", "des": "Additional contract describing the source of an identifier mapping whose nature is EntityIdentifierNature.AGGREGATED_COMPOSITE."}
{"index": 10907, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface IdentifierSourceNonAggregatedComposite {\n\t// Obtain the source descriptor for the identifier attribute.\n\tjava.util.List<SingularAttributeSource> getAttributeSourcesMakingUpIdentifier();\n\t// Retrieve the source information for the IdClass definition\n\tEmbeddableSource getIdClassSource();\n}", "des": "Additional contract describing the source of an identifier mapping whose nature is EntityIdentifierNature.NON_AGGREGATED_COMPOSITE."}
{"index": 10908, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface IdentifierSourceSimple {\n\t// Obtain the source descriptor for the identifier attribute.\n\tSingularAttributeSource getIdentifierAttributeSource();\n\t// Returns the \"unsaved\" entity identifier value.\n\tjava.lang.String getUnsavedValue();\n}", "des": "Additional contract describing the source of an identifier mapping whose nature is simple."}
{"index": 10909, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class IdentifierValue {\n\t// Get a default value meant to indicate transience.\n\tjava.io.Serializable getDefaultValue​(java.lang.Object currentValue);\n\t// Does the given identifier belong to a new instance?\n\tjava.lang.Boolean isUnsaved​(java.lang.Object id);\n}", "des": "A strategy for determining if an identifier value is an identifier of a new transient instance or a previously persistent transient instance."}
{"index": 10910, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum ImmutableEntityUpdateQueryHandlingMode {\n\t// Interpret the configured ImmutableEntityUpdateQueryHandlingMode value.\n\tstatic ImmutableEntityUpdateQueryHandlingMode interpret​(java.lang.Object mode);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ImmutableEntityUpdateQueryHandlingMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ImmutableEntityUpdateQueryHandlingMode[] values();\n}", "des": "This enum defines how Immutable entities are handled when executing a bulk update statement."}
{"index": 10911, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ImmutableMutabilityPlan<T> {\n\t// Assemble a previously disassembled value.\n\tT assemble​(java.io.Serializable cached);\n\t// Return a deep copy of the value.\n\tT deepCopy​(T value);\n\t// Return a \"disassembled\" representation of the value.\n\tjava.io.Serializable disassemble​(T value);\n\t// Can the internal state of instances of T be changed?\n\tboolean isMutable();\n}", "des": "Mutability plan for immutable objects"}
{"index": 10912, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ImplicitBasicColumnNameSource {\n\t// Access to the AttributePath for the basic value\n\tAttributePath getAttributePath();\n\t// Is the basic column the \"element column\" for a collection?\n\tboolean isCollectionElement();\n}", "des": "Context for determining the implicit name related to basic values."}
{"index": 10913, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ImplicitCollectionTableNameSource {\n\t// Access to the name of the attribute, from the owning side, that defines the association.\n\tAttributePath getOwningAttributePath();\n\t// Access to entity naming information for the owning side.\n\tEntityNaming getOwningEntityNaming();\n\t// Access to the physical name of the owning entity's table.\n\tIdentifier getOwningPhysicalTableName();\n}", "des": "Context for determining the implicit name for a collection table."}
{"index": 10914, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ImplicitIdentifierColumnNameSource {\n\t// Access the entity name information\n\tEntityNaming getEntityNaming();\n\t// Access to the AttributePath for the entity's identifier attribute.\n\tAttributePath getIdentifierAttributePath();\n}", "des": "Context for determining the implicit name of an entity's identifier column."}
{"index": 10915, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ImplicitJoinColumnNameSource {\n\t// Access to the name of the attribute that defines the association.\n\tAttributePath getAttributePath();\n\t// Access to entity naming information.\n\tEntityNaming getEntityNaming();\n\tImplicitJoinColumnNameSource.Nature getNature();\n\t// Access the name of the column that is the target of the FK being described\n\tIdentifier getReferencedColumnName();\n\t// Access the name of the table that is the target of the FK being described\n\tIdentifier getReferencedTableName();\n}", "des": "Context for determining the implicit name of a \"join column\" (think JoinColumn)."}
{"index": 10916, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ImplicitPrimaryKeyJoinColumnNameSource {\n\t// Access the name of the column that is a primary key column in the referenced-table that is referenced by the foreign-key described here.\n\tIdentifier getReferencedPrimaryKeyColumnName();\n\t// Access the name of the table referenced by the foreign-key described here.\n\tIdentifier getReferencedTableName();\n}", "des": "Used to help determine the implicit name of columns which are part of a primary-key, well simultaneously being part of a foreign-key (join)."}
{"index": 10917, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ImportSqlCommandExtractorInitiator {\n\t// Obtains the service role initiated by this initiator.\n\tjava.lang.Class<ImportSqlCommandExtractor> getServiceInitiated();\n\t// Initiates the managed service.\n\tImportSqlCommandExtractor initiateService​(java.util.Map configurationValues, ServiceRegistryImplementor registry);\n}", "des": "Instantiates and configures an appropriate ImportSqlCommandExtractor."}
{"index": 10918, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface InDatabaseValueGenerationStrategy {\n\t// When is this value generated : NEVER, INSERT, ALWAYS (INSERT+UPDATE)\n\tGenerationTiming getGenerationTiming();\n\t// For columns that will be referenced in the SQL (per referenceColumnsInSql()), what value should be used in the SQL as the column value.\n\tjava.lang.String[] getReferencedColumnValues();\n\t// Should the column(s) be referenced in the INSERT / UPDATE SQL?\n\tboolean referenceColumnsInSql();\n}", "des": "Strategy for describing values which are generated in the database."}
{"index": 10919, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface IndexInformation {\n\t// Obtain the columns indexed under this index.\n\tjava.util.List<ColumnInformation> getIndexedColumns();\n\t// Obtain the identifier for this index.\n\tIdentifier getIndexIdentifier();\n}", "des": "Provides access to information about existing index in the database"}
{"index": 10920, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class InExpression {\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "Constrains the property to a specified list of values"}
{"index": 10921, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class Ingres10Dialect {\n\t// Get the appropriate IdentityColumnSupport\n\tIdentityColumnSupport getIdentityColumnSupport();\n\tprotected void registerBooleanSupport();\n\t// The SQL literal value to which this database maps boolean values.\n\tjava.lang.String toBooleanValueString​(boolean bool);\n}", "des": "A SQL dialect for Ingres 10 and later versions."}
{"index": 10922, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum InheritanceType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic InheritanceType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic InheritanceType[] values();\n}", "des": "The inheritance type for a given entity hierarchy"}
{"index": 10923, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface InputStreamAccess {\n\t// Get access to the stream.\n\tjava.io.InputStream accessInputStream();\n\t// Get the name of the resource backing the stream\n\tjava.lang.String getStreamName();\n}", "des": "Contract for building InputStreams, especially in on-demand situations"}
{"index": 10924, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class InstantiationException {\n\tjava.lang.String getMessage();\n\t// Deprecated. Use getUninstantiatableClass() instead\n\tjava.lang.Class getPersistentClass();\n\t// Returns the Class we were attempting to instantiate.\n\tjava.lang.Class getUninstantiatableClass();\n}", "des": "Thrown if Hibernate can't instantiate a class at runtime."}
{"index": 10925, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Instantiator {\n\t// Perform the requested instantiation.\n\tjava.lang.Object instantiate();\n\t// Perform the requested entity instantiation.\n\tjava.lang.Object instantiate​(java.io.Serializable id);\n\t// Performs check to see if the given object is an instance of the entity or component which this Instantiator instantiates.\n\tboolean isInstance​(java.lang.Object object);\n}", "des": "Contract for implementors responsible for instantiating entity/component instances."}
{"index": 10926, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class InstantJavaDescriptor {\n\tjava.time.Instant fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.time.Instant value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.time.Instant instant, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.time.Instant wrap​(X value, WrapperOptions options);\n}", "des": "Java type descriptor for the LocalDateTime type."}
{"index": 10927, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class IntegerTypeDescriptor {\n\tjava.lang.Integer fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.lang.Integer value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.lang.Integer value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.lang.Integer wrap​(X value, WrapperOptions options);\n}", "des": "Descriptor for Integer handling."}
{"index": 10928, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Integrator {\n\t// Tongue-in-cheek name for a shutdown callback.\n\tvoid disintegrate​(SessionFactoryImplementor sessionFactory, SessionFactoryServiceRegistry serviceRegistry);\n\t// Perform integration.\n\tvoid integrate​(Metadata metadata, SessionFactoryImplementor sessionFactory, SessionFactoryServiceRegistry serviceRegistry);\n}", "des": "Contract for stuff that integrates with Hibernate."}
{"index": 10929, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface IsolationDelegate {\n\t// Invoke the given callable in isolation from current transaction.\n\t<T> T delegateCallable​(java.util.concurrent.Callable<T> callable, boolean transacted);\n\t// Perform the given work in isolation from current transaction.\n\t<T> T delegateWork​(WorkExecutorVisitable<T> work, boolean transacted);\n}", "des": "Contract for performing work in a manner that isolates it from any current transaction."}
{"index": 10930, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbCfgCacheUsageEnum {\n\tstatic JaxbCfgCacheUsageEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbCfgCacheUsageEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbCfgCacheUsageEnum[] values();\n}", "des": "Java class for CacheUsageEnum."}
{"index": 10931, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbCfgConfigPropertyType {\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Gets the value of the value property.\n\tjava.lang.String getValue();\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n\t// Sets the value of the value property.\n\tvoid setValue​(java.lang.String value);\n}", "des": "Java class for ConfigPropertyType complex type."}
{"index": 10932, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbCfgEventListenerGroupType {\n\t// Gets the value of the listener property.\n\tjava.util.List<JaxbCfgEventListenerType> getListener();\n\t// Gets the value of the type property.\n\tJaxbCfgEventTypeEnum getType();\n\t// Sets the value of the type property.\n\tvoid setType​(JaxbCfgEventTypeEnum value);\n}", "des": "Java class for EventListenerGroupType complex type."}
{"index": 10933, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbCfgEventListenerType {\n\t// Gets the value of the clazz property.\n\tjava.lang.String getClazz();\n\t// Gets the value of the type property.\n\tJaxbCfgEventTypeEnum getType();\n\t// Sets the value of the clazz property.\n\tvoid setClazz​(java.lang.String value);\n\t// Sets the value of the type property.\n\tvoid setType​(JaxbCfgEventTypeEnum value);\n}", "des": "Java class for EventListenerType complex type."}
{"index": 10934, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbCfgEventTypeEnum {\n\tstatic JaxbCfgEventTypeEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbCfgEventTypeEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbCfgEventTypeEnum[] values();\n}", "des": "Java class for EventTypeEnum."}
{"index": 10935, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbCfgHibernateConfiguration.JaxbCfgSecurity {\n\t// Gets the value of the context property.\n\tjava.lang.String getContext();\n\t// Gets the value of the grant property.\n\tjava.util.List<JaxbCfgHibernateConfiguration.JaxbCfgSecurity.JaxbCfgGrant> getGrant();\n\t// Sets the value of the context property.\n\tvoid setContext​(java.lang.String value);\n}", "des": "Java class for anonymous complex type."}
{"index": 10936, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmAnyValueMappingType {\n\t// Gets the value of the clazz property.\n\tjava.lang.String getClazz();\n\t// Gets the value of the value property.\n\tjava.lang.String getValue();\n\t// Sets the value of the clazz property.\n\tvoid setClazz​(java.lang.String value);\n\t// Sets the value of the value property.\n\tvoid setValue​(java.lang.String value);\n}", "des": "Defines the mapping of a discriminator value to a concrete entity in an any or any-to-many mapping."}
{"index": 10937, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmAuxiliaryDatabaseObjectType.JaxbHbmDefinition {\n\t// Gets the value of the clazz property.\n\tjava.lang.String getClazz();\n\t// Sets the value of the clazz property.\n\tvoid setClazz​(java.lang.String value);\n}", "des": "Java class for anonymous complex type."}
{"index": 10938, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmCacheInclusionEnum {\n\tstatic JaxbHbmCacheInclusionEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmCacheInclusionEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmCacheInclusionEnum[] values();\n}", "des": "Java class for CacheInclusionEnum."}
{"index": 10939, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmCacheType {\n\t// Gets the value of the include property.\n\tJaxbHbmCacheInclusionEnum getInclude();\n\t// Gets the value of the region property.\n\tjava.lang.String getRegion();\n\t// Gets the value of the usage property.\n\tAccessType getUsage();\n\t// Sets the value of the include property.\n\tvoid setInclude​(JaxbHbmCacheInclusionEnum value);\n\t// Sets the value of the region property.\n\tvoid setRegion​(java.lang.String value);\n\t// Sets the value of the usage property.\n\tvoid setUsage​(AccessType value);\n}", "des": "Java class for CacheType complex type."}
{"index": 10940, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmClassRenameType {\n\t// Gets the value of the clazz property.\n\tjava.lang.String getClazz();\n\t// Gets the value of the rename property.\n\tjava.lang.String getRename();\n\t// Sets the value of the clazz property.\n\tvoid setClazz​(java.lang.String value);\n\t// Sets the value of the rename property.\n\tvoid setRename​(java.lang.String value);\n}", "des": "Java class for ClassRenameType complex type."}
{"index": 10941, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmCompositeIndexType {\n\t// Gets the value of the attributes property.\n\tjava.util.List<JaxbHbmToolingHintContainer> getAttributes();\n\t// Gets the value of the clazz property.\n\tjava.lang.String getClazz();\n\t// Sets the value of the clazz property.\n\tvoid setClazz​(java.lang.String value);\n}", "des": "Describes the key of a java.util.Map which is a composite."}
{"index": 10942, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmConfigParameterType {\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Gets the value of the value property.\n\tjava.lang.String getValue();\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n\t// Sets the value of the value property.\n\tvoid setValue​(java.lang.String value);\n}", "des": "Java class for ConfigParameterType complex type."}
{"index": 10943, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmDialectScopeType {\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Gets the value of the value property.\n\tjava.lang.String getValue();\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n\t// Sets the value of the value property.\n\tvoid setValue​(java.lang.String value);\n}", "des": "Java class for DialectScopeType complex type."}
{"index": 10944, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmFetchProfileType {\n\t// Gets the value of the fetch property.\n\tjava.util.List<JaxbHbmFetchProfileType.JaxbHbmFetch> getFetch();\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n}", "des": "Java class for FetchProfileType complex type."}
{"index": 10945, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmFetchStyleEnum {\n\tstatic JaxbHbmFetchStyleEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmFetchStyleEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmFetchStyleEnum[] values();\n}", "des": "Java class for FetchStyleEnum."}
{"index": 10946, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmFetchStyleWithSubselectEnum {\n\tstatic JaxbHbmFetchStyleWithSubselectEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmFetchStyleWithSubselectEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmFetchStyleWithSubselectEnum[] values();\n}", "des": "Java class for FetchStyleWithSubselectEnum."}
{"index": 10947, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmFilterDefinitionType {\n\t// Gets the value of the condition property.\n\tjava.lang.String getCondition();\n\t// Gets the value of the content property.\n\tjava.util.List<java.io.Serializable> getContent();\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Sets the value of the condition property.\n\tvoid setCondition​(java.lang.String value);\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n}", "des": "Java class for FilterDefinitionType complex type."}
{"index": 10948, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmFilterParameterType {\n\t// Gets the value of the parameterName property.\n\tjava.lang.String getParameterName();\n\t// Gets the value of the parameterValueTypeName property.\n\tjava.lang.String getParameterValueTypeName();\n\t// Sets the value of the parameterName property.\n\tvoid setParameterName​(java.lang.String value);\n\t// Sets the value of the parameterValueTypeName property.\n\tvoid setParameterValueTypeName​(java.lang.String value);\n}", "des": "Java class for FilterParameterType complex type."}
{"index": 10949, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmGeneratorSpecificationType {\n\t// Gets the value of the clazz property.\n\tjava.lang.String getClazz();\n\t// Sets the value of the clazz property.\n\tvoid setClazz​(java.lang.String value);\n}", "des": "Generators generate unique identifiers."}
{"index": 10950, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmIdentifierGeneratorDefinitionType {\n\t// Gets the value of the clazz property.\n\tjava.lang.String getClazz();\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Sets the value of the clazz property.\n\tvoid setClazz​(java.lang.String value);\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n}", "des": "Java class for IdentifierGeneratorDefinitionType complex type."}
{"index": 10951, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmIndexManyToAnyType {\n\t// Gets the value of the column property.\n\tjava.util.List<JaxbHbmColumnType> getColumn();\n\t// Gets the value of the idType property.\n\tjava.lang.String getIdType();\n\t// Gets the value of the metaType property.\n\tjava.lang.String getMetaType();\n\t// Sets the value of the idType property.\n\tvoid setIdType​(java.lang.String value);\n\t// Sets the value of the metaType property.\n\tvoid setMetaType​(java.lang.String value);\n}", "des": "Java class for index-many-to-any-type complex type."}
{"index": 10952, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmLazyEnum {\n\tstatic JaxbHbmLazyEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmLazyEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmLazyEnum[] values();\n}", "des": "Java class for LazyEnum."}
{"index": 10953, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmLazyWithExtraEnum {\n\tstatic JaxbHbmLazyWithExtraEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmLazyWithExtraEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmLazyWithExtraEnum[] values();\n}", "des": "Java class for LazyWithExtraEnum."}
{"index": 10954, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmLazyWithNoProxyEnum {\n\tstatic JaxbHbmLazyWithNoProxyEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmLazyWithNoProxyEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmLazyWithNoProxyEnum[] values();\n}", "des": "Java class for LazyWithNoProxyEnum."}
{"index": 10955, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmLoaderType {\n\t// Gets the value of the queryRef property.\n\tjava.lang.String getQueryRef();\n\t// Sets the value of the queryRef property.\n\tvoid setQueryRef​(java.lang.String value);\n}", "des": "The loader element allows specification of a named query to be used for fetching an entity or collection"}
{"index": 10956, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmMapKeyCompositeType {\n\t// Gets the value of the attributes property.\n\tjava.util.List<JaxbHbmToolingHintContainer> getAttributes();\n\t// Gets the value of the clazz property.\n\tjava.lang.String getClazz();\n\t// Sets the value of the clazz property.\n\tvoid setClazz​(java.lang.String value);\n}", "des": "Describes the key of a java.util.Map where the key is a composite type"}
{"index": 10957, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmNativeQueryPropertyReturnType {\n\t// Gets the value of the column property.\n\tjava.lang.String getColumn();\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Gets the value of the returnColumn property.\n\tjava.util.List<JaxbHbmNativeQueryPropertyReturnType.JaxbHbmReturnColumn> getReturnColumn();\n\t// Sets the value of the column property.\n\tvoid setColumn​(java.lang.String value);\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n}", "des": "Java class for NativeQueryPropertyReturnType complex type."}
{"index": 10958, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmNativeQueryPropertyReturnType.JaxbHbmReturnColumn {\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n}", "des": "Java class for anonymous complex type."}
{"index": 10959, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmNativeQueryReturnType.JaxbHbmReturnDiscriminator {\n\t// Gets the value of the column property.\n\tjava.lang.String getColumn();\n\t// Sets the value of the column property.\n\tvoid setColumn​(java.lang.String value);\n}", "des": "Java class for anonymous complex type."}
{"index": 10960, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmNativeQueryScalarReturnType {\n\t// Gets the value of the column property.\n\tjava.lang.String getColumn();\n\t// Gets the value of the type property.\n\tjava.lang.String getType();\n\t// Sets the value of the column property.\n\tvoid setColumn​(java.lang.String value);\n\t// Sets the value of the type property.\n\tvoid setType​(java.lang.String value);\n}", "des": "Java class for NativeQueryScalarReturnType complex type."}
{"index": 10961, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmNaturalIdCacheType {\n\t// Gets the value of the region property.\n\tjava.lang.String getRegion();\n\t// Sets the value of the region property.\n\tvoid setRegion​(java.lang.String value);\n}", "des": "Java class for NaturalIdCacheType complex type."}
{"index": 10962, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmNaturalIdType {\n\t// Gets the value of the attributes property.\n\tjava.util.List<java.io.Serializable> getAttributes();\n\t// Gets the value of the mutable property.\n\tboolean isMutable();\n\t// Sets the value of the mutable property.\n\tvoid setMutable​(java.lang.Boolean value);\n}", "des": "A natural-id element allows declaration of the unique business key"}
{"index": 10963, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmNotFoundEnum {\n\tstatic JaxbHbmNotFoundEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmNotFoundEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmNotFoundEnum[] values();\n}", "des": "Java class for NotFoundEnum."}
{"index": 10964, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmOnDeleteEnum {\n\tstatic JaxbHbmOnDeleteEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmOnDeleteEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmOnDeleteEnum[] values();\n}", "des": "Java class for OnDeleteEnum."}
{"index": 10965, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmOuterJoinEnum {\n\tstatic JaxbHbmOuterJoinEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmOuterJoinEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmOuterJoinEnum[] values();\n}", "des": "Java class for OuterJoinEnum."}
{"index": 10966, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmParentType {\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n}", "des": "The parent element maps a property of the component class as a pointer back to the owning entity."}
{"index": 10967, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmPolymorphismEnum {\n\tstatic JaxbHbmPolymorphismEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmPolymorphismEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmPolymorphismEnum[] values();\n}", "des": "Java class for PolymorphismEnum."}
{"index": 10968, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmQueryParamType {\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Gets the value of the type property.\n\tjava.lang.String getType();\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n\t// Sets the value of the type property.\n\tvoid setType​(java.lang.String value);\n}", "des": "The query-param element is used only by tools that generate finder methods for named queries"}
{"index": 10969, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmResultSetMappingType {\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Gets the value of the valueMappingSources property.\n\tjava.util.List<java.io.Serializable> getValueMappingSources();\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n}", "des": "The resultset element declares a named resultset mapping definition for SQL queries"}
{"index": 10970, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmSubclassEntityBaseDefinition {\n\t// Gets the value of the extends property.\n\tjava.lang.String getExtends();\n\t// Sets the value of the extends property.\n\tvoid setExtends​(java.lang.String value);\n}", "des": "Java class for SubclassEntityBaseDefinition complex type."}
{"index": 10971, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmSynchronizeType {\n\t// Gets the value of the table property.\n\tjava.lang.String getTable();\n\t// Sets the value of the table property.\n\tvoid setTable​(java.lang.String value);\n}", "des": "Java class for synchronize-type complex type."}
{"index": 10972, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmTimestampAttributeType {\n\t// Gets the value of the source property.\n\tJaxbHbmTimestampSourceEnum getSource();\n\t// Gets the value of the unsavedValue property.\n\tJaxbHbmUnsavedValueTimestampEnum getUnsavedValue();\n\t// Sets the value of the source property.\n\tvoid setSource​(JaxbHbmTimestampSourceEnum value);\n\t// Sets the value of the unsavedValue property.\n\tvoid setUnsavedValue​(JaxbHbmUnsavedValueTimestampEnum value);\n}", "des": "Optimistic locking attribute based on a (last-updated) timestamp."}
{"index": 10973, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmTimestampSourceEnum {\n\tstatic JaxbHbmTimestampSourceEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmTimestampSourceEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmTimestampSourceEnum[] values();\n}", "des": "Java class for TimestampSourceEnum."}
{"index": 10974, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmToolingHintType {\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Gets the value of the value property.\n\tjava.lang.String getValue();\n\t// Gets the value of the inheritable property.\n\tboolean isInheritable();\n\t// Sets the value of the inheritable property.\n\tvoid setInheritable​(java.lang.Boolean value);\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n\t// Sets the value of the value property.\n\tvoid setValue​(java.lang.String value);\n}", "des": "is used to assign meta-level attributes to a class or property."}
{"index": 10975, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmTuplizerType {\n\t// Gets the value of the clazz property.\n\tjava.lang.String getClazz();\n\t// Gets the value of the entityMode property.\n\tEntityMode getEntityMode();\n\t// Sets the value of the clazz property.\n\tvoid setClazz​(java.lang.String value);\n\t// Sets the value of the entityMode property.\n\tvoid setEntityMode​(EntityMode value);\n}", "des": "TUPLIZER element; defines tuplizer to use for a component/entity for a given entity-mode"}
{"index": 10976, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmTypeDefinitionType {\n\t// Gets the value of the clazz property.\n\tjava.lang.String getClazz();\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Sets the value of the clazz property.\n\tvoid setClazz​(java.lang.String value);\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n}", "des": "Java class for TypeDefinitionType complex type."}
{"index": 10977, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JaxbHbmTypeSpecificationType {\n\t// Gets the value of the name property.\n\tjava.lang.String getName();\n\t// Sets the value of the name property.\n\tvoid setName​(java.lang.String value);\n}", "des": "Declares the type of the containing property (overrides an eventually existing type attribute of the property)."}
{"index": 10978, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmUnsavedValueCompositeIdEnum {\n\tstatic JaxbHbmUnsavedValueCompositeIdEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmUnsavedValueCompositeIdEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmUnsavedValueCompositeIdEnum[] values();\n}", "des": "Java class for UnsavedValueCompositeIdEnum."}
{"index": 10979, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmUnsavedValueTimestampEnum {\n\tstatic JaxbHbmUnsavedValueTimestampEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmUnsavedValueTimestampEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmUnsavedValueTimestampEnum[] values();\n}", "des": "Java class for UnsavedValueTimestampEnum."}
{"index": 10980, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JaxbHbmUnsavedValueVersionEnum {\n\tstatic JaxbHbmUnsavedValueVersionEnum fromValue​(java.lang.String v);\n\tjava.lang.String value();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JaxbHbmUnsavedValueVersionEnum valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JaxbHbmUnsavedValueVersionEnum[] values();\n}", "des": "Java class for UnsavedValueVersionEnum."}
{"index": 10981, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface JdbcConnectionAccess {\n\t// Obtain a JDBC connection\n\tjava.sql.Connection obtainConnection();\n\t// Release a previously obtained connection\n\tvoid releaseConnection​(java.sql.Connection connection);\n\t// Does the underlying provider of connections support aggressive releasing of connections (and re-acquisition of those connections later, if need be) in JTA environments?\n\tboolean supportsAggressiveRelease();\n}", "des": "Provides centralized access to JDBC connections."}
{"index": 10982, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JDBCException {\n\t// Get the vendor specific error code from the underlying SQLException.\n\tint getErrorCode();\n\t// Get the actual SQL statement being executed when the exception occurred.\n\tjava.lang.String getSQL();\n\t// Get the underlying SQLException.\n\tjava.sql.SQLException getSQLException();\n\t// Get the X/Open or ANSI SQL SQLState error code from the underlying SQLException.\n\tjava.lang.String getSQLState();\n}", "des": "Wraps a SQLException."}
{"index": 10983, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface JdbcResourceTransaction {\n\t// Begin the resource transaction\n\tvoid begin();\n\t// Commit the resource transaction\n\tvoid commit();\n\tTransactionStatus getStatus();\n\t// Rollback the resource transaction\n\tvoid rollback();\n}", "des": "Models access to the resource transaction of the underlying JDBC resource."}
{"index": 10984, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JdbcTypeJavaClassMappings {\n\tjava.lang.Class determineJavaClassForJdbcTypeCode​(int typeCode);\n\t// For the given JDBC type, determine the JDBC recommended Java type.\n\tjava.lang.Class determineJavaClassForJdbcTypeCode​(java.lang.Integer typeCode);\n\t// For the given Java type, determine the JDBC recommended JDBC type.\n\tint determineJdbcTypeCodeForJavaClass​(java.lang.Class cls);\n}", "des": "Maintains the JDBC recommended mappings for JDBC type-code to/from Java Class as defined in _Appendix B : Data Type Conversion Tables_ of the _JDBC 4.0 Specification_ Eventually, the plan is to have Dialect and DatabaseMetaData.getTypeInfo() contribute this information."}
{"index": 10985, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class JdbcTypeNameMapper {\n\t// Get the type name as in the static field names defined on Types.\n\tstatic java.lang.String getTypeName​(java.lang.Integer typeCode);\n\t// Determine whether the given JDBC type code represents a standard JDBC type (\"standard\" being those defined on Types).\n\tstatic boolean isStandardTypeCode​(int typeCode);\n\t// Same as call to isStandardTypeCode(int)\n\tstatic boolean isStandardTypeCode​(java.lang.Integer typeCode);\n}", "des": "(Badly named) helper for dealing with standard JDBC types as defined by Types"}
{"index": 10986, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface JndiService {\n\t// Adds the specified listener to the given JNDI namespace.\n\tvoid addListener​(java.lang.String jndiName, javax.naming.event.NamespaceChangeListener listener);\n\t// Binds a value into JNDI by name.\n\tvoid bind​(java.lang.String jndiName, java.lang.Object value);\n\t// Locate an object in JNDI by name\n\tjava.lang.Object locate​(java.lang.String jndiName);\n\t// Unbind a value from JNDI by name.\n\tvoid unbind​(java.lang.String jndiName);\n}", "des": "Service providing simplified access to JNDI related features needed by Hibernate."}
{"index": 10987, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface JoinDefinedByMetadata {\n\t// Obtain the name of the property that defines the join, relative to the PropertyMapping (QuerySpace.toAliasedColumns(String, String)) of the left-hand-side (Join.getLeftHandSide()) of the join\n\tjava.lang.String getJoinedPropertyName();\n\t// Get the property type of the joined property.\n\tType getJoinedPropertyType();\n}", "des": "Specialization of a Join that is defined by the metadata."}
{"index": 10988, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum JoinStatus {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JoinStatus valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JoinStatus[] values();\n}", "des": "See the JPA notion of joining a transaction for details."}
{"index": 10989, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class Junction {\n\t// Adds a criterion to the junction (and/or)\n\tJunction add​(Criterion criterion);\n\t// Access the conditions making up the junction\n\tjava.lang.Iterable<Criterion> conditions();\n\tJunction.Nature getNature();\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria crit, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria crit, CriteriaQuery criteriaQuery);\n}", "des": "A sequence of a logical expressions combined by some associative logical operator"}
{"index": 10990, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum Junction.Nature {\n\t// The corresponding SQL operator\n\tjava.lang.String getOperator();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Junction.Nature valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Junction.Nature[] values();\n}", "des": "The type of junction"}
{"index": 10991, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum LazyCollectionOption {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic LazyCollectionOption valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic LazyCollectionOption[] values();\n}", "des": "Lazy options available for a collection."}
{"index": 10992, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface LazyInitializable {\n\t// To be called internally by the session, forcing immediate initialization.\n\tvoid forceInitialization();\n\t// Is this instance initialized?\n\tboolean wasInitialized();\n}", "des": "Hibernate \"wraps\" a java collection in an instance of PersistentCollection."}
{"index": 10993, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum LazyToOneOption {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic LazyToOneOption valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic LazyToOneOption[] values();\n}", "des": "Lazy options available for a ToOne association."}
{"index": 10994, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class LegacyHiLoAlgorithmOptimizer {\n\t// Are increments to be applied to the values stored in the underlying value source?\n\tboolean applyIncrementSizeToSourceValues();\n\t// Generate an identifier value accounting for this specific optimization.\n\tjava.io.Serializable generate​(AccessCallback callback);\n\t// A common means to access the last value obtained from the underlying source.\n\tIntegralDataTypeHolder getLastSourceValue();\n\t// Getter for property 'lastValue'.\n\tIntegralDataTypeHolder getLastValue();\n}", "des": "Slight variation from HiLoOptimizer, maintaining compatibility with the values generated by the legacy Hibernate hilo based generators."}
{"index": 10995, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Lifecycle {\n\t// Called when an entity is deleted.\n\tboolean onDelete​(Session s);\n\t// Called after an entity is loaded.\n\tvoid onLoad​(Session s, java.io.Serializable id);\n\t// Called when an entity is saved.\n\tboolean onSave​(Session s);\n\t// Called when an entity is passed to Session.update().\n\tboolean onUpdate​(Session s);\n}", "des": "Provides callbacks from the Session to the persistent object."}
{"index": 10996, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class LikeExpression {\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "A criterion representing a \"like\" expression"}
{"index": 10997, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class LimitHelper {\n\t// Retrieve the indicated first row for pagination\n\tstatic int getFirstRow​(RowSelection selection);\n\t// Is a first row limit indicated?\n\tstatic boolean hasFirstRow​(RowSelection selection);\n\t// Is a max row limit indicated?\n\tstatic boolean hasMaxRows​(RowSelection selection);\n\t// Should limit be applied?\n\tstatic boolean useLimit​(LimitHandler limitHandler, RowSelection selection);\n}", "des": "A helper for dealing with LimitHandler implementations"}
{"index": 10998, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum LiteralHandlingMode {\n\t// Interpret the configured literalHandlingMode value.\n\tstatic LiteralHandlingMode interpret​(java.lang.Object literalHandlingMode);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic LiteralHandlingMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic LiteralHandlingMode[] values();\n}", "des": "This enum defines how literals are handled by JPA Criteria."}
{"index": 10999, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum LoadPlan.Disposition {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic LoadPlan.Disposition valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic LoadPlan.Disposition[] values();\n}", "des": "Enumerated possibilities for describing the disposition of this LoadPlan."}
{"index": 11000, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface LobMergeStrategy {\n\t// Perform merge on Blob values.\n\tjava.sql.Blob mergeBlob​(java.sql.Blob original, java.sql.Blob target, SharedSessionContractImplementor session);\n\t// Perform merge on Clob values.\n\tjava.sql.Clob mergeClob​(java.sql.Clob original, java.sql.Clob target, SharedSessionContractImplementor session);\n\t// Perform merge on NClob values.\n\tjava.sql.NClob mergeNClob​(java.sql.NClob original, java.sql.NClob target, SharedSessionContractImplementor session);\n}", "des": "Strategy for how dialects need LOB values to be merged."}
{"index": 11001, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class LocalDateJavaDescriptor {\n\tjava.time.LocalDate fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.time.LocalDate value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.time.LocalDate value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.time.LocalDate wrap​(X value, WrapperOptions options);\n}", "des": "Java type descriptor for the LocalDateTime type."}
{"index": 11002, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class LocalDateTimeJavaDescriptor {\n\tjava.time.LocalDateTime fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.time.LocalDateTime value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.time.LocalDateTime value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.time.LocalDateTime wrap​(X value, WrapperOptions options);\n}", "des": "Java type descriptor for the LocalDateTime type."}
{"index": 11003, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class LocaleType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Convert the value into a string representation, suitable for embedding in an SQL statement as a literal.\n\tjava.lang.String objectToSQLString​(java.util.Locale value, Dialect dialect);\n\tprotected boolean registerUnderJavaType();\n}", "des": "A type that maps between VARCHAR and @link Locale}"}
{"index": 11004, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class LocalTimeJavaDescriptor {\n\tjava.time.LocalTime fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.time.LocalTime value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.time.LocalTime value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.time.LocalTime wrap​(X value, WrapperOptions options);\n}", "des": "Java type descriptor for the LocalDateTime type."}
{"index": 11005, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class LocalTimeType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Convert the value into a string representation, suitable for embedding in an SQL statement as a literal.\n\tjava.lang.String objectToSQLString​(java.time.LocalTime value, Dialect dialect);\n\tprotected boolean registerUnderJavaType();\n}", "des": "A type that maps between TIMESTAMP and LocalDateTime."}
{"index": 11006, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface LogicalConnection {\n\t// Closes the JdbcSession, making it inactive and forcing release of any held resources\n\tjava.sql.Connection close();\n\t// Provides access to the registry of JDBC resources associated with this LogicalConnection.\n\tResourceRegistry getResourceRegistry();\n\t// Is this (logical) JDBC Connection still open/active.\n\tboolean isOpen();\n\t// Is this JdbcSession currently physically connected (meaning does it currently hold a JDBC Connection)?\n\tboolean isPhysicallyConnected();\n}", "des": "Models the logical notion of a JDBC Connection."}
{"index": 11007, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class LogicalExpression {\n\tjava.lang.String getOp();\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "Superclass of binary logical expressions"}
{"index": 11008, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class LongTypeDescriptor {\n\tjava.lang.Long fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.lang.Long value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.lang.Long value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.lang.Long wrap​(X value, WrapperOptions options);\n}", "des": "Descriptor for Long handling."}
{"index": 11009, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ManagedBean<T> {\n\t// The bean Java type\n\tjava.lang.Class<T> getBeanClass();\n\t// The bean reference\n\tT getBeanInstance();\n}", "des": "Generalized contract for a \"ManagedBean\" as seen by Hibernate"}
{"index": 11010, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ManagedBeanRegistry {\n\t// Get a bean reference by class.\n\t<T> ManagedBean<T> getBean​(java.lang.Class<T> beanClass);\n\t// Get a bean reference by name and contract.\n\t<T> ManagedBean<T> getBean​(java.lang.String beanName, java.lang.Class<T> beanContract);\n\t// Get a reference to the underlying BeanContainer.\n\tBeanContainer getBeanContainer();\n}", "des": "A registry for ManagedBean instances."}
{"index": 11011, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ManagedBeanRegistryInitiator {\n\tstatic java.lang.Class cdiBeanManagerClass​(ClassLoaderService classLoaderService);\n\t// Obtains the service role initiated by this initiator.\n\tjava.lang.Class<ManagedBeanRegistry> getServiceInitiated();\n\t// Initiates the managed service.\n\tManagedBeanRegistry initiateService​(java.util.Map configurationValues, ServiceRegistryImplementor serviceRegistry);\n}", "des": "Hibernate's standard initializer for the ManagedBeanRegistry service."}
{"index": 11012, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface MappingFileDescriptor {\n\t// The mapping file name.\n\tjava.lang.String getName();\n\t// Retrieves access to the InputStream for the mapping file.\n\tInputStreamAccess getStreamAccess();\n}", "des": "Descriptor for a mapping (XML) file."}
{"index": 11013, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface MapsIdSource {\n\t// The attribute source information\n\tSingularAttributeSourceToOne getAssociationAttributeSource();\n\t// Obtain the MapsId.value() naming the attribute within the EmbeddedId mapped by this relationship.\n\tjava.lang.String getMappedIdAttributeName();\n}", "des": "Describes a relationship annotated with MapsId"}
{"index": 11014, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum MatchMode {\n\t// Convert the pattern, by appending/prepending \"%\"\n\tabstract java.lang.String toMatchString​(java.lang.String pattern);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic MatchMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic MatchMode[] values();\n}", "des": "Represents a strategy for matching strings using \"like\"."}
{"index": 11015, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface MergeEventListener {\n\t// Handle the given merge event.\n\tvoid onMerge​(MergeEvent event);\n\t// Handle the given merge event.\n\tvoid onMerge​(MergeEvent event, java.util.Map copiedAlready);\n}", "des": "Defines the contract for handling of merge events generated from a session."}
{"index": 11016, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum MetadataSource {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic MetadataSource valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic MetadataSource[] values();\n}", "des": "Enumeration of the known places from which a piece of metadata may come."}
{"index": 11017, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum MetadataSourceType {\n\tstatic MetadataSourceType parsePrecedence​(java.lang.String value);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic MetadataSourceType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic MetadataSourceType[] values();\n}", "des": "Enumeration of the types of sources of mapping metadata"}
{"index": 11018, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class MetamodelDrivenLoadPlanBuilder {\n\t// Coordinates building a LoadPlan that defines just a single root collection return (may have fetches).\n\tstatic LoadPlan buildRootCollectionLoadPlan​(LoadPlanBuildingAssociationVisitationStrategy strategy, CollectionPersister persister);\n\t// Coordinates building a LoadPlan that defines just a single root entity return (may have fetches).\n\tstatic LoadPlan buildRootEntityLoadPlan​(LoadPlanBuildingAssociationVisitationStrategy strategy, EntityPersister persister);\n}", "des": "A metadata-driven builder of LoadPlans."}
{"index": 11019, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface MutabilityPlan<T> {\n\t// Assemble a previously disassembled value.\n\tT assemble​(java.io.Serializable cached);\n\t// Return a deep copy of the value.\n\tT deepCopy​(T value);\n\t// Return a \"disassembled\" representation of the value.\n\tjava.io.Serializable disassemble​(T value);\n\t// Can the internal state of instances of T be changed?\n\tboolean isMutable();\n}", "des": "Describes the mutability aspects of a Java type."}
{"index": 11020, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class MutableMutabilityPlan<T> {\n\t// Assemble a previously disassembled value.\n\tT assemble​(java.io.Serializable cached);\n\t// Return a deep copy of the value.\n\tT deepCopy​(T value);\n\tprotected abstract T deepCopyNotNull​(T value);\n\t// Return a \"disassembled\" representation of the value.\n\tjava.io.Serializable disassemble​(T value);\n\t// Can the internal state of instances of T be changed?\n\tboolean isMutable();\n}", "des": "Mutability plan for mutable objects"}
{"index": 11021, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class MySQL5Dialect {\n\tprotected java.lang.String getEngineKeyword();\n\t// Apply a hint to the query.\n\tjava.lang.String getQueryHintString​(java.lang.String query, java.lang.String hints);\n\tViolatedConstraintNameExtracter getViolatedConstraintNameExtracter();\n\tprotected void registerVarcharTypes();\n\t// Does this dialect support column-level check constraints?\n\tboolean supportsColumnCheck();\n\t// Does this dialect support UNION ALL, which is generally a faster variant of UNION?\n\tboolean supportsUnionAll();\n}", "des": "An SQL dialect for MySQL 5.x specific features."}
{"index": 11022, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NamedParameterSpecification {\n\t// Bind the appropriate value into the given statement at the specified position.\n\tint bind​(java.sql.PreparedStatement statement, QueryParameters qp, SharedSessionContractImplementor session, int position);\n\t// Getter for property 'name'.\n\tjava.lang.String getName();\n\t// Render this parameter into displayable info (for logging, etc).\n\tjava.lang.String renderDisplayInfo();\n}", "des": "Parameter bind specification for an explicit named parameter."}
{"index": 11023, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum NameQualifierSupport {\n\tboolean supportsCatalogs();\n\tboolean supportsSchemas();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic NameQualifierSupport valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic NameQualifierSupport[] values();\n}", "des": "Enumerated values representing the level of support for catalog and schema."}
{"index": 11024, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface NativeQueryNonScalarRootReturn {\n\t// Access the alias associated with this return\n\tjava.lang.String getAlias();\n\t// Access the LockMode associated with this return\n\tLockMode getLockMode();\n\t// Access the nested property mappings associated with this return\n\tjava.util.List<JaxbHbmNativeQueryPropertyReturnType> getReturnProperty();\n}", "des": "Commonality for non-scalar root returns for a native query result mapping"}
{"index": 11025, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NativeSQLQueryCollectionReturn {\n\tboolean equals​(java.lang.Object o);\n\t// Returns the class owning the collection.\n\tjava.lang.String getOwnerEntityName();\n\t// Returns the name of the property representing the collection from the getOwnerEntityName().\n\tjava.lang.String getOwnerProperty();\n}", "des": "Represents a return defined as part of a native sql query which names a collection role in the form {className}.{collectionRole}; it is used in defining a custom sql query for loading an entity's collection in non-fetching scenarios (i.e., loading the collection itself as the \"root\" of the result)."}
{"index": 11026, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NativeSQLQueryJoinReturn {\n\tboolean equals​(java.lang.Object o);\n\t// Retrieve the alias of the owner of this fetched association.\n\tjava.lang.String getOwnerAlias();\n\t// Retrieve the property name (relative to the owner) which maps to the association to be fetched.\n\tjava.lang.String getOwnerProperty();\n}", "des": "Represents a return defined as part of a native sql query which names a fetched role."}
{"index": 11027, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NativeSQLQueryNonScalarReturn {\n\tboolean equals​(java.lang.Object o);\n\t// Retrieve the defined result alias\n\tjava.lang.String getAlias();\n\t// Retrieve the lock-mode to apply to this return\n\tLockMode getLockMode();\n\t// Retrieve the user-supplied column->property mappings.\n\tjava.util.Map<java.lang.String,​java.lang.String[]> getPropertyResultsMap();\n\tvoid traceLog​(NativeSQLQueryReturn.TraceLogger logger);\n}", "des": "Represents the base information for a non-scalar return defined as part of a native sql query."}
{"index": 11028, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum NaturalIdMutability {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic NaturalIdMutability valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic NaturalIdMutability[] values();\n}", "des": "A ternary boolean enum for describing the mutability aspects of an attribute as a natural id."}
{"index": 11029, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NaturalIdReadOnlyAccess {\n\t// The type of access implemented\n\tAccessType getAccessType();\n\t// Called when we have finished the attempted update/delete (which may or may not have been successful), after transaction completion.\n\tvoid unlockItem​(SharedSessionContractImplementor session, java.lang.Object key, SoftLock lock);\n}", "des": "Standard support for NaturalIdDataAccess using the AccessType.READ_ONLY access type."}
{"index": 11030, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NClobProxy {\n\t// Generates a NClob proxy using a character reader of given length.\n\tstatic java.sql.NClob generateProxy​(java.io.Reader reader, long length);\n\t// Generates a Clob proxy using the string data.\n\tstatic java.sql.NClob generateProxy​(java.lang.String string);\n\t// Determines the appropriate class loader to which the generated proxy should be scoped.\n\tprotected static java.lang.ClassLoader getProxyClassLoader();\n}", "des": "Manages aspects of proxying java.sql.NClobs for non-contextual creation, including proxy creation and handling proxy invocations."}
{"index": 11031, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NoArgSQLFunction {\n\tprotected java.lang.String getName();\n\t// The return type of the function.\n\tType getReturnType​(Type argumentType, Mapping mapping);\n\t// Does this function have any arguments?\n\tboolean hasArguments();\n\t// If there are no arguments, are parentheses required?\n\tboolean hasParenthesesIfNoArguments();\n\t// Render the function call as SQL fragment.\n\tjava.lang.String render​(Type argumentType, java.util.List args, SessionFactoryImplementor factory);\n}", "des": "A function which takes no arguments"}
{"index": 11032, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Node {\n\t// Get a string representation of this node usable for debug logging or similar.\n\tjava.lang.String getDebugText();\n\t// Build the node's representation for use in the resulting rendering.\n\tjava.lang.String getRenderableText();\n\t// Get the intrinsic text of this node.\n\tjava.lang.String getText();\n}", "des": "General contract for AST nodes."}
{"index": 11033, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NodeSupport {\n\t// Get a string representation of this node usable for debug logging or similar.\n\tjava.lang.String getDebugText();\n\t// Build the node's representation for use in the resulting rendering.\n\tjava.lang.String getRenderableText();\n}", "des": "Basic implementation of a Node bridging to the Antlr CommonAST hierarchy."}
{"index": 11034, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NoopOptimizer {\n\t// Are increments to be applied to the values stored in the underlying value source?\n\tboolean applyIncrementSizeToSourceValues();\n\t// Generate an identifier value accounting for this specific optimization.\n\tjava.io.Serializable generate​(AccessCallback callback);\n\t// A common means to access the last value obtained from the underlying source.\n\tIntegralDataTypeHolder getLastSourceValue();\n}", "des": "An optimizer that performs no optimization."}
{"index": 11035, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NotExpression {\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "A criterion that is a wrapper for another, negating the wrapped one."}
{"index": 11036, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum NotFoundAction {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic NotFoundAction valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic NotFoundAction[] values();\n}", "des": "Possible actions when the database contains a non-null fk with no matching target."}
{"index": 11037, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NotNullExpression {\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "Constrains a property to be non-null"}
{"index": 11038, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum Nullability {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Nullability valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Nullability[] values();\n}", "des": "Are the columns forced to null, not null or not forced"}
{"index": 11039, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NullExpression {\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "Constrains a property to be null"}
{"index": 11040, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class NvlFunction {\n\t// The return type of the function.\n\tType getReturnType​(Type argumentType, Mapping mapping);\n\t// Does this function have any arguments?\n\tboolean hasArguments();\n\t// If there are no arguments, are parentheses required?\n\tboolean hasParenthesesIfNoArguments();\n\t// Render the function call as SQL fragment.\n\tjava.lang.String render​(Type argumentType, java.util.List args, SessionFactoryImplementor factory);\n}", "des": "Emulation of coalesce() on Oracle, using multiple nvl() calls"}
{"index": 11041, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ObjectNameSource {\n\t// Retrieve the name explicitly provided by the user.\n\tjava.lang.String getExplicitName();\n\t// Retrieve the logical name for this object.\n\tjava.lang.String getLogicalName();\n}", "des": "Source for database object names (identifiers)."}
{"index": 11042, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ObjectType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Get the names under which this type should be registered in the type registry.\n\tjava.lang.String[] getRegistrationKeys();\n}", "des": "Specific adaptation of the \"any\" type to the old deprecated \"object\" type"}
{"index": 11043, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class OffsetDateTimeJavaDescriptor {\n\tjava.time.OffsetDateTime fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.time.OffsetDateTime value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.time.OffsetDateTime offsetDateTime, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.time.OffsetDateTime wrap​(X value, WrapperOptions options);\n}", "des": "Java type descriptor for the LocalDateTime type."}
{"index": 11044, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class OffsetTimeJavaDescriptor {\n\tjava.time.OffsetTime fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.time.OffsetTime value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.time.OffsetTime offsetTime, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.time.OffsetTime wrap​(X value, WrapperOptions options);\n}", "des": "Java type descriptor for the LocalDateTime type."}
{"index": 11045, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum OnDeleteAction {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic OnDeleteAction valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic OnDeleteAction[] values();\n}", "des": "Possible actions for on-delete."}
{"index": 11046, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum OptimisticLockType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic OptimisticLockType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic OptimisticLockType[] values();\n}", "des": "Possible optimistic locking strategies."}
{"index": 11047, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Optimizer {\n\t// Are increments to be applied to the values stored in the underlying value source?\n\tboolean applyIncrementSizeToSourceValues();\n\t// Generate an identifier value accounting for this specific optimization.\n\tjava.io.Serializable generate​(AccessCallback callback);\n\t// Retrieves the defined increment size.\n\tint getIncrementSize();\n\t// A common means to access the last value obtained from the underlying source.\n\tIntegralDataTypeHolder getLastSourceValue();\n}", "des": "Performs optimization on an optimizable identifier generator."}
{"index": 11048, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface OptionallyManageable {\n\t// The management bean (MBean) for this service.\n\tdefault java.lang.Object getManagementBean();\n\t// Any wrapped services that are Manageable.\n\tjava.util.List<Manageable> getRealManageables();\n}", "des": "Extension to Manageable for things that are optionally Manageable depending on some internal state."}
{"index": 11049, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Orderable {\n\t// The order by clause used during loading this plural attribute.\n\tjava.lang.String getOrder();\n\t// If the source of plural attribute is supposed to be applied the ORDER BY when loading.\n\tboolean isOrdered();\n}", "des": "Contact to define if a plural attribute source is orderable or not."}
{"index": 11050, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class Origin {\n\tboolean equals​(java.lang.Object o);\n\t// The name of the document origin.\n\tjava.lang.String getName();\n\t// Retrieve the type of origin.\n\tSourceType getType();\n}", "des": "Describes the origin of an xml document"}
{"index": 11051, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Outputs {\n\t// Retrieve the current Output object.\n\tOutput getCurrent();\n\t// Go to the next Output object (if any), returning an indication of whether there was another (aka, will the next call to getCurrent() return null?\n\tboolean goToNext();\n\t// Eagerly release any resources held by this Outputs.\n\tvoid release();\n}", "des": "Represents the outputs of executing a JDBC statement accounting for mixing of result sets and update counts hiding the complexity (IMO) of how this is exposed in the JDBC API."}
{"index": 11052, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PackageDescriptor {\n\t// Retrieves the package name.\n\tjava.lang.String getName();\n\t// Retrieves access to the InputStream for the package-info.class file.\n\tInputStreamAccess getStreamAccess();\n}", "des": "Descriptor for a package (as indicated by a package-info.class file)."}
{"index": 11053, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ParameterBind<T> {\n\t// The temporal type that will be used to \"interpret\" Date-like values (if applicable).\n\tTemporalType getSpecifiedTemporalType();\n\t// Access the bound value\n\tT getValue();\n}", "des": "Represents the value currently bound to a particular (bindable) parameter."}
{"index": 11054, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ParameterBind<T> {\n\t// If <T> represents a DATE/TIME type value, JPA usually allows specifying the particular parts of the DATE/TIME value to be bound.\n\tTemporalType getExplicitTemporalType();\n\t// Retrieves the bound value.\n\tT getValue();\n}", "des": "Describes an input value binding for any IN/INOUT parameters."}
{"index": 11055, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ParameterParser {\n\t// Performs the actual parsing and tokenizing of the query string making appropriate callbacks to the given recognizer upon recognition of the various tokens.\n\tstatic void parse​(java.lang.String sqlString, ParameterParser.Recognizer recognizer);\n\t// Exposed as public solely for use from tests\n\tstatic boolean startsWithEscapeCallTemplate​(java.lang.String sqlString);\n}", "des": "The single available method ParameterParser.parse(java.lang.String, org.hibernate.engine.query.spi.ParameterParser.Recognizer) is responsible for parsing a query string and recognizing tokens in relation to parameters (either named, JPA-style, or ordinal) and providing callbacks about such recognitions."}
{"index": 11056, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ParameterSpecification {\n\t// Get the type which we are expecting for a bind into this parameter based on translated contextual information.\n\tType getExpectedType();\n\t// Render this parameter into displayable info (for logging, etc).\n\tjava.lang.String renderDisplayInfo();\n\t// Injects the expected type.\n\tvoid setExpectedType​(Type expectedType);\n}", "des": "Maintains information relating to parameters which need to get bound into a JDBC PreparedStatement."}
{"index": 11057, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum ParameterStrategy {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ParameterStrategy valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ParameterStrategy[] values();\n}", "des": "The style/strategy of parameter registration used in a particular procedure call definition."}
{"index": 11058, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PersisterClassResolver {\n\t// Returns the collection persister class for a given collection role or null if the collection persister class should be the default.\n\tjava.lang.Class<? extends CollectionPersister> getCollectionPersisterClass​(Collection metadata);\n\t// Returns the entity persister class for a given entityName or null if the entity persister class should be the default.\n\tjava.lang.Class<? extends EntityPersister> getEntityPersisterClass​(PersistentClass metadata);\n}", "des": "Given an entity or collection mapping, resolve the appropriate persister class to use."}
{"index": 11059, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PersisterFactory {\n\t// Create a collection persister instance.\n\tCollectionPersister createCollectionPersister​(Collection collectionBinding, CollectionDataAccess cacheAccessStrategy, PersisterCreationContext creationContext);\n\t// Create an entity persister instance.\n\tEntityPersister createEntityPersister​(PersistentClass entityBinding, EntityDataAccess entityCacheAccessStrategy, NaturalIdDataAccess naturalIdCacheAccessStrategy, PersisterCreationContext creationContext);\n}", "des": "Contract for creating persister instances (both EntityPersister and CollectionPersister varieties)."}
{"index": 11060, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PersistEventListener {\n\t// Handle the given create event.\n\tvoid onPersist​(PersistEvent event);\n\t// Handle the given create event.\n\tvoid onPersist​(PersistEvent event, java.util.Map createdAlready);\n}", "des": "Defines the contract for handling of create events generated from a session."}
{"index": 11061, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class PessimisticForceIncrementLockingStrategy {\n\t// Retrieve the specific lock mode defined.\n\tprotected LockMode getLockMode();\n\t// Acquire an appropriate type of lock on the underlying data that will endure until the end of the current transaction.\n\tvoid lock​(java.io.Serializable id, java.lang.Object version, java.lang.Object object, int timeout, SharedSessionContractImplementor session);\n}", "des": "A pessimistic locking strategy that increments the version immediately (obtaining an exclusive write lock)."}
{"index": 11062, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum PluralAttributeElementNature {\n\tboolean isAssociation();\n\tboolean isCascadeable();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic PluralAttributeElementNature valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic PluralAttributeElementNature[] values();\n}", "des": "Describes the nature of plural attribute elements in terms of relational implications."}
{"index": 11063, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PluralAttributeElementSourceManyToMany {\n\t// Retrieve the name of the foreign key as supplied by the user, or null if the user supplied none.\n\tjava.lang.String getExplicitForeignKeyName();\n\tFetchCharacteristics getFetchCharacteristics();\n\tFilterSource[] getFilterSources();\n\tjava.lang.String getReferencedEntityAttributeName();\n\t// Obtain the name of the referenced entity.\n\tjava.lang.String getReferencedEntityName();\n\tjava.lang.String getWhere();\n\tboolean isIgnoreNotFound();\n\tboolean isUnique();\n}", "des": "Describes the source for the elements of persistent collections (plural attributes) where the elements are many-to-many association"}
{"index": 11064, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum PluralAttributeIndexNature {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic PluralAttributeIndexNature valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic PluralAttributeIndexNature[] values();\n}", "des": "Describes the nature of plural attribute indexes in terms of relational implications."}
{"index": 11065, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum PluralAttributeNature {\n\tboolean isIndexed();\n\tjava.lang.Class<?> reportedJavaType();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic PluralAttributeNature valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic PluralAttributeNature[] values();\n}", "des": "Describes the nature of the collection itself as declared by the metadata."}
{"index": 11066, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class PojoInstantiator {\n\tprotected java.lang.Object applyInterception​(java.lang.Object entity);\n\t// Perform the requested instantiation.\n\tjava.lang.Object instantiate();\n\t// Perform the requested entity instantiation.\n\tjava.lang.Object instantiate​(java.io.Serializable id);\n\t// Performs check to see if the given object is an instance of the entity or component which this Instantiator instantiates.\n\tboolean isInstance​(java.lang.Object object);\n}", "des": "Defines a POJO-based instantiator for use from the tuplizers."}
{"index": 11067, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum PolymorphismType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic PolymorphismType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic PolymorphismType[] values();\n}", "des": "Type of available polymorphism for a particular entity."}
{"index": 11068, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class PooledLoOptimizer {\n\t// Are increments to be applied to the values stored in the underlying value source?\n\tboolean applyIncrementSizeToSourceValues();\n\t// Generate an identifier value accounting for this specific optimization.\n\tjava.io.Serializable generate​(AccessCallback callback);\n\t// A common means to access the last value obtained from the underlying source.\n\tIntegralDataTypeHolder getLastSourceValue();\n}", "des": "Variation of PooledOptimizer which interprets the incoming database value as the lo value, rather than the hi value."}
{"index": 11069, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class PooledLoThreadLocalOptimizer {\n\t// Are increments to be applied to the values stored in the underlying value source?\n\tboolean applyIncrementSizeToSourceValues();\n\t// Generate an identifier value accounting for this specific optimization.\n\tjava.io.Serializable generate​(AccessCallback callback);\n\t// A common means to access the last value obtained from the underlying source.\n\tIntegralDataTypeHolder getLastSourceValue();\n}", "des": "Variation of PooledOptimizer which interprets the incoming database value as the lo value, rather than the hi value, as well as using thread local to cache the generation state."}
{"index": 11070, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class PositionalParameterSpecification {\n\t// Bind the appropriate value into the given statement at the specified position.\n\tint bind​(java.sql.PreparedStatement statement, QueryParameters qp, SharedSessionContractImplementor session, int position);\n\tint getLabel();\n\t// Render this parameter into displayable info (for logging, etc).\n\tjava.lang.String renderDisplayInfo();\n}", "des": "Parameter bind specification for an explicit positional (or ordinal) parameter."}
{"index": 11071, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class PositionSubstringFunction {\n\t// The return type of the function.\n\tType getReturnType​(Type firstArgumentType, Mapping mapping);\n\t// Does this function have any arguments?\n\tboolean hasArguments();\n\t// If there are no arguments, are parentheses required?\n\tboolean hasParenthesesIfNoArguments();\n\t// Render the function call as SQL fragment.\n\tjava.lang.String render​(Type firstArgumentType, java.util.List args, SessionFactoryImplementor factory);\n}", "des": "Emulation of locate() on PostgreSQL"}
{"index": 11072, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PostCommitDeleteEventListener {\n\t// Called when a commit fails and an entity was scheduled for deletion\n\tvoid onPostDeleteCommitFailed​(PostDeleteEvent event);\n\t// Deprecated. use requiresPostCommitHandling(EntityPersister)\n\tboolean requiresPostCommitHanding​(EntityPersister persister);\n\t// Does this listener require that after transaction hooks be registered?\n\tdefault boolean requiresPostCommitHandling​(EntityPersister persister);\n}", "des": "Called after an entity delete is committed to the datastore."}
{"index": 11073, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PostCommitInsertEventListener {\n\t// Called when a commit fails and an entity was scheduled for insertion\n\tvoid onPostInsertCommitFailed​(PostInsertEvent event);\n\t// Deprecated. use requiresPostCommitHandling(EntityPersister)\n\tboolean requiresPostCommitHanding​(EntityPersister persister);\n\t// Does this listener require that after transaction hooks be registered?\n\tdefault boolean requiresPostCommitHandling​(EntityPersister persister);\n}", "des": "Called after an entity insert is committed to the datastore."}
{"index": 11074, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PostCommitUpdateEventListener {\n\t// Called when a commit fails and an entity was scheduled for update\n\tvoid onPostUpdateCommitFailed​(PostUpdateEvent event);\n\t// Deprecated. use requiresPostCommitHandling(EntityPersister)\n\tboolean requiresPostCommitHanding​(EntityPersister persister);\n\t// Does this listener require that after transaction hooks be registered?\n\tdefault boolean requiresPostCommitHandling​(EntityPersister persister);\n}", "des": "Called after an entity update is committed to the datastore."}
{"index": 11075, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PostDeleteEventListener {\n\tvoid onPostDelete​(PostDeleteEvent event);\n\t// Deprecated. use requiresPostCommitHandling(EntityPersister)\n\tboolean requiresPostCommitHanding​(EntityPersister persister);\n\t// Does this listener require that after transaction hooks be registered?\n\tdefault boolean requiresPostCommitHandling​(EntityPersister persister);\n}", "des": "Called after deleting an item from the datastore"}
{"index": 11076, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class PostgreSQL10Dialect {\n\t// An SQL Dialect for PostgreSQL 10 and later.\n\tvoid augmentRecognizedTableTypes​(java.util.List<java.lang.String> tableTypesList);\n\t// Get the appropriate IdentityColumnSupport\n\tIdentityColumnSupport getIdentityColumnSupport();\n}", "des": "An SQL dialect for Postgres 10 and later."}
{"index": 11077, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class PostgreSQL91Dialect {\n\t// Does this dialect/database support non-query statements (e.g.\n\tboolean supportsNonQueryWithCTE();\n\t// Does the underlying database support partition by\n\tboolean supportsPartitionBy();\n}", "des": "An SQL dialect for Postgres 9.1 and later, adds support for PARTITION BY as a keyword."}
{"index": 11078, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PostInsertEventListener {\n\tvoid onPostInsert​(PostInsertEvent event);\n\t// Deprecated. use requiresPostCommitHandling(EntityPersister)\n\tboolean requiresPostCommitHanding​(EntityPersister persister);\n\t// Does this listener require that after transaction hooks be registered?\n\tdefault boolean requiresPostCommitHandling​(EntityPersister persister);\n}", "des": "Called after inserting an item in the datastore"}
{"index": 11079, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PostUpdateEventListener {\n\tvoid onPostUpdate​(PostUpdateEvent event);\n\t// Deprecated. use requiresPostCommitHandling(EntityPersister)\n\tboolean requiresPostCommitHanding​(EntityPersister persister);\n\t// Does this listener require that after transaction hooks be registered?\n\tdefault boolean requiresPostCommitHandling​(EntityPersister persister);\n}", "des": "Called after updating the datastore"}
{"index": 11080, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class PreUpdateEvent {\n\t// The old state of the entity at the time it was last loaded from the database; can be null in the case of detached entities.\n\tjava.lang.Object[] getOldState();\n\t// Retrieves the state to be used in the update.\n\tjava.lang.Object[] getState();\n}", "des": "Represents a pre-update event, which occurs just prior to performing the update of an entity in the database."}
{"index": 11081, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PrimaryKeyInformation {\n\t// Obtain the columns making up the primary key.\n\tjava.lang.Iterable<ColumnInformation> getColumns();\n\t// Obtain the identifier for this PK.\n\tIdentifier getPrimaryKeyIdentifier();\n}", "des": "Provides access to information about existing primary key for a table"}
{"index": 11082, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PrimitiveType<T> {\n\t// Get this type's default value.\n\tjava.io.Serializable getDefaultValue();\n\t// Retrieve the primitive counterpart to the wrapper type identified by Type.getReturnedClass().\n\tjava.lang.Class getPrimitiveClass();\n\t// Retrieve the string representation of the given value.\n\tjava.lang.String toString​(T value);\n}", "des": "Additional contract for primitive / primitive wrapper types."}
{"index": 11083, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ProcedureParameter<T> {\n\t// Deprecated. with no replacement.\n\tvoid enablePassingNulls​(boolean enabled);\n\t// Retrieves the parameter \"mode\".\n\tParameterMode getMode();\n\t// How will an unbound value be handled in terms of the JDBC parameter?\n\tboolean isPassNullsEnabled();\n}", "des": "NOTE: Consider this contract (and its sub-contracts) as incubating as we transition to 6.0 and SQM"}
{"index": 11084, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ProcedureParameterExtractionAware<T> {\n\t// Can the given instance of this type actually perform the parameter value extractions?\n\tboolean canDoExtraction();\n\t// Perform the extraction\n\tT extract​(java.sql.CallableStatement statement, int startIndex, SharedSessionContractImplementor session);\n\t// Perform the extraction\n\tT extract​(java.sql.CallableStatement statement, java.lang.String[] paramNames, SharedSessionContractImplementor session);\n}", "des": "Optional Type contract for implementations that are aware of how to extract values from store procedure OUT/INOUT parameters."}
{"index": 11085, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ProcedureParameterNamedBinder {\n\t// Can the given instance of this type actually set the parameter value by name\n\tboolean canDoSetting();\n\t// Bind a value to the JDBC prepared statement, ignoring some columns as dictated by the 'settable' parameter.\n\tvoid nullSafeSet​(java.sql.CallableStatement statement, java.lang.Object value, java.lang.String name, SharedSessionContractImplementor session);\n}", "des": "Optional Type contract for implementations enabled to set store procedure OUT/INOUT parameters values by name."}
{"index": 11086, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ProgressDialect {\n\t// The syntax used to add a column to a table (optional).\n\tjava.lang.String getAddColumnString();\n\t// Does this dialect support the ALTER TABLE syntax?\n\tboolean hasAlterTable();\n\t// Do we need to qualify index names with the schema name?\n\tboolean qualifyIndexName();\n}", "des": "An SQL dialect compatible with Progress 9.1C Connection Parameters required: hibernate.dialect org.hibernate.sql.ProgressDialect hibernate.driver com.progress.sql.jdbc.JdbcProgressDriver hibernate.url jdbc:JdbcProgress:T:host:port:dbname;WorkArounds=536870912 hibernate.username username hibernate.password password The WorkArounds parameter in the URL is required to avoid an error in the Progress 9.1C JDBC driver related to PreparedStatements."}
{"index": 11087, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PropertyAccess {\n\t// Obtain the delegate for getting values for the described persistent property\n\tGetter getGetter();\n\t// Access to the PropertyAccessStrategy that created this PropertyAccess\n\tPropertyAccessStrategy getPropertyAccessStrategy();\n\t// Obtain the delegate for setting values for the described persistent property\n\tSetter getSetter();\n}", "des": "Describes access to a particular persistent property in terms of getting and setting values."}
{"index": 11088, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class PropertyExpression {\n\tjava.lang.String getOp();\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "superclass for comparisons between two properties (with SQL binary operators)"}
{"index": 11089, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface PropertyMapping {\n\t// Get the type of the thing containing the properties\n\tType getType();\n\t// Given a property path, return the corresponding column name(s).\n\tjava.lang.String[] toColumns​(java.lang.String propertyName);\n\t// Obtain aliased column/formula fragments for the specified property path.\n\tjava.lang.String[] toColumns​(java.lang.String alias, java.lang.String propertyName);\n\t// Given a component path expression, get the type of the property\n\tType toType​(java.lang.String propertyName);\n}", "des": "Contract for all things that know how to map a property to the needed bits of SQL."}
{"index": 11090, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ProvidedInstanceManagedBeanImpl<T> {\n\t// The bean Java type\n\tjava.lang.Class<T> getBeanClass();\n\t// The bean reference\n\tT getBeanInstance();\n}", "des": "ManagedBean implementation for cases where we have been handed an actual instance to use."}
{"index": 11091, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ProxyFactory {\n\t// Create a new proxy instance\n\tHibernateProxy getProxy​(java.io.Serializable id, SharedSessionContractImplementor session);\n\t// Called immediately after instantiation of this factory.\n\tvoid postInstantiate​(java.lang.String entityName, java.lang.Class persistentClass, java.util.Set<java.lang.Class> interfaces, java.lang.reflect.Method getIdentifierMethod, java.lang.reflect.Method setIdentifierMethod, CompositeType componentIdType);\n}", "des": "Contract for run-time, proxy-based lazy initialization proxies."}
{"index": 11092, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ProxyFactoryFactory {\n\t// Build a proxy factory for basic proxy concerns.\n\tBasicProxyFactory buildBasicProxyFactory​(java.lang.Class superClassOrInterface);\n\t// Deprecated. Use buildBasicProxyFactory(Class) instead.\n\tBasicProxyFactory buildBasicProxyFactory​(java.lang.Class superClass, java.lang.Class[] interfaces);\n\t// Build a proxy factory specifically for handling runtime lazy loading.\n\tProxyFactory buildProxyFactory​(SessionFactoryImplementor sessionFactory);\n}", "des": "An interface for factories of proxy factory instances."}
{"index": 11093, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class QualifiedNameParser {\n\t// Parses a textual representation of a qualified name into a NameParts representation.\n\tQualifiedNameParser.NameParts parse​(java.lang.String text);\n\t// Parses a textual representation of a qualified name into a NameParts representation.\n\tQualifiedNameParser.NameParts parse​(java.lang.String text, Identifier defaultCatalog, Identifier defaultSchema);\n}", "des": "Parses a qualified name."}
{"index": 11094, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface QualifiedObjectNameFormatter {\n\t// Render a formatted non-table and non-sequence qualified name\n\tjava.lang.String format​(QualifiedName qualifiedName, Dialect dialect);\n\t// Render a formatted sequence name\n\tjava.lang.String format​(QualifiedSequenceName qualifiedSequenceName, Dialect dialect);\n\t// Render a formatted a table name\n\tjava.lang.String format​(QualifiedTableName qualifiedTableName, Dialect dialect);\n}", "des": "Contract for rendering qualified object names for use in queries, etc."}
{"index": 11095, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface QueryBuildingParameters {\n\t// Gets the batch size.\n\tint getBatchSize();\n\t// Gets the lock mode.\n\tLockMode getLockMode();\n\t// Gets the lock options.\n\tLockOptions getLockOptions();\n\t// Provides data for options which can influence the SQL query needed to load an entity.\n\tLoadQueryInfluencers getQueryInfluencers();\n}", "des": "Provides values for all options that impact the built query."}
{"index": 11096, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface QueryParameterBinding<T> {\n\t// Get the Type currently associated with this binding.\n\tType getBindType();\n\t// Get the value current bound.\n\tT getBindValue();\n\tboolean isBound();\n\t// Sets the parameter binding value.\n\tvoid setBindValue​(T value);\n\t// Sets the parameter binding value using the explicit TemporalType.\n\tvoid setBindValue​(T value, TemporalType clarifiedTemporalType);\n\t// Sets the parameter binding value using the explicit Type.\n\tvoid setBindValue​(T value, Type clarifiedType);\n}", "des": "The value/type binding information for a particular query parameter."}
{"index": 11097, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum QuerySpace.Disposition {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic QuerySpace.Disposition valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic QuerySpace.Disposition[] values();\n}", "des": "Enumeration of the different types of QuerySpaces we can have."}
{"index": 11098, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface QuerySpaces {\n\t// Locate a QuerySpace by its uid.\n\tQuerySpace findQuerySpaceByUid​(java.lang.String uid);\n\t// Like findQuerySpaceByUid(java.lang.String), except that here an exception is thrown if the uid cannot be resolved.\n\tQuerySpace getQuerySpaceByUid​(java.lang.String uid);\n\t// Gets the root QuerySpace references.\n\tjava.util.List<QuerySpace> getRootQuerySpaces();\n}", "des": "Models a collection of QuerySpace references and exposes the ability to find a QuerySpace by its UID"}
{"index": 11099, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ReflectionOptimizer {\n\t// Retrieve the optimizer for accessing the entity's persistent state.\n\tReflectionOptimizer.AccessOptimizer getAccessOptimizer();\n\t// Retrieve the optimizer for calling an entity's constructor via reflection.\n\tReflectionOptimizer.InstantiationOptimizer getInstantiationOptimizer();\n}", "des": "Represents reflection optimization for a particular class."}
{"index": 11100, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ReflectionOptimizer.AccessOptimizer {\n\t// Get the name of all properties.\n\tjava.lang.String[] getPropertyNames();\n\t// Get the value of all properties from the given entity\n\tjava.lang.Object[] getPropertyValues​(java.lang.Object object);\n\t// Set all property values into an entity instance.\n\tvoid setPropertyValues​(java.lang.Object object, java.lang.Object[] values);\n}", "des": "Represents optimized entity property access."}
{"index": 11101, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Region {\n\t// Clear all data cached in the region\n\tvoid clear();\n\t// The \"end state\" contract of the region's lifecycle.\n\tvoid destroy();\n\t// Retrieve the unqualified name of this region.\n\tjava.lang.String getName();\n\t// The RegionFactory that generated this Region\n\tRegionFactory getRegionFactory();\n}", "des": "Contract for a named \"region\"."}
{"index": 11102, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum ResultCheckStyle {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ResultCheckStyle valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ResultCheckStyle[] values();\n}", "des": "Possible styles of checking return codes on SQL INSERT, UPDATE and DELETE queries."}
{"index": 11103, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum ResultColumnReferenceStrategy {\n\t// Resolves the strategy by name, in a case insensitive manner.\n\tstatic ResultColumnReferenceStrategy resolveByName​(java.lang.String name);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ResultColumnReferenceStrategy valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ResultColumnReferenceStrategy[] values();\n}", "des": "Defines how we need to reference columns in the group-by, having, and order-by clauses."}
{"index": 11104, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ResultSetOutput {\n\t// Consume the underlying ResultSet and return the resulting List.\n\tjava.util.List getResultList();\n\t// Consume the underlying ResultSet with the expectation that there is just a single level of root returns.\n\tjava.lang.Object getSingleResult();\n}", "des": "Models a return that is a result set."}
{"index": 11105, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ResultSetProcessor {\n\t// Process an entire ResultSet, performing all extractions.\n\tjava.util.List extractResults​(java.sql.ResultSet resultSet, SharedSessionContractImplementor session, QueryParameters queryParameters, NamedParameterContext namedParameterContext, boolean returnProxies, boolean readOnly, ResultTransformer forcedResultTransformer, java.util.List<AfterLoadAction> afterLoadActions);\n\t// Deprecated. Going away!\n\tScrollableResultSetProcessor toOnDemandForm();\n}", "des": "Contract for processing JDBC ResultSets."}
{"index": 11106, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ResultTransformer {\n\t// Here we have an opportunity to perform transformation on the query result as a whole.\n\tjava.util.List transformList​(java.util.List collection);\n\t// Tuples are the elements making up each \"row\" of the query result.\n\tjava.lang.Object transformTuple​(java.lang.Object[] tuple, java.lang.String[] aliases);\n}", "des": "Implementors define a strategy for transforming query results into the actual application-visible query result list."}
{"index": 11107, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class RowCountProjection {\n\tprotected SQLFunction getFunction​(CriteriaQuery criteriaQuery);\n\t// Types returned by the rendered SQL fragment.\n\tType[] getTypes​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment to be used in the SELECT clause.\n\tjava.lang.String toSqlString​(Criteria criteria, int position, CriteriaQuery criteriaQuery);\n}", "des": "A row count"}
{"index": 11108, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class RowVersionType {\n\t// Get a comparator for version values.\n\tjava.util.Comparator<byte[]> getComparator();\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Get the names under which this type should be registered in the type registry.\n\tjava.lang.String[] getRegistrationKeys();\n\t// Increment the version.\n\tbyte[] next​(byte[] current, SharedSessionContractImplementor session);\n\t// Generate an initial version.\n\tbyte[] seed​(SharedSessionContractImplementor session);\n}", "des": "A type that maps between a VARBINARY and byte[] specifically for entity versions/timestamps."}
{"index": 11109, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ScalarReturn {\n\t// Gets the name of the scalar return.\n\tjava.lang.String getName();\n\t// Gets the type of the scalar return.\n\tType getType();\n}", "des": "Represent a simple scalar return within a query result."}
{"index": 11110, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ScanEnvironment {\n\t// Returns any classes which are explicitly listed as part of the \"persistence unit\".\n\tjava.util.List<java.lang.String> getExplicitlyListedClassNames();\n\t// Returns the mapping files which are explicitly listed as part of the \"persistence unit\".\n\tjava.util.List<java.lang.String> getExplicitlyListedMappingFiles();\n\t// Returns any non-root URLs for scanning.\n\tjava.util.List<java.net.URL> getNonRootUrls();\n\t// Returns the root URL for scanning.\n\tjava.net.URL getRootUrl();\n}", "des": "Describes the environment in which the scan will occur."}
{"index": 11111, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ScanResult {\n\t// Returns descriptors for all classes discovered as part of the scan\n\tjava.util.Set<ClassDescriptor> getLocatedClasses();\n\t// Returns descriptors for all mapping files discovered as part of the scan\n\tjava.util.Set<MappingFileDescriptor> getLocatedMappingFiles();\n\t// Returns descriptors for all packages discovered as part of the scan\n\tjava.util.Set<PackageDescriptor> getLocatedPackages();\n}", "des": "Defines the result of scanning"}
{"index": 11112, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum SchemaAutoTooling {\n\tstatic SchemaAutoTooling interpret​(java.lang.String configurationValue);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SchemaAutoTooling valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SchemaAutoTooling[] values();\n}", "des": "Defines the possible values for \"hbm2ddl_auto\""}
{"index": 11113, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface SchemaDropper {\n\t// Build a delayed Runnable for performing schema dropping.\n\tDelayedDropAction buildDelayedAction​(Metadata metadata, ExecutionOptions options, SourceDescriptor sourceDescriptor);\n\t// Perform a schema drop from the indicated source(s) to the indicated target(s).\n\tvoid doDrop​(Metadata metadata, ExecutionOptions options, SourceDescriptor sourceDescriptor, TargetDescriptor targetDescriptor);\n}", "des": "Service delegate for handling schema dropping."}
{"index": 11114, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface SchemaFilterProvider {\n\t// Get the filter to be applied to SchemaCreator processing\n\tSchemaFilter getCreateFilter();\n\t// Get the filter to be applied to SchemaDropper processing\n\tSchemaFilter getDropFilter();\n\t// Get the filter to be applied to SchemaMigrator processing\n\tSchemaFilter getMigrateFilter();\n\t// Get the filter to be applied to SchemaValidator processing\n\tSchemaFilter getValidateFilter();\n}", "des": "Used to specify the SchemaFilters to be used by create, drop, migrate and validate operations on the database schema."}
{"index": 11115, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SchemaValidatorTask {\n\tvoid addFileset​(org.apache.tools.ant.types.FileSet fileSet);\n\t// Execute the task\n\tvoid execute();\n\t// Set a .cfg.xml file\n\tvoid setConfig​(java.io.File configurationFile);\n\tvoid setImplicitNamingStrategy​(java.lang.String implicitNamingStrategy);\n\tvoid setNamingStrategy​(java.lang.String namingStrategy);\n\tvoid setPhysicalNamingStrategy​(java.lang.String physicalNamingStrategy);\n\t// Set a properties file\n\tvoid setProperties​(java.io.File propertiesFile);\n}", "des": "An Ant task for SchemaUpdate."}
{"index": 11116, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ScriptSourceInput {\n\t// Prepare source for use, and log that this script is about to be imported.\n\tvoid prepare();\n\t// Read the abstracted script, using the given extractor to split up the input into individual commands.\n\tjava.util.List<java.lang.String> read​(ImportSqlCommandExtractor commandExtractor);\n\t// Release this input.\n\tvoid release();\n}", "des": "Contract for hiding the differences between a passed Reader, File or URL in terms of how we read input scripts."}
{"index": 11117, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ScriptTargetOutput {\n\t// Accept the given command and write it to the abstracted script\n\tvoid accept​(java.lang.String command);\n\t// Prepare the script target to accept commands\n\tvoid prepare();\n\t// Release this output\n\tvoid release();\n}", "des": "Contract for hiding the differences between a passed Writer, File or URL in terms of how we write output scripts."}
{"index": 11118, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum ScrollMode {\n\t// Determine if this mode is \"less than\" the provided mode.\n\tboolean lessThan​(ScrollMode other);\n\t// Get the corresponding JDBC scroll type code constant value.\n\tint toResultSetType();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ScrollMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ScrollMode[] values();\n}", "des": "Specifies the type of JDBC scrollable result set to use underneath a ScrollableResults."}
{"index": 11119, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum SequenceMismatchStrategy {\n\t// Interpret the configured SequenceMismatchStrategy value.\n\tstatic SequenceMismatchStrategy interpret​(java.lang.Object sequenceMismatchStrategy);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SequenceMismatchStrategy valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SequenceMismatchStrategy[] values();\n}", "des": "Describes the strategy for handling the mismatch between a database sequence configuration and the one defined by the entity mapping."}
{"index": 11120, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SerializableBlobProxy {\n\t// Generates a SerializableBlob proxy wrapping the provided Blob object.\n\tstatic java.sql.Blob generateProxy​(java.sql.Blob blob);\n\t// Determines the appropriate class loader to which the generated proxy should be scoped.\n\tstatic java.lang.ClassLoader getProxyClassLoader();\n\t// Access to the wrapped Blob reference\n\tjava.sql.Blob getWrappedBlob();\n\tjava.lang.Object invoke​(java.lang.Object proxy, java.lang.reflect.Method method, java.lang.Object[] args);\n}", "des": "Manages aspects of proxying Blobs to add serializability."}
{"index": 11121, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SerializableClobProxy {\n\t// Generates a SerializableClobProxy proxy wrapping the provided Clob object.\n\tstatic java.sql.Clob generateProxy​(java.sql.Clob clob);\n\t// Determines the appropriate class loader to which the generated proxy should be scoped.\n\tstatic java.lang.ClassLoader getProxyClassLoader();\n\t// Access to the wrapped Clob reference\n\tjava.sql.Clob getWrappedClob();\n\tjava.lang.Object invoke​(java.lang.Object proxy, java.lang.reflect.Method method, java.lang.Object[] args);\n}", "des": "Manages aspects of proxying Clobs to add serializability."}
{"index": 11122, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SerializableNClobProxy {\n\t// Generates a SerializableNClobProxy proxy wrapping the provided NClob object.\n\tstatic java.sql.NClob generateProxy​(java.sql.NClob nclob);\n\t// Determines the appropriate class loader to which the generated proxy should be scoped.\n\tstatic java.lang.ClassLoader getProxyClassLoader();\n\t// Deprecated. ORM baselines on JDK 1.6, so optional support for NClob (JDK 1,6 addition) is no longer needed.\n\tstatic boolean isNClob​(java.sql.Clob clob);\n}", "des": "Manages aspects of proxying java.sql.NClobs to add serializability."}
{"index": 11123, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ServiceRegistry {\n\tvoid close();\n\t// Retrieve this registry's parent registry.\n\tServiceRegistry getParentServiceRegistry();\n\t// Retrieve a service by role.\n\t<R extends Service>R getService​(java.lang.Class<R> serviceRole);\n\t// Retrieve a service by role.\n\tdefault <R extends Service>R requireService​(java.lang.Class<R> serviceRole);\n}", "des": "A registry of services."}
{"index": 11124, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface SessionFactoryObserver {\n\t// Callback to indicate that the given factory has been closed.\n\tdefault void sessionFactoryClosed​(SessionFactory factory);\n\t// Callback to indicate that the given factory is about to close.\n\tdefault void sessionFactoryClosing​(SessionFactory factory);\n\t// Callback to indicate that the given factory has been created and is now ready for use.\n\tdefault void sessionFactoryCreated​(SessionFactory factory);\n}", "des": "Allows reaction to basic SessionFactory occurrences."}
{"index": 11125, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface SessionFactoryServiceInitiator<R extends Service> {\n\t// Deprecated. Use initiateService(SessionFactoryServiceInitiatorContext) instead.\n\tR initiateService​(SessionFactoryImplementor sessionFactory, SessionFactoryOptions sessionFactoryOptions, ServiceRegistryImplementor registry);\n\t// Initiates the managed service.\n\tdefault R initiateService​(SessionFactoryServiceInitiatorContext context);\n}", "des": "Contract for an initiator of services that target the specialized service registry SessionFactoryServiceRegistry"}
{"index": 11126, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface SessionStatistics {\n\t// Get the number of collection instances associated with the session\n\tint getCollectionCount();\n\t// Get the set of all CollectionKeys\n\tjava.util.Set getCollectionKeys();\n\t// Get the number of entity instances associated with the session\n\tint getEntityCount();\n\t// Get the set of all EntityKeys\n\tjava.util.Set getEntityKeys();\n}", "des": "Information about the first-level (session) cache for a particular session instance"}
{"index": 11127, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Setter {\n\t// Optional operation (may return null)\n\tjava.lang.reflect.Method getMethod();\n\t// Optional operation (may return null)\n\tjava.lang.String getMethodName();\n\t// Set the property value from the given instance\n\tvoid set​(java.lang.Object target, java.lang.Object value, SessionFactoryImplementor factory);\n}", "des": "The contract for setting a persistent property value into its container/owner"}
{"index": 11128, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SetterFieldImpl {\n\tjava.lang.Class getContainerClass();\n\tprotected java.lang.reflect.Field getField();\n\t// Optional operation (may return null)\n\tjava.lang.reflect.Method getMethod();\n\t// Optional operation (may return null)\n\tjava.lang.String getMethodName();\n\tjava.lang.String getPropertyName();\n\t// Set the property value from the given instance\n\tvoid set​(java.lang.Object target, java.lang.Object value, SessionFactoryImplementor factory);\n}", "des": "Field-based implementation of Setter"}
{"index": 11129, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ShortTypeDescriptor {\n\tjava.lang.Short fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.lang.Short value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.lang.Short value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.lang.Short wrap​(X value, WrapperOptions options);\n}", "des": "Descriptor for Short handling."}
{"index": 11130, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SimpleExpression {\n\tjava.lang.String getOp();\n\tjava.lang.String getPropertyName();\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\tjava.lang.Object getValue();\n\t// Make case insensitive.\n\tSimpleExpression ignoreCase();\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "superclass for \"simple\" comparisons (with SQL binary operators)"}
{"index": 11131, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SimpleStrategyRegistrationImpl<T> {\n\t// Any registered names for this strategy registration.\n\tjava.lang.Iterable<java.lang.String> getSelectorNames();\n\t// The strategy implementation class.\n\tjava.lang.Class<? extends T> getStrategyImplementation();\n\t// The strategy role.\n\tjava.lang.Class<T> getStrategyRole();\n}", "des": "A simple implementation of StrategyRegistration."}
{"index": 11132, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum SingularAttributeNature {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SingularAttributeNature valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SingularAttributeNature[] values();\n}", "des": "Describes possible natures of a singular attribute."}
{"index": 11133, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Sized {\n\t// Defines the column sizes to use according to this type if the user did not explicitly say (and if no dictatedSizes() were given).\n\tSize[] defaultSizes();\n\t// Return the column sizes dictated by this type.\n\tSize[] dictatedSizes();\n}", "des": "Extends dictated/default column size declarations from Type to the UserType hierarchy as well via an optional interface."}
{"index": 11134, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SizeExpression {\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "Used to define a restriction on a collection property based on its size."}
{"index": 11135, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Sortable {\n\t// The comparator class name which will be used to sort the attribute.\n\tjava.lang.String getComparatorName();\n\t// If the source of plural attribute is supposed to be sorted.\n\tboolean isSorted();\n}", "des": "Contact to define if the source of plural attribute is sortable or not."}
{"index": 11136, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SortSpecification {\n\t// Locate the specified collation specification, if one.\n\tCollationSpecification getCollation();\n\t// Locate the specified ordering specification, if one.\n\tOrderingSpecification getOrdering();\n\t// Locate the specified SortKey.\n\tSortKey getSortKey();\n}", "des": "Models each sorting expression."}
{"index": 11137, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface SourceDescriptor {\n\t// If getSourceType() indicates scripts are involved, returns a representation of the script file to read.\n\tScriptSourceInput getScriptSourceInput();\n\t// The indicated source type for this target type.\n\tSourceType getSourceType();\n}", "des": "Describes a source for schema create, drop and migrate actions."}
{"index": 11138, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum SourceType {\n\t// Get the corresponding Hibernate VersionType name.\n\tjava.lang.String typeName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SourceType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SourceType[] values();\n}", "des": "Where should Hibernate retrieve the value from? From the database, or from the current JVM?"}
{"index": 11139, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum SourceType {\n\tjava.lang.String getLegacyTypeText();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SourceType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SourceType[] values();\n}", "des": "From what type of source did we obtain the data"}
{"index": 11140, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum SourceType {\n\t// Used when processing JPA configuration to interpret the user config value\n\tstatic SourceType interpret​(java.lang.Object value, SourceType defaultValue);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SourceType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SourceType[] values();\n}", "des": "Enumeration of the various types of sources understood by various SchemaManagementTooling delegates."}
{"index": 11141, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SQL2008StandardLimitHandler {\n\t// Return processed SQL query.\n\tjava.lang.String processSql​(java.lang.String sql, RowSelection selection);\n\t// Does this handler support some form of limiting query results via a SQL clause?\n\tboolean supportsLimit();\n}", "des": "LIMIT clause handler compatible with ISO and ANSI SQL:2008 standard."}
{"index": 11142, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SQLCriterion {\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "A SQL fragment."}
{"index": 11143, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SQLCustomQuery {\n\t// A collection of descriptors describing the JDBC result set to be expected and how to map this result set.\n\tjava.util.List getCustomQueryReturns();\n\tjava.util.List<ParameterBinder> getParameterValueBinders();\n\t// Any query spaces to apply to the query execution.\n\tjava.util.Set getQuerySpaces();\n\t// The SQL query string to be performed.\n\tjava.lang.String getSQL();\n}", "des": "Implements Hibernate's built-in support for native SQL queries."}
{"index": 11144, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SQLExceptionConverterFactory {\n\t// Builds a minimal converter.\n\tstatic SQLExceptionConverter buildMinimalSQLExceptionConverter();\n\t// Build a SQLExceptionConverter instance.\n\tstatic SQLExceptionConverter buildSQLExceptionConverter​(Dialect dialect, java.util.Properties properties);\n}", "des": "A factory for building SQLExceptionConverter instances."}
{"index": 11145, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SqlExceptionHelper.StandardWarningHandler {\n\t// Should processing be done? Allows short-circuiting if not.\n\tboolean doProcess();\n\t// Delegate to log common details of a warning\n\tprotected void logWarning​(java.lang.String description, java.lang.String message);\n\t// Prepare for processing of a warning stack.\n\tvoid prepare​(java.sql.SQLWarning warning);\n}", "des": "Standard SQLWarning handler for logging warnings"}
{"index": 11146, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface SqlExceptionHelper.WarningHandler {\n\t// Should processing be done? Allows short-circuiting if not.\n\tboolean doProcess();\n\t// Handle an individual warning in the stack.\n\tvoid handleWarning​(java.sql.SQLWarning warning);\n\t// Prepare for processing of a warning stack.\n\tvoid prepare​(java.sql.SQLWarning warning);\n}", "des": "Contract for handling warnings"}
{"index": 11147, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SqlExceptionHelper.WarningHandlerLoggingSupport {\n\t// Handle an individual warning in the stack.\n\tvoid handleWarning​(java.sql.SQLWarning warning);\n\t// Delegate to log common details of a warning\n\tprotected abstract void logWarning​(java.lang.String description, java.lang.String message);\n}", "des": "Basic support for SqlExceptionHelper.WarningHandler implementations which handle warnings"}
{"index": 11148, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface SQLFunction {\n\t// The return type of the function.\n\tType getReturnType​(Type firstArgumentType, Mapping mapping);\n\t// Does this function have any arguments?\n\tboolean hasArguments();\n\t// If there are no arguments, are parentheses required?\n\tboolean hasParenthesesIfNoArguments();\n\t// Render the function call as SQL fragment.\n\tjava.lang.String render​(Type firstArgumentType, java.util.List arguments, SessionFactoryImplementor factory);\n}", "des": "Provides support routines for the HQL functions as used in the various SQL Dialects Provides an interface for supporting various HQL functions that are translated to SQL."}
{"index": 11149, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SQLFunctionRegistry {\n\t// Find a SQLFunction by name\n\tSQLFunction findSQLFunction​(java.lang.String functionName);\n\t// Does this registry contain the named function\n\tboolean hasFunction​(java.lang.String functionName);\n}", "des": "Defines a registry for SQLFunction instances"}
{"index": 11150, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SQLFunctionTemplate {\n\t// The return type of the function.\n\tType getReturnType​(Type argumentType, Mapping mapping);\n\t// Does this function have any arguments?\n\tboolean hasArguments();\n\t// If there are no arguments, are parentheses required?\n\tboolean hasParenthesesIfNoArguments();\n\t// Render the function call as SQL fragment.\n\tjava.lang.String render​(Type argumentType, java.util.List args, SessionFactoryImplementor factory);\n}", "des": "Represents HQL functions that can have different representations in different SQL dialects where that difference can be handled via a template/pattern."}
{"index": 11151, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface SQLQuery.FetchReturn {\n\t// Add a property, presumably with more than one column.\n\tSQLQuery.ReturnProperty addProperty​(java.lang.String propertyName);\n\t// Add a simple property-to-one-column mapping.\n\tSQLQuery.FetchReturn addProperty​(java.lang.String propertyName, java.lang.String columnAlias);\n\t// Set the lock mode for this return.\n\tSQLQuery.FetchReturn setLockMode​(LockMode lockMode);\n}", "des": "Allows access to further control how join fetch returns are mapped back from result sets."}
{"index": 11152, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum SQLStateType {\n\tstatic SQLStateType interpretReportedSQLStateType​(int sqlStateType);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SQLStateType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SQLStateType[] values();\n}", "des": "Enum interpretation of the valid values from DatabaseMetaData.getSQLStateType()"}
{"index": 11153, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class StandardBasicTypeTemplate<J> {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Get the names under which this type should be registered in the type registry.\n\tjava.lang.String[] getRegistrationKeys();\n}", "des": "A BasicType adapter targeting partial portability to 6.0's type system changes."}
{"index": 11154, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class StandardRandomStrategy {\n\t// Delegates to UUID.randomUUID()\n\tjava.util.UUID generateUUID​(SharedSessionContractImplementor session);\n\t// A variant 4 (random) strategy\n\tint getGeneratedVersion();\n}", "des": "Implements a \"random\" UUID generation strategy as defined by the UUID.randomUUID() method."}
{"index": 11155, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum Status {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Status valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Status[] values();\n}", "des": "Represents the status of an entity with respect to this session."}
{"index": 11156, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface StoredProcedureQueryParameterRegistration<T> {\n\t// Controls how unbound values for this IN/INOUT parameter registration will be handled prior to execution.\n\tvoid enablePassingNulls​(boolean enabled);\n\t// How will an unbound value be handled in terms of the JDBC parameter?\n\tboolean isPassNullsEnabled();\n}", "des": "ParameterRegistration extension specifically for stored procedure parameters exposing some functionality of Hibernate's native ParameterRegistration contract"}
{"index": 11157, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface StrategyRegistration<T> {\n\t// Any registered names for this strategy registration.\n\tjava.lang.Iterable<java.lang.String> getSelectorNames();\n\t// The strategy implementation class.\n\tjava.lang.Class<? extends T> getStrategyImplementation();\n\t// The strategy role.\n\tjava.lang.Class<T> getStrategyRole();\n}", "des": "Describes the registration of a named strategy implementation."}
{"index": 11158, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface StringRepresentableType<T> {\n\t// Consume the given string representation back into this types java form.\n\tT fromStringValue​(java.lang.String string);\n\t// Render the value to the string representation.\n\tjava.lang.String toString​(T value);\n}", "des": "Additional, optional contract for types capable of rendering and consuming their values to/from strings."}
{"index": 11159, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class StringTypeDescriptor {\n\tjava.lang.String fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.lang.String value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.lang.String value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.lang.String wrap​(X value, WrapperOptions options);\n}", "des": "Descriptor for String handling."}
{"index": 11160, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class StructuredCacheEntry {\n\t// Convert the previous structured form of the item back into its item form.\n\tjava.lang.Object destructure​(java.lang.Object structured, SessionFactoryImplementor factory);\n\t// Convert the cache item into its \"structured\" form.\n\tjava.lang.Object structure​(java.lang.Object item);\n}", "des": "Structured CacheEntry format for entities."}
{"index": 11161, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class StructuredCollectionCacheEntry {\n\t// Convert the previous structured form of the item back into its item form.\n\tjava.lang.Object destructure​(java.lang.Object structured, SessionFactoryImplementor factory);\n\t// Convert the cache item into its \"structured\" form.\n\tjava.lang.Object structure​(java.lang.Object item);\n}", "des": "Structured CacheEntry format for persistent collections (other than Maps, see StructuredMapCacheEntry)."}
{"index": 11162, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class StructuredMapCacheEntry {\n\t// Convert the previous structured form of the item back into its item form.\n\tjava.lang.Object destructure​(java.lang.Object structured, SessionFactoryImplementor factory);\n\t// Convert the cache item into its \"structured\" form.\n\tjava.lang.Object structure​(java.lang.Object item);\n}", "des": "Structured CacheEntry format for persistent Maps."}
{"index": 11163, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class SubqueryExpression {\n\t// Return typed values for all parameters in the rendered SQL fragment\n\tTypedValue[] getTypedValues​(Criteria criteria, CriteriaQuery criteriaQuery);\n\tprotected Type[] getTypes();\n\tprotected abstract java.lang.String toLeftSqlString​(Criteria criteria, CriteriaQuery outerQuery);\n\t// Render the SQL fragment\n\tjava.lang.String toSqlString​(Criteria criteria, CriteriaQuery criteriaQuery);\n}", "des": "A criterion that involves a subquery"}
{"index": 11164, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface SynchronizationRegistry {\n\t// Delegate Synchronization.afterCompletion(int) calls to registered Synchronizations\n\tvoid notifySynchronizationsAfterTransactionCompletion​(int status);\n\t// Delegate Synchronization.beforeCompletion() calls to the registered Synchronizations\n\tvoid notifySynchronizationsBeforeTransactionCompletion();\n\t// Register a user Synchronization callback for this transaction.\n\tvoid registerSynchronization​(Synchronization synchronization);\n}", "des": "Manages a registry of Synchronizations."}
{"index": 11165, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface SynchronizationRegistryImplementor {\n\t// Clears all synchronizations from this registry.\n\tvoid clearSynchronizations();\n\t// Delegates the Synchronization.afterCompletion(int) call to each registered Synchronization.\n\tvoid notifySynchronizationsAfterTransactionCompletion​(int status);\n\t// Delegates the Synchronization.beforeCompletion() call to each registered Synchronization\n\tvoid notifySynchronizationsBeforeTransactionCompletion();\n}", "des": "SPI contract for SynchronizationRegistry implementors."}
{"index": 11166, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface TableSpecificationSource {\n\tjava.lang.String getComment();\n\t// Obtain the supplied catalog name\n\tjava.lang.String getExplicitCatalogName();\n\t// Obtain the supplied schema name\n\tjava.lang.String getExplicitSchemaName();\n}", "des": "Contract describing source of \"table specification\" information."}
{"index": 11167, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum Target {\n\tboolean doExport();\n\tboolean doScript();\n\tstatic Target interpret​(boolean script, boolean export);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Target valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Target[] values();\n}", "des": "Describes the types of targets for create, drop and update actions"}
{"index": 11168, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface TargetDescriptor {\n\t// If getTargetTypes() includes scripts, return a representation of the script file to write to.\n\tScriptTargetOutput getScriptTargetOutput();\n\t// The target type described here.\n\tjava.util.EnumSet<TargetType> getTargetTypes();\n}", "des": "Describes the target(s) of schema create, drop and migrate actions."}
{"index": 11169, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum TargetType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic TargetType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic TargetType[] values();\n}", "des": "Describes the allowable targets (SPI wise) for schema management actions."}
{"index": 11170, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum TempTableDdlTransactionHandling {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic TempTableDdlTransactionHandling valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic TempTableDdlTransactionHandling[] values();\n}", "des": "Enum describing how creation and dropping of temporary tables should be done in terms of transaction handling."}
{"index": 11171, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class TimeType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Get the names under which this type should be registered in the type registry.\n\tjava.lang.String[] getRegistrationKeys();\n\t// Convert the value into a string representation, suitable for embedding in an SQL statement as a literal.\n\tjava.lang.String objectToSQLString​(java.util.Date value, Dialect dialect);\n}", "des": "A type that maps between TIME and Time"}
{"index": 11172, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class TimeZoneType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Convert the value into a string representation, suitable for embedding in an SQL statement as a literal.\n\tjava.lang.String objectToSQLString​(java.util.TimeZone value, Dialect dialect);\n\tprotected boolean registerUnderJavaType();\n}", "des": "A type mapping VARCHAR and TimeZone"}
{"index": 11173, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface TransactionCoordinator.TransactionDriver {\n\t// Begin the physical transaction\n\tvoid begin();\n\t// Commit the physical transaction\n\tvoid commit();\n\tTransactionStatus getStatus();\n\tdefault boolean isActive​(boolean isMarkedRollbackConsideredActive);\n\tvoid markRollbackOnly();\n\t// Rollback the physical transaction\n\tvoid rollback();\n}", "des": "Provides the means for \"local transactions\" (as transaction drivers) to control the underlying \"physical transaction\" currently associated with the TransactionCoordinator."}
{"index": 11174, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface TransactionObserver {\n\t// Callback for processing the beginning of a transaction.\n\tvoid afterBegin();\n\t// Callback for processing the last phase of transaction completion.\n\tvoid afterCompletion​(boolean successful, boolean delayed);\n\t// Callback for processing the initial phase of transaction completion.\n\tvoid beforeCompletion();\n}", "des": "Observer of internal transaction events."}
{"index": 11175, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum TransactionStatus {\n\tboolean canRollback();\n\tboolean isNotOneOf​(TransactionStatus... statuses);\n\tboolean isOneOf​(TransactionStatus... statuses);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic TransactionStatus valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic TransactionStatus[] values();\n}", "des": "Enumeration of statuses in which a transaction facade (Transaction) might be."}
{"index": 11176, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class TransientPropertyValueException {\n\tjava.lang.String getMessage();\n\t// Returns the property name.\n\tjava.lang.String getPropertyName();\n\t// Returns the entity name for entity that owns the association property.\n\tjava.lang.String getPropertyOwnerEntityName();\n\t// Returns the entity name for the transient entity.\n\tjava.lang.String getTransientEntityName();\n}", "des": "Thrown when a property cannot be persisted because it is an association with a transient unsaved entity instance."}
{"index": 11177, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface TranslationContext {\n\t// Retrieves the column mapper for this context.\n\tColumnMapper getColumnMapper();\n\t// Retrieves the dialect for this context.\n\tDialect getDialect();\n\t// Retrieves the session factory for this context.\n\tSessionFactoryImplementor getSessionFactory();\n\t// Retrieves the SQL function registry for this context.\n\tSQLFunctionRegistry getSqlFunctionRegistry();\n}", "des": "Contract for contextual information required to perform translation."}
{"index": 11178, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum TruthValue {\n\tboolean toBoolean​(boolean defaultValue);\n\tstatic boolean toBoolean​(TruthValue value, boolean defaultValue);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic TruthValue valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic TruthValue[] values();\n}", "des": "An enumeration of truth values."}
{"index": 11179, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface TupleSubsetResultTransformer {\n\t// Returns an array with the i-th element indicating whether the i-th element of the tuple is included in the transformed value.\n\tboolean[] includeInTransform​(java.lang.String[] aliases, int tupleLength);\n\t// When a tuple is transformed, is the result a single element of the tuple?\n\tboolean isTransformedValueATupleElement​(java.lang.String[] aliases, int tupleLength);\n}", "des": "A ResultTransformer that operates on \"well-defined\" and consistent subset of a tuple's elements."}
{"index": 11180, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class TypedParameterValue {\n\t// The specific Hibernate type to use to bind the value.\n\tType getType();\n\t// The value to bind\n\tjava.lang.Object getValue();\n}", "des": "Can be used to bind query parameter values."}
{"index": 11181, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum TypeNullability {\n\t// Based on the code retrieved from DatabaseMetaData.getTypeInfo() for the NULLABLE column, return the appropriate enum.\n\tstatic TypeNullability interpret​(short code);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic TypeNullability valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic TypeNullability[] values();\n}", "des": "Describes the instrinsic nullability of a data type as reported by the JDBC driver."}
{"index": 11182, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum TypeSearchability {\n\t// Based on the code retrieved from DatabaseMetaData.getTypeInfo() for the SEARCHABLE column, return the appropriate enum.\n\tstatic TypeSearchability interpret​(short code);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic TypeSearchability valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic TypeSearchability[] values();\n}", "des": "Describes the searchability of a data type as reported by the JDBC driver."}
{"index": 11183, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum UniqueConstraintSchemaUpdateStrategy {\n\tstatic UniqueConstraintSchemaUpdateStrategy byName​(java.lang.String name);\n\tstatic UniqueConstraintSchemaUpdateStrategy interpret​(java.lang.Object setting);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic UniqueConstraintSchemaUpdateStrategy valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic UniqueConstraintSchemaUpdateStrategy[] values();\n}", "des": "Unique columns and unique keys both use unique constraints in most dialects."}
{"index": 11184, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface UnsavedValueStrategy {\n\t// Get a default value meant to indicate transience.\n\tjava.lang.Object getDefaultValue​(java.lang.Object currentValue);\n\t// Make the transient/detached determination\n\tjava.lang.Boolean isUnsaved​(java.lang.Object test);\n}", "des": "The base contract for determining transient status versus detached status."}
{"index": 11185, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class UnstructuredCacheEntry {\n\t// Convert the previous structured form of the item back into its item form.\n\tjava.lang.Object destructure​(java.lang.Object structured, SessionFactoryImplementor factory);\n\t// Convert the cache item into its \"structured\" form.\n\tjava.lang.Object structure​(java.lang.Object item);\n}", "des": "Unstructured CacheEntry format (used to store entities and collections)."}
{"index": 11186, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class UrlTypeDescriptor {\n\tjava.net.URL fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.net.URL value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.net.URL value, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.net.URL wrap​(X value, WrapperOptions options);\n}", "des": "Descriptor for URL handling."}
{"index": 11187, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface UserVersionType {\n\t// Increment the version.\n\tjava.lang.Object next​(java.lang.Object current, SharedSessionContractImplementor session);\n\t// Generate an initial version.\n\tjava.lang.Object seed​(SharedSessionContractImplementor session);\n}", "des": "A user type that may be used for a version property"}
{"index": 11188, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class UUIDCharType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Convert the value into a string representation, suitable for embedding in an SQL statement as a literal.\n\tjava.lang.String objectToSQLString​(java.util.UUID value, Dialect dialect);\n}", "des": "A type mapping Types.CHAR (or Types.VARCHAR) and UUID"}
{"index": 11189, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class UUIDGenerator {\n\tstatic UUIDGenerator buildSessionFactoryUniqueIdentifierGenerator();\n\t// Configure this instance, given the value of parameters specified by the user as <param> elements.\n\tvoid configure​(Type type, java.util.Properties params, ServiceRegistry serviceRegistry);\n\t// Generate a new identifier.\n\tjava.io.Serializable generate​(SharedSessionContractImplementor session, java.lang.Object object);\n}", "des": "An IdentifierGenerator which generates UUID values using a pluggable generation strategy."}
{"index": 11190, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class UUIDHexGenerator {\n\t// Configure this instance, given the value of parameters specified by the user as <param> elements.\n\tvoid configure​(Type type, java.util.Properties params, ServiceRegistry serviceRegistry);\n\tprotected java.lang.String format​(int intValue);\n\tprotected java.lang.String format​(short shortValue);\n\t// Generate a new identifier.\n\tjava.io.Serializable generate​(SharedSessionContractImplementor session, java.lang.Object obj);\n}", "des": "uuid A UUIDGenerator that returns a string of length 32, This string will consist of only hex digits."}
{"index": 11191, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum ValidationMode {\n\tstatic java.util.Set<ValidationMode> getModes​(java.lang.Object modeProperty);\n\tstatic java.lang.String loggable​(java.util.Set<ValidationMode> modes);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ValidationMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ValidationMode[] values();\n}", "des": "Duplicates the javax.validation enum (because javax validation might not be on the runtime classpath)"}
{"index": 11192, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface ValueBinder<X> {\n\t// Bind a value to a CallableStatement.\n\tvoid bind​(java.sql.CallableStatement st, X value, java.lang.String name, WrapperOptions options);\n\t// Bind a value to a prepared statement.\n\tvoid bind​(java.sql.PreparedStatement st, X value, int index, WrapperOptions options);\n}", "des": "Contract for binding values to a PreparedStatement."}
{"index": 11193, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Enum ValueInclusion {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ValueInclusion valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ValueInclusion[] values();\n}", "des": "An enum of the different ways a value might be \"included\"."}
{"index": 11194, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class Version {\n\t// Access to the Hibernate ORM version.\n\tstatic java.lang.String getVersionString();\n\t// Logs the Hibernate version (using getVersionString()) to the logging system.\n\tstatic void logVersion();\n\t// Prints the Hibernate version (using getVersionString()) to SYSOUT.\n\tstatic void main​(java.lang.String[] args);\n}", "des": "Information about the Hibernate version."}
{"index": 11195, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface VersionType<T> {\n\t// Get a comparator for version values.\n\tjava.util.Comparator<T> getComparator();\n\t// Increment the version.\n\tT next​(T current, SharedSessionContractImplementor session);\n\t// Generate an initial version.\n\tT seed​(SharedSessionContractImplementor session);\n}", "des": "Additional contract for types which may be used to version (and optimistic lock) data."}
{"index": 11196, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class VersionValue {\n\t// Get a default value meant to indicate transience.\n\tjava.lang.Object getDefaultValue​(java.lang.Object currentValue);\n\t// Make the transient/detached determination\n\tjava.lang.Boolean isUnsaved​(java.lang.Object version);\n}", "des": "A strategy for determining if a version value is a version of a new transient instance or a previously persistent transient instance."}
{"index": 11197, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class WorkExecutor<T> {\n\t// Execute the discrete work encapsulated by a ReturningWork instance using the supplied connection, returning the result of ReturningWork.execute(java.sql.Connection)\n\t<T> T executeReturningWork​(ReturningWork<T> work, java.sql.Connection connection);\n\t// Execute the discrete work encapsulated by a Work instance using the supplied connection.\n\t<T> T executeWork​(Work work, java.sql.Connection connection);\n}", "des": "A visitor used for executing a discrete piece of work encapsulated in a Work or ReturningWork instance.."}
{"index": 11198, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface Wrapped {\n\t// Can this wrapped service be unwrapped as the indicated type?\n\tboolean isUnwrappableAs​(java.lang.Class unwrapType);\n\t// Unproxy the service proxy\n\t<T> T unwrap​(java.lang.Class<T> unwrapType);\n}", "des": "Optional contract for services that wrap stuff that to which it is useful to have access."}
{"index": 11199, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface WrappedNClob {\n\t// Deprecated. Use getWrappedNClob() instead\n\tjava.sql.NClob getWrappedClob();\n\t// Retrieve the wrapped Blob reference\n\tjava.sql.NClob getWrappedNClob();\n}", "des": "Contract for NClob wrappers."}
{"index": 11200, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class WrapperBinaryType {\n\t// Returns the abbreviated name of the type.\n\tjava.lang.String getName();\n\t// Get the names under which this type should be registered in the type registry.\n\tjava.lang.String[] getRegistrationKeys();\n}", "des": "A type mapping VARBINARY and Byte[]"}
{"index": 11201, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Interface WrapperOptions {\n\t// The JDBC TimeZone used when persisting Timestamp and DateTime properties into the database.\n\tjava.util.TimeZone getJdbcTimeZone();\n\t// Obtain access to the LobCreator\n\tLobCreator getLobCreator();\n\t// Allow remapping of descriptors for dealing with sql type.\n\tSqlTypeDescriptor remapSqlTypeDescriptor​(SqlTypeDescriptor sqlTypeDescriptor);\n\t// Should streams be used for binding LOB values.\n\tboolean useStreamForLobBinding();\n}", "des": "Gives binding (nullSafeSet) and extracting (nullSafeGet) code access to options."}
{"index": 11202, "repo": "hibernate-core-jakarta-5.6.15.Final", "code": "Class ZonedDateTimeJavaDescriptor {\n\tjava.time.ZonedDateTime fromString​(java.lang.String string);\n\tjava.lang.String toString​(java.time.ZonedDateTime value);\n\t// Unwrap an instance of our handled Java type into the requested type.\n\t<X> X unwrap​(java.time.ZonedDateTime zonedDateTime, java.lang.Class<X> type, WrapperOptions options);\n\t// Wrap a value as our handled Java type.\n\t<X> java.time.ZonedDateTime wrap​(X value, WrapperOptions options);\n}", "des": "Java type descriptor for the LocalDateTime type."}
{"index": 11203, "repo": "tika-core-2.8.0", "code": "Enum AbstractMultipleParser.MetadataPolicy {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AbstractMultipleParser.MetadataPolicy valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AbstractMultipleParser.MetadataPolicy[] values();\n}", "des": "The various strategies for handling metadata emitted by multiple parsers."}
{"index": 11204, "repo": "tika-core-2.8.0", "code": "Enum BasicContentHandlerFactory.HANDLER_TYPE {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic BasicContentHandlerFactory.HANDLER_TYPE valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic BasicContentHandlerFactory.HANDLER_TYPE[] values();\n}", "des": "Common handler types for content."}
{"index": 11205, "repo": "tika-core-2.8.0", "code": "Class BoundedInputStream {\n\tboolean hasHitBound();\n\tvoid mark​(int readLimit);\n\tint read();\n\t// Invokes the delegate's read(byte[]) method.\n\tint read​(byte[] b);\n\t// Invokes the delegate's read(byte[], int, int) method.\n\tint read​(byte[] b, int off, int len);\n\tvoid reset();\n\t// Invokes the delegate's skip(long) method.\n\tlong skip​(long n);\n}", "des": "Very slight modification of Commons' BoundedInputStream so that we can figure out if this hit the bound or not."}
{"index": 11206, "repo": "tika-core-2.8.0", "code": "Class CompositeDetector {\n\t// Detects the content type of the given input document.\n\tMediaType detect​(InputStream input, Metadata metadata);\n\t// Returns the component detectors.\n\tList<Detector> getDetectors();\n}", "des": "Content type detector that combines multiple different detection mechanisms."}
{"index": 11207, "repo": "tika-core-2.8.0", "code": "Interface ContainerExtractor {\n\t// Processes a container file, and extracts all the embedded resources from within it.\n\tvoid extract​(TikaInputStream stream, ContainerExtractor recurseExtractor, EmbeddedResourceHandler handler);\n\t// Is this Container Extractor able to process the supplied container?\n\tboolean isSupported​(TikaInputStream input);\n}", "des": "Tika container extractor interface."}
{"index": 11208, "repo": "tika-core-2.8.0", "code": "Class CryptoParser {\n\t// Returns the set of media types supported by this parser when used with the given parse context.\n\tSet<MediaType> getSupportedTypes​(ParseContext context);\n\t// Looks up the delegate parser from the parsing context and delegates the parse operation to it.\n\tvoid parse​(InputStream stream, ContentHandler handler, Metadata metadata, ParseContext context);\n}", "des": "Decrypts the incoming document stream and delegates further parsing to another parser instance."}
{"index": 11209, "repo": "tika-core-2.8.0", "code": "Class DateUtils {\n\t// Returns a ISO 8601 representation of the given date.\n\tstatic String formatDate​(Calendar date);\n\t// Returns a ISO 8601 representation of the given date.\n\tstatic String formatDate​(Date date);\n\t// Returns a ISO 8601 representation of the given date, which is in an unknown timezone.\n\tstatic String formatDateUnknownTimezone​(Date date);\n\t// Tries to parse the date string; returns null if no parse was possible.\n\tDate tryToParse​(String dateString);\n}", "des": "Date related utility methods and constants"}
{"index": 11210, "repo": "tika-core-2.8.0", "code": "Class DefaultEmbeddedStreamTranslator {\n\t// This should sniff the stream to determine if it needs to be translated.\n\tboolean shouldTranslate​(InputStream inputStream, Metadata metadata);\n\t// This will consume the InputStream and return a new stream of translated bytes.\n\tInputStream translate​(InputStream inputStream, Metadata metadata);\n}", "des": "Loads EmbeddedStreamTranslators via service loading."}
{"index": 11211, "repo": "tika-core-2.8.0", "code": "Class DefaultTranslator {\n\t// Returns the current translator\n\tTranslator getTranslator();\n\t// Returns all available translators\n\tList<Translator> getTranslators();\n\tboolean isAvailable();\n\t// Translate, using the first available service-loaded translator\n\tString translate​(String text, String targetLanguage);\n\t// Translate, using the first available service-loaded translator\n\tString translate​(String text, String sourceLanguage, String targetLanguage);\n}", "des": "A translator which picks the first available Translator implementations available through the service provider mechanism."}
{"index": 11212, "repo": "tika-core-2.8.0", "code": "Class EmbeddedContentHandler {\n\t// Ignored.\n\tvoid endDocument();\n\t// Ignored.\n\tvoid startDocument();\n}", "des": "Content handler decorator that prevents the EmbeddedContentHandler.startDocument() and EmbeddedContentHandler.endDocument() events from reaching the decorated handler."}
{"index": 11213, "repo": "tika-core-2.8.0", "code": "Interface Embedder {\n\t// Embeds related document metadata from the given metadata object into the given output stream.\n\tvoid embed​(Metadata metadata, InputStream originalStream, OutputStream outputStream, ParseContext context);\n\t// Returns the set of media types supported by this embedder when used with the given parse context.\n\tSet<MediaType> getSupportedEmbedTypes​(ParseContext context);\n}", "des": "Tika embedder interface"}
{"index": 11214, "repo": "tika-core-2.8.0", "code": "Class EmptyParser {\n\t// Returns the set of media types supported by this parser when used with the given parse context.\n\tSet<MediaType> getSupportedTypes​(ParseContext context);\n\t// Parses a document stream into a sequence of XHTML SAX events.\n\tvoid parse​(InputStream stream, ContentHandler handler, Metadata metadata, ParseContext context);\n}", "des": "Dummy parser that always produces an empty XHTML document without even attempting to parse the given document stream."}
{"index": 11215, "repo": "tika-core-2.8.0", "code": "Class EmptyTranslator {\n\tboolean isAvailable();\n\t// Translate text to the given language This method attempts to auto-detect the source language of the text.\n\tString translate​(String text, String targetLanguage);\n\t// Translate text between given languages.\n\tString translate​(String text, String sourceLanguage, String targetLanguage);\n}", "des": "Dummy translator that always declines to give any text."}
{"index": 11216, "repo": "tika-core-2.8.0", "code": "Class ErrorParser {\n\t// Returns the set of media types supported by this parser when used with the given parse context.\n\tSet<MediaType> getSupportedTypes​(ParseContext context);\n\t// Parses a document stream into a sequence of XHTML SAX events.\n\tvoid parse​(InputStream stream, ContentHandler handler, Metadata metadata, ParseContext context);\n}", "des": "Dummy parser that always throws a TikaException without even attempting to parse the given document stream."}
{"index": 11217, "repo": "tika-core-2.8.0", "code": "Enum HandlerConfig.PARSE_MODE {\n\tstatic HandlerConfig.PARSE_MODE parseMode​(String modeString);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic HandlerConfig.PARSE_MODE valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic HandlerConfig.PARSE_MODE[] values();\n}", "des": "HandlerConfig.PARSE_MODE.RMETA \"recursive metadata\" is the same as the -J option in tika-app and the /rmeta endpoint in tika-server."}
{"index": 11218, "repo": "tika-core-2.8.0", "code": "Class HexCoDec {\n\t// Decode an array of hex chars\n\tstatic byte[] decode​(char[] hexChars);\n\t// Decode an array of hex chars.\n\tstatic byte[] decode​(char[] hexChars, int startIndex, int length);\n\t// Decode a hex string\n\tstatic byte[] decode​(String hexValue);\n\t// Hex encode an array of bytes\n\tstatic char[] encode​(byte[] bites);\n\t// Hex encode an array of bytes\n\tstatic char[] encode​(byte[] bites, int startIndex, int length);\n}", "des": "A set of Hex encoding and decoding utility methods."}
{"index": 11219, "repo": "tika-core-2.8.0", "code": "Class LanguageHandler {\n\t// Returns the language detector used by this content handler.\n\tLanguageDetector getDetector();\n\t// Returns the detected language based on text handled thus far.\n\tLanguageResult getLanguage();\n}", "des": "SAX content handler that updates a language detector based on all the received character content."}
{"index": 11220, "repo": "tika-core-2.8.0", "code": "Class LanguageWriter {\n\t// Ignored.\n\tvoid close();\n\t// Ignored.\n\tvoid flush();\n\t// Returns the language detector used by this writer.\n\tLanguageDetector getDetector();\n\t// Returns the detected language based on text written thus far.\n\tLanguageResult getLanguage();\n\tvoid reset();\n\tvoid write​(char[] cbuf, int off, int len);\n}", "des": "Writer that builds a language profile based on all the written content."}
{"index": 11221, "repo": "tika-core-2.8.0", "code": "Class LoggingPipesReporter {\n\t// This is called if the process has crashed.\n\tvoid error​(String msg);\n\t// This is called if the process has crashed.\n\tvoid error​(Throwable t);\n\tvoid report​(FetchEmitTuple t, PipesResult result, long elapsed);\n}", "des": "Simple PipesReporter that logs everything at the debug level."}
{"index": 11222, "repo": "tika-core-2.8.0", "code": "Class NodeMatcher {\n\t// Returns true if the XPath expression matches the named attribute of the element associated with this evaluation state.\n\tboolean matchesAttribute​(String namespace, String name);\n\t// Returns true if the XPath expression matches the element associated with this evaluation state.\n\tboolean matchesElement();\n\t// Returns true if the XPath expression matches all text nodes whose parent is the element associated with this evaluation state.\n\tboolean matchesText();\n}", "des": "Final evaluation state of a .../node() XPath expression."}
{"index": 11223, "repo": "tika-core-2.8.0", "code": "Interface Parser {\n\t// Returns the set of media types supported by this parser when used with the given parse context.\n\tSet<MediaType> getSupportedTypes​(ParseContext context);\n\t// Parses a document stream into a sequence of XHTML SAX events.\n\tvoid parse​(InputStream stream, ContentHandler handler, Metadata metadata, ParseContext context);\n}", "des": "Tika parser interface."}
{"index": 11224, "repo": "tika-core-2.8.0", "code": "Class ParserContainerExtractor {\n\t// Processes a container file, and extracts all the embedded resources from within it.\n\tvoid extract​(TikaInputStream stream, ContainerExtractor recurseExtractor, EmbeddedResourceHandler handler);\n\t// Is this Container Extractor able to process the supplied container?\n\tboolean isSupported​(TikaInputStream input);\n}", "des": "An implementation of ContainerExtractor powered by the regular Parser API."}
{"index": 11225, "repo": "tika-core-2.8.0", "code": "Class ParsingReader {\n\t// Closes the read end of the pipe.\n\tvoid close();\n\t// Reads parsed text from the pipe connected to the parsing thread.\n\tint read​(char[] cbuf, int off, int len);\n}", "des": "Reader for the text content from a given binary stream."}
{"index": 11226, "repo": "tika-core-2.8.0", "code": "Class PhoneExtractingContentHandler {\n\t// The characters method is called whenever a Parser wants to pass raw...\n\tvoid characters​(char[] ch, int start, int length);\n\t// This method is called whenever the Parser is done parsing the file.\n\tvoid endDocument();\n}", "des": "Class used to extract phone numbers while parsing."}
{"index": 11227, "repo": "tika-core-2.8.0", "code": "Class PipesReporter {\n\t// No-op implementation.\n\tvoid close();\n\t// This is called if the process has crashed.\n\tabstract void error​(String msg);\n\t// This is called if the process has crashed.\n\tabstract void error​(Throwable t);\n\tabstract void report​(FetchEmitTuple t, PipesResult result, long elapsed);\n\t// No-op implementation.\n\tvoid report​(TotalCountResult totalCountResult);\n\t// Override this if your reporter supports total count.\n\tboolean supportsTotalCount();\n}", "des": "This is called asynchronously by the AsyncProcessor."}
{"index": 11228, "repo": "tika-core-2.8.0", "code": "Class RecursiveParserWrapper {\n\t// Delegates the method call to the decorated parser.\n\tSet<MediaType> getSupportedTypes​(ParseContext context);\n\t// Delegates the method call to the decorated parser.\n\tvoid parse​(InputStream stream, ContentHandler recursiveParserWrapperHandler, Metadata metadata, ParseContext context);\n}", "des": "This is a helper class that wraps a parser in a recursive handler."}
{"index": 11229, "repo": "tika-core-2.8.0", "code": "Class RecursiveParserWrapperHandler {\n\t// This is called after the full parse has completed.\n\tvoid endDocument​(ContentHandler contentHandler, Metadata metadata);\n\t// This is called after parsing an embedded document.\n\tvoid endEmbeddedDocument​(ContentHandler contentHandler, Metadata metadata);\n\tList<Metadata> getMetadataList();\n\t// This is called before parsing an embedded document\n\tvoid startEmbeddedDocument​(ContentHandler contentHandler, Metadata metadata);\n}", "des": "This is the default implementation of AbstractRecursiveParserWrapperHandler."}
{"index": 11230, "repo": "tika-core-2.8.0", "code": "Class RereadableInputStream {\n\t// Closes the input stream and removes the temporary file if one was created.\n\tvoid close();\n\t// Reads a byte from the stream, saving it in the store if it is being read from the original stream.\n\tint read();\n\t// \"Rewinds\" the stream to the beginning for rereading.\n\tvoid rewind();\n}", "des": "Wraps an input stream, reading it only once, but making it available for rereading an arbitrary number of times."}
{"index": 11231, "repo": "tika-core-2.8.0", "code": "Class ServiceLoaderUtils {\n\t// Loads a class and instantiates it.\n\tstatic <T> T newInstance​(Class klass, ServiceLoader loader);\n\t// Loads a class and instantiates it\n\tstatic <T> T newInstance​(String className);\n\t// Loads a class and instantiates it\n\tstatic <T> T newInstance​(String className, ClassLoader loader);\n\t// Sorts a list of loaded classes, so that non-Tika ones come before Tika ones, and otherwise in reverse alphabetical order\n\tstatic <T> void sortLoadedClasses​(List<T> loaded);\n}", "des": "Service Loading and Ordering related utils"}
{"index": 11232, "repo": "tika-core-2.8.0", "code": "Class StandardOrganizations {\n\t// Returns the map containing the collection of the most important technical standard organizations.\n\tstatic Map<String,​String> getOrganizations();\n\t// Returns the regular expression containing the most important technical standard organizations.\n\tstatic String getOrganzationsRegex();\n}", "des": "This class provides a collection of the most important technical standard organizations."}
{"index": 11233, "repo": "tika-core-2.8.0", "code": "Class StandardWriteFilter {\n\t// Based on the field and value, this filter modifies the field and/or the value to something that should be added to the Metadata object.\n\tvoid add​(String field, String value, Map<String,​String[]> data);\n\tvoid filterExisting​(Map<String,​String[]> data);\n\t// Based on the field and the value, this filter modifies the field and/or the value to something that should be set in the Metadata object.\n\tvoid set​(String field, String value, Map<String,​String[]> data);\n}", "des": "This is to be used to limit the amount of metadata that a parser can add based on the StandardWriteFilter.maxTotalEstimatedSize, StandardWriteFilter.maxFieldSize, StandardWriteFilter.maxValuesPerField, and StandardWriteFilter.maxKeySize."}
{"index": 11234, "repo": "tika-core-2.8.0", "code": "Class TaggedContentHandler {\n\t// Tags any SAXExceptions thrown, wrapping and re-throwing.\n\tprotected void handleException​(SAXException e);\n\t// Tests if the given exception was caused by this handler.\n\tboolean isCauseOf​(SAXException exception);\n\t// Re-throws the original exception thrown by this handler.\n\tvoid throwIfCauseOf​(Exception exception);\n}", "des": "A content handler decorator that tags potential exceptions so that the handler that caused the exception can easily be identified."}
{"index": 11235, "repo": "tika-core-2.8.0", "code": "Class TaggedSAXException {\n\t// Returns the wrapped exception.\n\tSAXException getCause();\n\t// Returns the object reference used as the tag this exception.\n\tObject getTag();\n}", "des": "A SAXException wrapper that tags the wrapped exception with a given object reference."}
{"index": 11236, "repo": "tika-core-2.8.0", "code": "Enum TikaCoreProperties.EmbeddedResourceType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic TikaCoreProperties.EmbeddedResourceType valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic TikaCoreProperties.EmbeddedResourceType[] values();\n}", "des": "A file might contain different types of embedded documents."}
{"index": 11237, "repo": "tika-core-2.8.0", "code": "Interface Translator {\n\tboolean isAvailable();\n\t// Translate text to the given language This method attempts to auto-detect the source language of the text.\n\tString translate​(String text, String targetLanguage);\n\t// Translate text between given languages.\n\tString translate​(String text, String sourceLanguage, String targetLanguage);\n}", "des": "Interface for Translator services."}
{"index": 11238, "repo": "tika-core-2.8.0", "code": "Class XMPContentHandler {\n\tvoid endDescription();\n\t// Ends the XMP document by writing the following footer and clearing the namespace mappings:\n\tvoid endDocument();\n\tvoid metadata​(Metadata metadata);\n\tvoid property​(String name, String value);\n\tvoid startDescription​(String about, String prefix, String uri);\n\t// Starts an XMP document by setting up the namespace mappings and writing out the following header:\n\tvoid startDocument();\n}", "des": "Content handler decorator that simplifies the task of producing XMP output."}
{"index": 11239, "repo": "tomcat-websocketapi-10.1", "code": "Interface ServerApplicationConfig {\n\t// Enables applications to filter the discovered classes annotated with ServerEndpoint.\n\tjava.util.Set<java.lang.Class<?>> getAnnotatedEndpointClasses​(java.util.Set<java.lang.Class<?>> scanned);\n\t// Enables applications to filter the discovered implementations of ServerEndpointConfig.\n\tjava.util.Set<ServerEndpointConfig> getEndpointConfigs​(java.util.Set<java.lang.Class<? extends Endpoint>> scanned);\n}", "des": "Applications may provide an implementation of this interface to filter the discovered WebSocket endpoints that are deployed."}
{"index": 11240, "repo": "gson-2.10.1", "code": "Enum FieldNamingPolicy {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic FieldNamingPolicy valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic FieldNamingPolicy[] values();\n}", "des": "An enumeration that defines a few standard naming conventions for JSON field names."}
{"index": 11241, "repo": "gson-2.10.1", "code": "Class JsonNull {\n\t// Returns the same instance since it is an immutable value.\n\tJsonNull deepCopy();\n\t// All instances of JsonNull are considered equal.\n\tboolean equals​(Object other);\n}", "des": "A class representing a JSON null value."}
{"index": 11242, "repo": "gson-2.10.1", "code": "Interface JsonSerializationContext {\n\t// Invokes default serialization on the specified object.\n\tJsonElement serialize​(Object src);\n\t// Invokes default serialization on the specified object passing the specific type information.\n\tJsonElement serialize​(Object src, Type typeOfSrc);\n}", "des": "Context for serialization that is passed to a custom serializer during invocation of its JsonSerializer.serialize(Object, Type, JsonSerializationContext) method."}
{"index": 11243, "repo": "gson-2.10.1", "code": "Class JsonStreamParser {\n\t// Returns true if a JsonElement is available on the input for consumption\n\tboolean hasNext();\n\t// Returns the next available JsonElement on the reader.\n\tJsonElement next();\n\t// This optional Iterator method is not relevant for stream parsing and hence is not implemented.\n\tvoid remove();\n}", "des": "A streaming parser that allows reading of multiple JsonElements from the specified reader asynchronously."}
{"index": 11244, "repo": "gson-2.10.1", "code": "Enum JsonToken {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic JsonToken valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic JsonToken[] values();\n}", "des": "A structure, name or value type in a JSON-encoded string."}
{"index": 11245, "repo": "gson-2.10.1", "code": "Enum LongSerializationPolicy {\n\t// Serialize this value using this serialization policy.\n\tabstract JsonElement serialize​(Long value);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic LongSerializationPolicy valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic LongSerializationPolicy[] values();\n}", "des": "Defines the expected format for a long or Long type when it is serialized."}
{"index": 11246, "repo": "gson-2.10.1", "code": "Enum ReflectionAccessFilter.FilterResult {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ReflectionAccessFilter.FilterResult valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ReflectionAccessFilter.FilterResult[] values();\n}", "des": "Result of a filter check."}
{"index": 11247, "repo": "gson-2.10.1", "code": "Enum ToNumberPolicy {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ToNumberPolicy valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ToNumberPolicy[] values();\n}", "des": "An enumeration that defines two standard number reading strategies and a couple of strategies to overcome some historical Gson limitations while deserializing numbers as Object and Number."}
{"index": 11248, "repo": "tomcat-api-10.1", "code": "Class AbstractChunk {\n\tprotected abstract int getBufferElement​(int index);\n\tint getEnd();\n\tint getLength();\n\tint getLimit();\n\tprotected int getLimitInternal();\n\tint getOffset();\n\tint getStart();\n\tint hash();\n\tint indexOf​(String src, int srcOff, int srcLen, int myOff);\n\tboolean isNull();\n\t// Resets the chunk to an uninitialized state.\n\tvoid recycle();\n\tvoid setEnd​(int i);\n\t// Maximum amount of data in this buffer.\n\tvoid setLimit​(int limit);\n\tvoid setOffset​(int off);\n}", "des": "Base class for the *Chunk implementation to reduce duplication."}
{"index": 11249, "repo": "tomcat-api-10.1", "code": "Enum AbstractEndpoint.Handler.SocketState {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AbstractEndpoint.Handler.SocketState valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AbstractEndpoint.Handler.SocketState[] values();\n}", "des": "Different types of socket states to react upon."}
{"index": 11250, "repo": "tomcat-api-10.1", "code": "Class AbstractObjectCreationFactory {\n\t// Factory method called by FactoryCreateRule to supply an object based on the element's attributes.\n\tabstract Object createObject​(Attributes attributes);\n\t// Returns the Digester that was set by the FactoryCreateRule upon initialization.\n\tDigester getDigester();\n\t// Set the Digester to allow the implementation to do logging, classloading based on the digester's classloader, etc.\n\tvoid setDigester​(Digester digester);\n}", "des": "Abstract base class for ObjectCreationFactory implementations."}
{"index": 11251, "repo": "tomcat-api-10.1", "code": "Class AbstractSingleArchiveResourceSet {\n\t// Obtain the map of entries in the archive.\n\tprotected Map<String,​JarEntry> getArchiveEntries​(boolean single);\n\t// Obtain a single entry from the archive.\n\tprotected JarEntry getArchiveEntry​(String pathInArchive);\n\t// Sub-classes implement this method to perform any instance initialisation required.\n\tprotected void initInternal();\n\tprotected boolean isMultiRelease();\n}", "des": "Base class for a WebResourceSet based on a single, rather than nested, archive."}
{"index": 11252, "repo": "tomcat-api-10.1", "code": "Interface AccessLog {\n\tboolean getRequestAttributesEnabled();\n\t// Add the request/response to the access log using the specified processing time.\n\tvoid log​(Request request, Response response, long time);\n\t// Should this valve use request attributes for IP address, hostname, protocol and port used for the request?\n\tvoid setRequestAttributesEnabled​(boolean requestAttributesEnabled);\n}", "des": "Intended for use by a Valve to indicate that the Valve provides access logging."}
{"index": 11253, "repo": "tomcat-api-10.1", "code": "Class AccessLogAdapter {\n\tvoid add​(AccessLog log);\n\tboolean getRequestAttributesEnabled();\n\t// Add the request/response to the access log using the specified processing time.\n\tvoid log​(Request request, Response response, long time);\n\t// Should this valve use request attributes for IP address, hostname, protocol and port used for the request?\n\tvoid setRequestAttributesEnabled​(boolean requestAttributesEnabled);\n}", "des": "A helper class that wraps several AccessLog instances."}
{"index": 11254, "repo": "tomcat-api-10.1", "code": "Enum ActionCode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ActionCode valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ActionCode[] values();\n}", "des": "ActionCodes represent callbacks from the servlet container to the coyote connector."}
{"index": 11255, "repo": "tomcat-api-10.1", "code": "Class AjpNio2Protocol {\n\t// Concrete implementations need to provide access to their logger to be used by the abstract classes.\n\tprotected Log getLog();\n\t// Obtain the prefix to be used when construction a name for this protocol handler.\n\tprotected String getNamePrefix();\n}", "des": "This the NIO2 based protocol handler implementation for AJP."}
{"index": 11256, "repo": "tomcat-api-10.1", "code": "Class AjpNioProtocol {\n\t// Concrete implementations need to provide access to their logger to be used by the abstract classes.\n\tprotected Log getLog();\n\t// Obtain the prefix to be used when construction a name for this protocol handler.\n\tprotected String getNamePrefix();\n}", "des": "This the NIO based protocol handler implementation for AJP."}
{"index": 11257, "repo": "tomcat-api-10.1", "code": "Class ArrayStack<E> {\n\t// Return true if this stack is currently empty.\n\tboolean empty();\n\t// Returns the top item off of this stack without removing it.\n\tE peek();\n\t// Returns the n'th item down (zero-relative) from the top of this stack without removing it.\n\tE peek​(int n);\n\t// Pops the top item off of this stack and return it.\n\tE pop();\n\t// Pushes a new item onto the top of this stack.\n\tE push​(E item);\n}", "des": "Imported copy of the ArrayStack class from Commons Collections, which was the only direct dependency from Digester."}
{"index": 11258, "repo": "tomcat-api-10.1", "code": "Class Ascii {\n\t// Parses an unsigned long from the specified subarray of bytes.\n\tstatic long parseLong​(byte[] b, int off, int len);\n\t// Returns the lower case equivalent of the specified ASCII character.\n\tstatic int toLower​(int c);\n}", "des": "This class implements some basic ASCII character handling functions."}
{"index": 11259, "repo": "tomcat-api-10.1", "code": "Interface AsyncContextCallback {\n\t// Used to notify the Context that async processing has ended.\n\tvoid decrementInProgressAsyncCount();\n\tvoid fireOnComplete();\n\t// Used to notify the Context that async processing has started.\n\tvoid incrementInProgressAsyncCount();\n\t// Reports if the web application associated with this async request is available.\n\tboolean isAvailable();\n}", "des": "Provides a mechanism for the Coyote connectors to communicate with the AsyncContext."}
{"index": 11260, "repo": "tomcat-api-10.1", "code": "Class AsyncFileHandler {\n\t// Close the currently open log file (if any).\n\tvoid close();\n\t// Open the new log file for the date specified by date.\n\tvoid open();\n\t// Format and publish a LogRecord.\n\tvoid publish​(LogRecord record);\n\tprotected void publishInternal​(LogRecord record);\n}", "des": "A FileHandler implementation that uses a queue of log entries."}
{"index": 11261, "repo": "tomcat-api-10.1", "code": "Class AuthenticatedUserRealm {\n\t// Get the password for the specified user.\n\tprotected String getPassword​(String username);\n\t// Get the principal associated with the specified user.\n\tprotected Principal getPrincipal​(String username);\n}", "des": "This Realm is intended for use with Authenticator implementations (SSLAuthenticator, SpnegoAuthenticator) that authenticate the user as well as obtain the user credentials."}
{"index": 11262, "repo": "tomcat-api-10.1", "code": "Class B2CConverter {\n\t// Convert the given bytes to characters.\n\tvoid convert​(ByteBuffer bc, CharBuffer cc, ByteChunk.ByteInputChannel ic, boolean endOfInput);\n\t// Convert the given bytes to characters.\n\tvoid convert​(ByteChunk bc, CharChunk cc, boolean endOfInput);\n\tCharset getCharset();\n\t// Obtain the Charset for the given encoding\n\tstatic Charset getCharset​(String enc);\n\t// Reset the decoder state.\n\tvoid recycle();\n}", "des": "NIO based character decoder."}
{"index": 11263, "repo": "tomcat-api-10.1", "code": "Class BasicAuthenticator {\n\t// Generate the authorization header value that will be sent to the server.\n\tString getAuthorization​(String requestUri, String authenticateHeader, String userName, String userPassword, String userRealm);\n\t// Get the authentication method.\n\tString getSchemeName();\n}", "des": "Authenticator supporting the BASIC authentication method."}
{"index": 11264, "repo": "tomcat-api-10.1", "code": "Class BasicAuthenticator.BasicCredentials {\n\t// Trivial accessor.\n\tString getPassword();\n\t// Trivial accessor.\n\tString getUsername();\n}", "des": "Parser for an HTTP Authorization header for BASIC authentication as per RFC 2617 section 2, and the Base64 encoded credentials as per RFC 2045 section 6.8."}
{"index": 11265, "repo": "tomcat-api-10.1", "code": "Class BasicDataSourceFactory {\n\t// Creates and configures a BasicDataSource instance based on the given properties.\n\tstatic BasicDataSource createDataSource​(Properties properties);\n\t// Creates and return a new BasicDataSource instance.\n\tObject getObjectInstance​(Object obj, Name name, Context nameCtx, Hashtable<?,​?> environment);\n}", "des": "JNDI object factory that creates an instance of BasicDataSource that has been configured based on the RefAddr values of the specified Reference, which must match the names and data types of the BasicDataSource bean properties with the following exceptions: connectionInitSqls must be passed to this factory as a single String using semicolon to delimit the statements whereas BasicDataSource requires a collection of Strings."}
{"index": 11266, "repo": "tomcat-api-10.1", "code": "Class ByteArrayOutputStream {\n\t// Closing a ByteArrayOutputStream has no effect.\n\tvoid close();\n\t// Gets the current contents of this byte stream as a byte array.\n\tbyte[] toByteArray();\n\t// Write the bytes to byte array.\n\tvoid write​(byte[] b, int off, int len);\n\t// Write a byte to byte array.\n\tvoid write​(int b);\n\t// Writes the entire contents of this byte stream to the specified output stream.\n\tvoid writeTo​(OutputStream out);\n}", "des": "This class implements an output stream in which the data is written into a byte array."}
{"index": 11267, "repo": "tomcat-api-10.1", "code": "Class ByteArrayServletOutputStream {\n\t// TODO SERVLET 3.1\n\tboolean isReady();\n\t// TODO SERVLET 3.1\n\tvoid setWriteListener​(WriteListener listener);\n\tbyte[] toByteArray();\n\t// Write to our buffer.\n\tvoid write​(int b);\n}", "des": "Class that extends ServletOutputStream, used as a wrapper from within SsiInclude"}
{"index": 11268, "repo": "tomcat-api-10.1", "code": "Interface ByteChunk.ByteOutputChannel {\n\t// Send the bytes ( usually the internal conversion buffer ).\n\tvoid realWriteBytes​(byte[] buf, int off, int len);\n\t// Send the bytes ( usually the internal conversion buffer ).\n\tvoid realWriteBytes​(ByteBuffer from);\n}", "des": "When we need more space we'll either grow the buffer ( up to the limit ) or send it to a channel."}
{"index": 11269, "repo": "tomcat-api-10.1", "code": "Class ByteMessage {\n\t// Returns the message contents of this byte message\n\tbyte[] getMessage();\n\tvoid readExternal​(ObjectInput in);\n\t// Sets the message contents of this byte message\n\tvoid setMessage​(byte[] message);\n\tvoid writeExternal​(ObjectOutput out);\n}", "des": "A byte message is not serialized and deserialized by the channel instead it is sent as a byte array By default Tribes uses java serialization when it receives an object to be sent over the wire."}
{"index": 11270, "repo": "tomcat-api-10.1", "code": "Class C2BConverter {\n\t// Convert the given characters to bytes.\n\tvoid convert​(CharBuffer cc, ByteBuffer bc);\n\t// Convert the given characters to bytes.\n\tvoid convert​(CharChunk cc, ByteChunk bc);\n\tCharset getCharset();\n\tboolean isUndeflow();\n\t// Reset the encoder state.\n\tvoid recycle();\n}", "des": "NIO based character encoder."}
{"index": 11271, "repo": "tomcat-api-10.1", "code": "Class CallbackHandlerImpl {\n\t// Get the Container with which this instance is associated.\n\tContainer getContainer();\n\tvoid handle​(Callback[] callbacks);\n\t// Set the Container with which this instance is associated.\n\tvoid setContainer​(Container container);\n}", "des": "Default implementation of a JASPIC CallbackHandler."}
{"index": 11272, "repo": "tomcat-api-10.1", "code": "Class CallParamRule {\n\t// Process the start of this element.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Process the body text of this element.\n\tvoid body​(String namespace, String name, String bodyText);\n\t// Process any body texts now.\n\tvoid end​(String namespace, String name);\n}", "des": "Rule implementation that saves a parameter for use by a surrounding CallMethodRule."}
{"index": 11273, "repo": "tomcat-api-10.1", "code": "Interface CallStack {\n\t// Clears the current stack trace snapshot.\n\tvoid clear();\n\t// Takes a snapshot of the current call stack.\n\tvoid fillInStackTrace();\n\t// Prints the current stack trace if available to a PrintWriter.\n\tboolean printStackTrace​(PrintWriter writer);\n}", "des": "Strategy for obtaining and printing the current call stack."}
{"index": 11274, "repo": "tomcat-api-10.1", "code": "Class CallStackUtils {\n\t// Deprecated. use newCallStack(String, boolean, boolean)\n\tstatic CallStack newCallStack​(String messageFormat, boolean useTimestamp);\n\t// Constructs a new CallStack using the fasted allowed strategy.\n\tstatic CallStack newCallStack​(String messageFormat, boolean useTimestamp, boolean requireFullStackTrace);\n}", "des": "Utility methods for CallStack."}
{"index": 11275, "repo": "tomcat-api-10.1", "code": "Class CertificateCreateRule {\n\t// This method is called when the beginning of a matching XML element is encountered.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Process the end of this element.\n\tvoid end​(String namespace, String name);\n}", "des": "Rule implementation that creates an SSLHostConfigCertificate."}
{"index": 11276, "repo": "tomcat-api-10.1", "code": "Class ChannelException {\n\t// Adds a faulty member\n\tboolean addFaultyMember​(ChannelException.FaultyMember mbr);\n\t// Adds a list of faulty members\n\tint addFaultyMember​(ChannelException.FaultyMember[] mbrs);\n\t// Adds a faulty member, and the reason the member failed.\n\tboolean addFaultyMember​(Member mbr, Exception x);\n\t// Returns an array of members that failed and the reason they failed.\n\tChannelException.FaultyMember[] getFaultyMembers();\n\t// Returns the message for this exception\n\tString getMessage();\n}", "des": "A channel exception is thrown when an internal error happens somewhere in the channel."}
{"index": 11277, "repo": "tomcat-api-10.1", "code": "Interface ChannelListener {\n\t// Invoked by the channel to determine if the listener will process this message or not.\n\tboolean accept​(Serializable msg, Member sender);\n\tboolean equals​(Object listener);\n\t// Receive a message from the channel\n\tvoid messageReceived​(Serializable msg, Member sender);\n}", "des": "An interface to listens to incoming messages from a channel."}
{"index": 11278, "repo": "tomcat-api-10.1", "code": "Class CharsetMapper {\n\t// The deployment descriptor can have a locale-encoding-mapping-list element which describes the webapp's desired mapping from locale to charset.\n\tvoid addCharsetMappingFromDeploymentDescriptor​(String locale, String charset);\n\t// Calculate the name of a character set to be assumed, given the specified Locale and the absence of a character set specified as part of the content type header.\n\tString getCharset​(Locale locale);\n}", "des": "Utility class that attempts to map from a Locale to the corresponding character set to be used for interpreting input text (or generating output text) when the Content-Type header does not include one."}
{"index": 11279, "repo": "tomcat-api-10.1", "code": "Class CheckEol {\n\t// Sets the files to be checked\n\tvoid addFileset​(org.apache.tools.ant.types.FileSet fs);\n\t// Perform the check\n\tvoid execute();\n\t// Sets the line ending mode.\n\tvoid setMode​(String mode);\n}", "des": "Ant task that checks that all the files in the given fileset have end-of-line delimiters that are appropriate."}
{"index": 11280, "repo": "tomcat-api-10.1", "code": "Class ClassLoaderFactory {\n\t// Create and return a new class loader, based on the configuration defaults and the specified directory paths:\n\tstatic ClassLoader createClassLoader​(File[] unpacked, File[] packed, ClassLoader parent);\n\t// Create and return a new class loader, based on the configuration defaults and the specified directory paths:\n\tstatic ClassLoader createClassLoader​(List<ClassLoaderFactory.Repository> repositories, ClassLoader parent);\n}", "des": "Utility class for building class loaders for Catalina."}
{"index": 11281, "repo": "tomcat-api-10.1", "code": "Interface Closeable {\n\t// Closes the object.\n\tvoid close();\n\t// Returns, whether the object is already closed.\n\tboolean isClosed();\n}", "des": "Interface of an object, which may be closed."}
{"index": 11282, "repo": "tomcat-api-10.1", "code": "Class ClusterSessionListener {\n\t// Accept only SessionMessage\n\tboolean accept​(ClusterMessage msg);\n\t// Callback from the cluster, when a message is received, The cluster will broadcast it invoking the messageReceived on the receiver.\n\tvoid messageReceived​(ClusterMessage myobj);\n}", "des": "Receive replicated SessionMessage form other cluster node."}
{"index": 11283, "repo": "tomcat-api-10.1", "code": "Interface ClusterValve {\n\t// Returns the cluster the cluster deployer is associated with\n\tCatalinaCluster getCluster();\n\t// Associates the cluster deployer with a cluster\n\tvoid setCluster​(CatalinaCluster cluster);\n}", "des": "Cluster valves are a simple extension to the Tomcat valve architecture with a small addition of being able to reference the cluster component in the container it sits in."}
{"index": 11284, "repo": "tomcat-api-10.1", "code": "Class ConfigFileLoader {\n\t// Get the configured configuration source.\n\tstatic ConfigurationSource getSource();\n\t// Set the configuration source used by Tomcat to locate various configuration resources.\n\tstatic void setSource​(ConfigurationSource source);\n}", "des": "This class is used to obtain InputStreams for configuration files from a given location String."}
{"index": 11285, "repo": "tomcat-api-10.1", "code": "Class ConnectorCreateRule {\n\t// Process the beginning of this element.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Process the end of this element.\n\tvoid end​(String namespace, String name);\n}", "des": "Rule implementation that creates a connector."}
{"index": 11286, "repo": "tomcat-api-10.1", "code": "Class ConnectorMBean {\n\t// Obtain and return the value of a specific attribute of this MBean.\n\tObject getAttribute​(String name);\n\t// Set the value of a specific attribute of this MBean.\n\tvoid setAttribute​(Attribute attribute);\n}", "des": "A ModelMBean implementation for the org.apache.coyote.tomcat5.CoyoteConnector component."}
{"index": 11287, "repo": "tomcat-api-10.1", "code": "Class Constants {\n\t// Converts an AJP coded HTTP request header to the header name.\n\tstatic String getHeaderForCode​(int code);\n\t// Converts an AJP coded HTTP method to the method name.\n\tstatic String getMethodForCode​(int code);\n\tstatic int getResponseAjpIndex​(String header);\n\t// Converts an AJP coded response header name to the HTTP response header name.\n\tstatic String getResponseHeaderForCode​(int code);\n}", "des": "Constants."}
{"index": 11288, "repo": "tomcat-api-10.1", "code": "Interface Contained {\n\t// Get the Container with which this instance is associated.\n\tContainer getContainer();\n\t// Set the Container with which this instance is associated.\n\tvoid setContainer​(Container container);\n}", "des": "Decoupling interface which specifies that an implementing class is associated with at most one Container instance."}
{"index": 11289, "repo": "tomcat-api-10.1", "code": "Class ContainerEvent {\n\t// Return the Container on which this event occurred.\n\tContainer getContainer();\n\t// Return the event data of this event.\n\tObject getData();\n\t// Return the event type of this event.\n\tString getType();\n}", "des": "General event for notifying listeners of significant changes on a Container."}
{"index": 11290, "repo": "tomcat-api-10.1", "code": "Interface ContainerServlet {\n\t// Obtain the Wrapper with which this Servlet is associated.\n\tWrapper getWrapper();\n\t// Set the Wrapper with which this Servlet is associated.\n\tvoid setWrapper​(Wrapper wrapper);\n}", "des": "A ContainerServlet is a servlet that has access to Catalina internal functionality, and is loaded from the Catalina class loader instead of the web application class loader."}
{"index": 11291, "repo": "tomcat-api-10.1", "code": "Class ContextNamingInfoListener {\n\t// Gets whether paths and name for the root context will be empty.\n\tboolean isEmptyOnRoot();\n\t// Acknowledge the occurrence of the specified event.\n\tvoid lifecycleEvent​(LifecycleEvent event);\n\t// Sets whether for the root context context/path and context/encodedPath will contain \"/\" and context/name will contain \"ROOT\" with a version, if any.\n\tvoid setEmptyOnRoot​(boolean emptyOnRoot);\n}", "des": "Implementation of LifecycleListener that will create context naming information environment entries."}
{"index": 11292, "repo": "tomcat-api-10.1", "code": "Class ContextResourceLinkMBean {\n\t// Obtain and return the value of a specific attribute of this MBean.\n\tObject getAttribute​(String name);\n\t// Set the value of a specific attribute of this MBean.\n\tvoid setAttribute​(Attribute attribute);\n}", "des": "A ModelMBean implementation for the org.apache.tomcat.util.descriptor.web.ContextResourceLink component."}
{"index": 11293, "repo": "tomcat-api-10.1", "code": "Class ContextResourceMBean {\n\t// Obtain and return the value of a specific attribute of this MBean.\n\tObject getAttribute​(String name);\n\t// Set the value of a specific attribute of this MBean.\n\tvoid setAttribute​(Attribute attribute);\n}", "des": "A ModelMBean implementation for the org.apache.tomcat.util.descriptor.web.ContextResource component."}
{"index": 11294, "repo": "tomcat-api-10.1", "code": "Class ContextTransaction {\n\tObject getProperty​(String name);\n\t// List properties.\n\tIterator<String> listProperties();\n\t// Remove a configured property.\n\tvoid removeProperty​(String name);\n\t// Set a configured property.\n\tvoid setProperty​(String name, Object value);\n}", "des": "Representation of an application resource reference, as represented in an <res-env-refy> element in the deployment descriptor."}
{"index": 11295, "repo": "tomcat-api-10.1", "code": "Enum ContinueResponseTiming {\n\tstatic ContinueResponseTiming fromString​(String value);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ContinueResponseTiming valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ContinueResponseTiming[] values();\n}", "des": "Defines timing options for responding to requests that contain a '100-continue' expectations."}
{"index": 11296, "repo": "tomcat-api-10.1", "code": "Enum CorsFilter.CORSRequestType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CorsFilter.CORSRequestType valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CorsFilter.CORSRequestType[] values();\n}", "des": "Enumerates varies types of CORS requests."}
{"index": 11297, "repo": "tomcat-api-10.1", "code": "Class CoyoteOutputStream {\n\t// Prevent cloning the facade.\n\tprotected Object clone();\n\tvoid close();\n\t// Will send the buffer to the client.\n\tvoid flush();\n\t// Checks if a non-blocking write will succeed.\n\tboolean isReady();\n\t// Sets the WriteListener for this ServletOutputStream and thereby switches to non-blocking IO.\n\tvoid setWriteListener​(WriteListener listener);\n\tvoid write​(byte[] b);\n\tvoid write​(byte[] b, int off, int len);\n\tvoid write​(int i);\n\tvoid write​(ByteBuffer from);\n}", "des": "Coyote implementation of the servlet output stream."}
{"index": 11298, "repo": "tomcat-api-10.1", "code": "Interface CredentialHandler {\n\t// Checks to see if the input credentials match the stored credentials\n\tboolean matches​(String inputCredentials, String storedCredentials);\n\t// Generates the equivalent stored credentials for the given input credentials.\n\tString mutate​(String inputCredentials);\n}", "des": "This interface is used by the Realm to compare the user provided credentials with the credentials stored in the Realm for that user."}
{"index": 11299, "repo": "tomcat-api-10.1", "code": "Class CredentialHandlerSF {\n\t// Store a server.xml element with attributes and children\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n\t// Store the specified CredentialHandler properties and child (CredentialHandler)\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aCredentialHandler, StoreDescription parentDesc);\n}", "des": "Store server.xml Element CredentialHandler"}
{"index": 11300, "repo": "tomcat-api-10.1", "code": "Class CustomObjectInputStream {\n\t// Load the local class equivalent of the specified stream class description, by using the class loader assigned to this Context.\n\tClass<?> resolveClass​(ObjectStreamClass classDesc);\n\t// Return a proxy class that implements the interfaces named in a proxy class descriptor.\n\tprotected Class<?> resolveProxyClass​(String[] interfaces);\n}", "des": "Custom subclass of ObjectInputStream that loads from the class loader for this web application."}
{"index": 11301, "repo": "tomcat-api-10.1", "code": "Enum DestroyMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DestroyMode valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DestroyMode[] values();\n}", "des": "Destroy context provided to object factories via destroyObject and invalidateObject methods."}
{"index": 11302, "repo": "tomcat-api-10.1", "code": "Class DigestAuthenticator {\n\t// Generate the authorization header value that will be sent to the server.\n\tString getAuthorization​(String requestUri, String authenticateHeader, String userName, String userPassword, String userRealm);\n\t// Get the authentication method.\n\tString getSchemeName();\n}", "des": "Authenticator supporting the DIGEST authentication method."}
{"index": 11303, "repo": "tomcat-api-10.1", "code": "Enum DigestAuthenticator.AuthDigest {\n\tString getJavaName();\n\tString getRfcName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DigestAuthenticator.AuthDigest valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DigestAuthenticator.AuthDigest[] values();\n}", "des": "This enum exists because RFC 7616 and Java use different names for some digests."}
{"index": 11304, "repo": "tomcat-api-10.1", "code": "Enum DispatchType {\n\tSocketEvent getSocketStatus();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DispatchType valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DispatchType[] values();\n}", "des": "This enumeration lists the different types of dispatches that request processing can trigger."}
{"index": 11305, "repo": "tomcat-api-10.1", "code": "Class DisposableConnectionFacade {\n\tboolean equals​(Object obj);\n\t// Gets invoked each time an operation on Connection is invoked.\n\tObject invoke​(Object proxy, Method method, Object[] args);\n\t// Gets called each time the connection is borrowed from the pool This means that if an interceptor holds a reference to the connection the interceptor can be reused for another connection.\n\tvoid reset​(ConnectionPool parent, PooledConnection con);\n}", "des": "A DisposableConnectionFacade object is the top most interceptor that wraps an object of type PooledConnection."}
{"index": 11306, "repo": "tomcat-api-10.1", "code": "Interface DistributedManager {\n\t// Returns the total session count for primary, backup and proxy.\n\tint getActiveSessionsFull();\n\t// Returns the list of all sessions IDS (primary, backup and proxy).\n\tSet<String> getSessionIdsFull();\n}", "des": "Interface implemented by session managers that do not keep a complete copy of all sessions in memory but do know where every session is."}
{"index": 11307, "repo": "tomcat-api-10.1", "code": "Class DNSMembershipProvider {\n\t// Invoked by the channel to determine if the listener will process this message or not.\n\tboolean accept​(Serializable msg, Member sender);\n\t// Fetch current cluster members from the cloud orchestration.\n\tprotected Member[] fetchMembers();\n\tvoid start​(int level);\n\tboolean stop​(int level);\n}", "des": "A MembershipProvider that uses DNS to retrieve the members of a cluster."}
{"index": 11308, "repo": "tomcat-api-10.1", "code": "Class EjbFactory {\n\t// If a default factory is available for the given reference type, create the default factory.\n\tprotected ObjectFactory getDefaultFactory​(Reference ref);\n\t// If this reference is a link to another JNDI object, obtain that object.\n\tprotected Object getLinked​(Reference ref);\n\t// Determines if this factory supports processing the provided reference object.\n\tprotected boolean isReferenceTypeSupported​(Object obj);\n}", "des": "Object factory for EJBs."}
{"index": 11309, "repo": "tomcat-api-10.1", "code": "Class ELContextWrapper {\n\t// Obtain the context object for the given key.\n\tObject getContext​(Class<?> key);\n\tELResolver getELResolver();\n\tFunctionMapper getFunctionMapper();\n\tLocale getLocale();\n\tVariableMapper getVariableMapper();\n\tboolean isPropertyResolved();\n\t// Add an object to this EL context under the given key.\n\tvoid putContext​(Class<?> key, Object contextObject);\n\tvoid setLocale​(Locale locale);\n\tvoid setPropertyResolved​(boolean resolved);\n}", "des": "Simple ELContextWrapper for runtime evaluation of EL w/ dynamic FunctionMappers"}
{"index": 11310, "repo": "tomcat-api-10.1", "code": "Class ElementValue {\n\t// Reads an element_value as an ElementValue.\n\tstatic ElementValue readElementValue​(DataInput input, ConstantPool cpool);\n\t// Reads an element_value as an ElementValue.\n\tstatic ElementValue readElementValue​(DataInput input, ConstantPool cpool, int arrayNesting);\n\tabstract String stringifyValue();\n}", "des": "The element_value structure is documented at https://docs.oracle.com/javase/specs/jvms/se11/html/jvms-4.html#jvms-4.7.16.1"}
{"index": 11311, "repo": "tomcat-api-10.1", "code": "Interface Engine {\n\tString getDefaultHost();\n\tString getJvmRoute();\n\tService getService();\n\t// Set the default hostname for this Engine.\n\tvoid setDefaultHost​(String defaultHost);\n\t// Set the JvmRouteId for this engine.\n\tvoid setJvmRoute​(String jvmRouteId);\n\t// Set the Service with which we are associated (if any).\n\tvoid setService​(Service service);\n}", "des": "An Engine is a Container that represents the entire Catalina servlet engine."}
{"index": 11312, "repo": "tomcat-api-10.1", "code": "Class EngineConfig {\n\t// Process the START event for an associated Engine.\n\tvoid lifecycleEvent​(LifecycleEvent event);\n\t// Process a \"start\" event for this Engine.\n\tprotected void start();\n\t// Process a \"stop\" event for this Engine.\n\tprotected void stop();\n}", "des": "Startup event listener for an Engine that configures the properties of that Engine, and the associated defined contexts."}
{"index": 11313, "repo": "tomcat-api-10.1", "code": "Interface ErrorHandler {\n\t// Invoked when the message has been sent successfully.\n\tvoid handleCompletion​(UniqueId id);\n\t// Invoked if the message is dispatched async, and an error occurs\n\tvoid handleError​(ChannelException x, UniqueId id);\n}", "des": "The ErrorHandler class is used when sending messages that are sent asynchronously and the application still needs to get confirmation when the message was sent successfully or when a message errored out."}
{"index": 11314, "repo": "tomcat-api-10.1", "code": "Interface ErrorHandler {\n\t// Processes the given javac error report and exception.\n\tvoid javacError​(String errorReport, Exception exception);\n\t// Processes the given javac compilation errors.\n\tvoid javacError​(JavacErrorDetail[] details);\n\t// Processes the given JSP parse error.\n\tvoid jspError​(String fname, int line, int column, String msg, Exception exception);\n\t// Processes the given JSP parse error.\n\tvoid jspError​(String msg, Exception exception);\n}", "des": "Interface for handling JSP parse and javac compilation errors."}
{"index": 11315, "repo": "tomcat-api-10.1", "code": "Class ErrorPage {\n\tint getErrorCode();\n\tString getExceptionType();\n\tString getLocation();\n\tString getName();\n\t// Set the error code.\n\tvoid setErrorCode​(int errorCode);\n\t// Set the error code (hack for default XmlMapper data type).\n\tvoid setErrorCode​(String errorCode);\n\t// Set the exception type.\n\tvoid setExceptionType​(String exceptionType);\n\t// Set the location.\n\tvoid setLocation​(String location);\n}", "des": "Representation of an error page element for a web application, as represented in a <error-page> element in the deployment descriptor."}
{"index": 11316, "repo": "tomcat-api-10.1", "code": "Class ExceptionUtils {\n\t// Checks whether the supplied Throwable is one that needs to be rethrown and swallows all others.\n\tstatic void handleThrowable​(Throwable t);\n\t// NO-OP method provided to enable simple pre-loading of this class.\n\tstatic void preload();\n}", "des": "Utilities for handling Throwables and Exceptions."}
{"index": 11317, "repo": "tomcat-api-10.1", "code": "Class ExceptionUtils {\n\t// Checks whether the supplied Throwable is one that needs to be rethrown and swallows all others.\n\tstatic void handleThrowable​(Throwable t);\n\t// Checks whether the supplied Throwable is an instance of InvocationTargetException and returns the throwable that is wrapped by it, if there is any.\n\tstatic Throwable unwrapInvocationTargetException​(Throwable t);\n}", "des": "Utilities for handling Throwables and Exceptions."}
{"index": 11318, "repo": "tomcat-api-10.1", "code": "Class ExceptionUtils {\n\t// Checks whether the supplied Throwable is one that needs to be rethrown and swallows all others.\n\tstatic void handleThrowable​(Throwable t);\n\t// NO-OP method provided to enable simple pre-loading of this class.\n\tstatic void preload();\n\t// Checks whether the supplied Throwable is an instance of InvocationTargetException and returns the throwable that is wrapped by it, if there is any.\n\tstatic Throwable unwrapInvocationTargetException​(Throwable t);\n}", "des": "Utilities for handling Throwables and Exceptions."}
{"index": 11319, "repo": "tomcat-api-10.1", "code": "Enum ExpiresFilter.DurationUnit {\n\tint getCalendardField();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ExpiresFilter.DurationUnit valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ExpiresFilter.DurationUnit[] values();\n}", "des": "Duration unit"}
{"index": 11320, "repo": "tomcat-api-10.1", "code": "Enum ExpiresFilter.StartingPoint {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ExpiresFilter.StartingPoint valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ExpiresFilter.StartingPoint[] values();\n}", "des": "Expiration configuration starting point."}
{"index": 11321, "repo": "tomcat-api-10.1", "code": "Interface ExtendedRpcCallback {\n\t// The reply failed.\n\tvoid replyFailed​(Serializable request, Serializable response, Member sender, Exception reason);\n\t// The reply succeeded\n\tvoid replySucceeded​(Serializable request, Serializable response, Member sender);\n}", "des": "Extension to the RpcCallback interface."}
{"index": 11322, "repo": "tomcat-api-10.1", "code": "Class ExtractingRoot {\n\tprotected boolean isPackedWarFile();\n\t// Class loader resources are handled by treating JARs in WEB-INF/lib as resource JARs (without the internal META-INF/resources/ prefix) mounted at WEB-INF/classes (rather than the web app root).\n\tprotected void processWebInfLib();\n\t// Sub-classes must ensure that the state is changed to LifecycleState.STOPPING during the execution of this method.\n\tprotected void stopInternal();\n}", "des": "If the main resources are packaged as a WAR file then any JARs will be extracted to the work directory and used from there."}
{"index": 11323, "repo": "tomcat-api-10.1", "code": "Class FactoryCreateRule {\n\t// Process the beginning of this element.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Process the end of this element.\n\tvoid end​(String namespace, String name);\n\t// Clean up after parsing is complete.\n\tvoid finish();\n}", "des": "Rule implementation that uses an ObjectCreationFactory to create a new object which it pushes onto the object stack."}
{"index": 11324, "repo": "tomcat-api-10.1", "code": "Class FairBlockingQueue<E> {\n\t// Will always return true, queue is unbounded.\n\tboolean offer​(E e);\n\t// Will never timeout, as it invokes the offer(Object) method.\n\tboolean offer​(E e, long timeout, TimeUnit unit);\n\t// Fair retrieval of an object in the queue.\n\tE poll​(long timeout, TimeUnit unit);\n\t// Request an item from the queue asynchronously\n\tFuture<E> pollAsync();\n}", "des": "A simple implementation of a blocking queue with fairness waiting."}
{"index": 11325, "repo": "tomcat-api-10.1", "code": "Class FastHttpDateFormat {\n\t// Get the HTTP format of the specified date.\n\tstatic String formatDate​(long value);\n\t// Get the current date in HTTP format.\n\tstatic String getCurrentDate();\n\t// Try to parse the given date as an HTTP date.\n\tstatic long parseDate​(String value);\n}", "des": "Utility class to generate HTTP dates."}
{"index": 11326, "repo": "tomcat-api-10.1", "code": "Class FileHandler {\n\t// Close the currently open log file (if any).\n\tvoid close();\n\tprotected void closeWriter();\n\t// Flush the writer.\n\tvoid flush();\n\t// Open the new log file for the date specified by date.\n\tvoid open();\n\tprotected void openWriter();\n\t// Format and publish a LogRecord.\n\tvoid publish​(LogRecord record);\n}", "des": "Implementation of Handler that appends log messages to a file named {prefix}{date}{suffix} in a configured directory."}
{"index": 11327, "repo": "tomcat-api-10.1", "code": "Interface FileItemHeaders {\n\t// Returns the value of the specified part header as a String.\n\tString getHeader​(String name);\n\t// Returns an Iterator of all the header names.\n\tIterator<String> getHeaderNames();\n\t// Returns all the values of the specified item header as an Iterator of String objects.\n\tIterator<String> getHeaders​(String name);\n}", "des": "This class provides support for accessing the headers for a file or form item that was received within a multipart/form-data POST request."}
{"index": 11328, "repo": "tomcat-api-10.1", "code": "Class FileItemHeadersImpl {\n\t// Method to add header values to this instance.\n\tvoid addHeader​(String name, String value);\n\t// Returns the value of the specified part header as a String.\n\tString getHeader​(String name);\n\t// Returns an Iterator of all the header names.\n\tIterator<String> getHeaderNames();\n\t// Returns all the values of the specified item header as an Iterator of String objects.\n\tIterator<String> getHeaders​(String name);\n}", "des": "Default implementation of the FileItemHeaders interface."}
{"index": 11329, "repo": "tomcat-api-10.1", "code": "Interface FileItemHeadersSupport {\n\t// Returns the collection of headers defined locally within this item.\n\tFileItemHeaders getHeaders();\n\t// Sets the headers read from within an item.\n\tvoid setHeaders​(FileItemHeaders headers);\n}", "des": "Interface that will indicate that FileItem or FileItemStream implementations will accept the headers read for the item."}
{"index": 11330, "repo": "tomcat-api-10.1", "code": "Class FileSizeLimitExceededException {\n\t// Returns the field name of the item, which caused the exception.\n\tString getFieldName();\n\t// Returns the file name of the item, which caused the exception.\n\tString getFileName();\n\t// Sets the field name of the item, which caused the exception.\n\tvoid setFieldName​(String pFieldName);\n\t// Sets the file name of the item, which caused the exception.\n\tvoid setFileName​(String pFileName);\n}", "des": "Thrown to indicate that A files size exceeds the configured maximum."}
{"index": 11331, "repo": "tomcat-api-10.1", "code": "Class FileUpload {\n\t// Returns the factory class used when creating file items.\n\tFileItemFactory getFileItemFactory();\n\t// Sets the factory class to use when creating file items.\n\tvoid setFileItemFactory​(FileItemFactory factory);\n}", "des": "High level API for processing file uploads."}
{"index": 11332, "repo": "tomcat-api-10.1", "code": "Class FilterBase {\n\tprotected abstract Log getLogger();\n\t// Iterates over the configuration parameters and either logs a warning, or throws an exception for any parameter that does not have a matching setter in this filter.\n\tvoid init​(FilterConfig filterConfig);\n\t// Determines if an exception when calling a setter or an unknown configuration attribute triggers the failure of the this filter which in turn will prevent the web application from starting.\n\tprotected boolean isConfigProblemFatal();\n}", "des": "Base class for filters that provides generic initialisation and a simple no-op destruction."}
{"index": 11333, "repo": "tomcat-api-10.1", "code": "Class FindLeaksTask {\n\t// Execute the requested operation.\n\tvoid execute();\n\t// Returns the statusLine parameter that controls if the response includes a status line or not.\n\tboolean getStatusLine();\n\t// Sets the statusLine parameter that controls if the response includes a status line or not.\n\tvoid setStatusLine​(boolean statusLine);\n}", "des": "Ant task that implements the /findleaks command, supported by the Tomcat manager application."}
{"index": 11334, "repo": "tomcat-api-10.1", "code": "Class GenericRole<UD extends UserDatabase> {\n\tboolean equals​(Object obj);\n\t// Return the UserDatabase within which this role is defined.\n\tUserDatabase getUserDatabase();\n\t// Set the description of this role.\n\tvoid setDescription​(String description);\n\t// Set the role name of this role, which must be unique within the scope of a UserDatabase.\n\tvoid setRolename​(String rolename);\n}", "des": "Concrete implementation of Role for a UserDatabase."}
{"index": 11335, "repo": "tomcat-api-10.1", "code": "Class GroupMBean {\n\t// Add a new Role to those this group belongs to.\n\tvoid addRole​(String rolename);\n\tString[] getRoles();\n\tString[] getUsers();\n\t// Remove a Role from those this group belongs to.\n\tvoid removeRole​(String rolename);\n}", "des": "A ModelMBean implementation for the org.apache.catalina.Group component."}
{"index": 11336, "repo": "tomcat-api-10.1", "code": "Class HealthCheckValve {\n\tboolean getCheckContainersAvailable();\n\tString getPath();\n\t// Perform request processing as required by this Valve.\n\tvoid invoke​(Request request, Response response);\n\tprotected boolean isAvailable​(Container container);\n\tvoid setCheckContainersAvailable​(boolean checkContainersAvailable);\n\tvoid setPath​(String path);\n\t// Start this component and implement the requirements of LifecycleBase.startInternal().\n\tprotected void startInternal();\n}", "des": "Simple Valve that responds to cloud orchestrators health checks."}
{"index": 11337, "repo": "tomcat-api-10.1", "code": "Class HomesUserDatabase {\n\t// Return an absolute pathname to the home directory for the specified user.\n\tString getHome​(String user);\n\t// Return the UserConfig listener with which we are associated.\n\tUserConfig getUserConfig();\n\t// Return an enumeration of the user names defined on this server.\n\tEnumeration<String> getUsers();\n\t// Set the UserConfig listener with which we are associated.\n\tvoid setUserConfig​(UserConfig userConfig);\n}", "des": "Concrete implementation of the UserDatabase interface considers all directories in a directory whose pathname is specified to our constructor to be \"home\" directories for those users."}
{"index": 11338, "repo": "tomcat-api-10.1", "code": "Class Http11InputBuffer {\n\t// Obtain an estimate of the number of bytes that can be read without blocking.\n\tint available();\n\t// Read from the input stream into the ByteBuffer provided by the ApplicationBufferHandler.\n\tint doRead​(ApplicationBufferHandler handler);\n\tvoid expand​(int size);\n\tByteBuffer getByteBuffer();\n\tvoid setByteBuffer​(ByteBuffer buffer);\n}", "des": "InputBuffer for HTTP that provides request header parsing as well as transfer encoding."}
{"index": 11339, "repo": "tomcat-api-10.1", "code": "Class Http11Nio2Protocol {\n\t// Concrete implementations need to provide access to their logger to be used by the abstract classes.\n\tprotected Log getLog();\n\t// Obtain the prefix to be used when construction a name for this protocol handler.\n\tprotected String getNamePrefix();\n}", "des": "HTTP/1.1 protocol implementation using NIO2."}
{"index": 11340, "repo": "tomcat-api-10.1", "code": "Class Http11NioProtocol {\n\t// Concrete implementations need to provide access to their logger to be used by the abstract classes.\n\tprotected Log getLog();\n\t// Obtain the prefix to be used when construction a name for this protocol handler.\n\tprotected String getNamePrefix();\n\tint getPollerThreadPriority();\n\tlong getSelectorTimeout();\n\tvoid setPollerThreadPriority​(int threadPriority);\n\tvoid setSelectorTimeout​(long timeout);\n}", "des": "HTTP/1.1 protocol implementation using NIO."}
{"index": 11341, "repo": "tomcat-api-10.1", "code": "Interface InputBuffer {\n\t// Obtain an estimate of the number of bytes that can be read without blocking.\n\tint available();\n\t// Read from the input stream into the ByteBuffer provided by the ApplicationBufferHandler.\n\tint doRead​(ApplicationBufferHandler handler);\n}", "des": "This class is only for internal use in the protocol implementation."}
{"index": 11342, "repo": "tomcat-api-10.1", "code": "Interface InputFilter {\n\t// End the current request.\n\tlong end();\n\t// Get the name of the encoding handled by this filter.\n\tByteChunk getEncodingName();\n\t// Has the request body been read fully?\n\tboolean isFinished();\n\t// Make the filter ready to process the next request.\n\tvoid recycle();\n\t// Set the next buffer in the filter pipeline.\n\tvoid setBuffer​(InputBuffer buffer);\n\t// Some filters need additional parameters from the request.\n\tvoid setRequest​(Request request);\n}", "des": "Input filter interface."}
{"index": 11343, "repo": "tomcat-api-10.1", "code": "Interface InstrumentableClassLoader {\n\t// Adds the specified class file transformer to this class loader.\n\tvoid addTransformer​(ClassFileTransformer transformer);\n\t// Returns a copy of this class loader without any class file transformers.\n\tClassLoader copyWithoutTransformers();\n\t// Removes the specified class file transformer from this class loader.\n\tvoid removeTransformer​(ClassFileTransformer transformer);\n}", "des": "Specifies a class loader capable of being decorated with ClassFileTransformers."}
{"index": 11344, "repo": "tomcat-api-10.1", "code": "Class InterceptorSF {\n\t// Store a server.xml element with attributes and children\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n\t// Store the specified Interceptor child.\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aInterceptor, StoreDescription parentDesc);\n}", "des": "Generate Interceptor Element"}
{"index": 11345, "repo": "tomcat-api-10.1", "code": "Interface JarScannerCallback {\n\t// A directory was found that is to be treated as an unpacked JAR.\n\tvoid scan​(File file, String webappPath, boolean isWebapp);\n\t// A JAR was found and may be accessed for further processing via the provided URL connection.\n\tvoid scan​(Jar jar, String webappPath, boolean isWebapp);\n\t// A directory structure was found within the web application at /WEB-INF/classes that should be handled as an unpacked JAR.\n\tvoid scanWebInfClasses();\n}", "des": "This interface is implemented by clients of the JarScanner to enable them to receive notification of a discovered JAR."}
{"index": 11346, "repo": "tomcat-api-10.1", "code": "Class JasperELResolver {\n\tvoid add​(ELResolver elResolver);\n\t// Obtain the value of the given property on the given object using the given context.\n\tObject getValue​(ELContext context, Object base, Object property);\n\t// Invokes a method on the the given object.\n\tObject invoke​(ELContext context, Object base, Object method, Class<?>[] paramTypes, Object[] params);\n}", "des": "Jasper-specific CompositeELResolver that optimizes certain functions to avoid unnecessary resolver calls."}
{"index": 11347, "repo": "tomcat-api-10.1", "code": "Class JasperLoader {\n\t// Get the Permissions for a CodeSource.\n\tPermissionCollection getPermissions​(CodeSource codeSource);\n\t// Delegate to parent\n\tInputStream getResourceAsStream​(String name);\n\t// Load the class with the specified name.\n\tClass<?> loadClass​(String name);\n\t// Load the class with the specified name, searching using the following algorithm until it finds and returns the class.\n\tClass<?> loadClass​(String name, boolean resolve);\n}", "des": "Class loader for loading servlet class files (corresponding to JSP files) and tag handler class files (corresponding to tag files)."}
{"index": 11348, "repo": "tomcat-api-10.1", "code": "Class JavaClass {\n\tint getAccessFlags();\n\t// Return annotations entries from \"RuntimeVisibleAnnotations\" attribute on the class, fields or methods if there is any.\n\tAnnotationEntry[] getAllAnnotationEntries();\n\t// Return annotations entries from \"RuntimeVisibleAnnotations\" attribute on the class, if there is any.\n\tAnnotationEntry[] getAnnotationEntries();\n\tString getClassName();\n\tString[] getInterfaceNames();\n\t// returns the super class name of this class.\n\tString getSuperclassName();\n}", "des": "Represents a Java class, i.e., the data structures, constant pool, fields, methods and commands contained in a Java .class file."}
{"index": 11349, "repo": "tomcat-api-10.1", "code": "Class javaURLContextFactory {\n\t// Get a new (writable) initial context.\n\tContext getInitialContext​(Hashtable<?,​?> environment);\n\t// Crete a new Context's instance.\n\tObject getObjectInstance​(Object obj, Name name, Context nameCtx, Hashtable<?,​?> environment);\n}", "des": "Context factory for the \"java:\" namespace."}
{"index": 11350, "repo": "tomcat-api-10.1", "code": "Class JMXAccessorGetTask {\n\tString getAttribute();\n\t// Execute the specified command, based on the configured properties.\n\tString jmxExecute​(MBeanServerConnection jmxServerConnection);\n\t// Get property value.\n\tprotected String jmxGet​(MBeanServerConnection jmxServerConnection, String name);\n\tvoid setAttribute​(String attribute);\n}", "des": "Access JMX JSR 160 MBeans Server."}
{"index": 11351, "repo": "tomcat-api-10.1", "code": "Class JMXAccessorInvokeTask {\n\tvoid addArg​(Arg arg);\n\tList<Arg> getArgs();\n\tString getOperation();\n\t// Execute the specified command, based on the configured properties.\n\tString jmxExecute​(MBeanServerConnection jmxServerConnection);\n\t// Invoke specified operation.\n\tprotected String jmxInvoke​(MBeanServerConnection jmxServerConnection, String name);\n\tvoid setArgs​(List<Arg> args);\n\tvoid setOperation​(String operation);\n}", "des": "Access JMX JSR 160 MBeans Server."}
{"index": 11352, "repo": "tomcat-api-10.1", "code": "Class JMXAccessorQueryTask {\n\tprotected void bindAttributes​(MBeanServerConnection jmxServerConnection, String pname, ObjectName oname);\n\tboolean isAttributebinding();\n\t// Execute the specified command, based on the configured properties.\n\tString jmxExecute​(MBeanServerConnection jmxServerConnection);\n\t// Call Mbean server for some mbeans with same domain, attributes.\n\tprotected String jmxQuery​(MBeanServerConnection jmxServerConnection, String qry);\n\tvoid setAttributebinding​(boolean attributeBinding);\n}", "des": "Query for Mbeans."}
{"index": 11353, "repo": "tomcat-api-10.1", "code": "Class JMXAccessorUnregisterTask {\n\t// Execute the specified command, based on the configured properties.\n\tString jmxExecute​(MBeanServerConnection jmxServerConnection);\n\t// Unregister MBean.\n\tprotected String jmxUuregister​(MBeanServerConnection jmxServerConnection, String name);\n}", "des": "unregister an MBean at JMX JSR 160 MBeans Server."}
{"index": 11354, "repo": "tomcat-api-10.1", "code": "Class JMXGetTask {\n\t// Execute the requested operation.\n\tvoid execute();\n\t// Get method for the attribute name\n\tString getAttribute();\n\t// Get method for the bean name\n\tString getBean();\n\t// Set method for the attribute name\n\tvoid setAttribute​(String attribute);\n\t// Set method for the bean name\n\tvoid setBean​(String bean);\n}", "des": "Ant task that implements the JMX Get command (/jmxproxy/?"}
{"index": 11355, "repo": "tomcat-api-10.1", "code": "Class JMXProxyServlet {\n\t// Process a GET request for the specified resource.\n\tvoid doGet​(HttpServletRequest request, HttpServletResponse response);\n\tvoid getAttribute​(PrintWriter writer, String onameStr, String att, String key);\n\t// Initialize this servlet.\n\tvoid init();\n\t// Determines if a type is supported by the JMXProxyServlet.\n\tboolean isSupported​(String type);\n\tvoid listBeans​(PrintWriter writer, String qry);\n\tvoid setAttribute​(PrintWriter writer, String onameStr, String att, String val);\n}", "des": "This servlet will dump JMX attributes in a simple format and implement proxy services for modeler."}
{"index": 11356, "repo": "tomcat-api-10.1", "code": "Class JMXQueryTask {\n\t// Execute the requested operation.\n\tvoid execute();\n\t// Get method for the JMX query string\n\tString getQuery();\n\t// Set method for the JMX query string.\n\tvoid setQuery​(String query);\n}", "des": "Ant task that implements the JMX Query command (/jmxproxy/?"}
{"index": 11357, "repo": "tomcat-api-10.1", "code": "Class JMXSetTask {\n\t// Execute the requested operation.\n\tvoid execute();\n\t// Get method for the attribute name\n\tString getAttribute();\n\t// Get method for the bean name\n\tString getBean();\n\t// Get method for the attribute value\n\tString getValue();\n\t// Set method for the attribute name\n\tvoid setAttribute​(String attribute);\n\t// Set method for the bean name\n\tvoid setBean​(String bean);\n\t// Set method for the attribute value.\n\tvoid setValue​(String value);\n}", "des": "Ant task that implements the JMX Set command (/jmxproxy/?"}
{"index": 11358, "repo": "tomcat-api-10.1", "code": "Class JsonAccessLogValve {\n\t// Create an AccessLogElement implementation.\n\tprotected AbstractAccessLogValve.AccessLogElement createAccessLogElement​(char pattern);\n\t// Create an AccessLogElement implementation which needs an element name.\n\tprotected AbstractAccessLogValve.AccessLogElement createAccessLogElement​(String name, char pattern);\n\t// Parse pattern string and create the array of AccessLogElement.\n\tprotected AbstractAccessLogValve.AccessLogElement[] createLogElements();\n}", "des": "Access log valve derivative that rewrites entries as JSON."}
{"index": 11359, "repo": "tomcat-api-10.1", "code": "Class JspConfig {\n\t// Find a property that best matches the supplied resource.\n\tJspConfig.JspProperty findJspProperty​(String uri);\n\t// To find out if a uri matches a url pattern in jsp config.\n\tboolean isJspPage​(String uri);\n}", "des": "Handles the jsp-config element in WEB_INF/web.xml."}
{"index": 11360, "repo": "tomcat-api-10.1", "code": "Enum LifecycleState {\n\tString getLifecycleEvent();\n\t// May the public methods other than property getters/setters and lifecycle methods be called for a component in this state?\n\tboolean isAvailable();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic LifecycleState valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic LifecycleState[] values();\n}", "des": "The list of valid states for components that implement Lifecycle."}
{"index": 11361, "repo": "tomcat-api-10.1", "code": "Class LoaderSF {\n\t// Is this an instance of the default Loader configuration, with all-default properties?\n\tprotected boolean isDefaultLoader​(Loader loader);\n\t// Store the only the Loader elements, when not default\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n}", "des": "Store Loader Element."}
{"index": 11362, "repo": "tomcat-api-10.1", "code": "Class LocalXAConnectionFactory {\n\t// Create a new Connection in an implementation specific fashion.\n\tConnection createConnection();\n\tConnectionFactory getConnectionFactory();\n\t// Gets the TransactionRegistry for this connection factory which contains a the XAResource for every connection created by this factory.\n\tTransactionRegistry getTransactionRegistry();\n}", "des": "An implementation of XAConnectionFactory which manages non-XA connections in XA transactions."}
{"index": 11363, "repo": "tomcat-api-10.1", "code": "Class ManagedDataSource<C extends Connection> {\n\t// Returns a Connection from my pool, according to the contract specified by ObjectPool.borrowObject().\n\tConnection getConnection();\n\t// Gets the transaction registry.\n\tTransactionRegistry getTransactionRegistry();\n\t// Sets the transaction registry from the XAConnectionFactory used to create the pool.\n\tvoid setTransactionRegistry​(TransactionRegistry transactionRegistry);\n}", "des": "The ManagedDataSource is a PoolingDataSource that creates ManagedConnections."}
{"index": 11364, "repo": "tomcat-api-10.1", "code": "Class ManagerSF {\n\t// Is this an instance of the default Manager configuration, with all-default properties?\n\tprotected boolean isDefaultManager​(StandardManager smanager);\n\t// Store the only the Manager elements\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n\t// Must Implement at subclass for custom store children handling.\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aManager, StoreDescription parentDesc);\n}", "des": "Store server.xml Manager element"}
{"index": 11365, "repo": "tomcat-api-10.1", "code": "Class Matcher {\n\t// Tests whether or not a string matches against a pattern.\n\tstatic boolean match​(String pattern, String str, boolean caseSensitive);\n\t// Tests whether or not a given file name matches any file name pattern in the given set.\n\tstatic boolean matchName​(Set<String> patternSet, String fileName);\n}", "des": "This is a utility class to match file globs."}
{"index": 11366, "repo": "tomcat-api-10.1", "code": "Class Membership.MbrEntry {\n\t// Indicate that this member has been accessed.\n\tvoid accessed();\n\t// Obtain the member associated with this entry.\n\tMember getMember();\n\t// Check if this member has expired.\n\tboolean hasExpired​(long maxtime);\n}", "des": "Inner class that represents a member entry"}
{"index": 11367, "repo": "tomcat-api-10.1", "code": "Interface MembershipListener {\n\t// A member was added to the group\n\tvoid memberAdded​(Member member);\n\t// A member was removed from the group If the member left voluntarily, the Member.getCommand will contain the Member.SHUTDOWN_PAYLOAD data\n\tvoid memberDisappeared​(Member member);\n}", "des": "The MembershipListener interface is used as a callback to the membership service."}
{"index": 11368, "repo": "tomcat-api-10.1", "code": "Class MultiLockFairBlockingQueue<E> {\n\tint getNextPoll();\n\tint getNextPut();\n\t// Will always return true, queue is unbounded.\n\tboolean offer​(E e);\n\t// Will never timeout, as it invokes the offer(Object) method.\n\tboolean offer​(E e, long timeout, TimeUnit unit);\n\t// Fair retrieval of an object in the queue.\n\tE poll​(long timeout, TimeUnit unit);\n\t// Request an item from the queue asynchronously\n\tFuture<E> pollAsync();\n}", "des": "EXPERIMENTAL AND NOT YET COMPLETE!"}
{"index": 11369, "repo": "tomcat-api-10.1", "code": "Class NamingContextBindingsEnumeration {\n\t// Closes this enumeration.\n\tvoid close();\n\t// Determines whether there are any more elements in the enumeration.\n\tboolean hasMore();\n\tboolean hasMoreElements();\n\t// Retrieves the next element in the enumeration.\n\tBinding next();\n\tBinding nextElement();\n}", "des": "Naming enumeration implementation."}
{"index": 11370, "repo": "tomcat-api-10.1", "code": "Class NamingContextEnumeration {\n\t// Closes this enumeration.\n\tvoid close();\n\t// Determines whether there are any more elements in the enumeration.\n\tboolean hasMore();\n\tboolean hasMoreElements();\n\t// Retrieves the next element in the enumeration.\n\tNameClassPair next();\n\tNameClassPair nextElement();\n}", "des": "Naming enumeration implementation."}
{"index": 11371, "repo": "tomcat-api-10.1", "code": "Class NamingResourcesSF {\n\t// Store the only the NamingResources elements\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n\t// Store the specified NamingResources properties.\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aElement, StoreDescription elementDesc);\n}", "des": "Store server.xml elements Resources at context and GlobalNamingResources"}
{"index": 11372, "repo": "tomcat-api-10.1", "code": "Class NetMask {\n\tboolean equals​(Object o);\n\t// Test if a given address matches this netmask.\n\tboolean matches​(InetAddress addr);\n\t// Test if a given address matches this netmask.\n\tboolean matches​(InetAddress addr, boolean checkedPort);\n\t// Test if a given address and port matches this netmask.\n\tboolean matches​(InetAddress addr, int port);\n}", "des": "A class representing a CIDR netmask."}
{"index": 11373, "repo": "tomcat-api-10.1", "code": "Class NonLoginAuthenticator {\n\t// Authenticate the user making this request, based on the fact that no login-config has been defined for the container.\n\tprotected boolean doAuthenticate​(Request request, HttpServletResponse response);\n\t// Return the authentication method, which is vendor-specific and not defined by HttpServletRequest.\n\tprotected String getAuthMethod();\n}", "des": "An Authenticator and Valve implementation that checks only security constraints not involving user authentication."}
{"index": 11374, "repo": "tomcat-api-10.1", "code": "Class NoOpCallStack {\n\t// Clears the current stack trace snapshot.\n\tvoid clear();\n\t// Takes a snapshot of the current call stack.\n\tvoid fillInStackTrace();\n\t// Prints the current stack trace if available to a PrintWriter.\n\tboolean printStackTrace​(PrintWriter writer);\n}", "des": "CallStack strategy using no-op implementations of all functionality."}
{"index": 11375, "repo": "tomcat-api-10.1", "code": "Class NotificationInfo {\n\t// Add a new notification type to the set managed by an MBean.\n\tvoid addNotifType​(String notifType);\n\t// Create and return a ModelMBeanNotificationInfo object that corresponds to the attribute described by this instance.\n\tMBeanNotificationInfo createNotificationInfo();\n\tString[] getNotifTypes();\n\t// Override the description property setter.\n\tvoid setDescription​(String description);\n\t// Override the name property setter.\n\tvoid setName​(String name);\n}", "des": "Internal configuration information for a Notification descriptor."}
{"index": 11376, "repo": "tomcat-api-10.1", "code": "Class NullRealm {\n\t// Get the password for the specified user.\n\tprotected String getPassword​(String username);\n\t// Get the principal associated with the specified user.\n\tprotected Principal getPrincipal​(String username);\n}", "des": "Minimal Realm implementation that always returns null when an attempt is made to validate a user name and password."}
{"index": 11377, "repo": "tomcat-api-10.1", "code": "Class ObjectCreateRule {\n\t// Process the beginning of this element.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Process the end of this element.\n\tvoid end​(String namespace, String name);\n\t// Return the actual class name of the class to be instantiated.\n\tprotected String getRealClassName​(Attributes attributes);\n}", "des": "Rule implementation that creates a new object and pushes it onto the object stack."}
{"index": 11378, "repo": "tomcat-api-10.1", "code": "Interface ObjectCreationFactory {\n\t// Factory method called by FactoryCreateRule to supply an object based on the element's attributes.\n\tObject createObject​(Attributes attributes);\n\tDigester getDigester();\n\t// Set the Digester to allow the implementation to do logging, classloading based on the digester's classloader, etc.\n\tvoid setDigester​(Digester digester);\n}", "des": "Interface for use with FactoryCreateRule."}
{"index": 11379, "repo": "tomcat-api-10.1", "code": "Class OneLineFormatter {\n\tprotected void addTimestamp​(StringBuilder buf, long timestamp);\n\tString format​(LogRecord record);\n\t// Obtain the format currently being used for time stamps in log messages.\n\tString getTimeFormat();\n\t// Specify the time format to use for time stamps in log messages.\n\tvoid setTimeFormat​(String timeFormat);\n}", "des": "Provides same information as default log format but on a single line to make it easier to grep the logs."}
{"index": 11380, "repo": "tomcat-api-10.1", "code": "Interface OutputBuffer {\n\t// Write the given data to the response.\n\tint doWrite​(ByteBuffer chunk);\n\t// Bytes written to the underlying socket.\n\tlong getBytesWritten();\n}", "des": "Output buffer."}
{"index": 11381, "repo": "tomcat-api-10.1", "code": "Interface OutputFilter {\n\t// Make the filter ready to process the next request.\n\tvoid recycle();\n\t// Set the next buffer in the filter pipeline.\n\tvoid setBuffer​(HttpOutputBuffer buffer);\n\t// Some filters need additional parameters from the response.\n\tvoid setResponse​(Response response);\n}", "des": "Output filter."}
{"index": 11382, "repo": "tomcat-api-10.1", "code": "Class PasswdUserDatabase {\n\t// Return an absolute pathname to the home directory for the specified user.\n\tString getHome​(String user);\n\t// Return the UserConfig listener with which we are associated.\n\tUserConfig getUserConfig();\n\t// Return an enumeration of the user names defined on this server.\n\tEnumeration<String> getUsers();\n\t// Set the UserConfig listener with which we are associated.\n\tvoid setUserConfig​(UserConfig userConfig);\n}", "des": "Concrete implementation of the UserDatabase interface that processes the /etc/passwd file on a Unix system."}
{"index": 11383, "repo": "tomcat-api-10.1", "code": "Class PojoEndpointBase {\n\tprotected void doOnOpen​(Session session, EndpointConfig config);\n\tprotected PojoMethodMapping getMethodMapping();\n\tprotected Object getPojo();\n\t// Event that is triggered when a session has closed.\n\tvoid onClose​(Session session, CloseReason closeReason);\n\t// Event that is triggered when a protocol error occurs.\n\tvoid onError​(Session session, Throwable throwable);\n\tprotected void setMethodMapping​(PojoMethodMapping methodMapping);\n\tprotected void setPojo​(Object pojo);\n}", "des": "Base implementation (client and server have different concrete implementations) of the wrapper that converts a POJO instance into a WebSocket endpoint instance."}
{"index": 11384, "repo": "tomcat-api-10.1", "code": "Class Pool {\n\t// Create a new pool.\n\tstatic long create​(long parent);\n\t// Destroy the pool.\n\tstatic void destroy​(long pool);\n}", "des": "Provides access to APR memory pools which are used to manage memory allocations for natively created instances."}
{"index": 11385, "repo": "tomcat-api-10.1", "code": "Class PoolableCallableStatement {\n\t// Activates after retrieval from the pool.\n\tvoid activate();\n\t// Returns the CallableStatement to the pool.\n\tvoid close();\n\t// Passivates to prepare for return to the pool.\n\tvoid passivate();\n}", "des": "A DelegatingCallableStatement that cooperates with PoolingConnection to implement a pool of CallableStatements."}
{"index": 11386, "repo": "tomcat-api-10.1", "code": "Class PoolablePreparedStatement<K> {\n\tvoid activate();\n\t// Add batch.\n\tvoid addBatch();\n\t// Clear Batch.\n\tvoid clearBatch();\n\t// Return me to my pool.\n\tvoid close();\n\tvoid passivate();\n}", "des": "A DelegatingPreparedStatement that cooperates with PoolingConnection to implement a pool of PreparedStatements."}
{"index": 11387, "repo": "tomcat-api-10.1", "code": "Enum PooledObjectState {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic PooledObjectState valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic PooledObjectState[] values();\n}", "des": "Provides all possible states of a PooledObject."}
{"index": 11388, "repo": "tomcat-api-10.1", "code": "Class PooledSoftReference<T> {\n\t// Gets the object that the wrapped SoftReference refers to.\n\tT getObject();\n\t// Gets the SoftReference wrapped by this object.\n\tSoftReference<T> getReference();\n\t// Sets the wrapped reference.\n\tvoid setReference​(SoftReference<T> reference);\n}", "des": "Extension of DefaultPooledObject to wrap pooled soft references."}
{"index": 11389, "repo": "tomcat-api-10.1", "code": "Enum PoolingConnection.StatementType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic PoolingConnection.StatementType valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic PoolingConnection.StatementType[] values();\n}", "des": "Statement types."}
{"index": 11390, "repo": "tomcat-api-10.1", "code": "Class PropertiesRoleMappingListener {\n\t// Gets the prefix to filter from property keys.\n\tString getKeyPrefix();\n\t// Gets the path to the role mapping properties file.\n\tString getRoleMappingFile();\n\t// Acknowledge the occurrence of the specified event.\n\tvoid lifecycleEvent​(LifecycleEvent event);\n\t// Sets the prefix to filter from property keys.\n\tvoid setKeyPrefix​(String keyPrefix);\n\t// Sets the path to the role mapping properties file.\n\tvoid setRoleMappingFile​(String roleMappingFile);\n}", "des": "Implementation of LifecycleListener that will populate the context's role mapping from a properties file."}
{"index": 11391, "repo": "tomcat-api-10.1", "code": "Class RandomizedTextRewriteMap {\n\t// Maps a key to a replacement value. The method is free to return null to indicate, that the default value from the RewriteRule directive should be used.\n\tString lookup​(String key);\n\t// Optional parameter that can be defined through the RewriteMap directive in the rewrite.config file.\n\tString setParameters​(String params);\n}", "des": "Implement a map for the txt: and rnd: mod_rewrite capabilities."}
{"index": 11392, "repo": "tomcat-api-10.1", "code": "Class RealmSF {\n\t// Store a server.xml element with attributes and children\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n\t// Store the specified Realm properties and child (Realm)\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aRealm, StoreDescription parentDesc);\n}", "des": "Store server.xml Element Realm"}
{"index": 11393, "repo": "tomcat-api-10.1", "code": "Class ReflectionUtil {\n\tstatic Class<?> forName​(String name);\n\tprotected static Class<?> forNamePrimitive​(String name);\n\t// Returns a method based on the criteria.\n\tstatic Method getMethod​(EvaluationContext ctx, Object base, Object property, Class<?>[] paramTypes, Object[] paramValues);\n\t// Converts an array of Class names to Class types.\n\tstatic Class<?>[] toTypeArray​(String[] s);\n\t// Converts an array of Class types to Class names.\n\tstatic String[] toTypeNameArray​(Class<?>[] c);\n}", "des": "Utilities for Managing Serialization and Reflection"}
{"index": 11394, "repo": "tomcat-api-10.1", "code": "Interface RegistryMBean {\n\t// Return an int ID for faster access.\n\tint getId​(String domain, String name);\n\t// Invoke an operation on a set of mbeans.\n\tvoid invoke​(List<ObjectName> mbeans, String operation, boolean failFirst);\n\t// Register a bean by creating a modeler mbean and adding it to the MBeanServer.\n\tvoid registerComponent​(Object bean, String oname, String type);\n\t// Reset all metadata cached by this registry.\n\tvoid stop();\n\t// Unregister a component.\n\tvoid unregisterComponent​(String oname);\n}", "des": "Interface for modeler MBeans."}
{"index": 11395, "repo": "tomcat-api-10.1", "code": "Class ReplicatedMap<K,​V> {\n\tprotected int getReplicateMessageType();\n\tprotected int getStateMessageType();\n\tvoid mapMemberAdded​(Member member);\n\t// A member was removed from the group If the member left voluntarily, the Member.getCommand will contain the Member.SHUTDOWN_PAYLOAD data\n\tvoid memberDisappeared​(Member member);\n\t// publish info about a map pair (key/value) to other nodes in the cluster\n\tprotected Member[] publishEntryInfo​(Object key, Object value);\n}", "des": "All-to-all replication for a hash map implementation."}
{"index": 11396, "repo": "tomcat-api-10.1", "code": "Interface RequestContext {\n\t// Retrieve the character encoding for the request.\n\tString getCharacterEncoding();\n\t// Retrieve the content type of the request.\n\tString getContentType();\n\t// Retrieve the input stream for the request.\n\tInputStream getInputStream();\n}", "des": "Abstracts access to the request information needed for file uploads."}
{"index": 11397, "repo": "tomcat-api-10.1", "code": "Class ResourceEnvFactory {\n\t// If a default factory is available for the given reference type, create the default factory.\n\tprotected ObjectFactory getDefaultFactory​(Reference ref);\n\t// If this reference is a link to another JNDI object, obtain that object.\n\tprotected Object getLinked​(Reference ref);\n\t// Determines if this factory supports processing the provided reference object.\n\tprotected boolean isReferenceTypeSupported​(Object obj);\n}", "des": "Object factory for Resources env."}
{"index": 11398, "repo": "tomcat-api-10.1", "code": "Class ResourceFactory {\n\t// If a default factory is available for the given reference type, create the default factory.\n\tprotected ObjectFactory getDefaultFactory​(Reference ref);\n\t// If this reference is a link to another JNDI object, obtain that object.\n\tprotected Object getLinked​(Reference ref);\n\t// Determines if this factory supports processing the provided reference object.\n\tprotected boolean isReferenceTypeSupported​(Object obj);\n}", "des": "Object factory for Resources."}
{"index": 11399, "repo": "tomcat-api-10.1", "code": "Class ResourceSet<T> {\n\t// Add the specified element to this set if it is not already present.\n\tboolean add​(T o);\n\t// Remove all of the elements from this set.\n\tvoid clear();\n\tboolean isLocked();\n\t// Remove the given element from this set if it is present.\n\tboolean remove​(Object o);\n\t// Set the locked state of this parameter map.\n\tvoid setLocked​(boolean locked);\n}", "des": "Extended implementation of HashSet that includes a locked property."}
{"index": 11400, "repo": "tomcat-api-10.1", "code": "Interface RewriteMap {\n\t// Maps a key to a replacement value. The method is free to return null to indicate, that the default value from the RewriteRule directive should be used.\n\tString lookup​(String key);\n\t// Optional parameter that can be defined through the RewriteMap directive in the rewrite.config file.\n\tString setParameters​(String params);\n\t// Optional parameters that can be defined through the RewriteMap directive in the rewrite.config file.\n\tdefault void setParameters​(String... params);\n}", "des": "Interface for user defined lookup/replacement logic that can be defined in a rewrite.config file by a RewriteMap directive."}
{"index": 11401, "repo": "tomcat-api-10.1", "code": "Interface Role {\n\tString getDescription();\n\tString getRolename();\n\tUserDatabase getUserDatabase();\n\t// Set the description of this role.\n\tvoid setDescription​(String description);\n\t// Set the role name of this role, which must be unique within the scope of a UserDatabase.\n\tvoid setRolename​(String rolename);\n}", "des": "Abstract representation of a security role, suitable for use in environments like JAAS that want to deal with Principals."}
{"index": 11402, "repo": "tomcat-api-10.1", "code": "Interface RpcCallback {\n\t// If the reply has already been sent to the requesting thread, the rpc callback can handle any data that comes in after the fact.\n\tvoid leftOver​(Serializable msg, Member sender);\n\t// Allows sending a response to a received message.\n\tSerializable replyRequest​(Serializable msg, Member sender);\n}", "des": "The RpcCallback interface is an interface for the Tribes channel to request a response object to a request that came in."}
{"index": 11403, "repo": "tomcat-api-10.1", "code": "Class RxTaskPool {\n\tint available();\n\tprotected void configureTask​(AbstractRxTask task);\n\tint getMaxThreads();\n\tint getMinThreads();\n\t// Find an idle worker thread, if any.\n\tAbstractRxTask getRxTask();\n\tRxTaskPool.TaskCreator getTaskCreator();\n\t// Called by the worker thread to return itself to the idle pool.\n\tvoid returnWorker​(AbstractRxTask worker);\n\tvoid setMaxTasks​(int maxThreads);\n\tvoid setMinTasks​(int minThreads);\n\tvoid stop();\n}", "des": "A very simple thread pool class."}
{"index": 11404, "repo": "tomcat-api-10.1", "code": "Class SecurityConfig {\n\t// Returns the singleton instance of that class.\n\tstatic SecurityConfig newInstance();\n\t// Set the security package.access value.\n\tvoid setPackageAccess();\n\t// Set the security package.definition value.\n\tvoid setPackageDefinition();\n}", "des": "Util class to protect Catalina against package access and insertion."}
{"index": 11405, "repo": "tomcat-api-10.1", "code": "Class SecurityManagerCallStack {\n\t// Clears the current stack trace snapshot.\n\tvoid clear();\n\t// Takes a snapshot of the current call stack.\n\tvoid fillInStackTrace();\n\t// Prints the current stack trace if available to a PrintWriter.\n\tboolean printStackTrace​(PrintWriter writer);\n}", "des": "A CallStack strategy using a SecurityManager."}
{"index": 11406, "repo": "tomcat-api-10.1", "code": "Interface Sender {\n\t// Set the configuration parameters\n\tvoid init​(HeartbeatListener config);\n\t// Send the message to the proxies\n\tint send​(String mess);\n}", "des": "Interface to send data to proxies."}
{"index": 11407, "repo": "tomcat-api-10.1", "code": "Class ServletRequestContext {\n\t// Retrieve the content length of the request.\n\tlong contentLength();\n\t// Retrieve the character encoding for the request.\n\tString getCharacterEncoding();\n\t// Retrieve the content type of the request.\n\tString getContentType();\n\t// Retrieve the input stream for the request.\n\tInputStream getInputStream();\n}", "des": "Provides access to the request information needed for a request made to an HTTP servlet."}
{"index": 11408, "repo": "tomcat-api-10.1", "code": "Class ServletResponseWrapperInclude {\n\t// The default behavior of this method is to return getOutputStream() on the wrapped response object.\n\tServletOutputStream getOutputStream();\n\t// Returns a wrapper around the JspWriter of the including page.\n\tPrintWriter getWriter();\n\t// Clears the output buffer of the JspWriter associated with the including page.\n\tvoid resetBuffer();\n}", "des": "ServletResponseWrapper used by the JSP 'include' action."}
{"index": 11409, "repo": "tomcat-api-10.1", "code": "Class SessionMessageImpl {\n\tString getContextName();\n\t// returns the event type\n\tint getEventType();\n\t// clear text event type name (for logging purpose only)\n\tString getEventTypeString();\n\tbyte[] getSession();\n\tString getSessionID();\n\tlong getTimestamp();\n\tString getUniqueId();\n\t// set message send time but only the first setting works (one shot)\n\tvoid setTimestamp​(long time);\n}", "des": "Session cluster message"}
{"index": 11410, "repo": "tomcat-api-10.1", "code": "Class SessionsTask {\n\t// Create query string for the specified command.\n\tStringBuilder createQueryString​(String command);\n\t// Execute the requested operation.\n\tvoid execute();\n\tString getIdle();\n\tvoid setIdle​(String idle);\n}", "des": "Ant task that implements the /sessions command supported by the Tomcat manager application."}
{"index": 11411, "repo": "tomcat-api-10.1", "code": "Class SessionUtils {\n\tstatic long getInactiveTimeForSession​(Session in_session);\n\tstatic long getTTLForSession​(Session in_session);\n\tstatic long getUsedTimeForSession​(Session in_session);\n\tstatic Locale guessLocaleFromSession​(HttpSession in_session);\n\t// Try to get user locale from the session, if possible.\n\tstatic Locale guessLocaleFromSession​(Session in_session);\n\t// Try to get user from the session, if possible.\n\tstatic Object guessUserFromSession​(Session in_session);\n}", "des": "Utility methods on HttpSessions..."}
{"index": 11412, "repo": "tomcat-api-10.1", "code": "Class SetNextRule {\n\t// Process the end of this element.\n\tvoid end​(String namespace, String name);\n\t// Is exact matching being used.\n\tboolean isExactMatch();\n\t// Set whether exact matching is enabled.\n\tvoid setExactMatch​(boolean useExactMatch);\n}", "des": "Rule implementation that calls a method on the (top-1) (parent) object, passing the top object (child) as an argument."}
{"index": 11413, "repo": "tomcat-api-10.1", "code": "Class SimpleServerAuthContext {\n\t// Remove principals and/or credentials from the subject that were previously added by this authentication mechanism.\n\tvoid cleanSubject​(MessageInfo messageInfo, Subject subject);\n\t// Secure (authenticate) the response.\n\tAuthStatus secureResponse​(MessageInfo messageInfo, Subject serviceSubject);\n\t// Validate the request.\n\tAuthStatus validateRequest​(MessageInfo messageInfo, Subject clientSubject, Subject serviceSubject);\n}", "des": "Basic implementation primarily intended for use when using third-party ServerAuthModule implementations that only provide the module."}
{"index": 11414, "repo": "tomcat-api-10.1", "code": "Class SizeException {\n\t// Retrieves the actual size of the request.\n\tlong getActualSize();\n\t// Retrieves the permitted size of the request.\n\tlong getPermittedSize();\n}", "des": "This exception is thrown, if a requests permitted size is exceeded."}
{"index": 11415, "repo": "tomcat-api-10.1", "code": "Enum SocketEvent {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SocketEvent valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SocketEvent[] values();\n}", "des": "Defines events that occur per socket that require further processing by the container."}
{"index": 11416, "repo": "tomcat-api-10.1", "code": "Class SSIFilter {\n\t// The doFilter method of the Filter is called by the container each time a request/response pair is passed through the chain due to a client request for a resource at the end of the chain.\n\tvoid doFilter​(ServletRequest request, ServletResponse response, FilterChain chain);\n\t// Convenience method for sub-classes to save them having to call super.init(config).\n\tvoid init();\n}", "des": "Filter to process SSI requests within a webpage."}
{"index": 11417, "repo": "tomcat-api-10.1", "code": "Class SSLImplementation {\n\t// Obtain an instance (not a singleton) of the implementation with the given class name.\n\tstatic SSLImplementation getInstance​(String className);\n\t// Obtain an instance of SSLSupport.\n\tabstract SSLSupport getSSLSupport​(SSLSession session, Map<String,​List<String>> additionalAttributes);\n\tabstract SSLUtil getSSLUtil​(SSLHostConfigCertificate certificate);\n}", "des": "Provides a factory and base implementation for the Tomcat specific mechanism that allows alternative SSL/TLS implementations to be used without requiring the implementation of a full JSSE provider."}
{"index": 11418, "repo": "tomcat-api-10.1", "code": "Interface SSLSupport {\n\t// The cipher suite being used on this connection.\n\tString getCipherSuite();\n\t// Get the keysize.\n\tInteger getKeySize();\n\t// The server certificate chain (if any) that were sent to the peer.\n\tdefault X509Certificate[] getLocalCertificateChain();\n\t// The client certificate chain (if any).\n\tX509Certificate[] getPeerCertificateChain();\n\tString getProtocol();\n\tString getRequestedCiphers();\n\tString getRequestedProtocols();\n\t// The current session Id.\n\tString getSessionId();\n}", "des": "Defines an interface to interact with SSL sessions."}
{"index": 11419, "repo": "tomcat-api-10.1", "code": "Interface SSLUtil {\n\tvoid configureSessionContext​(SSLSessionContext sslSessionContext);\n\tSSLContext createSSLContext​(List<String> negotiableProtocols);\n\t// The set of enabled ciphers is the intersection of the implemented ciphers and the configured ciphers.\n\tString[] getEnabledCiphers();\n\t// The set of enabled protocols is the intersection of the implemented protocols and the configured protocols.\n\tString[] getEnabledProtocols();\n\tKeyManager[] getKeyManagers();\n\tTrustManager[] getTrustManagers();\n}", "des": "Provides a common interface for SSLImplementations to create the necessary JSSE implementation objects for TLS connections created via the JSSE API."}
{"index": 11420, "repo": "tomcat-api-10.1", "code": "Class StandardServerSF {\n\t// Store the specified Server properties.\n\tvoid store​(PrintWriter aWriter, int indent, Object aServer);\n\t// Store the specified server element children.\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aObject, StoreDescription parentDesc);\n}", "des": "Store server.xml Server element and children ( Listener,GlobalNamingResource,Service)"}
{"index": 11421, "repo": "tomcat-api-10.1", "code": "Class StatusManagerServlet {\n\t// Finalize this servlet.\n\tvoid destroy();\n\t// Process a GET request for the specified resource.\n\tvoid doGet​(HttpServletRequest request, HttpServletResponse response);\n\tvoid handleNotification​(Notification notification, Object handback);\n\t// Initialize this servlet.\n\tvoid init();\n}", "des": "This servlet will display a complete status of the HTTP/1.1 connector."}
{"index": 11422, "repo": "tomcat-api-10.1", "code": "Class StoreFactoryRule {\n\t// Handle the beginning of an XML element.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Create new instance from attribute className!\n\tprotected Object newInstance​(String attr, String defaultName, Attributes attributes);\n}", "des": "Rule that creates a new IStoreFactory instance, and associates it with the top object on the stack (which must implement IStoreFactory)."}
{"index": 11423, "repo": "tomcat-api-10.1", "code": "Class StoreLoader {\n\t// Create and configure the Digester we will be using for setup store registry.\n\tprotected static Digester createDigester();\n\tStoreRegistry getRegistry();\n\tURL getRegistryResource();\n\t// Load registry configuration.\n\tvoid load​(String path);\n\tvoid setRegistry​(StoreRegistry registry);\n}", "des": "XML Format"}
{"index": 11424, "repo": "tomcat-api-10.1", "code": "Class StringManager {\n\tstatic StringManager getManager​(Class<?> clazz);\n\t// Get the StringManager for a particular package.\n\tstatic StringManager getManager​(String packageName);\n\t// Get a string from the underlying resource bundle or return null if the String is not found.\n\tString getString​(String key);\n\t// Get a string from the underlying resource bundle and format it with the given set of arguments.\n\tString getString​(String key, Object... args);\n}", "des": "An internationalization / localization helper class which reduces the bother of handling ResourceBundles and takes care of the common cases of message formatting which otherwise require the creation of Object arrays and such."}
{"index": 11425, "repo": "tomcat-api-10.1", "code": "Class StringUtils {\n\t// Encodes the given string into a sequence of bytes using the UTF-8 charset, storing the result into a new byte array.\n\tstatic byte[] getBytesUtf8​(String string);\n\t// Constructs a new String by decoding the specified array of bytes using the US-ASCII charset.\n\tstatic String newStringUsAscii​(byte[] bytes);\n\t// Constructs a new String by decoding the specified array of bytes using the UTF-8 charset.\n\tstatic String newStringUtf8​(byte[] bytes);\n}", "des": "Converts String to and from bytes using the encodings required by the Java specification."}
{"index": 11426, "repo": "tomcat-api-10.1", "code": "Class ThreadLocalLeakPreventionListener {\n\t// Acknowledge the occurrence of the specified event.\n\tvoid containerEvent​(ContainerEvent event);\n\t// Create a lifecycle listener which will then be added to the specified context.\n\tprotected LifecycleListener createLifecycleListener​(Context context);\n\t// Listens for LifecycleEvent for the start of the Server to initialize itself and then for after_stop events of each Context.\n\tvoid lifecycleEvent​(LifecycleEvent event);\n}", "des": "A LifecycleListener that triggers the renewal of threads in Executor pools when a Context is being stopped to avoid thread-local related memory leaks."}
{"index": 11427, "repo": "tomcat-api-10.1", "code": "Class ThrowableCallStack {\n\t// Clears the current stack trace snapshot.\n\tvoid clear();\n\t// Takes a snapshot of the current call stack.\n\tvoid fillInStackTrace();\n\t// Prints the current stack trace if available to a PrintWriter.\n\tboolean printStackTrace​(PrintWriter writer);\n}", "des": "CallStack strategy that uses the stack trace from a Throwable."}
{"index": 11428, "repo": "tomcat-api-10.1", "code": "Class Tomcat.ExistingStandardWrapper {\n\t// Return the available date/time for this servlet, in milliseconds since the epoch.\n\tlong getAvailable();\n\tServlet getServlet();\n\tString getServletClass();\n\tboolean isUnavailable();\n\t// Load and initialize an instance of this servlet, if there is not already an initialized instance.\n\tServlet loadServlet();\n}", "des": "Helper class for wrapping existing servlets."}
{"index": 11429, "repo": "tomcat-api-10.1", "code": "Interface TrackedUse {\n\t// Deprecated. Use getLastUsedInstant() which offers the best precision.\n\tlong getLastUsed();\n\t// Gets the last Instant this object was used.\n\tdefault Instant getLastUsedInstant();\n}", "des": "Allows pooled objects to make information available about when and how they were used available to the object pool."}
{"index": 11430, "repo": "tomcat-api-10.1", "code": "Class TransactionFactory {\n\t// If a default factory is available for the given reference type, create the default factory.\n\tprotected ObjectFactory getDefaultFactory​(Reference ref);\n\t// If this reference is a link to another JNDI object, obtain that object.\n\tprotected Object getLinked​(Reference ref);\n\t// Determines if this factory supports processing the provided reference object.\n\tprotected boolean isReferenceTypeSupported​(Object obj);\n}", "des": "Object factory for User transactions."}
{"index": 11431, "repo": "tomcat-api-10.1", "code": "Class TrapException {\n\t// Gets invoked each time an operation on Connection is invoked.\n\tObject invoke​(Object proxy, Method method, Object[] args);\n\tboolean isDeclaredException​(Method m, Class<?> clazz);\n\t// no-op for this interceptor. no state is stored.\n\tvoid reset​(ConnectionPool parent, PooledConnection con);\n}", "des": "Interceptor that traps any unhandled exception types and throws an exception that has been declared by the method called, or throw an SQLException if it is declared."}
{"index": 11432, "repo": "tomcat-api-10.1", "code": "Class Txt2Html {\n\t// Sets the files to be converted into HTML\n\tvoid addFileset​(org.apache.tools.ant.types.FileSet fs);\n\t// Perform the conversion\n\tvoid execute();\n\t// Sets the directory to contain the resulting files\n\tvoid setTodir​(File todir);\n}", "des": "Ant task to convert a given set of files from Text to HTML."}
{"index": 11433, "repo": "tomcat-api-10.1", "code": "Class UDecoder {\n\t// URLDecode, will modify the source.\n\tvoid convert​(ByteChunk mb, boolean query);\n\t// URLDecode, will modify the source.\n\tvoid convert​(ByteChunk mb, EncodedSolidusHandling encodedSolidusHandling);\n\t// Decode and return the specified URL-encoded String.\n\tstatic String URLDecode​(String str, Charset charset);\n}", "des": "All URL decoding happens here."}
{"index": 11434, "repo": "tomcat-api-10.1", "code": "Enum UserDataHelper.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic UserDataHelper.Mode valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic UserDataHelper.Mode[] values();\n}", "des": "Log mode for the next log message."}
{"index": 11435, "repo": "tomcat-api-10.1", "code": "Class UserMBean {\n\t// Add a new Group to those this user belongs to.\n\tvoid addGroup​(String groupname);\n\t// Add a new Role to those this user belongs to.\n\tvoid addRole​(String rolename);\n\tString[] getGroups();\n\tString[] getRoles();\n\t// Remove a Group from those this user belongs to.\n\tvoid removeGroup​(String groupname);\n\t// Remove a Role from those this user belongs to.\n\tvoid removeRole​(String rolename);\n}", "des": "A ModelMBean implementation for the org.apache.catalina.User component."}
{"index": 11436, "repo": "tomcat-api-10.1", "code": "Interface Valve {\n\t// Execute a periodic task, such as reloading, etc.\n\tvoid backgroundProcess();\n\t// Returns the next Valve in this pipeline, or null if this is the last Valve in the pipeline.\n\tValve getNext();\n\t// Perform request processing as required by this Valve.\n\tvoid invoke​(Request request, Response response);\n\tboolean isAsyncSupported();\n\t// Set the next Valve in the pipeline containing this Valve.\n\tvoid setNext​(Valve valve);\n}", "des": "A Valve is a request processing component associated with a particular Container."}
{"index": 11437, "repo": "tomcat-api-10.1", "code": "Class WarWatcher {\n\t// add cluster war to the watcher state\n\tprotected void addWarInfo​(File warfile);\n\t// check for modification and send notification to listener\n\tvoid check();\n\t// clear watcher state\n\tvoid clear();\n}", "des": "The WarWatcher watches the deployDir for changes made to the directory (adding new WAR files->deploy or remove WAR files->undeploy) and notifies a listener of the changes made."}
{"index": 11438, "repo": "tomcat-api-10.1", "code": "Class WebRuleSet {\n\t// Add the set of Rule instances defined in this RuleSet to the specified Digester instance, associating them with our namespace URI (if any).\n\tvoid addRuleInstances​(Digester digester);\n\tprotected void configureInjectionRules​(Digester digester, String base);\n\tprotected void configureNamingRules​(Digester digester);\n\t// Reset counter used for validating the web.xml file.\n\tvoid recycle();\n}", "des": "RuleSet for processing the contents of a web application deployment descriptor (/WEB-INF/web.xml) resource."}
{"index": 11439, "repo": "tomcat-api-10.1", "code": "Class WsContextListener {\n\t// Notification that the servlet context is about to be shut down.\n\tvoid contextDestroyed​(ServletContextEvent sce);\n\t// Notification that the web application initialization process is starting.\n\tvoid contextInitialized​(ServletContextEvent sce);\n}", "des": "In normal usage, this ServletContextListener does not need to be explicitly configured as the WsSci performs all the necessary bootstrap and installs this listener in the ServletContext."}
{"index": 11440, "repo": "tomcat-api-10.1", "code": "Class WsFilter {\n\t// The doFilter method of the Filter is called by the container each time a request/response pair is passed through the chain due to a client request for a resource at the end of the chain.\n\tvoid doFilter​(ServletRequest request, ServletResponse response, FilterChain chain);\n\t// Convenience method for sub-classes to save them having to call super.init(config).\n\tvoid init();\n}", "des": "Handles the initial HTTP connection for WebSocket connections."}
{"index": 11441, "repo": "tomcat-api-10.1", "code": "Enum WsFrameBase.ReadState {\n\tboolean isSuspended();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic WsFrameBase.ReadState valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic WsFrameBase.ReadState[] values();\n}", "des": "WAITING - not suspended Server case: waiting for a notification that data is ready to be read from the socket, the socket is registered to the poller Client case: data has been read from the socket and is waiting for data to be processed PROCESSING - not suspended Server case: reading from the socket and processing the data Client case: processing the data if such has already been read and more data will be read from the socket SUSPENDING_WAIT - suspended, a call to suspend() was made while in WAITING state."}
{"index": 11442, "repo": "tomcat-api-10.1", "code": "Interface XAConnectionFactory {\n\t// Create a new Connection in an implementation specific fashion.\n\tConnection createConnection();\n\t// Gets the TransactionRegistry for this connection factory which contains a the XAResource for every connection created by this factory.\n\tTransactionRegistry getTransactionRegistry();\n}", "des": "XAConnectionFactory is an extension of ConnectionFactory used to create connections in a transaction managed environment."}
{"index": 11443, "repo": "tomcat-servletapi-10.1", "code": "Class AsyncEvent {\n\t// Obtain the asynchronous context associated with the event.\n\tAsyncContext getAsyncContext();\n\t// Obtain the request associated with the event.\n\tServletRequest getSuppliedRequest();\n\t// Obtain the response associated with the event.\n\tServletResponse getSuppliedResponse();\n\t// Obtain the throwable associated with the event.\n\tjava.lang.Throwable getThrowable();\n}", "des": "Used to pass data to the methods of AsyncListener."}
{"index": 11444, "repo": "tomcat-servletapi-10.1", "code": "Enum DispatcherType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DispatcherType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DispatcherType[] values();\n}", "des": "Enumeration of dispatcher types."}
{"index": 11445, "repo": "tomcat-servletapi-10.1", "code": "Class HttpConstraintElement {\n\t// TODO\n\tServletSecurity.EmptyRoleSemantic getEmptyRoleSemantic();\n\t// TODO\n\tjava.lang.String[] getRolesAllowed();\n\t// TODO\n\tServletSecurity.TransportGuarantee getTransportGuarantee();\n}", "des": "Equivalent of HttpConstraint for programmatic configuration of security constraints."}
{"index": 11446, "repo": "tomcat-servletapi-10.1", "code": "Interface HttpSessionActivationListener {\n\t// Notification that the session has just been activated.\n\tdefault void sessionDidActivate​(HttpSessionEvent se);\n\t// Notification that the session is about to be passivated.\n\tdefault void sessionWillPassivate​(HttpSessionEvent se);\n}", "des": "Objects that are bound to a session may listen to container events notifying them that sessions will be passivated and that session will be activated."}
{"index": 11447, "repo": "tomcat-servletapi-10.1", "code": "Interface HttpSessionAttributeListener {\n\t// Notification that an attribute has been added to a session.\n\tdefault void attributeAdded​(HttpSessionBindingEvent se);\n\t// Notification that an attribute has been removed from a session.\n\tdefault void attributeRemoved​(HttpSessionBindingEvent se);\n\t// Notification that an attribute has been replaced in a session.\n\tdefault void attributeReplaced​(HttpSessionBindingEvent se);\n}", "des": "This listener interface can be implemented in order to get notifications of changes to the attribute lists of sessions within this web application."}
{"index": 11448, "repo": "tomcat-servletapi-10.1", "code": "Class HttpSessionBindingEvent {\n\t// Returns the name with which the attribute is bound to or unbound from the session.\n\tjava.lang.String getName();\n\t// Get the session that changed.\n\tHttpSession getSession();\n\t// Returns the value of the attribute that has been added, removed or replaced.\n\tjava.lang.Object getValue();\n}", "des": "Events of this type are either sent to an object that implements HttpSessionBindingListener when it is bound or unbound from a session, or to an HttpSessionAttributeListener that has been configured in the deployment descriptor when any attribute is bound, unbound or replaced in a session."}
{"index": 11449, "repo": "tomcat-servletapi-10.1", "code": "Interface HttpSessionBindingListener {\n\t// Notifies the object that it is being bound to a session and identifies the session.\n\tdefault void valueBound​(HttpSessionBindingEvent event);\n\t// Notifies the object that it is being unbound from a session and identifies the session.\n\tdefault void valueUnbound​(HttpSessionBindingEvent event);\n}", "des": "Causes an object to be notified when it is bound to or unbound from a session."}
{"index": 11450, "repo": "tomcat-servletapi-10.1", "code": "Interface HttpSessionListener {\n\t// Notification that a session was created.\n\tdefault void sessionCreated​(HttpSessionEvent se);\n\t// Notification that a session is about to be invalidated.\n\tdefault void sessionDestroyed​(HttpSessionEvent se);\n}", "des": "Implementations of this interface are notified of changes to the list of active sessions in a web application."}
{"index": 11451, "repo": "tomcat-servletapi-10.1", "code": "Interface HttpUpgradeHandler {\n\t// This method is called after the upgraded connection has been closed.\n\tvoid destroy();\n\t// This method is called once the request/response pair where HttpServletRequest.upgrade(Class) is called has completed processing and is the point where control of the connection passes from the container to the HttpUpgradeHandler.\n\tvoid init​(WebConnection connection);\n}", "des": "Interface between the HTTP upgrade process and the new protocol."}
{"index": 11452, "repo": "tomcat-servletapi-10.1", "code": "Interface JspConfigDescriptor {\n\t// Provide the set of JSP property groups obtained from the <jsp-config> elements in the web application's deployment descriptors.\n\tjava.util.Collection<JspPropertyGroupDescriptor> getJspPropertyGroups();\n\t// Provide the set of tag library descriptors obtained from the <jsp-config> elements in the web application's deployment descriptors.\n\tjava.util.Collection<TaglibDescriptor> getTaglibs();\n}", "des": "This interface exposes the JSP specific configuration information obtain ed from the deployment descriptors."}
{"index": 11453, "repo": "tomcat-servletapi-10.1", "code": "Enum MappingMatch {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic MappingMatch valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic MappingMatch[] values();\n}", "des": "Represents the ways that a request can be mapped to a servlet"}
{"index": 11454, "repo": "tomcat-servletapi-10.1", "code": "Class MultipartConfigElement {\n\t// Obtain the size above which the file is save in the temporary location rather than retained in memory.\n\tint getFileSizeThreshold();\n\t// Obtain the location where temporary files should be stored.\n\tjava.lang.String getLocation();\n\t// Obtain the maximum permitted size for a single file.\n\tlong getMaxFileSize();\n\t// Obtain the maximum permitted size for a single request.\n\tlong getMaxRequestSize();\n}", "des": "The programmatic equivalent of MultipartConfig used to configure multi-part handling for a Servlet when registering a Servlet via code."}
{"index": 11455, "repo": "tomcat-servletapi-10.1", "code": "Interface ReadListener {\n\t// Invoked when the request body has been fully read.\n\tvoid onAllDataRead();\n\t// Invoked when data is available to read.\n\tvoid onDataAvailable();\n\t// Invoked if an error occurs while reading the request body.\n\tvoid onError​(java.lang.Throwable throwable);\n}", "des": "Receives notification of read events when using non-blocking IO."}
{"index": 11456, "repo": "tomcat-servletapi-10.1", "code": "Interface RequestDispatcher {\n\t// Forwards a request from a servlet to another resource (servlet, JSP file, or HTML file) on the server.\n\tvoid forward​(ServletRequest request, ServletResponse response);\n\t// Includes the content of a resource (servlet, JSP page, HTML file) in the response.\n\tvoid include​(ServletRequest request, ServletResponse response);\n}", "des": "Defines an object that receives requests from the client and sends them to any resource (such as a servlet, HTML file, or JSP file) on the server."}
{"index": 11457, "repo": "tomcat-servletapi-10.1", "code": "Class ServletContextAttributeEvent {\n\t// Return the name of the attribute that changed on the ServletContext.\n\tjava.lang.String getName();\n\t// Returns the value of the attribute that has been added, removed, or replaced.\n\tjava.lang.Object getValue();\n}", "des": "This is the event class for notifications about changes to the attributes of the servlet context of a web application."}
{"index": 11458, "repo": "tomcat-servletapi-10.1", "code": "Interface ServletContextAttributeListener {\n\t// Notification that a new attribute was added to the servlet context.\n\tdefault void attributeAdded​(ServletContextAttributeEvent scae);\n\t// Notification that an existing attribute has been removed from the servlet context.\n\tdefault void attributeRemoved​(ServletContextAttributeEvent scae);\n\t// Notification that an attribute on the servlet context has been replaced.\n\tdefault void attributeReplaced​(ServletContextAttributeEvent scae);\n}", "des": "Implementations of this interface receive notifications of changes to the attribute list on the servlet context of a web application."}
{"index": 11459, "repo": "tomcat-servletapi-10.1", "code": "Interface ServletContextListener {\n\t// Notification that the servlet context is about to be shut down.\n\tdefault void contextDestroyed​(ServletContextEvent sce);\n\t// Notification that the web application initialization process is starting.\n\tdefault void contextInitialized​(ServletContextEvent sce);\n}", "des": "Implementations of this interface receive notifications about changes to the servlet context of the web application they are part of."}
{"index": 11460, "repo": "tomcat-servletapi-10.1", "code": "Class ServletInputStream {\n\t// Has the end of this InputStream been reached?\n\tabstract boolean isFinished();\n\t// Can data be read from this InputStream without blocking?\n\tabstract boolean isReady();\n\t// Reads the input stream, one line at a time.\n\tint readLine​(byte[] b, int off, int len);\n\t// Sets the ReadListener for this ServletInputStream and thereby switches to non-blocking IO.\n\tabstract void setReadListener​(ReadListener listener);\n}", "des": "Provides an input stream for reading binary data from a client request, including an efficient readLine method for reading data one line at a time."}
{"index": 11461, "repo": "tomcat-servletapi-10.1", "code": "Interface ServletRegistration {\n\t// Adds a servlet mapping with the given URL patterns for the Servlet represented by this ServletRegistration.\n\tjava.util.Set<java.lang.String> addMapping​(java.lang.String... urlPatterns);\n\t// Gets the currently available mappings of the Servlet represented by this ServletRegistration.\n\tjava.util.Collection<java.lang.String> getMappings();\n\t// Obtain the name of the user / group under which the Servlet has been configured to run.\n\tjava.lang.String getRunAsRole();\n}", "des": "Interface through which a Servlet may be further configured."}
{"index": 11462, "repo": "tomcat-servletapi-10.1", "code": "Class ServletRequestAttributeEvent {\n\t// Return the name of the attribute that changed on the ServletRequest.\n\tjava.lang.String getName();\n\t// Returns the value of the attribute that has been added, removed or replaced.\n\tjava.lang.Object getValue();\n}", "des": "This is the event class for notifications of changes to the attributes of the servlet request in an application."}
{"index": 11463, "repo": "tomcat-servletapi-10.1", "code": "Interface ServletRequestAttributeListener {\n\t// Notification that a new attribute was added to the servlet request.\n\tdefault void attributeAdded​(ServletRequestAttributeEvent srae);\n\t// Notification that an existing attribute has been removed from the servlet request.\n\tdefault void attributeRemoved​(ServletRequestAttributeEvent srae);\n\t// Notification that an attribute was replaced on the servlet request.\n\tdefault void attributeReplaced​(ServletRequestAttributeEvent srae);\n}", "des": "A ServletRequestAttributeListener can be implemented by the developer interested in being notified of request attribute changes."}
{"index": 11464, "repo": "tomcat-servletapi-10.1", "code": "Class ServletRequestEvent {\n\t// Get the associated ServletContext.\n\tServletContext getServletContext();\n\t// Get the associated ServletRequest.\n\tServletRequest getServletRequest();\n}", "des": "Events of this kind indicate lifecycle events for a ServletRequest."}
{"index": 11465, "repo": "tomcat-servletapi-10.1", "code": "Interface ServletRequestListener {\n\t// The request is about to go out of scope of the web application.\n\tdefault void requestDestroyed​(ServletRequestEvent sre);\n\t// The request is about to come into scope of the web application.\n\tdefault void requestInitialized​(ServletRequestEvent sre);\n}", "des": "A ServletRequestListener can be implemented by the developer interested in being notified of requests coming in and out of scope in a web component."}
{"index": 11466, "repo": "tomcat-servletapi-10.1", "code": "Enum ServletSecurity.EmptyRoleSemantic {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ServletSecurity.EmptyRoleSemantic valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ServletSecurity.EmptyRoleSemantic[] values();\n}", "des": "Represents the two possible values of the empty role semantic, active when a list of role names is empty."}
{"index": 11467, "repo": "tomcat-servletapi-10.1", "code": "Enum ServletSecurity.TransportGuarantee {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ServletSecurity.TransportGuarantee valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ServletSecurity.TransportGuarantee[] values();\n}", "des": "Represents the two possible values of data transport, encrypted or not."}
{"index": 11468, "repo": "tomcat-servletapi-10.1", "code": "Class ServletSecurityElement {\n\t// Obtain the collection of security constraints configured for specific methods.\n\tjava.util.Collection<HttpMethodConstraintElement> getHttpMethodConstraints();\n\t// Obtain the collection HTTP methods for which security constraints have been defined.\n\tjava.util.Collection<java.lang.String> getMethodNames();\n}", "des": "The programmatic equivalent of ServletSecurity used to configre security constraints for a Servlet."}
{"index": 11469, "repo": "tomcat-servletapi-10.1", "code": "Enum SessionTrackingMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SessionTrackingMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SessionTrackingMode[] values();\n}", "des": "Defines the permitted options for configuring the session tracking mode."}
{"index": 11470, "repo": "tomcat-servletapi-10.1", "code": "Interface TaglibDescriptor {\n\t// Obtain the location of the tag library.\n\tjava.lang.String getTaglibLocation();\n\t// Obtain the URI for the tag library.\n\tjava.lang.String getTaglibURI();\n}", "des": "Represents a taglib descriptor definitions in the deployment descriptor."}
{"index": 11471, "repo": "tomcat-servletapi-10.1", "code": "Class UnavailableException {\n\t// Returns the number of seconds the servlet expects to be temporarily unavailable.\n\tint getUnavailableSeconds();\n\t// Returns a boolean indicating whether the servlet is permanently unavailable.\n\tboolean isPermanent();\n}", "des": "Defines an exception that a servlet or filter throws to indicate that it is permanently or temporarily unavailable."}
{"index": 11472, "repo": "tomcat-servletapi-10.1", "code": "Interface WebConnection {\n\t// Provides access to the ServletInputStream for reading data from the client.\n\tServletInputStream getInputStream();\n\t// Provides access to the ServletOutputStream for writing data to the client.\n\tServletOutputStream getOutputStream();\n}", "des": "The interface used by an HttpUpgradeHandler to interact with an upgraded HTTP connection."}
{"index": 11473, "repo": "tomcat-servletapi-10.1", "code": "Interface WriteListener {\n\t// Invoked if an error occurs while writing the response.\n\tvoid onError​(java.lang.Throwable throwable);\n\t// Invoked when it it possible to write data without blocking.\n\tvoid onWritePossible();\n}", "des": "Receives notification of write events when using non-blocking IO."}
{"index": 11474, "repo": "commons-configuration2-2.9.0", "code": "Class AbstractYAMLBasedConfiguration {\n\t// Constructs a YAML map, i.e.\n\tprotected Map<String,​Object> constructMap​(ImmutableNode node);\n\t// Loads this configuration from the content of the specified map.\n\tprotected void load​(Map<String,​Object> map);\n}", "des": "A base class for configuration implementations based on YAML structures."}
{"index": 11475, "repo": "commons-configuration2-2.9.0", "code": "Class BaseConfigurationXMLReader {\n\t// Gets the actual configuration to be processed.\n\tConfiguration getConfiguration();\n\t// Gets the configuration to be processed.\n\tConfiguration getParsedConfiguration();\n\t// The main SAX event generation method.\n\tprotected void processKeys();\n\t// Sets the configuration to be processed.\n\tvoid setConfiguration​(Configuration conf);\n}", "des": "A specialized SAX2 XML parser that processes configuration objects."}
{"index": 11476, "repo": "commons-configuration2-2.9.0", "code": "Interface BeanCreationContext {\n\t// Creates a bean based on the given BeanDeclaration.\n\tObject createBean​(BeanDeclaration data);\n\t// Gets the class of the bean to be created.\n\tClass<?> getBeanClass();\n\t// Gets the BeanDeclaration with the data for the new bean.\n\tBeanDeclaration getBeanDeclaration();\n\t// Gets the (optional) parameter object for the bean factory.\n\tObject getParameter();\n\t// Initializes a bean's property based on the given BeanDeclaration.\n\tvoid initBean​(Object bean, BeanDeclaration data);\n}", "des": "Definition of a context object storing all required information for the creation of a bean."}
{"index": 11477, "repo": "commons-configuration2-2.9.0", "code": "Interface BeanFactory {\n\t// Creates a bean instance for the given context object.\n\tObject createBean​(BeanCreationContext bcc);\n\t// Gets the default bean class of this bean factory.\n\tClass<?> getDefaultBeanClass();\n}", "des": "Definition of an interface for bean factories."}
{"index": 11478, "repo": "commons-configuration2-2.9.0", "code": "Enum BuilderConfigurationWrapperFactory.EventSourceSupport {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic BuilderConfigurationWrapperFactory.EventSourceSupport valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic BuilderConfigurationWrapperFactory.EventSourceSupport[] values();\n}", "des": "An enumeration class with different options for supporting the EventSource interface in generated ImmutableConfiguration proxies."}
{"index": 11479, "repo": "commons-configuration2-2.9.0", "code": "Class CatalogResolver.Catalog {\n\t// Load the catalogs.\n\tvoid loadSystemCatalogs();\n\t// Performs character normalization on a URI reference.\n\tprotected String normalizeURI​(String uriref);\n\t// Parses the specified catalog file.\n\tvoid parseCatalog​(String baseDir, String fileName);\n}", "des": "Overrides the Catalog implementation to use the underlying FileSystem."}
{"index": 11480, "repo": "commons-configuration2-2.9.0", "code": "Class CombinedConfigurationBuilderProvider {\n\t// Creates a new, uninitialized instance of the builder class managed by this provider.\n\tprotected BasicConfigurationBuilder<? extends Configuration> createBuilder​(ConfigurationDeclaration decl, Collection<BuilderParameters> params);\n\t// Initializes the parameter objects with data stored in the current bean declaration.\n\tprotected void initializeParameterObjects​(ConfigurationDeclaration decl, Collection<BuilderParameters> params);\n}", "des": "A specialized ConfigurationBuilderProvider implementation which deals with combined configuration builders."}
{"index": 11481, "repo": "commons-configuration2-2.9.0", "code": "Class CombinedLocationStrategy {\n\t// Gets a (unmodifiable) collection with the sub strategies managed by this object.\n\tCollection<FileLocationStrategy> getSubStrategies();\n\t// Tries to locate the specified file.\n\tURL locate​(FileSystem fileSystem, FileLocator locator);\n}", "des": "A specialized implementation of a FileLocationStrategy which encapsulates an arbitrary number of FileLocationStrategy objects."}
{"index": 11482, "repo": "commons-configuration2-2.9.0", "code": "Class CombinedReloadingController {\n\t// Gets the ReloadingDetector used by this controller.\n\tReloadingDetector getDetector();\n\t// Gets a (unmodifiable) collection with the sub controllers managed by this combined controller.\n\tCollection<ReloadingController> getSubControllers();\n\t// Resets the reloading state of all managed sub controllers unconditionally.\n\tvoid resetInitialReloadingState();\n}", "des": "A specialized ReloadingController implementation which manages an arbitrary number of other ReloadingController objects."}
{"index": 11483, "repo": "commons-configuration2-2.9.0", "code": "Class ConfigurationConverter {\n\t// Convert a standard Properties class into a configuration class.\n\tstatic Configuration getConfiguration​(Properties props);\n\t// Convert a Configuration class into a Map class.\n\tstatic Map<Object,​Object> getMap​(Configuration config);\n\t// Convert a Configuration class into a Properties class.\n\tstatic Properties getProperties​(Configuration config);\n\t// Convert a Configuration class into a Properties class.\n\tstatic Properties getProperties​(ImmutableConfiguration config);\n}", "des": "Configuration converter."}
{"index": 11484, "repo": "commons-configuration2-2.9.0", "code": "Class ConfigurationErrorEvent {\n\t// Gets the cause of this error event.\n\tThrowable getCause();\n\t// Gets the EventType of the operation which caused this error.\n\tEventType<?> getErrorOperationType();\n\t// Gets the name of the property that was accessed when this error occurred.\n\tString getPropertyName();\n\t// Gets the value of the property that was accessed when this error occurred.\n\tObject getPropertyValue();\n}", "des": "An event class that is used for reporting errors that occurred while processing configuration properties."}
{"index": 11485, "repo": "commons-configuration2-2.9.0", "code": "Class ConfigurationEvent {\n\t// Gets the name of the affected property.\n\tString getPropertyName();\n\t// Gets the value of the affected property if available.\n\tObject getPropertyValue();\n\t// Returns a flag if this event was generated before or after an update.\n\tboolean isBeforeUpdate();\n}", "des": "An event class for reporting updates on a configuration object."}
{"index": 11486, "repo": "commons-configuration2-2.9.0", "code": "Class ConfigurationLookup {\n\t// Gets the ImmutableConfiguration used by this object.\n\tImmutableConfiguration getConfiguration();\n\t// Looks up the value of the specified variable.\n\tObject lookup​(String variable);\n}", "des": "A specialized implementation of the Lookup interface which uses a Configuration object to resolve variables."}
{"index": 11487, "repo": "commons-configuration2-2.9.0", "code": "Class ConfigurationMap {\n\t// Returns a set with the entries contained in this configuration-based map.\n\tSet<Map.Entry<Object,​Object>> entrySet();\n\t// Gets the value of the specified key.\n\tObject get​(Object key);\n\t// Gets the wrapped Configuration object.\n\tConfiguration getConfiguration();\n\t// Stores the value for the specified key.\n\tObject put​(Object key, Object value);\n}", "des": "The ConfigurationMap wraps a configuration-collection Configuration instance to provide a Map interface."}
{"index": 11488, "repo": "commons-configuration2-2.9.0", "code": "Interface ConfigurationNodeVisitor<T> {\n\t// Returns a flag whether the current visit process should be aborted.\n\tboolean terminate();\n\t// Visits the specified node after after its children - if existing - have been processed.\n\tvoid visitAfterChildren​(T node, NodeHandler<T> handler);\n\t// Visits the specified node before the children of this node - if existing - are processed.\n\tvoid visitBeforeChildren​(T node, NodeHandler<T> handler);\n}", "des": "Definition of a Visitor interface for a configuration node structure."}
{"index": 11489, "repo": "commons-configuration2-2.9.0", "code": "Class ConfigurationNodeVisitorAdapter<T> {\n\t// Returns a flag whether the current visit process should be aborted.\n\tboolean terminate();\n\t// Visits the specified node after after its children - if existing - have been processed.\n\tvoid visitAfterChildren​(T node, NodeHandler<T> handler);\n\t// Visits the specified node before the children of this node - if existing - are processed.\n\tvoid visitBeforeChildren​(T node, NodeHandler<T> handler);\n}", "des": "A simple adapter class that simplifies writing custom node visitor implementations."}
{"index": 11490, "repo": "commons-configuration2-2.9.0", "code": "Class ConstantLookup {\n\t// Clears the shared cache with the so far resolved constants.\n\tstatic void clear();\n\t// Loads the class with the specified name.\n\tprotected Class<?> fetchClass​(String className);\n\t// Looks up a variable.\n\tObject lookup​(String var);\n\t// Determines the value of the specified constant member field of a class.\n\tprotected Object resolveField​(String className, String fieldName);\n}", "des": "Looks up constant fields in classes."}
{"index": 11491, "repo": "commons-configuration2-2.9.0", "code": "Interface ConversionHandler {\n\t// Converts a single object to the specified target type.\n\t<T> T to​(Object src, Class<T> targetCls, ConfigurationInterpolator ci);\n\t// Converts the given object to an array of the specified element type.\n\tObject toArray​(Object src, Class<?> elemClass, ConfigurationInterpolator ci);\n\t// Converts the given object to a collection of the specified type.\n\t<T> void toCollection​(Object src, Class<T> elemClass, ConfigurationInterpolator ci, Collection<T> dest);\n}", "des": "An interface defining the possible data type conversions supported by the configuration framework."}
{"index": 11492, "repo": "commons-configuration2-2.9.0", "code": "Class CopyObjectDefaultHandler {\n\t// Gets the source object of this handler.\n\tBuilderParameters getSource();\n\t// Initializes the specified parameters object with default values.\n\tvoid initializeDefaults​(Object parameters);\n}", "des": "A specialized implementation of DefaultParametersHandler that copies the properties of a BuilderParameters object (passed at construction time) onto the object to be initialized."}
{"index": 11493, "repo": "commons-configuration2-2.9.0", "code": "Class DefaultEntityResolver {\n\t// Gets a map with the entity IDs that have been registered using the registerEntityId() method.\n\tMap<String,​URL> getRegisteredEntities();\n\t// Registers the specified URL for the specified public identifier.\n\tvoid registerEntityId​(String publicId, URL entityURL);\n\t// Resolves the requested external entity.\n\tInputSource resolveEntity​(String publicId, String systemId);\n}", "des": "The DefaultEntityResolver used by XML Configurations."}
{"index": 11494, "repo": "commons-configuration2-2.9.0", "code": "Class DefaultListDelimiterHandler {\n\t// Escapes all values in the given list and concatenates them to a single string.\n\tObject escapeList​(List<?> values, ValueTransformer transformer);\n\t// Escapes the specified string.\n\tprotected String escapeString​(String s);\n\t// Gets the list delimiter character used by this instance.\n\tchar getDelimiter();\n\t// Actually splits the passed in string which is guaranteed to be not null.\n\tprotected Collection<String> splitString​(String s, boolean trim);\n}", "des": "The default implementation of the ListDelimiterHandler interface."}
{"index": 11495, "repo": "commons-configuration2-2.9.0", "code": "Enum DefaultLookups {\n\t// Gets the standard Lookup instance of this kind.\n\tLookup getLookup();\n\t// Gets the standard prefix for the lookup object of this kind.\n\tString getPrefix();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DefaultLookups valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DefaultLookups[] values();\n}", "des": "An enumeration class defining constants for built-in Lookup objects available for Configuration instances."}
{"index": 11496, "repo": "commons-configuration2-2.9.0", "code": "Class DisabledListDelimiterHandler {\n\t// Escapes all values in the given list and concatenates them to a single string.\n\tObject escapeList​(List<?> values, ValueTransformer transformer);\n\t// Escapes the specified string.\n\tprotected String escapeString​(String s);\n\t// Actually splits the passed in string which is guaranteed to be not null.\n\tprotected Collection<String> splitString​(String s, boolean trim);\n}", "des": "A specialized implementation of the ListDelimiterHandler interface which disables list splitting."}
{"index": 11497, "repo": "commons-configuration2-2.9.0", "code": "Enum DummyLookup {\n\t// Looks up the value of the specified variable.\n\tObject lookup​(String variable);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DummyLookup valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DummyLookup[] values();\n}", "des": "A simple dummy Lookup implementation."}
{"index": 11498, "repo": "commons-configuration2-2.9.0", "code": "Interface EntityRegistry {\n\t// Gets a map with the entity IDs that have been registered using the registerEntityId() method.\n\tMap<String,​URL> getRegisteredEntities();\n\t// Registers the specified URL for the specified public identifier.\n\tvoid registerEntityId​(String publicId, URL entityURL);\n}", "des": "Interface used for registering and retrieving PUBLICID to URL mappings."}
{"index": 11499, "repo": "commons-configuration2-2.9.0", "code": "Interface EntityResolverSupport {\n\t// Return the EntityResolver associated with the class.\n\tEntityResolver getEntityResolver();\n\t// Set the EntityResolver to associate with this class.\n\tvoid setEntityResolver​(EntityResolver resolver);\n}", "des": "Interface that identifies the class as using an EntityResolver"}
{"index": 11500, "repo": "commons-configuration2-2.9.0", "code": "Class EnvironmentConfiguration {\n\t// Adds a property to this configuration.\n\tprotected void addPropertyDirect​(String key, Object value);\n\t// Removes all properties from this configuration.\n\tprotected void clearInternal();\n\t// Removes a property from this configuration.\n\tprotected void clearPropertyDirect​(String key);\n}", "des": "A Configuration implementation that reads the platform specific environment variables using the map returned by System.getenv()."}
{"index": 11501, "repo": "commons-configuration2-2.9.0", "code": "Class Event {\n\t// Helper method for appending a representation for a property to the overall string representation for this object.\n\tprotected void appendPropertyRepresentation​(StringBuilder buf, String property, Object value);\n\t// Gets the type of this event.\n\tEventType<? extends Event> getEventType();\n}", "des": "The base class for all events generated by this library."}
{"index": 11502, "repo": "commons-configuration2-2.9.0", "code": "Class EventListenerList.EventListenerIterator<T extends Event> {\n\tboolean hasNext();\n\t// Obtains the next event listener in this iteration and invokes it with the given event object.\n\tvoid invokeNext​(Event event);\n\tEventListener<? super T> next();\n\t// This implementation always throws an exception.\n\tvoid remove();\n}", "des": "A special Iterator implementation used by the getEventListenerIterator() method."}
{"index": 11503, "repo": "commons-configuration2-2.9.0", "code": "Class EventListenerRegistrationData<T extends Event> {\n\t// Compares this object with another one.\n\tboolean equals​(Object obj);\n\t// Gets the event type for this listener registration.\n\tEventType<T> getEventType();\n\t// Gets the listener this registration is about.\n\tEventListener<? super T> getListener();\n}", "des": "A data class holding information about an event listener registration."}
{"index": 11504, "repo": "commons-configuration2-2.9.0", "code": "Interface EventSource {\n\t// Adds an event listener for the specified event type.\n\t<T extends Event>void addEventListener​(EventType<T> eventType, EventListener<? super T> listener);\n\t// Removes the event listener registration for the given event type and listener.\n\t<T extends Event>boolean removeEventListener​(EventType<T> eventType, EventListener<? super T> listener);\n}", "des": "An interface for configuration implementations which support registration of event listeners."}
{"index": 11505, "repo": "commons-configuration2-2.9.0", "code": "Class EventType<T extends Event> {\n\t// Returns a set with all event types that are super types of the specified type.\n\tstatic Set<EventType<?>> fetchSuperEventTypes​(EventType<?> eventType);\n\t// Gets the name of this event type.\n\tString getName();\n\t// Gets the super event type.\n\tEventType<? super T> getSuperType();\n\t// Checks whether an event type is derived from another type.\n\tstatic boolean isInstanceOf​(EventType<?> derivedType, EventType<?> baseType);\n}", "des": "A class representing an event type."}
{"index": 11506, "repo": "commons-configuration2-2.9.0", "code": "Interface FileBased {\n\t// Reads the content of this object from the given reader.\n\tvoid read​(Reader in);\n\t// Writes the content of this object to the given writer.\n\tvoid write​(Writer out);\n}", "des": "Definition of an interface to be implemented by objects which know how to read and write themselves from or to a character stream."}
{"index": 11507, "repo": "commons-configuration2-2.9.0", "code": "Class FileExtensionConfigurationBuilderProvider {\n\t// Determines the name of the configuration class produced by the builder.\n\tprotected String determineConfigurationClass​(ConfigurationDeclaration decl, Collection<BuilderParameters> params);\n\t// Gets the file extension of this provider.\n\tString getExtension();\n\t// Gets the name of the matching configuration class.\n\tString getMatchingConfigurationClass();\n}", "des": "A specialized implementation of ConfigurationBuilderProvider which determines the name of the result configuration class based on the extension of the file to load."}
{"index": 11508, "repo": "commons-configuration2-2.9.0", "code": "Class HierarchicalBuilderParametersImpl {\n\t// Inherits properties from the specified map.\n\tvoid inheritFrom​(Map<String,​?> source);\n\t// Sets the ExpressionEngine to be used when querying the configuration.\n\tHierarchicalBuilderParametersImpl setExpressionEngine​(ExpressionEngine engine);\n}", "des": "A specialized parameters object for hierarchical configurations."}
{"index": 11509, "repo": "commons-configuration2-2.9.0", "code": "Class HierarchicalConfigurationXMLReader<T> {\n\t// Gets the configuration object to be parsed.\n\tHierarchicalConfiguration<T> getConfiguration();\n\t// Gets the configuration object to be processed.\n\tConfiguration getParsedConfiguration();\n\t// Processes the actual configuration object to generate SAX parsing events.\n\tprotected void processKeys();\n\t// Sets the configuration object to be parsed.\n\tvoid setConfiguration​(HierarchicalConfiguration<T> config);\n}", "des": "A specialized SAX2 XML parser that \"parses\" hierarchical configuration objects."}
{"index": 11510, "repo": "commons-configuration2-2.9.0", "code": "Class HomeDirectoryLocationStrategy {\n\t// Gets the home directory.\n\tString getHomeDirectory();\n\t// Returns a flag whether the base path is to be taken into account when searching for a file.\n\tboolean isEvaluateBasePath();\n\t// Tries to locate the specified file.\n\tURL locate​(FileSystem fileSystem, FileLocator locator);\n}", "des": "A specialized implementation of FileLocationStrategy which searches for files in the user's home directory or another special configurable directory."}
{"index": 11511, "repo": "commons-configuration2-2.9.0", "code": "Interface INIBuilderProperties<T> {\n\t// Allows setting the leading comment separator which is used in reading an INI file.\n\tdefault T setCommentLeadingCharsUsedInInput​(String separator);\n\t// Allows setting the key and value separator which is used in reading an INI file.\n\tdefault T setSeparatorUsedInInput​(String separator);\n\t// Allows setting the separator between key and value to be used when writing an INI file.\n\tT setSeparatorUsedInOutput​(String separator);\n}", "des": "Definition of a parameters interface for INI configurations."}
{"index": 11512, "repo": "commons-configuration2-2.9.0", "code": "Class JndiBuilderParametersImpl {\n\t// Sets the JNDI context to be used by the JNDI configuration.\n\tJndiBuilderParametersImpl setContext​(Context ctx);\n\t// Sets the prefix in the JNDI tree.\n\tJndiBuilderParametersImpl setPrefix​(String p);\n}", "des": "A specialized parameters object for JNDI configurations."}
{"index": 11513, "repo": "commons-configuration2-2.9.0", "code": "Interface JndiBuilderProperties<T> {\n\t// Sets the JNDI context to be used by the JNDI configuration.\n\tT setContext​(Context ctx);\n\t// Sets the prefix in the JNDI tree.\n\tT setPrefix​(String p);\n}", "des": "Definition of a properties interface for parameters of a JNDI configuration."}
{"index": 11514, "repo": "commons-configuration2-2.9.0", "code": "Class JSONConfiguration {\n\t// Loads the configuration from the given input stream.\n\tvoid read​(InputStream in);\n\t// Reads the content of this object from the given reader.\n\tvoid read​(Reader in);\n\t// Writes the content of this object to the given writer.\n\tvoid write​(Writer out);\n}", "des": "A specialized hierarchical configuration class that is able to parse JSON documents."}
{"index": 11515, "repo": "commons-configuration2-2.9.0", "code": "Enum LockMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic LockMode valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic LockMode[] values();\n}", "des": "An enumeration used by SynchronizerSupport to specify how an object is locked."}
{"index": 11516, "repo": "commons-configuration2-2.9.0", "code": "Class ManagedReloadingDetector {\n\t// Checks whether reloading is required.\n\tboolean isReloadingRequired();\n\t// Tells this strategy that the monitored configuration file should be refreshed.\n\tvoid refresh();\n\t// Notifies this object that a reload operation has been performed.\n\tvoid reloadingPerformed();\n}", "des": "A strategy to reload configuration based on management requests."}
{"index": 11517, "repo": "commons-configuration2-2.9.0", "code": "Class MergeCombiner {\n\t// Handles the attributes during a combination process.\n\tprotected void addAttributes​(ImmutableNode.Builder result, ImmutableNode node1, ImmutableNode node2);\n\t// Tests if the first node can be combined with the second node.\n\tprotected ImmutableNode canCombine​(ImmutableNode node2, ImmutableNode child, List<ImmutableNode> children2);\n\t// Combines the given nodes to a new union node.\n\tImmutableNode combine​(ImmutableNode node1, ImmutableNode node2);\n}", "des": "A specialized implementation of the NodeCombiner interface that performs a merge from two passed in node hierarchies."}
{"index": 11518, "repo": "commons-configuration2-2.9.0", "code": "Interface MultiFileBuilderProperties<T> {\n\t// Sets the pattern string.\n\tT setFilePattern​(String p);\n\t// Sets a parameters object to be used when creating a managed configuration.\n\tT setManagedBuilderParameters​(BuilderParameters p);\n}", "des": "Definition of a properties interface for the parameters of a multiple file configuration builder."}
{"index": 11519, "repo": "commons-configuration2-2.9.0", "code": "Class NodeAddData<T> {\n\t// Gets the name of the new node.\n\tString getNewNodeName();\n\t// Gets the parent node.\n\tT getParent();\n\t// Gets a list with further nodes that must be added.\n\tList<String> getPathNodes();\n\t// Returns a flag if the new node to be added is an attribute.\n\tboolean isAttribute();\n}", "des": "A simple data class used by ExpressionEngine to store the results of the prepareAdd() operation."}
{"index": 11520, "repo": "commons-configuration2-2.9.0", "code": "Class NodeCombiner {\n\t// Adds the name of a node to the list of known list nodes.\n\tvoid addListNode​(String nodeName);\n\t// Combines the hierarchies represented by the given root nodes.\n\tabstract ImmutableNode combine​(ImmutableNode node1, ImmutableNode node2);\n\t// Gets a set with the names of nodes that are known to be list nodes.\n\tSet<String> getListNodes();\n\t// Checks if a node is a list node.\n\tboolean isListNode​(ImmutableNode node);\n}", "des": "A base class for node combiner implementations."}
{"index": 11521, "repo": "commons-configuration2-2.9.0", "code": "Enum NodeNameMatchers {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic NodeNameMatchers valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic NodeNameMatchers[] values();\n}", "des": "An enumeration class with several pre-defined NodeMatcher implementations based on node names."}
{"index": 11522, "repo": "commons-configuration2-2.9.0", "code": "Class NodeSelector {\n\t// Compares this object with another one.\n\tboolean equals​(Object obj);\n\t// Applies this NodeSelector on the specified root node.\n\tImmutableNode select​(ImmutableNode root, NodeKeyResolver<ImmutableNode> resolver, NodeHandler<ImmutableNode> handler);\n\t// Creates a sub NodeSelector object which uses the key(s) of this selector plus the specified key as selection criteria.\n\tNodeSelector subSelector​(String subKey);\n}", "des": "A class for selecting a specific node based on a key or a set of keys."}
{"index": 11523, "repo": "commons-configuration2-2.9.0", "code": "Class NodeTreeWalker {\n\t// Visits all nodes in the hierarchy represented by the given root node in breadth first search manner.\n\t<T> void walkBFS​(T root, ConfigurationNodeVisitor<T> visitor, NodeHandler<T> handler);\n\t// Visits all nodes in the hierarchy represented by the given root node in depth first search manner.\n\t<T> void walkDFS​(T root, ConfigurationNodeVisitor<T> visitor, NodeHandler<T> handler);\n}", "des": "A class providing different algorithms for traversing a hierarchy of configuration nodes."}
{"index": 11524, "repo": "commons-configuration2-2.9.0", "code": "Class NodeUpdateData<T> {\n\t// Gets an unmodifiable map with the values to be changed.\n\tMap<QueryResult<T>,​Object> getChangedValues();\n\t// Gets the key for this update operation.\n\tString getKey();\n\t// Gets a collection with the values to be newly added.\n\tCollection<Object> getNewValues();\n\t// Adds a collection with the nodes to be removed.\n\tCollection<QueryResult<T>> getRemovedNodes();\n}", "des": "A simple data class used by node models to store parameters of an update operation."}
{"index": 11525, "repo": "commons-configuration2-2.9.0", "code": "Class PeriodicReloadingTrigger {\n\t// Returns a flag whether this trigger is currently active.\n\tboolean isRunning();\n\t// Shuts down this trigger and its ScheduledExecutorService.\n\tvoid shutdown();\n\t// Shuts down this trigger and optionally shuts down the ScheduledExecutorService used by this object.\n\tvoid shutdown​(boolean shutdownExecutor);\n\t// Starts this trigger.\n\tvoid start();\n\t// Stops this trigger.\n\tvoid stop();\n}", "des": "A timer-based trigger for reloading checks."}
{"index": 11526, "repo": "commons-configuration2-2.9.0", "code": "Class PropertiesConfiguration.DefaultIOFactory {\n\t// Creates a PropertiesReader for reading a properties file.\n\tPropertiesConfiguration.PropertiesReader createPropertiesReader​(Reader in);\n\t// Creates a PropertiesWriter for writing a properties file.\n\tPropertiesConfiguration.PropertiesWriter createPropertiesWriter​(Writer out, ListDelimiterHandler handler);\n}", "des": "A default implementation of the IOFactory interface."}
{"index": 11527, "repo": "commons-configuration2-2.9.0", "code": "Interface PropertiesConfiguration.IOFactory {\n\t// Creates a PropertiesReader for reading a properties file.\n\tPropertiesConfiguration.PropertiesReader createPropertiesReader​(Reader in);\n\t// Creates a PropertiesWriter for writing a properties file.\n\tPropertiesConfiguration.PropertiesWriter createPropertiesWriter​(Writer out, ListDelimiterHandler handler);\n}", "des": "Definition of an interface that allows customization of read and write operations."}
{"index": 11528, "repo": "commons-configuration2-2.9.0", "code": "Class PropertiesConfiguration.JupIOFactory {\n\t// Creates a PropertiesReader for reading a properties file.\n\tPropertiesConfiguration.PropertiesReader createPropertiesReader​(Reader in);\n\t// Creates a PropertiesWriter for writing a properties file.\n\tPropertiesConfiguration.PropertiesWriter createPropertiesWriter​(Writer out, ListDelimiterHandler handler);\n}", "des": "An alternative PropertiesConfiguration.IOFactory that tries to mimic the behavior of Properties (Jup) more closely."}
{"index": 11529, "repo": "commons-configuration2-2.9.0", "code": "Class PropertiesConfiguration.JupPropertiesReader {\n\t// Parses a line read from the properties file.\n\tprotected void parseProperty​(String line);\n\t// Reads a property line.\n\tString readProperty();\n\t// Performs unescaping on the given property value.\n\tprotected String unescapePropertyValue​(String value);\n}", "des": "A PropertiesConfiguration.PropertiesReader that tries to mimic the behavior of Properties."}
{"index": 11530, "repo": "commons-configuration2-2.9.0", "code": "Class PropertyListConfiguration {\n\t// Adds the property with the specified key.\n\tprotected void addPropertyInternal​(String key, Object value);\n\t// Reads the content of this object from the given reader.\n\tvoid read​(Reader in);\n\t// Sets the value of the specified property.\n\tprotected void setPropertyInternal​(String key, Object value);\n\t// Writes the content of this object to the given writer.\n\tvoid write​(Writer out);\n}", "des": "NeXT / OpenStep style configuration."}
{"index": 11531, "repo": "commons-configuration2-2.9.0", "code": "Class PropertyListParserTokenManager {\n\t// Get the next Token.\n\tToken getNextToken();\n\tprotected Token jjFillToken();\n\t// Reinitialise parser.\n\tvoid ReInit​(SimpleCharStream stream);\n\t// Reinitialise parser.\n\tvoid ReInit​(SimpleCharStream stream, int lexState);\n\t// Set debug output.\n\tvoid setDebugStream​(PrintStream ds);\n\t// Switch to specified lex state.\n\tvoid SwitchTo​(int lexState);\n}", "des": "Token Manager."}
{"index": 11532, "repo": "commons-configuration2-2.9.0", "code": "Interface ReferenceNodeHandler {\n\t// Gets the reference object associated with the specified node.\n\tObject getReference​(ImmutableNode node);\n\t// Returns a list with the reference objects for nodes which have been removed.\n\tList<Object> removedReferences();\n}", "des": "An extension of the NodeHandler interface which allows access to so-called references stored for a node."}
{"index": 11533, "repo": "commons-configuration2-2.9.0", "code": "Interface ReloadingDetector {\n\t// Checks whether all criteria for a reload operation are fulfilled.\n\tboolean isReloadingRequired();\n\t// Notifies this object that a reload operation has been performed.\n\tvoid reloadingPerformed();\n}", "des": "An interface to be implemented by objects which can detect whether a reload operation is required."}
{"index": 11534, "repo": "commons-configuration2-2.9.0", "code": "Class ReloadingEvent {\n\t// Gets the ReloadingController which caused this event.\n\tReloadingController getController();\n\t// Gets an object with additional data about the reload operation.\n\tObject getData();\n}", "des": "An event that is fired when a reload operation is required."}
{"index": 11535, "repo": "commons-configuration2-2.9.0", "code": "Class ReloadingMultiFileConfigurationBuilder<T extends FileBasedConfiguration> {\n\t// Creates a builder for a managed configuration.\n\tprotected FileBasedConfigurationBuilder<T> createManagedBuilder​(String fileName, Map<String,​Object> params);\n\t// Gets the ReloadingController associated with this object.\n\tReloadingController getReloadingController();\n}", "des": "A specialized MultiFileConfigurationBuilder implementation which adds support for reloading."}
{"index": 11536, "repo": "commons-configuration2-2.9.0", "code": "Interface SynchronizerSupport {\n\t// Gets the Synchronizer used by this object.\n\tSynchronizer getSynchronizer();\n\t// Locks this object for the specified mode.\n\tvoid lock​(LockMode mode);\n\t// Sets the Synchronizer to be used by this object.\n\tvoid setSynchronizer​(Synchronizer sync);\n\t// Releases a lock of this object that was obtained using the lock(LockMode) method.\n\tvoid unlock​(LockMode mode);\n}", "des": "Definition of an interface for objects that can be associated with a Synchronizer."}
{"index": 11537, "repo": "commons-configuration2-2.9.0", "code": "Class Token {\n\t// An optional attribute value of the Token.\n\tObject getValue();\n\tstatic Token newToken​(int ofKind);\n\t// Returns a new Token object, by default.\n\tstatic Token newToken​(int ofKind, String image);\n}", "des": "Describes the input token stream."}
{"index": 11538, "repo": "commons-configuration2-2.9.0", "code": "Class UnionCombiner {\n\t// Combines the given nodes to a new union node.\n\tImmutableNode combine​(ImmutableNode node1, ImmutableNode node2);\n\t// Tries to find a child node of the second source node, with which a child of the first source node can be combined.\n\tprotected ImmutableNode findCombineNode​(ImmutableNode node1, ImmutableNode node2, ImmutableNode child);\n}", "des": "A specialized implementation of the NodeCombiner interface that constructs a union from two passed in node hierarchies."}
{"index": 11539, "repo": "commons-configuration2-2.9.0", "code": "Class VFSFileHandlerReloadingDetector {\n\t// Gets the file that is monitored by this strategy.\n\tprotected org.apache.commons.vfs2.FileObject getFileObject();\n\t// Gets the date of the last modification of the monitored file.\n\tprotected long getLastModificationDate();\n\t// Resolves the URI of the monitored file.\n\tprotected String resolveFileURI();\n}", "des": "A file-based reloading strategy that uses Commons VFS to determine when a file was changed."}
{"index": 11540, "repo": "commons-configuration2-2.9.0", "code": "Class XMLPropertyListConfiguration {\n\t// Adds the property with the specified key.\n\tprotected void addPropertyInternal​(String key, Object value);\n\t// Stores the current file locator.\n\tvoid initFileLocator​(FileLocator locator);\n\t// Reads the content of this object from the given reader.\n\tvoid read​(Reader in);\n\t// Sets the value of the specified property.\n\tprotected void setPropertyInternal​(String key, Object value);\n\t// Writes the content of this object to the given writer.\n\tvoid write​(Writer out);\n}", "des": "Property list file (plist) in XML FORMAT as used by Mac OS X (http://www.apple.com/DTDs/PropertyList-1.0.dtd)."}
{"index": 11541, "repo": "commons-configuration2-2.9.0", "code": "Class YAMLConfiguration {\n\tvoid dump​(Writer out, org.yaml.snakeyaml.DumperOptions options);\n\t// Loads the configuration from the given input stream.\n\tvoid read​(InputStream in);\n\tvoid read​(InputStream in, org.yaml.snakeyaml.LoaderOptions options);\n\t// Reads the content of this object from the given reader.\n\tvoid read​(Reader in);\n\tvoid read​(Reader in, org.yaml.snakeyaml.LoaderOptions options);\n\t// Writes the content of this object to the given writer.\n\tvoid write​(Writer out);\n}", "des": "A specialized hierarchical configuration class that is able to parse YAML documents."}
{"index": 11542, "repo": "commons-release-plugin-1.8.1", "code": "Class HeaderHtmlVelocityDelegate {\n\t// For instantiating our HeaderHtmlVelocityDelegate using the HeaderHtmlVelocityDelegate.HeaderHtmlVelocityDelegateBuilder.\n\tstatic HeaderHtmlVelocityDelegate.HeaderHtmlVelocityDelegateBuilder builder();\n\t// Builds the HEADER.vm velocity template to the writer passed in.\n\tWriter render​(Writer writer);\n}", "des": "This class' purpose is to generate the HEADER.html that moves along with the release for the sake of downloading the release from the distribution area."}
{"index": 11543, "repo": "commons-release-plugin-1.8.1", "code": "Class ReadmeHtmlVelocityDelegate {\n\t// Gets the ReadmeHtmlVelocityDelegate.ReadmeHtmlVelocityDelegateBuilder for constructing the ReadmeHtmlVelocityDelegate.\n\tstatic ReadmeHtmlVelocityDelegate.ReadmeHtmlVelocityDelegateBuilder builder();\n\t// Renders the README.vm velocity template with the variables constructed with the ReadmeHtmlVelocityDelegate.ReadmeHtmlVelocityDelegateBuilder.\n\tWriter render​(Writer writer);\n}", "des": "This class' purpose is to generate the README.html that moves along with the release for the sake of downloading the release from the distribution area."}
{"index": 11544, "repo": "opencms-core-15.0", "code": "Class A_CmsGalleryDialogAction {\n\t// Returns the gallery.\n\tprotected CmsResource getGallery​(I_CmsDialogContext context);\n\t// Returns the gallery types supported by this dialog action.\n\tprotected abstract java.lang.String[] getSupportedGalleryTypes();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Class representing an abstract gallery dialog action."}
{"index": 11545, "repo": "opencms-core-15.0", "code": "Class A_CmsHTTPImportForm {\n\t// Gets the upload button.\n\tprotected abstract com.vaadin.v7.ui.Upload getUpload();\n\t// Gets the upload label, which shows the name of the uploaded file.\n\tprotected abstract com.vaadin.v7.ui.Label getUploadLabel();\n}", "des": "Abstract class for HTTP imports."}
{"index": 11546, "repo": "opencms-core-15.0", "code": "Class A_CmsImportExportUserDialog {\n\t// Init method.\n\tprotected void init​(java.lang.String ou, com.vaadin.ui.Window window);\n\t// Initializes the download button.\n\tprotected void initDownloadButton();\n\t// Checks if the user can be exported.\n\tprotected boolean isExportable​(CmsUser exportUser);\n}", "des": "Class to export user."}
{"index": 11547, "repo": "opencms-core-15.0", "code": "Class A_CmsJSPAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// Sets the absolute path (in the vfs) to a jsp file used for the action.\n\tabstract java.lang.String getJSPPath();\n\t// Creates string for get—request with given list of resources.\n\tprotected java.lang.String getRequestString​(java.util.List<CmsResource> resources);\n}", "des": "Abstract class for actions to display a JSP file in a vaadin window."}
{"index": 11548, "repo": "opencms-core-15.0", "code": "Class A_CmsLogPublishListConverter {\n\t// Processes a log entry.\n\tabstract void add​(CmsLogEntry entry);\n\t// Gets the state entry for the given structure id, creating it if it doesn't already exist.\n\tCmsPublishListResourceState getEntry​(CmsUUID key);\n\t// Writes the collected changes to the database.\n\tvoid writeChangesToDatabase​(CmsDbContext dbc, I_CmsProjectDriver projectDriver);\n}", "des": "Abstract base class used for converting from CmsLogEntry instances to the necessary changes in the user's publish list."}
{"index": 11549, "repo": "opencms-core-15.0", "code": "Class A_CmsMenuItem {\n\t// Returns the item ui component.\n\tcom.vaadin.ui.Component getItemComponent​(java.util.Locale locale);\n\t// Returns the label for the given locale.\n\tprotected java.lang.String getLabel​(java.util.Locale locale);\n}", "des": "A workplace menu item."}
{"index": 11550, "repo": "opencms-core-15.0", "code": "Class A_CmsPreference {\n\t// Creates the configuration for this preference.\n\torg.dom4j.Element createConfigurationItem();\n\t// Gets the user-independent property configuration.\n\tprotected abstract CmsXmlContentProperty getPropertyDefinition();\n\t// Gets the metadata describing how the setting should be edited.\n\tCmsXmlContentProperty getPropertyDefinition​(CmsObject cms);\n\t// Returns true if the preference is disabled.\n\tboolean isDisabled​(CmsObject cms);\n}", "des": "Abstract superclass for preferences."}
{"index": 11551, "repo": "opencms-core-15.0", "code": "Class A_CmsProgressThread {\n\t// Sets the description to show for the progress.\n\tabstract void setDescription​(java.lang.String description);\n\t// Sets the progress.\n\tabstract void setProgress​(int progress);\n}", "des": "Abstract thread to keep track of operation progress."}
{"index": 11552, "repo": "opencms-core-15.0", "code": "Enum A_CmsPublishGroupHelper.GroupAge {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic A_CmsPublishGroupHelper.GroupAge valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic A_CmsPublishGroupHelper.GroupAge[] values();\n}", "des": "An enum representing the age of a publish list resource."}
{"index": 11553, "repo": "opencms-core-15.0", "code": "Class A_CmsRepositorySession {\n\t// Returns the filter.\n\tCmsRepositoryFilter getFilter();\n\t// Checks if a path is filtered out of the filter or not.\n\tprotected boolean isFiltered​(java.lang.String path);\n\t// Sets the filter.\n\tvoid setFilter​(CmsRepositoryFilter filter);\n}", "des": "Abstract implementation of the interface I_CmsRepositorySession to provide the functionality of filtering items."}
{"index": 11554, "repo": "opencms-core-15.0", "code": "Class A_CmsSimpleVisibilityCheck {\n\t// Computes visibility of the menu item for a single resource.\n\tabstract CmsMenuItemVisibilityMode getSingleVisibility​(CmsObject cms, CmsResource resource);\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Abstract superclass for menu item visibility checks."}
{"index": 11555, "repo": "opencms-core-15.0", "code": "Class A_CmsToolbarAction {\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n\t// Gets the visibility for the current dialog context.\n\tCmsMenuItemVisibilityMode getVisibility​(I_CmsDialogContext context);\n}", "des": "Workplace action only visible in the toolbar context menus, not within the file table."}
{"index": 11556, "repo": "opencms-core-15.0", "code": "Class A_CmsWorkplaceApp.NavEntry {\n\t// Returns the description.\n\tjava.lang.String getDescription();\n\t// Returns the icon.\n\tcom.vaadin.server.Resource getIcon();\n\t// Returns the entry name.\n\tjava.lang.String getName();\n\t// Returns the target state.\n\tjava.lang.String getTargetState();\n}", "des": "An app navigation entry."}
{"index": 11557, "repo": "opencms-core-15.0", "code": "Class A_CmsXmlContentEditorChangeHandler {\n\t// Returns the handler configuration.\n\tjava.lang.String getConfiguration();\n\t// Returns the handler scope.\n\tjava.lang.String getScope();\n\t// Resolves a relative content value path to an absolute one.\n\tjava.lang.String resolveRelativePath​(java.lang.String source, java.lang.String target);\n\t// Sets the configuration.\n\tvoid setConfiguration​(java.lang.String configuration);\n\t// Sets the scope to observe for changes.\n\tvoid setScope​(java.lang.String scope);\n}", "des": "Abstract implementation of the content editor change handler."}
{"index": 11558, "repo": "opencms-core-15.0", "code": "Class A_CmsXmlValueCdataBase {\n\t// Returns the value of this XML content node as a plain text String.\n\tjava.lang.String getPlainText​(CmsObject cms);\n\t// Returns the value of this XML content node as a String.\n\tjava.lang.String getStringValue​(CmsObject cms);\n\t// Sets the provided String as value of this XML content node.\n\tvoid setStringValue​(CmsObject cms, java.lang.String value);\n}", "des": "Base class for XML content value implementations that require only a simple XML cdata text node."}
{"index": 11559, "repo": "opencms-core-15.0", "code": "Class A_CmsXmlValueTextBase {\n\t// Returns the value of this XML content node as a plain text String.\n\tjava.lang.String getPlainText​(CmsObject cms);\n\t// Returns the value of this XML content node as a String.\n\tjava.lang.String getStringValue​(CmsObject cms);\n\t// Sets the provided String as value of this XML content node.\n\tvoid setStringValue​(CmsObject cms, java.lang.String value);\n}", "des": "Base class for XML content value implementations that require only a simple XML plain text node."}
{"index": 11560, "repo": "opencms-core-15.0", "code": "Class ClientMessages {\n\t// Returns the client message instance.\n\tstatic I_CmsClientMessageBundle get();\n\t// Returns the class of the client implementation.\n\tjava.lang.Class<?> getClientImpl();\n}", "des": "The client messages class for the SEO dialog."}
{"index": 11561, "repo": "opencms-core-15.0", "code": "Class CmsAcaciaEditor {\n\t// Returns the editor URI.\n\tprotected java.lang.String getEditorUri();\n\t// Gets the priority.\n\tint getPriority();\n\t// Checks whether the editor is available for the given resource.\n\tboolean matchesResource​(CmsObject cms, CmsResource resource, boolean plainText);\n\t// Checks whether the editor is available for the given resource type.\n\tboolean matchesType​(I_CmsResourceType type, boolean plainText);\n\t// Returns a new editor instance.\n\tI_CmsEditor newInstance();\n}", "des": "The acacia XML content editor."}
{"index": 11562, "repo": "opencms-core-15.0", "code": "Class CmsAcceptLanguageHeaderParser {\n\t// Creates a value string for the HTTP Accept-Language header based on the default localed.\n\tstatic java.lang.String createLanguageHeader();\n\t// Returns the sorted list of accepted Locales.\n\tjava.util.List<java.util.Locale> getAcceptedLocales();\n}", "des": "Parses the HTTP Accept-Language header as per section 14.4 of RFC 2068 (HTTP 1.1 header field definitions) and creates a sorted list of Locales from it."}
{"index": 11563, "repo": "opencms-core-15.0", "code": "Class CmsAccountInfo {\n\t// Returns the additional info key.\n\tjava.lang.String getAddInfoKey();\n\t// Returns the field.\n\tCmsAccountInfo.Field getField();\n\t// Returns the account info value for the given user.\n\tjava.lang.String getValue​(CmsUser user);\n\t// Returns whether this is an additional info field.\n\tboolean isAdditionalInfo();\n\t// Returns if the field is editable.\n\tboolean isEditable();\n}", "des": "Account info bean."}
{"index": 11564, "repo": "opencms-core-15.0", "code": "Enum CmsAccountInfo.Field {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsAccountInfo.Field valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsAccountInfo.Field[] values();\n}", "des": "Account info fields."}
{"index": 11565, "repo": "opencms-core-15.0", "code": "Class CmsAddCategoriesPostCreateHandler {\n\t// This is called after the new content has been created (and possibly already been filled with content).\n\tvoid onCreate​(CmsObject cms, CmsResource createdResource, boolean copyMode);\n\t// Adds the categories specified via config to the newly created resource iff not in copy mode.\n\tvoid onCreate​(CmsObject cms, CmsResource createdResource, boolean copyMode, java.lang.String config);\n}", "des": "A post create handler that adds categories to newly created resources (that are not a copy of an existing resource)."}
{"index": 11566, "repo": "opencms-core-15.0", "code": "Class CmsAddContentRestriction.TypeEntry {\n\t// Gets the location from which this entry was read.\n\tjava.lang.String getOrigin();\n\t// Gets the results to be displayed in the 'add content' dialog.\n\tjava.util.List<CmsGallerySearchResult> getResults​(CmsObject cms);\n\t// Gets the type.\n\tjava.lang.String getType();\n}", "des": "Contains the replacements (and titles of the replacements) for a single type."}
{"index": 11567, "repo": "opencms-core-15.0", "code": "Class CmsAdditionalEntryInfo {\n\t// Returns the additional info map.\n\tjava.util.Map<java.lang.String,​java.lang.String> getAdditional();\n\t// Returns the resource state.\n\tCmsResourceState getResourceState();\n\t// Sets the additional info map.\n\tvoid setAdditional​(java.util.Map<java.lang.String,​java.lang.String> additional);\n\t// Sets the resource state.\n\tvoid setResourceState​(CmsResourceState resourceState);\n}", "des": "Bean for additional site-map entry information."}
{"index": 11568, "repo": "opencms-core-15.0", "code": "Class CmsAdditionalInfoBean {\n\t// Returns the info name.\n\tjava.lang.String getName();\n\t// Returns the info style name.\n\tjava.lang.String getStyle();\n\t// Returns the info value.\n\tjava.lang.String getValue();\n\t// Sets the info name.\n\tvoid setName​(java.lang.String name);\n\t// Sets the info style name.\n\tvoid setStyle​(java.lang.String styleName);\n\t// Sets the info value.\n\tvoid setValue​(java.lang.String value);\n}", "des": "Additional info bean."}
{"index": 11569, "repo": "opencms-core-15.0", "code": "Class CmsADEConfigDataInternal.AttributeValue {\n\t// Gets the origin path.\n\tjava.lang.String getOrigin();\n\t// Gets the attribute string value.\n\tjava.lang.String getValue();\n}", "des": "Represents the value of an attribute, with additional information about where the value originated from."}
{"index": 11570, "repo": "opencms-core-15.0", "code": "Class CmsADEConfigurationSequence {\n\t// Gets the current configuration data.\n\tCmsADEConfigDataInternal getConfig();\n\t// Gets the list of configuration file paths in inheritance order, not including the module configuration.\n\tjava.util.List<java.lang.String> getConfigPaths();\n\t// Returns a sequence which only differs from this instance in that its index is one less.\n\tcom.google.common.base.Optional<CmsADEConfigurationSequence> getParent();\n}", "des": "Represents a sequence of inherited module/sitemap configurations, together with an index into that list."}
{"index": 11571, "repo": "opencms-core-15.0", "code": "Enum CmsADEManager.FavListProp {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsADEManager.FavListProp valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsADEManager.FavListProp[] values();\n}", "des": "JSON property name constant."}
{"index": 11572, "repo": "opencms-core-15.0", "code": "Enum CmsADEManager.Status {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsADEManager.Status valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsADEManager.Status[] values();\n}", "des": "A status enum for the initialization status."}
{"index": 11573, "repo": "opencms-core-15.0", "code": "Class CmsADESessionCache.LastPageBean {\n\t// Returns the detailId.\n\tCmsUUID getDetailId();\n\t// Returns the pageId.\n\tCmsUUID getPageId();\n\t// Returns the siteRoot.\n\tjava.lang.String getSiteRoot();\n}", "des": "Stores information about the container page which was last edited, so we can jump back to it later."}
{"index": 11574, "repo": "opencms-core-15.0", "code": "Class CmsAdvancedPasswordHandler {\n\t// Evaluates the given password security.\n\tI_CmsPasswordSecurityEvaluator.SecurityLevel evaluatePasswordSecurity​(java.lang.String password);\n\t// Returns a hint describing how to set a secure password.\n\tjava.lang.String getPasswordSecurityHint​(java.util.Locale locale);\n\t// This method checks if a new password follows the rules for new passwords, which are defined by a Class configured in the opencms.properties file.\n\tvoid validatePassword​(java.lang.String password);\n}", "des": "Validates the user passwords in with advanced password requirements."}
{"index": 11575, "repo": "opencms-core-15.0", "code": "Class CmsAjaxDownloadGallery {\n\t// Fills the JSON object with the specific information used for download file resource type.\n\tprotected void buildJsonItemSpecificPart​(JSONObject jsonObj, CmsResource res, java.lang.String sitePath);\n\t// Returns the type id of the gallery items that should be listed.\n\tint getGalleryItemsTypeId();\n\t// Returns the type id of this gallery instance.\n\tint getGalleryTypeId();\n\t// Returns the type name of this gallery instance.\n\tjava.lang.String getGalleryTypeName();\n}", "des": "Provides the specific constants, members and helper methods to generate the content of the download gallery dialog used in the XML content editors, WYSIWYG editors and context menu."}
{"index": 11576, "repo": "opencms-core-15.0", "code": "Class CmsAliasBean {\n\t// Returns the alias mode.\n\tCmsAliasMode getMode();\n\t// Returns the site-relative alias path.\n\tjava.lang.String getSitePath();\n\t// Sets the alias mode.\n\tvoid setMode​(CmsAliasMode mode);\n\t// Sets the alias site path.\n\tvoid setSitePath​(java.lang.String sitePath);\n}", "des": "A bean which contains the information for creating an alias."}
{"index": 11577, "repo": "opencms-core-15.0", "code": "Class CmsAliasEditorLockTable {\n\t// Clears the entry for a given site root, but only if the user from the given CMS context matches the user in the entry.\n\tvoid clear​(CmsObject cms, java.lang.String siteRoot);\n\t// Tries to update or create an entry for the given user/site root combination.\n\tCmsUser update​(CmsObject cms, java.lang.String siteRoot);\n}", "des": "A class used to keep track of which user is editing the alias table from which sites."}
{"index": 11578, "repo": "opencms-core-15.0", "code": "Class CmsAliasFilter {\n\t// Gets the alias path to filter.\n\tjava.lang.String getPath();\n\t// Gets the site root to filter.\n\tjava.lang.String getSiteRoot();\n\t// Gets the structure id to filter.\n\tCmsUUID getStructureId();\n\t// Checks whether this filter is trivial, i.e.\n\tboolean isNullFilter();\n}", "des": "This class is used for filtering aliases in database operations."}
{"index": 11579, "repo": "opencms-core-15.0", "code": "Class CmsAliasImportResponseTable {\n\t// Adds a list of alias import results, and returns the key under which they were stored.\n\tjava.lang.String addImportResult​(java.util.List<CmsAliasImportResult> importResults);\n\t// Removes the list of alias import results for the given key and returns it.\n\tjava.util.List<CmsAliasImportResult> getAndRemove​(java.lang.String key);\n}", "des": "A class used for storing alias import results by key."}
{"index": 11580, "repo": "opencms-core-15.0", "code": "Class CmsAliasImportResult {\n\t// Gets the alias path.\n\tjava.lang.String getAliasPath();\n\t// Gets the line containing the alias data.\n\tjava.lang.String getLine();\n\t// Gets the import message.\n\tjava.lang.String getMessage();\n\t// Gets the alias mode.\n\tCmsAliasMode getMode();\n\t// Gets the status.\n\tCmsAliasImportStatus getStatus();\n\t// Gets the alias target path.\n\tjava.lang.String getTargetPath();\n\t// Sets the line containing the alias data.\n\tvoid setLine​(java.lang.String line);\n}", "des": "A bean representing the result of trying to import a single alias."}
{"index": 11581, "repo": "opencms-core-15.0", "code": "Enum CmsAliasImportStatus {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsAliasImportStatus valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsAliasImportStatus[] values();\n}", "des": "The status for the result of an alias import operation."}
{"index": 11582, "repo": "opencms-core-15.0", "code": "Class CmsAliasSaveValidationRequest {\n\t// Gets the set of structure ids of deleted aliases.\n\tjava.util.Set<CmsUUID> getDeletedIds();\n\t// Gets the list of rewrite aliases to save.\n\tjava.util.List<CmsRewriteAliasTableRow> getRewriteData();\n\t// Gets the site root.\n\tjava.lang.String getSiteRoot();\n\t// Sets the list of rewrite aliases to save.\n\tvoid setRewriteData​(java.util.List<CmsRewriteAliasTableRow> rewriteData);\n\t// Sets the site root.\n\tvoid setSiteRoot​(java.lang.String siteRoot);\n}", "des": "The class used for transmitting alias data to the server for serving."}
{"index": 11583, "repo": "opencms-core-15.0", "code": "Class CmsAlternativeSiteRootMapping {\n\t// Appends configuration data to the given parent element.\n\tvoid appendXml​(org.dom4j.Element parent);\n\tboolean equals​(java.lang.Object obj);\n\t// Gets the path prefixes.\n\tjava.util.List<CmsPath> getPrefixes();\n\t// Gets the site root as a CmsPath.\n\tCmsPath getSiteRoot();\n\t// Gets the suffix to append to the site title.\n\tjava.lang.String getTitleSuffix();\n}", "des": "Describes a mapping rule that selects a different site root based on whether the requested path matches a set of prefixes or not."}
{"index": 11584, "repo": "opencms-core-15.0", "code": "Class CmsAppCategory {\n\t// Returns the id.\n\tjava.lang.String getId();\n\t// Gets the user readable name for the category for a given locale.\n\tjava.lang.String getName​(java.util.Locale locale);\n\t// Gets an integer used to sort items.\n\tint getOrder();\n\t// Returns the parentId.\n\tjava.lang.String getParentId();\n\t// Returns the priority.\n\tint getPriority();\n}", "des": "Bean representing a category for workplace apps."}
{"index": 11585, "repo": "opencms-core-15.0", "code": "Class CmsAppHierachy {\n\t// Within this method the app UI should be initialized.\n\tvoid initUI​(I_CmsAppUIContext context);\n\t// Returns whether this app should be cached within the user session.\n\tboolean isCachable();\n\t// Called after the view is fetched from the cache.\n\tvoid onRestoreFromCache();\n\t// Called on navigation events.\n\tvoid onStateChange​(java.lang.String state);\n}", "des": "Displays all available app."}
{"index": 11586, "repo": "opencms-core-15.0", "code": "Class CmsAppHierarchyPanel {\n\t// Adds a child category panel.\n\tvoid addChild​(java.lang.String label, CmsAppHierarchyPanel child);\n\t// Displays the given tree of categories and apps in the tree.\n\tvoid fill​(CmsAppCategoryNode rootNode, java.util.Locale locale);\n}", "des": "Widget used to displays a nested hierarchy of app categories and apps."}
{"index": 11587, "repo": "opencms-core-15.0", "code": "Enum CmsAppView.CacheStatus {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsAppView.CacheStatus valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsAppView.CacheStatus[] values();\n}", "des": "Enum representing caching status of a view."}
{"index": 11588, "repo": "opencms-core-15.0", "code": "Class CmsAppVisibilityStatus {\n\t// Returns the help text for visible but inactive apps.\n\tjava.lang.String getHelpText();\n\t// Returns if the app is active.\n\tboolean isActive();\n\t// Returns if the app is visible.\n\tboolean isVisible();\n}", "des": "The app visibility status."}
{"index": 11589, "repo": "opencms-core-15.0", "code": "Class CmsAttributeComparison {\n\t// Returns the locale.\n\tjava.lang.String getName();\n\t// Returns the type.\n\tjava.lang.String getStatus();\n\t// Returns the attribute.\n\tjava.lang.String getVersion1();\n\t// Returns the type.\n\tjava.lang.String getVersion2();\n\t// Sets the name.\n\tvoid setName​(java.lang.String name);\n\t// Sets the type.\n\tvoid setStatus​(java.lang.String type);\n\t// Sets the version1.\n\tvoid setVersion1​(java.lang.String version1);\n\t// Sets the type.\n\tvoid setVersion2​(java.lang.String type);\n}", "des": "Comparison of resource attributes."}
{"index": 11590, "repo": "opencms-core-15.0", "code": "Class CmsAttributeDiff {\n\t// Gets the caption.\n\tjava.lang.String getCaption();\n\t// Gets the attribute comparison beans representing the differences.\n\tjava.util.List<CmsAttributeComparison> getDifferences​(CmsObject cms, CmsHistoryResourceBean v1, CmsHistoryResourceBean v2);\n}", "des": "Displays changes between attributes (size, modification date, etc."}
{"index": 11591, "repo": "opencms-core-15.0", "code": "Class CmsAutoGrowingTextAreaState {\n\t// Returns the maximal number of rows.\n\tint getMaxRows();\n\t// Returns the minimal number of rows.\n\tint getMinRows();\n\t// Sets the maximal number of rows.\n\tvoid setMaxRows​(int maxRows);\n\t// Sets the minimal number of rows.\n\tvoid setMinRows​(int minRows);\n}", "des": "The scroll position CSS shared state."}
{"index": 11592, "repo": "opencms-core-15.0", "code": "Class CmsAvailabilityDialog {\n\t// Actually performs the availability change.\n\tprotected java.util.List<CmsUUID> changeAvailability();\n\t// Initializes the values for the notification widgets.\n\tvoid initNotification();\n}", "des": "Availability dialog."}
{"index": 11593, "repo": "opencms-core-15.0", "code": "Enum CmsBasicDialog.DialogWidth {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsBasicDialog.DialogWidth valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsBasicDialog.DialogWidth[] values();\n}", "des": "The available window widths."}
{"index": 11594, "repo": "opencms-core-15.0", "code": "Class CmsBenchmarkTable {\n\t// Starts the timer with the given name.\n\tvoid start​(java.lang.String name);\n\t// Stops the timer with the given name, and sends the value of the timer to the benchmark receiver.\n\tvoid stop​(java.lang.String name);\n}", "des": "Manages a set of benchmark timers."}
{"index": 11595, "repo": "opencms-core-15.0", "code": "Class CmsBreadCrumbState {\n\t// Returns the bread crumb entries.\n\tjava.lang.String[][] getEntries();\n\t// Sets the bread crumb entries.\n\tvoid setEntries​(java.lang.String[][] entries);\n}", "des": "The bread crumb state."}
{"index": 11596, "repo": "opencms-core-15.0", "code": "Enum CmsBroadcast.ContentMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsBroadcast.ContentMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsBroadcast.ContentMode[] values();\n}", "des": "The content mode describes how the text used for a broadcast message should be interpreted."}
{"index": 11597, "repo": "opencms-core-15.0", "code": "Class CmsBroadcastMessage {\n\tjava.lang.String getIcon();\n\t// Returns the message.\n\tjava.lang.String getMessage();\n\t// Returns the time.\n\tjava.lang.String getTime();\n\t// Returns the user.\n\tjava.lang.String getUser();\n}", "des": "Contains the broadcast message data."}
{"index": 11598, "repo": "opencms-core-15.0", "code": "Class CmsBrowserFrame {\n\t// Sets the iFrame name attribute.\n\tjava.lang.String getName();\n\tprotected CmsBrowserFrameState getState();\n\tprotected CmsBrowserFrameState getState​(boolean markAsDirty);\n\t// Returns the iFrame name attribute.\n\tvoid setName​(java.lang.String name);\n}", "des": "Extending the browser frame class to allow setting of the iFrame name attribute."}
{"index": 11599, "repo": "opencms-core-15.0", "code": "Class CmsBrowserFrameState {\n\t// Returns the name.\n\tjava.lang.String getName();\n\t// Sets the name.\n\tvoid setName​(java.lang.String name);\n}", "des": "The browser frame state."}
{"index": 11600, "repo": "opencms-core-15.0", "code": "Class CmsBuiltinPreference.SelectOptions {\n\t// Gets the select option labels.\n\tjava.util.List<java.lang.String> getOptions();\n\t// Gets the selected index.\n\tint getSelectedIndex();\n\t// Gets the select widget values.\n\tjava.util.List<java.lang.String> getValues();\n\t// Creates a configuration string for client-side select widgets from the options.\n\tjava.lang.String toClientSelectWidgetConfiguration();\n}", "des": "A bean representing a set of select options."}
{"index": 11601, "repo": "opencms-core-15.0", "code": "Enum CmsCacheViewApp.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCacheViewApp.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCacheViewApp.Mode[] values();\n}", "des": "Modes to run this app."}
{"index": 11602, "repo": "opencms-core-15.0", "code": "Class CmsCategorySelectDialog {\n\t// Adds a selection handler.\n\tvoid addSelectionHandler​(I_CmsSelectionHandler<java.util.Collection<CmsCategory>> selectionHandler);\n\t// Removes a selection handler.\n\tvoid removeSelectionHandler​(I_CmsSelectionHandler<java.util.Collection<CmsCategory>> selectionHandler);\n\t// Sets the selected categories.\n\tvoid setSelectedCategories​(java.util.Collection<CmsCategory> categories);\n}", "des": "The category select dialog."}
{"index": 11603, "repo": "opencms-core-15.0", "code": "Class CmsCategoryTree {\n\t// Returns the selected categories.\n\tjava.util.Collection<CmsCategory> getSelectedCategories();\n\t// Fills the category tree.\n\tvoid setCategories​(java.util.List<CmsCategory> categories);\n\t// Sets the display mode.\n\tvoid setDisplayOnly​(boolean displayOnly);\n\t// Sets the selected categories.\n\tvoid setSelectedCategories​(java.util.Collection<CmsCategory> categories);\n}", "des": "The category tree."}
{"index": 11604, "repo": "opencms-core-15.0", "code": "Class CmsCategoryTreeEntry {\n\t// Adds a child entry.\n\tvoid addChild​(CmsCategoryTreeEntry child);\n\t// Returns the children.\n\tjava.util.List<CmsCategoryTreeEntry> getChildren();\n\t// Gets the title of the category, or the name if the title is not set.\n\tjava.lang.Object getTitleOrName();\n\t// Sets the children.\n\tvoid setChildren​(java.util.List<CmsCategoryTreeEntry> children);\n}", "des": "Recursive category tree entry."}
{"index": 11605, "repo": "opencms-core-15.0", "code": "Class CmsChangeHandlerConfig {\n\t// Gets the class name for the handler.\n\tjava.lang.String getClassName();\n\t// Gets the configuration string for the handler.\n\tjava.lang.String getConfig();\n\t// Gets the field name for which the handler is configured.\n\tjava.lang.String getField();\n\t// Creates a new handler instance using this configuration and the given scope.\n\tjava.util.Optional<I_CmsXmlContentEditorChangeHandler> newHandler​(java.lang.String scope);\n}", "des": "A configuration bean representing a <ChangeHandler> element configured in an XSD's field settings."}
{"index": 11606, "repo": "opencms-core-15.0", "code": "Class CmsChangePasswordDialog {\n\t// Opens the 2FA verification code dialog for the user if necessary, and passes the code obtained from the dialog to the handler object passed as a parameter.\n\tprotected void maybeCheckSecondFactor​(java.util.function.Consumer<CmsSecondFactorInfo> handler);\n\t// Displays some additional text.\n\tvoid setAdditionalMessage​(java.lang.String text);\n}", "des": "Dialog used to change the password."}
{"index": 11607, "repo": "opencms-core-15.0", "code": "Class CmsChangeTypeDialog {\n\t// Creates type helper which is responsible for generating the type list.\n\tprotected CmsAddDialogTypeHelper createTypeHelper();\n\t// Gets the subtitle for the type info widget.\n\tprotected java.lang.String getSubtitle​(CmsResourceTypeBean type, boolean useDefault);\n\t// Handles selection of a type.\n\tvoid handleSelection​(CmsResourceTypeBean typeBean);\n}", "des": "Dialog for changing the resource type."}
{"index": 11608, "repo": "opencms-core-15.0", "code": "Class CmsChangeTypeDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "The change type dialog action."}
{"index": 11609, "repo": "opencms-core-15.0", "code": "Class CmsClientDateBean {\n\tint compareTo​(java.lang.Object other);\n\t// Returns the date.\n\tlong getDate();\n\t// Returns the dateText.\n\tjava.lang.String getDateText();\n}", "des": "A bean containing a date, both as a 'long' value and a user-readable string representation."}
{"index": 11610, "repo": "opencms-core-15.0", "code": "Class CmsClientLock {\n\t// Returns the lock owner name.\n\tjava.lang.String getLockOwner();\n\t// Returns the lock type.\n\tCmsClientLock.LockType getLockType();\n\t// Returns if the current lock is owned by the current user.\n\tboolean isOwnedByUser();\n\t// Sets the lock owner name.\n\tvoid setLockOwner​(java.lang.String lockOwner);\n\t// Sets the lock type.\n\tvoid setLockType​(CmsClientLock.LockType lockType);\n\t// Sets if the current lock is owned by the current user.\n\tvoid setOwnedByUser​(boolean isOwnedByUser);\n}", "des": "Client side lock class."}
{"index": 11611, "repo": "opencms-core-15.0", "code": "Enum CmsClientProperty.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsClientProperty.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsClientProperty.Mode[] values();\n}", "des": "An enum used for addressing a specific value in a property."}
{"index": 11612, "repo": "opencms-core-15.0", "code": "Enum CmsClientSitemapEntry.EditStatus {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsClientSitemapEntry.EditStatus valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsClientSitemapEntry.EditStatus[] values();\n}", "des": "An enum for the edit status of the entry."}
{"index": 11613, "repo": "opencms-core-15.0", "code": "Enum CmsClientSitemapEntry.EntryType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsClientSitemapEntry.EntryType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsClientSitemapEntry.EntryType[] values();\n}", "des": "An enum for the entry type."}
{"index": 11614, "repo": "opencms-core-15.0", "code": "Class CmsClientUserSettingConverter {\n\t// Loads the current user's preferences into a CmsUserSettingsBean.\n\tCmsUserSettingsBean loadSettings();\n\t// Saves the given user preference values.\n\tvoid saveSettings​(java.util.Map<java.lang.String,​java.lang.String> settings);\n}", "des": "Helper class to deal with loading and saving user preferences from the ADE user interface."}
{"index": 11615, "repo": "opencms-core-15.0", "code": "Class CmsClientVariant {\n\t// Gets the internal name.\n\tjava.lang.String getName();\n\t// Gets the nice name for a locale.\n\tjava.lang.String getNiceName​(java.util.Locale locale);\n\t// Gets the parameters.\n\tjava.util.Map<java.lang.String,​java.lang.String> getParameters();\n\t// Gets the screen height.\n\tint getScreenHeight();\n\t// Gets the screen width.\n\tint getScreenWidth();\n}", "des": "Bean that represents a client variant of a template context."}
{"index": 11616, "repo": "opencms-core-15.0", "code": "Class CmsClientVariantInfo {\n\t// Gets the internal name.\n\tjava.lang.String getName();\n\t// Gets the nice name.\n\tjava.lang.String getNiceName();\n\t// Gets the parameters.\n\tjava.util.Map<java.lang.String,​java.lang.String> getParameters();\n\t// Gets the screen height.\n\tint getScreenHeight();\n\t// Gets the screen width.\n\tint getScreenWidth();\n}", "des": "Client-side bean which holds information about a client variant of a template context."}
{"index": 11617, "repo": "opencms-core-15.0", "code": "Enum CmsCntPageData.ElementDeleteMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCntPageData.ElementDeleteMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCntPageData.ElementDeleteMode[] values();\n}", "des": "The element delte modes."}
{"index": 11618, "repo": "opencms-core-15.0", "code": "Enum CmsCntPageData.ElementReuseMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCntPageData.ElementReuseMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCntPageData.ElementReuseMode[] values();\n}", "des": "Enum representing the different ways dropping elements on a container page can be handled."}
{"index": 11619, "repo": "opencms-core-15.0", "code": "Enum CmsCodeMirror.CodeMirrorTheme {\n\t// Returns the theme name.\n\tjava.lang.String getThemeName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCodeMirror.CodeMirrorTheme valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCodeMirror.CodeMirrorTheme[] values();\n}", "des": "The available editor themes."}
{"index": 11620, "repo": "opencms-core-15.0", "code": "Class CmsCollectorPublishListHelper {\n\t// Computes the collector results.\n\tprotected java.util.List<CmsResource> computeCollectorResults​(boolean online);\n\t// Initializes a CmsObject.\n\tCmsObject getCmsObject​(boolean online);\n\t// Gets the collector to use.\n\tI_CmsResourceCollector getCollector();\n\t// Gets the list to add to the publish list for the collector list.\n\tjava.util.Set<CmsResource> getPublishListFiles();\n}", "des": "Helper class used to determine which resources from a collector list should be included in a publish list."}
{"index": 11621, "repo": "opencms-core-15.0", "code": "Class CmsColumnValueConverter {\n\t// Gets the actual value class which the given type enum represents.\n\tstatic java.lang.Class<?> getColumnClass​(CmsDataViewColumn.Type type);\n\t// Gets the actual column value for the given data value.\n\tstatic java.lang.Object getColumnValue​(java.lang.Object value, CmsDataViewColumn.Type type);\n}", "des": "Converts column values to the correct types."}
{"index": 11622, "repo": "opencms-core-15.0", "code": "Class CmsComplexWidgetData {\n\t// Gets the renderer configuration string.\n\tjava.lang.String getConfiguration();\n\t// Gets information about the external resources which are needed by this widget.\n\tCmsExternalWidgetConfiguration getExternalWidgetConfiguration();\n\t// Gets the renderer name.\n\tjava.lang.String getRendererName();\n}", "des": "Bean which holds the necessary data for complex value widgets in the Acacia editor."}
{"index": 11623, "repo": "opencms-core-15.0", "code": "Class CmsComponentField<T extends com.vaadin.ui.Component> {\n\t// Gets the wrapped component.\n\tT get();\n\t// Convenience method for creating a new instance.\n\tstatic <U extends com.vaadin.ui.Component>CmsComponentField<U> newInstance();\n\t// Sets the wrapped component.\n\tvoid set​(T value);\n}", "des": "Container wrapping a single UI component."}
{"index": 11624, "repo": "opencms-core-15.0", "code": "Class CmsConfigParserUtils {\n\t// Parses the list configuration resource.\n\tstatic CmsConfigurationBean parseListConfiguration​(CmsObject cms, CmsResource res);\n\t// Updates the black list entries in the provided xml content.\n\tstatic CmsXmlContent updateBlackList​(CmsObject cms, CmsXmlContent content, CmsConfigurationBean configBean);\n}", "des": "Utils to read and update the list configuration."}
{"index": 11625, "repo": "opencms-core-15.0", "code": "Enum CmsConfigurationBean.CombinationMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsConfigurationBean.CombinationMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsConfigurationBean.CombinationMode[] values();\n}", "des": "Enum representing how filter queries should be combined in a search."}
{"index": 11626, "repo": "opencms-core-15.0", "code": "Class CmsConfigurationItem {\n\t// Returns the destination folder uri.\n\tCmsResource getFolder();\n\t// Returns a helper object which represents a folder which may still have to be created.\n\tCmsLazyFolder getLazyFolder();\n\t// Returns the file pattern.\n\tjava.lang.String getPattern();\n\t// Gets the source file uri.\n\tCmsResource getSourceFile();\n\t// Returns if this item is default for it's resource-type.\n\tboolean isDefault();\n}", "des": "A single item of the ADE file type configuration."}
{"index": 11627, "repo": "opencms-core-15.0", "code": "Class CmsConfirmSimpleFlushDialog {\n\t// Sets the runnable which should be run to close window.\n\tvoid setCloseRunnable​(java.lang.Runnable closeRunnable);\n\t// Sets the runnable which should be run after ok action.\n\tvoid setOkRunnable​(java.lang.Runnable okRunnable);\n}", "des": "Dialog to confirm flush without any options."}
{"index": 11628, "repo": "opencms-core-15.0", "code": "Enum CmsContainerElement.ModelGroupState {\n\t// Evaluates the given state string.\n\tstatic CmsContainerElement.ModelGroupState evaluate​(java.lang.String state);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsContainerElement.ModelGroupState valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsContainerElement.ModelGroupState[] values();\n}", "des": "The model group states."}
{"index": 11629, "repo": "opencms-core-15.0", "code": "Class CmsContainerpageActionElement {\n\t// Returns the serialized data for the core provider wrapped in a script tag.\n\tjava.lang.String export();\n\t// Returns the serialized data for the core provider.\n\tjava.lang.String exportAll();\n\t// Returns the needed server data for client-side usage.\n\tCmsCntPageData getCntPageData();\n}", "des": "Action element for container-page editor includes."}
{"index": 11630, "repo": "opencms-core-15.0", "code": "Enum CmsContainerPageCopier.CopyMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsContainerPageCopier.CopyMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsContainerPageCopier.CopyMode[] values();\n}", "des": "Enum representing the element copy mode."}
{"index": 11631, "repo": "opencms-core-15.0", "code": "Class CmsContainerPageGalleryData {\n\t// Returns the galleryData.\n\tCmsGalleryDataBean getGalleryData();\n\t// Returns the gallerySearch.\n\tCmsGallerySearchBean getGallerySearch();\n\t// Sets the galleryData.\n\tvoid setGalleryData​(CmsGalleryDataBean galleryData);\n\t// Sets the gallerySearch.\n\tvoid setGallerySearch​(CmsGallerySearchBean gallerySearch);\n}", "des": "Gallery data loaded initially for the 'Add' menu in the page editor."}
{"index": 11632, "repo": "opencms-core-15.0", "code": "Class CmsContainerPageRpcContext {\n\t// Returns the pageStructureId.\n\tCmsUUID getPageStructureId();\n\t// Returns the templateContext.\n\tjava.lang.String getTemplateContext();\n}", "des": "Bean containing the 'context' of the edited container page for use in RPC calls."}
{"index": 11633, "repo": "opencms-core-15.0", "code": "Class CmsContainerPageWrapper {\n\t// Adds an element to the given container (the first container with the given container suffix is used).\n\tboolean addElementToContainer​(java.lang.String containerName, CmsContainerElementBean element);\n\t// Marshals the page data without writing it to the VFS.\n\tbyte[] marshal();\n\t// Gets the mutable page bean instance.\n\tCmsMutableContainerPage page();\n\t// Saves the page data to the VFS, using the same resource from which this object was created.\n\tvoid saveToVfs();\n}", "des": "'Wrapper' around XML container page used for programmatic editing operations on container pages."}
{"index": 11634, "repo": "opencms-core-15.0", "code": "Class CmsContentEditorActionElement {\n\t// Returns the serialized data for the core provider wrapped in a script tag.\n\tjava.lang.String export();\n\t// Returns the serialized data for the core provider.\n\tjava.lang.String exportAll();\n}", "des": "The content editor action element."}
{"index": 11635, "repo": "opencms-core-15.0", "code": "Enum CmsContentTypeVisitor.EvaluationRule {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsContentTypeVisitor.EvaluationRule valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsContentTypeVisitor.EvaluationRule[] values();\n}", "des": "Widget display type evaluation rules."}
{"index": 11636, "repo": "opencms-core-15.0", "code": "Class CmsContextMenu.ContextMenuOpenedOnComponentEvent {\n\t// Returns the context menu.\n\tCmsContextMenu getContextMenu();\n\t// Returns the source component.\n\tcom.vaadin.ui.Component getRequestSourceComponent();\n\t// Returns the client x position.\n\tint getX();\n\t// Returns the client y position.\n\tint getY();\n}", "des": "ContextMenuOpenedOnComponentEvent is an event fired by the context menu when it's opened from a component."}
{"index": 11637, "repo": "opencms-core-15.0", "code": "Class CmsContextMenu.ContextMenuOpenedOnTableFooterEvent {\n\t// Returns the context menu.\n\tCmsContextMenu getContextMenu();\n\t// Returns the property id.\n\tjava.lang.Object getPropertyId();\n}", "des": "ContextMenuOpenedOnTableFooterEvent is an event that is fired by the context menu when it's opened by clicking on table footer"}
{"index": 11638, "repo": "opencms-core-15.0", "code": "Class CmsContextMenu.ContextMenuOpenedOnTableHeaderEvent {\n\t// Returns the context menu.\n\tCmsContextMenu getContextMenu();\n\t// Returns the property id.\n\tjava.lang.Object getPropertyId();\n}", "des": "ContextMenuOpenedOnTableHeaderEvent is an event fired by the context menu when it's opened by clicking on table header row."}
{"index": 11639, "repo": "opencms-core-15.0", "code": "Class CmsContextMenu.ContextMenuOpenedOnTableRowEvent {\n\t// Returns the context menu.\n\tCmsContextMenu getContextMenu();\n\t// Returns the item id.\n\tjava.lang.Object getItemId();\n\t// Returns the property id.\n\tjava.lang.Object getPropertyId();\n}", "des": "ContextMenuOpenedOnTableRowEvent is an event that is fired when context menu is opened by clicking on table row."}
{"index": 11640, "repo": "opencms-core-15.0", "code": "Class CmsContextMenu.ContextMenuOpenedOnTreeItemEvent {\n\t// Returns the context menu.\n\tCmsContextMenu getContextMenu();\n\t// Returns the item id.\n\tjava.lang.Object getItemId();\n}", "des": "ContextMenuOpenedOnTreeItemEvent is an event fired by the context menu when it's opened by clicking on tree item."}
{"index": 11641, "repo": "opencms-core-15.0", "code": "Class CmsContextMenuEditHandler {\n\t// Cancels the edit process.\n\tvoid cancel();\n\t// Saves the value.\n\tvoid save​(java.lang.String value);\n\t// Starts the edit process.\n\tvoid start();\n\tvoid textChange​(com.vaadin.v7.event.FieldEvents.TextChangeEvent event);\n\tvoid validate​(java.lang.Object value);\n}", "des": "Handles inline editing within the file table."}
{"index": 11642, "repo": "opencms-core-15.0", "code": "Class CmsContextMenuItemProviderGroup {\n\t// Adds a new provider class.\n\tvoid addProvider​(java.lang.Class<? extends I_CmsContextMenuItemProvider> providerClass);\n\t// Adds a provider.\n\tvoid addProvider​(I_CmsContextMenuItemProvider instance);\n\t// Gets a list of available context menu items.\n\tjava.util.List<I_CmsContextMenuItem> getMenuItems();\n\t// Initializes this instance.\n\tvoid initialize();\n}", "des": "Class used to manage multiple context menu item providers through a single instance."}
{"index": 11643, "repo": "opencms-core-15.0", "code": "Class CmsCopyDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "The copy move dialog action."}
{"index": 11644, "repo": "opencms-core-15.0", "code": "Enum CmsCopyMoveDialog.Action {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCopyMoveDialog.Action valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCopyMoveDialog.Action[] values();\n}", "des": "The copy/move actions."}
{"index": 11645, "repo": "opencms-core-15.0", "code": "Enum CmsCopyMoveDialog.DialogMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCopyMoveDialog.DialogMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCopyMoveDialog.DialogMode[] values();\n}", "des": "The dialog mode."}
{"index": 11646, "repo": "opencms-core-15.0", "code": "Class CmsCopyPageDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Action for the 'copy page' dialog."}
{"index": 11647, "repo": "opencms-core-15.0", "code": "Class CmsCopyToClipboardState {\n\t// Returns the element selector.\n\tjava.lang.String getSelector();\n\t// Sets the element selector.\n\tvoid setSelector​(java.lang.String selector);\n}", "des": "The copy to clip-board/select text button shared state."}
{"index": 11648, "repo": "opencms-core-15.0", "code": "Class CmsCopyToProjectDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "The copy to project dialog action."}
{"index": 11649, "repo": "opencms-core-15.0", "code": "Enum CmsCoreData.AdeContext {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCoreData.AdeContext valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCoreData.AdeContext[] values();\n}", "des": "A enumeration for the ADE context."}
{"index": 11650, "repo": "opencms-core-15.0", "code": "Enum CmsCoreData.ModuleKey {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCoreData.ModuleKey valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCoreData.ModuleKey[] values();\n}", "des": "The available client modules."}
{"index": 11651, "repo": "opencms-core-15.0", "code": "Class CmsCreateElementData {\n\t// Returns the created element.\n\tCmsContainerElement getCreatedElement();\n\t// Returns the model resources list.\n\tjava.util.List<CmsModelResourceInfo> getModelResources();\n\t// Returns if model selection is needed.\n\tboolean needsModelSelection();\n\t// Sets the created element.\n\tvoid setCreatedElement​(CmsContainerElement createdElement);\n\t// Sets the model resources list.\n\tvoid setModelResources​(java.util.List<CmsModelResourceInfo> modelResources);\n}", "des": "Bean containing the needed data when creating a new resource."}
{"index": 11652, "repo": "opencms-core-15.0", "code": "Class CmsDataViewColumn {\n\t// Gets the column id.\n\tjava.lang.String getId();\n\t// Gets the 'nice name' to display for this column in the table header.\n\tjava.lang.String getNiceName();\n\t// Gets the preferred width of the column in pixels.\n\tint getPreferredWidth();\n\t// Gets the column type.\n\tCmsDataViewColumn.Type getType();\n\t// Returns true if this column should be sortable.\n\tboolean isSortable();\n}", "des": "This class represents the definition of a column for the table widget used to select data items provided by an I_CmsDataView implementation."}
{"index": 11653, "repo": "opencms-core-15.0", "code": "Enum CmsDataViewColumn.Type {\n\t// Gets the value class for this column type.\n\tjava.lang.Class<?> getValueClass();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDataViewColumn.Type valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDataViewColumn.Type[] values();\n}", "des": "The column type."}
{"index": 11654, "repo": "opencms-core-15.0", "code": "Class CmsDataViewParamEncoder {\n\t// Decodes a string.\n\tstatic java.lang.String decodeString​(java.lang.String s);\n\t// Encodes a string.\n\tstatic java.lang.String encodeString​(java.lang.String s);\n}", "des": "Encodes/decodes the configuration passed to the data view popup as a request parameter."}
{"index": 11655, "repo": "opencms-core-15.0", "code": "Class CmsDataViewParams {\n\t// Creates the data view instance.\n\tI_CmsDataView createViewInstance​(CmsObject cms, java.util.Locale locale);\n\t// Return true if the list should have multi-selection enabled.\n\tboolean isMultiSelect();\n\t// Creates the script which calls the callback with the result.\n\tjava.lang.String prepareCallbackScript​(java.util.List<I_CmsDataViewItem> result);\n}", "des": "Class representing the configuration passed to the Vaadin data view dialog by the client."}
{"index": 11656, "repo": "opencms-core-15.0", "code": "Class CmsDataViewResult {\n\t// Gets the total number of results, disregarding paging.\n\tint getHitCount();\n\t// Gets the list of result items.\n\tjava.util.List<I_CmsDataViewItem> getItems();\n}", "des": "Represents the result of a search query returned by an implementation of I_CmsDataView."}
{"index": 11657, "repo": "opencms-core-15.0", "code": "Class CmsDataViewWidget {\n\t// Returns a copy of this widget which has been configured with the given configuration string.\n\tI_CmsComplexWidget configure​(java.lang.String configuration);\n\t// Gets the name of the complex widget.\n\tjava.lang.String getName();\n\t// Gets the data needed for the editor to render the complex widget.\n\tCmsComplexWidgetData getWidgetData​(CmsObject cms);\n\t// Validates the configuration.\n\tvoid validateConfiguration​(java.lang.String configuration);\n}", "des": "Complex widget for opening selecting data from a data source implementing the I_CmsDataView interface."}
{"index": 11658, "repo": "opencms-core-15.0", "code": "Class CmsDateField {\n\t// Converts a Date object to a LocalDateTime object.\n\tstatic java.time.LocalDateTime dateToLocalDateTime​(java.util.Date date);\n\t// Convenience method returning the field value converted to date.\n\tjava.util.Date getDate();\n\t// Converts a LocalDateTime object to a Date object.\n\tstatic java.util.Date localDateTimeToDate​(java.time.LocalDateTime local);\n\t// Convenience method to set the LocalDateTime field value to the given date.\n\tvoid setDate​(java.util.Date date);\n}", "des": "Convenience subclass of PopupDateField which comes preconfigured with a resolution and validation error message."}
{"index": 11659, "repo": "opencms-core-15.0", "code": "Class CmsDateResourceComparator {\n\t// Calculates the date to use for comparison of this resource based on the given date identifiers.\n\tstatic long calculateDate​(CmsObject cms, CmsResource resource, java.util.List<java.lang.String> dateIdentifiers, long defaultValue);\n\tint compare​(CmsResource res0, CmsResource res1);\n\t// Returns the date of this resource comparator key.\n\tlong getDate();\n}", "des": "Comparator for sorting resource objects based on dates."}
{"index": 11660, "repo": "opencms-core-15.0", "code": "Class CmsDavSessionProvider {\n\t// Authorizes the user using HTTP BASIC authentication, and if successful, attaches the created session to the request\n\tboolean attachSession​(org.apache.jackrabbit.webdav.WebdavRequest request);\n\tvoid releaseSession​(org.apache.jackrabbit.webdav.WebdavRequest request);\n\t// Sets the repository.\n\tvoid setRepository​(A_CmsRepository repository);\n}", "des": "Session provider implementation."}
{"index": 11661, "repo": "opencms-core-15.0", "code": "Class CmsDbContextFactory {\n\t// Returns a new database context.\n\tCmsDbContext getDbContext();\n\t// Returns a new database context based on the given user request context.\n\tCmsDbContext getDbContext​(CmsRequestContext context);\n\t// Initializes the runtime info factory with the OpenCms driver manager.\n\tvoid initialize​(CmsDriverManager driverManager);\n}", "des": "A default implementation of I_CmsDbContextFactory."}
{"index": 11662, "repo": "opencms-core-15.0", "code": "Class CmsDbExportApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "Class for the database export function."}
{"index": 11663, "repo": "opencms-core-15.0", "code": "Enum CmsDbImportApp.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDbImportApp.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDbImportApp.Mode[] values();\n}", "des": "Enumeration to distinguist between http- and server import."}
{"index": 11664, "repo": "opencms-core-15.0", "code": "Class CmsDbPropertiesApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "Class for the property definition app."}
{"index": 11665, "repo": "opencms-core-15.0", "code": "Class CmsDbRemovePubLocksApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "App for the remove publish-locks function."}
{"index": 11666, "repo": "opencms-core-15.0", "code": "Class CmsDbSqlException {\n\t// Creates a copied instance of this localized exception.\n\tCmsException createException​(CmsMessageContainer container, java.lang.Throwable cause);\n\t// Returns the query that let the statement crash.\n\tstatic java.lang.String getErrorQuery​(java.sql.Statement stmt);\n}", "des": "Used to signal sql related issues."}
{"index": 11667, "repo": "opencms-core-15.0", "code": "Class CmsDbStaticExportApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "Class for the database static export app."}
{"index": 11668, "repo": "opencms-core-15.0", "code": "Class CmsDecorationMap {\n\tint compareTo​(CmsDecorationMap o);\n\tboolean equals​(java.lang.Object obj);\n\t// Returns the decorationMap.\n\tjava.util.Map<java.lang.String,​CmsDecorationObject> getDecorationMap();\n\t// Returns the locale.\n\tjava.util.Locale getLocale();\n\t// Returns the name.\n\tjava.lang.String getName();\n\t// Sets the decorationMap.\n\tvoid setDecorationMap​(java.util.Map<java.lang.String,​CmsDecorationObject> decorationMap);\n}", "des": "The CmsDecorationMap is the object representation of a single decoartion file."}
{"index": 11669, "repo": "opencms-core-15.0", "code": "Class CmsDecorationObject {\n\t// Gets the decorated content for this decoration object.\n\tjava.lang.String getContentDecoration​(I_CmsDecoratorConfiguration config, java.lang.String text, java.lang.String contentLocale);\n\t// Returns the decoration.\n\tjava.lang.String getDecoration();\n\t// Returns the decorationDefinition.\n\tCmsDecorationDefintion getDecorationDefinition();\n\t// Returns the decorationKey.\n\tjava.lang.String getDecorationKey();\n}", "des": "The CmsDecorationObject defines a single text decoration."}
{"index": 11670, "repo": "opencms-core-15.0", "code": "Class CmsDefaultActionHandler {\n\t// Triggered when the 'add' button is clicked.\n\tvoid onAdd();\n\t// Triggered when the 'delete' button is clicked.\n\tvoid onDelete();\n\t// Triggered when the 'down' button is clicked.\n\tvoid onDown();\n\t// Triggered when the 'edit' button is clicked.\n\tvoid onEdit();\n\t// Triggered when the 'up' button is clicked.\n\tvoid onUp();\n}", "des": "Default action handler for group buttons."}
{"index": 11671, "repo": "opencms-core-15.0", "code": "Class CmsDefaultComplexWidget {\n\t// Returns a copy of this widget which has been configured with the given configuration string.\n\tI_CmsComplexWidget configure​(java.lang.String configuration);\n\t// Gets the name of the complex widget.\n\tjava.lang.String getName();\n\t// Gets the data needed for the editor to render the complex widget.\n\tCmsComplexWidgetData getWidgetData​(CmsObject cms);\n}", "des": "Dummy widget class that causes the Acacia editor to render a nested content normally without a special widget."}
{"index": 11672, "repo": "opencms-core-15.0", "code": "Class CmsDefaultLocaleHandler {\n\t// Returns the i18n information to use in the request context.\n\tCmsI18nInfo getI18nInfo​(javax.servlet.http.HttpServletRequest req, CmsUser user, CmsProject project, java.lang.String resourceName);\n\t// Will be called during system startup.\n\tvoid initHandler​(CmsObject cms);\n}", "des": "Default implementation of the locale handler."}
{"index": 11673, "repo": "opencms-core-15.0", "code": "Class CmsDefaultPasswordGenerator {\n\t// Returns random password.\n\tjava.lang.String getRandomPassword();\n\t// Generates a random password.\n\tjava.lang.String getRandomPassword​(int countTotal, int countCapitals, int countSpecials);\n\t// Get a random password.\n\tstatic java.lang.String getRandomPWD();\n\t// Get a random password.\n\tstatic java.lang.String getRandomPWD​(int countTotal, int countCapitals, int countSpecials);\n}", "des": "Default Password Generator class."}
{"index": 11674, "repo": "opencms-core-15.0", "code": "Class CmsDefaultPermissionHandler {\n\t// Performs a non-blocking permission check on a resource.\n\tI_CmsPermissionHandler.CmsPermissionCheckResult hasPermissions​(CmsDbContext dbc, CmsResource resource, CmsPermissionSet requiredPermissions, I_CmsPermissionHandler.LockCheck checkLock, CmsResourceFilter filter);\n\t// Initializes internal variables needed to work.\n\tvoid init​(CmsDriverManager driverManager, CmsSystemConfiguration systemConfiguration);\n}", "des": "Generic base driver interface."}
{"index": 11675, "repo": "opencms-core-15.0", "code": "Class CmsDefaultProfilingHandler {\n\t// Adds a handler.\n\tvoid addHandler​(I_CmsProfilingHandler handler);\n\t// Adds measured method call duration.\n\tvoid putTime​(java.lang.String key, long nanos);\n\t// Removes a handler.\n\tvoid removeHandler​(I_CmsProfilingHandler handler);\n}", "des": "Default profiling handler which only has a single instance and delegates method calls to its registered child handlers."}
{"index": 11676, "repo": "opencms-core-15.0", "code": "Class CmsDefaultPublishGroupHelper {\n\t// Creates a named group of resources.\n\tprotected CmsPublishGroup createGroup​(java.lang.String name, java.util.List<CmsPublishResource> resources);\n\t// Gets the last modification date of a resource.\n\tprotected long getDateLastModified​(CmsPublishResource res);\n\t// Gets the root path of a resource.\n\tprotected java.lang.String getRootPath​(CmsPublishResource res);\n}", "des": "Default implementation of the publish group helper which operates on CmsPublishResource objects."}
{"index": 11677, "repo": "opencms-core-15.0", "code": "Interface CmsDefaultPublishResourceFormatter.I_PublishResourceValidator {\n\t// Finds the resources which should be excluded.\n\tjava.util.Set<CmsResource> findInvalidResources​(java.util.Set<CmsResource> input);\n\t// Gets the status information for an excluded resource.\n\tCmsPublishResourceInfo getInfoForResource​(CmsResource resource);\n}", "des": "Validator which can exclude some resources from publishing and supplies a status object for the excluded resources."}
