{"index": 6824, "code": "public class BrokerLoadDataReporter extends Object implements LoadDataReporter<BrokerLoadData>, StateChangeListener {\n\t// Generate the load data.\n\tBrokerLoadData generateLoadData();\n\t// Handle the service unit state change.\n\tvoid handleEvent(String serviceUnit, ServiceUnitStateData data, Throwable t);\n\tprotected double percentChange(double oldValue, double newValue);\n\t// Report the load data to load data store async.\n\tCompletableFuture<Void> reportAsync(boolean force);\n\tprotected void tombstone();\n}", "des": "The broker load data reporter."}
{"index": 6825, "code": "@LimitedPrivate @Stable public interface CompactorMXBean {\n\t// Get the compaction record of the topic.\n\tOptional<CompactionRecord> getCompactionRecordForTopic(String topic);\n\t// Remove metrics about this topic.\n\tvoid removeTopic(String topic);\n}", "des": "JMX Bean interface for Compactor stats."}
{"index": 6826, "code": "public class ConsistentHashingStickyKeyConsumerSelector extends Object implements StickyKeyConsumerSelector {\n\t// Add a new consumer.\n\tCompletableFuture<Void> addConsumer(Consumer consumer);\n\t// Get key hash ranges handled by each consumer.\n\tMap<Consumer,List<org.apache.pulsar.client.api.Range>> getConsumerKeyHashRanges();\n\t// Remove the consumer.\n\tvoid removeConsumer(Consumer consumer);\n\t// Select a consumer by hash.\n\tConsumer select(int hash);\n}", "des": "This is a consumer selector based fixed hash range."}
{"index": 6827, "code": "@Beta public interface DelayedDeliveryTrackerFactory extends AutoCloseable {\n\t// Close the factory and release all the resources.\n\tvoid close();\n\t// Initialize the factory implementation from the broker service configuration.\n\tvoid initialize(PulsarService pulsarService);\n\t// Create a new tracker instance.\n\tDelayedDeliveryTracker newTracker(PersistentDispatcherMultipleConsumers dispatcher);\n}", "des": "Factory of InMemoryDelayedDeliveryTracker objects."}
{"index": 6828, "code": "public class GenericBrokerHostUsageImpl extends Object implements BrokerHostUsage {\n\t// Calculate the host usage information.\n\tvoid calculateBrokerHostUsage();\n\t// Returns the host usage information.\n\torg.apache.pulsar.policies.data.loadbalancer.SystemResourceUsage getBrokerHostUsage();\n}", "des": "Class that will return the broker host usage."}
{"index": 6829, "code": "public class HashRangeAutoSplitStickyKeyConsumerSelector extends Object implements StickyKeyConsumerSelector {\n\t// Add a new consumer.\n\tCompletableFuture<Void> addConsumer(Consumer consumer);\n\t// Get key hash ranges handled by each consumer.\n\tMap<Consumer,List<org.apache.pulsar.client.api.Range>> getConsumerKeyHashRanges();\n\t// Remove the consumer.\n\tvoid removeConsumer(Consumer consumer);\n\t// Select a consumer by hash.\n\tConsumer select(int hash);\n}", "des": "This is a consumer selector based fixed hash range."}
{"index": 6830, "code": "public class HashRangeExclusiveStickyKeyConsumerSelector extends Object implements StickyKeyConsumerSelector {\n\t// Add a new consumer.\n\tCompletableFuture<Void> addConsumer(Consumer consumer);\n\t// Get key hash ranges handled by each consumer.\n\tMap<Consumer,List<org.apache.pulsar.client.api.Range>> getConsumerKeyHashRanges();\n\t// Remove the consumer.\n\tvoid removeConsumer(Consumer consumer);\n\t// Select a consumer by hash.\n\tConsumer select(int hash);\n}", "des": "This is a sticky-key consumer selector based user provided range."}
{"index": 6831, "code": "public class LeastResourceUsageWithWeight extends Object implements ModularLoadManagerStrategy {\n\t// Triggered when active brokers change.\n\tvoid onActiveBrokersChange(Set<String> activeBrokers);\n\t// Find a suitable broker to assign the given bundle to.\n\tOptional<String> selectBroker(Set<String> candidates, org.apache.pulsar.policies.data.loadbalancer.BundleData bundleToAssign, LoadData loadData, ServiceConfiguration conf);\n}", "des": "Placement strategy which selects a broker based on which one has the least resource usage with weight."}
{"index": 6832, "code": "public class LinuxBrokerHostUsageImpl extends Object implements BrokerHostUsage {\n\t// Calculate the host usage information.\n\tvoid calculateBrokerHostUsage();\n\t// Returns the host usage information.\n\torg.apache.pulsar.policies.data.loadbalancer.SystemResourceUsage getBrokerHostUsage();\n}", "des": "Class that will return the broker host usage."}
{"index": 6833, "code": "public interface LoadDataReporter<T> {\n\t// Generate the load data.\n\tT generateLoadData();\n\t// Report the load data to load data store async.\n\tCompletableFuture<Void> reportAsync(boolean force);\n}", "des": "The load data reporter, it publish the load data to load data storage."}
{"index": 6834, "code": "public interface LoadManagerContext {\n\t// The broker configuration.\n\tServiceConfiguration brokerConfiguration();\n\t// Broker load data store, each component use the context to access the load data store.\n\tLoadDataStore<BrokerLoadData> brokerLoadDataStore();\n\t// The broker register.\n\tBrokerRegistry brokerRegistry();\n\t// Top bundle load data store.\n\tLoadDataStore<TopBundlesLoadData> topBundleLoadDataStore();\n}", "des": "The filter and load balance context, use for delivering context between filter, scheduler and strategy."}
{"index": 6835, "code": "public interface LoadManagerScheduler extends Closeable {\n\t// Close the load manager scheduler.\n\tvoid close();\n\t// Execute the schedule task.\n\tvoid execute();\n\t// Start the load manager scheduler.\n\tvoid start();\n}", "des": "The base interface to schedule execute task in load manager."}
{"index": 6836, "code": "public interface LoadSheddingStrategy {\n\t// Recommend that all of the returned bundles be unloaded.\n\tcom.google.common.collect.Multimap<String,String> findBundlesForUnloading(LoadData loadData, ServiceConfiguration conf);\n\t// Triggered when active broker changes.\n\tdefault void onActiveBrokersChange(Set<String> activeBrokers);\n}", "des": "Load management component which determines the criteria for unloading bundles."}
{"index": 6837, "code": "public class MLPendingAckReplyCallBack extends Object implements PendingAckReplyCallBack {\n\t// Handle metadata entry.\n\tvoid handleMetadataEntry(PendingAckMetadataEntry pendingAckMetadataEntry);\n\t// Pending ack replay complete callback for pending ack store.\n\tvoid replayComplete();\n\t// Pending ack replay failed callback for pending ack store.\n\tvoid replayFailed(Throwable t);\n}", "des": "MLPendingAckStore reply call back."}
{"index": 6838, "code": "public class MLPendingAckStoreProvider extends Object implements TransactionPendingAckStoreProvider {\n\t// Check pending ack store has been initialized before.\n\tCompletableFuture<Boolean> checkInitializedBefore(PersistentSubscription subscription);\n\tstatic void closeBufferedWriterMetrics();\n\tstatic void initBufferedWriterMetrics(String brokerAdvertisedAddress);\n\t// Open the pending ack store.\n\tCompletableFuture<PendingAckStore> newPendingAckStore(PersistentSubscription subscription);\n}", "des": "Provider is for MLPendingAckStore."}
{"index": 6839, "code": "public interface ModularLoadManagerStrategy {\n\t// Create a placement strategy using the configuration.\n\tstatic ModularLoadManagerStrategy create(ServiceConfiguration conf);\n\t// Triggered when active brokers change.\n\tdefault void onActiveBrokersChange(Set<String> activeBrokers);\n\t// Find a suitable broker to assign the given bundle to.\n\tOptional<String> selectBroker(Set<String> candidates, org.apache.pulsar.policies.data.loadbalancer.BundleData bundleToAssign, LoadData loadData, ServiceConfiguration conf);\n}", "des": "Interface which serves as a component for ModularLoadManagerImpl, flexibly allowing the injection of potentially complex strategies."}
{"index": 6840, "code": "public interface NamespaceBundleOwnershipListener extends Predicate<NamespaceBundle> {\n\t// Will be call after a NamespaceBundle owned by broker.\n\tvoid onLoad(NamespaceBundle bundle);\n\t// Will be call after a NamespaceBundle unloaded from broker.\n\tvoid unLoad(NamespaceBundle bundle);\n}", "des": "Listener for NamespaceBundle ownership changes."}
{"index": 6841, "code": "public interface NamespaceUnloadStrategy {\n\t// Recommend that all the returned bundles be unloaded.\n\tSet<UnloadDecision> findBundlesForUnloading(LoadManagerContext context, Map<String,Long> recentlyUnloadedBundles, Map<String,Long> recentlyUnloadedBrokers);\n\t// Initializes the internals.\n\tvoid initialize(PulsarService pulsar);\n}", "des": "The namespace unload strategy."}
{"index": 6842, "code": "public static enum PendingAckHandleState.State extends Enum<PendingAckHandleState.State> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PendingAckHandleState.State valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PendingAckHandleState.State[] values();\n}", "des": "The state of the pending ack handle PendingAckHandleState."}
{"index": 6843, "code": "public interface PendingAckReplyCallBack {\n\t// Handle metadata entry.\n\tvoid handleMetadataEntry(PendingAckMetadataEntry pendingAckMetadataEntry);\n\t// Pending ack replay complete callback for pending ack store.\n\tvoid replayComplete();\n\t// Pending ack replay failed callback for pending ack store.\n\tvoid replayFailed(Throwable t);\n}", "des": "Call back for pending ack reply."}
{"index": 6844, "code": "public interface RawMessage extends AutoCloseable {\n\tvoid close();\n\t// Get a ByteBuf which contains the headers and payload of the message.\n\tio.netty.buffer.ByteBuf getHeadersAndPayload();\n\t// Get the message ID of this message.\n\torg.apache.pulsar.client.api.MessageId getMessageId();\n\t// Get the protobuf representation of the message ID of this message.\n\torg.apache.pulsar.common.api.proto.MessageIdData getMessageIdData();\n\t// Serialize a raw message to a ByteBuf.\n\tio.netty.buffer.ByteBuf serialize();\n}", "des": "A representation of a message in a topic in its raw form (i.e."}
{"index": 6845, "code": "public static enum ResourceGroup.ResourceGroupMonitoringClass extends Enum<ResourceGroup.ResourceGroupMonitoringClass> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ResourceGroup.ResourceGroupMonitoringClass valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ResourceGroup.ResourceGroupMonitoringClass[] values();\n}", "des": "Usage \"sense\" for resource groups: publish and dispatch for now; may be more later (e.g., storage-monitoring) ToDo: \"class\" is vague; is there a better term to call this?"}
{"index": 6846, "code": "public static enum ResourceGroup.ResourceGroupRefTypes extends Enum<ResourceGroup.ResourceGroupRefTypes> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ResourceGroup.ResourceGroupRefTypes valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ResourceGroup.ResourceGroupRefTypes[] values();\n}", "des": "The entities that might reference RGs are tenants, namespaces (and maybe topics, later)."}
{"index": 6847, "code": "public interface SchemaDataValidator {\n\t// Validate a schema data is in a valid form.\n\tvoid validate(org.apache.pulsar.common.protocol.schema.SchemaData schemaData);\n\t// Validate if the schema data is well formed.\n\tstatic void validateSchemaData(org.apache.pulsar.common.protocol.schema.SchemaData schemaData);\n}", "des": "A validator to validate the schema data is well formed."}
{"index": 6848, "code": "public enum ServiceUnitState extends Enum<ServiceUnitState> {\n\tstatic boolean isActiveState(ServiceUnitState state);\n\tstatic boolean isInFlightState(ServiceUnitState state);\n\tstatic boolean isValidTransition(ServiceUnitState from, ServiceUnitState to);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ServiceUnitState valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ServiceUnitState[] values();\n}", "des": "Defines the possible states for service units."}
{"index": 6849, "code": "public class SplitScheduler extends Object implements LoadManagerScheduler {\n\t// Close the load manager scheduler.\n\tvoid close();\n\t// Execute the schedule task.\n\tvoid execute();\n\t// Start the load manager scheduler.\n\tvoid start();\n}", "des": "Service Unit(e.g."}
{"index": 6850, "code": "@Unstable public interface StreamingDispatcher extends Dispatcher {\n\t// Notify dispatcher can issue next read request.\n\tvoid canReadMoreEntries(boolean withBackoff);\n\tString getName();\n\t// Notify dispatcher to inform consumers reached end of topic.\n\tvoid notifyConsumersEndOfTopic();\n\t// Notify dispatcher issued read entry request has complete.\n\tvoid readEntryComplete(Entry entry, PendingReadEntryRequest ctx);\n}", "des": "A Dispatcher that'll use StreamingEntryReader to read entries from ManagedLedger."}
{"index": 6851, "code": "public class ThresholdShedder extends Object implements LoadSheddingStrategy {\n\t// Recommend that all of the returned bundles be unloaded.\n\tcom.google.common.collect.Multimap<String,String> findBundlesForUnloading(LoadData loadData, ServiceConfiguration conf);\n\t// Triggered when active broker changes.\n\tvoid onActiveBrokersChange(Set<String> newBrokers);\n}", "des": "Load shedding strategy that unloads any broker that exceeds the average resource utilization of all brokers by a configured threshold."}
{"index": 6852, "code": "public class TopBundleLoadDataReporter extends Object implements LoadDataReporter<TopBundlesLoadData>, StateChangeListener {\n\t// Generate the load data.\n\tTopBundlesLoadData generateLoadData();\n\t// Handle the service unit state change.\n\tvoid handleEvent(String serviceUnit, ServiceUnitStateData data, Throwable t);\n\t// Report the load data to load data store async.\n\tCompletableFuture<Void> reportAsync(boolean force);\n\tprotected void tombstone();\n}", "des": "The top k highest-loaded bundles' load data reporter."}
{"index": 6853, "code": "public static enum TopicEventsListener.EventStage extends Enum<TopicEventsListener.EventStage> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TopicEventsListener.EventStage valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TopicEventsListener.EventStage[] values();\n}", "des": "Stages of events currently supported."}
{"index": 6854, "code": "public static enum TopicEventsListener.TopicEvent extends Enum<TopicEventsListener.TopicEvent> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TopicEventsListener.TopicEvent valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TopicEventsListener.TopicEvent[] values();\n}", "des": "Types of events currently supported."}
{"index": 6855, "code": "public static enum TopicTransactionBufferState.State extends Enum<TopicTransactionBufferState.State> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic TopicTransactionBufferState.State valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic TopicTransactionBufferState.State[] values();\n}", "des": "The state of the topicTransactionBuffer TopicTransactionBuffer."}
{"index": 6856, "code": "@Beta public interface TransactionBufferProvider {\n\t// Construct a provider from the provided class.\n\tstatic TransactionBufferProvider newProvider(String providerClassName);\n\t// Open the persistent transaction buffer.\n\tTransactionBuffer newTransactionBuffer(Topic originTopic);\n}", "des": "A provider that provides TransactionBuffer."}
{"index": 6857, "code": "public interface TransactionPendingAckStoreProvider {\n\t// Check pending ack store has been initialized before.\n\tCompletableFuture<Boolean> checkInitializedBefore(PersistentSubscription subscription);\n\t// Open the pending ack store.\n\tCompletableFuture<PendingAckStore> newPendingAckStore(PersistentSubscription subscription);\n\t// Construct a provider from the provided class.\n\tstatic TransactionPendingAckStoreProvider newProvider(String providerClassName);\n}", "des": "Provider of transaction pending ack store."}
{"index": 6858, "code": "public class TransferShedder extends Object implements NamespaceUnloadStrategy {\n\t// Recommend that all the returned bundles be unloaded.\n\tSet<UnloadDecision> findBundlesForUnloading(LoadManagerContext context, Map<String,Long> recentlyUnloadedBundles, Map<String,Long> recentlyUnloadedBrokers);\n\t// Initializes the internals.\n\tvoid initialize(PulsarService pulsar);\n\tprotected boolean isLoadBalancerSheddingBundlesWithPoliciesEnabled(LoadManagerContext context, NamespaceBundle namespaceBundle);\n}", "des": "Load shedding strategy that unloads bundles from the highest loaded brokers."}
{"index": 6859, "code": "public abstract class AbstractOAuth2TokenAuthenticationToken<T extends org.springframework.security.oauth2.core.OAuth2Token> extends org.springframework.security.authentication.AbstractAuthenticationToken {\n\tObject getCredentials();\n\tObject getPrincipal();\n\t// Get the token bound to this Authentication.\n\tfinal T getToken();\n\t// Returns the attributes of the access token.\n\tabstract Map<String,Object> getTokenAttributes();\n}", "des": "Base class for AbstractAuthenticationToken implementations that expose common attributes between different OAuth 2.0 Access Token Formats."}
{"index": 6860, "code": "public final class BearerTokenError extends org.springframework.security.oauth2.core.OAuth2Error {\n\t// Return the HTTP status.\n\torg.springframework.http.HttpStatus getHttpStatus();\n\t// Return the scope.\n\tString getScope();\n}", "des": "A representation of a Bearer Token Error."}
{"index": 6861, "code": "public final class BearerTokenErrors extends Object {\n\t// Create a BearerTokenError caused by an invalid token\n\tstatic BearerTokenError insufficientScope(String message, String scope);\n\t// Create a BearerTokenError caused by an invalid request\n\tstatic BearerTokenError invalidRequest(String message);\n\t// Create a BearerTokenError caused by an invalid token\n\tstatic BearerTokenError invalidToken(String message);\n}", "des": "A factory for creating BearerTokenError instances that correspond to the registered Bearer Token Error Codes."}
{"index": 6862, "code": "@Transient public class JwtAuthenticationToken extends AbstractOAuth2TokenAuthenticationToken<org.springframework.security.oauth2.jwt.Jwt> {\n\t// The principal name which is, by default, the Jwt's subject\n\tString getName();\n\t// Returns the attributes of the access token.\n\tMap<String,Object> getTokenAttributes();\n}", "des": "An implementation of an AbstractOAuth2TokenAuthenticationToken representing a Jwt Authentication."}
{"index": 6863, "code": "public abstract class AbstractContextMapper<T> extends Object implements ContextMapper<T> {\n\t// Map a single DirContextOperation to an object.\n\tprotected abstract T doMapFromContext(DirContextOperations ctx);\n\t// Map a single LDAP Context to an object.\n\tfinal T mapFromContext(Object ctx);\n}", "des": "Abstract superclass that may be used instead of implementing ContextMapper directly."}
{"index": 6864, "code": "public class AndFilter extends BinaryLogicalFilter {\n\t// Add a query to the AND expression.\n\tAndFilter and(Filter query);\n\t// Implement this in subclass to return the logical operator, for example \"&\".\n\tprotected String getLogicalOperator();\n}", "des": "A filter for a logical AND."}
{"index": 6865, "code": "public static enum Attribute.Type extends Enum<Attribute.Type> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic Attribute.Type valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic Attribute.Type[] values();\n}", "des": "The Type attribute indicates whether a field is regarded as binary based or string based by the LDAP JNDI provider."}
{"index": 6866, "code": "public interface AuthenticationSource {\n\t// Get the credentials to use when creating an authenticated context.\n\tString getCredentials();\n\t// Get the principal to use when creating an authenticated context.\n\tString getPrincipal();\n}", "des": "An AuthenticationSource is responsible for providing the principal (user DN) and credentials to be used when creating a new context."}
{"index": 6867, "code": "public interface BaseLdapPathSource {\n\t// Get the base LDAP path as a LdapName.\n\tLdapName getBaseLdapName();\n\t// Deprecated. DistinguishedName and associated classes and methods are deprecated as of 2.0.\n\tDistinguishedName getBaseLdapPath();\n\t// Get the base LDAP path as a String.\n\tString getBaseLdapPathAsString();\n}", "des": "Implementations of this interface are capable of providing a base LDAP path."}
{"index": 6868, "code": "public abstract class BinaryLogicalFilter extends AbstractFilter {\n\t// Add a query to this logical operation.\n\tfinal BinaryLogicalFilter append(Filter query);\n\tfinal BinaryLogicalFilter appendAll(Collection<Filter> subQueries);\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n\t// Implement this in subclass to return the logical operator, for example \"&\".\n\tprotected abstract String getLogicalOperator();\n}", "des": "Abstract superclass for binary logical operations, that is \"AND\" and \"OR\" operations."}
{"index": 6869, "code": "public class BindOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor to manage a bind operation."}
{"index": 6870, "code": "public final class CollectingAuthenticationErrorCallback extends Object implements AuthenticationErrorCallback {\n\t// This method will be called with the authentication exception in case there is a problem with the authentication.\n\tvoid execute(Exception e);\n\tException getError();\n\t// Check whether this callback has collected an error.\n\tboolean hasError();\n}", "des": "Convenience implementation of AuthenticationErrorCallback that stores the given exception and provides a method for retrieving it."}
{"index": 6871, "code": "public abstract class CompareFilter extends AbstractFilter {\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// Override to perform special encoding in subclass.\n\tprotected String encodeValue(String value);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n\t// Implement this method in subclass to return a String representing the operator.\n\tprotected abstract String getCompareString();\n}", "des": "Abstract superclass for filters that compare values."}
{"index": 6872, "code": "public class CompensatingTransactionObject extends Object {\n\t// Get the DirContextHolder.\n\tCompensatingTransactionHolderSupport getHolder();\n\t// Set the CompensatingTransactionHolderSupport associated with the current transaction.\n\tvoid setHolder(CompensatingTransactionHolderSupport holder);\n}", "des": "Transaction object used by AbstractCompensatingTransactionManagerDelegate."}
{"index": 6873, "code": "public interface CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "Responsible for executing a single recorded operation as well as committing or rolling it back, depending on the transaction outcome."}
{"index": 6874, "code": "public interface CompensatingTransactionOperationManager {\n\t// Commit all recorded operations.\n\tvoid commit();\n\t// Indicates that the supplied operation (method name) is to be performed.\n\tvoid performOperation(Object resource, String operation, Object[] args);\n\t// Rollback all recorded operations by performing each of the recorded rollback operations.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationManager implementation records and performs operations that are to be performed within a compensating transaction."}
{"index": 6875, "code": "public interface ContainerCriteria extends LdapQuery {\n\t// Append a logical And condition to the currently built filter.\n\tConditionCriteria and(String attribute);\n\t// Append an And condition for a nested criterion.\n\tContainerCriteria and(ContainerCriteria nested);\n\t// Append a logical Or condition to the currently built filter.\n\tConditionCriteria or(String attribute);\n\t// Append an Or condition for a nested criterion.\n\tContainerCriteria or(ContainerCriteria nested);\n}", "des": "And/or filter builder support for LdapQuery."}
{"index": 6876, "code": "public interface ContextSource {\n\t// Gets a DirContext instance authenticated using the supplied principal and credentials.\n\tDirContext getContext(String principal, String credentials);\n\t// Gets a read-only DirContext.\n\tDirContext getReadOnlyContext();\n\t// Gets a read-write DirContext instance.\n\tDirContext getReadWriteContext();\n}", "des": "A ContextSource is responsible for configuring and creating DirContext instances."}
{"index": 6877, "code": "public interface ConverterManager {\n\t// Determine whether this converter manager is able to carry out a specified conversion.\n\tboolean canConvert(Class<?> fromClass, String syntax, Class<?> toClass);\n\t// Convert a given source object with an optional LDAP syntax to an instance of a given class.\n\t<T> T convert(Object source, String syntax, Class<T> toClass);\n}", "des": "A simple interface to be implemented to provide type conversion functionality."}
{"index": 6878, "code": "public class CountNameClassPairCallbackHandler extends Object implements NameClassPairCallbackHandler {\n\t// Get the number of rows that was returned by the search.\n\tint getNoOfRows();\n\t// Handle one entry.\n\tvoid handleNameClassPair(NameClassPair nameClassPair);\n}", "des": "A NameClassPairCallbackHandler for counting all returned entries."}
{"index": 6879, "code": "public class DefaultTempEntryRenamingStrategy extends Object implements TempEntryRenamingStrategy {\n\t// Get a temporary name for the current entry to be renamed to.\n\tName getTemporaryName(Name originalName);\n\t// Get the suffix that will be used for renaming temporary entries.\n\tString getTempSuffix();\n\t// Set the suffix to use for renaming temporary entries.\n\tvoid setTempSuffix(String tempSuffix);\n}", "des": "Default implementation of TempEntryRenamingStrategy."}
{"index": 6880, "code": "public abstract class DelegatingBaseLdapPathContextSourceSupport extends Object implements BaseLdapPathSource {\n\t// Get the base LDAP path as a LdapName.\n\tfinal LdapName getBaseLdapName();\n\t// Get the base LDAP path as a DistinguishedName.\n\tfinal DistinguishedName getBaseLdapPath();\n\t// Get the base LDAP path as a String.\n\tfinal String getBaseLdapPathAsString();\n\t// Get the target ContextSource.\n\tprotected abstract ContextSource getTarget();\n}", "des": "Support class to provide BaseLdapPathSource functionality to ContextSource instances that act as proxies."}
{"index": 6881, "code": "public class DigestMd5DirContextAuthenticationStrategy extends Object implements DirContextAuthenticationStrategy {\n\t// This method is responsible for post-processing the DirContext instance after it has been created.\n\tDirContext processContextAfterCreation(DirContext ctx, String userDn, String password);\n\t// This method is responsible for preparing the environment to be used when creating the DirContext instance.\n\tvoid setupEnvironment(Hashtable<String,Object> env, String userDn, String password);\n}", "des": "Authentication strategy for LDAP DIGEST-MD5 SASL mechanism."}
{"index": 6882, "code": "public interface DirContextAuthenticationStrategy {\n\t// This method is responsible for post-processing the DirContext instance after it has been created.\n\tDirContext processContextAfterCreation(DirContext ctx, String userDn, String password);\n\t// This method is responsible for preparing the environment to be used when creating the DirContext instance.\n\tvoid setupEnvironment(Hashtable<String,Object> env, String userDn, String password);\n}", "des": "A strategy to use when authenticating LDAP connections on creation."}
{"index": 6883, "code": "public class DirContextHolder extends CompensatingTransactionHolderSupport {\n\t// Return the DirContext associated with the current transaction.\n\tDirContext getCtx();\n\t// Get the actual transacted resource.\n\tprotected Object getTransactedResource();\n\t// Set the DirContext associated with the current transaction.\n\tvoid setCtx(DirContext ctx);\n}", "des": "Keeps track of the transaction DirContext."}
{"index": 6884, "code": "public interface DirContextProcessor {\n\t// Perform post-processing on the supplied DirContext.\n\tvoid postProcess(DirContext ctx);\n\t// Perform pre-processing on the supplied DirContext.\n\tvoid preProcess(DirContext ctx);\n}", "des": "Interface to be called in search by LdapTemplate before and after the actual search and enumeration traversal."}
{"index": 6885, "code": "public class DnParserImplTokenManager extends Object implements DnParserImplConstants {\n\t// Get the next Token.\n\tToken getNextToken();\n\tprotected Token jjFillToken();\n\t// Reinitialise parser.\n\tvoid ReInit(SimpleCharStream stream);\n\t// Reinitialise parser.\n\tvoid ReInit(SimpleCharStream stream, int lexState);\n\t// Set debug output.\n\tvoid setDebugStream(PrintStream ds);\n\t// Switch to specified lex state.\n\tvoid SwitchTo(int lexState);\n}", "des": "Token Manager."}
{"index": 6886, "code": "public interface Filter {\n\t// Encodes the filter to a String.\n\tString encode();\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buf);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n}", "des": "Common interface for LDAP filters."}
{"index": 6887, "code": "public class HardcodedFilter extends AbstractFilter {\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n}", "des": "Allows hard coded parts to be included in a search filter."}
{"index": 6888, "code": "public class LdapAttributes extends BasicAttributes {\n\t// Deprecated. and associated classes and methods are deprecated as of 2.0.\n\tDistinguishedName getDN();\n\t// Returns the distinguished name to which the object is bound.\n\tLdapName getName();\n\t// Deprecated. and associated classes and methods are deprecated as of 2.0.\n\tvoid setDN(DistinguishedName dn);\n\tvoid setName(Name name);\n}", "des": "Extends BasicAttributes to add specialized support for DNs."}
{"index": 6889, "code": "public static interface LdapClient.AuthenticateSpec {\n\t// Authenticate the query against the provided password\n\tvoid execute();\n\t// Authenticate the query against the provided password.\n\t<T> T execute(AuthenticatedLdapEntryContextMapper<T> mapper);\n\t// The password to use\n\tLdapClient.AuthenticateSpec password(String password);\n\t// The query to authenticate\n\tLdapClient.AuthenticateSpec query(LdapQuery query);\n}", "des": "The specifications for the LdapClient.authenticate() request."}
{"index": 6890, "code": "public static interface LdapClient.BindSpec {\n\t// The attributes to associate with this binding.\n\tLdapClient.BindSpec attributes(Attributes attributes);\n\t// Bind the name, object, and attributes together\n\tvoid execute();\n\t// The object to associate with this binding.\n\tLdapClient.BindSpec object(Object object);\n\t// Replace any existing binding with this one (equivalent to \"rebind\").\n\tLdapClient.BindSpec replaceExisting(boolean replaceExisting);\n}", "des": "The specifications for the LdapClient.bind(java.lang.String) request."}
{"index": 6891, "code": "public static interface LdapClient.ListBindingsSpec {\n\t// Return the entry's children as a list of mapped results\n\t<T> List<T> toList(ContextMapper<T> mapper);\n\t// Return the entry's children as a list of mapped results\n\t<T> List<T> toList(NameClassPairMapper<T> mapper);\n\t// Return the entry's children as a stream of mapped results.\n\t<T> Stream<T> toStream(ContextMapper<T> mapper);\n\t// Return the entry's children as a stream of mapped results.\n\t<T> Stream<T> toStream(NameClassPairMapper<T> mapper);\n}", "des": "The specifications for the LdapClient.listBindings(java.lang.String) request."}
{"index": 6892, "code": "public static interface LdapClient.ListSpec {\n\t// Return the entry's children as a list of mapped results\n\t<T> List<T> toList(NameClassPairMapper<T> mapper);\n\t// Return the entry's children as a stream of mapped results.\n\t<T> Stream<T> toStream(NameClassPairMapper<T> mapper);\n}", "des": "The specifications for the LdapClient.list(java.lang.String) request."}
{"index": 6893, "code": "public static interface LdapClient.ModifySpec {\n\t// The attribute modifications to apply to this entry\n\tLdapClient.ModifySpec attributes(ModificationItem... modifications);\n\t// Modify the name and attributes for this entry\n\tvoid execute();\n\t// The new name for this entry.\n\tLdapClient.ModifySpec name(String name);\n\t// The new name for this entry.\n\tLdapClient.ModifySpec name(Name name);\n}", "des": "The specifications for the LdapClient.modify(java.lang.String) request."}
{"index": 6894, "code": "public static interface LdapClient.UnbindSpec {\n\t// Delete the entry\n\tvoid execute();\n\t// Delete all children related to this entry\n\tLdapClient.UnbindSpec recursive(boolean recursive);\n}", "des": "The specifications for the LdapClient.unbind(java.lang.String) request."}
{"index": 6895, "code": "public interface LdapQuery {\n\t// Get the attributes to return.\n\tString[] attributes();\n\t// Get the search base.\n\tName base();\n\t// Get the count limit.\n\tInteger countLimit();\n\t// Get the filter.\n\tFilter filter();\n\t// Get the search scope.\n\tSearchScope searchScope();\n\t// Get the time limit.\n\tInteger timeLimit();\n}", "des": "Holds all information regarding a Ldap query to be performed."}
{"index": 6896, "code": "public static final class LdapTemplate.NullDirContextProcessor extends Object implements DirContextProcessor {\n\t// Perform post-processing on the supplied DirContext.\n\tvoid postProcess(DirContext ctx);\n\t// Perform pre-processing on the supplied DirContext.\n\tvoid preProcess(DirContext ctx);\n}", "des": "Do-nothing implementation of DirContextProcessor."}
{"index": 6897, "code": "public final class LdapTransactionUtils extends Object {\n\t// Get the argument as a Name.\n\tstatic Name getArgumentAsName(Object arg);\n\t// Get the first parameter in the argument list as a Name.\n\tstatic Name getFirstArgumentAsName(Object[] args);\n\t// Check whether the supplied method is a method for which transactions is supported (and which should be recorded for possible rollback later).\n\tstatic boolean isSupportedWriteTransactionOperation(String methodName);\n}", "des": "Utility methods for working with LDAP transactions."}
{"index": 6898, "code": "public class ModifyAttributesOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor to manage a modifyAttributes operation."}
{"index": 6899, "code": "public class NotFilter extends AbstractFilter {\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n}", "des": "A filter for 'not'."}
{"index": 6900, "code": "public class NotPresentFilter extends AbstractFilter {\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n}", "des": "A convenience class that combines NOT behavior with present behavior to allow the user to check for the non-existence of a attribute."}
{"index": 6901, "code": "public class NullOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor that performs nothing."}
{"index": 6902, "code": "public class OrFilter extends BinaryLogicalFilter {\n\t// Implement this in subclass to return the logical operator, for example \"&\".\n\tprotected String getLogicalOperator();\n\t// Add a query to the OR expression\n\tOrFilter or(Filter query);\n}", "des": "Filter for logical OR."}
{"index": 6903, "code": "public class PresentFilter extends AbstractFilter {\n\t// Encodes the filter to a StringBuffer.\n\tStringBuffer encode(StringBuffer buff);\n\t// All filters must implement equals.\n\tboolean equals(Object o);\n}", "des": "Filter that allows the user to check for the existence of a attribute."}
{"index": 6904, "code": "public class RebindOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor to manage a rebind operation."}
{"index": 6905, "code": "public class RenameOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor to manage a rename operation."}
{"index": 6906, "code": "public enum SearchScope extends Enum<SearchScope> {\n\tint getId();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic SearchScope valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic SearchScope[] values();\n}", "des": "Type safe definitions of search scopes."}
{"index": 6907, "code": "public class SimpleDirContextAuthenticationStrategy extends Object implements DirContextAuthenticationStrategy {\n\t// This method is responsible for post-processing the DirContext instance after it has been created.\n\tDirContext processContextAfterCreation(DirContext ctx, String userDn, String password);\n\t// This method is responsible for preparing the environment to be used when creating the DirContext instance.\n\tvoid setupEnvironment(Hashtable<String,Object> env, String userDn, String password);\n}", "des": "The default DirContextAuthenticationStrategy implementation, setting the DirContext environment up for 'SIMPLE' authentication, and specifying the user DN and password as SECURITY_PRINCIPAL and SECURITY_CREDENTIALS respectively in the authenticated environment before the context is created."}
{"index": 6908, "code": "public class SortControlDirContextProcessor extends AbstractFallbackRequestAndResponseControlDirContextProcessor {\n\t// Create an instance of the appropriate RequestControl.\n\tControl createRequestControl();\n\t// Get the result code returned by the control.\n\tint getResultCode();\n\t// Get the sort key.\n\tString getSortKey();\n\tprotected void handleResponse(Object control);\n\t// Check whether the returned values were actually sorted by the server.\n\tboolean isSorted();\n}", "des": "DirContextProcessor implementation for managing the SortControl."}
{"index": 6909, "code": "public class Token extends Object implements Serializable {\n\t// An optional attribute value of the Token.\n\tObject getValue();\n\tstatic Token newToken(int ofKind);\n\t// Returns a new Token object, by default.\n\tstatic Token newToken(int ofKind, String image);\n}", "des": "Describes the input token stream."}
{"index": 6910, "code": "public class TransactionAwareContextSourceProxy extends DelegatingBaseLdapPathContextSourceSupport implements ContextSource {\n\t// Gets a DirContext instance authenticated using the supplied principal and credentials.\n\tDirContext getContext(String principal, String credentials);\n\t// Gets a read-only DirContext.\n\tDirContext getReadOnlyContext();\n\t// Gets a read-write DirContext instance.\n\tDirContext getReadWriteContext();\n\t// Get the target ContextSource.\n\tContextSource getTarget();\n}", "des": "A proxy for ContextSource to make sure that the returned DirContext objects are aware of the surrounding transactions."}
{"index": 6911, "code": "public class UnbindOperationExecutor extends Object implements CompensatingTransactionOperationExecutor {\n\t// Commit the operation.\n\tvoid commit();\n\t// Perform the operation.\n\tvoid performOperation();\n\t// Rollback the operation, restoring state of the target as it was before the operation was performed using the information supplied on creation of this instance.\n\tvoid rollback();\n}", "des": "A CompensatingTransactionOperationExecutor to manage an unbind operation."}
{"index": 6912, "code": "public abstract class AbstractWireFeedHttpMessageConverter<T extends com.rometools.rome.feed.WireFeed> extends AbstractHttpMessageConverter<T> {\n\t// Abstract template method that reads the actual object.\n\tprotected T readInternal(Class<? extends T> clazz, HttpInputMessage inputMessage);\n\t// Abstract template method that writes the actual body.\n\tprotected void writeInternal(T wireFeed, HttpOutputMessage outputMessage);\n}", "des": "Abstract base class for Atom and RSS Feed message converters, using the ROME tools project."}
{"index": 6913, "code": "public class AsyncRequestTimeoutException extends RuntimeException implements ErrorResponse {\n\t// Return the body for the response, formatted as an RFC 7807 ProblemDetail whose status should match the response status.\n\tProblemDetail getBody();\n\t// Return the HTTP status code to use for the response.\n\tHttpStatusCode getStatusCode();\n}", "des": "Exception to be thrown when an async request times out."}
{"index": 6914, "code": "public class BufferingClientHttpRequestFactory extends AbstractClientHttpRequestFactoryWrapper {\n\t// Create a new ClientHttpRequest for the specified URI and HTTP method by using the passed-on request factory.\n\tprotected ClientHttpRequest createRequest(URI uri, HttpMethod httpMethod, ClientHttpRequestFactory requestFactory);\n\t// Indicates whether the request/response exchange for the given URI and method should be buffered in memory.\n\tprotected boolean shouldBuffer(URI uri, HttpMethod httpMethod);\n}", "des": "Wrapper for a ClientHttpRequestFactory that buffers all outgoing and incoming streams in memory."}
{"index": 6915, "code": "public interface ClientCodecConfigurer extends CodecConfigurer {\n\t// Create a copy of this CodecConfigurer.\n\tClientCodecConfigurer clone();\n\t// Static factory method for a ClientCodecConfigurer.\n\tstatic ClientCodecConfigurer create();\n\t// Provides a way to customize or replace HTTP message readers and writers registered by default.\n\tClientCodecConfigurer.ClientDefaultCodecs defaultCodecs();\n}", "des": "Extension of CodecConfigurer for HTTP message reader and writer options relevant on the client side."}
{"index": 6916, "code": "public enum ClientHttpObservationDocumentation extends Enum<ClientHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ClientHttpObservationDocumentation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ClientHttpObservationDocumentation[] values();\n}", "des": "Documented KeyValues for HTTP client observations."}
{"index": 6917, "code": "public interface ClientHttpRequest extends ReactiveHttpOutputMessage {\n\t// Return a mutable map of request cookies to send to the server.\n\torg.springframework.util.MultiValueMap<String,HttpCookie> getCookies();\n\t// Return the HTTP method of the request.\n\tHttpMethod getMethod();\n\t// Return the request from the underlying HTTP library.\n\t<T> T getNativeRequest();\n\t// Return the URI of the request.\n\tURI getURI();\n}", "des": "Represents a client-side reactive HTTP request."}
{"index": 6918, "code": "public interface ClientHttpResponse extends HttpInputMessage, Closeable {\n\t// Close this response, freeing any resources created.\n\tvoid close();\n\t// Deprecated. as of 6.0, in favor of getStatusCode(); scheduled for removal in 6.2\n\tint getRawStatusCode();\n\t// Get the HTTP status code as an HttpStatusCode.\n\tHttpStatusCode getStatusCode();\n\t// Get the HTTP status text of the response.\n\tString getStatusText();\n}", "des": "Represents a client-side HTTP response."}
{"index": 6919, "code": "public class ClientRequestObservationContext extends io.micrometer.observation.transport.RequestReplySenderContext<ClientHttpRequest,ClientHttpResponse> {\n\t// Return the URI template used for the current client exchange, null if none was used.\n\tString getUriTemplate();\n\t// Set the URI template used for the current client exchange.\n\tvoid setUriTemplate(String uriTemplate);\n}", "des": "Context that holds information for metadata collection during the client HTTP exchanges observations."}
{"index": 6920, "code": "public static interface CodecConfigurer.DefaultCodecConfig {\n\t// Whether to log form data at DEBUG level, and headers at TRACE level.\n\tBoolean isEnableLoggingRequestDetails();\n\t// Get the configured limit on the number of bytes that can be buffered whenever the input stream needs to be aggregated.\n\tInteger maxInMemorySize();\n}", "des": "Exposes the values of properties configured through CodecConfigurer.defaultCodecs() that are applied to default codecs."}
{"index": 6921, "code": "public static interface CodecConfigurer.MultipartCodecs {\n\t// Add a Part Encoder, internally wrapped with EncoderHttpMessageWriter.\n\tCodecConfigurer.MultipartCodecs encoder(org.springframework.core.codec.Encoder<?> encoder);\n\t// Add a Part HttpMessageWriter.\n\tCodecConfigurer.MultipartCodecs writer(HttpMessageWriter<?> writer);\n}", "des": "Registry and container for multipart HTTP message writers."}
{"index": 6922, "code": "public class ContextLoaderListener extends ContextLoader implements ServletContextListener {\n\t// Close the root web application context.\n\tvoid contextDestroyed(ServletContextEvent event);\n\t// Initialize the root web application context.\n\tvoid contextInitialized(ServletContextEvent event);\n}", "des": "Bootstrap listener to start up and shut down Spring's root WebApplicationContext."}
{"index": 6923, "code": "public class CorsFilter extends OncePerRequestFilter {\n\t// Same contract as for doFilter, but guaranteed to be just invoked once per request within a single request thread.\n\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain);\n\t// Configure a custom CorsProcessor to use to apply the matched CorsConfiguration for a request.\n\tvoid setCorsProcessor(CorsProcessor processor);\n}", "des": "Filter to handle CORS pre-flight requests and intercept CORS simple and actual requests with a CorsProcessor, and to update the response, e.g."}
{"index": 6924, "code": "public abstract class CorsUtils extends Object {\n\t// Returns true if the request is a valid CORS one by checking Origin header presence and ensuring that origins are different.\n\tstatic boolean isCorsRequest(HttpServletRequest request);\n\t// Returns true if the request is a valid CORS pre-flight one by checking OPTIONS method with Origin and Access-Control-Request-Method headers presence.\n\tstatic boolean isPreFlightRequest(HttpServletRequest request);\n}", "des": "Utility class for CORS request handling based on the CORS W3C recommendation."}
{"index": 6925, "code": "public static enum DefaultUriBuilderFactory.EncodingMode extends Enum<DefaultUriBuilderFactory.EncodingMode> {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic DefaultUriBuilderFactory.EncodingMode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic DefaultUriBuilderFactory.EncodingMode[] values();\n}", "des": "Enum to represent multiple URI encoding strategies."}
{"index": 6926, "code": "public class ErrorsMethodArgumentResolver extends Object implements HandlerMethodArgumentResolver {\n\t// Resolves a method parameter into an argument value from a given request.\n\tObject resolveArgument(org.springframework.core.MethodParameter parameter, ModelAndViewContainer mavContainer, NativeWebRequest webRequest, WebDataBinderFactory binderFactory);\n\t// Whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Resolves Errors method arguments."}
{"index": 6927, "code": "public class ExceptionHandlerMethodResolver extends Object {\n\t// Whether the contained type has any exception mappings.\n\tboolean hasExceptionMappings();\n\t// Find a Method to handle the given exception.\n\tMethod resolveMethod(Exception exception);\n\t// Find a Method to handle the given exception type.\n\tMethod resolveMethodByExceptionType(Class<? extends Throwable> exceptionType);\n\t// Find a Method to handle the given Throwable.\n\tMethod resolveMethodByThrowable(Throwable exception);\n}", "des": "Discovers @ExceptionHandler methods in a given class, including all of its superclasses, and helps to resolve a given Exception to the exception types supported by a given Method."}
{"index": 6928, "code": "public class ExceptionHandlingWebHandler extends WebHandlerDecorator {\n\t// Return a read-only list of the configured exception handlers.\n\tList<WebExceptionHandler> getExceptionHandlers();\n\t// Handle the web server exchange.\n\treactor.core.publisher.Mono<Void> handle(ServerWebExchange exchange);\n}", "des": "WebHandler decorator that invokes one or more WebExceptionHandlers after the delegate WebHandler."}
{"index": 6929, "code": "public interface FilePart extends Part {\n\t// Return the original filename in the client's filesystem.\n\tString filename();\n\t// Convenience method to copy the content of the file in this part to the given destination file.\n\tdefault reactor.core.publisher.Mono<Void> transferTo(File dest);\n\t// Convenience method to copy the content of the file in this part to the given destination file.\n\treactor.core.publisher.Mono<Void> transferTo(Path dest);\n}", "des": "Specialization of Part that represents an uploaded file received in a multipart request."}
{"index": 6930, "code": "public class FilteringWebHandler extends WebHandlerDecorator {\n\t// Return a read-only list of the configured filters.\n\tList<WebFilter> getFilters();\n\t// Handle the web server exchange.\n\treactor.core.publisher.Mono<Void> handle(ServerWebExchange exchange);\n}", "des": "WebHandlerDecorator that invokes a chain of WebFilters before invoking the delegate WebHandler."}
{"index": 6931, "code": "public class FixedContentNegotiationStrategy extends Object implements ContentNegotiationStrategy {\n\t// Return the configured list of media types.\n\tList<MediaType> getContentTypes();\n\t// Resolve the given request to a list of media types.\n\tList<MediaType> resolveMediaTypes(NativeWebRequest request);\n}", "des": "A ContentNegotiationStrategy that returns a fixed content type."}
{"index": 6932, "code": "public class FixedLocaleContextResolver extends Object implements LocaleContextResolver {\n\t// Resolve the current locale context via the given exchange.\n\torg.springframework.context.i18n.LocaleContext resolveLocaleContext(ServerWebExchange exchange);\n\t// Set the current locale context to the given one, potentially including a locale with associated time zone information.\n\tvoid setLocaleContext(ServerWebExchange exchange, org.springframework.context.i18n.LocaleContext localeContext);\n}", "des": "LocaleContextResolver implementation that always returns a fixed locale and optionally time zone."}
{"index": 6933, "code": "public class FormContentFilter extends OncePerRequestFilter {\n\t// Same contract as for doFilter, but guaranteed to be just invoked once per request within a single request thread.\n\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain);\n\t// The default character set to use for reading form data.\n\tvoid setCharset(Charset charset);\n\t// Set the converter to use for parsing form content.\n\tvoid setFormConverter(FormHttpMessageConverter converter);\n}", "des": "Filter that parses form data for HTTP PUT, PATCH, and DELETE requests and exposes it as Servlet request parameters."}
{"index": 6934, "code": "public interface FormPartEvent extends PartEvent {\n\t// Creates a stream with a single FormPartEven based on the given name and value.\n\tstatic reactor.core.publisher.Mono<FormPartEvent> create(String name, String value);\n\t// Creates a stream with a single FormPartEven based on the given name and value.\n\tstatic reactor.core.publisher.Mono<FormPartEvent> create(String name, String value, Consumer<HttpHeaders> headersConsumer);\n\t// Return the form field value.\n\tString value();\n}", "des": "Represents an event triggered for a form field."}
{"index": 6935, "code": "public interface HandlerMethodArgumentResolver {\n\t// Resolves a method parameter into an argument value from a given request.\n\tObject resolveArgument(org.springframework.core.MethodParameter parameter, ModelAndViewContainer mavContainer, NativeWebRequest webRequest, WebDataBinderFactory binderFactory);\n\t// Whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Strategy interface for resolving method parameters into argument values in the context of a given request."}
{"index": 6936, "code": "public class HiddenHttpMethodFilter extends OncePerRequestFilter {\n\t// Same contract as for doFilter, but guaranteed to be just invoked once per request within a single request thread.\n\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain);\n\t// Set the parameter name to look for HTTP methods.\n\tvoid setMethodParam(String methodParam);\n}", "des": "Filter that converts posted method parameters into HTTP methods, retrievable via HttpServletRequest.getMethod()."}
{"index": 6937, "code": "public class HiddenHttpMethodFilter extends Object implements WebFilter {\n\t// Transform an HTTP POST into another method based on methodParamName.\n\treactor.core.publisher.Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain);\n\t// Set the name of the form parameter with the HTTP method to use.\n\tvoid setMethodParamName(String methodParamName);\n}", "des": "Reactive WebFilter that converts posted method parameters into HTTP methods, retrievable via HttpRequest.getMethod()."}
{"index": 6938, "code": "public class HttpCookie extends Object {\n\tboolean equals(Object other);\n\t// Return the cookie name.\n\tString getName();\n\t// Return the cookie value or an empty string (never null).\n\tString getValue();\n}", "des": "Represents an HTTP cookie as a name-value pair consistent with the content of the \"Cookie\" request header."}
{"index": 6939, "code": "public class HttpEntity<T> extends Object {\n\tboolean equals(Object other);\n\t// Returns the body of this entity.\n\tT getBody();\n\t// Returns the headers of this entity.\n\tHttpHeaders getHeaders();\n\t// Indicates whether this entity has a body.\n\tboolean hasBody();\n}", "des": "Represents an HTTP request or response entity, consisting of headers and body."}
{"index": 6940, "code": "public class HttpHeadResponseDecorator extends ServerHttpResponseDecorator {\n\t// Invoke ServerHttpResponseDecorator.setComplete() without writing.\n\tfinal reactor.core.publisher.Mono<Void> writeAndFlushWith(Publisher<? extends Publisher<? extends org.springframework.core.io.buffer.DataBuffer>> body);\n\t// Consume and release the body without writing.\n\tfinal reactor.core.publisher.Mono<Void> writeWith(Publisher<? extends org.springframework.core.io.buffer.DataBuffer> body);\n}", "des": "ServerHttpResponse decorator for HTTP HEAD requests."}
{"index": 6941, "code": "public class HttpMediaTypeNotAcceptableException extends HttpMediaTypeException {\n\t// Return headers to use for the response.\n\tHttpHeaders getHeaders();\n\t// Return the HTTP status code to use for the response.\n\tHttpStatusCode getStatusCode();\n}", "des": "Exception thrown when the request handler cannot generate a response that is acceptable by the client."}
{"index": 6942, "code": "public class HttpMediaTypeNotSupportedException extends HttpMediaTypeException {\n\t// Return the HTTP request content type method that caused the failure.\n\tMediaType getContentType();\n\t// Return headers to use for the response.\n\tHttpHeaders getHeaders();\n\t// Return the HTTP status code to use for the response.\n\tHttpStatusCode getStatusCode();\n}", "des": "Exception thrown when a client POSTs, PUTs, or PATCHes content of a type not supported by request handler."}
{"index": 6943, "code": "public class HttpMessageConverterExtractor<T> extends Object implements ResponseExtractor<T> {\n\t// Extract data from the given ClientHttpResponse and return it.\n\tT extractData(ClientHttpResponse response);\n\t// Determine the Content-Type of the response based on the \"Content-Type\" header or otherwise default to MediaType.APPLICATION_OCTET_STREAM.\n\tprotected MediaType getContentType(ClientHttpResponse response);\n}", "des": "Response extractor that uses the given entity converters to convert the response into a type T."}
{"index": 6944, "code": "public interface HttpRequest extends HttpMessage {\n\t// Return the HTTP method of the request.\n\tHttpMethod getMethod();\n\t// Deprecated, for removal: This API element is subject to removal in a future version. as of Spring Framework 6.0 in favor of getMethod() and HttpMethod.name()\n\tdefault String getMethodValue();\n\t// Return the URI of the request (including a query string if any, but only if it is well-formed for a URI representation).\n\tURI getURI();\n}", "des": "Represents an HTTP request message, consisting of a method and a URI."}
{"index": 6945, "code": "public class HttpRequestWrapper extends Object implements HttpRequest {\n\t// Return the headers of the wrapped request.\n\tHttpHeaders getHeaders();\n\t// Return the method of the wrapped request.\n\tHttpMethod getMethod();\n\t// Return the wrapped request.\n\tHttpRequest getRequest();\n\t// Return the URI of the wrapped request.\n\tURI getURI();\n}", "des": "Provides a convenient implementation of the HttpRequest interface that can be overridden to adapt the request."}
{"index": 6946, "code": "public final class HttpServiceProxyFactory extends Object {\n\t// Return an empty builder, with the client to be provided to builder.\n\tstatic HttpServiceProxyFactory.Builder builder();\n\t// Return a builder that's initialized with the given client.\n\tstatic HttpServiceProxyFactory.Builder builder(HttpClientAdapter clientAdapter);\n\t// Return a proxy that implements the given HTTP service interface to perform HTTP requests and retrieve responses through an HTTP client.\n\t<S> S createClient(Class<S> serviceType);\n}", "des": "Factory to create a client proxy from an HTTP service interface with @HttpExchange methods."}
{"index": 6947, "code": "public class InitBinderDataBinderFactory extends DefaultDataBinderFactory {\n\t// Initialize a WebDataBinder with @InitBinder methods.\n\tvoid initBinder(WebDataBinder dataBinder, NativeWebRequest request);\n\t// Determine whether the given @InitBinder method should be used to initialize the given WebDataBinder instance.\n\tprotected boolean isBinderMethodApplicable(HandlerMethod initBinderMethod, WebDataBinder dataBinder);\n}", "des": "Adds initialization to a WebDataBinder via @InitBinder methods."}
{"index": 6948, "code": "public class Jackson2JsonEncoder extends AbstractJackson2Encoder {\n\t// Subclasses can use this method to customize the ObjectWriter used for writing values.\n\tprotected ObjectWriter customizeWriter(ObjectWriter writer, org.springframework.util.MimeType mimeType, org.springframework.core.ResolvableType elementType, Map<String,Object> hints);\n\t// Return the supported media type(s) for ProblemDetail.\n\tprotected List<org.springframework.util.MimeType> getMediaTypesForProblemDetail();\n}", "des": "Encode from an Object stream to a byte stream of JSON objects using Jackson 2.x."}
{"index": 6949, "code": "public class JdkHttpClientResourceFactory extends Object implements org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean {\n\tvoid afterPropertiesSet();\n\tvoid destroy();\n\t// Return the configured Executor.\n\tExecutor getExecutor();\n\t// Configure the Executor to use for HttpClient exchanges.\n\tvoid setExecutor(Executor executor);\n\t// Configure the thread prefix to initialize the executor with.\n\tvoid setThreadPrefix(String threadPrefix);\n}", "des": "Factory to manage JDK HttpClient resources such as a shared Executor within the lifecycle of a Spring ApplicationContext."}
{"index": 6950, "code": "public interface LocaleContextResolver {\n\t// Resolve the current locale context via the given exchange.\n\torg.springframework.context.i18n.LocaleContext resolveLocaleContext(ServerWebExchange exchange);\n\t// Set the current locale context to the given one, potentially including a locale with associated time zone information.\n\tvoid setLocaleContext(ServerWebExchange exchange, org.springframework.context.i18n.LocaleContext localeContext);\n}", "des": "Interface for web-based locale context resolution strategies that allows for both locale context resolution via the request and locale context modification via the HTTP exchange."}
{"index": 6951, "code": "public class LoggingCodecSupport extends Object {\n\t// Whether any logging of values being encoded or decoded is explicitly disabled regardless of log level.\n\tboolean isEnableLoggingRequestDetails();\n\t// Whether to log form data at DEBUG level, and headers at TRACE level.\n\tvoid setEnableLoggingRequestDetails(boolean enable);\n}", "des": "Base class for Encoder, Decoder, HttpMessageReader, or HttpMessageWriter that uses a logger and shows potentially sensitive request data."}
{"index": 6952, "code": "public class MappingJackson2XmlHttpMessageConverter extends AbstractJackson2HttpMessageConverter {\n\t// Return the supported media type(s) for ProblemDetail.\n\tprotected List<MediaType> getMediaTypesForProblemDetail();\n\t// Configure the main ObjectMapper to use for Object conversion.\n\tvoid setObjectMapper(ObjectMapper objectMapper);\n}", "des": "Implementation of HttpMessageConverter that can read and write XML using Jackson 2.x extension component for reading and writing XML encoded data."}
{"index": 6953, "code": "public class MappingJacksonInputMessage extends Object implements HttpInputMessage {\n\t// Return the body of the message as an input stream.\n\tInputStream getBody();\n\tClass<?> getDeserializationView();\n\t// Return the headers of this message.\n\tHttpHeaders getHeaders();\n\tvoid setDeserializationView(Class<?> deserializationView);\n}", "des": "HttpInputMessage that can eventually stores a Jackson view that will be used to deserialize the message."}
{"index": 6954, "code": "public final class MediaTypeFactory extends Object {\n\t// Determine a media type for the given file name, if possible.\n\tstatic Optional<MediaType> getMediaType(String filename);\n\t// Determine a media type for the given resource, if possible.\n\tstatic Optional<MediaType> getMediaType(org.springframework.core.io.Resource resource);\n\t// Determine the media types for the given file name, if possible.\n\tstatic List<MediaType> getMediaTypes(String filename);\n}", "des": "A factory delegate for resolving MediaType objects from Resource handles or filenames."}
{"index": 6955, "code": "public interface MediaTypeFileExtensionResolver {\n\t// Get all registered file extensions.\n\tList<String> getAllFileExtensions();\n\t// Resolve the given media type to a list of file extensions.\n\tList<String> resolveFileExtensions(MediaType mediaType);\n}", "des": "Strategy to resolve a MediaType to a list of file extensions — for example, to resolve \"application/json\" to \"json\"."}
{"index": 6956, "code": "public class MethodArgumentConversionNotSupportedException extends org.springframework.beans.ConversionNotSupportedException {\n\t// Return the name of the method argument.\n\tString getName();\n\t// Return the target method parameter.\n\torg.springframework.core.MethodParameter getParameter();\n}", "des": "A ConversionNotSupportedException raised while resolving a method argument."}
{"index": 6957, "code": "public class MethodArgumentTypeMismatchException extends org.springframework.beans.TypeMismatchException {\n\t// Return the name of the method argument.\n\tString getName();\n\t// Return the target method parameter.\n\torg.springframework.core.MethodParameter getParameter();\n}", "des": "A TypeMismatchException raised while resolving a controller method argument."}
{"index": 6958, "code": "public class MethodNotAllowedException extends ResponseStatusException {\n\t// Return HttpHeaders with an \"Allow\" header that documents the allowed HTTP methods for this URL, if available, or an empty instance otherwise.\n\tHttpHeaders getHeaders();\n\t// Return the HTTP method for the failed request.\n\tString getHttpMethod();\n\t// Deprecated. as of 6.0 in favor of getHeaders()\n\tHttpHeaders getResponseHeaders();\n\t// Return the list of supported HTTP methods.\n\tSet<HttpMethod> getSupportedMethods();\n}", "des": "Exception for errors that fit response status 405 (method not allowed)."}
{"index": 6959, "code": "public class MissingMatrixVariableException extends MissingRequestValueException {\n\tString getMessage();\n\t// Return the method parameter bound to the matrix variable.\n\tfinal org.springframework.core.MethodParameter getParameter();\n\t// Return the expected name of the matrix variable.\n\tfinal String getVariableName();\n}", "des": "ServletRequestBindingException subclass that indicates that a matrix variable expected in the method parameters of an @RequestMapping method is not present among the matrix variables extracted from the URL."}
{"index": 6960, "code": "public class MissingPathVariableException extends MissingRequestValueException {\n\tString getMessage();\n\t// Return the method parameter bound to the path variable.\n\tfinal org.springframework.core.MethodParameter getParameter();\n\t// Return the HTTP status code to use for the response.\n\tHttpStatusCode getStatusCode();\n\t// Return the expected name of the path variable.\n\tfinal String getVariableName();\n}", "des": "ServletRequestBindingException subclass that indicates that a path variable expected in the method parameters of an @RequestMapping method is not present among the URI variables extracted from the URL."}
{"index": 6961, "code": "public class MissingRequestCookieException extends MissingRequestValueException {\n\t// Return the expected name of the request cookie.\n\tfinal String getCookieName();\n\tString getMessage();\n\t// Return the method parameter bound to the request cookie.\n\tfinal org.springframework.core.MethodParameter getParameter();\n}", "des": "ServletRequestBindingException subclass that indicates that a request cookie expected in the method parameters of an @RequestMapping method is not present."}
{"index": 6962, "code": "public class MissingRequestHeaderException extends MissingRequestValueException {\n\t// Return the expected name of the request header.\n\tfinal String getHeaderName();\n\tString getMessage();\n\t// Return the method parameter bound to the request header.\n\tfinal org.springframework.core.MethodParameter getParameter();\n}", "des": "ServletRequestBindingException subclass that indicates that a request header expected in the method parameters of an @RequestMapping method is not present."}
{"index": 6963, "code": "public class MissingRequestValueException extends ServerWebInputException {\n\t// Return a label that describes the request value, e.g.\n\tString getLabel();\n\t// Return the name of the missing value, e.g.\n\tString getName();\n\t// Return the target type the value is converted when present.\n\tClass<?> getType();\n}", "des": "ServerWebInputException subclass that indicates a missing request value such as a request header, cookie value, query parameter, etc."}
{"index": 6964, "code": "public class MissingServletRequestParameterException extends MissingRequestValueException {\n\tString getMessage();\n\t// Return the name of the offending parameter.\n\tfinal String getParameterName();\n\t// Return the expected type of the offending parameter.\n\tfinal String getParameterType();\n}", "des": "ServletRequestBindingException subclass that indicates a missing parameter."}
{"index": 6965, "code": "public interface MultipartHttpServletRequest extends HttpServletRequest, MultipartRequest {\n\t// Return the headers for the specified part of the multipart request.\n\tHttpHeaders getMultipartHeaders(String paramOrFileName);\n\t// Return this request's headers as a convenient HttpHeaders instance.\n\tHttpHeaders getRequestHeaders();\n\t// Return this request's method as a convenient HttpMethod instance.\n\tHttpMethod getRequestMethod();\n}", "des": "Provides additional methods for dealing with multipart content within a servlet request, allowing to access uploaded files."}
{"index": 6966, "code": "public interface NativeWebRequest extends WebRequest {\n\t// Return the underlying native request object.\n\tObject getNativeRequest();\n\t// Return the underlying native request object, if available.\n\t<T> T getNativeRequest(Class<T> requiredType);\n\t// Return the underlying native response object, if any.\n\tObject getNativeResponse();\n\t// Return the underlying native response object, if available.\n\t<T> T getNativeResponse(Class<T> requiredType);\n}", "des": "Extension of the WebRequest interface, exposing the native request and response objects in a generic fashion."}
{"index": 6967, "code": "public class NotAcceptableStatusException extends ResponseStatusException {\n\t// Return HttpHeaders with an \"Accept\" header that documents the supported media types, if available, or an empty instance otherwise.\n\tHttpHeaders getHeaders();\n\t// Deprecated. as of 6.0 in favor of getHeaders()\n\tHttpHeaders getResponseHeaders();\n\t// Return the list of supported content types in cases when the Accept header is parsed but not supported, or an empty list otherwise.\n\tList<MediaType> getSupportedMediaTypes();\n}", "des": "Exception for errors that fit response status 406 (not acceptable)."}
{"index": 6968, "code": "public class ParameterContentNegotiationStrategy extends AbstractMappingContentNegotiationStrategy {\n\t// Extract a key from the request to use to look up media types.\n\tprotected String getMediaTypeKey(NativeWebRequest request);\n\tString getParameterName();\n\t// Set the name of the parameter to use to determine requested media types.\n\tvoid setParameterName(String parameterName);\n}", "des": "Strategy that resolves the requested content type from a query parameter."}
{"index": 6969, "code": "public interface Part {\n\t// Return the content for this part.\n\treactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> content();\n\t// Return a mono that, when subscribed to, deletes the underlying storage for this part.\n\tdefault reactor.core.publisher.Mono<Void> delete();\n\t// Return the headers associated with the part.\n\tHttpHeaders headers();\n\t// Return the name of the part in the multipart form.\n\tString name();\n}", "des": "Representation for a part in a \"multipart/form-data\" request."}
{"index": 6970, "code": "public interface PartEvent {\n\t// Return the content of this event.\n\torg.springframework.core.io.buffer.DataBuffer content();\n\t// Return the headers of the part that this event belongs to.\n\tHttpHeaders headers();\n\t// Indicates whether this is the last event of a particular part.\n\tboolean isLast();\n\t// Return the name of the event, as provided through the Content-Disposition name parameter.\n\tdefault String name();\n}", "des": "Represents an event for a \"multipart/form-data\" request."}
{"index": 6971, "code": "public static interface PathContainer.PathSegment extends PathContainer.Element {\n\t// Path parameters associated with this path segment.\n\torg.springframework.util.MultiValueMap<String,String> parameters();\n\t// Return the path segment value, decoded and sanitized, for path matching.\n\tString valueToMatch();\n\t// Expose valueToMatch() as a character array.\n\tchar[] valueToMatchAsChars();\n}", "des": "Path segment element."}
{"index": 6972, "code": "public static class PathPattern.PathMatchInfo extends Object {\n\t// Return maps of matrix variables per path segment, keyed off by URI variable name.\n\tMap<String,org.springframework.util.MultiValueMap<String,String>> getMatrixVariables();\n\t// Return the extracted URI variables.\n\tMap<String,String> getUriVariables();\n}", "des": "Holder for URI variables and path parameters (matrix variables) extracted based on the pattern for a given matched path."}
{"index": 6973, "code": "public class PatternParseException extends IllegalArgumentException {\n\tObject[] getInserts();\n\t// Return a formatted message with inserts applied.\n\tString getMessage();\n\tPatternParseException.PatternMessage getMessageType();\n\tint getPosition();\n\t// Return a detailed message that includes the original pattern text with a pointer to the error position, as well as the error message.\n\tString toDetailedString();\n}", "des": "Exception that is thrown when there is a problem with the pattern being parsed."}
{"index": 6974, "code": "public static enum PatternParseException.PatternMessage extends Enum<PatternParseException.PatternMessage> {\n\tString formatMessage(Object... inserts);\n\t// Returns the enum constant of this class with the specified name.\n\tstatic PatternParseException.PatternMessage valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic PatternParseException.PatternMessage[] values();\n}", "des": "The messages that can be included in a PatternParseException when there is a parse failure."}
{"index": 6975, "code": "public class ProxyFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<Proxy>, org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\tProxy getObject();\n\tClass<?> getObjectType();\n\tboolean isSingleton();\n\t// Set the proxy host name.\n\tvoid setHostname(String hostname);\n\t// Set the proxy port.\n\tvoid setPort(int port);\n\t// Set the proxy type.\n\tvoid setType(Proxy.Type type);\n}", "des": "FactoryBean that creates a java.net.Proxy."}
{"index": 6976, "code": "public class RelativeRedirectFilter extends OncePerRequestFilter {\n\t// Same contract as for doFilter, but guaranteed to be just invoked once per request within a single request thread.\n\tprotected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain);\n\t// Return the configured redirect status.\n\tHttpStatusCode getRedirectStatus();\n\t// Set the default HTTP Status to use for redirects.\n\tvoid setRedirectStatus(HttpStatusCode status);\n}", "des": "Overrides HttpServletResponse.sendRedirect(String) and handles it by setting the HTTP status and \"Location\" headers, which keeps the Servlet container from re-writing relative redirect URLs into absolute ones."}
{"index": 6977, "code": "public class RequestPartServletServerHttpRequest extends ServletServerHttpRequest {\n\t// Return the body of the message as an input stream.\n\tInputStream getBody();\n\t// Return the headers of this message.\n\tHttpHeaders getHeaders();\n}", "des": "ServerHttpRequest implementation that accesses one part of a multipart request."}
{"index": 6978, "code": "public class RequestScope extends AbstractRequestAttributesScope {\n\t// There is no conversation id concept for a request, so this method returns null.\n\tString getConversationId();\n\t// Template method that determines the actual target scope.\n\tprotected int getScope();\n}", "des": "Request-backed Scope implementation."}
{"index": 6979, "code": "public static interface ResponseEntity.BodyBuilder extends ResponseEntity.HeadersBuilder<ResponseEntity.BodyBuilder> {\n\t// Set the body of the response entity and returns it.\n\t<T> ResponseEntity<T> body(T body);\n\t// Set the length of the body in bytes, as specified by the Content-Length header.\n\tResponseEntity.BodyBuilder contentLength(long contentLength);\n\t// Set the media type of the body, as specified by the Content-Type header.\n\tResponseEntity.BodyBuilder contentType(MediaType contentType);\n}", "des": "Defines a builder that adds a body to the response entity."}
{"index": 6980, "code": "public interface ResponseErrorHandler {\n\t// Alternative to handleError(ClientHttpResponse) with extra information providing access to the request URL and HTTP method.\n\tdefault void handleError(URI url, HttpMethod method, ClientHttpResponse response);\n\t// Handle the error in the given response.\n\tvoid handleError(ClientHttpResponse response);\n\t// Indicate whether the given response has any errors.\n\tboolean hasError(ClientHttpResponse response);\n}", "des": "Strategy interface used by the RestTemplate to determine whether a particular response has an error or not."}
{"index": 6981, "code": "public class ResponseStatusException extends ErrorResponseException {\n\t// Return headers to add to the error response, e.g.\n\tHttpHeaders getHeaders();\n\tString getMessage();\n\t// The reason explaining the exception (potentially null or empty).\n\tString getReason();\n\t// Deprecated. as of 6.0 in favor of getHeaders()\n\tHttpHeaders getResponseHeaders();\n}", "des": "Subclass of ErrorResponseException that accepts a \"reason\", and by default maps that to the \"detail\" of the ProblemDetail."}
{"index": 6982, "code": "public class RestGatewaySupport extends Object {\n\t// Returns the RestTemplate for the gateway.\n\tRestTemplate getRestTemplate();\n\t// Sets the RestTemplate for the gateway.\n\tvoid setRestTemplate(RestTemplate restTemplate);\n}", "des": "Convenient superclass for application classes that need REST access."}
{"index": 6983, "code": "public interface ServerCodecConfigurer extends CodecConfigurer {\n\t// Create a copy of this CodecConfigurer.\n\tServerCodecConfigurer clone();\n\t// Static factory method for a ServerCodecConfigurer.\n\tstatic ServerCodecConfigurer create();\n\t// Provides a way to customize or replace HTTP message readers and writers registered by default.\n\tServerCodecConfigurer.ServerDefaultCodecs defaultCodecs();\n}", "des": "Extension of CodecConfigurer for HTTP message reader and writer options relevant on the server side."}
{"index": 6984, "code": "public class ServerErrorException extends ResponseStatusException {\n\t// Return the handler method associated with the error, if any.\n\tMethod getHandlerMethod();\n\t// Return the specific method parameter associated with the error, if any.\n\torg.springframework.core.MethodParameter getMethodParameter();\n}", "des": "Exception for an HttpStatus.INTERNAL_SERVER_ERROR that exposes extra information about a controller method that failed, or a controller method argument that could not be resolved."}
{"index": 6985, "code": "public enum ServerHttpObservationDocumentation extends Enum<ServerHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ServerHttpObservationDocumentation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ServerHttpObservationDocumentation[] values();\n}", "des": "Documented KeyValues for the HTTP server observations for Servlet-based web applications."}
{"index": 6986, "code": "public enum ServerHttpObservationDocumentation extends Enum<ServerHttpObservationDocumentation> implements io.micrometer.observation.docs.ObservationDocumentation {\n\t// Returns the enum constant of this class with the specified name.\n\tstatic ServerHttpObservationDocumentation valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic ServerHttpObservationDocumentation[] values();\n}", "des": "Documented KeyValues for the HTTP server observations for reactive web applications."}
{"index": 6987, "code": "public class ServerHttpObservationFilter extends Object implements WebFilter {\n\t// Process the Web request and (optionally) delegate to the next WebFilter through the given WebFilterChain.\n\treactor.core.publisher.Mono<Void> filter(ServerWebExchange exchange, WebFilterChain chain);\n\t// Get the current observation context from the given request, if available.\n\tstatic Optional<ServerRequestObservationContext> findObservationContext(ServerWebExchange exchange);\n}", "des": "WebFilter that creates observations for HTTP exchanges."}
{"index": 6988, "code": "public interface ServerHttpResponse extends HttpOutputMessage, Flushable, Closeable {\n\t// Close this response, freeing any resources created.\n\tvoid close();\n\t// Ensure that the headers and the content of the response are written out.\n\tvoid flush();\n\t// Set the HTTP status code of the response.\n\tvoid setStatusCode(HttpStatusCode status);\n}", "des": "Represents a server-side HTTP response."}
{"index": 6989, "code": "public static interface ServerSentEvent.Builder<T> {\n\t// Builds the event.\n\tServerSentEvent<T> build();\n\t// Set SSE comment.\n\tServerSentEvent.Builder<T> comment(String comment);\n\t// Set the value of the data field.\n\tServerSentEvent.Builder<T> data(T data);\n\t// Set the value of the event field.\n\tServerSentEvent.Builder<T> event(String event);\n\t// Set the value of the id field.\n\tServerSentEvent.Builder<T> id(String id);\n\t// Set the value of the retry field.\n\tServerSentEvent.Builder<T> retry(Duration retry);\n}", "des": "A mutable builder for a SseEvent."}
{"index": 6990, "code": "public class ServletContextAttributeExporter extends Object implements ServletContextAware {\n\t// Set the ServletContext attributes to expose as key-value pairs.\n\tvoid setAttributes(Map<String,Object> attributes);\n\t// Set the ServletContext that this object runs in.\n\tvoid setServletContext(ServletContext servletContext);\n}", "des": "Exporter that takes Spring-defined objects and exposes them as ServletContext attributes."}
{"index": 6991, "code": "public class ServletContextAttributeFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<Object>, ServletContextAware {\n\tObject getObject();\n\tClass<?> getObjectType();\n\tboolean isSingleton();\n\t// Set the name of the ServletContext attribute to expose.\n\tvoid setAttributeName(String attributeName);\n\t// Set the ServletContext that this object runs in.\n\tvoid setServletContext(ServletContext servletContext);\n}", "des": "FactoryBean that fetches a specific, existing ServletContext attribute."}
{"index": 6992, "code": "public class ServletContextAwareProcessor extends Object implements org.springframework.beans.factory.config.BeanPostProcessor {\n\t// Returns the ServletConfig to be injected or null.\n\tprotected ServletConfig getServletConfig();\n\t// Returns the ServletContext to be injected or null.\n\tprotected ServletContext getServletContext();\n\tObject postProcessAfterInitialization(Object bean, String beanName);\n\tObject postProcessBeforeInitialization(Object bean, String beanName);\n}", "des": "BeanPostProcessor implementation that passes the ServletContext to beans that implement the ServletContextAware interface."}
{"index": 6993, "code": "public class ServletContextParameterFactoryBean extends Object implements org.springframework.beans.factory.FactoryBean<String>, ServletContextAware {\n\tString getObject();\n\tClass<String> getObjectType();\n\tboolean isSingleton();\n\t// Set the name of the ServletContext init parameter to expose.\n\tvoid setInitParamName(String initParamName);\n\t// Set the ServletContext that this object runs in.\n\tvoid setServletContext(ServletContext servletContext);\n}", "des": "FactoryBean that retrieves a specific ServletContext init parameter (that is, a \"context-param\" defined in web.xml)."}
{"index": 6994, "code": "public class ServletContextRequestLoggingFilter extends AbstractRequestLoggingFilter {\n\t// Writes a log message after the request is processed.\n\tprotected void afterRequest(HttpServletRequest request, String message);\n\t// Writes a log message before the request is processed.\n\tprotected void beforeRequest(HttpServletRequest request, String message);\n}", "des": "Simple request logging filter that writes the request URI (and optionally the query string) to the ServletContext log."}
{"index": 6995, "code": "public class ServletRequestDataBinder extends WebDataBinder {\n\t// Extension point that subclasses can use to add extra bind values for a request.\n\tprotected void addBindValues(org.springframework.beans.MutablePropertyValues mpvs, ServletRequest request);\n\t// Bind the parameters of the given request to this binder's target, also binding multipart files in case of a multipart request.\n\tvoid bind(ServletRequest request);\n\t// Treats errors as fatal.\n\tvoid closeNoCatch();\n}", "des": "Special DataBinder to perform data binding from servlet request parameters to JavaBeans, including support for multipart files."}
{"index": 6996, "code": "public interface SessionAttributeStore {\n\t// Clean up the specified attribute in the backend session.\n\tvoid cleanupAttribute(WebRequest request, String attributeName);\n\t// Retrieve the specified attribute from the backend session.\n\tObject retrieveAttribute(WebRequest request, String attributeName);\n\t// Store the supplied attribute in the backend session.\n\tvoid storeAttribute(WebRequest request, String attributeName, Object attributeValue);\n}", "des": "Strategy interface for storing model attributes in a backend session."}
{"index": 6997, "code": "public interface SessionStatus {\n\t// Return whether the current handler's session processing has been marked as complete.\n\tboolean isComplete();\n\t// Mark the current handler's session processing as complete, allowing for cleanup of session attributes.\n\tvoid setComplete();\n}", "des": "Simple interface that can be injected into handler methods, allowing them to signal that their session processing is complete."}
{"index": 6998, "code": "public class SimpleSessionStatus extends Object implements SessionStatus {\n\t// Return whether the current handler's session processing has been marked as complete.\n\tboolean isComplete();\n\t// Mark the current handler's session processing as complete, allowing for cleanup of session attributes.\n\tvoid setComplete();\n}", "des": "Simple implementation of the SessionStatus interface, keeping the complete flag as an instance variable."}
{"index": 6999, "code": "public abstract class SpringBeanAutowiringSupport extends Object {\n\t// Process @Autowired injection for the given target object, based on the current web application context.\n\tstatic void processInjectionBasedOnCurrentContext(Object target);\n\t// Process @Autowired injection for the given target object, based on the current root web application context as stored in the ServletContext.\n\tstatic void processInjectionBasedOnServletContext(Object target, ServletContext servletContext);\n}", "des": "Convenient base class for self-autowiring classes that gets constructed within a Spring-based web application."}
{"index": 7000, "code": "public interface SslInfo {\n\t// Return SSL certificates associated with the request, if any.\n\tX509Certificate[] getPeerCertificates();\n\t// Return the SSL session id, if any.\n\tString getSessionId();\n}", "des": "A holder for SSL session information."}
{"index": 7001, "code": "public class UnsatisfiedRequestParameterException extends ServerWebInputException {\n\t// Return String representations of the unsatisfied condition(s).\n\tList<String> getConditions();\n\t// Return the actual request parameters.\n\torg.springframework.util.MultiValueMap<String,String> getRequestParams();\n}", "des": "ServerWebInputException subclass that indicates an unsatisfied parameter condition, as typically expressed using an @RequestMapping annotation at the @Controller type level."}
{"index": 7002, "code": "public class UnsatisfiedServletRequestParameterException extends ServletRequestBindingException {\n\t// Return the actual parameter Map associated with the ServletRequest.\n\tfinal Map<String,String[]> getActualParams();\n\tString getMessage();\n\t// Return all parameter condition groups that have been violated.\n\tfinal List<String[]> getParamConditionGroups();\n\t// Return the parameter conditions that have been violated or the first group in case of multiple groups.\n\tfinal String[] getParamConditions();\n}", "des": "ServletRequestBindingException subclass that indicates an unsatisfied parameter condition, as typically expressed using an @RequestMapping annotation at the @Controller type level."}
{"index": 7003, "code": "public interface UriBuilderFactory extends UriTemplateHandler {\n\t// Create a URI builder with default settings.\n\tUriBuilder builder();\n\t// Initialize a builder with the given URI template.\n\tUriBuilder uriString(String uriTemplate);\n}", "des": "Factory to create UriBuilder instances with shared configuration such as a base URI, an encoding mode strategy, and others across all URI builder instances created through a factory."}
{"index": 7004, "code": "public interface UriTemplateHandler {\n\t// Expand the given URI template with an array of URI variables.\n\tURI expand(String uriTemplate, Object... uriVariables);\n\t// Expand the given URI template with a map of URI variables.\n\tURI expand(String uriTemplate, Map<String,?> uriVariables);\n}", "des": "Defines methods for expanding a URI template with variables."}
{"index": 7005, "code": "public class UrlBasedCorsConfigurationSource extends Object implements CorsConfigurationSource {\n\t// Return a CorsConfiguration based on the incoming request.\n\tCorsConfiguration getCorsConfiguration(ServerWebExchange exchange);\n\t// Register a CorsConfiguration for the specified path pattern.\n\tvoid registerCorsConfiguration(String path, CorsConfiguration config);\n\t// Set CORS configuration based on URL patterns.\n\tvoid setCorsConfigurations(Map<String,CorsConfiguration> configMap);\n}", "des": "CorsConfigurationSource that uses URL patterns to select the CorsConfiguration for a request."}
{"index": 7006, "code": "public class WebHandlerDecorator extends Object implements WebHandler {\n\t// Return the wrapped delegate.\n\tWebHandler getDelegate();\n\t// Handle the web server exchange.\n\treactor.core.publisher.Mono<Void> handle(ServerWebExchange exchange);\n}", "des": "WebHandler that decorates and delegates to another WebHandler."}
{"index": 7007, "code": "public class WebRequestDataBinder extends WebDataBinder {\n\t// Bind the parameters of the given request to this binder's target, also binding multipart files in case of a multipart request.\n\tvoid bind(WebRequest request);\n\t// Treats errors as fatal.\n\tvoid closeNoCatch();\n}", "des": "Special DataBinder to perform data binding from web request parameters to JavaBeans, including support for multipart files."}
{"index": 7008, "code": "public interface WebRequestInterceptor {\n\t// Callback after completion of request processing, that is, after rendering the view.\n\tvoid afterCompletion(WebRequest request, Exception ex);\n\t// Intercept the execution of a request handler after its successful invocation, right before view rendering (if any).\n\tvoid postHandle(WebRequest request, org.springframework.ui.ModelMap model);\n\t// Intercept the execution of a request handler before its invocation.\n\tvoid preHandle(WebRequest request);\n}", "des": "Interface for general web request interception."}
{"index": 7009, "code": "public interface WebSessionIdResolver {\n\t// Instruct the client to end the current session.\n\tvoid expireSession(ServerWebExchange exchange);\n\t// Resolve the session IDs associated with the request.\n\tList<String> resolveSessionIds(ServerWebExchange exchange);\n\t// Send the given session ID to the client.\n\tvoid setSessionId(ServerWebExchange exchange, String sessionId);\n}", "des": "Contract for session ID resolution strategies."}
{"index": 7010, "code": "public interface WebSessionStore {\n\t// Create a new WebSession.\n\treactor.core.publisher.Mono<WebSession> createWebSession();\n\t// Remove the WebSession for the specified id.\n\treactor.core.publisher.Mono<Void> removeSession(String sessionId);\n\t// Return the WebSession for the given id.\n\treactor.core.publisher.Mono<WebSession> retrieveSession(String sessionId);\n\t// Update the last accessed timestamp to \"now\".\n\treactor.core.publisher.Mono<WebSession> updateLastAccessTime(WebSession webSession);\n}", "des": "Strategy for WebSession persistence."}
{"index": 7011, "code": "public interface ZeroCopyHttpOutputMessage extends ReactiveHttpOutputMessage {\n\t// Use the given File to write the body of the message to the underlying HTTP layer.\n\tdefault reactor.core.publisher.Mono<Void> writeWith(File file, long position, long count);\n\t// Use the given Path to write the body of the message to the underlying HTTP layer.\n\treactor.core.publisher.Mono<Void> writeWith(Path file, long position, long count);\n}", "des": "Sub-interface of ReactiveOutputMessage that has support for \"zero-copy\" file transfers."}
{"index": 7012, "code": "public abstract class AbstractActionMethodEndpointMapping extends AbstractActionEndpointMapping {\n\t// Returns the action value for the specified method.\n\tprotected abstract URI getActionForMethod(Method method);\n\t// Return the class or interface to use for method reflection.\n\tprotected Class<?> getEndpointClass(Object endpoint);\n\t// Helper method that registers the methods of the given bean.\n\tprotected void registerMethods(Object endpoint);\n}", "des": "Abstract base class for WS-Addressing Action-mapped EndpointMapping implementations that map to MethodEndpoints."}
{"index": 7013, "code": "public abstract class AbstractAnnotationMethodEndpointMapping<T> extends AbstractMethodEndpointMapping<T> {\n\t// Returns the 'endpoint' annotation type.\n\tprotected Class<? extends Annotation> getEndpointAnnotationType();\n\t// Initializes the interceptors.\n\tprotected void initApplicationContext();\n\t// Set whether to detect endpoint beans in ancestor ApplicationContexts.\n\tvoid setDetectEndpointsInAncestorContexts(boolean detectEndpointsInAncestorContexts);\n}", "des": "Abstract base for EndpointMapping implementations that map classes tagged with an annotation."}
{"index": 7014, "code": "public abstract class AbstractCachingDestinationProvider extends Object implements DestinationProvider {\n\t// Return the destination URI.\n\tfinal URI getDestination();\n\t// Abstract template method that looks up the URI.\n\tprotected abstract URI lookupDestination();\n\t// Set whether to cache resolved destinations.\n\tvoid setCache(boolean cache);\n}", "des": "Abstract base class for DestinationProvider implementations that cache destination URI."}
{"index": 7015, "code": "public abstract class AbstractMimeMessage extends Object implements MimeMessage {\n\t// Add an attachment to the message, taking the content from a File.\n\tfinal Attachment addAttachment(String contentId, File file);\n\t// Add an attachment to the message, taking the content from an InputStreamSource.\n\tfinal Attachment addAttachment(String contentId, org.springframework.core.io.InputStreamSource inputStreamSource, String contentType);\n}", "des": "Abstract implementation of the MimeMessage interface."}
{"index": 7016, "code": "public abstract class AbstractQNameEndpointMapping extends AbstractMapBasedEndpointMapping {\n\t// Returns the endpoint key for the given message context.\n\tprotected final String getLookupKeyForMessage(MessageContext messageContext);\n\t// Template method that resolves the qualified names from the given SOAP message.\n\tprotected abstract QName resolveQName(MessageContext messageContext);\n\t// Validates the given endpoint key.\n\tprotected boolean validateLookupKey(String key);\n}", "des": "Abstract base class for EndpointMappings that resolve qualified names as registration keys."}
{"index": 7017, "code": "public interface Attachment {\n\t// Returns the content identifier of the attachment.\n\tString getContentId();\n\t// Returns the content type of the attachment.\n\tString getContentType();\n\t// Returns the data handler of the attachment.\n\tjakarta.activation.DataHandler getDataHandler();\n\t// Return an InputStream to read the contents of the attachment from.\n\tInputStream getInputStream();\n\t// Returns the size of the attachment in bytes.\n\tlong getSize();\n}", "des": "Represents an attachment to a MimeMessage"}
{"index": 7018, "code": "public interface ClientInterceptor {\n\t// Callback after completion of request and response (fault) processing.\n\tvoid afterCompletion(MessageContext messageContext, Exception ex);\n\t// Processes the incoming response fault.\n\tboolean handleFault(MessageContext messageContext);\n\t// Processes the outgoing request message.\n\tboolean handleRequest(MessageContext messageContext);\n\t// Processes the incoming response message.\n\tboolean handleResponse(MessageContext messageContext);\n}", "des": "Workflow interface that allows for customized client-side message interception."}
{"index": 7019, "code": "public abstract class ClientInterceptorAdapter extends Object implements ClientInterceptor {\n\t// Does nothing by default.\n\tvoid afterCompletion(MessageContext messageContext, Exception ex);\n\t// Processes the incoming response fault.\n\tboolean handleFault(MessageContext messageContext);\n\t// Processes the outgoing request message.\n\tboolean handleRequest(MessageContext messageContext);\n\t// Processes the incoming response message.\n\tboolean handleResponse(MessageContext messageContext);\n}", "des": "Default implementation of the ClientInterceptor interface, for simplified implementation of pre-only/post-only interceptors."}
{"index": 7020, "code": "public class DomPoxMessage extends Object implements PoxMessage {\n\t// Returns the document underlying this message.\n\tDocument getDocument();\n\tString getFaultReason();\n\t// Returns the contents of the message as a Result.\n\tResult getPayloadResult();\n\t// Returns the contents of the message as a Source.\n\tSource getPayloadSource();\n\tboolean hasFault();\n\t// Writes the entire message to the given output stream.\n\tvoid writeTo(OutputStream outputStream);\n}", "des": "Implementation of the PoxMessage interface that is based on a DOM Document."}
{"index": 7021, "code": "public interface EndpointAdapter {\n\t// Use the given endpoint to handle the request.\n\tvoid invoke(MessageContext messageContext, Object endpoint);\n\t// Does this EndpointAdapter support the given endpoint?\n\tboolean supports(Object endpoint);\n}", "des": "Interface that must be implemented for each endpoint type to handle a message request."}
{"index": 7022, "code": "public class EndpointInvocationChain extends Object {\n\t// Returns the endpoint object to invoke.\n\tObject getEndpoint();\n\t// Returns the array of interceptors to apply before the handler executes.\n\tEndpointInterceptor[] getInterceptors();\n}", "des": "Endpoint invocation chain, consisting of an endpoint object and any preprocessing interceptors."}
{"index": 7023, "code": "public final class EndpointReference extends Object implements Serializable {\n\tboolean equals(Object o);\n\t// Returns the address of the endpoint.\n\tURI getAddress();\n\t// Returns the reference parameters of the endpoint, as a list of Node objects.\n\tList<Node> getReferenceParameters();\n\t// Returns the reference properties of the endpoint, as a list of Node objects.\n\tList<Node> getReferenceProperties();\n}", "des": "Represents an Endpoint Reference, as defined in the WS-Addressing specification."}
{"index": 7024, "code": "public interface FaultAwareWebServiceConnection extends WebServiceConnection {\n\t// Indicates whether this connection received a fault.\n\tboolean hasFault();\n\t// Deprecated. In favor of setFaultCode(QName)\n\tvoid setFault(boolean fault);\n\t// Sets a specific fault code.\n\tvoid setFaultCode(QName faultCode);\n}", "des": "Sub-interface of WebServiceConnection that is aware of any Fault messages received."}
{"index": 7025, "code": "public interface FaultAwareWebServiceMessage extends WebServiceMessage {\n\t// Returns the fault code, if any.\n\tQName getFaultCode();\n\t// Returns the fault reason message.\n\tString getFaultReason();\n\t// Does this message have a fault?\n\tboolean hasFault();\n}", "des": "Sub-interface of WebServiceMessage that can contain special Fault messages."}
{"index": 7026, "code": "public enum FaultCode extends Enum<FaultCode> {\n\tQName value();\n\t// Returns the enum constant of this class with the specified name.\n\tstatic FaultCode valueOf(String name);\n\t// Returns an array containing the constants of this enum class, in the order they are declared.\n\tstatic FaultCode[] values();\n}", "des": "Enumeration that represents the standard SOAP Fault codes for use with the JDK 1.5+ SoapFault annotation."}
{"index": 7027, "code": "public interface HeadersAwareReceiverWebServiceConnection {\n\t// Adds a response header with the given name and value.\n\tvoid addResponseHeader(String name, String value);\n\t// Returns an iteration over all the header names this request contains.\n\tIterator<String> getRequestHeaderNames();\n\t// Returns an iteration over all the string values of the specified header.\n\tIterator<String> getRequestHeaders(String name);\n}", "des": "Interface to define access to header information for certain WebServiceConnection implementations."}
{"index": 7028, "code": "public abstract class MarshallingUtils extends Object {\n\t// Marshals the given object to the payload of the given message using the provided Marshaller.\n\tstatic void marshal(org.springframework.oxm.Marshaller marshaller, Object graph, WebServiceMessage message);\n\t// Unmarshals the payload of the given message using the provided Unmarshaller.\n\tstatic Object unmarshal(org.springframework.oxm.Unmarshaller unmarshaller, WebServiceMessage message);\n}", "des": "Helper class for endpoints and endpoint mappings that use marshalling."}
{"index": 7029, "code": "public class MessageContextMethodArgumentResolver extends Object implements MethodArgumentResolver {\n\t// Resolves the given parameter into a method argument.\n\tMessageContext resolveArgument(MessageContext messageContext, org.springframework.core.MethodParameter parameter);\n\t// Indicates whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Implementation of MethodArgumentResolver that supports MessageContext arguments."}
{"index": 7030, "code": "public class MessageEndpointAdapter extends Object implements EndpointAdapter {\n\t// Use the given endpoint to handle the request.\n\tvoid invoke(MessageContext messageContext, Object endpoint);\n\t// Does this EndpointAdapter support the given endpoint?\n\tboolean supports(Object endpoint);\n}", "des": "Adapter to use a MessageEndpoint as the endpoint for a EndpointInvocationChain."}
{"index": 7031, "code": "public interface MessageIdStrategy {\n\t// Indicates whether the given MessageID value is a duplicate or not\n\tboolean isDuplicate(URI messageId);\n\t// Returns a new WS-Addressing MessageID for the given SoapMessage.\n\tURI newMessageId(SoapMessage message);\n}", "des": "Strategy interface that encapsulates the creation and validation of WS-Addressing MessageIDs."}
{"index": 7032, "code": "public interface MethodArgumentResolver {\n\t// Resolves the given parameter into a method argument.\n\tObject resolveArgument(MessageContext messageContext, org.springframework.core.MethodParameter parameter);\n\t// Indicates whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Strategy interface used to resolve method parameters into arguments."}
{"index": 7033, "code": "public interface MethodReturnValueHandler {\n\t// Handles the given return value.\n\tvoid handleReturnValue(MessageContext messageContext, org.springframework.core.MethodParameter returnType, Object returnValue);\n\t// Indicates whether the given method return type is supported by this handler.\n\tboolean supportsReturnType(org.springframework.core.MethodParameter returnType);\n}", "des": "Strategy interface used to handle method return values."}
{"index": 7034, "code": "public class PayloadEndpointAdapter extends org.springframework.xml.transform.TransformerObjectSupport implements EndpointAdapter {\n\t// Use the given endpoint to handle the request.\n\tvoid invoke(MessageContext messageContext, Object endpoint);\n\t// Does this EndpointAdapter support the given endpoint?\n\tboolean supports(Object endpoint);\n}", "des": "Adapter to use a PayloadEndpoint as the endpoint for a EndpointInvocationChain."}
{"index": 7035, "code": "public class PayloadRootAnnotationMethodEndpointMapping extends AbstractAnnotationMethodEndpointMapping<QName> {\n\t// Returns the endpoint keys for the given message context.\n\tprotected QName getLookupKeyForMessage(MessageContext messageContext);\n\t// Returns the endpoint keys for the given method.\n\tprotected List<QName> getLookupKeysForMethod(Method method);\n\t// Override the default TransformerFactory.\n\tstatic void setTransformerFactory(TransformerFactory transformerFactory);\n}", "des": "Implementation of the EndpointMapping interface that uses the PayloadRoot annotation to map methods to request payload root elements."}
{"index": 7036, "code": "public class PayloadRootQNameEndpointMapping extends AbstractQNameEndpointMapping {\n\t// Template method that resolves the qualified names from the given SOAP message.\n\tprotected QName resolveQName(MessageContext messageContext);\n\t// Override the default TransformerFactory.\n\tstatic void setTransformerFactory(TransformerFactory transformerFactory);\n}", "des": "Implementation of the EndpointMapping interface to map from the qualified name of the request payload root element."}
{"index": 7037, "code": "public class PayloadValidatingInterceptor extends AbstractValidatingInterceptor {\n\t// Returns the part of the request message that is to be validated.\n\tprotected Source getValidationRequestSource(WebServiceMessage request);\n\t// Returns the part of the response message that is to be validated.\n\tprotected Source getValidationResponseSource(WebServiceMessage response);\n}", "des": "Client-side interceptor that validates the contents of WebServiceMessages using a schema."}
{"index": 7038, "code": "public class PayloadValidatingInterceptor extends AbstractFaultCreatingValidatingInterceptor {\n\t// Returns the payload source of the given message.\n\tprotected Source getValidationRequestSource(WebServiceMessage request);\n\t// Returns the payload source of the given message.\n\tprotected Source getValidationResponseSource(WebServiceMessage response);\n}", "des": "Interceptor that validates the contents of WebServiceMessages using a schema."}
{"index": 7039, "code": "public class SaajXmlReader extends org.springframework.xml.sax.AbstractXmlReader {\n\tboolean getFeature(String name);\n\t// Parses the StAX XML reader passed at construction-time.\n\tfinal void parse(String ignored);\n\t// Parses the StAX XML reader passed at construction-time.\n\tfinal void parse(InputSource ignored);\n\tvoid setFeature(String name, boolean value);\n}", "des": "SAX XMLReader that reads from a SAAJ Node."}
{"index": 7040, "code": "public class SimpleWsdl11Definition extends Object implements Wsdl11Definition, org.springframework.beans.factory.InitializingBean {\n\tvoid afterPropertiesSet();\n\t// Returns the Source of the definition.\n\tSource getSource();\n\t// Set the WSDL resource to be exposed by calls to this instances' getSource() method.\n\tvoid setWsdl(org.springframework.core.io.Resource wsdlResource);\n}", "des": "The default Wsdl11Definition implementation."}
{"index": 7041, "code": "public interface Soap12Header extends SoapHeader {\n\t// Adds a new NotUnderstood SoapHeaderElement this header.\n\tSoapHeaderElement addNotUnderstoodHeaderElement(QName headerName);\n\t// Adds a new Upgrade SoapHeaderElement this header.\n\tSoapHeaderElement addUpgradeHeaderElement(String[] supportedSoapUris);\n\t// Returns an Iterator over all the header elements that should be processed for the given roles.\n\tIterator<SoapHeaderElement> examineHeaderElementsToProcess(String[] roles, boolean isUltimateReceiver);\n}", "des": "Subinterface of SoapHeader that exposes SOAP 1.2 functionality."}
{"index": 7042, "code": "public class SoapEndpointInvocationChain extends EndpointInvocationChain {\n\t// Gets the actors (SOAP 1.1) or roles (SOAP 1.2) associated with an invocation of this chain and its contained interceptors and endpoint.\n\tString[] getActorsOrRoles();\n\t// Indicates whether this chain fulfills the SOAP 1.2 Ultimate Receiver role.\n\tboolean isUltimateReceiver();\n}", "des": "SOAP-specific subclass of the EndpointInvocationChain."}
{"index": 7043, "code": "public interface SoapEnvelope extends SoapElement {\n\t// Returns the SoapBody.\n\tSoapBody getBody();\n\t// Returns the SoapHeader.\n\tSoapHeader getHeader();\n}", "des": "Represents the Envelope element in a SOAP message."}
{"index": 7044, "code": "public class SoapFaultClientException extends WebServiceFaultException {\n\t// Returns the fault code.\n\tQName getFaultCode();\n\t// Returns the fault string or reason.\n\tString getFaultStringOrReason();\n\t// Returns the SoapFault.\n\tSoapFault getSoapFault();\n}", "des": "Thrown by SoapFaultMessageResolver when the response message has a fault."}
{"index": 7045, "code": "public class SoapFaultDefinition extends Object {\n\t// Returns the fault code.\n\tQName getFaultCode();\n\t// Returns the fault string or reason text.\n\tString getFaultStringOrReason();\n\t// Gets the fault string locale.\n\tLocale getLocale();\n\t// Sets the fault code.\n\tvoid setFaultCode(QName faultCode);\n\t// Sets the fault string or reason text.\n\tvoid setFaultStringOrReason(String faultStringOrReason);\n\t// Sets the fault string locale.\n\tvoid setLocale(Locale locale);\n}", "des": "Defines properties for a SOAP Fault."}
{"index": 7046, "code": "public interface SoapFaultDetail extends SoapElement {\n\t// Adds a new SoapFaultDetailElement with the specified qualified name to this detail.\n\tSoapFaultDetailElement addFaultDetailElement(QName name);\n\t// Gets an iterator over all of the SoapFaultDetailElements in this detail.\n\tIterator<SoapFaultDetailElement> getDetailEntries();\n\t// Returns a Result that represents the concents of the detail.\n\tResult getResult();\n}", "des": "Represents the detail element in a SOAP fault."}
{"index": 7047, "code": "public interface SoapFaultDetailElement extends SoapElement {\n\t// Adds a new text node to this element.\n\tvoid addText(String text);\n\t// Returns a Result that allows for writing to the contents of the detail element.\n\tResult getResult();\n}", "des": "Represents the content for an individual SOAP detail entry in a SOAP Message."}
{"index": 7048, "code": "public class SoapFaultMappingExceptionResolver extends AbstractSoapFaultDefinitionExceptionResolver {\n\t// Return the depth to the superclass matching.\n\tprotected int getDepth(String exceptionMapping, Exception ex);\n\t// Template method that returns the SoapFaultDefinition for the given exception.\n\tprotected SoapFaultDefinition getFaultDefinition(Object endpoint, Exception ex);\n\t// Set the mappings between exception class names and SOAP Faults.\n\tvoid setExceptionMappings(Properties mappings);\n}", "des": "Exception resolver that allows for mapping exception class names to SOAP Faults."}
{"index": 7049, "code": "public class SoapHeaderElementMethodArgumentResolver extends Object implements MethodArgumentResolver {\n\t// Resolves the given parameter into a method argument.\n\tObject resolveArgument(MessageContext messageContext, org.springframework.core.MethodParameter parameter);\n\t// Indicates whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Implementation of MethodArgumentResolver that supports resolving SoapHeaderElement parameters."}
{"index": 7050, "code": "public interface SoapMessageFactory extends WebServiceMessageFactory {\n\t// Creates a new, empty SoapMessage.\n\tSoapMessage createWebServiceMessage();\n\t// Reads a SoapMessage from the given input stream.\n\tSoapMessage createWebServiceMessage(InputStream inputStream);\n\t// Sets the SOAP Version used by this factory.\n\tvoid setSoapVersion(SoapVersion version);\n}", "des": "Sub-interface of WebServiceMessageFactory which contains SOAP-specific properties and methods."}
{"index": 7051, "code": "public class SoapMethodArgumentResolver extends Object implements MethodArgumentResolver {\n\t// Resolves the given parameter into a method argument.\n\tObject resolveArgument(MessageContext messageContext, org.springframework.core.MethodParameter parameter);\n\t// Indicates whether the given method parameter is supported by this resolver.\n\tboolean supportsParameter(org.springframework.core.MethodParameter parameter);\n}", "des": "Implementation of MethodArgumentResolver that supports SoapMessage, SoapBody, SoapEnvelope, and SoapHeader."}
{"index": 7052, "code": "public abstract class SoapUtils extends Object {\n\t// Escapes the given SOAP action to be surrounded by quotes.\n\tstatic String escapeAction(String soapAction);\n\t// Returns the value of the action parameter in the given SOAP 1.2 content type.\n\tstatic String extractActionFromContentType(String contentType);\n\t// Replaces or adds the value of the action parameter in the given SOAP 1.2 content type.\n\tstatic String setActionInContentType(String contentType, String action);\n}", "des": "Contains various utility methods for handling SOAP messages."}
{"index": 7053, "code": "public interface StreamingPayload {\n\t// Returns the qualified name of the payload.\n\tQName getName();\n\t// Writes this payload to the given XMLStreamWriter.\n\tvoid writeTo(XMLStreamWriter streamWriter);\n}", "des": "Defines the contract for payloads that can be written directly to a XMLStreamWriter."}
{"index": 7054, "code": "public abstract class TransportContextHolder extends Object {\n\t// Return the TransportContext associated with the current thread, if any.\n\tstatic TransportContext getTransportContext();\n\t// Associate the given TransportContext with the current thread.\n\tstatic void setTransportContext(TransportContext transportContext);\n}", "des": "Simple holder class that associates a TransportContext instance with the current thread."}
{"index": 7055, "code": "public abstract class TransportOutputStream extends OutputStream {\n\t// Adds a header with the given name and value.\n\tabstract void addHeader(String name, String value);\n\tvoid close();\n\t// Returns the output stream to write to.\n\tprotected abstract OutputStream createOutputStream();\n\tvoid flush();\n\tvoid write(byte[] b);\n\tvoid write(byte[] b, int off, int len);\n\tvoid write(int b);\n}", "des": "A TransportOutputStream is an output stream with MIME input headers."}
{"index": 7056, "code": "public class UriEndpointMapping extends AbstractMapBasedEndpointMapping {\n\t// Returns the endpoint key for the given message context.\n\tprotected String getLookupKeyForMessage(MessageContext messageContext);\n\t// Indicates whether the path should be used instead of the full URI.\n\tvoid setUsePath(boolean usePath);\n\t// Validates the given endpoint key.\n\tprotected boolean validateLookupKey(String key);\n}", "des": "Implementation of the EndpointMapping interface to map from the full request URI or request URI path to endpoint beans."}
{"index": 7057, "code": "public class UuidMessageIdStrategy extends Object implements MessageIdStrategy {\n\t// Returns false.\n\tboolean isDuplicate(URI messageId);\n\t// Returns a new WS-Addressing MessageID for the given SoapMessage.\n\tURI newMessageId(SoapMessage message);\n}", "des": "Implementation of the MessageIdStrategy interface that uses a UUID to generate a Message Id."}
{"index": 7058, "code": "public interface WebServiceMessage {\n\t// Returns the contents of the message as a Result.\n\tResult getPayloadResult();\n\t// Returns the contents of the message as a Source.\n\tSource getPayloadSource();\n\t// Writes the entire message to the given output stream.\n\tvoid writeTo(OutputStream outputStream);\n}", "des": "Represents a protocol-agnostic XML message."}
{"index": 7059, "code": "public interface WebServiceMessageFactory {\n\t// Creates a new, empty WebServiceMessage.\n\tWebServiceMessage createWebServiceMessage();\n\t// Reads a WebServiceMessage from the given input stream.\n\tWebServiceMessage createWebServiceMessage(InputStream inputStream);\n}", "des": "The WebServiceMessageFactory serves as a factory for WebServiceMessages."}
{"index": 7060, "code": "public interface WebServiceMessageSender {\n\t// Create a new WebServiceConnection to the specified URI.\n\tWebServiceConnection createConnection(URI uri);\n\t// Does this WebServiceMessageSender support the supplied URI?\n\tboolean supports(URI uri);\n}", "des": "Defines the methods for classes capable of sending and receiving WebServiceMessage instances across a transport."}
{"index": 7061, "code": "public abstract class WebUtils extends Object {\n\t// Extract the URL filename from the given request URL path.\n\tstatic String extractFilenameFromUrlPath(String urlPath);\n\t// Extract the full URL filename (including file extension) from the given request URL path.\n\tstatic String extractFullFilenameFromUrlPath(String urlPath);\n}", "des": "Miscellaneous utilities for web applications."}
{"index": 7062, "code": "public interface WsConfigurer {\n\t// Add resolvers to support custom endpoint method argument types.\n\tvoid addArgumentResolvers(List<MethodArgumentResolver> argumentResolvers);\n\t// Add EndpointInterceptors for pre- and post-processing of endpoint method invocations.\n\tvoid addInterceptors(List<EndpointInterceptor> interceptors);\n\t// Add handlers to support custom controller method return value types.\n\tvoid addReturnValueHandlers(List<MethodReturnValueHandler> returnValueHandlers);\n}", "des": "Defines callback methods to customize the Java-based configuration for Spring Web Services enabled via @EnableWs."}
{"index": 7063, "code": "public class Wsdl11DestinationProvider extends AbstractCachingDestinationProvider {\n\t// Abstract template method that looks up the URI.\n\tprotected URI lookupDestination();\n\t// Sets the XPath expression to use when extracting the service location URI from a WSDL.\n\tvoid setLocationExpression(String expression);\n\t// Sets a WSDL location from which the service destination URI will be resolved.\n\tvoid setWsdl(org.springframework.core.io.Resource wsdlResource);\n}", "des": "Implementation of the DestinationProvider that resolves a destination URI from a WSDL file."}
{"index": 7064, "code": "public class Wsdl4jDefinition extends Object implements Wsdl11Definition {\n\t// Returns the WSDL4J Definition.\n\tjavax.wsdl.Definition getDefinition();\n\t// Returns the Source of the definition.\n\tSource getSource();\n\t// Set the WSDL4J Definition.\n\tvoid setDefinition(javax.wsdl.Definition definition);\n}", "des": "Implementation of the Wsdl11Definition based on WSDL4J."}
{"index": 7065, "code": "public class XmlRootElementEndpointMapping extends AbstractAnnotationMethodEndpointMapping<QName> {\n\t// Returns the endpoint keys for the given message context.\n\tprotected QName getLookupKeyForMessage(MessageContext messageContext);\n\t// Returns the endpoint key for the given method.\n\tprotected QName getLookupKeyForMethod(Method method);\n\tvoid setTransformerHelper(org.springframework.xml.transform.TransformerHelper transformerHelper);\n}", "des": "Implementation of the EndpointMapping interface that uses the JAXB2 XmlRootElement annotation to map methods to request payload root elements."}
{"index": 7066, "code": "Interface ServerApplicationConfig {\n\t// Enables applications to filter the discovered classes annotated with ServerEndpoint.\n\tjava.util.Set<java.lang.Class<?>> getAnnotatedEndpointClasses​(java.util.Set<java.lang.Class<?>> scanned);\n\t// Enables applications to filter the discovered implementations of ServerEndpointConfig.\n\tjava.util.Set<ServerEndpointConfig> getEndpointConfigs​(java.util.Set<java.lang.Class<? extends Endpoint>> scanned);\n}", "des": "Applications may provide an implementation of this interface to filter the discovered WebSocket endpoints that are deployed."}
{"index": 7067, "code": "Class AbstractChunk {\n\tprotected abstract int getBufferElement​(int index);\n\tint getEnd();\n\tint getLength();\n\tint getLimit();\n\tprotected int getLimitInternal();\n\tint getOffset();\n\tint getStart();\n\tint hash();\n\tint indexOf​(String src, int srcOff, int srcLen, int myOff);\n\tboolean isNull();\n\t// Resets the chunk to an uninitialized state.\n\tvoid recycle();\n\tvoid setEnd​(int i);\n\t// Maximum amount of data in this buffer.\n\tvoid setLimit​(int limit);\n\tvoid setOffset​(int off);\n}", "des": "Base class for the *Chunk implementation to reduce duplication."}
{"index": 7068, "code": "Enum AbstractEndpoint.Handler.SocketState {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic AbstractEndpoint.Handler.SocketState valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic AbstractEndpoint.Handler.SocketState[] values();\n}", "des": "Different types of socket states to react upon."}
{"index": 7069, "code": "Class AbstractObjectCreationFactory {\n\t// Factory method called by FactoryCreateRule to supply an object based on the element's attributes.\n\tabstract Object createObject​(Attributes attributes);\n\t// Returns the Digester that was set by the FactoryCreateRule upon initialization.\n\tDigester getDigester();\n\t// Set the Digester to allow the implementation to do logging, classloading based on the digester's classloader, etc.\n\tvoid setDigester​(Digester digester);\n}", "des": "Abstract base class for ObjectCreationFactory implementations."}
{"index": 7070, "code": "Class AbstractSingleArchiveResourceSet {\n\t// Obtain the map of entries in the archive.\n\tprotected Map<String,​JarEntry> getArchiveEntries​(boolean single);\n\t// Obtain a single entry from the archive.\n\tprotected JarEntry getArchiveEntry​(String pathInArchive);\n\t// Sub-classes implement this method to perform any instance initialisation required.\n\tprotected void initInternal();\n\tprotected boolean isMultiRelease();\n}", "des": "Base class for a WebResourceSet based on a single, rather than nested, archive."}
{"index": 7071, "code": "Interface AccessLog {\n\tboolean getRequestAttributesEnabled();\n\t// Add the request/response to the access log using the specified processing time.\n\tvoid log​(Request request, Response response, long time);\n\t// Should this valve use request attributes for IP address, hostname, protocol and port used for the request?\n\tvoid setRequestAttributesEnabled​(boolean requestAttributesEnabled);\n}", "des": "Intended for use by a Valve to indicate that the Valve provides access logging."}
{"index": 7072, "code": "Class AccessLogAdapter {\n\tvoid add​(AccessLog log);\n\tboolean getRequestAttributesEnabled();\n\t// Add the request/response to the access log using the specified processing time.\n\tvoid log​(Request request, Response response, long time);\n\t// Should this valve use request attributes for IP address, hostname, protocol and port used for the request?\n\tvoid setRequestAttributesEnabled​(boolean requestAttributesEnabled);\n}", "des": "A helper class that wraps several AccessLog instances."}
{"index": 7073, "code": "Enum ActionCode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ActionCode valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ActionCode[] values();\n}", "des": "ActionCodes represent callbacks from the servlet container to the coyote connector."}
{"index": 7074, "code": "Class AjpNio2Protocol {\n\t// Concrete implementations need to provide access to their logger to be used by the abstract classes.\n\tprotected Log getLog();\n\t// Obtain the prefix to be used when construction a name for this protocol handler.\n\tprotected String getNamePrefix();\n}", "des": "This the NIO2 based protocol handler implementation for AJP."}
{"index": 7075, "code": "Class AjpNioProtocol {\n\t// Concrete implementations need to provide access to their logger to be used by the abstract classes.\n\tprotected Log getLog();\n\t// Obtain the prefix to be used when construction a name for this protocol handler.\n\tprotected String getNamePrefix();\n}", "des": "This the NIO based protocol handler implementation for AJP."}
{"index": 7076, "code": "Class ArrayStack<E> {\n\t// Return true if this stack is currently empty.\n\tboolean empty();\n\t// Returns the top item off of this stack without removing it.\n\tE peek();\n\t// Returns the n'th item down (zero-relative) from the top of this stack without removing it.\n\tE peek​(int n);\n\t// Pops the top item off of this stack and return it.\n\tE pop();\n\t// Pushes a new item onto the top of this stack.\n\tE push​(E item);\n}", "des": "Imported copy of the ArrayStack class from Commons Collections, which was the only direct dependency from Digester."}
{"index": 7077, "code": "Class Ascii {\n\t// Parses an unsigned long from the specified subarray of bytes.\n\tstatic long parseLong​(byte[] b, int off, int len);\n\t// Returns the lower case equivalent of the specified ASCII character.\n\tstatic int toLower​(int c);\n}", "des": "This class implements some basic ASCII character handling functions."}
{"index": 7078, "code": "Interface AsyncContextCallback {\n\t// Used to notify the Context that async processing has ended.\n\tvoid decrementInProgressAsyncCount();\n\tvoid fireOnComplete();\n\t// Used to notify the Context that async processing has started.\n\tvoid incrementInProgressAsyncCount();\n\t// Reports if the web application associated with this async request is available.\n\tboolean isAvailable();\n}", "des": "Provides a mechanism for the Coyote connectors to communicate with the AsyncContext."}
{"index": 7079, "code": "Class AsyncFileHandler {\n\t// Close the currently open log file (if any).\n\tvoid close();\n\t// Open the new log file for the date specified by date.\n\tvoid open();\n\t// Format and publish a LogRecord.\n\tvoid publish​(LogRecord record);\n\tprotected void publishInternal​(LogRecord record);\n}", "des": "A FileHandler implementation that uses a queue of log entries."}
{"index": 7080, "code": "Class AuthenticatedUserRealm {\n\t// Get the password for the specified user.\n\tprotected String getPassword​(String username);\n\t// Get the principal associated with the specified user.\n\tprotected Principal getPrincipal​(String username);\n}", "des": "This Realm is intended for use with Authenticator implementations (SSLAuthenticator, SpnegoAuthenticator) that authenticate the user as well as obtain the user credentials."}
{"index": 7081, "code": "Class B2CConverter {\n\t// Convert the given bytes to characters.\n\tvoid convert​(ByteBuffer bc, CharBuffer cc, ByteChunk.ByteInputChannel ic, boolean endOfInput);\n\t// Convert the given bytes to characters.\n\tvoid convert​(ByteChunk bc, CharChunk cc, boolean endOfInput);\n\tCharset getCharset();\n\t// Obtain the Charset for the given encoding\n\tstatic Charset getCharset​(String enc);\n\t// Reset the decoder state.\n\tvoid recycle();\n}", "des": "NIO based character decoder."}
{"index": 7082, "code": "Class BasicAuthenticator {\n\t// Generate the authorization header value that will be sent to the server.\n\tString getAuthorization​(String requestUri, String authenticateHeader, String userName, String userPassword, String userRealm);\n\t// Get the authentication method.\n\tString getSchemeName();\n}", "des": "Authenticator supporting the BASIC authentication method."}
{"index": 7083, "code": "Class BasicAuthenticator.BasicCredentials {\n\t// Trivial accessor.\n\tString getPassword();\n\t// Trivial accessor.\n\tString getUsername();\n}", "des": "Parser for an HTTP Authorization header for BASIC authentication as per RFC 2617 section 2, and the Base64 encoded credentials as per RFC 2045 section 6.8."}
{"index": 7084, "code": "Class BasicDataSourceFactory {\n\t// Creates and configures a BasicDataSource instance based on the given properties.\n\tstatic BasicDataSource createDataSource​(Properties properties);\n\t// Creates and return a new BasicDataSource instance.\n\tObject getObjectInstance​(Object obj, Name name, Context nameCtx, Hashtable<?,​?> environment);\n}", "des": "JNDI object factory that creates an instance of BasicDataSource that has been configured based on the RefAddr values of the specified Reference, which must match the names and data types of the BasicDataSource bean properties with the following exceptions: connectionInitSqls must be passed to this factory as a single String using semicolon to delimit the statements whereas BasicDataSource requires a collection of Strings."}
{"index": 7085, "code": "Class ByteArrayOutputStream {\n\t// Closing a ByteArrayOutputStream has no effect.\n\tvoid close();\n\t// Gets the current contents of this byte stream as a byte array.\n\tbyte[] toByteArray();\n\t// Write the bytes to byte array.\n\tvoid write​(byte[] b, int off, int len);\n\t// Write a byte to byte array.\n\tvoid write​(int b);\n\t// Writes the entire contents of this byte stream to the specified output stream.\n\tvoid writeTo​(OutputStream out);\n}", "des": "This class implements an output stream in which the data is written into a byte array."}
{"index": 7086, "code": "Class ByteArrayServletOutputStream {\n\t// TODO SERVLET 3.1\n\tboolean isReady();\n\t// TODO SERVLET 3.1\n\tvoid setWriteListener​(WriteListener listener);\n\tbyte[] toByteArray();\n\t// Write to our buffer.\n\tvoid write​(int b);\n}", "des": "Class that extends ServletOutputStream, used as a wrapper from within SsiInclude"}
{"index": 7087, "code": "Interface ByteChunk.ByteOutputChannel {\n\t// Send the bytes ( usually the internal conversion buffer ).\n\tvoid realWriteBytes​(byte[] buf, int off, int len);\n\t// Send the bytes ( usually the internal conversion buffer ).\n\tvoid realWriteBytes​(ByteBuffer from);\n}", "des": "When we need more space we'll either grow the buffer ( up to the limit ) or send it to a channel."}
{"index": 7088, "code": "Class ByteMessage {\n\t// Returns the message contents of this byte message\n\tbyte[] getMessage();\n\tvoid readExternal​(ObjectInput in);\n\t// Sets the message contents of this byte message\n\tvoid setMessage​(byte[] message);\n\tvoid writeExternal​(ObjectOutput out);\n}", "des": "A byte message is not serialized and deserialized by the channel instead it is sent as a byte array By default Tribes uses java serialization when it receives an object to be sent over the wire."}
{"index": 7089, "code": "Class C2BConverter {\n\t// Convert the given characters to bytes.\n\tvoid convert​(CharBuffer cc, ByteBuffer bc);\n\t// Convert the given characters to bytes.\n\tvoid convert​(CharChunk cc, ByteChunk bc);\n\tCharset getCharset();\n\tboolean isUndeflow();\n\t// Reset the encoder state.\n\tvoid recycle();\n}", "des": "NIO based character encoder."}
{"index": 7090, "code": "Class CallbackHandlerImpl {\n\t// Get the Container with which this instance is associated.\n\tContainer getContainer();\n\tvoid handle​(Callback[] callbacks);\n\t// Set the Container with which this instance is associated.\n\tvoid setContainer​(Container container);\n}", "des": "Default implementation of a JASPIC CallbackHandler."}
{"index": 7091, "code": "Class CallParamRule {\n\t// Process the start of this element.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Process the body text of this element.\n\tvoid body​(String namespace, String name, String bodyText);\n\t// Process any body texts now.\n\tvoid end​(String namespace, String name);\n}", "des": "Rule implementation that saves a parameter for use by a surrounding CallMethodRule."}
{"index": 7092, "code": "Interface CallStack {\n\t// Clears the current stack trace snapshot.\n\tvoid clear();\n\t// Takes a snapshot of the current call stack.\n\tvoid fillInStackTrace();\n\t// Prints the current stack trace if available to a PrintWriter.\n\tboolean printStackTrace​(PrintWriter writer);\n}", "des": "Strategy for obtaining and printing the current call stack."}
{"index": 7093, "code": "Class CallStackUtils {\n\t// Deprecated. use newCallStack(String, boolean, boolean)\n\tstatic CallStack newCallStack​(String messageFormat, boolean useTimestamp);\n\t// Constructs a new CallStack using the fasted allowed strategy.\n\tstatic CallStack newCallStack​(String messageFormat, boolean useTimestamp, boolean requireFullStackTrace);\n}", "des": "Utility methods for CallStack."}
{"index": 7094, "code": "Class CertificateCreateRule {\n\t// This method is called when the beginning of a matching XML element is encountered.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Process the end of this element.\n\tvoid end​(String namespace, String name);\n}", "des": "Rule implementation that creates an SSLHostConfigCertificate."}
{"index": 7095, "code": "Class ChannelException {\n\t// Adds a faulty member\n\tboolean addFaultyMember​(ChannelException.FaultyMember mbr);\n\t// Adds a list of faulty members\n\tint addFaultyMember​(ChannelException.FaultyMember[] mbrs);\n\t// Adds a faulty member, and the reason the member failed.\n\tboolean addFaultyMember​(Member mbr, Exception x);\n\t// Returns an array of members that failed and the reason they failed.\n\tChannelException.FaultyMember[] getFaultyMembers();\n\t// Returns the message for this exception\n\tString getMessage();\n}", "des": "A channel exception is thrown when an internal error happens somewhere in the channel."}
{"index": 7096, "code": "Interface ChannelListener {\n\t// Invoked by the channel to determine if the listener will process this message or not.\n\tboolean accept​(Serializable msg, Member sender);\n\tboolean equals​(Object listener);\n\t// Receive a message from the channel\n\tvoid messageReceived​(Serializable msg, Member sender);\n}", "des": "An interface to listens to incoming messages from a channel."}
{"index": 7097, "code": "Class CharsetMapper {\n\t// The deployment descriptor can have a locale-encoding-mapping-list element which describes the webapp's desired mapping from locale to charset.\n\tvoid addCharsetMappingFromDeploymentDescriptor​(String locale, String charset);\n\t// Calculate the name of a character set to be assumed, given the specified Locale and the absence of a character set specified as part of the content type header.\n\tString getCharset​(Locale locale);\n}", "des": "Utility class that attempts to map from a Locale to the corresponding character set to be used for interpreting input text (or generating output text) when the Content-Type header does not include one."}
{"index": 7098, "code": "Class CheckEol {\n\t// Sets the files to be checked\n\tvoid addFileset​(org.apache.tools.ant.types.FileSet fs);\n\t// Perform the check\n\tvoid execute();\n\t// Sets the line ending mode.\n\tvoid setMode​(String mode);\n}", "des": "Ant task that checks that all the files in the given fileset have end-of-line delimiters that are appropriate."}
{"index": 7099, "code": "Class ClassLoaderFactory {\n\t// Create and return a new class loader, based on the configuration defaults and the specified directory paths:\n\tstatic ClassLoader createClassLoader​(File[] unpacked, File[] packed, ClassLoader parent);\n\t// Create and return a new class loader, based on the configuration defaults and the specified directory paths:\n\tstatic ClassLoader createClassLoader​(List<ClassLoaderFactory.Repository> repositories, ClassLoader parent);\n}", "des": "Utility class for building class loaders for Catalina."}
{"index": 7100, "code": "Interface Closeable {\n\t// Closes the object.\n\tvoid close();\n\t// Returns, whether the object is already closed.\n\tboolean isClosed();\n}", "des": "Interface of an object, which may be closed."}
{"index": 7101, "code": "Class ClusterSessionListener {\n\t// Accept only SessionMessage\n\tboolean accept​(ClusterMessage msg);\n\t// Callback from the cluster, when a message is received, The cluster will broadcast it invoking the messageReceived on the receiver.\n\tvoid messageReceived​(ClusterMessage myobj);\n}", "des": "Receive replicated SessionMessage form other cluster node."}
{"index": 7102, "code": "Interface ClusterValve {\n\t// Returns the cluster the cluster deployer is associated with\n\tCatalinaCluster getCluster();\n\t// Associates the cluster deployer with a cluster\n\tvoid setCluster​(CatalinaCluster cluster);\n}", "des": "Cluster valves are a simple extension to the Tomcat valve architecture with a small addition of being able to reference the cluster component in the container it sits in."}
{"index": 7103, "code": "Class ConfigFileLoader {\n\t// Get the configured configuration source.\n\tstatic ConfigurationSource getSource();\n\t// Set the configuration source used by Tomcat to locate various configuration resources.\n\tstatic void setSource​(ConfigurationSource source);\n}", "des": "This class is used to obtain InputStreams for configuration files from a given location String."}
{"index": 7104, "code": "Class ConnectorCreateRule {\n\t// Process the beginning of this element.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Process the end of this element.\n\tvoid end​(String namespace, String name);\n}", "des": "Rule implementation that creates a connector."}
{"index": 7105, "code": "Class ConnectorMBean {\n\t// Obtain and return the value of a specific attribute of this MBean.\n\tObject getAttribute​(String name);\n\t// Set the value of a specific attribute of this MBean.\n\tvoid setAttribute​(Attribute attribute);\n}", "des": "A ModelMBean implementation for the org.apache.coyote.tomcat5.CoyoteConnector component."}
{"index": 7106, "code": "Class Constants {\n\t// Converts an AJP coded HTTP request header to the header name.\n\tstatic String getHeaderForCode​(int code);\n\t// Converts an AJP coded HTTP method to the method name.\n\tstatic String getMethodForCode​(int code);\n\tstatic int getResponseAjpIndex​(String header);\n\t// Converts an AJP coded response header name to the HTTP response header name.\n\tstatic String getResponseHeaderForCode​(int code);\n}", "des": "Constants."}
{"index": 7107, "code": "Interface Contained {\n\t// Get the Container with which this instance is associated.\n\tContainer getContainer();\n\t// Set the Container with which this instance is associated.\n\tvoid setContainer​(Container container);\n}", "des": "Decoupling interface which specifies that an implementing class is associated with at most one Container instance."}
{"index": 7108, "code": "Class ContainerEvent {\n\t// Return the Container on which this event occurred.\n\tContainer getContainer();\n\t// Return the event data of this event.\n\tObject getData();\n\t// Return the event type of this event.\n\tString getType();\n}", "des": "General event for notifying listeners of significant changes on a Container."}
{"index": 7109, "code": "Interface ContainerServlet {\n\t// Obtain the Wrapper with which this Servlet is associated.\n\tWrapper getWrapper();\n\t// Set the Wrapper with which this Servlet is associated.\n\tvoid setWrapper​(Wrapper wrapper);\n}", "des": "A ContainerServlet is a servlet that has access to Catalina internal functionality, and is loaded from the Catalina class loader instead of the web application class loader."}
{"index": 7110, "code": "Class ContextNamingInfoListener {\n\t// Gets whether paths and name for the root context will be empty.\n\tboolean isEmptyOnRoot();\n\t// Acknowledge the occurrence of the specified event.\n\tvoid lifecycleEvent​(LifecycleEvent event);\n\t// Sets whether for the root context context/path and context/encodedPath will contain \"/\" and context/name will contain \"ROOT\" with a version, if any.\n\tvoid setEmptyOnRoot​(boolean emptyOnRoot);\n}", "des": "Implementation of LifecycleListener that will create context naming information environment entries."}
{"index": 7111, "code": "Class ContextResourceLinkMBean {\n\t// Obtain and return the value of a specific attribute of this MBean.\n\tObject getAttribute​(String name);\n\t// Set the value of a specific attribute of this MBean.\n\tvoid setAttribute​(Attribute attribute);\n}", "des": "A ModelMBean implementation for the org.apache.tomcat.util.descriptor.web.ContextResourceLink component."}
{"index": 7112, "code": "Class ContextResourceMBean {\n\t// Obtain and return the value of a specific attribute of this MBean.\n\tObject getAttribute​(String name);\n\t// Set the value of a specific attribute of this MBean.\n\tvoid setAttribute​(Attribute attribute);\n}", "des": "A ModelMBean implementation for the org.apache.tomcat.util.descriptor.web.ContextResource component."}
{"index": 7113, "code": "Class ContextTransaction {\n\tObject getProperty​(String name);\n\t// List properties.\n\tIterator<String> listProperties();\n\t// Remove a configured property.\n\tvoid removeProperty​(String name);\n\t// Set a configured property.\n\tvoid setProperty​(String name, Object value);\n}", "des": "Representation of an application resource reference, as represented in an <res-env-refy> element in the deployment descriptor."}
{"index": 7114, "code": "Enum ContinueResponseTiming {\n\tstatic ContinueResponseTiming fromString​(String value);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ContinueResponseTiming valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ContinueResponseTiming[] values();\n}", "des": "Defines timing options for responding to requests that contain a '100-continue' expectations."}
{"index": 7115, "code": "Enum CorsFilter.CORSRequestType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CorsFilter.CORSRequestType valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CorsFilter.CORSRequestType[] values();\n}", "des": "Enumerates varies types of CORS requests."}
{"index": 7116, "code": "Class CoyoteOutputStream {\n\t// Prevent cloning the facade.\n\tprotected Object clone();\n\tvoid close();\n\t// Will send the buffer to the client.\n\tvoid flush();\n\t// Checks if a non-blocking write will succeed.\n\tboolean isReady();\n\t// Sets the WriteListener for this ServletOutputStream and thereby switches to non-blocking IO.\n\tvoid setWriteListener​(WriteListener listener);\n\tvoid write​(byte[] b);\n\tvoid write​(byte[] b, int off, int len);\n\tvoid write​(int i);\n\tvoid write​(ByteBuffer from);\n}", "des": "Coyote implementation of the servlet output stream."}
{"index": 7117, "code": "Interface CredentialHandler {\n\t// Checks to see if the input credentials match the stored credentials\n\tboolean matches​(String inputCredentials, String storedCredentials);\n\t// Generates the equivalent stored credentials for the given input credentials.\n\tString mutate​(String inputCredentials);\n}", "des": "This interface is used by the Realm to compare the user provided credentials with the credentials stored in the Realm for that user."}
{"index": 7118, "code": "Class CredentialHandlerSF {\n\t// Store a server.xml element with attributes and children\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n\t// Store the specified CredentialHandler properties and child (CredentialHandler)\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aCredentialHandler, StoreDescription parentDesc);\n}", "des": "Store server.xml Element CredentialHandler"}
{"index": 7119, "code": "Class CustomObjectInputStream {\n\t// Load the local class equivalent of the specified stream class description, by using the class loader assigned to this Context.\n\tClass<?> resolveClass​(ObjectStreamClass classDesc);\n\t// Return a proxy class that implements the interfaces named in a proxy class descriptor.\n\tprotected Class<?> resolveProxyClass​(String[] interfaces);\n}", "des": "Custom subclass of ObjectInputStream that loads from the class loader for this web application."}
{"index": 7120, "code": "Enum DestroyMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DestroyMode valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DestroyMode[] values();\n}", "des": "Destroy context provided to object factories via destroyObject and invalidateObject methods."}
{"index": 7121, "code": "Class DigestAuthenticator {\n\t// Generate the authorization header value that will be sent to the server.\n\tString getAuthorization​(String requestUri, String authenticateHeader, String userName, String userPassword, String userRealm);\n\t// Get the authentication method.\n\tString getSchemeName();\n}", "des": "Authenticator supporting the DIGEST authentication method."}
{"index": 7122, "code": "Enum DigestAuthenticator.AuthDigest {\n\tString getJavaName();\n\tString getRfcName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DigestAuthenticator.AuthDigest valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DigestAuthenticator.AuthDigest[] values();\n}", "des": "This enum exists because RFC 7616 and Java use different names for some digests."}
{"index": 7123, "code": "Enum DispatchType {\n\tSocketEvent getSocketStatus();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DispatchType valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DispatchType[] values();\n}", "des": "This enumeration lists the different types of dispatches that request processing can trigger."}
{"index": 7124, "code": "Class DisposableConnectionFacade {\n\tboolean equals​(Object obj);\n\t// Gets invoked each time an operation on Connection is invoked.\n\tObject invoke​(Object proxy, Method method, Object[] args);\n\t// Gets called each time the connection is borrowed from the pool This means that if an interceptor holds a reference to the connection the interceptor can be reused for another connection.\n\tvoid reset​(ConnectionPool parent, PooledConnection con);\n}", "des": "A DisposableConnectionFacade object is the top most interceptor that wraps an object of type PooledConnection."}
{"index": 7125, "code": "Interface DistributedManager {\n\t// Returns the total session count for primary, backup and proxy.\n\tint getActiveSessionsFull();\n\t// Returns the list of all sessions IDS (primary, backup and proxy).\n\tSet<String> getSessionIdsFull();\n}", "des": "Interface implemented by session managers that do not keep a complete copy of all sessions in memory but do know where every session is."}
{"index": 7126, "code": "Class DNSMembershipProvider {\n\t// Invoked by the channel to determine if the listener will process this message or not.\n\tboolean accept​(Serializable msg, Member sender);\n\t// Fetch current cluster members from the cloud orchestration.\n\tprotected Member[] fetchMembers();\n\tvoid start​(int level);\n\tboolean stop​(int level);\n}", "des": "A MembershipProvider that uses DNS to retrieve the members of a cluster."}
{"index": 7127, "code": "Class EjbFactory {\n\t// If a default factory is available for the given reference type, create the default factory.\n\tprotected ObjectFactory getDefaultFactory​(Reference ref);\n\t// If this reference is a link to another JNDI object, obtain that object.\n\tprotected Object getLinked​(Reference ref);\n\t// Determines if this factory supports processing the provided reference object.\n\tprotected boolean isReferenceTypeSupported​(Object obj);\n}", "des": "Object factory for EJBs."}
{"index": 7128, "code": "Class ELContextWrapper {\n\t// Obtain the context object for the given key.\n\tObject getContext​(Class<?> key);\n\tELResolver getELResolver();\n\tFunctionMapper getFunctionMapper();\n\tLocale getLocale();\n\tVariableMapper getVariableMapper();\n\tboolean isPropertyResolved();\n\t// Add an object to this EL context under the given key.\n\tvoid putContext​(Class<?> key, Object contextObject);\n\tvoid setLocale​(Locale locale);\n\tvoid setPropertyResolved​(boolean resolved);\n}", "des": "Simple ELContextWrapper for runtime evaluation of EL w/ dynamic FunctionMappers"}
{"index": 7129, "code": "Class ElementValue {\n\t// Reads an element_value as an ElementValue.\n\tstatic ElementValue readElementValue​(DataInput input, ConstantPool cpool);\n\t// Reads an element_value as an ElementValue.\n\tstatic ElementValue readElementValue​(DataInput input, ConstantPool cpool, int arrayNesting);\n\tabstract String stringifyValue();\n}", "des": "The element_value structure is documented at https://docs.oracle.com/javase/specs/jvms/se11/html/jvms-4.html#jvms-4.7.16.1"}
{"index": 7130, "code": "Interface Engine {\n\tString getDefaultHost();\n\tString getJvmRoute();\n\tService getService();\n\t// Set the default hostname for this Engine.\n\tvoid setDefaultHost​(String defaultHost);\n\t// Set the JvmRouteId for this engine.\n\tvoid setJvmRoute​(String jvmRouteId);\n\t// Set the Service with which we are associated (if any).\n\tvoid setService​(Service service);\n}", "des": "An Engine is a Container that represents the entire Catalina servlet engine."}
{"index": 7131, "code": "Class EngineConfig {\n\t// Process the START event for an associated Engine.\n\tvoid lifecycleEvent​(LifecycleEvent event);\n\t// Process a \"start\" event for this Engine.\n\tprotected void start();\n\t// Process a \"stop\" event for this Engine.\n\tprotected void stop();\n}", "des": "Startup event listener for an Engine that configures the properties of that Engine, and the associated defined contexts."}
{"index": 7132, "code": "Interface ErrorHandler {\n\t// Invoked when the message has been sent successfully.\n\tvoid handleCompletion​(UniqueId id);\n\t// Invoked if the message is dispatched async, and an error occurs\n\tvoid handleError​(ChannelException x, UniqueId id);\n}", "des": "The ErrorHandler class is used when sending messages that are sent asynchronously and the application still needs to get confirmation when the message was sent successfully or when a message errored out."}
{"index": 7133, "code": "Interface ErrorHandler {\n\t// Processes the given javac error report and exception.\n\tvoid javacError​(String errorReport, Exception exception);\n\t// Processes the given javac compilation errors.\n\tvoid javacError​(JavacErrorDetail[] details);\n\t// Processes the given JSP parse error.\n\tvoid jspError​(String fname, int line, int column, String msg, Exception exception);\n\t// Processes the given JSP parse error.\n\tvoid jspError​(String msg, Exception exception);\n}", "des": "Interface for handling JSP parse and javac compilation errors."}
{"index": 7134, "code": "Class ErrorPage {\n\tint getErrorCode();\n\tString getExceptionType();\n\tString getLocation();\n\tString getName();\n\t// Set the error code.\n\tvoid setErrorCode​(int errorCode);\n\t// Set the error code (hack for default XmlMapper data type).\n\tvoid setErrorCode​(String errorCode);\n\t// Set the exception type.\n\tvoid setExceptionType​(String exceptionType);\n\t// Set the location.\n\tvoid setLocation​(String location);\n}", "des": "Representation of an error page element for a web application, as represented in a <error-page> element in the deployment descriptor."}
{"index": 7135, "code": "Class ExceptionUtils {\n\t// Checks whether the supplied Throwable is one that needs to be rethrown and swallows all others.\n\tstatic void handleThrowable​(Throwable t);\n\t// NO-OP method provided to enable simple pre-loading of this class.\n\tstatic void preload();\n}", "des": "Utilities for handling Throwables and Exceptions."}
{"index": 7136, "code": "Class ExceptionUtils {\n\t// Checks whether the supplied Throwable is one that needs to be rethrown and swallows all others.\n\tstatic void handleThrowable​(Throwable t);\n\t// Checks whether the supplied Throwable is an instance of InvocationTargetException and returns the throwable that is wrapped by it, if there is any.\n\tstatic Throwable unwrapInvocationTargetException​(Throwable t);\n}", "des": "Utilities for handling Throwables and Exceptions."}
{"index": 7137, "code": "Class ExceptionUtils {\n\t// Checks whether the supplied Throwable is one that needs to be rethrown and swallows all others.\n\tstatic void handleThrowable​(Throwable t);\n\t// NO-OP method provided to enable simple pre-loading of this class.\n\tstatic void preload();\n\t// Checks whether the supplied Throwable is an instance of InvocationTargetException and returns the throwable that is wrapped by it, if there is any.\n\tstatic Throwable unwrapInvocationTargetException​(Throwable t);\n}", "des": "Utilities for handling Throwables and Exceptions."}
{"index": 7138, "code": "Enum ExpiresFilter.DurationUnit {\n\tint getCalendardField();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ExpiresFilter.DurationUnit valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ExpiresFilter.DurationUnit[] values();\n}", "des": "Duration unit"}
{"index": 7139, "code": "Enum ExpiresFilter.StartingPoint {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ExpiresFilter.StartingPoint valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ExpiresFilter.StartingPoint[] values();\n}", "des": "Expiration configuration starting point."}
{"index": 7140, "code": "Interface ExtendedRpcCallback {\n\t// The reply failed.\n\tvoid replyFailed​(Serializable request, Serializable response, Member sender, Exception reason);\n\t// The reply succeeded\n\tvoid replySucceeded​(Serializable request, Serializable response, Member sender);\n}", "des": "Extension to the RpcCallback interface."}
{"index": 7141, "code": "Class ExtractingRoot {\n\tprotected boolean isPackedWarFile();\n\t// Class loader resources are handled by treating JARs in WEB-INF/lib as resource JARs (without the internal META-INF/resources/ prefix) mounted at WEB-INF/classes (rather than the web app root).\n\tprotected void processWebInfLib();\n\t// Sub-classes must ensure that the state is changed to LifecycleState.STOPPING during the execution of this method.\n\tprotected void stopInternal();\n}", "des": "If the main resources are packaged as a WAR file then any JARs will be extracted to the work directory and used from there."}
{"index": 7142, "code": "Class FactoryCreateRule {\n\t// Process the beginning of this element.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Process the end of this element.\n\tvoid end​(String namespace, String name);\n\t// Clean up after parsing is complete.\n\tvoid finish();\n}", "des": "Rule implementation that uses an ObjectCreationFactory to create a new object which it pushes onto the object stack."}
{"index": 7143, "code": "Class FairBlockingQueue<E> {\n\t// Will always return true, queue is unbounded.\n\tboolean offer​(E e);\n\t// Will never timeout, as it invokes the offer(Object) method.\n\tboolean offer​(E e, long timeout, TimeUnit unit);\n\t// Fair retrieval of an object in the queue.\n\tE poll​(long timeout, TimeUnit unit);\n\t// Request an item from the queue asynchronously\n\tFuture<E> pollAsync();\n}", "des": "A simple implementation of a blocking queue with fairness waiting."}
{"index": 7144, "code": "Class FastHttpDateFormat {\n\t// Get the HTTP format of the specified date.\n\tstatic String formatDate​(long value);\n\t// Get the current date in HTTP format.\n\tstatic String getCurrentDate();\n\t// Try to parse the given date as an HTTP date.\n\tstatic long parseDate​(String value);\n}", "des": "Utility class to generate HTTP dates."}
{"index": 7145, "code": "Class FileHandler {\n\t// Close the currently open log file (if any).\n\tvoid close();\n\tprotected void closeWriter();\n\t// Flush the writer.\n\tvoid flush();\n\t// Open the new log file for the date specified by date.\n\tvoid open();\n\tprotected void openWriter();\n\t// Format and publish a LogRecord.\n\tvoid publish​(LogRecord record);\n}", "des": "Implementation of Handler that appends log messages to a file named {prefix}{date}{suffix} in a configured directory."}
{"index": 7146, "code": "Interface FileItemHeaders {\n\t// Returns the value of the specified part header as a String.\n\tString getHeader​(String name);\n\t// Returns an Iterator of all the header names.\n\tIterator<String> getHeaderNames();\n\t// Returns all the values of the specified item header as an Iterator of String objects.\n\tIterator<String> getHeaders​(String name);\n}", "des": "This class provides support for accessing the headers for a file or form item that was received within a multipart/form-data POST request."}
{"index": 7147, "code": "Class FileItemHeadersImpl {\n\t// Method to add header values to this instance.\n\tvoid addHeader​(String name, String value);\n\t// Returns the value of the specified part header as a String.\n\tString getHeader​(String name);\n\t// Returns an Iterator of all the header names.\n\tIterator<String> getHeaderNames();\n\t// Returns all the values of the specified item header as an Iterator of String objects.\n\tIterator<String> getHeaders​(String name);\n}", "des": "Default implementation of the FileItemHeaders interface."}
{"index": 7148, "code": "Interface FileItemHeadersSupport {\n\t// Returns the collection of headers defined locally within this item.\n\tFileItemHeaders getHeaders();\n\t// Sets the headers read from within an item.\n\tvoid setHeaders​(FileItemHeaders headers);\n}", "des": "Interface that will indicate that FileItem or FileItemStream implementations will accept the headers read for the item."}
{"index": 7149, "code": "Class FileSizeLimitExceededException {\n\t// Returns the field name of the item, which caused the exception.\n\tString getFieldName();\n\t// Returns the file name of the item, which caused the exception.\n\tString getFileName();\n\t// Sets the field name of the item, which caused the exception.\n\tvoid setFieldName​(String pFieldName);\n\t// Sets the file name of the item, which caused the exception.\n\tvoid setFileName​(String pFileName);\n}", "des": "Thrown to indicate that A files size exceeds the configured maximum."}
{"index": 7150, "code": "Class FileUpload {\n\t// Returns the factory class used when creating file items.\n\tFileItemFactory getFileItemFactory();\n\t// Sets the factory class to use when creating file items.\n\tvoid setFileItemFactory​(FileItemFactory factory);\n}", "des": "High level API for processing file uploads."}
{"index": 7151, "code": "Class FilterBase {\n\tprotected abstract Log getLogger();\n\t// Iterates over the configuration parameters and either logs a warning, or throws an exception for any parameter that does not have a matching setter in this filter.\n\tvoid init​(FilterConfig filterConfig);\n\t// Determines if an exception when calling a setter or an unknown configuration attribute triggers the failure of the this filter which in turn will prevent the web application from starting.\n\tprotected boolean isConfigProblemFatal();\n}", "des": "Base class for filters that provides generic initialisation and a simple no-op destruction."}
{"index": 7152, "code": "Class FindLeaksTask {\n\t// Execute the requested operation.\n\tvoid execute();\n\t// Returns the statusLine parameter that controls if the response includes a status line or not.\n\tboolean getStatusLine();\n\t// Sets the statusLine parameter that controls if the response includes a status line or not.\n\tvoid setStatusLine​(boolean statusLine);\n}", "des": "Ant task that implements the /findleaks command, supported by the Tomcat manager application."}
{"index": 7153, "code": "Class GenericRole<UD extends UserDatabase> {\n\tboolean equals​(Object obj);\n\t// Return the UserDatabase within which this role is defined.\n\tUserDatabase getUserDatabase();\n\t// Set the description of this role.\n\tvoid setDescription​(String description);\n\t// Set the role name of this role, which must be unique within the scope of a UserDatabase.\n\tvoid setRolename​(String rolename);\n}", "des": "Concrete implementation of Role for a UserDatabase."}
{"index": 7154, "code": "Class GroupMBean {\n\t// Add a new Role to those this group belongs to.\n\tvoid addRole​(String rolename);\n\tString[] getRoles();\n\tString[] getUsers();\n\t// Remove a Role from those this group belongs to.\n\tvoid removeRole​(String rolename);\n}", "des": "A ModelMBean implementation for the org.apache.catalina.Group component."}
{"index": 7155, "code": "Class HealthCheckValve {\n\tboolean getCheckContainersAvailable();\n\tString getPath();\n\t// Perform request processing as required by this Valve.\n\tvoid invoke​(Request request, Response response);\n\tprotected boolean isAvailable​(Container container);\n\tvoid setCheckContainersAvailable​(boolean checkContainersAvailable);\n\tvoid setPath​(String path);\n\t// Start this component and implement the requirements of LifecycleBase.startInternal().\n\tprotected void startInternal();\n}", "des": "Simple Valve that responds to cloud orchestrators health checks."}
{"index": 7156, "code": "Class HomesUserDatabase {\n\t// Return an absolute pathname to the home directory for the specified user.\n\tString getHome​(String user);\n\t// Return the UserConfig listener with which we are associated.\n\tUserConfig getUserConfig();\n\t// Return an enumeration of the user names defined on this server.\n\tEnumeration<String> getUsers();\n\t// Set the UserConfig listener with which we are associated.\n\tvoid setUserConfig​(UserConfig userConfig);\n}", "des": "Concrete implementation of the UserDatabase interface considers all directories in a directory whose pathname is specified to our constructor to be \"home\" directories for those users."}
{"index": 7157, "code": "Class Http11InputBuffer {\n\t// Obtain an estimate of the number of bytes that can be read without blocking.\n\tint available();\n\t// Read from the input stream into the ByteBuffer provided by the ApplicationBufferHandler.\n\tint doRead​(ApplicationBufferHandler handler);\n\tvoid expand​(int size);\n\tByteBuffer getByteBuffer();\n\tvoid setByteBuffer​(ByteBuffer buffer);\n}", "des": "InputBuffer for HTTP that provides request header parsing as well as transfer encoding."}
{"index": 7158, "code": "Class Http11Nio2Protocol {\n\t// Concrete implementations need to provide access to their logger to be used by the abstract classes.\n\tprotected Log getLog();\n\t// Obtain the prefix to be used when construction a name for this protocol handler.\n\tprotected String getNamePrefix();\n}", "des": "HTTP/1.1 protocol implementation using NIO2."}
{"index": 7159, "code": "Class Http11NioProtocol {\n\t// Concrete implementations need to provide access to their logger to be used by the abstract classes.\n\tprotected Log getLog();\n\t// Obtain the prefix to be used when construction a name for this protocol handler.\n\tprotected String getNamePrefix();\n\tint getPollerThreadPriority();\n\tlong getSelectorTimeout();\n\tvoid setPollerThreadPriority​(int threadPriority);\n\tvoid setSelectorTimeout​(long timeout);\n}", "des": "HTTP/1.1 protocol implementation using NIO."}
{"index": 7160, "code": "Interface InputBuffer {\n\t// Obtain an estimate of the number of bytes that can be read without blocking.\n\tint available();\n\t// Read from the input stream into the ByteBuffer provided by the ApplicationBufferHandler.\n\tint doRead​(ApplicationBufferHandler handler);\n}", "des": "This class is only for internal use in the protocol implementation."}
{"index": 7161, "code": "Interface InputFilter {\n\t// End the current request.\n\tlong end();\n\t// Get the name of the encoding handled by this filter.\n\tByteChunk getEncodingName();\n\t// Has the request body been read fully?\n\tboolean isFinished();\n\t// Make the filter ready to process the next request.\n\tvoid recycle();\n\t// Set the next buffer in the filter pipeline.\n\tvoid setBuffer​(InputBuffer buffer);\n\t// Some filters need additional parameters from the request.\n\tvoid setRequest​(Request request);\n}", "des": "Input filter interface."}
{"index": 7162, "code": "Interface InstrumentableClassLoader {\n\t// Adds the specified class file transformer to this class loader.\n\tvoid addTransformer​(ClassFileTransformer transformer);\n\t// Returns a copy of this class loader without any class file transformers.\n\tClassLoader copyWithoutTransformers();\n\t// Removes the specified class file transformer from this class loader.\n\tvoid removeTransformer​(ClassFileTransformer transformer);\n}", "des": "Specifies a class loader capable of being decorated with ClassFileTransformers."}
{"index": 7163, "code": "Class InterceptorSF {\n\t// Store a server.xml element with attributes and children\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n\t// Store the specified Interceptor child.\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aInterceptor, StoreDescription parentDesc);\n}", "des": "Generate Interceptor Element"}
{"index": 7164, "code": "Interface JarScannerCallback {\n\t// A directory was found that is to be treated as an unpacked JAR.\n\tvoid scan​(File file, String webappPath, boolean isWebapp);\n\t// A JAR was found and may be accessed for further processing via the provided URL connection.\n\tvoid scan​(Jar jar, String webappPath, boolean isWebapp);\n\t// A directory structure was found within the web application at /WEB-INF/classes that should be handled as an unpacked JAR.\n\tvoid scanWebInfClasses();\n}", "des": "This interface is implemented by clients of the JarScanner to enable them to receive notification of a discovered JAR."}
{"index": 7165, "code": "Class JasperELResolver {\n\tvoid add​(ELResolver elResolver);\n\t// Obtain the value of the given property on the given object using the given context.\n\tObject getValue​(ELContext context, Object base, Object property);\n\t// Invokes a method on the the given object.\n\tObject invoke​(ELContext context, Object base, Object method, Class<?>[] paramTypes, Object[] params);\n}", "des": "Jasper-specific CompositeELResolver that optimizes certain functions to avoid unnecessary resolver calls."}
{"index": 7166, "code": "Class JasperLoader {\n\t// Get the Permissions for a CodeSource.\n\tPermissionCollection getPermissions​(CodeSource codeSource);\n\t// Delegate to parent\n\tInputStream getResourceAsStream​(String name);\n\t// Load the class with the specified name.\n\tClass<?> loadClass​(String name);\n\t// Load the class with the specified name, searching using the following algorithm until it finds and returns the class.\n\tClass<?> loadClass​(String name, boolean resolve);\n}", "des": "Class loader for loading servlet class files (corresponding to JSP files) and tag handler class files (corresponding to tag files)."}
{"index": 7167, "code": "Class JavaClass {\n\tint getAccessFlags();\n\t// Return annotations entries from \"RuntimeVisibleAnnotations\" attribute on the class, fields or methods if there is any.\n\tAnnotationEntry[] getAllAnnotationEntries();\n\t// Return annotations entries from \"RuntimeVisibleAnnotations\" attribute on the class, if there is any.\n\tAnnotationEntry[] getAnnotationEntries();\n\tString getClassName();\n\tString[] getInterfaceNames();\n\t// returns the super class name of this class.\n\tString getSuperclassName();\n}", "des": "Represents a Java class, i.e., the data structures, constant pool, fields, methods and commands contained in a Java .class file."}
{"index": 7168, "code": "Class javaURLContextFactory {\n\t// Get a new (writable) initial context.\n\tContext getInitialContext​(Hashtable<?,​?> environment);\n\t// Crete a new Context's instance.\n\tObject getObjectInstance​(Object obj, Name name, Context nameCtx, Hashtable<?,​?> environment);\n}", "des": "Context factory for the \"java:\" namespace."}
{"index": 7169, "code": "Class JMXAccessorGetTask {\n\tString getAttribute();\n\t// Execute the specified command, based on the configured properties.\n\tString jmxExecute​(MBeanServerConnection jmxServerConnection);\n\t// Get property value.\n\tprotected String jmxGet​(MBeanServerConnection jmxServerConnection, String name);\n\tvoid setAttribute​(String attribute);\n}", "des": "Access JMX JSR 160 MBeans Server."}
{"index": 7170, "code": "Class JMXAccessorInvokeTask {\n\tvoid addArg​(Arg arg);\n\tList<Arg> getArgs();\n\tString getOperation();\n\t// Execute the specified command, based on the configured properties.\n\tString jmxExecute​(MBeanServerConnection jmxServerConnection);\n\t// Invoke specified operation.\n\tprotected String jmxInvoke​(MBeanServerConnection jmxServerConnection, String name);\n\tvoid setArgs​(List<Arg> args);\n\tvoid setOperation​(String operation);\n}", "des": "Access JMX JSR 160 MBeans Server."}
{"index": 7171, "code": "Class JMXAccessorQueryTask {\n\tprotected void bindAttributes​(MBeanServerConnection jmxServerConnection, String pname, ObjectName oname);\n\tboolean isAttributebinding();\n\t// Execute the specified command, based on the configured properties.\n\tString jmxExecute​(MBeanServerConnection jmxServerConnection);\n\t// Call Mbean server for some mbeans with same domain, attributes.\n\tprotected String jmxQuery​(MBeanServerConnection jmxServerConnection, String qry);\n\tvoid setAttributebinding​(boolean attributeBinding);\n}", "des": "Query for Mbeans."}
{"index": 7172, "code": "Class JMXAccessorUnregisterTask {\n\t// Execute the specified command, based on the configured properties.\n\tString jmxExecute​(MBeanServerConnection jmxServerConnection);\n\t// Unregister MBean.\n\tprotected String jmxUuregister​(MBeanServerConnection jmxServerConnection, String name);\n}", "des": "unregister an MBean at JMX JSR 160 MBeans Server."}
{"index": 7173, "code": "Class JMXGetTask {\n\t// Execute the requested operation.\n\tvoid execute();\n\t// Get method for the attribute name\n\tString getAttribute();\n\t// Get method for the bean name\n\tString getBean();\n\t// Set method for the attribute name\n\tvoid setAttribute​(String attribute);\n\t// Set method for the bean name\n\tvoid setBean​(String bean);\n}", "des": "Ant task that implements the JMX Get command (/jmxproxy/?"}
{"index": 7174, "code": "Class JMXProxyServlet {\n\t// Process a GET request for the specified resource.\n\tvoid doGet​(HttpServletRequest request, HttpServletResponse response);\n\tvoid getAttribute​(PrintWriter writer, String onameStr, String att, String key);\n\t// Initialize this servlet.\n\tvoid init();\n\t// Determines if a type is supported by the JMXProxyServlet.\n\tboolean isSupported​(String type);\n\tvoid listBeans​(PrintWriter writer, String qry);\n\tvoid setAttribute​(PrintWriter writer, String onameStr, String att, String val);\n}", "des": "This servlet will dump JMX attributes in a simple format and implement proxy services for modeler."}
{"index": 7175, "code": "Class JMXQueryTask {\n\t// Execute the requested operation.\n\tvoid execute();\n\t// Get method for the JMX query string\n\tString getQuery();\n\t// Set method for the JMX query string.\n\tvoid setQuery​(String query);\n}", "des": "Ant task that implements the JMX Query command (/jmxproxy/?"}
{"index": 7176, "code": "Class JMXSetTask {\n\t// Execute the requested operation.\n\tvoid execute();\n\t// Get method for the attribute name\n\tString getAttribute();\n\t// Get method for the bean name\n\tString getBean();\n\t// Get method for the attribute value\n\tString getValue();\n\t// Set method for the attribute name\n\tvoid setAttribute​(String attribute);\n\t// Set method for the bean name\n\tvoid setBean​(String bean);\n\t// Set method for the attribute value.\n\tvoid setValue​(String value);\n}", "des": "Ant task that implements the JMX Set command (/jmxproxy/?"}
{"index": 7177, "code": "Class JsonAccessLogValve {\n\t// Create an AccessLogElement implementation.\n\tprotected AbstractAccessLogValve.AccessLogElement createAccessLogElement​(char pattern);\n\t// Create an AccessLogElement implementation which needs an element name.\n\tprotected AbstractAccessLogValve.AccessLogElement createAccessLogElement​(String name, char pattern);\n\t// Parse pattern string and create the array of AccessLogElement.\n\tprotected AbstractAccessLogValve.AccessLogElement[] createLogElements();\n}", "des": "Access log valve derivative that rewrites entries as JSON."}
{"index": 7178, "code": "Class JspConfig {\n\t// Find a property that best matches the supplied resource.\n\tJspConfig.JspProperty findJspProperty​(String uri);\n\t// To find out if a uri matches a url pattern in jsp config.\n\tboolean isJspPage​(String uri);\n}", "des": "Handles the jsp-config element in WEB_INF/web.xml."}
{"index": 7179, "code": "Enum LifecycleState {\n\tString getLifecycleEvent();\n\t// May the public methods other than property getters/setters and lifecycle methods be called for a component in this state?\n\tboolean isAvailable();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic LifecycleState valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic LifecycleState[] values();\n}", "des": "The list of valid states for components that implement Lifecycle."}
{"index": 7180, "code": "Class LoaderSF {\n\t// Is this an instance of the default Loader configuration, with all-default properties?\n\tprotected boolean isDefaultLoader​(Loader loader);\n\t// Store the only the Loader elements, when not default\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n}", "des": "Store Loader Element."}
{"index": 7181, "code": "Class LocalXAConnectionFactory {\n\t// Create a new Connection in an implementation specific fashion.\n\tConnection createConnection();\n\tConnectionFactory getConnectionFactory();\n\t// Gets the TransactionRegistry for this connection factory which contains a the XAResource for every connection created by this factory.\n\tTransactionRegistry getTransactionRegistry();\n}", "des": "An implementation of XAConnectionFactory which manages non-XA connections in XA transactions."}
{"index": 7182, "code": "Class ManagedDataSource<C extends Connection> {\n\t// Returns a Connection from my pool, according to the contract specified by ObjectPool.borrowObject().\n\tConnection getConnection();\n\t// Gets the transaction registry.\n\tTransactionRegistry getTransactionRegistry();\n\t// Sets the transaction registry from the XAConnectionFactory used to create the pool.\n\tvoid setTransactionRegistry​(TransactionRegistry transactionRegistry);\n}", "des": "The ManagedDataSource is a PoolingDataSource that creates ManagedConnections."}
{"index": 7183, "code": "Class ManagerSF {\n\t// Is this an instance of the default Manager configuration, with all-default properties?\n\tprotected boolean isDefaultManager​(StandardManager smanager);\n\t// Store the only the Manager elements\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n\t// Must Implement at subclass for custom store children handling.\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aManager, StoreDescription parentDesc);\n}", "des": "Store server.xml Manager element"}
{"index": 7184, "code": "Class Matcher {\n\t// Tests whether or not a string matches against a pattern.\n\tstatic boolean match​(String pattern, String str, boolean caseSensitive);\n\t// Tests whether or not a given file name matches any file name pattern in the given set.\n\tstatic boolean matchName​(Set<String> patternSet, String fileName);\n}", "des": "This is a utility class to match file globs."}
{"index": 7185, "code": "Class Membership.MbrEntry {\n\t// Indicate that this member has been accessed.\n\tvoid accessed();\n\t// Obtain the member associated with this entry.\n\tMember getMember();\n\t// Check if this member has expired.\n\tboolean hasExpired​(long maxtime);\n}", "des": "Inner class that represents a member entry"}
{"index": 7186, "code": "Interface MembershipListener {\n\t// A member was added to the group\n\tvoid memberAdded​(Member member);\n\t// A member was removed from the group If the member left voluntarily, the Member.getCommand will contain the Member.SHUTDOWN_PAYLOAD data\n\tvoid memberDisappeared​(Member member);\n}", "des": "The MembershipListener interface is used as a callback to the membership service."}
{"index": 7187, "code": "Class MultiLockFairBlockingQueue<E> {\n\tint getNextPoll();\n\tint getNextPut();\n\t// Will always return true, queue is unbounded.\n\tboolean offer​(E e);\n\t// Will never timeout, as it invokes the offer(Object) method.\n\tboolean offer​(E e, long timeout, TimeUnit unit);\n\t// Fair retrieval of an object in the queue.\n\tE poll​(long timeout, TimeUnit unit);\n\t// Request an item from the queue asynchronously\n\tFuture<E> pollAsync();\n}", "des": "EXPERIMENTAL AND NOT YET COMPLETE!"}
{"index": 7188, "code": "Class NamingContextBindingsEnumeration {\n\t// Closes this enumeration.\n\tvoid close();\n\t// Determines whether there are any more elements in the enumeration.\n\tboolean hasMore();\n\tboolean hasMoreElements();\n\t// Retrieves the next element in the enumeration.\n\tBinding next();\n\tBinding nextElement();\n}", "des": "Naming enumeration implementation."}
{"index": 7189, "code": "Class NamingContextEnumeration {\n\t// Closes this enumeration.\n\tvoid close();\n\t// Determines whether there are any more elements in the enumeration.\n\tboolean hasMore();\n\tboolean hasMoreElements();\n\t// Retrieves the next element in the enumeration.\n\tNameClassPair next();\n\tNameClassPair nextElement();\n}", "des": "Naming enumeration implementation."}
{"index": 7190, "code": "Class NamingResourcesSF {\n\t// Store the only the NamingResources elements\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n\t// Store the specified NamingResources properties.\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aElement, StoreDescription elementDesc);\n}", "des": "Store server.xml elements Resources at context and GlobalNamingResources"}
{"index": 7191, "code": "Class NetMask {\n\tboolean equals​(Object o);\n\t// Test if a given address matches this netmask.\n\tboolean matches​(InetAddress addr);\n\t// Test if a given address matches this netmask.\n\tboolean matches​(InetAddress addr, boolean checkedPort);\n\t// Test if a given address and port matches this netmask.\n\tboolean matches​(InetAddress addr, int port);\n}", "des": "A class representing a CIDR netmask."}
{"index": 7192, "code": "Class NonLoginAuthenticator {\n\t// Authenticate the user making this request, based on the fact that no login-config has been defined for the container.\n\tprotected boolean doAuthenticate​(Request request, HttpServletResponse response);\n\t// Return the authentication method, which is vendor-specific and not defined by HttpServletRequest.\n\tprotected String getAuthMethod();\n}", "des": "An Authenticator and Valve implementation that checks only security constraints not involving user authentication."}
{"index": 7193, "code": "Class NoOpCallStack {\n\t// Clears the current stack trace snapshot.\n\tvoid clear();\n\t// Takes a snapshot of the current call stack.\n\tvoid fillInStackTrace();\n\t// Prints the current stack trace if available to a PrintWriter.\n\tboolean printStackTrace​(PrintWriter writer);\n}", "des": "CallStack strategy using no-op implementations of all functionality."}
{"index": 7194, "code": "Class NotificationInfo {\n\t// Add a new notification type to the set managed by an MBean.\n\tvoid addNotifType​(String notifType);\n\t// Create and return a ModelMBeanNotificationInfo object that corresponds to the attribute described by this instance.\n\tMBeanNotificationInfo createNotificationInfo();\n\tString[] getNotifTypes();\n\t// Override the description property setter.\n\tvoid setDescription​(String description);\n\t// Override the name property setter.\n\tvoid setName​(String name);\n}", "des": "Internal configuration information for a Notification descriptor."}
{"index": 7195, "code": "Class NullRealm {\n\t// Get the password for the specified user.\n\tprotected String getPassword​(String username);\n\t// Get the principal associated with the specified user.\n\tprotected Principal getPrincipal​(String username);\n}", "des": "Minimal Realm implementation that always returns null when an attempt is made to validate a user name and password."}
{"index": 7196, "code": "Class ObjectCreateRule {\n\t// Process the beginning of this element.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Process the end of this element.\n\tvoid end​(String namespace, String name);\n\t// Return the actual class name of the class to be instantiated.\n\tprotected String getRealClassName​(Attributes attributes);\n}", "des": "Rule implementation that creates a new object and pushes it onto the object stack."}
{"index": 7197, "code": "Interface ObjectCreationFactory {\n\t// Factory method called by FactoryCreateRule to supply an object based on the element's attributes.\n\tObject createObject​(Attributes attributes);\n\tDigester getDigester();\n\t// Set the Digester to allow the implementation to do logging, classloading based on the digester's classloader, etc.\n\tvoid setDigester​(Digester digester);\n}", "des": "Interface for use with FactoryCreateRule."}
{"index": 7198, "code": "Class OneLineFormatter {\n\tprotected void addTimestamp​(StringBuilder buf, long timestamp);\n\tString format​(LogRecord record);\n\t// Obtain the format currently being used for time stamps in log messages.\n\tString getTimeFormat();\n\t// Specify the time format to use for time stamps in log messages.\n\tvoid setTimeFormat​(String timeFormat);\n}", "des": "Provides same information as default log format but on a single line to make it easier to grep the logs."}
{"index": 7199, "code": "Interface OutputBuffer {\n\t// Write the given data to the response.\n\tint doWrite​(ByteBuffer chunk);\n\t// Bytes written to the underlying socket.\n\tlong getBytesWritten();\n}", "des": "Output buffer."}
{"index": 7200, "code": "Interface OutputFilter {\n\t// Make the filter ready to process the next request.\n\tvoid recycle();\n\t// Set the next buffer in the filter pipeline.\n\tvoid setBuffer​(HttpOutputBuffer buffer);\n\t// Some filters need additional parameters from the response.\n\tvoid setResponse​(Response response);\n}", "des": "Output filter."}
{"index": 7201, "code": "Class PasswdUserDatabase {\n\t// Return an absolute pathname to the home directory for the specified user.\n\tString getHome​(String user);\n\t// Return the UserConfig listener with which we are associated.\n\tUserConfig getUserConfig();\n\t// Return an enumeration of the user names defined on this server.\n\tEnumeration<String> getUsers();\n\t// Set the UserConfig listener with which we are associated.\n\tvoid setUserConfig​(UserConfig userConfig);\n}", "des": "Concrete implementation of the UserDatabase interface that processes the /etc/passwd file on a Unix system."}
{"index": 7202, "code": "Class PojoEndpointBase {\n\tprotected void doOnOpen​(Session session, EndpointConfig config);\n\tprotected PojoMethodMapping getMethodMapping();\n\tprotected Object getPojo();\n\t// Event that is triggered when a session has closed.\n\tvoid onClose​(Session session, CloseReason closeReason);\n\t// Event that is triggered when a protocol error occurs.\n\tvoid onError​(Session session, Throwable throwable);\n\tprotected void setMethodMapping​(PojoMethodMapping methodMapping);\n\tprotected void setPojo​(Object pojo);\n}", "des": "Base implementation (client and server have different concrete implementations) of the wrapper that converts a POJO instance into a WebSocket endpoint instance."}
{"index": 7203, "code": "Class Pool {\n\t// Create a new pool.\n\tstatic long create​(long parent);\n\t// Destroy the pool.\n\tstatic void destroy​(long pool);\n}", "des": "Provides access to APR memory pools which are used to manage memory allocations for natively created instances."}
{"index": 7204, "code": "Class PoolableCallableStatement {\n\t// Activates after retrieval from the pool.\n\tvoid activate();\n\t// Returns the CallableStatement to the pool.\n\tvoid close();\n\t// Passivates to prepare for return to the pool.\n\tvoid passivate();\n}", "des": "A DelegatingCallableStatement that cooperates with PoolingConnection to implement a pool of CallableStatements."}
{"index": 7205, "code": "Class PoolablePreparedStatement<K> {\n\tvoid activate();\n\t// Add batch.\n\tvoid addBatch();\n\t// Clear Batch.\n\tvoid clearBatch();\n\t// Return me to my pool.\n\tvoid close();\n\tvoid passivate();\n}", "des": "A DelegatingPreparedStatement that cooperates with PoolingConnection to implement a pool of PreparedStatements."}
{"index": 7206, "code": "Enum PooledObjectState {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic PooledObjectState valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic PooledObjectState[] values();\n}", "des": "Provides all possible states of a PooledObject."}
{"index": 7207, "code": "Class PooledSoftReference<T> {\n\t// Gets the object that the wrapped SoftReference refers to.\n\tT getObject();\n\t// Gets the SoftReference wrapped by this object.\n\tSoftReference<T> getReference();\n\t// Sets the wrapped reference.\n\tvoid setReference​(SoftReference<T> reference);\n}", "des": "Extension of DefaultPooledObject to wrap pooled soft references."}
{"index": 7208, "code": "Enum PoolingConnection.StatementType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic PoolingConnection.StatementType valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic PoolingConnection.StatementType[] values();\n}", "des": "Statement types."}
{"index": 7209, "code": "Class PropertiesRoleMappingListener {\n\t// Gets the prefix to filter from property keys.\n\tString getKeyPrefix();\n\t// Gets the path to the role mapping properties file.\n\tString getRoleMappingFile();\n\t// Acknowledge the occurrence of the specified event.\n\tvoid lifecycleEvent​(LifecycleEvent event);\n\t// Sets the prefix to filter from property keys.\n\tvoid setKeyPrefix​(String keyPrefix);\n\t// Sets the path to the role mapping properties file.\n\tvoid setRoleMappingFile​(String roleMappingFile);\n}", "des": "Implementation of LifecycleListener that will populate the context's role mapping from a properties file."}
{"index": 7210, "code": "Class RandomizedTextRewriteMap {\n\t// Maps a key to a replacement value. The method is free to return null to indicate, that the default value from the RewriteRule directive should be used.\n\tString lookup​(String key);\n\t// Optional parameter that can be defined through the RewriteMap directive in the rewrite.config file.\n\tString setParameters​(String params);\n}", "des": "Implement a map for the txt: and rnd: mod_rewrite capabilities."}
{"index": 7211, "code": "Class RealmSF {\n\t// Store a server.xml element with attributes and children\n\tvoid store​(PrintWriter aWriter, int indent, Object aElement);\n\t// Store the specified Realm properties and child (Realm)\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aRealm, StoreDescription parentDesc);\n}", "des": "Store server.xml Element Realm"}
{"index": 7212, "code": "Class ReflectionUtil {\n\tstatic Class<?> forName​(String name);\n\tprotected static Class<?> forNamePrimitive​(String name);\n\t// Returns a method based on the criteria.\n\tstatic Method getMethod​(EvaluationContext ctx, Object base, Object property, Class<?>[] paramTypes, Object[] paramValues);\n\t// Converts an array of Class names to Class types.\n\tstatic Class<?>[] toTypeArray​(String[] s);\n\t// Converts an array of Class types to Class names.\n\tstatic String[] toTypeNameArray​(Class<?>[] c);\n}", "des": "Utilities for Managing Serialization and Reflection"}
{"index": 7213, "code": "Interface RegistryMBean {\n\t// Return an int ID for faster access.\n\tint getId​(String domain, String name);\n\t// Invoke an operation on a set of mbeans.\n\tvoid invoke​(List<ObjectName> mbeans, String operation, boolean failFirst);\n\t// Register a bean by creating a modeler mbean and adding it to the MBeanServer.\n\tvoid registerComponent​(Object bean, String oname, String type);\n\t// Reset all metadata cached by this registry.\n\tvoid stop();\n\t// Unregister a component.\n\tvoid unregisterComponent​(String oname);\n}", "des": "Interface for modeler MBeans."}
{"index": 7214, "code": "Class ReplicatedMap<K,​V> {\n\tprotected int getReplicateMessageType();\n\tprotected int getStateMessageType();\n\tvoid mapMemberAdded​(Member member);\n\t// A member was removed from the group If the member left voluntarily, the Member.getCommand will contain the Member.SHUTDOWN_PAYLOAD data\n\tvoid memberDisappeared​(Member member);\n\t// publish info about a map pair (key/value) to other nodes in the cluster\n\tprotected Member[] publishEntryInfo​(Object key, Object value);\n}", "des": "All-to-all replication for a hash map implementation."}
{"index": 7215, "code": "Interface RequestContext {\n\t// Retrieve the character encoding for the request.\n\tString getCharacterEncoding();\n\t// Retrieve the content type of the request.\n\tString getContentType();\n\t// Retrieve the input stream for the request.\n\tInputStream getInputStream();\n}", "des": "Abstracts access to the request information needed for file uploads."}
{"index": 7216, "code": "Class ResourceEnvFactory {\n\t// If a default factory is available for the given reference type, create the default factory.\n\tprotected ObjectFactory getDefaultFactory​(Reference ref);\n\t// If this reference is a link to another JNDI object, obtain that object.\n\tprotected Object getLinked​(Reference ref);\n\t// Determines if this factory supports processing the provided reference object.\n\tprotected boolean isReferenceTypeSupported​(Object obj);\n}", "des": "Object factory for Resources env."}
{"index": 7217, "code": "Class ResourceFactory {\n\t// If a default factory is available for the given reference type, create the default factory.\n\tprotected ObjectFactory getDefaultFactory​(Reference ref);\n\t// If this reference is a link to another JNDI object, obtain that object.\n\tprotected Object getLinked​(Reference ref);\n\t// Determines if this factory supports processing the provided reference object.\n\tprotected boolean isReferenceTypeSupported​(Object obj);\n}", "des": "Object factory for Resources."}
{"index": 7218, "code": "Class ResourceSet<T> {\n\t// Add the specified element to this set if it is not already present.\n\tboolean add​(T o);\n\t// Remove all of the elements from this set.\n\tvoid clear();\n\tboolean isLocked();\n\t// Remove the given element from this set if it is present.\n\tboolean remove​(Object o);\n\t// Set the locked state of this parameter map.\n\tvoid setLocked​(boolean locked);\n}", "des": "Extended implementation of HashSet that includes a locked property."}
{"index": 7219, "code": "Interface RewriteMap {\n\t// Maps a key to a replacement value. The method is free to return null to indicate, that the default value from the RewriteRule directive should be used.\n\tString lookup​(String key);\n\t// Optional parameter that can be defined through the RewriteMap directive in the rewrite.config file.\n\tString setParameters​(String params);\n\t// Optional parameters that can be defined through the RewriteMap directive in the rewrite.config file.\n\tdefault void setParameters​(String... params);\n}", "des": "Interface for user defined lookup/replacement logic that can be defined in a rewrite.config file by a RewriteMap directive."}
{"index": 7220, "code": "Interface Role {\n\tString getDescription();\n\tString getRolename();\n\tUserDatabase getUserDatabase();\n\t// Set the description of this role.\n\tvoid setDescription​(String description);\n\t// Set the role name of this role, which must be unique within the scope of a UserDatabase.\n\tvoid setRolename​(String rolename);\n}", "des": "Abstract representation of a security role, suitable for use in environments like JAAS that want to deal with Principals."}
{"index": 7221, "code": "Interface RpcCallback {\n\t// If the reply has already been sent to the requesting thread, the rpc callback can handle any data that comes in after the fact.\n\tvoid leftOver​(Serializable msg, Member sender);\n\t// Allows sending a response to a received message.\n\tSerializable replyRequest​(Serializable msg, Member sender);\n}", "des": "The RpcCallback interface is an interface for the Tribes channel to request a response object to a request that came in."}
{"index": 7222, "code": "Class RxTaskPool {\n\tint available();\n\tprotected void configureTask​(AbstractRxTask task);\n\tint getMaxThreads();\n\tint getMinThreads();\n\t// Find an idle worker thread, if any.\n\tAbstractRxTask getRxTask();\n\tRxTaskPool.TaskCreator getTaskCreator();\n\t// Called by the worker thread to return itself to the idle pool.\n\tvoid returnWorker​(AbstractRxTask worker);\n\tvoid setMaxTasks​(int maxThreads);\n\tvoid setMinTasks​(int minThreads);\n\tvoid stop();\n}", "des": "A very simple thread pool class."}
{"index": 7223, "code": "Class SecurityConfig {\n\t// Returns the singleton instance of that class.\n\tstatic SecurityConfig newInstance();\n\t// Set the security package.access value.\n\tvoid setPackageAccess();\n\t// Set the security package.definition value.\n\tvoid setPackageDefinition();\n}", "des": "Util class to protect Catalina against package access and insertion."}
{"index": 7224, "code": "Class SecurityManagerCallStack {\n\t// Clears the current stack trace snapshot.\n\tvoid clear();\n\t// Takes a snapshot of the current call stack.\n\tvoid fillInStackTrace();\n\t// Prints the current stack trace if available to a PrintWriter.\n\tboolean printStackTrace​(PrintWriter writer);\n}", "des": "A CallStack strategy using a SecurityManager."}
{"index": 7225, "code": "Interface Sender {\n\t// Set the configuration parameters\n\tvoid init​(HeartbeatListener config);\n\t// Send the message to the proxies\n\tint send​(String mess);\n}", "des": "Interface to send data to proxies."}
{"index": 7226, "code": "Class ServletRequestContext {\n\t// Retrieve the content length of the request.\n\tlong contentLength();\n\t// Retrieve the character encoding for the request.\n\tString getCharacterEncoding();\n\t// Retrieve the content type of the request.\n\tString getContentType();\n\t// Retrieve the input stream for the request.\n\tInputStream getInputStream();\n}", "des": "Provides access to the request information needed for a request made to an HTTP servlet."}
{"index": 7227, "code": "Class ServletResponseWrapperInclude {\n\t// The default behavior of this method is to return getOutputStream() on the wrapped response object.\n\tServletOutputStream getOutputStream();\n\t// Returns a wrapper around the JspWriter of the including page.\n\tPrintWriter getWriter();\n\t// Clears the output buffer of the JspWriter associated with the including page.\n\tvoid resetBuffer();\n}", "des": "ServletResponseWrapper used by the JSP 'include' action."}
{"index": 7228, "code": "Class SessionMessageImpl {\n\tString getContextName();\n\t// returns the event type\n\tint getEventType();\n\t// clear text event type name (for logging purpose only)\n\tString getEventTypeString();\n\tbyte[] getSession();\n\tString getSessionID();\n\tlong getTimestamp();\n\tString getUniqueId();\n\t// set message send time but only the first setting works (one shot)\n\tvoid setTimestamp​(long time);\n}", "des": "Session cluster message"}
{"index": 7229, "code": "Class SessionsTask {\n\t// Create query string for the specified command.\n\tStringBuilder createQueryString​(String command);\n\t// Execute the requested operation.\n\tvoid execute();\n\tString getIdle();\n\tvoid setIdle​(String idle);\n}", "des": "Ant task that implements the /sessions command supported by the Tomcat manager application."}
{"index": 7230, "code": "Class SessionUtils {\n\tstatic long getInactiveTimeForSession​(Session in_session);\n\tstatic long getTTLForSession​(Session in_session);\n\tstatic long getUsedTimeForSession​(Session in_session);\n\tstatic Locale guessLocaleFromSession​(HttpSession in_session);\n\t// Try to get user locale from the session, if possible.\n\tstatic Locale guessLocaleFromSession​(Session in_session);\n\t// Try to get user from the session, if possible.\n\tstatic Object guessUserFromSession​(Session in_session);\n}", "des": "Utility methods on HttpSessions..."}
{"index": 7231, "code": "Class SetNextRule {\n\t// Process the end of this element.\n\tvoid end​(String namespace, String name);\n\t// Is exact matching being used.\n\tboolean isExactMatch();\n\t// Set whether exact matching is enabled.\n\tvoid setExactMatch​(boolean useExactMatch);\n}", "des": "Rule implementation that calls a method on the (top-1) (parent) object, passing the top object (child) as an argument."}
{"index": 7232, "code": "Class SimpleServerAuthContext {\n\t// Remove principals and/or credentials from the subject that were previously added by this authentication mechanism.\n\tvoid cleanSubject​(MessageInfo messageInfo, Subject subject);\n\t// Secure (authenticate) the response.\n\tAuthStatus secureResponse​(MessageInfo messageInfo, Subject serviceSubject);\n\t// Validate the request.\n\tAuthStatus validateRequest​(MessageInfo messageInfo, Subject clientSubject, Subject serviceSubject);\n}", "des": "Basic implementation primarily intended for use when using third-party ServerAuthModule implementations that only provide the module."}
{"index": 7233, "code": "Class SizeException {\n\t// Retrieves the actual size of the request.\n\tlong getActualSize();\n\t// Retrieves the permitted size of the request.\n\tlong getPermittedSize();\n}", "des": "This exception is thrown, if a requests permitted size is exceeded."}
{"index": 7234, "code": "Enum SocketEvent {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SocketEvent valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SocketEvent[] values();\n}", "des": "Defines events that occur per socket that require further processing by the container."}
{"index": 7235, "code": "Class SSIFilter {\n\t// The doFilter method of the Filter is called by the container each time a request/response pair is passed through the chain due to a client request for a resource at the end of the chain.\n\tvoid doFilter​(ServletRequest request, ServletResponse response, FilterChain chain);\n\t// Convenience method for sub-classes to save them having to call super.init(config).\n\tvoid init();\n}", "des": "Filter to process SSI requests within a webpage."}
{"index": 7236, "code": "Class SSLImplementation {\n\t// Obtain an instance (not a singleton) of the implementation with the given class name.\n\tstatic SSLImplementation getInstance​(String className);\n\t// Obtain an instance of SSLSupport.\n\tabstract SSLSupport getSSLSupport​(SSLSession session, Map<String,​List<String>> additionalAttributes);\n\tabstract SSLUtil getSSLUtil​(SSLHostConfigCertificate certificate);\n}", "des": "Provides a factory and base implementation for the Tomcat specific mechanism that allows alternative SSL/TLS implementations to be used without requiring the implementation of a full JSSE provider."}
{"index": 7237, "code": "Interface SSLSupport {\n\t// The cipher suite being used on this connection.\n\tString getCipherSuite();\n\t// Get the keysize.\n\tInteger getKeySize();\n\t// The server certificate chain (if any) that were sent to the peer.\n\tdefault X509Certificate[] getLocalCertificateChain();\n\t// The client certificate chain (if any).\n\tX509Certificate[] getPeerCertificateChain();\n\tString getProtocol();\n\tString getRequestedCiphers();\n\tString getRequestedProtocols();\n\t// The current session Id.\n\tString getSessionId();\n}", "des": "Defines an interface to interact with SSL sessions."}
{"index": 7238, "code": "Interface SSLUtil {\n\tvoid configureSessionContext​(SSLSessionContext sslSessionContext);\n\tSSLContext createSSLContext​(List<String> negotiableProtocols);\n\t// The set of enabled ciphers is the intersection of the implemented ciphers and the configured ciphers.\n\tString[] getEnabledCiphers();\n\t// The set of enabled protocols is the intersection of the implemented protocols and the configured protocols.\n\tString[] getEnabledProtocols();\n\tKeyManager[] getKeyManagers();\n\tTrustManager[] getTrustManagers();\n}", "des": "Provides a common interface for SSLImplementations to create the necessary JSSE implementation objects for TLS connections created via the JSSE API."}
{"index": 7239, "code": "Class StandardServerSF {\n\t// Store the specified Server properties.\n\tvoid store​(PrintWriter aWriter, int indent, Object aServer);\n\t// Store the specified server element children.\n\tvoid storeChildren​(PrintWriter aWriter, int indent, Object aObject, StoreDescription parentDesc);\n}", "des": "Store server.xml Server element and children ( Listener,GlobalNamingResource,Service)"}
{"index": 7240, "code": "Class StatusManagerServlet {\n\t// Finalize this servlet.\n\tvoid destroy();\n\t// Process a GET request for the specified resource.\n\tvoid doGet​(HttpServletRequest request, HttpServletResponse response);\n\tvoid handleNotification​(Notification notification, Object handback);\n\t// Initialize this servlet.\n\tvoid init();\n}", "des": "This servlet will display a complete status of the HTTP/1.1 connector."}
{"index": 7241, "code": "Class StoreFactoryRule {\n\t// Handle the beginning of an XML element.\n\tvoid begin​(String namespace, String name, Attributes attributes);\n\t// Create new instance from attribute className!\n\tprotected Object newInstance​(String attr, String defaultName, Attributes attributes);\n}", "des": "Rule that creates a new IStoreFactory instance, and associates it with the top object on the stack (which must implement IStoreFactory)."}
{"index": 7242, "code": "Class StoreLoader {\n\t// Create and configure the Digester we will be using for setup store registry.\n\tprotected static Digester createDigester();\n\tStoreRegistry getRegistry();\n\tURL getRegistryResource();\n\t// Load registry configuration.\n\tvoid load​(String path);\n\tvoid setRegistry​(StoreRegistry registry);\n}", "des": "XML Format"}
{"index": 7243, "code": "Class StringManager {\n\tstatic StringManager getManager​(Class<?> clazz);\n\t// Get the StringManager for a particular package.\n\tstatic StringManager getManager​(String packageName);\n\t// Get a string from the underlying resource bundle or return null if the String is not found.\n\tString getString​(String key);\n\t// Get a string from the underlying resource bundle and format it with the given set of arguments.\n\tString getString​(String key, Object... args);\n}", "des": "An internationalization / localization helper class which reduces the bother of handling ResourceBundles and takes care of the common cases of message formatting which otherwise require the creation of Object arrays and such."}
{"index": 7244, "code": "Class StringUtils {\n\t// Encodes the given string into a sequence of bytes using the UTF-8 charset, storing the result into a new byte array.\n\tstatic byte[] getBytesUtf8​(String string);\n\t// Constructs a new String by decoding the specified array of bytes using the US-ASCII charset.\n\tstatic String newStringUsAscii​(byte[] bytes);\n\t// Constructs a new String by decoding the specified array of bytes using the UTF-8 charset.\n\tstatic String newStringUtf8​(byte[] bytes);\n}", "des": "Converts String to and from bytes using the encodings required by the Java specification."}
{"index": 7245, "code": "Class ThreadLocalLeakPreventionListener {\n\t// Acknowledge the occurrence of the specified event.\n\tvoid containerEvent​(ContainerEvent event);\n\t// Create a lifecycle listener which will then be added to the specified context.\n\tprotected LifecycleListener createLifecycleListener​(Context context);\n\t// Listens for LifecycleEvent for the start of the Server to initialize itself and then for after_stop events of each Context.\n\tvoid lifecycleEvent​(LifecycleEvent event);\n}", "des": "A LifecycleListener that triggers the renewal of threads in Executor pools when a Context is being stopped to avoid thread-local related memory leaks."}
{"index": 7246, "code": "Class ThrowableCallStack {\n\t// Clears the current stack trace snapshot.\n\tvoid clear();\n\t// Takes a snapshot of the current call stack.\n\tvoid fillInStackTrace();\n\t// Prints the current stack trace if available to a PrintWriter.\n\tboolean printStackTrace​(PrintWriter writer);\n}", "des": "CallStack strategy that uses the stack trace from a Throwable."}
{"index": 7247, "code": "Class Tomcat.ExistingStandardWrapper {\n\t// Return the available date/time for this servlet, in milliseconds since the epoch.\n\tlong getAvailable();\n\tServlet getServlet();\n\tString getServletClass();\n\tboolean isUnavailable();\n\t// Load and initialize an instance of this servlet, if there is not already an initialized instance.\n\tServlet loadServlet();\n}", "des": "Helper class for wrapping existing servlets."}
{"index": 7248, "code": "Interface TrackedUse {\n\t// Deprecated. Use getLastUsedInstant() which offers the best precision.\n\tlong getLastUsed();\n\t// Gets the last Instant this object was used.\n\tdefault Instant getLastUsedInstant();\n}", "des": "Allows pooled objects to make information available about when and how they were used available to the object pool."}
{"index": 7249, "code": "Class TransactionFactory {\n\t// If a default factory is available for the given reference type, create the default factory.\n\tprotected ObjectFactory getDefaultFactory​(Reference ref);\n\t// If this reference is a link to another JNDI object, obtain that object.\n\tprotected Object getLinked​(Reference ref);\n\t// Determines if this factory supports processing the provided reference object.\n\tprotected boolean isReferenceTypeSupported​(Object obj);\n}", "des": "Object factory for User transactions."}
{"index": 7250, "code": "Class TrapException {\n\t// Gets invoked each time an operation on Connection is invoked.\n\tObject invoke​(Object proxy, Method method, Object[] args);\n\tboolean isDeclaredException​(Method m, Class<?> clazz);\n\t// no-op for this interceptor. no state is stored.\n\tvoid reset​(ConnectionPool parent, PooledConnection con);\n}", "des": "Interceptor that traps any unhandled exception types and throws an exception that has been declared by the method called, or throw an SQLException if it is declared."}
{"index": 7251, "code": "Class Txt2Html {\n\t// Sets the files to be converted into HTML\n\tvoid addFileset​(org.apache.tools.ant.types.FileSet fs);\n\t// Perform the conversion\n\tvoid execute();\n\t// Sets the directory to contain the resulting files\n\tvoid setTodir​(File todir);\n}", "des": "Ant task to convert a given set of files from Text to HTML."}
{"index": 7252, "code": "Class UDecoder {\n\t// URLDecode, will modify the source.\n\tvoid convert​(ByteChunk mb, boolean query);\n\t// URLDecode, will modify the source.\n\tvoid convert​(ByteChunk mb, EncodedSolidusHandling encodedSolidusHandling);\n\t// Decode and return the specified URL-encoded String.\n\tstatic String URLDecode​(String str, Charset charset);\n}", "des": "All URL decoding happens here."}
{"index": 7253, "code": "Enum UserDataHelper.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic UserDataHelper.Mode valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic UserDataHelper.Mode[] values();\n}", "des": "Log mode for the next log message."}
{"index": 7254, "code": "Class UserMBean {\n\t// Add a new Group to those this user belongs to.\n\tvoid addGroup​(String groupname);\n\t// Add a new Role to those this user belongs to.\n\tvoid addRole​(String rolename);\n\tString[] getGroups();\n\tString[] getRoles();\n\t// Remove a Group from those this user belongs to.\n\tvoid removeGroup​(String groupname);\n\t// Remove a Role from those this user belongs to.\n\tvoid removeRole​(String rolename);\n}", "des": "A ModelMBean implementation for the org.apache.catalina.User component."}
{"index": 7255, "code": "Interface Valve {\n\t// Execute a periodic task, such as reloading, etc.\n\tvoid backgroundProcess();\n\t// Returns the next Valve in this pipeline, or null if this is the last Valve in the pipeline.\n\tValve getNext();\n\t// Perform request processing as required by this Valve.\n\tvoid invoke​(Request request, Response response);\n\tboolean isAsyncSupported();\n\t// Set the next Valve in the pipeline containing this Valve.\n\tvoid setNext​(Valve valve);\n}", "des": "A Valve is a request processing component associated with a particular Container."}
{"index": 7256, "code": "Class WarWatcher {\n\t// add cluster war to the watcher state\n\tprotected void addWarInfo​(File warfile);\n\t// check for modification and send notification to listener\n\tvoid check();\n\t// clear watcher state\n\tvoid clear();\n}", "des": "The WarWatcher watches the deployDir for changes made to the directory (adding new WAR files->deploy or remove WAR files->undeploy) and notifies a listener of the changes made."}
{"index": 7257, "code": "Class WebRuleSet {\n\t// Add the set of Rule instances defined in this RuleSet to the specified Digester instance, associating them with our namespace URI (if any).\n\tvoid addRuleInstances​(Digester digester);\n\tprotected void configureInjectionRules​(Digester digester, String base);\n\tprotected void configureNamingRules​(Digester digester);\n\t// Reset counter used for validating the web.xml file.\n\tvoid recycle();\n}", "des": "RuleSet for processing the contents of a web application deployment descriptor (/WEB-INF/web.xml) resource."}
{"index": 7258, "code": "Class WsContextListener {\n\t// Notification that the servlet context is about to be shut down.\n\tvoid contextDestroyed​(ServletContextEvent sce);\n\t// Notification that the web application initialization process is starting.\n\tvoid contextInitialized​(ServletContextEvent sce);\n}", "des": "In normal usage, this ServletContextListener does not need to be explicitly configured as the WsSci performs all the necessary bootstrap and installs this listener in the ServletContext."}
{"index": 7259, "code": "Class WsFilter {\n\t// The doFilter method of the Filter is called by the container each time a request/response pair is passed through the chain due to a client request for a resource at the end of the chain.\n\tvoid doFilter​(ServletRequest request, ServletResponse response, FilterChain chain);\n\t// Convenience method for sub-classes to save them having to call super.init(config).\n\tvoid init();\n}", "des": "Handles the initial HTTP connection for WebSocket connections."}
{"index": 7260, "code": "Enum WsFrameBase.ReadState {\n\tboolean isSuspended();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic WsFrameBase.ReadState valueOf​(String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic WsFrameBase.ReadState[] values();\n}", "des": "WAITING - not suspended Server case: waiting for a notification that data is ready to be read from the socket, the socket is registered to the poller Client case: data has been read from the socket and is waiting for data to be processed PROCESSING - not suspended Server case: reading from the socket and processing the data Client case: processing the data if such has already been read and more data will be read from the socket SUSPENDING_WAIT - suspended, a call to suspend() was made while in WAITING state."}
{"index": 7261, "code": "Interface XAConnectionFactory {\n\t// Create a new Connection in an implementation specific fashion.\n\tConnection createConnection();\n\t// Gets the TransactionRegistry for this connection factory which contains a the XAResource for every connection created by this factory.\n\tTransactionRegistry getTransactionRegistry();\n}", "des": "XAConnectionFactory is an extension of ConnectionFactory used to create connections in a transaction managed environment."}
{"index": 7262, "code": "Class AsyncEvent {\n\t// Obtain the asynchronous context associated with the event.\n\tAsyncContext getAsyncContext();\n\t// Obtain the request associated with the event.\n\tServletRequest getSuppliedRequest();\n\t// Obtain the response associated with the event.\n\tServletResponse getSuppliedResponse();\n\t// Obtain the throwable associated with the event.\n\tjava.lang.Throwable getThrowable();\n}", "des": "Used to pass data to the methods of AsyncListener."}
{"index": 7263, "code": "Enum DispatcherType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic DispatcherType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic DispatcherType[] values();\n}", "des": "Enumeration of dispatcher types."}
{"index": 7264, "code": "Class HttpConstraintElement {\n\t// TODO\n\tServletSecurity.EmptyRoleSemantic getEmptyRoleSemantic();\n\t// TODO\n\tjava.lang.String[] getRolesAllowed();\n\t// TODO\n\tServletSecurity.TransportGuarantee getTransportGuarantee();\n}", "des": "Equivalent of HttpConstraint for programmatic configuration of security constraints."}
{"index": 7265, "code": "Interface HttpSessionActivationListener {\n\t// Notification that the session has just been activated.\n\tdefault void sessionDidActivate​(HttpSessionEvent se);\n\t// Notification that the session is about to be passivated.\n\tdefault void sessionWillPassivate​(HttpSessionEvent se);\n}", "des": "Objects that are bound to a session may listen to container events notifying them that sessions will be passivated and that session will be activated."}
{"index": 7266, "code": "Interface HttpSessionAttributeListener {\n\t// Notification that an attribute has been added to a session.\n\tdefault void attributeAdded​(HttpSessionBindingEvent se);\n\t// Notification that an attribute has been removed from a session.\n\tdefault void attributeRemoved​(HttpSessionBindingEvent se);\n\t// Notification that an attribute has been replaced in a session.\n\tdefault void attributeReplaced​(HttpSessionBindingEvent se);\n}", "des": "This listener interface can be implemented in order to get notifications of changes to the attribute lists of sessions within this web application."}
{"index": 7267, "code": "Class HttpSessionBindingEvent {\n\t// Returns the name with which the attribute is bound to or unbound from the session.\n\tjava.lang.String getName();\n\t// Get the session that changed.\n\tHttpSession getSession();\n\t// Returns the value of the attribute that has been added, removed or replaced.\n\tjava.lang.Object getValue();\n}", "des": "Events of this type are either sent to an object that implements HttpSessionBindingListener when it is bound or unbound from a session, or to an HttpSessionAttributeListener that has been configured in the deployment descriptor when any attribute is bound, unbound or replaced in a session."}
{"index": 7268, "code": "Interface HttpSessionBindingListener {\n\t// Notifies the object that it is being bound to a session and identifies the session.\n\tdefault void valueBound​(HttpSessionBindingEvent event);\n\t// Notifies the object that it is being unbound from a session and identifies the session.\n\tdefault void valueUnbound​(HttpSessionBindingEvent event);\n}", "des": "Causes an object to be notified when it is bound to or unbound from a session."}
{"index": 7269, "code": "Interface HttpSessionListener {\n\t// Notification that a session was created.\n\tdefault void sessionCreated​(HttpSessionEvent se);\n\t// Notification that a session is about to be invalidated.\n\tdefault void sessionDestroyed​(HttpSessionEvent se);\n}", "des": "Implementations of this interface are notified of changes to the list of active sessions in a web application."}
{"index": 7270, "code": "Interface HttpUpgradeHandler {\n\t// This method is called after the upgraded connection has been closed.\n\tvoid destroy();\n\t// This method is called once the request/response pair where HttpServletRequest.upgrade(Class) is called has completed processing and is the point where control of the connection passes from the container to the HttpUpgradeHandler.\n\tvoid init​(WebConnection connection);\n}", "des": "Interface between the HTTP upgrade process and the new protocol."}
{"index": 7271, "code": "Interface JspConfigDescriptor {\n\t// Provide the set of JSP property groups obtained from the <jsp-config> elements in the web application's deployment descriptors.\n\tjava.util.Collection<JspPropertyGroupDescriptor> getJspPropertyGroups();\n\t// Provide the set of tag library descriptors obtained from the <jsp-config> elements in the web application's deployment descriptors.\n\tjava.util.Collection<TaglibDescriptor> getTaglibs();\n}", "des": "This interface exposes the JSP specific configuration information obtain ed from the deployment descriptors."}
{"index": 7272, "code": "Enum MappingMatch {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic MappingMatch valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic MappingMatch[] values();\n}", "des": "Represents the ways that a request can be mapped to a servlet"}
{"index": 7273, "code": "Class MultipartConfigElement {\n\t// Obtain the size above which the file is save in the temporary location rather than retained in memory.\n\tint getFileSizeThreshold();\n\t// Obtain the location where temporary files should be stored.\n\tjava.lang.String getLocation();\n\t// Obtain the maximum permitted size for a single file.\n\tlong getMaxFileSize();\n\t// Obtain the maximum permitted size for a single request.\n\tlong getMaxRequestSize();\n}", "des": "The programmatic equivalent of MultipartConfig used to configure multi-part handling for a Servlet when registering a Servlet via code."}
{"index": 7274, "code": "Interface ReadListener {\n\t// Invoked when the request body has been fully read.\n\tvoid onAllDataRead();\n\t// Invoked when data is available to read.\n\tvoid onDataAvailable();\n\t// Invoked if an error occurs while reading the request body.\n\tvoid onError​(java.lang.Throwable throwable);\n}", "des": "Receives notification of read events when using non-blocking IO."}
{"index": 7275, "code": "Interface RequestDispatcher {\n\t// Forwards a request from a servlet to another resource (servlet, JSP file, or HTML file) on the server.\n\tvoid forward​(ServletRequest request, ServletResponse response);\n\t// Includes the content of a resource (servlet, JSP page, HTML file) in the response.\n\tvoid include​(ServletRequest request, ServletResponse response);\n}", "des": "Defines an object that receives requests from the client and sends them to any resource (such as a servlet, HTML file, or JSP file) on the server."}
{"index": 7276, "code": "Class ServletContextAttributeEvent {\n\t// Return the name of the attribute that changed on the ServletContext.\n\tjava.lang.String getName();\n\t// Returns the value of the attribute that has been added, removed, or replaced.\n\tjava.lang.Object getValue();\n}", "des": "This is the event class for notifications about changes to the attributes of the servlet context of a web application."}
{"index": 7277, "code": "Interface ServletContextAttributeListener {\n\t// Notification that a new attribute was added to the servlet context.\n\tdefault void attributeAdded​(ServletContextAttributeEvent scae);\n\t// Notification that an existing attribute has been removed from the servlet context.\n\tdefault void attributeRemoved​(ServletContextAttributeEvent scae);\n\t// Notification that an attribute on the servlet context has been replaced.\n\tdefault void attributeReplaced​(ServletContextAttributeEvent scae);\n}", "des": "Implementations of this interface receive notifications of changes to the attribute list on the servlet context of a web application."}
{"index": 7278, "code": "Interface ServletContextListener {\n\t// Notification that the servlet context is about to be shut down.\n\tdefault void contextDestroyed​(ServletContextEvent sce);\n\t// Notification that the web application initialization process is starting.\n\tdefault void contextInitialized​(ServletContextEvent sce);\n}", "des": "Implementations of this interface receive notifications about changes to the servlet context of the web application they are part of."}
{"index": 7279, "code": "Class ServletInputStream {\n\t// Has the end of this InputStream been reached?\n\tabstract boolean isFinished();\n\t// Can data be read from this InputStream without blocking?\n\tabstract boolean isReady();\n\t// Reads the input stream, one line at a time.\n\tint readLine​(byte[] b, int off, int len);\n\t// Sets the ReadListener for this ServletInputStream and thereby switches to non-blocking IO.\n\tabstract void setReadListener​(ReadListener listener);\n}", "des": "Provides an input stream for reading binary data from a client request, including an efficient readLine method for reading data one line at a time."}
{"index": 7280, "code": "Interface ServletRegistration {\n\t// Adds a servlet mapping with the given URL patterns for the Servlet represented by this ServletRegistration.\n\tjava.util.Set<java.lang.String> addMapping​(java.lang.String... urlPatterns);\n\t// Gets the currently available mappings of the Servlet represented by this ServletRegistration.\n\tjava.util.Collection<java.lang.String> getMappings();\n\t// Obtain the name of the user / group under which the Servlet has been configured to run.\n\tjava.lang.String getRunAsRole();\n}", "des": "Interface through which a Servlet may be further configured."}
{"index": 7281, "code": "Class ServletRequestAttributeEvent {\n\t// Return the name of the attribute that changed on the ServletRequest.\n\tjava.lang.String getName();\n\t// Returns the value of the attribute that has been added, removed or replaced.\n\tjava.lang.Object getValue();\n}", "des": "This is the event class for notifications of changes to the attributes of the servlet request in an application."}
{"index": 7282, "code": "Interface ServletRequestAttributeListener {\n\t// Notification that a new attribute was added to the servlet request.\n\tdefault void attributeAdded​(ServletRequestAttributeEvent srae);\n\t// Notification that an existing attribute has been removed from the servlet request.\n\tdefault void attributeRemoved​(ServletRequestAttributeEvent srae);\n\t// Notification that an attribute was replaced on the servlet request.\n\tdefault void attributeReplaced​(ServletRequestAttributeEvent srae);\n}", "des": "A ServletRequestAttributeListener can be implemented by the developer interested in being notified of request attribute changes."}
{"index": 7283, "code": "Class ServletRequestEvent {\n\t// Get the associated ServletContext.\n\tServletContext getServletContext();\n\t// Get the associated ServletRequest.\n\tServletRequest getServletRequest();\n}", "des": "Events of this kind indicate lifecycle events for a ServletRequest."}
{"index": 7284, "code": "Interface ServletRequestListener {\n\t// The request is about to go out of scope of the web application.\n\tdefault void requestDestroyed​(ServletRequestEvent sre);\n\t// The request is about to come into scope of the web application.\n\tdefault void requestInitialized​(ServletRequestEvent sre);\n}", "des": "A ServletRequestListener can be implemented by the developer interested in being notified of requests coming in and out of scope in a web component."}
{"index": 7285, "code": "Enum ServletSecurity.EmptyRoleSemantic {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ServletSecurity.EmptyRoleSemantic valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ServletSecurity.EmptyRoleSemantic[] values();\n}", "des": "Represents the two possible values of the empty role semantic, active when a list of role names is empty."}
{"index": 7286, "code": "Enum ServletSecurity.TransportGuarantee {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic ServletSecurity.TransportGuarantee valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic ServletSecurity.TransportGuarantee[] values();\n}", "des": "Represents the two possible values of data transport, encrypted or not."}
{"index": 7287, "code": "Class ServletSecurityElement {\n\t// Obtain the collection of security constraints configured for specific methods.\n\tjava.util.Collection<HttpMethodConstraintElement> getHttpMethodConstraints();\n\t// Obtain the collection HTTP methods for which security constraints have been defined.\n\tjava.util.Collection<java.lang.String> getMethodNames();\n}", "des": "The programmatic equivalent of ServletSecurity used to configre security constraints for a Servlet."}
{"index": 7288, "code": "Enum SessionTrackingMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic SessionTrackingMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic SessionTrackingMode[] values();\n}", "des": "Defines the permitted options for configuring the session tracking mode."}
{"index": 7289, "code": "Interface TaglibDescriptor {\n\t// Obtain the location of the tag library.\n\tjava.lang.String getTaglibLocation();\n\t// Obtain the URI for the tag library.\n\tjava.lang.String getTaglibURI();\n}", "des": "Represents a taglib descriptor definitions in the deployment descriptor."}
{"index": 7290, "code": "Class UnavailableException {\n\t// Returns the number of seconds the servlet expects to be temporarily unavailable.\n\tint getUnavailableSeconds();\n\t// Returns a boolean indicating whether the servlet is permanently unavailable.\n\tboolean isPermanent();\n}", "des": "Defines an exception that a servlet or filter throws to indicate that it is permanently or temporarily unavailable."}
{"index": 7291, "code": "Interface WebConnection {\n\t// Provides access to the ServletInputStream for reading data from the client.\n\tServletInputStream getInputStream();\n\t// Provides access to the ServletOutputStream for writing data to the client.\n\tServletOutputStream getOutputStream();\n}", "des": "The interface used by an HttpUpgradeHandler to interact with an upgraded HTTP connection."}
{"index": 7292, "code": "Interface WriteListener {\n\t// Invoked if an error occurs while writing the response.\n\tvoid onError​(java.lang.Throwable throwable);\n\t// Invoked when it it possible to write data without blocking.\n\tvoid onWritePossible();\n}", "des": "Receives notification of write events when using non-blocking IO."}
{"index": 7293, "code": "Class A_CmsGalleryDialogAction {\n\t// Returns the gallery.\n\tprotected CmsResource getGallery​(I_CmsDialogContext context);\n\t// Returns the gallery types supported by this dialog action.\n\tprotected abstract java.lang.String[] getSupportedGalleryTypes();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Class representing an abstract gallery dialog action."}
{"index": 7294, "code": "Class A_CmsHTTPImportForm {\n\t// Gets the upload button.\n\tprotected abstract com.vaadin.v7.ui.Upload getUpload();\n\t// Gets the upload label, which shows the name of the uploaded file.\n\tprotected abstract com.vaadin.v7.ui.Label getUploadLabel();\n}", "des": "Abstract class for HTTP imports."}
{"index": 7295, "code": "Class A_CmsImportExportUserDialog {\n\t// Init method.\n\tprotected void init​(java.lang.String ou, com.vaadin.ui.Window window);\n\t// Initializes the download button.\n\tprotected void initDownloadButton();\n\t// Checks if the user can be exported.\n\tprotected boolean isExportable​(CmsUser exportUser);\n}", "des": "Class to export user."}
{"index": 7296, "code": "Class A_CmsJSPAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// Sets the absolute path (in the vfs) to a jsp file used for the action.\n\tabstract java.lang.String getJSPPath();\n\t// Creates string for get—request with given list of resources.\n\tprotected java.lang.String getRequestString​(java.util.List<CmsResource> resources);\n}", "des": "Abstract class for actions to display a JSP file in a vaadin window."}
{"index": 7297, "code": "Class A_CmsLogPublishListConverter {\n\t// Processes a log entry.\n\tabstract void add​(CmsLogEntry entry);\n\t// Gets the state entry for the given structure id, creating it if it doesn't already exist.\n\tCmsPublishListResourceState getEntry​(CmsUUID key);\n\t// Writes the collected changes to the database.\n\tvoid writeChangesToDatabase​(CmsDbContext dbc, I_CmsProjectDriver projectDriver);\n}", "des": "Abstract base class used for converting from CmsLogEntry instances to the necessary changes in the user's publish list."}
{"index": 7298, "code": "Class A_CmsMenuItem {\n\t// Returns the item ui component.\n\tcom.vaadin.ui.Component getItemComponent​(java.util.Locale locale);\n\t// Returns the label for the given locale.\n\tprotected java.lang.String getLabel​(java.util.Locale locale);\n}", "des": "A workplace menu item."}
{"index": 7299, "code": "Class A_CmsPreference {\n\t// Creates the configuration for this preference.\n\torg.dom4j.Element createConfigurationItem();\n\t// Gets the user-independent property configuration.\n\tprotected abstract CmsXmlContentProperty getPropertyDefinition();\n\t// Gets the metadata describing how the setting should be edited.\n\tCmsXmlContentProperty getPropertyDefinition​(CmsObject cms);\n\t// Returns true if the preference is disabled.\n\tboolean isDisabled​(CmsObject cms);\n}", "des": "Abstract superclass for preferences."}
{"index": 7300, "code": "Class A_CmsProgressThread {\n\t// Sets the description to show for the progress.\n\tabstract void setDescription​(java.lang.String description);\n\t// Sets the progress.\n\tabstract void setProgress​(int progress);\n}", "des": "Abstract thread to keep track of operation progress."}
{"index": 7301, "code": "Enum A_CmsPublishGroupHelper.GroupAge {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic A_CmsPublishGroupHelper.GroupAge valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic A_CmsPublishGroupHelper.GroupAge[] values();\n}", "des": "An enum representing the age of a publish list resource."}
{"index": 7302, "code": "Class A_CmsRepositorySession {\n\t// Returns the filter.\n\tCmsRepositoryFilter getFilter();\n\t// Checks if a path is filtered out of the filter or not.\n\tprotected boolean isFiltered​(java.lang.String path);\n\t// Sets the filter.\n\tvoid setFilter​(CmsRepositoryFilter filter);\n}", "des": "Abstract implementation of the interface I_CmsRepositorySession to provide the functionality of filtering items."}
{"index": 7303, "code": "Class A_CmsSimpleVisibilityCheck {\n\t// Computes visibility of the menu item for a single resource.\n\tabstract CmsMenuItemVisibilityMode getSingleVisibility​(CmsObject cms, CmsResource resource);\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Abstract superclass for menu item visibility checks."}
{"index": 7304, "code": "Class A_CmsToolbarAction {\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n\t// Gets the visibility for the current dialog context.\n\tCmsMenuItemVisibilityMode getVisibility​(I_CmsDialogContext context);\n}", "des": "Workplace action only visible in the toolbar context menus, not within the file table."}
{"index": 7305, "code": "Class A_CmsWorkplaceApp.NavEntry {\n\t// Returns the description.\n\tjava.lang.String getDescription();\n\t// Returns the icon.\n\tcom.vaadin.server.Resource getIcon();\n\t// Returns the entry name.\n\tjava.lang.String getName();\n\t// Returns the target state.\n\tjava.lang.String getTargetState();\n}", "des": "An app navigation entry."}
{"index": 7306, "code": "Class A_CmsXmlContentEditorChangeHandler {\n\t// Returns the handler configuration.\n\tjava.lang.String getConfiguration();\n\t// Returns the handler scope.\n\tjava.lang.String getScope();\n\t// Resolves a relative content value path to an absolute one.\n\tjava.lang.String resolveRelativePath​(java.lang.String source, java.lang.String target);\n\t// Sets the configuration.\n\tvoid setConfiguration​(java.lang.String configuration);\n\t// Sets the scope to observe for changes.\n\tvoid setScope​(java.lang.String scope);\n}", "des": "Abstract implementation of the content editor change handler."}
{"index": 7307, "code": "Class A_CmsXmlValueCdataBase {\n\t// Returns the value of this XML content node as a plain text String.\n\tjava.lang.String getPlainText​(CmsObject cms);\n\t// Returns the value of this XML content node as a String.\n\tjava.lang.String getStringValue​(CmsObject cms);\n\t// Sets the provided String as value of this XML content node.\n\tvoid setStringValue​(CmsObject cms, java.lang.String value);\n}", "des": "Base class for XML content value implementations that require only a simple XML cdata text node."}
{"index": 7308, "code": "Class A_CmsXmlValueTextBase {\n\t// Returns the value of this XML content node as a plain text String.\n\tjava.lang.String getPlainText​(CmsObject cms);\n\t// Returns the value of this XML content node as a String.\n\tjava.lang.String getStringValue​(CmsObject cms);\n\t// Sets the provided String as value of this XML content node.\n\tvoid setStringValue​(CmsObject cms, java.lang.String value);\n}", "des": "Base class for XML content value implementations that require only a simple XML plain text node."}
{"index": 7309, "code": "Class ClientMessages {\n\t// Returns the client message instance.\n\tstatic I_CmsClientMessageBundle get();\n\t// Returns the class of the client implementation.\n\tjava.lang.Class<?> getClientImpl();\n}", "des": "The client messages class for the SEO dialog."}
{"index": 7310, "code": "Class CmsAcaciaEditor {\n\t// Returns the editor URI.\n\tprotected java.lang.String getEditorUri();\n\t// Gets the priority.\n\tint getPriority();\n\t// Checks whether the editor is available for the given resource.\n\tboolean matchesResource​(CmsObject cms, CmsResource resource, boolean plainText);\n\t// Checks whether the editor is available for the given resource type.\n\tboolean matchesType​(I_CmsResourceType type, boolean plainText);\n\t// Returns a new editor instance.\n\tI_CmsEditor newInstance();\n}", "des": "The acacia XML content editor."}
{"index": 7311, "code": "Class CmsAcceptLanguageHeaderParser {\n\t// Creates a value string for the HTTP Accept-Language header based on the default localed.\n\tstatic java.lang.String createLanguageHeader();\n\t// Returns the sorted list of accepted Locales.\n\tjava.util.List<java.util.Locale> getAcceptedLocales();\n}", "des": "Parses the HTTP Accept-Language header as per section 14.4 of RFC 2068 (HTTP 1.1 header field definitions) and creates a sorted list of Locales from it."}
{"index": 7312, "code": "Class CmsAccountInfo {\n\t// Returns the additional info key.\n\tjava.lang.String getAddInfoKey();\n\t// Returns the field.\n\tCmsAccountInfo.Field getField();\n\t// Returns the account info value for the given user.\n\tjava.lang.String getValue​(CmsUser user);\n\t// Returns whether this is an additional info field.\n\tboolean isAdditionalInfo();\n\t// Returns if the field is editable.\n\tboolean isEditable();\n}", "des": "Account info bean."}
{"index": 7313, "code": "Enum CmsAccountInfo.Field {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsAccountInfo.Field valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsAccountInfo.Field[] values();\n}", "des": "Account info fields."}
{"index": 7314, "code": "Class CmsAddCategoriesPostCreateHandler {\n\t// This is called after the new content has been created (and possibly already been filled with content).\n\tvoid onCreate​(CmsObject cms, CmsResource createdResource, boolean copyMode);\n\t// Adds the categories specified via config to the newly created resource iff not in copy mode.\n\tvoid onCreate​(CmsObject cms, CmsResource createdResource, boolean copyMode, java.lang.String config);\n}", "des": "A post create handler that adds categories to newly created resources (that are not a copy of an existing resource)."}
{"index": 7315, "code": "Class CmsAddContentRestriction.TypeEntry {\n\t// Gets the location from which this entry was read.\n\tjava.lang.String getOrigin();\n\t// Gets the results to be displayed in the 'add content' dialog.\n\tjava.util.List<CmsGallerySearchResult> getResults​(CmsObject cms);\n\t// Gets the type.\n\tjava.lang.String getType();\n}", "des": "Contains the replacements (and titles of the replacements) for a single type."}
{"index": 7316, "code": "Class CmsAdditionalEntryInfo {\n\t// Returns the additional info map.\n\tjava.util.Map<java.lang.String,​java.lang.String> getAdditional();\n\t// Returns the resource state.\n\tCmsResourceState getResourceState();\n\t// Sets the additional info map.\n\tvoid setAdditional​(java.util.Map<java.lang.String,​java.lang.String> additional);\n\t// Sets the resource state.\n\tvoid setResourceState​(CmsResourceState resourceState);\n}", "des": "Bean for additional site-map entry information."}
{"index": 7317, "code": "Class CmsAdditionalInfoBean {\n\t// Returns the info name.\n\tjava.lang.String getName();\n\t// Returns the info style name.\n\tjava.lang.String getStyle();\n\t// Returns the info value.\n\tjava.lang.String getValue();\n\t// Sets the info name.\n\tvoid setName​(java.lang.String name);\n\t// Sets the info style name.\n\tvoid setStyle​(java.lang.String styleName);\n\t// Sets the info value.\n\tvoid setValue​(java.lang.String value);\n}", "des": "Additional info bean."}
{"index": 7318, "code": "Class CmsADEConfigDataInternal.AttributeValue {\n\t// Gets the origin path.\n\tjava.lang.String getOrigin();\n\t// Gets the attribute string value.\n\tjava.lang.String getValue();\n}", "des": "Represents the value of an attribute, with additional information about where the value originated from."}
{"index": 7319, "code": "Class CmsADEConfigurationSequence {\n\t// Gets the current configuration data.\n\tCmsADEConfigDataInternal getConfig();\n\t// Gets the list of configuration file paths in inheritance order, not including the module configuration.\n\tjava.util.List<java.lang.String> getConfigPaths();\n\t// Returns a sequence which only differs from this instance in that its index is one less.\n\tcom.google.common.base.Optional<CmsADEConfigurationSequence> getParent();\n}", "des": "Represents a sequence of inherited module/sitemap configurations, together with an index into that list."}
{"index": 7320, "code": "Enum CmsADEManager.FavListProp {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsADEManager.FavListProp valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsADEManager.FavListProp[] values();\n}", "des": "JSON property name constant."}
{"index": 7321, "code": "Enum CmsADEManager.Status {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsADEManager.Status valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsADEManager.Status[] values();\n}", "des": "A status enum for the initialization status."}
{"index": 7322, "code": "Class CmsADESessionCache.LastPageBean {\n\t// Returns the detailId.\n\tCmsUUID getDetailId();\n\t// Returns the pageId.\n\tCmsUUID getPageId();\n\t// Returns the siteRoot.\n\tjava.lang.String getSiteRoot();\n}", "des": "Stores information about the container page which was last edited, so we can jump back to it later."}
{"index": 7323, "code": "Class CmsAdvancedPasswordHandler {\n\t// Evaluates the given password security.\n\tI_CmsPasswordSecurityEvaluator.SecurityLevel evaluatePasswordSecurity​(java.lang.String password);\n\t// Returns a hint describing how to set a secure password.\n\tjava.lang.String getPasswordSecurityHint​(java.util.Locale locale);\n\t// This method checks if a new password follows the rules for new passwords, which are defined by a Class configured in the opencms.properties file.\n\tvoid validatePassword​(java.lang.String password);\n}", "des": "Validates the user passwords in with advanced password requirements."}
{"index": 7324, "code": "Class CmsAjaxDownloadGallery {\n\t// Fills the JSON object with the specific information used for download file resource type.\n\tprotected void buildJsonItemSpecificPart​(JSONObject jsonObj, CmsResource res, java.lang.String sitePath);\n\t// Returns the type id of the gallery items that should be listed.\n\tint getGalleryItemsTypeId();\n\t// Returns the type id of this gallery instance.\n\tint getGalleryTypeId();\n\t// Returns the type name of this gallery instance.\n\tjava.lang.String getGalleryTypeName();\n}", "des": "Provides the specific constants, members and helper methods to generate the content of the download gallery dialog used in the XML content editors, WYSIWYG editors and context menu."}
{"index": 7325, "code": "Class CmsAliasBean {\n\t// Returns the alias mode.\n\tCmsAliasMode getMode();\n\t// Returns the site-relative alias path.\n\tjava.lang.String getSitePath();\n\t// Sets the alias mode.\n\tvoid setMode​(CmsAliasMode mode);\n\t// Sets the alias site path.\n\tvoid setSitePath​(java.lang.String sitePath);\n}", "des": "A bean which contains the information for creating an alias."}
{"index": 7326, "code": "Class CmsAliasEditorLockTable {\n\t// Clears the entry for a given site root, but only if the user from the given CMS context matches the user in the entry.\n\tvoid clear​(CmsObject cms, java.lang.String siteRoot);\n\t// Tries to update or create an entry for the given user/site root combination.\n\tCmsUser update​(CmsObject cms, java.lang.String siteRoot);\n}", "des": "A class used to keep track of which user is editing the alias table from which sites."}
{"index": 7327, "code": "Class CmsAliasFilter {\n\t// Gets the alias path to filter.\n\tjava.lang.String getPath();\n\t// Gets the site root to filter.\n\tjava.lang.String getSiteRoot();\n\t// Gets the structure id to filter.\n\tCmsUUID getStructureId();\n\t// Checks whether this filter is trivial, i.e.\n\tboolean isNullFilter();\n}", "des": "This class is used for filtering aliases in database operations."}
{"index": 7328, "code": "Class CmsAliasImportResponseTable {\n\t// Adds a list of alias import results, and returns the key under which they were stored.\n\tjava.lang.String addImportResult​(java.util.List<CmsAliasImportResult> importResults);\n\t// Removes the list of alias import results for the given key and returns it.\n\tjava.util.List<CmsAliasImportResult> getAndRemove​(java.lang.String key);\n}", "des": "A class used for storing alias import results by key."}
{"index": 7329, "code": "Class CmsAliasImportResult {\n\t// Gets the alias path.\n\tjava.lang.String getAliasPath();\n\t// Gets the line containing the alias data.\n\tjava.lang.String getLine();\n\t// Gets the import message.\n\tjava.lang.String getMessage();\n\t// Gets the alias mode.\n\tCmsAliasMode getMode();\n\t// Gets the status.\n\tCmsAliasImportStatus getStatus();\n\t// Gets the alias target path.\n\tjava.lang.String getTargetPath();\n\t// Sets the line containing the alias data.\n\tvoid setLine​(java.lang.String line);\n}", "des": "A bean representing the result of trying to import a single alias."}
{"index": 7330, "code": "Enum CmsAliasImportStatus {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsAliasImportStatus valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsAliasImportStatus[] values();\n}", "des": "The status for the result of an alias import operation."}
{"index": 7331, "code": "Class CmsAliasSaveValidationRequest {\n\t// Gets the set of structure ids of deleted aliases.\n\tjava.util.Set<CmsUUID> getDeletedIds();\n\t// Gets the list of rewrite aliases to save.\n\tjava.util.List<CmsRewriteAliasTableRow> getRewriteData();\n\t// Gets the site root.\n\tjava.lang.String getSiteRoot();\n\t// Sets the list of rewrite aliases to save.\n\tvoid setRewriteData​(java.util.List<CmsRewriteAliasTableRow> rewriteData);\n\t// Sets the site root.\n\tvoid setSiteRoot​(java.lang.String siteRoot);\n}", "des": "The class used for transmitting alias data to the server for serving."}
{"index": 7332, "code": "Class CmsAlternativeSiteRootMapping {\n\t// Appends configuration data to the given parent element.\n\tvoid appendXml​(org.dom4j.Element parent);\n\tboolean equals​(java.lang.Object obj);\n\t// Gets the path prefixes.\n\tjava.util.List<CmsPath> getPrefixes();\n\t// Gets the site root as a CmsPath.\n\tCmsPath getSiteRoot();\n\t// Gets the suffix to append to the site title.\n\tjava.lang.String getTitleSuffix();\n}", "des": "Describes a mapping rule that selects a different site root based on whether the requested path matches a set of prefixes or not."}
{"index": 7333, "code": "Class CmsAppCategory {\n\t// Returns the id.\n\tjava.lang.String getId();\n\t// Gets the user readable name for the category for a given locale.\n\tjava.lang.String getName​(java.util.Locale locale);\n\t// Gets an integer used to sort items.\n\tint getOrder();\n\t// Returns the parentId.\n\tjava.lang.String getParentId();\n\t// Returns the priority.\n\tint getPriority();\n}", "des": "Bean representing a category for workplace apps."}
{"index": 7334, "code": "Class CmsAppHierachy {\n\t// Within this method the app UI should be initialized.\n\tvoid initUI​(I_CmsAppUIContext context);\n\t// Returns whether this app should be cached within the user session.\n\tboolean isCachable();\n\t// Called after the view is fetched from the cache.\n\tvoid onRestoreFromCache();\n\t// Called on navigation events.\n\tvoid onStateChange​(java.lang.String state);\n}", "des": "Displays all available app."}
{"index": 7335, "code": "Class CmsAppHierarchyPanel {\n\t// Adds a child category panel.\n\tvoid addChild​(java.lang.String label, CmsAppHierarchyPanel child);\n\t// Displays the given tree of categories and apps in the tree.\n\tvoid fill​(CmsAppCategoryNode rootNode, java.util.Locale locale);\n}", "des": "Widget used to displays a nested hierarchy of app categories and apps."}
{"index": 7336, "code": "Enum CmsAppView.CacheStatus {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsAppView.CacheStatus valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsAppView.CacheStatus[] values();\n}", "des": "Enum representing caching status of a view."}
{"index": 7337, "code": "Class CmsAppVisibilityStatus {\n\t// Returns the help text for visible but inactive apps.\n\tjava.lang.String getHelpText();\n\t// Returns if the app is active.\n\tboolean isActive();\n\t// Returns if the app is visible.\n\tboolean isVisible();\n}", "des": "The app visibility status."}
{"index": 7338, "code": "Class CmsAttributeComparison {\n\t// Returns the locale.\n\tjava.lang.String getName();\n\t// Returns the type.\n\tjava.lang.String getStatus();\n\t// Returns the attribute.\n\tjava.lang.String getVersion1();\n\t// Returns the type.\n\tjava.lang.String getVersion2();\n\t// Sets the name.\n\tvoid setName​(java.lang.String name);\n\t// Sets the type.\n\tvoid setStatus​(java.lang.String type);\n\t// Sets the version1.\n\tvoid setVersion1​(java.lang.String version1);\n\t// Sets the type.\n\tvoid setVersion2​(java.lang.String type);\n}", "des": "Comparison of resource attributes."}
{"index": 7339, "code": "Class CmsAttributeDiff {\n\t// Gets the caption.\n\tjava.lang.String getCaption();\n\t// Gets the attribute comparison beans representing the differences.\n\tjava.util.List<CmsAttributeComparison> getDifferences​(CmsObject cms, CmsHistoryResourceBean v1, CmsHistoryResourceBean v2);\n}", "des": "Displays changes between attributes (size, modification date, etc."}
{"index": 7340, "code": "Class CmsAutoGrowingTextAreaState {\n\t// Returns the maximal number of rows.\n\tint getMaxRows();\n\t// Returns the minimal number of rows.\n\tint getMinRows();\n\t// Sets the maximal number of rows.\n\tvoid setMaxRows​(int maxRows);\n\t// Sets the minimal number of rows.\n\tvoid setMinRows​(int minRows);\n}", "des": "The scroll position CSS shared state."}
{"index": 7341, "code": "Class CmsAvailabilityDialog {\n\t// Actually performs the availability change.\n\tprotected java.util.List<CmsUUID> changeAvailability();\n\t// Initializes the values for the notification widgets.\n\tvoid initNotification();\n}", "des": "Availability dialog."}
{"index": 7342, "code": "Enum CmsBasicDialog.DialogWidth {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsBasicDialog.DialogWidth valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsBasicDialog.DialogWidth[] values();\n}", "des": "The available window widths."}
{"index": 7343, "code": "Class CmsBenchmarkTable {\n\t// Starts the timer with the given name.\n\tvoid start​(java.lang.String name);\n\t// Stops the timer with the given name, and sends the value of the timer to the benchmark receiver.\n\tvoid stop​(java.lang.String name);\n}", "des": "Manages a set of benchmark timers."}
{"index": 7344, "code": "Class CmsBreadCrumbState {\n\t// Returns the bread crumb entries.\n\tjava.lang.String[][] getEntries();\n\t// Sets the bread crumb entries.\n\tvoid setEntries​(java.lang.String[][] entries);\n}", "des": "The bread crumb state."}
{"index": 7345, "code": "Enum CmsBroadcast.ContentMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsBroadcast.ContentMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsBroadcast.ContentMode[] values();\n}", "des": "The content mode describes how the text used for a broadcast message should be interpreted."}
{"index": 7346, "code": "Class CmsBroadcastMessage {\n\tjava.lang.String getIcon();\n\t// Returns the message.\n\tjava.lang.String getMessage();\n\t// Returns the time.\n\tjava.lang.String getTime();\n\t// Returns the user.\n\tjava.lang.String getUser();\n}", "des": "Contains the broadcast message data."}
{"index": 7347, "code": "Class CmsBrowserFrame {\n\t// Sets the iFrame name attribute.\n\tjava.lang.String getName();\n\tprotected CmsBrowserFrameState getState();\n\tprotected CmsBrowserFrameState getState​(boolean markAsDirty);\n\t// Returns the iFrame name attribute.\n\tvoid setName​(java.lang.String name);\n}", "des": "Extending the browser frame class to allow setting of the iFrame name attribute."}
{"index": 7348, "code": "Class CmsBrowserFrameState {\n\t// Returns the name.\n\tjava.lang.String getName();\n\t// Sets the name.\n\tvoid setName​(java.lang.String name);\n}", "des": "The browser frame state."}
{"index": 7349, "code": "Class CmsBuiltinPreference.SelectOptions {\n\t// Gets the select option labels.\n\tjava.util.List<java.lang.String> getOptions();\n\t// Gets the selected index.\n\tint getSelectedIndex();\n\t// Gets the select widget values.\n\tjava.util.List<java.lang.String> getValues();\n\t// Creates a configuration string for client-side select widgets from the options.\n\tjava.lang.String toClientSelectWidgetConfiguration();\n}", "des": "A bean representing a set of select options."}
{"index": 7350, "code": "Enum CmsCacheViewApp.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCacheViewApp.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCacheViewApp.Mode[] values();\n}", "des": "Modes to run this app."}
{"index": 7351, "code": "Class CmsCategorySelectDialog {\n\t// Adds a selection handler.\n\tvoid addSelectionHandler​(I_CmsSelectionHandler<java.util.Collection<CmsCategory>> selectionHandler);\n\t// Removes a selection handler.\n\tvoid removeSelectionHandler​(I_CmsSelectionHandler<java.util.Collection<CmsCategory>> selectionHandler);\n\t// Sets the selected categories.\n\tvoid setSelectedCategories​(java.util.Collection<CmsCategory> categories);\n}", "des": "The category select dialog."}
{"index": 7352, "code": "Class CmsCategoryTree {\n\t// Returns the selected categories.\n\tjava.util.Collection<CmsCategory> getSelectedCategories();\n\t// Fills the category tree.\n\tvoid setCategories​(java.util.List<CmsCategory> categories);\n\t// Sets the display mode.\n\tvoid setDisplayOnly​(boolean displayOnly);\n\t// Sets the selected categories.\n\tvoid setSelectedCategories​(java.util.Collection<CmsCategory> categories);\n}", "des": "The category tree."}
{"index": 7353, "code": "Class CmsCategoryTreeEntry {\n\t// Adds a child entry.\n\tvoid addChild​(CmsCategoryTreeEntry child);\n\t// Returns the children.\n\tjava.util.List<CmsCategoryTreeEntry> getChildren();\n\t// Gets the title of the category, or the name if the title is not set.\n\tjava.lang.Object getTitleOrName();\n\t// Sets the children.\n\tvoid setChildren​(java.util.List<CmsCategoryTreeEntry> children);\n}", "des": "Recursive category tree entry."}
{"index": 7354, "code": "Class CmsChangeHandlerConfig {\n\t// Gets the class name for the handler.\n\tjava.lang.String getClassName();\n\t// Gets the configuration string for the handler.\n\tjava.lang.String getConfig();\n\t// Gets the field name for which the handler is configured.\n\tjava.lang.String getField();\n\t// Creates a new handler instance using this configuration and the given scope.\n\tjava.util.Optional<I_CmsXmlContentEditorChangeHandler> newHandler​(java.lang.String scope);\n}", "des": "A configuration bean representing a <ChangeHandler> element configured in an XSD's field settings."}
{"index": 7355, "code": "Class CmsChangePasswordDialog {\n\t// Opens the 2FA verification code dialog for the user if necessary, and passes the code obtained from the dialog to the handler object passed as a parameter.\n\tprotected void maybeCheckSecondFactor​(java.util.function.Consumer<CmsSecondFactorInfo> handler);\n\t// Displays some additional text.\n\tvoid setAdditionalMessage​(java.lang.String text);\n}", "des": "Dialog used to change the password."}
{"index": 7356, "code": "Class CmsChangeTypeDialog {\n\t// Creates type helper which is responsible for generating the type list.\n\tprotected CmsAddDialogTypeHelper createTypeHelper();\n\t// Gets the subtitle for the type info widget.\n\tprotected java.lang.String getSubtitle​(CmsResourceTypeBean type, boolean useDefault);\n\t// Handles selection of a type.\n\tvoid handleSelection​(CmsResourceTypeBean typeBean);\n}", "des": "Dialog for changing the resource type."}
{"index": 7357, "code": "Class CmsChangeTypeDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "The change type dialog action."}
{"index": 7358, "code": "Class CmsClientDateBean {\n\tint compareTo​(java.lang.Object other);\n\t// Returns the date.\n\tlong getDate();\n\t// Returns the dateText.\n\tjava.lang.String getDateText();\n}", "des": "A bean containing a date, both as a 'long' value and a user-readable string representation."}
{"index": 7359, "code": "Class CmsClientLock {\n\t// Returns the lock owner name.\n\tjava.lang.String getLockOwner();\n\t// Returns the lock type.\n\tCmsClientLock.LockType getLockType();\n\t// Returns if the current lock is owned by the current user.\n\tboolean isOwnedByUser();\n\t// Sets the lock owner name.\n\tvoid setLockOwner​(java.lang.String lockOwner);\n\t// Sets the lock type.\n\tvoid setLockType​(CmsClientLock.LockType lockType);\n\t// Sets if the current lock is owned by the current user.\n\tvoid setOwnedByUser​(boolean isOwnedByUser);\n}", "des": "Client side lock class."}
{"index": 7360, "code": "Enum CmsClientProperty.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsClientProperty.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsClientProperty.Mode[] values();\n}", "des": "An enum used for addressing a specific value in a property."}
{"index": 7361, "code": "Enum CmsClientSitemapEntry.EditStatus {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsClientSitemapEntry.EditStatus valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsClientSitemapEntry.EditStatus[] values();\n}", "des": "An enum for the edit status of the entry."}
{"index": 7362, "code": "Enum CmsClientSitemapEntry.EntryType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsClientSitemapEntry.EntryType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsClientSitemapEntry.EntryType[] values();\n}", "des": "An enum for the entry type."}
{"index": 7363, "code": "Class CmsClientUserSettingConverter {\n\t// Loads the current user's preferences into a CmsUserSettingsBean.\n\tCmsUserSettingsBean loadSettings();\n\t// Saves the given user preference values.\n\tvoid saveSettings​(java.util.Map<java.lang.String,​java.lang.String> settings);\n}", "des": "Helper class to deal with loading and saving user preferences from the ADE user interface."}
{"index": 7364, "code": "Class CmsClientVariant {\n\t// Gets the internal name.\n\tjava.lang.String getName();\n\t// Gets the nice name for a locale.\n\tjava.lang.String getNiceName​(java.util.Locale locale);\n\t// Gets the parameters.\n\tjava.util.Map<java.lang.String,​java.lang.String> getParameters();\n\t// Gets the screen height.\n\tint getScreenHeight();\n\t// Gets the screen width.\n\tint getScreenWidth();\n}", "des": "Bean that represents a client variant of a template context."}
{"index": 7365, "code": "Class CmsClientVariantInfo {\n\t// Gets the internal name.\n\tjava.lang.String getName();\n\t// Gets the nice name.\n\tjava.lang.String getNiceName();\n\t// Gets the parameters.\n\tjava.util.Map<java.lang.String,​java.lang.String> getParameters();\n\t// Gets the screen height.\n\tint getScreenHeight();\n\t// Gets the screen width.\n\tint getScreenWidth();\n}", "des": "Client-side bean which holds information about a client variant of a template context."}
{"index": 7366, "code": "Enum CmsCntPageData.ElementDeleteMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCntPageData.ElementDeleteMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCntPageData.ElementDeleteMode[] values();\n}", "des": "The element delte modes."}
{"index": 7367, "code": "Enum CmsCntPageData.ElementReuseMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCntPageData.ElementReuseMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCntPageData.ElementReuseMode[] values();\n}", "des": "Enum representing the different ways dropping elements on a container page can be handled."}
{"index": 7368, "code": "Enum CmsCodeMirror.CodeMirrorTheme {\n\t// Returns the theme name.\n\tjava.lang.String getThemeName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCodeMirror.CodeMirrorTheme valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCodeMirror.CodeMirrorTheme[] values();\n}", "des": "The available editor themes."}
{"index": 7369, "code": "Class CmsCollectorPublishListHelper {\n\t// Computes the collector results.\n\tprotected java.util.List<CmsResource> computeCollectorResults​(boolean online);\n\t// Initializes a CmsObject.\n\tCmsObject getCmsObject​(boolean online);\n\t// Gets the collector to use.\n\tI_CmsResourceCollector getCollector();\n\t// Gets the list to add to the publish list for the collector list.\n\tjava.util.Set<CmsResource> getPublishListFiles();\n}", "des": "Helper class used to determine which resources from a collector list should be included in a publish list."}
{"index": 7370, "code": "Class CmsColumnValueConverter {\n\t// Gets the actual value class which the given type enum represents.\n\tstatic java.lang.Class<?> getColumnClass​(CmsDataViewColumn.Type type);\n\t// Gets the actual column value for the given data value.\n\tstatic java.lang.Object getColumnValue​(java.lang.Object value, CmsDataViewColumn.Type type);\n}", "des": "Converts column values to the correct types."}
{"index": 7371, "code": "Class CmsComplexWidgetData {\n\t// Gets the renderer configuration string.\n\tjava.lang.String getConfiguration();\n\t// Gets information about the external resources which are needed by this widget.\n\tCmsExternalWidgetConfiguration getExternalWidgetConfiguration();\n\t// Gets the renderer name.\n\tjava.lang.String getRendererName();\n}", "des": "Bean which holds the necessary data for complex value widgets in the Acacia editor."}
{"index": 7372, "code": "Class CmsComponentField<T extends com.vaadin.ui.Component> {\n\t// Gets the wrapped component.\n\tT get();\n\t// Convenience method for creating a new instance.\n\tstatic <U extends com.vaadin.ui.Component>CmsComponentField<U> newInstance();\n\t// Sets the wrapped component.\n\tvoid set​(T value);\n}", "des": "Container wrapping a single UI component."}
{"index": 7373, "code": "Class CmsConfigParserUtils {\n\t// Parses the list configuration resource.\n\tstatic CmsConfigurationBean parseListConfiguration​(CmsObject cms, CmsResource res);\n\t// Updates the black list entries in the provided xml content.\n\tstatic CmsXmlContent updateBlackList​(CmsObject cms, CmsXmlContent content, CmsConfigurationBean configBean);\n}", "des": "Utils to read and update the list configuration."}
{"index": 7374, "code": "Enum CmsConfigurationBean.CombinationMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsConfigurationBean.CombinationMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsConfigurationBean.CombinationMode[] values();\n}", "des": "Enum representing how filter queries should be combined in a search."}
{"index": 7375, "code": "Class CmsConfigurationItem {\n\t// Returns the destination folder uri.\n\tCmsResource getFolder();\n\t// Returns a helper object which represents a folder which may still have to be created.\n\tCmsLazyFolder getLazyFolder();\n\t// Returns the file pattern.\n\tjava.lang.String getPattern();\n\t// Gets the source file uri.\n\tCmsResource getSourceFile();\n\t// Returns if this item is default for it's resource-type.\n\tboolean isDefault();\n}", "des": "A single item of the ADE file type configuration."}
{"index": 7376, "code": "Class CmsConfirmSimpleFlushDialog {\n\t// Sets the runnable which should be run to close window.\n\tvoid setCloseRunnable​(java.lang.Runnable closeRunnable);\n\t// Sets the runnable which should be run after ok action.\n\tvoid setOkRunnable​(java.lang.Runnable okRunnable);\n}", "des": "Dialog to confirm flush without any options."}
{"index": 7377, "code": "Enum CmsContainerElement.ModelGroupState {\n\t// Evaluates the given state string.\n\tstatic CmsContainerElement.ModelGroupState evaluate​(java.lang.String state);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsContainerElement.ModelGroupState valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsContainerElement.ModelGroupState[] values();\n}", "des": "The model group states."}
{"index": 7378, "code": "Class CmsContainerpageActionElement {\n\t// Returns the serialized data for the core provider wrapped in a script tag.\n\tjava.lang.String export();\n\t// Returns the serialized data for the core provider.\n\tjava.lang.String exportAll();\n\t// Returns the needed server data for client-side usage.\n\tCmsCntPageData getCntPageData();\n}", "des": "Action element for container-page editor includes."}
{"index": 7379, "code": "Enum CmsContainerPageCopier.CopyMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsContainerPageCopier.CopyMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsContainerPageCopier.CopyMode[] values();\n}", "des": "Enum representing the element copy mode."}
{"index": 7380, "code": "Class CmsContainerPageGalleryData {\n\t// Returns the galleryData.\n\tCmsGalleryDataBean getGalleryData();\n\t// Returns the gallerySearch.\n\tCmsGallerySearchBean getGallerySearch();\n\t// Sets the galleryData.\n\tvoid setGalleryData​(CmsGalleryDataBean galleryData);\n\t// Sets the gallerySearch.\n\tvoid setGallerySearch​(CmsGallerySearchBean gallerySearch);\n}", "des": "Gallery data loaded initially for the 'Add' menu in the page editor."}
{"index": 7381, "code": "Class CmsContainerPageRpcContext {\n\t// Returns the pageStructureId.\n\tCmsUUID getPageStructureId();\n\t// Returns the templateContext.\n\tjava.lang.String getTemplateContext();\n}", "des": "Bean containing the 'context' of the edited container page for use in RPC calls."}
{"index": 7382, "code": "Class CmsContainerPageWrapper {\n\t// Adds an element to the given container (the first container with the given container suffix is used).\n\tboolean addElementToContainer​(java.lang.String containerName, CmsContainerElementBean element);\n\t// Marshals the page data without writing it to the VFS.\n\tbyte[] marshal();\n\t// Gets the mutable page bean instance.\n\tCmsMutableContainerPage page();\n\t// Saves the page data to the VFS, using the same resource from which this object was created.\n\tvoid saveToVfs();\n}", "des": "'Wrapper' around XML container page used for programmatic editing operations on container pages."}
{"index": 7383, "code": "Class CmsContentEditorActionElement {\n\t// Returns the serialized data for the core provider wrapped in a script tag.\n\tjava.lang.String export();\n\t// Returns the serialized data for the core provider.\n\tjava.lang.String exportAll();\n}", "des": "The content editor action element."}
{"index": 7384, "code": "Enum CmsContentTypeVisitor.EvaluationRule {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsContentTypeVisitor.EvaluationRule valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsContentTypeVisitor.EvaluationRule[] values();\n}", "des": "Widget display type evaluation rules."}
{"index": 7385, "code": "Class CmsContextMenu.ContextMenuOpenedOnComponentEvent {\n\t// Returns the context menu.\n\tCmsContextMenu getContextMenu();\n\t// Returns the source component.\n\tcom.vaadin.ui.Component getRequestSourceComponent();\n\t// Returns the client x position.\n\tint getX();\n\t// Returns the client y position.\n\tint getY();\n}", "des": "ContextMenuOpenedOnComponentEvent is an event fired by the context menu when it's opened from a component."}
{"index": 7386, "code": "Class CmsContextMenu.ContextMenuOpenedOnTableFooterEvent {\n\t// Returns the context menu.\n\tCmsContextMenu getContextMenu();\n\t// Returns the property id.\n\tjava.lang.Object getPropertyId();\n}", "des": "ContextMenuOpenedOnTableFooterEvent is an event that is fired by the context menu when it's opened by clicking on table footer"}
{"index": 7387, "code": "Class CmsContextMenu.ContextMenuOpenedOnTableHeaderEvent {\n\t// Returns the context menu.\n\tCmsContextMenu getContextMenu();\n\t// Returns the property id.\n\tjava.lang.Object getPropertyId();\n}", "des": "ContextMenuOpenedOnTableHeaderEvent is an event fired by the context menu when it's opened by clicking on table header row."}
{"index": 7388, "code": "Class CmsContextMenu.ContextMenuOpenedOnTableRowEvent {\n\t// Returns the context menu.\n\tCmsContextMenu getContextMenu();\n\t// Returns the item id.\n\tjava.lang.Object getItemId();\n\t// Returns the property id.\n\tjava.lang.Object getPropertyId();\n}", "des": "ContextMenuOpenedOnTableRowEvent is an event that is fired when context menu is opened by clicking on table row."}
{"index": 7389, "code": "Class CmsContextMenu.ContextMenuOpenedOnTreeItemEvent {\n\t// Returns the context menu.\n\tCmsContextMenu getContextMenu();\n\t// Returns the item id.\n\tjava.lang.Object getItemId();\n}", "des": "ContextMenuOpenedOnTreeItemEvent is an event fired by the context menu when it's opened by clicking on tree item."}
{"index": 7390, "code": "Class CmsContextMenuEditHandler {\n\t// Cancels the edit process.\n\tvoid cancel();\n\t// Saves the value.\n\tvoid save​(java.lang.String value);\n\t// Starts the edit process.\n\tvoid start();\n\tvoid textChange​(com.vaadin.v7.event.FieldEvents.TextChangeEvent event);\n\tvoid validate​(java.lang.Object value);\n}", "des": "Handles inline editing within the file table."}
{"index": 7391, "code": "Class CmsContextMenuItemProviderGroup {\n\t// Adds a new provider class.\n\tvoid addProvider​(java.lang.Class<? extends I_CmsContextMenuItemProvider> providerClass);\n\t// Adds a provider.\n\tvoid addProvider​(I_CmsContextMenuItemProvider instance);\n\t// Gets a list of available context menu items.\n\tjava.util.List<I_CmsContextMenuItem> getMenuItems();\n\t// Initializes this instance.\n\tvoid initialize();\n}", "des": "Class used to manage multiple context menu item providers through a single instance."}
{"index": 7392, "code": "Class CmsCopyDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "The copy move dialog action."}
{"index": 7393, "code": "Enum CmsCopyMoveDialog.Action {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCopyMoveDialog.Action valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCopyMoveDialog.Action[] values();\n}", "des": "The copy/move actions."}
{"index": 7394, "code": "Enum CmsCopyMoveDialog.DialogMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCopyMoveDialog.DialogMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCopyMoveDialog.DialogMode[] values();\n}", "des": "The dialog mode."}
{"index": 7395, "code": "Class CmsCopyPageDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Action for the 'copy page' dialog."}
{"index": 7396, "code": "Class CmsCopyToClipboardState {\n\t// Returns the element selector.\n\tjava.lang.String getSelector();\n\t// Sets the element selector.\n\tvoid setSelector​(java.lang.String selector);\n}", "des": "The copy to clip-board/select text button shared state."}
{"index": 7397, "code": "Class CmsCopyToProjectDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "The copy to project dialog action."}
{"index": 7398, "code": "Enum CmsCoreData.AdeContext {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCoreData.AdeContext valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCoreData.AdeContext[] values();\n}", "des": "A enumeration for the ADE context."}
{"index": 7399, "code": "Enum CmsCoreData.ModuleKey {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCoreData.ModuleKey valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCoreData.ModuleKey[] values();\n}", "des": "The available client modules."}
{"index": 7400, "code": "Class CmsCreateElementData {\n\t// Returns the created element.\n\tCmsContainerElement getCreatedElement();\n\t// Returns the model resources list.\n\tjava.util.List<CmsModelResourceInfo> getModelResources();\n\t// Returns if model selection is needed.\n\tboolean needsModelSelection();\n\t// Sets the created element.\n\tvoid setCreatedElement​(CmsContainerElement createdElement);\n\t// Sets the model resources list.\n\tvoid setModelResources​(java.util.List<CmsModelResourceInfo> modelResources);\n}", "des": "Bean containing the needed data when creating a new resource."}
{"index": 7401, "code": "Class CmsDataViewColumn {\n\t// Gets the column id.\n\tjava.lang.String getId();\n\t// Gets the 'nice name' to display for this column in the table header.\n\tjava.lang.String getNiceName();\n\t// Gets the preferred width of the column in pixels.\n\tint getPreferredWidth();\n\t// Gets the column type.\n\tCmsDataViewColumn.Type getType();\n\t// Returns true if this column should be sortable.\n\tboolean isSortable();\n}", "des": "This class represents the definition of a column for the table widget used to select data items provided by an I_CmsDataView implementation."}
{"index": 7402, "code": "Enum CmsDataViewColumn.Type {\n\t// Gets the value class for this column type.\n\tjava.lang.Class<?> getValueClass();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDataViewColumn.Type valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDataViewColumn.Type[] values();\n}", "des": "The column type."}
{"index": 7403, "code": "Class CmsDataViewParamEncoder {\n\t// Decodes a string.\n\tstatic java.lang.String decodeString​(java.lang.String s);\n\t// Encodes a string.\n\tstatic java.lang.String encodeString​(java.lang.String s);\n}", "des": "Encodes/decodes the configuration passed to the data view popup as a request parameter."}
{"index": 7404, "code": "Class CmsDataViewParams {\n\t// Creates the data view instance.\n\tI_CmsDataView createViewInstance​(CmsObject cms, java.util.Locale locale);\n\t// Return true if the list should have multi-selection enabled.\n\tboolean isMultiSelect();\n\t// Creates the script which calls the callback with the result.\n\tjava.lang.String prepareCallbackScript​(java.util.List<I_CmsDataViewItem> result);\n}", "des": "Class representing the configuration passed to the Vaadin data view dialog by the client."}
{"index": 7405, "code": "Class CmsDataViewResult {\n\t// Gets the total number of results, disregarding paging.\n\tint getHitCount();\n\t// Gets the list of result items.\n\tjava.util.List<I_CmsDataViewItem> getItems();\n}", "des": "Represents the result of a search query returned by an implementation of I_CmsDataView."}
{"index": 7406, "code": "Class CmsDataViewWidget {\n\t// Returns a copy of this widget which has been configured with the given configuration string.\n\tI_CmsComplexWidget configure​(java.lang.String configuration);\n\t// Gets the name of the complex widget.\n\tjava.lang.String getName();\n\t// Gets the data needed for the editor to render the complex widget.\n\tCmsComplexWidgetData getWidgetData​(CmsObject cms);\n\t// Validates the configuration.\n\tvoid validateConfiguration​(java.lang.String configuration);\n}", "des": "Complex widget for opening selecting data from a data source implementing the I_CmsDataView interface."}
{"index": 7407, "code": "Class CmsDateField {\n\t// Converts a Date object to a LocalDateTime object.\n\tstatic java.time.LocalDateTime dateToLocalDateTime​(java.util.Date date);\n\t// Convenience method returning the field value converted to date.\n\tjava.util.Date getDate();\n\t// Converts a LocalDateTime object to a Date object.\n\tstatic java.util.Date localDateTimeToDate​(java.time.LocalDateTime local);\n\t// Convenience method to set the LocalDateTime field value to the given date.\n\tvoid setDate​(java.util.Date date);\n}", "des": "Convenience subclass of PopupDateField which comes preconfigured with a resolution and validation error message."}
{"index": 7408, "code": "Class CmsDateResourceComparator {\n\t// Calculates the date to use for comparison of this resource based on the given date identifiers.\n\tstatic long calculateDate​(CmsObject cms, CmsResource resource, java.util.List<java.lang.String> dateIdentifiers, long defaultValue);\n\tint compare​(CmsResource res0, CmsResource res1);\n\t// Returns the date of this resource comparator key.\n\tlong getDate();\n}", "des": "Comparator for sorting resource objects based on dates."}
{"index": 7409, "code": "Class CmsDavSessionProvider {\n\t// Authorizes the user using HTTP BASIC authentication, and if successful, attaches the created session to the request\n\tboolean attachSession​(org.apache.jackrabbit.webdav.WebdavRequest request);\n\tvoid releaseSession​(org.apache.jackrabbit.webdav.WebdavRequest request);\n\t// Sets the repository.\n\tvoid setRepository​(A_CmsRepository repository);\n}", "des": "Session provider implementation."}
{"index": 7410, "code": "Class CmsDbContextFactory {\n\t// Returns a new database context.\n\tCmsDbContext getDbContext();\n\t// Returns a new database context based on the given user request context.\n\tCmsDbContext getDbContext​(CmsRequestContext context);\n\t// Initializes the runtime info factory with the OpenCms driver manager.\n\tvoid initialize​(CmsDriverManager driverManager);\n}", "des": "A default implementation of I_CmsDbContextFactory."}
{"index": 7411, "code": "Class CmsDbExportApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "Class for the database export function."}
{"index": 7412, "code": "Enum CmsDbImportApp.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDbImportApp.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDbImportApp.Mode[] values();\n}", "des": "Enumeration to distinguist between http- and server import."}
{"index": 7413, "code": "Class CmsDbPropertiesApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "Class for the property definition app."}
{"index": 7414, "code": "Class CmsDbRemovePubLocksApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "App for the remove publish-locks function."}
{"index": 7415, "code": "Class CmsDbSqlException {\n\t// Creates a copied instance of this localized exception.\n\tCmsException createException​(CmsMessageContainer container, java.lang.Throwable cause);\n\t// Returns the query that let the statement crash.\n\tstatic java.lang.String getErrorQuery​(java.sql.Statement stmt);\n}", "des": "Used to signal sql related issues."}
{"index": 7416, "code": "Class CmsDbStaticExportApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "Class for the database static export app."}
{"index": 7417, "code": "Class CmsDecorationMap {\n\tint compareTo​(CmsDecorationMap o);\n\tboolean equals​(java.lang.Object obj);\n\t// Returns the decorationMap.\n\tjava.util.Map<java.lang.String,​CmsDecorationObject> getDecorationMap();\n\t// Returns the locale.\n\tjava.util.Locale getLocale();\n\t// Returns the name.\n\tjava.lang.String getName();\n\t// Sets the decorationMap.\n\tvoid setDecorationMap​(java.util.Map<java.lang.String,​CmsDecorationObject> decorationMap);\n}", "des": "The CmsDecorationMap is the object representation of a single decoartion file."}
{"index": 7418, "code": "Class CmsDecorationObject {\n\t// Gets the decorated content for this decoration object.\n\tjava.lang.String getContentDecoration​(I_CmsDecoratorConfiguration config, java.lang.String text, java.lang.String contentLocale);\n\t// Returns the decoration.\n\tjava.lang.String getDecoration();\n\t// Returns the decorationDefinition.\n\tCmsDecorationDefintion getDecorationDefinition();\n\t// Returns the decorationKey.\n\tjava.lang.String getDecorationKey();\n}", "des": "The CmsDecorationObject defines a single text decoration."}
{"index": 7419, "code": "Class CmsDefaultActionHandler {\n\t// Triggered when the 'add' button is clicked.\n\tvoid onAdd();\n\t// Triggered when the 'delete' button is clicked.\n\tvoid onDelete();\n\t// Triggered when the 'down' button is clicked.\n\tvoid onDown();\n\t// Triggered when the 'edit' button is clicked.\n\tvoid onEdit();\n\t// Triggered when the 'up' button is clicked.\n\tvoid onUp();\n}", "des": "Default action handler for group buttons."}
{"index": 7420, "code": "Class CmsDefaultComplexWidget {\n\t// Returns a copy of this widget which has been configured with the given configuration string.\n\tI_CmsComplexWidget configure​(java.lang.String configuration);\n\t// Gets the name of the complex widget.\n\tjava.lang.String getName();\n\t// Gets the data needed for the editor to render the complex widget.\n\tCmsComplexWidgetData getWidgetData​(CmsObject cms);\n}", "des": "Dummy widget class that causes the Acacia editor to render a nested content normally without a special widget."}
{"index": 7421, "code": "Class CmsDefaultLocaleHandler {\n\t// Returns the i18n information to use in the request context.\n\tCmsI18nInfo getI18nInfo​(javax.servlet.http.HttpServletRequest req, CmsUser user, CmsProject project, java.lang.String resourceName);\n\t// Will be called during system startup.\n\tvoid initHandler​(CmsObject cms);\n}", "des": "Default implementation of the locale handler."}
{"index": 7422, "code": "Class CmsDefaultPasswordGenerator {\n\t// Returns random password.\n\tjava.lang.String getRandomPassword();\n\t// Generates a random password.\n\tjava.lang.String getRandomPassword​(int countTotal, int countCapitals, int countSpecials);\n\t// Get a random password.\n\tstatic java.lang.String getRandomPWD();\n\t// Get a random password.\n\tstatic java.lang.String getRandomPWD​(int countTotal, int countCapitals, int countSpecials);\n}", "des": "Default Password Generator class."}
{"index": 7423, "code": "Class CmsDefaultPermissionHandler {\n\t// Performs a non-blocking permission check on a resource.\n\tI_CmsPermissionHandler.CmsPermissionCheckResult hasPermissions​(CmsDbContext dbc, CmsResource resource, CmsPermissionSet requiredPermissions, I_CmsPermissionHandler.LockCheck checkLock, CmsResourceFilter filter);\n\t// Initializes internal variables needed to work.\n\tvoid init​(CmsDriverManager driverManager, CmsSystemConfiguration systemConfiguration);\n}", "des": "Generic base driver interface."}
{"index": 7424, "code": "Class CmsDefaultProfilingHandler {\n\t// Adds a handler.\n\tvoid addHandler​(I_CmsProfilingHandler handler);\n\t// Adds measured method call duration.\n\tvoid putTime​(java.lang.String key, long nanos);\n\t// Removes a handler.\n\tvoid removeHandler​(I_CmsProfilingHandler handler);\n}", "des": "Default profiling handler which only has a single instance and delegates method calls to its registered child handlers."}
{"index": 7425, "code": "Class CmsDefaultPublishGroupHelper {\n\t// Creates a named group of resources.\n\tprotected CmsPublishGroup createGroup​(java.lang.String name, java.util.List<CmsPublishResource> resources);\n\t// Gets the last modification date of a resource.\n\tprotected long getDateLastModified​(CmsPublishResource res);\n\t// Gets the root path of a resource.\n\tprotected java.lang.String getRootPath​(CmsPublishResource res);\n}", "des": "Default implementation of the publish group helper which operates on CmsPublishResource objects."}
{"index": 7426, "code": "Interface CmsDefaultPublishResourceFormatter.I_PublishResourceValidator {\n\t// Finds the resources which should be excluded.\n\tjava.util.Set<CmsResource> findInvalidResources​(java.util.Set<CmsResource> input);\n\t// Gets the status information for an excluded resource.\n\tCmsPublishResourceInfo getInfoForResource​(CmsResource resource);\n}", "des": "Validator which can exclude some resources from publishing and supplies a status object for the excluded resources."}
{"index": 7427, "code": "Class CmsDefaultToolHandler {\n\t// Returns the state of the admin tool for a given cms context.\n\tboolean isEnabled​(CmsObject cms);\n\t// Returns the visibility flag for a given cms context.\n\tboolean isVisible​(CmsObject cms);\n}", "des": "Default admin tool handler."}
{"index": 7428, "code": "Enum CmsDefaultUserSettings.SubsitemapCreationMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDefaultUserSettings.SubsitemapCreationMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDefaultUserSettings.SubsitemapCreationMode[] values();\n}", "des": "Enum for the subsitemap creation mode."}
{"index": 7429, "code": "Enum CmsDefaultXmlContentHandler.InvalidRelationAction {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDefaultXmlContentHandler.InvalidRelationAction valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDefaultXmlContentHandler.InvalidRelationAction[] values();\n}", "des": "Enum for IfInvalidRelation field setting values."}
{"index": 7430, "code": "Class CmsDefaultXmlContentHandler.VisibilityConfiguration {\n\t// Returns the visibility handler instance.\n\tI_CmsXmlContentVisibilityHandler getHandler();\n\t// Returns the visibility handler configuration parameters.\n\tjava.lang.String getParams();\n}", "des": "Contains the visibility handler configuration for a content field path."}
{"index": 7431, "code": "Class CmsDelayedDefaultChangeHandler {\n\t// Handles the content change.\n\tCmsXmlContent handleChange​(CmsObject cms, CmsXmlContent content, java.util.Locale locale, java.util.Collection<java.lang.String> changedPaths);\n\t// Sets the configuration.\n\tvoid setConfiguration​(java.lang.String configuration);\n}", "des": "A change handler that reacts to changes in a field by setting another empty field to a default value."}
{"index": 7432, "code": "Class CmsDeleteDialog {\n\t// Gets the broken links.\n\tstatic com.google.common.collect.Multimap<CmsResource,​CmsResource> getBrokenLinks​(CmsObject cms, java.util.List<CmsResource> selectedResources, boolean includeSiblings);\n\t// Gets the broken links.\n\tstatic com.google.common.collect.Multimap<CmsResource,​CmsResource> getBrokenLinks​(CmsObject cms, java.util.List<CmsResource> selectedResources, boolean includeSiblings, boolean reverse);\n}", "des": "Dialog for deleting resources."}
{"index": 7433, "code": "Class CmsDeleteResourceBean {\n\t// Returns the broken links.\n\tjava.util.List<CmsBrokenLinkBean> getBrokenLinks();\n\t// Returns the pageInfo.\n\tCmsListInfoBean getPageInfo();\n\t// Returns the sitePath.\n\tjava.lang.String getSitePath();\n\t// Sets the broken links.\n\tvoid setBrokenLinks​(java.util.List<CmsBrokenLinkBean> brokenLinks);\n\t// Sets the pageInfo.\n\tvoid setPageInfo​(CmsListInfoBean pageInfo);\n\t// Sets the sitePath.\n\tvoid setSitePath​(java.lang.String sitePath);\n}", "des": "A bean which represents the information for the delete dialog."}
{"index": 7434, "code": "Class CmsDeleteSiteDialog {\n\t// Creates content of dialog containing CheckBox if resources should be deleted and a messages.\n\tprotected com.vaadin.v7.ui.VerticalLayout getContent();\n\t// delete sites.\n\tprotected void submit();\n}", "des": "Dialog for deleting Sites."}
{"index": 7435, "code": "Class CmsDependentSelectWidget {\n\t// Returns the configuration string for the ADE content editor widget.\n\tjava.lang.String getConfiguration​(CmsObject cms, A_CmsXmlContentValue schemaType, CmsMessages messages, CmsResource resource, java.util.Locale contentLocale);\n\t// Returns the class name of the widget.\n\tjava.lang.String getWidgetName();\n\t// Creates a duplicate of this widget instance.\n\tI_CmsWidget newInstance();\n}", "des": "Server-side part of the dependent select box widget."}
{"index": 7436, "code": "Class CmsDetailOnlyContainerPageBuilder {\n\t// Adds a resource to a container as an element.\n\tvoid addContainerElement​(java.lang.String name, CmsResource resource);\n\t// Builds the container page bean.\n\tCmsContainerPageBean build();\n\t// Sets the type of a container.\n\tvoid setContainerType​(java.lang.String name, java.lang.String type);\n\t// Sets the width of a container.\n\tvoid setContainerWidth​(java.lang.String name, java.lang.String width);\n}", "des": "This is a simple helper class to more easily produce container page beans to be used as detail-only containers."}
{"index": 7437, "code": "Class CmsDetailPageDuplicateEliminatingSitemapGenerator {\n\t// Adds the detail page links for a given page to the results.\n\tprotected void addDetailLinks​(CmsResource containerPage, java.util.Locale locale);\n\t// Generates a list of XML sitemap entry beans for the root folder which has been set in the constructor.\n\tjava.util.List<CmsXmlSitemapUrlBean> generateSitemapBeans();\n}", "des": "Sitemap generator class which tries to eliminate duplicate detail pages for the same content and locale."}
{"index": 7438, "code": "Enum CmsDetailPageTable.Status {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDetailPageTable.Status valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDetailPageTable.Status[] values();\n}", "des": "A type indicating the status of a page."}
{"index": 7439, "code": "Class CmsDiagnosticsMXBean {\n\t// Contains a textual representation of the current requests running in the OpenCmsServlet.\n\tjava.lang.String listActiveRequests();\n\t// Registers an MBean of this class.\n\tstatic void register();\n}", "des": "Bean for special diagnostic information retrievable via JMX."}
{"index": 7440, "code": "Class CmsDialogOptions {\n\t// Returns the info.\n\tjava.lang.String getInfo();\n\t// Returns the options.\n\tjava.util.List<CmsDialogOptions.Option> getOptions();\n\t// Returns the dialog title.\n\tjava.lang.String getTitle();\n}", "des": "Option dialog data."}
{"index": 7441, "code": "Class CmsDialogOptions.Option {\n\t// Returns the description.\n\tjava.lang.String getDescription();\n\t// Returns the label.\n\tjava.lang.String getLabel();\n\t// Returns the value.\n\tjava.lang.String getValue();\n\t// Returns if the option is disabled.\n\tboolean isDisabled();\n}", "des": "Describes a dialog option."}
{"index": 7442, "code": "Class CmsDialogOptionsAndInfo {\n\t// Gets the list info bean for the selected resource.\n\tCmsListInfoBean getInfo();\n\t// Gets the dialog option bean.\n\tCmsDialogOptions getOptions();\n}", "des": "Holds both a bean containing edit handler dialog options and a resource info bean for a selected resource."}
{"index": 7443, "code": "Class CmsDiffViewMode {\n\t// Returns the mode string.\n\tjava.lang.String getMode();\n\t// Returns the name to show.\n\tCmsMessageContainer getName();\n\t// Parses an string into an element of this enumeration.\n\tstatic CmsDiffViewMode valueOf​(java.lang.String value);\n}", "des": "Wrapper class for the different types of diff modes."}
{"index": 7444, "code": "Class CmsDirectEditButtonSelection {\n\t// Returns true if the \"delete\" button should be displayed.\n\tboolean isShowDelete();\n\t// Returns true if the \"edit\" button should be displayed.\n\tboolean isShowEdit();\n\t// Returns true if the \"new\" button should be displayed.\n\tboolean isShowNew();\n}", "des": "Constants to indicate which direct edit buttons should be displayed for a direct edit resource if the user has the permissions."}
{"index": 7445, "code": "Class CmsDirectEditResourceInfo {\n\t// Returns the lock on the direct edit resource.\n\tCmsLock getLock();\n\t// Returns the direct edit permissions of the resource.\n\tCmsDirectEditPermissions getPermissions();\n\t// Returns the resource that is to be direct edited.\n\tCmsResource getResource();\n}", "des": "Contains information about a resource that is direct edited."}
{"index": 7446, "code": "Class CmsDirectPublishDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "The direct publish dialog action."}
{"index": 7447, "code": "Enum CmsDisplayType {\n\t// Gets the display type corresponding to a given width.\n\tstatic CmsDisplayType getDisplayType​(int width);\n\t// Gets the minimum window width for this size.\n\tint minWidth();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDisplayType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDisplayType[] values();\n}", "des": "Represents the three possible display types (small, medium, wide)."}
{"index": 7448, "code": "Enum CmsDocumentDependency.DependencyType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDocumentDependency.DependencyType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDocumentDependency.DependencyType[] values();\n}", "des": "Defines the possible dependency types."}
{"index": 7449, "code": "Class CmsDocumentGeneric {\n\t// Just returns an empty extraction result since the content can't be extracted form a generic resource.\n\tI_CmsExtractionResult extractContent​(CmsObject cms, CmsResource resource, I_CmsSearchIndex index);\n\t// Returns true if this document factory is locale depended.\n\tboolean isLocaleDependend();\n\t// Returns true if result caching is supported for this factory.\n\tboolean isUsingCache();\n}", "des": "Lucene document factory class for indexing data from a generic CmsResource."}
{"index": 7450, "code": "Class CmsDocumentHtml {\n\t// Returns the raw text content of a given VFS resource containing HTML data.\n\tI_CmsExtractionResult extractContent​(CmsObject cms, CmsResource resource, I_CmsSearchIndex index);\n\t// Returns true if this document factory is locale depended.\n\tboolean isLocaleDependend();\n\t// Returns true if result caching is supported for this factory.\n\tboolean isUsingCache();\n}", "des": "Lucene document factory class to extract index data from a cms resource containing plain html data."}
{"index": 7451, "code": "Class CmsDocumentMsOfficeOLE2 {\n\t// Returns the raw text content of a given vfs resource containing MS Word data.\n\tI_CmsExtractionResult extractContent​(CmsObject cms, CmsResource resource, I_CmsSearchIndex index);\n\t// Returns true if this document factory is locale depended.\n\tboolean isLocaleDependend();\n\t// Returns true if result caching is supported for this factory.\n\tboolean isUsingCache();\n}", "des": "Lucene document factory class to extract text data from a VFS resource that is an OLE 2 MS Office document."}
{"index": 7452, "code": "Class CmsDocumentMsOfficeOOXML {\n\t// Returns the raw text content of a given vfs resource containing MS Word data.\n\tI_CmsExtractionResult extractContent​(CmsObject cms, CmsResource resource, I_CmsSearchIndex index);\n\t// Returns true if this document factory is locale depended.\n\tboolean isLocaleDependend();\n\t// Returns true if result caching is supported for this factory.\n\tboolean isUsingCache();\n}", "des": "Lucene document factory class to extract text data from a VFS resource that is an OOXML MS Office document."}
{"index": 7453, "code": "Class CmsDocumentOpenOffice {\n\t// Returns the raw text content of a given vfs resource containing MS Word data.\n\tI_CmsExtractionResult extractContent​(CmsObject cms, CmsResource resource, I_CmsSearchIndex index);\n\t// Returns true if this document factory is locale depended.\n\tboolean isLocaleDependend();\n\t// Returns true if result caching is supported for this factory.\n\tboolean isUsingCache();\n}", "des": "Lucene document factory class to extract index data from a cms resource containing Open Document Format data."}
{"index": 7454, "code": "Class CmsDocumentPdf {\n\t// Returns the raw text content of a given vfs resource containing Adobe PDF data.\n\tI_CmsExtractionResult extractContent​(CmsObject cms, CmsResource resource, I_CmsSearchIndex index);\n\t// Returns true if this document factory is locale depended.\n\tboolean isLocaleDependend();\n\t// Returns true if result caching is supported for this factory.\n\tboolean isUsingCache();\n}", "des": "Lucene document factory class to extract index data from a cms resource containing Adobe pdf data."}
{"index": 7455, "code": "Class CmsDocumentPlainText {\n\t// Returns the raw text content of a given vfs resource containing plain text data.\n\tI_CmsExtractionResult extractContent​(CmsObject cms, CmsResource resource, I_CmsSearchIndex index);\n\t// Returns true if this document factory is locale depended.\n\tboolean isLocaleDependend();\n\t// Returns true if result caching is supported for this factory.\n\tboolean isUsingCache();\n}", "des": "Lucene document factory class to extract index data from a cms resource containing plain text data."}
{"index": 7456, "code": "Class CmsDocumentRtf {\n\t// Returns the raw text content of a given vfs resource containing RTF data.\n\tI_CmsExtractionResult extractContent​(CmsObject cms, CmsResource resource, I_CmsSearchIndex index);\n\t// Returns true if this document factory is locale depended.\n\tboolean isLocaleDependend();\n\t// Returns true if result caching is supported for this factory.\n\tboolean isUsingCache();\n}", "des": "Lucene document factory class to extract index data from a cms resource containing RTF data."}
{"index": 7457, "code": "Class CmsDocumentXmlPage {\n\t// Returns the raw text content of a given vfs resource of type CmsResourceTypeXmlPage.\n\tI_CmsExtractionResult extractContent​(CmsObject cms, CmsResource resource, I_CmsSearchIndex index);\n\t// Returns true if this document factory is locale depended.\n\tboolean isLocaleDependend();\n\t// Returns true if result caching is supported for this factory.\n\tboolean isUsingCache();\n}", "des": "Lucene document factory class to extract index data from a cms resource of type CmsResourceTypeXmlPage."}
{"index": 7458, "code": "Class CmsDownloadGalleryWidget {\n\t// Returns the lower case name of the gallery, for example \"html\".\n\tjava.lang.String getNameLower();\n\t// Returns the upper case name of the gallery, for example \"Html\".\n\tjava.lang.String getNameUpper();\n\t// Returns the class name of the widget.\n\tjava.lang.String getWidgetName();\n\t// Creates a duplicate of this widget instance.\n\tI_CmsWidget newInstance();\n\t// Returns true if the preview button should be shown.\n\tboolean showPreview​(java.lang.String value);\n}", "des": "Provides a widget that allows access to the available OpenCms download galleries, for use on a widget dialog."}
{"index": 7459, "code": "Enum CmsDriverManager.LoginUserMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDriverManager.LoginUserMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDriverManager.LoginUserMode[] values();\n}", "des": "Enum for distinguishing between login modes."}
{"index": 7460, "code": "Class CmsDriverManager.ResourceOUCacheKey {\n\tboolean equals​(java.lang.Object obj);\n\t// Gets the stored DB context.\n\tCmsDbContext getDbContext();\n\t// Gets the current driver manager.\n\tCmsDriverManager getDriverManager();\n}", "des": "Special key class for caching the resource OU data with a Guava LoadingCache."}
{"index": 7461, "code": "Class CmsDuplicateRemovingLogBuffer {\n\t// Adds a new log entry.\n\tvoid add​(java.lang.String channel, java.lang.String level, java.lang.String message);\n\t// Dumps all collected log entries to their respective logs, with duplicates removed.\n\tvoid flush();\n}", "des": "Class used to collect log messages and later write them to the actual log but with duplicates removed."}
{"index": 7462, "code": "Class CmsDuplicateRemovingLogBuffer.Entry {\n\tboolean equals​(java.lang.Object obj);\n\t// Gets the log channel.\n\tjava.lang.String getChannel();\n\t// Gets the log level.\n\tjava.lang.String getLevel();\n\t// Gets the log message.\n\tjava.lang.String getMessage();\n}", "des": "Entry to write to the log."}
{"index": 7463, "code": "Class CmsDynamicCategoryFieldList {\n\t// Adds a path.\n\tvoid add​(java.lang.String path);\n\t// Tries to add the collected fields to all locales of the given content.\n\tvoid ensureFields​(CmsObject cms, CmsXmlContent content);\n\t// Tries to add the collected fields to one locale of the given content.\n\tvoid ensureFields​(CmsObject cms, CmsXmlContent content, java.util.Locale locale);\n}", "des": "Class used to keep track of optional dynamic category fields for a content."}
{"index": 7464, "code": "Class CmsDynamicFunctionFormatWrapper {\n\t// Check if this format is actually valid, i.e.\n\tboolean getExists();\n\t// Gets the jsp site path for this dynamic function format.\n\tjava.lang.String getJsp();\n\t// Gets the parameters for this dynamic function format.\n\tjava.util.Map<java.lang.String,​java.lang.String> getParam();\n\t// Gets the parameters for this dynamic function format.\n\tjava.util.Map<java.lang.String,​java.lang.String> getParameters();\n}", "des": "Wrapper class for dynamic function formats which can be used from JSP EL."}
{"index": 7465, "code": "Class CmsEditableGroup.AddButtonEmptyHandler {\n\t// Needs to be called initially with the group for which this is used.\n\tvoid init​(CmsEditableGroup group);\n\t// Called when the group changes from empty to not empty, or vice versa.\n\tvoid setEmpty​(boolean empty);\n}", "des": "Empty handler which shows or hides an 'Add' button to add new rows, depending on whether the group is empty."}
{"index": 7466, "code": "Interface CmsEditableGroup.I_EmptyHandler {\n\t// Needs to be called initially with the group for which this is used.\n\tvoid init​(CmsEditableGroup group);\n\t// Called when the group changes from empty to not empty, or vice versa.\n\tvoid setEmpty​(boolean empty);\n}", "des": "Handles state changes when the group becomes empty/not empty."}
{"index": 7467, "code": "Class CmsEditableGroupButtons {\n\tCmsEditableGroupButtonsState getState();\n\t// Called when user clicks on 'Add' button.\n\tvoid onAdd();\n\t// Called when user clicks on 'Delete' button.\n\tvoid onDelete();\n\t// Called when user clicks on 'Down' button.\n\tvoid onDown();\n\t// Called when user clicks on the 'Edit' button.\n\tvoid onEdit();\n\t// Called when user clicks on 'Up' button.\n\tvoid onUp();\n\t// Sets the 'first' and 'last' status of the button bar.\n\tvoid setFirstLast​(boolean first, boolean last, boolean hideAdd);\n}", "des": "Button bar for manipulating rows in a multivalued field list."}
{"index": 7468, "code": "Class CmsEditableGroupRow {\n\t// Gets the button bar.\n\tCmsEditableGroupButtons getButtonBar();\n\t// Returns the input field.\n\tcom.vaadin.ui.Component getComponent();\n}", "des": "Default implementation for row for multivalue field lists."}
{"index": 7469, "code": "Class CmsEditCodeDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "The edit control code dialog action."}
{"index": 7470, "code": "Class CmsEditContentAction {\n\t// Returns the file parameter.\n\tprotected java.lang.String getFileParam();\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current dialog context.\n\tCmsMenuItemVisibilityMode getVisibility​(I_CmsDialogContext context);\n}", "des": "Action to logout."}
{"index": 7471, "code": "Class CmsEditHandlerData {\n\t// Gets the client id of the element.\n\tjava.lang.String getClientId();\n\t// Gets the option chosen by the user.\n\tjava.lang.String getOption();\n\t// Gets the container page's structure id.\n\tCmsUUID getPageContextId();\n\t// Gets the string containing the request parameters from the URL.\n\tjava.lang.String getRequestParams();\n}", "des": "Data which needs to be passed to the edit handler when using the 'new' button for an editable list element."}
{"index": 7472, "code": "Class CmsEditLoginView {\n\t// Gets end time from formular.\n\tprotected long getEnd();\n\t// Gets start time from formular.\n\tprotected long getStart();\n\t// Checks if formular is valid.\n\tprotected boolean isFormValid();\n\t// Saves the settings.\n\tprotected void submit();\n}", "des": "Class for the Edit Login View."}
{"index": 7473, "code": "Class CmsEditorChangeHandlerProperty {\n\t// Handles the content change.\n\tCmsXmlContent handleChange​(CmsObject cms, CmsXmlContent content, java.util.Locale locale, java.util.Collection<java.lang.String> changedPaths);\n\t// Sets the configuration.\n\tvoid setConfiguration​(java.lang.String configuration);\n}", "des": "Handles editor content changes to read OpenCms resource properties and insert their values into the edited content."}
{"index": 7474, "code": "Class CmsEditorCssHandlerDefault {\n\t// Returns the absolute VFS path of the CSS style sheet to use.\n\tjava.lang.String getUriStyleSheet​(CmsObject cms, java.lang.String editedResourcePath);\n\t// Checks if the handler can be used to determine the CSS style sheet based on the edited resource.\n\tboolean matches​(CmsObject cms, java.lang.String editedResourcePath);\n}", "des": "A default editor CSS handler to obtain the CSS style sheet path from the template property value of the template itself."}
{"index": 7475, "code": "Class CmsEditorHandler {\n\t// Returns the editor URI which will be used for the selected resource in the OpenCms VFS to the editor selector class.\n\tjava.lang.String getEditorUri​(java.lang.String resource, CmsJspActionElement jsp);\n\t// Returns the editor URI which will be used for the selected resource type.\n\tjava.lang.String getEditorUri​(CmsObject cms, java.lang.String resourceType, java.lang.String userAgent, boolean loadDefault);\n}", "des": "This editor handler class returns the editor URI depending on various factors."}
{"index": 7476, "code": "Class CmsEditorStateExtension {\n\t// Returns whether the editor has content changes.\n\tboolean hasChanges();\n\t// Sets the editor changed state\n\tvoid setHasChanges​(boolean hasChanges);\n}", "des": "Extension for iFrame embedded editors storing the changed state of the edited content."}
{"index": 7477, "code": "Class CmsEditProviderActionElement {\n\t// Returns the serialized data for the core provider wrapped in a script tag.\n\tjava.lang.String export();\n\t// Returns the serialized data for the core provider.\n\tjava.lang.String exportAll();\n}", "des": "Action element for edit provider includes."}
{"index": 7478, "code": "Class CmsEditResourceTypeDialog {\n\t// Sets the visibility of the icon fields.\n\tprotected void setVisibilityOfIconFields();\n\t// Submit changes.\n\tprotected void submit​(com.vaadin.ui.Window window, CmsResourceTypeApp app);\n}", "des": "Class for the edit resource type dialog."}
{"index": 7479, "code": "Class CmsElementComparison {\n\tint compareTo​(CmsElementComparison diffItem);\n\tboolean equals​(java.lang.Object o);\n\t// Returns the locale.\n\tjava.util.Locale getLocale();\n\t// Sets the locale.\n\tvoid setLocale​(java.util.Locale locale);\n}", "des": "Comparison of two xml page elements."}
{"index": 7480, "code": "Class CmsElementLockInfo {\n\t// Gets the lock owner id.\n\tCmsUUID getLockOwner();\n\t// Returns true if the resource is locked.\n\tboolean isLocked();\n\t// Returns true if the resource is a publish lock.\n\tboolean isPublishLock();\n}", "des": "Contains lock information for a container page element."}
{"index": 7481, "code": "Class CmsElementSettingsConfig {\n\t// Gets the additional info items.\n\tjava.util.ArrayList<CmsAdditionalInfoBean> getAdditionalInfo();\n\t// Gets the element data.\n\tCmsContainerElementData getElementData();\n\t// Gets the schema path.\n\tjava.lang.String getSchema();\n\t// The state.\n\tCmsResourceState getState();\n}", "des": "Represents the setting configuration for a container element."}
{"index": 7482, "code": "Class CmsElementViewInfo {\n\t// Returns the element view id.\n\tCmsUUID getElementViewId();\n\t// Gets the id of the root view of this view.\n\tCmsUUID getRootViewId();\n\t// Returns the title.\n\tjava.lang.String getTitle();\n\t// Returns true if this is a root view.\n\tboolean isRoot();\n\t// Sets the parent view bean.\n\tvoid setParent​(CmsElementViewInfo parent);\n}", "des": "Element view info."}
{"index": 7483, "code": "Class CmsElementViewPreference {\n\t// Gets the nice name key.\n\tjava.lang.String getNiceName();\n\t// Gets the user-independent property configuration.\n\tCmsXmlContentProperty getPropertyDefinition();\n\t// Gets the metadata describing how the setting should be edited.\n\tCmsXmlContentProperty getPropertyDefinition​(CmsObject cms);\n}", "des": "Element view preference configuration."}
{"index": 7484, "code": "Class CmsElementViewSelectWidget {\n\t// Creates a duplicate of this widget instance.\n\tI_CmsWidget newInstance();\n\t// Returns the list of configured select options, parsing the configuration String if required.\n\tprotected java.util.List<CmsSelectWidgetOption> parseSelectOptions​(CmsObject cms, I_CmsWidgetDialog widgetDialog, I_CmsWidgetParameter param);\n}", "des": "A widget to select an element view."}
{"index": 7485, "code": "Class CmsElementWithAttrsParamConfigHelper {\n\t// Adds the configuration parsing rules to the digester.\n\tvoid addRules​(org.apache.commons.digester3.Digester digester);\n\t// Generates the XML configuration from the given configuration object.\n\tvoid generateXml​(org.dom4j.Element parent, I_CmsConfigurationParameterHandler config);\n\t// Gets the xPath of the configuration element.\n\tjava.lang.String getBasePath();\n}", "des": "Helper class for parsing an element with no content but several attributes into a subclass of I_CmsConfigurationParameterHandler."}
{"index": 7486, "code": "Class CmsElementWithSubElementsParamConfigHelper {\n\t// Adds the configuration parsing rules to the digester.\n\tvoid addRules​(org.apache.commons.digester3.Digester digester);\n\t// Generates the XML configuration from the given configuration object.\n\tvoid generateXml​(org.dom4j.Element parent, I_CmsConfigurationParameterHandler config);\n\t// Gets the xPath of the configuration element.\n\tjava.lang.String getBasePath();\n}", "des": "Helper class for parsing an element with several sub-elements which are text-valued (i.e."}
{"index": 7487, "code": "Class CmsEmbeddedDialogsUI {\n\t// Returns the context path for embedded dialogs.\n\tstatic java.lang.String getEmbeddedDialogsContextPath();\n\tjava.util.Locale getLocale();\n\tprotected void init​(com.vaadin.server.VaadinRequest request);\n\t// Loads the dialog for the given dialog information.\n\tvoid loadDialog​(java.lang.String dialogInfo);\n\t// Reloads the current UI.\n\tvoid reload();\n}", "des": "Separate UI for VAADIN based dialog embedded into a GWT module."}
{"index": 7488, "code": "Enum CmsEntityChangeEvent.ChangeType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsEntityChangeEvent.ChangeType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsEntityChangeEvent.ChangeType[] values();\n}", "des": "Enum indicating the type of changes."}
{"index": 7489, "code": "Class CmsEntityHtml {\n\t// Returns the HTML representation.\n\tjava.lang.String getHtmlContent();\n\t// Returns the validation result.\n\tCmsValidationResult getValidationResult();\n}", "des": "The entity HTML representation including validation data."}
{"index": 7490, "code": "Class CmsErrorDialog {\n\t// Shows the error dialog.\n\tstatic void showErrorDialog​(java.lang.String message, java.lang.Throwable t);\n\t// Shows the error dialog.\n\tstatic void showErrorDialog​(java.lang.String message, java.lang.Throwable t, java.lang.Runnable onClose);\n\t// Shows the error dialog.\n\tstatic void showErrorDialog​(java.lang.Throwable t);\n\t// Shows the error dialog.\n\tstatic void showErrorDialog​(java.lang.Throwable t, java.lang.Runnable onClose);\n}", "des": "Dialog used to display error stack traces in the workplace."}
{"index": 7491, "code": "Class CmsEvent {\n\tboolean equals​(java.lang.Object obj);\n\t// Provides access to the event data that was passed with this event.\n\tjava.util.Map<java.lang.String,​java.lang.Object> getData();\n\t// Provides access to the event type that was passed with this event.\n\tint getType();\n\t// Provides access to the event type as Integer.\n\tjava.lang.Integer getTypeInteger();\n}", "des": "Event class for OpenCms for system wide events that are thrown by various operations (e.g."}
{"index": 7492, "code": "Class CmsExceptionSafeHandlerWrapper {\n\t// Gets the sort order for this handler.\n\tdouble getOrder();\n\t// Returns true if the handler matches the given context.\n\tboolean matches​(CmsJsonHandlerContext context);\n\t// Renders the JSON.\n\tCmsJsonResult renderJson​(CmsJsonHandlerContext context);\n}", "des": "Wrapper around a JSON handler that catches exceptions."}
{"index": 7493, "code": "Class CmsExpiringValue<T> {\n\t// Gets the cached value.\n\tT get();\n\t// Sets the cached value.\n\tvoid set​(T value);\n}", "des": "Simple utility class for caching a single value with a given cache expiration time."}
{"index": 7494, "code": "Class CmsExplorerDialogContext {\n\t// Signals that the dialog has finished.\n\tvoid finish​(java.util.Collection<CmsUUID> ids);\n\t// Signals that the dialog has finished.\n\tvoid finish​(CmsProject project, java.lang.String siteRoot);\n\t// Tell the system that the resource with the given id should be shown somehow.\n\tvoid focus​(CmsUUID cmsUUID);\n\t// Called when the user info was changed.\n\tvoid updateUserInfo();\n}", "des": "Dialog context for the explorer."}
{"index": 7495, "code": "Class CmsExplorerTypeAccessFlushListener {\n\t// Adds a new access settings object to this listener.\n\tvoid add​(CmsExplorerTypeAccess access);\n\t// Acknowledge the occurrence of the specified event, implement this method to check for CmsEvents in your class.\n\tvoid cmsEvent​(CmsEvent event);\n\t// Flushes the cache for all registered access setting objects.\n\tprotected void doFlush();\n\t// Installs this instance as an event listener.\n\tvoid install();\n}", "des": "Class which listens for cache flush events to uncache cached access control settings."}
{"index": 7496, "code": "Class CmsExportname {\n\tboolean equals​(java.lang.Object obj);\n\t// Returns the value of the 'exportname' property.\n\tjava.lang.String getExportname();\n\t// Returns the site.\n\tCmsSite getSite();\n\t// Sets the export name.\n\tvoid setExportname​(java.lang.String exportname);\n\t// Sets the site.\n\tvoid setSite​(CmsSite site);\n}", "des": "A bean for a export name."}
{"index": 7497, "code": "Class CmsExportPointWidget {\n\t// Gets the export point target.\n\tjava.lang.String getDestination();\n\t// Gets the export point source.\n\tjava.lang.String getUri();\n}", "des": "Widget used to edit a module export point."}
{"index": 7498, "code": "Class CmsExtendedCollectorData {\n\t// Returns the List of additional parameters (String objects).\n\tjava.util.List<java.lang.String> getAdditionalParams();\n\t// Sets the List of additional parameters (String objects).\n\tprotected void setAdditionalParams​(java.util.List<java.lang.String> additionalParams);\n}", "des": "Extended data structure for the collector, parsed from the collector parameters."}
{"index": 7499, "code": "Class CmsExtendedSiteSelector {\n\t// Builds a list of site selector option that also includes subsites with the 'include in site selector' option enabled in their configuration.\n\tstatic java.util.List<CmsExtendedSiteSelector.SiteSelectorOption> getExplorerSiteSelectorOptions​(CmsObject cms, boolean addSubsites);\n\t// Initializes the select options.\n\tvoid initOptions​(CmsObject cms, boolean addSubsites);\n\t// Selects a specific site.\n\tvoid selectSite​(java.lang.String siteRoot);\n}", "des": "Site selector widget which also optionally offers subsite options."}
{"index": 7500, "code": "Class CmsExtendedSiteSelector.SiteSelectorOption {\n\tboolean equals​(java.lang.Object obj);\n\t// Gets the option label.\n\tjava.lang.String getLabel();\n\t// Gets the path to jump to as a site path (may be null).\n\tjava.lang.String getPath();\n\t// Gets the site root\n\tjava.lang.String getSite();\n}", "des": "Class representing a single option."}
{"index": 7501, "code": "Class CmsExternalLinkInfoBean {\n\t// Returns the link.\n\tjava.lang.String getLink();\n\t// Returns the site path.\n\tjava.lang.String getSitePath();\n\t// Sets the link.\n\tvoid setLink​(java.lang.String link);\n\t// Sets the site path.\n\tvoid setSitePath​(java.lang.String sitePath);\n}", "des": "Provides information about an external link."}
{"index": 7502, "code": "Class CmsExternalLinksValidator {\n\t// Checks if the given url is valid.\n\tstatic boolean checkUrl​(CmsObject cms, java.lang.String check);\n\t// This method is called by the cron scheduler.\n\tjava.lang.String launch​(CmsObject cms, java.util.Map<java.lang.String,​java.lang.String> parameters);\n\t// Sets the report for the output.\n\tvoid setReport​(I_CmsReport report);\n\t// Validate all links.\n\tvoid validateLinks​(CmsObject cms);\n}", "des": "Class to validate pointer links."}
{"index": 7503, "code": "Class CmsExternalLinksValidatorThread {\n\t// Returns the part of the report that is ready for output.\n\tjava.lang.String getReportUpdate();\n\t// The run method which starts the import process.\n\tvoid run();\n}", "des": "Thread for extern link validation."}
{"index": 7504, "code": "Class CmsExternalLinksValidatorThread {\n\t// Returns the part of the report that is ready for output.\n\tjava.lang.String getReportUpdate();\n\t// The run method which starts the import process.\n\tvoid run();\n}", "des": "Thread for extern link validation."}
{"index": 7505, "code": "Class CmsExternalWidgetConfiguration {\n\t// Returns the CSS resource links.\n\tjava.util.List<java.lang.String> getCssResourceLinks();\n\t// Returns the java script initialization call.\n\tjava.lang.String getInitCall();\n\t// Returns the java script resource links.\n\tjava.util.List<java.lang.String> getJavaScriptResourceLinks();\n\t// Returns the widget name.\n\tjava.lang.String getWidgetName();\n}", "des": "External widget configuration settings."}
{"index": 7506, "code": "Class CmsExtractorHtml {\n\t// Extracts the text and meta information from the document on the input stream, using the specified content encoding.\n\tI_CmsExtractionResult extractText​(java.io.InputStream in, java.lang.String encoding);\n\t// Returns an instance of this text extractor.\n\tstatic I_CmsTextExtractor getExtractor();\n}", "des": "Extracts the text from an HTML document."}
{"index": 7507, "code": "Class CmsExtractorMsOfficeOLE2 {\n\t// Extracts the text and meta information from the document on the input stream.\n\tI_CmsExtractionResult extractText​(java.io.InputStream in);\n\t// Returns an instance of this text extractor.\n\tstatic I_CmsTextExtractor getExtractor();\n}", "des": "Extracts text data from a VFS resource that is an OLE 2 MS Office document."}
{"index": 7508, "code": "Class CmsExtractorMsOfficeOOXML {\n\t// Extracts the text and meta information from the document on the input stream.\n\tI_CmsExtractionResult extractText​(java.io.InputStream in);\n\t// Returns an instance of this text extractor.\n\tstatic I_CmsTextExtractor getExtractor();\n}", "des": "Extracts text data from a VFS resource that is an OOXML MS Office document."}
{"index": 7509, "code": "Class CmsExtractorOpenOffice {\n\t// Extracts the text and meta information from the document on the input stream, using the specified content encoding.\n\tI_CmsExtractionResult extractText​(java.io.InputStream in, java.lang.String encoding);\n\t// Returns an instance of this text extractor.\n\tstatic I_CmsTextExtractor getExtractor();\n}", "des": "Extracts the text from OpenOffice documents (.ods, .odf)."}
{"index": 7510, "code": "Class CmsExtractorPdf {\n\t// Extracts the text and meta information from the document on the input stream.\n\tI_CmsExtractionResult extractText​(java.io.InputStream in);\n\t// Returns an instance of this text extractor.\n\tstatic I_CmsTextExtractor getExtractor();\n}", "des": "Extracts the text from a PDF document."}
{"index": 7511, "code": "Class CmsExtractorRtf {\n\t// Extracts the text and meta information from the document on the input stream.\n\tI_CmsExtractionResult extractText​(java.io.InputStream in);\n\t// Returns an instance of this text extractor.\n\tstatic I_CmsTextExtractor getExtractor();\n}", "des": "Extracts the text from a RTF document."}
{"index": 7512, "code": "Class CmsFakeWindow {\n\t// Gets the window title.\n\tjava.lang.String getWindowTitle();\n\t// Sets the window title.\n\tvoid setWindowTitle​(java.lang.String title);\n}", "des": "Layout which looks like a Vaadin window without actually being a window."}
{"index": 7513, "code": "Class CmsFavoriteDAO {\n\t// Loads the favorite list.\n\tjava.util.List<CmsFavoriteEntry> loadFavorites();\n\t// Saves the favorites.\n\tvoid saveFavorites​(java.util.List<CmsFavoriteEntry> favorites);\n}", "des": "Loads/saves favorites."}
{"index": 7514, "code": "Class CmsFavoriteDialog {\n\t// Builds a row for the given group by wrapping the given component.\n\tCmsFavInfo buildRow​(CmsEditableGroup group, com.vaadin.ui.Component component);\n\t// Saves the list of currently displayed favorites.\n\tprotected void doSave();\n\t// Adds the max height extension to the dialog panel.\n\tprotected void enableMaxHeight();\n\t// Initializes the bookmark widgets.\n\tprotected void initEntries​(java.util.List<CmsFavoriteEntry> entries);\n}", "des": "Dialog which shows the list of favorites for the current user and allows them to jump to individual favorites, edit the list, or add the current location to the favorite list."}
{"index": 7515, "code": "Enum CmsFavoriteEntry.Type {\n\t// Converts JSON id to correct type.\n\tstatic CmsFavoriteEntry.Type fromJsonId​(java.lang.String id);\n\t// Gets the JSON id for the type.\n\tjava.lang.String getJsonId();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsFavoriteEntry.Type valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsFavoriteEntry.Type[] values();\n}", "des": "Represents the type of the favorite."}
{"index": 7516, "code": "Class CmsFileHistoryApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "App for the history settings and clearing of history."}
{"index": 7517, "code": "Class CmsFileUtil.FileWalkState {\n\t// Gets the current directory.\n\tjava.io.File getCurrentDir();\n\t// Gets the list of subdirectories.\n\tjava.util.List<java.io.File> getDirectories();\n\t// Returns the list of files.\n\tjava.util.List<java.io.File> getFiles();\n}", "des": "Data bean which walkFileSystem passes to its callback."}
{"index": 7518, "code": "Class CmsFlexCacheCleanDialog {\n\t// Sets the runnable which should be run to close window.\n\tvoid setCloseRunnable​(java.lang.Runnable closeRunnable);\n\t// Sets the runnable which should be run after ok action.\n\tvoid setOkRunnable​(java.lang.Runnable okRunnable);\n}", "des": "Dialog for clean flex cache."}
{"index": 7519, "code": "Class CmsFlexFormatterBean {\n\t// Returns the root path to the default content.\n\tjava.lang.String getDefaultContentRootPath();\n\t// Returns the UUID of the default content.\n\tCmsUUID getDefaultContentStructureId();\n\t// Returns the placeholder string template.\n\tjava.lang.String getPlaceholderStringTemplate();\n\t// Returns the string template.\n\tjava.lang.String getStringTemplate();\n}", "des": "Formatter configuration for flex formatters."}
{"index": 7520, "code": "Class CmsFlexRequestDispatcher {\n\t// Wrapper for the standard servlet API call.\n\tvoid forward​(javax.servlet.ServletRequest req, javax.servlet.ServletResponse res);\n\t// Wrapper for dispatching to a file from the OpenCms VFS.\n\tvoid include​(javax.servlet.ServletRequest req, javax.servlet.ServletResponse res);\n}", "des": "Implementation of the RequestDispatcher interface to allow JSPs to be loaded from the OpenCms VFS."}
{"index": 7521, "code": "Class CmsFlushCache {\n\t// Creates the button layout.\n\tprotected static com.vaadin.v7.ui.VerticalLayout getButtonLayout​(int size, java.lang.Runnable clickedRunnable);\n\t// Creates the button which opens the flush dialogs.\n\tprotected static com.vaadin.ui.Button getFlushToolButton();\n}", "des": "Vaadin Layout with Buttons to clear the different types of cache."}
{"index": 7522, "code": "Interface CmsFlushCache.I_CloseableDialog {\n\t// Sets the runnable which should be run to close window.\n\tvoid setCloseRunnable​(java.lang.Runnable closeRunnable);\n\t// Sets the runnable which should be run after ok action.\n\tvoid setOkRunnable​(java.lang.Runnable okRunnable);\n}", "des": "Interface for the dialogs."}
{"index": 7523, "code": "Class CmsForgotPasswordDialog {\n\t// Cancels the dialog.\n\tvoid cancel();\n\t// Gets the buttons to display.\n\tjava.util.List<com.vaadin.ui.Button> getButtons();\n\t// Tries to find a user with the given email address, and if one is found, sends a mail with the password reset link to them.\n\tstatic boolean sendPasswordResetLink​(CmsObject cms, java.lang.String fullUserName, java.lang.String email);\n}", "des": "Dialog to request a password reset link if you forgot your passsword."}
{"index": 7524, "code": "Class CmsFormatterBeanParser {\n\t// Reads the formatter bean from the given XML content.\n\tI_CmsFormatterBean parse​(CmsXmlContent content, java.lang.String location, java.lang.String id);\n\t// Creates an xpath from the given components.\n\tstatic java.lang.String path​(java.lang.String... components);\n}", "des": "Parses formatter beans from formatter configuration XML contents."}
{"index": 7525, "code": "Class CmsFormatterConfigCollection {\n\t// Adds another formatter configuration.\n\tvoid add​(CmsFormatterConfig config);\n\t// Gets the formatter configuration for the given key or id.\n\tCmsFormatterConfig get​(java.lang.String keyOrId);\n\t// Gets the first formatter configuration bean.\n\tCmsFormatterConfig getFirstFormatter();\n\t// Gets an iterator over the formatter beans.\n\tjava.util.Iterator<CmsFormatterConfig> iterator();\n\t// Returns the number of formatters.\n\tint size();\n}", "des": "Bean which holds a list of formatter configurations (client-side) which can be retrieved by key or id."}
{"index": 7526, "code": "Class CmsFormEditDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "The form edit dialog action."}
{"index": 7527, "code": "Class CmsGalleryActionInfo {\n\t// Gets the structure id of the folder.\n\tCmsUUID getStructureId();\n\t// Gets the upload action (may be null).\n\tjava.lang.String getUploadAction();\n}", "des": "Represents information about whether a gallery folder should use a custom upload action."}
{"index": 7528, "code": "Class CmsGalleryContainerInfo.Item {\n\tint compareTo​(CmsGalleryContainerInfo.Item other);\n\tboolean equals​(java.lang.Object obj);\n\t// Gets the container type.\n\tjava.lang.String getType();\n\t// Gets the container width.\n\tint getWidth();\n}", "des": "A single container type/width combination."}
{"index": 7529, "code": "Class CmsGalleryDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the gallery types supported by this dialog action.\n\tprotected java.lang.String[] getSupportedGalleryTypes();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n}", "des": "The gallery dialog action."}
{"index": 7530, "code": "Enum CmsGalleryDisabledTypesMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsGalleryDisabledTypesMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsGalleryDisabledTypesMode[] values();\n}", "des": "Mode that determines how to handle types in the gallery dialog that are disabled, usually because there is no matching container in the current page."}
{"index": 7531, "code": "Class CmsGalleryFilteredNavTreeBuilder {\n\t// Gets the root node.\n\tCmsGalleryFilteredNavTreeBuilder.NavigationNode getRoot();\n\t// Returns true if any matching tree nodes have been found.\n\tboolean hasMatches();\n\t// Constructs the filtered navigation tree.\n\tvoid initTree​(java.lang.String filter);\n}", "des": "Helper class for building a filtered sitemap tree for the gallery dialog's 'Sitemap' tab."}
{"index": 7532, "code": "Class CmsGalleryOptimizeDialog {\n\t// Returns the CMS object of this dialog.\n\tCmsObject getCms();\n\t// Whether this dialog was opened from a read-only context.\n\tprotected boolean isReadOnly();\n}", "des": "Class representing a dialog for optimizing galleries."}
{"index": 7533, "code": "Class CmsGalleryOptimizeDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the gallery types supported by this dialog action.\n\tprotected java.lang.String[] getSupportedGalleryTypes();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n}", "des": "The gallery optimize dialog action."}
{"index": 7534, "code": "Enum CmsGallerySearchParameters.CmsGallerySortParam {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsGallerySearchParameters.CmsGallerySortParam valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsGallerySearchParameters.CmsGallerySortParam[] values();\n}", "des": "Sort parameter constants."}
{"index": 7535, "code": "Class CmsGalleryTreeEntry {\n\t// Adds a new child entry.\n\tvoid addChild​(CmsGalleryTreeEntry child);\n\t// Returns the list of child entries.\n\tjava.util.List<CmsGalleryTreeEntry> getChildren();\n\t// Returns the parent entry or null if there is none.\n\tCmsGalleryTreeEntry getParent();\n\t// Sets the child entry list.\n\tvoid setChildren​(java.util.List<CmsGalleryTreeEntry> children);\n\t// Sets the parent entry.\n\tprotected void setParent​(CmsGalleryTreeEntry parent);\n}", "des": "Gallery tree entry class."}
{"index": 7536, "code": "Class CmsGalleryType {\n\t// Returns the gallery content type names.\n\tjava.util.List<java.lang.String> getContentTypeNames();\n\t// Returns the type id.\n\tint getTypeId();\n\t// Sets the gallery content type names.\n\tvoid setContentTypeNames​(java.util.List<java.lang.String> contentTypeNames);\n\t// Sets the type id.\n\tvoid setTypeId​(int typeId);\n}", "des": "The gallery type bean."}
{"index": 7537, "code": "Class CmsGeoFilterBean {\n\t// Returns the center point coordinates.\n\tjava.lang.String getCoordinates();\n\t// Returns the search radius.\n\tjava.lang.String getRadius();\n}", "des": "Bean representing a Geo filter."}
{"index": 7538, "code": "Class CmsGeoMappingConfiguration.Entry {\n\t// Gets the mapping type.\n\tCmsGeoMappingConfiguration.EntryType getType();\n\t// Gets the mapping parameter value.\n\tjava.lang.String getValue();\n}", "des": "A single configuration entry."}
{"index": 7539, "code": "Enum CmsGeoMappingConfiguration.EntryType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsGeoMappingConfiguration.EntryType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsGeoMappingConfiguration.EntryType[] values();\n}", "des": "Enum representing the type of a single configuration entry in a geomapping configuration."}
{"index": 7540, "code": "Class CmsGroupContainerBean {\n\t// Returns the description.\n\tjava.lang.String getDescription();\n\t// Returns the elements.\n\tjava.util.List<CmsContainerElementBean> getElements();\n\t// Returns the title.\n\tjava.lang.String getTitle();\n\t// Returns the types.\n\tjava.util.Set<java.lang.String> getTypes();\n}", "des": "A group container."}
{"index": 7541, "code": "Class CmsGroupContainerSaveResult {\n\t// Gets the group container elements.\n\tjava.util.Map<java.lang.String,​CmsContainerElementData> getElementData();\n\t// Gets the list of removed elements.\n\tjava.util.List<CmsRemovedElementStatus> getRemovedElements();\n}", "des": "Bean which holds the results of saving a group container."}
{"index": 7542, "code": "Class CmsGroupEditParameters {\n\t// Check if group is editable.\n\tboolean isEditable();\n\t// Enables/disables editing.\n\tvoid setEditable​(boolean editable);\n}", "des": "The group edit parameters."}
{"index": 7543, "code": "Enum CmsGroupTable.TableProperty {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsGroupTable.TableProperty valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsGroupTable.TableProperty[] values();\n}", "des": "Table properties."}
{"index": 7544, "code": "Class CmsGwtContextMenuButtonState {\n\t// Gets the structure id.\n\tjava.lang.String getStructureId();\n\t// Sets the structure id.\n\tvoid setStructureId​(java.lang.String structureId);\n}", "des": "Context menu button widget state."}
{"index": 7545, "code": "Class CmsGwtLog {\n\t// Logs a message to the browser console if possible.\n\tstatic void log​(java.lang.String mesage);\n\t// Logs a message with the current stack trace to the browser console if possible.\n\tstatic void trace​(java.lang.String message);\n}", "des": "Dummy log that does nothing on the server side."}
{"index": 7546, "code": "Class CmsHistoryDriver {\n\t// Initializes the SQL manager for this driver.\n\tCmsSqlManager initSqlManager​(java.lang.String classname);\n\t// Returns all projects from the history.\n\tjava.util.List<CmsHistoryProject> readProjects​(CmsDbContext dbc);\n}", "des": "MS SQL implementation of the history driver methods."}
{"index": 7547, "code": "Class CmsHistoryDriver {\n\t// Initializes the SQL manager for this driver.\n\tCmsSqlManager initSqlManager​(java.lang.String classname);\n\t// Returns all projects from the history.\n\tjava.util.List<CmsHistoryProject> readProjects​(CmsDbContext dbc);\n}", "des": "MySQL implementation of the history driver methods."}
{"index": 7548, "code": "Class CmsHistoryDriver {\n\t// Initializes the SQL manager for this driver.\n\tCmsSqlManager initSqlManager​(java.lang.String classname);\n\t// Returns all projects from the history.\n\tjava.util.List<CmsHistoryProject> readProjects​(CmsDbContext dbc);\n}", "des": "Oracle implementation of the history driver methods."}
{"index": 7549, "code": "Class CmsHistoryDriver {\n\t// Initializes the SQL manager for this driver.\n\tCmsSqlManager initSqlManager​(java.lang.String classname);\n\t// Returns all projects from the history.\n\tjava.util.List<CmsHistoryProject> readProjects​(CmsDbContext dbc);\n}", "des": "PostgreSql implementation of the history driver methods."}
{"index": 7550, "code": "Class CmsHistoryExtension {\n\tprotected CmsHistoryState getState();\n\t// Triggers a history back.\n\tvoid historyBack();\n\t// Triggers a history forward.\n\tvoid historyForward();\n}", "des": "Extension to allow clientside history back and forward."}
{"index": 7551, "code": "Class CmsHistoryListUtil {\n\t// Returns the version number from a version parameter.\n\tstatic java.lang.String getDisplayVersion​(java.lang.String version, java.util.Locale locale);\n\t// Returns the link to an historical file.\n\tstatic java.lang.String getHistoryLink​(CmsObject cms, CmsUUID structureId, java.lang.String version);\n\t// Returns the version number from a version parameter.\n\tstatic int getVersion​(java.lang.String version);\n}", "des": "Utility methods for the history list."}
{"index": 7552, "code": "Class CmsHistoryState {\n\t// Returns the history direction.\n\tint getHistoryDirection();\n\t// Returns if the history direction is back.\n\tboolean isHistoryBack();\n\t// Returns if the history direction is forward.\n\tboolean isHistoryForward();\n\t// Sets the history direction.\n\tvoid setHistoryDirection​(int direction);\n}", "des": "The history state."}
{"index": 7553, "code": "Class CmsHistoryVersion {\n\t// Converts a string to a CmsHistoryVersion.\n\tstatic CmsHistoryVersion fromString​(java.lang.String s);\n\t// Gets the version number, or null if no version number was set.\n\tjava.lang.Integer getVersionNumber();\n\t// Returns true if this is the offline version.\n\tboolean isOffline();\n\t// Returns true if this is the online version.\n\tboolean isOnline();\n}", "des": "Bean representing a file version for the history dialog."}
{"index": 7554, "code": "Enum CmsHistoryVersion.OfflineOnline {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsHistoryVersion.OfflineOnline valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsHistoryVersion.OfflineOnline[] values();\n}", "des": "Enum for distinguishing between offline and online project."}
{"index": 7555, "code": "Class CmsHtmlConverterOption {\n\t// Returns the class used for HTML conversion of the configured option.\n\tjava.lang.String getClassName();\n\t// Returns the name of the configured option.\n\tjava.lang.String getName();\n\t// Returns if the option is an automatically generated default option.\n\tboolean isDefault();\n}", "des": "Represents a single HTML converter configuration as defined in the OpenCms configuration file opencms-vfs.xml."}
{"index": 7556, "code": "Class CmsHtmlExtractor {\n\t// Extract the text from a HTML page.\n\tstatic java.lang.String extractText​(java.io.InputStream in, java.lang.String encoding);\n\t// Extract the text from a HTML page.\n\tstatic java.lang.String extractText​(java.lang.String content, java.lang.String encoding);\n}", "des": "Extracts plain text from HTML."}
{"index": 7557, "code": "Class CmsHtmlIconButtonStyleEnum {\n\t// Returns the style string.\n\tjava.lang.String getStyle();\n\t// Parses an string into an element of this enumeration.\n\tstatic CmsHtmlIconButtonStyleEnum valueOf​(java.lang.String value);\n}", "des": "Wrapper class for the different style of icon buttons."}
{"index": 7558, "code": "Class CmsHtmlTagRemoveFactory {\n\t// Add a tag that will be visible for NodeVisitor instances.\n\tboolean addTagPreserve​(org.htmlparser.Tag tag);\n\t// Add a tag that will be invisible for NodeVisitor instances.\n\tboolean addTagRemoval​(org.htmlparser.Tag tag);\n\torg.htmlparser.Tag createTagNode​(org.htmlparser.lexer.Page arg0, int arg1, int arg2, java.util.Vector arg3);\n}", "des": "A tag factory for htmlparser that is able to \"remove tags\"."}
{"index": 7559, "code": "Class CmsHttpUploadWidget {\n\t// Generates the widget HTML for the provided widget parameter.\n\tjava.lang.String getDialogWidget​(CmsObject cms, I_CmsWidgetDialog widgetDialog, I_CmsWidgetParameter param);\n\t// Creates a duplicate of this widget instance.\n\tI_CmsWidget newInstance();\n}", "des": "Provides a http upload widget, for use on a widget dialog."}
{"index": 7560, "code": "Class CmsI18nInfo {\n\t// Returns the encoding to use.\n\tjava.lang.String getEncoding();\n\t// Returns the locale to use.\n\tjava.util.Locale getLocale();\n}", "des": "Bundle of i18n setting to be used to setup a new request context."}
{"index": 7561, "code": "Class CmsIconBean {\n\t// Returns the big icon CSS classes.\n\tjava.lang.String getBigIconClasses();\n\t// Returns the small icon CSS classes.\n\tjava.lang.String getSmallIconClasses();\n\t// Sets the big icon CSS classes.\n\tvoid setBigIconClasses​(java.lang.String bigIconClasses);\n\t// Sets the small icon CSS classes.\n\tvoid setSmallIconClasses​(java.lang.String smallIconClasses);\n}", "des": "A bean carrying icon CSS class information."}
{"index": 7562, "code": "Class CmsImageCacheCleanDialog {\n\t// Sets the runnable which should be run to close window.\n\tvoid setCloseRunnable​(java.lang.Runnable closeRunnable);\n\t// Sets the runnable which should be run after ok action.\n\tvoid setOkRunnable​(java.lang.Runnable okRunnable);\n}", "des": "Dialog to clean Image Cache."}
{"index": 7563, "code": "Class CmsImageCacheCleanupJob {\n\t// Removes all expired image cache entries from the RFS cache.\n\tstatic int cleanImageCache​(float maxAge);\n\t// This method will be called when this scheduled job is executed.\n\tjava.lang.String launch​(CmsObject cms, java.util.Map<java.lang.String,​java.lang.String> parameters);\n}", "des": "A schedulable OpenCms job that clear the image cache for the scaled images created by the CmsImageLoader."}
{"index": 7564, "code": "Class CmsImageCacheHolder {\n\t// Returns all cached images.\n\tjava.util.List<java.lang.String> getAllCachedImages();\n\t// Get variations of resource.\n\tjava.util.List<CmsVariationBean> getVariations​(java.lang.String resource);\n\t// Get the amount of variations for resource.\n\tint getVariationsCount​(java.lang.String resource);\n}", "des": "Helper class for getting information about cached images."}
{"index": 7565, "code": "Class CmsImageCacheTable {\n\t// Filters the table according to given search string.\n\tvoid filterTable​(java.lang.String search);\n\t// Loads the table.\n\tvoid load​(java.lang.String search);\n}", "des": "Table to show entries of image cache."}
{"index": 7566, "code": "Class CmsImageGalleryWidget {\n\t// Returns the lower case name of the gallery, for example \"html\".\n\tjava.lang.String getNameLower();\n\t// Returns the upper case name of the gallery, for example \"Html\".\n\tjava.lang.String getNameUpper();\n\t// Returns the class name of the widget.\n\tjava.lang.String getWidgetName();\n\t// Creates a duplicate of this widget instance.\n\tI_CmsWidget newInstance();\n\t// Returns true if the preview button should be shown.\n\tboolean showPreview​(java.lang.String value);\n}", "des": "Provides a widget that allows access to the available OpenCms image galleries, for use on a widget dialog."}
{"index": 7567, "code": "Class CmsImportFolder {\n\t// Returns the list of imported resources.\n\tjava.util.List<CmsResource> getImportedResources();\n\t// Import that will read from the real file system.\n\tvoid importFolder​(java.lang.String importFolderName, java.lang.String importPath, CmsObject cms);\n\t// Import that will read from a ZIP file.\n\tvoid importZip​(byte[] content, java.lang.String importPath, CmsObject cms, boolean noSubFolder);\n\t// Returns true if a valid ZIP file was imported.\n\tboolean isValidZipFile();\n}", "des": "Allows to import resources from the filesystem or a ZIP file into the OpenCms VFS."}
{"index": 7568, "code": "Class CmsImportResourceDataReader {\n\t// Imports an ACE from the current xml data.\n\tvoid importAccessControlEntries();\n\t// Imports the data.\n\tvoid importData​(CmsObject cms, I_CmsReport report, CmsImportParameters parameters);\n\t// Imports all relations from the current xml data.\n\tvoid importRelations();\n\t// Imports a resource from the current xml data.\n\tvoid importResource();\n\t// Rewrites all parseable files, to assure link check.\n\tvoid rewriteParseables();\n}", "des": "Subclass which doesn't actually import anything, but just reads the module data into a data structure which can then be used by the module updater."}
{"index": 7569, "code": "Class CmsImportUserThread {\n\t// Returns the part of the report that is ready for output.\n\tjava.lang.String getReportUpdate();\n\t// Checks if the given user name is already available inside the current ou.\n\tprotected boolean isAlreadyAvailable​(java.lang.String userName);\n\tvoid run();\n}", "des": "Class for the import user thread."}
{"index": 7570, "code": "Enum CmsImportVersion10.LinkParsableCategory {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsImportVersion10.LinkParsableCategory valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsImportVersion10.LinkParsableCategory[] values();\n}", "des": "Categories of resources that need to be handled differently in the 'rewrite parseables' import step."}
{"index": 7571, "code": "Class CmsImportVersion10.RelationData {\n\tboolean equals​(java.lang.Object otherObj);\n\t// Gets the relation target path.\n\tjava.lang.String getTarget();\n\t// Gets the relation target structure id.\n\tCmsUUID getTargetId();\n\t// Gets the relation type.\n\tCmsRelationType getType();\n}", "des": "Data class to temporarily keep track of relation data for a resource to be imported."}
{"index": 7572, "code": "Class CmsInactiveUserMessages {\n\t// Text to display for the lockout screen.\n\tstatic java.lang.String getLockoutText​(java.util.Locale locale);\n\t// Gets the message for the given key and locale.\n\tstatic java.lang.String getMessage​(java.lang.String key, java.util.Locale locale);\n\t// Gets the header text for the report mail.\n\tstatic java.lang.String getReportHeader​(java.util.Locale locale);\n\t// Gets the subject for the report mail.\n\tstatic java.lang.String getReportSubject​(java.util.Locale locale);\n}", "des": "Helper class for getting localized messages for the 'lock inactive users' feature."}
{"index": 7573, "code": "Class CmsIndexingReportThread {\n\t// Returns the last error.\n\tjava.lang.Throwable getError();\n\t// Updates the report.\n\tjava.lang.String getReportUpdate();\n\t// Starts the indexing report thread.\n\tvoid run();\n}", "des": "Implements methods to utilize a report thread for CmsIndexingReport."}
{"index": 7574, "code": "Class CmsIndexingThread {\n\t// Creates a document for the resource without extracting the content.\n\tprotected I_CmsSearchDocument createDefaultIndexDocument();\n\t// Creates the search index document.\n\tprotected I_CmsSearchDocument createIndexDocument​(CmsObject cms, CmsResource res, I_CmsSearchIndex index, int count, I_CmsReport report);\n\t// Returns the document created by this indexer thread.\n\tI_CmsSearchDocument getResult();\n\t// Starts the thread to index a single resource.\n\tvoid run();\n}", "des": "Implements the indexing method for a single resource as thread."}
{"index": 7575, "code": "Class CmsIndexingThreadManager {\n\t// Creates and starts a new indexing thread for a resource.\n\tvoid createIndexingThread​(CmsVfsIndexer indexer, I_CmsIndexWriter writer, CmsResource res);\n\t// Returns if the indexing manager still have indexing threads.\n\tboolean isRunning();\n\t// Writes statistical information to the report.\n\tvoid reportStatistics​(I_CmsReport report);\n}", "des": "Implements the management of indexing threads."}
{"index": 7576, "code": "Class CmsInheritanceGroupUtils {\n\t// Finds the inheritance group content with a given internal name.\n\tstatic CmsResource getInheritanceGroupContentByName​(CmsObject cms, java.lang.String name);\n\t// Parses an inheritance group configuration C and returns the names of inheritance groups in C in which a given resource is defined as a new element.\n\tstatic java.util.Set<java.lang.String> getNamesOfGroupsContainingResource​(CmsObject cms, CmsResource inheritanceConfig, CmsResource target);\n}", "des": "Utility methods for inheritance groups which don't fit anywhere else."}
{"index": 7577, "code": "Class CmsInheritanceReference {\n\t// Returns the description.\n\tjava.lang.String getDescription();\n\t// Gets the locale.\n\tjava.util.Locale getLocale();\n\t// Gets the configuration name.\n\tjava.lang.String getName();\n\t// Gets the reference resource.\n\tCmsResource getResource();\n\t// Gets the title.\n\tjava.lang.String getTitle();\n}", "des": "Reference to an container inheritance configuration."}
{"index": 7578, "code": "Class CmsInheritanceReferenceParser {\n\t// Gets the parsed reference for a locale.\n\tCmsInheritanceReference getReference​(java.util.Locale locale);\n\t// Parses a given resource.\n\tvoid parse​(CmsResource resource);\n\t// Parses the given XML content.\n\tprotected void parse​(CmsXmlContent content);\n\t// Extracts a single inheritance reference from a location in the XML content.\n\tprotected CmsInheritanceReference parseReference​(I_CmsXmlContentLocation location, java.util.Locale locale);\n}", "des": "Parser class for parsing inheritance container references."}
{"index": 7579, "code": "Class CmsInitException {\n\t// Creates a copied instance of this localized exception.\n\tCmsRuntimeException createException​(CmsMessageContainer container, java.lang.Throwable cause);\n\t// Indicates that this exception describes a new error that was not already logged.\n\tboolean isNewError();\n}", "des": "Describes errors that occur in the context of OpenCms the initialization, this is fatal and prevents OpenCms from starting."}
{"index": 7580, "code": "Class CmsInputStreamDataSource {\n\tjava.lang.String getContentType();\n\t// Retunrs the underlying input stream of this data source.\n\tjava.io.InputStream getInputStream();\n\tjava.lang.String getName();\n\t// Don't use this method, VFS resources can't be written using this datasource class.\n\tjava.io.OutputStream getOutputStream();\n}", "des": "DataSource implementation that may be filled with content from an InputStream."}
{"index": 7581, "code": "Class CmsInputWidgetPlaintext {\n\t// Creates a duplicate of this widget instance.\n\tI_CmsWidget newInstance();\n\t// Sets the value of in the given widget parameter by reading the \"right\" value from the offered map of parameters.\n\tvoid setEditorValue​(CmsObject cms, java.util.Map<java.lang.String,​java.lang.String[]> formParameters, I_CmsWidgetDialog widgetDialog, I_CmsWidgetParameter param);\n}", "des": "CmsInputWidget that strips HTML Tags from the input before storing values."}
{"index": 7582, "code": "Class CmsInternalLinksValidator {\n\t// Returns all broken links for the given resource.\n\tjava.util.List<CmsRelation> getBrokenLinksForResource​(java.lang.String resourceName);\n\t// Returns the number of not visible resources with broken links.\n\tint getNotVisibleResourcesCount();\n\t// Returns all resources with broken links.\n\tjava.util.List<CmsResource> getResourcesWithBrokenLinks();\n\t// If no relation would be broken deleting the given resources.\n\tboolean isEmpty();\n}", "des": "Util class to find broken links in a bundle of resources."}
{"index": 7583, "code": "Class CmsInternalResources {\n\t// Adds a resource to the form.\n\tvoid addResource​(java.lang.String resource);\n\t// Clear resources.\n\tvoid clearResources();\n\t// Get vaadin component with given path.\n\tprotected com.vaadin.ui.Component getResourceComponent​(java.lang.String path);\n\t// Reads out resource paths from Layout.\n\tjava.util.List<java.lang.String> getResources();\n}", "des": "Class for the layout for choosing the resources."}
{"index": 7584, "code": "Class CmsInvisibleToolHandler {\n\t// Returns the state of the admin tool for a given cms context.\n\tboolean isEnabled​(CmsObject cms);\n\t// Returns the visibility flag for a given cms context.\n\tboolean isVisible​(CmsObject cms);\n}", "des": "This tool handler just hides the tool for the user, but the tool can still be invoked explicitly, usefull for tool that requires an argument, like edit tools."}
{"index": 7585, "code": "Class CmsJaxbConfigHelper<T> {\n\t// Appends the XML element for the bean to the given parent element.\n\tvoid appendToXml​(org.dom4j.Element parent, T bean);\n\t// Gets a rule which uses JAXB to unmarshal a bean from the XML.\n\torg.apache.commons.digester3.Rule getDigesterRule​(java.util.function.Consumer<T> beanCallback);\n}", "des": "Helper class for using JAXB to convert between beans and OpenCms config file XML elements."}
{"index": 7586, "code": "Class CmsJlanThreadManager {\n\t// Starts the JLAN server in a new thread.\n\tvoid start();\n\t// Tries to stop the JLAN server and return after it is stopped, but will also return if the thread hasn't stopped after MAX_SHUTDOWN_WAIT_MILLIS.\n\tvoid stop();\n}", "des": "A simple class used to start and stop JLAN."}
{"index": 7587, "code": "Class CmsJobBean {\n\tboolean equals​(java.lang.Object obj);\n\t// Gets the class name for the job.\n\tjava.lang.String getClassName();\n\t// Returns the job icon resource.\n\tcom.vaadin.server.Resource getIcon();\n\t// Gets the scheduled job.\n\tCmsScheduledJobInfo getJob();\n\t// Gets the last execution date.\n\tjava.util.Date getLastExecution();\n\t// Gets the job name.\n\tjava.lang.String getName();\n\t// Gets the next execution date.\n\tjava.util.Date getNextExecution();\n}", "des": "Don't use CmsScheduledJobInfo directly, so we don't need to change it if we want to change how the values are rendered, and having only the fields we want displayed in the table makes it easier to understand."}
{"index": 7588, "code": "Class CmsJobEditView {\n\t// Initializes the form fields with values from the given job bean.\n\tvoid loadFromBean​(CmsScheduledJobInfo info);\n\t// Try to save the form values to the edited bean.\n\tboolean trySaveToBean();\n}", "des": "Form used to edit a scheduled job."}
{"index": 7589, "code": "Class CmsJobTable {\n\t// Returns the resource info box to the given job.\n\tstatic CmsResourceInfo getJobInfo​(java.lang.String name, java.lang.String className);\n\t// Returns the available menu entries.\n\tjava.util.List<I_CmsSimpleContextMenuEntry<java.util.Set<java.lang.String>>> getMenuEntries();\n\t// Reloads the job table data.\n\tvoid reloadJobs();\n\t// Sets the menu entries.\n\tvoid setMenuEntries​(java.util.List<I_CmsSimpleContextMenuEntry<java.util.Set<java.lang.String>>> newEntries);\n}", "des": "Table used to display scheduled jobs, together with buttons for modifying the jobs."}
{"index": 7590, "code": "Enum CmsJobTable.TableProperty {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsJobTable.TableProperty valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsJobTable.TableProperty[] values();\n}", "des": "Property columns of table, including their Messages for header."}
{"index": 7591, "code": "Class CmsJsonDocumentFolder {\n\t// Formats folder listing as a JSON object, with the individual file names in the folder as keys.\n\tprotected JSONObject folderListingJson​(CmsResource target, int levelsLeft);\n\t// Returns the JSON document.\n\tjava.lang.Object getJson();\n}", "des": "Class representing a JSON document for a folder."}
{"index": 7592, "code": "Class CmsJsonHandlerContainerPage {\n\t// Gets the sort order for this handler.\n\tdouble getOrder();\n\t// Returns true if the handler matches the given context.\n\tboolean matches​(CmsJsonHandlerContext context);\n\t// Renders the JSON.\n\tCmsJsonResult renderJson​(CmsJsonHandlerContext context);\n}", "des": "JSON handler for rendering a container page as JSON."}
{"index": 7593, "code": "Class CmsJsonHandlerFolder {\n\t// Gets the sort order for this handler.\n\tdouble getOrder();\n\t// Returns true if the handler matches the given context.\n\tboolean matches​(CmsJsonHandlerContext context);\n\t// Renders the JSON.\n\tCmsJsonResult renderJson​(CmsJsonHandlerContext context);\n}", "des": "Produces directory listings in JSON format."}
{"index": 7594, "code": "Class CmsJsonHandlerJsp {\n\t// Gets the sort order for this handler.\n\tdouble getOrder();\n\t// Returns true if the handler matches the given context.\n\tboolean matches​(CmsJsonHandlerContext context);\n\t// Renders the JSON.\n\tCmsJsonResult renderJson​(CmsJsonHandlerContext context);\n}", "des": "JSON handler used to load JSPs referenced directly by path."}
{"index": 7595, "code": "Class CmsJsonHandlerList {\n\t// Gets the sort order for this handler.\n\tdouble getOrder();\n\t// Returns true if the handler matches the given context.\n\tboolean matches​(CmsJsonHandlerContext context);\n\t// Renders the JSON.\n\tCmsJsonResult renderJson​(CmsJsonHandlerContext context);\n}", "des": "JSON handler for rendering a list."}
{"index": 7596, "code": "Class CmsJsonHandlerOnlineCachingWrapper {\n\t// Gets the sort order for this handler.\n\tdouble getOrder();\n\t// Returns true if the handler matches the given context.\n\tboolean matches​(CmsJsonHandlerContext context);\n\t// Renders the JSON.\n\tCmsJsonResult renderJson​(CmsJsonHandlerContext context);\n}", "des": "Wrapper for JSON handlers that caches online project requests."}
{"index": 7597, "code": "Class CmsJsonHandlerResource {\n\t// Gets the sort order for this handler.\n\tdouble getOrder();\n\t// Returns true if the handler matches the given context.\n\tboolean matches​(CmsJsonHandlerContext context);\n\t// Renders the JSON.\n\tCmsJsonResult renderJson​(CmsJsonHandlerContext context);\n}", "des": "JSON handler for rendering a resource as JSON."}
{"index": 7598, "code": "Class CmsJsonHandlerXmlContent {\n\t// Creates an empty JSON object.\n\tstatic JSONObject empty();\n\t// Gets the sort order for this handler.\n\tdouble getOrder();\n\t// Returns true if the handler matches the given context.\n\tboolean matches​(CmsJsonHandlerContext context);\n\t// Renders the JSON.\n\tCmsJsonResult renderJson​(CmsJsonHandlerContext context);\n\t// Renders a JSON representation of an XML content.\n\tCmsJsonResult renderJson​(CmsJsonHandlerContext context, boolean throwError);\n}", "des": "Sub-handler for converting XML contents to JSON, either as a whole or just specific locales or paths."}
{"index": 7599, "code": "Class CmsJsonPart {\n\t// Gets the header section for a named JSON part.\n\tstatic java.lang.String getHeader​(java.lang.String key);\n\t// Returns the key.\n\tjava.lang.String getKey();\n\t// Returns the value.\n\tjava.lang.String getValue();\n\t// Parses the encoded JSON parts from the given string and puts them in a list.\n\tstatic java.util.List<CmsJsonPart> parseJsonParts​(java.lang.String text);\n}", "des": "Helper class used to translate key/value pairs from and to the format which can be processed by the CmsJsonPartFilter."}
{"index": 7600, "code": "Class CmsJsonRendererContainerPage {\n\t// Builds a tree from the given container page bean.\n\tCmsJsonRendererContainerPage.ElementNode buildTree​(CmsContainerPageBean page, java.lang.String rootPath);\n\t// Renders the JSON for the container page.\n\tjava.lang.Object renderJson();\n}", "des": "Used for rendering container pages as a JSON structure."}
{"index": 7601, "code": "Class CmsJsonResult {\n\t// Gets the JSON data.\n\tjava.lang.Object getJson();\n\t// Gets the next resource which should be loaded.\n\tCmsResource getNextResource();\n\t// Gets the HTTP status code to set.\n\tint getStatus();\n}", "des": "Result of rendering JSON."}
{"index": 7602, "code": "Class CmsJSPBrowserFrameExtension {\n\t// Cancels parent window on server side and returns an Array of changed resources.\n\tvoid cancelParentWindow​(java.lang.String[] uuids);\n\t// Creates extended BrowserFrame displaying a JSP under given link.\n\tstatic void showExtendedBrowserFrame​(java.lang.String jspLink, I_CmsDialogContext context);\n}", "des": "Vaadin extension class for a BrowserFrame to display a JSP."}
{"index": 7603, "code": "Class CmsJspContentAccessValueWrapper.NullValueInfo {\n\t// Returns the content.\n\tI_CmsXmlDocument getContent();\n\t// Returns the locale.\n\tjava.util.Locale getLocale();\n\t// Returns the parent value.\n\tI_CmsXmlContentValue getParentValue();\n\t// Returns the value name.\n\tjava.lang.String getValueName();\n}", "des": "The null value info, used to generate RDFA and DND annotations for null values."}
{"index": 7604, "code": "Class CmsJspDeviceSelector {\n\t// Returns the name of the device type.\n\tjava.lang.String getDeviceType​(javax.servlet.http.HttpServletRequest req);\n\t// Returns an array of device types that can be detected.\n\tjava.util.List<java.lang.String> getDeviceTypes();\n\t// Returns the User Agent info.\n\tUAgentInfo getUserAgentInfo();\n}", "des": "This class provides the detection for different devices, so that the <cms:device type=\"...\">-Tag can detect which device sends the HTTP request."}
{"index": 7605, "code": "Class CmsJspDeviceSelectorDesktopMobileTablet {\n\t// Returns the name of the device type.\n\tjava.lang.String getDeviceType​(javax.servlet.http.HttpServletRequest req);\n\t// Returns an array of device types that can be detected.\n\tjava.util.List<java.lang.String> getDeviceTypes();\n\t// Returns the User Agent info.\n\tUAgentInfo getUserAgentInfo();\n\t// Checks if a template context is compatible with this device selector.\n\tprotected boolean isTemplateContextCompatible​(CmsTemplateContext templateContext);\n}", "des": "Device selector class which distinguishes between the cases \"desktop\", \"mobile\" and \"tablet\"."}
{"index": 7606, "code": "Class CmsJspDeviceSelectorTablet {\n\t// Returns the name of the device type.\n\tjava.lang.String getDeviceType​(javax.servlet.http.HttpServletRequest req);\n\t// Returns an array of device types that can be detected.\n\tjava.util.List<java.lang.String> getDeviceTypes();\n\t// Returns the User Agent info.\n\tUAgentInfo getUserAgentInfo();\n}", "des": "Provides the detection for different devices, so that the <cms:device type=\"...\">-Tag can detect which kind of device type sends the HTTP request."}
{"index": 7607, "code": "Class CmsJspNavBuilder.NavContext {\n\t// Gets the resource filter.\n\tCmsResourceFilter getFilter();\n\t// Gets the navigation builder.\n\tCmsJspNavBuilder getNavBuilder();\n\t// Gets the visibility setting.\n\tCmsJspNavBuilder.Visibility getVisibility();\n}", "des": "Navigation builder context."}
{"index": 7608, "code": "Enum CmsJspNavBuilder.Visibility {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsJspNavBuilder.Visibility valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsJspNavBuilder.Visibility[] values();\n}", "des": "The visibility mode."}
{"index": 7609, "code": "Class CmsJspResourceLoadBean {\n\t// Returns the OpenCms user context this bean was initialized with.\n\tCmsObject getCmsObject();\n\t// Returns a list of CmsResource instances.\n\tjava.util.List<CmsResource> getResources();\n\t// Initialize this instance.\n\tvoid init​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Allows JSP access to the results of a <cms:resourceload ..."}
{"index": 7610, "code": "Class CmsJspStandardContextBean.TemplateBean {\n\t// Gets the template name.\n\tjava.lang.String getName();\n\t// Gets the template resource.\n\tCmsResource getResource();\n\t// Gets the template uri.\n\tjava.lang.String getUri();\n\t// Returns true if the template context was manually selected.\n\tboolean isForced();\n\t// Sets the 'forced' flag to a new value.\n\tvoid setForced​(boolean forced);\n}", "des": "Bean containing a template name and URI."}
{"index": 7611, "code": "Class CmsJspTagAddParams.ParamState {\n\t// Adds a request parameter.\n\tvoid addParameter​(java.lang.String key, java.lang.String value);\n\t// Initializes the tag state and sets a new parameter map on the request for which it was instantiated.\n\tvoid init();\n\t// Restores the original set of parameters.\n\tvoid undoChanges();\n}", "des": "Keeps track of the runtime state of a single execution of this tag."}
{"index": 7612, "code": "Class CmsJspTagContentAccess {\n\tint doEndTag();\n\tint doStartTag();\n\t// Returns the locale.\n\tjava.lang.String getLocale();\n\t// Returns the name for the optional attribute that provides direct access to the content value map.\n\tjava.lang.String getVal();\n\tvoid release();\n\t// Sets the locale.\n\tvoid setLocale​(java.lang.String locale);\n\t// Sets the name for the optional attribute that provides direct access to the content value map.\n\tvoid setVal​(java.lang.String val);\n}", "des": "Used to access XML content item information from the current open <cms:contentload> tag using JSP page context and the JSP EL."}
{"index": 7613, "code": "Class CmsJspTagDevice {\n\t// Close the device tag.\n\tint doEndTag();\n\t// Decides on the base of the device selector interface whether the user's device is in the selected device types or not.\n\tint doStartTag();\n\t// Returns the device type.\n\tjava.lang.String getType();\n\t// Releases any resources we may have (or inherit).\n\tvoid release();\n\t// Sets the type for the device.\n\tvoid setType​(java.lang.String type);\n}", "des": "This class provides a <cms:device type=\"...\">-Tag with the attribute type to specify the device."}
{"index": 7614, "code": "Class CmsJspTagDisplayFormatter {\n\tint doStartTag();\n\t// Sets the path to the formatter configuration file.\n\tvoid setPath​(java.lang.String path);\n\t// Sets the type.\n\tvoid setType​(java.lang.String type);\n}", "des": "The tag 'displayFormatter' can be used to add a formatter resource type pairing to the surrounding 'display' tag."}
{"index": 7615, "code": "Class CmsJspTagEnableListAdd {\n\tvoid doTag();\n\t// Sets the post-create handler to use after creating new elements.\n\tvoid setPostCreateHandler​(java.lang.String postCreateHandler);\n\t// Sets the types to offer to create.\n\tvoid setTypes​(java.lang.Object typesObj);\n}", "des": "Generates a special HTML element which enables the 'create list element' dialog for a set of types when used in a formatter."}
{"index": 7616, "code": "Class CmsJspTagIncludeTEI {\n\t// Returns true if the given attribute name is specified, false otherwise.\n\tstatic boolean isSpecified​(javax.servlet.jsp.tagext.TagData data, java.lang.String attributeName);\n\t// Checks the validity of the <cms:include /> attributes.\n\tboolean isValid​(javax.servlet.jsp.tagext.TagData data);\n}", "des": "This is a TagExtraInfo evaluation class that checks the attibutes of the <cms:include /> tag."}
{"index": 7617, "code": "Class CmsJspTagJsonArray {\n\t// Adds a value to the JSON value being constructed.\n\tvoid addValue​(java.lang.String key, java.lang.Object val);\n\tint doStartTag();\n\t// Returns the JSON value that should be added to the surrounding context and/or stored in the variable given by the var attribute.\n\tjava.lang.Object getJsonValue();\n\t// Initializes / resets the internal values.\n\tprotected void init();\n}", "des": "Tag for defining a JSON array."}
{"index": 7618, "code": "Class CmsJspTagJsonObject {\n\t// Adds a value to the JSON value being constructed.\n\tvoid addValue​(java.lang.String key, java.lang.Object val);\n\tint doStartTag();\n\t// Returns the JSON value that should be added to the surrounding context and/or stored in the variable given by the var attribute.\n\tjava.lang.Object getJsonValue();\n\t// Initializes / resets the internal values.\n\tprotected void init();\n}", "des": "Tag for defining a JSON object."}
{"index": 7619, "code": "Class CmsJspTagJsonPart {\n\tvoid doCatch​(java.lang.Throwable arg0);\n\tint doEndTag();\n\tvoid doFinally();\n\tint doStartTag();\n\t// Returns the name to be used as the JSON key.\n\tjava.lang.String getElement();\n\t// Sets the name to be used as a JSON key.\n\tvoid setElement​(java.lang.String elementName);\n}", "des": "Tag used to convert the HTML output of this tag's contents to encoded JSON."}
{"index": 7620, "code": "Class CmsJspTagMap {\n\t// Add a parameter to this tag.\n\tvoid addParameter​(java.lang.String name, java.lang.String value);\n\tint doEndTag();\n\t// Returns BodyTag.EVAL_BODY_BUFFERED.\n\tint doStartTag();\n\t// Sets the variable name in which the map should be stored.\n\tvoid setVar​(java.lang.String var);\n}", "des": "Builds a java.util.Map isntance with string keys and values from nested param tags, then stores it in a page context variable whose name is supplied by the user."}
{"index": 7621, "code": "Enum CmsJspTagNavigation.Type {\n\t// Parses a string into an enumeration element.\n\tstatic CmsJspTagNavigation.Type parse​(java.lang.String name);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsJspTagNavigation.Type valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsJspTagNavigation.Type[] values();\n}", "des": "Constants for type attribute interpretation."}
{"index": 7622, "code": "Class CmsJspTagParam {\n\t// Simply send our name and value to our appropriate ancestor.\n\tint doEndTag();\n\t// Releases any resources we may have (or inherit).\n\tvoid release();\n\t// Sets the attribute name.\n\tvoid setName​(java.lang.String name);\n\t// Sets the attribute value.\n\tvoid setValue​(java.lang.String value);\n}", "des": "A handler for <param> that accepts attributes as Strings and evaluates them as expressions at runtime."}
{"index": 7623, "code": "Class CmsJspTagPdfThumbnail {\n\tint doStartTag();\n\t// The implementation of the tag.\n\tstatic java.lang.String pdfTagAction​(javax.servlet.ServletRequest request, java.lang.String file, int width, int height, java.lang.String format);\n\t// Sets the path to the PDF.\n\tvoid setFile​(java.lang.String file);\n\t// Setter for the format path.\n\tvoid setFormat​(java.lang.String format);\n\t// Sets the height.\n\tvoid setHeight​(java.lang.String height);\n\t// Sets the width.\n\tvoid setWidth​(java.lang.String width);\n}", "des": "JSP tag to generate a link to a PDF produced from a given XML content."}
{"index": 7624, "code": "Class CmsJspTagProperty.CmsPropertyAction {\n\t// Returns the VFS site path of the resource for which the properties should be read.\n\tjava.lang.String getVfsUri();\n\t// Returns true if it should be searched for the property, otherwise false.\n\tboolean isSearch();\n}", "des": "Tells for which resource properties should be looked up (with or without searching), depending on the CmsJspTagProperty.FileUse."}
{"index": 7625, "code": "Class CmsJspTagUser {\n\tint doStartTag();\n\t// Returns the property name.\n\tjava.lang.String getProperty();\n\tvoid release();\n\t// Sets the property name.\n\tvoid setProperty​(java.lang.String name);\n\t// Internal action method.\n\tstatic java.lang.String userTagAction​(java.lang.String property, javax.servlet.ServletRequest req);\n}", "des": "Provides access to the data of the currently logged in user."}
{"index": 7626, "code": "Class CmsLanguagePreference {\n\t// Gets the language selection options, with the locales as keys and the titles as values.\n\tstatic java.util.Map<java.util.Locale,​java.lang.String> getOptionMapForLanguage();\n\t// Gets the user-independent property configuration.\n\tCmsXmlContentProperty getPropertyDefinition();\n\t// Gets the metadata describing how the setting should be edited.\n\tCmsXmlContentProperty getPropertyDefinition​(CmsObject cms);\n}", "des": "Workplace locale preference."}
{"index": 7627, "code": "Class CmsLegacyApp {\n\t// Within this method the app UI should be initialized.\n\tvoid initUI​(I_CmsAppUIContext context);\n\t// Called on navigation events.\n\tvoid onStateChange​(java.lang.String state);\n}", "des": "App for legacy admin tools."}
{"index": 7628, "code": "Enum CmsLetsEncryptConfiguration.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsLetsEncryptConfiguration.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsLetsEncryptConfiguration.Mode[] values();\n}", "des": "Enum which represents different modes that control which domains OpenCms puts into the certificate configuration."}
{"index": 7629, "code": "Enum CmsLetsEncryptConfiguration.Trigger {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsLetsEncryptConfiguration.Trigger valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsLetsEncryptConfiguration.Trigger[] values();\n}", "des": "Enum which represents the different types of events that LetsEncrypt updates should be triggered by."}
{"index": 7630, "code": "Class CmsLinkBean {\n\t// Returns the link target.\n\tjava.lang.String getLink();\n\t// Returns true if this is an internal link.\n\tboolean isInternal();\n}", "des": "A bean for representing a link, which can be external or internal."}
{"index": 7631, "code": "Class CmsLinkGalleryWidget {\n\t// Returns the lower case name of the gallery, for example \"html\".\n\tjava.lang.String getNameLower();\n\t// Returns the upper case name of the gallery, for example \"Html\".\n\tjava.lang.String getNameUpper();\n\t// Returns the class name of the widget.\n\tjava.lang.String getWidgetName();\n\t// Creates a duplicate of this widget instance.\n\tI_CmsWidget newInstance();\n\t// Returns true if the preview button should be shown.\n\tboolean showPreview​(java.lang.String value);\n}", "des": "Provides a widget that allows access to the available OpenCms external link galleries, for use on a widget dialog."}
{"index": 7632, "code": "Class CmsLinkInfo {\n\tboolean equals​(java.lang.Object obj);\n\t// Gets the anchor.\n\tjava.lang.String getAnchor();\n\t// Gets the query\n\tjava.lang.String getQuery();\n\t// Gets the structure id.\n\tCmsUUID getStructureId();\n\t// Gets the target.\n\tjava.lang.String getTarget();\n\t// Gets the relation type.\n\tCmsRelationType getType();\n\t// Checks whether the link is internal.\n\tboolean isInternal();\n\t// Converts this to a CmsLink.\n\tCmsLink toLink();\n}", "des": "Immutable bean representing most of the information in a CmsLink."}
{"index": 7633, "code": "Class CmsLinkLocaleVariantAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Workplace action for the 'Link locale variant' dialog."}
{"index": 7634, "code": "Class CmsLinkValidationApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "Class for the Link validation app."}
{"index": 7635, "code": "Class CmsLinkValidationExternalApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "Class for the Link validation app."}
{"index": 7636, "code": "Class CmsListElementCreationOption {\n\t// Gets the list info bean representing the type.\n\tCmsListInfoBean getInfo();\n\t// Gets the string used by the content editor to create the new resource.\n\tjava.lang.String getNewLink();\n\t// Gets the resource type name.\n\tjava.lang.String getType();\n}", "des": "Represents a single option (type) that can be selected in the list element creation dialog."}
{"index": 7637, "code": "Enum CmsListInfoBean.LockIcon {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsListInfoBean.LockIcon valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsListInfoBean.LockIcon[] values();\n}", "des": "Lock icons."}
{"index": 7638, "code": "Enum CmsListInfoBean.StateIcon {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsListInfoBean.StateIcon valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsListInfoBean.StateIcon[] values();\n}", "des": "Enum for the type of page icon which should be displayed."}
{"index": 7639, "code": "Class CmsListResourceBundle {\n\t// Adds a message to this list bundle.\n\tvoid addMessage​(java.lang.String key, java.lang.String value);\n\t// Returns a typed clone of this resource bundle.\n\tCmsListResourceBundle getClone();\n\tjava.lang.Object[][] getContents();\n\tjava.util.Locale getLocale();\n\t// Sets the locale used for this resource bundle.\n\tvoid setLocale​(java.util.Locale l);\n\t// Sets the parent bundle.\n\tvoid setParent​(java.util.ResourceBundle p);\n}", "des": "A list based resource bundle that with increased visibility of some key methods."}
{"index": 7640, "code": "Enum CmsLocaleGroupService.Status {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsLocaleGroupService.Status valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsLocaleGroupService.Status[] values();\n}", "des": "Enum representing whether two resources can be linked together in a locale group."}
{"index": 7641, "code": "Class CmsLocaleLinkBean {\n\t// Creates a new link bean with an error message.\n\tstatic CmsLocaleLinkBean error​(java.lang.String errorMsg);\n\t// Gets the error message.\n\tjava.lang.String getError();\n\t// Gets the link.\n\tjava.lang.String getLink();\n\t// Creates a new link bean with a link.\n\tstatic CmsLocaleLinkBean link​(java.lang.String link);\n}", "des": "Bean representing a link to a different locale variant."}
{"index": 7642, "code": "Class CmsLocaleLinkTargetSelectionDialog {\n\t// Executed when the 'Cancel' button is clicked.\n\tvoid onClickCancel();\n\t// Executed when the 'OK' button is clicked.\n\tvoid onClickOk​(CmsResource selected);\n}", "des": "Dialog used to select a resource which should be linked to a locale group."}
{"index": 7643, "code": "Class CmsLockAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Action to lock a folder if it isn't already locked, with a dialog asking to confirm your choice if the folder contains resources locked by other users."}
{"index": 7644, "code": "Class CmsLockActionRecord {\n\t// Gets the change type.\n\tCmsLockActionRecord.LockChange getChange();\n\t// Gets the lock state after the action.\n\tCmsLock getLock();\n}", "des": "Bean class which keeps track of a locking action performed on a resource."}
{"index": 7645, "code": "Enum CmsLockActionRecord.LockChange {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsLockActionRecord.LockChange valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsLockActionRecord.LockChange[] values();\n}", "des": "A type for the different locking actions."}
{"index": 7646, "code": "Enum CmsLockInfo.State {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsLockInfo.State valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsLockInfo.State[] values();\n}", "des": "An enum indicating the success or type of failure of a locking operation."}
{"index": 7647, "code": "Class CmsLockReportInfo {\n\t// Returns the lockedResourceInfos.\n\tjava.util.List<CmsListInfoBean> getLockedResourceInfos();\n\t// Returns the resourceInfo.\n\tCmsListInfoBean getResourceInfo();\n}", "des": "A bean holding the lock report info."}
{"index": 7648, "code": "Class CmsLog4jUtil {\n\t// Gets the list of all loggers.\n\tstatic java.util.List<org.apache.logging.log4j.core.Logger> getAllLoggers();\n\t// Gets the parent logger name for a given logger name, or null if there is no parent logger name.\n\tstatic java.lang.String getParentLoggerName​(java.lang.String loggerName);\n}", "des": "Utilities for dealing with log4j loggers."}
{"index": 7649, "code": "Class CmsLogChannelTable {\n\t// Adds a container item for the given logger.\n\tvoid addItemForLogger​(org.apache.logging.log4j.core.Logger logger);\n\t// Filters the table according to given search string.\n\tvoid filterTable​(java.lang.String search);\n\t// Toggles the log file of a given log channel.\n\tprotected void toggleOwnFile​(org.apache.logging.log4j.core.Logger logchannel);\n}", "des": "Class for table to display and edit Log channels."}
{"index": 7650, "code": "Class CmsLogDownloadDialog {\n\t// Creates log-file resource for download.\n\tprotected com.vaadin.server.Resource getDownloadResource();\n\t// En/ disables the combo box for files.\n\tprotected void setComboBoxEnable();\n}", "des": "Class for the Download dialog."}
{"index": 7651, "code": "Class CmsLogDownloadDialog.ZipGenerator {\n\t// Adds a file to a zip-stream.\n\tvoid addToZip​(java.io.File directory, java.io.File file);\n\t// Closes the zip stream.\n\tvoid close();\n}", "des": "Helper class for generating the zip file for the log download."}
{"index": 7652, "code": "Class CmsLogEntry {\n\t// Returns the additional data.\n\tjava.lang.String[] getData();\n\t// Returns the date.\n\tlong getDate();\n\t// Returns the formatted details for this log entry.\n\tjava.lang.String getDetails​(java.util.Locale locale);\n\t// Returns the structure id.\n\tCmsUUID getStructureId();\n\t// Returns the type.\n\tCmsLogEntryType getType();\n\t// Returns the user id.\n\tCmsUUID getUserId();\n}", "des": "Wrapper class for a DB log entry."}
{"index": 7653, "code": "Class CmsLogFileOptionProvider {\n\t// Gets the additional configured log folders.\n\tstatic java.util.List<java.lang.String> getAdditionalLogDirectories();\n\t// Gets the log file options.\n\tstatic java.util.TreeSet<java.io.File> getLogFiles();\n}", "des": "Provides log files which should be available as options in the OpenCms log file viewer."}
{"index": 7654, "code": "Class CmsLogFileView {\n\t// Gets currently shown file.\n\tprotected java.lang.String getCurrentFile();\n\t// Updates the log file view after changes.\n\tvoid updateView();\n}", "des": "Class for the view of log files."}
{"index": 7655, "code": "Class CmsLogicalCheckboxGroup {\n\t// Adds a check box to the group.\n\tvoid add​(com.vaadin.v7.ui.CheckBox checkBox);\n\t// Gets the currently selected check box.\n\tcom.vaadin.v7.ui.CheckBox getSelected();\n\t// Removes a check box from the group.\n\tvoid remove​(com.vaadin.v7.ui.CheckBox checkBox);\n\t// Sets the active check box.\n\tprotected void setActiveCheckBox​(com.vaadin.v7.ui.CheckBox box);\n\t// Sets the change listener.\n\tvoid setChangeListener​(CmsLogicalCheckboxGroup.I_ChangeListener listener);\n}", "des": "Ensures that among a set of check boxes, at most one of them is checked, without imposing constraints on the location of the checkboxes in the UI."}
{"index": 7656, "code": "Class CmsLoginController.CmsLoginTargetInfo {\n\t// Returns the password.\n\tjava.lang.String getPassword();\n\t// Returns the target.\n\tjava.lang.String getTarget();\n\t// Returns the user.\n\tjava.lang.String getUser();\n}", "des": "Represents the login target information."}
{"index": 7657, "code": "Class CmsLoginController.LoginContext {\n\t// Gets the CmsObject.\n\tCmsObject getCms();\n\t// The second factor information for 2FA.\n\tCmsSecondFactorInfo getSecondFactorInfo();\n\t// Gets the user to be logged in.\n\tCmsUser getUser();\n\t// Sets the CMS context.\n\tvoid setCms​(CmsObject cms);\n\t// Sets the second factor information for 2FA.\n\tvoid setSecondFactorInfo​(CmsSecondFactorInfo secondFactorInfo);\n\t// Sets the user.\n\tvoid setUser​(CmsUser user);\n}", "des": "The login context."}
{"index": 7658, "code": "Class CmsLoginController.UserAgreementHelper {\n\t// Returns the initialized cms object for the current user.\n\tCmsObject getCms();\n\t// Returns the current users workplace settings.\n\tCmsWorkplaceSettings getSettings();\n\t// Initializes this workplace class instance.\n\tprotected void initWorkplaceMembers​(CmsJspActionElement jsp);\n}", "des": "Helper subclass of CmsLoginUserAgreement which can be used without a page context."}
{"index": 7659, "code": "Class CmsLoginOuSelector {\n\t// Gets the selected OU.\n\tjava.lang.String getValue();\n\t// Checks if a given OU is available for selection.\n\tboolean hasOrgUnit​(java.lang.String ou);\n\t// Initializes the select options.\n\tvoid initOrgUnits​(java.util.List<CmsOrganizationalUnit> orgUnits, boolean addEmptyOption);\n\t// Returns true if the OU selector should remain hidden.\n\tboolean isAlwaysHidden();\n\t// Sets the selected OU.\n\tvoid setValue​(java.lang.String value);\n}", "des": "Widget used to allow the user to search and select an organizational unit."}
{"index": 7660, "code": "Class CmsLoginPasswordField {\n\tprotected CmsPasswordFieldState getState();\n\tprotected CmsPasswordFieldState getState​(boolean dirty);\n\t// Checks if the password is visible.\n\tboolean isPasswordVisible();\n\t// Sets the visibility of the password.\n\tvoid setPasswordVisible​(boolean visible);\n}", "des": "Password field for the login dialog."}
{"index": 7661, "code": "Class CmsLoginUI.Parameters {\n\t// Gets the locale.\n\tjava.util.Locale getLocale();\n\t// Gets the PC type (private or public).\n\tjava.lang.String getPcType();\n\t// Gets the preselected OU.\n\tjava.lang.String getPreselectedOu();\n\t// Gets the requested resource path.\n\tjava.lang.String getRequestedResource();\n\t// Returns the requested workplace app path.\n\tjava.lang.String getRequestedWorkplaceApp();\n}", "des": "Parameters which are initialized during the initial page load of the login dialog."}
{"index": 7662, "code": "Class CmsLogReport {\n\t// Updates this report, this processes all new output added since the last call to this method.\n\tjava.lang.String getReportUpdate();\n\t// Prints a String to the report, using the indicated formatting.\n\tvoid print​(java.lang.String value, int format);\n\t// Adds a line break to the report.\n\tvoid println();\n\t// Adds an Exception to the report, ensuring that the Exception content is processed to generate a valid output esp.\n\tvoid println​(java.lang.Throwable t);\n}", "des": "Report class used for the logfile."}
{"index": 7663, "code": "Class CmsLuceneIndexWriter {\n\t// Close this IndexWriter.\n\tvoid close();\n\t// Commit all previous operations.\n\tvoid commit();\n\t// Delete a document from the index.\n\tvoid deleteDocument​(CmsPublishedResource resource);\n\t// Optimizes the index.\n\tvoid optimize();\n\t// Update a document in the index.\n\tvoid updateDocument​(java.lang.String rootPath, I_CmsSearchDocument document);\n}", "des": "Delegates indexing to a standard Lucene IndexWriter."}
{"index": 7664, "code": "Class CmsManyToOneMap<K,​V> {\n\t// Gets the value for a key.\n\tV get​(K key);\n\t// Associates a value with a key.\n\tvoid put​(K key, V value);\n\t// Removes the entry with the given key.\n\tvoid remove​(K key);\n\t// Removes all entries with the given value.\n\tvoid removeValue​(V value);\n}", "des": "Special collection class which allows lookup from keys to values and from values to sets of keys."}
{"index": 7665, "code": "Enum CmsMappingResolutionContext.AttributeType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsMappingResolutionContext.AttributeType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsMappingResolutionContext.AttributeType[] values();\n}", "des": "The attribute type."}
{"index": 7666, "code": "Class CmsMaxHeightExtension {\n\t// Adds an action to execute when the height is changed.\n\tvoid addHeightChangeHandler​(CmsMaxHeightExtension.I_HeightChangeHandler action);\n\t// Called in case the widget content exceeds the max height.\n\tvoid fixHeight​(int height);\n\tprotected CmsMaxHeightState getState();\n\t// Removes a height change handler.\n\tvoid removeHeightChangeHandler​(java.lang.Runnable action);\n\t// Updates the maximum height.\n\tvoid updateMaxHeight​(int maxHeight);\n}", "des": "Allows the use of max height in combination with vaadin layout components."}
{"index": 7667, "code": "Class CmsMaxHeightState {\n\t// Returns the max height.\n\tint getMaxHeight();\n\t// Sets the max height.\n\tvoid setMaxHeight​(int maxHeight);\n}", "des": "The max height shared state."}
{"index": 7668, "code": "Enum CmsMemoryMonitor.CacheType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsMemoryMonitor.CacheType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsMemoryMonitor.CacheType[] values();\n}", "des": "Cache types."}
{"index": 7669, "code": "Class CmsMenuItemVisibilitySingleOnly {\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n\t// Gets the visibility for the current dialog context.\n\tCmsMenuItemVisibilityMode getVisibility​(I_CmsDialogContext context);\n}", "des": "Decorator for menu item visibility classes which always returns INVISIBLE if more than one resource is passed, but otherwise delegates the decision to its wrapped instance."}
{"index": 7670, "code": "Class CmsMessageBundleEditorModel.SortedProperties {\n\t// Override to omit the date comment.\n\tvoid store​(java.io.OutputStream out, java.lang.String comments);\n\t// Override to omit the date comment.\n\tvoid store​(java.io.Writer writer, java.lang.String comments);\n}", "des": "Extension of Properties to allow saving with keys alphabetically ordered and without time stamp as first comment."}
{"index": 7671, "code": "Enum CmsMessageBundleEditorTypes.BundleType {\n\t// An adjusted version of what is typically Enum.valueOf().\n\tstatic CmsMessageBundleEditorTypes.BundleType toBundleType​(java.lang.String value);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsMessageBundleEditorTypes.BundleType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsMessageBundleEditorTypes.BundleType[] values();\n}", "des": "Types of bundles editable by the Editor."}
{"index": 7672, "code": "Enum CmsMessageBundleEditorTypes.TableProperty {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsMessageBundleEditorTypes.TableProperty valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsMessageBundleEditorTypes.TableProperty[] values();\n}", "des": "The propertyIds of the table columns."}
{"index": 7673, "code": "Class CmsMessageContainer {\n\t// Returns the message arguments to use.\n\tjava.lang.Object[] getArgs();\n\t// Returns the message bundle used by this container.\n\tI_CmsMessageBundle getBundle();\n\t// Returns the message key to use.\n\tjava.lang.String getKey();\n\t// Returns the localized message described by this container for the OpenCms default locale.\n\tjava.lang.String key();\n\t// Returns the localized message described by this container for the given locale.\n\tjava.lang.String key​(java.util.Locale locale);\n}", "des": "Contains a localized message key, it's arguments and a I_CmsMessageBundle."}
{"index": 7674, "code": "Class CmsMessageToBundleIndex {\n\t// Gets the root path of the bundle file for the given message key.\n\tjava.lang.String getBundlePathForKey​(java.lang.String key);\n\t// Reads the bundle information for the whole system.\n\tstatic CmsMessageToBundleIndex read​(CmsObject cms);\n}", "des": "A lookup table used to find out which VFS based message bundles (XML/property bundles) contain a given key."}
{"index": 7675, "code": "Class CmsMetaMapping {\n\t// Returns the mapping default value.\n\tjava.lang.String getDefaultValue();\n\t// Returns the mapped element xpath.\n\tjava.lang.String getElement();\n\t// Returns the mapping key.\n\tjava.lang.String getKey();\n\t// Returns the mapping order.\n\tint getOrder();\n}", "des": "Configuration bean for meta mappings."}
{"index": 7676, "code": "Class CmsMimeType {\n\t// MIME-types are compared according to the type first, and to the extension second.\n\tint compareTo​(CmsMimeType obj);\n\t// MIME-types are equal is the extension is equal.\n\tboolean equals​(java.lang.Object obj);\n\t// Returns the MIME type file extension.\n\tjava.lang.String getExtension();\n\t// Returns the MIME type description.\n\tjava.lang.String getType();\n\t// Returns true if this MIME type has been read from the OpenCms configuration.\n\tboolean isConfigured();\n}", "des": "Describes a MIME type configured in OpenCms."}
{"index": 7677, "code": "Class CmsModelInfo {\n\t// Returns the model group info.\n\tjava.util.List<CmsModelPageEntry> getModelGroups();\n\t// Returns the model page info.\n\tjava.util.List<CmsModelPageEntry> getModelPages();\n\t// Returns the parent model pages.\n\tjava.util.List<CmsModelPageEntry> getParentModelPages();\n}", "des": "Wraps the model page and model group info into one object."}
{"index": 7678, "code": "Class CmsModelPageConfig {\n\tCmsModelPageConfig clone();\n\t// The name of the configuration object.\n\tjava.lang.String getKey();\n\t// Gets the model page resource.\n\tCmsResource getResource();\n\t// Returns true if this is a default model page.\n\tboolean isDefault();\n\t// Returns true if this entry disables the model page.\n\tboolean isDisabled();\n\t// Merges this configuration object with a child configuration object.\n\tCmsModelPageConfig merge​(CmsModelPageConfig child);\n}", "des": "This class contains the model page configuration for a sitemap region."}
{"index": 7679, "code": "Class CmsModelPageConfigWithoutResource {\n\t// Gets the structure id.\n\tCmsUUID getStructureId();\n\t// Returns true if this is a default model page.\n\tboolean isDefault();\n\t// Returns true if this entry disables the model page.\n\tboolean isDisabled();\n}", "des": "This class contains the model page configuration for a sitemap region, without the actual resource."}
{"index": 7680, "code": "Class CmsModelResourceInfo {\n\t// Returns the model resource structure id.\n\tCmsUUID getStructureId();\n\t// Sets the model resource structure id.\n\tvoid setStructureId​(CmsUUID structureId);\n}", "des": "Bean holding model resource information to be displayed in the model select dialog."}
{"index": 7681, "code": "Enum CmsModule.ExportMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsModule.ExportMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsModule.ExportMode[] values();\n}", "des": "The available module export modes."}
{"index": 7682, "code": "Class CmsModuleDependencyWidget {\n\t// Creates a new widget instance for the given module dependency.\n\tstatic CmsModuleDependencyWidget create​(CmsModuleDependency dep);\n\t// Gets the module name.\n\tjava.lang.String getModuleName();\n\t// Gets the module version.\n\tjava.lang.String getModuleVersion();\n}", "des": "Widget used to edit a module dependency."}
{"index": 7683, "code": "Class CmsModuleImportExportRepository.ModuleExportData {\n\t// Gets the exported data.\n\tbyte[] getContent();\n\t// Gets the last modification date.\n\tlong getDateLastModified();\n}", "des": "Holds exported module data and a modification date."}
{"index": 7684, "code": "Class CmsModuleImportFile {\n\t// Gets the module data.\n\tCmsModule getModule();\n\t// Gets the path of the zip file.\n\tjava.lang.String getPath();\n\t// Loads the module data from the zip file and validates whether the module is importable, throwing an exception otherwise.\n\tvoid loadAndValidate();\n}", "des": "A bean representing a module zip file to be imported."}
{"index": 7685, "code": "Class CmsModuleImportForm {\n\t// Gets the cancel button.\n\tprotected com.vaadin.ui.Button getCancelButton();\n\t// Gets the OK button.\n\tprotected com.vaadin.ui.Button getOkButton();\n\t// Returns the site selector for the module import.\n\tprotected CmsAutoItemCreatingComboBox getSiteSelector();\n}", "des": "The form for importing modules via HTTP."}
{"index": 7686, "code": "Class CmsModuleLog {\n\t// Gets the log file for the given module name.\n\tjava.io.File getLogFile​(java.lang.String moduleName);\n\t// Logs a module action.\n\tvoid log​(java.lang.String moduleName, CmsModuleLog.Action action, boolean ok);\n\t// Reads the log file and returns the data.\n\tbyte[] readLog​(java.lang.String moduleName);\n}", "des": "This class is responsible for reading and writing module import/export log messages, to be used by CmsResourceWrapperModules."}
{"index": 7687, "code": "Enum CmsModuleLog.Action {\n\t// Gets the name to be written to the log.\n\tjava.lang.String getPrintName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsModuleLog.Action valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsModuleLog.Action[] values();\n}", "des": "Action type."}
{"index": 7688, "code": "Class CmsModuleResourceSelectField {\n\t// Gets the options object.\n\tprotected CmsResourceSelectDialog.Options getOptions();\n\t// Method to set cms object to make it possible to user other site context.\n\tvoid setCmsObject​(CmsObject cms);\n\t// Updates the site root.\n\tvoid updateSite​(java.lang.String siteRoot);\n}", "des": "A widget for selecting a module resource."}
{"index": 7689, "code": "Class CmsModuleRow {\n\tboolean equals​(java.lang.Object other);\n\t// Gets the module group.\n\tjava.lang.String getGroup();\n\t// Gets the icon to display.\n\tcom.vaadin.server.Resource getIcon();\n\t// Gets the module.\n\tCmsModule getModule();\n\t// Gets the name of the module.\n\tjava.lang.String getName();\n\t// Gets the nice name of the module.\n\tjava.lang.String getTitle();\n\t// Gets the number of resource types defined.\n\tint getTypes();\n\t// Gets the version.\n\tjava.lang.String getVersion();\n}", "des": "Represents a row of the modules overview table."}
{"index": 7690, "code": "Class CmsModuleTable<T> {\n\t// Opens the import module dialog.\n\tvoid importModule();\n\t// Handles the table item clicks.\n\tprotected void onItemClick​(com.vaadin.v7.event.ItemClickEvent event);\n\t// Reloads the table data.\n\tvoid reload();\n}", "des": "Overview list for module information."}
{"index": 7691, "code": "Class CmsModuleVersion {\n\tint compareTo​(java.lang.Object obj);\n\tboolean equals​(java.lang.Object obj);\n\t// Returns the current version String.\n\tjava.lang.String getVersion();\n\t// Increments this version number by 1 in the last digit.\n\tprotected void increment();\n\t// Returns the updated status.\n\tprotected boolean isUpdated();\n\t// Sets the updated status.\n\tprotected void setUpdated​(boolean updated);\n\t// Sets the version as a String.\n\tvoid setVersion​(java.lang.String version);\n}", "des": "A version number for an OpenCms module."}
{"index": 7692, "code": "Enum CmsModuleXmlHandler.XmlWriteMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsModuleXmlHandler.XmlWriteMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsModuleXmlHandler.XmlWriteMode[] values();\n}", "des": "Enum used to distinguish whether we want to generate the XML for a module export's manifest or the XML for writing back opencms-modules.xml."}
{"index": 7693, "code": "Class CmsMoveResourceTypeDialog {\n\t// Filters the table.\n\tprotected void filterTable​(java.lang.String text);\n\t// Get the module name.\n\tprotected java.lang.String getModuleName();\n\t// Set ok button.\n\tprotected void setOkButton();\n\t// Update the resource type.\n\tprotected void updateResourceType​(com.vaadin.ui.Window window);\n}", "des": "Class for a dialog to move resource types to modules."}
{"index": 7694, "code": "Class CmsMoveUserToOU {\n\t// En/disables the ok button.\n\tprotected void setOkState();\n\t// Perform ok action.\n\tprotected void submit​(com.vaadin.ui.Window window, CmsAccountsApp app);\n}", "des": "Dialog to change OU of given user."}
{"index": 7695, "code": "Interface CmsNewResourceBuilder.I_Callback {\n\t// Error handler.\n\tvoid onError​(java.lang.Exception e);\n\t// This should be called after the resource is fully created and its properties have been set.\n\tvoid onResourceCreated​(CmsNewResourceBuilder builder);\n}", "des": "Interface for callbacks which should be notified when this helper has created a resource."}
{"index": 7696, "code": "Class CmsNewsletter {\n\t// Adds a OpenCms resource as an attachment to the newsletter.\n\tvoid addAttachment​(CmsObject cms, CmsResource resource);\n\t// Adds content to the newsletter.\n\tvoid addContent​(I_CmsNewsletterContent content);\n\t// Returns the e-mail for the newsletter.\n\torg.apache.commons.mail.Email getEmail​(CmsObject cms, I_CmsNewsletterRecipient recipient);\n\t// Sets the subject.\n\tvoid setSubject​(java.lang.String subject);\n}", "des": "Basic implementation of the interface I_CmsNewsletter."}
{"index": 7697, "code": "Class CmsNewsletterContent {\n\tint compareTo​(I_CmsNewsletterContent o);\n\tboolean equals​(java.lang.Object obj);\n\t// Returns the channel.\n\tjava.lang.String getChannel();\n\t// Returns the content.\n\tjava.lang.String getContent();\n\t// Returns the order of this content in it's channel.\n\tint getOrder();\n\t// Returns the type.\n\tCmsNewsletterContentType getType();\n}", "des": "Content for newsletters."}
{"index": 7698, "code": "Class CmsNotificationCandidates {\n\t// Returns a collection of CmsContentNotifications, one for each responsible that receives a notification.\n\tprotected java.util.Collection<CmsContentNotification> getContentNotifications();\n\t// Sends all notifications to the responsible users.\n\tjava.lang.String notifyResponsibles();\n}", "des": "The basic class for the content notification feature in OpenCms."}
{"index": 7699, "code": "Class CmsNotificationCause {\n\t// Returns true if the Object equals to the corresponding CmsNotificationCause, that means a notification cause with the same resource and cause.\n\tboolean equals​(java.lang.Object o);\n\t// Returns the cause.\n\tint getCause();\n\t// Returns the resource.\n\tCmsUUID getResourceId();\n\t// Sets the cause.\n\tvoid setCause​(int cause);\n\t// Sets the resource.\n\tvoid setResourceId​(CmsUUID resourceId);\n}", "des": "Objects of this class are serialized in the additional infos of a user to store, which resources were already confirmed by the user."}
{"index": 7700, "code": "Class CmsOfflineToolHandler {\n\t// Returns the help text if disabled.\n\tjava.lang.String getDisabledHelpText();\n\t// Returns the state of the admin tool for a given cms context.\n\tboolean isEnabled​(CmsObject cms);\n}", "des": "This tool handler disables the tool if in online project."}
{"index": 7701, "code": "Class CmsOkCancelActionHandler {\n\t// Called on key press 'Esc'.\n\tprotected abstract void cancel();\n\tcom.vaadin.event.Action[] getActions​(java.lang.Object target, java.lang.Object sender);\n\tvoid handleAction​(com.vaadin.event.Action action, java.lang.Object sender, java.lang.Object target);\n\t// Called on key press 'Enter'.\n\tprotected abstract void ok();\n}", "des": "Shortcut handler triggered on 'Enter' and 'Esc' to trigger OK and Cancel actions."}
{"index": 7702, "code": "Class CmsOnlyAdminToolHandler {\n\t// Returns the state of the admin tool for a given cms context.\n\tboolean isEnabled​(CmsObject cms);\n\t// Returns the visibility flag for a given cms context.\n\tboolean isVisible​(CmsObject cms);\n}", "des": "This tool handler hides the tool to non admin users."}
{"index": 7703, "code": "Class CmsOpenGallery {\n\t// Analyzes the request for workplace parameters and adjusts the workplace settings accordingly.\n\tprotected void initWorkplaceRequestValues​(CmsWorkplaceSettings settings, javax.servlet.http.HttpServletRequest request);\n\t// Generates a javascript window open for the requested gallery type.\n\tjava.lang.String openGallery();\n}", "des": "Provides methods for open gallery dialog."}
{"index": 7704, "code": "Class CmsOUEditDialog {\n\t// Checks if given resource is invalid.\n\tprotected boolean isInvalidResourceName​(java.lang.String resourceName);\n\t// Check if resource is in parent OU.\n\tprotected boolean isOutOfOu​(java.lang.String resourceName);\n\t// Checks if all fields are valid.\n\tprotected boolean isValid();\n\t// Adds validators to fields.\n\tprotected void validate();\n}", "des": "Class for the ou edit and new dialog."}
{"index": 7705, "code": "Class CmsOUHandler {\n\t// Get base ou for given manageable ous.\n\tjava.lang.String getBaseOU();\n\t// Gets List of managable OU names for the current user.\n\tstatic java.util.List<java.lang.String> getManagableOUs​(CmsObject cms);\n\t// Checks if given ou is manageable.\n\tboolean isOUManagable​(java.lang.String ou);\n\t// Checks if given ou is parent of a managable ou.\n\tboolean isParentOfManagableOU​(java.lang.String name);\n}", "des": "Ou Handler."}
{"index": 7706, "code": "Class CmsOUTable {\n\t// Method which gets called to filter table.\n\tvoid filter​(java.lang.String data);\n\t// Gets a layout in case of empty table.\n\tcom.vaadin.v7.ui.VerticalLayout getEmptyLayout();\n\t// Checks if user has role to edit ou.\n\tprotected boolean isAdmin();\n\t// Updates app.\n\tprotected void updateApp​(java.lang.String itemId);\n}", "des": "Class to show ous in table for account management."}
{"index": 7707, "code": "Class CmsOuTree {\n\t// Handle expand action.\n\tprotected void handleExpand​(java.lang.Object itemId);\n\t// Handle item click.\n\tprotected void handleItemClick​(java.lang.Object itemId);\n\t// Opens given path.\n\tvoid openPath​(java.lang.String path, I_CmsOuTreeType type, CmsUUID groupID);\n}", "des": "Class for the OU Tree."}
{"index": 7708, "code": "Class CmsPagingQuery {\n\t// Enables or disables the naming of subqueries.\n\tvoid setNameSubquery​(boolean nameSubquery);\n\t// Sets both the page size and current page to use for the query.\n\tvoid setPaging​(int pageSize, int page);\n\t// Enables the use of window functions.\n\tvoid setUseWindowFunctions​(boolean useWindowFunctions);\n\t// Generates the SQL and parameters and sends them to the statement builder .\n\tvoid visit​(CmsStatementBuilder builder);\n}", "des": "Wrapper for CmsSelectQuery objects which adds SQL code for results paging."}
{"index": 7709, "code": "Class CmsParameterStore.WeightedValue {\n\t// Gets the source of the value (for debugging).\n\tjava.lang.String getSource();\n\t// Gets the value.\n\tjava.lang.String getValue();\n\t// Gets the weight of the value.\n\tdouble getWeight();\n}", "des": "An individual weighted parameter value, with a 'source' attribute for better debuggability."}
{"index": 7710, "code": "Class CmsPasswordChangeNotification {\n\t// Overwrite the method to generate the message body of the notification.\n\tprotected java.lang.String generateHtmlMsg();\n\t// Overwrite the method to return the path to the xmlcontent, where the subject, the header and the footer are defined.\n\tprotected java.lang.String getNotificationContent();\n}", "des": "Notification used to send password change link to user."}
{"index": 7711, "code": "Class CmsPasswordFieldState {\n\t// Returns true if the password is visible.\n\tboolean isPasswordVisible();\n\t// Sets the password visibility.\n\tvoid setPasswordVisible​(boolean visible);\n}", "des": "Widget state for the special password field used by the login dialog."}
{"index": 7712, "code": "Class CmsPath {\n\t// Gets the path as a string.\n\tjava.lang.String asString();\n\tint compareTo​(CmsPath o);\n\tboolean equals​(java.lang.Object obj);\n\t// Returns true if this path is a prefix of the path given as parameter.\n\tboolean isPrefixOf​(CmsPath path);\n\t// Returns true if this path is a prefix path of the given path\n\tboolean isPrefixOfStr​(java.lang.String path);\n}", "des": "Simple data holder class which stores a path in a normalized form."}
{"index": 7713, "code": "Class CmsPathIncludeExcludeSet {\n\t// Adds an excluded path.\n\tvoid addExclude​(java.lang.String exclude);\n\t// Adds an included path.\n\tvoid addInclude​(java.lang.String include);\n\t// Gets the root include paths, i.e.\n\tjava.util.Set<java.lang.String> getIncludeRoots();\n\t// Checks if the given path is excluded by the include/exclude configuration.\n\tboolean isExcluded​(java.lang.String path);\n\t// Converts a path to a normalized form.\n\tprotected java.lang.String normalizePath​(java.lang.String path);\n}", "des": "A helper class used for calculating which paths need to be included or excluded from the XML sitemap generation."}
{"index": 7714, "code": "Class CmsPathMap<V> {\n\t// Adds an element for the given path, overwriting the previous element for that path if there is one.\n\tvoid add​(java.lang.String path, V value);\n\t// Gets the values for the direct children of the given path.\n\tjava.util.List<V> getChildValues​(java.lang.String path);\n\t// Gets the values for the descendants of the path, including the path itself.\n\tjava.util.List<V> getDescendantValues​(java.lang.String path);\n}", "des": "Data structure which stores contents indexed by path."}
{"index": 7715, "code": "Class CmsPathValue {\n\t// Gets the path.\n\tjava.lang.String getPath();\n\t// Gets the value.\n\tjava.lang.String getValue();\n\t// Creates a new path value with the same value as this one, but with a prefix prepended to the path.\n\tCmsPathValue prepend​(java.lang.String pathPart);\n}", "des": "A bean which represents a value together with a path which indicates from where the value has been read."}
{"index": 7716, "code": "Class CmsPdfLink {\n\t// Returns the content.\n\tCmsResource getContent();\n\t// Gets the formatter resource.\n\tCmsResource getFormatter();\n\t// Returns the link.\n\tjava.lang.String getLink();\n\t// Returns the locale.\n\tjava.util.Locale getLocale();\n}", "des": "This class is responsbile for creating and parsing links to generated PDFs."}
{"index": 7717, "code": "Class CmsPdfThumbnailLink {\n\t// Gets the image format.\n\tjava.lang.String getFormat();\n\t// Returns the height.\n\tint getHeight();\n\t// Gets the link, with the options appended as a request parameter.\n\tjava.lang.String getLinkWithOptions();\n\t// Returns the page.\n\tint getPage();\n\t// Returns the width.\n\tint getWidth();\n}", "des": "Class to generate or parse a link to a PDF thumbnail."}
{"index": 7718, "code": "Class CmsPdfUserAgent {\n\tbyte[] getBinaryResource​(java.lang.String uri);\n\torg.xhtmlrenderer.resource.CSSResource getCSSResource​(java.lang.String uri);\n\torg.xhtmlrenderer.resource.ImageResource getImageResource​(java.lang.String uri);\n\t// Gets the shared context.\n\torg.xhtmlrenderer.layout.SharedContext getSharedContext();\n\tjava.lang.String resolveURI​(java.lang.String uri);\n\t// Sets the shared context.\n\tvoid setSharedContext​(org.xhtmlrenderer.layout.SharedContext sharedContext);\n}", "des": "This class is responsible for loading external resources while generating PDF from XHTML."}
{"index": 7719, "code": "Class CmsPermissionDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "The permission dialog action."}
{"index": 7720, "code": "Class CmsPermissionInfo {\n\t// Returns the noEditReason.\n\tjava.lang.String getNoEditReason();\n\t// Returns the hasViewPermission.\n\tboolean hasViewPermission();\n\t// Returns the hasWritePermission.\n\tboolean hasWritePermission();\n\t// Sets the no edit reason.\n\tvoid setNoEditReason​(java.lang.String noEditReason);\n}", "des": "The permission info bean."}
{"index": 7721, "code": "Interface CmsPermissionView.PermissionChangeHandler {\n\t// Called to delete a permission set.\n\tvoid deletePermissionSet​(java.lang.String principalType, java.lang.String principalName);\n\t// Called on view changes, allowing for resizing or centering.\n\tvoid onViewChange();\n\t// Sets a changed permission set.\n\tvoid setPermissions​(CmsPermissionBean permissionBean);\n}", "des": "Permission change handler."}
{"index": 7722, "code": "Class CmsPersistentLoginAuthorizationHandler {\n\t// Creates a new cms object from the given request object.\n\tCmsObject initCmsObject​(javax.servlet.http.HttpServletRequest request, I_CmsAuthorizationHandler.I_PrivilegedLoginAction loginAction);\n\t// Tries to initialize the CmsObject from a login token given as a cookie in the request.\n\tCmsObject initCmsObjectFromToken​(javax.servlet.http.HttpServletRequest request, I_CmsAuthorizationHandler.I_PrivilegedLoginAction loginAction);\n}", "des": "Authorization handler which uses a special cookie sent by the user's browser for authorization."}
{"index": 7723, "code": "Class CmsPersistentLoginTokenHandler.Token {\n\t// Gets the encoded token string representation.\n\tjava.lang.String encode();\n\t// Gets the additional info key to use for this token.\n\tjava.lang.String getAdditionalInfoKey();\n\t// Gets the key for this token.\n\tjava.lang.String getKey();\n\t// Gets the user name for this token.\n\tjava.lang.String getName();\n\t// Checks if this token is valid.\n\tboolean isValid();\n}", "des": "Bean representing the data encoded in a login token (user name and key)."}
{"index": 7724, "code": "Class CmsPoint {\n\t// Gets the x coordinate.\n\tdouble getX();\n\t// Gets the y coordinate.\n\tdouble getY();\n}", "des": "A point in 2D space."}
{"index": 7725, "code": "Class CmsPostUploadDialogService {\n\t// Loads the dialog bean info for the given resource.\n\tCmsPostUploadDialogPanelBean load​(CmsUUID id, boolean useConfiguration, boolean addBasicProperties);\n\t// Generates dialog data for prefetching in the host page.\n\tCmsPostUploadDialogBean prefetch();\n\t// Fetches the dialog data.\n\tstatic CmsPostUploadDialogBean prefetch​(javax.servlet.http.HttpServletRequest request);\n}", "des": "The service implementation for the org.opencms.ade.postupload module."}
{"index": 7726, "code": "Class CmsPreferenceData {\n\t// Gets the default value for the preference.\n\tjava.lang.String getDefaultValue();\n\t// Gets the name of the preference.\n\tjava.lang.String getName();\n\t// Gets the preference definition.\n\tCmsXmlContentProperty getPropertyDefinition();\n\t// Gets the tab on which the preference should be displayed.\n\tjava.lang.String getTab();\n}", "des": "Bean representing the configurable attributes for a preference."}
{"index": 7727, "code": "Class CmsPreferencesDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n}", "des": "The user preferences dialog action."}
{"index": 7728, "code": "Class CmsPrepareEditResponse {\n\t// Gets the resource root path.\n\tjava.lang.String getRootPath();\n\t// Gets the resource site path.\n\tjava.lang.String getSitePath();\n\t// Gets the resource structure id.\n\tCmsUUID getStructureId();\n\t// Sets the resource root path.\n\tvoid setRootPath​(java.lang.String rootPath);\n\t// Sets the resource site path.\n\tvoid setSitePath​(java.lang.String sitePath);\n\t// Sets the resource structure id.\n\tvoid setStructureId​(CmsUUID structureId);\n}", "des": "Response bean class for the 'prepareEdit' RPC method."}
{"index": 7729, "code": "Class CmsPrincipalBean {\n\t// Returns the description.\n\tjava.lang.String getDescription();\n\t// Returns the name.\n\tjava.lang.String getName();\n\t// Returns the isGroup.\n\tboolean isGroup();\n\t// Sets the description.\n\tvoid setDescription​(java.lang.String description);\n\t// Sets the isGroup.\n\tvoid setGroup​(boolean isGroup);\n\t// Sets the name.\n\tvoid setName​(java.lang.String name);\n}", "des": "A bean that holds the informations of a principal to show the availability dialog."}
{"index": 7730, "code": "Enum CmsPrincipalSelect.PrincipalType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsPrincipalSelect.PrincipalType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsPrincipalSelect.PrincipalType[] values();\n}", "des": "Type of principal."}
{"index": 7731, "code": "Enum CmsPrincipalSelect.WidgetType {\n\tjava.util.Set<CmsPrincipalSelect.PrincipalType> getPrincipalTypes();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsPrincipalSelect.WidgetType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsPrincipalSelect.WidgetType[] values();\n}", "des": "The widget types."}
{"index": 7732, "code": "Class CmsPrincipalSelectExtension {\n\t// Returns the principal select extension instance for the current UI.\n\tprotected static CmsPrincipalSelectExtension getInstance();\n\t// Sets the current select widget.\n\tvoid setCurrentSelect​(CmsPrincipalSelect select);\n\t// Sets the principal.\n\tvoid setPrincipal​(int type, java.lang.String principalName);\n}", "des": "The principal select extension."}
{"index": 7733, "code": "Class CmsPrincipalTable {\n\t// Filter for table.\n\tprotected void filterTable​(java.lang.String search);\n\t// Updates container.\n\tvoid updateContainer​(com.vaadin.v7.data.util.IndexedContainer data);\n}", "des": "Table to selecet principals used in the CmsPrincipalSelect vaadin element."}
{"index": 7734, "code": "Class CmsPriorityDateResourceComparator {\n\tint compare​(CmsResource res0, CmsResource res1);\n\t// Returns the date of this resource comparator key.\n\tlong getDate();\n\t// Returns the priority of this resource comparator key.\n\tint getPriority();\n}", "des": "Comparator for sorting resource objects based on priority and date."}
{"index": 7735, "code": "Class CmsPriorityTitleResourceComparator {\n\tint compare​(CmsResource res0, CmsResource res1);\n\t// Returns the priority of this resource comparator key.\n\tint getPriority();\n\t// Returns the title of this resource comparator key.\n\tjava.lang.String getTitle();\n}", "des": "Comparator for sorting resource objects based on priority and title."}
{"index": 7736, "code": "Class CmsProject.CmsProjectType {\n\t// Returns the default flags which should be set when a new project of this type is created.\n\tint getDefaultFlags();\n\t// Returns the copy mode object from the old copy mode integer.\n\tstatic CmsProject.CmsProjectType valueOf​(int mode);\n}", "des": "Enumeration class for project types."}
{"index": 7737, "code": "Class CmsProjectDeleteThread {\n\t// Returns the error exception in case there was an error during the execution of this Thread, null otherwise.\n\tjava.lang.Throwable getError();\n\t// Returns the part of the report that is ready for output.\n\tjava.lang.String getReportUpdate();\n\tvoid run();\n}", "des": "Deletes a project."}
{"index": 7738, "code": "Class CmsProjectDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n}", "des": "The set project dialog action."}
{"index": 7739, "code": "Class CmsProjectDriver {\n\t// Inserts an entry for a publish job .\n\tvoid createPublishJob​(CmsDbContext dbc, CmsPublishJobInfoBean publishJob);\n\t// Initializes the SQL manager for this driver.\n\tCmsSqlManager initSqlManager​(java.lang.String classname);\n\t// Writes a publish report for a publish job.\n\tvoid writePublishReport​(CmsDbContext dbc, CmsUUID publishId, byte[] content);\n}", "des": "Oracle/OCI implementation of the project driver methods."}
{"index": 7740, "code": "Class CmsProjectPreference {\n\t// Gets the user-independent property configuration.\n\tCmsXmlContentProperty getPropertyDefinition();\n\t// Gets the metadata describing how the setting should be edited.\n\tCmsXmlContentProperty getPropertyDefinition​(CmsObject cms);\n}", "des": "Preference subclass for selecting the start project."}
{"index": 7741, "code": "Class CmsProjectsTable {\n\t// Displays the given exception in the error dialog and reloads the UI on close.\n\tprotected void displayException​(java.lang.Throwable e);\n\t// Filters the displayed projects.\n\tvoid filterTable​(java.lang.String filter);\n\t// Loads the projects table.\n\tvoid loadProjects();\n\t// Displays project resources in a popup dialog.\n\tstatic void showProjectResources​(com.vaadin.v7.data.Item item);\n}", "des": "The projects table."}
{"index": 7742, "code": "Class CmsPropertiesActionElement {\n\t// Returns the serialized data for the core provider wrapped in a script tag.\n\tjava.lang.String export();\n\t// Returns the serialized data for the core provider.\n\tjava.lang.String exportAll();\n}", "des": "Action element class for opening the ADE properties dialog."}
{"index": 7743, "code": "Class CmsPropertyChangeSet {\n\t// Gets the list of property change beans.\n\tjava.util.List<CmsPropertyModification> getChanges();\n\t// Gets the structure id of the target resource.\n\tCmsUUID getTargetStructureId();\n}", "des": "A bean representing a set of property changes."}
{"index": 7744, "code": "Class CmsPropertyCompareBean {\n\t// Gets the attribute name.\n\tjava.lang.String getProperty();\n\t// Gets the value for the first version.\n\tjava.lang.String getV1();\n\t// Gets the value for the second version.\n\tjava.lang.String getV2();\n}", "des": "Represents a row in an attribute comparison table."}
{"index": 7745, "code": "Class CmsPropertyDiff {\n\t// Gets the caption.\n\tjava.lang.String getCaption();\n\t// Gets the attribute comparison beans representing the differences.\n\tjava.util.List<CmsAttributeComparison> getDifferences​(CmsObject cms, CmsHistoryResourceBean v1, CmsHistoryResourceBean v2);\n}", "des": "Displays differences between the sets of properties of two versions of a resource."}
{"index": 7746, "code": "Class CmsPropertyResourceBundle {\n\t// Creates a clone of the resource bundle.\n\tI_CmsResourceBundle getClone();\n\tjava.util.Locale getLocale();\n\t// Sets the locale used for this resource bundle.\n\tvoid setLocale​(java.util.Locale l);\n\t// Sets the parent bundle.\n\tvoid setParent​(java.util.ResourceBundle p);\n}", "des": "A property based resource bundle with increased visibility of some key methods."}
{"index": 7747, "code": "Class CmsPropertyTable {\n\t// Filters the table according to given search string.\n\tvoid filterTable​(java.lang.String search);\n\t// Fills table with items.\n\tvoid init();\n\t// Change to source search for showing resources for property definition.\n\tprotected void showResources​(java.lang.String propertyName);\n}", "des": "Class for the table containing all property definitions in the system."}
{"index": 7748, "code": "Enum CmsPropertyTable.TableColumn {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsPropertyTable.TableColumn valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsPropertyTable.TableColumn[] values();\n}", "des": "Table columns."}
{"index": 7749, "code": "Class CmsPublishGroup {\n\t// Returns the name.\n\tjava.lang.String getName();\n\t// Returns the resources.\n\tjava.util.List<CmsPublishResource> getResources();\n\t// Returns true if the GUI should be able to automatically select this group.\n\tboolean isAutoSelectable();\n\t// Sets the auto-selectable flag.\n\tvoid setAutoSelectable​(boolean autoSelectable);\n}", "des": "A publish group."}
{"index": 7750, "code": "Enum CmsPublishHistoryCleanupFilter.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsPublishHistoryCleanupFilter.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsPublishHistoryCleanupFilter.Mode[] values();\n}", "des": "Mode of operation for publish history cleanup."}
{"index": 7751, "code": "Class CmsPublishJobEnqueued {\n\t// Returns the time this object has been created.\n\tlong getEnqueueTime();\n\t// Returns the list of resources to publish.\n\tCmsPublishList getOriginalPublishList();\n\t// Returns the list of resources to publish.\n\tCmsPublishList getPublishList();\n\t// Returns the report for this publish job.\n\tI_CmsReport getReport();\n}", "des": "Defines a read-only publish job that is still waiting for publishing."}
{"index": 7752, "code": "Class CmsPublishJobFinished {\n\t// Returns the time this object has been created.\n\tlong getEnqueueTime();\n\t// Returns the time the publish job ends.\n\tlong getFinishTime();\n\t// Returns the time the publish job did actually start.\n\tlong getStartTime();\n}", "des": "Defines a read-only publish job that has been already published."}
{"index": 7753, "code": "Class CmsPublishJobRunning {\n\t// Returns the time this object has been created.\n\tlong getEnqueueTime();\n\t// Returns the list of resources to publish.\n\tCmsPublishList getOriginalPublishList();\n\t// Returns the list of resources to publish.\n\tCmsPublishList getPublishList();\n\t// Returns the report for this publish job.\n\tI_CmsReport getReport();\n\t// Returns the time the publish job did actually start.\n\tlong getStartTime();\n\t// Returns the UUID of the running publish thread.\n\tCmsUUID getThreadUUID();\n}", "des": "Defines a read-only publish job that is being published."}
{"index": 7754, "code": "Class CmsPublishListToken {\n\t// Gets the publish options.\n\tCmsPublishOptions getOptions();\n\t// Gets the selected workflow.\n\tCmsWorkflow getWorkflow();\n}", "des": "A bean which can be used to reconstruct a publish list."}
{"index": 7755, "code": "Class CmsPublishListVerifier {\n\t// Adds a forbidden parent folder.\n\tCmsUUID addForbiddenParentFolder​(java.lang.String parentFolder, java.lang.String reason);\n\t// Checks whether the given publish job is OK, and throws an exception otherwise.\n\tvoid checkPublishList​(CmsPublishList publishList);\n\t// Removes the forbidden parent folder using the id obtained while it was added.\n\tvoid removeForbiddenParentFolder​(CmsUUID id);\n}", "des": "Performs some additional checks on publish lists to prevent inconsistent VFS states."}
{"index": 7756, "code": "Enum CmsPublishManager.PublishListRemoveMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsPublishManager.PublishListRemoveMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsPublishManager.PublishListRemoveMode[] values();\n}", "des": "Enum for the different publish list remove modes."}
{"index": 7757, "code": "Class CmsPublishNotification {\n\t// Overwrite the method to generate the message body of the notification.\n\tprotected java.lang.String generateHtmlMsg();\n\t// Overwrite the method to return the path to the xmlcontent, where the subject, the header and the footer are defined.\n\tprotected java.lang.String getNotificationContent();\n}", "des": "Class to send a notification to an OpenCms user with a summary of warnings and errors occurred while publishing the project."}
{"index": 7758, "code": "Class CmsPublishQueue {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "Class for the Publish queue app."}
{"index": 7759, "code": "Class CmsPublishRelationFinder {\n\t// Gets the related resources in the form of a ResourceMap.\n\tCmsPublishRelationFinder.ResourceMap getPublishRelatedResources();\n\t// Removes unchanged resources from the top level, and if they have children which do not occur anywhere else, moves these children to the top level.\n\tvoid removeUnchangedTopLevelResources​(CmsPublishRelationFinder.ResourceMap publishRelatedResources, CmsPublishRelationFinder.ResourceMap reachability);\n}", "des": "Helper class for finding all related resources for a set of resources to be published, for use with the new ADE publish dialog."}
{"index": 7760, "code": "Class CmsPublishRelationFinder.ResourceMap {\n\t// Creates a new resource map based on this instance while filtering some elements out.\n\tCmsPublishRelationFinder.ResourceMap filter​(com.google.common.base.Predicate<CmsResource> pred);\n\tjava.util.Set<CmsResource> get​(java.lang.Object res);\n\t// Returns the sum of all sizes of set values.\n\tint totalSize();\n}", "des": "A map from resources to sets of resources, which automtically instantiates an empty set when accessing a key that doesn't exist via get()."}
{"index": 7761, "code": "Class CmsPublishResourceInfo {\n\t// Returns the type.\n\tCmsPublishResourceInfo.Type getType();\n\t// Returns the value.\n\tjava.lang.String getValue();\n\t// Returns if there is a problem type set.\n\tboolean hasProblemType();\n\t// Returns true if the publish resource should be hidden.\n\tboolean isHidden();\n}", "des": "A publish resource additional information bean."}
{"index": 7762, "code": "Enum CmsPublishResourceInfo.Type {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsPublishResourceInfo.Type valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsPublishResourceInfo.Type[] values();\n}", "des": "Reason value constants, when resources can not be published."}
{"index": 7763, "code": "Class CmsQueuedTable {\n\t// Filters the table according to given search string.\n\tvoid filterTable​(java.lang.String search);\n\t// Show report dialog.\n\tprotected void showReportDialog​(java.lang.String jobid);\n\t// Show resource dialog.\n\tprotected void showResourceDialog​(java.lang.String jobid);\n}", "des": "Class for Vaadin Table showing history queue elements."}
{"index": 7764, "code": "Class CmsQuickLaunchEditorConfiguration {\n\t// Returns a new app instance.\n\tI_CmsWorkplaceApp getAppInstance();\n\t// Gets the help text for the app in the given locale.\n\tjava.lang.String getHelpText​(java.util.Locale locale);\n\t// Returns the app icon resource.\n\tcom.vaadin.server.Resource getIcon();\n\t// Returns the unique app id.\n\tjava.lang.String getId();\n\t// Returns the display name of the app.\n\tjava.lang.String getName​(java.util.Locale locale);\n\t// Gets an integer used to sort items.\n\tint getOrder();\n}", "des": "Editor for the user quick launch configuration."}
{"index": 7765, "code": "Class CmsRadioSelectWidget {\n\t// Returns the default display type of this widget.\n\tI_CmsXmlContentHandler.DisplayType getDefaultDisplayType();\n\t// Generates the widget HTML for the provided widget parameter.\n\tjava.lang.String getDialogWidget​(CmsObject cms, I_CmsWidgetDialog widgetDialog, I_CmsWidgetParameter param);\n\t// Returns the class name of the widget.\n\tjava.lang.String getWidgetName();\n\t// Creates a duplicate of this widget instance.\n\tI_CmsWidget newInstance();\n}", "des": "Provides a widget for a standard HTML form for a group of radio buttons."}
{"index": 7766, "code": "Class CmsReindexDialogAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Action to reindex resources."}
{"index": 7767, "code": "Class CmsRelationDeleteValidator {\n\t// Returns the information bean for the given entry.\n\tCmsRelationValidatorInfoEntry getInfoEntry​(java.lang.String resourceName);\n\t// If no relation would be broken deleting the given resources.\n\tboolean isEmpty();\n\tjava.util.Set<java.lang.String> keySet();\n\tjava.util.Collection<java.util.List<CmsRelation>> values();\n}", "des": "Util class to find broken links in a bundle of resources to be deleted."}
{"index": 7768, "code": "Class CmsRelationPublishValidator {\n\t// Returns the information bean for the given entry.\n\tCmsRelationValidatorInfoEntry getInfoEntry​(java.lang.String resourceName);\n\t// If no relation would be broken deleting the given resources.\n\tboolean isEmpty();\n\tjava.util.Set<java.lang.String> keySet();\n\tjava.util.Collection<java.util.List<CmsRelation>> values();\n}", "des": "Util class to find broken links in a bundle of resources to be published."}
{"index": 7769, "code": "Class CmsRelationTargetListBean {\n\t// Adds a new resource.\n\tvoid add​(CmsResource resource);\n\t// Gets the list of resources which have been added.\n\tjava.util.List<CmsResource> getResources();\n\t// Returns true if any of the added resources have been changed.\n\tboolean isChanged();\n}", "des": "Helper bean used to collect a list of resources (usually relation targets) and keep track of whether any of them have the \"changed\" state."}
{"index": 7770, "code": "Enum CmsRelationType.CopyBehavior {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsRelationType.CopyBehavior valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsRelationType.CopyBehavior[] values();\n}", "des": "Enum representing how relations should be handled while copying resources."}
{"index": 7771, "code": "Class CmsRelationValidatorInfoEntry {\n\t// Returns the entry Name.\n\tjava.lang.String getName();\n\t// Returns all the relations for this entry.\n\tjava.util.List<CmsRelation> getRelations();\n\t// Returns the resource name.\n\tjava.lang.String getResourceName();\n\t// Returns the site name.\n\tjava.lang.String getSiteName();\n\t// Returns the site root.\n\tjava.lang.String getSiteRoot();\n}", "des": "Relation validator entry information bean."}
{"index": 7772, "code": "Class CmsRemoteShell {\n\t// Signals to the remote object that the client is done with it (i.e.\n\tvoid end();\n\t// Executes a shell command .\n\tCmsShellCommandResult executeCommand​(java.lang.String cmd, java.util.List<java.lang.String> params);\n\t// Returns the initial prompt to use.\n\tjava.lang.String getPrompt();\n\t// Removes and unexports all instances.\n\tstatic void unregisterAll();\n}", "des": "RMI object which wraps a CmsShell and can be used for shell command execution."}
{"index": 7773, "code": "Class CmsRemoteShellClient {\n\t// Main method, which starts the shell client.\n\tstatic void main​(java.lang.String[] args);\n\t// Validates, parses and returns the command line arguments.\n\tjava.util.Map<java.lang.String,​java.lang.String> parseArgs​(java.lang.String[] args);\n\t// Main loop of the shell server client.\n\tvoid run();\n}", "des": "Client application used to connect locally to the CmsShell server."}
{"index": 7774, "code": "Class CmsRemoteShellConfiguration {\n\t// Gets the RMI registry port.\n\tint getPort();\n\t// Returns true if the remote shell should be enabled.\n\tboolean isEnabled();\n}", "des": "RMI shell server configuration."}
{"index": 7775, "code": "Class CmsRemoteShellServer {\n\t// Initializes the remote shell server.\n\tstatic CmsRemoteShellServer initialize​(CmsSystemConfiguration systemConfiguration);\n\t// Initializes the RMI registry and exports the remote shell provider to it.\n\tvoid initServer();\n\t// Unregisters remote objects.\n\tvoid shutDown();\n}", "des": "This class is used to initialize the RMI mechanism and export the object used to access the remote shell."}
{"index": 7776, "code": "Class CmsRemovableFormRow<T extends com.vaadin.ui.Component> {\n\t// Returns the input field.\n\tT getInput();\n\t// Enables or diables the remove button.\n\tvoid setEnabledRemoveOption​(boolean enabled);\n\t// Sets a runnable, which runs when row gets removed.\n\tvoid setRemoveRunnable​(java.lang.Runnable remove);\n}", "des": "Removable form row."}
{"index": 7777, "code": "Class CmsRemovedElementStatus {\n\t// Gets the element delete mode.\n\tCmsCntPageData.ElementDeleteMode getElementDeleteMode();\n\t// Gets the list info bean for the removed element.\n\tCmsListInfoBean getElementInfo();\n\t// Gets the structure id of the removed element.\n\tCmsUUID getStructureId();\n\t// Returns true if the removed element is a possible candidate for deletion.\n\tboolean isDeletionCandidate();\n}", "des": "A bean used to store information about a container page element which was just removed."}
{"index": 7778, "code": "Class CmsRemoveInnerNameFallback {\n\t// Gets the fallback key for the given key, or the absent value if there is no fallback key.\n\tcom.google.common.base.Optional<java.lang.String> getFallbackKey​(java.lang.String key);\n\t// Should return the substitution for the current match of the matcher.\n\tjava.lang.String substituteMatch​(java.lang.String string, java.util.regex.Matcher matcher);\n}", "des": "Message key fallback handler used to enable reuse of localization keys for editor labels."}
{"index": 7779, "code": "Class CmsRemoveOldDbLogEntriesJob {\n\t// This method will be called when this scheduled job is executed.\n\tjava.lang.String launch​(CmsObject cms, java.util.Map<java.lang.String,​java.lang.String> parameters);\n\t// Parses the 'max-age' parameter and returns a value in hours.\n\tint parseMaxAge​(java.lang.String maxAgeStr);\n}", "des": "A scheduled job which removes entries older than a given amount of time from the CMS_LOG table, to improve database performance."}
{"index": 7780, "code": "Class CmsRemovePubLocksThread {\n\t// Returns the last error.\n\tjava.lang.Throwable getError();\n\t// Updates the report.\n\tjava.lang.String getReportUpdate();\n\t// Starts the report thread.\n\tvoid run();\n}", "des": "Remove the publish locks."}
{"index": 7781, "code": "Class CmsRenameInfoBean {\n\t// Gets the list info bean for the resource.\n\tCmsListInfoBean getListInfo();\n\t// Gets the site path of the resource.\n\tjava.lang.String getSitePath();\n\t// Gets the structure id of the resource.\n\tCmsUUID getStructureId();\n}", "des": "Bean class containing the information needed for the Rename dialog."}
{"index": 7782, "code": "Class CmsReplaceInfo {\n\t// Returns the file info.\n\tCmsListInfoBean getFileInfo();\n\t// Returns the maximum file upload size.\n\tlong getMaxFileSize();\n\t// Returns the resource site path.\n\tjava.lang.String getSitepath();\n\t// Returns if the file is lockable.\n\tboolean isLockable();\n}", "des": "File replace dialog info."}
{"index": 7783, "code": "Class CmsReplaceModuleInfo {\n\t// Gets the module.\n\tCmsModule getModule();\n\t// Returns true if the module updater was used.\n\tboolean usedUpdater();\n}", "des": "Status after updating a module."}
{"index": 7784, "code": "Class CmsReportOverlay {\n\t// Adds an action that should be executed if the report is finished.\n\tcom.google.gwt.event.shared.HandlerRegistration addReportFinishedHandler​(java.lang.Runnable handler);\n\t// Sets the window title.\n\tvoid setTitle​(java.lang.String title);\n}", "des": "Report overlay, shows the wait spinner first and the report window later in case off longer running threads."}
{"index": 7785, "code": "Class CmsReportUpdateItem {\n\t// Gets the message.\n\tjava.lang.Object getMessage();\n\t// Gets the entry type.\n\tCmsReportFormatType getType();\n}", "des": "Represents a single report entry."}
{"index": 7786, "code": "Class CmsReportWidget {\n\t// Adds an action that should be executed if the report is finished.\n\tcom.google.gwt.event.shared.HandlerRegistration addReportFinishedHandler​(java.lang.Runnable handler);\n\tprotected CmsReportWidgetState getState();\n\t// Requests a report update from the server.\n\tvoid requestReportUpdate();\n\t// Runs the 'report finished' handlers.\n\tprotected void runReportFinishedHandlers();\n\t// Sets the report thread.\n\tvoid setReportThread​(A_CmsReportThread thread);\n}", "des": "A widget used to display an OpenCms report."}
{"index": 7787, "code": "Class CmsRepository {\n\t// Initializes a configuration after all parameters have been added.\n\tvoid initConfiguration();\n\t// Initializes this repository with an admin CMS object.\n\tvoid initializeCms​(CmsObject cms);\n\t// Login a user given the username and the password.\n\tI_CmsRepositorySession login​(java.lang.String userName, java.lang.String password);\n}", "des": "Creates a repository session to access OpenCms."}
{"index": 7788, "code": "Class CmsResourceCategoryInfo {\n\t// Returns the category tree.\n\tjava.util.List<CmsCategoryTreeEntry> getCategoryTree();\n\t// Returns the current resource categories.\n\tjava.util.List<java.lang.String> getCurrentCategories();\n\t// Returns the resource info bean.\n\tCmsListInfoBean getResourceInfo();\n\t// Returns the resource structure id.\n\tCmsUUID getStructureId();\n}", "des": "Category information for a specific resource."}
{"index": 7789, "code": "Class CmsResourceContextMenuBuilder {\n\t// Adds a menu item provider.\n\tvoid addMenuItemProvider​(I_CmsContextMenuItemProvider provider);\n\t// Fills the given context menu with options appropriate for the selected resources.\n\tvoid buildContextMenu​(I_CmsDialogContext context, CmsContextMenu menu);\n\t// Gets a list of available context menu items.\n\tjava.util.List<I_CmsContextMenuItem> getMenuItems();\n}", "des": "Context menu builder for resource items."}
{"index": 7790, "code": "Class CmsResourceDataJsonHelper {\n\t// Adds path and link fields for the resource to the given JSON object.\n\tvoid addPathAndLink​(JSONObject json);\n\t// Adds property data to the result object.\n\tvoid addProperties​(JSONObject result);\n\t// Creates a JSON object with the attributes of the resource.\n\tJSONObject attributes();\n\t// Creates a JSON object with the properties of the resource.\n\tJSONObject properties​(boolean inherited);\n}", "des": "Helper class for formatting resource data as JSON."}
{"index": 7791, "code": "Class CmsResourceExtensionWrapperJsp {\n\t// Checks if the type id belongs to this resource wrapper.\n\tprotected boolean checkTypeId​(int typeId);\n\t// Returns the extension to add and/or remove to/from the resource.\n\tprotected java.lang.String getExtension();\n}", "des": "A resource type wrapper for jsp files, which adds the correct file extension \"jsp\" to the resources."}
{"index": 7792, "code": "Class CmsResourceExtensionWrapperXmlContent {\n\t// Checks if the type id belongs to this resource wrapper.\n\tprotected boolean checkTypeId​(int typeId);\n\t// Returns the extension to add and/or remove to/from the resource.\n\tprotected java.lang.String getExtension();\n}", "des": "A resource type wrapper for xml content files, which adds the correct file extension \"xml\" to the resources."}
{"index": 7793, "code": "Class CmsResourceExtensionWrapperXmlPage {\n\t// Checks if the type id belongs to this resource wrapper.\n\tprotected boolean checkTypeId​(int typeId);\n\t// Returns the extension to add and/or remove to/from the resource.\n\tprotected java.lang.String getExtension();\n}", "des": "A resource type wrapper for xml pages, which adds the correct file extension \"xml\" to the resources."}
{"index": 7794, "code": "Enum CmsResourceIcon.IconMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsResourceIcon.IconMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsResourceIcon.IconMode[] values();\n}", "des": "Enum used to control icon display style."}
{"index": 7795, "code": "Class CmsResourceManager.NamedTemplate {\n\t// Gets the template name.\n\tjava.lang.String getName();\n\t// Gets the template resource.\n\tCmsResource getResource();\n}", "des": "Bean containing a template resource and the name of the template."}
{"index": 7796, "code": "Class CmsResourceSelectDialog.Options {\n\t// Returns the siteSelectionContainer.\n\tcom.vaadin.v7.data.util.IndexedContainer getSiteSelectionContainer();\n\t// Sets the siteSelectionContainer.\n\tvoid setSiteSelectionContainer​(com.vaadin.v7.data.util.IndexedContainer siteSelectionContainer);\n}", "des": "Class for site select options."}
{"index": 7797, "code": "Class CmsResourceSelectDialogContents {\n\t// Gets the panel for additional widgets.\n\tcom.vaadin.ui.FormLayout getAdditionalWidgets();\n\t// Returns the content container.\n\tcom.vaadin.v7.ui.VerticalLayout getContainer();\n\t// Gets the site selector.\n\tcom.vaadin.v7.ui.ComboBox getSiteSelector();\n\t// Gets the tree data container.\n\tcom.vaadin.v7.ui.VerticalLayout getTreeContainer();\n}", "des": "Contents of the resource select dialog, filled using the declarative layout mechanism."}
{"index": 7798, "code": "Enum CmsResourceStatusTabId {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsResourceStatusTabId valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsResourceStatusTabId[] values();\n}", "des": "Enum used for identifying tabs in the resource info dialog."}
{"index": 7799, "code": "Class CmsResourceTable.ColumnEntry {\n\t// Returns the column.\n\tCmsResourceTableProperty getColumn();\n\t// Returns the collapsed.\n\tboolean isCollapsed();\n\t// Returns the visible.\n\tboolean isVisible();\n\t// Sets the column.\n\tvoid setColumn​(CmsResourceTableProperty column);\n\t// Sets the flags.\n\tvoid setFlags​(int flags);\n}", "des": "Contains the data for the given column, along with some flags to control visibility/collapsed status."}
{"index": 7800, "code": "Class CmsResourceTranslator {\n\t// Returns a copy of the initialized translation rules.\n\tjava.lang.String[] getTranslations();\n\t// Translate a resource name according to the expressions set in opencms-vfs.xml.\n\tjava.lang.String translateResource​(java.lang.String resourceName);\n}", "des": "Provides a resource name / path translation facility."}
{"index": 7801, "code": "Enum CmsResourceTypeBean.Origin {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsResourceTypeBean.Origin valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsResourceTypeBean.Origin[] values();\n}", "des": "Enum for data source from which resource type bean was constructed."}
{"index": 7802, "code": "Enum CmsResourceTypeBean.TypeVisibility {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsResourceTypeBean.TypeVisibility valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsResourceTypeBean.TypeVisibility[] values();\n}", "des": "Enum representing the visibility of a resource type in the bean."}
{"index": 7803, "code": "Enum CmsResourceTypeConfig.AddMenuType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsResourceTypeConfig.AddMenuType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsResourceTypeConfig.AddMenuType[] values();\n}", "des": "Enum used to distinguish the type of menu in which a configured resource type can be displayed."}
{"index": 7804, "code": "Enum CmsResourceTypeConfig.AddMenuVisibility {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsResourceTypeConfig.AddMenuVisibility valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsResourceTypeConfig.AddMenuVisibility[] values();\n}", "des": "Represents the visibility status of a resource type in the 'Add' menu of the container page editor."}
{"index": 7805, "code": "Class CmsResourceTypeFunctionConfig {\n\t// Returns the default for the cache property setting of this resource type.\n\tjava.lang.String getCachePropertyDefault();\n\t// Returns the static type name of this (default) resource type.\n\tstatic java.lang.String getStaticTypeName();\n\t// Checks if a resource has this type.\n\tstatic boolean isFunction​(CmsResource res);\n\t// Writes a resource, including it's content.\n\tCmsFile writeFile​(CmsObject cms, CmsSecurityManager securityManager, CmsFile resource);\n}", "des": "Resource type class for the second version of dynamic functions."}
{"index": 7806, "code": "Class CmsResourceTypeHtmlRedirect {\n\t// Returns the loader type id of this resource type.\n\tint getLoaderId();\n\t// Checks if the given resource is a htmlredirect.\n\tstatic boolean isRedirect​(CmsResource resource);\n}", "des": "The HTML redirect resource type."}
{"index": 7807, "code": "Class CmsResourceTypeImage.CmsImageAdjuster {\n\t// Calculates the image size and adjusts the image dimensions (if required) accoring to the configured image downscale settings.\n\tvoid adjust();\n\t// Returns the image content.\n\tbyte[] getContent();\n\t// Returns the image properties.\n\tjava.util.List<CmsProperty> getProperties();\n\t// Returns the image VFS root path.\n\tjava.lang.String getRootPath();\n}", "des": "A data container for image size and scale operations."}
{"index": 7808, "code": "Class CmsResourceTypeLocaleIndependentXmlContent {\n\t// Returns the default properties for this resource type in an unmodifiable List.\n\tjava.util.List<CmsProperty> getConfiguredDefaultProperties();\n\t// This overridden method ensures that configurations will always be created with an english locale node.\n\tprotected java.util.Locale getLocaleForNewContent​(CmsObject cms, CmsSecurityManager securityManager, java.lang.String resourcename, java.util.List<CmsProperty> properties);\n}", "des": "Special resource type for locale independent XML contents."}
{"index": 7809, "code": "Class CmsResourceTypeMacroFormatter {\n\t// Returns the default for the cache property setting of this resource type.\n\tjava.lang.String getCachePropertyDefault();\n\t// Returns the loader type id of this resource type.\n\tint getLoaderId();\n}", "des": "The macro formatter resource type."}
{"index": 7810, "code": "Class CmsResourceTypeStatResult {\n\tboolean equals​(java.lang.Object o);\n\t// Gets the localized result message.\n\tjava.lang.String getResult();\n\t// Getter for site root.\n\tjava.lang.String getSiteRoot();\n\t// Getter for timestamp.\n\tlong getTimestamp();\n\t// Getter for resource type.\n\tI_CmsResourceType getType();\n\t// Gets the title of the resource type.\n\tjava.lang.String getTypeTitle();\n}", "des": "Class for the result of a database statistic set."}
{"index": 7811, "code": "Class CmsResourceTypeStatResultList {\n\t// Adds a result to the list.\n\tvoid addResult​(CmsResourceTypeStatResult result);\n\t// Deletes entries which are older than MAX_TIME.\n\tvoid deleteOld();\n\t// Method to initialize the list.\n\tstatic CmsResourceTypeStatResultList init​(CmsResourceTypeStatResultList resList);\n\t// Checks if result list is empty.\n\tboolean isEmpty();\n\t// Sets the layout.\n\tvoid setVerticalLayout​(com.vaadin.v7.ui.VerticalLayout layout, boolean addAll);\n}", "des": "Class for the database-statistic result list."}
{"index": 7812, "code": "Class CmsResourceTypeStatsView {\n\t// Sets the cms object to selected site and returns it.\n\tprotected CmsObject getCmsObject();\n\t// Returns the type which is selected by UI.\n\tprotected I_CmsResourceType getType();\n}", "des": "Class for the database statistic view."}
{"index": 7813, "code": "Class CmsResourceTypeUnknown {\n\t// Unknown resource types are always loaded with the CmsDumpLoader.\n\tint getLoaderId();\n\t// Special version of the configuration initialization used with resource types to set resource type, id and class name, required for the XML configuration.\n\tvoid initConfiguration​(java.lang.String name, java.lang.String id, java.lang.String className);\n}", "des": "Resource type descriptor used in case the given resource type class in the XML configuration could not be instantiated."}
{"index": 7814, "code": "Class CmsResourceTypeUnknownFolder {\n\t// Returns the static type id of this (default) resource type.\n\tstatic int getStaticTypeId();\n\t// Returns the static type name of this (default) resource type.\n\tstatic java.lang.String getStaticTypeName();\n\t// Special version of the configuration initialization used with resource types to set resource type, id and class name, required for the XML configuration.\n\tvoid initConfiguration​(java.lang.String name, java.lang.String id, java.lang.String className);\n}", "des": "Resource type descriptor for unknown folder types."}
{"index": 7815, "code": "Class CmsResourceUtil.CmsResourceProjectState {\n\t// Checks if this is a LOCKED_FOR_PUBLISHING state.\n\tboolean isLockedForPublishing();\n\t// Checks if this is a MODIFIED_IN_CURRENT_PROJECT state.\n\tboolean isModifiedInCurrentProject();\n\t// Checks if this is a MODIFIED_IN_OTHER_PROJECT state.\n\tboolean isModifiedInOtherProject();\n\t// Checks if this is a CLEAN state.\n\tboolean isUnlocked();\n}", "des": "Enumeration class for defining the resource project state."}
{"index": 7816, "code": "Class CmsResourceWrapperReplaceDeleted {\n\t// Creates a new resource of the given resource type with the provided content and properties.\n\tCmsResource createResource​(CmsObject cms, java.lang.String resourcename, int type, byte[] content, java.util.List<CmsProperty> properties);\n\t// Is called to check if the given resource is handled by this wrapper.\n\tboolean isWrappedResource​(CmsObject cms, CmsResource res);\n}", "des": "Resource wrapper which intercepts createResource calls and substitutes them with replaceResource if there is already a deleted file at the same path."}
{"index": 7817, "code": "Class CmsRestoreDeletedAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "The availability dialog action."}
{"index": 7818, "code": "Enum CmsRestrictionRule.MatchType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsRestrictionRule.MatchType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsRestrictionRule.MatchType[] values();\n}", "des": "Match type of the restriction, i.e., how the values should be treated."}
{"index": 7819, "code": "Class CmsRestrictionsBean.FieldValues {\n\t// Returns the type of the input field.\n\tCmsRestrictionsBean.FieldValues.FieldType getFieldType();\n\t// Returns the values in the input field.\n\tjava.util.Collection<java.lang.String> getValues();\n}", "des": "The values in one input field."}
{"index": 7820, "code": "Enum CmsRestrictionsBean.FieldValues.FieldType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsRestrictionsBean.FieldValues.FieldType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsRestrictionsBean.FieldValues.FieldType[] values();\n}", "des": "The type describes how values in that input field should be handled."}
{"index": 7821, "code": "Class CmsResultFacets {\n\t// Displays the result facets.\n\tvoid displayFacetResult​(CmsSolrResultList solrResultList, CmsSearchResultWrapper resultWrapper);\n\t// Returns the selected field facets.\n\tprotected java.util.Map<java.lang.String,​java.util.List<java.lang.String>> getSelectedFieldFacets();\n\t// Returns the selected range facets.\n\tprotected java.util.Map<java.lang.String,​java.util.List<java.lang.String>> getSelectedRangeFactes();\n\t// Resets the selected facets.\n\tvoid resetFacets();\n}", "des": "Displays search result facets."}
{"index": 7822, "code": "Class CmsReturnLinkInfo {\n\t// Returns the return link.\n\tjava.lang.String getLink();\n\t// Returns the link lookup status.\n\tCmsReturnLinkInfo.Status getStatus();\n}", "des": "This class represents the result of a \"return link\" lookup, which is what happens if the user clicks the \"go to last page\" button in the sitemap editor."}
{"index": 7823, "code": "Enum CmsReturnLinkInfo.Status {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsReturnLinkInfo.Status valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsReturnLinkInfo.Status[] values();\n}", "des": "The moved status."}
{"index": 7824, "code": "Class CmsRewriteAlias {\n\t// Gets the id of the alias.\n\tCmsUUID getId();\n\t// Gets the alias mode.\n\tCmsAliasMode getMode();\n\t// Gets the regular expression string.\n\tjava.lang.String getPatternString();\n\t// Gets the string used to replace the string matching the regex.\n\tjava.lang.String getReplacementString();\n\t// Gets the root of the site in which this alias is valid.\n\tjava.lang.String getSiteRoot();\n}", "des": "This class represents an alias which does not just map a fixed path to a fixed resource, but instead uses a regular expression substitution to determine the target path."}
{"index": 7825, "code": "Class CmsRewriteAliasFilter {\n\t// Gets the id to filter with.\n\tCmsUUID getId();\n\t// Gets the site root used for filtering.\n\tjava.lang.String getSiteRoot();\n\t// Sets the id of the rewrite alias we want.\n\tCmsRewriteAliasFilter setId​(CmsUUID id);\n\t// Sets the site root to use for filtering.\n\tCmsRewriteAliasFilter setSiteRoot​(java.lang.String siteRoot);\n}", "des": "Filter class used for selecting rewrite aliases from the database."}
{"index": 7826, "code": "Class CmsRewriteAliasMatcher.RewriteResult {\n\t// Gets the alias which matched the given path.\n\tCmsRewriteAlias getAlias();\n\t// Gets the path resulting from the rewrite.\n\tjava.lang.String getNewPath();\n}", "des": "The result of a match operation."}
{"index": 7827, "code": "Class CmsRewriteAliasValidationReply {\n\t// Adds a validation error to this object.\n\tvoid addError​(CmsUUID id, java.lang.String error);\n\t// Gets the map of error messages by rewrite alias id.\n\tjava.util.Map<CmsUUID,​java.lang.String> getErrors();\n}", "des": "This class represents the result of a validation of rewrite aliases."}
{"index": 7828, "code": "Class CmsRoleTable {\n\t// Method which gets called to filter table.\n\tvoid filter​(java.lang.String data);\n\t// Gets a layout in case of empty table.\n\tcom.vaadin.v7.ui.VerticalLayout getEmptyLayout();\n\t// Updates app.\n\tprotected void updateApp​(CmsRole role);\n}", "des": "Table for the roles."}
{"index": 7829, "code": "Class CmsSaveResult {\n\t// Returns the validation result.\n\tCmsValidationResult getValidationResult();\n\t// Returns whether the validation result has errors.\n\tboolean hasErrors();\n\t// Returns whether container element settings where changed.\n\tboolean isHasChangedSettings();\n}", "des": "Stores the editor save result information."}
{"index": 7830, "code": "Class CmsScrollPositionCssState {\n\t// Returns the barrier margin.\n\tint getBarrierMargin();\n\t// Returns the scroll barrier.\n\tint getScrollBarrier();\n\t// Sets the style name.\n\tjava.lang.String getStyleName();\n\t// Sets the barrier margin.\n\tvoid setBarrierMargin​(int barrierMargin);\n\t// Sets the scroll barrier.\n\tvoid setScrollBarrier​(int scrollBarrier);\n\t// Sets the style name.\n\tvoid setStyleName​(java.lang.String styleName);\n}", "des": "The scroll position CSS shared state."}
{"index": 7831, "code": "Class CmsSearchAnalyzer {\n\t// Returns the className.\n\tjava.lang.String getClassName();\n\t// Returns the locale.\n\tjava.util.Locale getLocale();\n\t// Returns the locale as a String.\n\tjava.lang.String getLocaleString();\n\t// Sets the class name.\n\tvoid setClassName​(java.lang.String className);\n\t// Sets the locale.\n\tvoid setLocale​(java.util.Locale locale);\n\t// Sets the locale as a String.\n\tvoid setLocaleString​(java.lang.String locale);\n}", "des": "An analyzer class is used by Lucene to reduce the content to be indexed with trimmed endings etc."}
{"index": 7832, "code": "Class CmsSearchConfigurationDidYouMean {\n\t// Returns a flag, indicating if collation is turned on or off.\n\tboolean getCollate();\n\t// Returns the maximal number of suggestions.\n\tint getCount();\n\t// Returns the parameter name of the request parameter used to send the current query string for spellchecking.\n\tjava.lang.String getQueryParam();\n}", "des": "Class keeping the configuration of the \"Did you mean ...?\" feature of the search form."}
{"index": 7833, "code": "Class CmsSearchConfigurationFacetQuery.CmsFacetQueryItem {\n\tboolean equals​(java.lang.Object queryItem);\n\t// Returns the label of the item, useful to show it.\n\tjava.lang.String getLabel();\n\t// Returns the query of the item.\n\tjava.lang.String getQuery();\n}", "des": "Representation of one query facet item."}
{"index": 7834, "code": "Class CmsSearchConfigurationSortOption {\n\t// Returns the label that can be used to display the sort option in the form.\n\tjava.lang.String getLabel();\n\t// Returns the request parameter's value that has to be send to choose that sort option.\n\tjava.lang.String getParamValue();\n\t// Returns the sort value as send to Solr.\n\tjava.lang.String getSolrValue();\n}", "des": "Configuration for a single sort option."}
{"index": 7835, "code": "Class CmsSearchResource {\n\t// Delegator.\n\tjava.util.Date getDateField​(java.lang.String fieldName);\n\t// Returns the document.\n\tI_CmsSearchDocument getDocument();\n\t// Delegator.\n\tjava.lang.String getField​(java.lang.String fieldName);\n\t// Delegator.\n\tjava.util.List<java.lang.String> getMultivaluedField​(java.lang.String fieldName);\n\t// Delegator.\n\tint getScore​(float maxScore);\n}", "des": "A resource implementation that combines the Solr document together with a OpenCms VFS resource."}
{"index": 7836, "code": "Class CmsSearchStateDidYouMean {\n\t// Returns the spellcheck query string (as entered by the user).\n\tjava.lang.String getQuery();\n\t// Setter for the spellcheck query string (as entered by the user).\n\tvoid setQuery​(java.lang.String query);\n}", "des": "Class for handling the state of the \"Did you mean?\" search options."}
{"index": 7837, "code": "Class CmsSearchStateGeoFilter {\n\t// Returns the coordinates.\n\tjava.lang.String getCoordinates();\n\t// Returns the radius.\n\tjava.lang.String getRadius();\n\t// Returns the units.\n\tjava.lang.String getUnits();\n\t// Sets the coordinates.\n\tvoid setCoordinates​(java.lang.String coordinates);\n\t// Sets the radius.\n\tvoid setRadius​(java.lang.String radius);\n\t// Sets the units.\n\tvoid setUnits​(java.lang.String units);\n}", "des": "Class keeping the state of the Geo filter."}
{"index": 7838, "code": "Class CmsSearchStatePagination {\n\t// Returns the current page.\n\tint getCurrentPage();\n\t// Returns a flag, indicating if the state of the current page should be ignored.\n\tboolean getIgnorePage();\n\t// Setter for the current page.\n\tvoid setCurrentPage​(int page);\n\t// Setter for a flag, indicating if the state of the current page should be ignored.\n\tvoid setIgnorePage​(boolean ignore);\n}", "des": "Class for keeping the state for the pagination."}
{"index": 7839, "code": "Class CmsSearchStateSorting {\n\t// Returns a map from search options to their check state.\n\tjava.util.Map<I_CmsSearchConfigurationSortOption,​java.lang.Boolean> getCheckSelected();\n\t// Returns the selected search option.\n\tI_CmsSearchConfigurationSortOption getSelected();\n\t// Setter for the selected search option.\n\tvoid setSelectedOption​(I_CmsSearchConfigurationSortOption option);\n}", "des": "Class for keeping the state of the sorting options."}
{"index": 7840, "code": "Class CmsSecondFactorDialog {\n\t// Gets the caption to use for the dialog window.\n\tstatic java.lang.String getCaption​(CmsUser user);\n\t// Executes Javascript code that sets additional attributes on the verification code field.\n\tstatic void initVerificationField();\n\t// Executed when the user clicks the OK button or presses Enter.\n\tprotected void submit();\n}", "des": "Dialog used to ask the user for a verification code generated from his second factor, using an authenticator app."}
{"index": 7841, "code": "Class CmsSecondFactorInfo {\n\tboolean equals​(java.lang.Object obj);\n\t// Gets the verification code (normally generated and entered by the user).\n\tjava.lang.String getCode();\n\t// Gets the secret (usually null, only used for second factor setup).\n\tjava.lang.String getSecret();\n}", "des": "Second factor information for login."}
{"index": 7842, "code": "Class CmsSecondFactorSetupInfo {\n\t// Gets the data URL with the QR code image that the user should scan.\n\tjava.lang.String getQrCodeImageUrl();\n\t// Gets the shared secret in text form.\n\tjava.lang.String getSecret();\n}", "des": "The data needed to set up two-factor authentication for a user."}
{"index": 7843, "code": "Class CmsSecureExportDialog {\n\t// Loads the dialog data.\n\tprotected void loadData();\n\t// Touches the selected files.\n\tprotected void saveData();\n}", "des": "Dialog used to change resource modification times."}
{"index": 7844, "code": "Class CmsSelectComboWidget {\n\t// Returns the class name of the widget.\n\tjava.lang.String getWidgetName();\n\t// Creates a duplicate of this widget instance.\n\tI_CmsWidget newInstance();\n}", "des": "Select box widget that can transform into a combo box by clicking an edit icon."}
{"index": 7845, "code": "Class CmsSelectResourceTypeDialog {\n\tcom.vaadin.ui.Button getCancelButton();\n\t// Returns selected resource type.\n\tjava.lang.String getSelectedResource();\n\tcom.vaadin.v7.ui.VerticalLayout getVerticalLayout();\n\tcom.vaadin.v7.ui.ComboBox getViewSelector();\n\t// Handles selection of a type.\n\tvoid handleSelection​(CmsResourceTypeBean selectedType);\n\tboolean useDefault();\n}", "des": "Class for the resource type select dialog."}
{"index": 7846, "code": "Class CmsSendPasswordNotification {\n\t// Append XMLContent to StringBuffer.\n\tprotected void appendXMLContent​(java.lang.StringBuffer msg);\n\t// Overwrite the method to generate the message body of the notification.\n\tprotected java.lang.String generateHtmlMsg();\n\t// Overwrite the method to return the path to the xmlcontent, where the subject, the header and the footer are defined.\n\tprotected java.lang.String getNotificationContent();\n}", "des": "Class to send email to user in case of password reset or creating new user."}
{"index": 7847, "code": "Class CmsSerialDateBeanDaily {\n\t// Generates the first date of the series.\n\tprotected java.util.Calendar getFirstDate();\n\t// Check, if the series can have at least one event/date.\n\tprotected boolean isAnyDatePossible();\n\t// Starting with a date that's in the series, the next date is created.\n\tprotected void toNextDate​(java.util.Calendar date);\n}", "des": "Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a daily base."}
{"index": 7848, "code": "Class CmsSerialDateBeanFactory {\n\t// Factory method for creating a serial date bean.\n\tstatic I_CmsSerialDateBean createSerialDateBean​(java.lang.String widgetValue);\n\t// Factory method for creating a serial date bean.\n\tstatic I_CmsSerialDateBean createSerialDateBean​(I_CmsSerialDateValue value);\n}", "des": "Wrapper for the value stored by the CmsSerialDateWidget that provides easy access."}
{"index": 7849, "code": "Class CmsSerialDateBeanMonthly {\n\t// Generates the first date of the series.\n\tprotected java.util.Calendar getFirstDate();\n\t// Check, if the series can have at least one event/date.\n\tprotected boolean isAnyDatePossible();\n\t// Starting with a date that's in the series, the next date is created.\n\tprotected void toNextDate​(java.util.Calendar date);\n}", "des": "Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a monthly base."}
{"index": 7850, "code": "Class CmsSerialDateBeanMonthlyWeeks {\n\t// Generates the first date of the series.\n\tprotected java.util.Calendar getFirstDate();\n\t// Check, if the series can have at least one event/date.\n\tprotected boolean isAnyDatePossible();\n\t// Starting with a date that's in the series, the next date is created.\n\tprotected void toNextDate​(java.util.Calendar date);\n}", "des": "Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a monthly base."}
{"index": 7851, "code": "Class CmsSerialDateBeanSingle {\n\t// Generates the first date of the series.\n\tprotected java.util.Calendar getFirstDate();\n\t// Check, if the series can have at least one event/date.\n\tprotected boolean isAnyDatePossible();\n\t// Starting with a date that's in the series, the next date is created.\n\tprotected void toNextDate​(java.util.Calendar date);\n}", "des": "Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles single events."}
{"index": 7852, "code": "Class CmsSerialDateBeanWeekly {\n\t// Generates the first date of the series.\n\tprotected java.util.Calendar getFirstDate();\n\t// Check, if the series can have at least one event/date.\n\tprotected boolean isAnyDatePossible();\n\t// Starting with a date that's in the series, the next date is created.\n\tprotected void toNextDate​(java.util.Calendar date);\n}", "des": "Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a weekly base."}
{"index": 7853, "code": "Class CmsSerialDateBeanWorkingDays {\n\t// Generates the first date of the series.\n\tprotected java.util.Calendar getFirstDate();\n\t// Check, if the series can have at least one event/date.\n\tprotected boolean isAnyDatePossible();\n\t// Starting with a date that's in the series, the next date is created.\n\tprotected void toNextDate​(java.util.Calendar date);\n}", "des": "Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a daily base."}
{"index": 7854, "code": "Class CmsSerialDateBeanYearly {\n\t// Generates the first date of the series.\n\tprotected java.util.Calendar getFirstDate();\n\t// Check, if the series can have at least one event/date.\n\tprotected boolean isAnyDatePossible();\n\t// Starting with a date that's in the series, the next date is created.\n\tprotected void toNextDate​(java.util.Calendar date);\n}", "des": "Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a yearly base."}
{"index": 7855, "code": "Class CmsSerialDateBeanYearlyWeekday {\n\t// Generates the first date of the series.\n\tprotected java.util.Calendar getFirstDate();\n\t// Check, if the series can have at least one event/date.\n\tprotected boolean isAnyDatePossible();\n\t// Starting with a date that's in the series, the next date is created.\n\tprotected void toNextDate​(java.util.Calendar date);\n}", "des": "Implementation of @{link org.opencms.widgets.serialdate.I_CmsSerialDateBean} that handles series' specified on a yearly base."}
{"index": 7856, "code": "Class CmsSerialDateService {\n\t// Get the dates of the specified series\n\tjava.util.Collection<CmsPair<java.util.Date,​java.lang.Boolean>> getDates​(java.lang.String config);\n\t// Get information on the series specified by the current value.\n\tCmsPair<java.lang.Boolean,​java.lang.String> getStatus​(java.lang.String config);\n}", "des": "Implementation of the serial date RPC service."}
{"index": 7857, "code": "Class CmsSerialDateUtil {\n\t// Returns the maximally allowed number of events in a series.\n\tstatic int getMaxEvents();\n\t// Parses int value and returns the provided default if the value can't be parsed.\n\tstatic int toIntWithDefault​(java.lang.String value, int defaultValue);\n}", "des": "Utility methods for the serial date widget."}
{"index": 7858, "code": "Class CmsSerialDateValue {\n\t// Convert the information from the wrapper to a JSON object.\n\tJSONObject toJson();\n\t// Validates the wrapped value and returns a localized error message in case of invalid values.\n\tCmsMessageContainer validateWithMessage();\n}", "des": "Server-side implementation of I_CmsSerialDateValue."}
{"index": 7859, "code": "Class CmsServerModuleImportForm {\n\t// Gets the cancel button.\n\tprotected com.vaadin.ui.Button getCancelButton();\n\t// Gets the OK button.\n\tprotected com.vaadin.ui.Button getOkButton();\n\t// Returns the site selector for the module import.\n\tprotected CmsAutoItemCreatingComboBox getSiteSelector();\n}", "des": "The form for importing a module from the application server."}
{"index": 7860, "code": "Class CmsServletContainerSettings.CmsServletContainerCfgMode {\n\t// Checks if this is the auto mode.\n\tboolean isAuto();\n\t// Checks if this is the manual mode.\n\tboolean isManual();\n\t// Checks if this is the none mode.\n\tboolean isNone();\n\t// Returns the parsed mode object if the string representation matches, or null if not.\n\tstatic CmsServletContainerSettings.CmsServletContainerCfgMode valueOf​(java.lang.String mode);\n}", "des": "Enumeration class for the configuration mode."}
{"index": 7861, "code": "Class CmsShellApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "Shell script app."}
{"index": 7862, "code": "Class CmsShellScriptLayout {\n\t// Gets the currently entered script.\n\tprotected java.lang.String getScript();\n\t// Sets up given CmsObject with currently set Project and Site.\n\tprotected void setupCms​(CmsObject cms);\n}", "des": "Layout for shell script settings and input dialog."}
{"index": 7863, "code": "Enum CmsShowResourcesDialog.DialogType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsShowResourcesDialog.DialogType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsShowResourcesDialog.DialogType[] values();\n}", "des": "Type of Dialog."}
{"index": 7864, "code": "Class CmsShowResourceTable {\n\t// Gets CmsObject.\n\tprotected CmsObject getCms();\n\t// Checks if table is empty.\n\tboolean hasNoEntries();\n}", "des": "Table with resources for which a given principal has permissions."}
{"index": 7865, "code": "Class CmsShowVersionButtons {\n\t// Creates a 'show version' button.\n\tcom.vaadin.ui.Button createButton​(CmsObject cms, CmsHistoryResourceBean version);\n\t// Optionally returns a comparison component to display for the given resource versions.\n\tcom.google.common.base.Optional<com.vaadin.ui.Component> diff​(CmsObject cms, CmsHistoryResourceBean v1, CmsHistoryResourceBean v2);\n}", "des": "Provides buttons for showing the two versions being compared."}
{"index": 7866, "code": "Class CmsSingleTreeLocaleHandler {\n\t// Returns the i18n information to use in the request context.\n\tCmsI18nInfo getI18nInfo​(javax.servlet.http.HttpServletRequest req, CmsUser user, CmsProject project, java.lang.String resourceName);\n\t// Reads the locale from the first path element.\n\tstatic java.util.Locale getLocaleFromPath​(java.lang.String sitePath);\n\t// Will be called during system startup.\n\tvoid initHandler​(CmsObject cms);\n}", "des": "Advanced locale handler allowing single tree localization."}
{"index": 7867, "code": "Enum CmsSite.LocalizationMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsSite.LocalizationMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsSite.LocalizationMode[] values();\n}", "des": "The site localization modes."}
{"index": 7868, "code": "Class CmsSiteConfigToLetsEncryptConfigConverter.DomainGrouping {\n\t// Adds a domain group.\n\tvoid addDomainSet​(java.util.Set<java.lang.String> domains);\n\t// Generates the JSON configuration corresponding to the domain grouping.\n\tjava.lang.String generateCertJson();\n\t// Checks all domains for resolvability and return the unresolvable ones.\n\tjava.util.Set<java.lang.String> getUnresolvableDomains();\n\t// Checks if the domain grouping does not contain any domain groups.\n\tboolean isEmpty();\n}", "des": "Represents a grouping of domains into certificates."}
{"index": 7869, "code": "Class CmsSiteConfigToLetsEncryptConfigConverter.SiteDomainInfo {\n\t// Gets the common root domain.\n\tjava.lang.String getCommonRootDomain();\n\t// Gets the set of domains.\n\tjava.util.Set<java.lang.String> getDomains();\n\t// True if an invalid port was used.\n\tboolean hasInvalidPort();\n}", "des": "Represents the domain information for a single site."}
{"index": 7870, "code": "Class CmsSitemapActionElement {\n\t// Returns the serialized data for the core provider wrapped in a script tag.\n\tjava.lang.String export();\n\t// Returns the serialized data for the core provider.\n\tjava.lang.String exportAll();\n\t// Returns the needed server data for client-side usage.\n\tCmsSitemapData getSitemapData();\n\t// Returns the editor title.\n\tjava.lang.String getTitle();\n}", "des": "Sitemap action used to generate the sitemap editor."}
{"index": 7871, "code": "Class CmsSitemapAttributeData {\n\t// Gets the attribute definitions.\n\tjava.util.LinkedHashMap<java.lang.String,​CmsXmlContentProperty> getAttributeDefinitions();\n\t// Gets the attribute values\n\tjava.util.Map<java.lang.String,​java.lang.String> getAttributeValues();\n\t// Gets the list info for the sitemap configuration file.\n\tCmsListInfoBean getInfo();\n\t// Gets the URL which should be called to unlock the sitemap configuration\n\tjava.lang.String getUnlockUrl();\n}", "des": "The data needed by the sitemap attribute editor dialog in the sitemap editor."}
{"index": 7872, "code": "Class CmsSitemapAttributeEditorConfiguration {\n\t// Gets the attribute definitions.\n\tjava.util.Map<java.lang.String,​CmsXmlContentProperty> getAttributeDefinitions();\n\t// Reads the attribute definitions from an XML content.\n\tstatic CmsSitemapAttributeEditorConfiguration read​(CmsObject cms, CmsResource res);\n}", "des": "Contains a set of attribute definitions for the sitemap attribute editor."}
{"index": 7873, "code": "Class CmsSitemapCategoryData {\n\t// Adds a new category entry.\n\tvoid add​(CmsCategoryTreeEntry item);\n\t// Gets a multimap of the top-level entries, indexed by whether they are local categories or not.\n\tcom.google.common.collect.Multimap<java.lang.Boolean,​CmsCategoryTreeEntry> getEntriesIndexedByLocality();\n\t// Gets the category bean by id.\n\tCmsCategoryTreeEntry getEntryById​(CmsUUID id);\n\t// Sets the base path.\n\tvoid setBasePath​(java.lang.String basePath);\n}", "des": "The category data for the current sitemap."}
{"index": 7874, "code": "Enum CmsSitemapChange.ChangeType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsSitemapChange.ChangeType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsSitemapChange.ChangeType[] values();\n}", "des": "The change types."}
{"index": 7875, "code": "Enum CmsSitemapData.EditorMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsSitemapData.EditorMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsSitemapData.EditorMode[] values();\n}", "des": "The sitemap editor modes."}
{"index": 7876, "code": "Class CmsSitemapInfo {\n\t// Returns the current project.\n\tjava.lang.String getCurrentProject();\n\t// Returns the description.\n\tjava.lang.String getDescription();\n\t// Returns the host of the current site.\n\tjava.lang.String getSiteHost();\n\t// Returns the site default locale.\n\tjava.lang.String getSiteLocale();\n\t// Returns the title.\n\tjava.lang.String getTitle();\n}", "des": "Sitemap info object."}
{"index": 7877, "code": "Class CmsSitemapMergeInfo {\n\t// Returns the entry to be merged back into the parent sitemap.\n\tCmsClientSitemapEntry getMergedEntry();\n\t// The timestamp of the last modification of the parent sitemap.\n\tlong getTimestamp();\n}", "des": "This class represents the result of a 'merge sub-sitemap' operation."}
{"index": 7878, "code": "Class CmsSitemapNavPosCalculator {\n\t// Gets the insert position in the final result list.\n\tint getInsertPositionInResult();\n\t// Gets the changed navigation entries from the final result list.\n\tjava.util.List<CmsJspNavElement> getNavigationChanges();\n\t// Gets the final result list.\n\tjava.util.List<CmsJspNavElement> getResultList();\n}", "des": "Helper class for recalculating navigation positions when a user has changed the order of navigation entries in the sitemap editor."}
{"index": 7879, "code": "Class CmsSitemapSessionCache {\n\t// Returns the cached recent list.\n\tjava.util.List<CmsClientSitemapEntry> getRecentList();\n\t// Caches the given recent list.\n\tvoid setRecentList​(java.util.List<CmsClientSitemapEntry> list);\n}", "des": "Sitemap session cache."}
{"index": 7880, "code": "Class CmsSitemapTreeDataProvider {\n\t// Gets the node data for children of a given node.\n\tjava.util.List<CmsSitemapTreeNodeData> getChildren​(CmsSitemapTreeNodeData nodeData);\n\t// Gets the tree data for a resource.\n\tCmsSitemapTreeNodeData getData​(CmsResource resource);\n\t// Gets the node data for the tree's root.\n\tCmsSitemapTreeNodeData getRoot();\n\t// Gets the sitemap service.\n\tCmsVfsSitemapService getSitemapService();\n}", "des": "Loads node data for the sitemap tree."}
{"index": 7881, "code": "Enum CmsSiteMatcher.RedirectMode {\n\t// Converts a redirect mode string from the configuration to the corresponding enum value.\n\tstatic CmsSiteMatcher.RedirectMode parse​(java.lang.String strValue);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsSiteMatcher.RedirectMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsSiteMatcher.RedirectMode[] values();\n}", "des": "Represents the different redirect modes for a site alias."}
{"index": 7882, "code": "Class CmsSitePreference {\n\t// Gets the user-independent property configuration.\n\tCmsXmlContentProperty getPropertyDefinition();\n\t// Gets the metadata describing how the setting should be edited.\n\tCmsXmlContentProperty getPropertyDefinition​(CmsObject cms);\n\t// Gets the options for the site selector.\n\tstatic java.lang.String getSiteSelectOptionsStatic​(CmsObject cms, java.util.Locale locale);\n}", "des": "Preference for the start site."}
{"index": 7883, "code": "Class CmsSiteSelectDialog {\n\t// Gets the selected site.\n\tjava.lang.String getSite();\n\t// Opens the site selection dialog in a window.\n\tstatic void openDialogInWindow​(org.opencms.ui.apps.modules.CmsSiteSelectDialog.I_Callback callback, java.lang.String windowCaption);\n\t// Sets the callback that should be called when the dialog finishes.\n\tvoid setCallback​(org.opencms.ui.apps.modules.CmsSiteSelectDialog.I_Callback callback);\n}", "des": "The dialog for selecting a site when exporting / deleting a module without a module site."}
{"index": 7884, "code": "Class CmsSiteSelectorOption {\n\t// Gets the message to display for this site.\n\tjava.lang.String getMessage();\n\t// Gets the site root for the site.\n\tjava.lang.String getSiteRoot();\n\t// Gets the type of the site.\n\tCmsSiteSelectorOption.Type getType();\n\t// Returns true if this site is the current site.\n\tboolean isCurrentSite();\n}", "des": "Bean class which represents an option for the site selector in the gallery dialog."}
{"index": 7885, "code": "Enum CmsSiteSelectorOption.Type {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsSiteSelectorOption.Type valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsSiteSelectorOption.Type[] values();\n}", "des": "Enum for indicating the site type."}
{"index": 7886, "code": "Class CmsSiteSelectorOptionBuilder {\n\t// Adds the current subsite.\n\tvoid addCurrentSubsite​(java.lang.String referencePath);\n\t// Adds 'normal' sites.\n\tvoid addNormalSites​(boolean includeRoot, java.lang.String startFolder);\n\t// Adds the shared folder.\n\tvoid addSharedSite();\n\t// Adds the system folder.\n\tvoid addSystemFolder();\n\t// Gets the site selector options.\n\tjava.util.List<CmsSiteSelectorOption> getOptions();\n}", "des": "Helper class for building the options for the site selector in the gallery dialog."}
{"index": 7887, "code": "Enum CmsSitesTable.TableProperty {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsSitesTable.TableProperty valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsSitesTable.TableProperty[] values();\n}", "des": "Table properties."}
{"index": 7888, "code": "Class CmsSolrLinkProcessor {\n\t// (Re-)Initializes the post processor.\n\tvoid init();\n\t// Performs the post processing.\n\torg.apache.solr.common.SolrDocument process​(CmsObject cms, CmsResource resource, org.apache.solr.common.SolrInputDocument document);\n}", "des": "This Solr post processor generates for each found document the corresponding link and adds this link into the resulting document as field."}
{"index": 7889, "code": "Class CmsSourceEditor.EditorSettings {\n\t// Returns the string representation of the current setting state.\n\tjava.lang.String getSettingsString();\n\t// Restores the settings from the given string.\n\tvoid restoreSettings​(java.lang.String storedSettings);\n}", "des": "Stores the editor settings."}
{"index": 7890, "code": "Class CmsSourceSearchForm {\n\t// Initializes the form with the given settings.\n\tvoid initFormValues​(CmsSearchReplaceSettings settings);\n\t// Sets the download provider (which may be null), and shows or hides the download button based on whether it is null.\n\tvoid setDownload​(com.vaadin.server.StreamResource resource);\n\t// Updates the search root.\n\tprotected void updateSearchRoot();\n}", "des": "The source search form."}
{"index": 7891, "code": "Class CmsSpellcheckDictionaryIndexer {\n\t// Adds all dictionaries that are available in the default directory.\n\tstatic void parseAndAddDictionaries​(org.apache.solr.client.solrj.SolrClient client, CmsObject cms);\n\tstatic void parseAndAddZippedDictionaries​(org.apache.solr.client.solrj.SolrClient client, CmsObject cms);\n\t// Checks whether a built of the indices is necessary.\n\tstatic boolean updatingIndexNecessesary​(CmsObject cms);\n}", "des": "Helping class for manipulating the Solr spellchecker indices."}
{"index": 7892, "code": "Class CmsSqlBooleanClause {\n\t// Adds an operand to the boolean expression.\n\tCmsSqlBooleanClause addCondition​(I_CmsQueryFragment fragment);\n\t// Creates a boolean \"AND\" expression.\n\tstatic CmsSqlBooleanClause makeAnd​(I_CmsQueryFragment... fragments);\n\t// Creates a boolean \"OR\" expression.\n\tstatic CmsSqlBooleanClause makeOr​(I_CmsQueryFragment... fragments);\n\t// Generates the SQL and parameters and sends them to the statement builder .\n\tvoid visit​(CmsStatementBuilder builder);\n}", "des": "Class for generating an SQL boolean expression."}
{"index": 7893, "code": "Class CmsSqlConsoleApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "Class for the property definition app."}
{"index": 7894, "code": "Class CmsSqlConsoleResults {\n\t// Gets the column names.\n\tjava.util.List<java.lang.String> getColumns();\n\t// Gets the type to use for the Vaadin table column corresponding to the c-th column in this result.\n\tjava.lang.Class<?> getColumnType​(int c);\n\t// Converts the results to CSV data.\n\tjava.lang.String getCsv();\n\t// Gets the row data\n\tjava.util.List<java.util.List<java.lang.Object>> getData();\n}", "des": "Class for storing query results."}
{"index": 7895, "code": "Class CmsStandardVisibilityCheck {\n\t// Helper method to make checking for a flag very short (character count).\n\tboolean flag​(CmsVisibilityCheckFlag flag);\n\t// Computes visibility of the menu item for a single resource.\n\tCmsMenuItemVisibilityMode getSingleVisibility​(CmsObject cms, CmsResource resource);\n\t// Gets the visibility for the current dialog context.\n\tCmsMenuItemVisibilityMode getVisibility​(I_CmsDialogContext context);\n}", "des": "Standard visibility check implementation."}
{"index": 7896, "code": "Class CmsStartFolderPreference {\n\t// Gets the user-independent property configuration.\n\tCmsXmlContentProperty getPropertyDefinition();\n\t// Gets the metadata describing how the setting should be edited.\n\tCmsXmlContentProperty getPropertyDefinition​(CmsObject cms);\n}", "des": "Preference for the start folder."}
{"index": 7897, "code": "Class CmsStartViewPreference {\n\t// Gets the user-independent property configuration.\n\tCmsXmlContentProperty getPropertyDefinition();\n\t// Gets the metadata describing how the setting should be edited.\n\tCmsXmlContentProperty getPropertyDefinition​(CmsObject cms);\n\t// Gets the select options for the view selector.\n\tstatic CmsBuiltinPreference.SelectOptions getViewSelectOptions​(CmsObject cms, java.lang.String value);\n\t// Returns true if the preference is disabled.\n\tboolean isDisabled​(CmsObject cms);\n}", "des": "Preference for the start site."}
{"index": 7898, "code": "Class CmsStatementBuilder {\n\t// Adds an SQL fragment and zero or more query parameters.\n\tvoid add​(java.lang.String fragment, java.lang.Object... params);\n\t// Adds an SQL fragment and zero or more query parameters.\n\tvoid add​(java.lang.String fragment, java.util.List<java.lang.Object> params);\n\t// Returns the list of accumulated query parameters.\n\tjava.util.List<java.lang.Object> getParameters();\n\t// Returns the accumulated query string.\n\tjava.lang.String getQuery();\n}", "des": "A helper class used to accumulate SQL fragments together with the corresponding query parameters."}
{"index": 7899, "code": "Class CmsStealLockAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Action \"Steal lock\"."}
{"index": 7900, "code": "Class CmsStreamReportWidget {\n\t// Call this after all output has been written to the stream.\n\tvoid finish();\n\t// Gets the stream.\n\tjava.io.PrintStream getStream();\n\t// Requests a report update from the server.\n\tvoid requestReportUpdate();\n\t// Sets a second stream to write the report output to (usually a log file).\n\tvoid setDelegateStream​(java.io.OutputStream stream);\n}", "des": "Widget that can be used to view a running report that is not generated specifically by an OpenCms report thread, but from the text written to the stream provided by this widget."}
{"index": 7901, "code": "Class CmsStringBufferReport {\n\t// Updates this report, this processes all new output added since the last call to this method.\n\tjava.lang.String getReportUpdate();\n\t// Prints a String to the report, using the indicated formatting.\n\tvoid print​(java.lang.String value, int format);\n\t// Adds a line break to the report.\n\tvoid println();\n\t// Adds an Exception to the report, ensuring that the Exception content is processed to generate a valid output esp.\n\tvoid println​(java.lang.Throwable t);\n}", "des": "Report class used to write the output of a report to a StringBuffer."}
{"index": 7902, "code": "Class CmsSubscriptionDriver {\n\t// Initializes the SQL manager for this driver.\n\tCmsSqlManager initSqlManager​(java.lang.String classname);\n\t// Mark the given resource as visited by the user.\n\tvoid markResourceAsVisitedBy​(CmsDbContext dbc, java.lang.String poolName, CmsResource resource, CmsUser user);\n}", "des": "MySQL implementation of the subscription driver."}
{"index": 7903, "code": "Class CmsSubscriptionDriver {\n\t// Initializes the SQL manager for this driver.\n\tCmsSqlManager initSqlManager​(java.lang.String classname);\n\t// Mark the given resource as visited by the user.\n\tvoid markResourceAsVisitedBy​(CmsDbContext dbc, java.lang.String poolName, CmsResource resource, CmsUser user);\n}", "des": "Oracle implementation of the subscription driver."}
{"index": 7904, "code": "Class CmsSubSitemapInfo {\n\t// Returns the entry of the newly created sitemap.\n\tCmsClientSitemapEntry getEntry();\n\t// Returns the last modification time of the parent sitemap.\n\tlong getParentTimestamp();\n}", "des": "A data class which is used to transfer information about sub-sitemaps which have been created."}
{"index": 7905, "code": "Class CmsSynchronizedUpdateSet<U> {\n\t// Adds a new update.\n\tvoid add​(U update);\n\t// Removes all updates from the internal set and returns a new set containing the removed updates.\n\tjava.util.Set<U> removeAll();\n}", "des": "Helper class which keeps track of a set of updates to be performed in a different thread."}
{"index": 7906, "code": "Class CmsSynchronizeList {\n\t// Returns a format description of the sync-list file on the server FS.\n\tstatic java.lang.String getFormatDescription();\n\t// Returns the last modification date in the Fs.\n\tlong getModifiedFs();\n\t// Returns the last modification date in the Vfs.\n\tlong getModifiedVfs();\n\t// Returns the name of the resource.\n\tjava.lang.String getResName();\n\t// Returns the translated name of the resource.\n\tjava.lang.String getTransResName();\n}", "des": "Defines the CmsSynchronizeList object, used to store synchronisation data required to synchronize the VFS and the server FS."}
{"index": 7907, "code": "Class CmsSynchronizeThread {\n\t// Returns the error exception in case there was an error during the execution of this Thread, null otherwise.\n\tjava.lang.Throwable getError();\n\t// Returns the part of the report that is ready for output.\n\tjava.lang.String getReportUpdate();\n\tvoid run();\n}", "des": "Synchronizes a VFS folder with a folder form the \"real\" file system."}
{"index": 7908, "code": "Class CmsSynchronizeThread {\n\t// Returns the error exception in case there was an error during the execution of this Thread, null otherwise.\n\tjava.lang.Throwable getError();\n\t// Returns the part of the report that is ready for output.\n\tjava.lang.String getReportUpdate();\n\tvoid run();\n}", "des": "Synchronizes a VFS folder with a folder form the \"real\" file system."}
{"index": 7909, "code": "Enum CmsSystemConfiguration.UserSessionMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsSystemConfiguration.UserSessionMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsSystemConfiguration.UserSessionMode[] values();\n}", "des": "Enum for the user session mode."}
{"index": 7910, "code": "Class CmsTabInfo {\n\t// Gets the description HTML.\n\tjava.lang.String getDescription();\n\t// Returns the startName.\n\tjava.lang.String getStartName();\n\t// Returns the tabId.\n\tjava.lang.String getTabId();\n\t// Returns the tabName.\n\tjava.lang.String getTabName();\n\t// Returns the collapsed.\n\tboolean isCollapsed();\n}", "des": "Form tab information bean."}
{"index": 7911, "code": "Class CmsTempFolderExportPointDriver {\n\t// Deletes a file or a folder in the real file sytem.\n\tvoid deleteResource​(java.lang.String resourceName, java.lang.String exportpoint);\n\t// Writes the file with the given root path to the real file system.\n\tvoid writeFile​(java.lang.String resourceName, java.lang.String exportpoint, byte[] content);\n}", "des": "An alternative export point driver which replaces the RFS targets of some export points with locations in a temporary export folder."}
{"index": 7912, "code": "Class CmsTemplateFinder {\n\t// Gets the CMS context to use.\n\tprotected CmsObject getCmsObject();\n\t// Returns the available templates.\n\tjava.util.Map<java.lang.String,​CmsClientTemplateBean> getTemplates();\n}", "des": "Utility class for getting information about available templates."}
{"index": 7913, "code": "Class CmsTemplateMapperAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Action for replacing formatters in pages according to a template mapper configuration."}
{"index": 7914, "code": "Class CmsTemplateMappingContentRewriter {\n\t// Checks if template mapper is configured in modules.\n\tstatic boolean checkConfiguredInModules();\n\t// Tries to read the path to the template mapping file from module parameters.\n\tstatic java.lang.String getConfiguredTemplateMapping();\n\t// Returns the part of the report that is ready for output.\n\tjava.lang.String getReportUpdate();\n\tvoid run();\n}", "des": "Report thread for rewriting pages in a folder according to a given template mapper configuration."}
{"index": 7915, "code": "Class CmsTemplatePluginFinder {\n\t// Gets the active plugins from site plugins only.\n\tstatic com.google.common.collect.Multimap<java.lang.String,​CmsTemplatePlugin> getActiveTemplatePluginsFromSitePlugins​(CmsADEConfigData config);\n\t// Gets the multimap of plugins for the current page by group, with each group sorted and de-duplicated.\n\tcom.google.common.collect.Multimap<java.lang.String,​CmsTemplatePlugin> getTemplatePlugins();\n}", "des": "Helper class for finding the list of active template plugins for the current page."}
{"index": 7916, "code": "Class CmsTextareaWidgetPlaintext {\n\t// Creates a duplicate of this widget instance.\n\tI_CmsWidget newInstance();\n\t// Sets the value of in the given widget parameter by reading the \"right\" value from the offered map of parameters.\n\tvoid setEditorValue​(CmsObject cms, java.util.Map<java.lang.String,​java.lang.String[]> formParameters, I_CmsWidgetDialog widgetDialog, I_CmsWidgetParameter param);\n}", "des": "CmsTextareaWidget that strips HTML Tags from the input before storing values."}
{"index": 7917, "code": "Class CmsTextDiff {\n\t// Optionally returns a comparison component to display for the given resource versions.\n\tcom.google.common.base.Optional<com.vaadin.ui.Component> diff​(CmsObject cms, CmsHistoryResourceBean v1, CmsHistoryResourceBean v2);\n\t// Returns a diff text wrapped with formatting style.\n\tprotected java.lang.String wrapLinesWithUnchangedStyle​(java.lang.String diff);\n}", "des": "Interprets two versions of a resource as text files, and shows a diff view for the two texts."}
{"index": 7918, "code": "Class CmsTextDiffPanel {\n\t// Gets the diff HTML based on the selected display options.\n\tjava.lang.String getDiffHtml();\n\t// Updates the displayed diff based on the selected display options.\n\tvoid update();\n\t// Returns a diff text wrapped with formatting style.\n\tprotected java.lang.String wrapLinesWithUnchangedStyle​(java.lang.String diff);\n}", "des": "Widget used to display a colorized diff view for two texts."}
{"index": 7919, "code": "Class CmsThreadLocalStack<T> {\n\t// Removes and returns the last element pushed onto the stack.\n\tT pop();\n\t// Pushes a new element onto the stack.\n\tvoid push​(T data);\n\t// Returns the current stack size.\n\tint size();\n\t// Returns the current top of the stack, without removing it.\n\tT top();\n}", "des": "Thread local stack."}
{"index": 7920, "code": "Class CmsThreadStatsTreeProfilingHandler {\n\t// Dumps the tree as XML.\n\tjava.lang.String dump();\n\t// Returns true if we received any data yet.\n\tboolean hasData();\n\t// Adds measured method call duration.\n\tvoid putTime​(java.lang.String key, long nanos);\n}", "des": "Builds up a tree whose nodes correspond to stack trace lines of the threads calling this profiling handler."}
{"index": 7921, "code": "Class CmsTinyMCEData {\n\t// Gets the script link.\n\tjava.lang.String getLink();\n\t// Sets the script link.\n\tvoid setLink​(java.lang.String link);\n}", "des": "Data for TinyMCE editor."}
{"index": 7922, "code": "Class CmsToolGroup {\n\t// Adds an admin tool.\n\tvoid addAdminTool​(CmsTool adminTool);\n\t// Adds an admin tool at the given position.\n\tvoid addAdminTool​(CmsTool adminTool, float position);\n\t// Returns a list of admin tools.\n\tjava.util.List<CmsTool> getAdminTools();\n\t// Returns the id.\n\tjava.lang.String getId();\n\t// Returns the group name.\n\tjava.lang.String getName();\n\t// Returns the necessary html code.\n\tjava.lang.String groupHtml​(CmsWorkplace wp);\n}", "des": "This is an admin tool group, it just generates the html code for the group structure."}
{"index": 7923, "code": "Class CmsToolLayout {\n\t// Adds a sub navigation entry.\n\tcom.vaadin.ui.Button addSubNavEntry​(A_CmsWorkplaceApp.NavEntry navEntry);\n\t// Clears the sub navigation.\n\tvoid clearSubNav();\n\t// Sets the main component.\n\tvoid setMainContent​(com.vaadin.ui.Component component);\n\t// Sets the height of the main panel to 100% to allow for scrollable children.\n\tvoid setMainHeightFull​(boolean full);\n\t// Shows or hides the sub navigation.\n\tvoid setSubNavVisible​(boolean visible);\n}", "des": "The standard workplace tool layout."}
{"index": 7924, "code": "Class CmsTreeNode<T> {\n\t// Adds a child node.\n\tvoid addChild​(CmsTreeNode<T> cmsTreeNode);\n\t// Adds the enclosed data of this node and its children to the given list, in preorder.\n\tvoid addDataInPreOrder​(java.util.List<T> result);\n\t// Gets the (mutable) list of child nodes.\n\tjava.util.List<CmsTreeNode<T>> getChildren();\n\t// Gets the data associated with this node.\n\tT getData();\n\t// Sets the data for this node.\n\tvoid setData​(T data);\n}", "des": "Generic tree node which can contain an object of generic type T as data, and which has a mutable list of child nodes."}
{"index": 7925, "code": "Class CmsTreeOpenState {\n\t// Gets the set of structure ids of resources corresponding to opened tree entries.\n\tjava.util.Set<CmsUUID> getOpenItems();\n\t// Gets the site root.\n\tjava.lang.String getSiteRoot();\n\t// Gets the time stamp.\n\tlong getTimestamp();\n\t// Gets the tree name.\n\tjava.lang.String getTreeName();\n}", "des": "The tree open state of a gallery tree tab."}
{"index": 7926, "code": "Enum CmsTwoFactorAuthenticationUserPolicy.CheckType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsTwoFactorAuthenticationUserPolicy.CheckType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsTwoFactorAuthenticationUserPolicy.CheckType[] values();\n}", "des": "The rule type."}
{"index": 7927, "code": "Class CmsTwoFactorAuthenticationUserPolicy.Rule {\n\t// Gets the pattern (only used for check type 'pattern').\n\tjava.util.regex.Pattern getPattern();\n\t// Gets the match type, which determines what the name is compared to.\n\tCmsTwoFactorAuthenticationUserPolicy.CheckType getType();\n\t// Gets the name that is used for comparison.\n\tjava.lang.String getValue();\n}", "des": "Represents a single rule configured for a policy."}
{"index": 7928, "code": "Class CmsTwoFactorAuthenticationUserPolicy.UserCheckContext {\n\t// Gets the set of names of the groups the user belongs to.\n\tjava.util.Set<java.lang.String> getGroupNames();\n\t// Gets the user.\n\tCmsUser getUser();\n}", "des": "A context object used to keep user-related data around which may be needed by multiple rules, so we only need read it once (e.g."}
{"index": 7929, "code": "Enum CmsTypeOrderingMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsTypeOrderingMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsTypeOrderingMode[] values();\n}", "des": "Enum describing how type configurations should be ordered in the sitemap configuration."}
{"index": 7930, "code": "Enum CmsUgcConstants.ErrorCode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsUgcConstants.ErrorCode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsUgcConstants.ErrorCode[] values();\n}", "des": "Enum representing the different types of errors."}
{"index": 7931, "code": "Class CmsUgcDataItem {\n\t// Gets the data from the field as a byte array.\n\tbyte[] getData();\n\t// Gets the field name.\n\tjava.lang.String getFieldName();\n\t// Gets the file name, if this is a file upload field.\n\tjava.lang.String getFileName();\n}", "des": "Implementation of the I_CmsFormDataItem which delegates its methods to a FileItem from Apache Commons Upload."}
{"index": 7932, "code": "Class CmsUgcException {\n\t// Returns the errorCode.\n\tCmsUgcConstants.ErrorCode getErrorCode();\n\t// Gets the human-readable message.\n\tjava.lang.String getUserMessage();\n\t// Sets the errorCode.\n\tvoid setErrorCode​(CmsUgcConstants.ErrorCode errorCode);\n}", "des": "Exception class for use in the org.opencms.editors.usergenerated module."}
{"index": 7933, "code": "Class CmsUgcSessionQueue {\n\t// Creates a session queue based on the given configuration.\n\tstatic CmsUgcSessionQueue createQueue​(CmsUgcConfiguration config);\n\t// Updates the queue parameters from the configuration object.\n\tvoid updateFromConfiguration​(CmsUgcConfiguration config);\n\t// If there are currently any threads waiting on this queue, wait for the interval given on construction after the currenly last thread stops waiting.\n\tboolean waitForSlot();\n}", "des": "A queue used to enforce a certain wait time between requests for sessions for the same form configuration."}
{"index": 7934, "code": "Class CmsUgcSessionSecurityUtil {\n\t// Checks whether a new XML content may be created and throws an exception if this is not the case.\n\tstatic void checkCreateContent​(CmsObject cms, CmsUgcConfiguration config);\n\t// Checks whether an uploaded file can be created in the VFS, and throws an exception otherwise.\n\tstatic void checkCreateUpload​(CmsObject cms, CmsUgcConfiguration config, java.lang.String name, long size);\n}", "des": "Helper class which implements some of the security checks for user generated content creation."}
{"index": 7935, "code": "Class CmsUnlinkDialog {\n\t// Called when the Cancel button is clicked.\n\tprotected void onClickCancel();\n\t// Called when the OK button is clicked.\n\tprotected void onClickOk();\n}", "des": "Dialog to confirm detaching a resource from a locale group."}
{"index": 7936, "code": "Class CmsUnlinkLocaleVariantAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tjava.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Workplace action for the 'Link locale variant' dialog."}
{"index": 7937, "code": "Class CmsUnlockAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the workplace message bundle key of the action title.\n\tprotected java.lang.String getTitleKey();\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n}", "des": "Action \"Unlock resource\"."}
{"index": 7938, "code": "Class CmsUploadActionElement {\n\t// Returns the serialized data for the core provider wrapped in a script tag.\n\tjava.lang.String export();\n\t// Returns the serialized data for the core provider.\n\tjava.lang.String exportAll();\n\t// Special export for the button mode.\n\tjava.lang.String exportButton();\n\t// Returns the upload dialog title.\n\tjava.lang.String getTitle();\n}", "des": "Upload action element, used to generate the upload dialog."}
{"index": 7939, "code": "Class CmsUploadAreaExtension {\n\t// Adds a window close listener.\n\tvoid addUploadListener​(CmsUploadButton.I_UploadListener listener);\n\tprotected CmsUploadAreaState getState();\n\t// Called once the upload is finished.\n\tvoid onUploadFinished​(java.util.List<java.lang.String> files);\n\t// Removes the given window close listener.\n\tvoid removeUploadListener​(CmsUploadButton.I_UploadListener listener);\n\t// Sets the upload target folder.\n\tvoid setTargetFolder​(java.lang.String targetFolder);\n}", "des": "Extends the given component to be an upload drop area."}
{"index": 7940, "code": "Class CmsUploadAreaState {\n\t// Returns the targetFolderRootPath.\n\tjava.lang.String getTargetFolderRootPath();\n\t// Sets the targetFolderRootPath.\n\tvoid setTargetFolderRootPath​(java.lang.String targetFolderRootPath);\n}", "des": "The upload button state."}
{"index": 7941, "code": "Class CmsUploadBean {\n\t// Returns the listener for given CmsUUID.\n\tstatic CmsUploadListener getCurrentListener​(CmsUUID listenerId);\n\t// Returns the VFS path for the given filename and folder.\n\tstatic java.lang.String getNewResourceName​(CmsObject cms, java.lang.String fileName, java.lang.String folder, boolean keepFileNames);\n\t// Sets the uploadDelay.\n\tvoid setUploadDelay​(int uploadDelay);\n\t// Starts the upload.\n\tjava.lang.String start();\n}", "des": "Bean to be used in JSP scriptlet code that provides access to the upload functionality."}
{"index": 7942, "code": "Class CmsUploadButton {\n\t// Adds an upload listener.\n\tvoid addUploadListener​(CmsUploadButton.I_UploadListener listener);\n\tprotected CmsUploadState getState();\n\t// Called once the upload is finished.\n\tvoid onUploadFinished​(java.util.List<java.lang.String> uploadedFiles);\n\t// Removes the given upload listener.\n\tvoid removeUploadListener​(CmsUploadButton.I_UploadListener listener);\n\tvoid setEnabled​(boolean enabled);\n\t// Sets the upload target folder.\n\tvoid setTargetFolder​(java.lang.String targetFolder);\n}", "des": "The upload button."}
{"index": 7943, "code": "Enum CmsUploadProgessInfo.UPLOAD_STATE {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsUploadProgessInfo.UPLOAD_STATE valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsUploadProgessInfo.UPLOAD_STATE[] values();\n}", "des": "A enum for the upload state."}
{"index": 7944, "code": "Class CmsUploadRestrictionInfo.Builder {\n\t// Adds a new entry.\n\tCmsUploadRestrictionInfo.Builder add​(java.lang.String path, java.lang.String info);\n\t// Creates a new upload restriction info object.\n\tCmsUploadRestrictionInfo build();\n}", "des": "Helper class for building a new CmsUploadRestrictionInfo object."}
{"index": 7945, "code": "Class CmsUploadService {\n\t// Cancels the upload.\n\tjava.lang.Boolean cancelUpload();\n\t// Checks the availability of a resource in the VFS, using the CmsResourceFilter.IGNORE_EXPIRATION filter.\n\tCmsUploadFileBean checkUploadFiles​(java.util.List<java.lang.String> fileNames, java.lang.String targetFolder, boolean isRootPath);\n\t// Returns the upload progress information.\n\tCmsUploadProgessInfo getUploadProgressInfo();\n}", "des": "Handles all RPC services related to the upload dialog."}
{"index": 7946, "code": "Enum CmsUploadState.UploadType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsUploadState.UploadType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsUploadState.UploadType[] values();\n}", "des": "The upload types."}
{"index": 7947, "code": "Class CmsUploadTimeoutWatcher {\n\t// Cancels the watch process.\n\tvoid cancel();\n\t// The watching process.\n\tvoid run();\n}", "des": "A class which is executed in a new thread, so its able to detect when an upload process is frozen and sets an exception in order to be canceled."}
{"index": 7948, "code": "Class CmsUploadWarningTable {\n\t// Clears the table.\n\tvoid clear();\n\t// Gets the warning message for the given structure id.\n\tjava.lang.String getMessage​(CmsUUID id);\n\t// Sets the warning message for the given structure id (or clears it, if the message isn null).\n\tvoid setMessage​(CmsUUID id, java.lang.String message);\n\t// Gets the size of the table.\n\tlong size();\n}", "des": "A table to temporarily store warnings that should be displayed for uploaded files."}
{"index": 7949, "code": "Class CmsUrlNameMappingEntry {\n\t// Returns the date at which the mapping was last changed as a long.\n\tlong getDateChanged();\n\t// Returns the locale of the mapping entry.\n\tjava.lang.String getLocale();\n\t// Returns the name to which the mapping belongs.\n\tjava.lang.String getName();\n\t// Returns the state of the mapping entry.\n\tint getState();\n\t// Returns the structure id which is mapped to the name.\n\tCmsUUID getStructureId();\n}", "des": "An URL name mapping entry."}
{"index": 7950, "code": "Class CmsUserDataApp {\n\t// Returns the current bread crumb entries in an ordered map.\n\tprotected java.util.LinkedHashMap<java.lang.String,​java.lang.String> getBreadCrumbForState​(java.lang.String state);\n\t// Returns the app component for the given state.\n\tprotected com.vaadin.ui.Component getComponentForState​(java.lang.String state);\n\t// Returns the sub navigation entries.\n\tprotected java.util.List<A_CmsWorkplaceApp.NavEntry> getSubNavEntries​(java.lang.String state);\n}", "des": "The user data app."}
{"index": 7951, "code": "Class CmsUserDataAppPanel {\n\t// Prepares the CmsObject to use for the report.\n\tprotected CmsObject getCmsObjectForReport();\n\t// Gets the report for the download.\n\tprotected java.lang.String getResult();\n}", "des": "The GUI form for the user data app."}
{"index": 7952, "code": "Class CmsUserDataDialog {\n\t// Returns the title.\n\tjava.lang.String getTitle​(java.util.Locale locale);\n\t// Returns the message to be displayed for the user data check dialog.\n\tprotected java.lang.String getUserDataCheckMessage();\n}", "des": "Dialog to edit the user data."}
{"index": 7953, "code": "Class CmsUserDataFormLayout {\n\t// Initializes available fields for given user.\n\tvoid initFields​(CmsUser user);\n\tvoid initFields​(CmsUser user, CmsUserDataFormLayout.EditLevel editLevel);\n\t// Returns whether the form fields are valid.\n\tboolean isValid();\n\t// Store fields to given user.\n\tvoid submit​(CmsUser user, CmsObject cms, java.lang.Runnable afterWrite);\n\t// Store fields to given user.\n\tvoid submit​(CmsUser user, CmsObject cms, java.lang.Runnable afterWrite, boolean force);\n}", "des": "Form Layout for user data."}
{"index": 7954, "code": "Class CmsUserDataRequestConfig {\n\t// Gets the email subject.\n\tjava.lang.String getMailSubject();\n\t// Gets the email text.\n\tjava.lang.String getMailText();\n\t// Gets the time for which user data requests are valid (in milliseconds).\n\tlong getRequestLifetime();\n\t// Gets the text for the given key.\n\tjava.lang.String getText​(java.lang.String key);\n}", "des": "Configuration for user data requests."}
{"index": 7955, "code": "Enum CmsUserDataRequestType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsUserDataRequestType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsUserDataRequestType[] values();\n}", "des": "Enum representing the type of user data request."}
{"index": 7956, "code": "Class CmsUserDataResourceHandler {\n\t// Possibility to modify or change the CmsFile with the CmsObject.\n\tCmsResource initResource​(CmsResource resource, CmsObject cms, javax.servlet.http.HttpServletRequest req, javax.servlet.http.HttpServletResponse res);\n\t// Returns true if an instance has been created.\n\tstatic boolean isInitialized();\n}", "des": "Impelemnts user data download links for the user data request feature."}
{"index": 7957, "code": "Class CmsUserDriver {\n\t// Creates a new user query builder.\n\tCmsUserQueryBuilder createUserQueryBuilder();\n\t// Initializes the SQL manager for this driver.\n\tCmsSqlManager initSqlManager​(java.lang.String classname);\n}", "des": "AS400 implementation of the user driver methods."}
{"index": 7958, "code": "Class CmsUserDriver {\n\t// Creates a new user query builder.\n\tCmsUserQueryBuilder createUserQueryBuilder();\n\t// Initializes the SQL manager for this driver.\n\tCmsSqlManager initSqlManager​(java.lang.String classname);\n}", "des": "DB2 implementation of the user driver methods."}
{"index": 7959, "code": "Class CmsUserDriver {\n\t// Creates a new user query builder.\n\tCmsUserQueryBuilder createUserQueryBuilder();\n\t// Initializes the SQL manager for this driver.\n\tCmsSqlManager initSqlManager​(java.lang.String classname);\n\t// Returns true if the user driver has been instantiated.\n\tstatic boolean isInstantiated();\n}", "des": "MS SQL implementation of the user driver methods."}
{"index": 7960, "code": "Class CmsUserDriver {\n\t// Creates a new user query builder.\n\tCmsUserQueryBuilder createUserQueryBuilder();\n\t// Initializes the SQL manager for this driver.\n\tCmsSqlManager initSqlManager​(java.lang.String classname);\n}", "des": "PostgreSql implementation of the user driver methods."}
{"index": 7961, "code": "Class CmsUserEditParameters {\n\t// Checks if editing is enabled.\n\tboolean isEditEnabled();\n\t// Checks if password change is enabled.\n\tboolean isPasswordChangeEnabled();\n\t// Enables/disables editing.\n\tvoid setEditEnabled​(boolean editEnabled);\n\t// Enables/disables password change.\n\tvoid setPasswordChangeEnabled​(boolean passwordChangeEnabled);\n}", "des": "Parameters for the user edit dialog."}
{"index": 7962, "code": "Class CmsUserExportSettings {\n\t// Adds a column to the list of export columns.\n\tvoid addColumn​(java.lang.String column);\n\t// Returns the list of export columns.\n\tjava.util.List<java.lang.String> getColumns();\n\t// Returns the export separator.\n\tjava.lang.String getSeparator();\n\t// Sets the export columns.\n\tvoid setColumns​(java.util.List<java.lang.String> columns);\n\t// Sets the export separator.\n\tvoid setSeparator​(java.lang.String separator);\n}", "des": "Provides the user export settings."}
{"index": 7963, "code": "Class CmsUserInfoDialog {\n\t// Gets the status text from given session.\n\tstatic java.lang.String getStatusForItem​(java.lang.Long lastActivity);\n\t// Gets the status style for given session.\n\tstatic java.lang.String getStatusStyleForItem​(java.lang.Long lastActivity);\n\t// Shows a dialog with user information.\n\tstatic void showUserInfo​(CmsUser user);\n\t// Shows a dialog with user information for given session.\n\tstatic void showUserInfo​(CmsSessionInfo session);\n}", "des": "Dialog to show user information and to switch to user session."}
{"index": 7964, "code": "Class CmsUserPublishListEntry {\n\t// Gets the modification date of the user publish list entry.\n\tlong getDateChanged();\n\t// Gets the structure id of the resource in the publish list.\n\tCmsUUID getStructureId();\n\t// Gets the id of the user to whom the publish list entry belongs.\n\tCmsUUID getUserId();\n}", "des": "User publish list entry."}
{"index": 7965, "code": "Enum CmsUserSearchParameters.SearchKey {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsUserSearchParameters.SearchKey valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsUserSearchParameters.SearchKey[] values();\n}", "des": "An enum used for indicating searchable columns."}
{"index": 7966, "code": "Enum CmsUserSearchParameters.SortKey {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsUserSearchParameters.SortKey valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsUserSearchParameters.SortKey[] values();\n}", "des": "An enum used for indicating sort order."}
{"index": 7967, "code": "Class CmsUserSettings.CmsSearchResultStyle {\n\t// Returns the localization key for this style.\n\tjava.lang.String getKey();\n\t// Returns the copy mode object from the old copy mode integer.\n\tstatic CmsUserSettings.CmsSearchResultStyle valueOf​(java.lang.String mode);\n}", "des": "Enumeration class for workplace search result styles."}
{"index": 7968, "code": "Enum CmsUserSettings.UploadVariant {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsUserSettings.UploadVariant valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsUserSettings.UploadVariant[] values();\n}", "des": "A enum for the different upload variants."}
{"index": 7969, "code": "Class CmsUserSettingsBean {\n\t// Adds a user setting.\n\tvoid addSetting​(java.lang.String value, CmsXmlContentProperty config, boolean basic);\n\t// Gets the map with the configurations for the individual user settings.\n\tjava.util.Map<java.lang.String,​CmsXmlContentProperty> getConfiguration();\n\t// Gets the value for a given user setting.\n\tjava.lang.String getValue​(java.lang.String key);\n\t// Returns true if the user setting with the given name is a basic setting\n\tboolean isBasic​(java.lang.String name);\n}", "des": "Bean for transferring user preference information between the client and the server."}
{"index": 7970, "code": "Enum CmsUserTable.TableProperty {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsUserTable.TableProperty valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsUserTable.TableProperty[] values();\n}", "des": "Table properties."}
{"index": 7971, "code": "Class CmsUUID_CustomFieldSerializer {\n\t// Deserializes additional fields.\n\tstatic void deserialize​(com.google.gwt.user.client.rpc.SerializationStreamReader streamReader, CmsUUID instance);\n\t// Creates a new instance.\n\tstatic CmsUUID instantiate​(com.google.gwt.user.client.rpc.SerializationStreamReader streamReader);\n\t// Serializes the given instance.\n\tstatic void serialize​(com.google.gwt.user.client.rpc.SerializationStreamWriter streamWriter, CmsUUID instance);\n}", "des": "GWT serializer for CmsUUID."}
{"index": 7972, "code": "Class CmsVaadinUtils.OptionGroupBuilder {\n\t// Adds an option.\n\tCmsVaadinUtils.OptionGroupBuilder add​(java.lang.String key, java.lang.String text);\n\t// Returns the option group.\n\tcom.vaadin.v7.ui.OptionGroup build();\n\t// Adds horizontal style to option group.\n\tCmsVaadinUtils.OptionGroupBuilder horizontal();\n}", "des": "Helper class for building option groups."}
{"index": 7973, "code": "Enum CmsVaadinUtils.PropertyId {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsVaadinUtils.PropertyId valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsVaadinUtils.PropertyId[] values();\n}", "des": "Container property ids."}
{"index": 7974, "code": "Class CmsValidationQuery {\n\t// Gets the configuration string for the server-side validator.\n\tjava.lang.String getConfig();\n\t// Gets the class name of the server-side validator.\n\tjava.lang.String getValidatorId();\n\t// Returns the value to validate.\n\tjava.lang.String getValue();\n}", "des": "A simple bean class which represents a validation request for a single form field."}
{"index": 7975, "code": "Class CmsValidationResult {\n\t// Returns the error message, or null if the validation has succeeded.\n\tjava.lang.String getErrorMessage();\n\t// Returns the replacement for the field value.\n\tjava.lang.String getNewValue();\n\t// Returns true if the field value should be replaced.\n\tboolean hasNewValue();\n\t// Returns true if the validation has succeeded.\n\tboolean isOk();\n}", "des": "The result of a single field validation."}
{"index": 7976, "code": "Class CmsVariationBean {\n\t// Gets the dimensions of the current variation.\n\tjava.lang.String getDimensions();\n\t// Get length of variation.\n\tjava.lang.String getLength();\n\t// Gets path of variation.\n\tjava.lang.String getName();\n}", "des": "Bean for Variations im image resources."}
{"index": 7977, "code": "Class CmsVerticalMenu {\n\t// Adds a menu entry button.\n\tvoid addMenuEntry​(com.vaadin.ui.Button entryButton);\n\t// Adds an entry to the menu, returns the entry button.\n\tcom.vaadin.ui.Button addMenuEntry​(java.lang.String label, com.vaadin.server.Resource icon);\n}", "des": "A vertical menu styled like e menu bar sub menu or the context menu."}
{"index": 7978, "code": "Class CmsVfsBundleManager.NameAndLocale {\n\t// Gets the locale.\n\tjava.util.Locale getLocale();\n\t// Gets the base name.\n\tjava.lang.String getName();\n}", "des": "Data holder for a base name and locale of a message bundle."}
{"index": 7979, "code": "Class CmsVfsBundleParameters {\n\t// Gets the base path of the resource bundle.\n\tjava.lang.String getBasePath();\n\t// Gets the locale.\n\tjava.util.Locale getLocale();\n\t// Gets the name of the message bundle.\n\tjava.lang.String getName();\n\t// Gets the resource bundle type.\n\tjava.lang.String getType();\n\t// Returns true if this is the set of parameters for the default message bundle.\n\tboolean isDefault();\n}", "des": "Data class containing the parameters for a VFS-based resource bundle."}
{"index": 7980, "code": "Class CmsVfsDataSource {\n\tjava.lang.String getContentType();\n\t// Returns an input stream baded on the file contents.\n\tjava.io.InputStream getInputStream();\n\t// Returns the root path of the given resource.\n\tjava.lang.String getName();\n\t// Don't use this method, VFS resources can't be written using this datasource class.\n\tjava.io.OutputStream getOutputStream();\n}", "des": "DataSource wrapper for VFS resources, allows easy sending of VFS resources as email attachments."}
{"index": 7981, "code": "Class CmsVfsEntryBean {\n\t// Returns the name of the resource.\n\tjava.lang.String getName();\n\t// Returns the path of the resource.\n\tjava.lang.String getPath();\n\t// Returns the resource type.\n\tjava.lang.String getResourceType();\n\t// Returns true if the resource has children, i.e.\n\tboolean hasChildren();\n\t// Returns true if the resource is a folder.\n\tboolean isFolder();\n}", "des": "A bean which represents a resource in the VFS."}
{"index": 7982, "code": "Class CmsVfsFileValueBean {\n\t// Gets the UUID of this bean.\n\tCmsUUID getId();\n\t// Gets the path of this bean.\n\tjava.lang.String getPath();\n}", "des": "A bean class containing both a path and a UUID which should be stored in an XML file value."}
{"index": 7983, "code": "Enum CmsVisibilityCheckFlag {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsVisibilityCheckFlag valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsVisibilityCheckFlag[] values();\n}", "des": "Flag to control which visibility checks should be performed by CmsStandardVisibilityCheck."}
{"index": 7984, "code": "Class CmsVisitEntry {\n\t// Returns the date.\n\tlong getDate();\n\t// Returns the structure id.\n\tCmsUUID getStructureId();\n\t// Returns the user id.\n\tCmsUUID getUserId();\n}", "des": "A bean which represents a user having visited a page."}
{"index": 7985, "code": "Class CmsWaitHandle {\n\t// Waits for a maximum of waitTime, but returns if another thread calls release().\n\tvoid enter​(long waitTime);\n\t// Releases all currently waiting threads.\n\tvoid release();\n}", "des": "Low-level utility class used for waiting for an action performed by another thread."}
{"index": 7986, "code": "Class CmsWidgetException {\n\t// Creates a copied instance of this localized exception.\n\tCmsException createException​(CmsMessageContainer container, java.lang.Throwable cause);\n\t// Returns the widget that caused the error.\n\tjava.lang.Object getWidget();\n}", "des": "Describes errors that occur in the context of the OpenCms widgets."}
{"index": 7987, "code": "Class CmsWidgetUtil {\n\t// Collects widget information for a given content definition and content value path.\n\tstatic CmsWidgetUtil.WidgetInfo collectWidgetInfo​(CmsObject cms, CmsXmlContentDefinition rootContentDefinition, java.lang.String path, CmsMessages messages);\n\t// Collects widget information for a given content value.\n\tstatic CmsWidgetUtil.WidgetInfo collectWidgetInfo​(CmsObject cms, I_CmsXmlContentValue value);\n}", "des": "Utility methods for getting widget informations out of content definitions."}
{"index": 7988, "code": "Class CmsWidgetUtil.WidgetInfo {\n\t// Gets the complex widget.\n\tI_CmsComplexWidget getComplexWidget();\n\t// Gets the display type.\n\tI_CmsXmlContentHandler.DisplayType getDisplayType();\n\t// Gets the widget instance.\n\tI_CmsWidget getWidget();\n\t// Sets the complex widget.\n\tvoid setComplexWidget​(I_CmsComplexWidget complexWidget);\n\t// Sets the display type.\n\tvoid setDisplayType​(I_CmsXmlContentHandler.DisplayType displayType);\n\t// Sets the widget.\n\tvoid setWidget​(I_CmsWidget widget);\n}", "des": "Bean representing widget information."}
{"index": 7989, "code": "Class CmsWindowCloseExtension {\n\t// Adds a window close listener.\n\tvoid addWindowCloseListener​(I_CmsWindowCloseListener listener);\n\t// Removes the given window close listener.\n\tvoid removeWindowCloseListener​(I_CmsWindowCloseListener listener);\n\t// Executed on window close.p>\n\tvoid windowClosed​(java.lang.String syncToken);\n}", "des": "Makes window close events available on the server side."}
{"index": 7990, "code": "Class CmsWorkflow {\n\tboolean equals​(java.lang.Object obj);\n\t// Returns the list of actions which are possible in this workflow.\n\tjava.util.List<CmsWorkflowAction> getActions();\n\t// Gets the workflow identifier.\n\tjava.lang.String getId();\n\t// Gets the user-readable nice name for the workflow.\n\tjava.lang.String getNiceName();\n}", "des": "A bean which represents a possible workflow, containing an identifier, a user-readable name and a list of workflow actions."}
{"index": 7991, "code": "Class CmsWorkflowAction {\n\t// Returns the action key.\n\tjava.lang.String getAction();\n\t// Returns the action label.\n\tjava.lang.String getLabel();\n\t// Returns if the action is enabled.\n\tboolean isEnabled();\n\t// Check whether this action is a publish action.\n\tboolean isPublish();\n}", "des": "Work flow action information."}
{"index": 7992, "code": "Class CmsWorkflowActionParams {\n\t// Returns the publishIds.\n\tjava.util.List<CmsUUID> getPublishIds();\n\t// Returns the removeIds.\n\tjava.util.List<CmsUUID> getRemoveIds();\n\t// Gets the publish list token, if it is set, else returns null.\n\tCmsPublishListToken getToken();\n}", "des": "Contains the data on which a workflow action should act (usually, a list of resources)."}
{"index": 7993, "code": "Class CmsWorkplaceModePreference {\n\t// Gets the default value for the preference.\n\tjava.lang.String getDefaultValue();\n\t// Gets the nice name key.\n\tjava.lang.String getNiceName();\n\t// Gets the user-independent property configuration.\n\tCmsXmlContentProperty getPropertyDefinition();\n\t// Gets the metadata describing how the setting should be edited.\n\tCmsXmlContentProperty getPropertyDefinition​(CmsObject cms);\n\t// Returns true if the preference is disabled.\n\tboolean isDisabled​(CmsObject cms);\n}", "des": "Workplace mode preference configuration."}
{"index": 7994, "code": "Class CmsWorkplaceServerWidget {\n\t// Adjustes the server prefixes according to SSL setting.\n\tprotected void adjustServerPrefix();\n\t// Adjustes the SSL according to server name.\n\tprotected void adjustSSL();\n\t// Gets the server url.\n\tjava.lang.String getServer();\n\t// Gets the SSL Mode.\n\tCmsSSLMode getSSLMode();\n}", "des": "Layout for workplace server configuration."}
{"index": 7995, "code": "Class CmsWorkplaceUserInfoBlock {\n\t// Creates a new entry.\n\tvoid addEntry​(java.lang.String key, java.lang.String type, java.lang.String widget, java.lang.String params, java.lang.String optional);\n\t// Returns a list of all configured additional information entries.\n\tjava.util.List<CmsWorkplaceUserInfoEntry> getEntries();\n\t// Returns the title.\n\tjava.lang.String getTitle();\n\t// Sets the title.\n\tvoid setTitle​(java.lang.String title);\n}", "des": "Represents an user additional information block."}
{"index": 7996, "code": "Class CmsWorkplaceUserInfoManager {\n\t// Adds the given block.\n\tvoid addBlock​(CmsWorkplaceUserInfoBlock block);\n\t// Returns a list of all configured additional information blocks.\n\tjava.util.List<CmsWorkplaceUserInfoBlock> getBlocks();\n}", "des": "Manages the configuration of the additional information of users."}
{"index": 7997, "code": "Class CmsWorkplaceView {\n\tint compareTo​(CmsWorkplaceView obj);\n\tboolean equals​(java.lang.Object obj);\n\t// Returns the localization key for the display name of this view .\n\tjava.lang.String getKey();\n\t// Returns the sort order of this view.\n\tjava.lang.Float getOrder();\n\t// Returns the OpenCms VFS uri of this view.\n\tjava.lang.String getUri();\n}", "des": "Contains the data of a single workplace view."}
{"index": 7998, "code": "Enum CmsXmlContainerPage.XmlNode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsXmlContainerPage.XmlNode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsXmlContainerPage.XmlNode[] values();\n}", "des": "XML node name constants."}
{"index": 7999, "code": "Enum CmsXmlContentDefinition.SequenceType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsXmlContentDefinition.SequenceType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsXmlContentDefinition.SequenceType[] values();\n}", "des": "Enumeration of possible sequence types in a content definition."}
{"index": 8000, "code": "Class CmsXmlContentEditor {\n\t// Returns the editor URI.\n\tprotected java.lang.String getEditorUri();\n\t// Gets the priority.\n\tint getPriority();\n\t// Checks whether the editor is available for the given resource type.\n\tboolean matchesType​(I_CmsResourceType type, boolean plainText);\n\t// Returns a new editor instance.\n\tI_CmsEditor newInstance();\n}", "des": "The acacia XML content editor."}
{"index": 8001, "code": "Class CmsXmlContentElementComparison {\n\t// Returns the type.\n\tjava.lang.String getType();\n\t// Sets the type.\n\tvoid setType​(java.lang.String type);\n}", "des": "Comparison of two xml content elements."}
{"index": 8002, "code": "Enum CmsXmlContentProperty.PropType {\n\t// Checks if the given type is vfslist.\n\tstatic boolean isVfsList​(java.lang.String type);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsXmlContentProperty.PropType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsXmlContentProperty.PropType[] values();\n}", "des": "Type constants."}
{"index": 8003, "code": "Enum CmsXmlContentProperty.Visibility {\n\t// True if it should be visible on the element itself.\n\tboolean isVisibleOnElement();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsXmlContentProperty.Visibility valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsXmlContentProperty.Visibility[] values();\n}", "des": "The property visibility options."}
{"index": 8004, "code": "Enum CmsXmlContentProperty.XmlNode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsXmlContentProperty.XmlNode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsXmlContentProperty.XmlNode[] values();\n}", "des": "XML node name constants."}
{"index": 8005, "code": "Enum CmsXmlContentPropertyHelper.JsonProperty {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsXmlContentPropertyHelper.JsonProperty valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsXmlContentPropertyHelper.JsonProperty[] values();\n}", "des": "Element Property json property constants."}
{"index": 8006, "code": "Class CmsXmlContentRootLocation {\n\t// Returns the XML document.\n\tI_CmsXmlDocument getDocument();\n\t// Returns the locale.\n\tjava.util.Locale getLocale();\n\t// Returns the location for an xpath relative to the current location.\n\tI_CmsXmlContentValueLocation getSubValue​(java.lang.String subPath);\n\t// Returns the locations for an xpath relative to the current location.\n\tjava.util.List<I_CmsXmlContentValueLocation> getSubValues​(java.lang.String subPath);\n}", "des": "Represents the root of an XML content for a given locale."}
{"index": 8007, "code": "Class CmsXmlContentTab {\n\tboolean equals​(java.lang.Object obj);\n\t// Gets the tab description HTML.\n\tjava.lang.String getDescription();\n\t// Returns the name for the tab ID, generated from the start name.\n\tjava.lang.String getIdName();\n\t// Returns the XML element name where this tab starts.\n\tjava.lang.String getStartName();\n\t// Returns the name to display on the tab.\n\tjava.lang.String getTabName();\n\t// Indicates if the first level of left labels should be shown in the editor.\n\tboolean isCollapsed();\n}", "des": "Represents a configured tab to be used in the XML content editor for better usability."}
{"index": 8008, "code": "Enum CmsXmlContentTree.NodeType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsXmlContentTree.NodeType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsXmlContentTree.NodeType[] values();\n}", "des": "Enum representing the type of the tree node."}
{"index": 8009, "code": "Enum CmsXmlGroupContainer.XmlNode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsXmlGroupContainer.XmlNode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsXmlGroupContainer.XmlNode[] values();\n}", "des": "XML node name constants."}
{"index": 8010, "code": "Class CmsXmlPageEditor {\n\t// Returns the editor URI.\n\tprotected java.lang.String getEditorUri();\n\t// Gets the priority.\n\tint getPriority();\n\t// Checks whether the editor is available for the given resource type.\n\tboolean matchesType​(I_CmsResourceType type, boolean plainText);\n\t// Returns a new editor instance.\n\tI_CmsEditor newInstance();\n}", "des": "The acacia XML content editor."}
{"index": 8011, "code": "Class CmsXmlSitemapCache {\n\t// Clears the cache.\n\tvoid clear();\n\t// Gets the cached entry for the given key (the key will normally be the root path of a sitemap.xml file).\n\tjava.lang.String get​(java.lang.String key);\n\t// Stores an XML sitemap in the cache.\n\tvoid put​(java.lang.String key, java.lang.String value);\n}", "des": "Cache for XML sitemaps."}
{"index": 8012, "code": "Class DefaultReportMessages {\n\t// Returns an instance of this localized message accessor.\n\tstatic I_CmsMessageBundle get();\n\t// Returns the bundle name for this OpenCms package.\n\tjava.lang.String getBundleName();\n}", "des": "Bundle with the keys of report messages"}
{"index": 8013, "code": "Enum FontOpenCms {\n\t// Returns the button overlay style classes for the icon.\n\tjava.lang.String getButtonOverlayStyle();\n\tint getCodepoint();\n\tjava.lang.String getFontFamily();\n\tjava.lang.String getHtml();\n\tjava.lang.String getMIMEType();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic FontOpenCms valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic FontOpenCms[] values();\n}", "des": "The available OpenCms workplace icons."}
{"index": 8014, "code": "Interface I_CmsADEAction {\n\t// Returns the client side command to execute.\n\tjava.lang.String getCommandClassName();\n\t// Returns the optional dialog JSP.\n\tjava.lang.String getJspPath();\n\t// Returns the optional command parameters.\n\tjava.util.Map<java.lang.String,​java.lang.String> getParams();\n\t// Returns whether the ADE context is supported.\n\tboolean isAdeSupported();\n}", "des": "Interface for actions used within the ADE context."}
{"index": 8015, "code": "Interface I_CmsApiAuthorizationHandler {\n\t// Authenticates a user from a request and returns a CmsObject initialized with that user.\n\tCmsObject initCmsObject​(CmsObject adminCms, javax.servlet.http.HttpServletRequest request);\n\t// Sets the admin CmsObject used internally by this handler.\n\tvoid initialize​(CmsObject cms);\n\t// Sets the configuration parameters for this handler.\n\tvoid setParameters​(CmsParameterConfiguration params);\n}", "des": "Special authorization handler for APIs using stateless authorization."}
{"index": 8016, "code": "Interface I_CmsAppButtonProvider {\n\t// Creates an app launcher button.\n\tcom.vaadin.ui.Component createAppButton​(I_CmsWorkplaceAppConfiguration appConfig);\n\t// Creates an app folder button.\n\tcom.vaadin.ui.Component createAppFolderButton​(CmsAppCategoryNode node);\n}", "des": "Generates app launcher buttons."}
{"index": 8017, "code": "Interface I_CmsAppCategory {\n\t// Returns the id.\n\tjava.lang.String getId();\n\t// Gets the user readable name for the category for a given locale.\n\tjava.lang.String getName​(java.util.Locale locale);\n\t// Returns the parentId.\n\tjava.lang.String getParentId();\n\t// Returns the priority.\n\tint getPriority();\n}", "des": "App category interface."}
{"index": 8018, "code": "Interface I_CmsAppSettings {\n\t// Returns the string representation of the current setting state.\n\tjava.lang.String getSettingsString();\n\t// Restores the settings from the given string.\n\tvoid restoreSettings​(java.lang.String storedSettings);\n}", "des": "Used to write app settings to the user."}
{"index": 8019, "code": "Interface I_CmsAttributeSelectData.Option {\n\t// Gets the help text.\n\tjava.lang.String getHelpText();\n\t// Gets the label text.\n\tjava.lang.String getLabel();\n\t// Gets the value.\n\tjava.lang.String getValue();\n\t// Sets the help text.\n\tvoid setHelpText​(java.lang.String helpText);\n\t// Sets the label.\n\tvoid setLabel​(java.lang.String label);\n\t// Sets the value.\n\tvoid setValue​(java.lang.String value);\n}", "des": "Represents a single option."}
{"index": 8020, "code": "Interface I_CmsAttributeSelectData.OptionWithAttributes {\n\t// Gets the attributes.\n\tjava.util.Map<java.lang.String,​java.util.List<java.lang.String>> getAttributes();\n\t// Sets the attributes.\n\tvoid setAttributes​(java.util.Map<java.lang.String,​java.util.List<java.lang.String>> attributes);\n}", "des": "A choice option, but with (multi-valued) attributes added."}
{"index": 8021, "code": "Interface I_CmsAuthorizationHandler.I_PrivilegedLoginAction {\n\t// Performs a privileged login action and returns a cms object initialized for the principal.\n\tCmsObject doLogin​(javax.servlet.http.HttpServletRequest request, java.lang.String principal);\n\t// Returns the cms object.\n\tCmsObject getCmsObject();\n\t// Used to provide an initial cms object.\n\tvoid setCmsObject​(CmsObject cms);\n}", "des": "Class providing the privileged login action."}
{"index": 8022, "code": "Interface I_CmsCachableApp {\n\t// Returns whether this app should be cached within the user session.\n\tboolean isCachable();\n\t// Called after the view is fetched from the cache.\n\tvoid onRestoreFromCache();\n}", "des": "Apps implementing this interface will be stored in the user session so returning to the app will be quicker and use less resources."}
{"index": 8023, "code": "Interface I_CmsCategorizedSelectData.Category {\n\t// Gets the internal value representing the filter category.\n\tjava.lang.String getKey();\n\t// Gets the label.\n\tjava.lang.String getLabel();\n\t// Sets the key.\n\tvoid setKey​(java.lang.String key);\n\t// Sets the label.\n\tvoid setLabel​(java.lang.String label);\n}", "des": "Represents a filter category in the categorized select widget (not necessarily an OpenCms category)."}
{"index": 8024, "code": "Interface I_CmsCategorizedSelectData.Option {\n\t// Gets the categories.\n\tjava.util.List<java.lang.String> getCategories();\n\t// Gets the key.\n\tjava.lang.String getKey();\n\t// Gets the label.\n\tjava.lang.String getLabel();\n\t// Sets the categories.\n\tvoid setCategories​(java.util.List<java.lang.String> categories);\n\t// Sets the key.\n\tvoid setKey​(java.lang.String key);\n\t// Sets the label.\n\tvoid setLabel​(java.lang.String label);\n}", "des": "The Interface Option."}
{"index": 8025, "code": "Interface I_CmsCategorizedSelectDataFactory {\n\t// Creates new category.\n\tcom.google.web.bindery.autobean.shared.AutoBean<I_CmsCategorizedSelectData.Category> category();\n\t// Creates new configuration object.\n\tcom.google.web.bindery.autobean.shared.AutoBean<I_CmsCategorizedSelectData> config();\n\t// Creates new option object.\n\tcom.google.web.bindery.autobean.shared.AutoBean<I_CmsCategorizedSelectData.Option> option();\n}", "des": "AutoBean factory used to create the data for the categorized select widget."}
{"index": 8026, "code": "Interface I_CmsCmisRenditionProvider {\n\t// Gets the rendition content stream for the resource.\n\tbyte[] getContent​(CmsObject cms, CmsResource resource);\n\t// Gets the rendition stream id.\n\tjava.lang.String getId();\n\t// Gets the rendition kind.\n\tjava.lang.String getKind();\n\t// Gets the rendition mimetype.\n\tjava.lang.String getMimeType();\n\t// Gets the rendition data for a resource.\n\torg.apache.chemistry.opencmis.commons.data.RenditionData getRendition​(CmsObject cms, CmsResource resource);\n}", "des": "Rendition provider interface used to generate alternative renditions for resources."}
{"index": 8027, "code": "Interface I_CmsCodeMirrorClientConfiguration {\n\t// Gets the height, in pixels.\n\tjava.lang.Integer getHeight();\n\t// Gets the CodeMirror I18N phrases, as a JSON string.\n\tjava.lang.String getPhrasesJSON();\n\t// Gets the start mode.\n\tjava.lang.String getStartMode();\n\t// Sets the height in pixels.\n\tvoid setHeight​(java.lang.Integer height);\n\t// Sets the CodeMirror I18N phrases as a JSON string\n\tvoid setPhrasesJSON​(java.lang.String json);\n\t// Sets the start mode.\n\tvoid setStartMode​(java.lang.String startMode);\n}", "des": "AutoBean interface that represents the configuration for the client-side CodeMirror editor widget."}
{"index": 8028, "code": "Interface I_CmsComplexWidget {\n\t// Returns a copy of this widget which has been configured with the given configuration string.\n\tI_CmsComplexWidget configure​(java.lang.String configuration);\n\t// Gets the name of the complex widget.\n\tjava.lang.String getName();\n\t// Gets the data needed for the editor to render the complex widget.\n\tCmsComplexWidgetData getWidgetData​(CmsObject cms);\n}", "des": "Interface for complex widgets which are used in the Acacia editor to render whole nested contents."}
{"index": 8029, "code": "Interface I_CmsConfigurationObject<X extends I_CmsConfigurationObject<X>> {\n\t// The name of the configuration object.\n\tjava.lang.String getKey();\n\t// If true, this configuration object will disable an inherited configuration object of the same name.\n\tboolean isDisabled();\n\t// Merges this configuration object with a child configuration object.\n\tX merge​(X child);\n}", "des": "Interface for a single named configuration object that can either be merged with other configuration objects or disable a configuration object with the same name."}
{"index": 8030, "code": "Interface I_CmsConfigurationParameterHandler {\n\t// Adds a configuration parameter to this parameter configurable class instance.\n\tvoid addConfigurationParameter​(java.lang.String paramName, java.lang.String paramValue);\n\t// Returns the parameters of this configurable class instance, or null if the class does not need any parameters.\n\tCmsParameterConfiguration getConfiguration();\n\t// Initializes a configuration after all parameters have been added.\n\tvoid initConfiguration();\n}", "des": "Used for classes that are configurable using <param name=\"name\">value</param> in the XML configuration."}
{"index": 8031, "code": "Interface I_CmsContextMenuClientRpc {\n\t// Sends request to client widget to close context menu.\n\tvoid hide();\n\t// Sends request to client widget to open context menu to given position.\n\tvoid showContextMenu​(int x, int y);\n\t// Sends request to client widget to open context menu relative to component identified by given connectorId.\n\tvoid showContextMenuRelativeTo​(java.lang.String connectorId);\n}", "des": "Server to client RPC communication."}
{"index": 8032, "code": "Interface I_CmsContextMenuServerRpc {\n\t// Called by the client side when context menu is closed.\n\tvoid contextMenuClosed();\n\t// Called by the client widget when context menu item is clicked.\n\tvoid itemClicked​(java.lang.String itemId, boolean menuClosed);\n\t// Called by the client side when context menu is about to be opened.\n\tvoid onContextMenuOpenRequested​(int x, int y, java.lang.String connectorIdOfComponent);\n}", "des": "The context menu server RPC."}
{"index": 8033, "code": "Interface I_CmsCoreProvider {\n\t// Returns the JSON code for the core provider and the given message bundle.\n\tjava.lang.String export​(javax.servlet.http.HttpServletRequest request);\n\t// Returns the JSON code for the provider with dependencies.\n\tjava.lang.String exportAll​(javax.servlet.http.HttpServletRequest request);\n\t// Returns the provided json data.\n\tJSONObject getData​(javax.servlet.http.HttpServletRequest request);\n}", "des": "Convenience interface to provide core server-side data to the client."}
{"index": 8034, "code": "Interface I_CmsCustomLinkRenderer {\n\t// Returns the link for the given link resource.\n\tjava.lang.String getLink​(CmsObject cms, CmsResource resource);\n\t// Returns the link for the given link object.\n\tjava.lang.String getLink​(CmsObject cms, CmsLink link);\n}", "des": "Interface used to inject custom link handling behavior into HTML/link content fields."}
{"index": 8035, "code": "Enum I_CmsDateRestriction.TimeDirection {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsDateRestriction.TimeDirection valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsDateRestriction.TimeDirection[] values();\n}", "des": "Enum representing a direction in time (past / future)."}
{"index": 8036, "code": "Enum I_CmsDateRestriction.TimeUnit {\n\t// Formats a positive integer amount of the given unit for use in Solr range queries.\n\tjava.lang.String formatForRange​(int count);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsDateRestriction.TimeUnit valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsDateRestriction.TimeUnit[] values();\n}", "des": "Enum representing a time unit."}
{"index": 8037, "code": "Interface I_CmsDbContextFactory {\n\t// Returns a new database context.\n\tCmsDbContext getDbContext();\n\t// Returns a new database context based on the given user request context.\n\tCmsDbContext getDbContext​(CmsRequestContext context);\n\t// Initializes the runtime info factory with the OpenCms driver manager.\n\tvoid initialize​(CmsDriverManager driverManager);\n}", "des": "This interface defines a factory to create runtime info objects."}
{"index": 8038, "code": "Enum I_CmsDialogContext.ContextType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsDialogContext.ContextType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsDialogContext.ContextType[] values();\n}", "des": "The available context types."}
{"index": 8039, "code": "Interface I_CmsDialogHandler {\n\t// Returns the name of the handler which is used as key for the OpenCms runtime properties.\n\tjava.lang.String getDialogHandler();\n\t// Returns the dialog URI in the OpenCms VFS to the dialog selector class.\n\tjava.lang.String getDialogUri​(java.lang.String resource, CmsJspActionElement jsp);\n}", "des": "Provides a method for selecting an individual jsp dialog."}
{"index": 8040, "code": "Interface I_CmsEditableDataExtensions {\n\t// Gets the upload folder.\n\tjava.lang.String getUploadFolder();\n\t// Returns true if the upload is enabled.\n\tboolean isUploadEnabled();\n\t// Enables/disables uploading.\n\tvoid setUploadEnabled​(boolean enabled);\n\t// Sets the upload folder.\n\tvoid setUploadFolder​(java.lang.String uploadFolder);\n}", "des": "Extended attributes for editable data generated by e.g."}
{"index": 8041, "code": "Interface I_CmsEditableGroupActionHandler {\n\t// Triggered when the 'add' button is clicked.\n\tvoid onAdd();\n\t// Triggered when the 'delete' button is clicked.\n\tvoid onDelete();\n\t// Triggered when the 'down' button is clicked.\n\tvoid onDown();\n\t// Triggered when the 'edit' button is clicked.\n\tvoid onEdit();\n\t// Triggered when the 'up' button is clicked.\n\tvoid onUp();\n}", "des": "Server side handler interface for button presses in a multivalue widget group row's button bar."}
{"index": 8042, "code": "Interface I_CmsEditableGroupButtonsServerRpc {\n\t// Called when user clicks on 'Add' button.\n\tvoid onAdd();\n\t// Called when user clicks on 'Delete' button.\n\tvoid onDelete();\n\t// Called when user clicks on 'Down' button.\n\tvoid onDown();\n\t// Called when user clicks on the 'Edit' button.\n\tvoid onEdit();\n\t// Called when user clicks on 'Up' button.\n\tvoid onUp();\n}", "des": "Interface for the server side RPC for the CmsEditableGroupButtons component."}
{"index": 8043, "code": "Interface I_CmsEditableGroupRow {\n\t// Returns the button bar widget.\n\tCmsEditableGroupButtons getButtonBar();\n\t// Returns the input field.\n\tcom.vaadin.ui.Component getComponent();\n}", "des": "Interface for components used as editable group rows."}
{"index": 8044, "code": "Interface I_CmsEditorCssHandler {\n\t// Returns the absolute VFS path of the CSS style sheet to use.\n\tjava.lang.String getUriStyleSheet​(CmsObject cms, java.lang.String editedResourcePath);\n\t// Checks if the handler can be used to determine the CSS style sheet based on the edited resource.\n\tboolean matches​(CmsObject cms, java.lang.String editedResourcePath);\n}", "des": "Provides methods to determine the CSS style sheet URI for the editors based on the edited resource path."}
{"index": 8045, "code": "Interface I_CmsEditorHandler {\n\t// Returns the editor URI which will be used for the selected resource in the OpenCms VFS to the editor selector class.\n\tjava.lang.String getEditorUri​(java.lang.String resource, CmsJspActionElement jsp);\n\t// Returns the editor URI which will be used for the selected resource type.\n\tjava.lang.String getEditorUri​(CmsObject cms, java.lang.String resourceType, java.lang.String userAgent, boolean loadDefault);\n}", "des": "Provides a method for selecting an individual file editor."}
{"index": 8046, "code": "Interface I_CmsEditPropertyContext {\n\t// Start the editing process.\n\tvoid editProperty​(java.lang.Object propertyId);\n\t// Checks whether the given property is editable.\n\tboolean isPropertyEditable​(java.lang.Object propertyId);\n}", "des": "Action context that allows direct editing of single properties."}
{"index": 8047, "code": "Interface I_CmsFilePropertyEditHandler {\n\t// Cancels the edit process.\n\tvoid cancel();\n\t// Saves the value.\n\tvoid save​(java.lang.String value);\n\t// Starts the edit process.\n\tvoid start();\n}", "des": "File table inline edit handler."}
{"index": 8048, "code": "Interface I_CmsFilterableTable {\n\t// Method which gets called to filter table.\n\tvoid filter​(java.lang.String data);\n\t// Gets a layout in case of empty table.\n\tcom.vaadin.v7.ui.VerticalLayout getEmptyLayout();\n}", "des": "Interface for tables which support a filter function."}
{"index": 8049, "code": "Interface I_CmsFolderAppCategory {\n\t// Returns the button style.\n\tjava.lang.String getButtonStyle();\n\t// Gets the help text for the app in the given locale.\n\tjava.lang.String getHelpText​(java.util.Locale locale);\n\t// Returns the app icon resource.\n\tcom.vaadin.server.Resource getIcon();\n\t// Returns the visibility status of the app for the given user context.\n\tCmsAppVisibilityStatus getVisibility​(CmsObject cms);\n}", "des": "Displays a sub menu in the app launch pad."}
{"index": 8050, "code": "Interface I_CmsFormDataItem {\n\t// Gets the data from the field as a byte array.\n\tbyte[] getData();\n\t// Gets the field name.\n\tjava.lang.String getFieldName();\n\t// Gets the file name, if this is a file upload field.\n\tjava.lang.String getFileName();\n}", "des": "Interface representing the data from a field of a submitted form."}
{"index": 8051, "code": "Enum I_CmsGalleryProviderConstants.GalleryMode {\n\t// Returns the configured tabs.\n\tI_CmsGalleryProviderConstants.GalleryTabId[] getTabs();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsGalleryProviderConstants.GalleryMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsGalleryProviderConstants.GalleryMode[] values();\n}", "des": "Gallery mode constants."}
{"index": 8052, "code": "Enum I_CmsGalleryProviderConstants.GalleryTabId {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsGalleryProviderConstants.GalleryTabId valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsGalleryProviderConstants.GalleryTabId[] values();\n}", "des": "Tab ids used for tab configuration."}
{"index": 8053, "code": "Enum I_CmsGalleryProviderConstants.ImageParams {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsGalleryProviderConstants.ImageParams valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsGalleryProviderConstants.ImageParams[] values();\n}", "des": "Image parameteres."}
{"index": 8054, "code": "Enum I_CmsGalleryProviderConstants.SortParams {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsGalleryProviderConstants.SortParams valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsGalleryProviderConstants.SortParams[] values();\n}", "des": "Sorting parameters."}
{"index": 8055, "code": "Interface I_CmsGalleryTreeEntry<T> {\n\t// Adds a new child to the node.\n\tvoid addChild​(T child);\n\t// Gets the children of this node.\n\tjava.util.List<T> getChildren();\n}", "des": "Common interface for accessing sitemap/VFS entry beans as tree nodes."}
{"index": 8056, "code": "Interface I_CmsGalleryWidgetDynamicConfiguration {\n\t// Returns the required information for the initial item list to load.\n\tjava.lang.String getStartup​(CmsObject cms, CmsMessages widgetDialog, I_CmsWidgetParameter param);\n\t// Returns the type of the initial item list to load, either gallery or category.\n\tjava.lang.String getType​(CmsObject cms, CmsMessages widgetDialog, I_CmsWidgetParameter param);\n}", "des": "Enables a dynamic configuration of values for the A_CmsGalleryWidget."}
{"index": 8057, "code": "Interface I_CmsGlobalConfigurationCache {\n\t// Clears the cache.\n\tvoid clear();\n\t// Removes a published resource from the cache.\n\tvoid remove​(CmsPublishedResource pubRes);\n\t// Removes a resource from the cache.\n\tvoid remove​(CmsResource resource);\n\t// Updates the cache entry for the given published resource.\n\tvoid update​(CmsPublishedResource pubRes);\n\t// Updates the cache entry for the given resource.\n\tvoid update​(CmsResource resource);\n}", "des": "This is interface is intended to be used in combination with the CmsGlobalConfigurationCacheEventHandler class."}
{"index": 8058, "code": "Interface I_CmsGwtDialogServerRpc {\n\t// Disposes of the extension and tells the server whether to re-init the UI.\n\tvoid onClose​(boolean reinitUI);\n\t// Disposes of the extension, and tells the server which resources have changed.\n\tvoid onClose​(java.util.List<java.lang.String> changedStructureIds, long delayMillis);\n}", "des": "Client-to-server rpc interface for the GWT dialog extension."}
{"index": 8059, "code": "Interface I_CmsHasIconClasses {\n\t// Returns the big icon CSS classes.\n\tjava.lang.String getBigIconClasses();\n\t// Returns the small icon CSS classes.\n\tjava.lang.String getSmallIconClasses();\n}", "des": "Interface for elements with icons."}
{"index": 8060, "code": "Interface I_CmsHasMenuItemVisibility {\n\t// Gets the visibility for the current resource and CMS context.\n\tCmsMenuItemVisibilityMode getVisibility​(CmsObject cms, java.util.List<CmsResource> resources);\n\t// Gets the visibility for the current dialog context.\n\tCmsMenuItemVisibilityMode getVisibility​(I_CmsDialogContext context);\n}", "des": "Interface used to check menu item visibility for context menus."}
{"index": 8061, "code": "Interface I_CmsHistoryResource {\n\t// Returns the structure id of the parent resource.\n\tCmsUUID getParentId();\n\t// Returns the publish tag of this historical resource.\n\tint getPublishTag();\n\t// Returns the version number of the resource part for this historical resource.\n\tint getResourceVersion();\n\t// Returns the version number of the structure part for this historical resource.\n\tint getStructureVersion();\n\t// Returns the version number of this historical resource.\n\tint getVersion();\n}", "des": "A historical version of a resource in the OpenCms VFS resource history."}
{"index": 8062, "code": "Interface I_CmsHtmlConverter {\n\t// Converts the given HTML code according to the settings of this converter.\n\tjava.lang.String convertToString​(java.lang.String htmlInput);\n\t// Returns the encoding used for the HTML code conversion.\n\tjava.lang.String getEncoding();\n\t// Returns the conversion modes to use as List of String parameters.\n\tjava.util.List<java.lang.String> getModes();\n\t// Initializes the HTML converter instance.\n\tvoid init​(java.lang.String encoding, java.util.List<java.lang.String> modes);\n}", "des": "HTML converters can be used to clean up HTML code and/or pretty print the code."}
{"index": 8063, "code": "Interface I_CmsIndexWriter {\n\t// Close this IndexWriter.\n\tvoid close();\n\t// Commit all previous operations.\n\tvoid commit();\n\t// Delete a document from the index.\n\tvoid deleteDocument​(CmsPublishedResource resource);\n\t// Optimizes the index.\n\tvoid optimize();\n\t// Update a document in the index.\n\tvoid updateDocument​(java.lang.String rootPath, I_CmsSearchDocument document);\n}", "des": "Abstracts the index writer implementation for the most important index manipulation operations."}
{"index": 8064, "code": "Interface I_CmsJsonHandler {\n\t// Gets the sort order for this handler.\n\tdouble getOrder();\n\t// Returns true if the handler matches the given context.\n\tboolean matches​(CmsJsonHandlerContext context);\n\t// Renders the JSON.\n\tCmsJsonResult renderJson​(CmsJsonHandlerContext context);\n}", "des": "Interface for individual JSON handlers."}
{"index": 8065, "code": "Interface I_CmsJsonRendererXmlContent {\n\t// Initializes the context for the renderer.\n\tvoid initialize​(CmsObject cms);\n\t// Initializes the context for the renderer.\n\tvoid initialize​(CmsJsonHandlerContext context);\n\t// Converts the XML content for a single locale to a JSON object\n\tjava.lang.Object render​(CmsXmlContent content, java.util.Locale locale);\n}", "des": "Renders a single-locale content tree as JSON."}
{"index": 8066, "code": "Interface I_CmsJspDeviceSelector {\n\t// Returns the name of the device type.\n\tjava.lang.String getDeviceType​(javax.servlet.http.HttpServletRequest req);\n\t// Returns an array of device types that can be detected.\n\tjava.util.List<java.lang.String> getDeviceTypes();\n}", "des": "This interface supports the basic functionality for the device detection."}
{"index": 8067, "code": "Interface I_CmsListAddMetadata {\n\t// Gets the post create handler.\n\tjava.lang.String getPostCreateHandler();\n\t// Gets the types that should be creatable.\n\tjava.util.List<java.lang.String> getTypes();\n\t// Sets the post create handler.\n\tvoid setPostCreateHandler​(java.lang.String postCreateHandler);\n\t// Sets the types that should be creatable.\n\tvoid setTypes​(java.util.List<java.lang.String> types);\n}", "des": "AutoBean interface for the data injected into the page by the cms:enable-list-add tag."}
{"index": 8068, "code": "Interface I_CmsLocaleCompareContext {\n\t// Gets the comparison locale.\n\tjava.util.Locale getComparisonLocale();\n\t// Gets the locale group of the root resource.\n\tCmsLocaleGroup getLocaleGroup();\n\t// Gets the root resource.\n\tCmsResource getRoot();\n\t// Gets the root locale.\n\tjava.util.Locale getRootLocale();\n\t// Refreshes everything.\n\tvoid refreshAll();\n}", "des": "Provides information about the current state of the locale comparison editor."}
{"index": 8069, "code": "Interface I_CmsLocaleHandler {\n\t// Returns the i18n information to use in the request context.\n\tCmsI18nInfo getI18nInfo​(javax.servlet.http.HttpServletRequest req, CmsUser user, CmsProject project, java.lang.String resource);\n\t// Will be called during system startup.\n\tvoid initHandler​(CmsObject cms);\n}", "des": "A locale handler returns the locale name to use for the given request context."}
{"index": 8070, "code": "Interface I_CmsLoginTargetRpc {\n\t// Opens a login target (private PC case).\n\tvoid openTargetForPrivatePc​(java.lang.String encryptedTarget);\n\t// Opens a login target (public PC case).\n\tvoid openTargetForPublicPc​(java.lang.String target);\n}", "des": "Client RPC interface for opening a login target."}
{"index": 8071, "code": "Interface I_CmsMacroResolver {\n\t// Resolves a single macro to the macro value, returns null if the macro could not be resolved.\n\tjava.lang.String getMacroValue​(java.lang.String macro);\n\t// Returns true if macros that could not be resolved are kept \"as is\" in the input String, false if they are replaced by an empty String.\n\tboolean isKeepEmptyMacros();\n\t// Resolves all macros in the input, replacing them with the macro values.\n\tjava.lang.String resolveMacros​(java.lang.String input);\n}", "des": "Describes a macro mapper, which is used to efficiently resolve macros in the form of %(key) or ${key} in an input String."}
{"index": 8072, "code": "Interface I_CmsNewsletter {\n\t// Adds a OpenCms resource as an attachment to the newsletter.\n\tvoid addAttachment​(CmsObject cms, CmsResource resource);\n\t// Adds content to the newsletter.\n\tvoid addContent​(I_CmsNewsletterContent content);\n\t// Returns the newsletter as an e-mail to be sent.\n\torg.apache.commons.mail.Email getEmail​(CmsObject cms, I_CmsNewsletterRecipient recipient);\n\t// Sets the subject.\n\tvoid setSubject​(java.lang.String subject);\n}", "des": "Interface for the newsletter."}
{"index": 8073, "code": "Interface I_CmsNewsletterContent {\n\t// Returns the channel.\n\tjava.lang.String getChannel();\n\t// Returns the content.\n\tjava.lang.String getContent();\n\t// Returns the order of this content in it's channel.\n\tint getOrder();\n\t// Returns the type.\n\tCmsNewsletterContentType getType();\n}", "des": "Every I_CmsNewsletter contains a list of I_CmsNewsletterContent objects."}
{"index": 8074, "code": "Interface I_CmsNewsletterRecipient {\n\t// Returns the email address of the recipient.\n\tjava.lang.String getEmail();\n\t// Returns the firstname of the recipient.\n\tjava.lang.String getFirstname();\n\t// Returns the nicename of the recipient.\n\tjava.lang.String getFullName();\n\t// Returns the lastname of the recipient.\n\tjava.lang.String getLastname();\n\t// Returns true in case this newsletter recipient has subscribed to the given content.\n\tboolean isSubscriber​(I_CmsNewsletterContent content);\n}", "des": "Interface for recipients of I_CmsNewsletter objects."}
{"index": 8075, "code": "Interface I_CmsPasswordSecurityEvaluator {\n\t// Evaluates the given password security.\n\tI_CmsPasswordSecurityEvaluator.SecurityLevel evaluatePasswordSecurity​(java.lang.String password);\n\t// Returns a hint describing how to set a secure password.\n\tjava.lang.String getPasswordSecurityHint​(java.util.Locale locale);\n}", "des": "Password handler implementing this interface allow the password security to be evaluated."}
{"index": 8076, "code": "Enum I_CmsPasswordSecurityEvaluator.SecurityLevel {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsPasswordSecurityEvaluator.SecurityLevel valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsPasswordSecurityEvaluator.SecurityLevel[] values();\n}", "des": "Password security levels."}
{"index": 8077, "code": "Interface I_CmsPermissionHandler {\n\t// Performs a non-blocking permission check on a resource.\n\tI_CmsPermissionHandler.CmsPermissionCheckResult hasPermissions​(CmsDbContext dbc, CmsResource resource, CmsPermissionSet requiredPermissions, I_CmsPermissionHandler.LockCheck checkLock, CmsResourceFilter filter);\n\t// Initializes internal variables needed to work.\n\tvoid init​(CmsDriverManager driverManager, CmsSystemConfiguration systemConfiguration);\n}", "des": "Permission handler interface."}
{"index": 8078, "code": "Enum I_CmsPermissionHandler.LockCheck {\n\t// Gets the code for the enum value.\n\tjava.lang.String getCode();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsPermissionHandler.LockCheck valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsPermissionHandler.LockCheck[] values();\n}", "des": "Enum for the lock check mode."}
{"index": 8079, "code": "Interface I_CmsPostUploadDialogService {\n\t// Loads the dialog bean info for the given resource.\n\tCmsPostUploadDialogPanelBean load​(CmsUUID uuid, boolean useConfiguration, boolean addBasicProperties);\n\t// Generates dialog data for prefetching in the host page.\n\tCmsPostUploadDialogBean prefetch();\n}", "des": "Synchronous service interface for the upload property dialog."}
{"index": 8080, "code": "Interface I_CmsPostUploadDialogServiceAsync {\n\t// Loads the dialog bean info for the given resource.\n\tvoid load​(CmsUUID uuid, boolean useConfiguration, boolean addBasicProperties, com.google.gwt.user.client.rpc.AsyncCallback<CmsPostUploadDialogPanelBean> asyncCallback);\n\t// Generates dialog data for prefetching in the host page.\n\tvoid prefetch​(com.google.gwt.user.client.rpc.AsyncCallback<CmsPostUploadDialogBean> asyncCallback);\n}", "des": "Asynchronous service interface for the upload property dialog."}
{"index": 8081, "code": "Interface I_CmsPropertyProvider {\n\t// Returns the name of the dynamic property.\n\tjava.lang.String getName();\n\t// Reads the property value.\n\tjava.lang.String getPropertyValue​(CmsObject cms, CmsResource resource);\n\t// Returns true if this dynamic property is writable.\n\tboolean isWritable();\n\t// Writes the property value.\n\tvoid setPropertyValue​(CmsObject cms, CmsResource resource, java.lang.String valueToSet);\n}", "des": "Interface for dynamic CMIS properties."}
{"index": 8082, "code": "Interface I_CmsPropertyServerRpc {\n\t// Disposes of the extension, and tells the server which resources have changed.\n\tvoid onClose​(long delayMillis);\n\t// Removes the extension on the server side.\n\tvoid removeExtension();\n\t// Requests the id of the next file.\n\tvoid requestNextFile​(int offset);\n\t// Saves the properties for a new resource.\n\tvoid savePropertiesForNewResource​(java.lang.String data);\n}", "des": "Client-to-server rpc interface for the GWT dialog extension."}
{"index": 8083, "code": "Interface I_CmsPublishResourceFormatter {\n\t// Gets the publish resource beans created by this formatter.\n\tjava.util.List<CmsPublishResource> getPublishResources();\n\t// Initializes the formatter.\n\tvoid initialize​(CmsPublishOptions options, CmsPublishRelationFinder.ResourceMap resources);\n}", "des": "'Formats' a ResourceMap containing resources for publishing by creating a list of CmsPublishResource beans with the appropriate status informations to display."}
{"index": 8084, "code": "Interface I_CmsRemoteShell {\n\t// Signals to the remote object that the client is done with it (i.e.\n\tvoid end();\n\t// Executes a shell command .\n\tCmsShellCommandResult executeCommand​(java.lang.String cmd, java.util.List<java.lang.String> params);\n\t// Returns the initial prompt to use.\n\tjava.lang.String getPrompt();\n}", "des": "Remote interface for executing shell commands."}
{"index": 8085, "code": "Interface I_CmsReportApp {\n\t// Method to open main view.\n\tvoid goToMainView();\n\t// Method to open the report view for the import thread.\n\tvoid openReport​(java.lang.String path, A_CmsReportThread thread, java.lang.String title);\n}", "des": "Interface for Apps, which run an import thread for files."}
{"index": 8086, "code": "Interface I_CmsReportThread {\n\t// Returns the OpenCms UUID of this report thread.\n\tCmsUUID getUUID();\n\t// Starts the report thread.\n\tvoid start();\n}", "des": "Identifies a class that can be used as a report thread ."}
{"index": 8087, "code": "Interface I_CmsRequestHandler {\n\t// Gets the configuration.\n\tdefault CmsParameterConfiguration getConfiguration();\n\t// Returns the handler name.\n\tjava.lang.String[] getHandlerNames();\n\t// Handles an OpenCms request.\n\tvoid handle​(javax.servlet.http.HttpServletRequest req, javax.servlet.http.HttpServletResponse res, java.lang.String name);\n\t// Initializes parameters.\n\tdefault void initParameters​(CmsParameterConfiguration params);\n}", "des": "Describes an OpenCms request handler."}
{"index": 8088, "code": "Enum I_CmsResource.CmsResourceAttribute {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsResource.CmsResourceAttribute valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsResource.CmsResourceAttribute[] values();\n}", "des": "Enumeration for all attributes of a resource."}
{"index": 8089, "code": "Interface I_CmsResourceBundle {\n\t// Creates a clone of the resource bundle.\n\tI_CmsResourceBundle getClone();\n\t// Sets the locale used for this resource bundle.\n\tvoid setLocale​(java.util.Locale l);\n\t// Sets the parent bundle.\n\tvoid setParent​(java.util.ResourceBundle parent);\n}", "des": "Increases the visibility of some key methods of a ResourceBundle."}
{"index": 8090, "code": "Interface I_CmsResourceInit {\n\t// Gets the configuration data.\n\tdefault CmsParameterConfiguration getConfiguration();\n\t// Initializes parameters.\n\tdefault void initParameters​(CmsParameterConfiguration params);\n\t// Possibility to modify or change the CmsFile with the CmsObject.\n\tCmsResource initResource​(CmsResource resource, CmsObject cms, javax.servlet.http.HttpServletRequest req, javax.servlet.http.HttpServletResponse res);\n}", "des": "This interface checks the requested resource from the OpenCms request context and returns it to the calling method, which will usually be OpenCms.initResource(CmsObject, String, HttpServletRequest, HttpServletResponse)."}
{"index": 8091, "code": "Enum I_CmsResourceType.Formatter {\n\t// Get the default path.\n\tjava.lang.String getDefaultPath();\n\t// Get the name.\n\tjava.lang.String getName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsResourceType.Formatter valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsResourceType.Formatter[] values();\n}", "des": "Resource formatter."}
{"index": 8092, "code": "Interface I_CmsSearchConfigurationDidYouMean {\n\t// Returns a flag, indicating if collation is turned on or off.\n\tboolean getCollate();\n\t// Returns the maximal number of suggestions.\n\tint getCount();\n\t// Returns the parameter name of the request parameter used to send the current query string for spellchecking.\n\tjava.lang.String getQueryParam();\n}", "des": "Interface of the \"Did you mean ...?\" configuration for the JSP search form."}
{"index": 8093, "code": "Enum I_CmsSearchConfigurationFacet.SortOrder {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsSearchConfigurationFacet.SortOrder valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsSearchConfigurationFacet.SortOrder[] values();\n}", "des": "Sort orders available for Solr facet entries."}
{"index": 8094, "code": "Interface I_CmsSearchConfigurationFacetQuery.I_CmsFacetQueryItem {\n\t// Returns the label of the item, useful to show it.\n\tjava.lang.String getLabel();\n\t// Returns the query of the item.\n\tjava.lang.String getQuery();\n}", "des": "The interface of a single query facet item."}
{"index": 8095, "code": "Interface I_CmsSearchConfigurationSorting {\n\t// Returns the sort configuration that is used as default.\n\tI_CmsSearchConfigurationSortOption getDefaultSortOption();\n\t// Returns the configurations of all available sort options.\n\tjava.util.List<I_CmsSearchConfigurationSortOption> getSortOptions();\n\t// Returns the request parameter that should be used to send the currently chosen sort option.\n\tjava.lang.String getSortParam();\n}", "des": "The interface a sort configuration must implement."}
{"index": 8096, "code": "Interface I_CmsSearchConfigurationSortOption {\n\t// Returns the label that can be used to display the sort option in the form.\n\tjava.lang.String getLabel();\n\t// Returns the request parameter's value that has to be send to choose that sort option.\n\tjava.lang.String getParamValue();\n\t// Returns the sort value as send to Solr.\n\tjava.lang.String getSolrValue();\n}", "des": "The interface a sort option configuration must implement."}
{"index": 8097, "code": "Interface I_CmsSearchControllerCommon {\n\t// Returns the configuration.\n\tI_CmsSearchConfigurationCommon getConfig();\n\t// Returns the state.\n\tI_CmsSearchStateCommon getState();\n}", "des": "Interface to get controllers state and configuration - version for common search configurations."}
{"index": 8098, "code": "Interface I_CmsSearchControllerDidYouMean {\n\t// Returns the configuration.\n\tI_CmsSearchConfigurationDidYouMean getConfig();\n\t// Returns the configuration.\n\tI_CmsSearchStateDidYouMean getState();\n}", "des": "Interface the \"Did you mean ...?\" controller must implement."}
{"index": 8099, "code": "Interface I_CmsSearchControllerFacetField {\n\t// Returns the configuration.\n\tI_CmsSearchConfigurationFacetField getConfig();\n\t// Returns the state.\n\tI_CmsSearchStateFacet getState();\n}", "des": "Interface to get controllers state and configuration - version for field facets."}
{"index": 8100, "code": "Interface I_CmsSearchControllerFacetQuery {\n\t// Returns the configuration.\n\tI_CmsSearchConfigurationFacetQuery getConfig();\n\t// Returns the state.\n\tI_CmsSearchStateFacet getState();\n}", "des": "Interface to get controllers state and configuration - version for the query facet."}
{"index": 8101, "code": "Interface I_CmsSearchControllerFacetRange {\n\t// Returns the configuration.\n\tI_CmsSearchConfigurationFacetRange getConfig();\n\t// Returns the state.\n\tI_CmsSearchStateFacet getState();\n}", "des": "Interface to get controllers state and configuration - version for field facets."}
{"index": 8102, "code": "Interface I_CmsSearchControllerFacetsField {\n\t// Get access to the controllers by the field facet's names.\n\tjava.util.Map<java.lang.String,​I_CmsSearchControllerFacetField> getFieldFacetController();\n\t// Get the collection of all field facet controllers.\n\tjava.util.Collection<I_CmsSearchControllerFacetField> getFieldFacetControllers();\n}", "des": "Interface the controller for all field facets must implement - just allow access to the single controllers."}
{"index": 8103, "code": "Interface I_CmsSearchControllerFacetsRange {\n\t// Get access to the controllers by the range facet's names.\n\tjava.util.Map<java.lang.String,​I_CmsSearchControllerFacetRange> getRangeFacetController();\n\t// Get the collection of all range facet controllers.\n\tjava.util.Collection<I_CmsSearchControllerFacetRange> getRangeFacetControllers();\n}", "des": "Interface the controller for all range facets must implement - just allow access to the single controllers."}
{"index": 8104, "code": "Interface I_CmsSearchControllerGeoFilter {\n\t// Returns the configuration.\n\tI_CmsSearchConfigurationGeoFilter getConfig();\n\t// Returns the state.\n\tI_CmsSearchStateGeoFilter getState();\n}", "des": "Interface to get controllers state and configuration - version for the Geo filter."}
{"index": 8105, "code": "Interface I_CmsSearchControllerPagination {\n\t// Returns the configuration.\n\tI_CmsSearchConfigurationPagination getConfig();\n\t// Returns the size of the current page.\n\tint getCurrentPageSize();\n\t// Returns the first item to show on the current page.\n\tint getCurrentPageStart();\n\t// Returns the state.\n\tI_CmsSearchStatePagination getState();\n}", "des": "Interface to get controllers state and configuration - version for pagination."}
{"index": 8106, "code": "Interface I_CmsSearchControllerSorting {\n\t// Returns the configuration.\n\tI_CmsSearchConfigurationSorting getConfig();\n\t// Returns the state.\n\tI_CmsSearchStateSorting getState();\n}", "des": "Interface to get controllers state and configuration - version for common search configurations."}
{"index": 8107, "code": "Interface I_CmsSearchStateDidYouMean {\n\t// Returns the spellcheck query string (as entered by the user).\n\tjava.lang.String getQuery();\n\t// Setter for the spellcheck query string (as entered by the user).\n\tvoid setQuery​(java.lang.String query);\n}", "des": "Class for keeping the state of the spellcheck search options."}
{"index": 8108, "code": "Interface I_CmsSearchStateGeoFilter {\n\t// Returns the coordinates.\n\tjava.lang.String getCoordinates();\n\t// Returns the radius.\n\tjava.lang.String getRadius();\n\t// Returns the units.\n\tjava.lang.String getUnits();\n\t// Returns whether we are in a Geo filter state or not.\n\tdefault boolean hasGeoFilter();\n\t// Sets the coordinates.\n\tvoid setCoordinates​(java.lang.String coordinates);\n\t// Sets the radius.\n\tvoid setRadius​(java.lang.String radius);\n\t// Sets the units.\n\tvoid setUnits​(java.lang.String units);\n}", "des": "Interface for the Geo filter state."}
{"index": 8109, "code": "Interface I_CmsSearchStatePagination {\n\t// Returns the current page.\n\tint getCurrentPage();\n\t// Returns a flag, indicating if the state of the current page should be ignored.\n\tboolean getIgnorePage();\n\t// Setter for the current page.\n\tvoid setCurrentPage​(int page);\n\t// Setter for a flag, indicating if the state of the current page should be ignored.\n\tvoid setIgnorePage​(boolean ignore);\n}", "des": "Interface for pagination states."}
{"index": 8110, "code": "Interface I_CmsSearchStateSorting {\n\t// Returns a map from search options to their check state.\n\tjava.util.Map<I_CmsSearchConfigurationSortOption,​java.lang.Boolean> getCheckSelected();\n\t// Returns the selected search option.\n\tI_CmsSearchConfigurationSortOption getSelected();\n\t// Setter for the selected search option.\n\tvoid setSelectedOption​(I_CmsSearchConfigurationSortOption option);\n}", "des": "Interface for sorting states."}
{"index": 8111, "code": "Interface I_CmsSerialDateService {\n\t// Get the dates of the specified series\n\tjava.util.Collection<CmsPair<java.util.Date,​java.lang.Boolean>> getDates​(java.lang.String config);\n\t// Get information on the series specified by the current value.\n\tCmsPair<java.lang.Boolean,​java.lang.String> getStatus​(java.lang.String config);\n}", "des": "Synchronous interface for the serial date service."}
{"index": 8112, "code": "Interface I_CmsSerialDateServiceAsync {\n\t// Get the dates of the specified series.\n\tvoid getDates​(java.lang.String config, com.google.gwt.user.client.rpc.AsyncCallback<java.util.Collection<CmsPair<java.util.Date,​java.lang.Boolean>>> callback);\n\t// Get information on the series specified by the current value.\n\tvoid getStatus​(java.lang.String config, com.google.gwt.user.client.rpc.AsyncCallback<CmsPair<java.lang.Boolean,​java.lang.String>> callback);\n}", "des": "Asynchronous interface for the serial date service."}
{"index": 8113, "code": "Enum I_CmsSerialDateValue.DateType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsSerialDateValue.DateType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsSerialDateValue.DateType[] values();\n}", "des": "Different types of serial dates."}
{"index": 8114, "code": "Enum I_CmsSerialDateValue.EndType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsSerialDateValue.EndType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsSerialDateValue.EndType[] values();\n}", "des": "Different types of conditions how serial dates can end."}
{"index": 8115, "code": "Enum I_CmsSerialDateValue.Month {\n\t// Returns the (maximal) number of days the month can have.\n\tint getMaximalDay();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsSerialDateValue.Month valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsSerialDateValue.Month[] values();\n}", "des": "Months as enumeration."}
{"index": 8116, "code": "Enum I_CmsSerialDateValue.PatternType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsSerialDateValue.PatternType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsSerialDateValue.PatternType[] values();\n}", "des": "Type of the series."}
{"index": 8117, "code": "Enum I_CmsSerialDateValue.WeekOfMonth {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsSerialDateValue.WeekOfMonth valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsSerialDateValue.WeekOfMonth[] values();\n}", "des": "Possible weeks of a month."}
{"index": 8118, "code": "Interface I_CmsShellCommands {\n\t// Provides access to the shell CmsObject and the shell itself.\n\tvoid initShellCmsObject​(CmsObject cms, CmsShell shell);\n\t// May be called after shell exit, can e.g.\n\tvoid shellExit();\n\t// May be called before shell startup, can e.g.\n\tvoid shellStart();\n}", "des": "Provides scriptable access to a class from the CmsShell."}
{"index": 8119, "code": "Interface I_CmsSimpleContextMenuEntry<T> {\n\t// Executes the entry action.\n\tvoid executeAction​(T context);\n\t// Returns the entry title for the given locale.\n\tjava.lang.String getTitle​(java.util.Locale locale);\n\t// Returns the entry visibility matching the given item data.\n\tCmsMenuItemVisibilityMode getVisibility​(T context);\n}", "des": "Interface for generic context menu entris."}
{"index": 8120, "code": "Interface I_CmsSitemapServerRpc {\n\t// Handles changes made via the property dialog.\n\tvoid handleChangedProperties​(java.lang.String id);\n\t// Opens the page copy dialog for a resource.\n\tvoid openPageCopyDialog​(java.lang.String callId, java.lang.String structureId);\n\t// Displays the locale comparison view.\n\tvoid showLocaleComparison​(java.lang.String id);\n}", "des": "Interface for the client-to-server rpc calls used by the sitemap extension."}
{"index": 8121, "code": "Interface I_CmsSolrPostSearchProcessor {\n\t// (Re-)Initializes the post processor.\n\tvoid init();\n\t// Performs the post processing.\n\torg.apache.solr.common.SolrDocument process​(CmsObject searchCms, CmsResource resource, org.apache.solr.common.SolrInputDocument document);\n}", "des": "The post document processor can be used in order to manipulate search results after the OpenCms permission check has been done."}
{"index": 8122, "code": "Interface I_CmsStartStopHandler {\n\t// Called before everything else in the system is being shut down.\n\tvoid shutdown();\n\t// Called after everything else in the system has been initialized.\n\tvoid startup​(CmsObject cms);\n}", "des": "Interface for plugins that need to be called during startup and shutdown."}
{"index": 8123, "code": "Interface I_CmsStaticExportHandler {\n\t// Returns true if this static export handler is currently performing a static export operation.\n\tboolean isBusy();\n\t// Scrubs files from the export folder that might have been changed.\n\tvoid performEventPublishProject​(CmsUUID publishHistoryId, I_CmsReport report);\n}", "des": "Provides a method for scrubbing files from the export folder that might have been changed, so that the export is newly created after the next request to the resource."}
{"index": 8124, "code": "Interface I_CmsSynchronizeModification {\n\t// Possibility to modify a resource after it has benn exported or updated to the FS.\n\tvoid modifyFs​(CmsObject cms, CmsResource vfsRes, java.io.File fsFile);\n\t// Possibility to modify a resource after it has been imported or updated into the VFS.\n\tvoid modifyVfs​(CmsObject cms, CmsResource vfsRes, java.io.File fsFile);\n\t// Translates the resource name.\n\tjava.lang.String translate​(CmsObject cms, java.lang.String resName);\n}", "des": "Defines methods which can be pluged into the syncronisation process between VFS and \"real\" FS."}
{"index": 8125, "code": "Interface I_CmsTextEncryption {\n\t// Decrypts encrypted data.\n\tjava.lang.String decrypt​(java.lang.String input);\n\t// Encrypts data.\n\tjava.lang.String encrypt​(java.lang.String input);\n\t// Gets the name of the encryption handler.\n\tjava.lang.String getName();\n\t// Initializes the encryption handler.\n\tvoid initialize​(CmsObject cms);\n\t// Sets the name of the encryption handler.\n\tvoid setName​(java.lang.String name);\n}", "des": "Interfaces for classes that encrypt text as text."}
{"index": 8126, "code": "Interface I_CmsToggleTable {\n\t// Gets the current size of data in table.\n\tint getCurrentSize();\n\t// Toggles the table.\n\tvoid toggle​(boolean active);\n}", "des": "Interface for toggable tables."}
{"index": 8127, "code": "Interface I_CmsUnlockData {\n\t// Gets the detail content id.\n\tjava.lang.String getDetailId();\n\t// Gets the locale\n\tjava.lang.String getLocale();\n\t// Gets the page id.\n\tjava.lang.String getPageId();\n\t// Sets the detail content id.\n\tvoid setDetailId​(java.lang.String detailId);\n\t// Sets the page locale.\n\tvoid setLocale​(java.lang.String locale);\n\t// Sets the page structure id.\n\tvoid setPageId​(java.lang.String pageId);\n}", "des": "Parameters for the unlock service."}
{"index": 8128, "code": "Interface I_CmsUploadService {\n\t// Cancels the upload.\n\tjava.lang.Boolean cancelUpload();\n\t// Checks the availability of a resource in the VFS, using the CmsResourceFilter.IGNORE_EXPIRATION filter.\n\tCmsUploadFileBean checkUploadFiles​(java.util.List<java.lang.String> fileNames, java.lang.String targetFolder, boolean isRootPath);\n\t// Returns the upload progress information.\n\tCmsUploadProgessInfo getUploadProgressInfo();\n}", "des": "Handles all RPC services related to the upload dialog."}
{"index": 8129, "code": "Enum I_CmsUserDataDomain.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsUserDataDomain.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsUserDataDomain.Mode[] values();\n}", "des": "Describes the different places from which the user data domain plugins can be used."}
{"index": 8130, "code": "Interface I_CmsWorkplaceAction {\n\t// Executes the action.\n\tvoid executeAction​(I_CmsDialogContext context);\n\t// The action id.\n\tjava.lang.String getId();\n\t// Returns the localized action title.\n\tjava.lang.String getTitle​(java.util.Locale locale);\n\t// Checks whether this action should be active in the given dialog context.\n\tboolean isActive​(I_CmsDialogContext context);\n}", "des": "Workplace action interface."}
{"index": 8131, "code": "Interface I_CmsWorkplaceApp {\n\t// Within this method the app UI should be initialized.\n\tvoid initUI​(I_CmsAppUIContext context);\n\t// Called on navigation events.\n\tvoid onStateChange​(java.lang.String state);\n}", "des": "Common interface for all workplace apps."}
{"index": 8132, "code": "Interface I_CmsXmlConfigurationWithUpdateHandler {\n\t// Called when OpenCms has written the configuration to the file system.\n\tvoid handleUpdate();\n\t// Called during startup with a CmsObject with admin privileges.\n\tvoid setCmsObject​(CmsObject cms);\n}", "des": "Interface for configurations which should run custom logic when the configuration is written back by OpenCms."}
{"index": 8133, "code": "Interface I_CmsXmlContentContainer {\n\t// Returns the currently loaded OpenCms XML content document.\n\tI_CmsXmlDocument getXmlDocument();\n\t// Returns the currently selected element name in the loaded XML content document.\n\tjava.lang.String getXmlDocumentElement();\n\t// Returns the currently selected locale used for acessing the content in the loaded XML content document.\n\tjava.util.Locale getXmlDocumentLocale();\n}", "des": "Provides access to a I_CmsXmlDocument document that was previously loaded by a parent tag."}
{"index": 8134, "code": "Enum I_CmsXmlContentHandler.DisplayType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsXmlContentHandler.DisplayType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsXmlContentHandler.DisplayType[] values();\n}", "des": "The available display types for element widgets."}
{"index": 8135, "code": "Class I_CmsXmlContentHandler.JsonRendererSettings {\n\t// Gets the class name.\n\tjava.lang.String getClassName();\n\t// Gets the parameters.\n\tjava.util.Map<java.lang.String,​java.lang.String> getParameters();\n}", "des": "Settings for a JSON renderer."}
{"index": 8136, "code": "Enum I_CmsXmlContentHandler.MappingType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsXmlContentHandler.MappingType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsXmlContentHandler.MappingType[] values();\n}", "des": "The available mapping types."}
{"index": 8137, "code": "Interface I_CmsXmlContentLocation {\n\t// Returns the XML document.\n\tI_CmsXmlDocument getDocument();\n\t// Returns the locale.\n\tjava.util.Locale getLocale();\n\t// Returns the location for an xpath relative to the current location.\n\tI_CmsXmlContentValueLocation getSubValue​(java.lang.String subPath);\n\t// Returns the locations for an xpath relative to the current location.\n\tjava.util.List<I_CmsXmlContentValueLocation> getSubValues​(java.lang.String subPath);\n}", "des": "This class represents a location in an XML content for a specific locale."}
{"index": 8138, "code": "Enum I_CmsXmlContentValue.SearchContentType {\n\t// Converts the String into a SearchContentType.\n\tstatic I_CmsXmlContentValue.SearchContentType fromString​(java.lang.String type);\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsXmlContentValue.SearchContentType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsXmlContentValue.SearchContentType[] values();\n}", "des": "The available search types for element searchsetting."}
{"index": 8139, "code": "Interface I_CmsXmlContentValueLocation {\n\t// Returns the structure id of the content value (only valid for VfsFile values!).\n\tCmsUUID asId​(CmsObject cms);\n\t// Returns the string value of the content value.\n\tjava.lang.String asString​(CmsObject cms);\n\t// Returns the content value at the given location.\n\tI_CmsXmlContentValue getValue();\n}", "des": "Interface representing an XML content location which corresponds to an actual content value."}
{"index": 8140, "code": "Class JSONML {\n\t// Convert a well-formed (but not necessarily valid) XML string into a JSONArray using the JsonML transform.\n\tstatic JSONArray toJSONArray​(java.lang.String string);\n\t// Convert a well-formed (but not necessarily valid) XML string into a JSONArray using the JsonML transform.\n\tstatic JSONArray toJSONArray​(XMLTokener x);\n\t// Reverse the JSONML transformation, making an XML text from a JSONArray.\n\tstatic java.lang.String toString​(JSONArray ja);\n}", "des": "This provides static methods to convert an XML text into a JSONObject, and to convert a JSONObject into an XML text using the JsonML transform."}
{"index": 8141, "code": "Class JSONObject.Null {\n\t// There is only intended to be a single instance of the NULL object, so the clone method returns itself.\n\tprotected java.lang.Object clone();\n\t// A Null object is equal to the null value and to itself.\n\tboolean equals​(java.lang.Object object);\n}", "des": "JSONObject.NULL is equivalent to the value that JavaScript calls null, whilst Java's null is equivalent to the value that JavaScript calls undefined."}
{"index": 8142, "code": "Class OpenCmsServlet.RequestInfo {\n\t// Gets the request start time.\n\tlong getStartTime();\n\t// Gets the thread id\n\tlong getThreadId();\n\t// Gets the URI of the request.\n\tjava.lang.String getUri();\n}", "des": "Debugging information about currently running requests."}
{"index": 8143, "code": "Class PrintfFormat {\n\t// Format nothing.\n\tjava.lang.String sprintf();\n\t// Format a double.\n\tjava.lang.String sprintf​(double x);\n\t// Format an int.\n\tjava.lang.String sprintf​(int x);\n\t// Format an long.\n\tjava.lang.String sprintf​(long x);\n\t// Format an Object.\n\tjava.lang.String sprintf​(java.lang.Object x);\n\t// Format an array of objects.\n\tjava.lang.String sprintf​(java.lang.Object[] o);\n\t// Format a String.\n\tjava.lang.String sprintf​(java.lang.String x);\n}", "des": "PrintfFormat allows the formatting of an array of objects embedded within a string."}
{"index": 8144, "code": "Class XMLTokener {\n\t// Get the text in the CDATA block.\n\tjava.lang.String nextCDATA();\n\t// Get the next XML outer token, trimming whitespace.\n\tjava.lang.Object nextContent();\n\t// Return the next ENTITY.\n\tjava.lang.Object nextEntity​(char a);\n\t// Returns the next XML meta token.\n\tjava.lang.Object nextMeta();\n\t// Get the next XML Token.\n\tjava.lang.Object nextToken();\n\t// Skip characters until past the requested string.\n\tboolean skipPast​(java.lang.String to);\n}", "des": "The XMLTokener extends the JSONTokener to provide additional methods for the parsing of XML texts."}
{"index": 8145, "code": "Enum Resource.AuthenticationType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic Resource.AuthenticationType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic Resource.AuthenticationType[] values();\n}", "des": "The AuthenticationType, either CONTAINER or APPLICATION"}
{"index": 8146, "code": "Class BodyContent {\n\t// Clear the body without throwing any exceptions.\n\tvoid clearBody();\n\t// Redefined flush() so it is not legal.\n\tvoid flush();\n\t// Get the enclosing JspWriter.\n\tJspWriter getEnclosingWriter();\n\t// Return the value of this BodyContent as a Reader.\n\tabstract java.io.Reader getReader();\n\t// Return the value of the BodyContent as a String.\n\tabstract java.lang.String getString();\n\t// Write the contents of this BodyContent into a Writer.\n\tabstract void writeOut​(java.io.Writer out);\n}", "des": "An encapsulation of the evaluation of the body of an action so it is available to a tag handler."}
{"index": 8147, "code": "Interface BodyTag {\n\t// Prepare for evaluation of the body.\n\tvoid doInitBody();\n\t// Set the bodyContent property.\n\tvoid setBodyContent​(BodyContent b);\n}", "des": "The BodyTag interface extends IterationTag by defining additional methods that let a tag handler manipulate the content of evaluating its body."}
{"index": 8148, "code": "Class ErrorData {\n\t// Returns the request URI.\n\tjava.lang.String getRequestURI();\n\t// Returns the name of the servlet invoked.\n\tjava.lang.String getServletName();\n\t// Returns the status code of the error.\n\tint getStatusCode();\n\t// Returns the Throwable that caused the error.\n\tjava.lang.Throwable getThrowable();\n}", "des": "Contains information about an error, for error pages."}
{"index": 8149, "code": "Class FunctionInfo {\n\t// The class of the function.\n\tjava.lang.String getFunctionClass();\n\t// The signature of the function.\n\tjava.lang.String getFunctionSignature();\n\t// The name of the function.\n\tjava.lang.String getName();\n}", "des": "Information for a function in a Tag Library."}
{"index": 8150, "code": "Interface JspApplicationContext {\n\t// Registers an ELContextListener that will be notified whenever a new ELContext is created.\n\tvoid addELContextListener​(jakarta.el.ELContextListener listener);\n\t// Adds an ELResolver to the chain of EL variable and property management within JSP pages and Tag files.\n\tvoid addELResolver​(jakarta.el.ELResolver resolver);\n\t// Returns the JSP container's ExpressionFactory implementation for EL use.\n\tjakarta.el.ExpressionFactory getExpressionFactory();\n}", "des": "Stores application-scoped information for the JSP container."}
{"index": 8151, "code": "Class JspFragment {\n\t// Returns the JspContext that is bound to this JspFragment.\n\tabstract JspContext getJspContext();\n\t// Executes the fragment and directs all output to the given Writer, or the JspWriter returned by the getOut() method of the JspContext associated with the fragment if out is null.\n\tabstract void invoke​(java.io.Writer out);\n}", "des": "Encapsulates a portion of JSP code in an object that can be invoked as many times as needed."}
{"index": 8152, "code": "Interface JspPage {\n\t// The jspDestroy() method is invoked when the JSP page is about to be destroyed.\n\tvoid jspDestroy();\n\t// The jspInit() method is invoked when the JSP page is initialized.\n\tvoid jspInit();\n}", "des": "The JspPage interface describes the generic interaction that a JSP Page Implementation class must satisfy; pages that use the HTTP protocol are described by the HttpJspPage interface."}
{"index": 8153, "code": "Interface Tag {\n\t// Process the end tag for this instance.\n\tint doEndTag();\n\t// Process the start tag for this instance.\n\tint doStartTag();\n\t// Get the parent (closest enclosing tag handler) for this tag handler.\n\tTag getParent();\n\t// Called on a Tag handler to release state.\n\tvoid release();\n\t// Set the current page context.\n\tvoid setPageContext​(PageContext pc);\n\t// Set the parent (closest enclosing tag handler) of this tag handler.\n\tvoid setParent​(Tag t);\n}", "des": "The interface of a classic tag handler that does not want to manipulate its body."}
{"index": 8154, "code": "Class TagAdapter {\n\t// Must not be called.\n\tint doEndTag();\n\t// Must not be called.\n\tint doStartTag();\n\t// Gets the tag that is being adapted to the Tag interface.\n\tJspTag getAdaptee();\n\t// Returns the parent of this tag, which is always getAdaptee().getParent().\n\tTag getParent();\n\t// Must not be called.\n\tvoid release();\n\t// Must not be called.\n\tvoid setPageContext​(PageContext pc);\n\t// Must not be called.\n\tvoid setParent​(Tag parentTag);\n}", "des": "Wraps any SimpleTag and exposes it using a Tag interface."}
{"index": 8155, "code": "Class TagData {\n\t// The value of the attribute.\n\tjava.lang.Object getAttribute​(java.lang.String attName);\n\t// Enumerates the attributes.\n\tjava.util.Enumeration<java.lang.String> getAttributes();\n\t// Get the value for a given attribute.\n\tjava.lang.String getAttributeString​(java.lang.String attName);\n\t// The value of the tag's id attribute.\n\tjava.lang.String getId();\n\t// Set the value of an attribute.\n\tvoid setAttribute​(java.lang.String attName, java.lang.Object value);\n}", "des": "The (translation-time only) attribute/value information for a tag instance."}
{"index": 8156, "code": "Class TagExtraInfo {\n\t// Get the TagInfo for this class.\n\tTagInfo getTagInfo();\n\t// information on scripting variables defined by the tag associated with this TagExtraInfo instance.\n\tVariableInfo[] getVariableInfo​(TagData data);\n\t// Translation-time validation of the attributes.\n\tboolean isValid​(TagData data);\n\t// Set the TagInfo for this class.\n\tvoid setTagInfo​(TagInfo tagInfo);\n\t// Translation-time validation of the attributes.\n\tValidationMessage[] validate​(TagData data);\n}", "des": "Optional class provided by the tag library author to describe additional translation-time information not described in the TLD."}
{"index": 8157, "code": "Class TagFileInfo {\n\t// The unique action name of this tag.\n\tjava.lang.String getName();\n\t// Where to find the .tag file implementing this action.\n\tjava.lang.String getPath();\n\t// Returns information about this tag, parsed from the directives in the tag file.\n\tTagInfo getTagInfo();\n}", "des": "Tag information for a tag file in a Tag Library; This class is instantiated from the Tag Library Descriptor file (TLD) and is available only at translation time."}
{"index": 8158, "code": "Class TagLibraryValidator {\n\t// Get the init parameters data as an immutable Map.\n\tjava.util.Map<java.lang.String,​java.lang.Object> getInitParameters();\n\t// Release any data kept by this instance for validation purposes.\n\tvoid release();\n\t// Set the init data in the TLD for this validator.\n\tvoid setInitParameters​(java.util.Map<java.lang.String,​java.lang.Object> map);\n\t// Validate a JSP page.\n\tValidationMessage[] validate​(java.lang.String prefix, java.lang.String uri, PageData page);\n}", "des": "Translation-time validator class for a JSP page."}
{"index": 8159, "code": "Class TagVariableInfo {\n\t// The body of the <variable-class> element.\n\tjava.lang.String getClassName();\n\t// The body of the <declare> element.\n\tboolean getDeclare();\n\t// The body of the <name-from-attribute> element.\n\tjava.lang.String getNameFromAttribute();\n\t// The body of the <name-given> element.\n\tjava.lang.String getNameGiven();\n\t// The body of the <scope> element.\n\tint getScope();\n}", "des": "Variable information for a tag in a Tag Library; This class is instantiated from the Tag Library Descriptor file (TLD) and is available only at translation time."}
{"index": 8160, "code": "Interface TryCatchFinally {\n\t// Invoked if a Throwable occurs while evaluating the BODY inside a tag or in any of the following methods: Tag.doStartTag(), Tag.doEndTag(), IterationTag.doAfterBody() and BodyTag.doInitBody().\n\tvoid doCatch​(java.lang.Throwable t);\n\t// Invoked in all cases after doEndTag() for any class implementing Tag, IterationTag or BodyTag.\n\tvoid doFinally();\n}", "des": "The auxiliary interface of a Tag, IterationTag or BodyTag tag handler that wants additional hooks for managing resources."}
{"index": 8161, "code": "Class ValidationMessage {\n\t// Get the jsp:id.\n\tjava.lang.String getId();\n\t// Get the localized validation message.\n\tjava.lang.String getMessage();\n}", "des": "A validation message from either TagLibraryValidator or TagExtraInfo."}
{"index": 8162, "code": "Class VariableInfo {\n\t// Returns the type of this variable.\n\tjava.lang.String getClassName();\n\t// Returns whether this is a new variable.\n\tboolean getDeclare();\n\t// Returns the lexical scope of the variable.\n\tint getScope();\n\t// Returns the name of the scripting variable.\n\tjava.lang.String getVarName();\n}", "des": "Information on the scripting variables that are created/modified by a tag (at run-time)."}
{"index": 8163, "code": "Class AbsolutePathDriverURLProvider {\n\t// Check if the url is suitable for this provider.\n\tboolean accept​(String url);\n\t// Get config content from url.\n\tbyte[] getContent​(String url);\n}", "des": "Absolute path driver URL provider."}
{"index": 8164, "code": "Class ApolloDriverURLProvider {\n\t// Check if the url is suitable for this provider.\n\tboolean accept​(String url);\n\t// Get config content from url.\n\tbyte[] getContent​(String url);\n}", "des": "Apollo driver URL provider."}
{"index": 8165, "code": "Class BatchExecutionUnit {\n\t// Get parameter sets.\n\tList<List<Object>> getParameterSets();\n\t// Map times of use JDBC API call addBatch and times of actual call addBatch after route.\n\tvoid mapAddBatchCount​(int jdbcAddBatchTimes);\n}", "des": "Batch execution unit."}
{"index": 8166, "code": "Class BatchStatementExecutor {\n\t// Add SQL for batched execution.\n\tvoid addBatch​(String sql);\n\t// Clear batched SQLs.\n\tvoid clear();\n\t// Execute batched SQLs.\n\tint[] executeBatch();\n}", "des": "Batch executor for Statement."}
{"index": 8167, "code": "Class ClasspathDriverURLProvider {\n\t// Check if the url is suitable for this provider.\n\tboolean accept​(String url);\n\t// Get config content from url.\n\tbyte[] getContent​(String url);\n}", "des": "Classpath driver URL provider."}
{"index": 8168, "code": "Class JDBCContext {\n\t// Get cached database meta data.\n\tCachedDatabaseMetaData getCachedDatabaseMetaData();\n\t// Refresh cached database meta data.\n\tvoid refreshCachedDatabaseMetaData​(DataSourceChangedEvent event);\n}", "des": "JDBC context."}
{"index": 8169, "code": "Class MethodInvocationRecorder<T> {\n\t// Record method invocation.\n\tvoid record​(String methodName, ForceExecuteCallback<T> callback);\n\t// Replay methods invocation.\n\tvoid replay​(T target);\n}", "des": "Method invocation recorder."}
{"index": 8170, "code": "Interface ShardingSphereDriverURLProvider {\n\t// Check if the url is suitable for this provider.\n\tboolean accept​(String url);\n\t// Get config content from url.\n\tbyte[] getContent​(String url);\n}", "des": "ShardingSphere driver URL provider."}
{"index": 8171, "code": "Class A_CmsAliasTableColumn<R,​V,​T extends com.google.gwt.user.cellview.client.CellTable<R>> {\n\t// Adds the column to the table.\n\tabstract void addToTable​(T table);\n\t// Initializes the sort handler to use this column.\n\tvoid initSortHandler​(com.google.gwt.user.cellview.client.ColumnSortEvent.ListHandler<R> sortHandler);\n}", "des": "Abstract column class for the alias cell table columns."}
{"index": 8172, "code": "Class A_CmsClipboardTab {\n\t// Adds an item to the list.\n\tvoid addListItem​(CmsListItem item);\n\t// Clears the list.\n\tvoid clearList();\n\t// Returns the item list.\n\tabstract CmsList<CmsListItem> getList();\n\t// Returns the height required by the tab content.\n\tint getRequiredHeight();\n\t// Returns the scroll panel.\n\tabstract CmsScrollPanel getScrollPanel();\n\t// Replaces the item with the same id if present.\n\tvoid replaceItem​(CmsListItem item);\n}", "des": "Base class for clipboard tabs."}
{"index": 8173, "code": "Class A_CmsHoverHandler {\n\t// Will be executed for starting the hover effect.\n\tprotected abstract void onHoverIn​(com.google.gwt.event.dom.client.MouseOverEvent event);\n\t// Will be executed for finishing the hover effect.\n\tprotected abstract void onHoverOut​(com.google.gwt.event.dom.client.MouseOutEvent event);\n\tvoid onMouseOut​(com.google.gwt.event.dom.client.MouseOutEvent event);\n\tvoid onMouseOver​(com.google.gwt.event.dom.client.MouseOverEvent event);\n}", "des": "On hover intent handler."}
{"index": 8174, "code": "Class A_CmsListItemSelectDialog<INFO extends org.opencms.gwt.shared.CmsListInfoBean> {\n\tvoid center();\n\t// Makes sure the item with the given structure id is checked.\n\tprotected void ensureChecked​(org.opencms.util.CmsUUID structureId);\n\t// The method that will be called with the selected item when the user clicks on OK.\n\tprotected abstract void handleSelection​(INFO info);\n\t// Creates the new element with selected model resource.\n\tprotected void onClickOk();\n\tvoid show();\n}", "des": "Dialog to select a resource model for a new resource."}
{"index": 8175, "code": "Class A_CmsNewModelPageDialog {\n\t// Initializes the dialog.\n\tvoid initialize​(org.opencms.gwt.shared.CmsListInfoBean listInfo);\n\t// Creates the new gallery folder.\n\tprotected abstract void onOk();\n\t// Enables or disables the OK button.\n\tprotected void setOkEnabled​(boolean enabled);\n}", "des": "The create new gallery folder dialog."}
{"index": 8176, "code": "Class A_CmsPatternPanelController {\n\tprotected void conditionallyRemoveExceptionsOnChange​(com.google.gwt.user.client.Command cmd, boolean showDialog);\n\t// Returns the view that is controlled.\n\tabstract I_CmsSerialDatePatternView getView();\n\t// Call when the value has changed.\n\tprotected void onValueChange();\n\tprotected void removeExceptionsOnChange​(com.google.gwt.user.client.Command cmd);\n}", "des": "Abstract base class for pattern panel controllers."}
{"index": 8177, "code": "Class A_CmsPreviewDetailTab {\n\t// Returns the gallery mode.\n\tprotected org.opencms.ade.galleries.shared.I_CmsGalleryProviderConstants.GalleryMode getDialogMode();\n\t// Returns the preview handler.\n\tprotected abstract I_CmsPreviewHandler<?> getHandler();\n\t// Returns if the given tab has changes that need saving.\n\tboolean isChanged();\n\t// Sets the changed state of the tab.\n\tprotected void setChanged​(boolean changed);\n}", "des": "Basic preview detail tab layout."}
{"index": 8178, "code": "Class A_CmsSelectCell {\n\t// Measures the required width for this cell.\n\tint getRequiredWidth();\n\t// Returns the value of the select option as a string.\n\tabstract java.lang.String getValue();\n\t// Adds a new event handler to the widget.\n\t<H extends com.google.gwt.event.shared.EventHandler>com.google.gwt.event.shared.HandlerRegistration registerDomHandler​(H handler, com.google.gwt.event.dom.client.DomEvent.Type<H> type);\n}", "des": "An abstract class for widgets which represent options for select boxes."}
{"index": 8179, "code": "Class A_CmsToolbarButton<HANDLER extends I_CmsToolbarHandler> {\n\t// Returns the button data.\n\tI_CmsButton.ButtonData getButtonData();\n\t// Returns the container-page handler.\n\tprotected HANDLER getHandler();\n\t// Returns whether this button is active (pushed, not disabled).\n\tboolean isActive();\n\t// Executed when the tool-bar button is clicked.\n\tvoid onToolbarClick();\n\t// Sets the button to active (pushed, not disabled).\n\tvoid setActive​(boolean active);\n}", "des": "Abstract button class implementing common methods of I_CmsToolbarButton for container-page tool-bar buttons."}
{"index": 8180, "code": "Class A_CmsToolbarHandler {\n\t// Transforms a list of context menu entry beans to a list of context menu entries.\n\tjava.util.List<I_CmsContextMenuEntry> transformEntries​(java.util.List<org.opencms.gwt.shared.CmsContextMenuEntryBean> menuBeans, org.opencms.util.CmsUUID structureId);\n\t// Creates a single context menu entry from a context menu entry bean.\n\tprotected I_CmsContextMenuEntry transformSingleEntry​(org.opencms.util.CmsUUID structureId, org.opencms.gwt.shared.CmsContextMenuEntryBean bean);\n}", "des": "Abstract class which implements the common part of all toolbar handler functionality."}
{"index": 8181, "code": "Class A_NativeWidgetFactory {\n\t// Exports the widget factory.\n\tvoid exportFactory();\n\t// Returns the name of the initialization call.\n\tprotected abstract java.lang.String getInitCallName();\n\t// Returns the widget name.\n\tprotected abstract java.lang.String getWidgetName();\n}", "des": "Use this widget factory to use stand alone widgets."}
{"index": 8182, "code": "Class CmsActiveFieldData {\n\t// Gets the field.\n\tI_CmsFormField getField();\n\tjava.lang.String getFieldId();\n\t// Gets the property name.\n\tjava.lang.String getProperty();\n\t// Gets the tab name .\n\tjava.lang.String getTab();\n}", "des": "Represents information about which field in the property editor dialog is active."}
{"index": 8183, "code": "Class CmsAddOptionButton {\n\t// Checks if this button should be visible according to the elements state.\n\tboolean checkVisibility();\n\t// Executed on button click.\n\tvoid onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "The selection option."}
{"index": 8184, "code": "Class CmsAddToNavMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu add entry to navigation."}
{"index": 8185, "code": "Class CmsAdeDownloadGalleryWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8186, "code": "Class CmsAdeImageGalleryWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8187, "code": "Class CmsAdvancedSubmenu {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Returns a list of I_CmsContextMenuEntry objects.\n\tjava.util.List<I_CmsContextMenuEntry> getSubMenu();\n\t// Returns true if this menu entry has a sub menu false otherwise.\n\tboolean hasSubMenu();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Submenu for advanced options."}
{"index": 8188, "code": "Class CmsAliasEditor {\n\t// Checks whether the alias editor is finished.\n\tboolean isFinished();\n\t// Sets the 'finished' flag.\n\tprotected void setFinished​(boolean finished);\n\t// Opens the alias editor.\n\tvoid show();\n\t// Asynchronously updates the alias editor status.\n\tprotected void updateAliasEditorStatus​(boolean editing);\n}", "des": "The alias editor."}
{"index": 8189, "code": "Class CmsAsyncJoinHandler {\n\t// Adds tokens.\n\tvoid addTokens​(java.lang.Object... tokens);\n\t// Removes a token.\n\tvoid removeToken​(java.lang.Object token);\n}", "des": "Helper class used to perform an action when multiple asynchronous tasks have finished."}
{"index": 8190, "code": "Class CmsAttributeSelectWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Widget factory for creating attribute select widgets."}
{"index": 8191, "code": "Class CmsAvailabilityMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n\t// Updates the sitemap entry.\n\tprotected void updateEntry();\n}", "des": "Sitemap context menu availability entry."}
{"index": 8192, "code": "Class CmsBinaryPreviewFactory {\n\t// Returns the resource preview instance for the given gallery dialog.\n\tI_CmsResourcePreview<?> getPreview​(CmsGalleryDialog dialog);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "The binary resource preview factory."}
{"index": 8193, "code": "Class CmsBoxFit {\n\t// Applies the inverse of the transformation to a point.\n\torg.opencms.ade.galleries.shared.CmsPoint transformBack​(org.opencms.ade.galleries.shared.CmsPoint point);\n\t// Applies the transformation to a point.\n\torg.opencms.ade.galleries.shared.CmsPoint transformForward​(org.opencms.ade.galleries.shared.CmsPoint point);\n}", "des": "A coordinate system transform for translating between coordinates relative to a rectangle and the coordinates relative to a second rectangle with the first rectangle fit into the second one, either by just centering if possible or by centering and scaling it."}
{"index": 8194, "code": "Enum CmsBoxFit.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsBoxFit.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsBoxFit.Mode[] values();\n}", "des": "Scale mode."}
{"index": 8195, "code": "Class CmsBroadcastTimer {\n\t// Aborts the timer.\n\tstatic void abort();\n\t// Generates the HTML for a single broadcast message.\n\tprotected java.lang.String createMessageHtml​(org.opencms.gwt.shared.CmsBroadcastMessage message);\n\t// Installs the timer which fires the RPC calls.\n\tprotected void run();\n\t// Returns if the timer should keep running.\n\tprotected static boolean shouldKeepRunning();\n\t// Starts the timer.\n\tstatic void start();\n}", "des": "A timer which sends an RPC call regularly to keep the session alive and receive workplace broadcasts."}
{"index": 8196, "code": "Class CmsBumpDetailPageMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "The context menu entry for \"bumping\" a detail page, i.e."}
{"index": 8197, "code": "Class CmsBurstEventManager {\n\t// Removes the event from the manager.\n\tvoid cancel​(java.lang.String eventName);\n\t// Returns the singleton instance.\n\tprotected static CmsBurstEventManager get();\n\t// Adds an 'burst' event to the manager.\n\tvoid schedule​(java.lang.String name, com.google.gwt.user.client.Command command, int delayMsec);\n}", "des": "Takes care of the burst of the same event, by skipping the first ones and executing only the last one."}
{"index": 8198, "code": "Class CmsCalendarWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8199, "code": "Class CmsCategorizedSelectWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes widget factory on startup.\n\tstatic void initClass();\n}", "des": "A factory for creating CmsCategorizedSelectWidget objects."}
{"index": 8200, "code": "Class CmsCategoryDialog {\n\t// Initializes the dialog content.\n\tvoid initialize​(org.opencms.gwt.shared.CmsResourceCategoryInfo categoryInfo);\n\t// Saves the selected categories and hides the dialog.\n\tprotected void saveCategories();\n\tvoid show();\n}", "des": "Dialog to display and change resource categories."}
{"index": 8201, "code": "Enum CmsCategoryTree.SortParams {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCategoryTree.SortParams valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCategoryTree.SortParams[] values();\n}", "des": "Sorting parameters."}
{"index": 8202, "code": "Class CmsCategoryTreeItem {\n\t// Creates the list info bean for a tree item from a category bean.\n\tstatic org.opencms.gwt.shared.CmsListInfoBean createCategoryListInfo​(org.opencms.gwt.shared.CmsCategoryTreeEntry entry);\n\t// Gets the structure id.\n\torg.opencms.util.CmsUUID getStructureId();\n}", "des": "Widget representing a category in the category mode of the sitemap editor."}
{"index": 8203, "code": "Class CmsCategoryWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8204, "code": "Class CmsCellTableUtil {\n\t// Ensures that surrounding scroll panels are notified when a table changes size.\n\tstatic void ensureCellTableParentResize​(com.google.gwt.user.cellview.client.CellTable<?> table);\n\t// Formats the HTML for the error column of a cell table given an error message.\n\tstatic com.google.gwt.safehtml.shared.SafeHtml formatErrorHtml​(java.lang.String error);\n}", "des": "Various static utility methods for dealing with cell tables."}
{"index": 8205, "code": "Class CmsChangeCategoryMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Menu entry for changing categories."}
{"index": 8206, "code": "Class CmsChangePasswordWidget {\n\t// Tries to change the password using the data entered by the user.\n\tvoid changePassword();\n\t// Opens a popup dialog for changing the password.\n\tstatic void showDialog();\n\t// Displays an error message.\n\tprotected void showError​(java.lang.String error);\n}", "des": "Widget used to change the current user's password."}
{"index": 8207, "code": "Enum CmsCheckableDatePanel.Style {\n\t// Get the width of elements dependent on the style.\n\tjava.lang.String getWidth();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCheckableDatePanel.Style valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCheckableDatePanel.Style[] values();\n}", "des": "The various style options for the checkable date panel."}
{"index": 8208, "code": "Class CmsCheckBoxWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8209, "code": "Class CmsChoiceMenuEntryWidget {\n\t// Gets the root choice menu.\n\tCmsAttributeChoiceWidget getAttributeChoiceWidget();\n\t// Gets the menu entry bean.\n\tCmsChoiceMenuEntryBean getEntryBean();\n\t// Gets the select handler.\n\tcom.google.gwt.user.client.rpc.AsyncCallback<CmsChoiceMenuEntryBean> getSelectHandler();\n\t// Gets the submenu to which this entry belongs (or null if it belongs to a root menu).\n\tCmsChoiceSubmenu getSubmenu();\n}", "des": "A menu entry widget for selecting choices for complex choice values."}
{"index": 8210, "code": "Class CmsClassHoverHandler {\n\t// Will be executed for starting the hover effect.\n\tprotected void onHoverIn​(com.google.gwt.event.dom.client.MouseOverEvent event);\n\t// Will be executed for finishing the hover effect.\n\tprotected void onHoverOut​(com.google.gwt.event.dom.client.MouseOutEvent event);\n}", "des": "Event handler to toggle the I_CmsLayoutBundle.I_CmsStateCss.cmsHovering() class on mouse out/over."}
{"index": 8211, "code": "Class CmsClientEditableGroupButtons {\n\t// Shows / hides the edit button.\n\tvoid setEditVisible​(boolean editEnabled);\n\t// Sets the 'first' status of the button bar.\n\tvoid setFirst​(boolean first);\n\t// Hides the add button.\n\tvoid setHideAdd​(boolean hideAdd);\n\t// Sets the 'last' status of the button bar.\n\tvoid setLast​(boolean last);\n}", "des": "Client side button bar widget for multivalue widget groups."}
{"index": 8212, "code": "Class CmsClientVariantDisplay {\n\t// Clears a currently displayed popup.\n\tvoid clear();\n\t// Shows the given context/variant combination.\n\tvoid show​(java.lang.String context, org.opencms.gwt.shared.CmsClientVariantInfo info);\n}", "des": "Class used to display a client variant of a template context."}
{"index": 8213, "code": "Class CmsCodeMirrorScriptLoader {\n\t// Asynchronously loads all scripts / stylesheets and calls the given callback at the end.\n\tvoid load​(java.lang.Runnable callback);\n\t// Loads the script from the given path (which is treated as relative to the CodeMirror base URI.\n\tvoid load​(java.lang.String path);\n}", "des": "Helper class that asynchronously loads all the necessary scripts and stylesheets for the CodeMirror editor widget, and executes a callback at the end."}
{"index": 8214, "code": "Class CmsCodeMirrorToggleButton {\n\tcom.google.gwt.event.shared.HandlerRegistration addValueChangeHandler​(com.google.gwt.event.logical.shared.ValueChangeHandler<java.lang.Boolean> handler);\n\t// Returns the toggle state.\n\tboolean getValue();\n\t// Sets the value.\n\tvoid setValue​(boolean value, boolean fireEvents);\n}", "des": "Simple toggle button for the CodeMirror toolbar."}
{"index": 8215, "code": "Class CmsCodeWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Widget factory for the CodeMirror editor widget."}
{"index": 8216, "code": "Class CmsColorpickerWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8217, "code": "Class CmsComboWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8218, "code": "Class CmsCompositeTransform {\n\t// Applies the inverse of the transformation to a point.\n\torg.opencms.ade.galleries.shared.CmsPoint transformBack​(org.opencms.ade.galleries.shared.CmsPoint point);\n\t// Applies the transformation to a point.\n\torg.opencms.ade.galleries.shared.CmsPoint transformForward​(org.opencms.ade.galleries.shared.CmsPoint point);\n}", "des": "A coordinate system transform represented as a composition of multiple other transforms."}
{"index": 8219, "code": "Class CmsConfirmDialog {\n\tvoid center();\n\t// Returns the dialog handler.\n\tprotected I_CmsConfirmDialogHandler getHandler();\n\t// Returns the 'OK' button widget.\n\tCmsPushButton getOkButton();\n\t// Executed on 'ok' click.\n\tprotected void onOk();\n\t// Sets the dialog handler.\n\tvoid setHandler​(I_CmsConfirmDialogHandler handler);\n\t// Sets the accept button icon class.\n\tvoid setOkIconClass​(java.lang.String iconClass);\n\t// Sets the accept button text.\n\tvoid setOkText​(java.lang.String text);\n\tvoid show();\n}", "des": "Provides a confirmation dialog with ok and cancel button."}
{"index": 8220, "code": "Class CmsConfirmRemoveWidget.MessageStrings {\n\t// Message string provider.\n\tstatic java.lang.String cancel();\n\t// Message string provider.\n\tstatic java.lang.String caption();\n\t// Message string provider.\n\tstatic java.lang.String checkboxText();\n\t// Message string provider.\n\tstatic java.lang.String confirmText();\n\t// Message string provider.\n\tstatic java.lang.String noReferenceText();\n\t// Message string provider.\n\tstatic java.lang.String ok();\n}", "des": "Interface with message string constants."}
{"index": 8221, "code": "Class CmsContainerPageContainer.ContainerResizeHelper {\n\t// Initializes the minimum height.\n\tvoid initHeight();\n\t// Called when the placeholder is shown.\n\tvoid onShowPlaceholder​(com.google.gwt.dom.client.Element placeholder);\n\t// Resets the style changes.\n\tvoid reset();\n}", "des": "Helper class for resizing containers in the drag/drop process when an element is dropped into them that is of lower height than the empty container HTML."}
{"index": 8222, "code": "Enum CmsContainerpageController.ElementRemoveMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsContainerpageController.ElementRemoveMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsContainerpageController.ElementRemoveMode[] values();\n}", "des": "Enum which is used to control how elements are removed from the page."}
{"index": 8223, "code": "Interface CmsContainerpageController.I_PageContentVisitor {\n\t// This method is called before a container is processed.\n\tboolean beginContainer​(java.lang.String name, org.opencms.ade.containerpage.shared.CmsContainer container);\n\t// This method is called after all elements of a container have been processed.\n\tvoid endContainer();\n\t// This method is called for each element of a container.\n\tvoid handleElement​(CmsContainerPageElementPanel element);\n}", "des": "Visitor interface used to process the current container content on the page."}
{"index": 8224, "code": "Enum CmsContainerpageEvent.EventType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsContainerpageEvent.EventType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsContainerpageEvent.EventType[] values();\n}", "des": "Enum for the event type."}
{"index": 8225, "code": "Class CmsContentEditorDialog.DialogOptions {\n\t// Returns the suggestedHeight.\n\tjava.lang.Integer getSuggestedHeight();\n\t// Returns the suggestedWidth.\n\tjava.lang.Integer getSuggestedWidth();\n\t// Sets the suggestedHeight.\n\tvoid setSuggestedHeight​(java.lang.Integer suggestedHeight);\n\t// Sets the suggestedWidth.\n\tvoid setSuggestedWidth​(java.lang.Integer suggestedWidth);\n}", "des": "Additional options for the editor dialog."}
{"index": 8226, "code": "Class CmsContextMenuButton {\n\t// Hides the menu content without altering the button state.\n\tprotected void hideMenu();\n\t// Opens the menu and fires the on toggle event.\n\tvoid openMenu();\n\t// Creates the menu and adds it to the panel.\n\tvoid showMenu​(java.util.List<I_CmsContextMenuEntry> menuEntries);\n}", "des": "The result item context menu button."}
{"index": 8227, "code": "Class CmsContextMenuItem {\n\t// Generates the HTML for a menu item.\n\tprotected java.lang.String getMenuItemHtml​(boolean hasSubMenu);\n\t// The action that is executed on click depends on the concrete implementation of a menu item.\n\tvoid onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "An entry in a CmsContextMenu."}
{"index": 8228, "code": "Class CmsCopyAsModelGroupPageMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Context menu entry for copying a model page to be used as a model group page."}
{"index": 8229, "code": "Class CmsCopyModelPageDialog {\n\t// Gets the description from the description text box.\n\tjava.lang.String getDescription();\n\t// Creates the new gallery folder.\n\tprotected void onOk();\n}", "des": "The create new gallery folder dialog."}
{"index": 8230, "code": "Class CmsCopyModelPageMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n\t// Opens the confirmation dialog for editing a model page.\n\tstatic void openEditConfirmDialog​(org.opencms.ade.sitemap.shared.CmsNewResourceInfo resourceInfo);\n}", "des": "Context menu entry for copying a model page."}
{"index": 8231, "code": "Class CmsCopyPageMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n\t// Opens the page copy dialog for the given structure id.\n\tvoid openPageCopyDialog​(java.lang.String id, com.google.gwt.core.client.JavaScriptObject callback);\n}", "des": "Menu entry for the \"copy page\" command."}
{"index": 8232, "code": "Class CmsCreatableListItem {\n\t// Returns the copy resource structure id.\n\torg.opencms.util.CmsUUID getCopyResourceId();\n\t// Returns the new sitemap entry type.\n\tCmsCreatableListItem.NewEntryType getNewEntryType();\n\t// Returns the resource type information bean.\n\torg.opencms.ade.sitemap.shared.CmsNewResourceInfo getResourceTypeInfo();\n\t// Returns the resource type id.\n\tint getTypeId();\n\t// Returns the resource type name.\n\tjava.lang.String getTypeName();\n}", "des": "A list item widget class which also contains a resource type info bean, for use in creating new sitemap entries."}
{"index": 8233, "code": "Enum CmsCreatableListItem.NewEntryType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsCreatableListItem.NewEntryType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsCreatableListItem.NewEntryType[] values();\n}", "des": "The types of creatable sitemap entries."}
{"index": 8234, "code": "Class CmsCreateCategoryMenuEntry.CmsCategoryTitleAndName {\n\t// Gets the name of the category.\n\tjava.lang.String getName();\n\t// Gets the title of the category.\n\tjava.lang.String getTitle();\n}", "des": "Bean containing the title and name of a category."}
{"index": 8235, "code": "Class CmsCreateGalleryDialog {\n\t// Creates the new gallery folder.\n\tprotected void onOk();\n\t// Enables or disables the OK button.\n\tprotected void setOkEnabled​(boolean enabled);\n}", "des": "The create new gallery folder dialog."}
{"index": 8236, "code": "Class CmsCreateGalleryMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu create gallery entry."}
{"index": 8237, "code": "Class CmsCreateModeSelectionView {\n\t// Returns the infoBox.\n\tcom.google.gwt.user.client.ui.FlowPanel getInfoBox();\n\t// Returns the label.\n\tcom.google.gwt.user.client.ui.Label getLabel();\n}", "des": "UiBinder widget for the create-mode selection dialog content."}
{"index": 8238, "code": "Class CmsDataViewClientWidget {\n\t// Ensures that the javascript callback is installed.\n\tstatic void ensureCallback​(java.lang.String name);\n\t// Handles the JSON results returned by the embedded Vaadin dialog.\n\tstatic void handleResult​(java.lang.String json);\n}", "des": "The client-side widget for data view items."}
{"index": 8239, "code": "Class CmsDataViewValue {\n\t// Returns the data.\n\tjava.lang.String getData();\n\t// Returns the description.\n\tjava.lang.String getDescription();\n\t// Returns the id.\n\tjava.lang.String getId();\n\t// Returns the title.\n\tjava.lang.String getTitle();\n}", "des": "Represents a data view value to be read from or written to the editor by the data view widget."}
{"index": 8240, "code": "Class CmsDataViewValueAccessor {\n\t// Gets the id of this accessor.\n\tjava.lang.String getId();\n\t// Gets the current value in the editor.\n\tCmsDataViewValue getValue();\n\t// Replaces the value in the editor with a list of other values.\n\tvoid replaceValue​(java.util.List<CmsDataViewValue> replacementValues);\n\t// Sets the widget instance.\n\tvoid setWidget​(CmsDataViewClientWidget cmsDataViewClientWidget);\n}", "des": "Class responsible for reading data view values from the editor, and writing them back to the editor."}
{"index": 8241, "code": "Class CmsDateBoxEvent {\n\tprotected void dispatch​(I_CmsDateBoxEventHandler handler);\n\t// Fires the event.\n\tstatic void fire​(I_CmsHasDateBoxEventHandlers source, java.util.Date date, boolean isTyping);\n\tcom.google.gwt.event.shared.GwtEvent.Type<I_CmsDateBoxEventHandler> getAssociatedType();\n\t// Gets the date.\n\tjava.util.Date getDate();\n\t// Returns true if the event was caused by a user key press which may have changed the value.\n\tboolean isUserTyping();\n}", "des": "Custom event type for CmsDateBox changes."}
{"index": 8242, "code": "Enum CmsDateTimeUtil.Format {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDateTimeUtil.Format valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDateTimeUtil.Format[] values();\n}", "des": "The standard formats."}
{"index": 8243, "code": "Class CmsDebugLog {\n\t// Clears the debug log.\n\tvoid clear();\n\t// Logs a message to the browser console if possible.\n\tstatic void consoleLog​(java.lang.String message);\n\t// Logs a message and includes the current stack trace.\n\tstatic void consoleTrace​(java.lang.String message);\n\t// Returns the debug log.\n\tstatic CmsDebugLog getInstance();\n\t// Prints a new line into the log window by adding a p-tag including given text as HTML.\n\tvoid printLine​(java.lang.String text);\n}", "des": "A basic debug log, to print messages into the client window."}
{"index": 8244, "code": "Class CmsDefaultStringModel {\n\tcom.google.gwt.event.shared.HandlerRegistration addValueChangeHandler​(com.google.gwt.event.logical.shared.ValueChangeHandler<java.lang.String> handler);\n\tvoid fireEvent​(com.google.gwt.event.shared.GwtEvent<?> event);\n\t// Returns the model id.\n\tjava.lang.String getId();\n\t// Returns the model value.\n\tjava.lang.String getValue();\n\t// Sets the model value.\n\tvoid setValue​(java.lang.String value, boolean notify);\n}", "des": "The default string model implementation."}
{"index": 8245, "code": "Class CmsDeleteCategoryMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Context menu entry for deleting a category."}
{"index": 8246, "code": "Class CmsDeleteMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu delete entry."}
{"index": 8247, "code": "Class CmsDeleteModelPageMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu delete entry."}
{"index": 8248, "code": "Class CmsDeleteWarningDialog {\n\t// Deletes a resource from the vfs.\n\tprotected void deleteResource();\n\t// Displays the broken links information.\n\tprotected void displayBrokenLinks​(org.opencms.gwt.shared.CmsDeleteResourceBean brokenLinks);\n\t// Loads and shows the delete dialog.\n\tvoid loadAndShow​(com.google.gwt.user.client.Command callback);\n\t// Method which should be called after the deletion has been performed.\n\tprotected void onAfterDeletion();\n}", "des": "A dialog which informs the user that deleting a resource will break links from other resources."}
{"index": 8249, "code": "Class CmsDependentSelectWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Widget factory for the dependent select widget."}
{"index": 8250, "code": "Class CmsDialogContextMenuHandler {\n\t// Reloads the resource edited.\n\tvoid refreshResource​(org.opencms.util.CmsUUID structureId);\n\t// Creates a single context menu entry from a context menu entry bean.\n\tprotected I_CmsContextMenuEntry transformSingleEntry​(org.opencms.gwt.shared.CmsContextMenuEntryBean entryBean, org.opencms.util.CmsUUID structureId);\n}", "des": "Context menu handler to be used within overlay dialogs."}
{"index": 8251, "code": "Class CmsDisableMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Returns a CSS class which should be used to display an icon, or null if no icon is required.\n\tjava.lang.String getIconClass();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu disable model page entry."}
{"index": 8252, "code": "Class CmsDisplayTypeSelectWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Widget factory for the display type select widget."}
{"index": 8253, "code": "Class CmsDisplayWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8254, "code": "Enum CmsDNDHandler.AnimationType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDNDHandler.AnimationType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDNDHandler.AnimationType[] values();\n}", "des": "The animation types."}
{"index": 8255, "code": "Enum CmsDNDHandler.Direction {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDNDHandler.Direction valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDNDHandler.Direction[] values();\n}", "des": "Scroll direction enumeration."}
{"index": 8256, "code": "Enum CmsDNDHandler.Orientation {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDNDHandler.Orientation valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDNDHandler.Orientation[] values();\n}", "des": "The allowed drag and drop orientation."}
{"index": 8257, "code": "Enum CmsDomUtil.Attribute {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDomUtil.Attribute valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDomUtil.Attribute[] values();\n}", "des": "HTML tag attributes."}
{"index": 8258, "code": "Class CmsDomUtil.AttributeValue {\n\t// Returns the attribute.\n\tCmsDomUtil.Attribute getAttr();\n\t// Returns the value.\n\tjava.lang.String getValue();\n\t// Sets the value.\n\tvoid setValue​(java.lang.String value);\n}", "des": "Helper class to encapsulate an attribute/value pair."}
{"index": 8259, "code": "Enum CmsDomUtil.Color {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDomUtil.Color valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDomUtil.Color[] values();\n}", "des": "CSS Colors."}
{"index": 8260, "code": "Enum CmsDomUtil.Entity {\n\t// Returns the HTML code for this entity.\n\tjava.lang.String html();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDomUtil.Entity valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDomUtil.Entity[] values();\n}", "des": "HTML entities."}
{"index": 8261, "code": "Enum CmsDomUtil.Method {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDomUtil.Method valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDomUtil.Method[] values();\n}", "des": "Form methods."}
{"index": 8262, "code": "Enum CmsDomUtil.Style {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDomUtil.Style valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDomUtil.Style[] values();\n}", "des": "CSS Properties."}
{"index": 8263, "code": "Enum CmsDomUtil.StyleValue {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDomUtil.StyleValue valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDomUtil.StyleValue[] values();\n}", "des": "CSS Property values."}
{"index": 8264, "code": "Enum CmsDomUtil.Tag {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDomUtil.Tag valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDomUtil.Tag[] values();\n}", "des": "HTML Tags."}
{"index": 8265, "code": "Enum CmsDomUtil.Target {\n\t// Returns the target representation.\n\tjava.lang.String getRepresentation();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsDomUtil.Target valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsDomUtil.Target[] values();\n}", "des": "Enumeration of link/form targets."}
{"index": 8266, "code": "Class CmsDroppedElementModeSelectionDialog {\n\t// Adds the dialog buttons.\n\tprotected void addButtons();\n\t// Message accessor.\n\tjava.lang.String messageAskMode();\n\t// Message accessor.\n\tjava.lang.String messageCaption();\n\t// Message accessor.\n\tjava.lang.String messageCopy();\n\t// Message accessor.\n\tjava.lang.String messageNew();\n\t// Shows the dialog.\n\tstatic void showDialog​(org.opencms.util.CmsUUID referenceId, com.google.gwt.user.client.rpc.AsyncCallback<java.lang.String> createModeCallback);\n}", "des": "Dialog for selecting between copying and reusing an element dropped from the clipboard into the page."}
{"index": 8267, "code": "Class CmsEditableDataUtil {\n\t// Copies the given editable data extended attributes.\n\tstatic org.opencms.gwt.shared.I_CmsEditableDataExtensions copy​(org.opencms.gwt.shared.I_CmsEditableDataExtensions data);\n\t// Parses editable data extended attributes from JSON.\n\tstatic org.opencms.gwt.shared.I_CmsEditableDataExtensions parseExtensions​(java.lang.String jsonData);\n}", "des": "Helper functions to deal with editable data."}
{"index": 8268, "code": "Class CmsEditMenuEntry {\n\t// Creates the right sitemap entry editor for the current mode.\n\tprotected A_CmsPropertyEditor createEntryEditor​(I_CmsPropertyEditorHandler handler, java.util.Map<java.lang.String,​org.opencms.xml.content.CmsXmlContentProperty> propConfig);\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu edit entry."}
{"index": 8269, "code": "Class CmsEditModelPageMenuEntry {\n\t// Checks if the model page menu entry should be visible.\n\tstatic boolean checkVisible​(org.opencms.util.CmsUUID id);\n\t// Opens the editor for a model page menu entry.\n\tstatic void editModelPage​(java.lang.String resourcePath, boolean isModelGroup);\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Context menu entry for editing a model page."}
{"index": 8270, "code": "Class CmsEditOptionButton {\n\t// Checks if this button should be visible according to the elements state.\n\tboolean checkVisibility();\n\t// Executed on button click.\n\tvoid onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "The selection option."}
{"index": 8271, "code": "Class CmsEditRedirectMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu new entry."}
{"index": 8272, "code": "Class CmsElementOptionButton {\n\t// Returns the dragElement.\n\tCmsContainerPageElementPanel getContainerElement();\n\t// Returns the draggable item.\n\tI_CmsDraggable getDraggable();\n\t// Returns the associated tool-bar button.\n\tA_CmsToolbarOptionButton getToolbarButton();\n\tvoid onBrowserEvent​(com.google.gwt.user.client.Event event);\n}", "des": "An optional container element button."}
{"index": 8273, "code": "Enum CmsElementSettingsDialog.GroupOption {\n\t// Returns the option label.\n\tprotected java.lang.String getLabel();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsElementSettingsDialog.GroupOption valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsElementSettingsDialog.GroupOption[] values();\n}", "des": "The model group options."}
{"index": 8274, "code": "Class CmsElementSettingsFormatterWidget {\n\t// Returns the formatterSelect.\n\tCmsSelectBox getFormatterSelect();\n\t// Returns the help.\n\tcom.google.gwt.user.client.ui.FlowPanel getHelp();\n}", "des": "Widget containing a select box for selecting formatters and a help icon."}
{"index": 8275, "code": "Class CmsEntityBackendWrapper {\n\t// Wrapper method.\n\tCmsEntityWrapper createEntity​(java.lang.String id, java.lang.String typeName);\n\t// Wrapper method.\n\tCmsTypeWrapper getType​(java.lang.String id);\n}", "des": "Exportable wrapper class for the VIE instance."}
{"index": 8276, "code": "Class CmsErrorWidget {\n\t// Returns true if a error message is set.\n\tboolean hasError();\n\t// Hides the error.\n\tprotected void hideError();\n\t// Sets the visibility of the error label.\n\tprotected void setErrorVisible​(boolean visible);\n\t// Sets the text for the error message.\n\tvoid setText​(java.lang.String text);\n\t// Shows the error.\n\tprotected void showError();\n}", "des": "Helper class for displaying errors."}
{"index": 8277, "code": "Class CmsExtendedValueChangeEvent<T> {\n\t// Return true if validation shouldn't be triggered by this event.\n\tboolean isInhibitValidation();\n\t// Sets the inhibitValidation flag.\n\tvoid setInhibitValidation​(boolean inhibitValidation);\n}", "des": "Value change event with additional data."}
{"index": 8278, "code": "Class CmsExternalLayout {\n\t// This is overridden so that SimplePanel.setWidget(Widget) uses the specified external element.\n\tprotected com.google.gwt.user.client.Element getContainerElement();\n\t// Returns the target element.\n\tcom.google.gwt.dom.client.Element getRenderTargetElement();\n\t// Sets the target element.\n\tvoid setRenderTargetElement​(com.google.gwt.dom.client.Element renderTargetElement);\n}", "des": "Client-side implementation for the ExternalLayout addon."}
{"index": 8279, "code": "Class CmsFavoritesOptionButton {\n\t// Checks if this button should be visible according to the elements state.\n\tboolean checkVisibility();\n\t// Executed on button click.\n\tvoid onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "The selection option."}
{"index": 8280, "code": "Class CmsFavoriteTab {\n\t// Adds an item to the list.\n\tvoid addListItem​(CmsListItem item);\n\t// Clears the list.\n\tvoid clearList();\n\t// Returns the item list.\n\tCmsList<CmsListItem> getList();\n\t// Returns the scroll panel.\n\tCmsScrollPanel getScrollPanel();\n\t// Returns the favorite list item iterator.\n\tjava.util.Iterator<com.google.gwt.user.client.ui.Widget> iterator();\n\t// Saves the favorites.\n\tvoid saveFavorites();\n}", "des": "Content of the tool-bar menu favorite tab."}
{"index": 8281, "code": "Class CmsFieldsetFormFieldPanel {\n\t// Adds a group specific field set.\n\tvoid addGroupFieldSet​(java.lang.String group, CmsFieldSet fieldSet);\n\t// Returns the default group name.\n\tjava.lang.String getDefaultGroup();\n\t// Returns the main field set.\n\tCmsFieldSet getFieldSet();\n\t// Gets the main panel.\n\tcom.google.gwt.user.client.ui.FlowPanel getMainPanel();\n\t// Renders a collection of fields.\n\tvoid renderFields​(java.util.Collection<I_CmsFormField> fields);\n}", "des": "Form field panel which puts its form fields into a field set, and also displays a resource info box."}
{"index": 8282, "code": "Class CmsFieldTooltip.Data {\n\t// Gets the tooltip content.\n\tjava.lang.String getInfo();\n\t// Gets the icon for which the tooltip is intended.\n\tcom.google.gwt.user.client.ui.Panel getReference();\n\t// Returns true if the tooltip content is HTML.\n\tboolean isHtml();\n}", "des": "Data needed to create a tooltip."}
{"index": 8283, "code": "Class CmsFocalPoint {\n\t// Positions the center of this widget over the given coordinates.\n\tvoid setCenterCoordsRelativeToParent​(int x, int y);\n\t// Sets or clears the 'is default' style on the focal point.\n\tvoid setIsDefault​(boolean isDefault);\n}", "des": "Widget which displays the focal point for an image."}
{"index": 8284, "code": "Class CmsFocalPointController {\n\t// Called when the user clicks on the focal point widget.\n\tvoid onStartDrag();\n\t// Saves the focal point to a property on the image.\n\tvoid reset();\n\t// Updates the image.\n\tvoid updateImage​(com.google.gwt.user.client.ui.FlowPanel container, com.google.gwt.user.client.ui.Image previewImage);\n}", "des": "Handles manipulation of the focal point in the gallery dialog."}
{"index": 8285, "code": "Class CmsFocusAwareTextBox {\n\t// Initializes this class.\n\tstatic void initClass();\n\t// Returns a flag, indicating if the text box is currently focused.\n\tboolean isFocused();\n}", "des": "An extension of CmsTextBox that keeps information about its focus state."}
{"index": 8286, "code": "Class CmsFocusedScrollingHandler {\n\t// Installs a focused scrolling handler on the given widget.\n\tstatic CmsFocusedScrollingHandler installFocusedScrollingHandler​(com.google.gwt.user.client.ui.ScrollPanel scrollPanel);\n\t// Returns if the handler is currently registered.\n\tboolean isRegistered();\n\tvoid onPreviewNativeEvent​(com.google.gwt.user.client.Event.NativePreviewEvent event);\n\t// Registers the handler.\n\tvoid register();\n\t// Removes the handler and deactivates it.\n\tvoid removeHandler();\n}", "des": "Native preview handler that focuses the on scroll wheel mouse event on the given scroll panel."}
{"index": 8287, "code": "Class CmsFormatterSelectWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Widget factory for the dependent select widget."}
{"index": 8288, "code": "Class CmsGalleryFactory {\n\t// Creates a new gallery dialog.\n\tstatic CmsGalleryDialog createDialog​(I_CmsGalleryHandler galleryHandler, org.opencms.ade.galleries.shared.CmsGalleryDataBean data);\n\t// Returns a gallery dialog object.\n\tstatic CmsGalleryDialog createDialog​(CmsPopup popup);\n\t// Creates a gallery widget pop-up.\n\tstatic CmsGalleryPopup createGalleryPopup​(I_CmsGalleryWidgetHandler handler, org.opencms.ade.galleries.shared.I_CmsGalleryConfiguration conf);\n}", "des": "Factory class to create gallery dialog with or without parameter."}
{"index": 8289, "code": "Class CmsGotoExplorerMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu open in explorer entry."}
{"index": 8290, "code": "Class CmsGotoMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu got page entry."}
{"index": 8291, "code": "Class CmsGotoSubSitemapMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu goto sub sitemap entry."}
{"index": 8292, "code": "Class CmsHideMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu hide in navigation entry."}
{"index": 8293, "code": "Enum CmsHighlightingBorder.BorderColor {\n\t// Returns the associated CSS class.\n\tjava.lang.String getCssClass();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsHighlightingBorder.BorderColor valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsHighlightingBorder.BorderColor[] values();\n}", "des": "Enumeration of available border colours."}
{"index": 8294, "code": "Class CmsHoverbarContextMenuButton {\n\t// Returns the list of menu entries for the hoverbar.\n\tjava.util.List<A_CmsSitemapMenuEntry> createContextMenu​(CmsSitemapHoverbar hoverbar);\n\t// Rests the button state and hides the hoverbar.\n\tprotected void onMenuClose​(CmsSitemapHoverbar hoverbar);\n\t// Sets the context menu visible.\n\tprotected void setMenuVisible​(CmsSitemapHoverbar hoverbar);\n\t// Shows the context menu.\n\tprotected void showMenu​(CmsSitemapHoverbar hoverbar);\n}", "des": "Sitemap context menu button."}
{"index": 8295, "code": "Class CmsHoverbarCreateGalleryButton {\n\t// Opens the new gallery dialog.\n\tprotected void openDialog();\n\t// Sets the hover bar instance.\n\tvoid setHoverbar​(CmsSitemapHoverbar hoverbar);\n}", "des": "Sitemap hoverbar \"go to page\" button."}
{"index": 8296, "code": "Class CmsHoverbarCreateModelPageButton {\n\t// Opens the new gallery dialog.\n\tprotected void openDialog();\n\t// Sets the hover bar instance.\n\tvoid setHoverbar​(CmsSitemapHoverbar hoverbar);\n}", "des": "Button used to create new model pages."}
{"index": 8297, "code": "Class CmsHtmlWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8298, "code": "Class CmsImageAdvancedForm {\n\t// Displays the provided image information.\n\tvoid fillContent​(org.opencms.ade.galleries.shared.CmsImageInfoBean imageInfo, CmsJSONMap imageAttributes, boolean initialFill);\n\t// Adds necessary attributes to the map.\n\tvoid getImageAttributes​(java.util.Map<java.lang.String,​java.lang.String> attributes, I_CmsSimpleCallback<java.util.Map<java.lang.String,​java.lang.String>> callback);\n}", "des": "Advanced image tag properties form, use in editor mode only."}
{"index": 8299, "code": "Class CmsImageAdvancedTab {\n\t// Displays the provided image information.\n\tvoid fillContent​(org.opencms.ade.galleries.shared.CmsImageInfoBean imageInfo);\n\t// Returns the preview handler.\n\tprotected CmsImagePreviewHandler getHandler();\n\t// Adds necessary attributes to the map.\n\tvoid getImageAttributes​(java.util.Map<java.lang.String,​java.lang.String> attributes, I_CmsSimpleCallback<java.util.Map<java.lang.String,​java.lang.String>> callback);\n}", "des": "Advanced image tag properties tab, use in editor mode only."}
{"index": 8300, "code": "Class CmsImageEditorTab {\n\t// Displays the provided image information.\n\tvoid fillContent​(org.opencms.ade.galleries.shared.CmsImageInfoBean imageInfo);\n\t// Returns the preview handler.\n\tprotected CmsImagePreviewHandler getHandler();\n\t// Adds necessary attributes to the map.\n\tjava.util.Map<java.lang.String,​java.lang.String> getImageAttributes​(java.util.Map<java.lang.String,​java.lang.String> attributes);\n}", "des": "Simple image tag properties tab, use in editor mode only."}
{"index": 8301, "code": "Class CmsImageFormatsTab {\n\t// Displays the provided image information.\n\tvoid fillContent​(org.opencms.ade.galleries.shared.CmsImageInfoBean imageInfo);\n\t// Returns the preview handler.\n\tprotected I_CmsPreviewHandler<?> getHandler();\n}", "des": "The widget to display the format information of the selected image."}
{"index": 8302, "code": "Class CmsImageInfoDisplay {\n\t// Fills the contend data.\n\tvoid fillContent​(org.opencms.ade.galleries.shared.CmsResourceInfoBean infoBean, java.lang.String crop, java.lang.String point);\n\t// Sets the crop format.\n\tvoid setCropFormat​(java.lang.String cropFormat);\n\t// Sets the focal point.\n\tvoid setFocalPoint​(java.lang.String focalPoint);\n}", "des": "Widget for displaying image information."}
{"index": 8303, "code": "Class CmsImagePreviewFactory {\n\t// Returns the resource preview instance for the given gallery dialog.\n\tI_CmsResourcePreview<?> getPreview​(CmsGalleryDialog dialog);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "The image resource preview factory."}
{"index": 8304, "code": "Enum CmsImagePreviewHandler.Attribute {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsImagePreviewHandler.Attribute valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsImagePreviewHandler.Attribute[] values();\n}", "des": "Enumeration of image tag attribute names."}
{"index": 8305, "code": "Class CmsImportResultList {\n\t// Adds a single line of the import result to the widget.\n\tvoid addRow​(java.lang.String leftText, java.lang.String rightText, java.lang.String styleName);\n\t// Clears the result list.\n\tvoid clear();\n\t// Ensures the existence of the 'empty' label.\n\tprotected void ensureEmptyLabel();\n\t// Ensure that the 'empty' label does not exist.\n\tprotected void ensureNoEmptyLabel();\n}", "des": "A widget used for displaying the results of an alias import operation."}
{"index": 8306, "code": "Interface CmsImportResultList.I_Css {\n\t// CSS class accessor.\n\tjava.lang.String aliasImportError();\n\t// CSS class accessor.\n\tjava.lang.String aliasImportOk();\n\t// CSS class accessor.\n\tjava.lang.String aliasImportOverwrite();\n\t// CSS class accessor.\n\tjava.lang.String rightLabel();\n}", "des": "The CSS classes used for this widget."}
{"index": 8307, "code": "Class CmsInfoBoxFormFieldPanel {\n\t// Adds another widget after the list info widget.\n\tvoid addWidgetAfterListInfo​(com.google.gwt.user.client.ui.Widget widget);\n\t// Returns the default group name.\n\tjava.lang.String getDefaultGroup();\n\t// Renders a collection of fields.\n\tvoid renderFields​(java.util.Collection<I_CmsFormField> fields);\n\tvoid truncate​(java.lang.String textMetricsKey, int clientWidth);\n}", "des": "Form field panel for the sitemap entry editor in the navigation mode."}
{"index": 8308, "code": "Class CmsInfoLoadingListItemWidget {\n\t// Initializes the additional info.\n\tprotected void initAdditionalInfo​(org.opencms.gwt.shared.CmsListInfoBean infoBean);\n\t// Sets the loader for additional info items.\n\tvoid setAdditionalInfoLoader​(I_CmsAdditionalInfoLoader loader);\n\t// Sets the dynamically loaded additional info items.\n\tprotected void setDynamicInfo​(java.util.List<CmsListItemWidget.AdditionalInfoItem> info);\n}", "des": "This class extends the basic list item widget with the ability to load additional info items asnchronously via RPC."}
{"index": 8309, "code": "Class CmsInfoOptionButton {\n\t// Checks if this button should be visible according to the elements state.\n\tboolean checkVisibility();\n\t// Executed on button click.\n\tvoid onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "The info option."}
{"index": 8310, "code": "Class CmsInheritedOptionButton {\n\t// Checks if this button should be visible according to the elements state.\n\tboolean checkVisibility();\n\t// Executed on button click.\n\tvoid onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "The selection option."}
{"index": 8311, "code": "Class CmsLazyTreeItem {\n\t// Gets the load state of the tree item.\n\tCmsLazyTreeItem.LoadState getLoadState();\n\t// Returns if tree item children have been loaded.\n\tboolean isLoaded();\n\t// Helper method which is called when the list of children changes.\n\tprotected void onChangeChildren();\n\t// This method should be called when the item's children have finished loading.\n\tvoid onFinishLoading();\n\t// This method is called when the tree item's children start being loaded.\n\tvoid onStartLoading();\n}", "des": "Tree item for lazily loaded list trees."}
{"index": 8312, "code": "Enum CmsLazyTreeItem.LoadState {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsLazyTreeItem.LoadState valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsLazyTreeItem.LoadState[] values();\n}", "des": "Enum for indicating the load state of a tree item."}
{"index": 8313, "code": "Class CmsLinkGalleryWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8314, "code": "Class CmsListItemWidget.AdditionalInfoItem {\n\t// Returns the title element.\n\tCmsLabel getTitleLabel();\n\t// Returns the value element.\n\tCmsLabel getValueLabel();\n\t// Truncates long text and sets the original text to the title attribute.\n\tvoid truncate​(java.lang.String textMetricsPrefix, int widgetWidth);\n}", "des": "Additional info item HTML."}
{"index": 8315, "code": "Enum CmsListItemWidget.Background {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsListItemWidget.Background valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsListItemWidget.Background[] values();\n}", "des": "Background color values."}
{"index": 8316, "code": "Class CmsListSplitter<T extends I_CmsHasSize> {\n\t// Gets the next batch of items.\n\tjava.util.List<T> getMore();\n\t// Returns true if there are more items left.\n\tboolean hasMore();\n}", "des": "A utility class for partitioning a list of items (each of which has a given size) into one or more batches of consecutive items such that each batch except the last one consists of just enough items to make the total sum of item sizes in the batch greater or equal than a given parameter."}
{"index": 8317, "code": "Class CmsListTab {\n\t// Adds a clear list button to the tab.\n\tvoid addClearListButton​(com.google.gwt.event.dom.client.ClickHandler clickHandler);\n\t// Returns the required height.\n\tint getRequiredHeight();\n\t// Returns the scroll panel.\n\tCmsScrollPanel getScrollPanel();\n\t// Sets the clear list button enabled.\n\tvoid setClearButtonEnabled​(boolean enabled);\n\t// Truncates long text and sets the original text to the title attribute.\n\tvoid truncate​(java.lang.String textMetricsKey, int clientWidth);\n}", "des": "Tab widget to display a CmsList."}
{"index": 8318, "code": "Class CmsLocalizationWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8319, "code": "Class CmsLocationPickerWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate a location picker widget."}
{"index": 8320, "code": "Class CmsLockReportMenuEntry {\n\t// Checks if the menu entry should be visible.\n\tprotected boolean checkVisible();\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu show lock report entry."}
{"index": 8321, "code": "Class CmsLog {\n\t// Returns the service instance, using lazy initialization.\n\tprotected static org.opencms.gwt.shared.rpc.I_CmsLogServiceAsync getLoggingService();\n\t// Logs client messages on the server.\n\tstatic java.lang.String log​(java.lang.String message);\n}", "des": "Handles client side logging."}
{"index": 8322, "code": "Class CmsMediaQuery {\n\t// Adds a listener to detect when the matching state of the media query changes.\n\tvoid addListener​(java.util.function.Consumer<java.lang.Boolean> callback);\n\t// Checks if the media query matches.\n\tboolean matches();\n\t// Creates a new instance using the given media query rule.\n\tstatic CmsMediaQuery parse​(java.lang.String text);\n}", "des": "GWT wrapper for programmatic media query checking."}
{"index": 8323, "code": "Class CmsMediaQueryRuleManager {\n\t// Installs a new media query rule.\n\tvoid addRule​(java.lang.String cssClass, java.lang.String mediaQueryText);\n\t// Gets the instance.\n\tstatic CmsMediaQueryRuleManager get();\n\t// Initializes the manager and sets up the rules.\n\tstatic void initialize();\n\t// Adds or removes a CSS class from the body.\n\tvoid updateBodyClass​(java.lang.String cssClass, boolean enabled);\n}", "des": "Singleton class that evaluates, and keeps track of changes for, a fixed set of media queries and sets CSS classes on the body element depending on which of the media queries match."}
{"index": 8324, "code": "Class CmsMergeMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu merge entry."}
{"index": 8325, "code": "Class CmsMessageWidget {\n\t// Sets the icon CSS class.\n\tvoid setIcon​(FontOpenCms icon, java.lang.String color);\n\t// Sets the message HTML.\n\tvoid setMessageHtml​(java.lang.String message);\n\t// Sets the message text.\n\tvoid setMessageText​(java.lang.String message);\n}", "des": "Displays a message text with an icon in front."}
{"index": 8326, "code": "Class CmsMoveOptionButton {\n\t// Checks if this button should be visible according to the elements state.\n\tboolean checkVisibility();\n\t// Returns the draggable item.\n\tI_CmsDraggable getDraggable();\n\t// Executed on button click.\n\tvoid onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "The selection option."}
{"index": 8327, "code": "Class CmsMultiCheckBoxWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8328, "code": "Class CmsMultiSelectCell {\n\t// Returns the selected CmsCheckBox.\n\tCmsCheckBox get​(int i);\n\t// Returns all CmsSelectBoxes.\n\tjava.util.List<CmsCheckBox> getCheckbox();\n\t// Returns the opener text.\n\tjava.lang.String getOpenerText();\n\t// Returns the set of values of the selected checkboxes.\n\tjava.util.Set<java.lang.String> getSelected();\n\t// Returns the value of the select option as a string.\n\tjava.lang.String getValue();\n\t// Sets the opener text.\n\tvoid setOpenerText​(java.lang.String openerText);\n}", "des": "Implements a select cell that can contain multiple entries."}
{"index": 8329, "code": "Class CmsMultiSelectGroupWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8330, "code": "Class CmsMultiSelectWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8331, "code": "Class CmsNavModePropertyEditor {\n\t// Builds and renders the fields for the properties.\n\tvoid buildFields();\n\t// Sets up the widget which will contain the input fields for the properties.\n\tprotected void setupFieldContainer();\n}", "des": "Sitemap entry editor class for the navigation mode."}
{"index": 8332, "code": "Class CmsNewChoiceMenuEntry {\n\t// Helper method to create model resource info beans from new resource info beans.\n\tprotected java.util.List<org.opencms.gwt.shared.CmsModelResourceInfo> createModelInfos​(java.util.List<org.opencms.ade.sitemap.shared.CmsNewResourceInfo> resourceInfos);\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu new entry."}
{"index": 8333, "code": "Enum CmsNotification.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsNotification.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsNotification.Mode[] values();\n}", "des": "Notification Mode."}
{"index": 8334, "code": "Enum CmsNotification.Type {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsNotification.Type valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsNotification.Type[] values();\n}", "des": "Notification Type."}
{"index": 8335, "code": "Class CmsNotificationMessage {\n\t// Returns if the given message is of a blocking mode.\n\tboolean isBlockingMode();\n\t// Returns if the given message is of a busy mode.\n\tboolean isBusyMode();\n\t// Handles the close button click event.\n\tvoid onCloseClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "Widget for a single notification message."}
{"index": 8336, "code": "Class CmsNotificationWidget {\n\t// Adds the given notification message.\n\tvoid addMessage​(CmsNotificationMessage message);\n\t// Removes all messages.\n\tvoid clearMessages();\n\t// Clears the messages once the hide animation is completed.\n\tprotected void onHideComplete();\n\t// Called once the show animation is completed.\n\tprotected void onShowComplete();\n\t// Removes the given notification message.\n\tvoid removeMessage​(CmsNotificationMessage message);\n}", "des": "The toolbar notification widget."}
{"index": 8337, "code": "Class CmsOpenGalleryMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu create gallery entry."}
{"index": 8338, "code": "Class CmsPageEditorTouchHandler {\n\t// This method is called to give this class a chance to process clicks on toolbar buttons by itself, for the purpose of showing / hiding toolbars in touch-only mode.\n\tboolean eatClick​(I_CmsElementToolbarContext context);\n\t// Gets the singleton instance of the handler.\n\tstatic CmsPageEditorTouchHandler get();\n\t// Check if hover events should be ignored.\n\tboolean ignoreHover();\n}", "des": "Singleton class that manages showing / hiding of toolbars in touch-only mode in the page editor."}
{"index": 8339, "code": "Class CmsParentSitemapMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu goto parent sitemap entry."}
{"index": 8340, "code": "Class CmsPasswordWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8341, "code": "Class CmsPatternPanelDailyController {\n\t// Returns the view that is controlled.\n\tCmsPatternPanelDailyView getView();\n\t// Set the \"everyWorkingDay\" flag.\n\tvoid setEveryWorkingDay​(boolean isEveryWorkingDay);\n}", "des": "Controller for the daily pattern."}
{"index": 8342, "code": "Class CmsPatternPanelIndividualController {\n\t// Returns the view that is controlled.\n\tI_CmsSerialDatePatternView getView();\n\t// Set the individual dates.\n\tvoid setDates​(java.util.SortedSet<java.util.Date> dates);\n}", "des": "Controller for the individual pattern panel."}
{"index": 8343, "code": "Class CmsPatternPanelMonthlyController {\n\t// Returns the view that is controlled.\n\tI_CmsSerialDatePatternView getView();\n\t// Set the pattern scheme to either \"by weekday\" or \"by day of month\".\n\tvoid setPatternScheme​(boolean isByWeekDay, boolean fireChange);\n\t// Set the week day the event should take place.\n\tvoid setWeekDay​(java.lang.String dayString);\n\t// Handle a change in the weeks of month.\n\tvoid weeksChange​(java.lang.String week, java.lang.Boolean value);\n}", "des": "Controller for the monthly pattern panel."}
{"index": 8344, "code": "Class CmsPatternPanelWeeklyController {\n\t// Returns the view that is controlled.\n\tI_CmsSerialDatePatternView getView();\n\t// Set the weekdays at which the event should take place.\n\tvoid setWeekDays​(java.util.SortedSet<org.opencms.acacia.shared.I_CmsSerialDateValue.WeekDay> weekDays);\n}", "des": "Controller for the weekly pattern panel."}
{"index": 8345, "code": "Class CmsPatternPanelWeeklyView {\n\t// Returns all selected days.\n\tprotected java.util.SortedSet<org.opencms.acacia.shared.I_CmsSerialDateValue.WeekDay> getWeekDays();\n\t// Method called, when a value change event is fired.\n\tvoid onValueChange();\n}", "des": "The weekly pattern panel."}
{"index": 8346, "code": "Class CmsPatternPanelYearlyController {\n\t// Returns the view that is controlled.\n\tI_CmsSerialDatePatternView getView();\n\t// Set the month.\n\tvoid setMonth​(java.lang.String monthStr);\n\t// Set the pattern scheme.\n\tvoid setPatternScheme​(boolean isWeekDayBased);\n\t// Set the week day.\n\tvoid setWeekDay​(java.lang.String weekDayStr);\n\t// Set the week of month.\n\tvoid setWeekOfMonth​(java.lang.String weekOfMonthStr);\n}", "des": "Controller for the yearly pattern panel."}
{"index": 8347, "code": "Class CmsPopup.HistoryHandler {\n\t// Adds a popup to the list of active popups.\n\tvoid addPopup​(CmsPopup popup);\n\tvoid onValueChange​(com.google.gwt.event.logical.shared.ValueChangeEvent<java.lang.String> event);\n\t// Removes a popup from the list of active popups.\n\tvoid removePopup​(CmsPopup popup);\n}", "des": "Handles fragment changes by closing the active popups."}
{"index": 8348, "code": "Enum CmsPositionBean.Area {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsPositionBean.Area valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsPositionBean.Area[] values();\n}", "des": "Position area."}
{"index": 8349, "code": "Class CmsPrincipalWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8350, "code": "Class CmsPropertiesTab {\n\t// The generic function to display the resource properties.\n\tvoid fillContent​(org.opencms.ade.galleries.shared.CmsResourceInfoBean info);\n\t// Returns the preview handler.\n\tprotected I_CmsPreviewHandler<?> getHandler();\n\tvoid onValueChange​(com.google.gwt.event.logical.shared.ValueChangeEvent<java.lang.String> event);\n\t// Will be triggered, when the save button is clicked.\n\tvoid saveProperties​(com.google.gwt.user.client.Command afterSaveCommand);\n}", "des": "The widget to display the properties of the selected resource."}
{"index": 8351, "code": "Class CmsPropertyComboBox {\n\t// Initializes this class.\n\tstatic void initClass();\n\t// Updates the select cell.\n\tvoid updateCell​(CmsLabelSelectCell cell);\n}", "des": "A combo box class for the property dialog."}
{"index": 8352, "code": "Class CmsPropertyDefinitionView {\n\t// Closes the popup if possible.\n\tvoid closePopup();\n\t// Gets the cancel button.\n\tCmsPushButton getCancelButton();\n\t// Gets the OK button.\n\tCmsPushButton getOkButton();\n\t// Sets the popup which contains this widget.\n\tvoid setPopup​(CmsPopup popup);\n}", "des": "Widget for defining new properties."}
{"index": 8353, "code": "Class CmsPropertyForm {\n\tcom.google.gwt.event.shared.HandlerRegistration addValueChangeHandler​(com.google.gwt.event.logical.shared.ValueChangeHandler<java.lang.String> handler);\n\t// Returns the id of the property.\n\tjava.lang.String getId();\n\t// Returns the field value.\n\tjava.lang.String getValue();\n\t// Returns the isChanged.\n\tboolean isChanged();\n\t// Sets the style of the parent panel.\n\tvoid setFormStyle​(java.lang.String style);\n}", "des": "The widget to display a simple form with a label and an text box."}
{"index": 8354, "code": "Class CmsPropertySelectBox {\n\t// Initializes this class.\n\tstatic void initClass();\n\t// Updates a single select cell.\n\tvoid updateCell​(CmsLabelSelectCell cell);\n\t// This method should be used to make changes to the CSS style of the select box when the value changes.\n\tvoid updateStyle();\n}", "des": "This is just a select box with some special text messages for use in the property dialog."}
{"index": 8355, "code": "Class CmsPublishConfirmationDialog {\n\t// Produces the buttons for this dialog.\n\tprotected java.util.List<CmsPushButton> getButtons();\n\t// Helper method to get a localized message.\n\tprotected java.lang.String getMessage​(java.lang.String key, java.lang.Object... args);\n}", "des": "A confirmation message dialog which can be displayed after the publish dialog has been closed."}
{"index": 8356, "code": "Enum CmsPublishDialog.State {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsPublishDialog.State valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsPublishDialog.State[] values();\n}", "des": "A type which represents the state of a publish action."}
{"index": 8357, "code": "Class CmsPublishItemStateSummary {\n\t// Adds a new state value to the statistics.\n\tvoid addState​(CmsPublishItemStatus.State state);\n\t// Gets the count of 'normal' states.\n\tint getNormalCount();\n\t// Gets the count of 'publish' states.\n\tint getPublishCount();\n\t// Gets the count of 'remove' states.\n\tint getRemoveCount();\n}", "des": "A bean containing statistics about the states of publish items in the publish dialog."}
{"index": 8358, "code": "Enum CmsPublishItemStatus.State {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsPublishItemStatus.State valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsPublishItemStatus.State[] values();\n}", "des": "The enum for the publish item state."}
{"index": 8359, "code": "Class CmsPublishLockChecker {\n\t// Adds a set of element ids which should be checked for publish locks.\n\tvoid addIdsToCheck​(java.util.Set<org.opencms.util.CmsUUID> ids);\n\t// Processes the results of the publish lock check RPC call.\n\tprotected void processCheckResult​(java.util.Set<org.opencms.util.CmsUUID> locked);\n}", "des": "Helper class for periodically checking a set of elements for publish locks and then reloading the corresponding elements when they are no longer locked."}
{"index": 8360, "code": "Class CmsPublishSelectPanel.CheckBoxUpdate {\n\t// Gets the action text.\n\tjava.lang.String getAction();\n\t// Gets the new state.\n\tCmsTriStateCheckBox.State getState();\n\t// Gets the new text.\n\tjava.lang.String getText();\n\t// Sets the action text.\n\tvoid setAction​(java.lang.String action);\n\t// Sets the new state.\n\tvoid setState​(CmsTriStateCheckBox.State state);\n\t// Sets the new text.\n\tvoid setText​(java.lang.String text);\n}", "des": "Data with which to update a check box."}
{"index": 8361, "code": "Interface CmsQuickLauncher.I_ButtonTemplates {\n\t// Generates the icon button HTML.\n\tcom.google.gwt.safehtml.shared.SafeHtml iconButtonHtml​(com.google.gwt.safehtml.shared.SafeHtml iconHtml, java.lang.String titel);\n\t// Generates the image button HTML.\n\tcom.google.gwt.safehtml.shared.SafeHtml imageButtonHtml​(java.lang.String imageUri, java.lang.String titel);\n}", "des": "The button HTML generator templates."}
{"index": 8362, "code": "Interface CmsQuickLauncher.I_QuickLaunchHandler {\n\t// Gets the quick launch parameters.\n\torg.opencms.gwt.shared.CmsQuickLaunchParams getParameters();\n\t// Processes a click on a quick launch item.\n\tvoid handleQuickLaunch​(org.opencms.gwt.shared.CmsQuickLaunchData data);\n}", "des": "The quick launch handler interface."}
{"index": 8363, "code": "Class CmsRadioSelectWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8364, "code": "Class CmsRecentTab {\n\t// Returns the item list.\n\tCmsList<CmsListItem> getList();\n\t// Returns the scroll panel.\n\tCmsScrollPanel getScrollPanel();\n}", "des": "Content of the tool-bar menu recent tab."}
{"index": 8365, "code": "Class CmsRefreshMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu update sitemap entry."}
{"index": 8366, "code": "Enum CmsReloadMode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsReloadMode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsReloadMode[] values();\n}", "des": "An enum specifying whose values specify whether an entry or its parent need to be reloaded."}
{"index": 8367, "code": "Class CmsRemovedElementDeletionDialog {\n\t// Click handler for the cancel button.\n\tprotected void onClickCancel​(com.google.gwt.event.dom.client.ClickEvent e);\n\t// Click handler for the ok button.\n\tprotected void onClickOk​(com.google.gwt.event.dom.client.ClickEvent e);\n}", "des": "Dialog for asking the user whether elements which were removed from the container page should be deleted."}
{"index": 8368, "code": "Class CmsRemovedElementDeletionDialog.Messages {\n\t// Message accessor.\n\tstatic java.lang.String messageCancel();\n\t// Message accessor.\n\tstatic java.lang.String messageMainText();\n\t// Message accessor.\n\tstatic java.lang.String messageOk();\n\t// Message accessor.\n\tstatic java.lang.String messageTitle();\n}", "des": "Class with message accessors for the UiBinder."}
{"index": 8369, "code": "Class CmsRemoveMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu remove from navigation entry."}
{"index": 8370, "code": "Class CmsRemoveOptionButton {\n\t// Checks if this button should be visible according to the elements state.\n\tboolean checkVisibility();\n\t// Executed on button click.\n\tvoid onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "The selection option."}
{"index": 8371, "code": "Class CmsRenameMessages {\n\t// Message accessor.\n\tstatic java.lang.String messageCancel();\n\t// Message accessor.\n\tstatic java.lang.String messageDialogTitle();\n\t// Message accessor.\n\tstatic java.lang.String messageNewNameLabel();\n\t// Message accessor.\n\tstatic java.lang.String messageOk();\n\t// Message accessor.\n\tstatic java.lang.String messageOldNameLabel();\n\t// Message accessor.\n\tstatic java.lang.String messageRenameMenuText();\n}", "des": "Message accessor class for the Rename dialog."}
{"index": 8372, "code": "Class CmsRenameView {\n\t// Gets the buttons which should be inserted into the parent dialog.\n\tjava.util.List<CmsPushButton> getDialogButtons();\n\t// Event handler for the Cancel button.\n\tprotected void onClickCancel​(com.google.gwt.event.dom.client.ClickEvent e);\n\t// Event handler for the OK button.\n\tprotected void onClickOk​(com.google.gwt.event.dom.client.ClickEvent e);\n\t// Sets the dialog in which this view is contained.\n\tvoid setDialog​(CmsPopup popup);\n}", "des": "The dialog contents of the 'Rename' dialog."}
{"index": 8373, "code": "Class CmsReplace {\n\t// Returns the context menu command according to I_CmsHasContextMenuCommand.\n\tstatic I_CmsContextMenuCommand getContextMenuCommand();\n\t// The action that is executed on click depends on the concrete implementation of a menu item.\n\tvoid onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "The replace resource context menu entry."}
{"index": 8374, "code": "Class CmsRequestCounter {\n\t// Decrements the request counter.\n\tvoid decrement();\n\t// Increments the request counter.\n\tvoid increment();\n\t// Sets the callback.\n\tvoid setCallback​(I_CmsBooleanCallback callback);\n}", "des": "Keeps track of currently running requests for the purpose of enabling or disabling a waiting indicator."}
{"index": 8375, "code": "Class CmsResourceInfoConfirmDialog {\n\t// Displays the dialog.\n\tvoid display();\n\t// Gets the cancel button text.\n\tjava.lang.String getCancelText();\n\t// Gets the dialog title.\n\tjava.lang.String getCaption();\n\t// Gets the OK button text.\n\tjava.lang.String getOkText();\n\t// Gets the dialog text.\n\tjava.lang.String getText();\n\t// Method to execute when the user confirms the action.\n\tvoid onConfirm();\n}", "des": "Confirm dialog with a resource info box."}
{"index": 8376, "code": "Class CmsResourceInfoLine {\n\tjava.lang.String getText();\n\t// Sets the label text.\n\tvoid setLabel​(java.lang.String label);\n\tvoid setText​(java.lang.String text);\n\t// Enables or disables the use of HTML in the content field.\n\tvoid setUseHtml​(boolean useHtml);\n}", "des": "A single information item for the resource information dialog."}
{"index": 8377, "code": "Class CmsResourceInfoMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu resource info entry."}
{"index": 8378, "code": "Class CmsResourceInfoView {\n\t// Initializes the content.\n\tvoid initContent​(org.opencms.gwt.shared.CmsResourceStatusBean status);\n\t// This method should be called when a descendant widget changes its size.\n\tvoid onResizeDescendant();\n}", "des": "A widget used to display various resource information to a user."}
{"index": 8379, "code": "Class CmsResourceRelationView {\n\t// Creates and renders the resource boxes for the related resources.\n\tprotected void fill();\n\t// Initializes the content.\n\tvoid initContent​(org.opencms.gwt.shared.CmsResourceStatusBean status);\n\t// This method should be called when a descendant widget changes its size.\n\tvoid onResizeDescendant();\n\t// Sets the popup which contains this widget.\n\tvoid setPopup​(CmsPopup popup);\n}", "des": "Widget which shows which contents refer to a resource."}
{"index": 8380, "code": "Enum CmsResourceRelationView.Mode {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsResourceRelationView.Mode valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsResourceRelationView.Mode[] values();\n}", "des": "Enum for the display mode."}
{"index": 8381, "code": "Class CmsResourceStateUtil {\n\t// Returns the human-readable name of a resource state.\n\tstatic java.lang.String getStateName​(org.opencms.db.CmsResourceState state);\n\t// Returns the text style for a given resource state.\n\tstatic java.lang.String getStateStyle​(org.opencms.db.CmsResourceState state);\n}", "des": "Utility class for the publish dialog."}
{"index": 8382, "code": "Class CmsRestoreView {\n\t// Handler for the cancel button.\n\tprotected void onClickCancel​(com.google.gwt.event.dom.client.ClickEvent e);\n\t// Click handler for the OK button.\n\tprotected void onClickOk​(com.google.gwt.event.dom.client.ClickEvent e);\n\t// Sets the popup in which this widget is displayed.\n\tvoid setPopup​(CmsPopup popup);\n}", "des": "The content widget for the restore dialog."}
{"index": 8383, "code": "Class CmsResultItemWidget {\n\t// Gets the image tile.\n\tCmsResultItemWidget.ImageTile getImageTile();\n\t// Indicates wther there is a tile view available for this widget.\n\tboolean hasTileView();\n\tprotected void onDetach();\n\t// Initializes the title attribute of the subtitle line.\n\tvoid setSubtitleTitle​(java.lang.String subtitleTitle);\n}", "des": "The result list item widget."}
{"index": 8384, "code": "Class CmsResultsBackwardsScrollHandler {\n\t// Checks whether more items can be loaded at the front of the list.\n\tboolean hasMore();\n\t// Loads a page with a given index.\n\tprotected void loadPage​(int pageNum);\n\t// Loads the page before the first shown page.\n\tprotected void loadPreviousPage();\n\tvoid onScroll​(com.google.gwt.event.dom.client.ScrollEvent event);\n\t// Updates the handler with a new search bean.\n\tvoid updateSearchBean​(org.opencms.ade.galleries.shared.CmsGallerySearchBean searchBean);\n}", "des": "Scroll handler class which loads more items in the front of the search result list when the user scrolls to the top."}
{"index": 8385, "code": "Enum CmsResultsTab.ParamType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsResultsTab.ParamType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsResultsTab.ParamType[] values();\n}", "des": "Enum representing different options for the results tab."}
{"index": 8386, "code": "Class CmsRewriteAliasTable {\n\t// Gets the list of rows internally used by the data provider for this table.\n\tjava.util.List<org.opencms.gwt.shared.alias.CmsRewriteAliasTableRow> getLiveDataList();\n\t// Gets the list of selected rows.\n\tjava.util.List<org.opencms.gwt.shared.alias.CmsRewriteAliasTableRow> getSelectedRows();\n\tcom.google.gwt.view.client.MultiSelectionModel<org.opencms.gwt.shared.alias.CmsRewriteAliasTableRow> getSelectionModel();\n}", "des": "Table class used for editing rewrite aliases."}
{"index": 8387, "code": "Class CmsRpcPrefetcher {\n\t// Deserializes the prefetched RPC data with the given dictionary name.\n\tstatic java.lang.Object getSerializedObjectFromDictionary​(java.lang.Object asyncService, java.lang.String dictionaryName);\n\t// Deserializes the prefetched RPC data.\n\tstatic java.lang.Object getSerializedObjectFromString​(java.lang.Object asyncService, java.lang.String serializedData);\n}", "des": "Utility class for deserializing prefetched RPC data."}
{"index": 8388, "code": "Class CmsSearchParamPanel {\n\t// Calls to the result tab to remove parameters.\n\tprotected void onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n\t// Sets the text content of the parameters panel.\n\tvoid setContent​(java.lang.String content, java.lang.String paramKey);\n}", "des": "A panel displaying search parameters associated with a gallery tab."}
{"index": 8389, "code": "Enum CmsSearchTab.ParamType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsSearchTab.ParamType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsSearchTab.ParamType[] values();\n}", "des": "The parameter types of this tab."}
{"index": 8390, "code": "Class CmsSelectComboWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8391, "code": "Class CmsSelectionInput {\n\t// Returns the input box.\n\tCmsSimpleTextBox getTextBox();\n\t// Hides the fader.\n\tvoid hideFader();\n\t// Sets the value select dialog open command.\n\tvoid setOpenCommand​(com.google.gwt.user.client.Command openCommand);\n\t// Shows the fader.\n\tvoid showFader();\n}", "des": "Text input field with value select opener button and value fader for overflowing values."}
{"index": 8392, "code": "Class CmsSelectWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8393, "code": "Class CmsSeoMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "The context menu entry used for opening the \"alias editor\" dialog."}
{"index": 8394, "code": "Class CmsSerialDateValue {\n\t// Register an observer.\n\tvoid registerValueChangeObserver​(I_CmsSerialDateValueChangeObserver obs);\n\t// Set the value as provided.\n\tvoid setValue​(java.lang.String value);\n\t// Convert the information from the wrapper to a JSON object.\n\tcom.google.gwt.json.client.JSONValue toJson();\n\t// Unregister an observer.\n\tvoid unregisterValueChangeObserver​(I_CmsSerialDateValueChangeObserver obs);\n}", "des": "Client-side implementation of I_CmsSerialDateValue."}
{"index": 8395, "code": "Class CmsSerialDateWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory for the serial date widget."}
{"index": 8396, "code": "Class CmsSetDefaultModelMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Context menu entry for copying a model page."}
{"index": 8397, "code": "Class CmsSettingsOptionButton {\n\t// Checks if this button should be visible according to the elements state.\n\tboolean checkVisibility();\n\t// Executed on button click.\n\tvoid onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "The selection option."}
{"index": 8398, "code": "Class CmsShowMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu show in navigation entry."}
{"index": 8399, "code": "Class CmsShowWorkplace {\n\t// Returns the context menu command according to I_CmsHasContextMenuCommand.\n\tstatic I_CmsContextMenuCommand getContextMenuCommand();\n\t// Opens the workplace.\n\tstatic void openWorkplace​(org.opencms.util.CmsUUID structureId, boolean classic);\n}", "des": "Provides a method to open the workplace."}
{"index": 8400, "code": "Class CmsSimpleDecoratedPanel {\n\t// Adds a style name to the decoration box.\n\tvoid addDecorationBoxStyle​(java.lang.String cssClass);\n\t// Returns the widget at the given position.\n\tcom.google.gwt.user.client.ui.Widget getWidget​(int index);\n\t// Truncates long text and sets the original text to the title attribute.\n\tvoid truncate​(java.lang.String textMetricsPrefix, int widgetWidth);\n}", "des": "A panel containing two sub-panels next to each other , one for 'decorations' (check boxes, etc.) and one containing a main widget."}
{"index": 8401, "code": "Class CmsSimpleFormFieldPanel {\n\t// Returns the default group name.\n\tjava.lang.String getDefaultGroup();\n\t// Renders a collection of fields.\n\tvoid renderFields​(java.util.Collection<I_CmsFormField> fields);\n}", "des": "A simple form field container widget."}
{"index": 8402, "code": "Class CmsSimplePropertyEditor {\n\t// Method to add special, non-property fields.\n\tprotected void addSpecialFields();\n\t// Builds and renders the fields for the properties.\n\tvoid buildFields();\n\t// Checks whether an empty string should always be allowed for the property, regardless of validation settings.\n\tprotected boolean isAlwaysAllowEmpty​(java.lang.String name);\n\t// Sets up the widget which will contain the input fields for the properties.\n\tprotected void setupFieldContainer();\n}", "des": "The sitemap entry editor class for the VFS mode."}
{"index": 8403, "code": "Class CmsSitemapChangeEvent {\n\tprotected void dispatch​(I_CmsSitemapChangeHandler handler);\n\tcom.google.gwt.event.shared.GwtEvent.Type<I_CmsSitemapChangeHandler> getAssociatedType();\n\t// Returns the change.\n\torg.opencms.ade.sitemap.shared.CmsSitemapChange getChange();\n\t// Gets the event type associated with change events.\n\tstatic com.google.gwt.event.shared.GwtEvent.Type<I_CmsSitemapChangeHandler> getType();\n}", "des": "Sitemap change event."}
{"index": 8404, "code": "Class CmsSitemapLoadEvent {\n\tprotected void dispatch​(I_CmsSitemapLoadHandler handler);\n\tcom.google.gwt.event.shared.GwtEvent.Type<I_CmsSitemapLoadHandler> getAssociatedType();\n\t// Returns the entry.\n\torg.opencms.ade.sitemap.shared.CmsClientSitemapEntry getEntry();\n\t// Gets the event type associated with change events.\n\tstatic com.google.gwt.event.shared.GwtEvent.Type<I_CmsSitemapLoadHandler> getType();\n\t// Returns if the entry should be opened.\n\tboolean isSetOpen();\n}", "des": "Sitemap load event."}
{"index": 8405, "code": "Class CmsStringWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8406, "code": "Class CmsStyleVariable {\n\t// Returns the current style value.\n\tjava.lang.String getValue();\n\t// Removes the previous value of the style variable from all associated ui objects and adds the new value as a style name to all of them.\n\tvoid setValue​(java.lang.String newStyle);\n}", "des": "This is a helper class for changing GWT UIObjects' styles between a set of given values."}
{"index": 8407, "code": "Class CmsSubSitemapMenuEntry {\n\t// Executes the context menu action.\n\tvoid execute();\n\t// Executed when the context-menu is opened.\n\tvoid onShow();\n}", "des": "Sitemap context menu create sub sitemap entry."}
{"index": 8408, "code": "Class CmsTextareaWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8409, "code": "Class CmsToolbarClipboardButton {\n\t// Enables/disables the clear deleted list button.\n\tvoid enableClearDeleted​(boolean enable);\n\t// Enables/disables the clear modified list button.\n\tvoid enableClearModified​(boolean enable);\n\t// Initializes the menu tabs.\n\tprotected boolean initContent();\n}", "des": "Sitemap toolbar clipboard button."}
{"index": 8410, "code": "Class CmsToolbarContextButton {\n\t// Method executed when the button is activated.\n\tvoid onToolbarActivate();\n\t// Unregister the resize handler.\n\tvoid onToolbarDeactivate();\n\t// Opens the menu and fires the on toggle event.\n\tvoid openMenu();\n\t// Sets the menu context.\n\tvoid setMenuContext​(org.opencms.gwt.shared.CmsCoreData.AdeContext menuContext);\n\t// Creates the menu and adds it to the panel.\n\tvoid showMenu​(java.util.List<I_CmsContextMenuEntry> menuEntries);\n}", "des": "The context tool-bar menu button."}
{"index": 8411, "code": "Class CmsToolbarEditButton {\n\t// Creates an element options button associated with this button and assigns the click-handler.\n\tCmsElementOptionButton createOptionForElement​(CmsContainerPageElementPanel element);\n\t// Method is executed when the element option button is clicked.\n\tvoid onElementClick​(com.google.gwt.event.dom.client.ClickEvent event, CmsContainerPageElementPanel element);\n}", "des": "The edit button holding all edit related methods."}
{"index": 8412, "code": "Class CmsToolbarFavLocationButton {\n\t// Method executed when the button is activated.\n\tvoid onToolbarActivate();\n\t// Executed when the tool-bar button is clicked.\n\tvoid onToolbarClick();\n\t// Method executed when the button is deactivated.\n\tvoid onToolbarDeactivate();\n}", "des": "The toolbar button for the favorite dialog."}
{"index": 8413, "code": "Class CmsToolbarGalleryMenu {\n\t// Gets the drag handler.\n\tprotected CmsDNDHandler getDragHandler();\n\t// Returns the popup content.\n\tprotected CmsPopup getPopup();\n\t// Method executed when the button is activated.\n\tvoid onToolbarActivate();\n\t// Method executed when the button is deactivated.\n\tvoid onToolbarDeactivate();\n\t// Updates the gallery data.\n\tvoid updateGalleryData​(org.opencms.ade.containerpage.shared.CmsContainerPageGalleryData galleryData, boolean viewChanged);\n}", "des": "The gallery tool-bar menu."}
{"index": 8414, "code": "Class CmsToolbarInfoButton {\n\t// Checks whether an option button should be shown for a container page element.\n\tboolean isOptionAvailable​(CmsContainerPageElementPanel element);\n\t// Method is executed when the element option button is clicked.\n\tvoid onElementClick​(com.google.gwt.event.dom.client.ClickEvent event, CmsContainerPageElementPanel element);\n}", "des": "Option bar button for displaying resource information."}
{"index": 8415, "code": "Class CmsToolbarListAddButton {\n\t// Checks whether an option button should be shown for a container page element.\n\tboolean isOptionAvailable​(CmsContainerPageElementPanel element);\n\t// Method is executed when the element option button is clicked.\n\tvoid onElementClick​(com.google.gwt.event.dom.client.ClickEvent event, CmsContainerPageElementPanel containerElement);\n}", "des": "Button to open the dialog for adding list elements"}
{"index": 8416, "code": "Class CmsToolbarListManagerButton {\n\t// Checks whether an option button should be shown for a container page element.\n\tboolean isOptionAvailable​(CmsContainerPageElementPanel element);\n\t// Method is executed when the element option button is clicked.\n\tvoid onElementClick​(com.google.gwt.event.dom.client.ClickEvent event, CmsContainerPageElementPanel element);\n}", "des": "Button to open the list manager for list configuration contents."}
{"index": 8417, "code": "Class CmsToolbarNewGalleryButton {\n\t// Initializes the menu tabs.\n\tprotected boolean initContent();\n\t// Sets the available gallery types.\n\tprotected void setGalleryTypes​(java.util.Collection<org.opencms.ade.sitemap.shared.CmsGalleryType> galleryTypes);\n}", "des": "The create new gallery menu."}
{"index": 8418, "code": "Class CmsToolbarPopup {\n\t// Calculates the popup height to use.\n\tstatic int getAvailableHeight();\n\t// Calculates the popup width to use.\n\tstatic int getAvailableWidth();\n\t// Positions the popup below the toolbar button.\n\tvoid position();\n\t// Defers execution of the position() method.\n\tvoid positionDeferred();\n\t// Sets the isToolbarMode.\n\tvoid setToolbarMode​(boolean isToolbarMode);\n}", "des": "A popup which can be displayed below buttons in a toolbar."}
{"index": 8419, "code": "Class CmsToolbarPublishButton {\n\t// Method executed when the button is activated.\n\tvoid onToolbarActivate();\n\t// Method executed when the button is deactivated.\n\tvoid onToolbarDeactivate();\n}", "des": "The publish button holding all publish related methods."}
{"index": 8420, "code": "Class CmsToolbarPublishButton {\n\t// Method executed when the button is activated.\n\tvoid onToolbarActivate();\n\t// Method executed when the button is deactivated.\n\tvoid onToolbarDeactivate();\n}", "des": "A simplified publish button for the Toolbar direct edit provider."}
{"index": 8421, "code": "Class CmsToolbarRemoveButton {\n\t// Checks whether an option button should be shown for a container page element.\n\tboolean isOptionAvailable​(CmsContainerPageElementPanel element);\n\t// Method is executed when the element option button is clicked.\n\tvoid onElementClick​(com.google.gwt.event.dom.client.ClickEvent event, CmsContainerPageElementPanel element);\n}", "des": "The remove button holding all remove related methods."}
{"index": 8422, "code": "Class CmsToolbarResetButton {\n\t// Method executed when the button is activated.\n\tvoid onToolbarActivate();\n\t// Method executed when the button is deactivated.\n\tvoid onToolbarDeactivate();\n}", "des": "The reset button holding all related methods."}
{"index": 8423, "code": "Class CmsToolbarSaveButton {\n\t// Method executed when the button is activated.\n\tvoid onToolbarActivate();\n\t// Method executed when the button is deactivated.\n\tvoid onToolbarDeactivate();\n}", "des": "The save button holding all related methods."}
{"index": 8424, "code": "Class CmsToolbarSelectionButton {\n\t// Returns the title.\n\tjava.lang.String getTitle();\n\t// Method is executed when the element option button is clicked.\n\tvoid onElementClick​(com.google.gwt.event.dom.client.ClickEvent event, CmsContainerPageElementPanel element);\n\t// Executed when the tool-bar button is clicked.\n\tvoid onToolbarClick();\n}", "des": "The button holding all selection related methods."}
{"index": 8425, "code": "Class CmsToolbarSelectionButton {\n\t// Method executed when the button is activated.\n\tvoid onToolbarActivate();\n\t// Executed when the tool-bar button is clicked.\n\tvoid onToolbarClick();\n\t// Method executed when the button is deactivated.\n\tvoid onToolbarDeactivate();\n\t// Sets the button to active (pushed, not disabled).\n\tvoid setActive​(boolean active);\n\t// Sets the visibility of the direct edit buttons.\n\tprotected void setDirectEditButtonsVisible​(boolean visible);\n}", "des": "The selection button for the direct edit provider."}
{"index": 8426, "code": "Class CmsToolbarSettingsButton {\n\t// Checks whether an option button should be shown for a container page element.\n\tboolean isOptionAvailable​(CmsContainerPageElementPanel element);\n\t// Method is executed when the element option button is clicked.\n\tvoid onElementClick​(com.google.gwt.event.dom.client.ClickEvent event, CmsContainerPageElementPanel element);\n}", "des": "The properties button holding all properties related methods."}
{"index": 8427, "code": "Class CmsToolbarSitemapButton {\n\t// Method executed when the button is activated.\n\tvoid onToolbarActivate();\n\t// Method executed when the button is deactivated.\n\tvoid onToolbarDeactivate();\n}", "des": "The sitemap button holding all related methods."}
{"index": 8428, "code": "Class CmsTranslate {\n\t// Applies the inverse of the transformation to a point.\n\torg.opencms.ade.galleries.shared.CmsPoint transformBack​(org.opencms.ade.galleries.shared.CmsPoint point);\n\t// Applies the transformation to a point.\n\torg.opencms.ade.galleries.shared.CmsPoint transformForward​(org.opencms.ade.galleries.shared.CmsPoint point);\n}", "des": "Simple translation by x/y offset."}
{"index": 8429, "code": "Enum CmsTriStateCheckBox.State {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsTriStateCheckBox.State valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsTriStateCheckBox.State[] values();\n}", "des": "The possible check box states."}
{"index": 8430, "code": "Class CmsUgcWrapper {\n\t// Checks if a form field is a file input field.\n\tstatic boolean isFileField​(com.google.gwt.dom.client.InputElement elem);\n\t// Sets the form session.\n\tvoid setFormSession​(CmsClientUgcSession session);\n\t// Uploads files from the given file input fields.\n\tvoid uploadFields​(java.util.Set<java.lang.String> fields, com.google.common.base.Function<java.util.Map<java.lang.String,​java.lang.String>,​java.lang.Void> filenameCallback, I_CmsErrorCallback errorCallback);\n}", "des": "Widget used to wrap and manage the state of forms for which the form editing API is used."}
{"index": 8431, "code": "Enum CmsUndoRedoHandler.ChangeType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic CmsUndoRedoHandler.ChangeType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic CmsUndoRedoHandler.ChangeType[] values();\n}", "des": "The change types."}
{"index": 8432, "code": "Class CmsUniqueActiveItemContainer {\n\t// Removes the current item.\n\tvoid clear();\n\t// Removes the current item only if it is the same object as the given parameter.\n\tvoid clearIfMatches​(I_CmsUniqueActiveItem item);\n\t// Sets the active item.\n\tvoid setActiveItem​(I_CmsUniqueActiveItem item);\n}", "des": "Container which contains at most one I_CmsUniqueActiveItem."}
{"index": 8433, "code": "Class CmsUpload {\n\t// Exports the open dialog method.\n\tstatic void exportOpenUploadDialog();\n\t// Retrieves the close link global variable as a string.\n\tprotected java.lang.String getCloseLink();\n\t// Retrieves the dialog mode global variable as a string.\n\tprotected java.lang.String getDialogMode();\n\tvoid onModuleLoad();\n}", "des": "Upload dialog entry class."}
{"index": 8434, "code": "Class CmsUploadDialogFileApiImpl {\n\t// Returns the massage for too large files.\n\tjava.lang.String getFileSizeTooLargeMessage​(CmsFileInfo file);\n\t// Returns true if the file is too large, false otherwise.\n\tboolean isTooLarge​(CmsFileInfo cmsFileInfo);\n\t// Updates the file summary.\n\tvoid updateSummary();\n}", "des": "Provides the upload dialog for file API support."}
{"index": 8435, "code": "Class CmsUploadMessages {\n\t// Message text accessor.\n\tstatic java.lang.String dialogTitle();\n\t// Message text accessor.\n\tstatic java.lang.String innerText​(java.lang.String folder);\n\t// Message text accessor.\n\tstatic java.lang.String upload();\n}", "des": "Class with static accessor methods for text messages."}
{"index": 8436, "code": "Class CmsUploadProgressInfo {\n\t// Finishes the state of the progress bar.\n\tvoid finish();\n\t// Sets the upload content length.\n\tvoid setContentLength​(long contentLength);\n\t// Sets the progress information.\n\tvoid setProgress​(org.opencms.gwt.shared.CmsUploadProgessInfo info);\n}", "des": "Provides the upload progress information."}
{"index": 8437, "code": "Class CmsUploadPropertyEditor {\n\t// Checks whether an empty string should always be allowed for the property, regardless of validation settings.\n\tprotected boolean isAlwaysAllowEmpty​(java.lang.String name);\n\t// Sets up the widget which will contain the input fields for the properties.\n\tprotected void setupFieldContainer();\n}", "des": "A property editor for the upload property dialog."}
{"index": 8438, "code": "Class CmsUserSettingsDialog {\n\t// Loads the user settings dialog.\n\tstatic void loadAndShow​(java.lang.Runnable finishAction);\n\tprotected void onLoad();\n\t// The method which should be called when a CmsForm is submitted.\n\tvoid onSubmitForm​(CmsForm form, java.util.Map<java.lang.String,​java.lang.String> fieldValues, java.util.Set<java.lang.String> editedFields);\n\t// Updates the panel height depending on the content of the current tab.\n\tprotected void updateHeight();\n}", "des": "Dialog used for changing the user settings."}
{"index": 8439, "code": "Class CmsUserSettingsFormFieldPanel {\n\t// Returns the default group name.\n\tjava.lang.String getDefaultGroup();\n\t// Gets the tab panel.\n\tCmsTabbedPanel<CmsScrollPanel> getTabPanel();\n\t// Renders a collection of fields.\n\tvoid renderFields​(java.util.Collection<I_CmsFormField> fields);\n}", "des": "Form panel for editing user settings."}
{"index": 8440, "code": "Class CmsValidationScheduler {\n\t// This method should be called by the validation controller when it has finished running.\n\tvoid executeNext();\n\t// Returns the singleton instance of the validation scheduler.\n\tstatic CmsValidationScheduler get();\n\t// This schedules a new validation to be run after all currently scheduled or running validations have finished.\n\tvoid schedule​(CmsValidationController action);\n}", "des": "This is a helper class for scheduling form validations."}
{"index": 8441, "code": "Class CmsVfsFileWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "File widget factory."}
{"index": 8442, "code": "Class CmsVfsImageWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Initializes this class.\n\tstatic void initClass();\n}", "des": "Factory to generate basic input widget."}
{"index": 8443, "code": "Class CmsVUI {\n\t// Clears the stored focus.\n\tvoid clearStoredFocus();\n\t// Clears the stored focus for the current UI instance.\n\tstatic void clearStoredFocusForCurrentInstance();\n\tvoid focusStoredElement();\n\tprotected void onLoad();\n\tvoid storeFocus();\n}", "des": "UI widget overriding some functionality from the Vaadin implementation."}
{"index": 8444, "code": "Class CmsWidthConstants {\n\t// Lower bound for 'large'.\n\tstatic java.lang.String largeLow();\n\t// Upper bound for medium.\n\tstatic java.lang.String mediumHigh();\n\t// Lower bound for 'medium'.\n\tstatic java.lang.String mediumLow();\n\t// Upper bound for 'small'.\n\tstatic java.lang.String smallHigh();\n}", "des": "Adds constants / static methods for accessing the width class breakpoints."}
{"index": 8445, "code": "Class DocumentStyleImplIE9 {\n\t// Returns the computed style from the DOM object.\n\tprotected java.lang.String getComputedStyle​(com.google.gwt.dom.client.Element elem, java.lang.String name);\n\t// Transforms the CSS style name to the name of the javascript style property.\n\tjava.lang.String getPropertyName​(java.lang.String name);\n}", "des": "Helper class to retrieve the computed style of an element."}
{"index": 8446, "code": "Interface I_CmsAcceptDeclineCancelHandler {\n\t// Executed on accept click.\n\tvoid onAccept();\n\t// Executed on decline click.\n\tvoid onDecline();\n}", "des": "Handles the clicks on the 'Yes', 'No' and 'Cancel' buttons of the dialog."}
{"index": 8447, "code": "Interface I_CmsActionHandler {\n\t// Leaves the current page calling the target URI.\n\tvoid leavePage​(java.lang.String targetUri);\n\t// Called when site and or project have been changed.\n\tvoid onSiteOrProjectChange​(java.lang.String sitePath, java.lang.String serverLink);\n\t// Reloads the resource edited.\n\tvoid refreshResource​(org.opencms.util.CmsUUID structureId);\n}", "des": "Handles actions."}
{"index": 8448, "code": "Enum I_CmsButton.ButtonColor {\n\t// Returns the additional classes.\n\tjava.lang.String getClassName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsButton.ButtonColor valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsButton.ButtonColor[] values();\n}", "des": "Available button colors."}
{"index": 8449, "code": "Enum I_CmsButton.ButtonStyle {\n\t// Returns the additional classes.\n\tjava.lang.String[] getAdditionalClasses();\n\t// Returns the classes stored in the array as space separated list.\n\tjava.lang.String getCssClassName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsButton.ButtonStyle valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsButton.ButtonStyle[] values();\n}", "des": "Available button styles."}
{"index": 8450, "code": "Enum I_CmsButton.Size {\n\t// Returns the CSS class name of this style.\n\tjava.lang.String getCssClassName();\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsButton.Size valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsButton.Size[] values();\n}", "des": "CSS style variants."}
{"index": 8451, "code": "Interface I_CmsCellTableCss {\n\t// CSS class accessor.\n\tjava.lang.String cmsCellError();\n\t// CSS class accessor.\n\tjava.lang.String cmsRowErrors();\n\t// CSS class accessor.\n\tjava.lang.String statusError();\n\t// CSS class accessor.\n\tjava.lang.String statusOk();\n}", "des": "CSS bundle for GWT cell tables used from ADE."}
{"index": 8452, "code": "Interface I_CmsDirectEditCss {\n\t// CSS class accessor.\n\tjava.lang.String directEditButtons();\n\t// CSS class accessor.\n\tjava.lang.String editableElement();\n\t// CSS class accessor.\n\tjava.lang.String expiredListElementOverlay();\n\t// CSS class accessor.\n\tjava.lang.String hideButtons();\n\t// CSS class accessor.\n\tjava.lang.String optionBar();\n\t// CSS class accessor.\n\tjava.lang.String showButtons();\n}", "des": "CSS resource interface for the classic Direct Edit Buttons."}
{"index": 8453, "code": "Interface I_CmsDragHandle {\n\t// Returns the draggable item.\n\tI_CmsDraggable getDraggable();\n\t// Returns the handle element.\n\tcom.google.gwt.dom.client.Element getElement();\n\t// Sets the title attribute.\n\tvoid setTitle​(java.lang.String title);\n}", "des": "Drag and drop drag handle."}
{"index": 8454, "code": "Interface I_CmsElementToolbarContext {\n\t// Show the toolbar.\n\tvoid activateToolbarContext();\n\t// Hide the toolbar.\n\tvoid deactivateToolbarContext();\n}", "des": "Common interface for enabling/disabling different types of toolbars when using the touch-only mode of the page editor."}
{"index": 8455, "code": "Interface I_CmsEmbeddedDialogFrame {\n\t// Hides the iframe.\n\tvoid hide();\n\t// Sets the dialog loader.\n\tvoid installEmbeddedDialogLoader​(I_CmsEmbeddedDialogLoader loader);\n\t// Triggers loading of a new dialog in the iframe.\n\tvoid loadDialog​(java.lang.String dialogInfoJson, I_CmsEmbeddedDialogHandlerJsCallbacks handler);\n\t// Triggers initialization of the iframe.\n\tvoid preload();\n}", "des": "Interface to expose the embedded frame methods as Javascript methods so they can be called from a different GWT context."}
{"index": 8456, "code": "Interface I_CmsEmbeddedDialogHandlerJsCallbacks {\n\t// Called on dialog close.\n\tvoid finish​(java.lang.String resources);\n\t// Called when site and or project have been changed.\n\tvoid finishForProjectOrSiteChange​(java.lang.String sitePath, java.lang.String serverLink);\n\t// Navigates to the given URI.\n\tvoid leavePage​(java.lang.String targetUri);\n\t// Reloads the current page.\n\tvoid reload();\n\t// Calls the principle select handler and closes the dialog frame.\n\tvoid selectString​(java.lang.String principle);\n}", "des": "Interface used to export callback methods from CmsEmbeddedDialogHandler as JavaScript methods."}
{"index": 8457, "code": "Interface I_CmsFloatDecoratedPanelCss {\n\t// CSS class accessor.\n\tjava.lang.String decorationBox();\n\t// CSS class accessor.\n\tjava.lang.String decorationBoxSmall();\n\t// CSS class accessor.\n\tjava.lang.String floatBox();\n\t// CSS class accessor.\n\tjava.lang.String floatDecoratedPanel();\n\t// CSS class accessor.\n\tjava.lang.String primary();\n}", "des": "CSS resource for the CmsFloatDecoratedPanel class."}
{"index": 8458, "code": "Enum I_CmsFormField.ValidationStatus {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsFormField.ValidationStatus valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsFormField.ValidationStatus[] values();\n}", "des": "An enum which represents the validation status of a field."}
{"index": 8459, "code": "Interface I_CmsFormHandler {\n\t// Returns true if properties are currently being submitted.\n\tboolean isSubmitting();\n\t// This method is called when the validation triggered by an attempt to submit the form has finished.\n\tvoid onSubmitValidationResult​(CmsForm form, boolean ok);\n\t// This method is called when the normal validation triggered by changing fields has finished.\n\tvoid onValidationResult​(CmsForm form, boolean ok);\n}", "des": "The interface for objects which should be notified when a CmsForm is successfully submitted."}
{"index": 8460, "code": "Enum I_CmsFormWidget.FieldType {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsFormWidget.FieldType valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsFormWidget.FieldType[] values();\n}", "des": "Field type constants."}
{"index": 8461, "code": "Interface I_CmsGroupEditorOption {\n\t// Checks if this button should be visible according to the elements state.\n\tboolean checkVisibility();\n\t// Executed on button click.\n\tvoid onClick​(com.google.gwt.event.dom.client.ClickEvent event);\n}", "des": "Common interface for option buttons within the inheritance container editor."}
{"index": 8462, "code": "Enum I_CmsHasDisplayDirection.Direction {\n\t// Returns the enum constant of this type with the specified name.\n\tstatic I_CmsHasDisplayDirection.Direction valueOf​(java.lang.String name);\n\t// Returns an array containing the constants of this enum type, in the order they are declared.\n\tstatic I_CmsHasDisplayDirection.Direction[] values();\n}", "des": "The display directions."}
{"index": 8463, "code": "Interface I_CmsHasGhostValue {\n\t// Enables or disables ghost mode, if possible.\n\tvoid setGhostMode​(boolean enable);\n\t// Sets the \"ghost value\" of the widget and optionally sets it to \"ghost mode\".\n\tvoid setGhostValue​(java.lang.String value, boolean isGhostMode);\n}", "des": "Interface for widgets which can contain a \"ghost value\"."}
{"index": 8464, "code": "Interface I_CmsHistoryActionHandler {\n\t// Reverts a resource to a given historical state.\n\tvoid revert​(org.opencms.gwt.shared.CmsHistoryResourceBean historyRes);\n\t// Sets the action which should be executed after reverting the resource.\n\tvoid setPostRevertAction​(java.lang.Runnable action);\n\t// Show the preview for a given historical resource.\n\tvoid showPreview​(org.opencms.gwt.shared.CmsHistoryResourceBean historyRes);\n}", "des": "Interface for classes which implement the actions that can be triggered from the history dialog."}
{"index": 8465, "code": "Interface I_CmsInlineFormParent {\n\t// Adopts the given widget as a child widget.\n\tvoid adoptWidget​(com.google.gwt.user.client.ui.IsWidget widget);\n\t// The widget element.\n\tcom.google.gwt.dom.client.Element getElement();\n\t// Replaces the inner HTML of widget to reflect content data changes.\n\tvoid replaceHtml​(java.lang.String html);\n}", "des": "An inline form parent widget."}
{"index": 8466, "code": "Interface I_CmsInlineHtmlUpdateHandler {\n\t// Reinitializes the editing widget inside the form parent.\n\tvoid reinitWidgets​(I_CmsInlineFormParent formParent);\n\t// Updates the HTML inside the form parent according to the currently edited entiy data.\n\tvoid updateHtml​(I_CmsInlineFormParent formParent, com.google.gwt.user.client.Command onSuccess);\n}", "des": "Handles updates on the HTML required due to entity data changes during inline editing."}
{"index": 8467, "code": "Interface I_CmsInputLayoutBundle {\n\t// The CSS constants bundle.\n\tI_CmsConstantsBundle constants();\n\t// Accessor for css resource.\n\tI_CmsInputCss inputCss();\n}", "des": "Layout bundle."}
{"index": 8468, "code": "Interface I_CmsLayoutBundle {\n\t// Returns the attribute choice CSS.\n\tI_CmsLayoutBundle.I_AttributeChoice attributeChoice();\n\t// Returns the style CSS.\n\tI_CmsLayoutBundle.I_Style form();\n}", "des": "Bundle for CSS resources."}
{"index": 8469, "code": "Interface I_CmsLayoutBundle {\n\t// The CSS constants bundle.\n\tI_CmsConstantsBundle constants();\n\t// Access method.\n\tI_CmsLayoutBundle.I_CmsWidgetCss widgetCss();\n}", "des": "Content editor CSS resources bundle."}
{"index": 8470, "code": "Interface I_CmsLayoutBundle {\n\t// The accessor for the CSS constants bundle.\n\tI_CmsConstantsBundle constants();\n\t// Access method.\n\tI_CmsLayoutBundle.I_CmsContainerpageCss containerpageCss();\n\t// Access method.\n\tI_CmsLayoutBundle.I_CmsDragDropExtendedCss dragdropCss();\n\t// Access method.\n\tI_CmsLayoutBundle.I_CmsGroupContainer groupcontainerCss();\n}", "des": "Resource bundle to access CSS and image resources."}
{"index": 8471, "code": "Interface I_CmsLayoutBundle {\n\t// The CSS constants bundle.\n\tI_CmsConstantsBundle constants();\n\t// Access method.\n\tI_CmsLayoutBundle.I_CmsDialogCss dialogCss();\n}", "des": "Resource bundle to access CSS and image resources."}
{"index": 8472, "code": "Interface I_CmsLayoutBundle {\n\t// The CSS constants bundle.\n\tI_CmsConstantsBundle constants();\n\t// Access method.\n\tI_CmsLayoutBundle.I_CmsUploadCss uploadCss();\n}", "des": "Resource bundle to access CSS and image resources."}
{"index": 8473, "code": "Interface I_CmsLayoutBundle.I_ButtonBar {\n\t// Returns the button CSS class name.\n\tjava.lang.String button();\n\t// Returns the button bar CSS class name.\n\tjava.lang.String buttonBar();\n\t// Returns the CSS class which is set when the user is hovering over a button of the button bar.\n\tjava.lang.String hoverButton();\n\t// Returns the multi button bar CSS class name.\n\tjava.lang.String multiButtonBar();\n}", "des": "The button bar CSS."}
{"index": 8474, "code": "Interface I_CmsLayoutBundle.I_CmsAvailabilityCss {\n\t// Access method.\n\tjava.lang.String checkBox();\n\t// Access method.\n\tjava.lang.String dateBox();\n\t// Access method.\n\tjava.lang.String fieldsetSpacer();\n\t// Access method.\n\tjava.lang.String inlineBlock();\n\t// Access method.\n\tjava.lang.String inputCombination();\n\t// Access method.\n\tjava.lang.String labelColumn();\n\t// Access method.\n\tjava.lang.String principalIcon();\n\t// Access method.\n\tjava.lang.String responsabilityLabel();\n}", "des": "The context menu CSS classes."}
{"index": 8475, "code": "Interface I_CmsLayoutBundle.I_CmsCategoryDialogCss {\n\t// Access method.\n\tjava.lang.String criteriaList();\n\t// Access method.\n\tjava.lang.String infoLabel();\n\t// Access method.\n\tjava.lang.String tabOptions();\n}", "des": "The category CSS."}
{"index": 8476, "code": "Interface I_CmsLayoutBundle.I_CmsColorSelector {\n\t// Css class reader.\n\tjava.lang.String colorSelectorWidget();\n\t// Css class reader.\n\tjava.lang.String sliderMap();\n\t// Css class reader.\n\tjava.lang.String sliderMapOverlay();\n\t// Css class reader.\n\tjava.lang.String sliderMapSlider();\n\t// Css class reader.\n\tjava.lang.String sliderMapUnderlay();\n\t// Css class reader.\n\tjava.lang.String tableField();\n}", "des": "THe color selector CSS classes."}
{"index": 8477, "code": "Interface I_CmsLayoutBundle.I_CmsContentEditorCss {\n\t// Access method.\n\tjava.lang.String contentEditor();\n\t// Access method.\n\tjava.lang.String dataViewItem();\n}", "des": "The content editor dialog CSS."}
{"index": 8478, "code": "Interface I_CmsLayoutBundle.I_CmsContextmenuCss {\n\t// Access method.\n\tjava.lang.String cmsMenuBar();\n\t// Access method.\n\tjava.lang.String iconBox();\n\t// Access method.\n\tjava.lang.String menuInfoLabel();\n\t// Access method.\n\tjava.lang.String menuItemSeparator();\n\t// Access method.\n\tjava.lang.String menuPanel();\n}", "des": "The context menu CSS classes."}
{"index": 8479, "code": "Interface I_CmsLayoutBundle.I_CmsContextmenuItemCss {\n\t// Access method.\n\tjava.lang.String arrow();\n\t// Access method.\n\tjava.lang.String cmsMenuItem();\n\t// Access method.\n\tjava.lang.String disabled();\n\t// Access method.\n\tjava.lang.String label();\n\t// Access method.\n\tjava.lang.String selected();\n}", "des": "The context menu item CSS classes."}
{"index": 8480, "code": "Interface I_CmsLayoutBundle.I_CmsCroppingDialogCss {\n\t// Access method.\n\tjava.lang.String bottomPanel();\n\t// Access method.\n\tjava.lang.String button();\n\t// Access method.\n\tjava.lang.String croppingPanel();\n\t// Access method.\n\tjava.lang.String info();\n\t// Access method.\n\tjava.lang.String panel();\n\t// Access method.\n\tjava.lang.String topPanel();\n}", "des": "Cropping dialog CSS."}
{"index": 8481, "code": "Interface I_CmsLayoutBundle.I_CmsDateBoxCss {\n\t// Access method.\n\tjava.lang.String ampm();\n\t// Access method.\n\tjava.lang.String dateTime();\n\t// Access method.\n\tjava.lang.String time();\n}", "des": "DateBox css."}
{"index": 8482, "code": "Interface I_CmsLayoutBundle.I_CmsDragCss {\n\t// Access method.\n\tjava.lang.String dragPlaceholder();\n\t// Access method.\n\tjava.lang.String dragStarted();\n\t// Access method.\n\tjava.lang.String fullWindowDrag();\n}", "des": "The drag and drop CSS used by the base module."}
{"index": 8483, "code": "Interface I_CmsLayoutBundle.I_CmsDragDropCss {\n\t// Access method.\n\tjava.lang.String dragElement();\n\t// Access method.\n\tjava.lang.String dragging();\n}", "des": "The drag and drop CSS classes used also within the container-page CSS."}
{"index": 8484, "code": "Interface I_CmsLayoutBundle.I_CmsErrorDialogCss {\n\t// Access method.\n\tjava.lang.String details();\n\t// Access method.\n\tjava.lang.String errorIcon();\n\t// Access method.\n\tjava.lang.String message();\n}", "des": "The error dialog CSS classes."}
{"index": 8485, "code": "Interface I_CmsLayoutBundle.I_CmsFieldsetCss {\n\t// Access method.\n\tjava.lang.String content();\n\t// Access method.\n\tjava.lang.String fieldsetInvisible();\n\t// Access method.\n\tjava.lang.String fieldsetVisible();\n\t// Access method.\n\tjava.lang.String image();\n\t// Access method.\n\tjava.lang.String legend();\n}", "des": "The context menu CSS classes."}
{"index": 8486, "code": "Interface I_CmsLayoutBundle.I_CmsGalleryFieldBaseCss {\n\t// Access method.\n\tjava.lang.String fieldBox();\n\t// Access method.\n\tjava.lang.String galleryField();\n\t// Access method.\n\tjava.lang.String imagePreview();\n\t// Access method.\n\tjava.lang.String resourceInfo();\n}", "des": "The base gallery field CSS."}
{"index": 8487, "code": "Interface I_CmsLayoutBundle.I_CmsGlobalWidgetCss {\n\t// Css class reader.\n\tjava.lang.String selectBoxPopup();\n\t// Css class reader.\n\tjava.lang.String selectBoxSelected();\n\t// Css class reader.\n\tjava.lang.String textAreaBox();\n\t// Css class reader.\n\tjava.lang.String textAreaBoxPanel();\n}", "des": "The global widget CSS class."}
{"index": 8488, "code": "Interface I_CmsLayoutBundle.I_CmsGroupContainer {\n\t// Access method.\n\tjava.lang.String containerMarker();\n\t// Access method.\n\tjava.lang.String inputBox();\n\t// Access method.\n\tjava.lang.String inputLabel();\n\t// Access method.\n\tjava.lang.String inputRow();\n}", "des": "Group container editor CSS."}
{"index": 8489, "code": "Interface I_CmsLayoutBundle.I_CmsHeaderCss {\n\t// Access method.\n\tjava.lang.String h1();\n\t// Access method.\n\tjava.lang.String h2();\n\t// Access method.\n\tjava.lang.String h3();\n\t// Access method.\n\tjava.lang.String h4();\n\t// Access method.\n\tjava.lang.String h5();\n\t// Access method.\n\tjava.lang.String h6();\n}", "des": "Header CSS."}
{"index": 8490, "code": "Interface I_CmsLayoutBundle.I_CmsImageAdvancedFormCss {\n\t// Access method.\n\tjava.lang.String descriptionLabel();\n\t// Access method.\n\tjava.lang.String input();\n\t// Access method.\n\tjava.lang.String linkWidget();\n\t// Access method.\n\tjava.lang.String main();\n\t// Access method.\n\tjava.lang.String selectBox();\n}", "des": "The advanced image editor form CSS."}
{"index": 8491, "code": "Interface I_CmsLayoutBundle.I_CmsImageEditorFormCss {\n\t// Access method.\n\tjava.lang.String floatCheckbox();\n\t// Access method.\n\tjava.lang.String inlineLabel();\n\t// Access method.\n\tjava.lang.String inputTextSmall();\n\t// Access method.\n\tjava.lang.String label();\n\t// Access method.\n\tjava.lang.String selectBox();\n}", "des": "The image editor form CSS."}
{"index": 8492, "code": "Interface I_CmsLayoutBundle.I_CmsListAddCss {\n\t// Access method.\n\tjava.lang.String labelContainer();\n\t// Access method.\n\tjava.lang.String optionContainer();\n}", "des": "CSS for the list item creation dialog."}
{"index": 8493, "code": "Interface I_CmsLayoutBundle.I_CmsLocationPicker {\n\t// Access method.\n\tjava.lang.String buttonBar();\n\t// Access method.\n\tjava.lang.String fader();\n\t// Access method.\n\tjava.lang.String hasPreview();\n\t// Access method.\n\tjava.lang.String inlineField();\n\t// Access method.\n\tjava.lang.String inputContainer();\n\t// Access method.\n\tjava.lang.String mapCanvas();\n\t// Access method.\n\tjava.lang.String opener();\n}", "des": "Location picker CSS."}
{"index": 8494, "code": "Interface I_CmsLayoutBundle.I_CmsLocationPickerBase {\n\t// Access method.\n\tjava.lang.String displayBox();\n\t// Access method.\n\tjava.lang.String locationField();\n\t// Access method.\n\tjava.lang.String locationFields();\n\t// Access method.\n\tjava.lang.String locationInfo();\n\t// Access method.\n\tjava.lang.String locationMainPanel();\n\t// Access method.\n\tjava.lang.String mapPreview();\n}", "des": "Base location picker CSS."}
{"index": 8495, "code": "Interface I_CmsLayoutBundle.I_CmsMenuButton {\n\t// Access method.\n\tjava.lang.String button();\n\t// Access method.\n\tjava.lang.String menu();\n}", "des": "The menu button CSS."}
{"index": 8496, "code": "Interface I_CmsLayoutBundle.I_CmsOpenerHoverCss {\n\t// Css class reader.\n\tjava.lang.String openerHover();\n\t// Css class reader.\n\tjava.lang.String openerNoHover();\n}", "des": "The opener hover CSS class."}
{"index": 8497, "code": "Interface I_CmsLayoutBundle.I_CmsPopupCss {\n\t// Access method.\n\tjava.lang.String popup();\n\t// Access method.\n\tjava.lang.String popupContent();\n}", "des": "Basic popup CSS classes."}
{"index": 8498, "code": "Interface I_CmsLayoutBundle.I_CmsProgressBarCss {\n\t// Access method.\n\tjava.lang.String colorComplete();\n\t// Access method.\n\tjava.lang.String colorIncomplete();\n\t// Access method.\n\tjava.lang.String meterText();\n\t// Access method.\n\tjava.lang.String meterValue();\n\t// Access method.\n\tjava.lang.String meterWrap();\n}", "des": "The context menu CSS classes."}
{"index": 8499, "code": "Interface I_CmsLayoutBundle.I_CmsResourceStateCss {\n\t// Access method.\n\tjava.lang.String noState();\n\t// Access method.\n\tjava.lang.String stateChanged();\n\t// Access method.\n\tjava.lang.String stateDeleted();\n\t// Access method.\n\tjava.lang.String stateNew();\n}", "des": "The context menu CSS classes."}
{"index": 8500, "code": "Interface I_CmsLayoutBundle.I_CmsScrollBarCss {\n\t// Access method.\n\tjava.lang.String scrollBar();\n\t// Access method.\n\tjava.lang.String scrollbarLayer();\n\t// Access method.\n\tjava.lang.String scrollKnob();\n}", "des": "The scroll bar CSS classes."}
{"index": 8501, "code": "Interface I_CmsLayoutBundle.I_CmsScrollPanel {\n\t// Access method.\n\tjava.lang.String allwaysShowBars();\n\t// Access method.\n\tjava.lang.String hiddenSize();\n\t// Access method.\n\tjava.lang.String scrollable();\n\t// Access method.\n\tjava.lang.String scrollContainer();\n\t// Access method.\n\tjava.lang.String scrollPanel();\n\t// Access method.\n\tjava.lang.String showBars();\n}", "des": "The scroll bar CSS classes."}
{"index": 8502, "code": "Interface I_CmsLayoutBundle.I_CmsSelectArea {\n\t// Access method.\n\tjava.lang.String main();\n\t// Access method.\n\tjava.lang.String marker();\n\t// Access method.\n\tjava.lang.String markerBlackBorder();\n\t// Access method.\n\tjava.lang.String markerBorder();\n\t// Access method.\n\tjava.lang.String markerWhiteBorder();\n\t// Access method.\n\tjava.lang.String overlay();\n\t// Access method.\n\tjava.lang.String showSelect();\n}", "des": "The select area CSS."}
{"index": 8503, "code": "Interface I_CmsLayoutBundle.I_CmsSingleLineItem {\n\t// Access method.\n\tjava.lang.String itemFace();\n\t// Access method.\n\tjava.lang.String singleLineItem();\n}", "des": "The single line list item CSS."}
{"index": 8504, "code": "Interface I_CmsLayoutBundle.I_CmsStateCss {\n\t// Access method.\n\tjava.lang.String cmsHovering();\n\t// Access method.\n\tjava.lang.String cmsState();\n\t// Access method.\n\tjava.lang.String cmsStateDown();\n\t// Access method.\n\tjava.lang.String cmsStateDownDisabled();\n\t// Access method.\n\tjava.lang.String cmsStateDownHovering();\n\t// Access method.\n\tjava.lang.String cmsStateup();\n\t// Access method.\n\tjava.lang.String cmsStateUpDisabled();\n\t// Access method.\n\tjava.lang.String cmsStateUpHovering();\n}", "des": "General CSS."}
{"index": 8505, "code": "Interface I_CmsLayoutBundle.I_CmsXmlEditorCss {\n\t// Access method.\n\tjava.lang.String basePanel();\n\t// Access method.\n\tjava.lang.String inlineEditable();\n\t// Access method.\n\tjava.lang.String integratedEditor();\n\t// Access method.\n\tjava.lang.String standAloneEditor();\n}", "des": "The XML content editor CSS."}
{"index": 8506, "code": "Interface I_CmsListItem {\n\t// Adds a widget to this list item.\n\tvoid add​(com.google.gwt.user.client.ui.Widget w);\n\t// Returns the logical id, it is not the HTML id.\n\tjava.lang.String getId();\n\t// Sets the logical id, it is not the HTML id.\n\tvoid setId​(java.lang.String id);\n}", "des": "Provides a UI list item."}
{"index": 8507, "code": "Interface I_CmsNestedDropTarget {\n\t// Returns the list of child drop targets.\n\tjava.util.List<I_CmsDropTarget> getDnDChildren();\n\t// Checks whether this drop target has any children.\n\tboolean hasDnDChildren();\n}", "des": "Provides methods for nested drop targets."}
{"index": 8508, "code": "Interface I_CmsNotificationWidget {\n\t// Adds the given notification message.\n\tvoid addMessage​(CmsNotificationMessage message);\n\t// Removes all messages.\n\tvoid clearMessages();\n\t// Removes the given notification message.\n\tvoid removeMessage​(CmsNotificationMessage message);\n}", "des": "Notification widget, most of the work is done on the container element."}
{"index": 8509, "code": "Interface I_CmsObservableSerialDateValue {\n\t// Register an observer.\n\tvoid registerValueChangeObserver​(I_CmsSerialDateValueChangeObserver obs);\n\t// Unregister an observer.\n\tvoid unregisterValueChangeObserver​(I_CmsSerialDateValueChangeObserver obs);\n}", "des": "Extension of I_CmsSerialDateValue that makes value changes observable."}
{"index": 8510, "code": "Interface I_CmsPropertiesCss {\n\t// Access method.\n\tjava.lang.String navModePropertiesBox();\n\t// Access method.\n\tjava.lang.String propertyDefinitionButton();\n\t// Access method.\n\tjava.lang.String propertyPanel();\n\t// Access method.\n\tjava.lang.String propertyParentLoading();\n\t// Access method.\n\tjava.lang.String vfsModeSimplePropertiesBox();\n}", "des": "Property editor CSS."}
{"index": 8511, "code": "Interface I_CmsPropertiesHandler {\n\t// Saves the properties.\n\tvoid saveProperties​(java.util.Map<java.lang.String,​java.lang.String> properties, com.google.gwt.user.client.Command afterSaveCommand);\n\t// Selects the current resource and sets its path into the xml-content field or editor link, depending on the gallery mode.\n\tvoid selectResource();\n}", "des": "The properties tab handler of the preview dialog."}
{"index": 8512, "code": "Interface I_CmsPublishLayoutBundle {\n\t// The accessor for the CSS constants bundle.\n\tI_CmsConstantsBundle constants();\n\t// The accessor for the CSS bundle.\n\tI_CmsPublishCss publishCss();\n}", "des": "The layout bundle used for the publish module."}
{"index": 8513, "code": "Interface I_CmsSitemapLayoutBundle {\n\t// Access method.\n\tI_CmsSitemapLayoutBundle.I_CmsClipboardCss clipboardCss();\n\t// Access method.\n\tI_CmsImageBundle images();\n\t// Access method.\n\tI_CmsSitemapLayoutBundle.I_CmsSitemapCss sitemapCss();\n\t// Access method.\n\tI_CmsSitemapItemCss sitemapItemCss();\n}", "des": "Resource bundle to access CSS and image resources."}
{"index": 8514, "code": "Interface I_CmsSitemapLayoutBundle.I_CmsClipboardCss {\n\t// Access method.\n\tjava.lang.String clipboardList();\n\t// Access method.\n\tjava.lang.String listClearButton();\n\t// Access method.\n\tjava.lang.String menuTabContainer();\n}", "des": "Clipboard CSS."}
{"index": 8515, "code": "Interface I_CmsSitemapLayoutBundle.I_CmsSitemapCss {\n\t// Access method.\n\tjava.lang.String headerContainer();\n\t// Access method.\n\tjava.lang.String headerContainerVaadinMode();\n\t// Access method.\n\tjava.lang.String hiddenHeader();\n\t// Access method.\n\tjava.lang.String page();\n\t// Access method.\n\tjava.lang.String pageCenter();\n\t// Access method.\n\tjava.lang.String root();\n}", "des": "Root CSS."}
{"index": 8516, "code": "Interface I_CmsStringModel {\n\t// Returns the model id.\n\tjava.lang.String getId();\n\t// Returns the model value.\n\tjava.lang.String getValue();\n\t// Sets the model value.\n\tvoid setValue​(java.lang.String value, boolean notify);\n}", "des": "The interface for a string model."}
{"index": 8517, "code": "Interface I_CmsToolbarActivatable {\n\t// Execute on activation.\n\tvoid onActivation​(com.google.gwt.user.client.ui.Widget widget);\n\t// Sets whether this button is enabled.\n\tvoid setEnabled​(boolean enabled);\n}", "des": "Interface for activatable toolbar widgets."}
{"index": 8518, "code": "Interface I_CmsToolbarButtonLayoutBundle {\n\t// The CSS constants bundle.\n\tI_CmsConstantsBundle constants();\n\t// Access method.\n\tI_CmsToolbarButtonLayoutBundle.I_CmsToolbarButtonCss toolbarButtonCss();\n}", "des": "Resource bundle to access CSS and image resources for tool-bar buttons."}
{"index": 8519, "code": "Interface I_CmsToolbarButtonLayoutBundle.I_CmsToolbarButtonCss {\n\t// Access method.\n\tjava.lang.String editButtonsInvisible();\n\t// Access method.\n\tjava.lang.String editButtonsVisible();\n\t// Access method.\n\tjava.lang.String elementInfoChanged();\n\t// Access method.\n\tjava.lang.String elementInfoUnchanged();\n}", "des": "The button CSS."}
{"index": 8520, "code": "Interface I_CmsToolbarHandler {\n\t// Activates the selection button.\n\tvoid activateSelection();\n\t// De-activates the current button.\n\tvoid deactivateCurrentButton();\n\t// Returns the currently active button (may be null).\n\tI_CmsToolbarButton getActiveButton();\n\t// Loads the context menu.\n\tvoid loadContextMenu​(org.opencms.util.CmsUUID structureId, org.opencms.gwt.shared.CmsCoreData.AdeContext context);\n\t// Sets the active button.\n\tvoid setActiveButton​(I_CmsToolbarButton button);\n}", "des": "An abstract interface used to coordinate toolbar buttons with a toolbar."}
{"index": 8521, "code": "Interface I_CmsTransform {\n\t// Applies the inverse of the transformation to a point.\n\torg.opencms.ade.galleries.shared.CmsPoint transformBack​(org.opencms.ade.galleries.shared.CmsPoint point);\n\t// Applies the transformation to a point.\n\torg.opencms.ade.galleries.shared.CmsPoint transformForward​(org.opencms.ade.galleries.shared.CmsPoint point);\n}", "des": "Interface for (invertible) coordinate system transformations."}
{"index": 8522, "code": "Interface I_CmsUploadButton {\n\t// Creates and adds a file input.\n\tCmsFileInput createFileInput();\n\t// Gets the upload button handler instance for this button.\n\tI_CmsUploadButtonHandler getButtonHandler();\n\t// Reinitializes the button with a new button handler.\n\tvoid reinitButton​(I_CmsUploadButtonHandler buttonHandler);\n\t// Enables / disables the button.\n\tvoid setEnabled​(boolean enabled, java.lang.String disabledMessage);\n}", "des": "The upload button interface."}
{"index": 8523, "code": "Interface I_CmsUploadButtonHandler {\n\t// Custom setup method for newly created file inputs.\n\tvoid initializeFileInput​(CmsFileInput fileInput);\n\t// Notifies the button handler that the file input field's value has changed.\n\tvoid onChange​(CmsFileInput fileInput);\n\t// This method should be called when the handler is set on a button.\n\tvoid setButton​(I_CmsUploadButton button);\n}", "des": "Handler interface for upload buttons which is mainly used to perform actions when the selected file in a file input has been changed."}
{"index": 8524, "code": "Interface I_CmsUploadDialog {\n\t// Parses the upload response.\n\tvoid parseResponse​(java.lang.String response);\n\t// Displays an error dialog.\n\tvoid showErrorReport​(java.lang.String message, java.lang.String stacktrace);\n}", "des": "Common upload dialog interface to be used with the I_CmsUploader."}
{"index": 8525, "code": "Interface I_CmsValidationController {\n\t// Reports the result of a synchronous validation.\n\tvoid provideValidationResult​(java.lang.String field, org.opencms.gwt.shared.CmsValidationResult result);\n\t// Requests an server-side validation to be performed later.\n\tvoid validateAsync​(java.lang.String field, java.lang.String value, java.lang.String validator, java.lang.String config);\n}", "des": "This is the interface which an I_CmsValidator object uses to either synchronously report the result of a validation or to request an asynchronous validation from the server."}
{"index": 8526, "code": "Interface I_CmsValidationHandler {\n\t// This method is called when the validation has been completed.\n\tvoid onValidationFinished​(boolean ok);\n\t// This method is called when a single field has been validated.\n\tvoid onValidationResult​(java.lang.String fieldId, org.opencms.gwt.shared.CmsValidationResult result);\n}", "des": "This interface is used to receive notifications about the status of the validation."}
{"index": 8527, "code": "Interface I_CmsWidgetFactory {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n}", "des": "Generates an editing widget with the given configuration."}
{"index": 8528, "code": "Interface I_CmsWidgetsLayoutBundle {\n\t// Access method.\n\tI_CmsWidgetsLayoutBundle.I_CmsGalleryWidgetsCss galleryWidgetsCss();\n\t// Access method.\n\tI_CmsWidgetsLayoutBundle.I_CmsWidgetCss widgetCss();\n}", "des": "CSS resource bundle for the acacia editor widgets."}
{"index": 8529, "code": "Class ResizeObserver {\n\t// Disconnects the resize observer.\n\tvoid disconnect();\n\t// Starts observation for an element.\n\tvoid observe​(elemental2.dom.Element element);\n\t// Stops observation for an element.\n\tvoid unobserve​(elemental2.dom.Element element);\n}", "des": "JS interop class for native ResizeObserver."}
{"index": 8530, "code": "Class WidgetFactoryWrapper {\n\t// Creates the from editing widget.\n\tI_CmsFormEditWidget createFormWidget​(java.lang.String configuration);\n\t// Wraps an existing DOM element to create an inline editing widget.\n\tI_CmsEditWidget createInlineWidget​(java.lang.String configuration, com.google.gwt.dom.client.Element element);\n\t// Returns the widget name.\n\tjava.lang.String getName();\n}", "des": "A widget factory for native java script widgets."}
